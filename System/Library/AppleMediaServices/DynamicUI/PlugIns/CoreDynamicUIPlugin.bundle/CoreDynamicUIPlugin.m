uint64_t deviceIsRunningInternalBuild()
{
  return os_variant_has_internal_content("com.apple.AppleMediaServicesUIDynamic");
}

uint64_t deviceIsRunningSeedBuild()
{
  return 0LL;
}

__n128 sub_48DC(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for DynamicButtonViewLayout.Metrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_492C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_494C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0LL;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

uint64_t sub_498C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6A60(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_499C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6A60(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_49AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

void sub_49EC()
{
  uint64_t v2 = v1;
  v25 = v3;
  sub_5F6C((uint64_t *)&unk_7CAE0);
  sub_6D6C();
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  ((void (*)(void))__chkstk_darwin)();
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ActionFactory(0LL);
  uint64_t v26 = swift_allocObject(v10, 16LL, 7LL);
  v11 = (int *)type metadata accessor for AcknowledgePrivacyAction(0LL);
  v27[2] = v2;
  sub_4F04( 0x654D6E6F69746361LL,  0xED00007363697274LL,  (uint64_t)v11,  (uint64_t)sub_5FE4,  (uint64_t)v27,  (uint64_t)&unk_7CAE0,  (uint64_t)&type metadata accessor for ActionMetrics,  v12,  v23,  v24);
  if (v0)
  {
    swift_errorRelease(v0);
    uint64_t v13 = sub_6DEC((uint64_t)v5, 1LL);
    static ActionMetrics.notInstrumented.getter(v13);
    sub_60C8((uint64_t)v5, (uint64_t *)&unk_7CAE0);
    v14 = *(uint64_t (**)(void))(v7 + 32);
  }

  else
  {
    sub_6DEC((uint64_t)v5, 0LL);
    v14 = *(uint64_t (**)(void))(v7 + 32);
    ((void (*)(char *, char *, uint64_t))v14)(v9, v5, v6);
  }

  uint64_t v23 = (uint64_t)v25 + v11[5];
  uint64_t v15 = v14();
  __chkstk_darwin(v15);
  sub_6CF8();
  sub_6D9C();
  sub_5060();
  v24 = (uint64_t (*)(void))v7;
  v16 = v25;
  sub_609C((uint64_t)&v29, (uint64_t)v25 + v11[7], (uint64_t *)&unk_7F900);
  __chkstk_darwin(v17);
  sub_6CF8();
  sub_6D9C();
  sub_5060();
  sub_609C((uint64_t)&v28, (uint64_t)v16 + v11[6], (uint64_t *)&unk_7F900);
  uint64_t v18 = sub_23DB8();
  uint64_t v20 = v19;
  uint64_t v21 = sub_6BC8();
  sub_6D14(v21);
  swift_release();
  uint64_t v22 = type metadata accessor for JSONContext(0LL);
  sub_6D28(v22);
  uint64_t *v16 = v18;
  v16[1] = v20;
  sub_6B3C();
}

uint64_t sub_4D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for JSONContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  type metadata accessor for JSONObject(0LL);
  __chkstk_darwin();
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  (*(void (**)(_BYTE *, uint64_t))(v12 + 16))(v11, a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  ActionMetrics.init(deserializing:using:)(v11, v9);
  uint64_t v13 = type metadata accessor for ActionMetrics(0LL);
  return sub_5FEC(a3, 0LL, 1LL, v13);
}

void sub_4E84( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_4EA8()
{
}

void sub_4ECC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_4EE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_4F04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v29 = v18;
  uint64_t v30 = v19;
  sub_5F6C(v18);
  sub_6D6C();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = *(void *)(sub_6BC8() - 8);
  __chkstk_darwin();
  uint64_t v23 = sub_6C38();
  if ((JSONObject.isNull.getter(v23) & 1) == 0)
  {
    sub_6DF8();
    uint64_t v24 = a10(0LL);
    if (sub_6028((uint64_t)v21, 1LL, v24) != 1)
    {
      sub_6C98(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32LL))(v30, v21, v24);
      goto LABEL_6;
    }

    sub_60C8((uint64_t)v21, v29);
  }

  sub_6BD0();
  sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
  uint64_t v26 = sub_6B54(v25);
  uint64_t v28 = sub_6DD8(v26, v27);
  sub_6B68((uint64_t)v28, enum case for JSONError.missingProperty(_:));
  swift_bridgeObjectRetain(v10);
  sub_6C90();
  sub_6C98(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
LABEL_6:
  sub_6CAC();
  sub_6B3C();
}

void sub_503C()
{
}

void sub_5060()
{
  void (*v4)(void *__return_ptr, uint64_t);
  void (*v5)(void *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(void *, uint64_t);
  void v14[5];
  sub_6B78();
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  uint64_t v13 = v3;
  uint64_t v5 = v4;
  sub_6D44();
  uint64_t v6 = *(void *)(sub_6BC8() - 8);
  __chkstk_darwin();
  sub_6B18();
  if ((sub_6C1C() & 1) != 0) {
    goto LABEL_5;
  }
  v5(v14, v0);
  if (!v14[3])
  {
    sub_60C8((uint64_t)v14, v11);
LABEL_5:
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v8 = sub_6B54(v7);
    uint64_t v10 = sub_6D7C(v8, v9);
    sub_6B68((uint64_t)v10, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6CA4();
    sub_6BA0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    goto LABEL_6;
  }

  sub_6BA0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v13(v14, v12);
LABEL_6:
  sub_6CD0();
  sub_6B3C();
}

void sub_5154( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_5178( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_519C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v31 = v20;
  v32 = v19;
  sub_5F6C(v19);
  sub_6D6C();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_6BC8();
  sub_6D8C();
  __chkstk_darwin(v24);
  uint64_t v25 = sub_6C38();
  if ((JSONObject.isNull.getter(v25) & 1) == 0)
  {
    sub_6DF8();
    uint64_t v26 = a10(0LL);
    if (sub_6028((uint64_t)v23, 1LL, v26) != 1)
    {
      sub_6C98(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      sub_6034((uint64_t)v23, v31, a10);
      goto LABEL_6;
    }

    sub_60C8((uint64_t)v23, v32);
  }

  sub_6BD0();
  sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
  uint64_t v28 = sub_6B54(v27);
  uint64_t v30 = sub_6DD8(v28, v29);
  sub_6B68((uint64_t)v30, enum case for JSONError.missingProperty(_:));
  swift_bridgeObjectRetain(v10);
  sub_6C90();
  sub_6C98(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
LABEL_6:
  sub_6CAC();
  sub_6B3C();
}

void sub_52C0()
{
}

void sub_52D4()
{
  if ((sub_6C1C() & 1) == 0)
  {
    sub_6C2C();
    if (v10[3] != 1LL)
    {
      sub_6B90();
      sub_6D5C();
      goto LABEL_6;
    }

    sub_60C8((uint64_t)v10, &qword_7CB38);
  }

  sub_6BD0();
  sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
  uint64_t v7 = sub_6B54(v6);
  v9 = sub_6C04(v7, v8);
  sub_6B68((uint64_t)v9, enum case for JSONError.missingProperty(_:));
  sub_6C24();
  sub_6CA4();
  sub_6B90();
LABEL_6:
  sub_6CD0();
  sub_6B3C();
}

void sub_53A0()
{
  uint64_t v11 = v5;
  sub_6BC8();
  sub_6BD8();
  __chkstk_darwin(v6);
  sub_6B18();
  if ((sub_6C1C() & 1) == 0)
  {
    sub_6C2C();
    if (v12[3] != 1LL)
    {
      sub_6B90();
      sub_609C((uint64_t)v12, v11, (uint64_t *)&unk_7CB20);
      goto LABEL_6;
    }

    sub_60C8((uint64_t)v12, &qword_7CB18);
  }

  sub_6BD0();
  sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
  uint64_t v8 = sub_6B54(v7);
  uint64_t v10 = sub_6C04(v8, v9);
  sub_6B68((uint64_t)v10, enum case for JSONError.missingProperty(_:));
  sub_6C24();
  sub_6CA4();
  sub_6B90();
LABEL_6:
  sub_6CD0();
  sub_6B3C();
}

void sub_547C()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_6BC8();
  sub_6BD8();
  __chkstk_darwin(v8);
  sub_6B18();
  if ((sub_6C1C() & 1) != 0) {
    goto LABEL_5;
  }
  sub_6D54();
  if (!*((void *)&v13 + 1))
  {
    sub_60C8((uint64_t)&v12, (uint64_t *)&unk_7CB20);
LABEL_5:
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    sub_6B54(v10);
    void *v11 = v5;
    v11[1] = v3;
    v11[2] = v1;
    sub_6B68((uint64_t)v11, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6CA4();
    sub_6B90();
    goto LABEL_6;
  }

  sub_6B90();
  __int128 v9 = v13;
  *(_OWORD *)uint64_t v7 = v12;
  *(_OWORD *)(v7 + 16) = v9;
  *(_OWORD *)(v7 + 32) = v14;
  *(void *)(v7 + 48) = v15;
LABEL_6:
  sub_6CD0();
  sub_6B3C();
}

void sub_5580()
{
  if ((sub_6C1C() & 1) != 0) {
    goto LABEL_5;
  }
  sub_6C2C();
  if (!v6[0])
  {
    sub_60C8((uint64_t)v6, (uint64_t *)&unk_7EF40);
LABEL_5:
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v3 = sub_6B54(v2);
    uint64_t v5 = sub_6D7C(v3, v4);
    sub_6B68((uint64_t)v5, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6CA4();
    sub_6BA0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    goto LABEL_6;
  }

  sub_6BA0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_6D5C();
LABEL_6:
  sub_6CD0();
  sub_6B3C();
}

void sub_565C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((sub_6C1C() & 1) != 0 || (sub_6C80(), !a10))
  {
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v12 = sub_6B54(v11);
    __int128 v14 = sub_6C04(v12, v13);
    sub_6B68((uint64_t)v14, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BAC();
  }

  else
  {
    sub_6BAC();
  }

  sub_6CAC();
  sub_6B3C();
}

void sub_5724()
{
  if ((sub_6C1C() & 1) != 0 || (sub_6D54(), (v5 & 1) != 0))
  {
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v2 = sub_6B54(v1);
    uint64_t v4 = sub_6C04(v2, v3);
    sub_6B68((uint64_t)v4, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BAC();
  }

  else
  {
    sub_6BAC();
  }

  sub_6CAC();
}

void sub_5810()
{
  uint64_t v11 = v5;
  sub_6BC8();
  sub_6BD8();
  __chkstk_darwin(v6);
  sub_6B18();
  if ((sub_6C1C() & 1) == 0)
  {
    sub_6C2C();
    if (v12[1] != 1LL)
    {
      sub_6B90();
      sub_6060(v12, v11);
      goto LABEL_6;
    }

    sub_60C8((uint64_t)v12, &qword_7CB30);
  }

  sub_6BD0();
  sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
  uint64_t v8 = sub_6B54(v7);
  uint64_t v10 = sub_6C04(v8, v9);
  sub_6B68((uint64_t)v10, enum case for JSONError.missingProperty(_:));
  sub_6C24();
  sub_6CA4();
  sub_6B90();
LABEL_6:
  sub_6CD0();
  sub_6B3C();
}

void sub_58E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_58F8()
{
  uint64_t v7 = v1;
  sub_6BC8();
  sub_6D8C();
  __chkstk_darwin(v2);
  sub_6B18();
  if ((sub_6C1C() & 1) != 0 || (sub_6C2C(), *((void *)&v8 + 1) == 2LL))
  {
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v4 = sub_6B54(v3);
    uint64_t v6 = sub_6D7C(v4, v5);
    sub_6B68((uint64_t)v6, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  }

  else
  {
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    *uint64_t v7 = v8;
    v7[1] = v9;
    v7[2] = v10;
  }

  sub_6CAC();
  sub_6B3C();
}

void sub_59D8()
{
}

void sub_59FC()
{
}

void sub_5A20()
{
  __int128 v14 = v1;
  uint64_t v15 = v0;
  sub_6BE8(v2, v3, v4, v5, v6);
  uint64_t v13 = v7;
  sub_6BC8();
  sub_6BD8();
  __chkstk_darwin(v8);
  sub_6B18();
  if ((sub_6C1C() & 1) == 0)
  {
    sub_6C2C();
    if (v16[1] != 2LL)
    {
      sub_6B90();
      sub_609C((uint64_t)v16, v13, v15);
      goto LABEL_6;
    }

    sub_60C8((uint64_t)v16, v14);
  }

  sub_6BD0();
  sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
  uint64_t v10 = sub_6B54(v9);
  uint64_t v12 = sub_6C04(v10, v11);
  sub_6B68((uint64_t)v12, enum case for JSONError.missingProperty(_:));
  sub_6C24();
  sub_6CA4();
  sub_6B90();
LABEL_6:
  sub_6CD0();
  sub_6B3C();
}

void sub_5AF8()
{
}

void sub_5B1C()
{
  if ((sub_6C1C() & 1) != 0 || (sub_6C80(), (v5 & 1) != 0))
  {
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v2 = sub_6B54(v1);
    uint64_t v4 = sub_6C04(v2, v3);
    sub_6B68((uint64_t)v4, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BAC();
  }

  else
  {
    sub_6BAC();
  }

  sub_6CAC();
}

void sub_5C00()
{
  uint64_t v15 = v7;
  sub_6BC8();
  sub_6E04();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_6C5C();
  if ((JSONObject.isNull.getter(v9) & 1) == 0)
  {
    sub_6D54();
    if (v16[56] != 1LL)
    {
      sub_6C14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      memcpy(v15, v16, 0x270uLL);
      goto LABEL_6;
    }

    sub_60C8((uint64_t)v16, &qword_7CB58);
  }

  sub_6BD0();
  sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
  uint64_t v11 = sub_6B54(v10);
  uint64_t v13 = sub_6DC4(v11, v12);
  sub_6B68((uint64_t)v13, enum case for JSONError.missingProperty(_:));
  uint64_t v14 = swift_bridgeObjectRetain(v0);
  swift_willThrow(v14);
  sub_6C14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
LABEL_6:
  sub_6B3C();
}

void sub_5D04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if ((sub_6C1C() & 1) != 0 || (sub_6C80(), a10 == 1))
  {
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v12 = sub_6B54(v11);
    uint64_t v14 = sub_6C04(v12, v13);
    sub_6B68((uint64_t)v14, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BAC();
  }

  else
  {
    sub_6BAC();
  }

  sub_6CAC();
  sub_6B3C();
}

void sub_5DD0()
{
  __dst = v7;
  sub_6BC8();
  sub_6E04();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_6C5C();
  if ((JSONObject.isNull.getter(v9) & 1) != 0) {
    goto LABEL_5;
  }
  sub_6D54();
  if (!v16[2])
  {
    sub_60C8((uint64_t)v16, &qword_7CB68);
LABEL_5:
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v11 = sub_6B54(v10);
    uint64_t v13 = sub_6DC4(v11, v12);
    sub_6B68((uint64_t)v13, enum case for JSONError.missingProperty(_:));
    uint64_t v14 = swift_bridgeObjectRetain(v0);
    swift_willThrow(v14);
    sub_6C14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    goto LABEL_6;
  }

  sub_6C14(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  memcpy(__dst, v16, 0x2C2uLL);
LABEL_6:
  sub_6B3C();
}

void sub_5ED0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void *sub_5EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return (*(void *(**)(void *__return_ptr, uint64_t, uint64_t))(*(void *)a2 + 88LL))(a4, a1, a3);
}

void sub_5F54()
{
}

uint64_t sub_5F6C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

uint64_t type metadata accessor for AcknowledgePrivacyAction(uint64_t a1)
{
  uint64_t result = qword_7CC30;
  if (!qword_7CC30) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AcknowledgePrivacyAction);
  }
  return result;
}

uint64_t sub_5FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_4D64(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_5FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

void *sub_5FF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_5EF4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_6010(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_6028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

void sub_6034(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3(0LL);
  sub_6CB8(v3);
  sub_6D3C();
}

void *sub_6060(const void *a1, void *a2)
{
  return a2;
}

void sub_609C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_5F6C(a3);
  sub_6CB8(v3);
  sub_6D3C();
}

void sub_60C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_5F6C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  sub_6D3C();
}

uint64_t *sub_6100(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v18);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionMetrics(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
    if (v16)
    {
      uint64_t v17 = *((void *)v15 + 4);
      *((void *)v14 + 3) = v16;
      *((void *)v14 + 4) = v17;
      (**(void (***)(void))(v16 - 8))();
    }

    else
    {
      __int128 v19 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v19;
      *((void *)v14 + 4) = *((void *)v15 + 4);
    }

    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 24);
    if (v23)
    {
      uint64_t v24 = *((void *)v22 + 4);
      *((void *)v21 + 3) = v23;
      *((void *)v21 + 4) = v24;
      (**(void (***)(void))(v23 - 8))();
    }

    else
    {
      __int128 v25 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((void *)v21 + 4) = *((void *)v22 + 4);
    }
  }

  return v4;
}

void *sub_6224(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  uint64_t v6 = (void *)(a1 + a2[6]);
  if (v6[3]) {
    sub_62AC(v6);
  }
  uint64_t result = (void *)(a1 + a2[7]);
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_62AC(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *sub_62CC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *((void *)v14 + 4);
    *((void *)v13 + 3) = v15;
    *((void *)v13 + 4) = v16;
    (**(void (***)(void))(v15 - 8))();
  }

  else
  {
    __int128 v17 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v17;
    *((void *)v13 + 4) = *((void *)v14 + 4);
  }

  uint64_t v18 = a3[7];
  __int128 v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)((char *)a2 + v18 + 24);
  if (v21)
  {
    uint64_t v22 = *((void *)v20 + 4);
    *((void *)v19 + 3) = v21;
    *((void *)v19 + 4) = v22;
    (**(void (***)(void))(v21 - 8))();
  }

  else
  {
    __int128 v23 = *((_OWORD *)v20 + 1);
    *(_OWORD *)__int128 v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v23;
    *((void *)v19 + 4) = *((void *)v20 + 4);
  }

  return a1;
}

void *sub_63C4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
  if (*(void *)((char *)a1 + v12 + 24))
  {
    if (v15)
    {
      sub_6520(v13, v14);
      goto LABEL_8;
    }

    sub_62AC(v13);
  }

  else if (v15)
  {
    *((void *)v13 + 3) = v15;
    *((void *)v13 + 4) = *((void *)v14 + 4);
    (**(void (***)(char *, char *))(v15 - 8))(v13, v14);
    goto LABEL_8;
  }

  __int128 v16 = *(_OWORD *)v14;
  __int128 v17 = *((_OWORD *)v14 + 1);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *(_OWORD *)uint64_t v13 = v16;
  *((_OWORD *)v13 + 1) = v17;
LABEL_8:
  uint64_t v18 = a3[7];
  __int128 v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *((void *)v20 + 3);
  if (!*(void *)((char *)a1 + v18 + 24))
  {
    if (v21)
    {
      *((void *)v19 + 3) = v21;
      *((void *)v19 + 4) = *((void *)v20 + 4);
      (**(void (***)(char *, char *))(v21 - 8))(v19, v20);
      return a1;
    }

LABEL_14:
    __int128 v22 = *(_OWORD *)v20;
    __int128 v23 = *((_OWORD *)v20 + 1);
    *((void *)v19 + 4) = *((void *)v20 + 4);
    *(_OWORD *)__int128 v19 = v22;
    *((_OWORD *)v19 + 1) = v23;
    return a1;
  }

  if (!v21)
  {
    sub_62AC(v19);
    goto LABEL_14;
  }

  sub_6520(v19, v20);
  return a1;
}

    __int128 v17 = *v15;
    uint64_t v18 = v15[1];
    *(void *)(v14 + 32) = *((void *)v15 + 4);
    *(_OWORD *)uint64_t v14 = v17;
    *(_OWORD *)(v14 + 16) = v18;
    return a1;
  }

  if (!v16)
  {
    sub_62AC((void *)v14);
    goto LABEL_14;
  }

  sub_6520((void *)v14, v15);
  return a1;
}

    uint64_t v26 = *(_OWORD *)v24;
    uint64_t v27 = *((_OWORD *)v24 + 1);
    *((void *)v23 + 4) = *((void *)v24 + 4);
    *(_OWORD *)__int128 v23 = v26;
    *((_OWORD *)v23 + 1) = v27;
    goto LABEL_15;
  }

  if (!v25)
  {
    sub_62AC(v23);
    goto LABEL_14;
  }

  sub_6520(v23, v24);
LABEL_15:
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  return a1;
}

    __int128 v17 = *v15;
    uint64_t v18 = v15[1];
    *(void *)(v14 + 32) = *((void *)v15 + 4);
    *(_OWORD *)uint64_t v14 = v17;
    *(_OWORD *)(v14 + 16) = v18;
    return a1;
  }

  if (!v16)
  {
    sub_62AC((void *)v14);
    goto LABEL_14;
  }

  sub_6520((void *)v14, v15);
  return a1;
}

    uint64_t v21 = *v19;
    __int128 v22 = v19[1];
    *(void *)(v18 + 32) = *((void *)v19 + 4);
    *(_OWORD *)uint64_t v18 = v21;
    *(_OWORD *)(v18 + 16) = v22;
    return a1;
  }

  if (!v20)
  {
    sub_62AC((void *)v18);
    goto LABEL_14;
  }

  sub_6520((void *)v18, v19);
  return a1;
}

    uint64_t v21 = *v19;
    __int128 v22 = v19[1];
    *(void *)(v18 + 32) = *((void *)v19 + 4);
    *(_OWORD *)uint64_t v18 = v21;
    *(_OWORD *)(v18 + 16) = v22;
    return a1;
  }

  if (!v20)
  {
    sub_62AC((void *)v18);
    goto LABEL_14;
  }

  sub_6520((void *)v18, v19);
  return a1;
}

    __int128 v23 = *v21;
    uint64_t v24 = v21[1];
    *(void *)(v20 + 32) = *((void *)v21 + 4);
    *(_OWORD *)uint64_t v20 = v23;
    *(_OWORD *)(v20 + 16) = v24;
    return a1;
  }

  if (!v22)
  {
    sub_62AC((void *)v20);
    goto LABEL_14;
  }

  sub_6520((void *)v20, v21);
  return a1;
}

    uint64_t v21 = *(_OWORD *)(a2 + 80);
    __int128 v22 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v21;
    *(_OWORD *)(a1 + 96) = v22;
    goto LABEL_15;
  }

  if (!v20)
  {
    sub_62AC((void *)(a1 + 80));
    goto LABEL_14;
  }

  sub_6520((void *)(a1 + 80), (void *)(a2 + 80));
LABEL_15:
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  __int128 v23 = *(void *)(a2 + 136);
  *(void *)(a1 + 136) = v23;
  swift_bridgeObjectRetain(v23);
  sub_23920();
  sub_19098();
}

    (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v48);
    return 0LL;
  }

  if (!(_BYTE)v53) {
    goto LABEL_14;
  }
  v42 = 0;
LABEL_16:
  LOBYTE(v53) = v42;
  v51 = &type metadata for CellState;
  v52 = sub_442D0();
  LOBYTE(v49) = v42;
  AnyStateStore.updateState(at:to:)(v39, &v49, v40);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v48);
  sub_62AC(&v49);
  return 1LL;
}

void *sub_6520(void *result, void *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        uint64_t result = (void *)swift_release(v11);
        *uint64_t v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

_OWORD *sub_6688(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  __int128 v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((void *)v12 + 4) = *((void *)v13 + 4);
  uint64_t v15 = (char *)a1 + v11;
  __int128 v16 = (char *)a2 + v11;
  __int128 v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((void *)v15 + 4) = *((void *)v16 + 4);
  return a1;
}

void *sub_6728(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  __int128 v14 = (char *)a2 + v12;
  __int128 v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  uint64_t v16 = a3[7];
  __int128 v17 = (char *)a1 + v16;
  __int128 v18 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)__int128 v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v18;
  *((void *)v17 + 4) = *(void *)((char *)a2 + v16 + 32);
  return a1;
}

uint64_t sub_67F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_6800);
}

uint64_t sub_6800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for ActionMetrics(0LL);
    return sub_6028(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

  ;
}

uint64_t sub_6874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_6880);
}

uint64_t sub_6880(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
    return sub_5FEC(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }

  return result;
}

uint64_t sub_68EC(uint64_t a1)
{
  v4[0] = &unk_5CD00;
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    v4[2] = &unk_5CD18;
    v4[3] = &unk_5CD18;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

__n128 initializeWithTake for ShelfPageError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_6978(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_6998(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0LL;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_69E8(uint64_t a1)
{
  *(void *)(a1 + 8) = v2;
}

void sub_6A24(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = a2(255LL);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  sub_6D3C();
}

uint64_t sub_6A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C((uint64_t *)&unk_7F900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void type metadata accessor for AMSPurchaseType(uint64_t a1)
{
}

void sub_6ABC(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, a3);
    if (!v5) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }

uint64_t sub_6B18()
{
  return JSONObject.subscript.getter(v1, v0);
}

  ;
}

uint64_t sub_6B54(uint64_t a1)
{
  return swift_allocError(v1, a1, 0LL, 0LL);
}

uint64_t sub_6B68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 104LL))(a1, a2, v2);
}

  ;
}

uint64_t sub_6B90()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_6BA0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_6BAC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_6BBC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_6BC8()
{
  return type metadata accessor for JSONObject(0LL);
}

uint64_t sub_6BD0()
{
  return type metadata accessor for JSONError(0LL);
}

  ;
}

void sub_6BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 - 72) = a5;
}

void *sub_6C04(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = v4;
  return result;
}

uint64_t sub_6C14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_6C1C()
{
  return JSONObject.isNull.getter();
}

uint64_t sub_6C24()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_6C2C()
{
  return v1(v0);
}

uint64_t sub_6C38()
{
  return JSONObject.subscript.getter(v1, v0);
}

uint64_t sub_6C5C()
{
  return JSONObject.subscript.getter(v1, v0);
}

uint64_t sub_6C80()
{
  return (*(uint64_t (**)(uint64_t))(v1 - 88))(v0);
}

uint64_t sub_6C90()
{
  return swift_willThrow();
}

uint64_t sub_6C98@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_6CA4()
{
  return swift_willThrow();
}

  ;
}

uint64_t sub_6CB8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32LL))(v1, v2, a1);
}

  ;
}

void sub_6CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 - 72) = a7;
  *(void *)(v7 - 96) = a5;
  *(void *)(v7 - 88) = a4;
}

  ;
}

uint64_t sub_6D14(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

uint64_t sub_6D28(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 - 8) + 8LL))(*(void *)(v1 - 72), a1);
}

  ;
}

  ;
}

uint64_t sub_6D54()
{
  return (*(uint64_t (**)(void))(v0 - 72))();
}

void *sub_6D5C()
{
  return memcpy(*(void **)(v0 - 176), (const void *)(v0 - 168), 0x58uLL);
}

  ;
}

void *sub_6D7C(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = v4;
  a2[1] = v2;
  a2[2] = v3;
  return result;
}

  ;
}

  ;
}

void sub_6DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 72) = a4;
}

void *sub_6DC4(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = v4;
  return result;
}

void *sub_6DD8(uint64_t a1, void *a2)
{
  __n128 result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = v4;
  return result;
}

uint64_t sub_6DEC(uint64_t a1, uint64_t a2)
{
  return sub_5FEC(a1, a2, 1LL, v2);
}

uint64_t sub_6DF8()
{
  return (*(uint64_t (**)(uint64_t))(v1 - 88))(v0);
}

  ;
}

uint64_t sub_6E18(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v7 = sub_7A58();
  BaseObjectGraph.optional<A>(_:)(&aBlock, v7, v7);
  uint64_t v8 = (void *)aBlock;
  uint64_t v9 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v10 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v11 = swift_allocObject( v9,  ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
        + 3LL * *(void *)(v10 + 72),
          *(unsigned __int8 *)(v10 + 80) | 7LL);
  *(_OWORD *)(v11 + 16) = xmmword_5CD70;
  v45 = (void *)type metadata accessor for AcknowledgePrivacyActionImplementation();
  uint64_t v41 = v2;
  uint64_t aBlock = v2;
  uint64_t v12 = swift_retain(v2);
  id v13 = (id)AMSLogKey(v12);
  if (v13)
  {
    __int128 v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    sub_7C2C();
    sub_7C08();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_7BF4(MetatypeMetadata);
    sub_7C3C();
    v19._countAndFlagsBits = 5972026LL;
    v19._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    v48[3] = &type metadata for String;
    v48[0] = v15;
    v48[1] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v48);
    sub_7C3C();
    uint64_t v20 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    sub_7C2C();
    sub_7C08();
    uint64_t v21 = swift_getMetatypeMetadata();
    sub_7BF4(v21);
    sub_7C3C();
    uint64_t v20 = 58LL;
  }

  unint64_t v22 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v20);
  LogMessage.init(stringInterpolation:)(v6);
  type metadata accessor for Log();
  sub_62AC(&aBlock);
  uint64_t aBlock = 0LL;
  unint64_t v43 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(41LL);
  swift_bridgeObjectRelease(v43);
  uint64_t aBlock = 0xD000000000000027LL;
  unint64_t v43 = 0x80000000000630A0LL;
  uint64_t v24 = *a1;
  __int128 v23 = (void *)a1[1];
  swift_bridgeObjectRetain(v23);
  v25._countAndFlagsBits = v24;
  v25._object = v23;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v23);
  sub_7BE0(aBlock);
  sub_7AB8((uint64_t)&aBlock);
  uint64_t aBlock = 0x3A746E756F636361LL;
  unint64_t v43 = 0xE900000000000020LL;
  v48[0] = v8;
  id v26 = v8;
  uint64_t v27 = sub_5F6C(&qword_7CE18);
  v28._countAndFlagsBits = String.init<A>(describing:)(v48, v27);
  object = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(object);
  sub_7BE0(aBlock);
  sub_7AB8((uint64_t)&aBlock);
  sub_2679C(v11);
  swift_bridgeObjectRelease(v11);
  id v30 = objc_allocWithZone(&OBJC_CLASS___AMSAcknowledgePrivacyTask);
  id v31 = v26;
  swift_bridgeObjectRetain(v23);
  id v32 = sub_7AF8(v24, (uint64_t)v23, v8);
  id v33 = [v32 acknowledgePrivacy];

  sub_5F6C(&qword_7CE20);
  uint64_t v34 = Promise.__allocating_init()();
  uint64_t v35 = swift_allocObject(&unk_720A8, 32LL, 7LL);
  uint64_t v36 = v41;
  *(void *)(v35 + 16) = v41;
  *(void *)(v35 + 24) = v34;
  v46 = sub_7B84;
  uint64_t v47 = v35;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v43 = 1107296256LL;
  v44 = sub_15824;
  v45 = &unk_720C0;
  v37 = _Block_copy(&aBlock);
  swift_retain(v36);
  swift_retain(v34);
  swift_release();
  [v33 addFinishBlock:v37];
  _Block_release(v37);
  v45 = (void *)type metadata accessor for SyncTaskScheduler(0LL);
  v46 = (void (*)(char, uint64_t))&protocol witness table for SyncTaskScheduler;
  sub_7BA4(&aBlock);
  SyncTaskScheduler.init()();
  uint64_t v38 = Promise.map<A>(on:_:)(&aBlock, sub_79AC, 0LL, &type metadata for ResultingActionOutcome);

  swift_release();
  sub_62AC(&aBlock);
  return v38;
}

void sub_723C(char a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v83 = a4;
  uint64_t v84 = a2;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v10 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v85 = v11;
  uint64_t v81 = v12 | 7;
  uint64_t v82 = v9;
  uint64_t v79 = v13 + 2 * v11;
  uint64_t v14 = swift_allocObject(v9, v79, v12 | 7);
  __int128 v80 = xmmword_5CD80;
  *(_OWORD *)(v14 + 16) = xmmword_5CD80;
  v77[1] = v13;
  v78 = (void *)type metadata accessor for AcknowledgePrivacyActionImplementation();
  v91 = v78;
  unint64_t v89 = a3;
  uint64_t v15 = swift_retain(a3);
  id v16 = (id)AMSLogKey(v15);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v21._countAndFlagsBits = 0LL;
    v21._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    unint64_t v22 = v91;
    __int128 v23 = sub_7A94(&v89, (uint64_t)v91);
    uint64_t DynamicType = swift_getDynamicType(v23, v22, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v86 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
    sub_7AB8((uint64_t)&v86);
    v25._countAndFlagsBits = 5972026LL;
    v25._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v86 = v18;
    uint64_t v87 = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
    sub_7AB8((uint64_t)&v86);
    uint64_t v26 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v27._countAndFlagsBits = 0LL;
    v27._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    Swift::String v28 = v91;
    uint64_t v29 = sub_7A94(&v89, (uint64_t)v91);
    uint64_t v30 = swift_getDynamicType(v29, v28, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v86 = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
    sub_7AB8((uint64_t)&v86);
    uint64_t v26 = 58LL;
  }

  unint64_t v31 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v26);
  LogMessage.init(stringInterpolation:)(v8);
  sub_62AC(&v89);
  unint64_t v89 = 0LL;
  unint64_t v90 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(26LL);
  swift_bridgeObjectRelease(v90);
  unint64_t v89 = 0xD000000000000018LL;
  unint64_t v90 = 0x80000000000630F0LL;
  if ((a1 & 1) != 0) {
    uint64_t v32 = 1702195828LL;
  }
  else {
    uint64_t v32 = 0x65736C6166LL;
  }
  if ((a1 & 1) != 0) {
    id v33 = (void *)0xE400000000000000LL;
  }
  else {
    id v33 = (void *)0xE500000000000000LL;
  }
  type metadata accessor for Log();
  v34._countAndFlagsBits = v32;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v33);
  v91 = &type metadata for String;
  static LogMessage.safe(_:)(&v89);
  sub_7AB8((uint64_t)&v89);
  sub_2679C(v14);
  swift_bridgeObjectRelease(v14);
  uint64_t v35 = v84;
  if (v84)
  {
    uint64_t v36 = swift_allocObject(v82, v79, v81);
    *(_OWORD *)(v36 + 16) = v80;
    v91 = v78;
    unint64_t v89 = a3;
    swift_retain(a3);
    uint64_t v37 = swift_errorRetain(v35);
    id v38 = (id)AMSLogKey(v37);
    if (v38)
    {
      v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v43._countAndFlagsBits = 0LL;
      v43._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      v44 = v91;
      v45 = sub_7A94(&v89, (uint64_t)v91);
      uint64_t v46 = swift_getDynamicType(v45, v44, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v86 = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
      sub_7AB8((uint64_t)&v86);
      v47._countAndFlagsBits = 5972026LL;
      v47._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v86 = v40;
      uint64_t v87 = v42;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
      sub_7AB8((uint64_t)&v86);
      uint64_t v48 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v49._countAndFlagsBits = 0LL;
      v49._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      v50 = v91;
      v51 = sub_7A94(&v89, (uint64_t)v91);
      uint64_t v52 = swift_getDynamicType(v51, v50, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v86 = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
      sub_7AB8((uint64_t)&v86);
      uint64_t v48 = 58LL;
    }

    unint64_t v53 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v48);
    LogMessage.init(stringInterpolation:)(v8);
    sub_62AC(&v89);
    unint64_t v89 = 0LL;
    unint64_t v90 = 0xE000000000000000LL;
    v54._countAndFlagsBits = 0x203A726F727245LL;
    v54._object = (void *)0xE700000000000000LL;
    String.append(_:)(v54);
    uint64_t v55 = v84;
    uint64_t v86 = v84;
    uint64_t v56 = sub_5F6C(&qword_7D5D0);
    _print_unlocked<A, B>(_:_:)( &v86,  &v89,  v56,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
    v91 = &type metadata for String;
    static LogMessage.safe(_:)(&v89);
    sub_7AB8((uint64_t)&v89);
    sub_267BC(v36);
    swift_bridgeObjectRelease(v36);
    Promise.reject(_:)(v55);
    swift_errorRelease(v55);
  }

  else if ((a1 & 1) != 0)
  {
    LOBYTE(v89) = 1;
    Promise.resolve(_:)(&v89);
  }

  else
  {
    uint64_t v57 = swift_allocObject(v82, v79, v81);
    *(_OWORD *)(v57 + 16) = v80;
    v91 = v78;
    unint64_t v89 = a3;
    uint64_t v58 = swift_retain(a3);
    id v59 = (id)AMSLogKey(v58);
    if (v59)
    {
      v60 = v59;
      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v63 = v62;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v64._countAndFlagsBits = 0LL;
      v64._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v64);
      v65 = v91;
      v66 = sub_7A94(&v89, (uint64_t)v91);
      uint64_t v67 = swift_getDynamicType(v66, v65, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v86 = v67;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
      sub_7AB8((uint64_t)&v86);
      v68._countAndFlagsBits = 5972026LL;
      v68._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v68);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v86 = v61;
      uint64_t v87 = v63;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
      sub_7AB8((uint64_t)&v86);
      uint64_t v69 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v70._countAndFlagsBits = 0LL;
      v70._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      v71 = v91;
      v72 = sub_7A94(&v89, (uint64_t)v91);
      uint64_t v73 = swift_getDynamicType(v72, v71, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v86 = v73;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v86);
      sub_7AB8((uint64_t)&v86);
      uint64_t v69 = 58LL;
    }

    unint64_t v74 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v69);
    LogMessage.init(stringInterpolation:)(v8);
    sub_62AC(&v89);
    v91 = &type metadata for String;
    unint64_t v89 = 0xD000000000000019LL;
    unint64_t v90 = 0x8000000000063110LL;
    static LogMessage.safe(_:)(&v89);
    sub_7AB8((uint64_t)&v89);
    sub_267BC(v57);
    swift_bridgeObjectRelease(v57);
    NSString v75 = String._bridgeToObjectiveC()();
    id v76 = (id)AMSError(0LL, v75, 0LL, 0LL);

    Promise.reject(_:)(v76);
  }

char *sub_79AC@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *result;
  *(void *)(a2 + 24) = &type metadata for Bool;
  *(_BYTE *)a2 = v2;
  return result;
}

uint64_t sub_79C4()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for AcknowledgePrivacyActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin38AcknowledgePrivacyActionImplementation);
}

unint64_t sub_79F8()
{
  unint64_t result = qword_7CC80;
  if (!qword_7CC80)
  {
    uint64_t v1 = type metadata accessor for AcknowledgePrivacyAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5CC68, v1);
    atomic_store(result, (unint64_t *)&qword_7CC80);
  }

  return result;
}

uint64_t sub_7A38(uint64_t *a1)
{
  return sub_6E18(a1);
}

unint64_t sub_7A58()
{
  unint64_t result = qword_7CE10;
  if (!qword_7CE10)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___ACAccount);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7CE10);
  }

  return result;
}

void *sub_7A94(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t sub_7AB8(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7DDE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

id sub_7AF8(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v7 = [v3 initWithPrivacyIdentifier:v6 account:a3];

  return v7;
}

uint64_t sub_7B58()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_7B84(char a1, uint64_t a2)
{
}

uint64_t sub_7B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_7B9C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void *sub_7BA4(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

uint64_t sub_7BE0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 136) = v2;
  *(void *)(v3 - 160) = a1;
  *(void *)(v3 - 152) = v1;
  return static LogMessage.safe(_:)(v3 - 160);
}

uint64_t sub_7BF4(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 112);
}

uint64_t sub_7C08()
{
  uint64_t v1 = *(void *)(v0 - 136);
  uint64_t v2 = sub_7A94((void *)(v0 - 160), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

void sub_7C2C()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_7C3C()
{
  return sub_7AB8(v0 - 112);
}

unint64_t sub_7C44(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71798, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3) {
    return 3LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_7C8C(char a1)
{
  if (!a1) {
    return 0x746C7561666564LL;
  }
  if (a1 == 1) {
    return 0x657263536C6C7566LL;
  }
  return 0xD000000000000011LL;
}

void sub_7CEC(char *a1, unsigned __int8 *a2)
{
}

void sub_7CF8()
{
}

uint64_t sub_7D00(uint64_t a1)
{
  return sub_33544(a1, *v1);
}

void sub_7D08(uint64_t a1)
{
}

unint64_t sub_7D10@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_7C44(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_7D3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_7C8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_7D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

void sub_7DA4()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = sub_9B20();
  uint64_t v9 = type metadata accessor for ActivityShelfPageAction(v8);
  uint64_t v10 = (uint64_t)&v5[*(int *)(v9 + 28)];
  uint64_t v11 = type metadata accessor for ActionFactory(0LL);
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(void *)(v10 + 32) = 0LL;
  swift_allocObject(v11, 16LL, 7LL);
  sub_9B50();
  sub_4E84(v12, v13, v14, v15, v16, v17, v18, v19);
  if (v0)
  {
    uint64_t v20 = sub_6BC8();
    sub_6D14(v20);
    swift_release();
    uint64_t v21 = sub_9A58();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8LL))(v3, v21);
    sub_8598(v10);
  }

  else
  {
    unint64_t v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 32);
    __int128 v23 = &v5[*(int *)(v9 + 24)];
    v22(v23, v1, v6);
    sub_9B50();
    uint64_t v24 = sub_23E7C();
    *uint64_t v5 = v24 & 1;
    __chkstk_darwin(v24);
    sub_9B50();
    sub_4EA8();
    sub_85E0((uint64_t)&v38, v10);
    sub_9B50();
    sub_81A4(v25, v26, v27, v28, v29, v30, v31, v32, v37, (int)v23, SWORD2(v23), SBYTE6(v23), SHIBYTE(v23));
    char v34 = v33;
    swift_release();
    uint64_t v35 = sub_6BC8();
    sub_6D14(v35);
    uint64_t v36 = sub_9A58();
    sub_9AA8(v36);
    v5[1] = v34;
  }

  sub_6B3C();
}

void sub_8044( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8068( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_808C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_80B0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v15 = v14;
  sub_9A60();
  sub_99D8();
  __chkstk_darwin(v16);
  sub_6B18();
  if ((sub_6C1C() & 1) != 0 || (uint64_t v17 = v15(), sub_9A94(v17), a13 == 2))
  {
    sub_6BD0();
    uint64_t v18 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v19 = sub_6B54(v18);
    uint64_t v21 = sub_9AD4(v19, v20);
    sub_6B68((uint64_t)v21, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }

  else
  {
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }

  sub_6B3C();
}

void sub_8180( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_81A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v15 = v14;
  sub_9A60();
  sub_99D8();
  __chkstk_darwin(v16);
  sub_6B18();
  if ((sub_6C1C() & 1) != 0 || (uint64_t v17 = v15(), sub_9A94(v17), a13 == 3))
  {
    sub_6BD0();
    uint64_t v18 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v19 = sub_6B54(v18);
    uint64_t v21 = sub_9AD4(v19, v20);
    sub_6B68((uint64_t)v21, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }

  else
  {
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }

  sub_6B3C();
}

void sub_8270( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8294( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v15 = v14;
  uint64_t v16 = sub_9A60();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_6B18();
  if ((sub_6C1C() & 1) != 0 || (uint64_t v18 = v15(), sub_9A94(v18), (a13 & 1) != 0))
  {
    sub_6BD0();
    uint64_t v19 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    uint64_t v20 = sub_6B54(v19);
    unint64_t v22 = sub_9AD4(v20, v21);
    sub_6B68((uint64_t)v22, enum case for JSONError.missingProperty(_:));
    uint64_t v23 = sub_6C24();
    swift_willThrow(v23);
  }

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v16);
  sub_6B3C();
}

void sub_8364( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8388( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_83AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_83D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_6C1C() & 1) != 0 || (unint64_t v8 = sub_9008(), JSONObject.stringEnumOrNil<A>()(&unk_742B0, v8), v9 = v13, v13 == 5))
  {
    uint64_t v9 = sub_6BD0();
    uint64_t v10 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    sub_6B54(v10);
    void *v11 = v4;
    v11[1] = v3;
    v11[2] = a3;
    sub_6B68((uint64_t)v11, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }

  else
  {
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }

  return v9;
}

void sub_84C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_84EC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_8510()
{
}

uint64_t type metadata accessor for ActivityShelfPageAction(uint64_t a1)
{
  uint64_t result = qword_7CF18;
  if (!qword_7CF18) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ActivityShelfPageAction);
  }
  return result;
}

void sub_855C(uint64_t a1, uint64_t a2)
{
}

void sub_8570(uint64_t a1)
{
}

uint64_t sub_8598(uint64_t a1)
{
  uint64_t v2 = sub_5F6C((uint64_t *)&unk_7F900);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void *sub_85D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_5EF4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_85E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C((uint64_t *)&unk_7F900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_8628()
{
  unint64_t result = qword_7CE28;
  if (!qword_7CE28)
  {
    unint64_t result = swift_getWitnessTable(&unk_5CF64, &type metadata for ActivityShelfPageAction.Style);
    atomic_store(result, (unint64_t *)&qword_7CE28);
  }

  return result;
}

unint64_t sub_8664()
{
  unint64_t result = qword_7CE30;
  if (!qword_7CE30)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D280, &type metadata for Button.Style);
    atomic_store(result, (unint64_t *)&qword_7CE30);
  }

  return result;
}

uint64_t sub_86A0()
{
  return sub_87F0();
}

void sub_86AC()
{
  uint64_t v5 = sub_9A3C();
  Optional<A>.init(deserializing:using:)(v5);
  if (v1)
  {
    sub_9A50();
    *uint64_t v0 = 0LL;
    v0[1] = 0LL;
    v0[2] = 0LL;
    v0[3] = 1LL;
    v0[5] = 0LL;
    v0[6] = 0LL;
    v0[4] = 0LL;
  }

  sub_9A00();
}

unint64_t sub_8734()
{
  unint64_t result = qword_7CE38;
  if (!qword_7CE38)
  {
    unint64_t result = swift_getWitnessTable(&unk_5E4D0, &type metadata for OnboardingPageDestination.Button);
    atomic_store(result, (unint64_t *)&qword_7CE38);
  }

  return result;
}

void sub_8770()
{
  if (v1)
  {
    sub_9A50();
    *(void *)(v0 + 48) = 0LL;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)uint64_t v0 = 0u;
  }

  sub_9A00();
}

uint64_t sub_87E4()
{
  return sub_87F0();
}

uint64_t sub_87F0()
{
  uint64_t v3 = v2;
  sub_9A58();
  sub_99D8();
  __chkstk_darwin(v4);
  sub_9994();
  sub_99B0();
  __chkstk_darwin(v5);
  sub_9970(v6, v8);
  sub_99C4();
  return v3(v1, v0);
}

void sub_8894()
{
  uint64_t v4 = sub_9A3C();
  sub_34684(v4, v5, v6);
  if (v0)
  {
    sub_9A50();
    sub_9B04((__n128)xmmword_5CDF0);
  }

  sub_9A00();
}

uint64_t sub_8904(uint64_t a1, uint64_t a2)
{
  return sub_8C2C( a1,  a2,  (uint64_t)&type metadata accessor for Artwork,  (uint64_t)&unk_7CE58,  (uint64_t)&protocol conformance descriptor for Artwork);
}

void sub_8920()
{
  if (v1)
  {
    sub_9A50();
    __int128 v5 = xmmword_5CE00;
    __int128 v6 = 0uLL;
    __int128 v7 = 0uLL;
  }

  else
  {
    __int128 v5 = v9;
    __int128 v6 = v10;
    __int128 v7 = v11;
  }

  *uint64_t v0 = v5;
  v0[1] = v6;
  v0[2] = v7;
  sub_9A00();
}

void sub_89C0()
{
}

void sub_89D4()
{
}

void sub_89E8()
{
  uint64_t v4 = sub_9AF0();
  v0(v4);
  sub_9AE8();
  if (v0)
  {
    sub_9A50();
    sub_9B04((__n128)xmmword_5CE00);
  }

  sub_9ABC();
}

uint64_t sub_8A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_9A58();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  __int128 v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  type metadata accessor for JSONObject(0LL);
  sub_99B0();
  __n128 v9 = __chkstk_darwin(v8);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v11 + 16))(&v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)], a1, v9);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  sub_9080();
  sub_9AE8();
  if (v4)
  {
    sub_9A50();
    int v12 = 0;
  }

  else
  {
    if (v15[31]) {
      int v13 = 256;
    }
    else {
      int v13 = 0;
    }
    int v12 = v13 | v15[30];
  }

  return v12 | ((v4 != 0) << 16);
}

void sub_8B8C()
{
  if (v1)
  {
    sub_9A50();
    bzero(v0, 0x1C0uLL);
    v0[56] = 1LL;
    bzero(v0 + 57, 0xA8uLL);
  }

  sub_9A00();
}

uint64_t sub_8C10(uint64_t a1, uint64_t a2)
{
  return sub_8C2C( a1,  a2,  (uint64_t)&type metadata accessor for DynamicArtwork,  (uint64_t)&unk_7CE98,  (uint64_t)&protocol conformance descriptor for DynamicArtwork);
}

uint64_t sub_8C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!v6) {
    return v13;
  }
  sub_9A50();
  return 1LL;
}

void sub_8CF0()
{
  if (v1)
  {
    sub_9A50();
    bzero(v0, 0x2C2uLL);
  }

  sub_9A00();
}

void sub_8D60(uint64_t a1, uint64_t a2)
{
}

void sub_8D74(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v10 = sub_9A14();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = sub_9A20();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = sub_9B20();
  uint64_t v15 = a3(v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v6, a1, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v5, a2, v10);
  dispatch thunk of ExpressibleByJSON.init(deserializing:using:)(v6, v5, v15, a4);
  sub_5FEC(v4, 0LL, 1LL, v15);
  sub_9ABC();
}

unint64_t sub_8E64()
{
  unint64_t result = qword_7CE40;
  if (!qword_7CE40)
  {
    unint64_t result = swift_getWitnessTable(&unk_5EE38, &unk_73F10);
    atomic_store(result, (unint64_t *)&qword_7CE40);
  }

  return result;
}

unint64_t sub_8EA0()
{
  unint64_t result = qword_7CE48;
  if (!qword_7CE48)
  {
    unint64_t result = swift_getWitnessTable( &unk_5E9D0,  &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind);
    atomic_store(result, (unint64_t *)&qword_7CE48);
  }

  return result;
}

unint64_t sub_8EDC()
{
  unint64_t result = qword_7CE50;
  if (!qword_7CE50)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F4B8, &unk_74620);
    atomic_store(result, (unint64_t *)&qword_7CE50);
  }

  return result;
}

unint64_t sub_8F18()
{
  unint64_t result = qword_7CE60;
  if (!qword_7CE60)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F22C, &unk_744F0);
    atomic_store(result, (unint64_t *)&qword_7CE60);
  }

  return result;
}

unint64_t sub_8F54()
{
  unint64_t result = qword_7CE68;
  if (!qword_7CE68)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F480, &unk_746B0);
    atomic_store(result, (unint64_t *)&qword_7CE68);
  }

  return result;
}

unint64_t sub_8F90()
{
  unint64_t result = qword_7CE70;
  if (!qword_7CE70)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F448, &unk_74590);
    atomic_store(result, (unint64_t *)&qword_7CE70);
  }

  return result;
}

unint64_t sub_8FCC()
{
  unint64_t result = qword_7CE78;
  if (!qword_7CE78)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F25C, &unk_743E0);
    atomic_store(result, (unint64_t *)&qword_7CE78);
  }

  return result;
}

unint64_t sub_9008()
{
  unint64_t result = qword_7CE80;
  if (!qword_7CE80)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F18C, &unk_742B0);
    atomic_store(result, (unint64_t *)&qword_7CE80);
  }

  return result;
}

unint64_t sub_9044()
{
  unint64_t result = qword_7CE88;
  if (!qword_7CE88)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F28C, &unk_74458);
    atomic_store(result, (unint64_t *)&qword_7CE88);
  }

  return result;
}

unint64_t sub_9080()
{
  unint64_t result = qword_7CE90;
  if (!qword_7CE90)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F5CC, &unk_74870);
    atomic_store(result, (unint64_t *)&qword_7CE90);
  }

  return result;
}

unint64_t sub_90BC()
{
  unint64_t result = qword_7CEA0;
  if (!qword_7CEA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F52C, &unk_747B8);
    atomic_store(result, (unint64_t *)&qword_7CEA0);
  }

  return result;
}

unint64_t sub_90F8()
{
  unint64_t result = qword_7CEA8;
  if (!qword_7CEA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F6B0, &unk_74908);
    atomic_store(result, (unint64_t *)&qword_7CEA8);
  }

  return result;
}

unint64_t sub_9134()
{
  unint64_t result = qword_7CEB0;
  if (!qword_7CEB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_603B4, &unk_756C0);
    atomic_store(result, (unint64_t *)&qword_7CEB0);
  }

  return result;
}

unint64_t sub_9170()
{
  unint64_t result = qword_7CEB8;
  if (!qword_7CEB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_6037C, &unk_75750);
    atomic_store(result, (unint64_t *)&qword_7CEB8);
  }

  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for ActivityShelfPageAction.Style(_BYTE *result, _BYTE *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityShelfPageAction.Style(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }

LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityShelfPageAction.Style( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_928C + 4 * byte_5CE15[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_92C0 + 4 * byte_5CE10[v4]))();
}

uint64_t sub_92C0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_92C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x92D0LL);
  }
  return result;
}

uint64_t sub_92DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x92E4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_92E8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_92F0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_92FC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_9308(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActivityShelfPageAction.Style()
{
  return &type metadata for ActivityShelfPageAction.Style;
}

uint64_t *sub_9320(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 24);
    if (v14)
    {
      uint64_t v15 = *((void *)v13 + 4);
      *((void *)v12 + 3) = v14;
      *((void *)v12 + 4) = v15;
      (**(void (***)(void))(v14 - 8))();
    }

    else
    {
      __int128 v17 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v17;
      *((void *)v12 + 4) = *((void *)v13 + 4);
    }
  }

  return v4;
}

void *sub_93F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  unint64_t result = (void *)(a1 + *(int *)(a2 + 28));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

_WORD *sub_9460(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)((char *)a2 + v10 + 24);
  if (v13)
  {
    uint64_t v14 = *((void *)v12 + 4);
    *((void *)v11 + 3) = v13;
    *((void *)v11 + 4) = v14;
    (**(void (***)(void))(v13 - 8))();
  }

  else
  {
    __int128 v15 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v15;
    *((void *)v11 + 4) = *((void *)v12 + 4);
  }

  return a1;
}

_BYTE *sub_9508(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v9 - 8) + 24LL))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *((void *)v12 + 3);
  if (!*(void *)&a1[v10 + 24])
  {
    if (v13)
    {
      *((void *)v11 + 3) = v13;
      *((void *)v11 + 4) = *((void *)v12 + 4);
      (**(void (***)(_BYTE *, _BYTE *))(v13 - 8))(v11, v12);
      return a1;
    }

LABEL_7:
    __int128 v14 = *(_OWORD *)v12;
    __int128 v15 = *((_OWORD *)v12 + 1);
    *((void *)v11 + 4) = *((void *)v12 + 4);
    *(_OWORD *)uint64_t v11 = v14;
    *((_OWORD *)v11 + 1) = v15;
    return a1;
  }

  if (!v13)
  {
    sub_62AC(v11);
    goto LABEL_7;
  }

  sub_6520(v11, v12);
  return a1;
}

    uint64_t v12 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = v12;
    return a1;
  }

  if (!v11)
  {
    sub_62AC((void *)(a1 + 56));
    goto LABEL_7;
  }

  sub_19C08((void *)(a1 + 56), a2 + 7);
  return a1;
}

    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }

  if (!v4)
  {
    sub_62AC((void *)a1);
    goto LABEL_7;
  }

  sub_6520((void *)a1, a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  uint64_t v7 = *((void *)a2 + 6);
  uint64_t v8 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  return a1;
}

    uint64_t v9 = *v7;
    uint64_t v10 = v7[1];
    *(void *)(v6 + 32) = *((void *)v7 + 4);
    *(_OWORD *)uint64_t v6 = v9;
    *(_OWORD *)(v6 + 16) = v10;
    goto LABEL_8;
  }

  if (!v8)
  {
    sub_62AC((void *)(a1 + 8));
    goto LABEL_7;
  }

  sub_6520((void *)(a1 + 8), (void *)(a2 + 8));
LABEL_8:
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a2 + 48);
  *(void *)(a1 + 48) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v11);
  uint64_t v13 = *(int *)(a3 + 28);
  __int128 v14 = a1 + v13;
  __int128 v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24LL))(v14, v15, v16);
  return a1;
}

_WORD *sub_95E8(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  __int128 v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  return a1;
}

_BYTE *sub_9670(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v9 - 8) + 40LL))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = &a1[v10];
  if (*(void *)&a1[v10 + 24]) {
    sub_62AC(&a1[v10]);
  }
  __int128 v12 = *(_OWORD *)&a2[v10 + 16];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)&a2[v10];
  *((_OWORD *)v11 + 1) = v12;
  *((void *)v11 + 4) = *(void *)&a2[v10 + 32];
  return a1;
}

uint64_t sub_9710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_971C);
}

uint64_t sub_971C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return sub_6028(a1 + *(int *)(a3 + 24), a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 28) + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(sub_9970(v4, v8) = -1;
  }
  int v9 = v8 - 1;
  if (v9 < 0) {
    int v9 = -1;
  }
  return (v9 + 1);
}

uint64_t sub_97A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_97B4);
}

uint64_t sub_97B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return sub_5FEC(a1 + *(int *)(a4 + 24), a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 28) + 24) = a2;
  return result;
}

uint64_t sub_9830(uint64_t a1)
{
  v4[0] = &unk_5CE98;
  v4[1] = &unk_5CEB0;
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = &unk_5CEC8;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_98B4(uint64_t a1)
{
  uint64_t result = sub_98F0( (unint64_t *)&qword_7CF58,  type metadata accessor for ActivityShelfPageAction,  (uint64_t)&unk_5CE1C);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_98F0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2(255LL);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_9934()
{
  unint64_t result = qword_7CF60;
  if (!qword_7CF60)
  {
    unint64_t result = swift_getWitnessTable(&unk_5CF3C, &type metadata for ActivityShelfPageAction.Style);
    atomic_store(result, (unint64_t *)&qword_7CF60);
  }

  return result;
}

uint64_t sub_9970@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL), v3);
}

uint64_t sub_9994()
{
  return type metadata accessor for JSONObject(0LL);
}

  ;
}

uint64_t sub_99C4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

  ;
}

uint64_t sub_99EC()
{
  return type metadata accessor for JSONContext(0LL);
}

  ;
}

uint64_t sub_9A14()
{
  return type metadata accessor for JSONContext(0LL);
}

uint64_t sub_9A20()
{
  return type metadata accessor for JSONObject(0LL);
}

uint64_t sub_9A3C()
{
  return v0;
}

uint64_t sub_9A50()
{
  return swift_errorRelease(v0);
}

uint64_t sub_9A58()
{
  return type metadata accessor for JSONContext(0LL);
}

uint64_t sub_9A60()
{
  return type metadata accessor for JSONObject(0LL);
}

uint64_t sub_9A70@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL), v3);
}

uint64_t sub_9A94(uint64_t a1)
{
  return JSONObject.stringEnumOrNil<A>()(v1, a1);
}

uint64_t sub_9AA8(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 - 8) + 8LL))(*(void *)(v1 - 168), a1);
}

  ;
}

void *sub_9AD4(uint64_t a1, void *a2)
{
  unint64_t result = a2;
  *a2 = v3;
  a2[1] = v2;
  a2[2] = *(void *)(v4 - 88);
  return result;
}

uint64_t sub_9AE8()
{
  return Optional<A>.init(deserializing:using:)();
}

uint64_t sub_9AF0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

void sub_9B04(__n128 a1)
{
  *(__n128 *)uint64_t v1 = a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
}

uint64_t sub_9B20()
{
  return 0LL;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_9B70()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    uint64_t v2 = Strong;
    sub_4DFE8();
    swift_unknownObjectRelease(v2);
  }

  sub_5F6C(&qword_7D048);
  memset(v4, 0, sizeof(v4));
  return Promise.__allocating_init(value:)(v4);
}

uint64_t sub_9BD8()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for ActivityShelfPageActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin37ActivityShelfPageActionImplementation);
}

unint64_t sub_9C20()
{
  unint64_t result = qword_7CF58;
  if (!qword_7CF58)
  {
    uint64_t v1 = type metadata accessor for ActivityShelfPageAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5CE1C, v1);
    atomic_store(result, (unint64_t *)&qword_7CF58);
  }

  return result;
}

uint64_t sub_9C60()
{
  return sub_9B70();
}

uint64_t sub_9C80(uint64_t a1)
{
  return a1;
}

id sub_9CA4()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView);
LABEL_5:
    id v8 = v2;
    return v3;
  }

  uint64_t v4 = v0;
  id v5 = objc_allocWithZone(&OBJC_CLASS____UIContentUnavailableView);
  id result = sub_21D78(0.0, 0.0, 0.0, 0.0, 0LL, 0xE000000000000000LL, 0LL);
  if (result)
  {
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

id sub_9D38(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView] = 0LL;
  id v3 = &v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController_alertTitle];
  *(void *)id v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for AlertViewController();
  return objc_msgSendSuper2(&v5, "initWithNibName:bundle:", 0, 0);
}

void sub_9D8C()
{
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController____lazy_storage___contentUnavailableView] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/AlertViewController.swift",  45LL,  2LL,  46LL,  0);
  __break(1u);
}

id sub_9E3C(uint64_t a1)
{
  id v2 = sub_A324(a1, "parentViewController");
  if (!v2) {
    goto LABEL_4;
  }
  id v3 = v2;
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___UINavigationController);
  if (swift_dynamicCastObjCClass(v3, v4))
  {

LABEL_4:
    v7.receiver = v1;
    v7.super_class = (Class)type metadata accessor for AlertViewController();
    return objc_msgSendSuper2(&v7, "navigationItem");
  }

  id v6 = [v3 navigationItem];

  return v6;
}

void sub_9EE8()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for AlertViewController();
  id v7 = sub_A32C((uint64_t)v10.super_class, "loadView", v1, v2, v3, v4, v5, v6, v10);
  id v8 = sub_A324((uint64_t)v7, "view");
  id v9 = objc_msgSend((id)objc_opt_self(UIColor), "ams_primaryBackground");
  [v8 setBackgroundColor:v9];
}

void sub_9FA8()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for AlertViewController();
  sub_A32C((uint64_t)v7.super_class, "viewDidLoad", v1, v2, v3, v4, v5, v6, v7);
  sub_A0E8();
}

void sub_A00C()
{
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for AlertViewController();
  sub_A32C((uint64_t)v17.super_class, "viewWillLayoutSubviews", v1, v2, v3, v4, v5, v6, v17);
  id v7 = sub_9CA4();
  id v8 = sub_A324((uint64_t)v7, "view");
  [v8 bounds];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  objc_msgSend(v7, "setFrame:", v10, v12, v14, v16);
}

void sub_A0E8()
{
  id v1 = sub_9CA4();
  sub_A334(v1, "setButtonAction:");

  id v2 = sub_9CA4();
  sub_A334(v2, "setButtonTitle:");

  id v3 = sub_9CA4();
  sub_A334(v3, "setMessage:");

  id v4 = sub_9CA4();
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController_alertTitle);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19AlertViewController_alertTitle + 8);
  swift_bridgeObjectRetain(v6);
  sub_A2E0(v5, v6, v4);

  uint64_t v7 = swift_bridgeObjectRelease(v6);
  id v8 = sub_A324(v7, "view");
  id v9 = sub_9CA4();
  [v8 addSubview:v9];
}

void sub_A1D0()
{
}

void sub_A208()
{
}

id sub_A258()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for AlertViewController();
  return sub_A32C((uint64_t)v8.super_class, "dealloc", v1, v2, v3, v4, v5, v6, v8);
}

uint64_t type metadata accessor for AlertViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin19AlertViewController);
}

void sub_A2E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = String._bridgeToObjectiveC()();
  [a3 setTitle:v4];
}

id sub_A324(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

id sub_A32C( uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

id sub_A334(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0);
}

uint64_t sub_A33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6A60(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_A34C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a1, v1, v3);
}

uint64_t sub_A384@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  objc_super v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = type metadata accessor for ActionFactory(0LL);
  swift_allocObject(v9, 16LL, 7LL);
  uint64_t v10 = type metadata accessor for AuthenticateAction(0LL);
  uint64_t v22 = a1;
  sub_4E84(0x654D6E6F69746361LL, 0xED00007363697274LL, v10, (uint64_t)sub_A604, (uint64_t)v21, v11, v12, v13);
  if (v2)
  {
    uint64_t v14 = sub_6BC8();
    sub_6D14(v14);
    sub_AD00();
    uint64_t v15 = sub_9A58();
    return sub_ACD0(v15);
  }

  else
  {
    uint64_t v17 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2, v8, v5);
    __chkstk_darwin(v17);
    sub_AD08();
    sub_ACE4();
    uint64_t v18 = sub_A60C((uint64_t)&v24, a2 + *(int *)(v10 + 20));
    __chkstk_darwin(v18);
    sub_AD08();
    sub_ACE4();
    uint64_t v19 = sub_6BC8();
    sub_6D14(v19);
    sub_AD00();
    uint64_t v20 = sub_9A58();
    sub_ACD0(v20);
    return sub_A60C((uint64_t)&v23, a2 + *(int *)(v10 + 24));
  }

uint64_t sub_A5B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_A384(a1, a2);
}

uint64_t type metadata accessor for AuthenticateAction(uint64_t a1)
{
  uint64_t result = qword_7D0E0;
  if (!qword_7D0E0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AuthenticateAction);
  }
  return result;
}

void sub_A604(uint64_t a1)
{
}

uint64_t sub_A60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C((uint64_t *)&unk_7F900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t *sub_A654(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }

    else
    {
      __int128 v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }

    uint64_t v15 = *(int *)(a3 + 24);
    double v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *((void *)v17 + 4);
      *((void *)v16 + 3) = v18;
      *((void *)v16 + 4) = v19;
      (**(void (***)(void))(v18 - 8))();
    }

    else
    {
      __int128 v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)double v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v20;
      *((void *)v16 + 4) = *((void *)v17 + 4);
    }
  }

  return a1;
}

void *sub_A748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  int v5 = (void *)(a1 + *(int *)(a2 + 20));
  if (v5[3]) {
    sub_62AC(v5);
  }
  uint64_t result = (void *)(a1 + *(int *)(a2 + 24));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_A7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(void))(v10 - 8))();
  }

  else
  {
    __int128 v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + sub_9C80(v0 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }

  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }

  else
  {
    __int128 v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + sub_9C80(v0 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }

  return a1;
}

uint64_t sub_A87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (__int128 *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      sub_6520((void *)v8, v9);
      goto LABEL_8;
    }

    sub_62AC((void *)v8);
  }

  else if (v10)
  {
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    (**(void (***)(uint64_t, __int128 *))(v10 - 8))(v8, v9);
    goto LABEL_8;
  }

  __int128 v11 = *v9;
  __int128 v12 = v9[1];
  *(void *)(v8 + 32) = *((void *)v9 + 4);
  *(_OWORD *)uint64_t v8 = v11;
  *(_OWORD *)(v8 + sub_9C80(v0 + 16) = v12;
LABEL_8:
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (__int128 *)(a2 + v13);
  uint64_t v16 = *((void *)v15 + 3);
  if (!*(void *)(a1 + v13 + 24))
  {
    if (v16)
    {
      *(void *)(v14 + 24) = v16;
      *(void *)(v14 + 32) = *((void *)v15 + 4);
      (**(void (***)(uint64_t, __int128 *))(v16 - 8))(v14, v15);
      return a1;
    }

uint64_t sub_A9AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  __int128 v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + sub_9C80(v0 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  __int128 v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + sub_9C80(v0 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  return a1;
}

uint64_t sub_AA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    sub_62AC((void *)v8);
  }
  __int128 v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + sub_9C80(v0 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  if (*(void *)(a1 + v11 + 24)) {
    sub_62AC((void *)(a1 + v11));
  }
  __int128 v13 = *(_OWORD *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(v12 + sub_9C80(v0 + 16) = v13;
  *(void *)(v12 + 32) = *(void *)(a2 + v11 + 32);
  return a1;
}

uint64_t sub_AAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_AAEC);
}

uint64_t sub_AAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return sub_6028(a1, a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(sub_9970(v4, v8) = -1;
  }
  int v9 = v8 - 1;
  if (v9 < 0) {
    int v9 = -1;
  }
  return (v9 + 1);
}

uint64_t sub_AB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_AB80);
}

uint64_t sub_AB80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return sub_5FEC(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  return result;
}

uint64_t sub_ABF8(uint64_t a1)
{
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    _OWORD v4[2] = "(";
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

unint64_t sub_AC6C(uint64_t a1)
{
  unint64_t result = sub_AC90();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_AC90()
{
  unint64_t result = qword_7D120;
  if (!qword_7D120)
  {
    uint64_t v1 = type metadata accessor for AuthenticateAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5D040, v1);
    atomic_store(result, (unint64_t *)&qword_7D120);
  }

  return result;
}

uint64_t sub_ACD0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

void sub_ACE4()
{
}

uint64_t sub_AD00()
{
  return swift_release(v0);
}

  ;
}

void sub_AD1C()
{
}

Swift::Int sub_AD40()
{
  return Hasher._finalize()();
}

uint64_t sub_AD80()
{
  return 1LL;
}

Swift::Int sub_AD90(uint64_t a1)
{
  return Hasher._finalize()();
}

uint64_t sub_ADDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_5F6C(&qword_7D048);
  uint64_t v72 = Promise.__allocating_init()();
  uint64_t v9 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v10 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v73 = v11;
  uint64_t v68 = ((v12 + 32) & ~v12) + 2 * v11;
  uint64_t v69 = v9;
  uint64_t v67 = v12 | 7;
  uint64_t v13 = swift_allocObject(v9, v68, v12 | 7);
  __int128 v66 = xmmword_5CD80;
  *(_OWORD *)(v13 + sub_9C80(v0 + 16) = xmmword_5CD80;
  uint64_t v65 = type metadata accessor for AuthenticateActionImplementation();
  uint64_t v76 = v65;
  unint64_t v74 = v4;
  Swift::String v70 = v4;
  uint64_t v14 = swift_retain(v4);
  id v15 = (id)AMSLogKey(v14);
  if (v15)
  {
    __int128 v17 = v15;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);
    uint64_t v20 = v19;

    sub_C3B0();
    sub_C368();
    sub_C330();
    uint64_t v21 = sub_C3CC();
    sub_C354(v21);
    sub_C388();
    sub_C378();
    uint64_t v81 = &type metadata for String;
    uint64_t v79 = v18;
    uint64_t v80 = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
    sub_C388();
    uint64_t v22 = 93LL;
  }

  else
  {
    sub_C390();
    sub_C368();
    sub_C330();
    uint64_t v23 = sub_C3CC();
    sub_C354(v23);
    sub_C388();
    uint64_t v22 = 58LL;
  }

  sub_C418(v22);
  LogMessage.init(stringInterpolation:)(v8);
  uint64_t v24 = type metadata accessor for Log();
  sub_62AC(&v74);
  LogMessage.init(stringLiteral:)(0xD000000000000015LL, 0x8000000000063340LL);
  sub_2679C(v13);
  swift_bridgeObjectRelease(v13);
  uint64_t v25 = type metadata accessor for DynamicAccountsStore(0LL);
  uint64_t v26 = type metadata accessor for BaseObjectGraph(0LL);
  inject<A, B>(_:from:)(v25, a3, v25, v26);
  uint64_t v27 = v74;
  sub_C39C((uint64_t)&type metadata for JSService);
  v71 = v74;
  uint64_t v28 = type metadata accessor for NavigationControllerList(0LL);
  uint64_t v29 = sub_C39C(v28);
  uint64_t v30 = (void *)(*((uint64_t (**)(uint64_t))*v74 + 11))(v29);
  if (v30
    && (uint64_t v31 = v30,
        id v32 = [v30 topViewController],
        v31,
        v32))
  {
    id v33 = [objc_allocWithZone(AMSAuthenticateOptions) init];
    [v33 setCanMakeAccountActive:1];
    [v33 setEnableAccountCreation:1];
    sub_C184(0LL, &qword_7D1F0, &OBJC_CLASS___AMSAuthenticateRequest_ptr);
    id v64 = v33;
    id v34 = sub_B404(0LL, v33);
    sub_C184(0LL, &qword_7D610, &OBJC_CLASS___AMSUIAuthenticateTask_ptr);
    id v35 = v34;
    id v36 = v32;
    id v63 = v35;
    v61[1] = v36;
    id v62 = (id)sub_57EB4(v35);
    v61[0] = [v62 performAuthentication];
    uint64_t v37 = swift_allocObject(v69, v68, v67);
    *(_OWORD *)(v37 + sub_9C80(v0 + 16) = v66;
    uint64_t v76 = v65;
    unint64_t v74 = v70;
    uint64_t v38 = swift_retain(v70);
    id v39 = (id)AMSLogKey(v38);
    if (v39)
    {
      uint64_t v41 = v39;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);
      Swift::String v43 = v27;
      uint64_t v45 = v44;

      sub_C3B0();
      sub_C368();
      sub_C330();
      uint64_t v46 = sub_C3CC();
      sub_C354(v46);
      sub_C388();
      sub_C378();
      uint64_t v81 = &type metadata for String;
      uint64_t v79 = v42;
      uint64_t v80 = v45;
      uint64_t v27 = v43;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
      sub_C388();
      uint64_t v47 = 93LL;
    }

    else
    {
      sub_C390();
      sub_C368();
      sub_C330();
      uint64_t v51 = sub_C3CC();
      sub_C354(v51);
      sub_C388();
      uint64_t v47 = 58LL;
    }

    sub_C418(v47);
    LogMessage.init(stringInterpolation:)(v8);
    sub_62AC(&v74);
    LogMessage.init(stringLiteral:)(0x696D726F66726550LL, 0xEF6874756120676ELL);
    uint64_t v52 = (const void *)v24;
    sub_2679C(v37);
    swift_bridgeObjectRelease(v37);
    unint64_t v53 = (void *)swift_allocObject(&unk_72288, 48LL, 7LL);
    Swift::String v54 = v70;
    uint64_t v55 = v71;
    v53[2] = v70;
    v53[3] = v27;
    uint64_t v50 = v72;
    v53[4] = v55;
    v53[5] = v50;
    v77 = sub_C094;
    v78 = v53;
    unint64_t v74 = _NSConcreteStackBlock;
    uint64_t v75 = 1107296256LL;
    sub_C3DC((uint64_t)sub_BD0C);
    sub_C3BC();
    swift_retain(v27);
    swift_retain(v55);
    swift_retain(v50);
    uint64_t v56 = swift_release();
    uint64_t v57 = (void *)v61[0];
    sub_C40C(v56, "addSuccessBlock:");
    _Block_release(v52);
    uint64_t v58 = swift_allocObject(&unk_722D8, 32LL, 7LL);
    *(void *)(v58 + sub_9C80(v0 + 16) = v54;
    *(void *)(v58 + 24) = v50;
    v77 = sub_C0BC;
    v78 = (void *)v58;
    unint64_t v74 = _NSConcreteStackBlock;
    uint64_t v75 = 1107296256LL;
    sub_C3DC((uint64_t)sub_BD0C);
    sub_C3BC();
    swift_retain(v50);
    uint64_t v59 = swift_release();
    sub_C40C(v59, "addErrorBlock:");
    _Block_release(v52);
    swift_release();
    swift_release();
    swift_release();
    sub_C3D4((uint64_t)&v82);
    sub_C3D4((uint64_t)&v85);
    sub_C3D4((uint64_t)&v84);
    sub_C3D4((uint64_t)&v83);
  }

  else
  {
    unint64_t v48 = sub_C020();
    uint64_t v49 = swift_allocError(&type metadata for AuthenticateActionImplementation.PresentationError, v48, 0LL, 0LL);
    uint64_t v50 = Promise.__allocating_init(error:)(v49);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  return v50;
}

id sub_B404(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)) initWithAccount:a1 options:a2];

  return v5;
}

uint64_t sub_B45C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  uint64_t v66 = a3;
  id v71 = a1;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v10 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v70 = v11;
  uint64_t v14 = v12 | 7;
  uint64_t v64 = v13 + 2 * v11;
  uint64_t v65 = v9;
  uint64_t v15 = swift_allocObject(v9, v64, v12 | 7);
  __int128 v63 = xmmword_5CD80;
  *(_OWORD *)(v15 + sub_9C80(v0 + 16) = xmmword_5CD80;
  uint64_t v67 = v13;
  uint64_t v16 = type metadata accessor for AuthenticateActionImplementation();
  uint64_t v73 = v16;
  v72[0] = a2;
  uint64_t v17 = swift_retain(a2);
  id v18 = (id)AMSLogKey(v17);
  if (v18)
  {
    uint64_t v20 = v18;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);
    uint64_t v23 = v22;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v24._countAndFlagsBits = 0LL;
    v24._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t v25 = v73;
    uint64_t v26 = sub_7A94(v72, v73);
    uint64_t DynamicType = swift_getDynamicType(v26, v25, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v75 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v75);
    sub_7AB8((uint64_t)&v75);
    v28._countAndFlagsBits = 5972026LL;
    v28._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v75 = v21;
    uint64_t v76 = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v75);
    sub_7AB8((uint64_t)&v75);
    uint64_t v29 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v30._countAndFlagsBits = 0LL;
    v30._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t v31 = v73;
    id v32 = sub_7A94(v72, v73);
    uint64_t v33 = swift_getDynamicType(v32, v31, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v75 = v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v75);
    sub_7AB8((uint64_t)&v75);
    uint64_t v29 = 58LL;
  }

  unint64_t v34 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v29);
  LogMessage.init(stringInterpolation:)(v8);
  type metadata accessor for Log();
  sub_62AC(v72);
  LogMessage.init(stringLiteral:)(0xD000000000000019LL, 0x80000000000633C0LL);
  sub_2679C(v15);
  swift_bridgeObjectRelease(v15);
  id v35 = [v71 account];
  (*(void (**)(id))(*(void *)v66 + 136LL))(v35);
  uint64_t v36 = swift_allocObject(v65, v64, v14);
  *(_OWORD *)(v36 + sub_9C80(v0 + 16) = v63;
  uint64_t v73 = v16;
  v72[0] = a2;
  uint64_t v37 = swift_retain(a2);
  id v38 = (id)AMSLogKey(v37);
  if (v38)
  {
    uint64_t v40 = v38;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);
    uint64_t v43 = v42;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v44._countAndFlagsBits = 0LL;
    v44._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    uint64_t v45 = v73;
    uint64_t v46 = sub_7A94(v72, v73);
    uint64_t v47 = swift_getDynamicType(v46, v45, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v75 = v47;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v75);
    sub_7AB8((uint64_t)&v75);
    v48._countAndFlagsBits = 5972026LL;
    v48._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v48);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v75 = v41;
    uint64_t v76 = v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v75);
    sub_7AB8((uint64_t)&v75);
    uint64_t v49 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v50._countAndFlagsBits = 0LL;
    v50._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    uint64_t v51 = v73;
    uint64_t v52 = sub_7A94(v72, v73);
    uint64_t v53 = swift_getDynamicType(v52, v51, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v75 = v53;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v75);
    sub_7AB8((uint64_t)&v75);
    uint64_t v49 = 58LL;
  }

  unint64_t v54 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v49);
  LogMessage.init(stringInterpolation:)(v8);
  sub_62AC(v72);
  LogMessage.init(stringLiteral:)(0xD000000000000016LL, 0x80000000000633E0LL);
  sub_2679C(v36);
  swift_bridgeObjectRelease(v36);
  id v55 = v71;
  id v56 = [v71 account];
  JSService.updateService(account:)();

  uint64_t v57 = (void *)swift_allocObject(&unk_72328, 40LL, 7LL);
  v57[2] = v55;
  v57[3] = a2;
  uint64_t v58 = v69;
  v57[4] = v69;
  uint64_t v59 = swift_allocObject(&unk_72350, 32LL, 7LL);
  *(void *)(v59 + sub_9C80(v0 + 16) = a2;
  *(void *)(v59 + 24) = v58;
  uint64_t v60 = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  swift_retain_n(a2, 2LL);
  swift_retain_n(v58, 2LL);
  uint64_t v61 = static OS_dispatch_queue.main.getter(v55);
  uint64_t v73 = v60;
  unint64_t v74 = &protocol witness table for OS_dispatch_queue;
  v72[0] = v61;
  Promise.then(perform:orCatchError:on:)(sub_C11C, v57, sub_C154, v59, v72);
  swift_release();
  swift_release();
  swift_release();
  return sub_62AC(v72);
}

uint64_t sub_B9B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v8 = [a2 account];
  id v9 = objc_msgSend(v8, "ams_DSID");

  if (v9)
  {
    id v10 = [v9 stringValue];

    id v9 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);
    uint64_t v13 = v12;
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  uint64_t v14 = sub_5F6C(&qword_7D1F8);
  uint64_t inited = swift_initStackObject(v14, v44);
  *(_OWORD *)(inited + sub_9C80(v0 + 16) = xmmword_5D0F0;
  strcpy((char *)(inited + 32), "account_dsid");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v13;
  uint64_t v16 = sub_5F6C(&qword_7D200);
  uint64_t v17 = Dictionary.init(dictionaryLiteral:)(inited, &type metadata for String, v16, &protocol witness table for String);
  uint64_t v18 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v19 = type metadata accessor for LogMessage(0LL);
  uint64_t v20 = swift_allocObject( v18,  ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v19 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v20 + sub_9C80(v0 + 16) = xmmword_5CD80;
  uint64_t v43 = type metadata accessor for AuthenticateActionImplementation();
  v42[0] = a3;
  uint64_t v21 = swift_retain(a3);
  id v22 = (id)AMSLogKey(v21);
  if (v22)
  {
    Swift::String v24 = v22;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);
    uint64_t v27 = v26;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v28._countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = v43;
    Swift::String v30 = sub_7A94(v42, v43);
    uint64_t DynamicType = swift_getDynamicType(v30, v29, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v40[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_7AB8((uint64_t)v40);
    v32._countAndFlagsBits = 5972026LL;
    v32._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    uint64_t MetatypeMetadata = &type metadata for String;
    v40[0] = v25;
    v40[1] = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_7AB8((uint64_t)v40);
    uint64_t v33 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v34._countAndFlagsBits = 0LL;
    v34._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t v35 = v43;
    uint64_t v36 = sub_7A94(v42, v43);
    uint64_t v37 = swift_getDynamicType(v36, v35, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v40[0] = v37;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_7AB8((uint64_t)v40);
    uint64_t v33 = 58LL;
  }

  unint64_t v38 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v33);
  LogMessage.init(stringInterpolation:)(v7);
  type metadata accessor for Log();
  sub_62AC(v42);
  LogMessage.init(stringLiteral:)(0xD000000000000017LL, 0x8000000000063420LL);
  sub_2679C(v20);
  swift_bridgeObjectRelease(v20);
  uint64_t v43 = sub_5F6C(&qword_7D208);
  v42[0] = v17;
  Promise.resolve(_:)(v42);
  return sub_C1BC((uint64_t)v42);
}

uint64_t sub_BD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v13 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v14 = swift_allocObject( v12,  ((*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
        + 3LL * *(void *)(v13 + 72),
          *(unsigned __int8 *)(v13 + 80) | 7LL);
  *(_OWORD *)(v14 + sub_9C80(v0 + 16) = xmmword_5CD70;
  uint64_t v43 = type metadata accessor for AuthenticateActionImplementation();
  v42[0] = a2;
  uint64_t v15 = swift_retain(a2);
  id v16 = (id)AMSLogKey(v15);
  if (v16)
  {
    uint64_t v18 = v16;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);
    uint64_t v35 = a1;
    uint64_t v21 = v20;

    sub_C3B0();
    sub_C3E8();
    uint64_t v22 = v43;
    uint64_t v23 = sub_7A94(v42, v43);
    uint64_t DynamicType = swift_getDynamicType(v23, v22, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v39 = DynamicType;
    sub_C3F4();
    sub_C3FC();
    sub_C378();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v39 = v19;
    uint64_t v40 = v21;
    a1 = v35;
    sub_C3F4();
    sub_C3FC();
    uint64_t v25 = 93LL;
  }

  else
  {
    sub_C390();
    sub_C3E8();
    uint64_t v26 = v43;
    uint64_t v27 = sub_7A94(v42, v43);
    uint64_t v28 = swift_getDynamicType(v27, v26, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v39 = v28;
    sub_C3F4();
    sub_C3FC();
    uint64_t v25 = 58LL;
  }

  unint64_t v29 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v25);
  LogMessage.init(stringInterpolation:)(v11);
  type metadata accessor for Log();
  sub_62AC(v42);
  LogMessage.init(stringLiteral:)(a4, a5);
  swift_getErrorValue(a1, v38, &v36);
  uint64_t v30 = v36;
  uint64_t v31 = v37;
  uint64_t v43 = v37;
  Swift::String v32 = sub_7BA4(v42);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16LL))(v32, v30, v31);
  static LogMessage.safe(_:)(v42);
  sub_7AB8((uint64_t)v42);
  sub_267BC(v14);
  swift_bridgeObjectRelease(v14);
  return Promise.reject(_:)(a1);
}

void sub_BF8C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4();
  swift_release(v3);
}

uint64_t type metadata accessor for AuthenticateActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin32AuthenticateActionImplementation);
}

uint64_t sub_C000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_ADDC(a1, a2, a3);
}

unint64_t sub_C020()
{
  unint64_t result = qword_7D1E8;
  if (!qword_7D1E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D1CC, &type metadata for AuthenticateActionImplementation.PresentationError);
    atomic_store(result, (unint64_t *)&qword_7D1E8);
  }

  return result;
}

uint64_t sub_C05C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_C094(void *a1)
{
  return sub_B45C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_C0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_C0B0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_C0BC(uint64_t a1)
{
  return sub_BD10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 0xD000000000000012LL, 0x80000000000633A0LL);
}

uint64_t sub_C0EC()
{
  sub_C404();
  swift_release();
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_C11C(uint64_t a1)
{
  return sub_B9B0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_C12C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_C154(uint64_t a1)
{
  return sub_BD10(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 0xD000000000000015LL, 0x8000000000063400LL);
}

uint64_t sub_C184(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

uint64_t sub_C1BC(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateActionImplementation.PresentationError( unsigned int *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  else {
    int v2 = 2;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AuthenticateActionImplementation.PresentationError( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_C284 + 4 * byte_5D100[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_C2A4 + 4 * byte_5D105[v4]))();
  }
}

_BYTE *sub_C284(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_C2A4(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_C2AC(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_C2B4(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_C2BC(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_C2C4(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_C2D0()
{
  return 0LL;
}

ValueMetadata *type metadata accessor for AuthenticateActionImplementation.PresentationError()
{
  return &type metadata for AuthenticateActionImplementation.PresentationError;
}

unint64_t sub_C2EC()
{
  unint64_t result = qword_7D210;
  if (!qword_7D210)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D1A4, &type metadata for AuthenticateActionImplementation.PresentationError);
    atomic_store(result, (unint64_t *)&qword_7D210);
  }

  return result;
}

uint64_t sub_C330()
{
  uint64_t v1 = *(void *)(v0 - 160);
  int v2 = sub_7A94((void *)(v0 - 184), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_C354(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 136);
}

void sub_C368()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

void sub_C378()
{
  v0._countAndFlagsBits = 5972026LL;
  v0._object = (void *)0xE300000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_C388()
{
  return sub_7AB8(v0 - 136);
}

uint64_t sub_C390()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_C39C(uint64_t a1)
{
  return inject<A, B>(_:from:)(a1, v2, a1, v1);
}

uint64_t sub_C3B0()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
}

uint64_t sub_C3BC()
{
  return swift_retain(v0);
}

uint64_t sub_C3CC()
{
  return swift_getMetatypeMetadata();
}

void sub_C3D4(uint64_t a1@<X8>)
{
}

void *sub_C3DC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 168) = a1;
  *(void *)(v2 - 160) = v1;
  return _Block_copy((const void *)(v2 - 184));
}

void sub_C3E8()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_C3F4()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 144);
}

uint64_t sub_C3FC()
{
  return sub_7AB8(v0 - 144);
}

uint64_t sub_C404()
{
  return swift_release(*(void *)(v0 + 24));
}

id sub_C40C(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void sub_C418(uint64_t a1)
{
  unint64_t v1 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

char *sub_C424(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16LL) & ~(unint64_t)v4];
    swift_retain(v5);
  }

  else
  {
    id v8 = a2 + 1;
    uint64_t v9 = a2[4];
    uint64_t v10 = v5;
    if (v9)
    {
      uint64_t v11 = a2[5];
      *((void *)a1 + 4) = v9;
      *((void *)a1 + 5) = v11;
      (**((void (***)(uint64_t, char **, char *))v9 - 1))((uint64_t)(a1 + 8), v8, v9);
    }

    else
    {
      __int128 v12 = *((_OWORD *)v8 + 1);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v8;
      *(_OWORD *)(a1 + 24) = v12;
      *((void *)a1 + 5) = v8[4];
    }

    __int128 v13 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 72) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))((uint64_t)(a1 + 48), (uint64_t)(a2 + 6));
    __int128 v14 = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 7) = v14;
    (**(void (***)(uint64_t, uint64_t))(v14 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 11));
    uint64_t v15 = *(int *)(a3 + 36);
    id v16 = &a1[v15];
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for ImpressionMetrics(0LL);
    if (sub_6028((uint64_t)v17, 1LL, v18))
    {
      uint64_t v19 = sub_5F6C(&qword_7CB00);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v16, v17, v18);
      sub_5FEC((uint64_t)v16, 0LL, 1LL, v18);
    }

    uint64_t v20 = *(int *)(a3 + 40);
    uint64_t v21 = &a1[v20];
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 24);
    if (v23)
    {
      uint64_t v24 = *(void *)(v22 + 32);
      *((void *)v21 + 3) = v23;
      *((void *)v21 + 4) = v24;
      (**(void (***)(void))(v23 - 8))();
    }

    else
    {
      __int128 v25 = *(_OWORD *)(v22 + 16);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v25;
      *((void *)v21 + 4) = *(void *)(v22 + 32);
    }
  }

  return a1;
}

void *sub_C5C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 32)) {
    sub_62AC((void *)(a1 + 8));
  }
  sub_62AC((void *)(a1 + 48));
  sub_62AC((void *)(a1 + 88));
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for ImpressionMetrics(0LL);
  unint64_t result = (void *)(a1 + *(int *)(a2 + 40));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_C674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = a1 + 8;
  uint64_t v8 = a2 + 8;
  uint64_t v9 = *(void *)(a2 + 32);
  id v10 = v6;
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(v7, v8, v9);
  }

  else
  {
    __int128 v12 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + sub_9C80(v0 + 16) = v12;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
  }

  __int128 v13 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 48, a2 + 48);
  __int128 v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v14;
  (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 88, a2 + 88);
  uint64_t v15 = *(int *)(a3 + 36);
  id v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v17, 1LL, v18))
  {
    uint64_t v19 = sub_5F6C(&qword_7CB00);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v16, v17, v18);
    sub_5FEC((uint64_t)v16, 0LL, 1LL, v18);
  }

  uint64_t v20 = *(int *)(a3 + 40);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a2 + v20 + 24);
  if (v23)
  {
    uint64_t v24 = *(void *)(v22 + 32);
    *(void *)(v21 + 24) = v23;
    *(void *)(v21 + 32) = v24;
    (**(void (***)(void))(v23 - 8))();
  }

  else
  {
    __int128 v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + sub_9C80(v0 + 16) = v25;
    *(void *)(v21 + 32) = *(void *)(v22 + 32);
  }

  return a1;
}

uint64_t sub_C7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      sub_6520((void *)(a1 + 8), (void *)(a2 + 8));
      goto LABEL_8;
    }

    sub_62AC((void *)(a1 + 8));
  }

  else if (v9)
  {
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 8, a2 + 8);
    goto LABEL_8;
  }

  __int128 v10 = *(_OWORD *)(a2 + 8);
  __int128 v11 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 8) = v10;
  *(_OWORD *)(a1 + 24) = v11;
LABEL_8:
  sub_6520((void *)(a1 + 48), (void *)(a2 + 48));
  sub_6520((void *)(a1 + 88), (void *)(a2 + 88));
  uint64_t v12 = *(int *)(a3 + 36);
  __int128 v13 = (void *)(a1 + v12);
  __int128 v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ImpressionMetrics(0LL);
  int v16 = sub_6028((uint64_t)v13, 1LL, v15);
  int v17 = sub_6028((uint64_t)v14, 1LL, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
      sub_5FEC((uint64_t)v13, 0LL, 1LL, v15);
      goto LABEL_14;
    }

    goto LABEL_13;
  }

  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_13:
    uint64_t v19 = sub_5F6C(&qword_7CB00);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64LL));
    goto LABEL_14;
  }

  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_14:
  uint64_t v20 = *(int *)(a3 + 40);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (__int128 *)(a2 + v20);
  uint64_t v23 = *((void *)v22 + 3);
  if (!*(void *)(a1 + v20 + 24))
  {
    if (v23)
    {
      *(void *)(v21 + 24) = v23;
      *(void *)(v21 + 32) = *((void *)v22 + 4);
      (**(void (***)(uint64_t, __int128 *))(v23 - 8))(v21, v22);
      return a1;
    }

LABEL_20:
    __int128 v24 = *v22;
    __int128 v25 = v22[1];
    *(void *)(v21 + 32) = *((void *)v22 + 4);
    *(_OWORD *)uint64_t v21 = v24;
    *(_OWORD *)(v21 + sub_9C80(v0 + 16) = v25;
    return a1;
  }

  if (!v23)
  {
    sub_62AC((void *)v21);
    goto LABEL_20;
  }

  sub_6520((void *)v21, v22);
  return a1;
}

  __break(1u);
  return result;
}

uint64_t sub_C9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  __int128 v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v7 = *(int *)(a3 + 36);
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v9, 1LL, v10))
  {
    uint64_t v11 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
    sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
  }

  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  __int128 v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + sub_9C80(v0 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_CB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(void **)a1;
  uint64_t v7 = a2 + 8;
  *(void *)a1 = *(void *)a2;

  if (*(void *)(a1 + 32)) {
    sub_62AC((void *)(a1 + 8));
  }
  __int128 v8 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
  *(_OWORD *)(a1 + 24) = v8;
  *(void *)(a1 + 40) = *(void *)(v7 + 32);
  sub_62AC((void *)(a1 + 48));
  __int128 v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_62AC((void *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for ImpressionMetrics(0LL);
  int v14 = sub_6028((uint64_t)v11, 1LL, v13);
  int v15 = sub_6028((uint64_t)v12, 1LL, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32LL))(v11, v12, v13);
      sub_5FEC((uint64_t)v11, 0LL, 1LL, v13);
      goto LABEL_9;
    }

    goto LABEL_8;
  }

  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
LABEL_8:
    uint64_t v17 = sub_5F6C(&qword_7CB00);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_9;
  }

  (*(void (**)(void *, const void *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_9:
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = a1 + v18;
  if (*(void *)(a1 + v18 + 24)) {
    sub_62AC((void *)(a1 + v18));
  }
  __int128 v20 = *(_OWORD *)(a2 + v18 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)(a2 + v18);
  *(_OWORD *)(v19 + sub_9C80(v0 + 16) = v20;
  *(void *)(v19 + 32) = *(void *)(a2 + v18 + 32);
  return a1;
}

uint64_t sub_CCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_CCBC);
}

uint64_t sub_CCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_5F6C(&qword_7CB00);
    return sub_6028(a1 + *(int *)(a3 + 36), a2, v8);
  }

uint64_t sub_CD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_CD40);
}

uint64_t sub_CD40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_5F6C(&qword_7CB00);
    return sub_5FEC(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }

  return result;
}

uint64_t type metadata accessor for Button(uint64_t a1)
{
  uint64_t result = qword_7D270;
  if (!qword_7D270) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Button);
  }
  return result;
}

void sub_CDE8(uint64_t a1)
{
  v4[0] = "\b";
  v4[1] = (char *)&value witness table for () + 64;
  _OWORD v4[2] = &unk_5D248;
  void v4[3] = &unk_5D260;
  void v4[4] = &unk_5D260;
  sub_CE80(319LL);
  if (v3 <= 0x3F)
  {
    v4[5] = *(void *)(v2 - 8) + 64LL;
    v4[6] = &unk_5D248;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
  }

void sub_CE80(uint64_t a1)
{
  if (!qword_7D280)
  {
    uint64_t v2 = type metadata accessor for ImpressionMetrics(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_7D280);
    }
  }

uint64_t storeEnumTagSinglePayload for Button.Style(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_CF14 + 4 * byte_5D210[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_CF34 + 4 * byte_5D215[v4]))();
  }
}

_BYTE *sub_CF14(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_CF34(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_CF3C(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_CF44(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_CF4C(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_CF54(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Button.Style()
{
  return &type metadata for Button.Style;
}

BOOL sub_CF70(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71800, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

BOOL sub_CFC4@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_CF70(*a1);
  *a2 = result;
  return result;
}

void sub_CFF8(void *a1@<X8>)
{
  *a1 = 0x656E6961746E6F63LL;
  a1[1] = 0xE900000000000064LL;
}

unint64_t sub_D01C()
{
  unint64_t result = qword_7D2C8;
  if (!qword_7D2C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D2F8, &type metadata for Button.Style);
    atomic_store(result, (unint64_t *)&qword_7D2C8);
  }

  return result;
}

uint64_t sub_D058@<X0>(uint64_t a1@<X8>)
{
  return sub_D734(v1 + 88, a1);
}

void sub_D064(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_D090(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

unint64_t sub_D0BC()
{
  unint64_t result = qword_7D2D0;
  if (!qword_7D2D0)
  {
    uint64_t v1 = type metadata accessor for Button(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5D320, v1);
    atomic_store(result, (unint64_t *)&qword_7D2D0);
  }

  return result;
}

void sub_D0FC(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v5 = sub_5F6C(&qword_7CB00);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ActionFactory(0LL);
  uint64_t v9 = sub_D7F8(v8);
  uint64_t v10 = type metadata accessor for DynamicTextFactory(0LL);
  sub_D7F8(v10);
  uint64_t v11 = type metadata accessor for Button(0LL);
  uint64_t v38 = a1;
  sub_4ECC(0x726F6C6F63LL, 0xE500000000000000LL, v11, (uint64_t)sub_D6C4, (uint64_t)v37, v12, v13, v14);
  if (v2)
  {
    swift_errorRelease(v2);
    uint64_t v15 = 0LL;
  }

  *a2 = v15;
  uint64_t v16 = sub_23DB8();
  uint64_t v42 = v9;
  v41[0] = v16;
  v41[1] = v17;
  v36[1] = a2 + 11;
  uint64_t v18 = AnyHashable.init<A>(_:)(v41, &type metadata for String, &protocol witness table for String);
  __chkstk_darwin(v18);
  v36[-2] = a1;
  sub_4EE0(0xD000000000000011LL, 0x8000000000063440LL, v11, (uint64_t)sub_D700, (uint64_t)&v36[-4], v19, v20, v21);
  uint64_t v22 = type metadata accessor for ImpressionMetrics(0LL);
  sub_5FEC((uint64_t)v7, 0LL, 1LL, v22);
  sub_D708((uint64_t)v7, (uint64_t)a2 + *(int *)(v11 + 36), &qword_7CB00);
  __chkstk_darwin(v23);
  v36[-2] = v42;
  v36[-1] = a1;
  sub_D7C0(1969710451LL);
  sub_4EA8();
  sub_D708((uint64_t)v41, (uint64_t)a2 + *(int *)(v11 + 40), (uint64_t *)&unk_7F900);
  unint64_t v24 = sub_D7C0(1819898995LL);
  sub_8044(v24, v25, v26, v27, v28, v29, v30, v31);
  __chkstk_darwin(v32);
  sub_D7DC();
  sub_503C();
  sub_D708((uint64_t)&v40, (uint64_t)(a2 + 1), &qword_7CAF8);
  __chkstk_darwin(v33);
  sub_D7DC();
  sub_503C();
  uint64_t v34 = type metadata accessor for JSONObject(0LL);
  sub_6D14(v34);
  sub_D7F0();
  sub_D7D4();
  uint64_t v35 = sub_9A58();
  sub_D79C(v35);
  sub_6010(&v39, (uint64_t)(a2 + 6));
}

uint64_t sub_D508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ColorFactory(0LL);
  uint64_t v7 = swift_allocObject(v6, 16LL, 7LL);
  uint64_t v8 = ColorFactory.color(deserializing:using:)(a1, a2);
  uint64_t result = swift_release(v7);
  *a3 = v8;
  return result;
}

uint64_t sub_D590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for JSONContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for JSONObject(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  (*(void (**)(_BYTE *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  ImpressionMetrics.init(deserializing:using:)(v12, v9);
  uint64_t v14 = type metadata accessor for ImpressionMetrics(0LL);
  return sub_5FEC(a3, 0LL, 1LL, v14);
}

void sub_D6B0(uint64_t a1@<X1>, void *a2@<X8>)
{
}

uint64_t sub_D6C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_D508(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_D6CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_D700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_D590(a1, *(void *)(v2 + 16), a2);
}

void sub_D708(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_D7B0(a1, a2, a3);
  sub_D80C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  sub_6D3C();
}

uint64_t sub_D734(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_D770(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_D7B0(a1, a2, a3);
  sub_D80C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  sub_6D3C();
}

uint64_t sub_D79C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

uint64_t sub_D7B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_5F6C(a3);
}

unint64_t sub_D7C0(uint64_t a1)
{
  return a1 & 0xFFFF0000FFFFFFFFLL | 0x6500000000LL;
}

uint64_t sub_D7D4()
{
  return swift_release(v0);
}

  ;
}

uint64_t sub_D7F0()
{
  return swift_release(v0);
}

uint64_t sub_D7F8(uint64_t a1)
{
  return swift_allocObject(a1, 16LL, 7LL);
}

uint64_t sub_D804()
{
  return swift_errorRelease(v0);
}

uint64_t sub_D80C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void sub_D818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t KeyPath = swift_getKeyPath(&unk_5D3E8);
  sub_5F6C(&qword_7D330);
  sub_DC14(KeyPath);
  swift_release();
  if (v13)
  {
    sub_6010(&v12, (uint64_t)v14);
    sub_1B1D8((uint64_t)v14, a3);
    sub_62AC(v14);
  }

  else
  {
    sub_DBD8((uint64_t)&v12, &qword_7CAF8);
    sub_1B238();
  }

  uint64_t v7 = swift_getKeyPath(&unk_5D408);
  sub_DC14(v7);
  swift_release();
  sub_1B1E4((uint64_t)v14, a3);
  sub_62AC(v14);
  uint64_t v8 = swift_getKeyPath(&unk_5D428);
  sub_DC14(v8);
  sub_D7D4();
  BOOL v9 = v14[3] != 0LL;
  sub_DBD8((uint64_t)v14, (uint64_t *)&unk_7F900);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled) = v9;
  sub_DC20();
  uint64_t v10 = swift_getKeyPath(&unk_5D448);
  sub_DC14(v10);
  sub_D7D4();
  sub_DCD8();
  uint64_t v11 = swift_getKeyPath(&unk_5D468);
  sub_DC14(v11);
  sub_D7D4();
  sub_DC94(v14[0]);
}

uint64_t sub_D9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ButtonComponent();
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_DA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for ButtonComponent();
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_DA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_5D3C8, a4);
  return ComponentCell.apply(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_DAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_5D3C8, a4);
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_DB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_5D3C8, a4);
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_DB80()
{
  return sub_98F0(&qword_7D2D8, type metadata accessor for Button, (uint64_t)&unk_5D348);
}

uint64_t sub_DBAC()
{
  return sub_98F0( &qword_7D2E0,  (uint64_t (*)(uint64_t))&type metadata accessor for NilState,  (uint64_t)&protocol conformance descriptor for NilState);
}

uint64_t sub_DBD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_5F6C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t sub_DC14(uint64_t a1)
{
  return DiffableLens.subscript.getter(a1, v1);
}

id sub_DC20()
{
  *(_BYTE *)(*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView)
           + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled) = *(_BYTE *)(v0
                                                                                            + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled);
  return sub_1BA38();
}

id sub_DC68()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color)) {
    return objc_msgSend( *(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView),  "setBackgroundColor:");
  }
  return result;
}

void sub_DC94(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color) = a1;
  id v3 = a1;

  sub_DC68();
}

uint64_t sub_DCD8()
{
  return sub_1BA64();
}

id sub_DD00(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for DynamicButtonView());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled] = 1;
  *(void *)&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color] = 0LL;

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for ButtonComponent();
  id v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  sub_E328((uint64_t)v12);

  return v12;
}

uint64_t sub_DE5C()
{
  id v1 =  [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView) accessibilityLabel];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_DF18(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

id sub_DF50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonComponent();
  return objc_msgSendSuper2(&v2, "isHighlighted");
}

void sub_DFC0(char a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ButtonComponent();
  objc_msgSendSuper2(&v3, "setHighlighted:", a1 & 1);
  sub_DFFC();
  sub_E850();
}

id sub_DFFC()
{
  unsigned int v1 = [v0 isHighlighted];
  if (v1) {
    LOBYTE(v1) = *((_BYTE *)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_isEnabled);
  }
  return sub_56D34(v1, 1);
}

void sub_E030()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ButtonComponent();
  sub_A32C((uint64_t)v7.super_class, "prepareForReuse", v1, v2, v3, v4, v5, v6, v7);
  sub_1B238();
  sub_1B244();
  sub_E850();
}

id sub_E0A4()
{
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for ButtonComponent();
  id v7 = sub_A32C((uint64_t)v19.super_class, "layoutSubviews", v1, v2, v3, v4, v5, v6, v19);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView];
  id v9 = sub_A324((uint64_t)v7, "contentView");
  [v9 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  return objc_msgSend(v8, "setFrame:", v11, v13, v15, v17);
}

id sub_E180()
{
  return objc_msgSend( *(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView),  "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

void sub_E200(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for ButtonComponent();
  objc_msgSendSuper2(&v9, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v6 = [a1 nextFocusedView];
  if (v6)
  {
    sub_E814();
    id v7 = v3;
    id v8 = v6;
    LOBYTE(sub_9970(v4, v6) = static NSObject.== infix(_:_:)();
  }

  sub_E428(v6 & 1);
}

id sub_E328(uint64_t a1)
{
  id v2 = sub_A324(a1, "contentView");
  id v3 = objc_msgSend((id)objc_opt_self(UIColor), "ams_clear");
  [v2 setBackgroundColor:v3];

  sub_E428(2);
  if (*(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_color]) {
    id v4 = objc_msgSend( *(id *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView],  "setTintColor:");
  }
  id v5 = sub_A324((uint64_t)v4, "contentView");
  [v5 addSubview:*(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView]];

  [v1 setIsAccessibilityElement:1];
  return [v1 setAccessibilityTraits:UIAccessibilityTraitButton];
}

void sub_E428(char a1)
{
  if (a1 == 2) {
    unsigned __int8 v2 = [v1 isFocused];
  }
  else {
    unsigned __int8 v2 = a1 & 1;
  }
  id v3 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  [v3 inheritedAnimationDuration];
  double v5 = v4;
  uint64_t v6 = swift_allocObject(&unk_725F0, 25LL, 7LL);
  *(void *)(v6 + sub_9C80(v0 + 16) = v1;
  *(_BYTE *)(v6 + 24) = v2;
  v9[4] = sub_E7F0;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256LL;
  v9[2] = sub_21544;
  v9[3] = &unk_72608;
  id v7 = _Block_copy(v9);
  id v8 = v1;
  swift_release();
  [v3 animateWithDuration:v7 animations:v5];
  _Block_release(v7);
}

void sub_E530(uint64_t a1, char a2)
{
  id v3 = *(_BYTE **)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15ButtonComponent_dynamicButtonView);
  v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isHighlighted] = a2;
  sub_1BA64();
  if ((a2 & 1) != 0)
  {
    if (qword_7CA18 != -1) {
      swift_once(&qword_7CA18, sub_165F0);
    }
    double v4 = &qword_85530;
  }

  else
  {
    if (qword_7CA10 != -1) {
      swift_once(&qword_7CA10, sub_16524);
    }
    double v4 = &qword_85528;
  }

  id v5 = (id)*v4;
  [v3 setBackgroundColor:v5];
}

void sub_E600()
{
}

id sub_E638()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ButtonComponent();
  return sub_A32C((uint64_t)v8.super_class, "dealloc", v1, v2, v3, v4, v5, v6, v8);
}

uint64_t type metadata accessor for ButtonComponent()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin15ButtonComponent);
}

id sub_E6BC(void *a1)
{
  id v1 = [a1 container];
  [v1 contentSize];
  double v3 = v2;
  swift_unknownObjectRelease(v1);
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
  id v5 = objc_msgSend(v4, "absoluteDimension:", fmin(v3 + -32.0, 400.0));
  id v6 = [v4 estimatedDimension:50.0];
  id v7 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v5 heightDimension:v6];

  return v7;
}

id sub_E7B8(void *a1)
{
  return sub_E6BC(a1);
}

uint64_t sub_E7CC()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void sub_E7F0()
{
}

uint64_t sub_E7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_E80C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_E814()
{
  unint64_t result = qword_7EF60;
  if (!qword_7EF60)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIView);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7EF60);
  }

  return result;
}

  ;
}

uint64_t sub_E85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6A60(v2 + *(int *)(a1 + 32), a2);
}

uint64_t sub_E86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6A60(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_E87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

uint64_t sub_E8BC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_F76C();
  uint64_t v7 = type metadata accessor for ActionFactory(0LL);
  swift_allocObject(v7, 16LL, 7LL);
  objc_super v8 = (int *)type metadata accessor for BuyAction(0LL);
  uint64_t v22 = a1;
  sub_4E84(0x654D6E6F69746361LL, 0xED00007363697274LL, (uint64_t)v8, (uint64_t)sub_A604, (uint64_t)v21, v9, v10, v11);
  if (v2)
  {
    uint64_t v12 = sub_6BC8();
    sub_6D14(v12);
    sub_AD00();
    uint64_t v13 = sub_9A58();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(a1, v13);
  }

  else
  {
    double v15 = *(void (**)(void))(v6 + 32);
    uint64_t v25 = (char *)a2 + v8[7];
    v15();
    *a2 = sub_EC48( 0xD000000000000011LL,  0x80000000000635C0LL,  (uint64_t)v8,  (uint64_t)&type metadata for String,  (uint64_t)&type metadata for String,  (uint64_t)&protocol witness table for String);
    a2[1] = sub_EC48( 0xD000000000000011LL,  0x80000000000635E0LL,  (uint64_t)v8,  (uint64_t)&type metadata for String,  (uint64_t)&type metadata for Any + 8,  (uint64_t)&protocol witness table for String);
    a2[2] = sub_23DB8();
    a2[3] = v16;
    uint64_t v17 = sub_23F28();
    *(uint64_t *)((char *)a2 + v8[10]) = v17;
    __chkstk_darwin(v17);
    sub_AD08();
    sub_F744();
    sub_4EA8();
    uint64_t v18 = sub_A60C((uint64_t)&v24, (uint64_t)a2 + v8[8]);
    __chkstk_darwin(v18);
    sub_AD08();
    sub_F744();
    sub_4EA8();
    uint64_t v19 = sub_6BC8();
    sub_6D14(v19);
    sub_AD00();
    uint64_t v20 = sub_9A58();
    sub_ACD0(v20);
    return sub_A60C((uint64_t)&v23, (uint64_t)a2 + v8[9]);
  }

uint64_t sub_EC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_6BC8();
  __chkstk_darwin(v10);
  sub_F76C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = JSONObject.subscript.getter(a1, a2);
  if ((JSONObject.isNull.getter(v14) & 1) != 0 || (uint64_t v15 = sub_EE14(v13, a4, a5, a6)) == 0)
  {
    uint64_t v16 = type metadata accessor for JSONError(0LL);
    uint64_t v17 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v16, v17, 0LL, 0LL);
    *uint64_t v18 = a1;
    v18[1] = a2;
    v18[2] = a3;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104LL))( v18,  enum case for JSONError.missingProperty(_:),  v16);
    uint64_t v19 = swift_bridgeObjectRetain(a2);
    swift_willThrow(v19);
    sub_F75C();
  }

  else
  {
    uint64_t v16 = v15;
    sub_F75C();
  }

  return v16;
}

uint64_t sub_ED98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_EC48( a1,  a2,  a3,  (uint64_t)&type metadata for AnyHashable,  (uint64_t)&type metadata for Any + 8,  (uint64_t)&protocol witness table for AnyHashable);
}

uint64_t sub_EDC8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return sub_E8BC(a1, a2);
}

uint64_t type metadata accessor for BuyAction(uint64_t a1)
{
  uint64_t result = qword_7D3D8;
  if (!qword_7D3D8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BuyAction);
  }
  return result;
}

uint64_t sub_EE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_5F6C(&qword_7D378);
  __chkstk_darwin(v7);
  sub_F76C();
  uint64_t v10 = v9 - v8;
  JSONObject.dictionary.getter();
  uint64_t v11 = type metadata accessor for JSONDictionary(0LL);
  if (sub_6028(v10, 1LL, v11) == 1)
  {
    sub_EEEC(v10);
    return 0LL;
  }

  else
  {
    uint64_t v12 = JSONDictionary.bridgedPrimitiveValues<A, B>()(a2, a3, a4);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
  }

  return v12;
}

uint64_t sub_EEEC(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7D378);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t *sub_EF2C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v9 = a2[1];
    uint64_t v8 = a2[2];
    a1[1] = v9;
    a1[2] = v8;
    uint64_t v10 = a2[3];
    a1[3] = v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for ActionMetrics(0LL);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v15(v12, v13, v14);
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v7 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 24);
    if (v19)
    {
      uint64_t v20 = *((void *)v18 + 4);
      *((void *)v17 + 3) = v19;
      *((void *)v17 + 4) = v20;
      (**(void (***)(void))(v19 - 8))();
    }

    else
    {
      __int128 v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((void *)v17 + 4) = *((void *)v18 + 4);
    }

    uint64_t v22 = a3[9];
    __int128 v23 = (char *)v7 + v22;
    __int128 v24 = (char *)a2 + v22;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 24);
    if (v25)
    {
      uint64_t v26 = *((void *)v24 + 4);
      *((void *)v23 + 3) = v25;
      *((void *)v23 + 4) = v26;
      (**(void (***)(void))(v25 - 8))();
    }

    else
    {
      __int128 v27 = *((_OWORD *)v24 + 1);
      *(_OWORD *)__int128 v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v27;
      *((void *)v23 + 4) = *((void *)v24 + 4);
    }

    *(uint64_t *)((char *)v7 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  }

  return v7;
}

void *sub_F080(void *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[7];
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  uint64_t v6 = (void *)((char *)a1 + a2[8]);
  if (v6[3]) {
    sub_62AC(v6);
  }
  uint64_t result = (void *)((char *)a1 + a2[9]);
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t *sub_F118(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v13(v10, v11, v12);
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
  if (v17)
  {
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = v17;
    *((void *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }

  else
  {
    __int128 v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((void *)v15 + 4) = *((void *)v16 + 4);
  }

  uint64_t v20 = a3[9];
  __int128 v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 24);
  if (v23)
  {
    uint64_t v24 = *((void *)v22 + 4);
    *((void *)v21 + 3) = v23;
    *((void *)v21 + 4) = v24;
    (**(void (***)(void))(v23 - 8))();
  }

  else
  {
    __int128 v25 = *((_OWORD *)v22 + 1);
    *(_OWORD *)__int128 v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v25;
    *((void *)v21 + 4) = *((void *)v22 + 4);
  }

  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t *sub_F23C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v6);
  uint64_t v8 = a1[1];
  uint64_t v9 = a2[1];
  a1[1] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  a1[2] = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a1[3];
  a1[3] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24LL))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 24);
  if (*(uint64_t *)((char *)a1 + v16 + 24))
  {
    if (v19)
    {
      sub_6520(v17, v18);
      goto LABEL_8;
    }

    sub_62AC(v17);
  }

  else if (v19)
  {
    *((void *)v17 + 3) = v19;
    *((void *)v17 + 4) = *((void *)v18 + 4);
    (**(void (***)(char *, char *))(v19 - 8))(v17, v18);
    goto LABEL_8;
  }

  __int128 v20 = *(_OWORD *)v18;
  __int128 v21 = *((_OWORD *)v18 + 1);
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *(_OWORD *)uint64_t v17 = v20;
  *((_OWORD *)v17 + 1) = v21;
LABEL_8:
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 24);
  if (!*(uint64_t *)((char *)a1 + v22 + 24))
  {
    if (v25)
    {
      *((void *)v23 + 3) = v25;
      *((void *)v23 + 4) = *((void *)v24 + 4);
      (**(void (***)(char *, char *))(v25 - 8))(v23, v24);
      goto LABEL_15;
    }

_OWORD *sub_F3D4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = a3[9];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  __int128 v15 = *(_OWORD *)v14;
  __int128 v16 = *((_OWORD *)v14 + 1);
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *(_OWORD *)uint64_t v13 = v15;
  *((_OWORD *)v13 + 1) = v16;
  uint64_t v17 = (char *)a1 + v12;
  uint64_t v18 = (char *)a2 + v12;
  __int128 v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t *sub_F480(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[3];
  uint64_t v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40LL))(v11, v12, v13);
  uint64_t v14 = a3[8];
  __int128 v15 = (char *)a1 + v14;
  __int128 v16 = (char *)a2 + v14;
  __int128 v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)__int128 v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((void *)v15 + 4) = *((void *)v16 + 4);
  uint64_t v18 = a3[9];
  __int128 v19 = (char *)a1 + v18;
  __int128 v20 = *(_OWORD *)((char *)a2 + v18 + 16);
  *(_OWORD *)__int128 v19 = *(_OWORD *)((char *)a2 + v18);
  *((_OWORD *)v19 + 1) = v20;
  *((void *)v19 + 4) = *(uint64_t *)((char *)a2 + v18 + 32);
  *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_F578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F584);
}

uint64_t sub_F584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for ActionMetrics(0LL);
    return sub_6028(a1 + *(int *)(a3 + 28), a2, v8);
  }

uint64_t sub_F5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F604);
}

uint64_t sub_F604(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
    return sub_5FEC(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }

  return result;
}

uint64_t sub_F670(uint64_t a1)
{
  v4[0] = "\b";
  v4[1] = "\b";
  _OWORD v4[2] = &unk_5D538;
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    void v4[4] = &unk_5D550;
    v4[5] = &unk_5D550;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_F708(uint64_t a1)
{
  uint64_t result = sub_98F0((unint64_t *)&qword_7D540, type metadata accessor for BuyAction, (uint64_t)&unk_5D4B0);
  *(void *)(a1 + 8) = result;
  return result;
}

  ;
}

uint64_t sub_F75C()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

  ;
}

BOOL static NetworkInterface.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void NetworkInterface.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int NetworkInterface.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL sub_F7F4(char *a1, char *a2)
{
  return static NetworkInterface.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_F800()
{
  return NetworkInterface.hashValue.getter(*v0);
}

void sub_F808(uint64_t a1)
{
}

Swift::Int sub_F810(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_F850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v65 = a1;
  uint64_t v6 = sub_5F6C(&qword_7D5C0);
  __chkstk_darwin(v6);
  sub_12718();
  uint64_t v61 = v7;
  __int128 v63 = (void *)sub_12788();
  uint64_t v66 = *(v63 - 1);
  __chkstk_darwin(v63);
  sub_12718();
  uint64_t v62 = v8;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_125F8(v10, (unint64_t *)&qword_7CE10, &OBJC_CLASS___ACAccount_ptr);
  BaseObjectGraph.optional<A>(_:)(&v67, v13, v13);
  uint64_t v14 = v67;
  uint64_t v15 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v16 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v17 = swift_allocObject( v15,  ((*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))
        + 3LL * *(void *)(v16 + 72),
          *(unsigned __int8 *)(v16 + 80) | 7LL);
  *(_OWORD *)(v17 + sub_9C80(v0 + 16) = xmmword_5CD70;
  *((void *)&v68 + 1) = sub_10438();
  *(void *)&__int128 v67 = v4;
  uint64_t v60 = v4;
  id v18 = (id)AMSLogKey(v60);
  uint64_t v64 = v14;
  if (v18)
  {
    __int128 v20 = v18;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);
    uint64_t v23 = v22;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    sub_12708();
    sub_7C08();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_12688(MetatypeMetadata);
    sub_127C8();
    v25._countAndFlagsBits = 5972026LL;
    v25._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    v70[3] = &type metadata for String;
    v70[0] = v21;
    v70[1] = v23;
    uint64_t v14 = v64;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v70);
    sub_127C8();
    uint64_t v26 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    sub_12708();
    sub_7C08();
    uint64_t v27 = swift_getMetatypeMetadata();
    sub_12688(v27);
    sub_DBD8((uint64_t)v70, &qword_7DDE0);
    uint64_t v26 = 58LL;
  }

  unint64_t v28 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v26);
  LogMessage.init(stringInterpolation:)(v12);
  sub_62AC(&v67);
  LogMessage.init(stringLiteral:)(0xD000000000000021LL, 0x8000000000063850LL);
  if (v14)
  {
    *((void *)&v68 + 1) = v13;
    *(void *)&__int128 v67 = v14;
    uint64_t v29 = (void *)v14;
  }

  else
  {
    uint64_t v29 = 0LL;
    __int128 v67 = 0u;
    __int128 v68 = 0u;
  }

  id v30 = v63;
  type metadata accessor for Log();
  __int128 v63 = v29;
  static LogMessage.sensitive(_:)(&v67);
  sub_DBD8((uint64_t)&v67, &qword_7DDE0);
  sub_2679C(v17);
  swift_bridgeObjectRelease(v17);
  uint64_t v31 = type metadata accessor for BaseObjectGraph(0LL);
  uint64_t v32 = v62;
  uint64_t v33 = inject<A, B>(_:from:)(v30, a3, v30, v31);
  uint64_t v34 = sub_125F8(v33, &qword_7D660, &OBJC_CLASS___AMSProcessInfo_ptr);
  sub_1259C(v34);
  uint64_t v59 = (void *)v67;
  uint64_t v35 = type metadata accessor for DelegateController(0LL);
  sub_1259C(v35);
  uint64_t v36 = v67;
  sub_1259C((uint64_t)&type metadata for MetricsContext);
  uint64_t v37 = *((void *)&v67 + 1);
  uint64_t v38 = type metadata accessor for NavigationControllerList(0LL);
  sub_1259C(v38);
  uint64_t v39 = v67;
  if (!v37) {
    uint64_t v37 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  }
  uint64_t v40 = *(void *)(v65 + 8);
  if (v40)
  {
    uint64_t v41 = *(void *)(v65 + 8);
  }

  else
  {
    uint64_t v41 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    uint64_t v40 = 0LL;
  }

  swift_bridgeObjectRetain(v40);
  uint64_t v42 = (objc_class *)sub_FDF4(v41, v37);
  uint64_t v43 = v61;
  (*(void (**)(uint64_t, uint64_t, id))(v66 + 16))(v61, v32, v30);
  sub_5FEC(v43, 0LL, 1LL, (uint64_t)v30);
  Swift::String v44 = v60;
  uint64_t v45 = (uint64_t)&v60[OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_bag];
  swift_beginAccess(&v60[OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_bag], &v67, 33LL, 0LL);
  sub_121E0(v43, v45);
  uint64_t v46 = swift_endAccess(&v67);
  uint64_t v47 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v39 + 88LL))(v46);
  id v48 = [v47 topViewController];

  swift_unknownObjectWeakAssign( &v44[OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_presentingViewController],  v48);
  uint64_t v49 = v65;
  Swift::String v50 = *(objc_class **)v65;
  uint64_t v51 = v32;
  uint64_t v52 = *(void *)(v65 + 16);
  uint64_t v53 = *(void *)(v65 + 24);
  uint64_t v54 = *(void *)(v49 + *(int *)(type metadata accessor for BuyAction(0LL) + 40));
  id v55 = v59;
  sub_FECC(v64, v50, v51, (uint64_t)v59, v52, v53, v54, v42);
  uint64_t v56 = swift_bridgeObjectRelease(v42);
  sub_125F8(v56, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v57 = swift_retain(v36);
  uint64_t v58 = (void *)static OS_dispatch_queue.main.getter(v57);
  sub_12240(v58, (uint64_t)sub_12228, v36);

  swift_release();
  *((void *)&v68 + 1) = type metadata accessor for SyncTaskScheduler(0LL);
  uint64_t v69 = &protocol witness table for SyncTaskScheduler;
  sub_7BA4(&v67);
  SyncTaskScheduler.init()();
  Promise.map<A>(on:_:)(&v67, sub_FE70, 0LL, &type metadata for ResultingActionOutcome);

  swift_release();
  swift_release();
  swift_release();
  sub_62AC(&v67);
  (*(void (**)(uint64_t, id))(v66 + 8))(v51, v30);
  sub_9ABC();
}

uint64_t sub_FDF4(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  uint64_t v8 = a2;
  sub_11E2C(a1, (uint64_t)sub_2222C, 0LL, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  if (v2) {
    swift_bridgeObjectRelease(v6);
  }
  return v6;
}

double sub_FE70@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_12044(*a1);
  if (v3)
  {
    uint64_t v4 = v3;
    *(void *)(a2 + 24) = sub_5F6C(&qword_7D668);
    *(void *)a2 = v4;
  }

  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + sub_9C80(v0 + 16) = 0u;
  }

  return result;
}

void sub_FECC(uint64_t a1, Class isa, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, Class a8)
{
  uint64_t v9 = v8;
  sub_125F8(a1, &qword_7D618, &OBJC_CLASS___AMSBuyParams_ptr);
  swift_bridgeObjectRetain(a6);
  id v17 = sub_10138(a5, a6);
  id v18 = [objc_allocWithZone(AMSPurchase) initWithPurchaseType:a7 buyParams:v17];
  [v18 setAccount:a1];
  if (isa) {
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
  [v18 setAdditionalHeaders:isa];

  sub_12764((uint64_t)[v18 setClientInfo:a4], "setUserInitiated:");
  if (a8)
  {
    sub_1EB24((uint64_t)a8);
    uint64_t v20 = v19;
    a8 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20);
  }

  [v18 setMetricsOverlay:a8];

  id v22 = sub_12764(v21, "setRequiresAccount:");
  sub_125F8((uint64_t)v22, &qword_7D620, &OBJC_CLASS___AMSUIPurchaseTask_ptr);
  id v23 = v18;
  uint64_t v24 = Bag.amsBag.getter();
  id v25 = sub_101A8(v23, v24);
  [v25 setDelegate:v9];
  sub_5F6C(&qword_7D628);
  Promise<A>.init(_:)([v25 performPurchase]);
  uint64_t v26 = swift_allocObject(&unk_727D0, 24LL, 7LL);
  *(void *)(v26 + sub_9C80(v0 + 16) = v23;
  sub_125F8(v26, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  id v27 = v23;
  unint64_t v28 = (void *)static OS_dispatch_queue.main.getter(v27);
  sub_120B4((uint64_t)sub_11E24, v26, v28);

  swift_release();
  swift_release();
  sub_9ABC();
}

id sub_10138(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v6 = [v4 initWithString:v5];

  return v6;
}

id sub_101A8(void *a1, uint64_t a2)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)) initWithPurchase:a1 bag:a2];

  swift_unknownObjectRelease(a2);
  return v5;
}

id sub_10204(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)_convertErrorToNSError(_:)(a1);
  uint64_t v4 = sub_5F6C(&qword_7D638);
  uint64_t inited = swift_initStackObject(v4, v12);
  *(_OWORD *)(inited + sub_9C80(v0 + 16) = xmmword_5D0F0;
  v11[0] = 0x6573616863727570LL;
  v11[1] = 0xE800000000000000LL;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 96) = sub_C184(0LL, (unint64_t *)&unk_7D640, &OBJC_CLASS___AMSPurchase_ptr);
  *(void *)(inited + 72) = a2;
  id v6 = a2;
  uint64_t v7 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v7);
  id v9 = objc_msgSend(v3, "ams_errorByAddingUserInfo:", isa);

  return v9;
}

id sub_10338()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_bag];
  uint64_t v2 = sub_12788();
  sub_5FEC(v1, 1LL, 1LL, v2);
  swift_unknownObjectWeakInit( &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_presentingViewController],  0LL);
  v4.receiver = v0;
  v4.super_class = (Class)sub_10438();
  return objc_msgSendSuper2(&v4, "init");
}

id sub_103C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)sub_10438();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10438()
{
  return type metadata accessor for BuyActionImplementation(0LL);
}

uint64_t type metadata accessor for BuyActionImplementation(uint64_t a1)
{
  uint64_t result = qword_7D468;
  if (!qword_7D468) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BuyActionImplementation);
  }
  return result;
}

void sub_10478(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 2LL, v4, a1 + 80);
  }

void sub_104EC(uint64_t a1)
{
  if (!qword_7D478)
  {
    uint64_t v2 = type metadata accessor for Bag(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_7D478);
    }
  }

void sub_10540(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10560(uint64_t a1, uint64_t a2)
{
  v2[18] = sub_1269C();
  v2[19] = sub_126B4();
  v2[20] = v3;
  return sub_125D4();
}

uint64_t sub_105AC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v1 + 136)
           + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_presentingViewController);
  *(void *)(v1 + 168) = Strong;
  if (Strong)
  {
    sub_127A0();
    sub_125F8(v5, &qword_7D610, &OBJC_CLASS___AMSUIAuthenticateTask_ptr);
    id v6 = v2;
    id v7 = v0;
    uint64_t v8 = (void *)sub_57EB4(v6);
    *(void *)(v1 + 176) = v8;
    *(void *)(v1 + 184) = [v8 performAuthentication];
    *(void *)(v1 + 56) = v3;
    uint64_t v9 = sub_1266C((uint64_t)sub_106C0);
    *(void *)(v1 + 80) = _NSConcreteStackBlock;
    uint64_t v10 = (void *)(v1 + 80);
    v10[1] = 0x40000000LL;
    v10[2] = sub_10730;
    v10[3] = &unk_727A8;
    v10[4] = v9;
    sub_126A8(v9, "resultWithCompletion:");
    return sub_12614();
  }

  else
  {
    sub_12790();
    unint64_t v12 = sub_117C4();
    uint64_t v13 = sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v12);
    sub_12600(v13, v14);
    return sub_125C8(*(uint64_t (**)(void))(v1 + 8));
  }

uint64_t sub_106C0()
{
  return sub_125BC();
}

uint64_t sub_106F8()
{
  uint64_t v2 = sub_126D8();
  return sub_12638(v2, v3);
}

uint64_t sub_10730(uint64_t a1, void *a2, void *a3)
{
  return sub_10B80(a1, a2, a3, (uint64_t (*)(uint64_t, void *))sub_12530);
}

uint64_t sub_1073C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7D5D0);
  uint64_t v5 = sub_125B0(v4, (uint64_t)&protocol self-conformance witness table for Error);
  *id v6 = a2;
  return swift_continuation_throwingResumeWithError(a1, v5);
}

uint64_t sub_10784(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 4Hasher.init(_seed:)(v3, 0LL) = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_107A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter(v5);
  return swift_task_switch(sub_10818, v6, v7);
}

uint64_t sub_10818()
{
  *(void *)(v2 + 56) = sub_12780();
  id v4 = v3;
  id v5 = v1;
  id v6 = v0;
  uint64_t v7 = (void *)sub_12770();
  *(void *)(v2 + 64) = v7;
  uint64_t v8 = sub_127B4(v7, (uint64_t)sub_12534);
  return sub_10560((uint64_t)v8, v9);
}

uint64_t sub_10878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7D580);
  __chkstk_darwin(v4);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  sub_5FEC((uint64_t)v6, 1LL, 1LL, v7);
  uint64_t v8 = (void *)swift_allocObject(&unk_726C0, 48LL, 7LL);
  v8[2] = 0LL;
  v8[3] = 0LL;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = (void *)swift_allocObject(&unk_726E8, 48LL, 7LL);
  v9[2] = 0LL;
  v9[3] = 0LL;
  v9[4] = &unk_7D590;
  v9[5] = v8;
  sub_11A48((uint64_t)v6, (uint64_t)&unk_7D5A0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_10954(uint64_t a1, uint64_t a2)
{
  v2[18] = sub_1269C();
  v2[19] = sub_126B4();
  v2[20] = v3;
  return sub_125D4();
}

uint64_t sub_109A0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v1 + 136)
           + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_presentingViewController);
  *(void *)(v1 + 168) = Strong;
  if (Strong)
  {
    sub_127A0();
    sub_125F8(v5, &qword_7D5F0, &OBJC_CLASS___AMSUIAlertDialogTask_ptr);
    id v6 = v2;
    id v7 = v0;
    uint64_t v8 = (void *)sub_57EB4(v6);
    *(void *)(v1 + 176) = v8;
    *(void *)(v1 + 184) = [v8 present];
    *(void *)(v1 + 56) = v3;
    uint64_t v9 = sub_1266C((uint64_t)sub_10AB4);
    *(void *)(v1 + 80) = _NSConcreteStackBlock;
    uint64_t v10 = (void *)(v1 + 80);
    v10[1] = 0x40000000LL;
    v10[2] = sub_10B74;
    v10[3] = &unk_72768;
    v10[4] = v9;
    sub_126A8(v9, "resultWithCompletion:");
    return sub_12614();
  }

  else
  {
    sub_12790();
    unint64_t v12 = sub_117C4();
    uint64_t v13 = sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v12);
    sub_12600(v13, v14);
    return sub_125C8(*(uint64_t (**)(void))(v1 + 8));
  }

uint64_t sub_10AB4()
{
  return sub_125BC();
}

uint64_t sub_10AEC()
{
  sub_12778();
  uint64_t v2 = sub_126D8();
  return sub_12638(v2, v3);
}

uint64_t sub_10B24()
{
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v4 = sub_12790();
  swift_willThrow(v4);

  return sub_125C8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10B74(uint64_t a1, void *a2, void *a3)
{
  return sub_10B80(a1, a2, a3, (uint64_t (*)(uint64_t, void *))sub_10784);
}

uint64_t sub_10B80(uint64_t result, void *a2, void *a3, uint64_t (*a4)(uint64_t, void *))
{
  uint64_t v4 = *(void *)(result + 32);
  if (a3) {
    return sub_1073C(v4, (uint64_t)a3);
  }
  if (a2) {
    return a4(v4, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_10BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter(v5);
  return swift_task_switch(sub_10C68, v6, v7);
}

uint64_t sub_10C68()
{
  *(void *)(v2 + 56) = sub_12780();
  id v4 = v3;
  id v5 = v1;
  id v6 = v0;
  uint64_t v7 = (void *)sub_12770();
  *(void *)(v2 + 64) = v7;
  uint64_t v8 = sub_127B4(v7, (uint64_t)sub_10CC8);
  return sub_10954((uint64_t)v8, v9);
}

uint64_t sub_10CC8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(*v2 + 64);
  id v6 = *(void **)(*v2 + 40);
  uint64_t v8 = *(void **)(*v2 + 16);
  uint64_t v7 = *(void **)(*v2 + 24);
  uint64_t v9 = *v2;
  swift_task_dealloc(v5);

  uint64_t v10 = *(void (***)(void, void, void))(v9 + 56);
  if (v3)
  {
    uint64_t v11 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(void, void, void *))v10)[2](v10, 0LL, v11);

    _Block_release(v10);
  }

  else
  {
    ((void (**)(void, void *, void))v10)[2](v10, a1, 0LL);
    _Block_release(v10);
  }

  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t sub_10D98(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  uint64_t v4 = sub_5F6C(&qword_7D5C0);
  v3[22] = sub_126C0(*(void *)(v4 - 8));
  uint64_t v5 = sub_12788();
  v3[23] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[24] = v6;
  v3[25] = sub_126C0(v6);
  type metadata accessor for MainActor(0LL);
  v3[26] = sub_1269C();
  v3[27] = sub_126B4();
  v3[28] = v7;
  return sub_125D4();
}

uint64_t sub_10E20()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168) + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_bag;
  swift_beginAccess(v3, v0 + 120, 0LL, 0LL);
  sub_11CD0(v3, v1);
  if (sub_6028(v1, 1LL, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 176);
    swift_release();
    sub_DBD8(v4, &qword_7D5C0);
    unint64_t v5 = sub_117C4();
    uint64_t v6 = sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v5);
    *uint64_t v7 = 0;
    swift_willThrow(v6);
  }

  else
  {
    uint64_t v8 = *(void *)(v0 + 168);
    (*(void (**)(void, void, void))(*(void *)(v0 + 192) + 32LL))( *(void *)(v0 + 200),  *(void *)(v0 + 176),  *(void *)(v0 + 184));
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_presentingViewController);
    *(void *)(v0 + 232) = Strong;
    if (Strong)
    {
      uint64_t v10 = (void *)Strong;
      uint64_t v11 = v0 + 16;
      unint64_t v12 = *(void **)(v0 + 152);
      uint64_t v13 = *(void **)(v0 + 160);
      sub_125F8(Strong, &qword_7D5C8, &OBJC_CLASS___AMSUIEngagementTask_ptr);
      id v14 = v13;
      uint64_t v15 = Bag.amsBag.getter();
      id v16 = sub_111A4(v14, v15, v10);
      *(void *)(v0 + 240) = v16;
      id v17 = [v12 clientInfo];
      [v16 setClientInfo:v17];

      *(void *)(v0 + 248) = [v16 presentEngagement];
      *(void *)(v0 + 56) = v0 + 144;
      uint64_t v18 = sub_1266C((uint64_t)sub_11060);
      *(void *)(v0 + 80) = _NSConcreteStackBlock;
      uint64_t v19 = (void *)(v0 + 80);
      v19[1] = 0x40000000LL;
      v19[2] = sub_10730;
      v19[3] = &unk_72728;
      v19[4] = v18;
      sub_126A8(v18, "resultWithCompletion:");
      return swift_continuation_await(v11);
    }

    uint64_t v21 = *(void *)(v0 + 200);
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 192);
    swift_release();
    unint64_t v24 = sub_117C4();
    uint64_t v25 = sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v24);
    sub_12600(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }

  sub_12758();
  sub_12798();
  return sub_125E0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_11060()
{
  *(void *)(*(void *)v0 + 256LL) = *(void *)(*(void *)v0 + 48LL);
  return sub_125BC();
}

uint64_t sub_110B4()
{
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = *(void **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 176);

  sub_12778();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  sub_12798();
  swift_task_dealloc(v6);
  uint64_t v7 = sub_126D8();
  return v8(v7);
}

uint64_t sub_11138()
{
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v3 = *(void **)(v0 + 232);
  uint64_t v2 = *(void **)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v7 = swift_release();
  swift_willThrow(v7);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_12758();
  sub_12798();
  return sub_125E0(*(uint64_t (**)(void))(v0 + 8));
}

id sub_111A4(void *a1, uint64_t a2, void *a3)
{
  id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)) initWithRequest:a1 bag:a2 presentingViewController:a3];

  swift_unknownObjectRelease(a2);
  return v7;
}

uint64_t sub_11220(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = sub_126F8();
  uint64_t v15 = (void *)swift_allocObject(v12, v13, v14);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = v11;
  v15[5] = a1;
  id v16 = a3;
  id v17 = a4;
  id v18 = a1;
  return sub_10878(a7, (uint64_t)v15);
}

uint64_t sub_11290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter(v5);
  return swift_task_switch(sub_11300, v6, v7);
}

uint64_t sub_11300()
{
  v2[7] = (uint64_t)sub_12780();
  id v4 = v3;
  id v5 = v1;
  id v6 = v0;
  uint64_t v7 = (void *)sub_12770();
  v2[8] = (uint64_t)v7;
  *uint64_t v7 = v2;
  v7[1] = sub_12534;
  return sub_10D98(v2[2], v2[3]);
}

void sub_11370()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_presentingViewController);
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong view];
    if (v3)
    {
      id v4 = v3;
      id v5 = [v3 window];
      if (v5)
      {
        id v6 = v5;
        id v7 = [v5 windowScene];
        if (v7)
        {
          uint64_t v8 = v7;
          id v9 = [v7 _sceneIdentifier];
          static String._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);
        }

        else
        {
          unint64_t v17 = sub_117C4();
          sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v17);
          sub_12590(v18, 1);
        }
      }

      else
      {
        unint64_t v15 = sub_117C4();
        sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v15);
        sub_12590(v16, 4);
      }
    }

    else
    {
      unint64_t v13 = sub_117C4();
      sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v13);
      sub_12590(v14, 2);
    }
  }

  else
  {
    unint64_t v11 = sub_117C4();
    sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v11);
    sub_12590(v12, 3);
  }

id sub_115D4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23BuyActionImplementation_presentingViewController);
  if (Strong)
  {
    id v3 = Strong;
    id v4 = [Strong view];
    if (v4)
    {
      id v5 = v4;
      id v6 = [v4 window];
      if (v6)
      {
        id v1 = v6;
      }

      else
      {
        unint64_t v11 = sub_117C4();
        sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v11);
        sub_12590(v12, 4);
      }
    }

    else
    {
      unint64_t v9 = sub_117C4();
      sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v9);
      sub_12590(v10, 2);
    }
  }

  else
  {
    unint64_t v7 = sub_117C4();
    sub_125B0((uint64_t)&type metadata for BuyActionImplementation.PresentationError, v7);
    sub_12590(v8, 3);
  }

  return v1;
}

unint64_t sub_11784()
{
  unint64_t result = qword_7D540;
  if (!qword_7D540)
  {
    uint64_t v1 = type metadata accessor for BuyAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5D4B0, v1);
    atomic_store(result, (unint64_t *)&qword_7D540);
  }

  return result;
}

unint64_t sub_117C4()
{
  unint64_t result = qword_7D568;
  if (!qword_7D568)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D68C, &type metadata for BuyActionImplementation.PresentationError);
    atomic_store(result, (unint64_t *)&qword_7D568);
  }

  return result;
}

uint64_t sub_11804()
{
  uint64_t v1 = (void *)sub_126D0();
  *(void *)(v0 + sub_9C80(v0 + 16) = v1;
  uint64_t v2 = sub_1254C(v1, (uint64_t)sub_12524);
  return sub_12538(v2, v3, v4, v5, v6);
}

uint64_t sub_11844(uint64_t a1)
{
  uint64_t v2 = a1;
  return Promise.resolve(_:)(&v2);
}

uint64_t sub_11874(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  Promise.reject(_:)();
  return swift_errorRelease(v3);
}

uint64_t sub_118B0(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc(a3[1]);
  *(void *)(v3 + sub_9C80(v0 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_12524;
  return v6();
}

uint64_t sub_11908()
{
  uint64_t v1 = (void *)sub_126D0();
  *(void *)(v0 + sub_9C80(v0 + 16) = v1;
  uint64_t v2 = sub_1254C(v1, (uint64_t)sub_12524);
  return sub_12538(v2, v3, v4, v5, v6);
}

uint64_t sub_11948(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc(a4[1]);
  *(void *)(v4 + sub_9C80(v0 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_12524;
  return v7();
}

uint64_t sub_119A0()
{
  uint64_t v1 = sub_126F8();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_119C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  id v6 = (int *)v1[4];
  unint64_t v7 = (void *)swift_task_alloc(dword_7D59C);
  *(void *)(v2 + sub_9C80(v0 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_12524;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_7D598 + dword_7D598))( a1,  v4,  v5,  v6);
}

uint64_t sub_11A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  if (sub_6028(a1, 1LL, v6) == 1)
  {
    sub_DBD8(a1, &qword_7D580);
    uint64_t v7 = 7168LL;
  }

  else
  {
    unsigned __int8 v8 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
    uint64_t v7 = v8 | 0x1C00LL;
  }

  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t ObjectType = swift_getObjectType(*(void *)(a3 + 16));
    swift_unknownObjectRetain(v9);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType);
    uint64_t v13 = v12;
    swift_unknownObjectRelease(v9);
  }

  else
  {
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
  }

  uint64_t v14 = swift_allocObject(&unk_72710, 32LL, 7LL);
  *(void *)(v14 + sub_9C80(v0 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v17[0] = 0LL;
    v17[1] = 0LL;
    unint64_t v15 = v17;
    v17[2] = v11;
    v17[3] = v13;
  }

  else
  {
    unint64_t v15 = 0LL;
  }

  return swift_task_create(v7, v15, (char *)&type metadata for () + 8, &unk_7D5B0, v14);
}

uint64_t sub_11B8C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc(a2[1]);
  *(void *)(v2 + sub_9C80(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_11BF0;
  return v6(a1);
}

uint64_t sub_11BF0()
{
  return sub_1267C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_11C18()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_11C3C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_7D5AC);
  *(void *)(v2 + sub_9C80(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_11CAC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_7D5A8 + dword_7D5A8))(a1, v4);
}

uint64_t sub_11CAC()
{
  return sub_1267C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_11CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7D5C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_11D1C()
{
  uint64_t v1 = (void *)sub_126D0();
  *(void *)(v0 + sub_9C80(v0 + 16) = v1;
  uint64_t v2 = sub_1254C(v1, (uint64_t)sub_11D5C);
  return sub_12538(v2, v3, v4, v5, v6);
}

uint64_t sub_11D5C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11D8C()
{
  _Block_release(*(const void **)(v0 + 32));
  uint64_t v1 = sub_126F8();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_11DC0()
{
  uint64_t v1 = (void *)sub_126D0();
  *(void *)(v0 + sub_9C80(v0 + 16) = v1;
  uint64_t v2 = sub_1254C(v1, (uint64_t)sub_12524);
  return sub_12538(v2, v3, v4, v5, v6);
}

uint64_t sub_11E00()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_11E24(uint64_t a1)
{
  return sub_10204(a1, *(void **)(v1 + 16));
}

uint64_t sub_11E2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v26 = a1;
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  sub_22FB8(&v29);
  uint64_t v9 = *((void *)&v29 + 1);
  if (!*((void *)&v29 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease(v26);
    sub_12338(v31);
    return swift_release();
  }

  while (1)
  {
    uint64_t v10 = v29;
    sub_12340(&v30, v28);
    uint64_t v11 = *a5;
    unint64_t v13 = sub_21FB8(v10, v9);
    uint64_t v14 = *(void *)(v11 + 16);
    BOOL v15 = (v12 & 1) == 0;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v16 = v12;
    if (*(void *)(v11 + 24) >= v14 + v15)
    {
      if ((a4 & 1) != 0)
      {
        if ((v12 & 1) != 0) {
          goto LABEL_9;
        }
      }

      else
      {
        sub_5F6C(&qword_7D670);
        _NativeDictionary.copy()();
        if ((v16 & 1) != 0) {
          goto LABEL_9;
        }
      }
    }

    else
    {
      sub_22478();
      unint64_t v17 = sub_21FB8(v10, v9);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_17;
      }
      unint64_t v13 = v17;
      if ((v16 & 1) != 0)
      {
LABEL_9:
        sub_12350((uint64_t)v28, (uint64_t)v27);
        sub_62AC(v28);
        swift_bridgeObjectRelease(v9);
        uint64_t v19 = (void *)(*(void *)(*a5 + 56) + 32 * v13);
        sub_62AC(v19);
        sub_12340(v27, v19);
        goto LABEL_13;
      }
    }

    uint64_t v20 = (void *)*a5;
    *(void *)(*a5 + 8 * (v13 >> 6) + 64) |= 1LL << v13;
    uint64_t v21 = (uint64_t *)(v20[6] + 16 * v13);
    *uint64_t v21 = v10;
    v21[1] = v9;
    sub_12340(v28, (_OWORD *)(v20[7] + 32 * v13));
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1LL);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_16;
    }
    v20[2] = v24;
LABEL_13:
    sub_22FB8(&v29);
    uint64_t v9 = *((void *)&v29 + 1);
    a4 = 1;
    if (!*((void *)&v29 + 1)) {
      goto LABEL_14;
    }
  }

  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_12044(void *a1)
{
  id v1 = [a1 responseDictionary];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v1,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  return v3;
}

uint64_t sub_120AC(uint64_t *a1)
{
  return sub_11844(*a1);
}

uint64_t sub_120B4(uint64_t a1, uint64_t a2, void *a3)
{
  v9[3] = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  v9[4] = &protocol witness table for OS_dispatch_queue;
  v9[0] = a3;
  uint64_t v6 = Promise.__allocating_init()(a3);
  uint64_t v7 = (void *)swift_allocObject(&unk_727F8, 40LL, 7LL);
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  swift_retain_n(v6, 2LL);
  swift_retain(a2);
  Promise.then(perform:orCatchError:on:)(sub_121A0, v6, sub_121D4, v7, v9);
  swift_release();
  swift_release();
  sub_62AC(v9);
  return v6;
}

uint64_t sub_121A0(uint64_t *a1)
{
  return sub_120AC(a1);
}

uint64_t sub_121A8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_121D4(uint64_t a1)
{
  return sub_11874(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_121E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7D5C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_12228(void *a1)
{
  return (*(uint64_t (**)(void))(*(void *)v1 + 200LL))(*a1);
}

void sub_12238(void **a1, void (*a2)(void **, void))
{
}

uint64_t sub_12240(void *a1, uint64_t a2, uint64_t a3)
{
  v10[3] = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a1;
  uint64_t v6 = swift_allocObject(&unk_72820, 32LL, 7LL);
  *(void *)(v6 + sub_9C80(v0 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = swift_allocObject(&unk_72848, 32LL, 7LL);
  *(void *)(v7 + sub_9C80(v0 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_retain_n(a3, 2LL);
  id v8 = a1;
  Promise.then(perform:orCatchError:on:)(sub_12328, v6, sub_12330, v7, v10);
  swift_release();
  swift_release();
  return sub_62AC(v10);
}

void sub_12328(void **a1)
{
}

void sub_12330(uint64_t a1)
{
}

uint64_t sub_12338(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

_OWORD *sub_12340(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_12350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t getEnumTagSinglePayload for BuyActionImplementation.PresentationError( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for BuyActionImplementation.PresentationError( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_12460 + 4 * byte_5D595[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_12494 + 4 * byte_5D590[v4]))();
}

uint64_t sub_12494(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1249C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x124A4LL);
  }
  return result;
}

uint64_t sub_124B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x124B8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_124BC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_124C4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BuyActionImplementation.PresentationError()
{
  return &type metadata for BuyActionImplementation.PresentationError;
}

unint64_t sub_124E4()
{
  unint64_t result = qword_7D678;
  if (!qword_7D678)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D664, &type metadata for BuyActionImplementation.PresentationError);
    atomic_store(result, (unint64_t *)&qword_7D678);
  }

  return result;
}

uint64_t sub_12538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1254C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_12570()
{
  uint64_t v2 = *v0;
  *(void *)(v1 - 8) = *v0;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t sub_12590@<X0>(_BYTE *a1@<X1>, char a2@<W8>)
{
  *a1 = a2;
  return swift_willThrow();
}

uint64_t sub_1259C(uint64_t a1)
{
  return inject<A, B>(_:from:)(a1, v1, a1, v2);
}

uint64_t sub_125B0(uint64_t a1, uint64_t a2)
{
  return swift_allocError(a1, a2, 0LL, 0LL);
}

uint64_t sub_125BC()
{
  return ((uint64_t (*)(void))swift_task_switch)();
}

uint64_t sub_125C8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_125D4()
{
  return ((uint64_t (*)(void))swift_task_switch)();
}

uint64_t sub_125E0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_125F8(uint64_t a1, unint64_t *a2, void *a3)
{
  return sub_C184(0LL, a2, a3);
}

uint64_t sub_12600(uint64_t a1, _BYTE *a2)
{
  *a2 = 3;
  return swift_willThrow();
}

uint64_t sub_12614()
{
  return ((uint64_t (*)(void))swift_continuation_await)();
}

uint64_t sub_12628()
{
  return swift_release(*(void *)(v0 + 48));
}

uint64_t sub_12638(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_12648()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)(v1 - 8);
  *uint64_t v3 = *v0;
  *uint64_t v3 = *v0;
  *(void *)(v2 + 192) = *(void *)(v2 + 48);
}

uint64_t sub_1266C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + sub_9C80(v0 + 16) = v2;
  *(void *)(v2 + 24) = a1;
  return swift_continuation_init(v1, 1LL);
}

uint64_t sub_1267C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_12688(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 112);
}

uint64_t sub_1269C()
{
  return static MainActor.shared.getter();
}

id sub_126A8(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_126B4()
{
  return dispatch thunk of Actor.unownedExecutor.getter(v0);
}

uint64_t sub_126C0@<X0>(uint64_t a1@<X8>)
{
  return swift_task_alloc((*(void *)(a1 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
}

uint64_t sub_126D0()
{
  return swift_task_alloc(*(unsigned int *)(v0 + 4));
}

uint64_t sub_126D8()
{
  return v0;
}

void sub_126E8()
{
}

uint64_t sub_126F8()
{
  return v0;
}

void sub_12708()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

  ;
}

  ;
}

uint64_t sub_12738(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 128) = a2;
  *(void *)(v3 + 136) = v2;
  return type metadata accessor for MainActor(0LL);
}

  ;
}

uint64_t sub_12758()
{
  return swift_task_dealloc(*(void *)(v0 + 200));
}

id sub_12764(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, 1);
}

uint64_t sub_12770()
{
  return swift_task_alloc(v0);
}

uint64_t sub_12778()
{
  return swift_release(v0);
}

void *sub_12780()
{
  return _Block_copy(v0);
}

uint64_t sub_12788()
{
  return type metadata accessor for Bag(0LL);
}

uint64_t sub_12790()
{
  return swift_release(*(void *)(v0 + 144));
}

uint64_t sub_12798()
{
  return swift_task_dealloc(v0);
}

  ;
}

void *sub_127B4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *unint64_t result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_127C8()
{
  return sub_DBD8(v1 - 112, v0);
}

uint64_t sub_127D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for JSServiceRequest(0LL);
  __chkstk_darwin(v5);
  sub_F76C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_F76C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for CallbackAction(0LL);
  uint64_t v29 = a1;
  sub_4E84(0x654D6E6F69746361LL, 0xED00007363697274LL, v14, (uint64_t)sub_12B2C, (uint64_t)v28, v15, v16, v17);
  if (v2)
  {
    uint64_t v18 = type metadata accessor for JSONObject(0LL);
    sub_6D14(v18);
    uint64_t v19 = type metadata accessor for JSONContext(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(a1, v19);
  }

  else
  {
    uint64_t v21 = *(int *)(v14 + 20);
    uint64_t v30 = a2;
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a2 + v21, v13, v9);
    __chkstk_darwin(v22);
    *(void *)&v28[-16] = a1;
    sub_5154(0x5265636976726573LL, 0xEE00747365757165LL, v14, (uint64_t)sub_12B54, (uint64_t)&v28[-32], v23, v24, v25);
    uint64_t v26 = type metadata accessor for JSONObject(0LL);
    sub_6D14(v26);
    uint64_t v27 = sub_133D4();
    sub_ACD0(v27);
    return sub_12B7C(v8, v30);
  }

uint64_t sub_129C8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for JSONContext(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  sub_F76C();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for JSONObject(0LL);
  __chkstk_darwin(v15);
  sub_F76C();
  uint64_t v18 = v17 - v16;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v17 - v16, a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  a3(v18, v14);
  uint64_t v20 = a4(0LL);
  return sub_5FEC(a5, 0LL, 1LL, v20);
}

uint64_t sub_12AE0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_127D4(a1, a2);
}

uint64_t type metadata accessor for CallbackAction(uint64_t a1)
{
  uint64_t result = qword_7D6D8;
  if (!qword_7D6D8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CallbackAction);
  }
  return result;
}

uint64_t sub_12B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_129C8( a1,  *(void *)(v2 + 16),  (void (*)(uint64_t, uint64_t))&ActionMetrics.init(deserializing:using:),  (uint64_t (*)(void))&type metadata accessor for ActionMetrics,  a2);
}

uint64_t sub_12B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_129C8( a1,  *(void *)(v2 + 16),  (void (*)(uint64_t, uint64_t))&JSServiceRequest.init(deserializing:using:),  (uint64_t (*)(void))&type metadata accessor for JSServiceRequest,  a2);
}

uint64_t sub_12B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSServiceRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t *sub_12BC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v14);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[2];
    a1[2] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for JSServiceRequest(0LL) + 24);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for URL(0LL);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    if (sub_6028((uint64_t)v11, 1LL, v12))
    {
      uint64_t v13 = sub_5F6C((uint64_t *)&unk_7DE50);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
      sub_5FEC((uint64_t)v10, 0LL, 1LL, v12);
    }

    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for ActionMetrics(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v16, v17, v18);
  }

  return v4;
}

uint64_t sub_12CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for JSServiceRequest(0LL) + 24);
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
}

void *sub_12D98(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[2];
  a1[2] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for JSServiceRequest(0LL) + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL(0LL);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (sub_6028((uint64_t)v10, 1LL, v11))
  {
    uint64_t v12 = sub_5F6C((uint64_t *)&unk_7DE50);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
  }

  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
  return a1;
}

void *sub_12EA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a1[2];
  uint64_t v9 = a2[2];
  a1[2] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = *(int *)(type metadata accessor for JSServiceRequest(0LL) + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for URL(0LL);
  int v14 = sub_6028((uint64_t)v11, 1LL, v13);
  int v15 = sub_6028((uint64_t)v12, 1LL, v13);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v17 = sub_5F6C((uint64_t *)&unk_7DE50);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16LL))(v11, v12, v13);
  sub_5FEC((uint64_t)v11, 0LL, 1LL, v13);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24LL))(v19, v20, v21);
  return a1;
}

uint64_t sub_13018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + sub_9C80(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for JSServiceRequest(0LL) + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL(0LL);
  if (sub_6028((uint64_t)v8, 1LL, v9))
  {
    uint64_t v10 = sub_5F6C((uint64_t *)&unk_7DE50);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
    sub_5FEC((uint64_t)v7, 0LL, 1LL, v9);
  }

  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))(v12, v13, v14);
  return a1;
}

void *sub_13110(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = *(int *)(type metadata accessor for JSServiceRequest(0LL) + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL(0LL);
  int v13 = sub_6028((uint64_t)v10, 1LL, v12);
  int v14 = sub_6028((uint64_t)v11, 1LL, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }

  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_5F6C((uint64_t *)&unk_7DE50);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
  sub_5FEC((uint64_t)v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40LL))(v18, v19, v20);
  return a1;
}

uint64_t sub_13268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13274);
}

uint64_t sub_13274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_133C4();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)v3)
  {
    uint64_t v7 = v6;
    uint64_t v8 = v4;
  }

  else
  {
    uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
    uint64_t v8 = v4 + *(int *)(a3 + 20);
  }

  return sub_6028(v8, v3, v7);
}

uint64_t sub_132D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_132DC);
}

uint64_t sub_132DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_133C4();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = v5;
  }

  else
  {
    uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
    uint64_t v10 = v5 + *(int *)(a4 + 20);
  }

  return sub_5FEC(v10, v4, v4, v9);
}

uint64_t sub_13340(uint64_t a1)
{
  uint64_t result = type metadata accessor for JSServiceRequest(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for ActionMetrics(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 2LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_133C4()
{
  return type metadata accessor for JSServiceRequest(0LL);
}

uint64_t sub_133D4()
{
  return type metadata accessor for JSONContext(0LL);
}

void sub_133E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_5F6C((uint64_t *)&unk_7DE50);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for JSServiceRequest(0LL);
  __chkstk_darwin(v11);
  int v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = a1[2];
  if (v14) {
    uint64_t v15 = a1[2];
  }
  else {
    uint64_t v15 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  }
  uint64_t v53 = v15;
  sub_D770(a2, (uint64_t)v52, &qword_7F920);
  uint64_t v39 = a2;
  uint64_t v38 = v11;
  if (v52[32] == 255)
  {
    sub_14E34();
  }

  else
  {
    sub_D770((uint64_t)v52, (uint64_t)&v46, &qword_7F920);
    if (!v48)
    {
      uint64_t v16 = v46;
      v45[0] = 0xD000000000000012LL;
      v45[1] = 0x80000000000638C0LL;
      sub_14E34();
      AnyHashable.init<A>(_:)(v45, &type metadata for String, &protocol witness table for String);
      swift_getErrorValue(v16, v43, v40);
      uint64_t v17 = sub_1D7E4(v41, v42);
      v45[3] = sub_5F6C(&qword_7D668);
      v45[0] = v17;
      sub_14E28((uint64_t)v45);
      swift_errorRelease(v16);
      goto LABEL_12;
    }

    if (v48 == 1)
    {
      sub_D708((uint64_t)&v46, (uint64_t)v45, &qword_7DDE0);
      v44[0] = 0xD000000000000013LL;
      v44[1] = 0x80000000000638E0LL;
      sub_14E34();
      AnyHashable.init<A>(_:)(v44, &type metadata for String, &protocol witness table for String);
      sub_D770((uint64_t)v45, (uint64_t)v44, &qword_7DDE0);
      sub_14E28((uint64_t)v44);
      sub_14E78((uint64_t)v45);
      goto LABEL_12;
    }

    sub_14E34();
    sub_14BCC((uint64_t)&v46);
  }

  *(void *)&__int128 v46 = 0xD000000000000012LL;
  *((void *)&v46 + 1) = 0x80000000000638C0LL;
  AnyHashable.init<A>(_:)(&v46, &type metadata for String, &protocol witness table for String);
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  uint64_t v18 = sub_142DC(0LL, 0LL, (uint64_t)&v46);
  sub_14C38((uint64_t)&v46, &qword_7DDE0);
  *((void *)&v47 + 1) = sub_5F6C(&qword_7D668);
  *(void *)&__int128 v46 = v18;
  sub_14E28((uint64_t)&v46);
LABEL_12:
  sub_14C38((uint64_t)v52, &qword_7F920);
  uint64_t v19 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  uint64_t v20 = v53;
  swift_bridgeObjectRetain(v53);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
  v49[0] = v19;
  sub_148CC(v20, (uint64_t)sub_148B8, 0LL, isUniquelyReferenced_nonNull_native, (uint64_t)v49);
  uint64_t v22 = v49[0];
  sub_14E64();
  if (v14) {
    uint64_t v23 = v14;
  }
  else {
    uint64_t v23 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  }
  sub_14E34();
  char v24 = swift_isUniquelyReferenced_nonNull_native(v22);
  v49[0] = v22;
  sub_148CC(v23, (uint64_t)sub_148B8, 0LL, v24, (uint64_t)v49);
  uint64_t v25 = v49[0];
  sub_14E64();
  swift_bridgeObjectRelease(v20);
  uint64_t v26 = *a1;
  uint64_t v27 = a1[1];
  sub_D770((uint64_t)a1 + *(int *)(v38 + 24), (uint64_t)v10, (uint64_t *)&unk_7DE50);
  JSServiceRequest.init(fragment:options:url:)(v26, v27, v25, v10);
  uint64_t v28 = type metadata accessor for BaseObjectGraph(0LL);
  swift_bridgeObjectRetain(v27);
  inject<A, B>(_:from:)(&type metadata for JSService, a3, &type metadata for JSService, v28);
  JSService.perform(request:)(v13, v49[0]);
  sub_D770(v39, (uint64_t)v49, &qword_7F920);
  uint64_t v29 = swift_allocObject(&unk_72990, 57LL, 7LL);
  *(void *)(v29 + sub_9C80(v0 + 16) = a3;
  sub_D708((uint64_t)v49, v29 + 24, &qword_7F920);
  uint64_t v50 = type metadata accessor for SyncTaskScheduler(0LL);
  uint64_t v51 = &protocol witness table for SyncTaskScheduler;
  sub_14C00(v49);
  uint64_t v30 = swift_retain(a3);
  SyncTaskScheduler.init()(v30);
  uint64_t v31 = sub_5F6C(&qword_7D048);
  unint64_t v32 = sub_14B34();
  Promise.flatMap<A>(on:_:)(v49, sub_14B28, v29, v31, v32);
  swift_release();
  sub_14E5C();
  uint64_t v33 = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v34 = swift_retain(v4);
  uint64_t v35 = static OS_dispatch_queue.main.getter(v34);
  uint64_t v50 = v33;
  uint64_t v51 = &protocol witness table for OS_dispatch_queue;
  v49[0] = v35;
  Promise.then(perform:orCatchError:on:)(sub_14BBC, v4, nullsub_1, 0LL, v49);
  swift_release();
  sub_14E5C();
  uint64_t v36 = swift_retain(v4);
  uint64_t v37 = static OS_dispatch_queue.main.getter(v36);
  uint64_t v50 = v33;
  uint64_t v51 = &protocol witness table for OS_dispatch_queue;
  v49[0] = v37;
  Promise.then(perform:orCatchError:on:)(nullsub_1, 0LL, sub_14BC4, v4, v49);
  swift_release();
  swift_release();
  swift_release();
  sub_14E5C();
  sub_14C60((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for JSServiceRequest);
  sub_9ABC();
}

void sub_139D4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_12340((_OWORD *)a1, v3);
    sub_1E570(v3, a2);
    sub_D6CC(a2);
  }

  else
  {
    sub_14E78(a1);
    sub_2297C(a2, v3);
    sub_D6CC(a2);
    sub_14E78((uint64_t)v3);
  }

uint64_t sub_13A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for ResultingActionDispatcher.MetricsBehavior(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for JSONContext(0LL);
  uint64_t v24 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for BaseObjectGraph(0LL);
  inject<A, B>(_:from:)(v12, a2, v12, v15);
  uint64_t v16 = type metadata accessor for ActionFactory(0LL);
  swift_initStackObject(v16, v25);
  ActionFactory.action(deserializing:using:)(&v26, a1, v14);
  sub_6010(&v26, (uint64_t)&v29);
  uint64_t v17 = type metadata accessor for ResultingActionDispatcher(0LL);
  inject<A, B>(_:from:)(v17, a2, v17, v15);
  uint64_t v18 = v26;
  inject<A, B>(_:from:)(v8, a2, v8, v15);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
  uint64_t v19 = sub_5F6C(&qword_7D7E0);
  sub_5FEC((uint64_t)v7, 0LL, 1LL, v19);
  (*(void (**)(__int128 *, char *, uint64_t, uint64_t))(*(void *)v18 + 216LL))(&v29, v7, a2, v23);
  sub_14C60( (uint64_t)v7,  (uint64_t (*)(void))&type metadata accessor for ResultingActionDispatcher.MetricsBehavior);
  *((void *)&v27 + 1) = type metadata accessor for SyncTaskScheduler(0LL);
  uint64_t v28 = &protocol witness table for SyncTaskScheduler;
  sub_14C00(&v26);
  SyncTaskScheduler.init()();
  uint64_t v20 = Promise.map<A>(on:_:)(&v26, sub_13D28, 0LL, &type metadata for ResultingActionOutcome);
  swift_release();
  swift_release();
  sub_62AC(&v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_62AC(&v29);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v12);
  return v20;
}

double sub_13D28@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_13D34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v7 = type metadata accessor for LogMessage(0LL);
  uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
       + 2LL * *(void *)(*(void *)(v7 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v8 + sub_9C80(v0 + 16) = xmmword_5CD80;
  uint64_t v31 = type metadata accessor for CallbackActionImplementation();
  v30[0] = a2;
  uint64_t v9 = swift_retain(a2);
  id v10 = (id)AMSLogKey(v9);
  if (v10)
  {
    uint64_t v12 = v10;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);
    uint64_t v15 = v14;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v16._countAndFlagsBits = 0LL;
    v16._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t v17 = v31;
    uint64_t v18 = sub_7A94(v30, v31);
    uint64_t DynamicType = swift_getDynamicType(v18, v17, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v28);
    sub_14C38((uint64_t)v28, &qword_7DDE0);
    v20._countAndFlagsBits = 5972026LL;
    v20._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v28[0] = v13;
    v28[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v28);
    sub_14C38((uint64_t)v28, &qword_7DDE0);
    uint64_t v21 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v22._countAndFlagsBits = 0LL;
    v22._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = v31;
    uint64_t v24 = sub_7A94(v30, v31);
    uint64_t v25 = swift_getDynamicType(v24, v23, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v28[0] = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v28);
    sub_14C38((uint64_t)v28, &qword_7DDE0);
    uint64_t v21 = 58LL;
  }

  unint64_t v26 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v21);
  LogMessage.init(stringInterpolation:)(v5);
  type metadata accessor for Log();
  sub_62AC(v30);
  LogMessage.init(stringLiteral:)(0xD000000000000019LL, 0x8000000000063920LL);
  sub_2679C(v8);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_13F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v8 = type metadata accessor for LogMessage(0LL);
  uint64_t v9 = swift_allocObject( v7,  ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80LL))
       + 2LL * *(void *)(*(void *)(v8 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v8 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v9 + sub_9C80(v0 + 16) = xmmword_5CD80;
  uint64_t v38 = type metadata accessor for CallbackActionImplementation();
  v37[0] = a2;
  uint64_t v10 = swift_retain(a2);
  id v11 = (id)AMSLogKey(v10);
  if (v11)
  {
    uint64_t v13 = v11;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);
    uint64_t v16 = v15;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v17._countAndFlagsBits = 0LL;
    v17._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    uint64_t v18 = v38;
    uint64_t v19 = sub_7A94(v37, v38);
    uint64_t DynamicType = swift_getDynamicType(v19, v18, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v35[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v35);
    sub_14C38((uint64_t)v35, &qword_7DDE0);
    v21._countAndFlagsBits = 5972026LL;
    v21._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t MetatypeMetadata = &type metadata for String;
    v35[0] = v14;
    v35[1] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v35);
    sub_14C38((uint64_t)v35, &qword_7DDE0);
    uint64_t v22 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v23._countAndFlagsBits = 0LL;
    v23._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t v24 = v38;
    uint64_t v25 = sub_7A94(v37, v38);
    uint64_t v26 = swift_getDynamicType(v25, v24, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v35[0] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v35);
    sub_14C38((uint64_t)v35, &qword_7DDE0);
    uint64_t v22 = 58LL;
  }

  unint64_t v27 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v22);
  LogMessage.init(stringInterpolation:)(v6);
  type metadata accessor for Log();
  sub_62AC(v37);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(24LL, 1LL);
  v28._object = (void *)0x8000000000063900LL;
  v28._countAndFlagsBits = 0xD000000000000018LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  swift_getErrorValue(a1, v34, &v32);
  uint64_t v29 = v33;
  uint64_t v38 = v33;
  sub_14C00(v37);
  (*(void (**)(void))(*(void *)(v29 - 8) + 16LL))();
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v37);
  sub_14C38((uint64_t)v37, &qword_7DDE0);
  v30._countAndFlagsBits = 0LL;
  v30._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  LogMessage.init(stringInterpolation:)(v6);
  sub_2679C(v9);
  return swift_bridgeObjectRelease(v9);
}

uint64_t type metadata accessor for CallbackActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin28CallbackActionImplementation);
}

unint64_t sub_1427C()
{
  unint64_t result = qword_7D7B0;
  if (!qword_7D7B0)
  {
    uint64_t v1 = type metadata accessor for CallbackAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5D6D0, v1);
    atomic_store(result, (unint64_t *)&qword_7D7B0);
  }

  return result;
}

void sub_142BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_142DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = sub_14C88();
  uint64_t v6 = _getErrorEmbeddedNSError<A>(_:)(v5, &type metadata for CallbackActionImplementation.PerformError, v5);
  if (!v6) {
    uint64_t v6 = swift_allocError(&type metadata for CallbackActionImplementation.PerformError, v5, 0LL, 0LL);
  }
  uint64_t v7 = v6;
  uint64_t v8 = (void *)_convertErrorToNSError(_:)(v6);
  swift_errorRelease(v7);
  id v9 = [v8 code];
  id v10 = [v8 description];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);
  uint64_t v14 = v13;

  id v15 = [v8 domain];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);
  uint64_t v19 = v18;

  id v20 = [v8 userInfo];
  uint64_t v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v20,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);

  sub_1EB24(v21);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease(v21);
  sub_1464C((uint64_t)v9, 0, a1, a2, v12, v14, v17, v19, v23, a3);
  uint64_t v25 = v24;

  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v23);
  return v25;
}

uint64_t sub_14480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_C184(0LL, &qword_7D800, &OBJC_CLASS___NSError_ptr);
  unint64_t v7 = sub_14CF0();
  id v8 = v3;
  uint64_t v9 = _getErrorEmbeddedNSError<A>(_:)(&v35, v6, v7);
  if (v9)
  {
    uint64_t v10 = v9;
  }

  else
  {
    uint64_t v10 = swift_allocError(v6, v7, 0LL, 0LL);
    void *v11 = v35;
  }

  uint64_t v12 = (void *)_convertErrorToNSError(_:)(v10);
  uint64_t v13 = swift_errorRelease(v10);
  id v14 = sub_14E3C(v13, "code");
  id v15 = sub_14E3C((uint64_t)v14, "description");
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);
  uint64_t v19 = v18;

  id v21 = sub_14E3C(v20, "domain");
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);
  uint64_t v25 = v24;

  id v27 = sub_14E3C(v26, "userInfo");
  uint64_t v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v27,  &type metadata for String,  &type metadata for Any[8],  &protocol witness table for String);

  sub_1EB24(v28);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease(v28);
  sub_1464C((uint64_t)v14, 0, a1, a2, v17, v19, v23, v25, v30, a3);
  uint64_t v32 = v31;

  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v30);
  return v32;
}

void sub_1464C( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = sub_5F6C(&qword_7D638);
  uint64_t inited = swift_initStackObject(v17, v27);
  *(_OWORD *)(inited + sub_9C80(v0 + 16) = xmmword_5D750;
  uint64_t v25 = 1701080931LL;
  unint64_t v26 = 0xE400000000000000LL;
  sub_14E1C((uint64_t)&v25);
  *(void *)(inited + 96) = sub_5F6C(&qword_7D7F8);
  *(void *)(inited + 72) = a1;
  *(_BYTE *)(inited + 80) = a2 & 1;
  uint64_t v25 = 0x6972745365646F63LL;
  unint64_t v26 = 0xEA0000000000676ELL;
  sub_14E1C((uint64_t)&v25);
  uint64_t v19 = sub_5F6C(&qword_7D200);
  *(void *)(inited + 168) = v19;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  uint64_t v25 = 0x7470697263736564LL;
  unint64_t v26 = 0xEB000000006E6F69LL;
  swift_bridgeObjectRetain(a4);
  sub_14E1C((uint64_t)&v25);
  *(void *)(inited + 240) = v19;
  *(void *)(inited + 2sub_9C80(v0 + 16) = a5;
  *(void *)(inited + 224) = a6;
  uint64_t v25 = 0x6E69616D6F64LL;
  unint64_t v26 = 0xE600000000000000LL;
  swift_bridgeObjectRetain(a6);
  sub_14E1C((uint64_t)&v25);
  *(void *)(inited + 312) = v19;
  *(void *)(inited + 288) = a7;
  *(void *)(inited + 296) = a8;
  uint64_t v25 = 0x6F666E4972657375LL;
  unint64_t v26 = 0xE800000000000000LL;
  swift_bridgeObjectRetain(a8);
  sub_14E1C((uint64_t)&v25);
  uint64_t v20 = sub_5F6C(&qword_7DDE0);
  *(void *)(inited + 384) = v20;
  uint64_t v21 = sub_14E50((uint64_t)&unk_729B8);
  uint64_t v22 = (void *)(v21 + 16);
  *(void *)(inited + 360) = v21;
  if (a9)
  {
    sub_1DE08(a9, v22);
  }

  else
  {
    *(_OWORD *)uint64_t v22 = 0u;
    *(_OWORD *)(v21 + 32) = 0u;
  }

  uint64_t v25 = 0x65756C6176LL;
  unint64_t v26 = 0xE500000000000000LL;
  AnyHashable.init<A>(_:)(&v25, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 456) = v20;
  uint64_t v23 = sub_14E50((uint64_t)&unk_729B8);
  *(void *)(inited + 432) = v23;
  sub_D770(a10, v23 + 16, &qword_7DDE0);
  Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  sub_9ABC();
}

uint64_t sub_148B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_221FC(a2, a2 + 40, a1);
}

uint64_t sub_148CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = swift_retain(a3);
  sub_14E44(v10, v11, v12, v13, v14, v15, v16, v17, v56, a1, v61, *((uint64_t *)&v61 + 1), v62, v63, v64[0]);
  if (!*((void *)&v69 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease(v59);
    sub_12338(v72);
    return swift_release();
  }

  while (1)
  {
    __int128 v65 = v68;
    __int128 v66 = v69;
    uint64_t v67 = v70;
    uint64_t v18 = sub_12340(&v71, v64);
    unint64_t v27 = sub_14E6C((uint64_t)v18, v19, v20, v21, v22, v23, v24, v25, v57, v59);
    uint64_t v28 = v5[2];
    BOOL v29 = (v26 & 1) == 0;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v30 = v26;
    if (v5[3] >= v28 + v29)
    {
      if ((a4 & 1) != 0)
      {
        if ((v26 & 1) != 0) {
          goto LABEL_9;
        }
      }

      else
      {
        sub_5F6C(&qword_7D7E8);
        _NativeDictionary.copy()();
        if ((v30 & 1) != 0) {
          goto LABEL_9;
        }
      }
    }

    else
    {
      sub_226F0();
      unint64_t v39 = sub_14E6C(v31, v32, v33, v34, v35, v36, v37, v38, v58, v60);
      if ((v30 & 1) != (v40 & 1)) {
        goto LABEL_17;
      }
      unint64_t v27 = v39;
      if ((v30 & 1) != 0)
      {
LABEL_9:
        sub_12350((uint64_t)v64, (uint64_t)&v61);
        sub_62AC(v64);
        sub_D6CC((uint64_t)&v65);
        unint64_t v5 = (void *)(*(void *)(*(void *)a5 + 56LL) + 32 * v27);
        sub_62AC(v5);
        uint64_t v41 = sub_12340(&v61, v5);
        goto LABEL_13;
      }
    }

    unint64_t v5 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v27 >> 6) + 64) |= 1LL << v27;
    uint64_t v49 = v5[6] + 40 * v27;
    __int128 v50 = v65;
    __int128 v51 = v66;
    *(void *)(v49 + 32) = v67;
    *(_OWORD *)uint64_t v49 = v50;
    *(_OWORD *)(v49 + sub_9C80(v0 + 16) = v51;
    uint64_t v41 = sub_12340(v64, (_OWORD *)(v5[7] + 32 * v27));
    uint64_t v52 = v5[2];
    BOOL v53 = __OFADD__(v52, 1LL);
    uint64_t v54 = v52 + 1;
    if (v53) {
      goto LABEL_16;
    }
    void v5[2] = v54;
LABEL_13:
    sub_14E44((uint64_t)v41, v42, v43, v44, v45, v46, v47, v48, v58, v60, v61, *((uint64_t *)&v61 + 1), v62, v63, v64[0]);
    a4 = 1;
    if (!*((void *)&v69 + 1)) {
      goto LABEL_14;
    }
  }

  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

uint64_t sub_14AD8()
{
  uint64_t v1 = (void *)(v0 + 24);
  if (*(_BYTE *)(v0 + 56) == 1)
  {
    if (*(void *)(v0 + 48)) {
      sub_62AC(v1);
    }
  }

  else if (!*(_BYTE *)(v0 + 56))
  {
    swift_errorRelease(*v1);
  }

  return swift_deallocObject(v0, 57LL, 7LL);
}

uint64_t sub_14B28(uint64_t a1)
{
  return sub_13A50(a1, *(void *)(v1 + 16), v1 + 24);
}

unint64_t sub_14B34()
{
  unint64_t result = qword_7D7D8;
  if (!qword_7D7D8)
  {
    uint64_t v1 = sub_14B78(&qword_7D048);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Promise<A>, v1);
    atomic_store(result, (unint64_t *)&qword_7D7D8);
  }

  return result;
}

uint64_t sub_14B78(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

uint64_t sub_14BBC(uint64_t a1)
{
  return sub_13D34(a1, v1);
}

uint64_t sub_14BC4(uint64_t a1)
{
  return sub_13F88(a1, v1);
}

uint64_t sub_14BCC(uint64_t a1)
{
  return a1;
}

void sub_14C00(void *a1)
{
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0) {
    *a1 = swift_allocBox();
  }
  sub_6D3C();
}

void sub_14C38(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = sub_5F6C(a2);
  sub_ACD0(v2);
  sub_6D3C();
}

void sub_14C60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2(0LL);
  sub_ACD0(v2);
  sub_6D3C();
}

unint64_t sub_14C88()
{
  unint64_t result = qword_7D7F0;
  if (!qword_7D7F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D824, &type metadata for CallbackActionImplementation.PerformError);
    atomic_store(result, (unint64_t *)&qword_7D7F0);
  }

  return result;
}

uint64_t sub_14CC4()
{
  if (*(void *)(v0 + 40)) {
    sub_62AC((void *)(v0 + 16));
  }
  return swift_deallocObject(v0, 48LL, 7LL);
}

unint64_t sub_14CF0()
{
  unint64_t result = qword_7D808;
  if (!qword_7D808)
  {
    uint64_t v1 = sub_C184(255LL, &qword_7D800, &OBJC_CLASS___NSError_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSError, v1);
    atomic_store(result, (unint64_t *)&qword_7D808);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for CallbackActionImplementation.PerformError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_14D80 + 4 * byte_5D760[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_14DA0 + 4 * byte_5D765[v4]))();
  }
}

_BYTE *sub_14D80(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_14DA0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_14DA8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_14DB0(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_14DB8(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_14DC0(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CallbackActionImplementation.PerformError()
{
  return &type metadata for CallbackActionImplementation.PerformError;
}

unint64_t sub_14DE0()
{
  unint64_t result = qword_7D810;
  if (!qword_7D810)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D7FC, &type metadata for CallbackActionImplementation.PerformError);
    atomic_store(result, (unint64_t *)&qword_7D810);
  }

  return result;
}

uint64_t sub_14E1C(uint64_t a1)
{
  return AnyHashable.init<A>(_:)(a1, v1, v2);
}

void sub_14E28(uint64_t a1)
{
}

uint64_t sub_14E34()
{
  return swift_bridgeObjectRetain(v0);
}

id sub_14E3C(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

void sub_14E44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_14E50(uint64_t a1)
{
  return swift_allocObject(a1, 48LL, 7LL);
}

uint64_t sub_14E5C()
{
  return sub_62AC((void *)(v0 - 176));
}

uint64_t sub_14E64()
{
  return swift_bridgeObjectRelease(0x8000000000000000LL);
}

unint64_t sub_14E6C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  return sub_21F88((uint64_t)va);
}

void sub_14E78(uint64_t a1)
{
}

uint64_t sub_14E80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = type metadata accessor for ActionFactory(0LL);
  swift_allocObject(v9, 16LL, 7LL);
  uint64_t v10 = (int *)type metadata accessor for CheckDownloadQueueAction(0LL);
  uint64_t v22 = a1;
  sub_4E84(0x654D6E6F69746361LL, 0xED00007363697274LL, (uint64_t)v10, (uint64_t)sub_A604, (uint64_t)v21, v11, v12, v13);
  if (v2)
  {
    uint64_t v14 = sub_6BC8();
    sub_6D14(v14);
    sub_AD00();
    uint64_t v15 = sub_9A58();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(a1, v15);
  }

  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2, v8, v5);
    uint64_t v17 = sub_23F28();
    *(void *)(a2 + v10[5]) = v17;
    __chkstk_darwin(v17);
    sub_AD08();
    sub_ACE4();
    uint64_t v18 = sub_A60C((uint64_t)&v24, a2 + v10[6]);
    __chkstk_darwin(v18);
    sub_AD08();
    sub_ACE4();
    uint64_t v19 = sub_6BC8();
    sub_6D14(v19);
    sub_AD00();
    uint64_t v20 = sub_9A58();
    sub_ACD0(v20);
    return sub_A60C((uint64_t)&v23, a2 + v10[7]);
  }

uint64_t sub_15120@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_14E80(a1, a2);
}

uint64_t type metadata accessor for CheckDownloadQueueAction(uint64_t a1)
{
  uint64_t result = qword_7D870;
  if (!qword_7D870) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CheckDownloadQueueAction);
  }
  return result;
}

uint64_t *sub_1516C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }

    else
    {
      __int128 v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }

    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *((void *)v17 + 4);
      *((void *)v16 + 3) = v18;
      *((void *)v16 + 4) = v19;
      (**(void (***)(void))(v18 - 8))();
    }

    else
    {
      __int128 v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v20;
      *((void *)v16 + 4) = *((void *)v17 + 4);
    }
  }

  return a1;
}

void *sub_15268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  int v5 = (void *)(a1 + *(int *)(a2 + 24));
  if (v5[3]) {
    sub_62AC(v5);
  }
  uint64_t result = (void *)(a1 + *(int *)(a2 + 28));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_152D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(void))(v10 - 8))();
  }

  else
  {
    __int128 v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + sub_9C80(v0 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }

  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }

  else
  {
    __int128 v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + sub_9C80(v0 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }

  return a1;
}

uint64_t sub_153A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (__int128 *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      sub_6520((void *)v8, v9);
      goto LABEL_8;
    }

    sub_62AC((void *)v8);
  }

  else if (v10)
  {
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    (**(void (***)(uint64_t, __int128 *))(v10 - 8))(v8, v9);
    goto LABEL_8;
  }

  __int128 v11 = *v9;
  __int128 v12 = v9[1];
  *(void *)(v8 + 32) = *((void *)v9 + 4);
  *(_OWORD *)uint64_t v8 = v11;
  *(_OWORD *)(v8 + sub_9C80(v0 + 16) = v12;
LABEL_8:
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (__int128 *)(a2 + v13);
  uint64_t v16 = *((void *)v15 + 3);
  if (!*(void *)(a1 + v13 + 24))
  {
    if (v16)
    {
      *(void *)(v14 + 24) = v16;
      *(void *)(v14 + 32) = *((void *)v15 + 4);
      (**(void (***)(uint64_t, __int128 *))(v16 - 8))(v14, v15);
      return a1;
    }

uint64_t sub_154E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  __int128 v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + sub_9C80(v0 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  __int128 v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + sub_9C80(v0 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  return a1;
}

uint64_t sub_15570(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    sub_62AC((void *)(a1 + v7));
  }
  __int128 v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + sub_9C80(v0 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  if (*(void *)(a1 + v11 + 24)) {
    sub_62AC((void *)(a1 + v11));
  }
  __int128 v13 = *(_OWORD *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(v12 + sub_9C80(v0 + 16) = v13;
  *(void *)(v12 + 32) = *(void *)(a2 + v11 + 32);
  return a1;
}

uint64_t sub_15628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15634);
}

uint64_t sub_15634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return sub_6028(a1, a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(sub_9970(v4, v8) = -1;
  }
  int v9 = v8 - 1;
  if (v9 < 0) {
    int v9 = -1;
  }
  return (v9 + 1);
}

uint64_t sub_156BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_156C8);
}

uint64_t sub_156C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return sub_5FEC(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  return result;
}

uint64_t sub_15740(uint64_t a1)
{
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    void v4[2] = "(";
    void v4[3] = "(";
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

unint64_t sub_157C0(uint64_t a1)
{
  unint64_t result = sub_157E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_157E4()
{
  unint64_t result = qword_7D8B0;
  if (!qword_7D8B0)
  {
    uint64_t v1 = type metadata accessor for CheckDownloadQueueAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5D870, v1);
    atomic_store(result, (unint64_t *)&qword_7D8B0);
  }

  return result;
}

void sub_15824(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  id v7 = a3;
  v6(a2, a3);
  swift_release(v5);
}

uint64_t sub_15884()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v2);
  uint64_t v42 = sub_5F6C(&qword_7D048);
  uint64_t v43 = Promise.__allocating_init()(v42);
  uint64_t v3 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v4 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v41 = ((v6 + 32) & ~v6) + 2 * v5;
  uint64_t v40 = v6 | 7;
  uint64_t v7 = swift_allocObject(v3, v41, v6 | 7);
  *(_OWORD *)(v7 + sub_9C80(v0 + 16) = xmmword_5CD80;
  uint64_t v8 = type metadata accessor for CheckDownloadQueueActionImplementation();
  uint64_t v45 = (void *)v8;
  aBlock[0] = v0;
  uint64_t v9 = sub_1651C();
  id v10 = (id)AMSLogKey(v9);
  if (v10)
  {
    uint64_t v12 = v10;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);
    uint64_t v15 = v14;

    sub_164F0();
    sub_C368();
    sub_7C08();
    uint64_t v16 = sub_C3CC();
    sub_164DC(v16);
    sub_7C3C();
    sub_C378();
    __int128 v50 = &type metadata for String;
    uint64_t v48 = v13;
    uint64_t v49 = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
    sub_7C3C();
    uint64_t v17 = 93LL;
  }

  else
  {
    sub_16500();
    sub_C368();
    sub_7C08();
    uint64_t v18 = sub_C3CC();
    sub_164DC(v18);
    sub_7C3C();
    uint64_t v17 = 58LL;
  }

  sub_C418(v17);
  sub_16510();
  type metadata accessor for Log();
  sub_62AC(aBlock);
  LogMessage.init(stringLiteral:)(0xD000000000000023LL, 0x8000000000063990LL);
  sub_2679C(v7);
  swift_bridgeObjectRelease(v7);
  id v19 = [objc_allocWithZone(ASDCheckQueueRequestOptions) initWithReason:1];
  id v20 = [objc_allocWithZone(ASDCheckQueueRequest) initWithOptions:v19];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = swift_allocObject(&unk_72B28, 32LL, 7LL);
    uint64_t v23 = v43;
    *(void *)(v22 + sub_9C80(v0 + 16) = v1;
    *(void *)(v22 + 24) = v43;
    uint64_t v46 = sub_163B0;
    uint64_t v47 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_15824;
    uint64_t v45 = &unk_72B40;
    __int128 v24 = _Block_copy(aBlock);
    sub_1651C();
    swift_retain(v43);
    swift_release();
    [v21 sendRequestCompletionBlock:v24];
    _Block_release(v24);

    id v19 = v21;
  }

  else
  {
    uint64_t v25 = swift_allocObject(v3, v41, v40);
    *(_OWORD *)(v25 + sub_9C80(v0 + 16) = xmmword_5CD80;
    uint64_t v45 = (void *)v8;
    aBlock[0] = v1;
    uint64_t v26 = sub_1651C();
    id v27 = (id)AMSLogKey(v26);
    if (v27)
    {
      BOOL v29 = v27;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);
      uint64_t v32 = v31;

      sub_164F0();
      sub_C368();
      sub_7C08();
      uint64_t v33 = sub_C3CC();
      sub_164DC(v33);
      sub_7C3C();
      sub_C378();
      __int128 v50 = &type metadata for String;
      uint64_t v48 = v30;
      uint64_t v49 = v32;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
      sub_7C3C();
      uint64_t v34 = 93LL;
    }

    else
    {
      sub_16500();
      sub_C368();
      sub_7C08();
      uint64_t v35 = sub_C3CC();
      sub_164DC(v35);
      sub_7C3C();
      uint64_t v34 = 58LL;
    }

    sub_C418(v34);
    sub_16510();
    sub_62AC(aBlock);
    LogMessage.init(stringLiteral:)(0xD000000000000018LL, 0x80000000000639C0LL);
    sub_267BC(v25);
    swift_bridgeObjectRelease(v25);
    unint64_t v36 = sub_16348();
    uint64_t v37 = swift_allocError(&type metadata for CheckDownloadQueueActionImplementation.ActionError, v36, 0LL, 0LL);
    *uint64_t v38 = 0;
    uint64_t v23 = Promise.__allocating_init(error:)(v37);
    swift_release();
  }

  return v23;
}

uint64_t sub_15C74(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    uint64_t v9 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v10 = type metadata accessor for LogMessage(0LL);
    uint64_t v11 = swift_allocObject( v9,  ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v10 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v11 + sub_9C80(v0 + 16) = xmmword_5CD70;
    uint64_t v86 = (void *)type metadata accessor for CheckDownloadQueueActionImplementation();
    v85[0] = a3;
    swift_retain(a3);
    uint64_t v12 = swift_errorRetain(a2);
    id v13 = (id)AMSLogKey(v12);
    if (v13)
    {
      uint64_t v15 = v13;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);
      uint64_t v18 = v17;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v19._countAndFlagsBits = 0LL;
      v19._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      id v20 = v86;
      uint64_t v21 = sub_7A94(v85, (uint64_t)v86);
      uint64_t DynamicType = swift_getDynamicType(v21, v20, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v82 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
      sub_7AB8((uint64_t)&v82);
      v23._countAndFlagsBits = 5972026LL;
      v23._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v82 = v16;
      uint64_t v83 = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
      sub_7AB8((uint64_t)&v82);
      uint64_t v24 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v45._countAndFlagsBits = 0LL;
      v45._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      uint64_t v46 = v86;
      uint64_t v47 = sub_7A94(v85, (uint64_t)v86);
      uint64_t v48 = swift_getDynamicType(v47, v46, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v82 = v48;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
      sub_7AB8((uint64_t)&v82);
      uint64_t v24 = 58LL;
    }

    unint64_t v49 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v24);
    LogMessage.init(stringInterpolation:)(v8);
    type metadata accessor for Log();
    sub_62AC(v85);
    LogMessage.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000000063A50LL);
    swift_getErrorValue(a2, v81, v80);
    uint64_t v50 = Error.localizedDescription.getter(v80[1], v80[2]);
    uint64_t v86 = &type metadata for String;
    v85[0] = v50;
    v85[1] = v51;
    static LogMessage.safe(_:)(v85);
    sub_7AB8((uint64_t)v85);
    sub_267BC(v11);
    swift_bridgeObjectRelease(v11);
    uint64_t v52 = a2;
LABEL_15:
    Promise.reject(_:)(v52);
    return swift_errorRelease(a2);
  }

  uint64_t v25 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v26 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v27 = *(void *)(v26 + 72);
  uint64_t v28 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v29 = (v28 + 32) & ~v28;
  uint64_t v30 = v28 | 7;
  if ((a1 & 1) == 0)
  {
    uint64_t v53 = swift_allocObject(v25, v29 + 2 * v27, v30);
    *(_OWORD *)(v53 + sub_9C80(v0 + 16) = xmmword_5CD80;
    uint64_t v86 = (void *)type metadata accessor for CheckDownloadQueueActionImplementation();
    v85[0] = a3;
    uint64_t v54 = swift_retain(a3);
    id v55 = (id)AMSLogKey(v54);
    if (v55)
    {
      uint64_t v57 = v55;
      uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55, v56);
      uint64_t v60 = v59;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v61._countAndFlagsBits = 0LL;
      v61._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v61);
      uint64_t v62 = v86;
      uint64_t v63 = sub_7A94(v85, (uint64_t)v86);
      uint64_t v64 = swift_getDynamicType(v63, v62, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v82 = v64;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
      sub_7AB8((uint64_t)&v82);
      v65._countAndFlagsBits = 5972026LL;
      v65._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v65);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v82 = v58;
      uint64_t v83 = v60;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
      sub_7AB8((uint64_t)&v82);
      uint64_t v66 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v73._countAndFlagsBits = 0LL;
      v73._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v73);
      unint64_t v74 = v86;
      uint64_t v75 = sub_7A94(v85, (uint64_t)v86);
      uint64_t v76 = swift_getDynamicType(v75, v74, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v82 = v76;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
      sub_7AB8((uint64_t)&v82);
      uint64_t v66 = 58LL;
    }

    unint64_t v77 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v66);
    LogMessage.init(stringInterpolation:)(v8);
    type metadata accessor for Log();
    sub_62AC(v85);
    LogMessage.init(stringLiteral:)(0xD00000000000003DLL, 0x80000000000639E0LL);
    sub_267BC(v53);
    swift_bridgeObjectRelease(v53);
    unint64_t v78 = sub_16348();
    uint64_t v52 = swift_allocError(&type metadata for CheckDownloadQueueActionImplementation.ActionError, v78, 0LL, 0LL);
    a2 = v52;
    *uint64_t v79 = 1;
    goto LABEL_15;
  }

  uint64_t v31 = swift_allocObject(v25, v29 + 3 * v27, v30);
  *(_OWORD *)(v31 + sub_9C80(v0 + 16) = xmmword_5CD70;
  uint64_t v86 = (void *)type metadata accessor for CheckDownloadQueueActionImplementation();
  v85[0] = a3;
  uint64_t v32 = swift_retain(a3);
  id v33 = (id)AMSLogKey(v32);
  if (v33)
  {
    uint64_t v35 = v33;
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);
    uint64_t v38 = v37;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v39._countAndFlagsBits = 0LL;
    v39._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    uint64_t v40 = v86;
    uint64_t v41 = sub_7A94(v85, (uint64_t)v86);
    uint64_t v42 = swift_getDynamicType(v41, v40, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v82 = v42;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
    sub_7AB8((uint64_t)&v82);
    v43._countAndFlagsBits = 5972026LL;
    v43._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v82 = v36;
    uint64_t v83 = v38;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
    sub_7AB8((uint64_t)&v82);
    uint64_t v44 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v67._countAndFlagsBits = 0LL;
    v67._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v67);
    __int128 v68 = v86;
    __int128 v69 = sub_7A94(v85, (uint64_t)v86);
    uint64_t v70 = swift_getDynamicType(v69, v68, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v82 = v70;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
    sub_7AB8((uint64_t)&v82);
    uint64_t v44 = 58LL;
  }

  unint64_t v71 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v44);
  LogMessage.init(stringInterpolation:)(v8);
  type metadata accessor for Log();
  sub_62AC(v85);
  LogMessage.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000000063A20LL);
  uint64_t v86 = &type metadata for Bool;
  LOBYTE(v85[0]) = 1;
  static LogMessage.safe(_:)(v85);
  sub_7AB8((uint64_t)v85);
  sub_2679C(v31);
  swift_bridgeObjectRelease(v31);
  uint64_t v86 = &type metadata for Bool;
  LOBYTE(v85[0]) = 1;
  Promise.resolve(_:)(v85);
  return sub_C1BC((uint64_t)v85);
}

uint64_t type metadata accessor for CheckDownloadQueueActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin38CheckDownloadQueueActionImplementation);
}

uint64_t sub_16328()
{
  return sub_15884();
}

unint64_t sub_16348()
{
  unint64_t result = qword_7D978;
  if (!qword_7D978)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D9F8, &type metadata for CheckDownloadQueueActionImplementation.ActionError);
    atomic_store(result, (unint64_t *)&qword_7D978);
  }

  return result;
}

uint64_t sub_16384()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_163B0(char a1, uint64_t a2)
{
  return sub_15C74(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_163B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_163C8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t storeEnumTagSinglePayload for CheckDownloadQueueActionImplementation.ActionError( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1641C + 4 * byte_5D935[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_16450 + 4 * byte_5D930[v4]))();
}

uint64_t sub_16450(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_16458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x16460LL);
  }
  return result;
}

uint64_t sub_1646C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x16474LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_16478(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_16480(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CheckDownloadQueueActionImplementation.ActionError()
{
  return &type metadata for CheckDownloadQueueActionImplementation.ActionError;
}

unint64_t sub_164A0()
{
  unint64_t result = qword_7D980;
  if (!qword_7D980)
  {
    unint64_t result = swift_getWitnessTable(&unk_5D9D0, &type metadata for CheckDownloadQueueActionImplementation.ActionError);
    atomic_store(result, (unint64_t *)&qword_7D980);
  }

  return result;
}

uint64_t sub_164DC(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 112);
}

uint64_t sub_164F0()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
}

uint64_t sub_16500()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_16510()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_1651C()
{
  return swift_retain(v0);
}

void sub_16524()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v1 = [v0 lightGrayColor];
  id v2 = [v1 colorWithAlphaComponent:0.8];

  sub_166D0();
  Class isa = UIColor.init(_colorLiteralRed:green:blue:alpha:)(0.47059, 0.47059, 0.47059, 0.39498).super.isa;
  id v4 = objc_msgSend(v0, "ams_dynamicColorWithLightColor:darkColor:", v2, isa);

  qword_85528 = (uint64_t)v4;
}

void sub_165F0()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v1 = [v0 whiteColor];
  id v2 = [v1 colorWithAlphaComponent:0.9];

  id v3 = [v0 whiteColor];
  id v4 = [v3 colorWithAlphaComponent:0.8];

  id v5 = objc_msgSend(v0, "ams_dynamicColorWithLightColor:darkColor:", v2, v4);
  qword_85530 = (uint64_t)v5;
}

unint64_t sub_166D0()
{
  unint64_t result = qword_7D988;
  if (!qword_7D988)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIColor);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7D988);
  }

  return result;
}

uint64_t sub_1670C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  uint64_t v11 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  swift_retain(a5);
  id v12 = [v11 defaultCenter];
  uint64_t v13 = a2[3];
  uint64_t v14 = sub_7A94(a2, v13);
  swift_retain(v5);
  id v15 = a1;
  uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v13);
  [v12 addObserver:v5 selector:"networkStateDidChange:" name:v15 object:v16];
  swift_release();

  swift_release();
  swift_unknownObjectRelease(v16);
  sub_62AC(a3);
  sub_62AC(a2);
  return v5;
}

uint64_t sub_16830()
{
  return v0;
}

void sub_16858()
{
  id v1 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v1 removeObserver:v0];
}

uint64_t sub_168A8()
{
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t sub_168C8()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Notification.object.getter(v35, v4);
  if (v35[3])
  {
    uint64_t v7 = sub_5F6C(&qword_7DA40);
    if ((swift_dynamicCast(&v36, v35, (char *)&type metadata for Any + 8, v7, 6LL) & 1) != 0)
    {
      if (*((void *)&v37 + 1))
      {
        sub_6010(&v36, (uint64_t)v39);
        uint64_t v8 = v0[5];
        uint64_t v9 = v0[6];
        sub_7A94(v0 + 2, v8);
        uint64_t v11 = v0[7];
        uint64_t v10 = v0[8];
        sub_16D24((uint64_t)v39, (uint64_t)&v36);
        uint64_t v12 = swift_allocObject(&unk_72C80, 72LL, 7LL);
        *(void *)(v12 + sub_9C80(v0 + 16) = v11;
        *(void *)(v12 + 24) = v10;
        sub_6010(&v36, v12 + 32);
        swift_retain(v10);
        dispatch thunk of TaskScheduler.schedule(task:)(sub_16D94, v12, v8, v9);
        swift_release();
        return sub_62AC(v39);
      }
    }

    else
    {
      uint64_t v38 = 0LL;
      __int128 v36 = 0u;
      __int128 v37 = 0u;
    }
  }

  else
  {
    sub_DBD8((uint64_t)v35, &qword_7DDE0);
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    uint64_t v38 = 0LL;
  }

  sub_DBD8((uint64_t)&v36, &qword_7DA38);
  uint64_t v14 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v15 = type metadata accessor for LogMessage(0LL);
  uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v15 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v16 + sub_9C80(v0 + 16) = xmmword_5CD80;
  uint64_t v40 = v2;
  v39[0] = v1;
  uint64_t v17 = swift_retain(v1);
  id v18 = (id)AMSLogKey(v17);
  if (v18)
  {
    id v20 = v18;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);
    uint64_t v23 = v22;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v24._countAndFlagsBits = 0LL;
    v24._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t v25 = v40;
    uint64_t v26 = sub_7A94(v39, v40);
    uint64_t DynamicType = swift_getDynamicType(v26, v25, 1LL);
    *((void *)&v37 + 1) = swift_getMetatypeMetadata();
    *(void *)&__int128 v36 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v36);
    sub_DBD8((uint64_t)&v36, &qword_7DDE0);
    v28._countAndFlagsBits = 5972026LL;
    v28._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    *((void *)&v37 + 1) = &type metadata for String;
    *(void *)&__int128 v36 = v21;
    *((void *)&v36 + 1) = v23;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v36);
    sub_DBD8((uint64_t)&v36, &qword_7DDE0);
    uint64_t v29 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v30._countAndFlagsBits = 0LL;
    v30._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t v31 = v40;
    uint64_t v32 = sub_7A94(v39, v40);
    uint64_t v33 = swift_getDynamicType(v32, v31, 1LL);
    *((void *)&v37 + 1) = swift_getMetatypeMetadata();
    *(void *)&__int128 v36 = v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v36);
    sub_DBD8((uint64_t)&v36, &qword_7DDE0);
    uint64_t v29 = 58LL;
  }

  unint64_t v34 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v29);
  LogMessage.init(stringInterpolation:)(v6);
  type metadata accessor for Log();
  sub_62AC(v39);
  LogMessage.init(stringLiteral:)(0xD000000000000034LL, 0x8000000000063AC0LL);
  sub_267BC(v16);
  return swift_bridgeObjectRelease(v16);
}

uint64_t type metadata accessor for CommonNetworkObservation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin24CommonNetworkObservation);
}

void sub_16D04()
{
}

uint64_t sub_16D24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_16D68()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_16D94()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + 32);
}

id sub_16DBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDynamicUIPlugin();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_16E0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreDynamicUIPlugin();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CoreDynamicUIPlugin()
{
  return objc_opt_self(&OBJC_CLASS___CoreDynamicUIPlugin);
}

void *sub_16E5C()
{
  unint64_t result = sub_16E78();
  qword_85538 = (uint64_t)result;
  return result;
}

void *sub_16E78()
{
  uint64_t v0 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v1 = type metadata accessor for AuthenticateAction(0LL);
  sub_6A24((unint64_t *)&qword_7D120, type metadata accessor for AuthenticateAction, (uint64_t)&unk_5D040);
  uint64_t v3 = v2;
  sub_6A24(&qword_7DA70, type metadata accessor for AuthenticateAction, (uint64_t)&unk_5D068);
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ActionDefinition(0LL);
  swift_allocObject(v6, 72LL, 7LL);
  uint64_t v7 = ActionDefinition.init(id:model:actionImplementationProvider:)( 0xD000000000000012LL,  0x8000000000063B10LL,  v1,  v3,  v5,  sub_1751C,  0LL);
  uint64_t v8 = type metadata accessor for BuyAction(0LL);
  sub_6A24((unint64_t *)&qword_7D540, type metadata accessor for BuyAction, (uint64_t)&unk_5D4B0);
  uint64_t v10 = v9;
  sub_6A24(&qword_7DA78, type metadata accessor for BuyAction, (uint64_t)&unk_5D4D8);
  uint64_t v12 = v11;
  swift_allocObject(v6, 72LL, 7LL);
  uint64_t v13 = ActionDefinition.init(id:model:actionImplementationProvider:)( 0x6F69746341797542LL,  0xE90000000000006ELL,  v8,  v10,  v12,  sub_17530,  0LL);
  uint64_t v14 = type metadata accessor for CallbackAction(0LL);
  sub_6A24((unint64_t *)&qword_7D7B0, type metadata accessor for CallbackAction, (uint64_t)&unk_5D6D0);
  uint64_t v16 = v15;
  sub_6A24(&qword_7DA80, type metadata accessor for CallbackAction, (uint64_t)&unk_5D6F8);
  uint64_t v18 = v17;
  swift_allocObject(v6, 72LL, 7LL);
  uint64_t v19 = ActionDefinition.init(id:model:actionImplementationProvider:)( 0x6B6361626C6C6143LL,  0xEE006E6F69746341LL,  v14,  v16,  v18,  sub_17590,  0LL);
  uint64_t v20 = type metadata accessor for CheckDownloadQueueAction(0LL);
  sub_6A24((unint64_t *)&qword_7D8B0, type metadata accessor for CheckDownloadQueueAction, (uint64_t)&unk_5D870);
  uint64_t v22 = v21;
  sub_6A24(&qword_7DA88, type metadata accessor for CheckDownloadQueueAction, (uint64_t)&unk_5D898);
  uint64_t v24 = v23;
  swift_allocObject(v6, 72LL, 7LL);
  uint64_t v25 = ActionDefinition.init(id:model:actionImplementationProvider:)( 0xD000000000000018LL,  0x8000000000063B30LL,  v20,  v22,  v24,  sub_175A4,  0LL);
  uint64_t v26 = type metadata accessor for LinkAction(0LL);
  sub_6A24((unint64_t *)&qword_7DA90, type metadata accessor for LinkAction, (uint64_t)&unk_5E110);
  uint64_t v28 = v27;
  sub_6A24(&qword_7DA98, type metadata accessor for LinkAction, (uint64_t)&unk_5E138);
  uint64_t v30 = v29;
  swift_allocObject(v6, 72LL, 7LL);
  uint64_t v31 = ActionDefinition.init(id:model:actionImplementationProvider:)( 0x697463416B6E694CLL,  0xEA00000000006E6FLL,  v26,  v28,  v30,  sub_175B8,  0LL);
  uint64_t v32 = type metadata accessor for ResolutionAction(0LL);
  sub_6A24((unint64_t *)&qword_7DAA0, type metadata accessor for ResolutionAction, (uint64_t)&unk_5EA10);
  uint64_t v34 = v33;
  sub_6A24(&qword_7DAA8, type metadata accessor for ResolutionAction, (uint64_t)&unk_5EA38);
  uint64_t v36 = v35;
  swift_allocObject(v6, 72LL, 7LL);
  uint64_t v37 = ActionDefinition.init(id:model:actionImplementationProvider:)( 0xD000000000000010LL,  0x8000000000063B50LL,  v32,  v34,  v36,  sub_175CC,  0LL);
  if ((unint64_t)&_swiftEmptyArrayStorage >> 62)
  {
    else {
      uint64_t v85 = (void *)((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain(&_swiftEmptyArrayStorage);
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(&_swiftEmptyArrayStorage);
  }

  else
  {
    unint64_t v38 = (unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL;
    uint64_t v39 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL));
  }

  if (__OFADD__(v39, 6LL))
  {
    __break(1u);
  }

  else
  {
    uint64_t v40 = sub_18EB4(v39 + 6, 1);
    specialized Array._endMutation()(v40, v41, v42, v43);
    uint64_t v44 = swift_retain(v7);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v44);
    uint64_t v0 = *(char **)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
    unint64_t v38 = *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  }

  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v0 + 1, 1LL);
LABEL_5:
  uint64_t v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v0, v7);
  specialized Array._endMutation()(v45, v46, v47, v48);
  uint64_t v49 = swift_retain(v13);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
  unint64_t v51 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v50 = *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  if (v51 >= v50 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1LL);
  }
  uint64_t v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v13);
  specialized Array._endMutation()(v52, v53, v54, v55);
  uint64_t v56 = swift_retain(v19);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
  unint64_t v58 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v57 = *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  if (v58 >= v57 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1LL);
  }
  uint64_t v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v19);
  specialized Array._endMutation()(v59, v60, v61, v62);
  uint64_t v63 = swift_retain(v25);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v63);
  unint64_t v65 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v64 = *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  if (v65 >= v64 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1LL);
  }
  uint64_t v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v25);
  specialized Array._endMutation()(v66, v67, v68, v69);
  uint64_t v70 = swift_retain(v31);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
  unint64_t v72 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v71 = *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  if (v72 >= v71 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1LL);
  }
  uint64_t v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v31);
  specialized Array._endMutation()(v73, v74, v75, v76);
  uint64_t v77 = swift_retain(v37);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v77);
  unint64_t v79 = *(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  unint64_t v78 = *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
  if (v79 >= v78 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v78 > 1, v79 + 1, 1LL);
  }
  uint64_t v80 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v79, v37);
  specialized Array._endMutation()(v80, v81, v82, v83);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_1751C()
{
  return sub_175E0( (uint64_t (*)(void))type metadata accessor for AuthenticateActionImplementation,  &qword_7DAD8);
}

uint64_t sub_17530()
{
  id v2 = [objc_allocWithZone((Class)type metadata accessor for BuyActionImplementation(0)) init];
  uint64_t v0 = sub_5F6C(&qword_7DAD0);
  swift_allocObject(v0, 24LL, 7LL);
  return ConcreteResultingActionImplementationBox.init(_:)(&v2);
}

uint64_t sub_17590()
{
  return sub_175E0( (uint64_t (*)(void))type metadata accessor for CallbackActionImplementation,  &qword_7DAC8);
}

uint64_t sub_175A4()
{
  return sub_175E0( (uint64_t (*)(void))type metadata accessor for CheckDownloadQueueActionImplementation,  &qword_7DAC0);
}

uint64_t sub_175B8()
{
  return sub_175E0((uint64_t (*)(void))type metadata accessor for LinkActionImplementation, &qword_7DAB8);
}

uint64_t sub_175CC()
{
  return sub_175E0( (uint64_t (*)(void))type metadata accessor for ResolutionActionImplementation,  &qword_7DAB0);
}

uint64_t sub_175E0(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v3 = a1(0LL);
  uint64_t v6 = sub_19060(v3, 16LL);
  uint64_t v4 = sub_5F6C(a2);
  sub_19060(v4, 24LL);
  return ConcreteResultingActionImplementationBox.init(_:)(&v6);
}

uint64_t sub_17638()
{
  return sub_188B4(&qword_7CA20, &qword_85538);
}

char *sub_17664()
{
  unint64_t result = sub_17680();
  qword_85540 = (uint64_t)result;
  return result;
}

char *sub_17680()
{
  uint64_t v0 = type metadata accessor for Button(0LL);
  sub_6A24(&qword_7D2D8, type metadata accessor for Button, (uint64_t)&unk_5D348);
  uint64_t v2 = v1;
  sub_6A24(&qword_7DAE0, type metadata accessor for Button, (uint64_t)&unk_5D388);
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for ButtonComponent();
  ComponentDefinition.init(id:model:component:)( &v51,  0x6F436E6F74747542LL,  0xEF746E656E6F706DLL,  v0,  v2,  v4,  v5,  &off_72598);
  uint64_t v6 = type metadata accessor for Text(0LL);
  sub_6A24(&qword_7DAE8, type metadata accessor for Text, (uint64_t)&unk_603F0);
  uint64_t v8 = v7;
  sub_6A24(&qword_7DAF0, type metadata accessor for Text, (uint64_t)&unk_60488);
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for TextComponent();
  ComponentDefinition.init(id:model:component:)( &v55,  0x706D6F4374786554LL,  0xED0000746E656E6FLL,  v6,  v8,  v10,  v11,  &off_75990);
  uint64_t v12 = type metadata accessor for SpacerModel(0LL);
  sub_6A24(&qword_7DAF8, type metadata accessor for SpacerModel, (uint64_t)&unk_601E8);
  uint64_t v14 = v13;
  sub_6A24(&qword_7DB00, type metadata accessor for SpacerModel, (uint64_t)&unk_601B8);
  uint64_t v16 = v15;
  uint64_t v17 = type metadata accessor for SpacerComponent(0LL);
  ComponentDefinition.init(id:model:component:)( &v59,  0x6F43726563617053LL,  0xEF746E656E6F706DLL,  v12,  v14,  v16,  v17,  &off_75620);
  uint64_t v18 = sub_18918(0LL, 3LL, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v19 = *((void *)v18 + 2);
  unint64_t v20 = *((void *)v18 + 3);
  unint64_t v21 = v19 + 1;
  swift_bridgeObjectRetain(*((void *)&v52 + 1));
  if (v19 >= v20 >> 1) {
    uint64_t v18 = sub_18918((char *)(v20 > 1), v19 + 1, 1, v18);
  }
  *((void *)v18 + 2) = v21;
  uint64_t v22 = &v18[56 * v19];
  __int128 v23 = v51;
  __int128 v24 = v52;
  __int128 v25 = v53;
  *((void *)v22 + 10) = v54;
  *((_OWORD *)v22 + 3) = v24;
  *((_OWORD *)v22 + 4) = v25;
  *((_OWORD *)v22 + 2) = v23;
  unint64_t v26 = *((void *)v18 + 3);
  int64_t v27 = v19 + 2;
  swift_bridgeObjectRetain(*((void *)&v56 + 1));
  if (v21 >= v26 >> 1) {
    uint64_t v18 = sub_18918((char *)(v26 > 1), v27, 1, v18);
  }
  *((void *)v18 + 2) = v27;
  uint64_t v28 = &v18[56 * v21];
  __int128 v29 = v55;
  __int128 v30 = v56;
  __int128 v31 = v57;
  *((void *)v28 + 10) = v58;
  *((_OWORD *)v28 + 3) = v30;
  *((_OWORD *)v28 + 4) = v31;
  *((_OWORD *)v28 + 2) = v29;
  unint64_t v32 = *((void *)v18 + 2);
  unint64_t v33 = *((void *)v18 + 3);
  swift_bridgeObjectRetain(*((void *)&v60 + 1));
  if (v32 >= v33 >> 1) {
    uint64_t v18 = sub_18918((char *)(v33 > 1), v32 + 1, 1, v18);
  }
  *((void *)v18 + 2) = v32 + 1;
  uint64_t v34 = &v18[56 * v32];
  __int128 v35 = v59;
  __int128 v36 = v60;
  __int128 v37 = v61;
  *((void *)v34 + 10) = v62;
  *((_OWORD *)v34 + 3) = v36;
  *((_OWORD *)v34 + 4) = v37;
  *((_OWORD *)v34 + 2) = v35;
  sub_18F70((uint64_t)&v55);
  sub_18F70((uint64_t)&v59);
  sub_18F70((uint64_t)&v51);
  uint64_t v38 = type metadata accessor for SegmentedControl(0LL);
  sub_6A24(&qword_7DB08, type metadata accessor for SegmentedControl, (uint64_t)&unk_5EBF8);
  uint64_t v40 = v39;
  sub_6A24(&qword_7DB10, type metadata accessor for SegmentedControl, (uint64_t)&unk_5EBC8);
  uint64_t v42 = v41;
  uint64_t v43 = type metadata accessor for SegmentedControlComponent();
  ComponentDefinition.init(id:model:component:)( &v63,  0xD000000000000019LL,  0x8000000000063B70LL,  v38,  v40,  v42,  v43,  &off_73E40);
  unint64_t v44 = *((void *)v18 + 2);
  unint64_t v45 = *((void *)v18 + 3);
  swift_bridgeObjectRetain(*((void *)&v64 + 1));
  if (v44 >= v45 >> 1) {
    uint64_t v18 = sub_18918((char *)(v45 > 1), v44 + 1, 1, v18);
  }
  *((void *)v18 + 2) = v44 + 1;
  uint64_t v46 = &v18[56 * v44];
  __int128 v47 = v63;
  __int128 v48 = v64;
  __int128 v49 = v65;
  *((void *)v46 + 10) = v66;
  *((_OWORD *)v46 + 3) = v48;
  *((_OWORD *)v46 + 4) = v49;
  *((_OWORD *)v46 + 2) = v47;
  sub_18F70((uint64_t)&v63);
  return v18;
}

uint64_t sub_17AB0()
{
  return sub_188B4(&qword_7CA28, &qword_85540);
}

uint64_t sub_17ADC()
{
  uint64_t v0 = sub_5F6C(&qword_7DB20);
  uint64_t v1 = swift_allocObject(v0, 56LL, 7LL);
  *(_OWORD *)(v1 + sub_9C80(v0 + 16) = xmmword_5DA90;
  uint64_t v2 = type metadata accessor for ActivityShelfPageAction(0LL);
  sub_6A24((unint64_t *)&qword_7CF58, type metadata accessor for ActivityShelfPageAction, (uint64_t)&unk_5CE1C);
  uint64_t v4 = v3;
  sub_6A24(&qword_7DB28, type metadata accessor for ActivityShelfPageAction, (uint64_t)&unk_5CE44);
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for PageActionDefinition(0LL);
  swift_allocObject(v7, 56LL, 7LL);
  *(void *)(v1 + 32) = PageActionDefinition.init(id:model:)(0xD000000000000017LL, 0x8000000000063B90LL, v2, v4, v6);
  uint64_t v8 = type metadata accessor for ReplaceComponentShelfPageAction(0LL);
  sub_6A24( (unint64_t *)&qword_7DB30,  type metadata accessor for ReplaceComponentShelfPageAction,  (uint64_t)&unk_5E5C0);
  uint64_t v10 = v9;
  sub_6A24(&qword_7DB38, type metadata accessor for ReplaceComponentShelfPageAction, (uint64_t)&unk_5E5E8);
  uint64_t v12 = v11;
  swift_allocObject(v7, 56LL, 7LL);
  *(void *)(v1 + 40) = PageActionDefinition.init(id:model:)(0xD00000000000001FLL, 0x8000000000063BB0LL, v8, v10, v12);
  uint64_t v13 = type metadata accessor for ReplaceNavigationBarItemShelfPageAction(0LL);
  sub_6A24( (unint64_t *)&qword_7DB40,  type metadata accessor for ReplaceNavigationBarItemShelfPageAction,  (uint64_t)&unk_5E86C);
  uint64_t v15 = v14;
  sub_6A24(&qword_7DB48, type metadata accessor for ReplaceNavigationBarItemShelfPageAction, (uint64_t)&unk_5E83C);
  uint64_t v17 = v16;
  swift_allocObject(v7, 56LL, 7LL);
  uint64_t v18 = PageActionDefinition.init(id:model:)(0xD000000000000027LL, 0x8000000000063BD0LL, v13, v15, v17);
  *(void *)(v1 + 48) = v18;
  uint64_t result = specialized Array._endMutation()(v18, v19, v20, v21);
  qword_85548 = v1;
  return result;
}

uint64_t sub_17D04()
{
  return sub_188B4(&qword_7CA30, &qword_85548);
}

uint64_t sub_17D30()
{
  uint64_t result = sub_17D4C();
  qword_85550 = result;
  return result;
}

uint64_t sub_17D4C()
{
  uint64_t v0 = sub_5F6C(&qword_7DB20);
  uint64_t v1 = swift_allocObject(v0, 64LL, 7LL);
  *(_OWORD *)(v1 + sub_9C80(v0 + 16) = xmmword_5DAA0;
  uint64_t v2 = type metadata accessor for PageDefinition(0LL);
  swift_allocObject(v2, 48LL, 7LL);
  *(void *)(v1 + 32) = PageDefinition.init(id:viewControllerProvider:)( 0x65746167656C6544LL,  0xEC00000065676150LL,  sub_17EB4,  0LL);
  swift_allocObject(v2, 48LL, 7LL);
  *(void *)(v1 + 40) = PageDefinition.init(id:viewControllerProvider:)( 0x676150726F727245LL,  0xE900000000000065LL,  sub_17FEC,  0LL);
  swift_allocObject(v2, 48LL, 7LL);
  *(void *)(v1 + 48) = PageDefinition.init(id:viewControllerProvider:)( 0x676150666C656853LL,  0xE900000000000065LL,  sub_18160,  0LL);
  swift_allocObject(v2, 48LL, 7LL);
  uint64_t v3 = PageDefinition.init(id:viewControllerProvider:)(0x65676150626557LL, 0xE700000000000000LL, sub_18684, 0LL);
  *(void *)(v1 + 56) = v3;
  specialized Array._endMutation()(v3, v4, v5, v6);
  return v1;
}

uint64_t sub_17EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for JSONObject(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v9 = sub_ED98(0x736E6F6974706FLL, 0xE700000000000000LL, (uint64_t)&type metadata for DelegatePageDestination);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = type metadata accessor for DelegateController(0LL);
  uint64_t v11 = type metadata accessor for BaseObjectGraph(0LL);
  inject<A, B>(_:from:)(v10, a3, v10, v11);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 232LL))(v9);
  swift_release();
  swift_bridgeObjectRelease(v9);
  return v12;
}

id sub_17FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSONContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for JSONObject(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_1E6B0((uint64_t)v12, (uint64_t)v9, (uint64_t *)v22);
  __int128 v20 = v22[1];
  __int128 v21 = v22[0];
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  unint64_t v16 = sub_18FF4();
  swift_allocError(&type metadata for ErrorPageDestinationError, v16, 0LL, 0LL);
  __int128 v17 = v20;
  *(_OWORD *)uint64_t v18 = v21;
  *(_OWORD *)(v18 + sub_9C80(v0 + 16) = v17;
  *(void *)(v18 + 32) = v14;
  *(void *)(v18 + 40) = v15;
  objc_allocWithZone((Class)type metadata accessor for ErrorViewController());
  swift_retain(a3);
  return sub_1F310();
}

id sub_18160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for JSONContext(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for JSONObject(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_5F6C(&qword_7DB58);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for ShelfPageDestination(0LL);
  uint64_t v15 = __chkstk_darwin(v14);
  __int128 v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v27 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v28, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v29, v3);
  sub_497D8((uint64_t)v10, (uint64_t)v6, (uint64_t)v13);
  sub_5FEC((uint64_t)v13, 0LL, 1LL, v14);
  sub_18F9C((uint64_t)v13, (uint64_t)v19, type metadata accessor for ShelfPageDestination);
  sub_18FC8((uint64_t)v19, (uint64_t)v17, type metadata accessor for ShelfPageDestination);
  uint64_t v20 = type metadata accessor for ShelfPagePresenter(0LL);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  uint64_t v21 = v27;
  swift_retain(v27);
  uint64_t v22 = sub_4AA90();
  type metadata accessor for CoreDynamicUIPlugin();
  uint64_t v23 = sub_183D4(v22, v21);
  id v24 = objc_allocWithZone((Class)type metadata accessor for ShelfPageViewController());
  id v25 = sub_50D38(v22, v23);
  sub_14C60((uint64_t)v19, type metadata accessor for ShelfPageDestination);
  return v25;
}

uint64_t sub_183D4(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = type metadata accessor for Dependency(0LL);
  uint64_t v4 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ResultingActionDispatcher(0LL);
  swift_allocObject(v7, 40LL, 7LL);
  uint64_t v8 = ResultingActionDispatcher.init()();
  uint64_t v9 = type metadata accessor for ActivityShelfPageActionImplementation();
  uint64_t v10 = swift_allocObject(v9, 32LL, 7LL);
  *(void *)(v10 + 24) = 0LL;
  uint64_t v11 = swift_unknownObjectWeakInit(v10 + 16, 0LL);
  *(void *)(v10 + 24) = &off_75408;
  swift_unknownObjectWeakAssign(v11, a1);
  uint64_t v28 = v10;
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)v8 + 184LL);
  sub_6A24( &qword_7DB60,  (uint64_t (*)(uint64_t))type metadata accessor for ActivityShelfPageActionImplementation,  (uint64_t)&unk_5CFF8);
  v12(&v28, v9, v13);
  swift_release();
  uint64_t v14 = type metadata accessor for ReplaceComponentShelfPageActionImplementation();
  uint64_t v15 = swift_allocObject(v14, 32LL, 7LL);
  *(void *)(v15 + 24) = 0LL;
  uint64_t v16 = swift_unknownObjectWeakInit(v15 + 16, 0LL);
  *(void *)(v15 + 24) = &off_753F8;
  swift_unknownObjectWeakAssign(v16, a1);
  uint64_t v28 = v15;
  sub_6A24( &qword_7DB68,  (uint64_t (*)(uint64_t))type metadata accessor for ReplaceComponentShelfPageActionImplementation,  (uint64_t)&unk_5E740);
  v12(&v28, v14, v17);
  swift_release();
  uint64_t v18 = type metadata accessor for ReplaceNavigationBarButtonShelfPageActionImplementation();
  uint64_t v19 = swift_allocObject(v18, 32LL, 7LL);
  *(void *)(v19 + 24) = 0LL;
  uint64_t v20 = swift_unknownObjectWeakInit(v19 + 16, 0LL);
  *(void *)(v19 + 24) = &off_753E8;
  swift_unknownObjectWeakAssign(v20, a1);
  uint64_t v28 = v19;
  sub_6A24( &qword_7DB70,  (uint64_t (*)(uint64_t))type metadata accessor for ReplaceNavigationBarButtonShelfPageActionImplementation,  (uint64_t)&unk_5E7D8);
  v12(&v28, v18, v21);
  swift_release();
  uint64_t v22 = type metadata accessor for BaseObjectGraph(0LL);
  inject<A, B>(_:from:)(v7, a2, v7, v22);
  uint64_t v23 = *(void (**)(uint64_t))(*(void *)v8 + 120LL);
  uint64_t v24 = swift_retain(v28);
  v23(v24);
  uint64_t v28 = v8;
  static Dependency.satisfying<A>(_:with:)(v7, &v28, v7);
  uint64_t v25 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v6);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v27);
  return v25;
}

char *sub_18684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for JSONContext(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for JSONObject(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_5F6C(&qword_7DB50);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for WebPageDestination(0LL);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v23 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v25, v3);
  sub_576B0((uint64_t)v6, (uint64_t)v13);
  sub_5FEC((uint64_t)v13, 0LL, 1LL, v14);
  sub_18F9C((uint64_t)v13, (uint64_t)v19, type metadata accessor for WebPageDestination);
  sub_18FC8((uint64_t)v19, (uint64_t)v17, type metadata accessor for WebPageDestination);
  id v20 = objc_allocWithZone((Class)type metadata accessor for WebPageViewController());
  swift_retain(v23);
  uint64_t v21 = sub_57FD4();
  sub_14C60((uint64_t)v19, type metadata accessor for WebPageDestination);
  return v21;
}

uint64_t sub_188B4(void *a1, void *a2)
{
  if (*a1 != -1LL) {
    swift_once();
  }
  return swift_bridgeObjectRetain(*a2);
}

uint64_t sub_188EC()
{
  return sub_188B4(&qword_7CA38, &qword_85550);
}

char *sub_18918(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_5F6C(&qword_7DB18);
    uint64_t v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || &v14[56 * v8] <= v13) {
      memmove(v13, v14, 56 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v13, v14, v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

void sub_18A24()
{
  if ((v4 & 1) != 0)
  {
    sub_19040();
    if (v5 != v6)
    {
      sub_190C0();
      if (v5)
      {
        __break(1u);
        return;
      }

      sub_19050();
    }
  }

  sub_190A8();
  if (v3)
  {
    uint64_t v7 = sub_5F6C(&qword_7DB80);
    uint64_t v8 = (char *)sub_19060(v7, 16 * v3 + 32);
    size_t v9 = j__malloc_size(v8);
    *((void *)v8 + 2) = v2;
    *((void *)v8 + 3) = 2 * ((uint64_t)(v9 - 32) / 16);
  }

  else
  {
    uint64_t v8 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v10 = v8 + 32;
  uint64_t v11 = v0 + 32;
  if ((v1 & 1) != 0)
  {
    if (v8 != v0 || &v11[16 * v2] <= v10) {
      memmove(v10, v11, 16 * v2);
    }
    *((void *)v0 + 2) = 0LL;
  }

  else
  {
    sub_19080((uint64_t)v10, (uint64_t)v11);
  }

  sub_190B8();
}

void sub_18AF4()
{
  if ((v4 & 1) != 0)
  {
    sub_19040();
    if (v5 != v6)
    {
      sub_190C0();
      if (v5)
      {
        __break(1u);
        return;
      }

      sub_19050();
    }
  }

  sub_190A8();
  if (v3)
  {
    uint64_t v7 = sub_5F6C(&qword_7DB98);
    uint64_t v8 = (void *)sub_19060(v7, 40 * v3 + 32);
    size_t v9 = j__malloc_size(v8);
    sub_19070(v9 - 32);
  }

  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }

  if ((v1 & 1) != 0)
  {
    if (v8 != v0 || &v0[5 * v2 + 4] <= v8 + 4) {
      memmove(v8 + 4, v0 + 4, 40 * v2);
    }
    v0[2] = 0LL;
  }

  else
  {
    sub_5F6C((uint64_t *)&unk_7F100);
    sub_19080((uint64_t)(v8 + 4), (uint64_t)(v0 + 4));
  }

  sub_190B8();
  sub_19098();
}

void sub_18BD8()
{
  if ((v4 & 1) != 0)
  {
    sub_19040();
    if (v5 != v6)
    {
      sub_190C0();
      if (v5)
      {
        __break(1u);
        return;
      }

      sub_19050();
    }
  }

  sub_190A8();
  if (v3)
  {
    uint64_t v7 = sub_5F6C(&qword_7DB90);
    uint64_t v8 = (char *)sub_19060(v7, 144 * v3 + 32);
    size_t v9 = j__malloc_size(v8);
    sub_19070(v9 - 32);
  }

  else
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v10 = v8 + 32;
  uint64_t v11 = v0 + 32;
  if ((v1 & 1) != 0)
  {
    if (v8 != v0 || &v11[144 * v2] <= v10) {
      memmove(v10, v11, 144 * v2);
    }
    *((void *)v0 + 2) = 0LL;
  }

  else
  {
    sub_19080((uint64_t)v10, (uint64_t)v11);
  }

  sub_190B8();
  sub_19098();
}

void sub_18CA4()
{
  if ((v3 & 1) != 0)
  {
    sub_19040();
    if (v5 != v6)
    {
      sub_190C0();
      if (v5)
      {
LABEL_24:
        __break(1u);
        return;
      }

      sub_19050();
    }
  }

  else
  {
    uint64_t v4 = v2;
  }

  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }

  uint64_t v9 = sub_5F6C(&qword_7DB88);
  uint64_t v10 = *(void *)(sub_19068() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v14 = (void *)swift_allocObject(v9, v13 + v11 * v8, v12 | 7);
  size_t v15 = j__malloc_size(v14);
  if (!v11)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

  if (v15 - v13 == 0x8000000000000000LL && v11 == -1) {
    goto LABEL_23;
  }
  sub_19070(v15 - v13);
LABEL_18:
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(sub_19068() - 8) + 80LL);
  uint64_t v18 = (v17 + 32) & ~v17;
  if ((v1 & 1) != 0)
  {
    sub_18E34(v0 + v18, v7, (unint64_t)v14 + v18);
    *(void *)(v0 + sub_9C80(v0 + 16) = 0LL;
  }

  else
  {
    sub_19080((uint64_t)v14 + v18, v0 + v18);
  }

  sub_190B8();
}

char *sub_18DC4(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[16 * a2] <= a3) {
    return (char *)sub_19030(a3, result);
  }
  return result;
}

char *sub_18DE4(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[40 * a2] <= a3) {
    return (char *)sub_19030(a3, result);
  }
  return result;
}

char *sub_18E0C(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[88 * a2] <= a3) {
    return (char *)sub_19030(a3, result);
  }
  return result;
}

uint64_t sub_18E34(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 < a1 || (uint64_t result = sub_19068(), a1 + *(void *)(*(void *)(result - 8) + 72LL) * a2 <= a3))
  {
    sub_19068();
    uint64_t v8 = sub_190D8();
    return swift_arrayInitWithTakeFrontToBack(v8);
  }

  else if (a3 != a1)
  {
    uint64_t v7 = sub_190D8();
    return swift_arrayInitWithTakeBackToFront(v7);
  }

  return result;
}

uint64_t sub_18EB4(uint64_t a1, char a2)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *uint64_t v2 = v5;
  uint64_t v7 = 0LL;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000LL) == 0 && (v5 & 0x4000000000000000LL) == 0)
  {
    uint64_t v7 = 1LL;
  }

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8LL));
  }

  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v7,  v9,  a2 & 1,  v5);
  *uint64_t v2 = result;
  return result;
}

uint64_t sub_18F70(uint64_t a1)
{
  return a1;
}

void sub_18F9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_19088(a1, a2, a3);
  sub_D80C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  sub_6D3C();
}

void sub_18FC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_19088(a1, a2, a3);
  sub_D80C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  sub_6D3C();
}

unint64_t sub_18FF4()
{
  unint64_t result = qword_7DB78;
  if (!qword_7DB78)
  {
    unint64_t result = swift_getWitnessTable(&unk_5DFDC, &type metadata for ErrorPageDestinationError);
    atomic_store(result, (unint64_t *)&qword_7DB78);
  }

  return result;
}

void *sub_19030@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

  ;
}

  ;
}

uint64_t sub_19060(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7LL);
}

uint64_t sub_19068()
{
  return type metadata accessor for Shelf(0LL);
}

void sub_19070(uint64_t a1@<X8>)
{
  *(void *)(v2 + sub_9C80(v0 + 16) = v1;
  *(void *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t sub_19080(uint64_t a1, uint64_t a2)
{
  return swift_arrayInitWithCopy(a1, a2, v2);
}

uint64_t sub_19088(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0LL);
}

  ;
}

  ;
}

uint64_t sub_190B8()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

  ;
}

uint64_t sub_190D8()
{
  return v0;
}

uint64_t sub_190EC()
{
  if (v0[8]) {
    return 0LL;
  }
  else {
    return *(void *)v0;
  }
}

Swift::Int sub_19100()
{
  uint64_t v1 = sub_5F6C(&qword_7DBC0);
  uint64_t inited = swift_initStackObject(v1, v18);
  uint64_t v3 = (void *)inited;
  *(_OWORD *)(inited + sub_9C80(v0 + 16) = xmmword_5DB10;
  *(void *)(inited + 32) = 1701080931LL;
  *(void *)(inited + 40) = 0xE400000000000000LL;
  uint64_t v4 = *v0;
  if (*((_BYTE *)v0 + 8)) {
    uint64_t v4 = 0LL;
  }
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 80) = 0x7470697263736564LL;
  *(void *)(inited + 88) = 0xEB000000006E6F69LL;
  uint64_t v5 = v0[3];
  if (v5)
  {
    uint64_t v6 = v0[2];
    uint64_t v7 = &type metadata for String;
    uint64_t v8 = v0[3];
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v7 = 0LL;
    *(void *)(inited + 112) = 0LL;
  }

  *(void *)(inited + 96) = v6;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 128) = 0x6E69616D6F64LL;
  *(void *)(inited + 136) = 0xE600000000000000LL;
  uint64_t v10 = v0[4];
  uint64_t v9 = v0[5];
  *(void *)(inited + 168) = &type metadata for String;
  if (v9)
  {
    uint64_t v11 = v9;
  }

  else
  {
    uint64_t v10 = qword_7DBA0;
    uint64_t v11 = swift_bridgeObjectRetain(off_7DBA8);
  }

  v3[18] = v10;
  v3[19] = v11;
  v3[22] = 0x6F666E4972657375LL;
  v3[23] = 0xE800000000000000LL;
  uint64_t v12 = v0[6];
  if (v12)
  {
    uint64_t v13 = sub_5F6C(&qword_7D668);
  }

  else
  {
    uint64_t v13 = 0LL;
    v3[25] = 0LL;
    v3[26] = 0LL;
  }

  v3[24] = v12;
  v3[27] = v13;
  v3[28] = 0x65756C6176LL;
  v3[29] = 0xE500000000000000LL;
  sub_19F44((uint64_t)(v0 + 7), (uint64_t)(v3 + 30));
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v5);
  uint64_t v14 = sub_5F6C(&qword_7DDE0);
  uint64_t v15 = Dictionary.init(dictionaryLiteral:)(v3, &type metadata for String, v14, &protocol witness table for String);
  Swift::Int v16 = sub_192D8(v15);
  swift_bridgeObjectRelease(v15);
  return v16;
}

Swift::Int sub_192D8(uint64_t a1)
{
  uint64_t v2 = &_swiftEmptyDictionarySingleton;
  uint64_t v38 = &_swiftEmptyDictionarySingleton;
  sub_1E63C(v39);
  uint64_t v3 = v39[0];
  int64_t v4 = v39[3];
  unint64_t v5 = v39[4];
  uint64_t v27 = v39[1];
  int64_t v28 = (unint64_t)(v39[2] + 64LL) >> 6;
  uint64_t v40 = &v32;
  Swift::Int result = swift_bridgeObjectRetain(a1);
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    sub_19F44(*(void *)(v3 + 56) + 32 * v8, (uint64_t)v37);
    *(void *)&__int128 v36 = v15;
    *((void *)&v36 + 1) = v14;
    __int128 v34 = v36;
    v35[0] = v37[0];
    v35[1] = v37[1];
    sub_19F44((uint64_t)v35, (uint64_t)&v29);
    if (!v30)
    {
      swift_bridgeObjectRetain(v14);
      sub_DBD8((uint64_t)&v34, &qword_7DBC8);
      uint64_t v17 = &v29;
      goto LABEL_34;
    }

    sub_12340(&v29, v33);
    __int128 v16 = v34;
    v31[2] = v34;
    sub_199E4((uint64_t)v35, (uint64_t)v40);
    sub_12340(v33, v31);
    if (v2[3] <= v2[2])
    {
      swift_bridgeObjectRetain(v14);
      sub_22478();
      uint64_t v2 = v38;
    }

    else
    {
      swift_bridgeObjectRetain(v14);
    }

    Hasher.init(_seed:)(&v29, v2[5]);
    String.hash(into:)(&v29, v16, *((void *)&v16 + 1));
    Swift::Int result = Hasher._finalize()();
    uint64_t v18 = (char *)(v2 + 8);
    uint64_t v19 = -1LL << *((_BYTE *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1LL << v20) & ~v2[(v20 >> 6) + 8]) == 0) {
      break;
    }
    unint64_t v22 = __clz(__rbit64((-1LL << v20) & ~v2[(v20 >> 6) + 8])) | v20 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
    *(void *)&v18[(v22 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v22;
    *(_OWORD *)(v2[6] + 16 * v22) = v16;
    sub_12340(v31, (_OWORD *)(v2[7] + 32 * v22));
    ++v2[2];
    uint64_t v17 = (__int128 *)v40;
LABEL_34:
    Swift::Int result = sub_DBD8((uint64_t)v17, &qword_7DDE0);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1LL)) {
      goto LABEL_38;
    }
    if (v9 >= v28) {
      goto LABEL_36;
    }
    unint64_t v10 = *(void *)(v27 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v28) {
        goto LABEL_36;
      }
      unint64_t v10 = *(void *)(v27 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v28) {
          goto LABEL_36;
        }
        unint64_t v10 = *(void *)(v27 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v28) {
            goto LABEL_36;
          }
          unint64_t v10 = *(void *)(v27 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v28) {
              goto LABEL_36;
            }
            unint64_t v10 = *(void *)(v27 + 8 * v11);
            if (!v10)
            {
              int64_t v12 = v4 + 6;
              while (v12 < v28)
              {
                unint64_t v10 = *(void *)(v27 + 8 * v12++);
                if (v10)
                {
                  int64_t v11 = v12 - 1;
                  goto LABEL_18;
                }
              }

LABEL_36:
              sub_12338(v3);
              return (Swift::Int)v2;
            }
          }
        }
      }
    }

LABEL_18:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
  }

  char v23 = 0;
  unint64_t v24 = (unint64_t)(63 - v19) >> 6;
  while (++v21 != v24 || (v23 & 1) == 0)
  {
    BOOL v25 = v21 == v24;
    if (v21 == v24) {
      unint64_t v21 = 0LL;
    }
    v23 |= v25;
    uint64_t v26 = *(void *)&v18[8 * v21];
    if (v26 != -1)
    {
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
      goto LABEL_33;
    }
  }

  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

      unint64_t v8 = (v14 - 1) & v14;
    }
  }

  sub_237D8();
  *uint64_t v0 = v3;
}

      unint64_t v8 = (v16 - 1) & v16;
    }

    sub_237D8();
    uint64_t v15 = v35;
    if ((v2 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    sub_23A5C();
    if (v33 != v34) {
      *uint64_t v15 = -1LL << v32;
    }
    else {
      sub_3AB98(0LL, (unint64_t)(v32 + 63) >> 6, v15);
    }
    v1[2] = 0LL;
  }

  return sub_23918();
}

uint64_t sub_19658()
{
  uint64_t v0 = qword_7DBA0;
  swift_bridgeObjectRetain(off_7DBA8);
  return v0;
}

uint64_t sub_19694(uint64_t a1)
{
  unint64_t v2 = sub_19F08();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_196BC(uint64_t a1)
{
  unint64_t v2 = sub_19F08();
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_196E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for JSONObject(0LL);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_19FA8();
  uint64_t v8 = sub_23F28();
  if (v2)
  {
    swift_errorRelease(v2);
    uint64_t v8 = 0LL;
  }

  *(void *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v2 != 0;
  *(void *)(a2 + sub_9C80(v0 + 16) = sub_23DB8();
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = sub_23DB8();
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = sub_ED98( 0x6F666E4972657375LL,  0xE800000000000000LL,  (uint64_t)&type metadata for DecodedJSError);
  uint64_t v11 = sub_19FA8();
  uint64_t v13 = JSONObject.subscript.getter(v11, v12);
  if ((JSONObject.isNull.getter(v13) & 1) != 0) {
    goto LABEL_7;
  }
  JSONObject.untyped.getter(&v22);
  if (!v23)
  {
    sub_DBD8((uint64_t)&v22, &qword_7DDE0);
LABEL_7:
    uint64_t v15 = type metadata accessor for JSONError(0LL);
    unint64_t v16 = sub_199A4();
    uint64_t v17 = swift_allocError(v15, v16, 0LL, 0LL);
    *uint64_t v18 = 1701080931LL;
    v18[1] = 0xE400000000000000LL;
    v18[2] = &type metadata for DecodedJSError;
    uint64_t v19 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104LL))( v18,  enum case for JSONError.missingProperty(_:),  v15);
    swift_willThrow(v19);
    sub_19FA0((uint64_t)v7);
    swift_errorRelease(v17);
    uint64_t v20 = type metadata accessor for JSONContext(0LL);
    sub_19F8C(v20);
    sub_19FA0(a1);
    memset(v24, 0, sizeof(v24));
    return sub_199E4((uint64_t)v24, a2 + 56);
  }

  sub_19FA0((uint64_t)v7);
  sub_12340(&v22, v24);
  uint64_t v14 = type metadata accessor for JSONContext(0LL);
  sub_19F8C(v14);
  sub_19FA0(a1);
  return sub_199E4((uint64_t)v24, a2 + 56);
}

uint64_t sub_19990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_196E4(a1, a2);
}

unint64_t sub_199A4()
{
  unint64_t result = qword_7CAF0;
  if (!qword_7CAF0)
  {
    uint64_t v1 = type metadata accessor for JSONError(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for JSONError, v1);
    atomic_store(result, (unint64_t *)&qword_7CAF0);
  }

  return result;
}

uint64_t sub_199E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7DDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DecodedJSError(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease(a1[6]);
  if (a1[10]) {
    return sub_62AC(a1 + 7);
  }
  return result;
}

uint64_t initializeWithCopy for DecodedJSError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + sub_9C80(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = (_OWORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  if (v7)
  {
    *(void *)(a1 + 80) = v7;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v7 - 8))(a1 + 56, v6, v7);
  }

  else
  {
    __int128 v8 = v6[1];
    *(_OWORD *)(a1 + 56) = *v6;
    *(_OWORD *)(a1 + 72) = v8;
  }

  return a1;
}

uint64_t assignWithCopy for DecodedJSError(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + sub_9C80(v0 + 16) = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  *(void *)(a1 + 32) = a2[4];
  uint64_t v7 = a2[5];
  uint64_t v8 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = a2[6];
  *(void *)(a1 + 48) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v9);
  uint64_t v11 = a2[10];
  if (!*(void *)(a1 + 80))
  {
    if (v11)
    {
      *(void *)(a1 + 80) = v11;
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
      return a1;
    }

void *sub_19C08(void *result, void *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        uint64_t result = (void *)swift_release(v11);
        *uint64_t v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

void *initializeWithTake for DecodedJSError(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for DecodedJSError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)(a1 + sub_9C80(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease(v8);
  if (*(void *)(a1 + 80)) {
    sub_62AC((void *)(a1 + 56));
  }
  __int128 v9 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for DecodedJSError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 88))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DecodedJSError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 88) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for DecodedJSError()
{
  return &type metadata for DecodedJSError;
}

unint64_t sub_19ECC()
{
  unint64_t result = qword_7DBB0;
  if (!qword_7DBB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_5DBA4, &type metadata for DecodedJSError);
    atomic_store(result, (unint64_t *)&qword_7DBB0);
  }

  return result;
}

unint64_t sub_19F08()
{
  unint64_t result = qword_7DBB8;
  if (!qword_7DBB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5DB64, &type metadata for DecodedJSError);
    atomic_store(result, (unint64_t *)&qword_7DBB8);
  }

  return result;
}

uint64_t sub_19F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7DDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F8C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

uint64_t sub_19FA0(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_19FA8()
{
  return 1701080931LL;
}

uint64_t sub_19FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_ED98(0x736E6F6974706FLL, 0xE700000000000000LL, (uint64_t)&type metadata for DelegatePageDestination);
  uint64_t v5 = type metadata accessor for JSONContext(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(a2, v5);
  uint64_t v6 = type metadata accessor for JSONObject(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
  return v4;
}

uint64_t sub_1A050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_19FBC(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatePageDestination()
{
  return &type metadata for DelegatePageDestination;
}

id sub_1A088()
{
  id v1 = [(id)swift_getObjCClassFromObject(v0) buttonWithType:1];
  uint64_t ObjectType = swift_getObjectType(v0);
  swift_deallocPartialClassInstance(v0, ObjectType, 24LL, 7LL);
  id v3 = v1;
  sub_1A724();

  return v3;
}

id sub_1A144()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView) hasContent];
}

id sub_1A16C()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DynamicButton();
  objc_msgSendSuper2(&v3, "layoutSubviews");
  id v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView];
  [v0 bounds];
  return objc_msgSend(v1, "setFrame:");
}

id sub_1A204(uint64_t a1)
{
  return objc_msgSend( *(id *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView),  "measurementsWithFitting:in:",  a1);
}

uint64_t sub_1A308()
{
  id v1 =  [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView) accessibilityLabel];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_1A404()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView) intrinsicContentSize];
}

id sub_1A41C()
{
  return objc_msgSend( *(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView),  "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:");
}

void sub_1A49C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for DynamicButton();
  objc_msgSendSuper2(&v18, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  id v6 = [a1 nextFocusedView];
  if (v6)
  {
    uint64_t v7 = v6;
    sub_E814();
    id v8 = v3;
    id v9 = v7;
    char v10 = static NSObject.== infix(_:_:)();
  }

  else
  {
    char v10 = 0;
  }

  uint64_t v11 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  [v11 inheritedAnimationDuration];
  double v13 = v12;
  uint64_t v14 = swift_allocObject(&unk_72E58, 24LL, 7LL);
  swift_unknownObjectWeakInit(v14 + 16, v3);
  uint64_t v15 = swift_allocObject(&unk_72E80, 25LL, 7LL);
  *(void *)(v15 + sub_9C80(v0 + 16) = v14;
  *(_BYTE *)(v15 + 24) = v10 & 1;
  void v17[4] = sub_1AA7C;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256LL;
  v17[2] = sub_21544;
  v17[3] = &unk_72E98;
  unint64_t v16 = _Block_copy(v17);
  swift_release();
  [v11 animateWithDuration:v16 animations:v13];
  _Block_release(v16);
}

void sub_1A630(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = *(id *)(Strong + OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView);

    v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isHighlighted] = a2 & 1;
    sub_1BA64();
  }

id sub_1A724()
{
  id v1 = objc_msgSend((id)objc_opt_self(UIColor), "ams_clear");
  [v0 setBackgroundColor:v1];

  id v2 = [v0 titleLabel];
  if (v2)
  {
    sub_1AAA0(v2);
  }

  id v3 = [v0 subtitleLabel];
  if (v3)
  {
    sub_1AAA0(v3);
  }

  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView]];
  [v0 setIsAccessibilityElement:1];
  return [v0 setAccessibilityTraits:UIAccessibilityTraitButton];
}

id sub_1A814(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for DynamicButtonView());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_color] = 0LL;

  v13.receiver = v11;
  v13.super_class = (Class)type metadata accessor for DynamicButton();
  return objc_msgSendSuper2(&v13, "initWithFrame:", a1, a2, a3, a4);
}

id sub_1A8E8(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_dynamicButtonView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for DynamicButtonView());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin13DynamicButton_color] = 0LL;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DynamicButton();
  id v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_1A9AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DynamicButton()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin13DynamicButton);
}

uint64_t sub_1AA34()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1AA58()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void sub_1AA7C()
{
}

uint64_t sub_1AA88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1AA98(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

id sub_1AAA0(void *a1)
{
  return objc_msgSend(a1, *(SEL *)(v1 + 56), 1);
}

BOOL sub_1AAB0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71838, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

BOOL sub_1AAF4@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_1AAB0(*a1);
  *a2 = result;
  return result;
}

void *sub_1AB28()
{
  uint64_t v1 = v0;
  uint64_t v26 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel;
  Swift::String v2 = (void *)sub_1C150();
  objc_opt_self(&OBJC_CLASS___UIColor);
  Swift::Int v3 = v1;
  id v4 = sub_1C1E8((uint64_t)v3, "ams_primaryText");
  uint64_t v5 = sub_1C208();
  uint64_t v28 = v5;
  __int128 v29 = &protocol witness table for FontSource;
  objc_super v8 = sub_1C1E0(v5, v6, v7);
  if (qword_7CA40 != -1) {
    swift_once(&qword_7CA40, sub_1BD70);
  }
  uint64_t v9 = (void *)qword_7DC08;
  *objc_super v8 = qword_7DC08;
  sub_1C144((uint64_t)v8);
  id v10 = v9;
  uint64_t v13 = sub_1C164((uint64_t)v10, v11, v12);
  *(void *)&v1[v26] = v13;
  uint64_t v14 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel;
  id v15 = sub_1C1E8(v13, "ams_primaryText");
  uint64_t v28 = v5;
  __int128 v29 = &protocol witness table for FontSource;
  objc_super v18 = sub_1C1E0((uint64_t)v15, v16, v17);
  if (qword_7CA48 != -1) {
    swift_once(&qword_7CA48, sub_1BD88);
  }
  uint64_t v19 = (void *)qword_7DC10;
  *objc_super v18 = qword_7DC10;
  sub_1C144((uint64_t)v18);
  id v20 = v19;
  *(void *)&v3[v14] = sub_1C1A0((uint64_t)v20, v21, v22);
  v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isHighlighted] = 0;
  v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled] = (char)v8;
  sub_1C110(&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics]);
  *uint64_t v23 = xmmword_5DC70;
  v23[1] = xmmword_5DC70;

  v27.receiver = v3;
  v27.super_class = (Class)type metadata accessor for DynamicButtonView();
  id v24 = objc_msgSendSuper2(&v27, "init");
  sub_1C21C();

  return v2;
}

void *sub_1AD3C(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v34 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel;
  id v10 = (void *)sub_1C150();
  objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v11 = v5;
  id v12 = sub_1C1E8((uint64_t)v11, "ams_primaryText");
  uint64_t v13 = sub_1C208();
  uint64_t v36 = v13;
  __int128 v37 = &protocol witness table for FontSource;
  uint64_t v16 = sub_1C1E0(v13, v14, v15);
  if (qword_7CA40 != -1) {
    swift_once(&qword_7CA40, sub_1BD70);
  }
  uint64_t v17 = (void *)qword_7DC08;
  void *v16 = qword_7DC08;
  sub_1C144((uint64_t)v16);
  id v18 = v17;
  uint64_t v21 = sub_1C164((uint64_t)v18, v19, v20);
  *(void *)&v5[v34] = v21;
  uint64_t v22 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel;
  id v23 = sub_1C1E8(v21, "ams_primaryText");
  uint64_t v36 = v13;
  __int128 v37 = &protocol witness table for FontSource;
  uint64_t v26 = sub_1C1E0((uint64_t)v23, v24, v25);
  if (qword_7CA48 != -1) {
    swift_once(&qword_7CA48, sub_1BD88);
  }
  objc_super v27 = (void *)qword_7DC10;
  *uint64_t v26 = qword_7DC10;
  sub_1C144((uint64_t)v26);
  id v28 = v27;
  *(void *)&v11[v22] = sub_1C1A0((uint64_t)v28, v29, v30);
  v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isHighlighted] = 0;
  v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled] = (char)v16;
  sub_1C110(&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics]);
  *__int128 v31 = xmmword_5DC70;
  v31[1] = xmmword_5DC70;

  v35.receiver = v11;
  v35.super_class = (Class)type metadata accessor for DynamicButtonView();
  id v32 = objc_msgSendSuper2(&v35, "initWithFrame:", a1, a2, a3, a4);
  sub_1C21C();

  return v10;
}

id sub_1AF80(void *a1)
{
  Swift::String v2 = v1;
  uint64_t v21 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel;
  Swift::Int v3 = (void *)sub_1C150();
  id v4 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  uint64_t v5 = v2;
  id v6 = objc_msgSend(v4, "ams_primaryText");
  uint64_t v7 = sub_1C208();
  uint64_t v25 = v7;
  uint64_t v26 = &protocol witness table for FontSource;
  objc_super v8 = sub_7BA4(v24);
  if (qword_7CA40 != -1) {
    swift_once(&qword_7CA40, sub_1BD70);
  }
  uint64_t v9 = (void *)qword_7DC08;
  *objc_super v8 = qword_7DC08;
  sub_1C230((uint64_t)v8);
  id v10 = v9;
  *(void *)&v2[v21] = DynamicLabel.__allocating_init(alignment:color:customTextStyle:)(1LL, v6, v24);
  uint64_t v11 = OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel;
  id v12 = objc_msgSend(v4, "ams_primaryText");
  uint64_t v25 = v7;
  uint64_t v26 = &protocol witness table for FontSource;
  uint64_t v13 = sub_7BA4(v24);
  if (qword_7CA48 != -1) {
    swift_once(&qword_7CA48, sub_1BD88);
  }
  uint64_t v14 = (void *)qword_7DC10;
  *uint64_t v13 = qword_7DC10;
  sub_1C230((uint64_t)v13);
  id v15 = v14;
  *(void *)&v5[v11] = DynamicLabel.__allocating_init(alignment:color:customTextStyle:)(1LL, v12, v24);
  v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isHighlighted] = 0;
  v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled] = 1;
  sub_1C110(&v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics]);
  _OWORD *v16 = xmmword_5DC70;
  v16[1] = xmmword_5DC70;

  v23.receiver = v5;
  v23.super_class = (Class)type metadata accessor for DynamicButtonView();
  id v17 = objc_msgSendSuper2(&v23, "initWithCoder:", a1);
  id v18 = v17;
  if (v17)
  {
    id v19 = v17;
    sub_1C21C();
  }

  return v18;
}

id sub_1B1D8(uint64_t a1, uint64_t a2)
{
  return sub_1B1F0(a1, a2, &OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
}

id sub_1B1E4(uint64_t a1, uint64_t a2)
{
  return sub_1B1F0(a1, a2, &OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel);
}

id sub_1B1F0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C178(v3, "setNeedsLayout");
}

id sub_1B238()
{
  return sub_1B250(&OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
}

id sub_1B244()
{
  return sub_1B250(&OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel);
}

id sub_1B250(void *a1)
{
  return sub_1C178(v1, "setNeedsLayout");
}

id sub_1B2C8()
{
  if ([*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel) hasContent]) {
    return &dword_0 + 1;
  }
  else {
    return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel) hasContent];
  }
}

void *sub_1B318()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutRect(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = (objc_class *)type metadata accessor for DynamicButtonView();
  v26.receiver = v0;
  v26.super_class = v6;
  objc_msgSendSuper2(&v26, "layoutSubviews");
  sub_1BDA0(&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics], v19);
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel];
  uint64_t v8 = sub_1C150();
  uint64_t v21 = v8;
  unint64_t v9 = sub_1BDDC();
  uint64_t v20 = v7;
  id v10 = *(void **)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel];
  uint64_t v24 = v8;
  unint64_t v25 = v9;
  unint64_t v22 = v9;
  objc_super v23 = v10;
  id v11 = v7;
  id v12 = v10;
  [v1 bounds];
  sub_1C910((uint64_t)v1, v13, v14, v15, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_1BFE8(v19);
}

double sub_1B46C(double a1, double a2)
{
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
  sub_1C150();
  sub_1C1F0();
  uint64_t v11 = v6;
  sub_1C180();
  id v7 = v3;
  double v8 = sub_1BE1C(v2, (uint64_t)v10, a1, a2);
  sub_1BFE8(v10);
  return v8;
}

uint64_t sub_1B600(uint64_t a1)
{
  uint64_t v1 = sub_1C248(a1);
  uint64_t v2 = v30;
  if (v30)
  {
    uint64_t v3 = v31;
    uint64_t v4 = sub_7A94(&v29, v30);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
    sub_1C1B0(v5);
    sub_18A24();
    uint64_t v11 = (void *)v10;
    unint64_t v8 = *(void *)(v10 + 16);
    if (v8 >= *(void *)(v10 + 24) >> 1)
    {
      sub_1C158();
      uint64_t v11 = (void *)v10;
    }

    void v11[2] = v8 + 1;
    unint64_t v9 = (char *)&v11[2 * v8];
    *((void *)v9 + 4) = v4;
    *((void *)v9 + 5) = v2;
  }

  else
  {
    uint64_t v6 = sub_1C190((uint64_t)v1);
    id v7 = sub_1C248(v6);
    sub_1C190((uint64_t)v7);
    uint64_t v10 = sub_1C198();
    uint64_t v11 = &_swiftEmptyArrayStorage;
  }

  id v12 = sub_1C23C(v10);
  uint64_t v13 = v30;
  if (v30)
  {
    uint64_t v14 = v31;
    double v15 = sub_1C1FC((uint64_t)v12);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    sub_1C1C0(v16);
  }

  else
  {
    uint64_t v17 = sub_1C190((uint64_t)v12);
    uint64_t v18 = sub_1C23C(v17);
    uint64_t v13 = v30;
    if (!v30)
    {
      sub_1C190((uint64_t)v18);
      sub_1C198();
      goto LABEL_17;
    }

    uint64_t v19 = v31;
    double v15 = sub_1C1FC((uint64_t)v18);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(v13, v19);
    sub_1C1C0(v20);
    sub_1C198();
  }

  if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
  {
    sub_1C158();
    uint64_t v11 = v27;
  }

  unint64_t v21 = v11[2];
  if (v21 >= v11[3] >> 1)
  {
    sub_1C158();
    uint64_t v11 = v28;
  }

  void v11[2] = v21 + 1;
  unint64_t v22 = (char *)&v11[2 * v21];
  *((void *)v22 + 4) = v15;
  *((void *)v22 + 5) = v13;
LABEL_17:
  uint64_t v29 = v11;
  uint64_t v23 = sub_5F6C(&qword_7DC78);
  unint64_t v24 = sub_1C098();
  uint64_t v25 = BidirectionalCollection<>.joined(separator:)(46LL, 0xE100000000000000LL, v23, v24);
  swift_bridgeObjectRelease(v11);
  return v25;
}

uint64_t sub_1B928()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicButtonView();
  objc_msgSendSuper2(&v2, "tintColorDidChange");
  return sub_1BA64();
}

id sub_1B998()
{
  id v1 = objc_msgSend((id)objc_opt_self(UIColor), "ams_clear");
  [v0 setBackgroundColor:v1];

  sub_56A54(14.0);
  [v0 setUserInteractionEnabled:0];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel]];
  return [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel]];
}

id sub_1BA38()
{
  double v1 = 0.5;
  if (v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_isEnabled]) {
    double v1 = 1.0;
  }
  return [v0 setAlpha:v1];
}

uint64_t sub_1BA64()
{
  uint64_t v1 = v0;
  objc_super v2 = *(uint64_t **)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
  uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v4 = sub_1C224(v3);
  sub_1C1D0(*v2);
  uint64_t v5 = *(uint64_t **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_titleLabel);
  uint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  id v7 = sub_1C224(v6);
  return sub_1C1D0(*v5);
}

double sub_1BB1C(double a1, double a2, float a3, float a4)
{
  if (a3 == 1000.0) {
    double v8 = a1;
  }
  else {
    double v8 = 1.79769313e308;
  }
  if (a4 != 1000.0) {
    a2 = 1.79769313e308;
  }
  sub_1C210(OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_metrics, v15[0]);
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin17DynamicButtonView_subtitleLabel);
  sub_1C150();
  sub_1C1F0();
  uint64_t v16 = v10;
  sub_1C180();
  id v11 = v5;
  double v12 = sub_1BE1C(v4, (uint64_t)v15, v8, a2);
  if (a3 == 1000.0) {
    double v13 = a1;
  }
  else {
    double v13 = v12;
  }
  sub_1BFE8(v15);
  return v13;
}

id sub_1BBFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicButtonView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DynamicButtonView()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin17DynamicButtonView);
}

uint64_t storeEnumTagSinglePayload for DynamicButtonView.Style(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1BCD4 + 4 * byte_5DC80[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_1BCF4 + 4 * byte_5DC85[v4]))();
  }
}

_BYTE *sub_1BCD4(_BYTE *result, char a2)
{
  *BOOL result = a2;
  return result;
}

_BYTE *sub_1BCF4(_BYTE *result)
{
  *BOOL result = 0;
  return result;
}

_DWORD *sub_1BCFC(_DWORD *result, int a2)
{
  *BOOL result = a2;
  return result;
}

_WORD *sub_1BD04(_WORD *result, __int16 a2)
{
  *BOOL result = a2;
  return result;
}

_WORD *sub_1BD0C(_WORD *result)
{
  *BOOL result = 0;
  return result;
}

_DWORD *sub_1BD14(_DWORD *result)
{
  *BOOL result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DynamicButtonView.Style()
{
  return &type metadata for DynamicButtonView.Style;
}

unint64_t sub_1BD34()
{
  unint64_t result = qword_7DC68;
  if (!qword_7DC68)
  {
    unint64_t result = swift_getWitnessTable(&unk_5DD20, &type metadata for DynamicButtonView.Style);
    atomic_store(result, (unint64_t *)&qword_7DC68);
  }

  return result;
}

UIFontTextStyle sub_1BD70()
{
  qword_7DC08 = (uint64_t)UIFontTextStyleCaption1;
  return UIFontTextStyleCaption1;
}

UIFontTextStyle sub_1BD88()
{
  qword_7DC10 = (uint64_t)UIFontTextStyleHeadline;
  return UIFontTextStyleHeadline;
}

_OWORD *sub_1BDA0(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

unint64_t sub_1BDDC()
{
  unint64_t result = qword_7DC70;
  if (!qword_7DC70)
  {
    uint64_t v1 = type metadata accessor for DynamicLabel(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DynamicLabel, v1);
    atomic_store(result, (unint64_t *)&qword_7DC70);
  }

  return result;
}

double sub_1BE1C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for VerticalFlowLayout(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v12 = CGSize.subtracting(insets:)(0.0, *(double *)(a2 + 8), 0.0, *(double *)(a2 + 24), a3, a4);
  double v14 = v13;
  uint64_t v15 = *(void *)(a2 + 256);
  sub_7A94((void *)(a2 + 232), v15);
  char v16 = dispatch thunk of LayoutView.hasContent.getter(v15);
  sub_1C01C(a2, (uint64_t)v24);
  if ((v16 & 1) == 0)
  {
    sub_1BFE8(v24);
    goto LABEL_5;
  }

  uint64_t v17 = v26;
  sub_7A94(v25, v26);
  char v18 = dispatch thunk of LayoutView.isHidden.getter(v17);
  sub_1BFE8(v24);
  if ((v18 & 1) != 0)
  {
LABEL_5:
    uint64_t v19 = (void *)(a2 + 72);
    uint64_t v20 = *(void *)(a2 + 96);
    uint64_t v21 = *(void *)(a2 + 104);
    goto LABEL_6;
  }

  uint64_t v19 = (void *)(a2 + 112);
  uint64_t v20 = *(void *)(a2 + 136);
  uint64_t v21 = *(void *)(a2 + 144);
LABEL_6:
  sub_7A94(v19, v20);
  dispatch thunk of AnyDimension.rawValue(in:)(a1, v20, v21);
  sub_1CBD0();
  VerticalFlowLayout.measurements(fitting:in:)(a1, v12, v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a3;
}

void *sub_1BFE8(void *a1)
{
  return a1;
}

uint64_t sub_1C01C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C058(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7CAF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_1C098()
{
  unint64_t result = qword_7DC80;
  if (!qword_7DC80)
  {
    uint64_t v1 = sub_14B78(&qword_7DC78);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_7DC80);
  }

  return result;
}

void *sub_1C0DC(void *a1)
{
  return a1;
}

void sub_1C110(void *a1@<X8>)
{
  a1[7] = v1;
  a1[8] = v2;
  a1[4] = 0LL;
  a1[12] = v1;
  a1[13] = v2;
  a1[9] = 0x4049000000000000LL;
  a1[17] = v1;
  a1[18] = v2;
  a1[14] = 0x4049000000000000LL;
  a1[22] = v1;
  a1[23] = v2;
  a1[19] = 0x4000000000000000LL;
  a1[27] = v1;
  a1[28] = v2;
  a1[24] = 0LL;
}

uint64_t sub_1C144(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t sub_1C150()
{
  return type metadata accessor for DynamicLabel(0LL);
}

void sub_1C158()
{
}

uint64_t sub_1C164(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return DynamicLabel.__allocating_init(alignment:color:customTextStyle:)(1LL, v3, va);
}

id sub_1C178(id a1, SEL a2)
{
  return [a1 a2];
}

id sub_1C180()
{
  return v0;
}

uint64_t sub_1C190(uint64_t a1, ...)
{
  return sub_1C058((uint64_t)va);
}

uint64_t sub_1C198()
{
  return swift_bridgeObjectRelease(0LL);
}

uint64_t sub_1C1A0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return DynamicLabel.__allocating_init(alignment:color:customTextStyle:)(1LL, v3, va);
}

uint64_t sub_1C1B0(uint64_t a1, ...)
{
  return sub_62AC((uint64_t *)va);
}

uint64_t sub_1C1C0(uint64_t a1, ...)
{
  return sub_62AC((uint64_t *)va);
}

uint64_t sub_1C1D0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (*v1 & a1)))();
}

void *sub_1C1E0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return sub_7BA4((uint64_t *)va);
}

id sub_1C1E8(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

unint64_t sub_1C1F0()
{
  return sub_1BDDC();
}

void *sub_1C1FC(uint64_t a1, ...)
{
  return sub_7A94((uint64_t *)va, v1);
}

uint64_t sub_1C208()
{
  return type metadata accessor for FontSource(0LL);
}

_OWORD *sub_1C210@<X0>(uint64_t a1@<X8>, __int128 a2)
{
  return sub_1BDA0((_OWORD *)(v2 + a1), &a2);
}

id sub_1C21C()
{
  return sub_1B998();
}

id sub_1C224(void *a1)
{
  if (v1) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v2;
  }
  return [a1 *v4];
}

uint64_t sub_1C230(uint64_t a1)
{
  return v1(a1, v3, v2);
}

void *sub_1C23C(uint64_t a1, ...)
{
  void *(*v1)(uint64_t *__return_ptr);
  va_list va;
  va_start(va, a1);
  return v1((uint64_t *)va);
}

void *sub_1C248(uint64_t a1, ...)
{
  void *(*v1)(uint64_t *__return_ptr);
  va_list va;
  va_start(va, a1);
  return v1((uint64_t *)va);
}

uint64_t destroy for DynamicButtonViewLayout(void *a1)
{
  return sub_62AC(a1 + 34);
}

uint64_t initializeWithCopy for DynamicButtonViewLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 72, a2 + 72);
  __int128 v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 112, a2 + 112);
  __int128 v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 176) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 152, a2 + 152);
  __int128 v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 192, a2 + 192);
  __int128 v10 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 256) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 232, a2 + 232);
  uint64_t v11 = *(void *)(a2 + 296);
  uint64_t v12 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = v11;
  *(void *)(a1 + 304) = v12;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 272, a2 + 272);
  return a1;
}

void *assignWithCopy for DynamicButtonViewLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_6520(a1 + 4, a2 + 4);
  sub_6520(a1 + 9, a2 + 9);
  sub_6520(a1 + 14, a2 + 14);
  sub_6520(a1 + 19, a2 + 19);
  sub_6520(a1 + 24, a2 + 24);
  sub_6520(a1 + 29, a2 + 29);
  sub_6520(a1 + 34, a2 + 34);
  return a1;
}

void *initializeWithTake for DynamicButtonViewLayout(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for DynamicButtonViewLayout(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  sub_62AC((void *)(a1 + 32));
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_62AC((void *)(a1 + 72));
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_62AC((void *)(a1 + 112));
  __int128 v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  sub_62AC((void *)(a1 + 152));
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  sub_62AC((void *)(a1 + 192));
  __int128 v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  sub_62AC((void *)(a1 + 232));
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  sub_62AC((void *)(a1 + 272));
  __int128 v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicButtonViewLayout(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 312))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicButtonViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 312) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 312) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for DynamicButtonViewLayout()
{
  return &type metadata for DynamicButtonViewLayout;
}

uint64_t destroy for DynamicButtonViewLayout.Metrics(void *a1)
{
  return sub_62AC(a1 + 24);
}

_OWORD *initializeWithCopy for DynamicButtonViewLayout.Metrics(_OWORD *a1, _OWORD *a2)
{
  __int128 v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  __int128 v5 = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)a1 + 56) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  __int128 v6 = a2[6];
  a1[6] = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)a1 + 72, (uint64_t)a2 + 72);
  __int128 v7 = *(_OWORD *)((char *)a2 + 136);
  *(_OWORD *)((char *)a1 + 136) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 7), (uint64_t)(a2 + 7));
  __int128 v8 = a2[11];
  a1[11] = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)a1 + 152, (uint64_t)a2 + 152);
  __int128 v9 = *(_OWORD *)((char *)a2 + 216);
  *(_OWORD *)((char *)a1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12));
  return a1;
}

void *assignWithCopy for DynamicButtonViewLayout.Metrics(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_6520(a1 + 4, a2 + 4);
  sub_6520(a1 + 9, a2 + 9);
  sub_6520(a1 + 14, a2 + 14);
  sub_6520(a1 + 19, a2 + 19);
  sub_6520(a1 + 24, a2 + 24);
  return a1;
}

void *initializeWithTake for DynamicButtonViewLayout.Metrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE8uLL);
}

uint64_t assignWithTake for DynamicButtonViewLayout.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  sub_62AC((void *)(a1 + 32));
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_62AC((void *)(a1 + 72));
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_62AC((void *)(a1 + 112));
  __int128 v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  sub_62AC((void *)(a1 + 152));
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  sub_62AC((void *)(a1 + 192));
  __int128 v7 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v7;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for DynamicButtonViewLayout.Metrics(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 232))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DynamicButtonViewLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 232) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for DynamicButtonViewLayout.Metrics()
{
  return &type metadata for DynamicButtonViewLayout.Metrics;
}

uint64_t sub_1C910(uint64_t a1, double a2, double a3, double a4, double a5)
{
  __int128 v6 = (void *)v5;
  uint64_t v12 = type metadata accessor for Baselines(0LL);
  __chkstk_darwin(v12);
  sub_12718();
  uint64_t v54 = v13;
  uint64_t v14 = type metadata accessor for VerticalFlowLayout(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_F76C();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for LayoutRect(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  sub_F76C();
  uint64_t v23 = v22 - v21;
  double v25 = CGRect.subtracting(insets:)( v24,  *(double *)v5,  *(double *)(v5 + 8),  *(double *)(v5 + 16),  *(double *)(v5 + 24),  a2,  a3,  a4,  a5);
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;
  sub_1CBD0();
  VerticalFlowLayout.placeChildren(relativeTo:in:)(a1, v25, v27, v29, v31);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v19);
  uint64_t v33 = *(void *)(v5 + 296);
  uint64_t v32 = *(void *)(v5 + 304);
  sub_7A94(v6 + 34, v6[37]);
  dispatch thunk of LayoutView.frame.getter(v33, *(void *)(v32 + 8));
  double v35 = v34;
  uint64_t v36 = sub_1D124(v6 + 29);
  LOBYTE(v32) = dispatch thunk of LayoutView.hasContent.getter(v36);
  sub_1C01C((uint64_t)v6, (uint64_t)v55);
  if ((v32 & 1) != 0)
  {
    uint64_t v37 = sub_1D124(v56);
    char v38 = dispatch thunk of LayoutView.isHidden.getter(v37);
    sub_1BFE8(v55);
    double v39 = 0.0;
    double v40 = 0.0;
    if ((v38 & 1) == 0)
    {
      uint64_t v41 = sub_1D124(v6 + 29);
      dispatch thunk of LayoutView.frame.getter(v41, v42);
      double v40 = v43;
      uint64_t v44 = v6[22];
      uint64_t v45 = v6[23];
      sub_7A94(v6 + 19, v44);
      double v39 = dispatch thunk of AnyDimension.rawValue(in:)(a1, v44, v45);
    }
  }

  else
  {
    sub_1BFE8(v55);
    double v39 = 0.0;
    double v40 = 0.0;
  }

  v57.origin.x = sub_1D168();
  CGFloat v46 = (CGRectGetHeight(v57) - v35 - v40 - v39) * 0.5 + a3;
  __int128 v47 = (uint64_t (*)(uint64_t, void))sub_1D144(v6 + 34);
  *(CGFloat *)(v48 + 8) = v46;
  sub_1D194(v47);
  __int128 v49 = (uint64_t (*)(uint64_t, void))sub_1D144(v6 + 29);
  *(double *)(v50 + 8) = v39 + v35 + v46;
  uint64_t v51 = sub_1D194(v49);
  Baselines.init()(v51);
  double v52 = sub_1D168();
  return LayoutRect.init(origin:size:baselines:)(v54, v52);
}

uint64_t sub_1CBD0()
{
  char v1 = v0;
  uint64_t v39 = type metadata accessor for VerticalFlowLayout.HorizontalPlacement(0LL);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  sub_12718();
  uint64_t v36 = v2;
  uint64_t v3 = type metadata accessor for VerticalFlowLayout.VerticalPlacement(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_12718();
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for VerticalFlowLayout.ExclusionCondition(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_F76C();
  uint64_t v34 = v10 - v9;
  uint64_t v11 = sub_5F6C(&qword_7DC90);
  uint64_t v38 = v8;
  uint64_t v12 = swift_allocObject( v11,  ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
        + 3LL * *(void *)(v8 + 72),
          *(unsigned __int8 *)(v8 + 80) | 7LL);
  *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v13 = static VerticalFlowLayout.ExclusionCondition.hasNoHeight.getter();
  uint64_t v14 = static VerticalFlowLayout.ExclusionCondition.hasNoContent.getter(v13);
  static VerticalFlowLayout.ExclusionCondition.isHidden.getter(v14);
  v43[0] = v12;
  unint64_t v15 = sub_1D060();
  uint64_t v16 = sub_5F6C(&qword_7DCA0);
  unint64_t v17 = sub_1D0A0();
  dispatch thunk of SetAlgebra.init<A>(_:)(v43, v16, v17, v7, v15);
  uint64_t v18 = sub_5F6C(&qword_7DCB0);
  uint64_t v19 = *(void *)(type metadata accessor for VerticalFlowLayout.Child(0LL) - 8);
  uint64_t v35 = swift_allocObject( v18,  ((*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
        + 2LL * *(void *)(v19 + 72),
          *(unsigned __int8 *)(v19 + 80) | 7LL);
  *(_OWORD *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD80;
  uint64_t v20 = v1[37];
  uint64_t v21 = v1[38];
  uint64_t v22 = sub_7A94(v1 + 34, v20);
  uint64_t v44 = v20;
  uint64_t v23 = sub_1D17C(*(void *)(v21 + 8));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16LL))(v23, v22, v20);
  uint64_t v42 = 0LL;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  unsigned int v33 = enum case for VerticalFlowLayout.VerticalPlacement.top(_:);
  uint64_t v32 = *(void (**)(uint64_t))(v4 + 104);
  v32(v6);
  unsigned int v31 = enum case for VerticalFlowLayout.HorizontalPlacement.center(_:);
  double v30 = *(void (**)(uint64_t))(v37 + 104);
  v30(v36);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)( v43,  v1 + 24,  &v40,  v6,  v36,  v34);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v24(v36, v39);
  sub_1D188();
  sub_1D0E4((uint64_t)&v40);
  sub_62AC(v43);
  uint64_t v26 = v1[32];
  uint64_t v25 = v1[33];
  double v27 = sub_7A94(v1 + 29, v26);
  uint64_t v44 = v26;
  double v28 = sub_1D17C(*(void *)(v25 + 8));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16LL))(v28, v27, v26);
  uint64_t v42 = 0LL;
  __int128 v40 = 0u;
  __int128 v41 = 0u;
  ((void (*)(uint64_t, void, uint64_t))v32)(v6, v33, v3);
  ((void (*)(uint64_t, void, uint64_t))v30)(v36, v31, v39);
  static VerticalFlowLayout.Child.make(forView:topSpace:bottomSpace:verticalPlacement:horizontalPlacement:excludeWhen:)( v43,  v1 + 19,  &v40,  v6,  v36,  v34);
  v24(v36, v39);
  sub_1D188();
  sub_1D0E4((uint64_t)&v40);
  sub_62AC(v43);
  VerticalFlowLayout.init(expandChildrenToFit:children:)(0LL, v35);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v34, v7);
}

  ;
}

void sub_1CFA8()
{
}

_OWORD *sub_1CFCC@<X0>(_OWORD *a1@<X8>)
{
  return sub_1BDA0(v1, a1);
}

double sub_1CFDC(uint64_t a1, double a2, double a3)
{
  return sub_1BE1C(a1, v3, a2, a3);
}

unint64_t sub_1D024()
{
  unint64_t result = qword_7DC88;
  if (!qword_7DC88)
  {
    unint64_t result = swift_getWitnessTable(&unk_5DDC0, &type metadata for DynamicButtonViewLayout);
    atomic_store(result, (unint64_t *)&qword_7DC88);
  }

  return result;
}

unint64_t sub_1D060()
{
  unint64_t result = qword_7DC98;
  if (!qword_7DC98)
  {
    uint64_t v1 = type metadata accessor for VerticalFlowLayout.ExclusionCondition(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for VerticalFlowLayout.ExclusionCondition, v1);
    atomic_store(result, (unint64_t *)&qword_7DC98);
  }

  return result;
}

unint64_t sub_1D0A0()
{
  unint64_t result = qword_7DCA8;
  if (!qword_7DCA8)
  {
    uint64_t v1 = sub_14B78(&qword_7DCA0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_7DCA8);
  }

  return result;
}

uint64_t sub_1D0E4(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7DCB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1D124(void *a1)
{
  return v1;
}

uint64_t sub_1D144(void *a1)
{
  return dispatch thunk of LayoutView.frame.modify(v1 + 16, v3, *(void *)(v2 + 8));
}

double sub_1D168()
{
  return v0;
}

void *sub_1D17C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 96) = a1;
  return sub_7BA4((void *)(v1 - 128));
}

uint64_t sub_1D188()
{
  return v0(v1, v2);
}

uint64_t sub_1D194@<X0>(uint64_t (*a1)(uint64_t, void)@<X8>)
{
  return a1(v1 + 16, 0LL);
}

unint64_t DynamicViewControllerPresentationError.failureReason.getter(char a1)
{
  if ((a1 & 1) != 0) {
    return 0xD000000000000019LL;
  }
  else {
    return 0xD000000000000011LL;
  }
}

BOOL static DynamicViewControllerPresentationError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void DynamicViewControllerPresentationError.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int DynamicViewControllerPresentationError.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL sub_1D254(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static DynamicViewControllerPresentationError.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1D260()
{
  return DynamicViewControllerPresentationError.hashValue.getter(*v0);
}

void sub_1D268(uint64_t a1)
{
}

unint64_t sub_1D274()
{
  unint64_t result = qword_7DCC0;
  if (!qword_7DCC0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for DynamicViewControllerPresentationError,  &type metadata for DynamicViewControllerPresentationError);
    atomic_store(result, (unint64_t *)&qword_7DCC0);
  }

  return result;
}

unint64_t sub_1D2B4()
{
  unint64_t result = qword_7DCC8;
  if (!qword_7DCC8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for DynamicViewControllerPresentationError,  &type metadata for DynamicViewControllerPresentationError);
    atomic_store(result, (unint64_t *)&qword_7DCC8);
  }

  return result;
}

unint64_t sub_1D2F4()
{
  return DynamicViewControllerPresentationError.failureReason.getter(*v0);
}

uint64_t getEnumTagSinglePayload for DynamicViewControllerPresentationError( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for DynamicViewControllerPresentationError( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1D3D8 + 4 * byte_5DE35[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D40C + 4 * byte_5DE30[v4]))();
}

uint64_t sub_1D40C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D414(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1D41CLL);
  }
  return result;
}

uint64_t sub_1D428(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1D430LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1D434(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D43C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1D448(_BYTE *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicViewControllerPresentationError()
{
  return &type metadata for DynamicViewControllerPresentationError;
}

uint64_t sub_1D464(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    *(void *)&__int128 v45 = 0LL;
    *((void *)&v45 + 1) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(16LL);
    swift_bridgeObjectRelease(*((void *)&v45 + 1));
    sub_1D7B4();
    v12._countAndFlagsBits = a1;
    v12._object = a2;
    String.append(_:)(v12);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v4, a3);
    uint64_t v14 = _getErrorEmbeddedNSError<A>(_:)(v11, a3, a4);
    if (v14)
    {
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a3);
    }

    else
    {
      uint64_t v15 = swift_allocError(a3, a4, 0LL, 0LL);
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v11, a3);
    }

    unint64_t v17 = _swiftEmptyArrayStorage;
    while (1)
    {
      swift_errorRetain(v15);
      uint64_t v18 = (void *)_convertErrorToNSError(_:)(v15);
      uint64_t v19 = swift_errorRelease(v15);
      id v21 = sub_1D7DC(v19, "localizedFailureReason");
      if (!v21) {
        id v21 = sub_1D7DC(0LL, "description");
      }
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21, v20);
      uint64_t v24 = v23;

      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C158();
        unint64_t v17 = (void *)isUniquelyReferenced_nonNull_native;
      }

      unint64_t v26 = v17[2];
      if (v26 >= v17[3] >> 1)
      {
        sub_1C158();
        unint64_t v17 = (void *)isUniquelyReferenced_nonNull_native;
      }

      v17[2] = v26 + 1;
      double v27 = &v17[2 * v26];
      void v27[4] = v22;
      v27[5] = v24;
      id v28 = sub_1D7DC(isUniquelyReferenced_nonNull_native, "userInfo");
      uint64_t v29 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v28,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);

      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey, v30);
      uint64_t v33 = v32;
      if (!*(void *)(v29 + 16)) {
        goto LABEL_18;
      }
      unint64_t v34 = sub_21FB8(v31, v32);
      if ((v35 & 1) != 0)
      {
        sub_12350(*(void *)(v29 + 56) + 32 * v34, (uint64_t)&v45);
      }

      else
      {
LABEL_18:
        __int128 v45 = 0u;
        __int128 v46 = 0u;
      }

      swift_bridgeObjectRelease(v29);
      swift_errorRelease(v15);
      swift_bridgeObjectRelease(v33);
      if (!*((void *)&v46 + 1)) {
        break;
      }
      uint64_t v36 = sub_5F6C(&qword_7D5D0);
      uint64_t v15 = v44;
    }

    sub_7AB8((uint64_t)&v45);
LABEL_23:
    *(void *)&__int128 v45 = v17;
    uint64_t v37 = sub_5F6C(&qword_7DC78);
    unint64_t v38 = sub_1C098();
    uint64_t v39 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v37, v38);
    __int128 v41 = v40;
    swift_bridgeObjectRelease(v17);
    *(void *)&__int128 v45 = 0LL;
    *((void *)&v45 + 1) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(16LL);
    swift_bridgeObjectRelease(*((void *)&v45 + 1));
    sub_1D7B4();
    v42._countAndFlagsBits = v39;
    v42._object = v41;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(v41);
  }

  return v45;
}

void sub_1D7B4()
{
  *(_BYTE *)(v0 - 97) = -18;
}

id sub_1D7DC(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_1D7E4(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v6, v2, a1);
  uint64_t v8 = sub_5F6C(&qword_7DCD0);
  if (swift_dynamicCast(v13, v6, a1, v8, 6LL))
  {
    sub_6010(v13, (uint64_t)&v15);
    uint64_t v9 = *((void *)&v16 + 1);
    uint64_t v10 = v17;
    sub_7A94(&v15, *((uint64_t *)&v16 + 1));
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    sub_62AC(&v15);
  }

  else
  {
    uint64_t v14 = 0LL;
    memset(v13, 0, sizeof(v13));
    sub_DBD8((uint64_t)v13, &qword_7DCD8);
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    uint64_t v11 = sub_1D910(0LL, 0LL, (uint64_t)&v15, a1, a2);
    sub_DBD8((uint64_t)&v15, &qword_7DDE0);
  }

  return v11;
}

uint64_t sub_1D910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a3;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v7 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v10);
  uint64_t v12 = _getErrorEmbeddedNSError<A>(_:)(v9, a4, a5);
  if (v12)
  {
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a4);
  }

  else
  {
    uint64_t v13 = swift_allocError(a4, a5, 0LL, 0LL);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14, v9, a4);
  }

  __int128 v15 = (void *)_convertErrorToNSError(_:)(v13);
  swift_errorRelease(v13);
  id v16 = [v15 code];
  id v17 = [v15 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);
  uint64_t v21 = v20;

  id v22 = [v15 domain];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);
  uint64_t v26 = v25;

  id v27 = [v15 userInfo];
  uint64_t v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v27,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);

  sub_1EB24(v28);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease(v28);
  uint64_t v31 = sub_1DB2C((uint64_t)v16, 0, v35, v36, v19, v21, v24, v26, v30, v34);

  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v30);
  return v31;
}

uint64_t sub_1DB2C( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = sub_5F6C(&qword_7D638);
  uint64_t inited = swift_initStackObject(v17, v28);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5D750;
  uint64_t v26 = 1701080931LL;
  unint64_t v27 = 0xE400000000000000LL;
  AnyHashable.init<A>(_:)(&v26, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 96) = sub_5F6C(&qword_7D7F8);
  *(void *)(inited + 72) = a1;
  *(_BYTE *)(inited + 80) = a2 & 1;
  uint64_t v26 = 0x6972745365646F63LL;
  unint64_t v27 = 0xEA0000000000676ELL;
  AnyHashable.init<A>(_:)(&v26, &type metadata for String, &protocol witness table for String);
  uint64_t v19 = sub_5F6C(&qword_7D200);
  *(void *)(inited + 168) = v19;
  *(void *)(inited + 144) = a3;
  *(void *)(inited + 152) = a4;
  uint64_t v26 = 0x7470697263736564LL;
  unint64_t v27 = 0xEB000000006E6F69LL;
  swift_bridgeObjectRetain(a4);
  AnyHashable.init<A>(_:)(&v26, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 240) = v19;
  *(void *)(inited + 2swift_unknownObjectWeakDestroy(v0 + 16) = a5;
  *(void *)(inited + 224) = a6;
  uint64_t v26 = 0x6E69616D6F64LL;
  unint64_t v27 = 0xE600000000000000LL;
  swift_bridgeObjectRetain(a6);
  AnyHashable.init<A>(_:)(&v26, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 312) = v19;
  *(void *)(inited + 288) = a7;
  *(void *)(inited + 296) = a8;
  uint64_t v26 = 0x6F666E4972657375LL;
  unint64_t v27 = 0xE800000000000000LL;
  swift_bridgeObjectRetain(a8);
  AnyHashable.init<A>(_:)(&v26, &type metadata for String, &protocol witness table for String);
  uint64_t v20 = sub_5F6C(&qword_7DDE0);
  *(void *)(inited + 384) = v20;
  uint64_t v21 = swift_allocObject(&unk_73240, 48LL, 7LL);
  id v22 = (void *)(v21 + 16);
  *(void *)(inited + 360) = v21;
  if (a9)
  {
    sub_1DE08(a9, v22);
  }

  else
  {
    *(_OWORD *)id v22 = 0u;
    *(_OWORD *)(v21 + 32) = 0u;
  }

  uint64_t v26 = 0x65756C6176LL;
  unint64_t v27 = 0xE500000000000000LL;
  AnyHashable.init<A>(_:)(&v26, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 456) = v20;
  uint64_t v23 = swift_allocObject(&unk_73240, 48LL, 7LL);
  *(void *)(inited + 432) = v23;
  sub_19F44(a10, v23 + 16);
  return Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
}

uint64_t sub_1DDDC()
{
  if (*(void *)(v0 + 40)) {
    sub_62AC((void *)(v0 + 16));
  }
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1DE08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v75 = a2;
  a2[3] = sub_5F6C(&qword_7D668);
  sub_1E640(a1, v118);
  uint64_t v3 = v118[0];
  int64_t v4 = v118[3];
  unint64_t v5 = v118[4];
  uint64_t v78 = v118[1];
  int64_t v81 = (unint64_t)(v118[2] + 64LL) >> 6;
  uint64_t v87 = &__src[40];
  swift_bridgeObjectRetain(a1);
  unsigned int v6 = &_swiftEmptyDictionarySingleton;
  uint64_t v84 = (char *)&type metadata for Any + 8;
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    sub_D734(*(void *)(v3 + 48) + 40 * v8, (uint64_t)__src);
    sub_12350(*(void *)(v3 + 56) + 32 * v8, (uint64_t)v87);
    id v16 = memcpy(__dst, __src, sizeof(__dst));
    sub_1E6A4( (uint64_t)v16,  v17,  v18,  v19,  v20,  v21,  v22,  v23,  (uint64_t)v75,  v78,  v81,  (uint64_t)v84,  (uint64_t)v87,  (uint64_t)v90,  v93,  *((uint64_t *)&v93 + 1),  v94,  *((uint64_t *)&v94 + 1),  v95,  v96,  *((uint64_t *)&v96 + 1),  v97,  v98,  v99,  v100,  v101,  v102,  v103,  v104,  v105[0],  v106,  v107,  v108,  v109,  v110,  *((uint64_t *)&v110 + 1),  v111,  v112,  v113,  *((uint64_t *)&v113 + 1),  v114,  v115,  __dst[0]);
    sub_1E678();
    sub_12340(&v110, &v113);
    uint64_t v24 = sub_D6CC((uint64_t)v105);
    sub_1E6A4( v24,  v25,  v26,  v27,  v28,  v29,  v30,  v31,  v76,  v79,  v82,  v85,  v88,  v91,  v93,  *((uint64_t *)&v93 + 1),  v94,  *((uint64_t *)&v94 + 1),  v95,  v96,  *((uint64_t *)&v96 + 1),  v97,  v98,  v99,  v100,  v101,  v102,  v103,  v104,  v105[0],  v106,  v107,  v108,  v109,  v110,  *((uint64_t *)&v110 + 1),  v111,  v112,  v113,  *((uint64_t *)&v113 + 1),  v114,  v115,  __dst[0]);
    sub_1E678();
    sub_D734((uint64_t)v105, (uint64_t)&v96);
    AnyHashable.init<A>(_:)(&v96, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
    sub_D6CC((uint64_t)v105);
    *((void *)&v94 + 1) = v86;
    *(void *)&__int128 v93 = swift_allocObject(&unk_73268, 48LL, 7LL);
    sub_12350((uint64_t)&v113, v93 + 16);
    sub_1E3DC((uint64_t)&v93, (uint64_t)&v96);
    sub_62AC(&v93);
    if (!v98)
    {
      sub_DBD8((uint64_t)&v96, &qword_7DDE0);
      uint64_t v59 = swift_bridgeObjectRetain(v6);
      unint64_t v67 = sub_1E690(v59, v60, v61, v62, v63, v64, v65, v66, v77, v80, v83, v86, v89, v92, v93, *((uint64_t *)&v93 + 1));
      char v69 = v68;
      swift_bridgeObjectRelease(v6);
      if ((v69 & 1) != 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
        unint64_t v90 = v6;
        Swift::Int v71 = v6[3];
        sub_5F6C(&qword_7D7E8);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v71);
        sub_D6CC(v6[6] + 40 * v67);
        sub_12340((_OWORD *)(v6[7] + 32 * v67), &v93);
        _NativeDictionary._delete(at:)( v67,  v6,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
        swift_bridgeObjectRelease(0x8000000000000000LL);
      }

      else
      {
        __int128 v93 = 0u;
        __int128 v94 = 0u;
      }

      sub_D6CC((uint64_t)&v100);
      sub_DBD8((uint64_t)&v93, &qword_7DDE0);
      goto LABEL_39;
    }

    sub_12340(&v96, &v93);
    uint64_t v32 = swift_isUniquelyReferenced_nonNull_native(v6);
    Swift::Bool v33 = v32;
    unint64_t v41 = sub_1E690( v32,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  v77,  v80,  v83,  v86,  v89,  (uint64_t)v6,  v93,  *((uint64_t *)&v93 + 1));
    uint64_t v43 = v6[2];
    BOOL v44 = (v42 & 1) == 0;
    Swift::Int v45 = v43 + v44;
    if (__OFADD__(v43, v44)) {
      break;
    }
    unint64_t v46 = v41;
    char v47 = v42;
    sub_5F6C(&qword_7D7E8);
    BOOL v48 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v33, v45);
    if (v48)
    {
      unint64_t v56 = sub_1E690( v48,  v49,  v50,  v51,  v52,  v53,  v54,  v55,  (uint64_t)v75,  v78,  v81,  (uint64_t)v84,  (uint64_t)v87,  (uint64_t)v90,  v93,  *((uint64_t *)&v93 + 1));
      if ((v47 & 1) != (v57 & 1)) {
        goto LABEL_45;
      }
      unint64_t v46 = v56;
    }

    unsigned int v6 = v90;
    if ((v47 & 1) != 0)
    {
      uint64_t v58 = (void *)(v90[7] + 32 * v46);
      sub_62AC(v58);
      sub_12340(&v93, v58);
    }

    else
    {
      v90[(v46 >> 6) + 8] |= 1LL << v46;
      sub_D734((uint64_t)&v100, v90[6] + 40 * v46);
      sub_12340(&v93, (_OWORD *)(v90[7] + 32 * v46));
      uint64_t v72 = v90[2];
      BOOL v13 = __OFADD__(v72, 1LL);
      uint64_t v73 = v72 + 1;
      if (v13) {
        goto LABEL_44;
      }
      v90[2] = v73;
    }

    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_D6CC((uint64_t)&v100);
LABEL_39:
    sub_62AC(&v113);
    sub_62AC(&v110);
    sub_DBD8((uint64_t)__dst, (uint64_t *)&unk_7DEA0);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1LL)) {
      goto LABEL_43;
    }
    if (v9 >= v81) {
      goto LABEL_41;
    }
    unint64_t v10 = *(void *)(v78 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      sub_1E698();
      if (v12 == v13) {
        goto LABEL_41;
      }
      sub_1E684();
      if (!v10)
      {
        sub_1E698();
        if (v12 == v13) {
          goto LABEL_41;
        }
        sub_1E684();
        if (!v10)
        {
          sub_1E698();
          if (v12 == v13) {
            goto LABEL_41;
          }
          sub_1E684();
          if (!v10)
          {
            sub_1E698();
            if (v12 == v13) {
              goto LABEL_41;
            }
            sub_1E684();
            if (!v10)
            {
              int64_t v11 = v14 + 5;
              if (v14 + 5 >= v81) {
                goto LABEL_41;
              }
              unint64_t v10 = *(void *)(v78 + 8 * v11);
              if (!v10)
              {
                int64_t v15 = v4 + 7;
                while (v15 < v81)
                {
                  unint64_t v10 = *(void *)(v78 + 8 * v15++);
                  if (v10)
                  {
                    int64_t v11 = v15 - 1;
                    goto LABEL_24;
                  }
                }

LABEL_41:
                uint64_t result = swift_release();
                *uint64_t v75 = v6;
                return result;
              }
            }
          }
        }
      }
    }

LABEL_24:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
  }

  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

uint64_t sub_1E2B0(uint64_t a1)
{
  if ((swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, &type metadata for Bool, 0LL) & 1) == 0
    && !swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, &type metadata for Double, 0LL)
    && (swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, &type metadata for Float, 0LL) & 1) == 0
    && (swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, &type metadata for Int, 0LL) & 1) == 0)
  {
    unint64_t v1 = sub_1E600();
    if (swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, v1, 0LL))
    {
    }

    else
    {
      if (!swift_dynamicCast(v4, v5, (char *)&type metadata for Any + 8, &type metadata for String, 0LL))
      {
        uint64_t v2 = 0LL;
        goto LABEL_10;
      }

      swift_bridgeObjectRelease(v4[1]);
    }
  }

  uint64_t v2 = 1LL;
LABEL_10:
  sub_62AC(v5);
  return v2;
}

double sub_1E3DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((sub_1E2B0(a1) & 1) != 0)
  {
    sub_12350(a1, a2);
    return result;
  }

  sub_12350(a1, (uint64_t)v15);
  uint64_t v5 = sub_5F6C(&qword_7DCD0);
  if ((swift_dynamicCast(&v12, v15, (char *)&type metadata for Any + 8, v5, 6LL) & 1) != 0)
  {
    sub_6010(&v12, (uint64_t)v16);
    uint64_t v6 = v17;
    uint64_t v7 = v18;
    sub_7A94(v16, v17);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    *(void *)(a2 + 24) = sub_5F6C(&qword_7D668);
    *(void *)a2 = v8;
LABEL_7:
    sub_62AC(v16);
    return result;
  }

  uint64_t v14 = 0LL;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  sub_DBD8((uint64_t)&v12, &qword_7DCD8);
  sub_12350(a1, (uint64_t)v15);
  uint64_t v9 = sub_5F6C(&qword_7DCE0);
  if (swift_dynamicCast(&v12, v15, (char *)&type metadata for Any + 8, v9, 6LL))
  {
    sub_6010(&v12, (uint64_t)v16);
    uint64_t v10 = v17;
    uint64_t v11 = v18;
    sub_7A94(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    goto LABEL_7;
  }

  uint64_t v14 = 0LL;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  sub_DBD8((uint64_t)&v12, &qword_7DCE8);
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  return result;
}

uint64_t sub_1E570(_OWORD *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  uint64_t v8 = *v2;
  *uint64_t v2 = 0x8000000000000000LL;
  sub_22BA4(a1, a2, isUniquelyReferenced_nonNull_native);
  uint64_t v6 = *v2;
  *uint64_t v2 = v8;
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1E5DC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

unint64_t sub_1E600()
{
  unint64_t result = qword_7DCF0;
  if (!qword_7DCF0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSNumber);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7DCF0);
  }

  return result;
}

uint64_t sub_1E640@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1LL;
  uint64_t v3 = -1LL << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1LL << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0LL;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_1E678()
{
  return sub_12350(v1, v0);
}

  ;
}

unint64_t sub_1E690( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  return sub_21F88((uint64_t)va);
}

  ;
}

uint64_t sub_1E6A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, char a43)
{
  return sub_D734((uint64_t)&a43, (uint64_t)&a30);
}

uint64_t sub_1E6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_23DB8();
  if (v3)
  {
    swift_errorRelease(v3);
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
  }

  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
  }

  uint64_t v10 = sub_23DB8();
  uint64_t v12 = v11;
  uint64_t v13 = sub_23DB8();
  uint64_t v15 = v14;
  uint64_t v16 = type metadata accessor for JSONContext(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(a2, v16);
  uint64_t v17 = type metadata accessor for JSONObject(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8LL))(a1, v17);
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v12;
  a3[4] = v13;
  a3[5] = v15;
  return result;
}

double sub_1E81C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (!v3)
  {
    __int128 v6 = v7[1];
    *a3 = v7[0];
    a3[1] = v6;
    double result = *(double *)&v8;
    a3[2] = v8;
  }

  return result;
}

uint64_t destroy for ErrorPageDestination(void *a1)
{
  return swift_bridgeObjectRelease(a1[5]);
}

void *initializeWithCopy for ErrorPageDestination(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

void *assignWithCopy for ErrorPageDestination(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

__n128 initializeWithTake for ErrorPageDestination(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for ErrorPageDestination(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[5];
  uint64_t v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorPageDestination(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorPageDestination(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ErrorPageDestination()
{
  return &type metadata for ErrorPageDestination;
}

ValueMetadata *type metadata accessor for ErrorPageDestinationError()
{
  return &type metadata for ErrorPageDestinationError;
}

uint64_t sub_1EAA8(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  uint64_t v8 = a2;
  sub_22260(a1, (uint64_t)sub_2222C, 0LL, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000LL);
  if (v2) {
    swift_bridgeObjectRelease(v6);
  }
  return v6;
}

void sub_1EB24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_5F6C(&qword_7DE90);
    unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    unint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v32 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  sub_23A08();
  int64_t v8 = 0LL;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_12350(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v44);
    *(void *)&__int128 v43 = v21;
    *((void *)&v43 + 1) = v20;
    void v41[2] = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    *(void *)&v41[0] = v21;
    *((void *)&v41[0] + 1) = v20;
    swift_bridgeObjectRetain(v20);
    swift_dynamicCast(&v33, v41, &type metadata for String, &type metadata for AnyHashable, 7LL);
    sub_12340(v42, v36);
    __int128 v37 = v33;
    __int128 v38 = v34;
    uint64_t v39 = v35;
    sub_12340(v36, v40);
    __int128 v33 = v37;
    __int128 v34 = v38;
    uint64_t v35 = v39;
    sub_12340(v40, v41);
    sub_12340(v41, &v37);
    unint64_t v22 = AnyHashable._rawHashValue(seed:)(v3[5]) & ~(-1LL << *((_BYTE *)v3 + 32));
    if (((-1LL << v22) & ~*(void *)&v7[8 * (v22 >> 6)]) == 0)
    {
      sub_23808();
      while (++v24 != v25 || (v23 & 1) == 0)
      {
        BOOL v26 = v24 == v25;
        if (v24 == v25) {
          uint64_t v24 = 0LL;
        }
        v23 |= v26;
        if (*(void *)&v7[8 * v24] != -1LL)
        {
          sub_237F4();
          goto LABEL_38;
        }
      }

      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }

    sub_2381C();
LABEL_38:
    sub_237E0();
    *(void *)&v7[v27] |= v28;
    uint64_t v30 = v3[6] + 40 * v29;
    *(_OWORD *)uint64_t v30 = v33;
    *(_OWORD *)(v30 + swift_unknownObjectWeakDestroy(v0 + 16) = v34;
    *(void *)(v30 + 32) = v35;
    sub_12340(&v37, (_OWORD *)(v3[7] + 32 * v29));
    ++v3[2];
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1LL)) {
      goto LABEL_42;
    }
    if (v11 >= v31) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      sub_239D4();
      if (v14 == v15) {
        goto LABEL_40;
      }
      sub_239C8();
      if (!v12)
      {
        sub_239D4();
        if (v14 == v15) {
          goto LABEL_40;
        }
        sub_239C8();
        if (!v12)
        {
          sub_239D4();
          if (v14 == v15) {
            goto LABEL_40;
          }
          sub_239C8();
          if (!v12) {
            break;
          }
        }
      }
    }

LABEL_28:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v8 = v13;
  }

  int64_t v17 = v16 + 4;
  if (v17 >= v31)
  {
LABEL_40:
    sub_237D8();
    sub_12338(a1);
    return;
  }

  unint64_t v12 = *(void *)(v32 + 8 * v17);
  if (v12)
  {
    int64_t v13 = v17;
    goto LABEL_28;
  }

  while (!__OFADD__(v17, 1LL))
  {
    sub_239D4();
    if (v14 == v15) {
      goto LABEL_40;
    }
    sub_239C8();
    int64_t v17 = v18 + 1;
    if (v12) {
      goto LABEL_28;
    }
  }

LABEL_43:
  __break(1u);
}

        uint64_t v59 = v62;
        sub_60C8(v62, &qword_7EF00);
        uint64_t v60 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v59, v72, v11);
        sub_5FEC(v59, 0LL, 1LL, v11);
        return sub_42D28(v67, v60, 1);
      }

      uint64_t v53 = 0xE800000000000000LL;
      uint64_t v52 = 0x656C7069746C756DLL;
    }

    else
    {
      uint64_t v52 = 1701736302LL;
      uint64_t v53 = 0xE400000000000000LL;
      char v23 = v71;
    }

    uint64_t v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v53, 0x656C676E6973LL, 0xE600000000000000LL, 0LL);
    uint64_t v51 = swift_bridgeObjectRelease(v53);
    if ((v54 & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_39;
  }

  uint64_t v65 = v18;
  uint64_t v66 = v17;
  __n128 result = (uint64_t)objc_msgSend(v67, "numberOfSections", v19);
  if ((result & 0x8000000000000000LL) == 0)
  {
    char v23 = v71;
    uint64_t v24 = (uint64_t)v68;
    if (result)
    {
      uint64_t v25 = 0LL;
      uint64_t v63 = result;
      uint64_t v64 = v10;
      while (1)
      {
        if (v25 == result) {
          goto LABEL_45;
        }
        __n128 result = (uint64_t)[v67 numberOfItemsInSection:v25];
        if (result < 0) {
          break;
        }
        BOOL v26 = result;
        if (result)
        {
          uint64_t v27 = 0LL;
          char v69 = result;
          uint64_t v70 = v25;
          do
          {
            if (v26 == v27)
            {
              __break(1u);
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }

            IndexPath.init(row:section:)(v27, v25);
            sub_3E1B0();
            CollectionContent.section(for:)(v21);
            swift_release();
            if (sub_6028(v24, 1LL, v8) == 1)
            {
              (*(void (**)(char *, uint64_t))(v71 + 8))(v21, v11);
              sub_60C8(v24, &qword_7EEE0);
              break;
            }

            (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v10, v24, v8);
            uint64_t v28 = swift_getKeyPath(&unk_5FC08);
            DiffableLens.subscript.getter(v28, v8);
            swift_release();
            uint64_t v29 = v75;
            uint64_t v30 = v76;
            swift_bridgeObjectRelease(v74);
            swift_bridgeObjectRelease(v29);
            if (v30 == 1)
            {
              int64_t v31 = 0xE600000000000000LL;
              uint64_t v32 = 0x656C676E6973LL;
            }

            else
            {
              if (v30 != 2)
              {
                swift_bridgeObjectRelease(0xE400000000000000LL);
LABEL_30:
                (*(void (**)(char *, uint64_t))(v77 + 8))(v10, v8);
                (*(void (**)(char *, uint64_t))(v71 + 8))(v21, v11);
                uint64_t v25 = v70;
                break;
              }

              int64_t v31 = 0xE800000000000000LL;
              uint64_t v32 = 0x656C7069746C756DLL;
            }

            __int128 v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v31, 1701736302LL, 0xE400000000000000LL, 0LL);
            swift_bridgeObjectRelease(v31);
            if ((v33 & 1) != 0) {
              goto LABEL_30;
            }
            __int128 v34 = swift_getKeyPath(&unk_5FC08);
            DiffableLens.subscript.getter(v34, v8);
            swift_release();
            uint64_t v35 = v75;
            uint64_t v36 = v76;
            swift_bridgeObjectRelease(v74);
            swift_bridgeObjectRelease(v35);
            if (v36)
            {
              if (v36 == 1)
              {
                swift_bridgeObjectRelease(0xE600000000000000LL);
                __int128 v37 = v71;
                __int128 v38 = *(void (**)(uint64_t, char *, uint64_t))(v71 + 16);
                uint64_t v39 = v65;
                v38(v65, v21, v11);
                uint64_t v40 = v66;
                v38(v66, (char *)v72, v11);
LABEL_23:
                Swift::Int v45 = sub_43CF0();
                unint64_t v46 = dispatch thunk of static Equatable.== infix(_:_:)(v39, v40, v11, v45);
                char v47 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
                v47(v40, v11);
                v47(v39, v11);
                if ((v46 & 1) == 0) {
                  sub_42D28(v67, (uint64_t)v21, 0);
                }
                goto LABEL_26;
              }

              unint64_t v41 = 0xE800000000000000LL;
              char v42 = 0x656C7069746C756DLL;
            }

            else
            {
              unint64_t v41 = 0xE400000000000000LL;
              char v42 = 1701736302LL;
            }

            __int128 v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v41, 0x656C676E6973LL, 0xE600000000000000LL, 0LL);
            swift_bridgeObjectRelease(v41);
            __int128 v37 = v71;
            BOOL v44 = *(void (**)(uint64_t, char *, uint64_t))(v71 + 16);
            uint64_t v39 = v65;
            v44(v65, v21, v11);
            uint64_t v40 = v66;
            v44(v66, (char *)v72, v11);
            if ((v43 & 1) != 0) {
              goto LABEL_23;
            }
            char v47 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
            v47(v40, v11);
            v47(v39, v11);
LABEL_26:
            uint64_t v24 = (uint64_t)v68;
            BOOL v26 = v69;
            unint64_t v10 = v64;
            ++v27;
            (*(void (**)(char *, uint64_t))(v77 + 8))(v64, v8);
            __n128 result = ((uint64_t (*)(char *, uint64_t))v47)(v21, v11);
            uint64_t v25 = v70;
          }

          while (v26 != v27);
        }

        ++v25;
        __n128 result = v63;
        char v23 = v71;
        if (v25 == v63) {
          goto LABEL_43;
        }
      }

unint64_t sub_1EE8C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_5F6C(&qword_7DDF8);
    unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    unint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v40 = v1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  int64_t v39 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = &v46;
  int64_t v8 = &v48;
  unint64_t result = swift_bridgeObjectRetain(v1);
  int64_t v10 = 0LL;
  int64_t v11 = (char *)&type metadata for Any + 8;
  unint64_t v12 = &type metadata for String;
  while (1)
  {
    while (1)
    {
      if (v6)
      {
        uint64_t v42 = (v6 - 1) & v6;
        unint64_t v13 = __clz(__rbit64(v6)) | (v10 << 6);
      }

      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1LL)) {
          goto LABEL_34;
        }
        if (v14 >= v39)
        {
LABEL_31:
          sub_12338(v1);
          return (unint64_t)v3;
        }

        unint64_t v15 = *(void *)(v40 + 8 * v14);
        int64_t v16 = v10 + 1;
        if (!v15)
        {
          int64_t v16 = v10 + 2;
          if (v10 + 2 >= v39) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v40 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v10 + 3;
            if (v10 + 3 >= v39) {
              goto LABEL_31;
            }
            unint64_t v15 = *(void *)(v40 + 8 * v16);
            if (!v15)
            {
              int64_t v16 = v10 + 4;
              if (v10 + 4 >= v39) {
                goto LABEL_31;
              }
              unint64_t v15 = *(void *)(v40 + 8 * v16);
              if (!v15)
              {
                int64_t v17 = v10 + 5;
                if (v10 + 5 >= v39) {
                  goto LABEL_31;
                }
                unint64_t v15 = *(void *)(v40 + 8 * v17);
                if (!v15)
                {
                  while (1)
                  {
                    int64_t v16 = v17 + 1;
                    if (__OFADD__(v17, 1LL)) {
                      goto LABEL_35;
                    }
                    if (v16 >= v39) {
                      goto LABEL_31;
                    }
                    unint64_t v15 = *(void *)(v40 + 8 * v16);
                    ++v17;
                    if (v15) {
                      goto LABEL_25;
                    }
                  }
                }

                int64_t v16 = v10 + 5;
              }
            }
          }
        }

LABEL_25:
        uint64_t v42 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
        int64_t v10 = v16;
      }

      uint64_t v18 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v13);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      uint64_t v21 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v13);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      uint64_t v44 = v20;
      uint64_t v45 = v19;
      v43[0] = v22;
      v43[1] = v23;
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v23);
      swift_dynamicCast(v7, v43, v12, v11, 7LL);
      uint64_t v24 = v44;
      uint64_t v25 = v45;
      sub_12340(v7, v8);
      sub_12340(v8, v49);
      sub_12340(v49, &v47);
      unint64_t result = sub_21FB8(v24, v25);
      unint64_t v26 = result;
      if ((v27 & 1) == 0) {
        break;
      }
      int64_t v41 = v10;
      uint64_t v28 = v8;
      uint64_t v29 = v7;
      uint64_t v30 = v1;
      int64_t v31 = v12;
      uint64_t v32 = v11;
      __int128 v33 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease(v33[1]);
      *__int128 v33 = v24;
      v33[1] = v25;
      int64_t v11 = v32;
      unint64_t v12 = v31;
      uint64_t v1 = v30;
      uint64_t v7 = v29;
      int64_t v8 = v28;
      int64_t v10 = v41;
      __int128 v34 = (void *)(v3[7] + 32 * v26);
      sub_62AC(v34);
      unint64_t result = (unint64_t)sub_12340(&v47, v34);
      unint64_t v6 = v42;
    }

    if (v3[2] >= v3[3]) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v35 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v35 = v24;
    v35[1] = v25;
    unint64_t result = (unint64_t)sub_12340(&v47, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v36 = v3[2];
    BOOL v37 = __OFADD__(v36, 1LL);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_33;
    }
    _OWORD v3[2] = v38;
    unint64_t v6 = v42;
  }

  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

    unint64_t v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    unint64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    unint64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

uint64_t sub_1F1E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph);
  if (v3)
  {
    uint64_t v4 = sub_12788();
    uint64_t v5 = type metadata accessor for BaseObjectGraph(0LL);
    swift_retain(v3);
    inject<A, B>(_:from:)(v4, v3, v4, v5);
    swift_release();
    uint64_t v6 = a1;
    uint64_t v7 = 0LL;
    uint64_t v8 = v4;
  }

  else
  {
    uint64_t v8 = sub_12788();
    uint64_t v6 = a1;
    uint64_t v7 = 1LL;
  }

  return sub_5FEC(v6, v7, 1LL, v8);
}

id sub_1F280()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0
                   + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView);
LABEL_5:
    id v7 = v2;
    return (id)v3;
  }

  uint64_t v3 = v0;
  id v4 = objc_allocWithZone(&OBJC_CLASS____UIContentUnavailableView);
  id result = sub_21D78(0.0, 0.0, 0.0, 0.0, 0LL, 0xE000000000000000LL, 0LL);
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v6 = result;
    sub_23A54();
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

id sub_1F310()
{
  uint64_t v52 = v1;
  uint64_t v53 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v45 = v7;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_6D6C();
  __chkstk_darwin(v12);
  sub_F76C();
  uint64_t v15 = v14 - v13;
  v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_automaticRetry] = 1;
  uint64_t v16 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry;
  id v17 = objc_allocWithZone((Class)&OBJC_CLASS___AMSUIDAirplaneModeInquiry);
  uint64_t v18 = v0;
  *(void *)&v0[v16] = [v17 init];
  uint64_t v19 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_cellularDataInquiry;
  *(void *)&v18[v19] = [objc_allocWithZone((Class)AMSUIDCellularDataInquiry) init];
  uint64_t v20 = &v18[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry];
  uint64_t v21 = type metadata accessor for NWPathNetworkInquiry();
  id v22 = sub_26BC0();
  v20[3] = v21;
  v20[4] = &off_73948;
  *uint64_t v20 = v22;
  uint64_t v23 = &v18[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation];
  *(_OWORD *)uint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *((void *)v23 + 4) = 0LL;
  *(void *)&v18[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView] = 0LL;
  *(void *)&v18[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_error] = v11;
  *(void *)&v18[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph] = v9;
  uint64_t v24 = (uint64_t *)&v18[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_retryAction];
  *uint64_t v24 = v6;
  v24[1] = v4;
  v18[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_isNavigationControllerEmbedded] = v45;
  uint64_t v44 = v11;
  swift_errorRetain(v11);
  swift_retain(v9);
  sub_21B84(v6, v4);

  uint64_t v25 = (objc_class *)type metadata accessor for ErrorViewController();
  v51.receiver = v18;
  v51.super_class = v25;
  id v26 = objc_msgSendSuper2(&v51, "initWithNibName:bundle:", 0, 0);
  uint64_t v27 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v28 = type metadata accessor for LogMessage(0LL);
  uint64_t v29 = swift_allocObject( v27,  ((*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v28 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v50 = v25;
  v49[0] = v26;
  id v30 = v26;
  id v31 = (id)AMSLogKey(v30);
  if (v31)
  {
    __int128 v33 = v31;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);
    uint64_t v36 = v35;

    sub_C3B0();
    sub_7C2C();
    sub_23714(v49);
    uint64_t v37 = sub_C3CC();
    sub_2386C(v37);
    sub_239B4();
    sub_C378();
    v48[3] = &type metadata for String;
    v48[0] = v34;
    v48[1] = v36;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v48);
    sub_239B4();
    uint64_t v38 = 93LL;
  }

  else
  {
    sub_C390();
    sub_7C2C();
    sub_23714(v49);
    uint64_t v39 = sub_C3CC();
    sub_2386C(v39);
    sub_60C8((uint64_t)v48, &qword_7DDE0);
    uint64_t v38 = 58LL;
  }

  unint64_t v40 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v38);
  LogMessage.init(stringInterpolation:)(v15);
  sub_238FC();
  sub_62AC(v49);
  LogMessage.init(stringLiteral:)(0xD000000000000017LL, 0x8000000000063ED0LL);
  swift_getErrorValue(v44, &v47, v46);
  uint64_t v41 = Error.localizedDescription.getter(v46[1], v46[2]);
  uint64_t v50 = (objc_class *)&type metadata for String;
  v49[0] = v41;
  v49[1] = v42;
  static LogMessage.safe(_:)(v49);
  sub_60C8((uint64_t)v49, &qword_7DDE0);
  sub_267BC(v29);
  sub_21B94(v6, v4);
  swift_release();
  swift_errorRelease(v44);
  sub_23988();

  return v30;
}

void sub_1F6B8()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_automaticRetry] = 1;
  uint64_t v2 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)AMSUIDAirplaneModeInquiry) init];
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_cellularDataInquiry;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)AMSUIDCellularDataInquiry) init];
  uint64_t v4 = &v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry];
  uint64_t v5 = type metadata accessor for NWPathNetworkInquiry();
  id v6 = sub_26BC0();
  *((void *)v4 + 3) = v5;
  *((void *)v4 + 4) = &off_73948;
  *(void *)uint64_t v4 = v6;
  char v7 = &v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation];
  *(_OWORD *)char v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController____lazy_storage___contentUnavailableView] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ErrorViewController.swift",  45LL,  2LL,  106LL,  0);
  __break(1u);
}

id sub_1F7DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation;
  swift_beginAccess(v2, v9, 0LL, 0LL);
  if (*(void *)(v2 + 24))
  {
    sub_16D24(v2, (uint64_t)v7);
    sub_7A94(v7, v7[3]);
    uint64_t v3 = sub_239E0();
    v4(v3);
    sub_62AC(v7);
  }

  uint64_t v5 = (objc_class *)type metadata accessor for ErrorViewController();
  v8.receiver = v1;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, "dealloc");
}

id sub_1F96C(uint64_t a1)
{
  id v2 = sub_A324(a1, "parentViewController");
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = objc_opt_self(&OBJC_CLASS___UINavigationController);
    if (!swift_dynamicCastObjCClass(v3, v4)
      || v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_isNavigationControllerEmbedded] == 1)
    {
      id v5 = [v3 navigationItem];

      return v5;
    }
  }

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ErrorViewController();
  return objc_msgSendSuper2(&v7, "navigationItem");
}

void sub_1FA2C()
{
  uint64_t v4 = v0;
  type metadata accessor for DispatchQoS.QoSClass(0LL);
  sub_23A40();
  __chkstk_darwin(v5);
  sub_12718();
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_6D6C();
  __chkstk_darwin(v6);
  sub_23940();
  sub_5F6C((uint64_t *)&unk_7DE50);
  sub_6D6C();
  __chkstk_darwin(v7);
  sub_F76C();
  uint64_t v10 = (void *)(v9 - v8);
  uint64_t v11 = sub_23904();
  uint64_t v91 = *(void *)(v11 - 8);
  sub_23758();
  __chkstk_darwin(v12);
  sub_12718();
  uint64_t v92 = v13;
  sub_5F6C(&qword_7D5C0);
  sub_6D6C();
  __chkstk_darwin(v14);
  sub_237A8();
  uint64_t v15 = (objc_class *)type metadata accessor for ErrorViewController();
  v100.receiver = v0;
  v100.super_class = v15;
  id v16 = objc_msgSendSuper2(&v100, "loadView");
  id v17 = sub_A324((uint64_t)v16, "view");
  id v18 = objc_msgSend((id)objc_opt_self(UIColor), "ams_primaryBackground");
  [v17 setBackgroundColor:v18];

  sub_1F1E8(v3);
  uint64_t v19 = sub_12788();
  if (sub_6028(v3, 1LL, v19) != 1)
  {
    uint64_t v90 = v1;
    uint64_t v30 = 0x6C6172656E6567LL;
    Bag.amsBag.getter();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(v3, v19);
    uint64_t v31 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_error);
    __int128 v93 = (void **)v31;
    swift_errorRetain(v31);
    uint64_t v32 = sub_5F6C(&qword_7D5D0);
    if ((swift_dynamicCast(v99, &v93, v32, &type metadata for DynamicViewControllerPresentationError, 6LL) & 1) != 0)
    {
      if (LOBYTE(v99[0]))
      {
        uint64_t v34 = 0xE700000000000000LL;
      }

      else
      {
        uint64_t v30 = 0x61727473746F6F62LL;
        uint64_t v34 = 0xE900000000000070LL;
      }
    }

    else
    {
      uint64_t v34 = 0xE700000000000000LL;
    }

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(AMSMetricsLoggingSubsystemDynamicUI, v33);
    uint64_t v37 = v36;
    id v38 = objc_allocWithZone(&OBJC_CLASS___AMSMetricsLoggingEvent);
    swift_errorRetain(v31);
    id v39 = sub_21E0C(v35, v37, v30, v34, v31);
    if (*(void **)((char *)v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph))
    {
      BaseObjectGraph.optional<A>(_:)(v10, v11, v11);
      if (sub_6028((uint64_t)v10, 1LL, v11) != 1)
      {
        uint64_t v40 = (*(uint64_t (**)(uint64_t, void *, uint64_t))(v91 + 32))(v92, v10, v11);
        URL.absoluteString.getter(v40);
        NSString v41 = String._bridgeToObjectiveC()();
        sub_190B8();
        [v39 setUrl:v41];

        uint64_t v43 = URL.absoluteString.getter(v42);
        uint64_t v45 = v44;
        id v46 = objc_allocWithZone(&OBJC_CLASS___NSRegularExpression);
        sub_2390C();
        id v50 = sub_21EB0(v47, v48, 0LL);
        NSString v51 = String._bridgeToObjectiveC()();
        v99[0] = 15LL;
        __int128 v93 = (void **)v43;
        uint64_t v94 = v45;
        sub_23A70();
        sub_5F6C(&qword_7DE68);
        sub_23430(&qword_7DE70, &qword_7DE68, (uint64_t)&protocol conformance descriptor for PartialRangeFrom<A>);
        uint64_t v53 = v52;
        unint64_t v54 = sub_2346C();
        uint64_t v57 = sub_238B0(v54, v55, v56, (uint64_t)&type metadata for String);
        id v59 = objc_msgSend(v50, "matchesInString:options:range:", v51, 0, v57, v58);
        sub_23A54();
        uint64_t v61 = sub_125F8(v60, (unint64_t *)&unk_7DE80, &OBJC_CLASS___NSTextCheckingResult_ptr);
        uint64_t v62 = sub_23A34(v61);

        sub_23A70();
        uint64_t v63 = sub_21BA4(v62, v43, v45);
        sub_23764();
        swift_bridgeObjectRelease(v62);

        if (*((void *)v63 + 2))
        {
          uint64_t v64 = *((void *)v63 + 5);
          swift_bridgeObjectRetain(v64);
          sub_23920();
          NSString v65 = String._bridgeToObjectiveC()();
          uint64_t v66 = swift_bridgeObjectRelease(v64);
          sub_23A1C(v66, "setEventServiceType:");
        }

        else
        {
          uint64_t v67 = sub_23920();
        }

        uint64_t v30 = URL.absoluteString.getter(v67);
        uint64_t v69 = v68;
        id v70 = objc_allocWithZone(&OBJC_CLASS___NSRegularExpression);
        sub_2390C();
        id v72 = sub_21EB0(0xD000000000000011LL, v71, 0LL);
        NSString v2 = String._bridgeToObjectiveC()();
        v99[0] = 15LL;
        __int128 v93 = (void **)v30;
        uint64_t v94 = v69;
        swift_bridgeObjectRetain(v69);
        sub_5F6C(&qword_7DE68);
        sub_23430(&qword_7DE70, &qword_7DE68, (uint64_t)&protocol conformance descriptor for PartialRangeFrom<A>);
        unint64_t v73 = sub_2346C();
        uint64_t v76 = sub_238B0(v73, v74, v75, (uint64_t)&type metadata for String);
        id v78 = objc_msgSend(v72, "matchesInString:options:range:", v2, 0, v76, v77);

        uint64_t v80 = sub_125F8(v79, (unint64_t *)&unk_7DE80, &OBJC_CLASS___NSTextCheckingResult_ptr);
        uint64_t v31 = sub_23A34(v80);

        swift_bridgeObjectRetain(v69);
        int64_t v81 = sub_21BA4(v31, v30, v69);
        swift_bridgeObjectRelease(v69);
        sub_23918();

        sub_23894();
        if (*((void *)v81 + 2))
        {
          swift_bridgeObjectRetain(*((void *)v81 + 5));
          sub_23A00();
          sub_23A10();
          NSString v82 = String._bridgeToObjectiveC()();
          uint64_t v83 = sub_23920();
          sub_23A1C(v83, "setEventPlacement:");
        }

        else
        {
          sub_23A00();
        }

        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v92, v11);
        goto LABEL_23;
      }
    }

    else
    {
      sub_5FEC((uint64_t)v10, 1LL, 1LL, v11);
    }

    sub_60C8((uint64_t)v10, (uint64_t *)&unk_7DE50);
    sub_23894();
LABEL_23:
    id v84 = [(id)objc_opt_self(AMSMetrics) internalInstanceUsingBag:v30];
    sub_125F8((uint64_t)v84, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
    (*(void (**)(NSString, void, uint64_t))(v90 + 104))( v2,  enum case for DispatchQoS.QoSClass.default(_:),  v31);
    uint64_t v85 = (void *)static OS_dispatch_queue.global(qos:)(v2);
    (*(void (**)(NSString, uint64_t))(v90 + 8))(v2, v31);
    uint64_t v86 = swift_allocObject(&unk_73510, 32LL, 7LL);
    *(void *)(v86 + swift_unknownObjectWeakDestroy(v0 + 16) = v84;
    *(void *)(v86 + 24) = v39;
    uint64_t v97 = sub_23374;
    uint64_t v98 = v86;
    __int128 v93 = _NSConcreteStackBlock;
    uint64_t v94 = 1107296256LL;
    uint64_t v95 = sub_21544;
    __int128 v96 = (objc_class *)&unk_73528;
    uint64_t v87 = _Block_copy(&v93);
    id v88 = v84;
    id v89 = v39;
    swift_release();
    sub_23384(v85, v87);
    swift_unknownObjectRelease(v30);
    _Block_release(v87);

    goto LABEL_24;
  }

  sub_60C8(v3, &qword_7D5C0);
  sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v20 = *(void *)(sub_238D8() - 8);
  uint64_t v21 = swift_allocObject( v19,  ((*(unsigned __int8 *)(v20 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))
        + 2LL * *(void *)(v20 + 72),
          *(unsigned __int8 *)(v20 + 80) | 7LL);
  *(_OWORD *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD80;
  __int128 v96 = v15;
  __int128 v93 = v4;
  id v22 = (id)AMSLogKey(v4);
  if (v22)
  {
    uint64_t v24 = v22;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);
    uint64_t v27 = v26;

    sub_C3B0();
    v101._countAndFlagsBits = 0LL;
    v101._object = (void *)0xE000000000000000LL;
    sub_238E4(v101);
    sub_23714(&v93);
    uint64_t v28 = sub_C3CC();
    sub_238C4(v28);
    sub_23A28();
    sub_C378();
    v99[3] = &type metadata for String;
    v99[0] = v25;
    v99[1] = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v99);
    sub_23A28();
    v29._countAndFlagsBits = 93LL;
  }

  else
  {
    sub_C390();
    v102._countAndFlagsBits = 0LL;
    v102._object = (void *)0xE000000000000000LL;
    sub_238E4(v102);
    sub_23714(&v93);
    uint64_t v49 = sub_C3CC();
    sub_238C4(v49);
    sub_60C8((uint64_t)v99, &qword_7DDE0);
    v29._countAndFlagsBits = 58LL;
  }

  v29._object = (void *)0xE100000000000000LL;
  sub_238E4(v29);
  sub_239A0();
  sub_238FC();
  sub_62AC(&v93);
  LogMessage.init(stringLiteral:)(0xD00000000000004FLL, 0x8000000000063FA0LL);
  sub_267BC(v21);
  sub_190B8();
LABEL_24:
  sub_9ABC();
}

void sub_2047C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ErrorViewController();
  id v1 = objc_msgSendSuper2(&v2, "viewDidLoad");
  sub_205CC((uint64_t)v1);
  sub_20628();
  sub_215E4();
}

void sub_204EC()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for ErrorViewController();
  objc_msgSendSuper2(&v11, "viewWillLayoutSubviews");
  id v1 = sub_1F280();
  id v2 = sub_A324((uint64_t)v1, "view");
  [v2 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
}

void sub_205CC(uint64_t a1)
{
  id v1 = sub_A324(a1, "view");
  id v2 = sub_1F280();
  [v1 addSubview:v2];
}

void sub_20628()
{
  void (*v5)(void *__return_ptr, void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  void v7[3];
  uint64_t v8;
  void *v9;
  void v10[5];
  [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry) setDelegate:v0];
  double v3 = sub_239A8((void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry));
  double v8 = sub_125F8((uint64_t)v3, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  double v9 = &protocol witness table for OS_dispatch_queue;
  v7[0] = static OS_dispatch_queue.main.getter(v8);
  uint64_t v4 = sub_23844((uint64_t)&unk_73448);
  swift_unknownObjectWeakInit(v4 + 16, v0);
  double v5 = *(void (**)(void *__return_ptr, void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v2 + 40);
  swift_retain(v4);
  v5(v10, v7, sub_232F8, v4, v1, v2);
  swift_release_n(v4, 2LL);
  sub_62AC(v7);
  double v6 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkObservation;
  swift_beginAccess(v6, v7, 33LL, 0LL);
  sub_23300((uint64_t)v10, v6);
  swift_endAccess(v7);
  sub_20FAC();
}

void sub_2075C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_21570();
  }

void sub_207AC()
{
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_error);
  uint64_t v29 = v3;
  swift_errorRetain(v3);
  uint64_t v4 = sub_5F6C(&qword_7D5D0);
  if (swift_dynamicCast(v27, &v29, v4, &type metadata for ErrorPageDestinationError, 6LL))
  {
    uint64_t v5 = v27[0];
    double v6 = (char *)v27[1];
    uint64_t v8 = v27[2];
    double v7 = (void *)v27[3];
    uint64_t v9 = v27[4];
    double v10 = v28;
    swift_bridgeObjectRetain(v28);
    uint64_t v22 = v5;
    if (v10)
    {
      uint64_t v23 = v10;
      uint64_t v24 = v9;
      goto LABEL_6;
    }
  }

  else
  {
    uint64_t v22 = 0LL;
    uint64_t v8 = 0LL;
    double v7 = 0LL;
    double v6 = (_BYTE *)(&dword_0 + 1);
  }

  sub_239C0();
  sub_23990(v1);
  sub_2390C();
  uint64_t v24 = sub_263F0(v11, v12, v1);
  double v10 = v13;
  sub_60C8(v1, &qword_7D5C0);
  swift_bridgeObjectRelease(0LL);
  uint64_t v23 = 0LL;
LABEL_6:
  swift_getErrorValue(v3, &v26, v25);
  uint64_t v14 = v25[1];
  uint64_t v15 = v25[2];
  if (v6 == (_BYTE *)&dword_0 + 1)
  {
    uint64_t v8 = 0LL;
    double v7 = 0LL;
  }

  else
  {
    sub_23A70();
  }

  uint64_t v16 = sub_1D464(v8, v7, v14, v15);
  id v18 = v17;
  sub_23764();
  if (v6 == (_BYTE *)&dword_0 + 1 || (swift_bridgeObjectRelease(v23), sub_190B8(), !v6))
  {
    sub_239C0();
    sub_1F1E8(v1);
    sub_2390C();
    uint64_t v19 = sub_263F0(0xD000000000000014LL, v20, v1);
    double v6 = v21;
    sub_60C8(v1, &qword_7D5C0);
    swift_bridgeObjectRelease(0LL);
  }

  else
  {
    uint64_t v19 = v22;
  }

  sub_20C4C(v24, v10, v16, v18, v19, v6);
  swift_bridgeObjectRelease(v10);
  sub_23918();
  swift_bridgeObjectRelease(v18);
  sub_9ABC();
}

void sub_209C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v21;
  a20 = v22;
  unsigned __int8 v24 = v23;
  sub_5F6C(&qword_7D5C0);
  sub_6D6C();
  __chkstk_darwin(v25);
  sub_23958();
  sub_5F6C((uint64_t *)&unk_7DE50);
  sub_6D6C();
  __chkstk_darwin(v26);
  sub_F76C();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = sub_23904();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&a9 - v35;
  sub_27F90(v24, v29);
  if (sub_6028(v29, 1LL, v30) == 1)
  {
    sub_60C8(v29, (uint64_t *)&unk_7DE50);
    uint64_t v37 = 0LL;
    id v38 = 0LL;
    id v39 = 0LL;
    uint64_t v40 = 0LL;
  }

  else
  {
    NSString v41 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    v41(v36, v29, v30);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v33, v36, v30);
    uint64_t v42 = *(unsigned __int8 *)(v31 + 80);
    uint64_t v43 = (v42 + 16) & ~v42;
    uint64_t v40 = swift_allocObject(&unk_734E8, v43 + v32, v42 | 7);
    v41((char *)(v40 + v43), (uint64_t)v33, v30);
    sub_239C0();
    sub_23990(v20);
    uint64_t v37 = sub_263F0(0x53474E4954544553LL, 0xEF4E4F495443415FLL, v20);
    id v38 = v44;
    sub_60C8(v20, &qword_7D5C0);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v36, v30);
    id v39 = sub_232D0;
  }

  sub_23990(v20);
  uint64_t v45 = sub_28118(v20, v24);
  uint64_t v47 = v46;
  sub_60C8(v20, &qword_7D5C0);
  sub_20C4C(v45, v47, 0LL, 0LL, v37, v38);
  sub_23764();
  sub_21B94((uint64_t)v39, v40);
  sub_23A00();
  sub_9ABC();
}

void sub_20BF8()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___AMSOpenURL);
  URL._bridgeToObjectiveC()(v1);
  id v3 = v2;
  [v0 openStandardURL:v2];
}

void sub_20C4C(uint64_t a1, NSString a2, uint64_t a3, NSString a4, uint64_t a5, NSString a6)
{
  id v13 = sub_1F280();
  uint64_t v14 = sub_22F14(v13, (SEL *)&selRef_buttonTitle);
  if (v15)
  {
    if (!a6)
    {
LABEL_31:
      sub_23764();
      goto LABEL_32;
    }

    if (v14 == a5 && v15 == (void)a6)
    {
      sub_23764();
    }

    else
    {
      char v17 = sub_23998(v14, v15, a5, (uint64_t)a6);
      sub_23764();
      if ((v17 & 1) == 0) {
        goto LABEL_32;
      }
    }
  }

  else if (a6)
  {
    goto LABEL_32;
  }

  id v18 = sub_1F280();
  uint64_t v19 = sub_22F14(v18, (SEL *)&selRef_message);
  if (!v20)
  {
    if (!a4) {
      goto LABEL_23;
    }
LABEL_32:
    id v28 = sub_1F280();
    uint64_t v29 = sub_23844((uint64_t)&unk_73448);
    swift_unknownObjectWeakInit(v29 + 16, v6);
    v34[4] = sub_2326C;
    v34[5] = v29;
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 1107296256LL;
    v34[2] = sub_21544;
    v34[3] = &unk_734B0;
    uint64_t v30 = _Block_copy(v34);
    swift_release();
    [v28 setButtonAction:v30];
    _Block_release(v30);

    id v31 = sub_1F280();
    if (a6) {
      a6 = String._bridgeToObjectiveC()();
    }
    [v31 setButtonTitle:a6];

    id v32 = sub_1F280();
    if (a4) {
      a4 = String._bridgeToObjectiveC()();
    }
    [v32 setMessage:a4];

    id v33 = sub_1F280();
    if (a2) {
      a2 = String._bridgeToObjectiveC()();
    }
    [v33 setTitle:a2];

    return;
  }

  if (!a4) {
    goto LABEL_31;
  }
  if (v19 == a3 && v20 == (void)a4)
  {
    sub_23764();
  }

  else
  {
    char v22 = sub_23998(v19, v20, a3, (uint64_t)a4);
    sub_23764();
    if ((v22 & 1) == 0) {
      goto LABEL_32;
    }
  }

LABEL_23:
  id v23 = sub_1F280();
  uint64_t v24 = sub_22F14(v23, (SEL *)&selRef_title);
  if (!v25)
  {
    if (!a2) {
      return;
    }
    goto LABEL_32;
  }

  if (!a2) {
    goto LABEL_31;
  }
  if (v24 == a1 && v25 == (void)a2)
  {
    swift_bridgeObjectRelease(v25);
    return;
  }

  char v27 = sub_23998(v24, v25, a1, (uint64_t)a2);
  sub_23764();
  if ((v27 & 1) == 0) {
    goto LABEL_32;
  }
}

      uint64_t v9 = (v17 - 1) & v17;
    }
  }

  id result = swift_release();
  *uint64_t v2 = v6;
  return result;
}

    double v10 = (v17 - 1) & v17;
  }

  id v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_35:
    id result = swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_37;
  }

  char v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    id v13 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    id v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_35;
    }
    char v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

void sub_20EFC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    id v3 = (void *)Strong;
    sub_217DC();
  }

  swift_beginAccess(v1, &v8, 0LL, 0LL);
  uint64_t v4 = swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = *(void (**)(void))(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_retryAction);
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_retryAction + 8);
    sub_21B84((uint64_t)v6, v7);

    if (v6)
    {
      v6();
      sub_21B94((uint64_t)v6, v7);
    }
  }

void sub_20FAC()
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v18 = *(void *)(v6 - 8);
  sub_23758();
  __chkstk_darwin(v7);
  sub_23928();
  uint64_t v17 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  sub_23940();
  type metadata accessor for DispatchQoS.QoSClass(0LL);
  sub_23A40();
  __chkstk_darwin(v9);
  sub_237A8();
  sub_125F8(v10, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))( v5,  enum case for DispatchQoS.QoSClass.userInitiated(_:),  v4);
  uint64_t v11 = (void *)static OS_dispatch_queue.global(qos:)(v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
  uint64_t v12 = sub_23844((uint64_t)&unk_733F8);
  *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  v20[4] = sub_231B8;
  v20[5] = v12;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256LL;
  v20[2] = sub_21544;
  v20[3] = &unk_73410;
  id v13 = _Block_copy(v20);
  static DispatchQoS.unspecified.getter(v0);
  uint64_t v19 = _swiftEmptyArrayStorage;
  unint64_t v14 = sub_231D8();
  uint64_t v15 = sub_5F6C(&qword_7DE38);
  sub_23430((unint64_t *)&qword_7DE40, &qword_7DE38, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v6, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v3, v1, v13);
  _Block_release(v13);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v6);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v17);
  swift_release();
  sub_9ABC();
}

uint64_t sub_211A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v27 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry + 24);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry + 32);
  sub_7A94((void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry), v10);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11) & 1) != 0)
  {
    char v12 = 4;
  }

  else if ([*(id *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_airplaneModeInquiry) isEnabled])
  {
    char v12 = 1;
  }

  else
  {
    id v13 = *(void **)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_cellularDataInquiry);
    if ([v13 isSupported] && !objc_msgSend(v13, "isEnabledForDevice"))
    {
      char v12 = 2;
    }

    else if ([v13 isSupported] {
           && (uint64_t v15 = v9[3],
    }
               uint64_t v14 = v9[4],
               sub_7A94(v9, v15),
               (*(unsigned __int8 (**)(uint64_t, uint64_t))(v14 + 16))(v15, v14) == 3)
           && ![v13 isEnabledForBundle])
    {
      char v12 = 3;
    }

    else
    {
      char v12 = 0;
    }
  }

  uint64_t v16 = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  uint64_t v18 = swift_allocObject(&unk_73448, 24LL, 7LL);
  swift_unknownObjectWeakInit(v18 + 16, a1);
  uint64_t v19 = swift_allocObject(&unk_73470, 32LL, 7LL);
  *(_BYTE *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = sub_23260;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_21544;
  void aBlock[3] = &unk_73488;
  uint64_t v20 = _Block_copy(aBlock);
  uint64_t v21 = swift_release();
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  unint64_t v22 = sub_231D8();
  uint64_t v23 = sub_5F6C(&qword_7DE38);
  sub_23430((unint64_t *)&qword_7DE40, &qword_7DE38, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v4, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

#error "2152C: call analysis failed (funcsize=36)"
uint64_t sub_21544(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_21570()
{
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_automaticRetry) == 1)
  {
    sub_239A8((void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_networkInquiry));
    uint64_t v1 = sub_239E0();
    if ((v2(v1) & 1) != 0)
    {
      uint64_t v3 = *(void (**)(void))(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_retryAction);
      if (v3) {
        v3();
      }
    }
  }

void sub_215E4()
{
  uint64_t v1 = (void *)_convertErrorToNSError(_:)(*(void *)(v0
                                                    + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_error));
  uint64_t v2 = sub_5F6C(&qword_7DE10);
  uint64_t inited = swift_initStackObject(v2, v19);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD70;
  *(void *)(inited + 32) = 0x707954726F727265LL;
  *(void *)(inited + 40) = 0xE900000000000065LL;
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v4 = sub_5F6C(&qword_7DE18);
  *(void *)(inited + 48) = String.init<A>(describing:)(&ObjectType, v4);
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = 0xD000000000000010LL;
  *(void *)(inited + 72) = 0x8000000000063EF0LL;
  id v6 = [v1 description];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);
  uint64_t v10 = v9;

  *(void *)(inited + 80) = v8;
  *(void *)(inited + 88) = v10;
  *(void *)(inited + 96) = 0x707954746E657665LL;
  *(void *)(inited + 104) = 0xE900000000000065LL;
  *(void *)(inited + 112) = 1701273968LL;
  *(void *)(inited + 120) = 0xE400000000000000LL;
  uint64_t v11 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
  uint64_t ObjectType = v11;
  uint64_t v12 = sub_22EB4(v1);
  if (v13)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    sub_22CC4(v14, v15, 0xD000000000000012LL, 0x8000000000063F10LL, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000LL);
  }

  else
  {
    sub_2390C();
    sub_22A98(0xD000000000000012LL, v17);
    swift_bridgeObjectRelease(v18);
    uint64_t v11 = ObjectType;
  }

  sub_1EE8C(v11);
  sub_23920();
  sub_21838();
  sub_23918();
}

uint64_t sub_217DC()
{
  uint64_t v0 = Dictionary.init(dictionaryLiteral:)( &off_71870,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
  unint64_t v1 = sub_1EE8C(v0);
  sub_190B8();
  sub_21838();
  return swift_bridgeObjectRelease(v1);
}

void sub_21838()
{
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for MetricsData(0LL);
  uint64_t v22 = *(void *)(v5 - 8);
  sub_23758();
  __chkstk_darwin(v6);
  sub_23958();
  uint64_t v7 = type metadata accessor for MetricsPipeline(0LL);
  uint64_t v21 = *(void *)(v7 - 8);
  sub_23758();
  __chkstk_darwin(v8);
  sub_237A8();
  uint64_t v9 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_F76C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin19ErrorViewController_objectGraph);
  if (v14)
  {
    uint64_t v15 = sub_5F6C((uint64_t *)&unk_7DDE8);
    uint64_t inited = swift_initStackObject(v15, &v23);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD80;
    *(void *)(inited + 32) = 1701273968LL;
    *(void *)(inited + 40) = 0xE400000000000000LL;
    *(void *)(inited + 48) = 0x726F727245LL;
    *(void *)(inited + 56) = 0xE500000000000000LL;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 80) = 0x6570795465676170LL;
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 88) = 0xE800000000000000LL;
    *(void *)(inited + 96) = 0x726F727245534D41LL;
    *(void *)(inited + 104) = 0xE800000000000000LL;
    swift_retain(v14);
    uint64_t v17 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    uint64_t v18 = swift_bridgeObjectRetain(v4);
    uint64_t v19 = sub_1EAA8(v18, v17);
    uint64_t v20 = type metadata accessor for BaseObjectGraph(0LL);
    inject<A, B>(_:from:)(v9, v14, v9, v20);
    inject<A, B>(_:from:)(v7, v14, v7, v20);
    MetricsData.init(topic:shouldFlush:fields:includingFields:excludingFields:)( 0x6D5F7374695F7078LL,  0xEB000000006E6961LL,  0LL,  v19,  &_swiftEmptySetSingleton,  &_swiftEmptySetSingleton);
    MetricsPipeline.process(_:using:)(v1, v13);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v5);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v2, v7);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v9);
  }

  sub_9ABC();
}

void sub_21A8C()
{
}

void sub_21AC4()
{
}

uint64_t type metadata accessor for ErrorViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin19ErrorViewController);
}

uint64_t sub_21B84(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_21B94(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_release(a2);
  }
  return result;
}

char *sub_21BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  if (v6)
  {
    while (1)
    {
      id result = sub_29204(0LL, v6 & ~(v6 >> 63), 0);
      if (v6 < 0) {
        break;
      }
      uint64_t v24 = v6;
      uint64_t v8 = 0LL;
      while (v6 != v8)
      {
        if ((a1 & 0xC000000000000001LL) != 0) {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
        }
        else {
          id v9 = *(id *)(a1 + 8 * v8 + 32);
        }
        uint64_t v10 = v9;
        id result = (char *)Range<>.init(_:in:)([v9 range]);
        if ((v11 & 1) != 0) {
          goto LABEL_21;
        }
        uint64_t v12 = a2;
        uint64_t v13 = a3;
        uint64_t v14 = String.subscript.getter(result);
        uint64_t v16 = v15;
        uint64_t v17 = static String._fromSubstring(_:)(v14);
        uint64_t v19 = v18;

        swift_bridgeObjectRelease(v16);
        unint64_t v21 = _swiftEmptyArrayStorage[2];
        unint64_t v20 = _swiftEmptyArrayStorage[3];
        if (v21 >= v20 >> 1) {
          sub_29204((char *)(v20 > 1), v21 + 1, 1);
        }
        ++v8;
        _swiftEmptyArrayStorage[2] = v21 + 1;
        uint64_t v22 = (char *)&_swiftEmptyArrayStorage[2 * v21];
        *((void *)v22 + 4) = v17;
        *((void *)v22 + 5) = v19;
        uint64_t v6 = v24;
        a3 = v13;
        a2 = v12;
        if (v24 == v8) {
          goto LABEL_19;
        }
      }

      __break(1u);
LABEL_15:
      if (a1 < 0) {
        uint64_t v23 = a1;
      }
      else {
        uint64_t v23 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(a1);
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(a1);
      if (!v6) {
        goto LABEL_19;
      }
    }

    __break(1u);
LABEL_21:
    __break(1u);
  }

  else
  {
LABEL_19:
    swift_bridgeObjectRelease(a3);
    return (char *)_swiftEmptyArrayStorage;
  }

  return result;
}

id sub_21D78(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a6)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    sub_23918();
  }

  else
  {
    NSString v13 = 0LL;
  }

  id v14 = objc_msgSend(v7, "initWithFrame:title:style:", v13, a7, a1, a2, a3, a4);

  return v14;
}

id sub_21E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  char v11 = (void *)_convertErrorToNSError(_:)(a5);
  id v12 = [v5 initWithSubsystem:v9 category:v10 error:v11];
  swift_errorRelease(a5);

  return v12;
}

id sub_21EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v12 = 0LL;
  id v7 = [v3 initWithPattern:v6 options:a3 error:&v12];

  id v8 = v12;
  if (v7)
  {
    id v9 = v12;
  }

  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }

  return v7;
}

unint64_t sub_21F88(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_2201C(a1, v4);
}

unint64_t sub_21FB8(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = Hasher._finalize()();
  return sub_220E0(a1, a2, v5);
}

unint64_t sub_2201C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0)
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_D734(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_D6CC((uint64_t)v9);
      if ((v7 & 1) != 0) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }

    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0);
  }

  return v4;
}

unint64_t sub_220E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        NSString v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }

      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }

  return v6;
}

uint64_t sub_221C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a2;
}

uint64_t sub_221FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_23A10();
  return sub_12350(v3, v4);
}

uint64_t sub_2222C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_221C0((uint64_t)(a2 + 2), *a1, a1[1], (uint64_t)(a1 + 2));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_22260(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v26 = a1;
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  sub_22FB8(&v29);
  uint64_t v9 = *((void *)&v29 + 1);
  if (!*((void *)&v29 + 1))
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease(v26);
    sub_12338(v31);
    return swift_release();
  }

  while (1)
  {
    uint64_t v10 = v29;
    sub_12340(&v30, v28);
    uint64_t v11 = *a5;
    unint64_t v13 = sub_21FB8(v10, v9);
    uint64_t v14 = *(void *)(v11 + 16);
    BOOL v15 = (v12 & 1) == 0;
    if (__OFADD__(v14, v15)) {
      break;
    }
    char v16 = v12;
    if (*(void *)(v11 + 24) >= v14 + v15)
    {
      if ((a4 & 1) != 0)
      {
        if ((v12 & 1) != 0) {
          goto LABEL_9;
        }
      }

      else
      {
        sub_5F6C(&qword_7D670);
        _NativeDictionary.copy()();
        if ((v16 & 1) != 0) {
          goto LABEL_9;
        }
      }
    }

    else
    {
      sub_22478();
      unint64_t v17 = sub_21FB8(v10, v9);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_17;
      }
      unint64_t v13 = v17;
      if ((v16 & 1) != 0)
      {
LABEL_9:
        sub_12350((uint64_t)v28, (uint64_t)v27);
        sub_62AC(v28);
        swift_bridgeObjectRelease(v9);
        uint64_t v19 = (void *)(*(void *)(*a5 + 56) + 32 * v13);
        sub_62AC(v19);
        sub_12340(v27, v19);
        goto LABEL_13;
      }
    }

    unint64_t v20 = (void *)*a5;
    *(void *)(*a5 + 8 * (v13 >> 6) + 64) |= 1LL << v13;
    unint64_t v21 = (uint64_t *)(v20[6] + 16 * v13);
    *unint64_t v21 = v10;
    v21[1] = v9;
    sub_12340(v28, (_OWORD *)(v20[7] + 32 * v13));
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1LL);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_16;
    }
    v20[2] = v24;
LABEL_13:
    sub_22FB8(&v29);
    uint64_t v9 = *((void *)&v29 + 1);
    a4 = 1;
    if (!*((void *)&v29 + 1)) {
      goto LABEL_14;
    }
  }

  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_22478()
{
  uint64_t v3 = sub_237C0();
  if (v1[2])
  {
    id v32 = v0;
    sub_23970();
    uint64_t v34 = v6;
    if (v4 < 64) {
      uint64_t v7 = ~(-1LL << v4);
    }
    else {
      uint64_t v7 = -1LL;
    }
    unint64_t v8 = v7 & v5;
    int64_t v33 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v9 = v3 + 64;
    sub_23A08();
    int64_t v10 = 0LL;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      char v16 = (uint64_t *)(v1[6] + 16 * i);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      uint64_t v19 = (_OWORD *)(v1[7] + 32 * i);
      if ((v2 & 1) != 0)
      {
        sub_12340(v19, v36);
      }

      else
      {
        sub_12350((uint64_t)v19, (uint64_t)v36);
        swift_bridgeObjectRetain(v17);
      }

      Hasher.init(_seed:)(v35, *(void *)(v3 + 40));
      String.hash(into:)(v35, v18, v17);
      unint64_t v20 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v3 + 32));
      if (((-1LL << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) == 0)
      {
        sub_23808();
        while (++v22 != v23 || (v21 & 1) == 0)
        {
          BOOL v24 = v22 == v23;
          if (v22 == v23) {
            uint64_t v22 = 0LL;
          }
          v21 |= v24;
          if (*(void *)(v9 + 8 * v22) != -1LL)
          {
            sub_237F4();
            goto LABEL_31;
          }
        }

        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }

      sub_2381C();
LABEL_31:
      sub_237E0();
      *(void *)(v9 + v25) |= v26;
      id v28 = (void *)(*(void *)(v3 + 48) + 16 * v27);
      *id v28 = v18;
      v28[1] = v17;
      sub_12340(v36, (_OWORD *)(*(void *)(v3 + 56) + 32 * v27));
      ++*(void *)(v3 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1LL)) {
        goto LABEL_40;
      }
      if (v13 >= v33) {
        goto LABEL_33;
      }
      unint64_t v14 = v34[v13];
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v33) {
          goto LABEL_33;
        }
        unint64_t v14 = v34[v10];
        if (!v14)
        {
          int64_t v15 = v13 + 2;
          if (v15 >= v33)
          {
LABEL_33:
            sub_237D8();
            uint64_t v0 = v32;
            if ((v2 & 1) != 0)
            {
              sub_23A5C();
              if (v30 != v31) {
                *uint64_t v34 = -1LL << v29;
              }
              else {
                sub_3AB98(0LL, (unint64_t)(v29 + 63) >> 6, v34);
              }
              v1[2] = 0LL;
            }

            break;
          }

          unint64_t v14 = v34[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1LL)) {
                goto LABEL_41;
              }
              if (v10 >= v33) {
                goto LABEL_33;
              }
              unint64_t v14 = v34[v10];
              ++v15;
              if (v14) {
                goto LABEL_18;
              }
            }
          }

          int64_t v10 = v15;
        }
      }

void sub_226F0()
{
  uint64_t v3 = sub_237C0();
  if (v1[2])
  {
    sub_23970();
    uint64_t v35 = v6;
    if (v4 < 64) {
      uint64_t v7 = ~(-1LL << v4);
    }
    else {
      uint64_t v7 = -1LL;
    }
    unint64_t v8 = v7 & v5;
    int64_t v9 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v10 = v3 + 64;
    sub_23A08();
    int64_t v11 = 0LL;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v11 << 6))
    {
      uint64_t v18 = v1[6] + 40 * i;
      if ((v2 & 1) != 0)
      {
        __int128 v19 = *(_OWORD *)v18;
        __int128 v20 = *(_OWORD *)(v18 + 16);
        uint64_t v39 = *(void *)(v18 + 32);
        __int128 v37 = v19;
        __int128 v38 = v20;
        sub_12340((_OWORD *)(v1[7] + 32 * i), v36);
      }

      else
      {
        sub_D734(v18, (uint64_t)&v37);
        sub_12350(v1[7] + 32 * i, (uint64_t)v36);
      }

      unint64_t v21 = AnyHashable._rawHashValue(seed:)(*(void *)(v3 + 40)) & ~(-1LL << *(_BYTE *)(v3 + 32));
      if (((-1LL << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) == 0)
      {
        sub_23808();
        while (++v23 != v24 || (v22 & 1) == 0)
        {
          BOOL v25 = v23 == v24;
          if (v23 == v24) {
            uint64_t v23 = 0LL;
          }
          v22 |= v25;
          if (*(void *)(v10 + 8 * v23) != -1LL)
          {
            sub_237F4();
            goto LABEL_31;
          }
        }

        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }

      sub_2381C();
LABEL_31:
      sub_237E0();
      *(void *)(v10 + v26) |= v27;
      uint64_t v29 = *(void *)(v3 + 48) + 40 * v28;
      __int128 v30 = v37;
      __int128 v31 = v38;
      *(void *)(v29 + 32) = v39;
      *(_OWORD *)uint64_t v29 = v30;
      *(_OWORD *)(v29 + swift_unknownObjectWeakDestroy(v0 + 16) = v31;
      sub_12340(v36, (_OWORD *)(*(void *)(v3 + 56) + 32 * v28));
      ++*(void *)(v3 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1LL)) {
        goto LABEL_42;
      }
      if (v14 >= v9) {
        break;
      }
      int64_t v15 = v35;
      unint64_t v16 = v35[v14];
      ++v11;
      if (!v16)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v35[v11];
        if (!v16)
        {
          int64_t v17 = v14 + 2;
          if (v17 >= v9)
          {
LABEL_33:
            sub_237D8();
            if ((v2 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_36;
          }

          unint64_t v16 = v35[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1LL)) {
                goto LABEL_43;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = v35[v11];
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }

          int64_t v11 = v17;
        }
      }

LABEL_40:
  sub_237D8();
  *uint64_t v0 = v3;
}

  __break(1u);
  return result;
}

double sub_2297C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  unint64_t v7 = sub_21F88(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v14 = *v3;
    uint64_t v10 = *v3;
    *uint64_t v3 = 0x8000000000000000LL;
    Swift::Int v11 = *(void *)(v10 + 24);
    sub_5F6C(&qword_7D7E8);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v11);
    sub_D6CC(*(void *)(v14 + 48) + 40 * v7);
    sub_12340((_OWORD *)(*(void *)(v14 + 56) + 32 * v7), a2);
    _NativeDictionary._delete(at:)( v7,  v14,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    uint64_t v12 = *v3;
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }

  return result;
}

uint64_t sub_22A98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  unint64_t v7 = sub_21FB8(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0) {
    return 0LL;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  uint64_t v15 = *v3;
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000LL;
  Swift::Int v11 = *(void *)(v10 + 24);
  sub_5F6C((uint64_t *)&unk_7DE20);
  _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v11);
  swift_bridgeObjectRelease(*(void *)(*(void *)(v15 + 48) + 16 * v7 + 8));
  uint64_t v12 = *(void *)(*(void *)(v15 + 56) + 16 * v7);
  _NativeDictionary._delete(at:)( v7,  v15,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
  uint64_t v13 = *v3;
  *uint64_t v3 = v15;
  swift_bridgeObjectRelease(v13);
  return v12;
}

_OWORD *sub_22BA4(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_21F88(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  sub_5F6C(&qword_7D7E8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_21F88(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    double result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return result;
  }

  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if ((v15 & 1) != 0)
  {
    sub_62AC((void *)(v18[7] + 32 * v14));
    __int128 v19 = (_OWORD *)sub_23A10();
    return sub_12340(v19, v20);
  }

  else
  {
    sub_D734(a2, (uint64_t)v22);
    return sub_22DF0(v14, (uint64_t)v22, a1, v18);
  }

uint64_t sub_22CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  BOOL v12 = (void *)*v5;
  unint64_t v13 = sub_21FB8(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v14 & 1) == 0;
  Swift::Int v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v18 = v13;
  char v19 = v14;
  sub_5F6C((uint64_t *)&unk_7DE20);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a5 & 1, v17)) {
    goto LABEL_5;
  }
  unint64_t v20 = sub_21FB8(a3, a4);
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_9:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }

  unint64_t v18 = v20;
LABEL_5:
  char v22 = *v6;
  if ((v19 & 1) != 0)
  {
    uint64_t v23 = (uint64_t *)(v22[7] + 16 * v18);
    uint64_t result = swift_bridgeObjectRelease(v23[1]);
    *uint64_t v23 = a1;
    v23[1] = a2;
  }

  else
  {
    sub_22E68(v18, a3, a4, a1, a2, v22);
    return swift_bridgeObjectRetain(a4);
  }

  return result;
}

_OWORD *sub_22DF0(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_12340(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_22E68( unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1LL << result;
  __int128 v6 = (void *)(a6[6] + 16 * result);
  *__int128 v6 = a2;
  v6[1] = a3;
  unint64_t v7 = (void *)(a6[7] + 16 * result);
  *unint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

uint64_t sub_22EB4(void *a1)
{
  id v1 = [a1 localizedFailureReason];
  if (!v1) {
    return 0LL;
  }
  char v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_22F14(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];
  sub_23A54();
  if (!v2) {
    return 0LL;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2, v4);

  return v5;
}

uint64_t sub_22F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v8 = -1LL;
  }
  a4[3] = 0LL;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

void sub_22FB8(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_12350(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v33);
    *(void *)&__int128 v32 = v13;
    *((void *)&v32 + 1) = v12;
    swift_bridgeObjectRetain(v12);
    goto LABEL_23;
  }

  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1LL))
  {
    __break(1u);
    return;
  }

  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }

    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }

      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }

        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v18 < v15)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }

  uint64_t v9 = 0LL;
  memset(v33, 0, sizeof(v33));
  __int128 v32 = 0u;
LABEL_23:
  *id v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  sub_2368C((uint64_t)&v32, (uint64_t)&v28, &qword_7DE00);
  if (v29)
  {
    *((void *)&v27[0] + 1) = v29;
    v27[1] = v30;
    _OWORD v27[2] = v31;
    sub_239F4(v19, v20, v21, v22, v23, v24, v25, v26, v28);
    sub_60C8((uint64_t)v27, &qword_7DE08);
  }

  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }

uint64_t sub_23194()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_231B8()
{
  return sub_211A0(*(void *)(v0 + 16));
}

uint64_t sub_231C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_231D0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_231D8()
{
  unint64_t result = qword_7DE30;
  if (!qword_7DE30)
  {
    uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_7DE30);
  }

  return result;
}

uint64_t sub_23218()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_2323C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_23260()
{
  return sub_214B4(*(unsigned __int8 *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_2326C()
{
}

uint64_t sub_23274()
{
  uint64_t v1 = sub_23904();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_232D0()
{
}

void sub_232F8(uint64_t a1)
{
}

uint64_t sub_23300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7DE60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_23348()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_23374()
{
  return [*(id *)(v0 + 16) enqueueEvent:*(void *)(v0 + 24)];
}

void sub_23384(void *a1, void *a2)
{
  uint64_t v3 = a1;
  id v4 = a2;
  uint64_t v5 = AMSLogKey(v4);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_236C8;
  v9[3] = &unk_73558;
  id v10 = (id)objc_claimAutoreleasedReturnValue(v5);
  id v11 = v4;
  id v6 = v10;
  id v7 = v4;
  dispatch_async(v3, v9);

  id v8 = v10;
}

void sub_23430(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = sub_14B78(a2);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  sub_6D3C();
}

unint64_t sub_2346C()
{
  unint64_t result = qword_7DE78;
  if (!qword_7DE78)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_7DE78);
  }

  return result;
}

void sub_234A8(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    sub_D734(*(void *)(v3 + 48) + 40 * v10, (uint64_t)v26);
    sub_12350(*(void *)(v3 + 56) + 32 * v10, (uint64_t)&v26[2] + 8);
    goto LABEL_23;
  }

  int64_t v11 = v5 + 1;
  if (__OFADD__(v5, 1LL))
  {
    __break(1u);
    return;
  }

  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v11 < v12)
  {
    unint64_t v13 = *(void *)(v4 + 8 * v11);
    if (v13)
    {
LABEL_7:
      uint64_t v9 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v11 << 6);
      int64_t v7 = v11;
      goto LABEL_3;
    }

    int64_t v14 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v12)
    {
      unint64_t v13 = *(void *)(v4 + 8 * v14);
      if (v13)
      {
LABEL_10:
        int64_t v11 = v14;
        goto LABEL_7;
      }

      int64_t v7 = v5 + 2;
      if (v5 + 3 < v12)
      {
        unint64_t v13 = *(void *)(v4 + 8 * (v5 + 3));
        if (v13)
        {
          int64_t v11 = v5 + 3;
          goto LABEL_7;
        }

        int64_t v14 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v12)
        {
          unint64_t v13 = *(void *)(v4 + 8 * v14);
          if (v13) {
            goto LABEL_10;
          }
          int64_t v11 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v12)
          {
            unint64_t v13 = *(void *)(v4 + 8 * v11);
            if (v13) {
              goto LABEL_7;
            }
            int64_t v7 = v12 - 1;
            int64_t v15 = v5 + 6;
            while (v15 < v12)
            {
              unint64_t v13 = *(void *)(v4 + 8 * v15++);
              if (v13)
              {
                int64_t v11 = v15 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }

  uint64_t v9 = 0LL;
  uint64_t v27 = 0LL;
  memset(v26, 0, sizeof(v26));
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  sub_2368C((uint64_t)v26, (uint64_t)__src, &qword_7DE98);
  if (__src[3])
  {
    unint64_t v16 = memcpy(v24, __src, sizeof(v24));
    sub_239F4((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v24[0]);
    sub_60C8((uint64_t)v24, (uint64_t *)&unk_7DEA0);
  }

  else
  {
    *(void *)(a1 + 64) = 0LL;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  }

void sub_2368C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_23A10();
  v4(v3);
  sub_6D3C();
}

uint64_t sub_236C8(uint64_t a1)
{
  id v2 = (id)AMSSetLogKey(*(void *)(a1 + 32));
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_23714(void *a1)
{
  id v2 = sub_7A94(a1, v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

void sub_23730()
{
  v0._countAndFlagsBits = 0x2064696C61766E49LL;
  v0._object = (void *)0xEF203A7865676572LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

  ;
}

uint64_t sub_23764()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_2376C(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

  ;
}

  ;
}

uint64_t sub_237C0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)(v1, v0, v2);
}

uint64_t sub_237D8()
{
  return swift_release(v0);
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_23830(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 160) = v2;
  *(void *)(v3 - 184) = a1;
  *(void *)(v3 - 176) = a2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v3 - 184);
}

uint64_t sub_23844(uint64_t a1)
{
  return swift_allocObject(a1, 24LL, 7LL);
}

  ;
}

uint64_t sub_2386C(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 160);
}

uint64_t sub_23880()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(15LL, 1LL);
}

  ;
}

uint64_t sub_238B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _NSRange.init<A, B>(_:in:)(v6 - 136, v6 - 184, v5, a4, v4);
}

uint64_t sub_238C4(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 136);
}

uint64_t sub_238D8()
{
  return type metadata accessor for LogMessage(0LL);
}

void sub_238E4(Swift::String a1)
{
}

uint64_t sub_238EC()
{
  return sub_267BC(v0);
}

uint64_t sub_238FC()
{
  return type metadata accessor for Log();
}

uint64_t sub_23904()
{
  return type metadata accessor for URL(0LL);
}

  ;
}

uint64_t sub_23918()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_23920()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_23988()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_23990@<X0>(uint64_t a1@<X8>)
{
  return sub_1F1E8(a1);
}

uint64_t sub_23998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
}

uint64_t sub_239A0()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

void *sub_239A8(void *a1)
{
  return sub_7A94(a1, a1[3]);
}

void sub_239B4()
{
}

uint64_t sub_239C0()
{
  return type metadata accessor for Localizations();
}

  ;
}

  ;
}

uint64_t sub_239E0()
{
  return v0;
}

uint64_t sub_239F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return v9(&a9);
}

uint64_t sub_23A00()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_23A08()
{
  return swift_retain(v0);
}

uint64_t sub_23A10()
{
  return v0;
}

id sub_23A1C(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void sub_23A28()
{
}

uint64_t sub_23A34(uint64_t a1)
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, a1);
}

  ;
}

void sub_23A54()
{
}

  ;
}

uint64_t sub_23A70()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t ImpressionMetrics.hash(into:)(uint64_t a1)
{
  uint64_t v2 = sub_23DB0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_23DA4();
  uint64_t v6 = sub_98F0( &qword_7DEB0,  (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics.ID,  (uint64_t)&protocol conformance descriptor for ImpressionMetrics.ID);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static ImpressionMetrics.== infix(_:_:)()
{
  uint64_t v0 = sub_23DB0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_23DA4();
  ImpressionMetrics.id.getter(v7);
  char v8 = static ImpressionMetrics.ID.== infix(_:_:)(v6, v3);
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v9(v6, v0);
  return v8 & 1;
}

Swift::Int ImpressionMetrics.hashValue.getter()
{
  uint64_t v0 = sub_23DB0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = Hasher.init(_seed:)(v8, 0LL);
  ImpressionMetrics.id.getter(v4);
  uint64_t v5 = sub_98F0( &qword_7DEB0,  (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics.ID,  (uint64_t)&protocol conformance descriptor for ImpressionMetrics.ID);
  dispatch thunk of Hashable.hash(into:)(v8, v0, v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return Hasher._finalize()();
}

Swift::Int sub_23CAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImpressionMetrics.ID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = Hasher.init(_seed:)(v10, a1);
  ImpressionMetrics.id.getter(v6);
  uint64_t v7 = sub_98F0( &qword_7DEB0,  (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics.ID,  (uint64_t)&protocol conformance descriptor for ImpressionMetrics.ID);
  dispatch thunk of Hashable.hash(into:)(v10, v2, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return Hasher._finalize()();
}

uint64_t sub_23D78()
{
  return sub_98F0( &qword_7DEB8,  (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics,  (uint64_t)&protocol conformance descriptor for ImpressionMetrics);
}

uint64_t sub_23DA4()
{
  return ImpressionMetrics.id.getter();
}

uint64_t sub_23DB0()
{
  return type metadata accessor for ImpressionMetrics.ID(0LL);
}

uint64_t sub_23DB8()
{
  uint64_t v2 = *(void *)(sub_2421C() - 8);
  __chkstk_darwin();
  sub_6B18();
  if ((sub_6C1C() & 1) != 0 || (v0 = v1, uint64_t v3 = JSONObject.string.getter(), !v4))
  {
    sub_6BD0();
    unint64_t v5 = sub_2425C();
    uint64_t v6 = sub_6B54(v5);
    char v8 = sub_24234(v6, v7);
    sub_6B68((uint64_t)v8, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }

  else
  {
    uint64_t v0 = v3;
    sub_6BBC(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }

  return v0;
}

uint64_t sub_23E7C()
{
  if ((sub_6C1C() & 1) != 0 || (char v1 = JSONObject.BOOL.getter(), v1 == 2))
  {
    sub_6BD0();
    unint64_t v2 = sub_2425C();
    uint64_t v3 = sub_6B54(v2);
    unint64_t v5 = sub_24234(v3, v4);
    sub_6B68((uint64_t)v5, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_F75C();
  }

  else
  {
    char v7 = v1;
    sub_F75C();
    char v6 = v7 & 1;
  }

  return v6 & 1;
}

uint64_t sub_23F28()
{
  if ((sub_6C1C() & 1) != 0 || (v0 = v1, uint64_t v3 = JSONObject.int.getter(), (v4 & 1) != 0))
  {
    sub_6BD0();
    unint64_t v5 = sub_2425C();
    uint64_t v6 = sub_6B54(v5);
    char v8 = sub_24234(v6, v7);
    sub_6B68((uint64_t)v8, enum case for JSONError.missingProperty(_:));
    sub_6C24();
    sub_6C90();
    sub_F75C();
  }

  else
  {
    uint64_t v0 = v3;
    sub_F75C();
  }

  return v0;
}

uint64_t sub_23FC8()
{
  if ((sub_6C1C() & 1) == 0)
  {
    JSONObject.double.getter();
    if ((v1 & 1) == 0) {
      return sub_F75C();
    }
  }

  sub_6BD0();
  unint64_t v3 = sub_2425C();
  uint64_t v4 = sub_6B54(v3);
  uint64_t v6 = sub_24234(v4, v5);
  sub_6B68((uint64_t)v6, enum case for JSONError.missingProperty(_:));
  sub_6C24();
  sub_6C90();
  return sub_F75C();
}

uint64_t sub_24068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v17 = a4;
  uint64_t v7 = sub_5F6C((uint64_t *)&unk_7DE50);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for JSONObject(0LL);
  __chkstk_darwin(v10);
  uint64_t v11 = JSONObject.subscript.getter(a1, a2);
  if ((JSONObject.isNull.getter(v11) & 1) != 0) {
    goto LABEL_4;
  }
  JSONObject.url.getter();
  uint64_t v12 = type metadata accessor for URL(0LL);
  if (sub_6028((uint64_t)v9, 1LL, v12) == 1)
  {
    sub_241DC((uint64_t)v9);
LABEL_4:
    sub_6BD0();
    unint64_t v13 = sub_2425C();
    sub_6B54(v13);
    *int64_t v14 = a1;
    v14[1] = a2;
    v14[2] = a3;
    sub_6B68((uint64_t)v14, enum case for JSONError.missingProperty(_:));
    swift_bridgeObjectRetain(a2);
    sub_6C90();
    return sub_24264();
  }

  sub_24264();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32LL))(v17, v9, v12);
}

uint64_t sub_241DC(uint64_t a1)
{
  uint64_t v2 = sub_5F6C((uint64_t *)&unk_7DE50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_2421C()
{
  return type metadata accessor for JSONObject(0LL);
}

void *sub_24234(uint64_t a1, void *a2)
{
  unint64_t result = a2;
  *a2 = v4;
  a2[1] = v2;
  a2[2] = v3;
  return result;
}

  ;
}

unint64_t sub_2425C()
{
  return sub_199A4();
}

uint64_t sub_24264()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_24274()
{
  uint64_t v1 = sub_C184(0LL, &qword_7D800, &OBJC_CLASS___NSError_ptr);
  id v2 = v0;
  uint64_t v3 = sub_5F6C(&qword_7DCD0);
  if (swift_dynamicCast(v8, &v10, v1, v3, 6LL))
  {
    sub_6010(v8, (uint64_t)&v11);
    uint64_t v4 = *((void *)&v12 + 1);
    uint64_t v5 = v13;
    sub_7A94(&v11, *((uint64_t *)&v12 + 1));
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    sub_62AC(&v11);
  }

  else
  {
    uint64_t v9 = 0LL;
    memset(v8, 0, sizeof(v8));
    sub_DBD8((uint64_t)v8, &qword_7DCD8);
    __int128 v11 = 0u;
    __int128 v12 = 0u;
    uint64_t v6 = sub_14480(0LL, 0LL, (uint64_t)&v11);
    sub_DBD8((uint64_t)&v11, &qword_7DDE0);
  }

  return v6;
}

uint64_t sub_24378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v14[1] = a1;
  v14[0] = &_swiftEmptyDictionarySingleton;
  __int128 v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  uint64_t v9 = sub_5F6C(&qword_7D668);
  *(void *)(a5 + 24) = v9;
  uint64_t v10 = type metadata accessor for Dictionary(0LL, a2, a3, a4);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A : B], v10);
  return Sequence.reduce<A>(into:_:)(v14, sub_249F4, v13, v10, v9, WitnessTable);
}

uint64_t sub_24438(uint64_t a1)
{
  uint64_t v1 = sub_12350(a1, (uint64_t)v58);
  uint64_t v8 = sub_24A28(v1, v2, v3, (uint64_t)&type metadata for Bool, v4, v5, v6, v7, v45, v51, v58[0]);
  if ((v8 & 1) == 0)
  {
    uint64_t v15 = sub_24A28(v8, v9, v10, (uint64_t)&type metadata for Double, v11, v12, v13, v14, v46, v52, v58[0]);
    if ((v15 & 1) == 0)
    {
      uint64_t v22 = sub_24A28(v15, v16, v17, (uint64_t)&type metadata for Float, v18, v19, v20, v21, v47, v53, v58[0]);
      if ((v22 & 1) == 0
        && (sub_24A28(v22, v23, v24, (uint64_t)&type metadata for Int, v25, v26, v27, v28, v48, v54, v58[0]) & 1) == 0)
      {
        uint64_t v29 = sub_C184(0LL, (unint64_t *)&qword_7DCF0, &OBJC_CLASS___NSNumber_ptr);
        uint64_t v36 = sub_24A28(v29, v30, v31, v29, v32, v33, v34, v35, v49, v55, v58[0]);
        if ((_DWORD)v36)
        {
        }

        else
        {
          if (!sub_24A28( v36,  v37,  v38,  (uint64_t)&type metadata for String,  v39,  v40,  v41,  v42,  (uint64_t)v50,  v56,  v58[0]))
          {
            uint64_t v43 = 0LL;
            goto LABEL_10;
          }

          swift_bridgeObjectRelease(v57);
        }
      }
    }
  }

  uint64_t v43 = 1LL;
LABEL_10:
  sub_62AC(v58);
  return v43;
}

double sub_24514@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24438(a1);
  if ((v5 & 1) != 0)
  {
    sub_12350(a1, a2);
    return result;
  }

  sub_24A60(v5, v6, v7, v8, v9);
  uint64_t v11 = sub_5F6C(&qword_7DCD0);
  if (sub_24A3C( v11,  v12,  v13,  v11,  v14,  v15,  v16,  v17,  v47,  *((uint64_t *)&v47 + 1),  v48,  *((uint64_t *)&v48 + 1),  v49,  v50))
  {
    uint64_t v18 = sub_6010(&v47, (uint64_t)&v54);
    sub_24A50( v18,  v19,  v20,  v21,  v22,  v23,  v24,  v25,  v47,  *((uint64_t *)&v47 + 1),  v48,  *((uint64_t *)&v48 + 1),  v49,  v50,  v51,  v52,  v53,  v54,  v55,  v56,  v57);
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(&type metadata for Any[8], v2);
    *(void *)(a2 + 24) = sub_5F6C(&qword_7D668);
    *(void *)a2 = v26;
LABEL_7:
    sub_62AC(&v54);
    return result;
  }

  uint64_t v49 = 0LL;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  uint64_t v27 = sub_DBD8((uint64_t)&v47, &qword_7DCD8);
  sub_24A60(v27, v28, v29, v30, v31);
  uint64_t v32 = sub_5F6C(&qword_7DCE0);
  if (sub_24A3C( v32,  v33,  v34,  v32,  v35,  v36,  v37,  v38,  v47,  *((uint64_t *)&v47 + 1),  v48,  *((uint64_t *)&v48 + 1),  v49,  v50))
  {
    uint64_t v39 = sub_6010(&v47, (uint64_t)&v54);
    sub_24A50( v39,  v40,  v41,  v42,  v43,  v44,  v45,  v46,  v47,  *((uint64_t *)&v47 + 1),  v48,  *((uint64_t *)&v48 + 1),  v49,  v50,  v51,  v52,  v53,  v54,  v55,  v56,  v57);
    (*(void (**)(char *, uint64_t))(v2 + 8))(&type metadata for Any[8], v2);
    goto LABEL_7;
  }

  uint64_t v49 = 0LL;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  sub_DBD8((uint64_t)&v47, &qword_7DCE8);
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  return result;
}

uint64_t sub_24660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v37 = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0LL, a3, a4, "key value ", 0LL);
  __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = *(void *)(a4 - 8);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v32 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = a2;
  uint64_t v15 = *(int *)(v14 + 48);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a3 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v19(v9, a2, a3, v12);
  uint64_t v35 = v10;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v16, v17, a4);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v22 = v32;
  v21(v32, v16, a4);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v23(v9, a3);
  uint64_t v24 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v19)(v9, v33, a3);
  uint64_t v25 = v24;
  v20(v24, v17, a4);
  uint64_t v26 = v20;
  uint64_t v27 = v36;
  _convertToAnyHashable<A>(_:)(v40, v9, a3, v36);
  v23(v9, a3);
  type metadata accessor for Dictionary(0LL, a3, a4, v27);
  v38[3] = a4;
  uint64_t v28 = (char *)sub_7BA4(v38);
  v26(v28, (uint64_t)v22, a4);
  sub_24514((uint64_t)v38, (uint64_t)v39);
  sub_62AC(v38);
  sub_139D4((uint64_t)v39, (uint64_t)v40);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v35 + 8);
  v29(v22, a4);
  return ((uint64_t (*)(char *, uint64_t))v29)(v25, a4);
}

uint64_t sub_24858@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24378(*v2, a1[2], a1[3], a1[4], a2);
}

uint64_t sub_2486C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v8[5] = a1;
  __int128 v8[2] = a2;
  uint64_t v4 = type metadata accessor for Array(0LL);
  uint64_t WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
  uint64_t v6 = Sequence.compactMap<A>(_:)(sub_24A10, v8, v4, &type metadata for Any[8], WitnessTable);
  uint64_t result = sub_5F6C(&qword_7DEC0);
  a3[3] = result;
  *a3 = v6;
  return result;
}

uint64_t sub_24900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v8[3] = a2;
  uint64_t v6 = sub_7BA4(v8);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16LL))(v6, a1, a2);
  sub_24514((uint64_t)v8, a3);
  return sub_62AC(v8);
}

uint64_t sub_24978@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2486C(*v2, *(void *)(a1 + 16), a2);
}

uint64_t sub_24988@<X0>(uint64_t *a1@<X8>)
{
  id v3 = v1;
  uint64_t v4 = sub_24274();

  uint64_t result = sub_5F6C(&qword_7D668);
  a1[3] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_249D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_24988(a1);
}

uint64_t sub_249F4(uint64_t a1, uint64_t a2)
{
  return sub_24660(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_24A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24900(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24A28( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return swift_dynamicCast(&a9, &a11, v11, a4, 0LL);
}

uint64_t sub_24A3C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  return swift_dynamicCast(&a9, &a14, v14, a4, 6LL);
}

void *sub_24A50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  return sub_7A94(&a18, a21);
}

uint64_t sub_24A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  return sub_12350(v5, (uint64_t)va);
}

uint64_t sub_24A6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for URL(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v7 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v8 = type metadata accessor for ActionFactory(0LL);
  uint64_t v9 = swift_allocObject(v8, 16LL, 7LL);
  uint64_t v10 = (int *)type metadata accessor for LinkAction(0LL);
  uint64_t v32 = a1;
  uint64_t v34 = a1;
  uint64_t v11 = v31;
  sub_4E84(0x654D6E6F69746361LL, 0xED00007363697274LL, (uint64_t)v10, (uint64_t)sub_5FE4, (uint64_t)v33, v12, v13, v14);
  if (v11)
  {
    uint64_t v15 = type metadata accessor for JSONObject(0LL);
    sub_6D14(v15);
    swift_release();
    uint64_t v16 = sub_9A58();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v32, v16);
  }

  else
  {
    uint64_t v31 = v6;
    uint64_t v25 = v4;
    uint64_t v26 = v3;
    uint64_t v28 = v37 + v10[5];
    uint64_t v29 = v7;
    uint64_t v18 = (*(uint64_t (**)(void))(v7 + 32))();
    __chkstk_darwin(v18);
    uint64_t v19 = v32;
    *(&v25 - 2) = v9;
    *(&v25 - 1) = v19;
    sub_25628();
    sub_4EA8();
    uint64_t v27 = v37 + v10[6];
    uint64_t v20 = sub_A60C((uint64_t)&v36, v27);
    __chkstk_darwin(v20);
    *(&v25 - 2) = v9;
    *(&v25 - 1) = v19;
    sub_25628();
    sub_4EA8();
    uint64_t v21 = (uint64_t)v31;
    uint64_t v22 = v37;
    sub_A60C((uint64_t)&v35, v37 + v10[7]);
    sub_24068(7107189LL, 0xE300000000000000LL, (uint64_t)v10, v21);
    uint64_t v23 = type metadata accessor for JSONObject(0LL);
    sub_6D14(v23);
    swift_release();
    uint64_t v24 = sub_9A58();
    sub_25614(v24);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v22, v21, v26);
  }

uint64_t sub_24DD4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_24A6C(a1, a2);
}

uint64_t type metadata accessor for LinkAction(uint64_t a1)
{
  uint64_t result = qword_7DF20;
  if (!qword_7DF20) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LinkAction);
  }
  return result;
}

uint64_t *sub_24E20(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v17);
  }

  else
  {
    uint64_t v7 = type metadata accessor for URL(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ActionMetrics(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v12 + 24);
    if (v15)
    {
      uint64_t v16 = *((void *)v14 + 4);
      *((void *)v13 + 3) = v15;
      *((void *)v13 + 4) = v16;
      (**(void (***)(void))(v15 - 8))();
    }

    else
    {
      __int128 v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      *((void *)v13 + 4) = *((void *)v14 + 4);
    }

    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v19 + 24);
    if (v22)
    {
      uint64_t v23 = *((void *)v21 + 4);
      *((void *)v20 + 3) = v22;
      *((void *)v20 + 4) = v23;
      (**(void (***)(void))(v22 - 8))();
    }

    else
    {
      __int128 v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v24;
      *((void *)v20 + 4) = *((void *)v21 + 4);
    }
  }

  return a1;
}

void *sub_24F48(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t v7 = (void *)(a1 + a2[6]);
  if (v7[3]) {
    sub_62AC(v7);
  }
  uint64_t result = (void *)(a1 + a2[7]);
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_24FE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  if (v14)
  {
    uint64_t v15 = *(void *)(v13 + 32);
    *(void *)(v12 + 24) = v14;
    *(void *)(v12 + 32) = v15;
    (**(void (***)(void))(v14 - 8))();
  }

  else
  {
    __int128 v16 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v16;
    *(void *)(v12 + 32) = *(void *)(v13 + 32);
  }

  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 24);
  if (v20)
  {
    uint64_t v21 = *(void *)(v19 + 32);
    *(void *)(v18 + 24) = v20;
    *(void *)(v18 + 32) = v21;
    (**(void (***)(void))(v20 - 8))();
  }

  else
  {
    __int128 v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = v22;
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
  }

  return a1;
}

uint64_t sub_250E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (__int128 *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 24);
  if (*(void *)(a1 + v11 + 24))
  {
    if (v14)
    {
      sub_6520((void *)v12, v13);
      goto LABEL_8;
    }

    sub_62AC((void *)v12);
  }

  else if (v14)
  {
    *(void *)(v12 + 24) = v14;
    *(void *)(v12 + 32) = *((void *)v13 + 4);
    (**(void (***)(uint64_t, __int128 *))(v14 - 8))(v12, v13);
    goto LABEL_8;
  }

  __int128 v15 = *v13;
  __int128 v16 = v13[1];
  *(void *)(v12 + 32) = *((void *)v13 + 4);
  *(_OWORD *)uint64_t v12 = v15;
  *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v16;
LABEL_8:
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (__int128 *)(a2 + v17);
  uint64_t v20 = *((void *)v19 + 3);
  if (!*(void *)(a1 + v17 + 24))
  {
    if (v20)
    {
      *(void *)(v18 + 24) = v20;
      *(void *)(v18 + 32) = *((void *)v19 + 4);
      (**(void (***)(uint64_t, __int128 *))(v20 - 8))(v18, v19);
      return a1;
    }

uint64_t sub_2523C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  __int128 v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  __int128 v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  return a1;
}

uint64_t sub_252F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if (*(void *)(a1 + v11 + 24)) {
    sub_62AC((void *)v12);
  }
  __int128 v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_62AC((void *)(a1 + v15));
  }
  __int128 v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_253D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_253DC);
}

uint64_t sub_253DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25640();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)v3)
  {
    uint64_t v7 = v6;
    uint64_t v8 = v4;
    return sub_6028(v8, v3, v7);
  }

  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84LL) == (_DWORD)v3)
  {
    uint64_t v7 = v9;
    uint64_t v8 = v4 + *(int *)(a3 + 20);
    return sub_6028(v8, v3, v7);
  }

  unint64_t v11 = *(void *)(v4 + *(int *)(a3 + 24) + 24);
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  int v12 = v11 - 1;
  if (v12 < 0) {
    int v12 = -1;
  }
  return (v12 + 1);
}

uint64_t sub_25480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2548C);
}

uint64_t sub_2548C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_25640();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = v5;
    return sub_5FEC(v10, v4, v4, v9);
  }

  uint64_t result = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return sub_5FEC(v10, v4, v4, v9);
  }

  *(void *)(v5 + *(int *)(a4 + 24) + 24) = v4;
  return result;
}

uint64_t sub_25520(uint64_t a1)
{
  uint64_t result = type metadata accessor for URL(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for ActionMetrics(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      void v5[2] = "(";
      v5[3] = "(";
      swift_initStructMetadata(a1, 256LL, 4LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

unint64_t sub_255B0(uint64_t a1)
{
  unint64_t result = sub_255D4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_255D4()
{
  unint64_t result = qword_7DA90;
  if (!qword_7DA90)
  {
    uint64_t v1 = type metadata accessor for LinkAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5E110, v1);
    atomic_store(result, (unint64_t *)&qword_7DA90);
  }

  return result;
}

uint64_t sub_25614(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

  ;
}

uint64_t sub_25640()
{
  return type metadata accessor for URL(0LL);
}

uint64_t sub_25650()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___AMSOpenURL);
  URL._bridgeToObjectiveC()(v1);
  unint64_t v3 = v2;
  LODWORD(sub_60C8(v1 - 136, v0) = [v0 openStandardURL:v2];

  sub_5F6C(&qword_7D048);
  if ((_DWORD)v0)
  {
    memset(v7, 0, sizeof(v7));
    return Promise.__allocating_init(value:)(v7);
  }

  else
  {
    unint64_t v5 = sub_25728();
    uint64_t v6 = swift_allocError(&type metadata for LinkActionImplementation.PerformError, v5, 0LL, 0LL);
    return Promise.__allocating_init(error:)(v6);
  }

uint64_t type metadata accessor for LinkActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin24LinkActionImplementation);
}

uint64_t sub_25714()
{
  return sub_25650();
}

unint64_t sub_25728()
{
  unint64_t result = qword_7E020;
  if (!qword_7E020)
  {
    unint64_t result = swift_getWitnessTable(&unk_5E280, &type metadata for LinkActionImplementation.PerformError);
    atomic_store(result, (unint64_t *)&qword_7E020);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for LinkActionImplementation.PerformError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_257A4 + 4 * byte_5E1C0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_257C4 + 4 * byte_5E1C5[v4]))();
  }
}

_BYTE *sub_257A4(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_257C4(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_257CC(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_257D4(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_257DC(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_257E4(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LinkActionImplementation.PerformError()
{
  return &type metadata for LinkActionImplementation.PerformError;
}

unint64_t sub_25804()
{
  unint64_t result = qword_7E028;
  if (!qword_7E028)
  {
    unint64_t result = swift_getWitnessTable(&unk_5E258, &type metadata for LinkActionImplementation.PerformError);
    atomic_store(result, (unint64_t *)&qword_7E028);
  }

  return result;
}

id sub_25840(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator;
  id v4 = objc_allocWithZone(&OBJC_CLASS___UIActivityIndicatorView);
  unint64_t v5 = v1;
  id v6 = sub_263C0((uint64_t)v5, "init");
  [v6 setActivityIndicatorViewStyle:101];
  *(void *)&v1[v3] = v6;
  uint64_t v7 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView;
  *(void *)&v5[v7] = [objc_allocWithZone(AMSUICommonView) init];
  v5[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style] = a1;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for LoadingViewController();
  return objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
}

void sub_25908()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator;
  id v2 = [objc_allocWithZone(UIActivityIndicatorView) init];
  [v2 setActivityIndicatorViewStyle:101];
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView;
  *(void *)&v0[v3] = [objc_allocWithZone(AMSUICommonView) init];

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/LoadingViewController.swift",  47LL,  2LL,  51LL,  0);
  __break(1u);
}

void sub_259DC()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for LoadingViewController();
  id v7 = sub_A32C((uint64_t)v12.super_class, "loadView", v1, v2, v3, v4, v5, v6, v12);
  id v8 = sub_A324((uint64_t)v7, "view");
  id v9 = objc_msgSend((id)objc_opt_self(UIColor), "ams_clear");
  [v8 setBackgroundColor:v9];

  id v11 = sub_A324(v10, "view");
  [v11 setUserInteractionEnabled:0];
}

void sub_25ACC()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for LoadingViewController();
  sub_A32C((uint64_t)v8.super_class, "viewDidLoad", v1, v2, v3, v4, v5, v6, v8);
  sub_25DE4();
  sub_25C1C(v7);
}

void sub_25B34()
{
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for LoadingViewController();
  sub_A32C((uint64_t)v17.super_class, "viewWillLayoutSubviews", v1, v2, v3, v4, v5, v6, v17);
  id v7 = *(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView];
  id v8 = sub_A324((uint64_t)v7, "view");
  [v8 bounds];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  objc_msgSend(v7, "setFrame:", v10, v12, v14, v16);
}

void sub_25C1C(uint64_t a1)
{
  uint64_t v2 = v1;
  id v3 = sub_A324(a1, "view");
  uint64_t v4 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator;
  [v3 addSubview:*(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator]];

  id v5 = *(id *)&v2[v4];
  sub_570F4(0LL, 0LL, 1);

  [*(id *)&v2[v4] startAnimating];
  [*(id *)&v2[v4] setAlpha:0.0];
  uint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v7 = sub_19060((uint64_t)&unk_737B8, 24LL);
  swift_unknownObjectWeakInit(v7 + 16, v2);
  id v8 = sub_263E4((uint64_t)sub_21544, (uint64_t)_NSConcreteStackBlock, 1107296256LL, v18, v20);
  sub_263D8((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v19, v21, (uint64_t)sub_263B0, v7);
  sub_263C8(v6, "animateWithDuration:delay:options:animations:completion:");
  _Block_release(v2);
}

void sub_25D6C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    id v3 = (void *)Strong;
    id v4 = *(id *)(Strong + OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_activityIndicator);

    [v4 setAlpha:1.0];
  }

void sub_25DE4()
{
  uint64_t ObjectType = (const void *)swift_getObjectType(v0);
  id v2 = sub_A324((uint64_t)ObjectType, "view");
  uint64_t v3 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView;
  [v2 addSubview:*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView)];

  int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style);
  if (v4 == 2)
  {
    id v5 = *(void **)(v0 + v3);
    objc_opt_self(&OBJC_CLASS___UIColor);
    id v6 = v5;
    id v7 = sub_263C0((uint64_t)v6, "ams_dim");
    [v6 setBackgroundColor:v7];

LABEL_7:
    [*(id *)(v0 + v3) setAlpha:0.0];
    uint64_t v14 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v15 = sub_19060((uint64_t)&unk_737B8, 24LL);
    swift_unknownObjectWeakInit(v15 + 16, v0);
    uint64_t v16 = sub_19060((uint64_t)&unk_737E0, 32LL);
    *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
    *(void *)(v16 + 24) = ObjectType;
    uint64_t v31 = v16;
    uint64_t v17 = sub_263E4((uint64_t)sub_21544, (uint64_t)_NSConcreteStackBlock, 1107296256LL, v27, v29);
    sub_263D8((uint64_t)v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v28, v30, (uint64_t)sub_26390, v31);
    sub_263C8(v14, "animateWithDuration:delay:options:animations:completion:");
    _Block_release(ObjectType);
    return;
  }

  if (v4 == 1)
  {
    id v8 = *(void **)(v0 + v3);
    objc_opt_self(&OBJC_CLASS___UIColor);
    id v9 = v8;
    id v10 = sub_263C0((uint64_t)v9, "ams_clear");
    [v9 setBackgroundColor:v10];

    id v11 = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:5003];
    id v12 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:v11];

    id v7 = v12;
    id v13 = sub_263C0((uint64_t)v7, "ams_clear");
    [v7 setBackgroundColor:v13];

    [*(id *)(v0 + v3) addSubview:v7];
    [v7 setAutoresizingMask:18];
    goto LABEL_7;
  }

  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style)) {
    [*(id *)(v0 + v3) setAlpha:0.0];
  }
}

void sub_260B0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = (_BYTE *)Strong;
    int v4 = *(void **)(Strong + OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_loadingView);
    double v5 = 1.0;
    if (!v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin21LoadingViewController_style]) {
      double v5 = 0.0;
    }
    [v4 setAlpha:v5];
  }

void sub_26130()
{
}

void sub_26168()
{
}

id sub_261B8()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for LoadingViewController();
  return sub_A32C((uint64_t)v8.super_class, "dealloc", v1, v2, v3, v4, v5, v6, v8);
}

uint64_t type metadata accessor for LoadingViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin21LoadingViewController);
}

uint64_t storeEnumTagSinglePayload for LoadingViewController.Style( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_26288 + 4 * byte_5E2C5[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_262BC + 4 * byte_5E2C0[v4]))();
}

uint64_t sub_262BC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_262C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x262CCLL);
  }
  return result;
}

uint64_t sub_262D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x262E0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_262E4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_262EC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LoadingViewController.Style()
{
  return &type metadata for LoadingViewController.Style;
}

unint64_t sub_2630C()
{
  unint64_t result = qword_7E070;
  if (!qword_7E070)
  {
    unint64_t result = swift_getWitnessTable(&unk_5E32C, &type metadata for LoadingViewController.Style);
    atomic_store(result, (unint64_t *)&qword_7E070);
  }

  return result;
}

uint64_t sub_26348()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_2636C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_26390()
{
}

uint64_t sub_26398(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_263A8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_263B0()
{
}

id sub_263C0(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

id sub_263C8(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0, v2, 0);
}

uint64_t sub_263D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return swift_release(a14);
}

void *sub_263E4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

uint64_t sub_263F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_5F6C(&qword_7E120);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_5F6C(&qword_7D5C0);
  __chkstk_darwin(v8);
  id v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_11CD0(a3, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for Bag(0LL);
  if (sub_6028((uint64_t)v10, 1LL, v11) == 1)
  {
    sub_26638((uint64_t)v10);
    uint64_t v12 = 0LL;
  }

  else
  {
    if (qword_7CA50 != -1) {
      swift_once(&qword_7CA50, sub_26678);
    }
    Bag.subscript.getter(qword_7E078);
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
    Bag.Value.currentOrNil()(v20, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = v20[1];
  }

  NSString v13 = String._bridgeToObjectiveC()();
  if (qword_7CA58 != -1) {
    swift_once(&qword_7CA58, sub_266B0);
  }
  uint64_t v14 = qword_7E080;
  if (v12)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
  }

  else
  {
    NSString v15 = 0LL;
  }

  id v16 =  [(id)objc_opt_self(AMSLocalizations) localizedStringForKey:v13 bundle:v14 table:0 languageCode:v15];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);
  return v18;
}

uint64_t type metadata accessor for Localizations()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin13Localizations);
}

uint64_t sub_26638(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7D5C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

NSString sub_26678()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_7E078 = (uint64_t)result;
  return result;
}

id sub_266B0()
{
  id result = sub_2673C(0xD000000000000025LL, 0x80000000000641C0LL);
  if (result) {
    qword_7E080 = (uint64_t)result;
  }
  else {
    __break(1u);
  }
  return result;
}

unint64_t sub_26700()
{
  unint64_t result = qword_7E128;
  if (!qword_7E128)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSBundle);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7E128);
  }

  return result;
}

id sub_2673C(uint64_t a1, uint64_t a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v5 = [(id)swift_getObjCClassFromMetadata(v2) bundleWithIdentifier:v4];

  return v5;
}

uint64_t sub_2679C(uint64_t a1)
{
  uint64_t v2 = static os_log_type_t.default.getter();
  return sub_26A24(v2, a1);
}

uint64_t sub_267BC(uint64_t a1)
{
  uint64_t v2 = static os_log_type_t.error.getter();
  return sub_26A24(v2, a1);
}

uint64_t sub_267DC()
{
  uint64_t result = OS_os_log.init(subsystem:category:)( 0xD00000000000001CLL,  0x8000000000064220LL,  0x2D63696D616E7964LL,  0xEA00000000006975LL);
  qword_7E130 = result;
  return result;
}

uint64_t sub_2683C(uint64_t a1)
{
  uint64_t v2 = static os_log_type_t.debug.getter();
  return sub_26A24(v2, a1);
}

uint64_t sub_2685C(uint64_t a1, uint64_t a2)
{
  if (qword_7CA60 != -1) {
    swift_once(&qword_7CA60, sub_267DC);
  }
  uint64_t v4 = qword_7E130;
  uint64_t result = os_log_type_enabled((os_log_t)qword_7E130, (os_log_type_t)a1);
  if ((_DWORD)result)
  {
    char v6 = static LogMessage.isRedactionEnabled.getter();
    uint64_t v7 = static LogMessage.describe(contentsOf:withRedaction:separator:)(a2, v6 & 1, 32LL, 0xE100000000000000LL);
    uint64_t v9 = v8;
    uint64_t v10 = sub_5F6C(&qword_7E1D0);
    uint64_t v11 = swift_allocObject(v10, 72LL, 7LL);
    *(_OWORD *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5D0F0;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_269AC();
    *(void *)(v11 + 32) = v7;
    *(void *)(v11 + 40) = v9;
    os_log(_:dso:log:type:_:)("%{public}@", 10LL, 2LL, &dword_0, v4, a1, v11);
    return swift_bridgeObjectRelease(v11);
  }

  return result;
}

uint64_t sub_2696C(uint64_t a1)
{
  uint64_t v2 = static os_log_type_t.info.getter();
  return sub_26A24(v2, a1);
}

uint64_t type metadata accessor for Log()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin3Log);
}

unint64_t sub_269AC()
{
  unint64_t result = qword_7E1D8;
  if (!qword_7E1D8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_7E1D8);
  }

  return result;
}

unint64_t sub_269E8()
{
  unint64_t result = qword_7E1E0;
  if (!qword_7E1E0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_os_log);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7E1E0);
  }

  return result;
}

uint64_t sub_26A24(uint64_t a1, uint64_t a2)
{
  return sub_2685C(a1, a2);
}

unint64_t sub_26A30()
{
  unint64_t result = qword_7E1E8;
  if (!qword_7E1E8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for NetworkInterface,  &type metadata for NetworkInterface);
    atomic_store(result, (unint64_t *)&qword_7E1E8);
  }

  return result;
}

uint64_t getEnumTagSinglePayload for NetworkInterface(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for NetworkInterface(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_26B40 + 4 * byte_5E395[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_26B74 + 4 * asc_5E390[v4]))();
}

uint64_t sub_26B74(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_26B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x26B84LL);
  }
  return result;
}

uint64_t sub_26B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x26B98LL);
  }
  *(_BYTE *)unint64_t result = a2 + 5;
  return result;
}

uint64_t sub_26B9C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_26BA4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterface()
{
  return &type metadata for NetworkInterface;
}

id sub_26BC0()
{
  id result = [(id)objc_opt_self(NWPathEvaluator) sharedDefaultEvaluator];
  if (result)
  {
    int v2 = result;
    uint64_t v3 = sub_19060(v0, 32LL);
    sub_26C64(v2);
    return (id)v3;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_26C20(unint64_t a1)
{
  if (a1 < 5) {
    return (a1 + 1);
  }
  else {
    return 1LL;
  }
}

NSString sub_26C30()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_7E1F0 = (uint64_t)result;
  return result;
}

uint64_t sub_26C64(void *a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = 0LL;
  uint64_t KeyPath = swift_getKeyPath(&unk_5E4A0);
  uint64_t v5 = sub_19060((uint64_t)&unk_73988, 24LL);
  swift_weakInit(v5 + 16, v2);
  id v6 = a1;
  uint64_t v7 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)( KeyPath,  0LL,  sub_27490,  v5,  &protocol witness table for NSObject);

  swift_release();
  swift_release();
  uint64_t v8 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = v7;

  return v2;
}

id sub_26D28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 path];
  *a2 = result;
  return result;
}

uint64_t sub_26D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v5, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v3);
  if (result)
  {
    sub_26DB4();
    return swift_release();
  }

  return result;
}

void sub_26DB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v7 = type metadata accessor for LogMessage(0LL);
  uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
       + 6LL * *(void *)(*(void *)(v7 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5D750;
  uint64_t v33 = v2;
  v32[0] = v1;
  uint64_t v9 = swift_retain(v1);
  id v10 = (id)AMSLogKey(v9);
  if (v10)
  {
    uint64_t v12 = v10;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);
    uint64_t v15 = v14;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v16._countAndFlagsBits = 0LL;
    v16._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    uint64_t v17 = v33;
    uint64_t v18 = sub_7A94(v32, (uint64_t)v33);
    uint64_t DynamicType = swift_getDynamicType(v18, v17, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v30[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v30);
    sub_7AB8((uint64_t)v30);
    v20._countAndFlagsBits = 5972026LL;
    v20._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t MetatypeMetadata = &type metadata for String;
    v30[0] = v13;
    v30[1] = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v30);
    sub_7AB8((uint64_t)v30);
    uint64_t v21 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v22._countAndFlagsBits = 0LL;
    v22._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = v33;
    uint64_t v24 = sub_7A94(v32, (uint64_t)v33);
    uint64_t v25 = swift_getDynamicType(v24, v23, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v30[0] = v25;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v30);
    sub_7AB8((uint64_t)v30);
    uint64_t v21 = 58LL;
  }

  unint64_t v26 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v21);
  LogMessage.init(stringInterpolation:)(v5);
  type metadata accessor for Log();
  sub_62AC(v32);
  LogMessage.init(stringLiteral:)(0x6E61686320646944LL, 0xEC000000203A6567LL);
  LogMessage.init(stringLiteral:)(0xD000000000000014LL, 0x8000000000064290LL);
  sub_2719C();
  uint64_t v33 = (ValueMetadata *)&type metadata for Bool;
  LOBYTE(v32[0]) = v27 & 1;
  static LogMessage.safe(_:)(v32);
  sub_7AB8((uint64_t)v32);
  LogMessage.init(stringLiteral:)(0x6361667265746E69LL, 0xEC000000203D2065LL);
  sub_271EC();
  uint64_t v33 = &type metadata for NetworkInterface;
  LOBYTE(v32[0]) = v28;
  static LogMessage.safe(_:)(v32);
  sub_7AB8((uint64_t)v32);
  sub_2683C(v8);
  swift_bridgeObjectRelease(v8);
  id v29 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  if (qword_7CA68 != -1) {
    swift_once(&qword_7CA68, sub_26C30);
  }
  [v29 postNotificationName:qword_7E1F0 object:v1];
}

uint64_t sub_27114()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 24);
  if (v2)
  {
    id v3 = v2;
    dispatch thunk of NSKeyValueObservation.invalidate()();
  }

  return v1;
}

uint64_t sub_2715C()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for NWPathNetworkInquiry()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin20NWPathNetworkInquiry);
}

void sub_2719C()
{
  id v1 = [*(id *)(v0 + 16) path];
  [v1 status];

  sub_6D3C();
}

void sub_271EC()
{
  id v1 = [*(id *)(v0 + 16) path];
  id v2 = [v1 interface];

  if (v2)
  {
    id v3 = [v2 type];

    sub_26C20((unint64_t)v3);
  }

  else
  {
    sub_6D3C();
  }

void sub_27268(SEL *a1)
{
  id v3 = [*(id *)(v1 + 16) path];
  [v3 *a1];

  sub_6D3C();
}

uint64_t sub_272B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v5;
  if (qword_7CA68 != -1) {
    swift_once(&qword_7CA68, sub_26C30);
  }
  uint64_t v11 = (void *)qword_7E1F0;
  void v16[3] = v10;
  v16[0] = v5;
  sub_16D24(a1, (uint64_t)v15);
  uint64_t v12 = type metadata accessor for CommonNetworkObservation();
  sub_19060(v12, 72LL);
  id v13 = v11;
  swift_retain(v5);
  swift_retain(a3);
  uint64_t result = sub_1670C(v13, v16, v15, a2, a3);
  a4[3] = v12;
  a4[4] = (uint64_t)&off_72C60;
  *a4 = result;
  return result;
}

uint64_t sub_273A0()
{
  return v0 & 1;
}

void sub_273C4()
{
}

uint64_t sub_273E4()
{
  return v0 & 1;
}

uint64_t sub_27410()
{
  return v0 & 1;
}

uint64_t sub_2743C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_272B0(a1, a2, a3, a4);
}

const char *sub_2745C()
{
  return "path";
}

uint64_t sub_2746C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_27490(uint64_t a1, uint64_t a2)
{
  return sub_26D60(a1, a2, v2);
}

uint64_t sub_27498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_23DB8();
  if (v1)
  {
    uint64_t v5 = sub_9A58();
    sub_27F50(v5);
    uint64_t v6 = sub_6BC8();
    return sub_6D14(v6);
  }

  else
  {
    *(void *)(a1 + 144) = v3;
    *(void *)(a1 + 152) = v4;
    __chkstk_darwin(v3);
    sub_27F7C();
    sub_547C();
    __int128 v8 = v17[1];
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v17[0];
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 48) = v17[2];
    *(void *)(a1 + 64) = v18;
    *(void *)a1 = sub_23DB8();
    *(void *)(a1 + 8) = v9;
    uint64_t v10 = sub_27F64();
    *(void *)(a1 + 128) = v10;
    *(void *)(a1 + 136) = v11;
    __chkstk_darwin(v10);
    sub_27F7C();
    sub_53A0();
    sub_278A4((uint64_t)v17, a1 + 72);
    uint64_t v12 = sub_23DB8();
    uint64_t v14 = v13;
    uint64_t v15 = sub_9A58();
    sub_27F50(v15);
    uint64_t v16 = sub_6BC8();
    uint64_t result = sub_6D14(v16);
    *(void *)(a1 + 160) = v12;
    *(void *)(a1 + 168) = v14;
  }

  return result;
}

uint64_t sub_27728@<X0>(uint64_t a1@<X8>)
{
  return sub_27498(a1);
}

uint64_t sub_2773C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionFactory(0LL);
  swift_allocObject(v3, 16LL, 7LL);
  sub_4EA8();
  if (v1)
  {
    uint64_t v4 = sub_6BC8();
    sub_6D14(v4);
    sub_AD00();
    uint64_t v5 = sub_9A58();
    return sub_ACD0(v5);
  }

  else
  {
    sub_6010(&v12, a1);
    uint64_t v7 = sub_27F64();
    uint64_t v9 = v8;
    uint64_t v10 = sub_6BC8();
    sub_6D14(v10);
    sub_AD00();
    uint64_t v11 = sub_9A58();
    uint64_t result = sub_ACD0(v11);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v9;
  }

  return result;
}

uint64_t sub_27854@<X0>(uint64_t a1@<X8>)
{
  return sub_2773C(a1);
}

void sub_27868()
{
}

void *sub_27870(void *a1)
{
  return a1;
}

void sub_2789C()
{
}

uint64_t sub_278A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C((uint64_t *)&unk_7CB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t destroy for OnboardingPageDestination(void *a1)
{
  if (a1[12])
  {
    sub_62AC(a1 + 9);
    swift_bridgeObjectRelease(a1[15]);
  }

  swift_bridgeObjectRelease(a1[17]);
  swift_bridgeObjectRelease(a1[19]);
  return swift_bridgeObjectRelease(a1[21]);
}

uint64_t initializeWithCopy for OnboardingPageDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  __int128 v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain(v4);
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain(v9);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 72, a2 + 72, v10);
    uint64_t v12 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v12;
    swift_bridgeObjectRetain(v12);
  }

  else
  {
    __int128 v13 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v13;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
  }

  uint64_t v14 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  uint64_t v15 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v15;
  uint64_t v16 = *(void *)(a2 + 160);
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v16;
  *(void *)(a1 + 168) = v17;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t assignWithCopy for OnboardingPageDestination(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  sub_6520((void *)(a1 + 16), (void *)(a2 + 16));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = (_OWORD *)(a1 + 72);
  uint64_t v9 = (__int128 *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v10)
    {
      sub_6520((void *)(a1 + 72), (void *)(a2 + 72));
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      uint64_t v11 = *(void *)(a2 + 120);
      uint64_t v12 = *(void *)(a1 + 120);
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRelease(v12);
    }

    else
    {
      sub_27870((void *)(a1 + 72));
      __int128 v15 = *(_OWORD *)(a2 + 88);
      __int128 v14 = *(_OWORD *)(a2 + 104);
      __int128 v16 = *v9;
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(_OWORD *)(a1 + 88) = v15;
      *(_OWORD *)(a1 + 104) = v14;
      *uint64_t v8 = v16;
    }
  }

  else if (v10)
  {
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 72, a2 + 72);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    uint64_t v13 = *(void *)(a2 + 120);
    *(void *)(a1 + 120) = v13;
    swift_bridgeObjectRetain(v13);
  }

  else
  {
    __int128 v17 = *v9;
    __int128 v18 = *(_OWORD *)(a2 + 88);
    __int128 v19 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 88) = v18;
    *(_OWORD *)(a1 + 104) = v19;
    *uint64_t v8 = v17;
  }

  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v20 = *(void *)(a2 + 136);
  uint64_t v21 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v22 = *(void *)(a2 + 152);
  uint64_t v23 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v24 = *(void *)(a2 + 168);
  uint64_t v25 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  return a1;
}

void *initializeWithTake for OnboardingPageDestination(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t assignWithTake for OnboardingPageDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  sub_62AC((void *)(a1 + 16));
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = (_OWORD *)(a1 + 72);
  uint64_t v9 = (_OWORD *)(a2 + 72);
  if (!*(void *)(a1 + 96)) {
    goto LABEL_5;
  }
  if (!*(void *)(a2 + 96))
  {
    sub_27870((void *)(a1 + 72));
LABEL_5:
    __int128 v13 = *(_OWORD *)(a2 + 88);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 88) = v13;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    goto LABEL_6;
  }

  sub_62AC((void *)(a1 + 72));
  __int128 v10 = *(_OWORD *)(a2 + 88);
  *uint64_t v8 = *v9;
  *(_OWORD *)(a1 + 88) = v10;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v11 = *(void *)(a2 + 120);
  uint64_t v12 = *(void *)(a1 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease(v12);
LABEL_6:
  uint64_t v14 = *(void *)(a2 + 136);
  uint64_t v15 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = *(void *)(a2 + 152);
  uint64_t v17 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v16;
  swift_bridgeObjectRelease(v17);
  uint64_t v18 = *(void *)(a2 + 168);
  uint64_t v19 = *(void *)(a1 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v18;
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingPageDestination(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingPageDestination(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0LL;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 176) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for OnboardingPageDestination()
{
  return &type metadata for OnboardingPageDestination;
}

uint64_t destroy for OnboardingPageDestination.Button(void *a1)
{
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t initializeWithCopy for OnboardingPageDestination.Button(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v5);
  return a1;
}

void *assignWithCopy for OnboardingPageDestination.Button(void *a1, void *a2)
{
  a1[5] = a2[5];
  uint64_t v4 = a2[6];
  uint64_t v5 = a1[6];
  a1[6] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

__n128 initializeWithTake for OnboardingPageDestination.Button(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for OnboardingPageDestination.Button(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingPageDestination.Button(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingPageDestination.Button(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for OnboardingPageDestination.Button()
{
  return &type metadata for OnboardingPageDestination.Button;
}

uint64_t sub_27F50(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

uint64_t sub_27F64()
{
  return sub_23DB8();
}

  ;
}

uint64_t sub_27F90@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5F6C((uint64_t *)&unk_7DE50);
  __chkstk_darwin(v4);
  __int128 v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  if (a1 - 2 >= 2)
  {
    if (!a1)
    {
      uint64_t v14 = sub_23904();
      return sub_5FEC(a2, 1LL, 1LL, v14);
    }

    id v16 = [(id)objc_opt_self(AMSUIDAirplaneModeInquiry) settingsURL];
    if (v16)
    {
      uint64_t v17 = v16;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v18 = sub_23904();
      uint64_t v19 = 0LL;
    }

    else
    {
      uint64_t v18 = type metadata accessor for URL(0LL);
      uint64_t v19 = 1LL;
    }

    sub_5FEC((uint64_t)v9, v19, 1LL, v18);
    uint64_t v20 = (uint64_t)v9;
  }

  else
  {
    id v10 = [(id)objc_opt_self(AMSUIDCellularDataInquiry) settingsURL];
    if (v10)
    {
      uint64_t v11 = v10;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v12 = sub_23904();
      uint64_t v13 = 0LL;
    }

    else
    {
      uint64_t v12 = type metadata accessor for URL(0LL);
      uint64_t v13 = 1LL;
    }

    sub_5FEC((uint64_t)v6, v13, 1LL, v12);
    uint64_t v20 = (uint64_t)v6;
  }

  return sub_2828C(v20, a2);
}

uint64_t sub_28118(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_28138 + 4 * byte_5E590[a2]))();
}

uint64_t sub_28138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_281C8(0xD000000000000012LL, (void *)0x8000000000064360LL, a3);
}

uint64_t sub_28158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_281C8(0xD00000000000001ALL, (void *)0x8000000000064320LL, a3);
}

uint64_t sub_2817C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_281C8(0xD000000000000017LL, (void *)0x8000000000064300LL, a3);
}

uint64_t sub_281A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_281C8(0xD000000000000013LL, (void *)0x8000000000064340LL, a3);
}

uint64_t sub_281C8(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int v6 = [(id)objc_opt_self(AMSUIDMobileGestalt) wapiCapability];
  type metadata accessor for Localizations();
  if (v6) {
    uint64_t v7 = 1312902231LL;
  }
  else {
    uint64_t v7 = 1229343063LL;
  }
  unint64_t v11 = v7 & 0xFFFF0000FFFFFFFFLL | 0x5F00000000LL;
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  uint64_t v9 = sub_263F0(v11, 0xE500000000000000LL, a3);
  swift_bridgeObjectRelease(0xE500000000000000LL);
  return v9;
}

uint64_t sub_2828C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C((uint64_t *)&unk_7DE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_282D4(uint64_t a1, uint64_t a2)
{
  return sub_282E8(a1, a2, (uint64_t)sub_29780);
}

uint64_t sub_282E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_5F6C(&qword_7E2B8);
  __chkstk_darwin(v5);
  sub_F76C();
  uint64_t v8 = v7 - v6;
  JSONObject.array.getter();
  uint64_t v9 = type metadata accessor for JSONArray(0LL);
  uint64_t v10 = sub_6028(v8, 1LL, v9);
  if ((_DWORD)v10 == 1)
  {
    sub_DBD8(v8, &qword_7E2B8);
    return 0LL;
  }

  else
  {
    __n128 v12 = __chkstk_darwin(v10);
    *(&v14 - 2) = a2;
    uint64_t v11 = JSONArray.compactMap<A>(_:)(a3, v12);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
  }

  return v11;
}

uint64_t sub_283FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5F6C(&qword_7E2B8);
  __chkstk_darwin(v3);
  sub_F76C();
  uint64_t v6 = v5 - v4;
  JSONObject.array.getter(v7);
  uint64_t v8 = type metadata accessor for JSONArray(0LL);
  uint64_t v9 = sub_6028(v6, 1LL, v8);
  if ((_DWORD)v9 == 1)
  {
    sub_DBD8(v6, &qword_7E2B8);
    return 0LL;
  }

  else
  {
    __chkstk_darwin(v9);
    *(&v13 - 2) = a2;
    type metadata accessor for Shelf(0LL);
    uint64_t v10 = JSONArray.compactMap<A>(_:)(sub_29798, v11);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v6, v8);
  }

  return v10;
}

double sub_28510@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for JSONContext(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for JSONObject(0LL);
  __chkstk_darwin();
  __n128 v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  PluginComponent.init(deserializing:using:)(v12, v10);
  if (v3)
  {
    swift_errorRelease(v3);
    *(void *)(a3 + 80) = 0LL;
    double result = 0.0;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }

  return result;
}

double sub_28620@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for JSONContext(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for JSONObject(0LL);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))(v14, a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_34684((uint64_t)v14, (uint64_t)v10, (uint64_t)a3);
  if (v3)
  {
    swift_errorRelease(v3);
    double result = 0.0;
    *a3 = xmmword_5CDF0;
    a3[1] = 0u;
    a3[2] = 0u;
    a3[3] = 0u;
    a3[4] = 0u;
    a3[5] = 0u;
    a3[6] = 0u;
    a3[7] = 0u;
    a3[8] = 0u;
  }

  return result;
}

uint64_t sub_2873C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for JSONContext(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for JSONObject(0LL);
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))(v14, a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_2F89C((uint64_t)v14, (uint64_t)v10, a3);
  if (v3)
  {
    swift_errorRelease(v3);
    uint64_t v16 = 1LL;
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  uint64_t v17 = type metadata accessor for Shelf(0LL);
  return sub_5FEC((uint64_t)a3, v16, 1LL, v17);
}

uint64_t sub_28868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6A60(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_28878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

uint64_t sub_288B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_F76C();
  uint64_t v7 = type metadata accessor for ReplaceComponentShelfPageAction(0LL);
  uint64_t v8 = a2 + *(int *)(v7 + 40);
  uint64_t v9 = type metadata accessor for ActionFactory(0LL);
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v56 = v8;
  *(void *)(v8 + 32) = 0LL;
  uint64_t v10 = swift_allocObject(v9, 16LL, 7LL);
  uint64_t v51 = a1;
  sub_4E84(0x654D6E6F69746361LL, 0xED00007363697274LL, v7, (uint64_t)sub_A604, (uint64_t)v50, v11, v12, v13);
  if (v2)
  {
    uint64_t v14 = sub_6BC8();
    sub_6D14(v14);
    swift_release();
    uint64_t v15 = sub_9A58();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(a1, v15);
    return sub_DBD8(v56, (uint64_t *)&unk_7F900);
  }

  else
  {
    v48[2] = v5;
    uint64_t v49 = v10;
    uint64_t v16 = a2;
    v48[0] = a2 + *(int *)(v7 + 36);
    v48[1] = v6;
    uint64_t v17 = (*(uint64_t (**)(void))(v6 + 32))();
    __chkstk_darwin(v17);
    v48[-2] = a1;
    uint64_t v54 = &type metadata for PluginComponent;
    unint64_t v55 = sub_29118();
    *(void *)&__int128 v53 = swift_allocObject(&unk_73AF0, 104LL, 7LL);
    sub_29F98();
    sub_5580();
    uint64_t v18 = a1;
    uint64_t v19 = v16;
    uint64_t v20 = sub_291BC((uint64_t)&v53, v16);
    __chkstk_darwin(v20);
    v48[-2] = v18;
    sub_29F98();
    sub_29F8C();
    sub_4ECC(v21, v22, v23, v24, v25, v26, v27, v28);
    uint64_t v30 = v29;
    uint64_t v31 = v56;
    uint64_t v32 = sub_28FA8(v29);
    uint64_t v33 = swift_bridgeObjectRelease(v30);
    *(void *)(v19 + 40) = v32;
    __chkstk_darwin(v33);
    v48[-2] = v49;
    v48[-1] = v18;
    sub_29F8C();
    sub_4EA8();
    sub_85E0((uint64_t)&v52, v31);
    sub_29F8C();
    *(_BYTE *)(v19 + 48) = sub_23E7C() & 1;
    *(void *)(v19 + 56) = sub_23DB8();
    *(void *)(v19 + 64) = v34;
    sub_29F8C();
    sub_8180(v35, v36, v37, v38, v39, v40, v41, v42);
    char v45 = v44;
    swift_release();
    uint64_t v46 = sub_6BC8();
    sub_6D14(v46);
    uint64_t v47 = sub_9A58();
    uint64_t result = sub_27F50(v47);
    *(_BYTE *)(v19 + 72) = v45;
  }

  return result;
}

uint64_t sub_28D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSONContext(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  type metadata accessor for JSONObject(0LL);
  __chkstk_darwin();
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  (*(void (**)(_BYTE *, uint64_t))(v10 + 16))(v9, a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  return PluginComponent.init(deserializing:using:)(v9, v7);
}

void *sub_28E2C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  sub_2923C(0LL, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32LL)
    {
      sub_12350(i, (uint64_t)v10);
      if (!swift_dynamicCast( __src,  v10,  &type metadata for Any[8],  &type metadata for PluginComponent,  6LL)) {
        break;
      }
      memcpy(__dst, __src, sizeof(__dst));
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_2923C(0LL, v3[2] + 1LL, 1);
        uint64_t v3 = v11;
      }

      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_2923C((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v3 = v11;
      }

      _OWORD v3[2] = v6 + 1;
      memcpy(&v3[11 * v6 + 4], __dst, 0x58uLL);
      if (!--v2) {
        return v3;
      }
    }

    memset(__src, 0, sizeof(__src));
    swift_release();
    sub_DBD8((uint64_t)__src, (uint64_t *)&unk_7EF40);
    return 0LL;
  }

  return v3;
}

void *sub_28FA8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  int64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    sub_29220(0LL, v1, 0);
    int64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_296F8(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_29220((char *)(v5 > 1), v6 + 1, 1);
        int64_t v2 = v12;
      }

      uint64_t v9 = &type metadata for PluginComponent;
      unint64_t v10 = sub_29118();
      *(void *)&__int128 v8 = swift_allocObject(&unk_73AF0, 104LL, 7LL);
      sub_296F8((uint64_t)v11, v8 + 16);
      v2[2] = v6 + 1;
      sub_6010(&v8, (uint64_t)&v2[5 * v6 + 4]);
      sub_29734((uint64_t)v11);
      v4 += 88LL;
      --v1;
    }

    while (v1);
  }

  return v2;
}

uint64_t sub_290C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_288B8(a1, a2);
}

uint64_t type metadata accessor for ReplaceComponentShelfPageAction(uint64_t a1)
{
  uint64_t result = qword_7E318;
  if (!qword_7E318) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReplaceComponentShelfPageAction);
  }
  return result;
}

uint64_t sub_29110(uint64_t a1)
{
  return sub_28D20(a1, *(void *)(v1 + 16));
}

unint64_t sub_29118()
{
  unint64_t result = qword_7E2A0;
  if (!qword_7E2A0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PluginComponent,  &type metadata for PluginComponent);
    atomic_store(result, (unint64_t *)&qword_7E2A0);
  }

  return result;
}

uint64_t sub_29154()
{
  return swift_deallocObject(v0, 104LL, 7LL);
}

void *sub_29188(void *result)
{
  uint64_t v1 = *(void *)(result[3] - 8LL);
  if ((*(_DWORD *)(v1 + 80) & 0x20000) != 0) {
    return (void *)swift_slowDealloc( *result,  *(void *)(v1 + 64)
  }
                     + ((*(_DWORD *)(v1 + 80) + 16LL) & ~(unint64_t)*(_DWORD *)(v1 + 80)),
                       *(_DWORD *)(v1 + 80) | 7LL);
  return result;
}

uint64_t sub_291BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7E2A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

char *sub_29204(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_29274(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_29220(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_29368(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_2923C(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_29474(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

size_t sub_29258(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_29570(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_29274(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_5F6C(&qword_7DB80);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    sub_18DC4((char *)(a4 + 32), v8, v11 + 32);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v11 + 32, a4 + 32, v8);
  }

  swift_release();
  return v11;
}

char *sub_29368(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_5F6C(&qword_7DB98);
    uint64_t v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    sub_18DE4((char *)(a4 + 32), v8, v11 + 32);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_5F6C((uint64_t *)&unk_7F100);
    swift_arrayInitWithCopy(v11 + 32, a4 + 32, v8);
  }

  swift_release();
  return v11;
}

char *sub_29474(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_5F6C(&qword_7E2B0);
    uint64_t v11 = (char *)swift_allocObject(v10, 88 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 88);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  if ((v5 & 1) != 0)
  {
    sub_18E0C((char *)(a4 + 32), v8, v11 + 32);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v11 + 32, a4 + 32, v8);
  }

  swift_release();
  return v11;
}

size_t sub_29570(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_5F6C(&qword_7DB88);
  uint64_t v11 = *(void *)(type metadata accessor for Shelf(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t result = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }

  if (result - v14 == 0x8000000000000000LL && v12 == -1) {
    goto LABEL_24;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Shelf(0LL) - 8) + 80LL);
  uint64_t v18 = (v17 + 32) & ~v17;
  if ((v5 & 1) != 0)
  {
    sub_18E34(a4 + v18, v8, (unint64_t)v15 + v18);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy((char *)v15 + v18, a4 + v18, v8);
  }

  swift_release();
  return (size_t)v15;
}

uint64_t sub_296C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_282E8(a1, *(void *)(v2 + 16), (uint64_t)sub_29768);
  *a2 = result;
  return result;
}

uint64_t sub_296F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_29734(uint64_t a1)
{
  return a1;
}

double sub_29768@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_28510(a1, *(void *)(v2 + 16), a2);
}

double sub_29780@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_28620(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_29798@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2873C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_297B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 2sub_62AC(v0 + 4) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }

    else
    {
      __int128 v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v10;
      *(void *)(a1 + 32) = a2[4];
    }

    uint64_t v11 = a2[5];
    *(void *)(v4 + 40) = v11;
    *(_BYTE *)(v4 + 48) = *((_BYTE *)a2 + 48);
    uint64_t v12 = a2[8];
    *(void *)(v4 + 56) = a2[7];
    *(void *)(v4 + 6sub_62AC(v0 + 4) = v12;
    uint64_t v13 = *(int *)(a3 + 36);
    uint64_t v14 = v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(_BYTE *)(v4 + 72) = *((_BYTE *)a2 + 72);
    uint64_t v16 = type metadata accessor for ActionMetrics(0LL);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    v17(v14, v15, v16);
    uint64_t v18 = *(int *)(a3 + 40);
    uint64_t v19 = v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 24);
    if (v21)
    {
      uint64_t v22 = *(void *)(v20 + 32);
      *(void *)(v19 + 2sub_62AC(v0 + 4) = v21;
      *(void *)(v19 + 32) = v22;
      (**(void (***)(void))(v21 - 8))();
    }

    else
    {
      __int128 v23 = *(_OWORD *)(v20 + 16);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = v23;
      *(void *)(v19 + 32) = *(void *)(v20 + 32);
    }
  }

  return v4;
}

void *sub_298F8(void *a1, uint64_t a2)
{
  if (a1[3]) {
    sub_62AC(a1);
  }
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[8]);
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  uint64_t result = (void *)((char *)a1 + *(int *)(a2 + 40));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_29984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 2sub_62AC(v0 + 4) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }

  else
  {
    __int128 v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }

  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 6sub_62AC(v0 + 4) = v10;
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  uint64_t v14 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  v15(v12, v13, v14);
  uint64_t v16 = *(int *)(a3 + 40);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 24);
  if (v19)
  {
    uint64_t v20 = *(void *)(v18 + 32);
    *(void *)(v17 + 2sub_62AC(v0 + 4) = v19;
    *(void *)(v17 + 32) = v20;
    (**(void (***)(void))(v19 - 8))();
  }

  else
  {
    __int128 v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + swift_weakDestroy(v0 + 16) = v21;
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
  }

  return a1;
}

uint64_t sub_29AA0(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_6520((void *)a1, a2);
      goto LABEL_8;
    }

    sub_62AC((void *)a1);
  }

  else if (v6)
  {
    *(void *)(a1 + 2sub_62AC(v0 + 4) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }

  __int128 v7 = *a2;
  __int128 v8 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v8;
LABEL_8:
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *((void *)a2 + 5);
  *(void *)(a1 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  uint64_t v11 = *((void *)a2 + 8);
  uint64_t v12 = *(void *)(a1 + 64);
  *(void *)(a1 + 6sub_62AC(v0 + 4) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24LL))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 40);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (__int128 *)((char *)a2 + v17);
  uint64_t v20 = *((void *)v19 + 3);
  if (!*(void *)(a1 + v17 + 24))
  {
    if (v20)
    {
      *(void *)(v18 + 2sub_62AC(v0 + 4) = v20;
      *(void *)(v18 + 32) = *((void *)v19 + 4);
      (**(void (***)(uint64_t, __int128 *))(v20 - 8))(v18, v19);
      return a1;
    }

uint64_t sub_29C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  __int128 v8 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 56) = v8;
  uint64_t v12 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  __int128 v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_29CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24)) {
    sub_62AC((void *)a1);
  }
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 6sub_62AC(v0 + 4) = v9;
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40LL))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 40);
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_62AC((void *)(a1 + v15));
  }
  __int128 v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_29D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_29DA0);
}

uint64_t sub_29DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for ActionMetrics(0LL);
    return sub_6028(a1 + *(int *)(a3 + 36), a2, v8);
  }

uint64_t sub_29E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_29E20);
}

uint64_t sub_29E20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 6sub_62AC(v0 + 4) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
    return sub_5FEC(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }

  return result;
}

uint64_t sub_29E8C(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = &unk_5E658;
  id v4[2] = &unk_5E670;
  void v4[3] = &unk_5E688;
  void v4[4] = &unk_5E6A0;
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[5] = *(void *)(result - 8) + 64LL;
    v4[6] = "(";
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

unint64_t sub_29F28(uint64_t a1)
{
  unint64_t result = sub_29F4C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_29F4C()
{
  unint64_t result = qword_7DB30;
  if (!qword_7DB30)
  {
    uint64_t v1 = type metadata accessor for ReplaceComponentShelfPageAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5E5C0, v1);
    atomic_store(result, (unint64_t *)&qword_7DB30);
  }

  return result;
}

  ;
}

uint64_t sub_29F98()
{
  return 0x6E656E6F706D6F63LL;
}

uint64_t sub_29FAC()
{
  return swift_errorRelease(v0);
}

uint64_t sub_29FB4(uint64_t a1)
{
  v22[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    swift_bridgeObjectRetain(v3);
    sub_4A6A0();
  }

  sub_2A09C(a1, v22);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  uint64_t v5 = v22[0];
  if (Strong)
  {
    uint64_t v6 = Strong;
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v8 = *(void *)(a1 + 64);
    uint64_t v9 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v10 = *(unsigned __int8 *)(a1 + 72);
    uint64_t v11 = swift_bridgeObjectRetain(v22[0]);
    sub_4E37C( v11,  v7,  v8,  v10,  v9,  v12,  v13,  v14,  v17,  *((uint64_t *)&v17 + 1),  v18,  *((uint64_t *)&v18 + 1),  v19,  v20,  v21,  v22[0],  v22[1],  v22[2],  v22[3],  v22[4]);
    swift_bridgeObjectRelease(v5);
    swift_unknownObjectRelease(v6);
  }

  sub_5F6C(&qword_7D048);
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  uint64_t v15 = Promise.__allocating_init(value:)(&v17);
  swift_bridgeObjectRelease(v5);
  return v15;
}

uint64_t sub_2A09C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v8;
  if (!v8) {
    return v4 == 0;
  }
  sub_6010(&v7, (uint64_t)v6);
  sub_2A120((uint64_t)v6, a2);
  uint64_t result = sub_62AC(v6);
  if (!v2) {
    return v4 == 0;
  }
  return result;
}

uint64_t sub_2A120(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(*a2 + 16);
  sub_30398(v4);
  uint64_t v5 = *a2;
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = v4 + 1;
  return sub_16D24(a1, v5 + 40 * v4 + 32);
}

uint64_t type metadata accessor for ReplaceComponentShelfPageActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin45ReplaceComponentShelfPageActionImplementation);
}

uint64_t sub_2A1A8(uint64_t a1)
{
  return sub_29FB4(a1);
}

uint64_t sub_2A1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7E2A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_2A210()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    uint64_t v2 = Strong;
    sub_4F62C();
    swift_unknownObjectRelease(v2);
  }

  sub_5F6C(&qword_7D048);
  memset(v4, 0, sizeof(v4));
  return Promise.__allocating_init(value:)(v4);
}

uint64_t type metadata accessor for ReplaceNavigationBarButtonShelfPageActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin55ReplaceNavigationBarButtonShelfPageActionImplementation);
}

unint64_t sub_2A2A0()
{
  unint64_t result = qword_7DB40;
  if (!qword_7DB40)
  {
    uint64_t v1 = type metadata accessor for ReplaceNavigationBarItemShelfPageAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5E86C, v1);
    atomic_store(result, (unint64_t *)&qword_7DB40);
  }

  return result;
}

uint64_t sub_2A2E0()
{
  return sub_2A210();
}

BOOL sub_2A300(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71910, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

BOOL sub_2A350@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_2A300(*a1);
  *a2 = result;
  return result;
}

void sub_2A384(void *a1@<X8>)
{
  *a1 = 0x7972616D697270LL;
  a1[1] = 0xE700000000000000LL;
}

uint64_t sub_2A3A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ReplaceNavigationBarItemShelfPageAction(0LL);
  uint64_t v10 = a2 + *(int *)(v9 + 32);
  uint64_t v11 = type metadata accessor for ActionFactory(0LL);
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v49 = v10;
  *(void *)(v10 + 32) = 0LL;
  uint64_t v12 = swift_allocObject(v11, 16LL, 7LL);
  uint64_t v47 = a1;
  sub_2B698();
  sub_4E84(v13, v14, v15, v16, v17, v18, v19, v20);
  if (v2)
  {
    uint64_t v21 = sub_6BC8();
    sub_6D14(v21);
    swift_release();
    uint64_t v22 = sub_9A58();
    sub_25614(v22);
    return sub_8598(v49);
  }

  else
  {
    uint64_t v46 = v12;
    uint64_t v23 = a2 + *(int *)(v9 + 28);
    v45[1] = v6;
    uint64_t v24 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32);
    v45[0] = v23;
    v45[2] = v5;
    uint64_t v25 = v24(v23, v8, v5);
    __chkstk_darwin(v25);
    sub_2B6A4();
    *(void *)(v26 - swift_weakDestroy(v0 + 16) = a1;
    sub_2B698();
    sub_5810();
    uint64_t v27 = sub_6060(&v48, (void *)a2);
    __chkstk_darwin(v27);
    sub_2B6A4();
    *(void *)(v28 - swift_weakDestroy(v0 + 16) = a1;
    sub_2B698();
    sub_52C0();
    *(void *)(a2 + 14sub_62AC(v0 + 4) = v29;
    *(_BYTE *)(a2 + 152) = v30 & 1;
    sub_2B698();
    sub_8270(v31, v32, v33, v34, v35, v36, v37, v38);
    __chkstk_darwin(v40);
    sub_2B6A4();
    *(void *)(v41 - swift_weakDestroy(v0 + 16) = v46;
    *(void *)(v41 - 8) = a1;
    sub_2B698();
    sub_4EA8();
    uint64_t v42 = v49;
    uint64_t v43 = sub_6BC8();
    sub_6D14(v43);
    swift_release();
    uint64_t v44 = sub_9A58();
    sub_D79C(v44);
    return sub_85E0((uint64_t)&v48, v42);
  }

uint64_t sub_2A720@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2A3A0(a1, a2);
}

ValueMetadata *sub_2A734()
{
  uint64_t v1 = &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement;
  uint64_t v2 = sub_23DB8();
  if (!v0)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    if (v2 == 1952867692 && v3 == 0xE400000000000000LL)
    {
      unint64_t v7 = 0xE400000000000000LL;
      goto LABEL_9;
    }

    if ((sub_2B668(1952867692LL, 0xE400000000000000LL) & 1) != 0)
    {
      unint64_t v7 = v5;
LABEL_9:
      swift_bridgeObjectRelease(v7);
      uint64_t v1 = 0LL;
      goto LABEL_10;
    }

    if (v4 == 0x7468676972LL && v5 == 0xE500000000000000LL)
    {
      unint64_t v12 = 0xE500000000000000LL;
      goto LABEL_18;
    }

    if ((sub_2B668(0x7468676972LL, 0xE500000000000000LL) & 1) != 0)
    {
      unint64_t v12 = v5;
LABEL_18:
      swift_bridgeObjectRelease(v12);
      uint64_t v1 = (ValueMetadata *)(&dword_0 + 1);
      goto LABEL_10;
    }

    if (v4 == 0x726568746FLL && v5 == 0xE500000000000000LL)
    {
      unint64_t v14 = 0xE500000000000000LL;
    }

    else
    {
      if ((sub_2B668(0x726568746FLL, 0xE500000000000000LL) & 1) == 0)
      {
        uint64_t v15 = type metadata accessor for JSONError(0LL);
        uint64_t v16 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
        swift_allocError(v15, v16, 0LL, 0LL);
        *uint64_t v17 = v4;
        v17[1] = v5;
        v17[2] = (uint64_t)&type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement;
        uint64_t v18 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(*(void *)(v15 - 8) + 104LL))( v17,  enum case for JSONError.unknownCase(_:),  v15);
        swift_willThrow(v18);
        goto LABEL_10;
      }

      unint64_t v14 = v5;
    }

    swift_bridgeObjectRelease(v14);
    uint64_t v1 = (ValueMetadata *)sub_23F28();
  }

LABEL_10:
  uint64_t v8 = sub_9A58();
  sub_D79C(v8);
  uint64_t v9 = sub_6BC8();
  sub_6D14(v9);
  return v1;
}

  v196 = 0LL;
  uint64_t v67 = (void *)&unk_85000;
  v174 = v27;
  v176 = v33;
  if (!v31) {
    goto LABEL_41;
  }
  uint64_t v39 = *(char **)(v31 + 16);
  if (!v39) {
    goto LABEL_41;
  }
  v180 = (uint64_t)v60;
  uint64_t v68 = (void *)(v31 + 32);
  sub_503EC();
  uint64_t v69 = v185;
  id v70 = v187;
  do
  {
    sub_4F140(v68, v24, v69, v70, v27, &v196);
    v68 += 5;
    --v39;
  }

  while (v39);
  sub_23920();
  uint64_t v71 = v176;
  uint64_t v67 = &unk_85000;
  id v72 = v180;
  if ((v184 & 1) == 0 || v196 < 1)
  {
LABEL_41:
    uint64_t v90 = (uint64_t *)(v24 + v67[174]);
    sub_50390((uint64_t)v90, (uint64_t)&v195);
    sub_50608((uint64_t)v90, &qword_7CB10, (uint64_t)&v193);
    uint64_t v91 = sub_5044C((uint64_t)v39);
    if ((_DWORD)v91)
    {
      sub_50510(v91, &qword_7CB10);
      sub_50590();
      uint64_t v92 = sub_504A8((uint64_t)v90, 1LL);
      __int128 v93 = v185;
    }

    else
    {
      uint64_t v94 = v169;
      sub_501A8((uint64_t)v39, v169, type metadata accessor for ShelfPage);
      sub_50510(v95, &qword_7CB10);
      __int128 v93 = v185;
      if ((_BYTE)v27)
      {
        __int128 v96 = v94;
      }

      else
      {
        __int128 v96 = v94 + 16;
      }

      uint64_t v97 = *(void *)v96;
      uint64_t v98 = *(void *)(*(void *)v96 + 16LL);
      if (v98)
      {
        sub_5042C();
        objc_super v100 = v97 + v99;
        Swift::String v102 = *(void *)(v101 + 72);
        v186 = v97;
        sub_504B4();
        uint64_t v90 = v166;
        while (1)
        {
          sub_501A8(v100, (uint64_t)v90, type metadata accessor for Shelf);
          uint64_t v103 = v90[1];
          uint64_t v104 = *v90 == v93 && v103 == v187;
          if (v104 || (sub_23998(*v90, v103, v93, v187) & 1) != 0) {
            break;
          }
          sub_14C60((uint64_t)v90, type metadata accessor for Shelf);
          v100 += v102;
          if (!--v98)
          {
            uint64_t v94 = v169;
            sub_50590();
            goto LABEL_57;
          }
        }

        sub_50590();
        sub_50174(v106, (uint64_t)v90, v107);
        v105 = 0LL;
        uint64_t v94 = v169;
LABEL_57:
        uint64_t v97 = v186;
      }

      else
      {
        sub_504B4();
        sub_50590();
      }

      sub_5FEC((uint64_t)v90, v105, 1LL, v176);
      swift_bridgeObjectRelease(v97);
      sub_14C60(v94, type metadata accessor for ShelfPage);
      uint64_t v92 = sub_50458((uint64_t)v90);
      if ((_DWORD)v92 != 1)
      {
        v123 = (uint64_t)v165;
        sub_50174((uint64_t)v90, (uint64_t)v165, type metadata accessor for Shelf);
        sub_3C674(v123);
        sub_14C60(v123, type metadata accessor for Shelf);
LABEL_64:
        sub_9ABC();
        return;
      }
    }

    sub_50580(v92, &qword_7E9A0);
    uint64_t v108 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v109 = *(void *)(sub_50424() - 8);
    __int128 v110 = swift_allocObject( v108,  ((*(unsigned __int8 *)(v109 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))
           + 6LL * *(void *)(v109 + 72),
             *(unsigned __int8 *)(v109 + 80) | 7LL);
    *(_OWORD *)(v110 + swift_weakDestroy(v0 + 16) = xmmword_5D750;
    uint64_t v111 = type metadata accessor for ShelfPagePresenter(0LL);
    uint64_t v112 = sub_504D0(v111);
    __int128 v113 = (id)AMSLogKey(v112);
    if (v113)
    {
      uint64_t v115 = v113;
      v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113, v114);
      v118 = v117;

      sub_C3B0();
      sub_7C2C();
      sub_5034C();
      v119 = sub_C3CC();
      sub_5037C(v119);
      sub_14C38((uint64_t)&v189, &qword_7DDE0);
      sub_C378();
      v191 = &type metadata for String;
      v189 = v116;
      v190 = v118;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v189);
      __int128 v93 = v185;
      sub_14C38((uint64_t)&v189, &qword_7DDE0);
      v120 = 93LL;
    }

    else
    {
      sub_C390();
      sub_7C2C();
      sub_5034C();
      v122 = sub_C3CC();
      sub_5037C(v122);
      sub_14C38((uint64_t)&v189, &qword_7DDE0);
      v120 = 58LL;
    }

    v121 = v174;
    sub_505D4(v120);
    sub_50558();
    sub_238FC();
    sub_62AC(v192);
    sub_505C0(0xD000000000000040LL);
    LogMessage.init(stringLiteral:)(0x3A666C656873LL, 0xE600000000000000LL);
    v194 = &type metadata for String;
    v192[0] = v93;
    v192[1] = v187;
    swift_bridgeObjectRetain(v187);
    static LogMessage.safe(_:)(v192);
    sub_503DC((uint64_t)v192);
    LogMessage.init(stringLiteral:)(0x6E656D6563616C70LL, 0xEA00000000003A74LL);
    v194 = &unk_73F10;
    LOBYTE(v192[0]) = v121;
    static LogMessage.safe(_:)(v192);
    sub_503DC((uint64_t)v192);
    sub_2679C(v110);
    sub_23A00();
    goto LABEL_64;
  }

  unint64_t v73 = v24 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  sub_50390(v24 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage, (uint64_t)&v188);
  sub_50608(v73, &qword_7CB10, (uint64_t)&a15);
  uint64_t v74 = sub_5044C(0LL);
  if ((_DWORD)v74)
  {
    sub_50510(v74, &qword_7CB10);
    sub_505F4();
    sub_504A8(0LL, 1LL);
  }

  else
  {
    sub_501A8(0LL, v183, type metadata accessor for ShelfPage);
    sub_50510(v75, &qword_7CB10);
    if ((_BYTE)v27)
    {
      uint64_t v76 = v183;
    }

    else
    {
      uint64_t v76 = v183 + 16;
    }

    uint64_t v77 = *(void *)v76;
    uint64_t v39 = *(char **)(*(void *)v76 + 16LL);
    if (v39)
    {
      sub_5042C();
      uint64_t v79 = v77 + v78;
      v184 = *(void *)(v80 + 72);
      v182 = v77;
      sub_503EC();
      int64_t v81 = v181;
      while (1)
      {
        sub_501A8(v79, (uint64_t)v81, type metadata accessor for Shelf);
        NSString v82 = v81[1];
        uint64_t v83 = *v81 == v185 && v82 == v187;
        if (v83 || (sub_23998(*v81, v82, v185, v187) & 1) != 0) {
          break;
        }
        sub_14C60((uint64_t)v81, type metadata accessor for Shelf);
        v79 += v184;
        if (!--v39)
        {
          sub_505F4();
          goto LABEL_32;
        }
      }

      sub_505F4();
      sub_50174(v85, (uint64_t)v39, v86);
      id v84 = 0LL;
LABEL_32:
      id v72 = v180;
    }

    else
    {
      sub_503EC();
      sub_505F4();
    }

    sub_504A8((uint64_t)v39, v84);
    sub_23920();
    sub_14C60(v183, type metadata accessor for ShelfPage);
  }

  sub_502FC((uint64_t)v39, v72, &qword_7E9A0);
  uint64_t v87 = sub_6028(v72, 1LL, v71);
  if ((_DWORD)v87 == 1)
  {
    sub_50564(v87, &qword_7E9A0);
    id v88 = 0LL;
  }

  else
  {
    id v89 = *(void *)(v72 + *(int *)(v71 + 24));
    sub_503EC();
    sub_14C60(v72, type metadata accessor for Shelf);
    id v88 = *(char **)(v89 + 16);
    sub_23920();
  }

  uint64_t v39 = (char *)v196;
  if ((uint64_t)v88 < v196)
  {
LABEL_89:
    __break(1u);
  }

  else
  {
    if ((char *)v196 == v88)
    {
LABEL_40:
      sub_14C38(v168, &qword_7E9A0);
      uint64_t v67 = &unk_85000;
      goto LABEL_41;
    }

    v184 = sub_238FC();
    if ((uint64_t)v39 < (uint64_t)v88)
    {
      v124 = *(void *)(sub_50424() - 8);
      v125 = *(void *)(v124 + 72);
      v126 = *(unsigned __int8 *)(v124 + 80);
      v182 = (v126 + 32) & ~v126;
      v181 = (uint64_t *)(v182 + 3 * v125);
      v180 = v126 | 7;
      v183 = v125;
      v179 = 2 * v125;
      v178 = xmmword_5CD70;
      v177 = 0x8000000000065300LL;
      v175 = v88;
      v164 = v21;
      while (1)
      {
        v127 = sub_5F6C((uint64_t *)&unk_7D650);
        v128 = swift_allocObject(v127, v181, v180);
        *(_OWORD *)(v128 + swift_weakDestroy(v0 + 16) = v178;
        v129 = type metadata accessor for ShelfPagePresenter(0LL);
        v130 = sub_504D0(v129);
        v131 = (id)AMSLogKey(v130);
        if (v131)
        {
          v133 = v131;
          v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v131, v132);
          v136 = v135;

          sub_C3B0();
          sub_7C2C();
          sub_5034C();
          v137 = sub_C3CC();
          sub_5037C(v137);
          sub_503DC((uint64_t)&v189);
          sub_C378();
          v191 = &type metadata for String;
          v189 = v134;
          v190 = v136;
          id v88 = v175;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v189);
          sub_503DC((uint64_t)&v189);
          v138 = 93LL;
        }

        else
        {
          sub_C390();
          sub_7C2C();
          sub_5034C();
          v139 = sub_C3CC();
          sub_5037C(v139);
          sub_503DC((uint64_t)&v189);
          v138 = 58LL;
        }

        sub_505D4(v138);
        sub_50558();
        sub_62AC(v192);
        LogMessage.init(stringLiteral:)(0xD00000000000001DLL, v177);
        v194 = &type metadata for Int;
        v192[0] = v39;
        static LogMessage.safe(_:)(v192);
        sub_503DC((uint64_t)v192);
        sub_2679C(v128);
        swift_bridgeObjectRelease(v128);
        v140 = sub_4AFAC((uint64_t)v192);
        v142 = (void *)v141;
        if (!sub_5044C(v141))
        {
          v143 = v172;
          sub_3769C(v185, v187, v27, v172);
          v144 = v176;
          if (sub_6028(v143, 1LL, v176) == 1)
          {
            sub_14C38(v143, &qword_7E9A0);
          }

          else
          {
            v145 = v143;
            v146 = v27;
            v147 = v173;
            sub_50174(v145, v173, type metadata accessor for Shelf);
            v148 = *(int *)(v144 + 24);
            v149 = *(void *)(v147 + v148);
            if (*(void *)(v149 + 16))
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(v147 + v148));
              *(void *)(v147 + v148) = v149;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_4FCE0();
                v149 = v163;
                *(void *)(v147 + v148) = v163;
              }

              v151 = *(void *)(v149 + 16);
              if (!v151)
              {
                __break(1u);
                goto LABEL_89;
              }

              v152 = v151 - 1;
              v153 = sub_62AC((void *)(v149 + 40 * (v151 - 1) + 32));
              *(void *)(v149 + swift_weakDestroy(v0 + 16) = v152;
              v154 = v173;
              *(void *)(v173 + v148) = v149;
              if ((_BYTE)v174)
              {
                if (v174 == 1)
                {
                  __chkstk_darwin(v153);
                  sub_50470();
                  v157 = sub_4A920((void (*)(uint64_t))sub_37A0C, v155, v156);
                  swift_bridgeObjectRelease(*v142);
                  *v142 = v157;
                }

                else
                {
                  __chkstk_darwin(v153);
                  sub_50470();
                  v162 = sub_4A920((void (*)(uint64_t))sub_379F0, v160, v161);
                  swift_bridgeObjectRelease(v142[1]);
                  v142[1] = v162;
                }
              }

              else
              {
                v148 = v154;
                __chkstk_darwin(v153);
                *(&v164 - 2) = v148;
                v159 = sub_4A920((void (*)(uint64_t))sub_37A0C, (uint64_t)(&v164 - 4), v158);
                swift_bridgeObjectRelease(v142[2]);
                v142[2] = v159;
              }

              sub_14C60(v148, type metadata accessor for Shelf);
              uint64_t v27 = v174;
            }

            else
            {
              sub_14C60(v147, type metadata accessor for Shelf);
              uint64_t v27 = v146;
            }

            id v88 = v175;
          }
        }

        ((void (*)(void *, void))v140)(v192, 0LL);
        if (v88 == ++v39) {
          goto LABEL_40;
        }
      }
    }
  }

  __break(1u);
}

  uint64_t v8 = sub_9A58();
  sub_D79C(v8);
  uint64_t v9 = sub_6BC8();
  sub_6D14(v9);
  return v1;
}

ValueMetadata *sub_2A944@<X0>(uint64_t a1@<X8>)
{
  BOOL result = sub_2A734();
  if (!v1)
  {
    *(void *)a1 = result;
    *(_BYTE *)(a1 + 8) = v4 & 1;
  }

  return result;
}

uint64_t type metadata accessor for ReplaceNavigationBarItemShelfPageAction(uint64_t a1)
{
  uint64_t result = qword_7E580;
  if (!qword_7E580) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReplaceNavigationBarItemShelfPageAction);
  }
  return result;
}

void sub_2A9AC()
{
}

uint64_t sub_2A9B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_87E4();
  *(void *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
  return result;
}

uint64_t sub_2A9E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2A9B4(a1);
}

uint64_t sub_2A9EC(uint64_t a1)
{
  return a1;
}

uint64_t storeEnumTagSinglePayload for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind( uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_2AA60 + 4 * byte_5E800[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_2AA80 + 4 * byte_5E805[v4]))();
  }
}

_BYTE *sub_2AA60(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_2AA80(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2AA88(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2AA90(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_2AA98(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_2AAA0(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind()
{
  return &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind;
}

uint64_t sub_2AABC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v10);
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *((_BYTE *)a2 + 16);
    uint64_t v8 = a2[4];
    swift_bridgeObjectRetain(v7);
    if (v8 == 1)
    {
      __int128 v9 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 40) = v9;
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    }

    else
    {
      *(void *)(a1 + 2sub_62AC(v0 + 4) = a2[3];
      *(void *)(a1 + 32) = v8;
      uint64_t v11 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v11;
      uint64_t v12 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 6sub_62AC(v0 + 4) = v12;
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRetain(v12);
    }

    uint64_t v13 = a2[9];
    *(void *)(a1 + 72) = v13;
    uint64_t v14 = a2[13];
    swift_retain(v13);
    if (v14)
    {
      uint64_t v15 = a2[14];
      *(void *)(a1 + 10sub_62AC(v0 + 4) = v14;
      *(void *)(a1 + 112) = v15;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8))(a1 + 80, (uint64_t)(a2 + 10), v14);
    }

    else
    {
      __int128 v16 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v16;
      *(void *)(a1 + 112) = a2[14];
    }

    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    uint64_t v17 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v17;
    *(void *)(a1 + 14sub_62AC(v0 + 4) = a2[18];
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    uint64_t v21 = type metadata accessor for ActionMetrics(0LL);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16LL);
    swift_bridgeObjectRetain(v17);
    v22(v19, v20, v21);
    uint64_t v23 = *(int *)(a3 + 32);
    uint64_t v24 = a1 + v23;
    uint64_t v25 = (uint64_t)a2 + v23;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 24);
    if (v26)
    {
      uint64_t v27 = *(void *)(v25 + 32);
      *(void *)(v24 + 2sub_62AC(v0 + 4) = v26;
      *(void *)(v24 + 32) = v27;
      (**(void (***)(void))(v26 - 8))();
    }

    else
    {
      __int128 v28 = *(_OWORD *)(v25 + 16);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *(_OWORD *)(v24 + swift_weakDestroy(v0 + 16) = v28;
      *(void *)(v24 + 32) = *(void *)(v25 + 32);
    }
  }

  return a1;
}

void *sub_2AC78(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[4];
  if (v4 != 1)
  {
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(a1[6]);
    swift_bridgeObjectRelease(a1[8]);
  }

  swift_release();
  if (a1[13]) {
    sub_62AC(a1 + 10);
  }
  swift_bridgeObjectRelease(a1[17]);
  int v5 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t result = (void *)((char *)a1 + *(int *)(a2 + 32));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_2AD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain(v6);
  if (v7 == 1)
  {
    __int128 v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }

  else
  {
    *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 6sub_62AC(v0 + 4) = v10;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
  }

  uint64_t v11 = *(void *)(a2 + 72);
  *(void *)(a1 + 72) = v11;
  uint64_t v12 = *(void *)(a2 + 104);
  swift_retain(v11);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 112);
    *(void *)(a1 + 10sub_62AC(v0 + 4) = v12;
    *(void *)(a1 + 112) = v13;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8))(a1 + 80, a2 + 80, v12);
  }

  else
  {
    __int128 v14 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v14;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }

  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  uint64_t v15 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  *(void *)(a1 + 14sub_62AC(v0 + 4) = *(void *)(a2 + 144);
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  uint64_t v19 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16LL);
  swift_bridgeObjectRetain(v15);
  v20(v17, v18, v19);
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(a2 + v21 + 24);
  if (v24)
  {
    uint64_t v25 = *(void *)(v23 + 32);
    *(void *)(v22 + 2sub_62AC(v0 + 4) = v24;
    *(void *)(v22 + 32) = v25;
    (**(void (***)(void))(v24 - 8))();
  }

  else
  {
    __int128 v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = v26;
    *(void *)(v22 + 32) = *(void *)(v23 + 32);
  }

  return a1;
}

uint64_t sub_2AEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  __int128 v8 = (__int128 *)(a1 + 24);
  uint64_t v9 = (__int128 *)(a2 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a2 + 32);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      __int128 v12 = *v9;
      __int128 v13 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v13;
      *__int128 v8 = v12;
    }

    else
    {
      *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
      uint64_t v16 = *(void *)(a2 + 32);
      *(void *)(a1 + 32) = v16;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v17 = *(void *)(a2 + 48);
      *(void *)(a1 + 48) = v17;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v18 = *(void *)(a2 + 64);
      *(void *)(a1 + 6sub_62AC(v0 + 4) = v18;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
    }
  }

  else if (v11 == 1)
  {
    sub_2B168((void *)(a1 + 24));
    __int128 v15 = *(_OWORD *)(a2 + 40);
    __int128 v14 = *(_OWORD *)(a2 + 56);
    *__int128 v8 = *v9;
    *(_OWORD *)(a1 + 40) = v15;
    *(_OWORD *)(a1 + 56) = v14;
  }

  else
  {
    *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
    uint64_t v19 = *(void *)(a2 + 32);
    *(void *)(a1 + 32) = v19;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRelease(v10);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v20 = *(void *)(a2 + 48);
    uint64_t v21 = *(void *)(a1 + 48);
    *(void *)(a1 + 48) = v20;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRelease(v21);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v22 = *(void *)(a2 + 64);
    uint64_t v23 = *(void *)(a1 + 64);
    *(void *)(a1 + 6sub_62AC(v0 + 4) = v22;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRelease(v23);
  }

  uint64_t v24 = *(void *)(a2 + 72);
  *(void *)(a1 + 72) = v24;
  swift_retain(v24);
  swift_release();
  uint64_t v25 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104))
  {
    if (v25)
    {
      sub_6520((void *)(a1 + 80), (void *)(a2 + 80));
      goto LABEL_15;
    }

    sub_62AC((void *)(a1 + 80));
  }

  else if (v25)
  {
    *(void *)(a1 + 10sub_62AC(v0 + 4) = v25;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 80, a2 + 80);
    goto LABEL_15;
  }

  __int128 v26 = *(_OWORD *)(a2 + 80);
  __int128 v27 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 80) = v26;
  *(_OWORD *)(a1 + 96) = v27;
LABEL_15:
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v28 = *(void *)(a2 + 136);
  uint64_t v29 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v28;
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRelease(v29);
  uint64_t v30 = *(void *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(void *)(a1 + 14sub_62AC(v0 + 4) = v30;
  uint64_t v31 = *(int *)(a3 + 28);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24LL))(v32, v33, v34);
  uint64_t v35 = *(int *)(a3 + 32);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (__int128 *)(a2 + v35);
  uint64_t v38 = *((void *)v37 + 3);
  if (!*(void *)(a1 + v35 + 24))
  {
    if (v38)
    {
      *(void *)(v36 + 2sub_62AC(v0 + 4) = v38;
      *(void *)(v36 + 32) = *((void *)v37 + 4);
      (**(void (***)(uint64_t, __int128 *))(v38 - 8))(v36, v37);
      return a1;
    }

LABEL_21:
    __int128 v39 = *v37;
    __int128 v40 = v37[1];
    *(void *)(v36 + 32) = *((void *)v37 + 4);
    *(_OWORD *)uint64_t v36 = v39;
    *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = v40;
    return a1;
  }

  if (!v38)
  {
    sub_62AC((void *)v36);
    goto LABEL_21;
  }

  sub_6520((void *)v36, v37);
  return a1;
}

    sub_6520((void *)(v10 + v13), a1);
    a3 = v31;
    goto LABEL_22;
  }

  swift_bridgeObjectRetain(*(uint64_t *)((char *)v4 + v9));
  if ((a2 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
  sub_16D24((uint64_t)a1, (uint64_t)v34);
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
  {
    sub_309E4();
    uint64_t v10 = v28;
  }

  __int128 v15 = *(void *)(v10 + 16);
  if (v15 >= *(void *)(v10 + 24) >> 1)
  {
    sub_309E4();
    uint64_t v10 = v29;
  }

  *(void *)(v10 + swift_weakDestroy(v0 + 16) = v15 + 1;
  sub_6010(v34, v10 + 40 * v15 + 32);
LABEL_22:
  uint64_t v17 = *v4;
  uint64_t v18 = v4[1];
  sub_30350((uint64_t)v4 + v8[5], (uint64_t)a3 + v8[5]);
  uint64_t v19 = (char *)v4 + v8[7];
  uint64_t v20 = *(_WORD *)v19;
  uint64_t v21 = v19[2];
  uint64_t v22 = *((void *)v19 + 1);
  uint64_t v23 = *((void *)v19 + 4);
  uint64_t v24 = v19[40];
  *a3 = v17;
  a3[1] = v18;
  *(void *)((char *)a3 + v8[6]) = v10;
  uint64_t v25 = (char *)a3 + v8[7];
  *(_WORD *)uint64_t v25 = v20;
  v25[2] = v21;
  *((void *)v25 + 1) = v22;
  __int128 v26 = *((_OWORD *)v19 + 1);
  *((_OWORD *)v25 + 1) = v26;
  *((void *)v25 + sub_62AC(v0 + 4) = v23;
  v25[40] = v24;
  __int128 v27 = v26;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v27);
}

    sub_444EC();
    goto LABEL_22;
  }

  sub_445E8();
  sub_60C8(v1, &qword_7EEE8);
LABEL_35:
  sub_9ABC();
}

  swift_release();
  return sub_23918();
}

void *sub_2B168(void *a1)
{
  return a1;
}

uint64_t sub_2B19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 14sub_62AC(v0 + 4) = *(void *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  __int128 v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  return a1;
}

uint64_t sub_2B234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v8 = *(void *)(a1 + 32);
  if (v8 == 1) {
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a2 + 32);
  if (v9 == 1)
  {
    sub_2B168((void *)(a1 + 24));
LABEL_4:
    __int128 v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v10;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }

  *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;
  swift_bridgeObjectRelease(v8);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 6sub_62AC(v0 + 4) = v13;
  swift_bridgeObjectRelease(v14);
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  if (*(void *)(a1 + 104)) {
    sub_62AC((void *)(a1 + 80));
  }
  __int128 v15 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v15;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  uint64_t v16 = *(void *)(a2 + 136);
  uint64_t v17 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v16;
  swift_bridgeObjectRelease(v17);
  *(void *)(a1 + 14sub_62AC(v0 + 4) = *(void *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40LL))(v19, v20, v21);
  uint64_t v22 = *(int *)(a3 + 32);
  uint64_t v23 = a1 + v22;
  if (*(void *)(a1 + v22 + 24)) {
    sub_62AC((void *)(a1 + v22));
  }
  __int128 v24 = *(_OWORD *)(a2 + v22 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)(a2 + v22);
  *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = v24;
  *(void *)(v23 + 32) = *(void *)(a2 + v22 + 32);
  return a1;
}

uint64_t sub_2B3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2B3B0);
}

uint64_t sub_2B3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
    return sub_6028(a1 + *(int *)(a3 + 28), a2, v9);
  }

uint64_t sub_2B430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2B43C);
}

uint64_t sub_2B43C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }

  else
  {
    uint64_t v7 = type metadata accessor for ActionMetrics(0LL);
    return sub_5FEC(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }

  return result;
}

uint64_t sub_2B4A8(uint64_t a1)
{
  v4[0] = &unk_5E8E8;
  v4[1] = &unk_5E900;
  _OWORD v4[2] = (char *)&value witness table for () + 64;
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    void v4[4] = &unk_5E918;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement( uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement( uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement( uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0LL;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_2B5A0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_2B5BC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }

  else
  {
    char v2 = 0;
  }

  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement()
{
  return &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarItemPlacement;
}

uint64_t sub_2B5EC(uint64_t a1)
{
  uint64_t result = sub_98F0( (unint64_t *)&qword_7DB40,  type metadata accessor for ReplaceNavigationBarItemShelfPageAction,  (uint64_t)&unk_5E86C);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2B62C()
{
  unint64_t result = qword_7E5C8;
  if (!qword_7E5C8)
  {
    unint64_t result = swift_getWitnessTable( &unk_5E9A8,  &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind);
    atomic_store(result, (unint64_t *)&qword_7E5C8);
  }

  return result;
}

uint64_t sub_2B668(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

  ;
}

  ;
}

  ;
}

uint64_t sub_2B6B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ActionMetrics(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = type metadata accessor for ActionFactory(0LL);
  uint64_t v10 = swift_allocObject(v9, 16LL, 7LL);
  uint64_t v11 = type metadata accessor for ResolutionAction(0LL);
  uint64_t v25 = a1;
  sub_4E84(0x654D6E6F69746361LL, 0xED00007363697274LL, v11, (uint64_t)sub_5FE4, (uint64_t)v24, v12, v13, v14);
  if (v2)
  {
    uint64_t v15 = sub_6BC8();
    sub_6D14(v15);
    sub_D7D4();
    uint64_t v16 = sub_9A58();
    return sub_ACD0(v16);
  }

  else
  {
    uint64_t v18 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(a2 + *(int *)(v11 + 20), v8, v5);
    __chkstk_darwin(v18);
    *(void *)&v24[-16] = v10;
    *(void *)&v24[-8] = a1;
    sub_4EA8();
    uint64_t v19 = sub_A60C((uint64_t)&v26, a2 + *(int *)(v11 + 24));
    __chkstk_darwin(v19);
    *(void *)&v24[-16] = a1;
    unint64_t v20 = sub_19ECC();
    uint64_t v21 = swift_allocError(&type metadata for DecodedJSError, v20, 0LL, 0LL);
    sub_52D4();
    sub_D7D4();
    uint64_t v22 = sub_6BC8();
    sub_6D14(v22);
    uint64_t v23 = sub_9A58();
    uint64_t result = sub_ACD0(v23);
    *(void *)a2 = v21;
    *(_BYTE *)(a2 + 8) = 1;
  }

  return result;
}

uint64_t sub_2B980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for JSONContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for JSONObject(0LL);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  (*(void (**)(_BYTE *, uint64_t, __n128))(v14 + 16))(v13, a1, v11);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_196E4((uint64_t)v13, a3);
}

uint64_t sub_2BA94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2B6B4(a1, a2);
}

uint64_t type metadata accessor for ResolutionAction(uint64_t a1)
{
  uint64_t result = qword_7E630;
  if (!qword_7E630) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ResolutionAction);
  }
  return result;
}

uint64_t sub_2BAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2B980(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_2BAE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)unint64_t v4 = *(void *)a2;
    unint64_t v4 = v8 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v8);
  }

  else
  {
    int v7 = *(unsigned __int8 *)(a2 + 8);
    if (v7 == 255)
    {
      *(void *)a1 = *(void *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    }

    else
    {
      char v9 = v7 & 1;
      uint64_t v10 = *(void *)a2;
      sub_2BBF0(*(void *)a2, v7 & 1);
      *(void *)unint64_t v4 = v10;
      *(_BYTE *)(v4 + 8) = v9;
    }

    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = v4 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = type metadata accessor for ActionMetrics(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v12, v13, v14);
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = v4 + v15;
    uint64_t v17 = a2 + v15;
    uint64_t v18 = *(void *)(a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *(void *)(v17 + 32);
      *(void *)(v16 + 2sub_62AC(v0 + 4) = v18;
      *(void *)(v16 + 32) = v19;
      (**(void (***)(void))(v18 - 8))();
    }

    else
    {
      __int128 v20 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v20;
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
    }
  }

  return v4;
}

uint64_t sub_2BBF0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain(a1);
  }
}

void *sub_2BBFC(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 8);
  if (v4 != 255) {
    sub_2BC80(*(void *)a1, v4 & 1);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t result = (void *)(a1 + *(int *)(a2 + 24));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_2BC80(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    return swift_errorRelease(a1);
  }
  else {
    return swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_2BC8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v6 = *((unsigned __int8 *)a2 + 8);
  if (v6 == 255)
  {
    *(void *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  }

  else
  {
    char v7 = v6 & 1;
    uint64_t v8 = *a2;
    sub_2BBF0(*a2, v6 & 1);
    *(void *)a1 = v8;
    *(_BYTE *)(a1 + 8) = v7;
  }

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 2sub_62AC(v0 + 4) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }

  else
  {
    __int128 v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }

  return a1;
}

uint64_t sub_2BD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned __int8 *)(a1 + 8) == 255)
  {
    if (v6 == 255)
    {
      uint64_t v8 = *(void *)a2;
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(void *)a1 = v8;
    }

    else
    {
      char v13 = v6 & 1;
      uint64_t v14 = *(void *)a2;
      sub_2BBF0(*(void *)a2, v6 & 1);
      *(void *)a1 = v14;
      *(_BYTE *)(a1 + 8) = v13;
    }
  }

  else if (v6 == 255)
  {
    sub_2BED0(a1);
    char v7 = *(_BYTE *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(_BYTE *)(a1 + 8) = v7;
  }

  else
  {
    char v9 = v6 & 1;
    uint64_t v10 = *(void *)a2;
    sub_2BBF0(*(void *)a2, v6 & 1);
    uint64_t v11 = *(void *)a1;
    char v12 = *(_BYTE *)(a1 + 8);
    *(void *)a1 = v10;
    *(_BYTE *)(a1 + 8) = v9;
    sub_2BC80(v11, v12);
  }

  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24LL))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (__int128 *)(a2 + v19);
  uint64_t v22 = *((void *)v21 + 3);
  if (!*(void *)(a1 + v19 + 24))
  {
    if (v22)
    {
      *(void *)(v20 + 2sub_62AC(v0 + 4) = v22;
      *(void *)(v20 + 32) = *((void *)v21 + 4);
      (**(void (***)(uint64_t, __int128 *))(v22 - 8))(v20, v21);
      return a1;
    }

uint64_t sub_2BED0(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7E5D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_2BF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  __int128 v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  return a1;
}

uint64_t sub_2BFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = *(unsigned __int8 *)(a1 + 8);
  if (v6 == 255) {
    goto LABEL_4;
  }
  int v7 = *(unsigned __int8 *)(a2 + 8);
  if (v7 == 255)
  {
    sub_2BED0(a1);
LABEL_4:
    *(void *)a1 = *(void *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    goto LABEL_6;
  }

  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v7 & 1;
  sub_2BC80(v8, v6 & 1);
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for ActionMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40LL))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  if (*(void *)(a1 + v13 + 24)) {
    sub_62AC((void *)(a1 + v13));
  }
  __int128 v15 = *(_OWORD *)(a2 + v13 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(a2 + v13 + 32);
  return a1;
}

uint64_t sub_2C080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2C08C);
}

uint64_t sub_2C08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2) {
    return sub_6028(a1 + *(int *)(a3 + 20), a2, v6);
  }
  unint64_t v8 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(sub_9970(v4, v8) = -1;
  }
  int v9 = v8 - 1;
  if (v9 < 0) {
    int v9 = -1;
  }
  return (v9 + 1);
}

uint64_t sub_2C118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2C124);
}

uint64_t sub_2C124(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ActionMetrics(0LL);
  if (*(_DWORD *)(*(void *)(result - 8) + 84LL) == a3) {
    return sub_5FEC(a1 + *(int *)(a4 + 20), a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 24) + 2sub_62AC(v0 + 4) = a2;
  return result;
}

uint64_t sub_2C1A0(uint64_t a1)
{
  v4[0] = "\t";
  uint64_t result = type metadata accessor for ActionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    _OWORD v4[2] = &unk_5EAA0;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

unint64_t sub_2C21C(uint64_t a1)
{
  unint64_t result = sub_2C240();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2C240()
{
  unint64_t result = qword_7DAA0;
  if (!qword_7DAA0)
  {
    uint64_t v1 = type metadata accessor for ResolutionAction(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5EA10, v1);
    atomic_store(result, (unint64_t *)&qword_7DAA0);
  }

  return result;
}

uint64_t sub_2C280()
{
  return swift_errorRelease(v0);
}

uint64_t sub_2C288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v9);
  uint64_t v10 = *(void *)a1;
  int v11 = *(unsigned __int8 *)(a1 + 8);
  if (v11 == 255)
  {
    sub_2C8B0(a2, (uint64_t)v59, &qword_7F920);
    if (v60 == 255)
    {
      sub_DBD8((uint64_t)v59, &qword_7F920);
    }

    else
    {
      sub_2C838((uint64_t)v59, (uint64_t)v61);
      sub_2C874((uint64_t)v61, (uint64_t)v59);
      if (!v60)
      {
        sub_2C968();
        uint64_t v13 = 0LL;
        uint64_t v12 = v59[0];
        goto LABEL_27;
      }

      if (v60 == 1)
      {
        sub_199E4((uint64_t)v59, (uint64_t)v57);
        sub_2C8B0((uint64_t)v57, (uint64_t)v55, &qword_7DDE0);
        if (v56)
        {
          uint64_t v14 = sub_5F6C(&qword_7D668);
          if ((swift_dynamicCast(v53, v55, &type metadata for Any[8], v14, 6LL) & 1) != 0)
          {
            uint64_t v13 = v53[0];
LABEL_26:
            sub_DBD8((uint64_t)v57, &qword_7DDE0);
            sub_2C968();
            uint64_t v12 = 0LL;
            goto LABEL_27;
          }
        }

        else
        {
          sub_DBD8((uint64_t)v55, &qword_7DDE0);
        }

        sub_5F6C((uint64_t *)&unk_7D650);
        sub_2C93C();
        sub_2C8F4();
        uint64_t v29 = (__n128 *)sub_2C970(v4 + 3 * v5, v28);
        uint64_t v56 = (void *)sub_2C95C(v29, (__n128)xmmword_5CD70);
        v55[0] = v3;
        uint64_t v30 = swift_retain(v3);
        id v31 = (id)AMSLogKey(v30);
        if (v31)
        {
          uint64_t v33 = v31;
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);
          uint64_t v52 = v35;

          sub_2C90C();
          sub_C3E8();
          uint64_t v36 = (uint64_t)v56;
          uint64_t v37 = sub_7A94(v55, (uint64_t)v56);
          uint64_t v38 = sub_2C92C((uint64_t)v37, v36);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v38);
          v53[0] = v38;
          sub_2C97C();
          sub_2C934((uint64_t)v53);
          sub_C378();
          uint64_t MetatypeMetadata = &type metadata for String;
          v53[0] = v34;
          v53[1] = v52;
          sub_2C97C();
          sub_2C934((uint64_t)v53);
          uint64_t v39 = 93LL;
        }

        else
        {
          sub_2C91C();
          sub_C3E8();
          uint64_t v44 = (uint64_t)v56;
          char v45 = sub_7A94(v55, (uint64_t)v56);
          uint64_t v46 = sub_2C92C((uint64_t)v45, v44);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v46);
          v53[0] = v46;
          sub_2C97C();
          sub_DBD8((uint64_t)v53, &qword_7DDE0);
          uint64_t v39 = 58LL;
        }

        unint64_t v47 = 0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v39);
        sub_2C950();
        type metadata accessor for Log();
        sub_62AC(v55);
        LogMessage.init(stringLiteral:)(0xD000000000000033LL, 0x80000000000644E0LL);
        static LogMessage.safe(_:)(v57);
        sub_2679C((uint64_t)v29);
        swift_bridgeObjectRelease(v29);
        uint64_t v13 = 0LL;
        goto LABEL_26;
      }

      sub_5F6C((uint64_t *)&unk_7D650);
      sub_2C93C();
      sub_2C8F4();
      uint64_t v16 = (__n128 *)sub_2C970(v4 + 2 * v5, v15);
      uint64_t v58 = sub_2C95C(v16, (__n128)xmmword_5CD80);
      v57[0] = v3;
      uint64_t v17 = swift_retain(v3);
      id v18 = (id)AMSLogKey(v17);
      if (v18)
      {
        uint64_t v20 = v18;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);
        uint64_t v23 = v22;

        sub_2C90C();
        sub_C3E8();
        uint64_t v24 = v58;
        uint64_t v25 = sub_7A94(v57, v58);
        uint64_t v26 = sub_2C92C((uint64_t)v25, v24);
        uint64_t v56 = (void *)swift_getMetatypeMetadata(v26);
        v55[0] = v26;
        sub_2C948();
        sub_2C934((uint64_t)v55);
        sub_C378();
        uint64_t v56 = &type metadata for String;
        v55[0] = v21;
        v55[1] = v23;
        sub_2C948();
        sub_2C934((uint64_t)v55);
        uint64_t v27 = 93LL;
      }

      else
      {
        sub_2C91C();
        sub_C3E8();
        uint64_t v40 = v58;
        uint64_t v41 = sub_7A94(v57, v58);
        uint64_t v42 = sub_2C92C((uint64_t)v41, v40);
        uint64_t v56 = (void *)((uint64_t (*)(void))swift_getMetatypeMetadata)();
        v55[0] = v42;
        sub_2C948();
        sub_DBD8((uint64_t)v55, &qword_7DDE0);
        uint64_t v27 = 58LL;
      }

      unint64_t v43 = 0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v27);
      sub_2C950();
      type metadata accessor for Log();
      sub_62AC(v57);
      LogMessage.init(stringLiteral:)(0xD000000000000026LL, 0x80000000000644B0LL);
      sub_2679C((uint64_t)v16);
      swift_bridgeObjectRelease(v16);
      sub_2C968();
    }

    uint64_t v12 = 0LL;
    uint64_t v13 = 0LL;
    goto LABEL_27;
  }

  if ((v11 & 1) != 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0LL;
  }
  if ((v11 & 1) != 0) {
    uint64_t v13 = 0LL;
  }
  else {
    uint64_t v13 = v10;
  }
LABEL_27:
  uint64_t v48 = type metadata accessor for DelegateController(0LL);
  sub_2C820(v10, v11);
  uint64_t v49 = type metadata accessor for BaseObjectGraph(0LL);
  inject<A, B>(_:from:)(v48, a3, v48, v49);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v61[0] + 208LL))(v13, v12);
  swift_bridgeObjectRelease(v13);
  sub_5F6C(&qword_7D048);
  memset(v61, 0, 32);
  uint64_t v50 = Promise.__allocating_init(value:)(v61);
  swift_errorRelease(v12);
  swift_release();
  return v50;
}

uint64_t type metadata accessor for ResolutionActionImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin30ResolutionActionImplementation);
}

uint64_t sub_2C800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2C288(a1, a2, a3);
}

uint64_t sub_2C820(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_2BBF0(result, a2 & 1);
  }
  return result;
}

uint64_t sub_2C838(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2C874(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2C8B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5F6C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

  ;
}

uint64_t sub_2C90C()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
}

uint64_t sub_2C91C()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_2C92C(uint64_t a1, uint64_t a2)
{
  return swift_getDynamicType(a1, a2, 1LL);
}

uint64_t sub_2C934(uint64_t a1)
{
  return sub_DBD8(a1, v1);
}

uint64_t sub_2C93C()
{
  return type metadata accessor for LogMessage(0LL);
}

uint64_t sub_2C948()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 248);
}

uint64_t sub_2C950()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_2C95C(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for ResolutionActionImplementation();
}

uint64_t sub_2C968()
{
  return sub_14BCC(v0 - 144);
}

uint64_t sub_2C970@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return swift_allocObject(v2, a1, a2 | 7);
}

uint64_t sub_2C97C()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 280);
}

void *sub_2C984(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
    if (sub_6028((uint64_t)v10, 1LL, v11))
    {
      uint64_t v12 = sub_5F6C(&qword_7CB00);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
      sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
    }

    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *(void *)(v16 + 32);
      *((void *)v15 + 3) = v17;
      *((void *)v15 + sub_62AC(v0 + 4) = v18;
      (**(void (***)(void))(v17 - 8))();
    }

    else
    {
      __int128 v19 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v19;
      *((void *)v15 + sub_62AC(v0 + 4) = *(void *)(v16 + 32);
    }

    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = *(uint64_t *)((char *)a2 + v20);
    *(void *)((char *)v4 + v20) = v22;
    *(void *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain(v22);
  }

  return v4;
}

uint64_t sub_2CAD8(void *a1, int *a2)
{
  uint64_t v4 = (uint64_t)a1 + a2[5];
  uint64_t v5 = type metadata accessor for ImpressionMetrics(0LL);
  uint64_t v6 = (void *)((char *)a1 + a2[6]);
  if (v6[3]) {
    sub_62AC(v6);
  }
  return swift_bridgeObjectRelease(*(void *)((char *)a1 + a2[7]));
}

uint64_t sub_2CB5C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v9, 1LL, v10))
  {
    uint64_t v11 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
    sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
  }

  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *(void *)(v14 + 32);
    *(void *)(v13 + 2sub_62AC(v0 + 4) = v15;
    *(void *)(v13 + 32) = v16;
    (**(void (***)(void))(v15 - 8))();
  }

  else
  {
    __int128 v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = v17;
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
  }

  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = *(void *)(a2 + v18);
  *(void *)(a1 + sub_6CDC(v12, v13, v14, v15, v16, v17, v18) = v20;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_bridgeObjectRetain(v20);
  return a1;
}

void *sub_2CC7C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ImpressionMetrics(0LL);
  int v10 = sub_6028((uint64_t)v7, 1LL, v9);
  int v11 = sub_6028((uint64_t)v8, 1LL, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL))(v7, v8, v9);
      sub_5FEC((uint64_t)v7, 0LL, 1LL, v9);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_5F6C(&qword_7CB00);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)((char *)a2 + v14 + 24);
  if (!*(void *)((char *)a1 + v14 + 24))
  {
    if (v17)
    {
      *((void *)v15 + 3) = v17;
      *((void *)v15 + sub_62AC(v0 + 4) = *((void *)v16 + 4);
      (**(void (***)(char *, char *))(v17 - 8))(v15, v16);
      goto LABEL_14;
    }

LABEL_13:
    __int128 v18 = *(_OWORD *)v16;
    __int128 v19 = *((_OWORD *)v16 + 1);
    *((void *)v15 + sub_62AC(v0 + 4) = *((void *)v16 + 4);
    *(_OWORD *)uint64_t v15 = v18;
    *((_OWORD *)v15 + 1) = v19;
    goto LABEL_14;
  }

  if (!v17)
  {
    sub_62AC(v15);
    goto LABEL_13;
  }

  sub_6520(v15, v16);
LABEL_14:
  uint64_t v20 = a3[7];
  uint64_t v21 = *(void *)((char *)a2 + v20);
  uint64_t v22 = *(void *)((char *)a1 + v20);
  *(void *)((char *)a1 + v20) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

    __int128 v19 = *v17;
    uint64_t v20 = v17[1];
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(_OWORD *)uint64_t v16 = v19;
    *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v20;
    return a1;
  }

  if (!v18)
  {
    sub_62AC((void *)v16);
    goto LABEL_13;
  }

  sub_6520((void *)v16, v17);
  return a1;
}

    __int128 v19 = *v17;
    uint64_t v20 = v17[1];
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(_OWORD *)uint64_t v16 = v19;
    *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v20;
    return a1;
  }

  if (!v18)
  {
    sub_62AC((void *)v16);
    goto LABEL_13;
  }

  sub_6520((void *)v16, v17);
  return a1;
}

uint64_t sub_2CE18(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v9, 1LL, v10))
  {
    uint64_t v11 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
    sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
  }

  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = (__int128 *)(a2 + v12);
  __int128 v16 = *v15;
  __int128 v17 = v15[1];
  *(void *)(v14 + 32) = *((void *)v15 + 4);
  *(_OWORD *)uint64_t v14 = v16;
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = v17;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_2CF0C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  int v11 = sub_6028((uint64_t)v8, 1LL, v10);
  int v12 = sub_6028((uint64_t)v9, 1LL, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
      sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_62AC((void *)(a1 + v15));
  }
  __int128 v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  uint64_t v18 = a3[7];
  uint64_t v19 = *(void *)(a1 + v18);
  *(void *)(a1 + sub_6CDC(v12, v13, v14, v15, v16, v17, v18) = *(void *)(a2 + v18);
  swift_bridgeObjectRelease(v19);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_2D070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2D07C);
}

uint64_t sub_2D07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_5F6C(&qword_7CB00);
    return sub_6028(a1 + *(int *)(a3 + 20), a2, v8);
  }

uint64_t sub_2D0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2D100);
}

uint64_t sub_2D100(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 2sub_62AC(v0 + 4) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_5F6C(&qword_7CB00);
    return sub_5FEC(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }

  return result;
}

uint64_t type metadata accessor for SegmentedControl(uint64_t a1)
{
  uint64_t result = qword_7E788;
  if (!qword_7E788) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SegmentedControl);
  }
  return result;
}

void sub_2D1A8(uint64_t a1)
{
  v4[0] = "(";
  sub_CE80(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    _OWORD v4[2] = &unk_5EB50;
    void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
  }

uint64_t destroy for SegmentedControl.Item(void *a1)
{
  if (a1[3]) {
    sub_62AC(a1);
  }
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t initializeWithCopy for SegmentedControl.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 2sub_62AC(v0 + 4) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }

  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for SegmentedControl.Item(uint64_t a1, __int128 *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 2sub_62AC(v0 + 4) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }

uint64_t assignWithTake for SegmentedControl.Item(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_62AC((void *)a1);
  }
  __int128 v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SegmentedControl.Item(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SegmentedControl.Item(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SegmentedControl.Item()
{
  return &type metadata for SegmentedControl.Item;
}

void sub_2D468(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v6 = type metadata accessor for JSONObject(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  int v11 = (char *)&v23 - v10;
  uint64_t v12 = JSONObject.subscript.getter(1954047348LL, 0xE400000000000000LL);
  uint64_t v13 = JSONObject.string.getter(v12);
  uint64_t v15 = v14;
  sub_2DDA8((uint64_t)v11);
  if (v15)
  {
    uint64_t v24 = v13;
    uint64_t v16 = type metadata accessor for ActionFactory(0LL);
    swift_initStackObject(v16, v25);
    JSONObject.subscript.getter(0x6575676573LL, 0xE500000000000000LL);
    ActionFactory.action(deserializing:using:)(v26, v8, v28);
    swift_release();
    if (v3)
    {
      swift_errorRelease(v3);
      uint64_t v17 = sub_9A58();
      sub_6D28(v17);
      sub_2DDA8(a1);
      sub_2DDA8((uint64_t)v8);
      uint64_t v27 = 0LL;
      memset(v26, 0, sizeof(v26));
    }

    else
    {
      uint64_t v22 = sub_9A58();
      sub_6D28(v22);
      sub_2DDA8(a1);
      sub_2DDA8((uint64_t)v8);
    }

    sub_D708((uint64_t)v26, a3, (uint64_t *)&unk_7F900);
    *(void *)(a3 + 40) = v24;
    *(void *)(a3 + 48) = v15;
  }

  else
  {
    uint64_t v18 = sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    swift_allocError(v18, v19, 0LL, 0LL);
    *uint64_t v20 = 1954047348LL;
    v20[1] = 0xE400000000000000LL;
    void v20[2] = &type metadata for SegmentedControl.Item;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104LL))( v20,  enum case for JSONError.missingProperty(_:),  v18);
    sub_2DDCC();
    uint64_t v21 = sub_9A58();
    sub_6D28(v21);
    sub_2DDA8(a1);
  }

  sub_6B3C();
}

void sub_2D68C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_2D6A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v74 = a3;
  uint64_t v81 = sub_9A58();
  uint64_t v78 = *(void *)(v81 - 8);
  sub_23758();
  __chkstk_darwin(v4);
  sub_2DD94();
  uint64_t v73 = v5;
  __chkstk_darwin(v6);
  uint64_t v69 = (char *)v66 - v7;
  sub_5F6C(&qword_7CB00);
  sub_23758();
  __chkstk_darwin(v8);
  uint64_t v72 = (uint64_t)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_5F6C(&qword_7E2B8);
  sub_23758();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for JSONArray(0LL);
  uint64_t v75 = *(void *)(v13 - 8);
  sub_23758();
  __chkstk_darwin(v14);
  sub_2DD94();
  uint64_t v71 = v15;
  __chkstk_darwin(v16);
  uint64_t v76 = (char *)v66 - v17;
  uint64_t v18 = type metadata accessor for JSONObject(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_2DD94();
  uint64_t v68 = v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v66 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v66 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v66 - v28;
  uint64_t v79 = a1;
  uint64_t v30 = JSONObject.subscript.getter(25705LL, 0xE200000000000000LL);
  uint64_t v31 = JSONObject.string.getter(v30);
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(v19 + 8);
  sub_2DDB0((uint64_t)v29);
  if (!v33)
  {
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    sub_2DD4C(v40);
    uint64_t v41 = sub_2DD84();
    *(void *)&dword_0 = 25705LL;
    *(void *)&dword_8 = 0xE200000000000000LL;
    *(void *)&dword_10 = v41;
    sub_2DD60(v41, enum case for JSONError.missingProperty(_:));
    sub_2DDCC();
    sub_2DD74();
    uint64_t v39 = v79;
    goto LABEL_5;
  }

  uint64_t v67 = (void (*)(uint64_t, uint64_t, uint64_t))v31;
  uint64_t v35 = v79;
  uint64_t v36 = sub_2DDF0(0x736D657469LL, 0xE500000000000000LL);
  JSONObject.array.getter(v36);
  sub_2DDB0((uint64_t)v26);
  if (sub_6028((uint64_t)v12, 1LL, v13) == 1)
  {
    swift_bridgeObjectRelease(v33);
    sub_60C8((uint64_t)v12, &qword_7E2B8);
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    sub_2DD4C(v37);
    uint64_t v38 = sub_2DD84();
    *(void *)uint64_t v33 = 0x736D657469LL;
    *(void *)(v33 + 8) = 0xE500000000000000LL;
    *(void *)(v33 + swift_weakDestroy(v0 + 16) = v38;
    sub_2DD60(v38, enum case for JSONError.missingProperty(_:));
    sub_2DDCC();
    sub_2DD74();
    uint64_t v39 = v35;
LABEL_5:
    sub_2DDB0(v39);
    goto LABEL_6;
  }

  uint64_t v42 = v75;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v76, v12, v13);
  uint64_t v43 = sub_2DDF0(0x64657463656C6573LL, 0xED00007865646E49LL);
  uint64_t v44 = JSONObject.int.getter(v43);
  char v46 = v45;
  sub_2DDB0((uint64_t)v23);
  if ((v46 & 1) != 0)
  {
    swift_bridgeObjectRelease(v33);
    sub_6BD0();
    sub_6A24( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    sub_2DD4C(v56);
    uint64_t v57 = sub_2DD84();
    strcpy((char *)v33, "selectedIndex");
    *(_WORD *)(v33 + 1sub_62AC(v0 + 4) = -4864;
    *(void *)(v33 + swift_weakDestroy(v0 + 16) = v57;
    sub_2DD60(v57, enum case for JSONError.missingProperty(_:));
    sub_2DDCC();
    sub_2DD74();
    sub_2DDB0(v35);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v76, v13);
  }

  else
  {
    v66[0] = v44;
    v66[1] = v34;
    v66[2] = v18;
    v80[0] = v67;
    v80[1] = v33;
    uint64_t v47 = v74;
    AnyHashable.init<A>(_:)(v80, &type metadata for String, &protocol witness table for String);
    uint64_t v48 = v68;
    sub_2DDF0(0xD000000000000011LL, 0x8000000000063440LL);
    uint64_t v49 = v77;
    uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    uint64_t v51 = v69;
    v50(v69, v77, v81);
    uint64_t v52 = v72;
    uint64_t v53 = v70;
    ImpressionMetrics.init(deserializing:using:)(v48, v51);
    uint64_t v67 = (void (*)(uint64_t, uint64_t, uint64_t))v50;
    uint64_t v54 = v49;
    if (v53)
    {
      swift_errorRelease(v53);
      uint64_t v55 = 1LL;
    }

    else
    {
      uint64_t v55 = 0LL;
    }

    uint64_t v58 = type metadata accessor for ImpressionMetrics(0LL);
    sub_5FEC(v52, v55, 1LL, v58);
    id v59 = (int *)type metadata accessor for SegmentedControl(0LL);
    uint64_t v72 = v47 + v59[5];
    sub_D708(v52, v72, &qword_7CB00);
    uint64_t v60 = v47 + v59[6];
    *(void *)(v60 + 32) = 0LL;
    *(_OWORD *)uint64_t v60 = 0u;
    *(_OWORD *)(v60 + swift_weakDestroy(v0 + 16) = 0u;
    uint64_t v61 = v71;
    (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v71, v76, v13);
    uint64_t v62 = v73;
    v67(v73, v54, v81);
    unint64_t v63 = sub_2DD10();
    uint64_t v64 = Array<A>.init(deserializing:using:)(v61, v62, &type metadata for SegmentedControl.Item, v63);
    sub_2DDB8();
    sub_2DDE4();
    sub_2DDD4();
    uint64_t v65 = v74;
    *(void *)(v74 + v59[7]) = v64;
    *(void *)(v65 + v59[8]) = v66[0];
  }

LABEL_6:
  sub_6B3C();
}

uint64_t sub_2DC74@<X0>(uint64_t a1@<X8>)
{
  return sub_D734(v1, a1);
}

void sub_2DC80(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2DCA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_2DCBC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_2DCE4()
{
}

unint64_t sub_2DD10()
{
  unint64_t result = qword_7E7D8;
  if (!qword_7E7D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_5EB70, &type metadata for SegmentedControl.Item);
    atomic_store(result, (unint64_t *)&qword_7E7D8);
  }

  return result;
}

uint64_t sub_2DD4C(uint64_t a1)
{
  return swift_allocError(v1, a1, 0LL, 0LL);
}

uint64_t sub_2DD60(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 104LL))(v3, a2, v2);
}

uint64_t sub_2DD74()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 112) + 8LL))( *(void *)(v0 - 120),  *(void *)(v0 - 72));
}

uint64_t sub_2DD84()
{
  return type metadata accessor for SegmentedControl(0LL);
}

  ;
}

uint64_t sub_2DDA8(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t sub_2DDB0(uint64_t a1)
{
  return v1(a1, v2);
}

uint64_t sub_2DDB8()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 112) + 8LL))(v0, *(void *)(v1 - 72));
}

uint64_t sub_2DDCC()
{
  return swift_willThrow();
}

uint64_t sub_2DDD4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_2DDE4()
{
  return (*(uint64_t (**)(void, void))(v0 - 216))(*(void *)(v0 - 104), *(void *)(v0 - 208));
}

uint64_t sub_2DDF0(uint64_t a1, uint64_t a2)
{
  return JSONObject.subscript.getter(a1, a2);
}

uint64_t sub_2DDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_5EC68);
  sub_5F6C(&qword_7E828);
  sub_2E0A8(KeyPath);
  swift_release();
  sub_2E354(v9);
  uint64_t v6 = swift_getKeyPath(&unk_5EC88);
  sub_2E0A8(v6);
  swift_release();
  *(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex) = v9;
  sub_2E37C();
  uint64_t v7 = swift_retain(a3);
  return sub_2E3A0(v7);
}

uint64_t sub_2DEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SegmentedControlComponent();
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_2DF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SegmentedControlComponent();
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_2DF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_5EC48, a4);
  return ComponentCell.apply(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_2DFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_5EC48, a4);
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_2E020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_5EC48, a4);
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_2E07C()
{
  return sub_98F0(&qword_7DB08, type metadata accessor for SegmentedControl, (uint64_t)&unk_5EBF8);
}

uint64_t sub_2E0A8(uint64_t a1)
{
  return DiffableLens.subscript.getter(a1, v1);
}

id sub_2E0B4(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex] = 0LL;
  *(void *)&v4[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph] = 0LL;
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl;
  id v10 = objc_allocWithZone(&OBJC_CLASS___UISegmentedControl);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for SegmentedControlComponent();
  id v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  sub_2E440();

  return v12;
}

void sub_2E1BC()
{
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items] = &_swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph] = 0LL;
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl;
  *(void *)&v0[v1] = [objc_allocWithZone(UISegmentedControl) init];

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/SegmentedControlComponent.swift",  51LL,  2LL,  24LL,  0);
  __break(1u);
}

id sub_2E284()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl);
  id result = [v1 removeAllSegments];
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    swift_bridgeObjectRetain(v3);
    do
    {
      sub_2E870(v5, (uint64_t)v8);
      uint64_t v6 = v8[5];
      uint64_t v7 = v9;
      swift_bridgeObjectRetain(v9);
      sub_2E8AC(v8);
      sub_2E808(v6, v7, (uint64_t)[v1 numberOfSegments], 0, v1);
      v5 += 56LL;
      --v4;
    }

    while (v4);
    return (id)swift_bridgeObjectRelease(v3);
  }

  return result;
}

id sub_2E354(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items) = a1;
  swift_bridgeObjectRelease(v2);
  return sub_2E284();
}

id sub_2E37C()
{
  return [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl) setSelectedSegmentIndex:*(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex)];
}

uint64_t sub_2E3A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph) = a1;
  return swift_release(v2);
}

uint64_t sub_2E3B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SegmentedControlComponent();
  objc_msgSendSuper2(&v2, "prepareForReuse");
  sub_2E354((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_selectedIndex] = 0LL;
  sub_2E37C();
  return sub_2E3A0(0LL);
}

void sub_2E440()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl];
  [v1 addTarget:v0 action:"segmentedControlAction" forControlEvents:4096];
  id v2 = [v0 contentView];
  [v2 addSubview:v1];

  sub_57360(1LL, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

unint64_t sub_2E4D0()
{
  uint64_t v1 = type metadata accessor for ResultingActionDispatcher.MetricsBehavior(0LL);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t result = (unint64_t)objc_msgSend( *(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_underlyingSegmentedControl),  "selectedSegmentIndex",  v6);
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_items);
  if (result >= *(void *)(v10 + 16))
  {
LABEL_10:
    __break(1u);
    return result;
  }

  sub_6A60(v10 + 56 * result + 32, (uint64_t)&v16);
  if (!*((void *)&v17 + 1)) {
    return sub_DBD8((uint64_t)&v16, (uint64_t *)&unk_7F900);
  }
  sub_6010(&v16, (uint64_t)v19);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin25SegmentedControlComponent_objectGraph);
  if (v11)
  {
    uint64_t v12 = type metadata accessor for ResultingActionDispatcher(0LL);
    uint64_t v13 = type metadata accessor for BaseObjectGraph(0LL);
    swift_retain(v11);
    inject<A, B>(_:from:)(v12, v11, v12, v13);
    uint64_t v14 = v16;
    inject<A, B>(_:from:)(v4, v11, v4, v13);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v8, v4);
    uint64_t v15 = sub_5F6C(&qword_7D7E0);
    sub_5FEC((uint64_t)v3, 0LL, 1LL, v15);
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    char v18 = -1;
    (*(void (**)(void *, char *, uint64_t, __int128 *))(*(void *)v14 + 216LL))(v19, v3, v11, &v16);
    swift_release();
    swift_release();
    swift_release();
    sub_DBD8((uint64_t)&v16, &qword_7F920);
    sub_2E7CC((uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  return sub_62AC(v19);
}

id sub_2E730()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SegmentedControlComponent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SegmentedControlComponent()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin25SegmentedControlComponent);
}

uint64_t sub_2E7CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ResultingActionDispatcher.MetricsBehavior(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_2E808(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  id v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a5 insertSegmentWithTitle:v9 atIndex:a3 animated:a4 & 1];
}

uint64_t sub_2E870(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_2E8AC(void *a1)
{
  return a1;
}

void type metadata accessor for Shelf.Placement()
{
}

uint64_t *sub_2E8F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
    swift_bridgeObjectRetain(v7);
    if (sub_6028((uint64_t)v10, 1LL, v11))
    {
      uint64_t v12 = sub_5F6C(&qword_7CB00);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
      sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
    }

    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = *(uint64_t *)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v1sub_62AC(v0 + 4) = v16;
    __int128 v17 = (char *)v4 + v15;
    char v18 = (char *)a2 + v15;
    *(_WORD *)__int128 v17 = *(_WORD *)v18;
    v17[2] = v18[2];
    uint64_t v19 = *((void *)v18 + 2);
    *((void *)v17 + 1) = *((void *)v18 + 1);
    *((void *)v17 + 2) = v19;
    uint64_t v20 = *((void *)v18 + 4);
    *((void *)v17 + 3) = *((void *)v18 + 3);
    *((void *)v17 + sub_62AC(v0 + 4) = v20;
    v17[40] = v18[40];
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
  }

  return v4;
}

uint64_t sub_2EA3C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for ImpressionMetrics(0LL);
  swift_bridgeObjectRelease(*(void *)(a1 + a2[6]));
  uint64_t v6 = a1 + a2[7];
  swift_bridgeObjectRelease(*(void *)(v6 + 16));
  return swift_bridgeObjectRelease(*(void *)(v6 + 32));
}

void *sub_2EAC8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  swift_bridgeObjectRetain(v6);
  if (sub_6028((uint64_t)v9, 1LL, v10))
  {
    uint64_t v11 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
    sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
  }

  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void *)((char *)a2 + v12);
  *(void *)((char *)a1 + sub_9A70(v10, v12) = v14;
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_WORD *)uint64_t v15 = *(_WORD *)v16;
  v15[2] = v16[2];
  uint64_t v17 = *((void *)v16 + 2);
  *((void *)v15 + 1) = *((void *)v16 + 1);
  *((void *)v15 + 2) = v17;
  uint64_t v18 = *((void *)v16 + 4);
  *((void *)v15 + 3) = *((void *)v16 + 3);
  *((void *)v15 + sub_62AC(v0 + 4) = v18;
  v15[40] = v16[40];
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  return a1;
}

void *sub_2EBE4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  id v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
  int v12 = sub_6028((uint64_t)v9, 1LL, v11);
  int v13 = sub_6028((uint64_t)v10, 1LL, v11);
  if (!v12)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v9, v10, v11);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }

  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_5F6C(&qword_7CB00);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = *(void *)((char *)a2 + v16);
  uint64_t v18 = *(void *)((char *)a1 + v16);
  *(void *)((char *)a1 + vswift_weakDestroy(v0 + 16) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *uint64_t v20 = *((_BYTE *)a2 + v19);
  v20[1] = *((_BYTE *)a2 + v19 + 1);
  void v20[2] = *((_BYTE *)a2 + v19 + 2);
  *((void *)v20 + 1) = *(void *)((char *)a2 + v19 + 8);
  uint64_t v22 = *(void *)((char *)a2 + v19 + 16);
  uint64_t v23 = *(void *)((char *)a1 + v19 + 16);
  *((void *)v20 + 2) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  *((void *)v20 + 3) = *((void *)v21 + 3);
  uint64_t v24 = *((void *)v21 + 4);
  uint64_t v25 = *((void *)v20 + 4);
  *((void *)v20 + sub_62AC(v0 + 4) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v20[40] = v21[40];
  return a1;
}

_OWORD *sub_2ED90(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v8, 1LL, v9))
  {
    uint64_t v10 = sub_5F6C(&qword_7CB00);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
    sub_5FEC((uint64_t)v7, 0LL, 1LL, v9);
  }

  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  int v12 = (_OWORD *)((char *)a1 + v11);
  int v13 = (_OWORD *)((char *)a2 + v11);
  __int128 v14 = v13[1];
  *int v12 = *v13;
  v12[1] = v14;
  *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v13 + 25);
  return a1;
}

void *sub_2EE70(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
  int v12 = sub_6028((uint64_t)v9, 1LL, v11);
  int v13 = sub_6028((uint64_t)v10, 1LL, v11);
  if (!v12)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }

  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_5F6C(&qword_7CB00);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
  sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = *(void *)((char *)a1 + v16);
  *(void *)((char *)a1 + vswift_weakDestroy(v0 + 16) = *(void *)((char *)a2 + v16);
  swift_bridgeObjectRelease(v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_WORD *)uint64_t v19 = *(_WORD *)v20;
  v19[2] = v20[2];
  uint64_t v21 = *((void *)v20 + 2);
  uint64_t v22 = *(void *)((char *)a1 + v18 + 16);
  *((void *)v19 + 1) = *((void *)v20 + 1);
  *((void *)v19 + 2) = v21;
  swift_bridgeObjectRelease(v22);
  uint64_t v23 = *((void *)v20 + 4);
  uint64_t v24 = *((void *)v19 + 4);
  *((void *)v19 + 3) = *((void *)v20 + 3);
  *((void *)v19 + sub_62AC(v0 + 4) = v23;
  swift_bridgeObjectRelease(v24);
  v19[40] = v20[40];
  return a1;
}

uint64_t sub_2EFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2EFE8);
}

uint64_t sub_2EFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_5F6C(&qword_7CB00);
    return sub_6028(a1 + *(int *)(a3 + 20), a2, v8);
  }

uint64_t sub_2F060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2F06C);
}

uint64_t sub_2F06C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_5F6C(&qword_7CB00);
    return sub_5FEC(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }

  return result;
}

uint64_t type metadata accessor for Shelf(uint64_t a1)
{
  uint64_t result = qword_7E8D0;
  if (!qword_7E8D0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Shelf);
  }
  return result;
}

void sub_2F114(uint64_t a1)
{
  v4[0] = &unk_5ED30;
  sub_CE80(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    _OWORD v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[3] = &unk_5ED48;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
  }

void *sub_2F1A0()
{
  return &protocol witness table for String;
}

uint64_t sub_2F1AC(char a1)
{
  if (!a1) {
    return 0x726564616568LL;
  }
  if (a1 == 1) {
    return 2036625250LL;
  }
  return 0x7265746F6F66LL;
}

uint64_t sub_2F1F4(char a1)
{
  if (!a1) {
    return 0x6E69616C70LL;
  }
  if (a1 == 1) {
    return 0x646570756F7267LL;
  }
  return 0x6F72477465736E69LL;
}

uint64_t sub_2F250(Swift::String string)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71A18, v3);
  sub_309BC();
  if (v1 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v1) {
    return v4;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_2F298(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6C61636974726576LL;
  }
  else {
    return 0x746E6F7A69726F68LL;
  }
}

unint64_t sub_2F2D4(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  _findStringSwitchCase(cases:string:)(cases, v4);
  sub_309BC();
  if (v2 >= 3) {
    return 3LL;
  }
  else {
    return v2;
  }
}

uint64_t sub_2F310(char a1)
{
  if (!a1) {
    return 1701736302LL;
  }
  if (a1 == 1) {
    return 0x656C676E6973LL;
  }
  return 0x656C7069746C756DLL;
}

void sub_2F35C(char *a1, unsigned __int8 *a2)
{
}

void sub_2F368()
{
}

uint64_t sub_2F370(uint64_t a1)
{
  return sub_333D8(a1, *v1);
}

void sub_2F378(uint64_t a1)
{
}

unint64_t sub_2F380@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_71948;
  unint64_t result = sub_2F2D4(*a1, v3);
  *a2 = result;
  return result;
}

void sub_2F3B4()
{
  char v1 = sub_309B0();
  *uint64_t v0 = sub_2F1AC(v1);
  v0[1] = v2;
  sub_6D3C();
}

void sub_2F3D4(char *a1)
{
}

void sub_2F3E0()
{
}

uint64_t sub_2F3E8(uint64_t a1)
{
  return sub_3348C(a1, *v1);
}

void sub_2F3F0(uint64_t a1)
{
}

unint64_t sub_2F3F8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_719B0;
  unint64_t result = sub_2F2D4(*a1, v3);
  *a2 = result;
  return result;
}

void sub_2F42C()
{
  char v1 = sub_309B0();
  *uint64_t v0 = sub_2F1F4(v1);
  v0[1] = v2;
  sub_6D3C();
}

uint64_t sub_2F44C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_32C88(*a1, *a2);
}

uint64_t sub_2F458()
{
  return sub_3506C(*v0);
}

uint64_t sub_2F460(uint64_t a1)
{
  return sub_33428(a1, *v1);
}

uint64_t sub_2F468(uint64_t a1)
{
  return sub_33624(a1, *v1);
}

uint64_t sub_2F470@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_2F250(*a1);
  *a2 = result;
  return result;
}

void sub_2F49C()
{
  char v1 = sub_309B0();
  *uint64_t v0 = sub_2F298(v1);
  v0[1] = v2;
  sub_6D3C();
}

void sub_2F4BC(char *a1, unsigned __int8 *a2)
{
}

void sub_2F4C8()
{
}

uint64_t sub_2F4D0(uint64_t a1)
{
  return sub_3342C(a1, *v1);
}

void sub_2F4D8(uint64_t a1)
{
}

unint64_t sub_2F4E0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_71A68;
  unint64_t result = sub_2F2D4(*a1, v3);
  *a2 = result;
  return result;
}

void sub_2F514()
{
  char v1 = sub_309B0();
  *uint64_t v0 = sub_2F310(v1);
  v0[1] = v2;
  sub_6D3C();
}

void sub_2F534(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = type metadata accessor for JSONObject(0LL);
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  int v12 = (char *)&v33 - v11;
  __chkstk_darwin(v13);
  sub_309D0();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = a1;
  JSONObject.subscript.getter(0x6E61726165707061LL, 0xEA00000000006563LL);
  sub_3029C();
  sub_309A0();
  if (v3)
  {
    sub_9A58();
    uint64_t v18 = sub_309F0();
    v19(v18);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v21 = v41;
    v20(v17, v41);
    v20((uint64_t)v16, v21);
  }

  else
  {
    uint64_t v38 = v9;
    uint64_t v39 = a2;
    sub_308F8((uint64_t)v16);
    int v22 = v45;
    uint64_t v23 = sub_30914(0xD000000000000017LL, 0x80000000000645E0LL);
    int v24 = JSONObject.BOOL.getter(v23);
    sub_308F8(v4);
    sub_30914(1936291937LL, 0xE400000000000000LL);
    sub_302D8();
    sub_309A0();
    int v37 = v22;
    int v42 = v24;
    sub_308F8((uint64_t)v12);
    int v36 = v44;
    sub_30914(0x7265746F6F66LL, 0xE600000000000000LL);
    uint64_t v35 = sub_3098C();
    uint64_t v26 = v25;
    sub_308F8(v4);
    uint64_t v27 = v26;
    swift_bridgeObjectRetain(v26);
    sub_30914(0x726564616568LL, 0xE600000000000000LL);
    uint64_t v34 = sub_3098C();
    uint64_t v29 = v28;
    sub_308F8(v4);
    swift_bridgeObjectRetain(v29);
    uint64_t v30 = (uint64_t)v38;
    sub_30914(0x7453656C67676F74LL, 0xEB00000000656C79LL);
    sub_30314();
    sub_309A0();
    uint64_t v31 = sub_9A58();
    sub_30900(v31);
    sub_308F8(a1);
    sub_308F8(v30);
    LOBYTE(v30) = v43;
    sub_309C8();
    sub_23988();
    uint64_t v32 = v40;
    *uint64_t v40 = v42;
    v32[1] = v37;
    v32[2] = v36;
    *((void *)v32 + 1) = v35;
    *((void *)v32 + 2) = v27;
    *((void *)v32 + 3) = v34;
    *((void *)v32 + sub_62AC(v0 + 4) = v29;
    v32[40] = v30;
  }

  sub_6B3C();
}

double sub_2F85C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (!v3)
  {
    __int128 v6 = v8[0];
    *a3 = v7;
    a3[1] = v6;
    double result = *(double *)((char *)v8 + 9);
    *(_OWORD *)((char *)a3 + 25) = *(_OWORD *)((char *)v8 + 9);
  }

  return result;
}

void sub_2F89C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v88 = a3;
  uint64_t v89 = a2;
  uint64_t v5 = sub_9A58();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v90 = v5;
  uint64_t v91 = v6;
  __chkstk_darwin(v5);
  sub_2DD94();
  uint64_t v87 = v7;
  sub_30980();
  __chkstk_darwin(v8);
  uint64_t v86 = (char *)&v75 - v9;
  sub_30980();
  __chkstk_darwin(v10);
  NSString v82 = (char *)&v75 - v11;
  uint64_t v12 = sub_5F6C(&qword_7CB00);
  __chkstk_darwin(v12);
  uint64_t v83 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_5F6C(&qword_7E2B8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for JSONObject(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  sub_2DD94();
  uint64_t v85 = v19;
  sub_30980();
  __chkstk_darwin(v20);
  uint64_t v80 = (char *)&v75 - v21;
  sub_30980();
  __chkstk_darwin(v22);
  sub_309D0();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v75 - v24;
  uint64_t v26 = type metadata accessor for JSONArray(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  sub_2DD94();
  uint64_t v81 = v28;
  sub_30980();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v75 - v30;
  uint64_t v94 = (char *)a1;
  uint64_t v32 = JSONObject.subscript.getter(0x6E656E6F706D6F63LL, 0xEA00000000007374LL);
  JSONObject.array.getter(v32);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v18 + 8);
  v33(v25, v17);
  if (sub_6028((uint64_t)v16, 1LL, v26) == 1)
  {
    sub_3026C((uint64_t)v16, &qword_7E2B8);
    type metadata accessor for JSONError(0LL);
    uint64_t v34 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
    sub_6B54(v34);
    int v36 = v35;
    uint64_t v37 = sub_19068();
    *int v36 = 0x6E656E6F706D6F63LL;
    v36[1] = 0xEA00000000007374LL;
    _OWORD v36[2] = v37;
    uint64_t v38 = sub_30944(v37, enum case for JSONError.missingProperty(_:));
    swift_willThrow(v38);
    sub_30960();
    v33(v94, v17);
  }

  else
  {
    uint64_t v39 = v33;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v31, v16, v26);
    uint64_t v40 = v26;
    JSONObject.subscript.getter(25705LL, 0xE200000000000000LL);
    uint64_t v41 = sub_3098C();
    uint64_t v43 = v42;
    sub_308F8(v3);
    if (v43)
    {
      uint64_t v77 = v27;
      uint64_t v78 = v39;
      unsigned __int8 v44 = v31;
      unsigned __int8 v45 = v88;
      *id v88 = v41;
      v45[1] = v43;
      char v46 = v80;
      JSONObject.subscript.getter(0xD000000000000011LL, 0x8000000000063440LL);
      uint64_t v47 = v82;
      uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
      v76(v82, v89, v90);
      uint64_t v48 = v83;
      uint64_t v49 = v84;
      ImpressionMetrics.init(deserializing:using:)(v46, v47);
      uint64_t v79 = v17;
      if (v49)
      {
        swift_errorRelease(v49);
        NSString v82 = 0LL;
        uint64_t v50 = 1LL;
      }

      else
      {
        uint64_t v50 = 0LL;
        NSString v82 = 0LL;
      }

      uint64_t v75 = v44;
      uint64_t v58 = type metadata accessor for ImpressionMetrics(0LL);
      sub_5FEC(v48, v50, 1LL, v58);
      uint64_t v59 = sub_19068();
      uint64_t v83 = (uint64_t)v45 + *(int *)(v59 + 20);
      sub_301E8(v48, v83);
      uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v77 + 16);
      uint64_t v61 = v81;
      uint64_t v84 = v40;
      v60(v81, v44, v40);
      uint64_t v62 = v86;
      uint64_t v64 = v89;
      uint64_t v63 = v90;
      uint64_t v65 = (void (*)(uint64_t, uint64_t, uint64_t))v76;
      v76(v86, v89, v90);
      unint64_t v66 = sub_30230();
      uint64_t v67 = Array<A>.init(tryDeserializing:using:)(v61, v62, &type metadata for PluginComponent, v66);
      uint64_t v68 = sub_28FA8(v67);
      swift_bridgeObjectRelease(v67);
      uint64_t v81 = v59;
      uint64_t v86 = (char *)*(int *)(v59 + 24);
      *(void *)&v86[(void)v45] = v68;
      uint64_t v69 = v63;
      uint64_t v70 = v85;
      JSONObject.subscript.getter(0x61746E6573657270LL, 0xEC0000006E6F6974LL);
      uint64_t v71 = v87;
      v65(v87, v64, v69);
      uint64_t v72 = v82;
      sub_2F534(v70, v71, &v92);
      sub_30930();
      sub_30994();
      sub_3091C();
      if (v72)
      {
        swift_bridgeObjectRelease(v45[1]);
        sub_3026C(v83, &qword_7CB00);
        swift_bridgeObjectRelease(*(void *)&v86[(void)v45]);
      }

      else
      {
        uint64_t v73 = (_OWORD *)((char *)v45 + *(int *)(v81 + 28));
        __int128 v74 = v93[0];
        *uint64_t v73 = v92;
        v73[1] = v74;
        *(_OWORD *)((char *)v73 + 25) = *(_OWORD *)((char *)v93 + 9);
      }
    }

    else
    {
      type metadata accessor for JSONError(0LL);
      uint64_t v51 = sub_98F0( (unint64_t *)&qword_7CAF0,  (uint64_t (*)(uint64_t))&type metadata accessor for JSONError,  (uint64_t)&protocol conformance descriptor for JSONError);
      uint64_t v52 = v27;
      uint64_t v53 = v31;
      sub_6B54(v51);
      uint64_t v55 = v54;
      uint64_t v56 = sub_19068();
      *uint64_t v55 = 25705LL;
      v55[1] = 0xE200000000000000LL;
      v55[2] = v56;
      uint64_t v57 = sub_30944(v56, enum case for JSONError.missingProperty(_:));
      swift_willThrow(v57);
      sub_30960();
      sub_308F8((uint64_t)v94);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v26);
    }
  }

  sub_6B3C();
}

void sub_2FE44(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = (int *)type metadata accessor for Shelf(0LL);
  uint64_t v9 = v8[6];
  uint64_t v10 = *(uint64_t *)((char *)v4 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    char v32 = a2;
    uint64_t v31 = a3;
    swift_bridgeObjectRetain_n(v10, 2LL);
    unint64_t v12 = 0LL;
    uint64_t v13 = 32LL;
    while (1)
    {
      sub_7A94((void *)(v10 + v13), *(void *)(v10 + v13 + 24));
      sub_30970();
      sub_7A94(a1, a1[3]);
      sub_30970();
      char v14 = static AnyHashable.== infix(_:_:)(v34, v33);
      sub_D6CC((uint64_t)v33);
      sub_D6CC((uint64_t)v34);
      if ((v14 & 1) != 0) {
        break;
      }
      ++v12;
      v13 += 40LL;
      if (v11 == v12)
      {
        sub_309A8();
        a3 = v31;
        if ((v32 & 1) != 0) {
          goto LABEL_8;
        }
LABEL_6:
        sub_309A8();
        sub_30418((uint64_t)v4, (uint64_t)a3);
        return;
      }
    }

    sub_309A8();
    LOBYTE(vswift_weakDestroy(v0 + 16) = swift_isUniquelyReferenced_nonNull_native(v10);
    if ((v32 & 1) != 0)
    {
      if ((v16 & 1) == 0)
      {
        sub_4FCE0();
        uint64_t v10 = v16;
      }

      if (v12 < *(void *)(v10 + 16)) {
        goto LABEL_21;
      }
      __break(1u);
    }

    if ((v16 & 1) == 0)
    {
      sub_4FCE0();
      uint64_t v10 = v30;
    }

    if (v12 >= *(void *)(v10 + 16))
    {
      __break(1u);
      return;
    }

uint64_t sub_300B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 28);
  char v4 = *(_BYTE *)(v3 + 2);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 32);
  char v7 = *(_BYTE *)(v3 + 40);
  *(_WORD *)a2 = *(_WORD *)v3;
  *(_BYTE *)(a2 + 2) = v4;
  *(void *)(a2 + 8) = v5;
  __int128 v8 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = v8;
  *(void *)(a2 + 32) = v6;
  *(_BYTE *)(a2 + 40) = v7;
  uint64_t v9 = v8;
  swift_bridgeObjectRetain(v6);
  return swift_bridgeObjectRetain(v9);
}

uint64_t sub_30114(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + *(int *)(a1 + 24)));
}

void sub_30120(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_30134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_30350(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_30144@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_30150()
{
  return sub_98F0(&qword_7E910, type metadata accessor for Shelf, (uint64_t)&unk_5ED98);
}

uint64_t sub_3017C()
{
  return sub_98F0(&qword_7E918, type metadata accessor for Shelf, (uint64_t)&unk_5ED60);
}

unint64_t sub_301AC()
{
  unint64_t result = qword_7E920;
  if (!qword_7E920)
  {
    unint64_t result = swift_getWitnessTable(&unk_5EEB0, &unk_73F10);
    atomic_store(result, (unint64_t *)&qword_7E920);
  }

  return result;
}

uint64_t sub_301E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7CB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_30230()
{
  unint64_t result = qword_7E928;
  if (!qword_7E928)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for PluginComponent,  &type metadata for PluginComponent);
    atomic_store(result, (unint64_t *)&qword_7E928);
  }

  return result;
}

uint64_t sub_3026C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_309F0();
  v4(v3);
  return a1;
}

unint64_t sub_3029C()
{
  unint64_t result = qword_7E930;
  if (!qword_7E930)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F0DC, &unk_740C0);
    atomic_store(result, (unint64_t *)&qword_7E930);
  }

  return result;
}

unint64_t sub_302D8()
{
  unint64_t result = qword_7E938;
  if (!qword_7E938)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F0A4, &unk_74030);
    atomic_store(result, (unint64_t *)&qword_7E938);
  }

  return result;
}

unint64_t sub_30314()
{
  unint64_t result = qword_7E940;
  if (!qword_7E940)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F06C, &unk_73FA0);
    atomic_store(result, (unint64_t *)&qword_7E940);
  }

  return result;
}

uint64_t sub_30350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7CB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_30398(uint64_t a1)
{
  if (a1 + 1 > *(void *)(*(void *)v1 + 24LL) >> 1)
  {
    sub_18AF4();
    *(void *)uint64_t v1 = v2;
  }

void sub_303D4()
{
  uint64_t v1 = *v0;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v0);
  *uint64_t v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18AF4();
    *uint64_t v0 = v3;
  }

  sub_6D3C();
}

uint64_t sub_30418(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void type metadata accessor for Shelf.Presentation.ToggleStyle()
{
}

uint64_t sub_30468(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_304B4 + 4 * byte_5ED05[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_304E8 + 4 * asc_5ED00[v4]))();
}

uint64_t sub_304E8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_304F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x304F8LL);
  }
  return result;
}

uint64_t sub_30504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x3050CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_30510(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_30518(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Shelf.Presentation.Axis()
{
}

uint64_t sub_30530(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_3057C + 4 * byte_5ED0F[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_305B0 + 4 * byte_5ED0A[v4]))();
}

uint64_t sub_305B0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_305B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x305C0LL);
  }
  return result;
}

uint64_t sub_305CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x305D4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_305D8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_305E0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Shelf.Presentation.Appearance()
{
}

uint64_t sub_305F8(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 32));
}

uint64_t sub_30620(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t sub_30674(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 sub_30700(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t sub_30714(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_30770(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t sub_307C4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 2sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 41) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + swift_weakDestroy(v0 + 16) = a2;
    }
  }

  return result;
}

void type metadata accessor for Shelf.Presentation()
{
}

unint64_t sub_30834()
{
  unint64_t result = qword_7E948;
  if (!qword_7E948)
  {
    unint64_t result = swift_getWitnessTable(&unk_5EF74, &unk_740C0);
    atomic_store(result, (unint64_t *)&qword_7E948);
  }

  return result;
}

unint64_t sub_30874()
{
  unint64_t result = qword_7E950;
  if (!qword_7E950)
  {
    unint64_t result = swift_getWitnessTable(&unk_5EFDC, &unk_74030);
    atomic_store(result, (unint64_t *)&qword_7E950);
  }

  return result;
}

unint64_t sub_308B4()
{
  unint64_t result = qword_7E958;
  if (!qword_7E958)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F044, &unk_73FA0);
    atomic_store(result, (unint64_t *)&qword_7E958);
  }

  return result;
}

uint64_t sub_308F8(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t sub_30900(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 - 8) + 8LL))(*(void *)(v1 - 104), a1);
}

uint64_t sub_30914(uint64_t a1, uint64_t a2)
{
  return JSONObject.subscript.getter(a1, a2);
}

uint64_t sub_3091C()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v1 - 272), *(void *)(v1 - 200));
}

uint64_t sub_30930()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 144) + 8LL))(v1, v0);
}

uint64_t sub_30944(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 104LL))(v3, a2, v2);
}

  ;
}

uint64_t sub_30960()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 144) + 8LL))( *(void *)(v0 - 160),  *(void *)(v0 - 152));
}

uint64_t sub_30970()
{
  return dispatch thunk of ComponentModel.id.getter(v0, v1);
}

  ;
}

uint64_t sub_3098C()
{
  return JSONObject.string.getter();
}

uint64_t sub_30994()
{
  return (*(uint64_t (**)(uint64_t, void))(v1 - 248))(v0, *(void *)(v1 - 240));
}

uint64_t sub_309A0()
{
  return JSONObject.stringEnum<A>()();
}

uint64_t sub_309A8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_309B0()
{
  return *v0;
}

uint64_t sub_309BC()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_309C8()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

void sub_309E4()
{
}

uint64_t sub_309F0()
{
  return v0;
}

uint64_t sub_30A04(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_30A50 + 4 * byte_5F125[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_30A84 + 4 * byte_5F120[v4]))();
}

uint64_t sub_30A84(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_30A8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x30A94LL);
  }
  return result;
}

uint64_t sub_30AA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x30AA8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_30AAC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_30AB4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s13NavigationBarV10AppearanceOMa()
{
}

uint64_t sub_30ACC(void *a1)
{
  uint64_t v2 = a1[1];
  if (v2 != 1)
  {
    swift_bridgeObjectRelease(v2);
    uint64_t v3 = a1[4];
    if (v3 != 1)
    {
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(a1[6]);
      swift_bridgeObjectRelease(a1[8]);
    }

    swift_release();
    if (a1[13]) {
      sub_62AC(a1 + 10);
    }
    swift_bridgeObjectRelease(a1[17]);
  }

  uint64_t v4 = a1[20];
  if (v4 != 1)
  {
    swift_bridgeObjectRelease(v4);
    uint64_t v5 = a1[23];
    if (v5 != 1)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(a1[25]);
      swift_bridgeObjectRelease(a1[27]);
    }

    swift_release();
    if (a1[32]) {
      sub_62AC(a1 + 29);
    }
    swift_bridgeObjectRelease(a1[36]);
  }

  uint64_t v6 = a1[39];
  if (v6 != 1)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v7 = a1[42];
    if (v7 != 1)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(a1[44]);
      swift_bridgeObjectRelease(a1[46]);
    }

    swift_release();
    if (a1[51]) {
      sub_62AC(a1 + 48);
    }
    swift_bridgeObjectRelease(a1[55]);
  }

  swift_bridgeObjectRelease(a1[56]);
  uint64_t v8 = a1[58];
  if (v8 != 1)
  {
    swift_bridgeObjectRelease(v8);
    uint64_t v9 = a1[61];
    if (v9 != 1)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(a1[63]);
      swift_bridgeObjectRelease(a1[65]);
    }

    swift_release();
    if (a1[70]) {
      sub_62AC(a1 + 67);
    }
    swift_bridgeObjectRelease(a1[74]);
  }

  return swift_bridgeObjectRelease(a1[77]);
}

char *sub_30C34(char *__dst, char *__src)
{
  uint64_t v4 = *((void *)__src + 1);
  if (v4 == 1)
  {
    memcpy(__dst, __src, 0x90uLL);
  }

  else
  {
    *(void *)__dst = *(void *)__src;
    *((void *)__dst + 1) = v4;
    __dst[16] = __src[16];
    uint64_t v5 = *((void *)__src + 4);
    swift_bridgeObjectRetain(v4);
    if (v5 == 1)
    {
      __int128 v6 = *(_OWORD *)(__src + 40);
      *(_OWORD *)(__dst + 2sub_62AC(v0 + 4) = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 40) = v6;
      *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 56);
    }

    else
    {
      *((void *)__dst + 3) = *((void *)__src + 3);
      *((void *)__dst + sub_62AC(v0 + 4) = v5;
      uint64_t v7 = *((void *)__src + 6);
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = v7;
      uint64_t v8 = *((void *)__src + 8);
      *((void *)__dst + 7) = *((void *)__src + 7);
      *((void *)__dst + 8) = v8;
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
    }

    uint64_t v9 = *((void *)__src + 9);
    *((void *)__dst + 9) = v9;
    uint64_t v10 = *((void *)__src + 13);
    swift_retain(v9);
    if (v10)
    {
      uint64_t v11 = *((void *)__src + 14);
      *((void *)__dst + 13) = v10;
      *((void *)__dst + 1sub_62AC(v0 + 4) = v11;
      (**(void (***)(char *, char *, uint64_t))(v10 - 8))(__dst + 80, __src + 80, v10);
    }

    else
    {
      __int128 v12 = *((_OWORD *)__src + 6);
      *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 6) = v12;
      *((void *)__dst + 1sub_62AC(v0 + 4) = *((void *)__src + 14);
    }

    __dst[120] = __src[120];
    uint64_t v13 = *((void *)__src + 17);
    *((void *)__dst + swift_weakDestroy(v0 + 16) = *((void *)__src + 16);
    *((void *)__dst + 17) = v13;
    swift_bridgeObjectRetain(v13);
  }

  __dst[144] = __src[144];
  uint64_t v14 = *((void *)__src + 20);
  if (v14 == 1)
  {
    memcpy(__dst + 152, __src + 152, 0x90uLL);
  }

  else
  {
    *((void *)__dst + 19) = *((void *)__src + 19);
    *((void *)__dst + 20) = v14;
    __dst[168] = __src[168];
    uint64_t v15 = *((void *)__src + 23);
    swift_bridgeObjectRetain(v14);
    if (v15 == 1)
    {
      __int128 v16 = *((_OWORD *)__src + 12);
      *((_OWORD *)__dst + 11) = *((_OWORD *)__src + 11);
      *((_OWORD *)__dst + 12) = v16;
      *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
    }

    else
    {
      *((void *)__dst + 22) = *((void *)__src + 22);
      *((void *)__dst + 23) = v15;
      uint64_t v17 = *((void *)__src + 25);
      *((void *)__dst + 2sub_62AC(v0 + 4) = *((void *)__src + 24);
      *((void *)__dst + 25) = v17;
      uint64_t v18 = *((void *)__src + 27);
      *((void *)__dst + 26) = *((void *)__src + 26);
      *((void *)__dst + 27) = v18;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
    }

    uint64_t v19 = *((void *)__src + 28);
    *((void *)__dst + 28) = v19;
    uint64_t v20 = *((void *)__src + 32);
    swift_retain(v19);
    if (v20)
    {
      uint64_t v21 = *((void *)__src + 33);
      *((void *)__dst + 32) = v20;
      *((void *)__dst + 33) = v21;
      (**(void (***)(char *, char *, uint64_t))(v20 - 8))(__dst + 232, __src + 232, v20);
    }

    else
    {
      __int128 v22 = *(_OWORD *)(__src + 248);
      *(_OWORD *)(__dst + 232) = *(_OWORD *)(__src + 232);
      *(_OWORD *)(__dst + 248) = v22;
      *((void *)__dst + 33) = *((void *)__src + 33);
    }

    __dst[272] = __src[272];
    uint64_t v23 = *((void *)__src + 36);
    *((void *)__dst + 35) = *((void *)__src + 35);
    *((void *)__dst + 36) = v23;
    swift_bridgeObjectRetain(v23);
  }

  __dst[296] = __src[296];
  uint64_t v24 = *((void *)__src + 39);
  if (v24 == 1)
  {
    memcpy(__dst + 304, __src + 304, 0x90uLL);
  }

  else
  {
    *((void *)__dst + 38) = *((void *)__src + 38);
    *((void *)__dst + 39) = v24;
    __dst[320] = __src[320];
    uint64_t v25 = *((void *)__src + 42);
    swift_bridgeObjectRetain(v24);
    if (v25 == 1)
    {
      __int128 v26 = *(_OWORD *)(__src + 344);
      *(_OWORD *)(__dst + 328) = *(_OWORD *)(__src + 328);
      *(_OWORD *)(__dst + 34sub_62AC(v0 + 4) = v26;
      *(_OWORD *)(__dst + 360) = *(_OWORD *)(__src + 360);
    }

    else
    {
      *((void *)__dst + 41) = *((void *)__src + 41);
      *((void *)__dst + 42) = v25;
      uint64_t v27 = *((void *)__src + 44);
      *((void *)__dst + 43) = *((void *)__src + 43);
      *((void *)__dst + 4sub_62AC(v0 + 4) = v27;
      uint64_t v28 = *((void *)__src + 46);
      *((void *)__dst + 45) = *((void *)__src + 45);
      *((void *)__dst + 46) = v28;
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRetain(v28);
    }

    uint64_t v29 = *((void *)__src + 47);
    *((void *)__dst + 47) = v29;
    uint64_t v30 = *((void *)__src + 51);
    swift_retain(v29);
    if (v30)
    {
      uint64_t v31 = *((void *)__src + 52);
      *((void *)__dst + 51) = v30;
      *((void *)__dst + 52) = v31;
      (**(void (***)(char *, char *, uint64_t))(v30 - 8))(__dst + 384, __src + 384, v30);
    }

    else
    {
      __int128 v32 = *((_OWORD *)__src + 25);
      *((_OWORD *)__dst + 2sub_62AC(v0 + 4) = *((_OWORD *)__src + 24);
      *((_OWORD *)__dst + 25) = v32;
      *((void *)__dst + 52) = *((void *)__src + 52);
    }

    __dst[424] = __src[424];
    uint64_t v33 = *((void *)__src + 55);
    *((void *)__dst + 5sub_62AC(v0 + 4) = *((void *)__src + 54);
    *((void *)__dst + 55) = v33;
    swift_bridgeObjectRetain(v33);
  }

  uint64_t v34 = *((void *)__src + 56);
  *((void *)__dst + 56) = v34;
  uint64_t v35 = *((void *)__src + 58);
  swift_bridgeObjectRetain(v34);
  if (v35 == 1)
  {
    memcpy(__dst + 456, __src + 456, 0x90uLL);
  }

  else
  {
    *((void *)__dst + 57) = *((void *)__src + 57);
    *((void *)__dst + 58) = v35;
    __dst[472] = __src[472];
    uint64_t v36 = *((void *)__src + 61);
    swift_bridgeObjectRetain(v35);
    if (v36 == 1)
    {
      __int128 v37 = *((_OWORD *)__src + 31);
      *((_OWORD *)__dst + 30) = *((_OWORD *)__src + 30);
      *((_OWORD *)__dst + 31) = v37;
      *((_OWORD *)__dst + 32) = *((_OWORD *)__src + 32);
    }

    else
    {
      *((void *)__dst + 60) = *((void *)__src + 60);
      *((void *)__dst + 61) = v36;
      uint64_t v38 = *((void *)__src + 63);
      *((void *)__dst + 62) = *((void *)__src + 62);
      *((void *)__dst + 63) = v38;
      *((void *)__dst + 6sub_62AC(v0 + 4) = *((void *)__src + 64);
      uint64_t v39 = *((void *)__src + 65);
      *((void *)__dst + 65) = v39;
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRetain(v39);
    }

    uint64_t v40 = *((void *)__src + 66);
    *((void *)__dst + 66) = v40;
    uint64_t v41 = *((void *)__src + 70);
    swift_retain(v40);
    if (v41)
    {
      *((void *)__dst + 70) = v41;
      *((void *)__dst + 71) = *((void *)__src + 71);
      (**(void (***)(char *, char *, uint64_t))(v41 - 8))(__dst + 536, __src + 536, v41);
    }

    else
    {
      __int128 v42 = *(_OWORD *)(__src + 552);
      *(_OWORD *)(__dst + 536) = *(_OWORD *)(__src + 536);
      *(_OWORD *)(__dst + 552) = v42;
      *((void *)__dst + 71) = *((void *)__src + 71);
    }

    __dst[576] = __src[576];
    *((void *)__dst + 73) = *((void *)__src + 73);
    uint64_t v43 = *((void *)__src + 74);
    *((void *)__dst + 7sub_62AC(v0 + 4) = v43;
    swift_bridgeObjectRetain(v43);
  }

  __dst[600] = __src[600];
  *((void *)__dst + 76) = *((void *)__src + 76);
  uint64_t v44 = *((void *)__src + 77);
  *((void *)__dst + 77) = v44;
  swift_bridgeObjectRetain(v44);
  return __dst;
}

char *sub_3107C(char *__dst, char *__src)
{
  uint64_t v4 = *((void *)__dst + 1);
  uint64_t v5 = *((void *)__src + 1);
  if (v4 != 1)
  {
    if (v5 == 1)
    {
      sub_31D1C((uint64_t)__dst);
      goto LABEL_7;
    }

    *(void *)__dst = *(void *)__src;
    uint64_t v10 = *((void *)__src + 1);
    *((void *)__dst + 1) = v10;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRelease(v4);
    __dst[16] = __src[16];
    uint64_t v11 = (__int128 *)(__dst + 24);
    __int128 v12 = (__int128 *)(__src + 24);
    uint64_t v13 = *((void *)__dst + 4);
    uint64_t v14 = *((void *)__src + 4);
    if (v13 == 1)
    {
      if (v14 == 1)
      {
        __int128 v15 = *v12;
        __int128 v16 = *(_OWORD *)(__src + 56);
        *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
        *(_OWORD *)(__dst + 56) = v16;
        __int128 *v11 = v15;
      }

      else
      {
        *((void *)__dst + 3) = *((void *)__src + 3);
        uint64_t v27 = *((void *)__src + 4);
        *((void *)__dst + sub_62AC(v0 + 4) = v27;
        *((void *)__dst + 5) = *((void *)__src + 5);
        uint64_t v28 = *((void *)__src + 6);
        *((void *)__dst + 6) = v28;
        *((void *)__dst + 7) = *((void *)__src + 7);
        uint64_t v29 = *((void *)__src + 8);
        *((void *)__dst + 8) = v29;
        swift_bridgeObjectRetain(v27);
        swift_bridgeObjectRetain(v28);
        swift_bridgeObjectRetain(v29);
      }
    }

    else if (v14 == 1)
    {
      sub_2B168((void *)__dst + 3);
      __int128 v23 = *(_OWORD *)(__src + 40);
      __int128 v22 = *(_OWORD *)(__src + 56);
      __int128 *v11 = *v12;
      *(_OWORD *)(__dst + 40) = v23;
      *(_OWORD *)(__dst + 56) = v22;
    }

    else
    {
      *((void *)__dst + 3) = *((void *)__src + 3);
      uint64_t v30 = *((void *)__src + 4);
      *((void *)__dst + sub_62AC(v0 + 4) = v30;
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRelease(v13);
      *((void *)__dst + 5) = *((void *)__src + 5);
      uint64_t v31 = *((void *)__src + 6);
      uint64_t v32 = *((void *)__dst + 6);
      *((void *)__dst + 6) = v31;
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRelease(v32);
      *((void *)__dst + 7) = *((void *)__src + 7);
      uint64_t v33 = *((void *)__src + 8);
      uint64_t v34 = *((void *)__dst + 8);
      *((void *)__dst + 8) = v33;
      swift_bridgeObjectRetain(v33);
      swift_bridgeObjectRelease(v34);
    }

    uint64_t v35 = *((void *)__src + 9);
    *((void *)__dst + 9) = v35;
    swift_retain(v35);
    swift_release();
    uint64_t v36 = *((void *)__src + 13);
    if (*((void *)__dst + 13))
    {
      if (v36)
      {
        sub_6520((void *)__dst + 10, (void *)__src + 10);
LABEL_27:
        __dst[120] = __src[120];
        *((void *)__dst + swift_weakDestroy(v0 + 16) = *((void *)__src + 16);
        uint64_t v39 = *((void *)__src + 17);
        uint64_t v40 = *((void *)__dst + 17);
        *((void *)__dst + 17) = v39;
        swift_bridgeObjectRetain(v39);
        swift_bridgeObjectRelease(v40);
        goto LABEL_28;
      }

      sub_62AC((void *)__dst + 10);
    }

    else if (v36)
    {
      *((void *)__dst + 13) = v36;
      *((void *)__dst + 1sub_62AC(v0 + 4) = *((void *)__src + 14);
      (**(void (***)(char *, char *))(v36 - 8))(__dst + 80, __src + 80);
      goto LABEL_27;
    }

    __int128 v37 = *((_OWORD *)__src + 5);
    __int128 v38 = *((_OWORD *)__src + 6);
    *((void *)__dst + 1sub_62AC(v0 + 4) = *((void *)__src + 14);
    *((_OWORD *)__dst + 5) = v37;
    *((_OWORD *)__dst + 6) = v38;
    goto LABEL_27;
  }

  if (v5 == 1)
  {
LABEL_7:
    memcpy(__dst, __src, 0x90uLL);
    goto LABEL_28;
  }

  *(void *)__dst = *(void *)__src;
  uint64_t v6 = *((void *)__src + 1);
  *((void *)__dst + 1) = v6;
  __dst[16] = __src[16];
  uint64_t v7 = *((void *)__src + 4);
  swift_bridgeObjectRetain(v6);
  if (v7 == 1)
  {
    __int128 v8 = *(_OWORD *)(__src + 24);
    __int128 v9 = *(_OWORD *)(__src + 56);
    *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
    *(_OWORD *)(__dst + 56) = v9;
    *(_OWORD *)(__dst + 2sub_62AC(v0 + 4) = v8;
  }

  else
  {
    *((void *)__dst + 3) = *((void *)__src + 3);
    uint64_t v17 = *((void *)__src + 4);
    *((void *)__dst + sub_62AC(v0 + 4) = v17;
    *((void *)__dst + 5) = *((void *)__src + 5);
    uint64_t v18 = *((void *)__src + 6);
    *((void *)__dst + 6) = v18;
    *((void *)__dst + 7) = *((void *)__src + 7);
    uint64_t v19 = *((void *)__src + 8);
    *((void *)__dst + 8) = v19;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
  }

  uint64_t v20 = *((void *)__src + 9);
  *((void *)__dst + 9) = v20;
  uint64_t v21 = *((void *)__src + 13);
  swift_retain(v20);
  if (v21)
  {
    *((void *)__dst + 13) = v21;
    *((void *)__dst + 1sub_62AC(v0 + 4) = *((void *)__src + 14);
    (**(void (***)(char *, char *, uint64_t))(v21 - 8))(__dst + 80, __src + 80, v21);
  }

  else
  {
    __int128 v24 = *((_OWORD *)__src + 5);
    __int128 v25 = *((_OWORD *)__src + 6);
    *((void *)__dst + 1sub_62AC(v0 + 4) = *((void *)__src + 14);
    *((_OWORD *)__dst + 5) = v24;
    *((_OWORD *)__dst + 6) = v25;
  }

  __dst[120] = __src[120];
  *((void *)__dst + swift_weakDestroy(v0 + 16) = *((void *)__src + 16);
  uint64_t v26 = *((void *)__src + 17);
  *((void *)__dst + 17) = v26;
  swift_bridgeObjectRetain(v26);
LABEL_28:
  __dst[144] = __src[144];
  uint64_t v41 = *((void *)__dst + 20);
  uint64_t v42 = *((void *)__src + 20);
  if (v41 != 1)
  {
    if (v42 == 1)
    {
      sub_31D1C((uint64_t)(__dst + 152));
      goto LABEL_34;
    }

    *((void *)__dst + 19) = *((void *)__src + 19);
    uint64_t v47 = *((void *)__src + 20);
    *((void *)__dst + 20) = v47;
    swift_bridgeObjectRetain(v47);
    swift_bridgeObjectRelease(v41);
    __dst[168] = __src[168];
    uint64_t v48 = (__int128 *)(__dst + 176);
    uint64_t v49 = (__int128 *)(__src + 176);
    uint64_t v50 = *((void *)__dst + 23);
    uint64_t v51 = *((void *)__src + 23);
    if (v50 == 1)
    {
      if (v51 == 1)
      {
        __int128 v52 = *v49;
        __int128 v53 = *((_OWORD *)__src + 13);
        *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
        *((_OWORD *)__dst + 13) = v53;
        *uint64_t v48 = v52;
      }

      else
      {
        *((void *)__dst + 22) = *((void *)__src + 22);
        uint64_t v64 = *((void *)__src + 23);
        *((void *)__dst + 23) = v64;
        *((void *)__dst + 2sub_62AC(v0 + 4) = *((void *)__src + 24);
        uint64_t v65 = *((void *)__src + 25);
        *((void *)__dst + 25) = v65;
        *((void *)__dst + 26) = *((void *)__src + 26);
        uint64_t v66 = *((void *)__src + 27);
        *((void *)__dst + 27) = v66;
        swift_bridgeObjectRetain(v64);
        swift_bridgeObjectRetain(v65);
        swift_bridgeObjectRetain(v66);
      }
    }

    else if (v51 == 1)
    {
      sub_2B168((void *)__dst + 22);
      __int128 v60 = *((_OWORD *)__src + 12);
      __int128 v59 = *((_OWORD *)__src + 13);
      *uint64_t v48 = *v49;
      *((_OWORD *)__dst + 12) = v60;
      *((_OWORD *)__dst + 13) = v59;
    }

    else
    {
      *((void *)__dst + 22) = *((void *)__src + 22);
      uint64_t v67 = *((void *)__src + 23);
      *((void *)__dst + 23) = v67;
      swift_bridgeObjectRetain(v67);
      swift_bridgeObjectRelease(v50);
      *((void *)__dst + 2sub_62AC(v0 + 4) = *((void *)__src + 24);
      uint64_t v68 = *((void *)__src + 25);
      uint64_t v69 = *((void *)__dst + 25);
      *((void *)__dst + 25) = v68;
      swift_bridgeObjectRetain(v68);
      swift_bridgeObjectRelease(v69);
      *((void *)__dst + 26) = *((void *)__src + 26);
      uint64_t v70 = *((void *)__src + 27);
      uint64_t v71 = *((void *)__dst + 27);
      *((void *)__dst + 27) = v70;
      swift_bridgeObjectRetain(v70);
      swift_bridgeObjectRelease(v71);
    }

    uint64_t v72 = *((void *)__src + 28);
    *((void *)__dst + 28) = v72;
    swift_retain(v72);
    swift_release();
    uint64_t v73 = *((void *)__src + 32);
    if (*((void *)__dst + 32))
    {
      if (v73)
      {
        sub_6520((void *)__dst + 29, (void *)__src + 29);
LABEL_54:
        __dst[272] = __src[272];
        *((void *)__dst + 35) = *((void *)__src + 35);
        uint64_t v76 = *((void *)__src + 36);
        uint64_t v77 = *((void *)__dst + 36);
        *((void *)__dst + 36) = v76;
        swift_bridgeObjectRetain(v76);
        swift_bridgeObjectRelease(v77);
        goto LABEL_55;
      }

      sub_62AC((void *)__dst + 29);
    }

    else if (v73)
    {
      *((void *)__dst + 32) = v73;
      *((void *)__dst + 33) = *((void *)__src + 33);
      (**(void (***)(char *, char *))(v73 - 8))(__dst + 232, __src + 232);
      goto LABEL_54;
    }

    __int128 v74 = *(_OWORD *)(__src + 232);
    __int128 v75 = *(_OWORD *)(__src + 248);
    *((void *)__dst + 33) = *((void *)__src + 33);
    *(_OWORD *)(__dst + 232) = v74;
    *(_OWORD *)(__dst + 248) = v75;
    goto LABEL_54;
  }

  if (v42 == 1)
  {
LABEL_34:
    memcpy(__dst + 152, __src + 152, 0x90uLL);
    goto LABEL_55;
  }

  *((void *)__dst + 19) = *((void *)__src + 19);
  uint64_t v43 = *((void *)__src + 20);
  *((void *)__dst + 20) = v43;
  __dst[168] = __src[168];
  uint64_t v44 = *((void *)__src + 23);
  swift_bridgeObjectRetain(v43);
  if (v44 == 1)
  {
    __int128 v45 = *((_OWORD *)__src + 11);
    __int128 v46 = *((_OWORD *)__src + 13);
    *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
    *((_OWORD *)__dst + 13) = v46;
    *((_OWORD *)__dst + 11) = v45;
  }

  else
  {
    *((void *)__dst + 22) = *((void *)__src + 22);
    uint64_t v54 = *((void *)__src + 23);
    *((void *)__dst + 23) = v54;
    *((void *)__dst + 2sub_62AC(v0 + 4) = *((void *)__src + 24);
    uint64_t v55 = *((void *)__src + 25);
    *((void *)__dst + 25) = v55;
    *((void *)__dst + 26) = *((void *)__src + 26);
    uint64_t v56 = *((void *)__src + 27);
    *((void *)__dst + 27) = v56;
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v56);
  }

  uint64_t v57 = *((void *)__src + 28);
  *((void *)__dst + 28) = v57;
  uint64_t v58 = *((void *)__src + 32);
  swift_retain(v57);
  if (v58)
  {
    *((void *)__dst + 32) = v58;
    *((void *)__dst + 33) = *((void *)__src + 33);
    (**(void (***)(char *, char *, uint64_t))(v58 - 8))(__dst + 232, __src + 232, v58);
  }

  else
  {
    __int128 v61 = *(_OWORD *)(__src + 232);
    __int128 v62 = *(_OWORD *)(__src + 248);
    *((void *)__dst + 33) = *((void *)__src + 33);
    *(_OWORD *)(__dst + 232) = v61;
    *(_OWORD *)(__dst + 248) = v62;
  }

  __dst[272] = __src[272];
  *((void *)__dst + 35) = *((void *)__src + 35);
  uint64_t v63 = *((void *)__src + 36);
  *((void *)__dst + 36) = v63;
  swift_bridgeObjectRetain(v63);
LABEL_55:
  uint64_t v78 = __src + 320;
  __dst[296] = __src[296];
  uint64_t v79 = *((void *)__dst + 39);
  uint64_t v80 = *((void *)__src + 39);
  if (v79 != 1)
  {
    if (v80 == 1)
    {
      sub_2A9EC((uint64_t)(__dst + 304));
      goto LABEL_61;
    }

    *((void *)__dst + 38) = *((void *)__src + 38);
    uint64_t v85 = *((void *)__src + 39);
    *((void *)__dst + 39) = v85;
    swift_bridgeObjectRetain(v85);
    swift_bridgeObjectRelease(v79);
    __dst[320] = *v78;
    uint64_t v86 = (__int128 *)(__dst + 328);
    uint64_t v87 = (__int128 *)(__src + 328);
    uint64_t v88 = *((void *)__dst + 42);
    uint64_t v89 = *((void *)__src + 42);
    if (v88 == 1)
    {
      if (v89 == 1)
      {
        __int128 v90 = *v87;
        __int128 v91 = *(_OWORD *)(__src + 360);
        *(_OWORD *)(__dst + 34sub_62AC(v0 + 4) = *(_OWORD *)(__src + 344);
        *(_OWORD *)(__dst + 360) = v91;
        *uint64_t v86 = v90;
      }

      else
      {
        *((void *)__dst + 41) = *((void *)__src + 41);
        uint64_t v102 = *((void *)__src + 42);
        *((void *)__dst + 42) = v102;
        *((void *)__dst + 43) = *((void *)__src + 43);
        uint64_t v103 = *((void *)__src + 44);
        *((void *)__dst + 4sub_62AC(v0 + 4) = v103;
        *((void *)__dst + 45) = *((void *)__src + 45);
        uint64_t v104 = *((void *)__src + 46);
        *((void *)__dst + 46) = v104;
        swift_bridgeObjectRetain(v102);
        swift_bridgeObjectRetain(v103);
        swift_bridgeObjectRetain(v104);
      }
    }

    else if (v89 == 1)
    {
      sub_2B168((void *)__dst + 41);
      __int128 v98 = *(_OWORD *)(__src + 344);
      __int128 v97 = *(_OWORD *)(__src + 360);
      *uint64_t v86 = *v87;
      *(_OWORD *)(__dst + 34sub_62AC(v0 + 4) = v98;
      *(_OWORD *)(__dst + 360) = v97;
    }

    else
    {
      *((void *)__dst + 41) = *((void *)__src + 41);
      uint64_t v105 = *((void *)__src + 42);
      *((void *)__dst + 42) = v105;
      swift_bridgeObjectRetain(v105);
      swift_bridgeObjectRelease(v88);
      *((void *)__dst + 43) = *((void *)__src + 43);
      uint64_t v106 = *((void *)__src + 44);
      uint64_t v107 = *((void *)__dst + 44);
      *((void *)__dst + 4sub_62AC(v0 + 4) = v106;
      swift_bridgeObjectRetain(v106);
      swift_bridgeObjectRelease(v107);
      *((void *)__dst + 45) = *((void *)__src + 45);
      uint64_t v108 = *((void *)__src + 46);
      uint64_t v109 = *((void *)__dst + 46);
      *((void *)__dst + 46) = v108;
      swift_bridgeObjectRetain(v108);
      swift_bridgeObjectRelease(v109);
    }

    uint64_t v110 = *((void *)__src + 47);
    *((void *)__dst + 47) = v110;
    swift_retain(v110);
    swift_release();
    uint64_t v111 = *((void *)__src + 51);
    if (*((void *)__dst + 51))
    {
      if (v111)
      {
        sub_6520((void *)__dst + 48, (void *)__src + 48);
LABEL_81:
        __dst[424] = __src[424];
        *((void *)__dst + 5sub_62AC(v0 + 4) = *((void *)__src + 54);
        uint64_t v114 = *((void *)__src + 55);
        uint64_t v115 = *((void *)__dst + 55);
        *((void *)__dst + 55) = v114;
        swift_bridgeObjectRetain(v114);
        swift_bridgeObjectRelease(v115);
        goto LABEL_82;
      }

      sub_62AC((void *)__dst + 48);
    }

    else if (v111)
    {
      *((void *)__dst + 51) = v111;
      *((void *)__dst + 52) = *((void *)__src + 52);
      (**(void (***)(char *, char *))(v111 - 8))(__dst + 384, __src + 384);
      goto LABEL_81;
    }

    __int128 v112 = *((_OWORD *)__src + 24);
    __int128 v113 = *((_OWORD *)__src + 25);
    *((void *)__dst + 52) = *((void *)__src + 52);
    *((_OWORD *)__dst + 2sub_62AC(v0 + 4) = v112;
    *((_OWORD *)__dst + 25) = v113;
    goto LABEL_81;
  }

  if (v80 == 1)
  {
LABEL_61:
    memcpy(__dst + 304, __src + 304, 0x90uLL);
    goto LABEL_82;
  }

  *((void *)__dst + 38) = *((void *)__src + 38);
  uint64_t v81 = *((void *)__src + 39);
  *((void *)__dst + 39) = v81;
  __dst[320] = *v78;
  uint64_t v82 = *((void *)__src + 42);
  swift_bridgeObjectRetain(v81);
  if (v82 == 1)
  {
    __int128 v83 = *(_OWORD *)(__src + 328);
    __int128 v84 = *(_OWORD *)(__src + 360);
    *(_OWORD *)(__dst + 34sub_62AC(v0 + 4) = *(_OWORD *)(__src + 344);
    *(_OWORD *)(__dst + 360) = v84;
    *(_OWORD *)(__dst + 328) = v83;
  }

  else
  {
    *((void *)__dst + 41) = *((void *)__src + 41);
    uint64_t v92 = *((void *)__src + 42);
    *((void *)__dst + 42) = v92;
    *((void *)__dst + 43) = *((void *)__src + 43);
    uint64_t v93 = *((void *)__src + 44);
    *((void *)__dst + 4sub_62AC(v0 + 4) = v93;
    *((void *)__dst + 45) = *((void *)__src + 45);
    uint64_t v94 = *((void *)__src + 46);
    *((void *)__dst + 46) = v94;
    swift_bridgeObjectRetain(v92);
    swift_bridgeObjectRetain(v93);
    swift_bridgeObjectRetain(v94);
  }

  uint64_t v95 = *((void *)__src + 47);
  *((void *)__dst + 47) = v95;
  uint64_t v96 = *((void *)__src + 51);
  swift_retain(v95);
  if (v96)
  {
    *((void *)__dst + 51) = v96;
    *((void *)__dst + 52) = *((void *)__src + 52);
    (**(void (***)(char *, char *, uint64_t))(v96 - 8))(__dst + 384, __src + 384, v96);
  }

  else
  {
    __int128 v99 = *((_OWORD *)__src + 24);
    __int128 v100 = *((_OWORD *)__src + 25);
    *((void *)__dst + 52) = *((void *)__src + 52);
    *((_OWORD *)__dst + 2sub_62AC(v0 + 4) = v99;
    *((_OWORD *)__dst + 25) = v100;
  }

  __dst[424] = __src[424];
  *((void *)__dst + 5sub_62AC(v0 + 4) = *((void *)__src + 54);
  uint64_t v101 = *((void *)__src + 55);
  *((void *)__dst + 55) = v101;
  swift_bridgeObjectRetain(v101);
LABEL_82:
  uint64_t v116 = *((void *)__dst + 56);
  uint64_t v117 = *((void *)__src + 56);
  *((void *)__dst + 56) = v117;
  swift_bridgeObjectRetain(v117);
  swift_bridgeObjectRelease(v116);
  uint64_t v118 = *((void *)__dst + 58);
  uint64_t v119 = *((void *)__src + 58);
  if (v118 != 1)
  {
    if (v119 == 1)
    {
      sub_2A9EC((uint64_t)(__dst + 456));
      goto LABEL_88;
    }

    *((void *)__dst + 57) = *((void *)__src + 57);
    uint64_t v124 = *((void *)__src + 58);
    *((void *)__dst + 58) = v124;
    swift_bridgeObjectRetain(v124);
    swift_bridgeObjectRelease(v118);
    __dst[472] = __src[472];
    v125 = (__int128 *)(__dst + 480);
    v126 = (__int128 *)(__src + 480);
    uint64_t v127 = *((void *)__dst + 61);
    uint64_t v128 = *((void *)__src + 61);
    if (v127 == 1)
    {
      if (v128 == 1)
      {
        __int128 v129 = *v126;
        __int128 v130 = *((_OWORD *)__src + 32);
        *((_OWORD *)__dst + 31) = *((_OWORD *)__src + 31);
        *((_OWORD *)__dst + 32) = v130;
        __int128 *v125 = v129;
      }

      else
      {
        *((void *)__dst + 60) = *((void *)__src + 60);
        uint64_t v141 = *((void *)__src + 61);
        *((void *)__dst + 61) = v141;
        *((void *)__dst + 62) = *((void *)__src + 62);
        uint64_t v142 = *((void *)__src + 63);
        *((void *)__dst + 63) = v142;
        *((void *)__dst + 6sub_62AC(v0 + 4) = *((void *)__src + 64);
        uint64_t v143 = *((void *)__src + 65);
        *((void *)__dst + 65) = v143;
        swift_bridgeObjectRetain(v141);
        swift_bridgeObjectRetain(v142);
        swift_bridgeObjectRetain(v143);
      }
    }

    else if (v128 == 1)
    {
      sub_2B168((void *)__dst + 60);
      __int128 v137 = *((_OWORD *)__src + 31);
      __int128 v136 = *((_OWORD *)__src + 32);
      __int128 *v125 = *v126;
      *((_OWORD *)__dst + 31) = v137;
      *((_OWORD *)__dst + 32) = v136;
    }

    else
    {
      *((void *)__dst + 60) = *((void *)__src + 60);
      uint64_t v144 = *((void *)__src + 61);
      *((void *)__dst + 61) = v144;
      swift_bridgeObjectRetain(v144);
      swift_bridgeObjectRelease(v127);
      *((void *)__dst + 62) = *((void *)__src + 62);
      uint64_t v145 = *((void *)__src + 63);
      uint64_t v146 = *((void *)__dst + 63);
      *((void *)__dst + 63) = v145;
      swift_bridgeObjectRetain(v145);
      swift_bridgeObjectRelease(v146);
      *((void *)__dst + 6sub_62AC(v0 + 4) = *((void *)__src + 64);
      uint64_t v147 = *((void *)__src + 65);
      uint64_t v148 = *((void *)__dst + 65);
      *((void *)__dst + 65) = v147;
      swift_bridgeObjectRetain(v147);
      swift_bridgeObjectRelease(v148);
    }

    uint64_t v149 = *((void *)__src + 66);
    *((void *)__dst + 66) = v149;
    swift_retain(v149);
    swift_release();
    uint64_t v150 = *((void *)__src + 70);
    if (*((void *)__dst + 70))
    {
      if (v150)
      {
        sub_6520((void *)__dst + 67, (void *)__src + 67);
LABEL_108:
        __dst[576] = __src[576];
        *((void *)__dst + 73) = *((void *)__src + 73);
        uint64_t v153 = *((void *)__src + 74);
        uint64_t v154 = *((void *)__dst + 74);
        *((void *)__dst + 7sub_62AC(v0 + 4) = v153;
        swift_bridgeObjectRetain(v153);
        swift_bridgeObjectRelease(v154);
        goto LABEL_109;
      }

      sub_62AC((void *)__dst + 67);
    }

    else if (v150)
    {
      *((void *)__dst + 70) = v150;
      *((void *)__dst + 71) = *((void *)__src + 71);
      (**(void (***)(char *, char *))(v150 - 8))(__dst + 536, __src + 536);
      goto LABEL_108;
    }

    __int128 v151 = *(_OWORD *)(__src + 536);
    __int128 v152 = *(_OWORD *)(__src + 552);
    *((void *)__dst + 71) = *((void *)__src + 71);
    *(_OWORD *)(__dst + 536) = v151;
    *(_OWORD *)(__dst + 552) = v152;
    goto LABEL_108;
  }

  if (v119 == 1)
  {
LABEL_88:
    memcpy(__dst + 456, __src + 456, 0x90uLL);
    goto LABEL_109;
  }

  *((void *)__dst + 57) = *((void *)__src + 57);
  uint64_t v120 = *((void *)__src + 58);
  *((void *)__dst + 58) = v120;
  __dst[472] = __src[472];
  uint64_t v121 = *((void *)__src + 61);
  swift_bridgeObjectRetain(v120);
  if (v121 == 1)
  {
    __int128 v122 = *((_OWORD *)__src + 30);
    __int128 v123 = *((_OWORD *)__src + 32);
    *((_OWORD *)__dst + 31) = *((_OWORD *)__src + 31);
    *((_OWORD *)__dst + 32) = v123;
    *((_OWORD *)__dst + 30) = v122;
  }

  else
  {
    *((void *)__dst + 60) = *((void *)__src + 60);
    uint64_t v131 = *((void *)__src + 61);
    *((void *)__dst + 61) = v131;
    *((void *)__dst + 62) = *((void *)__src + 62);
    uint64_t v132 = *((void *)__src + 63);
    *((void *)__dst + 63) = v132;
    *((void *)__dst + 6sub_62AC(v0 + 4) = *((void *)__src + 64);
    uint64_t v133 = *((void *)__src + 65);
    *((void *)__dst + 65) = v133;
    swift_bridgeObjectRetain(v131);
    swift_bridgeObjectRetain(v132);
    swift_bridgeObjectRetain(v133);
  }

  uint64_t v134 = *((void *)__src + 66);
  *((void *)__dst + 66) = v134;
  uint64_t v135 = *((void *)__src + 70);
  swift_retain(v134);
  if (v135)
  {
    *((void *)__dst + 70) = v135;
    *((void *)__dst + 71) = *((void *)__src + 71);
    (**(void (***)(char *, char *, uint64_t))(v135 - 8))(__dst + 536, __src + 536, v135);
  }

  else
  {
    __int128 v138 = *(_OWORD *)(__src + 536);
    __int128 v139 = *(_OWORD *)(__src + 552);
    *((void *)__dst + 71) = *((void *)__src + 71);
    *(_OWORD *)(__dst + 536) = v138;
    *(_OWORD *)(__dst + 552) = v139;
  }

  __dst[576] = __src[576];
  *((void *)__dst + 73) = *((void *)__src + 73);
  uint64_t v140 = *((void *)__src + 74);
  *((void *)__dst + 7sub_62AC(v0 + 4) = v140;
  swift_bridgeObjectRetain(v140);
LABEL_109:
  __dst[600] = __src[600];
  *((void *)__dst + 76) = *((void *)__src + 76);
  uint64_t v155 = *((void *)__src + 77);
  uint64_t v156 = *((void *)__dst + 77);
  *((void *)__dst + 77) = v155;
  swift_bridgeObjectRetain(v155);
  swift_bridgeObjectRelease(v156);
  return __dst;
}

uint64_t sub_31D1C(uint64_t a1)
{
  return a1;
}

void *sub_31D48(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x270uLL);
}

char *sub_31D50(char *__dst, char *__src)
{
  uint64_t v4 = *((void *)__dst + 1);
  if (v4 == 1) {
    goto LABEL_4;
  }
  uint64_t v5 = *((void *)__src + 1);
  if (v5 == 1)
  {
    sub_31D1C((uint64_t)__dst);
LABEL_4:
    memcpy(__dst, __src, 0x90uLL);
    goto LABEL_13;
  }

  *(void *)__dst = *(void *)__src;
  *((void *)__dst + 1) = v5;
  swift_bridgeObjectRelease(v4);
  __dst[16] = __src[16];
  uint64_t v6 = *((void *)__dst + 4);
  if (v6 != 1)
  {
    uint64_t v7 = *((void *)__src + 4);
    if (v7 != 1)
    {
      *((void *)__dst + 3) = *((void *)__src + 3);
      *((void *)__dst + sub_62AC(v0 + 4) = v7;
      swift_bridgeObjectRelease(v6);
      uint64_t v9 = *((void *)__src + 6);
      uint64_t v10 = *((void *)__dst + 6);
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = v9;
      swift_bridgeObjectRelease(v10);
      uint64_t v11 = *((void *)__src + 8);
      uint64_t v12 = *((void *)__dst + 8);
      *((void *)__dst + 7) = *((void *)__src + 7);
      *((void *)__dst + 8) = v11;
      swift_bridgeObjectRelease(v12);
      goto LABEL_10;
    }

    sub_2B168((void *)__dst + 3);
  }

  __int128 v8 = *(_OWORD *)(__src + 40);
  *(_OWORD *)(__dst + 2sub_62AC(v0 + 4) = *(_OWORD *)(__src + 24);
  *(_OWORD *)(__dst + 40) = v8;
  *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 56);
LABEL_10:
  *((void *)__dst + 9) = *((void *)__src + 9);
  swift_release();
  if (*((void *)__dst + 13)) {
    sub_62AC((void *)__dst + 10);
  }
  __int128 v13 = *((_OWORD *)__src + 6);
  *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
  *((_OWORD *)__dst + 6) = v13;
  *((void *)__dst + 1sub_62AC(v0 + 4) = *((void *)__src + 14);
  __dst[120] = __src[120];
  uint64_t v14 = *((void *)__src + 17);
  uint64_t v15 = *((void *)__dst + 17);
  *((void *)__dst + swift_weakDestroy(v0 + 16) = *((void *)__src + 16);
  *((void *)__dst + 17) = v14;
  swift_bridgeObjectRelease(v15);
LABEL_13:
  __dst[144] = __src[144];
  uint64_t v16 = *((void *)__dst + 20);
  if (v16 == 1)
  {
LABEL_16:
    memcpy(__dst + 152, __src + 152, 0x90uLL);
    goto LABEL_25;
  }

  uint64_t v17 = *((void *)__src + 20);
  if (v17 == 1)
  {
    sub_31D1C((uint64_t)(__dst + 152));
    goto LABEL_16;
  }

  *((void *)__dst + 19) = *((void *)__src + 19);
  *((void *)__dst + 20) = v17;
  swift_bridgeObjectRelease(v16);
  __dst[168] = __src[168];
  uint64_t v18 = *((void *)__dst + 23);
  if (v18 != 1)
  {
    uint64_t v19 = *((void *)__src + 23);
    if (v19 != 1)
    {
      *((void *)__dst + 22) = *((void *)__src + 22);
      *((void *)__dst + 23) = v19;
      swift_bridgeObjectRelease(v18);
      uint64_t v21 = *((void *)__src + 25);
      uint64_t v22 = *((void *)__dst + 25);
      *((void *)__dst + 2sub_62AC(v0 + 4) = *((void *)__src + 24);
      *((void *)__dst + 25) = v21;
      swift_bridgeObjectRelease(v22);
      uint64_t v23 = *((void *)__src + 27);
      uint64_t v24 = *((void *)__dst + 27);
      *((void *)__dst + 26) = *((void *)__src + 26);
      *((void *)__dst + 27) = v23;
      swift_bridgeObjectRelease(v24);
      goto LABEL_22;
    }

    sub_2B168((void *)__dst + 22);
  }

  __int128 v20 = *((_OWORD *)__src + 12);
  *((_OWORD *)__dst + 11) = *((_OWORD *)__src + 11);
  *((_OWORD *)__dst + 12) = v20;
  *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
LABEL_22:
  *((void *)__dst + 28) = *((void *)__src + 28);
  swift_release();
  if (*((void *)__dst + 32)) {
    sub_62AC((void *)__dst + 29);
  }
  __int128 v25 = *(_OWORD *)(__src + 248);
  *(_OWORD *)(__dst + 232) = *(_OWORD *)(__src + 232);
  *(_OWORD *)(__dst + 248) = v25;
  *((void *)__dst + 33) = *((void *)__src + 33);
  __dst[272] = __src[272];
  uint64_t v26 = *((void *)__src + 36);
  uint64_t v27 = *((void *)__dst + 36);
  *((void *)__dst + 35) = *((void *)__src + 35);
  *((void *)__dst + 36) = v26;
  swift_bridgeObjectRelease(v27);
LABEL_25:
  __dst[296] = __src[296];
  uint64_t v28 = *((void *)__dst + 39);
  if (v28 == 1)
  {
LABEL_28:
    memcpy(__dst + 304, __src + 304, 0x90uLL);
    goto LABEL_37;
  }

  uint64_t v29 = *((void *)__src + 39);
  if (v29 == 1)
  {
    sub_2A9EC((uint64_t)(__dst + 304));
    goto LABEL_28;
  }

  *((void *)__dst + 38) = *((void *)__src + 38);
  *((void *)__dst + 39) = v29;
  swift_bridgeObjectRelease(v28);
  __dst[320] = __src[320];
  uint64_t v30 = *((void *)__dst + 42);
  if (v30 != 1)
  {
    uint64_t v31 = *((void *)__src + 42);
    if (v31 != 1)
    {
      *((void *)__dst + 41) = *((void *)__src + 41);
      *((void *)__dst + 42) = v31;
      swift_bridgeObjectRelease(v30);
      uint64_t v33 = *((void *)__src + 44);
      uint64_t v34 = *((void *)__dst + 44);
      *((void *)__dst + 43) = *((void *)__src + 43);
      *((void *)__dst + 4sub_62AC(v0 + 4) = v33;
      swift_bridgeObjectRelease(v34);
      uint64_t v35 = *((void *)__src + 46);
      uint64_t v36 = *((void *)__dst + 46);
      *((void *)__dst + 45) = *((void *)__src + 45);
      *((void *)__dst + 46) = v35;
      swift_bridgeObjectRelease(v36);
      goto LABEL_34;
    }

    sub_2B168((void *)__dst + 41);
  }

  __int128 v32 = *(_OWORD *)(__src + 344);
  *(_OWORD *)(__dst + 328) = *(_OWORD *)(__src + 328);
  *(_OWORD *)(__dst + 34sub_62AC(v0 + 4) = v32;
  *(_OWORD *)(__dst + 360) = *(_OWORD *)(__src + 360);
LABEL_34:
  *((void *)__dst + 47) = *((void *)__src + 47);
  swift_release();
  if (*((void *)__dst + 51)) {
    sub_62AC((void *)__dst + 48);
  }
  __int128 v37 = *((_OWORD *)__src + 25);
  *((_OWORD *)__dst + 2sub_62AC(v0 + 4) = *((_OWORD *)__src + 24);
  *((_OWORD *)__dst + 25) = v37;
  *((void *)__dst + 52) = *((void *)__src + 52);
  __dst[424] = __src[424];
  uint64_t v38 = *((void *)__src + 55);
  uint64_t v39 = *((void *)__dst + 55);
  *((void *)__dst + 5sub_62AC(v0 + 4) = *((void *)__src + 54);
  *((void *)__dst + 55) = v38;
  swift_bridgeObjectRelease(v39);
LABEL_37:
  uint64_t v40 = *((void *)__dst + 56);
  *((void *)__dst + 56) = *((void *)__src + 56);
  swift_bridgeObjectRelease(v40);
  uint64_t v41 = *((void *)__dst + 58);
  if (v41 == 1)
  {
LABEL_40:
    memcpy(__dst + 456, __src + 456, 0x90uLL);
    goto LABEL_49;
  }

  uint64_t v42 = *((void *)__src + 58);
  if (v42 == 1)
  {
    sub_2A9EC((uint64_t)(__dst + 456));
    goto LABEL_40;
  }

  *((void *)__dst + 57) = *((void *)__src + 57);
  *((void *)__dst + 58) = v42;
  swift_bridgeObjectRelease(v41);
  __dst[472] = __src[472];
  uint64_t v43 = *((void *)__dst + 61);
  if (v43 != 1)
  {
    uint64_t v44 = *((void *)__src + 61);
    if (v44 != 1)
    {
      *((void *)__dst + 60) = *((void *)__src + 60);
      *((void *)__dst + 61) = v44;
      swift_bridgeObjectRelease(v43);
      uint64_t v46 = *((void *)__src + 63);
      uint64_t v47 = *((void *)__dst + 63);
      *((void *)__dst + 62) = *((void *)__src + 62);
      *((void *)__dst + 63) = v46;
      swift_bridgeObjectRelease(v47);
      *((void *)__dst + 6sub_62AC(v0 + 4) = *((void *)__src + 64);
      uint64_t v48 = *((void *)__dst + 65);
      *((void *)__dst + 65) = *((void *)__src + 65);
      swift_bridgeObjectRelease(v48);
      goto LABEL_46;
    }

    sub_2B168((void *)__dst + 60);
  }

  __int128 v45 = *((_OWORD *)__src + 31);
  *((_OWORD *)__dst + 30) = *((_OWORD *)__src + 30);
  *((_OWORD *)__dst + 31) = v45;
  *((_OWORD *)__dst + 32) = *((_OWORD *)__src + 32);
LABEL_46:
  *((void *)__dst + 66) = *((void *)__src + 66);
  swift_release();
  if (*((void *)__dst + 70)) {
    sub_62AC((void *)__dst + 67);
  }
  __int128 v49 = *(_OWORD *)(__src + 552);
  *(_OWORD *)(__dst + 536) = *(_OWORD *)(__src + 536);
  *(_OWORD *)(__dst + 552) = v49;
  *((void *)__dst + 71) = *((void *)__src + 71);
  __dst[576] = __src[576];
  *((void *)__dst + 73) = *((void *)__src + 73);
  uint64_t v50 = *((void *)__dst + 74);
  *((void *)__dst + 7sub_62AC(v0 + 4) = *((void *)__src + 74);
  swift_bridgeObjectRelease(v50);
LABEL_49:
  __dst[600] = __src[600];
  *((void *)__dst + 76) = *((void *)__src + 76);
  uint64_t v51 = *((void *)__dst + 77);
  *((void *)__dst + 77) = *((void *)__src + 77);
  swift_bridgeObjectRelease(v51);
  return __dst;
}

uint64_t sub_321F0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 624))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 448);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t sub_32244(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 6swift_weakDestroy(v0 + 16) = 0LL;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 18sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 58sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 50sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 42sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 34sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 26sub_62AC(v0 + 4) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 62sub_62AC(v0 + 4) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 62sub_62AC(v0 + 4) = 0;
    }
    if (a2) {
      *(void *)(result + 448) = a2;
    }
  }

  return result;
}

void _s13NavigationBarVMa()
{
}

void *sub_32354(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

void _s13NavigationBarV4ItemOMa()
{
}

uint64_t sub_32374(void *a1)
{
  uint64_t v2 = a1[4];
  if (v2 != 1)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(a1[6]);
    swift_bridgeObjectRelease(a1[8]);
  }

  swift_release();
  if (a1[13]) {
    sub_62AC(a1 + 10);
  }
  return sub_35070(a1[17]);
}

void sub_323D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain(v4);
  if (v5 == 1)
  {
    __int128 v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }

  else
  {
    *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 6sub_62AC(v0 + 4) = v8;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
  }

  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  swift_retain(v9);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 112);
    *(void *)(a1 + 10sub_62AC(v0 + 4) = v10;
    *(void *)(a1 + 112) = v11;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 80, a2 + 80, v10);
  }

  else
  {
    __int128 v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }

  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  swift_bridgeObjectRetain(v13);
  sub_19098();
}

void sub_324C8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  sub_23A00();
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v5 = (__int128 *)(a1 + 24);
  __int128 v6 = (__int128 *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a2 + 32);
  if (v7 == 1)
  {
    if (v8 == 1)
    {
      __int128 v9 = *v6;
      __int128 v10 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v10;
      *uint64_t v5 = v9;
    }

    else
    {
      uint64_t v13 = sub_3522C();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v14 = *(void *)(a2 + 48);
      *(void *)(a1 + 48) = v14;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v15 = *(void *)(a2 + 64);
      *(void *)(a1 + 6sub_62AC(v0 + 4) = v15;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRetain(v15);
    }
  }

  else if (v8 == 1)
  {
    sub_2B168((void *)(a1 + 24));
    __int128 v12 = *(_OWORD *)(a2 + 40);
    __int128 v11 = *(_OWORD *)(a2 + 56);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 40) = v12;
    *(_OWORD *)(a1 + 56) = v11;
  }

  else
  {
    uint64_t v16 = sub_3522C();
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRelease(v7);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v17 = *(void *)(a2 + 48);
    *(void *)(a1 + 48) = v17;
    swift_bridgeObjectRetain(v17);
    sub_23A00();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v18 = *(void *)(a2 + 64);
    *(void *)(a1 + 6sub_62AC(v0 + 4) = v18;
    swift_bridgeObjectRetain(v18);
    sub_23A00();
  }

  uint64_t v19 = *(void *)(a2 + 72);
  *(void *)(a1 + 72) = v19;
  swift_retain(v19);
  swift_release();
  uint64_t v20 = *(void *)(a2 + 104);
  if (!*(void *)(a1 + 104))
  {
    if (v20)
    {
      *(void *)(a1 + 10sub_62AC(v0 + 4) = v20;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 80, a2 + 80);
      goto LABEL_15;
    }

uint64_t sub_32694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6 == 1) {
    goto LABEL_4;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7 == 1)
  {
    sub_2B168((void *)(a1 + 24));
LABEL_4:
    __int128 v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_6;
  }

  *(void *)(a1 + 2sub_62AC(v0 + 4) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease(v6);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease(v10);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 6sub_62AC(v0 + 4) = v11;
  swift_bridgeObjectRelease(v12);
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  if (*(void *)(a1 + 104)) {
    sub_62AC((void *)(a1 + 80));
  }
  __int128 v13 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v13;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 136);
  uint64_t v15 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v14;
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_3278C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t sub_327E0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0LL;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 14sub_62AC(v0 + 4) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 14sub_62AC(v0 + 4) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }

  return result;
}

void _s13NavigationBarV6ButtonVMa()
{
}

void _s13NavigationBarV7AppViewVMa()
{
}

uint64_t sub_32870(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6E69616C70LL;
  }
  else {
    uint64_t v3 = 0x726564616568LL;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000LL;
  }
  else {
    unint64_t v4 = 0xE500000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6E69616C70LL;
  }
  else {
    uint64_t v5 = 0x726564616568LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE500000000000000LL;
  }
  else {
    unint64_t v6 = 0xE600000000000000LL;
  }
  if (v3 == v5 && v4 == v6)
  {
    char v8 = 1;
    unint64_t v6 = v4;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0LL);
  }

  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

void sub_32908(char a1, char a2)
{
  unint64_t v2 = 0xEA00000000007379LL;
  uint64_t v3 = 0x61776C41776F6873LL;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x63536E4F776F6873LL;
    }
    else {
      uint64_t v4 = 0x63536E4F65646968LL;
    }
    unint64_t v5 = 0xEC0000006C6C6F72LL;
  }

  else
  {
    uint64_t v4 = 0x61776C41776F6873LL;
    unint64_t v5 = 0xEA00000000007379LL;
  }

  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x63536E4F776F6873LL;
    }
    else {
      uint64_t v3 = 0x63536E4F65646968LL;
    }
    unint64_t v2 = 0xEC0000006C6C6F72LL;
  }

  if (v4 != v3 || v5 != v2) {
    _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v3, v2, 0LL);
  }
  sub_23920();
  sub_190B8();
  sub_35094();
}

void sub_32A04(char a1)
{
  __asm { BR              X10 }

uint64_t sub_32A54(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_32AC0 + 4 * byte_5F12F[a2]))(0x656772616CLL);
}

void sub_32AC0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656772616CLL && v2 == 0xE500000000000000LL) {
    sub_3513C();
  }
  else {
    sub_35078(a1, a2, 0x656772616CLL);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_32B48(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x646570756F7267LL;
  }
  else {
    uint64_t v3 = 0x6E69616C70LL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000LL;
  }
  else {
    unint64_t v4 = 0xE700000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x646570756F7267LL;
  }
  else {
    uint64_t v5 = 0x6E69616C70LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE700000000000000LL;
  }
  else {
    unint64_t v6 = 0xE500000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    sub_3513C();
  }
  else {
    sub_35078(v3, a2, v5);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_32BC8(char a1, uint64_t a2)
{
  uint64_t v2 = 0x726564616568LL;
  if (a1)
  {
    sub_35240();
    if (v3) {
      uint64_t v5 = 2036625250LL;
    }
    else {
      uint64_t v5 = 0x7265746F6F66LL;
    }
    if (v3) {
      unint64_t v6 = v4;
    }
    else {
      unint64_t v6 = 0xE600000000000000LL;
    }
  }

  else
  {
    unint64_t v6 = 0xE600000000000000LL;
    uint64_t v5 = 0x726564616568LL;
  }

  if ((_BYTE)a2)
  {
    sub_35240();
    if (v7) {
      uint64_t v2 = 2036625250LL;
    }
    else {
      uint64_t v2 = 0x7265746F6F66LL;
    }
    if (v7) {
      unint64_t v9 = v8;
    }
    else {
      unint64_t v9 = 0xE600000000000000LL;
    }
  }

  else
  {
    unint64_t v9 = 0xE600000000000000LL;
  }

  if (v5 == v2 && v6 == v9) {
    sub_3513C();
  }
  else {
    sub_35078(v5, a2, v2);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_32C8C(char a1, uint64_t a2)
{
  uint64_t v2 = 1701736302LL;
  if (a1)
  {
    sub_3524C();
    if (v3) {
      uint64_t v5 = 0x656C676E6973LL;
    }
    else {
      uint64_t v5 = 0x656C7069746C756DLL;
    }
    if (v3) {
      unint64_t v6 = v4;
    }
    else {
      unint64_t v6 = 0xE800000000000000LL;
    }
  }

  else
  {
    unint64_t v6 = 0xE400000000000000LL;
    uint64_t v5 = 1701736302LL;
  }

  if ((_BYTE)a2)
  {
    sub_3524C();
    if (v7) {
      uint64_t v2 = 0x656C676E6973LL;
    }
    else {
      uint64_t v2 = 0x656C7069746C756DLL;
    }
    if (v7) {
      unint64_t v9 = v8;
    }
    else {
      unint64_t v9 = 0xE800000000000000LL;
    }
  }

  else
  {
    unint64_t v9 = 0xE400000000000000LL;
  }

  if (v5 == v2 && v6 == v9) {
    sub_3513C();
  }
  else {
    sub_35078(v5, a2, v2);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_32D54(char a1)
{
  if (a1)
  {
    sub_35258();
    if (v2) {
      uint64_t v6 = 0x646570756F7267LL;
    }
    else {
      uint64_t v6 = 0x6F72477465736E69LL;
    }
    if (v2) {
      unint64_t v1 = v5;
    }
    else {
      unint64_t v1 = 0xEC00000064657075LL;
    }
  }

  else
  {
    uint64_t v6 = sub_3528C();
  }

  if ((_BYTE)v3)
  {
    sub_35258();
    if (v7) {
      uint64_t v4 = 0x646570756F7267LL;
    }
    else {
      uint64_t v4 = 0x6F72477465736E69LL;
    }
    if (v7) {
      unint64_t v9 = v8;
    }
    else {
      unint64_t v9 = 0xEC00000064657075LL;
    }
  }

  else
  {
    unint64_t v9 = 0xE500000000000000LL;
  }

  if (v6 == v4 && v1 == v9) {
    sub_3513C();
  }
  else {
    sub_35078(v6, v3, v4);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_32E30(char a1, char a2)
{
  if ((a1 & 1) != 0) {
    uint64_t v2 = 0x7265746F6F66LL;
  }
  else {
    uint64_t v2 = 0x726564616568LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x7265746F6F66LL;
  }
  else {
    uint64_t v3 = 0x726564616568LL;
  }
  if (v2 != v3) {
    _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE600000000000000LL, v3, 0xE600000000000000LL, 0LL);
  }
  swift_bridgeObjectRelease_n(0xE600000000000000LL, 2LL);
  sub_6D3C();
}

void sub_32EA0(char a1, uint64_t a2)
{
  uint64_t v2 = 0x746C7561666564LL;
  if (a1)
  {
    sub_35150();
    if (v4 == 1) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = 0xD000000000000011LL;
    }
    if (v4 == 1) {
      unint64_t v8 = v6;
    }
    else {
      unint64_t v8 = (v3 - 32) | 0x8000000000000000LL;
    }
  }

  else
  {
    unint64_t v8 = 0xE700000000000000LL;
    uint64_t v7 = 0x746C7561666564LL;
  }

  if ((_BYTE)a2)
  {
    sub_35150();
    unint64_t v13 = (v12 - 32) | 0x8000000000000000LL;
    if (v9 == 1) {
      uint64_t v2 = v10;
    }
    else {
      uint64_t v2 = 0xD000000000000011LL;
    }
    if (v9 == 1) {
      unint64_t v14 = v11;
    }
    else {
      unint64_t v14 = v13;
    }
  }

  else
  {
    unint64_t v14 = 0xE700000000000000LL;
  }

  if (v7 == v2 && v8 == v14) {
    sub_3513C();
  }
  else {
    sub_35078(v7, a2, v2);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_32F68(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6D6F74737563LL;
  }
  else {
    uint64_t v3 = 0x6C6C616D73LL;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000LL;
  }
  else {
    unint64_t v4 = 0xE600000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6D6F74737563LL;
  }
  else {
    uint64_t v5 = 0x6C6C616D73LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE600000000000000LL;
  }
  else {
    unint64_t v6 = 0xE500000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    sub_3513C();
  }
  else {
    sub_35078(v3, a2, v5);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_32FE0(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x6C61636974726576LL;
  }
  else {
    uint64_t v3 = 0x746E6F7A69726F68LL;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000006C61LL;
  }
  else {
    unint64_t v4 = 0xE800000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x6C61636974726576LL;
  }
  else {
    uint64_t v5 = 0x746E6F7A69726F68LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE800000000000000LL;
  }
  else {
    unint64_t v6 = 0xEA00000000006C61LL;
  }
  if (v3 == v5 && v4 == v6) {
    sub_3513C();
  }
  else {
    sub_35078(v3, a2, v5);
  }
  sub_190B8();
  sub_23920();
  sub_35094();
}

void sub_33064(uint64_t a1)
{
}

void sub_33074()
{
}

void sub_3308C(uint64_t a1)
{
}

void sub_33098(uint64_t a1)
{
}

void sub_330A4(uint64_t a1)
{
}

Swift::Int sub_330B0(unsigned __int8 a1)
{
  uint64_t v2 = sub_33B50(a1);
  uint64_t v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

Swift::Int sub_33110(char a1)
{
  return sub_33A6C(0LL, a1 & 1);
}

Swift::Int sub_3311C(char a1)
{
  return sub_339BC(0LL, a1);
}

void sub_33128()
{
}

void sub_33148(uint64_t a1)
{
}

void sub_33184(char a1)
{
}

void sub_33190(char a1)
{
}

void sub_3319C(char a1)
{
}

void sub_331B8(char a1)
{
}

uint64_t sub_331C4(uint64_t a1)
{
  return String.hash(into:)(a1, 0x65736F6C63LL, 0xE500000000000000LL);
}

uint64_t sub_331D8(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x6E69616C70LL;
  }
  else {
    uint64_t v3 = 0x726564616568LL;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000LL;
  }
  else {
    unint64_t v4 = 0xE500000000000000LL;
  }
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_33228(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 0x63536E4F776F6873LL;
    }
    else {
      uint64_t v2 = 0x63536E4F65646968LL;
    }
    unint64_t v3 = 0xEC0000006C6C6F72LL;
  }

  else
  {
    unint64_t v3 = 0xEA00000000007379LL;
    uint64_t v2 = 0x61776C41776F6873LL;
  }

  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

void sub_332B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_332F0(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xE500000000000000LL);
}

uint64_t sub_33368(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x646570756F7267LL;
  }
  else {
    uint64_t v3 = 0x6E69616C70LL;
  }
  if (v2) {
    uint64_t v4 = 0xE500000000000000LL;
  }
  else {
    uint64_t v4 = 0xE700000000000000LL;
  }
  sub_350A0(a1, v3);
  return sub_35070(v4);
}

uint64_t sub_333B4(uint64_t a1)
{
  return String.hash(into:)(a1, 0x6853656C676E6973LL, 0xEB00000000666C65LL);
}

uint64_t sub_333D8(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_35240();
    if (v3) {
      uint64_t v6 = 2036625250LL;
    }
    else {
      uint64_t v6 = 0x7265746F6F66LL;
    }
    if (v3) {
      uint64_t v2 = v5;
    }
    else {
      uint64_t v2 = 0xE600000000000000LL;
    }
  }

  else
  {
    sub_351F8();
  }

  sub_350A0(v4, v6);
  return sub_35070(v2);
}

uint64_t sub_3342C(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_3524C();
    if (v2) {
      uint64_t v4 = 0x656C676E6973LL;
    }
    else {
      uint64_t v4 = 0x656C7069746C756DLL;
    }
    if (v2) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = 0xE800000000000000LL;
    }
  }

  else
  {
    uint64_t v5 = 0xE400000000000000LL;
    uint64_t v4 = 1701736302LL;
  }

  sub_350A0(a1, v4);
  return sub_35070(v5);
}

uint64_t sub_3348C(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_35258();
    if (v3) {
      uint64_t v6 = 0x646570756F7267LL;
    }
    else {
      uint64_t v6 = 0x6F72477465736E69LL;
    }
    if (v3) {
      uint64_t v2 = v5;
    }
    else {
      uint64_t v2 = 0xEC00000064657075LL;
    }
  }

  else
  {
    sub_352A0();
  }

  sub_350A0(v4, v6);
  return sub_35070(v2);
}

uint64_t sub_334F0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    uint64_t v2 = 0x7265746F6F66LL;
  }
  else {
    uint64_t v2 = 0x726564616568LL;
  }
  String.hash(into:)(a1, v2, 0xE600000000000000LL);
  return swift_bridgeObjectRelease(0xE600000000000000LL);
}

uint64_t sub_3352C(uint64_t a1)
{
  return String.hash(into:)(a1, 0x7972616D697270LL, 0xE700000000000000LL);
}

uint64_t sub_33544(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_35188();
    sub_3516C();
    if (v7) {
      uint64_t v2 = v5;
    }
    else {
      uint64_t v2 = v6;
    }
  }

  else
  {
    sub_351B8();
  }

  sub_350A0(v3, v4);
  return sub_35070(v2);
}

uint64_t sub_33584(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x6D6F74737563LL;
  }
  else {
    uint64_t v3 = 0x6C6C616D73LL;
  }
  if (v2) {
    uint64_t v4 = 0xE500000000000000LL;
  }
  else {
    uint64_t v4 = 0xE600000000000000LL;
  }
  sub_350A0(a1, v3);
  return sub_35070(v4);
}

uint64_t sub_335CC(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x6C61636974726576LL;
  }
  else {
    uint64_t v3 = 0x746E6F7A69726F68LL;
  }
  if (v2) {
    uint64_t v4 = 0xEA00000000006C61LL;
  }
  else {
    uint64_t v4 = 0xE800000000000000LL;
  }
  sub_350A0(a1, v3);
  return sub_35070(v4);
}

void sub_33628(uint64_t a1, uint64_t a2)
{
  if ((v2 & 1) != 0) {
    uint64_t v3 = 0x6D6F74737563LL;
  }
  else {
    uint64_t v3 = 0x6C6C616D73LL;
  }
  sub_350A0((uint64_t)v4, v3);
  sub_190B8();
  sub_35134();
  sub_35088();
}

void sub_33680(uint64_t a1, uint64_t a2)
{
  if (v2)
  {
    sub_35188();
    sub_3516C();
  }

  else
  {
    sub_351B8();
  }

  sub_350A0((uint64_t)v4, v3);
  sub_190B8();
  sub_35134();
  sub_35088();
}

void sub_336D0(uint64_t a1)
{
}

void sub_336E8(uint64_t a1, uint64_t a2)
{
  if ((v2 & 1) != 0) {
    uint64_t v3 = 0x7265746F6F66LL;
  }
  else {
    uint64_t v3 = 0x726564616568LL;
  }
  String.hash(into:)(v4, v3, 0xE600000000000000LL);
  swift_bridgeObjectRelease(0xE600000000000000LL);
  sub_35134();
  sub_35088();
}

void sub_3373C(uint64_t a1, uint64_t a2)
{
  if (v2)
  {
    sub_35258();
    if (v3) {
      uint64_t v4 = 0x646570756F7267LL;
    }
    else {
      uint64_t v4 = 0x6F72477465736E69LL;
    }
  }

  else
  {
    sub_352A0();
  }

  sub_350A0((uint64_t)v5, v4);
  sub_190B8();
  sub_35134();
  sub_35088();
}

void sub_337B0(uint64_t a1, uint64_t a2)
{
  if (v2)
  {
    sub_3524C();
    if (v3) {
      uint64_t v4 = 0x656C676E6973LL;
    }
    else {
      uint64_t v4 = 0x656C7069746C756DLL;
    }
  }

  else
  {
    uint64_t v4 = 1701736302LL;
  }

  sub_350A0((uint64_t)v5, v4);
  sub_190B8();
  sub_35134();
  sub_35088();
}

void sub_33820(uint64_t a1, uint64_t a2)
{
  if ((v2 & 1) != 0) {
    uint64_t v3 = 0x6C61636974726576LL;
  }
  else {
    uint64_t v3 = 0x746E6F7A69726F68LL;
  }
  sub_350A0((uint64_t)v4, v3);
  sub_190B8();
  sub_35134();
  sub_35088();
}

void sub_33884(uint64_t a1, uint64_t a2)
{
  if (v2)
  {
    sub_35240();
    if (v3) {
      uint64_t v4 = 2036625250LL;
    }
    else {
      uint64_t v4 = 0x7265746F6F66LL;
    }
  }

  else
  {
    sub_351F8();
  }

  sub_350A0((uint64_t)v5, v4);
  sub_190B8();
  sub_35134();
  sub_35088();
}

void sub_338E4(uint64_t a1)
{
}

void sub_33904(uint64_t a1, uint64_t a2)
{
  if ((v2 & 1) != 0) {
    uint64_t v3 = 0x646570756F7267LL;
  }
  else {
    uint64_t v3 = 0x6E69616C70LL;
  }
  sub_350A0((uint64_t)v4, v3);
  sub_190B8();
  sub_35134();
  sub_35088();
}

Swift::Int sub_33960(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = sub_33B50(a2);
  uint64_t v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

Swift::Int sub_339BC(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = 0x63536E4F776F6873LL;
    }
    else {
      uint64_t v3 = 0x63536E4F65646968LL;
    }
    unint64_t v4 = 0xEC0000006C6C6F72LL;
  }

  else
  {
    unint64_t v4 = 0xEA00000000007379LL;
    uint64_t v3 = 0x61776C41776F6873LL;
  }

  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

Swift::Int sub_33A6C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x6E69616C70LL;
  }
  else {
    uint64_t v3 = 0x726564616568LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v4 = 0xE500000000000000LL;
  }
  else {
    unint64_t v4 = 0xE600000000000000LL;
  }
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_33AE0(uint64_t a1, uint64_t a2)
{
}

void sub_33B18()
{
  v0._rawValue = &off_71AD0;
  sub_351D8(v0, v1);
  sub_190B8();
  sub_6D3C();
}

uint64_t sub_33B50(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_33B80 + 4 * byte_5F139[a1]))( 0x6E6564646968LL,  0xE600000000000000LL);
}

uint64_t sub_33B80()
{
  return 0x656772616CLL;
}

uint64_t sub_33B94()
{
  return 0x6E69616C70LL;
}

unint64_t sub_33BA8()
{
  return 0xD000000000000019LL;
}

uint64_t sub_33BC4()
{
  return 0x726170736E617274LL;
}

void sub_33BE4()
{
  v0._rawValue = &off_71B68;
  sub_351D8(v0, v1);
  sub_190B8();
  sub_6D3C();
}

uint64_t sub_33C24(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6E69616C70LL;
  }
  else {
    return 0x726564616568LL;
  }
}

void sub_33C54()
{
  v0._rawValue = &off_71BB8;
  sub_351D8(v0, v1);
  sub_190B8();
  sub_6D3C();
}

void sub_33C88()
{
  v0._rawValue = &off_71BF0;
  sub_351D8(v0, v1);
  sub_190B8();
  sub_6D3C();
}

uint64_t sub_33CC0(char a1)
{
  if (!a1) {
    return 0x61776C41776F6873LL;
  }
  if (a1 == 1) {
    return 0x63536E4F776F6873LL;
  }
  return 0x63536E4F65646968LL;
}

void sub_33D2C(char *a1)
{
}

Swift::Int sub_33D38()
{
  return sub_330B0(*v0);
}

void sub_33D40(uint64_t a1)
{
}

Swift::Int sub_33D48(uint64_t a1)
{
  return sub_33960(a1, *v1);
}

void sub_33D50(_BYTE *a1@<X8>)
{
  *a1 = v2;
}

void sub_33D7C(uint64_t *a1@<X8>)
{
  *a1 = sub_33B50(*v1);
  a1[1] = v3;
  sub_6D3C();
}

unint64_t sub_33DA4()
{
  unint64_t result = qword_7E960;
  if (!qword_7E960)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F204, &unk_742B0);
    atomic_store(result, (unint64_t *)&qword_7E960);
  }

  return result;
}

uint64_t sub_33DE0(char *a1, char *a2)
{
  return sub_32870(*a1, *a2);
}

Swift::Int sub_33DEC()
{
  return sub_33110(*v0);
}

uint64_t sub_33DF4(uint64_t a1)
{
  return sub_331D8(a1, *v1);
}

Swift::Int sub_33DFC(uint64_t a1)
{
  return sub_33A6C(a1, *v1);
}

void sub_33E04(_BYTE *a1@<X8>)
{
  *a1 = v2;
}

uint64_t sub_33E30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_33C24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_33E58()
{
}

void sub_33E80(uint64_t a1)
{
}

void sub_33EA4(BOOL *a1@<X8>)
{
  *a1 = v2 != 0;
}

void sub_33ED8(void *a1@<X8>)
{
  *a1 = 0x65736F6C63LL;
  a1[1] = 0xE500000000000000LL;
}

void sub_33EF0(char *a1, char *a2)
{
}

Swift::Int sub_33EFC()
{
  return sub_3311C(*v0);
}

uint64_t sub_33F04(uint64_t a1)
{
  return sub_33228(a1, *v1);
}

Swift::Int sub_33F0C(uint64_t a1)
{
  return sub_339BC(a1, *v1);
}

void sub_33F14(_BYTE *a1@<X8>)
{
  *a1 = v2;
}

void sub_33F40(uint64_t *a1@<X8>)
{
  *a1 = sub_33CC0(*v1);
  a1[1] = v3;
  sub_6D3C();
}

uint64_t sub_33F64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = a1 + 304;
  *(_OWORD *)(a1 + 30sub_62AC(v0 + 4) = xmmword_5CDF0;
  bzero((void *)(a1 + 320), 0x90uLL);
  *(void *)(a1 + 46sub_62AC(v0 + 4) = 1LL;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 50sub_62AC(v0 + 4) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 58sub_62AC(v0 + 4) = 0u;
  sub_59FC();
  if (v1)
  {
    sub_351D0();
    sub_350C8((__n128)0, (__n128)xmmword_5CDF0);
  }

  sub_34C88((uint64_t)v29, a1, &qword_7CB50);
  uint64_t v4 = sub_35218();
  uint64_t v7 = sub_83D0(v4, v5, v6);
  *(_BYTE *)(a1 + 14sub_62AC(v0 + 4) = v7;
  __chkstk_darwin(v7);
  sub_350B4();
  sub_351E0(0x6B636162u);
  sub_59FC();
  uint64_t v8 = sub_34C88((uint64_t)v29, a1 + 152, &qword_7CB50);
  __chkstk_darwin(v8);
  sub_350B4();
  sub_351E0(0x7466656Cu);
  sub_59D8();
  sub_34CD4((uint64_t)v29, v3);
  uint64_t v9 = sub_23E7C();
  *(_BYTE *)(a1 + 296) = v9 & 1;
  __chkstk_darwin(v9);
  sub_350B4();
  sub_4ECC(0x747542726568746FLL, 0xEC000000736E6F74LL, (uint64_t)&unk_74328, (uint64_t)sub_34D1C, v10, v11, v12, v13);
  uint64_t v15 = v14;
  uint64_t v16 = swift_bridgeObjectRelease(*(void *)(a1 + 448));
  *(void *)(a1 + 448) = v15;
  __chkstk_darwin(v16);
  sub_350B4();
  sub_59D8();
  sub_34CD4((uint64_t)v29, a1 + 456);
  sub_84C8(0xD000000000000014LL, 0x8000000000064620LL, (uint64_t)&unk_74328, v17, v18, v19, v20, v21);
  *(_BYTE *)(a1 + 600) = v22;
  uint64_t v23 = sub_351A4();
  uint64_t v25 = v24;
  uint64_t v26 = sub_9A58();
  sub_D79C(v26);
  uint64_t v27 = sub_6BC8();
  uint64_t result = sub_6D14(v27);
  *(void *)(a1 + 608) = v23;
  *(void *)(a1 + 6swift_weakDestroy(v0 + 16) = v25;
  return result;
}

uint64_t sub_34390@<X0>(uint64_t a1@<X8>)
{
  return sub_33F64(a1);
}

uint64_t sub_343A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionFactory(0LL);
  swift_allocObject(v3, 16LL, 7LL);
  uint64_t v4 = sub_23DB8();
  if (v1)
  {
    sub_9A50();
    uint64_t v4 = 0LL;
    uint64_t v5 = 0LL;
  }

  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = sub_35218();
  sub_8388(v6, 0xEA00000000006563LL, v7, v8, v9, v10, v11, v12);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v13 & 1;
  __chkstk_darwin(v13);
  sub_350B4();
  sub_58F8();
  __int128 v14 = v33[4];
  __int128 v15 = v33[5];
  *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = v33[3];
  *(_OWORD *)(a1 + 40) = v14;
  *(_OWORD *)(a1 + 56) = v15;
  __chkstk_darwin(v16);
  sub_350B4();
  sub_58E4(0x6B726F77747261LL, 0xE700000000000000LL, (uint64_t)&unk_74458, (uint64_t)sub_34C5C, v17, v18, v19, v20);
  *(void *)(a1 + 72) = v21;
  __chkstk_darwin(v21);
  sub_4EA8();
  sub_34C88((uint64_t)v33, a1 + 80, (uint64_t *)&unk_7F900);
  sub_83AC(0xD000000000000010LL, 0x8000000000064600LL, (uint64_t)&unk_74458, v22, v23, v24, v25, v26);
  *(_BYTE *)(a1 + 120) = 0;
  uint64_t v27 = sub_351A4();
  uint64_t v29 = v28;
  uint64_t v30 = sub_6BC8();
  sub_6D14(v30);
  swift_release();
  uint64_t v31 = sub_9A58();
  uint64_t result = sub_D79C(v31);
  *(void *)(a1 + 128) = v27;
  *(void *)(a1 + 136) = v29;
  return result;
}

uint64_t sub_34670@<X0>(uint64_t a1@<X8>)
{
  return sub_343A4(a1);
}

void sub_34684(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v6 = sub_9A58();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_6BC8();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_23DB8();
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }

  else
  {
    uint64_t v26 = v9;
    uint64_t v27 = v7;
    uint64_t v28 = v10;
    if (v14 == 0x6E6F74747562LL && v15 == 0xE600000000000000LL)
    {
      swift_bridgeObjectRelease(0xE600000000000000LL);
      sub_35278();
    }

    else
    {
      uint64_t v25 = v14;
      uint64_t v17 = v15;
      _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F74747562LL, 0xE600000000000000LL, v14, v15, 0LL);
      sub_35278();
      if ((v18 & 1) == 0)
      {
        uint64_t v21 = type metadata accessor for JSONError(0LL);
        unint64_t v22 = sub_199A4();
        swift_allocError(v21, v22, 0LL, 0LL);
        *uint64_t v23 = v25;
        v23[1] = v17;
        v23[2] = (uint64_t)&unk_743E0;
        uint64_t v24 = (*(uint64_t (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104LL))( v23,  enum case for JSONError.unknownCase(_:),  v21);
        swift_willThrow(v24);
        sub_3520C(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v28);
        goto LABEL_12;
      }

      swift_bridgeObjectRelease(v17);
    }

    uint64_t v19 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v13, v7, v28);
    uint64_t v20 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v26, v10, a2);
    sub_343A4(v29);
    sub_3520C(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v19);
  }

LABEL_12:
  sub_6B3C();
}

void sub_348CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_348E0(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_6BC8();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_35270(0x4449656C646E7562LL, 0xE800000000000000LL);
  uint64_t v34 = JSONObject.string.getter(v10);
  uint64_t v12 = v11;
  sub_35148((uint64_t)v9);
  uint64_t v13 = sub_35270(0x4C52556E6F6369LL, 0xE700000000000000LL);
  uint64_t v14 = JSONObject.string.getter(v13);
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  sub_35148((uint64_t)v9);
  uint64_t v16 = sub_35270(0x656C746974LL, 0xE500000000000000LL);
  uint64_t v17 = JSONObject.string.getter(v16);
  unint64_t v19 = v18;
  sub_35148((uint64_t)v6);
  if (v19) {
    goto LABEL_2;
  }
  if (!v12)
  {
    uint64_t v26 = type metadata accessor for JSONContext(0LL);
    sub_D79C(v26);
    sub_35148(a1);
    uint64_t v17 = 0LL;
    unint64_t v19 = 0xE000000000000000LL;
    goto LABEL_3;
  }

  sub_34D40();
  swift_bridgeObjectRetain(v12);
  uint64_t v23 = v33;
  id v24 = sub_34AF0(v34, v12, 1);
  if (v23)
  {
    sub_9A50();
LABEL_7:
    uint64_t v25 = sub_9A58();
    sub_D79C(v25);
    sub_35148(a1);
    uint64_t v17 = 0LL;
    unint64_t v19 = 0xE000000000000000LL;
    goto LABEL_3;
  }

  uint64_t v27 = v24;
  if (!v24) {
    goto LABEL_7;
  }
  uint64_t v33 = 0LL;
  id v30 = [v24 localizedName];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30, v28);
  unint64_t v19 = v29;

LABEL_2:
  uint64_t v20 = sub_9A58();
  sub_D79C(v20);
  sub_35148(a1);
LABEL_3:
  uint64_t v22 = v31;
  uint64_t v21 = v32;
  *a2 = v34;
  a2[1] = v12;
  a2[2] = v21;
  a2[3] = v22;
  a2[4] = v17;
  a2[5] = v19;
  sub_6B3C();
}

id sub_34AF0(uint64_t a1, uint64_t a2, char a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v12 = 0LL;
  id v7 =  [(id)swift_getObjCClassFromMetadata(v3) bundleRecordWithBundleIdentifier:v6 allowPlaceholder:a3 & 1 error:&v12];

  id v8 = v12;
  if (v7)
  {
    id v9 = v12;
  }

  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }

  return v7;
}

double sub_34BD4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (!v2)
  {
    __int128 v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }

  return result;
}

uint64_t sub_34C14@<X0>(uint64_t a1@<X8>)
{
  return sub_34C88((uint64_t)&v3, a1, &qword_7E968);
}

uint64_t sub_34C54@<X0>(uint64_t a1@<X8>)
{
  return sub_34C14(a1);
}

void sub_34C5C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_8904(a1, *(void *)(v2 + 16));
  sub_6D3C();
}

void sub_34C80()
{
}

uint64_t sub_34C88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5F6C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

void sub_34CCC()
{
}

uint64_t sub_34CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7CB30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

void sub_34D1C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_282D4(a1, *(void *)(v2 + 16));
  sub_6D3C();
}

unint64_t sub_34D40()
{
  unint64_t result = qword_7E970;
  if (!qword_7E970)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___LSBundleRecord);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7E970);
  }

  return result;
}

uint64_t sub_34D7C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_34DC8 + 4 * byte_5F143[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_34DFC + 4 * byte_5F13E[v4]))();
}

uint64_t sub_34DFC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_34E04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x34E0CLL);
  }
  return result;
}

uint64_t sub_34E18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x34E20LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_34E24(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_34E2C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s13NavigationBarV20ScrollEdgeVisibilityOMa()
{
}

uint64_t sub_34E44(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_34E84 + 4 * byte_5F148[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_34EA4 + 4 * byte_5F14D[v4]))();
  }
}

_BYTE *sub_34E84(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_34EA4(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_34EAC(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_34EB4(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_34EBC(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_34EC4(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

void _s13NavigationBarV6ButtonV10SystemItemOMa()
{
}

uint64_t sub_34EDC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_34F28 + 4 * byte_5F157[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_34F5C + 4 * byte_5F152[v4]))();
}

uint64_t sub_34F5C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_34F64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x34F6CLL);
  }
  return result;
}

uint64_t sub_34F78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x34F80LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_34F84(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_34F8C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s13NavigationBarV6ButtonV10AppearanceOMa()
{
}

unint64_t sub_34FA8()
{
  unint64_t result = qword_7E978;
  if (!qword_7E978)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F350, &unk_746B0);
    atomic_store(result, (unint64_t *)&qword_7E978);
  }

  return result;
}

unint64_t sub_34FE8()
{
  unint64_t result = qword_7E980;
  if (!qword_7E980)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F3B8, &unk_74620);
    atomic_store(result, (unint64_t *)&qword_7E980);
  }

  return result;
}

unint64_t sub_35028()
{
  unint64_t result = qword_7E988;
  if (!qword_7E988)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F420, &unk_74590);
    atomic_store(result, (unint64_t *)&qword_7E988);
  }

  return result;
}

uint64_t sub_35070(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

uint64_t sub_35078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, a3, v4, 0LL);
}

  ;
}

  ;
}

uint64_t sub_350A0(uint64_t a1, uint64_t a2)
{
  return String.hash(into:)(a1, a2, v2);
}

void *sub_350A8(uint64_t a1, uint64_t a2, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, a1);
}

  ;
}

void sub_350C8(__n128 a1, __n128 a2)
{
  *(__n128 *)(v2 - 208) = a2;
  *(__n128 *)(v2 - 192) = a1;
  *(__n128 *)(v2 - 176) = a1;
  *(__n128 *)(v2 - 160) = a1;
  *(__n128 *)(v2 - 14sub_62AC(v0 + 4) = a1;
  *(__n128 *)(v2 - 128) = a1;
  *(__n128 *)(v2 - 112) = a1;
  *(__n128 *)(v2 - 96) = a1;
  *(__n128 *)(v2 - 80) = a1;
}

void sub_350E0()
{
}

void sub_350FC(uint64_t a1)
{
}

uint64_t sub_35118(uint64_t a1)
{
  return String.hash(into:)(a1, 0x656E6961746E6F63LL, 0xE900000000000064LL);
}

Swift::Int sub_35134()
{
  return Hasher._finalize()();
}

  ;
}

uint64_t sub_35148(uint64_t a1)
{
  return v1(a1, v2);
}

  ;
}

  ;
}

  ;
}

uint64_t sub_351A4()
{
  return sub_23DB8();
}

  ;
}

uint64_t sub_351D0()
{
  return swift_errorRelease(v0);
}

Swift::Int sub_351D8(Swift::OpaquePointer a1, uint64_t a2)
{
  uint64_t v3 = v2;
  return _findStringSwitchCase(cases:string:)(a1, *(Swift::String *)&a2);
}

uint64_t sub_351E0(unsigned int a1)
{
  return a1 | 0x7474754200000000LL;
}

  ;
}

uint64_t sub_3520C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

uint64_t sub_35218()
{
  return 0x6E61726165707061LL;
}

uint64_t sub_3522C()
{
  *(void *)(v0 + 2sub_62AC(v0 + 4) = *(void *)(v1 + 24);
  uint64_t result = *(void *)(v1 + 32);
  *(void *)(v0 + 32) = result;
  return result;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_35270(uint64_t a1, uint64_t a2)
{
  return JSONObject.subscript.getter(a1, a2);
}

  ;
}

uint64_t sub_3528C()
{
  return 0x6E69616C70LL;
}

  ;
}

uint64_t sub_352B4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_35300 + 4 * byte_5F4F5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_35334 + 4 * byte_5F4F0[v4]))();
}

uint64_t sub_35334(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_3533C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x35344LL);
  }
  return result;
}

uint64_t sub_35350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x35358LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_3535C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_35364(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s12PresentationV10AppearanceOMa()
{
}

uint64_t sub_3537C(uint64_t a1)
{
  sub_62AC((void *)(a1 + 24));
  swift_bridgeObjectRelease(*(void *)(a1 + 72));
  uint64_t v2 = *(void *)(a1 + 88);
  if (v2 != 1)
  {
    swift_bridgeObjectRelease(v2);
    uint64_t v3 = *(void *)(a1 + 112);
    if (v3 != 1)
    {
      swift_bridgeObjectRelease(v3);
      swift_bridgeObjectRelease(*(void *)(a1 + 128));
      swift_bridgeObjectRelease(*(void *)(a1 + 144));
    }

    swift_release();
    if (*(void *)(a1 + 184)) {
      sub_62AC((void *)(a1 + 160));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 216));
  }

  uint64_t v4 = *(void *)(a1 + 240);
  if (v4 != 1)
  {
    swift_bridgeObjectRelease(v4);
    uint64_t v5 = *(void *)(a1 + 264);
    if (v5 != 1)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(*(void *)(a1 + 280));
      swift_bridgeObjectRelease(*(void *)(a1 + 296));
    }

    swift_release();
    if (*(void *)(a1 + 336)) {
      sub_62AC((void *)(a1 + 312));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 368));
  }

  uint64_t v6 = *(void *)(a1 + 392);
  if (v6 != 1)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v7 = *(void *)(a1 + 416);
    if (v7 != 1)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(*(void *)(a1 + 432));
      swift_bridgeObjectRelease(*(void *)(a1 + 448));
    }

    swift_release();
    if (*(void *)(a1 + 488)) {
      sub_62AC((void *)(a1 + 464));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 520));
  }

  swift_bridgeObjectRelease(*(void *)(a1 + 528));
  uint64_t v8 = *(void *)(a1 + 544);
  if (v8 != 1)
  {
    swift_bridgeObjectRelease(v8);
    uint64_t v9 = *(void *)(a1 + 568);
    if (v9 != 1)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(*(void *)(a1 + 584));
      swift_bridgeObjectRelease(*(void *)(a1 + 600));
    }

    swift_release();
    if (*(void *)(a1 + 640)) {
      sub_62AC((void *)(a1 + 616));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 672));
  }

  return swift_bridgeObjectRelease(*(void *)(a1 + 696));
}

void *sub_35504(void *a1, void *a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  a1[1] = v4;
  a1[2] = v5;
  uint64_t v6 = a2 + 3;
  __int128 v7 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 3) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(void *, void *, uint64_t))(v7 - 8);
  swift_retain(v4);
  id v10 = v5;
  v9(a1 + 3, v6, v8);
  uint64_t v11 = a2[9];
  a1[8] = a2[8];
  a1[9] = v11;
  uint64_t v12 = a2[11];
  swift_bridgeObjectRetain(v11);
  if (v12 == 1)
  {
    memcpy(a1 + 10, a2 + 10, 0x90uLL);
  }

  else
  {
    a1[10] = a2[10];
    a1[11] = v12;
    *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
    uint64_t v13 = a2[14];
    swift_bridgeObjectRetain(v12);
    if (v13 == 1)
    {
      __int128 v14 = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 15) = v14;
      *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    }

    else
    {
      a1[13] = a2[13];
      a1[14] = v13;
      uint64_t v15 = a2[16];
      a1[15] = a2[15];
      a1[16] = v15;
      uint64_t v16 = a2[18];
      a1[17] = a2[17];
      a1[18] = v16;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v16);
    }

    uint64_t v17 = a2[19];
    a1[19] = v17;
    uint64_t v18 = a2[23];
    swift_retain(v17);
    if (v18)
    {
      uint64_t v19 = a2[24];
      a1[23] = v18;
      a1[24] = v19;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))((uint64_t)(a1 + 20), (uint64_t)(a2 + 20), v18);
    }

    else
    {
      __int128 v20 = *((_OWORD *)a2 + 11);
      *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 11) = v20;
      a1[24] = a2[24];
    }

    *((_BYTE *)a1 + 200) = *((_BYTE *)a2 + 200);
    uint64_t v21 = a2[27];
    a1[26] = a2[26];
    a1[27] = v21;
    swift_bridgeObjectRetain(v21);
  }

  *((_BYTE *)a1 + 22sub_62AC(v0 + 4) = *((_BYTE *)a2 + 224);
  uint64_t v22 = a2[30];
  if (v22 == 1)
  {
    memcpy(a1 + 29, a2 + 29, 0x90uLL);
  }

  else
  {
    a1[29] = a2[29];
    a1[30] = v22;
    *((_BYTE *)a1 + 248) = *((_BYTE *)a2 + 248);
    uint64_t v23 = a2[33];
    swift_bridgeObjectRetain(v22);
    if (v23 == 1)
    {
      __int128 v24 = *((_OWORD *)a2 + 17);
      *((_OWORD *)a1 + swift_weakDestroy(v0 + 16) = *((_OWORD *)a2 + 16);
      *((_OWORD *)a1 + 17) = v24;
      *((_OWORD *)a1 + 18) = *((_OWORD *)a2 + 18);
    }

    else
    {
      a1[32] = a2[32];
      a1[33] = v23;
      uint64_t v25 = a2[35];
      a1[34] = a2[34];
      a1[35] = v25;
      uint64_t v26 = a2[37];
      a1[36] = a2[36];
      a1[37] = v26;
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v26);
    }

    uint64_t v27 = a2[38];
    a1[38] = v27;
    uint64_t v28 = a2[42];
    swift_retain(v27);
    if (v28)
    {
      uint64_t v29 = a2[43];
      a1[42] = v28;
      a1[43] = v29;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v28 - 8))((uint64_t)(a1 + 39), (uint64_t)(a2 + 39), v28);
    }

    else
    {
      __int128 v30 = *(_OWORD *)(a2 + 41);
      *(_OWORD *)(a1 + 39) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 41) = v30;
      a1[43] = a2[43];
    }

    *((_BYTE *)a1 + 352) = *((_BYTE *)a2 + 352);
    uint64_t v31 = a2[46];
    a1[45] = a2[45];
    a1[46] = v31;
    swift_bridgeObjectRetain(v31);
  }

  *((_BYTE *)a1 + 376) = *((_BYTE *)a2 + 376);
  uint64_t v32 = a2[49];
  if (v32 == 1)
  {
    memcpy(a1 + 48, a2 + 48, 0x90uLL);
  }

  else
  {
    a1[48] = a2[48];
    a1[49] = v32;
    *((_BYTE *)a1 + 400) = *((_BYTE *)a2 + 400);
    uint64_t v33 = a2[52];
    swift_bridgeObjectRetain(v32);
    if (v33 == 1)
    {
      __int128 v34 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 51) = *(_OWORD *)(a2 + 51);
      *(_OWORD *)(a1 + 53) = v34;
      *(_OWORD *)(a1 + 55) = *(_OWORD *)(a2 + 55);
    }

    else
    {
      a1[51] = a2[51];
      a1[52] = v33;
      uint64_t v35 = a2[54];
      a1[53] = a2[53];
      a1[54] = v35;
      uint64_t v36 = a2[56];
      a1[55] = a2[55];
      a1[56] = v36;
      swift_bridgeObjectRetain(v33);
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRetain(v36);
    }

    uint64_t v37 = a2[57];
    a1[57] = v37;
    uint64_t v38 = a2[61];
    swift_retain(v37);
    if (v38)
    {
      uint64_t v39 = a2[62];
      a1[61] = v38;
      a1[62] = v39;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8))((uint64_t)(a1 + 58), (uint64_t)(a2 + 58), v38);
    }

    else
    {
      __int128 v40 = *((_OWORD *)a2 + 30);
      *((_OWORD *)a1 + 29) = *((_OWORD *)a2 + 29);
      *((_OWORD *)a1 + 30) = v40;
      a1[62] = a2[62];
    }

    *((_BYTE *)a1 + 50sub_62AC(v0 + 4) = *((_BYTE *)a2 + 504);
    a1[64] = a2[64];
    uint64_t v41 = a2[65];
    a1[65] = v41;
    swift_bridgeObjectRetain(v41);
  }

  uint64_t v42 = a2[66];
  a1[66] = v42;
  uint64_t v43 = a2[68];
  swift_bridgeObjectRetain(v42);
  if (v43 == 1)
  {
    memcpy(a1 + 67, a2 + 67, 0x90uLL);
  }

  else
  {
    a1[67] = a2[67];
    a1[68] = v43;
    *((_BYTE *)a1 + 552) = *((_BYTE *)a2 + 552);
    uint64_t v44 = a2[71];
    swift_bridgeObjectRetain(v43);
    if (v44 == 1)
    {
      __int128 v45 = *((_OWORD *)a2 + 36);
      *((_OWORD *)a1 + 35) = *((_OWORD *)a2 + 35);
      *((_OWORD *)a1 + 36) = v45;
      *((_OWORD *)a1 + 37) = *((_OWORD *)a2 + 37);
    }

    else
    {
      a1[70] = a2[70];
      a1[71] = v44;
      a1[72] = a2[72];
      uint64_t v46 = a2[73];
      a1[73] = v46;
      a1[74] = a2[74];
      uint64_t v47 = a2[75];
      a1[75] = v47;
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRetain(v47);
    }

    uint64_t v48 = a2[76];
    a1[76] = v48;
    uint64_t v49 = a2[80];
    swift_retain(v48);
    if (v49)
    {
      a1[80] = v49;
      a1[81] = a2[81];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8))((uint64_t)(a1 + 77), (uint64_t)(a2 + 77), v49);
    }

    else
    {
      __int128 v50 = *(_OWORD *)(a2 + 79);
      *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
      *(_OWORD *)(a1 + 79) = v50;
      a1[81] = a2[81];
    }

    *((_BYTE *)a1 + 656) = *((_BYTE *)a2 + 656);
    a1[83] = a2[83];
    uint64_t v51 = a2[84];
    a1[84] = v51;
    swift_bridgeObjectRetain(v51);
  }

  *((_BYTE *)a1 + 680) = *((_BYTE *)a2 + 680);
  a1[86] = a2[86];
  uint64_t v52 = a2[87];
  a1[87] = v52;
  *((_WORD *)a1 + 352) = *((_WORD *)a2 + 352);
  swift_bridgeObjectRetain(v52);
  return a1;
}

uint64_t sub_359C8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release();
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  id v7 = v5;

  sub_6520((void *)(a1 + 24), (void *)(a2 + 24));
  *(void *)(a1 + 6sub_62AC(v0 + 4) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a2 + 88);
  if (v10 != 1)
  {
    if (v11 == 1)
    {
      sub_31D1C(a1 + 80);
      goto LABEL_7;
    }

    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    uint64_t v16 = *(void *)(a2 + 88);
    *(void *)(a1 + 88) = v16;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRelease(v10);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    uint64_t v17 = (__int128 *)(a1 + 104);
    uint64_t v18 = (__int128 *)(a2 + 104);
    uint64_t v19 = *(void *)(a1 + 112);
    uint64_t v20 = *(void *)(a2 + 112);
    if (v19 == 1)
    {
      if (v20 == 1)
      {
        __int128 v21 = *v18;
        __int128 v22 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = v22;
        *uint64_t v17 = v21;
      }

      else
      {
        *(void *)(a1 + 10sub_62AC(v0 + 4) = *(void *)(a2 + 104);
        uint64_t v33 = *(void *)(a2 + 112);
        *(void *)(a1 + 112) = v33;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        uint64_t v34 = *(void *)(a2 + 128);
        *(void *)(a1 + 128) = v34;
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        uint64_t v35 = *(void *)(a2 + 144);
        *(void *)(a1 + 14sub_62AC(v0 + 4) = v35;
        swift_bridgeObjectRetain(v33);
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v35);
      }
    }

    else if (v20 == 1)
    {
      sub_2B168((void *)(a1 + 104));
      __int128 v29 = *(_OWORD *)(a2 + 120);
      __int128 v28 = *(_OWORD *)(a2 + 136);
      *uint64_t v17 = *v18;
      *(_OWORD *)(a1 + 120) = v29;
      *(_OWORD *)(a1 + 136) = v28;
    }

    else
    {
      *(void *)(a1 + 10sub_62AC(v0 + 4) = *(void *)(a2 + 104);
      uint64_t v36 = *(void *)(a2 + 112);
      *(void *)(a1 + 112) = v36;
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRelease(v19);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      uint64_t v37 = *(void *)(a2 + 128);
      uint64_t v38 = *(void *)(a1 + 128);
      *(void *)(a1 + 128) = v37;
      swift_bridgeObjectRetain(v37);
      swift_bridgeObjectRelease(v38);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      uint64_t v39 = *(void *)(a2 + 144);
      uint64_t v40 = *(void *)(a1 + 144);
      *(void *)(a1 + 14sub_62AC(v0 + 4) = v39;
      swift_bridgeObjectRetain(v39);
      swift_bridgeObjectRelease(v40);
    }

    uint64_t v41 = *(void *)(a2 + 152);
    *(void *)(a1 + 152) = v41;
    swift_retain(v41);
    swift_release();
    uint64_t v42 = *(void *)(a2 + 184);
    if (*(void *)(a1 + 184))
    {
      if (v42)
      {
        sub_6520((void *)(a1 + 160), (void *)(a2 + 160));
LABEL_27:
        *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        uint64_t v45 = *(void *)(a2 + 216);
        uint64_t v46 = *(void *)(a1 + 216);
        *(void *)(a1 + 2swift_weakDestroy(v0 + 16) = v45;
        swift_bridgeObjectRetain(v45);
        swift_bridgeObjectRelease(v46);
        goto LABEL_28;
      }

      sub_62AC((void *)(a1 + 160));
    }

    else if (v42)
    {
      *(void *)(a1 + 18sub_62AC(v0 + 4) = v42;
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      (**(void (***)(uint64_t, uint64_t))(v42 - 8))(a1 + 160, a2 + 160);
      goto LABEL_27;
    }

    __int128 v43 = *(_OWORD *)(a2 + 160);
    __int128 v44 = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v43;
    *(_OWORD *)(a1 + 176) = v44;
    goto LABEL_27;
  }

  if (v11 == 1)
  {
LABEL_7:
    memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x90uLL);
    goto LABEL_28;
  }

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 88) = v12;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain(v12);
  if (v13 == 1)
  {
    __int128 v14 = *(_OWORD *)(a2 + 104);
    __int128 v15 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v15;
    *(_OWORD *)(a1 + 10sub_62AC(v0 + 4) = v14;
  }

  else
  {
    *(void *)(a1 + 10sub_62AC(v0 + 4) = *(void *)(a2 + 104);
    uint64_t v23 = *(void *)(a2 + 112);
    *(void *)(a1 + 112) = v23;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    uint64_t v24 = *(void *)(a2 + 128);
    *(void *)(a1 + 128) = v24;
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    uint64_t v25 = *(void *)(a2 + 144);
    *(void *)(a1 + 14sub_62AC(v0 + 4) = v25;
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v25);
  }

  uint64_t v26 = *(void *)(a2 + 152);
  *(void *)(a1 + 152) = v26;
  uint64_t v27 = *(void *)(a2 + 184);
  swift_retain(v26);
  if (v27)
  {
    *(void *)(a1 + 18sub_62AC(v0 + 4) = v27;
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 160, a2 + 160, v27);
  }

  else
  {
    __int128 v30 = *(_OWORD *)(a2 + 160);
    __int128 v31 = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v30;
    *(_OWORD *)(a1 + 176) = v31;
  }

  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v32 = *(void *)(a2 + 216);
  *(void *)(a1 + 2swift_weakDestroy(v0 + 16) = v32;
  swift_bridgeObjectRetain(v32);
LABEL_28:
  *(_BYTE *)(a1 + 22sub_62AC(v0 + 4) = *(_BYTE *)(a2 + 224);
  uint64_t v47 = *(void *)(a1 + 240);
  uint64_t v48 = *(void *)(a2 + 240);
  if (v47 != 1)
  {
    if (v48 == 1)
    {
      sub_31D1C(a1 + 232);
      goto LABEL_34;
    }

    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    uint64_t v53 = *(void *)(a2 + 240);
    *(void *)(a1 + 240) = v53;
    swift_bridgeObjectRetain(v53);
    swift_bridgeObjectRelease(v47);
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    uint64_t v54 = (__int128 *)(a1 + 256);
    uint64_t v55 = (__int128 *)(a2 + 256);
    uint64_t v56 = *(void *)(a1 + 264);
    uint64_t v57 = *(void *)(a2 + 264);
    if (v56 == 1)
    {
      if (v57 == 1)
      {
        __int128 v58 = *v55;
        __int128 v59 = *(_OWORD *)(a2 + 288);
        *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
        *(_OWORD *)(a1 + 288) = v59;
        *uint64_t v54 = v58;
      }

      else
      {
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        uint64_t v70 = *(void *)(a2 + 264);
        *(void *)(a1 + 26sub_62AC(v0 + 4) = v70;
        *(void *)(a1 + 272) = *(void *)(a2 + 272);
        uint64_t v71 = *(void *)(a2 + 280);
        *(void *)(a1 + 280) = v71;
        *(void *)(a1 + 288) = *(void *)(a2 + 288);
        uint64_t v72 = *(void *)(a2 + 296);
        *(void *)(a1 + 296) = v72;
        swift_bridgeObjectRetain(v70);
        swift_bridgeObjectRetain(v71);
        swift_bridgeObjectRetain(v72);
      }
    }

    else if (v57 == 1)
    {
      sub_2B168((void *)(a1 + 256));
      __int128 v66 = *(_OWORD *)(a2 + 272);
      __int128 v65 = *(_OWORD *)(a2 + 288);
      *uint64_t v54 = *v55;
      *(_OWORD *)(a1 + 272) = v66;
      *(_OWORD *)(a1 + 288) = v65;
    }

    else
    {
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      uint64_t v73 = *(void *)(a2 + 264);
      *(void *)(a1 + 26sub_62AC(v0 + 4) = v73;
      swift_bridgeObjectRetain(v73);
      swift_bridgeObjectRelease(v56);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      uint64_t v74 = *(void *)(a2 + 280);
      uint64_t v75 = *(void *)(a1 + 280);
      *(void *)(a1 + 280) = v74;
      swift_bridgeObjectRetain(v74);
      swift_bridgeObjectRelease(v75);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      uint64_t v76 = *(void *)(a2 + 296);
      uint64_t v77 = *(void *)(a1 + 296);
      *(void *)(a1 + 296) = v76;
      swift_bridgeObjectRetain(v76);
      swift_bridgeObjectRelease(v77);
    }

    uint64_t v78 = *(void *)(a2 + 304);
    *(void *)(a1 + 30sub_62AC(v0 + 4) = v78;
    swift_retain(v78);
    swift_release();
    uint64_t v79 = *(void *)(a2 + 336);
    if (*(void *)(a1 + 336))
    {
      if (v79)
      {
        sub_6520((void *)(a1 + 312), (void *)(a2 + 312));
LABEL_54:
        *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
        *(void *)(a1 + 360) = *(void *)(a2 + 360);
        uint64_t v82 = *(void *)(a2 + 368);
        uint64_t v83 = *(void *)(a1 + 368);
        *(void *)(a1 + 368) = v82;
        swift_bridgeObjectRetain(v82);
        swift_bridgeObjectRelease(v83);
        goto LABEL_55;
      }

      sub_62AC((void *)(a1 + 312));
    }

    else if (v79)
    {
      *(void *)(a1 + 336) = v79;
      *(void *)(a1 + 34sub_62AC(v0 + 4) = *(void *)(a2 + 344);
      (**(void (***)(uint64_t, uint64_t))(v79 - 8))(a1 + 312, a2 + 312);
      goto LABEL_54;
    }

    __int128 v80 = *(_OWORD *)(a2 + 312);
    __int128 v81 = *(_OWORD *)(a2 + 328);
    *(void *)(a1 + 34sub_62AC(v0 + 4) = *(void *)(a2 + 344);
    *(_OWORD *)(a1 + 312) = v80;
    *(_OWORD *)(a1 + 328) = v81;
    goto LABEL_54;
  }

  if (v48 == 1)
  {
LABEL_34:
    memcpy((void *)(a1 + 232), (const void *)(a2 + 232), 0x90uLL);
    goto LABEL_55;
  }

  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  uint64_t v49 = *(void *)(a2 + 240);
  *(void *)(a1 + 240) = v49;
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  uint64_t v50 = *(void *)(a2 + 264);
  swift_bridgeObjectRetain(v49);
  if (v50 == 1)
  {
    __int128 v51 = *(_OWORD *)(a2 + 256);
    __int128 v52 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v52;
    *(_OWORD *)(a1 + 256) = v51;
  }

  else
  {
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    uint64_t v60 = *(void *)(a2 + 264);
    *(void *)(a1 + 26sub_62AC(v0 + 4) = v60;
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    uint64_t v61 = *(void *)(a2 + 280);
    *(void *)(a1 + 280) = v61;
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    uint64_t v62 = *(void *)(a2 + 296);
    *(void *)(a1 + 296) = v62;
    swift_bridgeObjectRetain(v60);
    swift_bridgeObjectRetain(v61);
    swift_bridgeObjectRetain(v62);
  }

  uint64_t v63 = *(void *)(a2 + 304);
  *(void *)(a1 + 30sub_62AC(v0 + 4) = v63;
  uint64_t v64 = *(void *)(a2 + 336);
  swift_retain(v63);
  if (v64)
  {
    *(void *)(a1 + 336) = v64;
    *(void *)(a1 + 34sub_62AC(v0 + 4) = *(void *)(a2 + 344);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v64 - 8))(a1 + 312, a2 + 312, v64);
  }

  else
  {
    __int128 v67 = *(_OWORD *)(a2 + 312);
    __int128 v68 = *(_OWORD *)(a2 + 328);
    *(void *)(a1 + 34sub_62AC(v0 + 4) = *(void *)(a2 + 344);
    *(_OWORD *)(a1 + 312) = v67;
    *(_OWORD *)(a1 + 328) = v68;
  }

  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  uint64_t v69 = *(void *)(a2 + 368);
  *(void *)(a1 + 368) = v69;
  swift_bridgeObjectRetain(v69);
LABEL_55:
  __int128 v84 = (_BYTE *)(a2 + 400);
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  uint64_t v85 = *(void *)(a1 + 392);
  uint64_t v86 = *(void *)(a2 + 392);
  if (v85 != 1)
  {
    if (v86 == 1)
    {
      sub_2A9EC(a1 + 384);
      goto LABEL_61;
    }

    *(void *)(a1 + 38sub_62AC(v0 + 4) = *(void *)(a2 + 384);
    uint64_t v91 = *(void *)(a2 + 392);
    *(void *)(a1 + 392) = v91;
    swift_bridgeObjectRetain(v91);
    swift_bridgeObjectRelease(v85);
    *(_BYTE *)(a1 + 400) = *v84;
    uint64_t v92 = (__int128 *)(a1 + 408);
    uint64_t v93 = (__int128 *)(a2 + 408);
    uint64_t v94 = *(void *)(a1 + 416);
    uint64_t v95 = *(void *)(a2 + 416);
    if (v94 == 1)
    {
      if (v95 == 1)
      {
        __int128 v96 = *v93;
        __int128 v97 = *(_OWORD *)(a2 + 440);
        *(_OWORD *)(a1 + 42sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 424);
        *(_OWORD *)(a1 + 440) = v97;
        *uint64_t v92 = v96;
      }

      else
      {
        *(void *)(a1 + 408) = *(void *)(a2 + 408);
        uint64_t v108 = *(void *)(a2 + 416);
        *(void *)(a1 + 4swift_weakDestroy(v0 + 16) = v108;
        *(void *)(a1 + 42sub_62AC(v0 + 4) = *(void *)(a2 + 424);
        uint64_t v109 = *(void *)(a2 + 432);
        *(void *)(a1 + 432) = v109;
        *(void *)(a1 + 440) = *(void *)(a2 + 440);
        uint64_t v110 = *(void *)(a2 + 448);
        *(void *)(a1 + 448) = v110;
        swift_bridgeObjectRetain(v108);
        swift_bridgeObjectRetain(v109);
        swift_bridgeObjectRetain(v110);
      }
    }

    else if (v95 == 1)
    {
      sub_2B168((void *)(a1 + 408));
      __int128 v104 = *(_OWORD *)(a2 + 424);
      __int128 v103 = *(_OWORD *)(a2 + 440);
      *uint64_t v92 = *v93;
      *(_OWORD *)(a1 + 42sub_62AC(v0 + 4) = v104;
      *(_OWORD *)(a1 + 440) = v103;
    }

    else
    {
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      uint64_t v111 = *(void *)(a2 + 416);
      *(void *)(a1 + 4swift_weakDestroy(v0 + 16) = v111;
      swift_bridgeObjectRetain(v111);
      swift_bridgeObjectRelease(v94);
      *(void *)(a1 + 42sub_62AC(v0 + 4) = *(void *)(a2 + 424);
      uint64_t v112 = *(void *)(a2 + 432);
      uint64_t v113 = *(void *)(a1 + 432);
      *(void *)(a1 + 432) = v112;
      swift_bridgeObjectRetain(v112);
      swift_bridgeObjectRelease(v113);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      uint64_t v114 = *(void *)(a2 + 448);
      uint64_t v115 = *(void *)(a1 + 448);
      *(void *)(a1 + 448) = v114;
      swift_bridgeObjectRetain(v114);
      swift_bridgeObjectRelease(v115);
    }

    uint64_t v116 = *(void *)(a2 + 456);
    *(void *)(a1 + 456) = v116;
    swift_retain(v116);
    swift_release();
    uint64_t v117 = *(void *)(a2 + 488);
    if (*(void *)(a1 + 488))
    {
      if (v117)
      {
        sub_6520((void *)(a1 + 464), (void *)(a2 + 464));
LABEL_81:
        *(_BYTE *)(a1 + 50sub_62AC(v0 + 4) = *(_BYTE *)(a2 + 504);
        *(void *)(a1 + 512) = *(void *)(a2 + 512);
        uint64_t v120 = *(void *)(a2 + 520);
        uint64_t v121 = *(void *)(a1 + 520);
        *(void *)(a1 + 520) = v120;
        swift_bridgeObjectRetain(v120);
        swift_bridgeObjectRelease(v121);
        goto LABEL_82;
      }

      sub_62AC((void *)(a1 + 464));
    }

    else if (v117)
    {
      *(void *)(a1 + 488) = v117;
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      (**(void (***)(uint64_t, uint64_t))(v117 - 8))(a1 + 464, a2 + 464);
      goto LABEL_81;
    }

    __int128 v118 = *(_OWORD *)(a2 + 464);
    __int128 v119 = *(_OWORD *)(a2 + 480);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(_OWORD *)(a1 + 46sub_62AC(v0 + 4) = v118;
    *(_OWORD *)(a1 + 480) = v119;
    goto LABEL_81;
  }

  if (v86 == 1)
  {
LABEL_61:
    memcpy((void *)(a1 + 384), (const void *)(a2 + 384), 0x90uLL);
    goto LABEL_82;
  }

  *(void *)(a1 + 38sub_62AC(v0 + 4) = *(void *)(a2 + 384);
  uint64_t v87 = *(void *)(a2 + 392);
  *(void *)(a1 + 392) = v87;
  *(_BYTE *)(a1 + 400) = *v84;
  uint64_t v88 = *(void *)(a2 + 416);
  swift_bridgeObjectRetain(v87);
  if (v88 == 1)
  {
    __int128 v89 = *(_OWORD *)(a2 + 408);
    __int128 v90 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 42sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v90;
    *(_OWORD *)(a1 + 408) = v89;
  }

  else
  {
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    uint64_t v98 = *(void *)(a2 + 416);
    *(void *)(a1 + 4swift_weakDestroy(v0 + 16) = v98;
    *(void *)(a1 + 42sub_62AC(v0 + 4) = *(void *)(a2 + 424);
    uint64_t v99 = *(void *)(a2 + 432);
    *(void *)(a1 + 432) = v99;
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    uint64_t v100 = *(void *)(a2 + 448);
    *(void *)(a1 + 448) = v100;
    swift_bridgeObjectRetain(v98);
    swift_bridgeObjectRetain(v99);
    swift_bridgeObjectRetain(v100);
  }

  uint64_t v101 = *(void *)(a2 + 456);
  *(void *)(a1 + 456) = v101;
  uint64_t v102 = *(void *)(a2 + 488);
  swift_retain(v101);
  if (v102)
  {
    *(void *)(a1 + 488) = v102;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v102 - 8))(a1 + 464, a2 + 464, v102);
  }

  else
  {
    __int128 v105 = *(_OWORD *)(a2 + 464);
    __int128 v106 = *(_OWORD *)(a2 + 480);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(_OWORD *)(a1 + 46sub_62AC(v0 + 4) = v105;
    *(_OWORD *)(a1 + 480) = v106;
  }

  *(_BYTE *)(a1 + 50sub_62AC(v0 + 4) = *(_BYTE *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  uint64_t v107 = *(void *)(a2 + 520);
  *(void *)(a1 + 520) = v107;
  swift_bridgeObjectRetain(v107);
LABEL_82:
  uint64_t v122 = *(void *)(a1 + 528);
  uint64_t v123 = *(void *)(a2 + 528);
  *(void *)(a1 + 528) = v123;
  swift_bridgeObjectRetain(v123);
  swift_bridgeObjectRelease(v122);
  uint64_t v124 = *(void *)(a1 + 544);
  uint64_t v125 = *(void *)(a2 + 544);
  if (v124 != 1)
  {
    if (v125 == 1)
    {
      sub_2A9EC(a1 + 536);
      goto LABEL_88;
    }

    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    uint64_t v130 = *(void *)(a2 + 544);
    *(void *)(a1 + 54sub_62AC(v0 + 4) = v130;
    swift_bridgeObjectRetain(v130);
    swift_bridgeObjectRelease(v124);
    *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
    uint64_t v131 = (__int128 *)(a1 + 560);
    uint64_t v132 = (__int128 *)(a2 + 560);
    uint64_t v133 = *(void *)(a1 + 568);
    uint64_t v134 = *(void *)(a2 + 568);
    if (v133 == 1)
    {
      if (v134 == 1)
      {
        __int128 v135 = *v132;
        __int128 v136 = *(_OWORD *)(a2 + 592);
        *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
        *(_OWORD *)(a1 + 592) = v136;
        *uint64_t v131 = v135;
      }

      else
      {
        *(void *)(a1 + 560) = *(void *)(a2 + 560);
        uint64_t v147 = *(void *)(a2 + 568);
        *(void *)(a1 + 568) = v147;
        *(void *)(a1 + 576) = *(void *)(a2 + 576);
        uint64_t v148 = *(void *)(a2 + 584);
        *(void *)(a1 + 58sub_62AC(v0 + 4) = v148;
        *(void *)(a1 + 592) = *(void *)(a2 + 592);
        uint64_t v149 = *(void *)(a2 + 600);
        *(void *)(a1 + 600) = v149;
        swift_bridgeObjectRetain(v147);
        swift_bridgeObjectRetain(v148);
        swift_bridgeObjectRetain(v149);
      }
    }

    else if (v134 == 1)
    {
      sub_2B168((void *)(a1 + 560));
      __int128 v143 = *(_OWORD *)(a2 + 576);
      __int128 v142 = *(_OWORD *)(a2 + 592);
      *uint64_t v131 = *v132;
      *(_OWORD *)(a1 + 576) = v143;
      *(_OWORD *)(a1 + 592) = v142;
    }

    else
    {
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      uint64_t v150 = *(void *)(a2 + 568);
      *(void *)(a1 + 568) = v150;
      swift_bridgeObjectRetain(v150);
      swift_bridgeObjectRelease(v133);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      uint64_t v151 = *(void *)(a2 + 584);
      uint64_t v152 = *(void *)(a1 + 584);
      *(void *)(a1 + 58sub_62AC(v0 + 4) = v151;
      swift_bridgeObjectRetain(v151);
      swift_bridgeObjectRelease(v152);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      uint64_t v153 = *(void *)(a2 + 600);
      uint64_t v154 = *(void *)(a1 + 600);
      *(void *)(a1 + 600) = v153;
      swift_bridgeObjectRetain(v153);
      swift_bridgeObjectRelease(v154);
    }

    uint64_t v155 = *(void *)(a2 + 608);
    *(void *)(a1 + 608) = v155;
    swift_retain(v155);
    swift_release();
    uint64_t v156 = *(void *)(a2 + 640);
    if (*(void *)(a1 + 640))
    {
      if (v156)
      {
        sub_6520((void *)(a1 + 616), (void *)(a2 + 616));
LABEL_108:
        *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
        *(void *)(a1 + 66sub_62AC(v0 + 4) = *(void *)(a2 + 664);
        uint64_t v159 = *(void *)(a2 + 672);
        uint64_t v160 = *(void *)(a1 + 672);
        *(void *)(a1 + 672) = v159;
        swift_bridgeObjectRetain(v159);
        swift_bridgeObjectRelease(v160);
        goto LABEL_109;
      }

      sub_62AC((void *)(a1 + 616));
    }

    else if (v156)
    {
      *(void *)(a1 + 640) = v156;
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      (**(void (***)(uint64_t, uint64_t))(v156 - 8))(a1 + 616, a2 + 616);
      goto LABEL_108;
    }

    __int128 v157 = *(_OWORD *)(a2 + 616);
    __int128 v158 = *(_OWORD *)(a2 + 632);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(_OWORD *)(a1 + 6swift_weakDestroy(v0 + 16) = v157;
    *(_OWORD *)(a1 + 632) = v158;
    goto LABEL_108;
  }

  if (v125 == 1)
  {
LABEL_88:
    memcpy((void *)(a1 + 536), (const void *)(a2 + 536), 0x90uLL);
    goto LABEL_109;
  }

  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  uint64_t v126 = *(void *)(a2 + 544);
  *(void *)(a1 + 54sub_62AC(v0 + 4) = v126;
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  uint64_t v127 = *(void *)(a2 + 568);
  swift_bridgeObjectRetain(v126);
  if (v127 == 1)
  {
    __int128 v128 = *(_OWORD *)(a2 + 560);
    __int128 v129 = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 592) = v129;
    *(_OWORD *)(a1 + 560) = v128;
  }

  else
  {
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    uint64_t v137 = *(void *)(a2 + 568);
    *(void *)(a1 + 568) = v137;
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    uint64_t v138 = *(void *)(a2 + 584);
    *(void *)(a1 + 58sub_62AC(v0 + 4) = v138;
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    uint64_t v139 = *(void *)(a2 + 600);
    *(void *)(a1 + 600) = v139;
    swift_bridgeObjectRetain(v137);
    swift_bridgeObjectRetain(v138);
    swift_bridgeObjectRetain(v139);
  }

  uint64_t v140 = *(void *)(a2 + 608);
  *(void *)(a1 + 608) = v140;
  uint64_t v141 = *(void *)(a2 + 640);
  swift_retain(v140);
  if (v141)
  {
    *(void *)(a1 + 640) = v141;
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v141 - 8))(a1 + 616, a2 + 616, v141);
  }

  else
  {
    __int128 v144 = *(_OWORD *)(a2 + 616);
    __int128 v145 = *(_OWORD *)(a2 + 632);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(_OWORD *)(a1 + 6swift_weakDestroy(v0 + 16) = v144;
    *(_OWORD *)(a1 + 632) = v145;
  }

  *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
  *(void *)(a1 + 66sub_62AC(v0 + 4) = *(void *)(a2 + 664);
  uint64_t v146 = *(void *)(a2 + 672);
  *(void *)(a1 + 672) = v146;
  swift_bridgeObjectRetain(v146);
LABEL_109:
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  uint64_t v161 = *(void *)(a2 + 696);
  uint64_t v162 = *(void *)(a1 + 696);
  *(void *)(a1 + 696) = v161;
  swift_bridgeObjectRetain(v161);
  swift_bridgeObjectRelease(v162);
  *(_WORD *)(a1 + 70sub_62AC(v0 + 4) = *(_WORD *)(a2 + 704);
  return a1;
}

void *sub_366D8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2C2uLL);
}

void *sub_366E0(void *a1, void *a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  a1[1] = a2[1];
  swift_release();
  uint64_t v4 = (void *)a1[2];
  a1[2] = a2[2];

  sub_62AC(a1 + 3);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
  uint64_t v5 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a1[11];
  if (v6 == 1) {
    goto LABEL_4;
  }
  uint64_t v7 = a2[11];
  if (v7 == 1)
  {
    sub_31D1C((uint64_t)(a1 + 10));
LABEL_4:
    memcpy(a1 + 10, a2 + 10, 0x90uLL);
    goto LABEL_13;
  }

  a1[10] = a2[10];
  a1[11] = v7;
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
  uint64_t v8 = a1[14];
  if (v8 != 1)
  {
    uint64_t v9 = a2[14];
    if (v9 != 1)
    {
      a1[13] = a2[13];
      a1[14] = v9;
      swift_bridgeObjectRelease(v8);
      uint64_t v11 = a2[16];
      uint64_t v12 = a1[16];
      a1[15] = a2[15];
      a1[16] = v11;
      swift_bridgeObjectRelease(v12);
      uint64_t v13 = a2[18];
      uint64_t v14 = a1[18];
      a1[17] = a2[17];
      a1[18] = v13;
      swift_bridgeObjectRelease(v14);
      goto LABEL_10;
    }

    sub_2B168(a1 + 13);
  }

  __int128 v10 = *(_OWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(_OWORD *)(a1 + 15) = v10;
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
LABEL_10:
  a1[19] = a2[19];
  swift_release();
  if (a1[23]) {
    sub_62AC(a1 + 20);
  }
  __int128 v15 = *((_OWORD *)a2 + 11);
  *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 11) = v15;
  a1[24] = a2[24];
  *((_BYTE *)a1 + 200) = *((_BYTE *)a2 + 200);
  uint64_t v16 = a2[27];
  uint64_t v17 = a1[27];
  a1[26] = a2[26];
  a1[27] = v16;
  swift_bridgeObjectRelease(v17);
LABEL_13:
  *((_BYTE *)a1 + 22sub_62AC(v0 + 4) = *((_BYTE *)a2 + 224);
  uint64_t v18 = a1[30];
  if (v18 == 1)
  {
LABEL_16:
    memcpy(a1 + 29, a2 + 29, 0x90uLL);
    goto LABEL_25;
  }

  uint64_t v19 = a2[30];
  if (v19 == 1)
  {
    sub_31D1C((uint64_t)(a1 + 29));
    goto LABEL_16;
  }

  a1[29] = a2[29];
  a1[30] = v19;
  swift_bridgeObjectRelease(v18);
  *((_BYTE *)a1 + 248) = *((_BYTE *)a2 + 248);
  uint64_t v20 = a1[33];
  if (v20 != 1)
  {
    uint64_t v21 = a2[33];
    if (v21 != 1)
    {
      a1[32] = a2[32];
      a1[33] = v21;
      swift_bridgeObjectRelease(v20);
      uint64_t v23 = a2[35];
      uint64_t v24 = a1[35];
      a1[34] = a2[34];
      a1[35] = v23;
      swift_bridgeObjectRelease(v24);
      uint64_t v25 = a2[37];
      uint64_t v26 = a1[37];
      a1[36] = a2[36];
      a1[37] = v25;
      swift_bridgeObjectRelease(v26);
      goto LABEL_22;
    }

    sub_2B168(a1 + 32);
  }

  __int128 v22 = *((_OWORD *)a2 + 17);
  *((_OWORD *)a1 + swift_weakDestroy(v0 + 16) = *((_OWORD *)a2 + 16);
  *((_OWORD *)a1 + 17) = v22;
  *((_OWORD *)a1 + 18) = *((_OWORD *)a2 + 18);
LABEL_22:
  a1[38] = a2[38];
  swift_release();
  if (a1[42]) {
    sub_62AC(a1 + 39);
  }
  __int128 v27 = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 39) = *(_OWORD *)(a2 + 39);
  *(_OWORD *)(a1 + 41) = v27;
  a1[43] = a2[43];
  *((_BYTE *)a1 + 352) = *((_BYTE *)a2 + 352);
  uint64_t v28 = a2[46];
  uint64_t v29 = a1[46];
  a1[45] = a2[45];
  a1[46] = v28;
  swift_bridgeObjectRelease(v29);
LABEL_25:
  *((_BYTE *)a1 + 376) = *((_BYTE *)a2 + 376);
  uint64_t v30 = a1[49];
  if (v30 == 1)
  {
LABEL_28:
    memcpy(a1 + 48, a2 + 48, 0x90uLL);
    goto LABEL_37;
  }

  uint64_t v31 = a2[49];
  if (v31 == 1)
  {
    sub_2A9EC((uint64_t)(a1 + 48));
    goto LABEL_28;
  }

  a1[48] = a2[48];
  a1[49] = v31;
  swift_bridgeObjectRelease(v30);
  *((_BYTE *)a1 + 400) = *((_BYTE *)a2 + 400);
  uint64_t v32 = a1[52];
  if (v32 != 1)
  {
    uint64_t v33 = a2[52];
    if (v33 != 1)
    {
      a1[51] = a2[51];
      a1[52] = v33;
      swift_bridgeObjectRelease(v32);
      uint64_t v35 = a2[54];
      uint64_t v36 = a1[54];
      a1[53] = a2[53];
      a1[54] = v35;
      swift_bridgeObjectRelease(v36);
      uint64_t v37 = a2[56];
      uint64_t v38 = a1[56];
      a1[55] = a2[55];
      a1[56] = v37;
      swift_bridgeObjectRelease(v38);
      goto LABEL_34;
    }

    sub_2B168(a1 + 51);
  }

  __int128 v34 = *(_OWORD *)(a2 + 53);
  *(_OWORD *)(a1 + 51) = *(_OWORD *)(a2 + 51);
  *(_OWORD *)(a1 + 53) = v34;
  *(_OWORD *)(a1 + 55) = *(_OWORD *)(a2 + 55);
LABEL_34:
  a1[57] = a2[57];
  swift_release();
  if (a1[61]) {
    sub_62AC(a1 + 58);
  }
  __int128 v39 = *((_OWORD *)a2 + 30);
  *((_OWORD *)a1 + 29) = *((_OWORD *)a2 + 29);
  *((_OWORD *)a1 + 30) = v39;
  a1[62] = a2[62];
  *((_BYTE *)a1 + 50sub_62AC(v0 + 4) = *((_BYTE *)a2 + 504);
  a1[64] = a2[64];
  uint64_t v40 = a1[65];
  a1[65] = a2[65];
  swift_bridgeObjectRelease(v40);
LABEL_37:
  uint64_t v41 = a1[66];
  a1[66] = a2[66];
  swift_bridgeObjectRelease(v41);
  uint64_t v42 = a1[68];
  if (v42 == 1)
  {
LABEL_40:
    memcpy(a1 + 67, a2 + 67, 0x90uLL);
    goto LABEL_49;
  }

  uint64_t v43 = a2[68];
  if (v43 == 1)
  {
    sub_2A9EC((uint64_t)(a1 + 67));
    goto LABEL_40;
  }

  a1[67] = a2[67];
  a1[68] = v43;
  swift_bridgeObjectRelease(v42);
  *((_BYTE *)a1 + 552) = *((_BYTE *)a2 + 552);
  uint64_t v44 = a1[71];
  if (v44 != 1)
  {
    uint64_t v45 = a2[71];
    if (v45 != 1)
    {
      a1[70] = a2[70];
      a1[71] = v45;
      swift_bridgeObjectRelease(v44);
      a1[72] = a2[72];
      uint64_t v47 = a1[73];
      a1[73] = a2[73];
      swift_bridgeObjectRelease(v47);
      a1[74] = a2[74];
      uint64_t v48 = a1[75];
      a1[75] = a2[75];
      swift_bridgeObjectRelease(v48);
      goto LABEL_46;
    }

    sub_2B168(a1 + 70);
  }

  __int128 v46 = *((_OWORD *)a2 + 36);
  *((_OWORD *)a1 + 35) = *((_OWORD *)a2 + 35);
  *((_OWORD *)a1 + 36) = v46;
  *((_OWORD *)a1 + 37) = *((_OWORD *)a2 + 37);
LABEL_46:
  a1[76] = a2[76];
  swift_release();
  if (a1[80]) {
    sub_62AC(a1 + 77);
  }
  __int128 v49 = *(_OWORD *)(a2 + 79);
  *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 79) = v49;
  a1[81] = a2[81];
  *((_BYTE *)a1 + 656) = *((_BYTE *)a2 + 656);
  a1[83] = a2[83];
  uint64_t v50 = a1[84];
  a1[84] = a2[84];
  swift_bridgeObjectRelease(v50);
LABEL_49:
  *((_BYTE *)a1 + 680) = *((_BYTE *)a2 + 680);
  a1[86] = a2[86];
  uint64_t v51 = a1[87];
  a1[87] = a2[87];
  swift_bridgeObjectRelease(v51);
  *((_WORD *)a1 + 352) = *((_WORD *)a2 + 352);
  return a1;
}

uint64_t sub_36C00(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 706))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_36C40(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 696) = 0LL;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 2swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 18sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 10sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 2sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 66sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_WORD *)(result + 70sub_62AC(v0 + 4) = 0;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 6swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 58sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 50sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 42sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 34sub_62AC(v0 + 4) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 26sub_62AC(v0 + 4) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 706) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + swift_weakDestroy(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 706) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void _s12PresentationVMa()
{
}

void _s12PresentationV13ShelfBehaviorVMa()
{
}

BOOL sub_36D54(Swift::String string)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71C58, v3);
  sub_309BC();
  return v1 != 0;
}

uint64_t sub_36D90(Swift::String string)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71C90, v3);
  sub_309BC();
  if (v1 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v1) {
    return v4;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_36DD8(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x646570756F7267LL;
  }
  else {
    return 0x6E69616C70LL;
  }
}

BOOL sub_36E18@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_36D54(*a1);
  *a2 = result;
  return result;
}

void sub_36E4C(void *a1@<X8>)
{
  *a1 = 0x6853656C676E6973LL;
  a1[1] = 0xEB00000000666C65LL;
}

void sub_36E70(char *a1, unsigned __int8 *a2)
{
}

void sub_36E7C()
{
}

uint64_t sub_36E84(uint64_t a1)
{
  return sub_33368(a1, *v1);
}

void sub_36E8C(uint64_t a1)
{
}

uint64_t sub_36E94@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_36D90(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_36EC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_36DD8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_36EEC()
{
  unint64_t result = qword_7E990;
  if (!qword_7E990)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F5A4, &unk_747B8);
    atomic_store(result, (unint64_t *)&qword_7E990);
  }

  return result;
}

uint64_t sub_36F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LayoutFactory(0LL);
  swift_allocObject(v3, 16LL, 7LL);
  sub_84EC(0x6E61726165707061LL, 0xEA00000000006563LL, (uint64_t)&unk_74830, v4, v5, v6, v7, v8);
  if (v1)
  {
    uint64_t v10 = sub_6BC8();
    sub_6D14(v10);
    sub_AD00();
    uint64_t v11 = sub_9A58();
    return sub_D79C(v11);
  }

  else
  {
    *(_BYTE *)a1 = v9 & 1;
    __chkstk_darwin(v9);
    sub_350B4();
    sub_58E4(0xD000000000000011LL, 0x8000000000064640LL, (uint64_t)&unk_74830, (uint64_t)sub_37408, v13, v14, v15, v16);
    *(void *)(a1 + 8) = v17;
    __chkstk_darwin(v17);
    sub_350B4();
    sub_4ECC(0x756F72676B636162LL, 0xEF726F6C6F43646ELL, (uint64_t)&unk_74830, (uint64_t)sub_D6C4, v18, v19, v20, v21);
    *(void *)(a1 + swift_weakDestroy(v0 + 16) = v22;
    __chkstk_darwin(v22);
    sub_5AF8();
    sub_6010(&v31, (uint64_t)&v32);
    sub_6010(&v32, a1 + 24);
    uint64_t v23 = sub_23DB8();
    *(void *)(a1 + 6sub_62AC(v0 + 4) = v23;
    *(void *)(a1 + 72) = v24;
    __chkstk_darwin(v23);
    sub_350B4();
    sub_5C00();
    uint64_t v25 = memcpy((void *)(a1 + 80), v30, 0x270uLL);
    __chkstk_darwin(v25);
    sub_350B4();
    sub_5B1C();
    __int16 v27 = v26;
    sub_AD00();
    uint64_t v28 = sub_6BC8();
    sub_6D14(v28);
    uint64_t v29 = sub_9A58();
    uint64_t result = sub_D79C(v29);
    *(_BYTE *)(a1 + 70sub_62AC(v0 + 4) = v27;
    *(_BYTE *)(a1 + 705) = HIBYTE(v27) & 1;
  }

  return result;
}

uint64_t sub_37304@<X0>(uint64_t a1@<X8>)
{
  return sub_36F28(a1);
}

BOOL sub_37318( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (v8) {
    swift_errorRelease(v8);
  }
  uint64_t v10 = sub_9A58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(a2, v10);
  uint64_t v11 = sub_6BC8();
  sub_6D14(v11);
  return v8 != 0;
}

BOOL sub_373AC@<W0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>)
{
  BOOL result = sub_37318(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9) {
    *a9 = result;
  }
  return result;
}

uint64_t sub_373DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_8A7C(a1, a2);
  *(_WORD *)a3 = result;
  *(_BYTE *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_37408@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_8C10(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_37430(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7CB60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_37470()
{
}

uint64_t sub_37478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_373DC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_37480(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_374C0 + 4 * byte_5F4FA[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_374E0 + 4 * byte_5F4FF[v4]))();
  }
}

_BYTE *sub_374C0(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_374E0(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_374E8(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_374F0(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_374F8(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_37500(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

void _s12PresentationV13ShelfBehaviorV23InterShelfSelectionTypeOMa()
{
}

unint64_t sub_3751C()
{
  unint64_t result = qword_7E998;
  if (!qword_7E998)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F688, &unk_74908);
    atomic_store(result, (unint64_t *)&qword_7E998);
  }

  return result;
}

void sub_37558(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_5F6C(&qword_7E9A0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Shelf(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v17 - v15;
  sub_3769C(a2, a3, a4, (uint64_t)v10);
  if (sub_6028((uint64_t)v10, 1LL, v11) == 1)
  {
    sub_37850((uint64_t)v10);
  }

  else
  {
    sub_3780C((uint64_t)v10, (uint64_t)v16);
    sub_2FE44(a1, 1, v13);
    sub_37890((uint64_t)v13, a4);
    sub_377D0((uint64_t)v13);
    sub_377D0((uint64_t)v16);
  }

  sub_9ABC();
}

void sub_3769C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for Shelf(0LL);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (a3)
  {
    uint64_t v13 = v4 + 1;
    if (a3 == 1) {
      uint64_t v13 = v4;
    }
  }

  else
  {
    uint64_t v13 = v4 + 2;
  }

  uint64_t v14 = *v13;
  uint64_t v15 = *(void *)(*v13 + 16LL);
  if (v15)
  {
    uint64_t v16 = v14 + ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v17 = *(void *)(v10 + 72);
    swift_bridgeObjectRetain(v14);
    while (1)
    {
      sub_30418(v16, (uint64_t)v12);
      uint64_t v18 = v12[1];
      BOOL v19 = *v12 == a1 && v18 == a2;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v18, a1, a2, 0LL) & 1) != 0) {
        break;
      }
      sub_377D0((uint64_t)v12);
      v16 += v17;
      if (!--v15) {
        goto LABEL_17;
      }
    }

    sub_3780C((uint64_t)v12, a4);
    uint64_t v20 = 0LL;
  }

  else
  {
    swift_bridgeObjectRetain(*v13);
LABEL_17:
    uint64_t v20 = 1LL;
  }

  sub_5FEC(a4, v20, 1LL, v9);
  swift_bridgeObjectRelease(v14);
  sub_9ABC();
}

uint64_t sub_377D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Shelf(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3780C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_37850(uint64_t a1)
{
  uint64_t v2 = sub_5F6C(&qword_7E9A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_37890(uint64_t a1, char a2)
{
  if (a2)
  {
    if (a2 == 1)
    {
      __chkstk_darwin(a1);
      sub_37A20();
      uint64_t v5 = sub_37A34((void (*)(uint64_t))sub_37A0C, v3, v4);
      uint64_t result = swift_bridgeObjectRelease(*v2);
      *uint64_t v2 = v5;
    }

    else
    {
      __chkstk_darwin(a1);
      sub_37A20();
      uint64_t v12 = sub_37A34((void (*)(uint64_t))sub_379F0, v10, v11);
      uint64_t result = swift_bridgeObjectRelease(v2[1]);
      v2[1] = v12;
    }
  }

  else
  {
    __chkstk_darwin(a1);
    sub_37A20();
    uint64_t v9 = sub_37A34((void (*)(uint64_t))sub_37A0C, v7, v8);
    uint64_t result = swift_bridgeObjectRelease(v2[2]);
    v2[2] = v9;
  }

  return result;
}

uint64_t sub_37988@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a2[1];
  BOOL v9 = v6 == *a2 && v7 == v8;
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *a2, v8, 0LL) & 1) == 0) {
    a2 = a1;
  }
  return sub_30418((uint64_t)a2, a3);
}

uint64_t sub_379F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_37988(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_37A0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_379F0(a1, a2);
}

  ;
}

void *sub_37A34(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_4A920(a1, a2, a3);
}

void *sub_37A3C(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void *)(v5 + ((v4 + 16LL) & ~(unint64_t)v4));
    swift_retain(v5);
  }

  else
  {
    uint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    a1[1] = v7;
    a1[2] = v8;
    uint64_t v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
    uint64_t v11 = a2[6];
    uint64_t v10 = (void *)a2[7];
    a1[6] = v11;
    a1[7] = v10;
    uint64_t v12 = a2 + 8;
    __int128 v13 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 11) = v13;
    uint64_t v14 = v13;
    uint64_t v15 = **(void (***)(void *, void *, uint64_t))(v13 - 8);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_retain(v11);
    id v16 = v10;
    v15(a1 + 8, v12, v14);
    uint64_t v17 = a2[14];
    a1[13] = a2[13];
    a1[14] = v17;
    uint64_t v18 = a2[16];
    swift_bridgeObjectRetain(v17);
    if (v18 == 1)
    {
      memcpy(a1 + 15, a2 + 15, 0x90uLL);
      uint64_t v19 = a3;
    }

    else
    {
      a1[15] = a2[15];
      a1[16] = v18;
      *((_BYTE *)a1 + 136) = *((_BYTE *)a2 + 136);
      uint64_t v20 = a2[19];
      swift_bridgeObjectRetain(v18);
      if (v20 == 1)
      {
        __int128 v21 = *((_OWORD *)a2 + 10);
        *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
        *((_OWORD *)a1 + 10) = v21;
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
      }

      else
      {
        a1[18] = a2[18];
        a1[19] = v20;
        uint64_t v22 = a2[21];
        a1[20] = a2[20];
        a1[21] = v22;
        uint64_t v23 = a2[23];
        a1[22] = a2[22];
        a1[23] = v23;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRetain(v23);
      }

      uint64_t v19 = a3;
      uint64_t v24 = a2[24];
      a1[24] = v24;
      uint64_t v25 = a2[28];
      swift_retain(v24);
      if (v25)
      {
        uint64_t v26 = a2[29];
        a1[28] = v25;
        a1[29] = v26;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))((uint64_t)(a1 + 25), (uint64_t)(a2 + 25), v25);
      }

      else
      {
        __int128 v27 = *(_OWORD *)(a2 + 27);
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        *(_OWORD *)(a1 + 27) = v27;
        a1[29] = a2[29];
      }

      *((_BYTE *)a1 + 240) = *((_BYTE *)a2 + 240);
      uint64_t v28 = a2[32];
      a1[31] = a2[31];
      a1[32] = v28;
      swift_bridgeObjectRetain(v28);
    }

    *((_BYTE *)a1 + 26sub_62AC(v0 + 4) = *((_BYTE *)a2 + 264);
    uint64_t v29 = a2[35];
    if (v29 == 1)
    {
      memcpy(a1 + 34, a2 + 34, 0x90uLL);
    }

    else
    {
      a1[34] = a2[34];
      a1[35] = v29;
      *((_BYTE *)a1 + 288) = *((_BYTE *)a2 + 288);
      uint64_t v30 = a2[38];
      swift_bridgeObjectRetain(v29);
      if (v30 == 1)
      {
        __int128 v31 = *(_OWORD *)(a2 + 39);
        *(_OWORD *)(a1 + 37) = *(_OWORD *)(a2 + 37);
        *(_OWORD *)(a1 + 39) = v31;
        *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      }

      else
      {
        a1[37] = a2[37];
        a1[38] = v30;
        uint64_t v32 = a2[40];
        a1[39] = a2[39];
        a1[40] = v32;
        uint64_t v33 = a2[42];
        a1[41] = a2[41];
        a1[42] = v33;
        swift_bridgeObjectRetain(v30);
        swift_bridgeObjectRetain(v32);
        swift_bridgeObjectRetain(v33);
      }

      uint64_t v34 = a2[43];
      a1[43] = v34;
      uint64_t v35 = a2[47];
      swift_retain(v34);
      if (v35)
      {
        uint64_t v36 = a2[48];
        a1[47] = v35;
        a1[48] = v36;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8))((uint64_t)(a1 + 44), (uint64_t)(a2 + 44), v35);
      }

      else
      {
        __int128 v37 = *((_OWORD *)a2 + 23);
        *((_OWORD *)a1 + 22) = *((_OWORD *)a2 + 22);
        *((_OWORD *)a1 + 23) = v37;
        a1[48] = a2[48];
      }

      *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
      uint64_t v38 = a2[51];
      a1[50] = a2[50];
      a1[51] = v38;
      swift_bridgeObjectRetain(v38);
    }

    *((_BYTE *)a1 + 4swift_weakDestroy(v0 + 16) = *((_BYTE *)a2 + 416);
    uint64_t v39 = a2[54];
    if (v39 == 1)
    {
      memcpy(a1 + 53, a2 + 53, 0x90uLL);
    }

    else
    {
      a1[53] = a2[53];
      a1[54] = v39;
      *((_BYTE *)a1 + 440) = *((_BYTE *)a2 + 440);
      uint64_t v40 = a2[57];
      swift_bridgeObjectRetain(v39);
      if (v40 == 1)
      {
        __int128 v41 = *((_OWORD *)a2 + 29);
        *((_OWORD *)a1 + 28) = *((_OWORD *)a2 + 28);
        *((_OWORD *)a1 + 29) = v41;
        *((_OWORD *)a1 + 30) = *((_OWORD *)a2 + 30);
      }

      else
      {
        a1[56] = a2[56];
        a1[57] = v40;
        uint64_t v42 = a2[59];
        a1[58] = a2[58];
        a1[59] = v42;
        uint64_t v43 = a2[61];
        a1[60] = a2[60];
        a1[61] = v43;
        swift_bridgeObjectRetain(v40);
        swift_bridgeObjectRetain(v42);
        swift_bridgeObjectRetain(v43);
      }

      uint64_t v44 = a2[62];
      a1[62] = v44;
      uint64_t v45 = a2[66];
      swift_retain(v44);
      if (v45)
      {
        a1[66] = v45;
        a1[67] = a2[67];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v45 - 8))((uint64_t)(a1 + 63), (uint64_t)(a2 + 63), v45);
      }

      else
      {
        __int128 v46 = *(_OWORD *)(a2 + 65);
        *(_OWORD *)(a1 + 63) = *(_OWORD *)(a2 + 63);
        *(_OWORD *)(a1 + 65) = v46;
        a1[67] = a2[67];
      }

      *((_BYTE *)a1 + 54sub_62AC(v0 + 4) = *((_BYTE *)a2 + 544);
      a1[69] = a2[69];
      uint64_t v47 = a2[70];
      a1[70] = v47;
      swift_bridgeObjectRetain(v47);
    }

    uint64_t v48 = a2[71];
    a1[71] = v48;
    uint64_t v49 = a2[73];
    swift_bridgeObjectRetain(v48);
    if (v49 == 1)
    {
      memcpy(a1 + 72, a2 + 72, 0x90uLL);
    }

    else
    {
      a1[72] = a2[72];
      a1[73] = v49;
      *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
      uint64_t v50 = a2[76];
      swift_bridgeObjectRetain(v49);
      if (v50 == 1)
      {
        __int128 v51 = *(_OWORD *)(a2 + 77);
        *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
        *(_OWORD *)(a1 + 77) = v51;
        *(_OWORD *)(a1 + 79) = *(_OWORD *)(a2 + 79);
      }

      else
      {
        a1[75] = a2[75];
        a1[76] = v50;
        a1[77] = a2[77];
        uint64_t v52 = a2[78];
        a1[78] = v52;
        a1[79] = a2[79];
        uint64_t v53 = a2[80];
        a1[80] = v53;
        swift_bridgeObjectRetain(v50);
        swift_bridgeObjectRetain(v52);
        swift_bridgeObjectRetain(v53);
      }

      uint64_t v54 = a2[81];
      a1[81] = v54;
      uint64_t v55 = a2[85];
      swift_retain(v54);
      if (v55)
      {
        a1[85] = v55;
        a1[86] = a2[86];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v55 - 8))((uint64_t)(a1 + 82), (uint64_t)(a2 + 82), v55);
      }

      else
      {
        __int128 v56 = *((_OWORD *)a2 + 42);
        *((_OWORD *)a1 + 41) = *((_OWORD *)a2 + 41);
        *((_OWORD *)a1 + 42) = v56;
        a1[86] = a2[86];
      }

      *((_BYTE *)a1 + 696) = *((_BYTE *)a2 + 696);
      a1[88] = a2[88];
      uint64_t v57 = a2[89];
      a1[89] = v57;
      swift_bridgeObjectRetain(v57);
    }

    *((_BYTE *)a1 + 720) = *((_BYTE *)a2 + 720);
    a1[91] = a2[91];
    uint64_t v58 = a2[92];
    a1[92] = v58;
    *((_WORD *)a1 + 372) = *((_WORD *)a2 + 372);
    uint64_t v59 = *(int *)(v19 + 36);
    uint64_t v60 = (char *)a1 + v59;
    uint64_t v61 = (char *)a2 + v59;
    uint64_t v62 = type metadata accessor for PageMetrics(0LL);
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16LL);
    swift_bridgeObjectRetain(v58);
    v63(v60, v61, v62);
  }

  return a1;
}

uint64_t sub_37FB0(uint64_t a1, uint64_t a2)
{
  sub_62AC((void *)(a1 + 64));
  swift_bridgeObjectRelease(*(void *)(a1 + 112));
  uint64_t v4 = *(void *)(a1 + 128);
  if (v4 != 1)
  {
    swift_bridgeObjectRelease(v4);
    uint64_t v5 = *(void *)(a1 + 152);
    if (v5 != 1)
    {
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(*(void *)(a1 + 168));
      swift_bridgeObjectRelease(*(void *)(a1 + 184));
    }

    swift_release();
    if (*(void *)(a1 + 224)) {
      sub_62AC((void *)(a1 + 200));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 256));
  }

  uint64_t v6 = *(void *)(a1 + 280);
  if (v6 != 1)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v7 = *(void *)(a1 + 304);
    if (v7 != 1)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease(*(void *)(a1 + 320));
      swift_bridgeObjectRelease(*(void *)(a1 + 336));
    }

    swift_release();
    if (*(void *)(a1 + 376)) {
      sub_62AC((void *)(a1 + 352));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 408));
  }

  uint64_t v8 = *(void *)(a1 + 432);
  if (v8 != 1)
  {
    swift_bridgeObjectRelease(v8);
    uint64_t v9 = *(void *)(a1 + 456);
    if (v9 != 1)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(*(void *)(a1 + 472));
      swift_bridgeObjectRelease(*(void *)(a1 + 488));
    }

    swift_release();
    if (*(void *)(a1 + 528)) {
      sub_62AC((void *)(a1 + 504));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 560));
  }

  swift_bridgeObjectRelease(*(void *)(a1 + 568));
  uint64_t v10 = *(void *)(a1 + 584);
  if (v10 != 1)
  {
    swift_bridgeObjectRelease(v10);
    uint64_t v11 = *(void *)(a1 + 608);
    if (v11 != 1)
    {
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(*(void *)(a1 + 624));
      swift_bridgeObjectRelease(*(void *)(a1 + 640));
    }

    swift_release();
    if (*(void *)(a1 + 680)) {
      sub_62AC((void *)(a1 + 656));
    }
    swift_bridgeObjectRelease(*(void *)(a1 + 712));
  }

  swift_bridgeObjectRelease(*(void *)(a1 + 736));
  uint64_t v12 = a1 + *(int *)(a2 + 36);
  uint64_t v13 = type metadata accessor for PageMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);
}

void *sub_38180(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  uint64_t v9 = a2[4];
  a1[4] = v9;
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  uint64_t v11 = a2[6];
  uint64_t v10 = (void *)a2[7];
  a1[6] = v11;
  a1[7] = v10;
  uint64_t v12 = a2 + 8;
  __int128 v13 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 11) = v13;
  uint64_t v14 = v13;
  uint64_t v15 = **(void (***)(void *, void *, uint64_t))(v13 - 8);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_retain(v11);
  id v16 = v10;
  v15(a1 + 8, v12, v14);
  uint64_t v17 = a2[14];
  a1[13] = a2[13];
  a1[14] = v17;
  uint64_t v18 = a2[16];
  swift_bridgeObjectRetain(v17);
  if (v18 == 1)
  {
    memcpy(a1 + 15, a2 + 15, 0x90uLL);
    uint64_t v19 = a3;
  }

  else
  {
    a1[15] = a2[15];
    a1[16] = v18;
    *((_BYTE *)a1 + 136) = *((_BYTE *)a2 + 136);
    uint64_t v20 = a2[19];
    swift_bridgeObjectRetain(v18);
    if (v20 == 1)
    {
      __int128 v21 = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 10) = v21;
      *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
    }

    else
    {
      a1[18] = a2[18];
      a1[19] = v20;
      uint64_t v22 = a2[21];
      a1[20] = a2[20];
      a1[21] = v22;
      uint64_t v23 = a2[23];
      a1[22] = a2[22];
      a1[23] = v23;
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v23);
    }

    uint64_t v19 = a3;
    uint64_t v24 = a2[24];
    a1[24] = v24;
    uint64_t v25 = a2[28];
    swift_retain(v24);
    if (v25)
    {
      uint64_t v26 = a2[29];
      a1[28] = v25;
      a1[29] = v26;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))((uint64_t)(a1 + 25), (uint64_t)(a2 + 25), v25);
    }

    else
    {
      __int128 v27 = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      *(_OWORD *)(a1 + 27) = v27;
      a1[29] = a2[29];
    }

    *((_BYTE *)a1 + 240) = *((_BYTE *)a2 + 240);
    uint64_t v28 = a2[32];
    a1[31] = a2[31];
    a1[32] = v28;
    swift_bridgeObjectRetain(v28);
  }

  *((_BYTE *)a1 + 26sub_62AC(v0 + 4) = *((_BYTE *)a2 + 264);
  uint64_t v29 = a2[35];
  if (v29 == 1)
  {
    memcpy(a1 + 34, a2 + 34, 0x90uLL);
  }

  else
  {
    a1[34] = a2[34];
    a1[35] = v29;
    *((_BYTE *)a1 + 288) = *((_BYTE *)a2 + 288);
    uint64_t v30 = a2[38];
    swift_bridgeObjectRetain(v29);
    if (v30 == 1)
    {
      __int128 v31 = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 37) = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 39) = v31;
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    }

    else
    {
      a1[37] = a2[37];
      a1[38] = v30;
      uint64_t v32 = a2[40];
      a1[39] = a2[39];
      a1[40] = v32;
      uint64_t v33 = a2[42];
      a1[41] = a2[41];
      a1[42] = v33;
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v33);
    }

    uint64_t v34 = a2[43];
    a1[43] = v34;
    uint64_t v35 = a2[47];
    swift_retain(v34);
    if (v35)
    {
      uint64_t v36 = a2[48];
      a1[47] = v35;
      a1[48] = v36;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8))((uint64_t)(a1 + 44), (uint64_t)(a2 + 44), v35);
    }

    else
    {
      __int128 v37 = *((_OWORD *)a2 + 23);
      *((_OWORD *)a1 + 22) = *((_OWORD *)a2 + 22);
      *((_OWORD *)a1 + 23) = v37;
      a1[48] = a2[48];
    }

    *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
    uint64_t v38 = a2[51];
    a1[50] = a2[50];
    a1[51] = v38;
    swift_bridgeObjectRetain(v38);
  }

  *((_BYTE *)a1 + 4swift_weakDestroy(v0 + 16) = *((_BYTE *)a2 + 416);
  uint64_t v39 = a2[54];
  if (v39 == 1)
  {
    memcpy(a1 + 53, a2 + 53, 0x90uLL);
  }

  else
  {
    a1[53] = a2[53];
    a1[54] = v39;
    *((_BYTE *)a1 + 440) = *((_BYTE *)a2 + 440);
    uint64_t v40 = a2[57];
    swift_bridgeObjectRetain(v39);
    if (v40 == 1)
    {
      __int128 v41 = *((_OWORD *)a2 + 29);
      *((_OWORD *)a1 + 28) = *((_OWORD *)a2 + 28);
      *((_OWORD *)a1 + 29) = v41;
      *((_OWORD *)a1 + 30) = *((_OWORD *)a2 + 30);
    }

    else
    {
      a1[56] = a2[56];
      a1[57] = v40;
      uint64_t v42 = a2[59];
      a1[58] = a2[58];
      a1[59] = v42;
      uint64_t v43 = a2[61];
      a1[60] = a2[60];
      a1[61] = v43;
      swift_bridgeObjectRetain(v40);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
    }

    uint64_t v44 = a2[62];
    a1[62] = v44;
    uint64_t v45 = a2[66];
    swift_retain(v44);
    if (v45)
    {
      a1[66] = v45;
      a1[67] = a2[67];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v45 - 8))((uint64_t)(a1 + 63), (uint64_t)(a2 + 63), v45);
    }

    else
    {
      __int128 v46 = *(_OWORD *)(a2 + 65);
      *(_OWORD *)(a1 + 63) = *(_OWORD *)(a2 + 63);
      *(_OWORD *)(a1 + 65) = v46;
      a1[67] = a2[67];
    }

    *((_BYTE *)a1 + 54sub_62AC(v0 + 4) = *((_BYTE *)a2 + 544);
    a1[69] = a2[69];
    uint64_t v47 = a2[70];
    a1[70] = v47;
    swift_bridgeObjectRetain(v47);
  }

  uint64_t v48 = a2[71];
  a1[71] = v48;
  uint64_t v49 = a2[73];
  swift_bridgeObjectRetain(v48);
  if (v49 == 1)
  {
    memcpy(a1 + 72, a2 + 72, 0x90uLL);
  }

  else
  {
    a1[72] = a2[72];
    a1[73] = v49;
    *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
    uint64_t v50 = a2[76];
    swift_bridgeObjectRetain(v49);
    if (v50 == 1)
    {
      __int128 v51 = *(_OWORD *)(a2 + 77);
      *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
      *(_OWORD *)(a1 + 77) = v51;
      *(_OWORD *)(a1 + 79) = *(_OWORD *)(a2 + 79);
    }

    else
    {
      a1[75] = a2[75];
      a1[76] = v50;
      a1[77] = a2[77];
      uint64_t v52 = a2[78];
      a1[78] = v52;
      a1[79] = a2[79];
      uint64_t v53 = a2[80];
      a1[80] = v53;
      swift_bridgeObjectRetain(v50);
      swift_bridgeObjectRetain(v52);
      swift_bridgeObjectRetain(v53);
    }

    uint64_t v54 = a2[81];
    a1[81] = v54;
    uint64_t v55 = a2[85];
    swift_retain(v54);
    if (v55)
    {
      a1[85] = v55;
      a1[86] = a2[86];
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v55 - 8))((uint64_t)(a1 + 82), (uint64_t)(a2 + 82), v55);
    }

    else
    {
      __int128 v56 = *((_OWORD *)a2 + 42);
      *((_OWORD *)a1 + 41) = *((_OWORD *)a2 + 41);
      *((_OWORD *)a1 + 42) = v56;
      a1[86] = a2[86];
    }

    *((_BYTE *)a1 + 696) = *((_BYTE *)a2 + 696);
    a1[88] = a2[88];
    uint64_t v57 = a2[89];
    a1[89] = v57;
    swift_bridgeObjectRetain(v57);
  }

  *((_BYTE *)a1 + 720) = *((_BYTE *)a2 + 720);
  a1[91] = a2[91];
  uint64_t v58 = a2[92];
  a1[92] = v58;
  *((_WORD *)a1 + 372) = *((_WORD *)a2 + 372);
  uint64_t v59 = *(int *)(v19 + 36);
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = type metadata accessor for PageMetrics(0LL);
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16LL);
  swift_bridgeObjectRetain(v58);
  v63(v60, v61, v62);
  return a1;
}

uint64_t *sub_386D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[1];
  uint64_t v9 = a1[1];
  a1[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a2[2];
  uint64_t v11 = a1[2];
  a1[2] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[3] = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v13 = a1[4];
  a1[4] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  uint64_t v14 = a2[6];
  a1[6] = v14;
  swift_retain(v14);
  swift_release();
  uint64_t v15 = (void *)a2[7];
  id v16 = (void *)a1[7];
  a1[7] = (uint64_t)v15;
  id v17 = v15;

  sub_6520(a1 + 8, a2 + 8);
  a1[13] = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a1[14];
  a1[14] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  uint64_t v20 = a1[16];
  uint64_t v21 = a2[16];
  if (v20 != 1)
  {
    if (v21 == 1)
    {
      sub_31D1C((uint64_t)(a1 + 15));
      goto LABEL_7;
    }

    a1[15] = a2[15];
    uint64_t v26 = a2[16];
    a1[16] = v26;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(v20);
    *((_BYTE *)a1 + 136) = *((_BYTE *)a2 + 136);
    __int128 v27 = (__int128 *)(a1 + 18);
    uint64_t v28 = (__int128 *)(a2 + 18);
    uint64_t v29 = a1[19];
    uint64_t v30 = a2[19];
    if (v29 == 1)
    {
      if (v30 == 1)
      {
        __int128 v31 = *v28;
        __int128 v32 = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
        *((_OWORD *)a1 + 11) = v32;
        __int128 *v27 = v31;
      }

      else
      {
        a1[18] = a2[18];
        uint64_t v43 = a2[19];
        a1[19] = v43;
        a1[20] = a2[20];
        uint64_t v44 = a2[21];
        a1[21] = v44;
        a1[22] = a2[22];
        uint64_t v45 = a2[23];
        a1[23] = v45;
        swift_bridgeObjectRetain(v43);
        swift_bridgeObjectRetain(v44);
        swift_bridgeObjectRetain(v45);
      }
    }

    else if (v30 == 1)
    {
      sub_2B168(a1 + 18);
      __int128 v39 = *((_OWORD *)a2 + 10);
      __int128 v38 = *((_OWORD *)a2 + 11);
      __int128 *v27 = *v28;
      *((_OWORD *)a1 + 10) = v39;
      *((_OWORD *)a1 + 11) = v38;
    }

    else
    {
      a1[18] = a2[18];
      uint64_t v46 = a2[19];
      a1[19] = v46;
      swift_bridgeObjectRetain(v46);
      swift_bridgeObjectRelease(v29);
      a1[20] = a2[20];
      uint64_t v47 = a2[21];
      uint64_t v48 = a1[21];
      a1[21] = v47;
      swift_bridgeObjectRetain(v47);
      swift_bridgeObjectRelease(v48);
      a1[22] = a2[22];
      uint64_t v49 = a2[23];
      uint64_t v50 = a1[23];
      a1[23] = v49;
      swift_bridgeObjectRetain(v49);
      swift_bridgeObjectRelease(v50);
    }

    uint64_t v51 = a2[24];
    a1[24] = v51;
    swift_retain(v51);
    swift_release();
    uint64_t v52 = a2[28];
    if (a1[28])
    {
      if (v52)
      {
        sub_6520(a1 + 25, a2 + 25);
LABEL_27:
        *((_BYTE *)a1 + 240) = *((_BYTE *)a2 + 240);
        a1[31] = a2[31];
        uint64_t v55 = a2[32];
        uint64_t v56 = a1[32];
        a1[32] = v55;
        swift_bridgeObjectRetain(v55);
        swift_bridgeObjectRelease(v56);
        goto LABEL_28;
      }

      sub_62AC(a1 + 25);
    }

    else if (v52)
    {
      a1[28] = v52;
      a1[29] = a2[29];
      (**(void (***)(uint64_t, uint64_t))(v52 - 8))((uint64_t)(a1 + 25), (uint64_t)(a2 + 25));
      goto LABEL_27;
    }

    __int128 v53 = *(_OWORD *)(a2 + 25);
    __int128 v54 = *(_OWORD *)(a2 + 27);
    a1[29] = a2[29];
    *(_OWORD *)(a1 + 25) = v53;
    *(_OWORD *)(a1 + 27) = v54;
    goto LABEL_27;
  }

  if (v21 == 1)
  {
LABEL_7:
    memcpy(a1 + 15, a2 + 15, 0x90uLL);
    goto LABEL_28;
  }

  a1[15] = a2[15];
  uint64_t v22 = a2[16];
  a1[16] = v22;
  *((_BYTE *)a1 + 136) = *((_BYTE *)a2 + 136);
  uint64_t v23 = a2[19];
  swift_bridgeObjectRetain(v22);
  if (v23 == 1)
  {
    __int128 v24 = *((_OWORD *)a2 + 9);
    __int128 v25 = *((_OWORD *)a2 + 11);
    *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 11) = v25;
    *((_OWORD *)a1 + 9) = v24;
  }

  else
  {
    a1[18] = a2[18];
    uint64_t v33 = a2[19];
    a1[19] = v33;
    a1[20] = a2[20];
    uint64_t v34 = a2[21];
    a1[21] = v34;
    a1[22] = a2[22];
    uint64_t v35 = a2[23];
    a1[23] = v35;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v34);
    swift_bridgeObjectRetain(v35);
  }

  uint64_t v36 = a2[24];
  a1[24] = v36;
  uint64_t v37 = a2[28];
  swift_retain(v36);
  if (v37)
  {
    a1[28] = v37;
    a1[29] = a2[29];
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8))((uint64_t)(a1 + 25), (uint64_t)(a2 + 25), v37);
  }

  else
  {
    __int128 v40 = *(_OWORD *)(a2 + 25);
    __int128 v41 = *(_OWORD *)(a2 + 27);
    a1[29] = a2[29];
    *(_OWORD *)(a1 + 25) = v40;
    *(_OWORD *)(a1 + 27) = v41;
  }

  *((_BYTE *)a1 + 240) = *((_BYTE *)a2 + 240);
  a1[31] = a2[31];
  uint64_t v42 = a2[32];
  a1[32] = v42;
  swift_bridgeObjectRetain(v42);
LABEL_28:
  uint64_t v57 = a2 + 36;
  *((_BYTE *)a1 + 26sub_62AC(v0 + 4) = *((_BYTE *)a2 + 264);
  uint64_t v58 = a1[35];
  uint64_t v59 = a2[35];
  if (v58 != 1)
  {
    if (v59 == 1)
    {
      sub_31D1C((uint64_t)(a1 + 34));
      goto LABEL_34;
    }

    a1[34] = a2[34];
    uint64_t v64 = a2[35];
    a1[35] = v64;
    swift_bridgeObjectRetain(v64);
    swift_bridgeObjectRelease(v58);
    *((_BYTE *)a1 + 288) = *v57;
    __int128 v65 = (__int128 *)(a1 + 37);
    __int128 v66 = (__int128 *)(a2 + 37);
    uint64_t v67 = a1[38];
    uint64_t v68 = a2[38];
    if (v67 == 1)
    {
      if (v68 == 1)
      {
        __int128 v69 = *v66;
        __int128 v70 = *(_OWORD *)(a2 + 41);
        *(_OWORD *)(a1 + 39) = *(_OWORD *)(a2 + 39);
        *(_OWORD *)(a1 + 41) = v70;
        __int128 *v65 = v69;
      }

      else
      {
        a1[37] = a2[37];
        uint64_t v81 = a2[38];
        a1[38] = v81;
        a1[39] = a2[39];
        uint64_t v82 = a2[40];
        a1[40] = v82;
        a1[41] = a2[41];
        uint64_t v83 = a2[42];
        a1[42] = v83;
        swift_bridgeObjectRetain(v81);
        swift_bridgeObjectRetain(v82);
        swift_bridgeObjectRetain(v83);
      }
    }

    else if (v68 == 1)
    {
      sub_2B168(a1 + 37);
      __int128 v77 = *(_OWORD *)(a2 + 39);
      __int128 v76 = *(_OWORD *)(a2 + 41);
      __int128 *v65 = *v66;
      *(_OWORD *)(a1 + 39) = v77;
      *(_OWORD *)(a1 + 41) = v76;
    }

    else
    {
      a1[37] = a2[37];
      uint64_t v84 = a2[38];
      a1[38] = v84;
      swift_bridgeObjectRetain(v84);
      swift_bridgeObjectRelease(v67);
      a1[39] = a2[39];
      uint64_t v85 = a2[40];
      uint64_t v86 = a1[40];
      a1[40] = v85;
      swift_bridgeObjectRetain(v85);
      swift_bridgeObjectRelease(v86);
      a1[41] = a2[41];
      uint64_t v87 = a2[42];
      uint64_t v88 = a1[42];
      a1[42] = v87;
      swift_bridgeObjectRetain(v87);
      swift_bridgeObjectRelease(v88);
    }

    uint64_t v89 = a2[43];
    a1[43] = v89;
    swift_retain(v89);
    swift_release();
    uint64_t v90 = a2[47];
    if (a1[47])
    {
      if (v90)
      {
        sub_6520(a1 + 44, a2 + 44);
LABEL_54:
        *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
        a1[50] = a2[50];
        uint64_t v93 = a2[51];
        uint64_t v94 = a1[51];
        a1[51] = v93;
        swift_bridgeObjectRetain(v93);
        swift_bridgeObjectRelease(v94);
        goto LABEL_55;
      }

      sub_62AC(a1 + 44);
    }

    else if (v90)
    {
      a1[47] = v90;
      a1[48] = a2[48];
      (**(void (***)(uint64_t, uint64_t))(v90 - 8))((uint64_t)(a1 + 44), (uint64_t)(a2 + 44));
      goto LABEL_54;
    }

    __int128 v91 = *((_OWORD *)a2 + 22);
    __int128 v92 = *((_OWORD *)a2 + 23);
    a1[48] = a2[48];
    *((_OWORD *)a1 + 22) = v91;
    *((_OWORD *)a1 + 23) = v92;
    goto LABEL_54;
  }

  if (v59 == 1)
  {
LABEL_34:
    memcpy(a1 + 34, a2 + 34, 0x90uLL);
    goto LABEL_55;
  }

  a1[34] = a2[34];
  uint64_t v60 = a2[35];
  a1[35] = v60;
  *((_BYTE *)a1 + 288) = *v57;
  uint64_t v61 = a2[38];
  swift_bridgeObjectRetain(v60);
  if (v61 == 1)
  {
    __int128 v62 = *(_OWORD *)(a2 + 37);
    __int128 v63 = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 39) = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 41) = v63;
    *(_OWORD *)(a1 + 37) = v62;
  }

  else
  {
    a1[37] = a2[37];
    uint64_t v71 = a2[38];
    a1[38] = v71;
    a1[39] = a2[39];
    uint64_t v72 = a2[40];
    a1[40] = v72;
    a1[41] = a2[41];
    uint64_t v73 = a2[42];
    a1[42] = v73;
    swift_bridgeObjectRetain(v71);
    swift_bridgeObjectRetain(v72);
    swift_bridgeObjectRetain(v73);
  }

  uint64_t v74 = a2[43];
  a1[43] = v74;
  uint64_t v75 = a2[47];
  swift_retain(v74);
  if (v75)
  {
    a1[47] = v75;
    a1[48] = a2[48];
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v75 - 8))((uint64_t)(a1 + 44), (uint64_t)(a2 + 44), v75);
  }

  else
  {
    __int128 v78 = *((_OWORD *)a2 + 22);
    __int128 v79 = *((_OWORD *)a2 + 23);
    a1[48] = a2[48];
    *((_OWORD *)a1 + 22) = v78;
    *((_OWORD *)a1 + 23) = v79;
  }

  *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
  a1[50] = a2[50];
  uint64_t v80 = a2[51];
  a1[51] = v80;
  swift_bridgeObjectRetain(v80);
LABEL_55:
  *((_BYTE *)a1 + 4swift_weakDestroy(v0 + 16) = *((_BYTE *)a2 + 416);
  uint64_t v95 = a1[54];
  uint64_t v96 = a2[54];
  if (v95 != 1)
  {
    if (v96 == 1)
    {
      sub_2A9EC((uint64_t)(a1 + 53));
      goto LABEL_61;
    }

    a1[53] = a2[53];
    uint64_t v101 = a2[54];
    a1[54] = v101;
    swift_bridgeObjectRetain(v101);
    swift_bridgeObjectRelease(v95);
    *((_BYTE *)a1 + 440) = *((_BYTE *)a2 + 440);
    uint64_t v102 = (__int128 *)(a1 + 56);
    __int128 v103 = (__int128 *)(a2 + 56);
    uint64_t v104 = a1[57];
    uint64_t v105 = a2[57];
    if (v104 == 1)
    {
      if (v105 == 1)
      {
        __int128 v106 = *v103;
        __int128 v107 = *((_OWORD *)a2 + 30);
        *((_OWORD *)a1 + 29) = *((_OWORD *)a2 + 29);
        *((_OWORD *)a1 + 30) = v107;
        *uint64_t v102 = v106;
      }

      else
      {
        a1[56] = a2[56];
        uint64_t v118 = a2[57];
        a1[57] = v118;
        a1[58] = a2[58];
        uint64_t v119 = a2[59];
        a1[59] = v119;
        a1[60] = a2[60];
        uint64_t v120 = a2[61];
        a1[61] = v120;
        swift_bridgeObjectRetain(v118);
        swift_bridgeObjectRetain(v119);
        swift_bridgeObjectRetain(v120);
      }
    }

    else if (v105 == 1)
    {
      sub_2B168(a1 + 56);
      __int128 v114 = *((_OWORD *)a2 + 29);
      __int128 v113 = *((_OWORD *)a2 + 30);
      *uint64_t v102 = *v103;
      *((_OWORD *)a1 + 29) = v114;
      *((_OWORD *)a1 + 30) = v113;
    }

    else
    {
      a1[56] = a2[56];
      uint64_t v121 = a2[57];
      a1[57] = v121;
      swift_bridgeObjectRetain(v121);
      swift_bridgeObjectRelease(v104);
      a1[58] = a2[58];
      uint64_t v122 = a2[59];
      uint64_t v123 = a1[59];
      a1[59] = v122;
      swift_bridgeObjectRetain(v122);
      swift_bridgeObjectRelease(v123);
      a1[60] = a2[60];
      uint64_t v124 = a2[61];
      uint64_t v125 = a1[61];
      a1[61] = v124;
      swift_bridgeObjectRetain(v124);
      swift_bridgeObjectRelease(v125);
    }

    uint64_t v126 = a2[62];
    a1[62] = v126;
    swift_retain(v126);
    swift_release();
    uint64_t v127 = a2[66];
    if (a1[66])
    {
      if (v127)
      {
        sub_6520(a1 + 63, a2 + 63);
LABEL_81:
        *((_BYTE *)a1 + 54sub_62AC(v0 + 4) = *((_BYTE *)a2 + 544);
        a1[69] = a2[69];
        uint64_t v130 = a2[70];
        uint64_t v131 = a1[70];
        a1[70] = v130;
        swift_bridgeObjectRetain(v130);
        swift_bridgeObjectRelease(v131);
        goto LABEL_82;
      }

      sub_62AC(a1 + 63);
    }

    else if (v127)
    {
      a1[66] = v127;
      a1[67] = a2[67];
      (**(void (***)(uint64_t, uint64_t))(v127 - 8))((uint64_t)(a1 + 63), (uint64_t)(a2 + 63));
      goto LABEL_81;
    }

    __int128 v128 = *(_OWORD *)(a2 + 63);
    __int128 v129 = *(_OWORD *)(a2 + 65);
    a1[67] = a2[67];
    *(_OWORD *)(a1 + 63) = v128;
    *(_OWORD *)(a1 + 65) = v129;
    goto LABEL_81;
  }

  if (v96 == 1)
  {
LABEL_61:
    memcpy(a1 + 53, a2 + 53, 0x90uLL);
    goto LABEL_82;
  }

  a1[53] = a2[53];
  uint64_t v97 = a2[54];
  a1[54] = v97;
  *((_BYTE *)a1 + 440) = *((_BYTE *)a2 + 440);
  uint64_t v98 = a2[57];
  swift_bridgeObjectRetain(v97);
  if (v98 == 1)
  {
    __int128 v99 = *((_OWORD *)a2 + 28);
    __int128 v100 = *((_OWORD *)a2 + 30);
    *((_OWORD *)a1 + 29) = *((_OWORD *)a2 + 29);
    *((_OWORD *)a1 + 30) = v100;
    *((_OWORD *)a1 + 28) = v99;
  }

  else
  {
    a1[56] = a2[56];
    uint64_t v108 = a2[57];
    a1[57] = v108;
    a1[58] = a2[58];
    uint64_t v109 = a2[59];
    a1[59] = v109;
    a1[60] = a2[60];
    uint64_t v110 = a2[61];
    a1[61] = v110;
    swift_bridgeObjectRetain(v108);
    swift_bridgeObjectRetain(v109);
    swift_bridgeObjectRetain(v110);
  }

  uint64_t v111 = a2[62];
  a1[62] = v111;
  uint64_t v112 = a2[66];
  swift_retain(v111);
  if (v112)
  {
    a1[66] = v112;
    a1[67] = a2[67];
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v112 - 8))((uint64_t)(a1 + 63), (uint64_t)(a2 + 63), v112);
  }

  else
  {
    __int128 v115 = *(_OWORD *)(a2 + 63);
    __int128 v116 = *(_OWORD *)(a2 + 65);
    a1[67] = a2[67];
    *(_OWORD *)(a1 + 63) = v115;
    *(_OWORD *)(a1 + 65) = v116;
  }

  *((_BYTE *)a1 + 54sub_62AC(v0 + 4) = *((_BYTE *)a2 + 544);
  a1[69] = a2[69];
  uint64_t v117 = a2[70];
  a1[70] = v117;
  swift_bridgeObjectRetain(v117);
LABEL_82:
  uint64_t v132 = a1[71];
  uint64_t v133 = a2[71];
  a1[71] = v133;
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRelease(v132);
  uint64_t v134 = a1[73];
  uint64_t v135 = a2[73];
  if (v134 != 1)
  {
    if (v135 == 1)
    {
      sub_2A9EC((uint64_t)(a1 + 72));
      goto LABEL_88;
    }

    a1[72] = a2[72];
    uint64_t v140 = a2[73];
    a1[73] = v140;
    swift_bridgeObjectRetain(v140);
    swift_bridgeObjectRelease(v134);
    *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
    uint64_t v141 = (__int128 *)(a1 + 75);
    __int128 v142 = (__int128 *)(a2 + 75);
    uint64_t v143 = a1[76];
    uint64_t v144 = a2[76];
    if (v143 == 1)
    {
      if (v144 == 1)
      {
        __int128 v145 = *v142;
        __int128 v146 = *(_OWORD *)(a2 + 79);
        *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
        *(_OWORD *)(a1 + 79) = v146;
        *uint64_t v141 = v145;
      }

      else
      {
        a1[75] = a2[75];
        uint64_t v157 = a2[76];
        a1[76] = v157;
        a1[77] = a2[77];
        uint64_t v158 = a2[78];
        a1[78] = v158;
        a1[79] = a2[79];
        uint64_t v159 = a2[80];
        a1[80] = v159;
        swift_bridgeObjectRetain(v157);
        swift_bridgeObjectRetain(v158);
        swift_bridgeObjectRetain(v159);
      }
    }

    else if (v144 == 1)
    {
      sub_2B168(a1 + 75);
      __int128 v153 = *(_OWORD *)(a2 + 77);
      __int128 v152 = *(_OWORD *)(a2 + 79);
      *uint64_t v141 = *v142;
      *(_OWORD *)(a1 + 77) = v153;
      *(_OWORD *)(a1 + 79) = v152;
    }

    else
    {
      a1[75] = a2[75];
      uint64_t v160 = a2[76];
      a1[76] = v160;
      swift_bridgeObjectRetain(v160);
      swift_bridgeObjectRelease(v143);
      a1[77] = a2[77];
      uint64_t v161 = a2[78];
      uint64_t v162 = a1[78];
      a1[78] = v161;
      swift_bridgeObjectRetain(v161);
      swift_bridgeObjectRelease(v162);
      a1[79] = a2[79];
      uint64_t v163 = a2[80];
      uint64_t v164 = a1[80];
      a1[80] = v163;
      swift_bridgeObjectRetain(v163);
      swift_bridgeObjectRelease(v164);
    }

    uint64_t v165 = a2[81];
    a1[81] = v165;
    swift_retain(v165);
    swift_release();
    uint64_t v166 = a2[85];
    if (a1[85])
    {
      if (v166)
      {
        sub_6520(a1 + 82, a2 + 82);
LABEL_108:
        *((_BYTE *)a1 + 696) = *((_BYTE *)a2 + 696);
        a1[88] = a2[88];
        uint64_t v169 = a2[89];
        uint64_t v170 = a1[89];
        a1[89] = v169;
        swift_bridgeObjectRetain(v169);
        swift_bridgeObjectRelease(v170);
        goto LABEL_109;
      }

      sub_62AC(a1 + 82);
    }

    else if (v166)
    {
      a1[85] = v166;
      a1[86] = a2[86];
      (**(void (***)(uint64_t, uint64_t))(v166 - 8))((uint64_t)(a1 + 82), (uint64_t)(a2 + 82));
      goto LABEL_108;
    }

    __int128 v167 = *((_OWORD *)a2 + 41);
    __int128 v168 = *((_OWORD *)a2 + 42);
    a1[86] = a2[86];
    *((_OWORD *)a1 + 41) = v167;
    *((_OWORD *)a1 + 42) = v168;
    goto LABEL_108;
  }

  if (v135 == 1)
  {
LABEL_88:
    memcpy(a1 + 72, a2 + 72, 0x90uLL);
    goto LABEL_109;
  }

  a1[72] = a2[72];
  uint64_t v136 = a2[73];
  a1[73] = v136;
  *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
  uint64_t v137 = a2[76];
  swift_bridgeObjectRetain(v136);
  if (v137 == 1)
  {
    __int128 v138 = *(_OWORD *)(a2 + 75);
    __int128 v139 = *(_OWORD *)(a2 + 79);
    *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
    *(_OWORD *)(a1 + 79) = v139;
    *(_OWORD *)(a1 + 75) = v138;
  }

  else
  {
    a1[75] = a2[75];
    uint64_t v147 = a2[76];
    a1[76] = v147;
    a1[77] = a2[77];
    uint64_t v148 = a2[78];
    a1[78] = v148;
    a1[79] = a2[79];
    uint64_t v149 = a2[80];
    a1[80] = v149;
    swift_bridgeObjectRetain(v147);
    swift_bridgeObjectRetain(v148);
    swift_bridgeObjectRetain(v149);
  }

  uint64_t v150 = a2[81];
  a1[81] = v150;
  uint64_t v151 = a2[85];
  swift_retain(v150);
  if (v151)
  {
    a1[85] = v151;
    a1[86] = a2[86];
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v151 - 8))((uint64_t)(a1 + 82), (uint64_t)(a2 + 82), v151);
  }

  else
  {
    __int128 v154 = *((_OWORD *)a2 + 41);
    __int128 v155 = *((_OWORD *)a2 + 42);
    a1[86] = a2[86];
    *((_OWORD *)a1 + 41) = v154;
    *((_OWORD *)a1 + 42) = v155;
  }

  *((_BYTE *)a1 + 696) = *((_BYTE *)a2 + 696);
  a1[88] = a2[88];
  uint64_t v156 = a2[89];
  a1[89] = v156;
  swift_bridgeObjectRetain(v156);
LABEL_109:
  *((_BYTE *)a1 + 720) = *((_BYTE *)a2 + 720);
  a1[91] = a2[91];
  uint64_t v171 = a2[92];
  uint64_t v172 = a1[92];
  a1[92] = v171;
  swift_bridgeObjectRetain(v171);
  swift_bridgeObjectRelease(v172);
  *((_WORD *)a1 + 372) = *((_WORD *)a2 + 372);
  uint64_t v173 = *(int *)(a3 + 36);
  uint64_t v174 = (uint64_t)a1 + v173;
  uint64_t v175 = (uint64_t)a2 + v173;
  uint64_t v176 = type metadata accessor for PageMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v176 - 8) + 24LL))(v174, v175, v176);
  return a1;
}

uint64_t sub_39480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 24);
  memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x2C2uLL);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for PageMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  return a1;
}

void *sub_39504(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = a2[4];
  uint64_t v10 = a1[4];
  a1[3] = a2[3];
  a1[4] = v9;
  swift_bridgeObjectRelease(v10);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  a1[6] = a2[6];
  swift_release();
  uint64_t v11 = (void *)a1[7];
  a1[7] = a2[7];

  sub_62AC(a1 + 8);
  __int128 v12 = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + sub_62AC(v0 + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 5) = v12;
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
  uint64_t v13 = a1[14];
  a1[14] = a2[14];
  swift_bridgeObjectRelease(v13);
  uint64_t v14 = a1[16];
  if (v14 == 1) {
    goto LABEL_4;
  }
  uint64_t v15 = a2[16];
  if (v15 == 1)
  {
    sub_31D1C((uint64_t)(a1 + 15));
LABEL_4:
    memcpy(a1 + 15, a2 + 15, 0x90uLL);
    goto LABEL_13;
  }

  a1[15] = a2[15];
  a1[16] = v15;
  swift_bridgeObjectRelease(v14);
  *((_BYTE *)a1 + 136) = *((_BYTE *)a2 + 136);
  uint64_t v16 = a1[19];
  if (v16 != 1)
  {
    uint64_t v17 = a2[19];
    if (v17 != 1)
    {
      a1[18] = a2[18];
      a1[19] = v17;
      swift_bridgeObjectRelease(v16);
      uint64_t v19 = a2[21];
      uint64_t v20 = a1[21];
      a1[20] = a2[20];
      a1[21] = v19;
      swift_bridgeObjectRelease(v20);
      uint64_t v21 = a2[23];
      uint64_t v22 = a1[23];
      a1[22] = a2[22];
      a1[23] = v21;
      swift_bridgeObjectRelease(v22);
      goto LABEL_10;
    }

    sub_2B168(a1 + 18);
  }

  __int128 v18 = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  *((_OWORD *)a1 + 10) = v18;
  *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
LABEL_10:
  a1[24] = a2[24];
  swift_release();
  if (a1[28]) {
    sub_62AC(a1 + 25);
  }
  __int128 v23 = *(_OWORD *)(a2 + 27);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 27) = v23;
  a1[29] = a2[29];
  *((_BYTE *)a1 + 240) = *((_BYTE *)a2 + 240);
  uint64_t v24 = a2[32];
  uint64_t v25 = a1[32];
  a1[31] = a2[31];
  a1[32] = v24;
  swift_bridgeObjectRelease(v25);
LABEL_13:
  *((_BYTE *)a1 + 26sub_62AC(v0 + 4) = *((_BYTE *)a2 + 264);
  uint64_t v26 = a1[35];
  if (v26 == 1)
  {
LABEL_16:
    memcpy(a1 + 34, a2 + 34, 0x90uLL);
    goto LABEL_25;
  }

  uint64_t v27 = a2[35];
  if (v27 == 1)
  {
    sub_31D1C((uint64_t)(a1 + 34));
    goto LABEL_16;
  }

  a1[34] = a2[34];
  a1[35] = v27;
  swift_bridgeObjectRelease(v26);
  *((_BYTE *)a1 + 288) = *((_BYTE *)a2 + 288);
  uint64_t v28 = a1[38];
  if (v28 != 1)
  {
    uint64_t v29 = a2[38];
    if (v29 != 1)
    {
      a1[37] = a2[37];
      a1[38] = v29;
      swift_bridgeObjectRelease(v28);
      uint64_t v31 = a2[40];
      uint64_t v32 = a1[40];
      a1[39] = a2[39];
      a1[40] = v31;
      swift_bridgeObjectRelease(v32);
      uint64_t v33 = a2[42];
      uint64_t v34 = a1[42];
      a1[41] = a2[41];
      a1[42] = v33;
      swift_bridgeObjectRelease(v34);
      goto LABEL_22;
    }

    sub_2B168(a1 + 37);
  }

  __int128 v30 = *(_OWORD *)(a2 + 39);
  *(_OWORD *)(a1 + 37) = *(_OWORD *)(a2 + 37);
  *(_OWORD *)(a1 + 39) = v30;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_22:
  a1[43] = a2[43];
  swift_release();
  if (a1[47]) {
    sub_62AC(a1 + 44);
  }
  __int128 v35 = *((_OWORD *)a2 + 23);
  *((_OWORD *)a1 + 22) = *((_OWORD *)a2 + 22);
  *((_OWORD *)a1 + 23) = v35;
  a1[48] = a2[48];
  *((_BYTE *)a1 + 392) = *((_BYTE *)a2 + 392);
  uint64_t v36 = a2[51];
  uint64_t v37 = a1[51];
  a1[50] = a2[50];
  a1[51] = v36;
  swift_bridgeObjectRelease(v37);
LABEL_25:
  *((_BYTE *)a1 + 4swift_weakDestroy(v0 + 16) = *((_BYTE *)a2 + 416);
  uint64_t v38 = a1[54];
  if (v38 == 1)
  {
LABEL_28:
    memcpy(a1 + 53, a2 + 53, 0x90uLL);
    goto LABEL_37;
  }

  uint64_t v39 = a2[54];
  if (v39 == 1)
  {
    sub_2A9EC((uint64_t)(a1 + 53));
    goto LABEL_28;
  }

  a1[53] = a2[53];
  a1[54] = v39;
  swift_bridgeObjectRelease(v38);
  *((_BYTE *)a1 + 440) = *((_BYTE *)a2 + 440);
  uint64_t v40 = a1[57];
  if (v40 != 1)
  {
    uint64_t v41 = a2[57];
    if (v41 != 1)
    {
      a1[56] = a2[56];
      a1[57] = v41;
      swift_bridgeObjectRelease(v40);
      uint64_t v43 = a2[59];
      uint64_t v44 = a1[59];
      a1[58] = a2[58];
      a1[59] = v43;
      swift_bridgeObjectRelease(v44);
      uint64_t v45 = a2[61];
      uint64_t v46 = a1[61];
      a1[60] = a2[60];
      a1[61] = v45;
      swift_bridgeObjectRelease(v46);
      goto LABEL_34;
    }

    sub_2B168(a1 + 56);
  }

  __int128 v42 = *((_OWORD *)a2 + 29);
  *((_OWORD *)a1 + 28) = *((_OWORD *)a2 + 28);
  *((_OWORD *)a1 + 29) = v42;
  *((_OWORD *)a1 + 30) = *((_OWORD *)a2 + 30);
LABEL_34:
  a1[62] = a2[62];
  swift_release();
  if (a1[66]) {
    sub_62AC(a1 + 63);
  }
  __int128 v47 = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 63) = *(_OWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 65) = v47;
  a1[67] = a2[67];
  *((_BYTE *)a1 + 54sub_62AC(v0 + 4) = *((_BYTE *)a2 + 544);
  a1[69] = a2[69];
  uint64_t v48 = a1[70];
  a1[70] = a2[70];
  swift_bridgeObjectRelease(v48);
LABEL_37:
  uint64_t v49 = a1[71];
  a1[71] = a2[71];
  swift_bridgeObjectRelease(v49);
  uint64_t v50 = a1[73];
  if (v50 == 1)
  {
LABEL_40:
    memcpy(a1 + 72, a2 + 72, 0x90uLL);
    goto LABEL_49;
  }

  uint64_t v51 = a2[73];
  if (v51 == 1)
  {
    sub_2A9EC((uint64_t)(a1 + 72));
    goto LABEL_40;
  }

  a1[72] = a2[72];
  a1[73] = v51;
  swift_bridgeObjectRelease(v50);
  *((_BYTE *)a1 + 592) = *((_BYTE *)a2 + 592);
  uint64_t v52 = a1[76];
  if (v52 != 1)
  {
    uint64_t v53 = a2[76];
    if (v53 != 1)
    {
      a1[75] = a2[75];
      a1[76] = v53;
      swift_bridgeObjectRelease(v52);
      a1[77] = a2[77];
      uint64_t v55 = a1[78];
      a1[78] = a2[78];
      swift_bridgeObjectRelease(v55);
      a1[79] = a2[79];
      uint64_t v56 = a1[80];
      a1[80] = a2[80];
      swift_bridgeObjectRelease(v56);
      goto LABEL_46;
    }

    sub_2B168(a1 + 75);
  }

  __int128 v54 = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 77) = v54;
  *(_OWORD *)(a1 + 79) = *(_OWORD *)(a2 + 79);
LABEL_46:
  a1[81] = a2[81];
  swift_release();
  if (a1[85]) {
    sub_62AC(a1 + 82);
  }
  __int128 v57 = *((_OWORD *)a2 + 42);
  *((_OWORD *)a1 + 41) = *((_OWORD *)a2 + 41);
  *((_OWORD *)a1 + 42) = v57;
  a1[86] = a2[86];
  *((_BYTE *)a1 + 696) = *((_BYTE *)a2 + 696);
  a1[88] = a2[88];
  uint64_t v58 = a1[89];
  a1[89] = a2[89];
  swift_bridgeObjectRelease(v58);
LABEL_49:
  *((_BYTE *)a1 + 720) = *((_BYTE *)a2 + 720);
  a1[91] = a2[91];
  uint64_t v59 = a1[92];
  a1[92] = a2[92];
  swift_bridgeObjectRelease(v59);
  *((_WORD *)a1 + 372) = *((_WORD *)a2 + 372);
  uint64_t v60 = *(int *)(a3 + 36);
  uint64_t v61 = (char *)a1 + v60;
  __int128 v62 = (char *)a2 + v60;
  uint64_t v63 = type metadata accessor for PageMetrics(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 40LL))(v61, v62, v63);
  return a1;
}

uint64_t sub_39A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_39A98);
}

uint64_t sub_39A98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for PageMetrics(0LL);
    return sub_6028((uint64_t)a1 + *(int *)(a3 + 36), a2, v8);
  }

uint64_t sub_39B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_39B18);
}

void *sub_39B18(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for PageMetrics(0LL);
    return (void *)sub_5FEC((uint64_t)v5 + *(int *)(a4 + 36), a2, a2, v7);
  }

  return result;
}

uint64_t type metadata accessor for ShelfPage(uint64_t a1)
{
  uint64_t result = qword_7EA00;
  if (!qword_7EA00) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShelfPage);
  }
  return result;
}

uint64_t sub_39BBC(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  _OWORD v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v4[3] = &unk_5F700;
  void v4[4] = &unk_5F718;
  uint64_t result = type metadata accessor for PageMetrics(319LL);
  if (v3 <= 0x3F)
  {
    void v4[5] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_39C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = type metadata accessor for PageMetrics(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

void *sub_39C8C@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v40 = type metadata accessor for PageMetrics(0LL);
  uint64_t v37 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ShelfPage(0LL);
  v38[2] = a1;
  sub_4ECC(0x6C65685379646F62LL, 0xEB00000000736576LL, v7, (uint64_t)sub_39FCC, (uint64_t)v38, v8, v9, v10);
  if (v2)
  {
    sub_9A50();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  *(void *)a2 = v11;
  __chkstk_darwin(v11);
  sub_3A008();
  sub_3A01C(0x746F6F66u, v12, v13, (uint64_t)sub_3A004, v14, v15, v16, v17);
  *((void *)a2 + 1) = v18;
  __chkstk_darwin(v18);
  sub_3A008();
  sub_3A01C(0x64616568u, v19, v20, (uint64_t)sub_3A004, v21, v22, v23, v24);
  *((void *)a2 + 2) = v25;
  uint64_t v26 = sub_23DB8();
  *((void *)a2 + 3) = v26;
  *((void *)a2 + sub_62AC(v0 + 4) = v27;
  __chkstk_darwin(v26);
  sub_3A008();
  sub_5ED0(0x7274654D65676170LL, 0xEB00000000736369LL, v7, (uint64_t)sub_39FF4, v28, v29, v30, v31);
  uint64_t v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v37 + 32))(&a2[*(int *)(v7 + 36)], v6, v40);
  __chkstk_darwin(v32);
  sub_3A008();
  sub_5DD0();
  uint64_t v33 = type metadata accessor for JSONContext(0LL);
  sub_25614(v33);
  uint64_t v34 = sub_6BC8();
  sub_6D14(v34);
  return memcpy(a2 + 40, v39, 0x2C2uLL);
}

void *sub_39FB8@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  return sub_39C8C(a1, a2);
}

uint64_t sub_39FCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_283FC(a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

void sub_39FF4(uint64_t a1)
{
}

void sub_39FFC()
{
}

  ;
}

void sub_3A01C( unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

id sub_3A03C()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  id v1 = objc_msgSendSuper2(&v3, "init");
  sub_3A270(v1, "setClipsToBounds:");
  return v1;
}

id sub_3A0A8(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  id v3 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    sub_3A270(v5, "setClipsToBounds:");
  }

  return v4;
}

id sub_3A13C(void *a1, double a2, double a3, double a4, double a5)
{
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  id v11 = objc_msgSendSuper2(&v13, "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);
  sub_3A270(v11, "setClipsToBounds:");

  return v11;
}

id sub_3A220()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageBodyCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPageBodyCollectionView()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin27ShelfPageBodyCollectionView);
}

id sub_3A270(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0);
}

void *sub_3A278(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = &_swiftEmptySetSingleton;
  return v2;
}

uint64_t sub_3A290(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_5F6C(&qword_7EB60);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_5F6C(&qword_7EEF0);
  DiffableLens.value.getter(aBlock, v11);
  uint64_t v12 = sub_5F6C((uint64_t *)&unk_7F100);
  if (!sub_3B8D8((uint64_t)v47, v13, v12, (uint64_t)&type metadata for PluginComponent))
  {
    uint64_t v48 = 0LL;
    memset(v47, 0, sizeof(v47));
    sub_3AB58((uint64_t)v47);
    unint64_t v25 = sub_3B628();
    uint64_t v26 = sub_125B0((uint64_t)&type metadata for ShelfPageCollectionCellProvider.DequeueError, v25);
    _BYTE *v27 = 0;
    swift_willThrow(v26);
    return (uint64_t)a2;
  }

  id v43 = a3;
  sub_3B8CC(v49);
  sub_3AA7C(v49);
  uint64_t v15 = v14;
  uint64_t v44 = v4;
  uint64_t v16 = *(void **)(v4 + 16);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  a2 = (void *)IndexPath._bridgeToObjectiveC()();
  id v18 = [v16 dequeueReusableCellWithReuseIdentifier:v17 forIndexPath:a2];

  uint64_t ObjectType = swift_getObjectType(v18);
  uint64_t v20 = sub_3B664((uint64_t)v18, ObjectType, (uint64_t)&protocol descriptor for AnyComponentCell);
  if (!v20)
  {

    unint64_t v28 = sub_3B628();
    uint64_t v29 = sub_125B0((uint64_t)&type metadata for ShelfPageCollectionCellProvider.DequeueError, v28);
    *uint64_t v30 = 1;
    swift_willThrow(v29);
    sub_29734((uint64_t)v49);
    return (uint64_t)a2;
  }

  a2 = (void *)v20;
  uint64_t v50 = v21;
  id v22 = v18;
  uint64_t v23 = PluginComponent.id.getter(v47);
  AnyHashable.base.getter(aBlock, v23);
  sub_D6CC((uint64_t)v47);
  sub_3B8D8((uint64_t)v46, v24, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String);
  id v31 = v43;
  sub_43C28();

  id v43 = (id)objc_opt_self(&OBJC_CLASS___UIView);
  sub_296F8((uint64_t)v49, (uint64_t)v47);
  (*(void (**)(char *, id, uint64_t))(v8 + 16))((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL), v31, v7);
  uint64_t v32 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v33 = (v32 + 120) & ~v32;
  unint64_t v34 = (v9 + v33 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  __int128 v35 = (char *)swift_allocObject(&unk_749C8, v34 + 8, v32 | 7);
  uint64_t v36 = v50;
  *((void *)v35 + 2) = a2;
  *((void *)v35 + 3) = v36;
  sub_3B8CC(v35 + 32);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v35[v33], v10, v7);
  uint64_t v37 = v44;
  *(void *)&v35[v34] = v44;
  uint64_t v38 = swift_allocObject(&unk_749F0, 32LL, 7LL);
  *(void *)(v38 + swift_weakDestroy(v0 + 16) = sub_3B744;
  *(void *)(v38 + 2sub_62AC(v0 + 4) = v35;
  aBlock[4] = sub_3B7A0;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_3DA04;
  void aBlock[3] = &unk_74A08;
  uint64_t v39 = _Block_copy(aBlock);
  id v40 = v22;
  swift_retain(v37);
  swift_retain(v38);
  swift_release();
  [v43 performWithoutAnimation:v39];
  _Block_release(v39);
  sub_29734((uint64_t)v49);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v38, "", 158LL, 66LL, 40LL, 1LL);
  swift_release();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0) {
    return (uint64_t)a2;
  }
  __break(1u);
  return result;
}

id sub_3A6A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_5F6C(&qword_7EEF0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t ObjectType = swift_getObjectType(a1);
  [a1 setNeedsLayout];
  sub_16D24(a3 + 16, (uint64_t)v17);
  DiffableLens<A>.init(_:)(v17);
  (*(void (**)(_BYTE *, uint64_t, void, uint64_t, uint64_t))(a2 + 8))( v13,  a4,  *(void *)(a5 + 24),  ObjectType,  a2);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  return [a1 layoutIfNeeded];
}

uint64_t sub_3A7A8()
{
  uint64_t v1 = sub_5F6C(&qword_7EEF0);
  DiffableLens.value.getter(v14, v1);
  uint64_t v2 = sub_5F6C((uint64_t *)&unk_7F100);
  if (swift_dynamicCast(__src, v14, v2, &type metadata for PluginComponent, 6LL))
  {
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v3 = sub_3AA7C(__dst);
    uint64_t v5 = v4;
    swift_beginAccess(v0 + 32, __src, 0LL, 0LL);
    uint64_t v6 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain(v6);
    char v7 = sub_3A948(v3, v5, v6);
    swift_bridgeObjectRelease(v6);
    if ((v7 & 1) != 0)
    {
      sub_29734((uint64_t)__dst);
      return swift_bridgeObjectRelease(v5);
    }

    else
    {
      swift_beginAccess(v0 + 32, v14, 33LL, 0LL);
      swift_bridgeObjectRetain(v5);
      sub_3ABB4(v12, v3, v5);
      swift_endAccess(v14);
      swift_bridgeObjectRelease(v12[1]);
      uint64_t v9 = *(void **)(v0 + 16);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(__dst[0]);
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v5);
      [v9 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v11];

      return sub_29734((uint64_t)__dst);
    }
  }

  else
  {
    memset(__src, 0, 88);
    return sub_3AB58((uint64_t)__src);
  }

uint64_t sub_3A948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(void *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1LL << *(_BYTE *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v8) & 1) != 0)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      NSString v11 = (void *)(v10 + 16 * v8);
      uint64_t v12 = v11[1];
      BOOL v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0LL) & 1) != 0) {
        return 1LL;
      }
      uint64_t v15 = ~v7;
      unint64_t v16 = (v8 + 1) & v15;
      if (((*(void *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) != 0)
      {
        while (1)
        {
          NSString v17 = (void *)(v10 + 16 * v16);
          uint64_t v18 = v17[1];
          BOOL v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0LL) & 1) != 0) {
            break;
          }
          uint64_t result = 0LL;
          unint64_t v16 = (v16 + 1) & v15;
          if (((*(void *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0) {
            return result;
          }
        }

        return 1LL;
      }
    }
  }

  return 0LL;
}

uint64_t sub_3AA7C(void *a1)
{
  uint64_t v7 = a1[7];
  swift_bridgeObjectRetain(a1[8]);
  v2._countAndFlagsBits = 46LL;
  v2._object = (void *)0xE100000000000000LL;
  String.append(_:)(v2);
  uint64_t v4 = a1[9];
  uint64_t v3 = (void *)a1[10];
  swift_bridgeObjectRetain(v3);
  v5._countAndFlagsBits = v4;
  v5._object = v3;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v3);
  return v7;
}

uint64_t sub_3AAEC()
{
  swift_release(*(void *)(v0 + 24));
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  return v0;
}

uint64_t sub_3AB18()
{
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t type metadata accessor for ShelfPageCollectionCellProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin31ShelfPageCollectionCellProvider);
}

uint64_t sub_3AB58(uint64_t a1)
{
  uint64_t v2 = sub_5F6C((uint64_t *)&unk_7EF40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3AB98(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }

  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }

  return result;
}

uint64_t sub_3ABB4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)(v24, *(void *)(*v3 + 40LL));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1LL << *(_BYTE *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    uint64_t v13 = v12[1];
    BOOL v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0LL) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      uint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48LL) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0LL;
    }

    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        break;
      }
      BOOL v19 = (void *)(v11 + 16 * v10);
      uint64_t v20 = v19[1];
      BOOL v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0LL) & 1) != 0) {
        goto LABEL_7;
      }
    }
  }

  swift_bridgeObjectRelease(v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *uint64_t v3 = 0x8000000000000000LL;
  swift_bridgeObjectRetain(a3);
  sub_3B038(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = *v3;
  *uint64_t v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1LL;
}

Swift::Int sub_3AD60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_5F6C(&qword_7EB58);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    uint64_t v32 = v2;
    uint64_t v33 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    Swift::Int result = swift_retain(v3);
    int64_t v13 = 0LL;
    if (!v9) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v14 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      BOOL v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)(v34, *(void *)(v6 + 40));
      String.hash(into:)(v34, v20, v21);
      Swift::Int result = Hasher._finalize()();
      uint64_t v22 = -1LL << *(_BYTE *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) == 0)
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0LL;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v24);
          if (v29 != -1)
          {
            unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_33;
          }
        }

        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }

      unint64_t v25 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
      *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v25;
      uint64_t v30 = (void *)(*(void *)(v6 + 48) + 16 * v25);
      *uint64_t v30 = v20;
      v30[1] = v21;
      ++*(void *)(v6 + 16);
      if (v9) {
        goto LABEL_9;
      }
LABEL_10:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1LL)) {
        goto LABEL_41;
      }
      if (v16 >= v10) {
        goto LABEL_35;
      }
      unint64_t v17 = v33[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v10) {
          goto LABEL_35;
        }
        unint64_t v17 = v33[v13];
        if (!v17)
        {
          int64_t v13 = v16 + 2;
          if (v16 + 2 >= v10) {
            goto LABEL_35;
          }
          unint64_t v17 = v33[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 3;
            if (v18 >= v10)
            {
LABEL_35:
              swift_release();
              uint64_t v2 = v32;
              uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
              if (v31 > 63) {
                sub_3AB98(0LL, (unint64_t)(v31 + 63) >> 6, v33);
              }
              else {
                *uint64_t v33 = -1LL << v31;
              }
              *(void *)(v3 + swift_weakDestroy(v0 + 16) = 0LL;
              break;
            }

            unint64_t v17 = v33[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1LL)) {
                  goto LABEL_42;
                }
                if (v13 >= v10) {
                  goto LABEL_35;
                }
                unint64_t v17 = v33[v13];
                ++v18;
                if (v17) {
                  goto LABEL_23;
                }
              }
            }

            int64_t v13 = v18;
          }
        }
      }

uint64_t sub_3B038(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_3AD60(v11);
  }

  else
  {
    if (v10 > v9)
    {
      Swift::Int result = (uint64_t)sub_3B1D0();
      goto LABEL_22;
    }

    sub_3B380(v11);
  }

  uint64_t v12 = *v4;
  Hasher.init(_seed:)(v28, *(void *)(*v4 + 40));
  String.hash(into:)(v28, v8, a2);
  Swift::Int result = Hasher._finalize()();
  uint64_t v13 = -1LL << *(_BYTE *)(v12 + 32);
  a3 = result & ~v13;
  uint64_t v14 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
  {
    uint64_t v15 = *(void *)(v12 + 48);
    int64_t v16 = (void *)(v15 + 16 * a3);
    uint64_t v17 = v16[1];
    BOOL v18 = *v16 == v8 && v17 == a2;
    if (v18 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, a2, 0LL), (result & 1) != 0))
    {
LABEL_21:
      Swift::Int result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }

    else
    {
      uint64_t v19 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v19;
        if (((*(void *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v20 = (void *)(v15 + 16 * a3);
        uint64_t v21 = v20[1];
        if (*v20 != v8 || v21 != a2)
        {
          Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, a2, 0LL);
          if ((result & 1) == 0) {
            continue;
          }
        }

        goto LABEL_21;
      }
    }
  }

LABEL_22:
  uint64_t v23 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  unint64_t v24 = (uint64_t *)(*(void *)(v23 + 48) + 16 * a3);
  *unint64_t v24 = v8;
  v24[1] = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1LL);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + swift_weakDestroy(v0 + 16) = v27;
  }
  return result;
}

      uint64_t v25 = v51;
      uint64_t v37 = swift_getObjectType(v45);
      if (((*(uint64_t (**)(uint64_t))(v46 + 8))(v37) & 1) != 0)
      {

        sub_4446C();
LABEL_32:
        sub_444B4();
        goto LABEL_35;
      }

      sub_41060(v20, v53);

      sub_4446C();
LABEL_29:
      sub_44634();
      ((void (*)(uint64_t))DiffableDataStatePresenter.writableLens(for:))(v25);
      id v40 = sub_44584();
      v41(v40);
      sub_44430(v49, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_delegate);
      if (Strong)
      {
        id v43 = Strong;
        if ([Strong respondsToSelector:"collectionView:didSelectItemAtIndexPath:"])
        {
          uint64_t v44 = (void *)IndexPath._bridgeToObjectiveC()();
          [v43 collectionView:v20 didSelectItemAtIndexPath:v44];
          sub_445E8();
          sub_445A8();

          goto LABEL_32;
        }

        sub_445A8();
      }

      sub_444B4();
      sub_445E8();
      goto LABEL_35;
    }

void *sub_3B1D0()
{
  uint64_t v1 = v0;
  sub_5F6C(&qword_7EB58);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1LL;
  if (v10 < 64) {
    uint64_t v12 = ~(-1LL << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    Swift::Int result = (void *)swift_bridgeObjectRetain(v21);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }

LABEL_30:
  __break(1u);
  return result;
}

      memcpy((void *)(v32 + 120), (const void *)(v33 + 120), 0x90uLL);
      goto LABEL_88;
    }

    if (v65 == 1)
    {
      sub_31D1C(v32 + 120);
      goto LABEL_30;
    }

    *(void *)(v32 + 120) = *(void *)(v33 + 120);
    uint64_t v127 = *(void *)(v33 + 128);
    *(void *)(v32 + 128) = v127;
    swift_bridgeObjectRetain(v127);
    swift_bridgeObjectRelease(v64);
    *(_BYTE *)(v32 + 136) = *(_BYTE *)(v33 + 136);
    __int128 v128 = (__int128 *)(v32 + 144);
    __int128 v129 = (__int128 *)(v33 + 144);
    uint64_t v130 = *(void *)(v32 + 152);
    uint64_t v131 = *(void *)(v33 + 152);
    if (v130 == 1)
    {
      if (v131 == 1)
      {
        uint64_t v132 = *v129;
        uint64_t v133 = *(_OWORD *)(v33 + 176);
        *(_OWORD *)(v32 + 160) = *(_OWORD *)(v33 + 160);
        *(_OWORD *)(v32 + 176) = v133;
        *__int128 v128 = v132;
      }

      else
      {
        *(void *)(v32 + 14sub_62AC(v0 + 4) = *(void *)(v33 + 144);
        uint64_t v144 = *(void *)(v33 + 152);
        *(void *)(v32 + 152) = v144;
        *(void *)(v32 + 160) = *(void *)(v33 + 160);
        __int128 v145 = *(void *)(v33 + 168);
        *(void *)(v32 + 168) = v145;
        *(void *)(v32 + 176) = *(void *)(v33 + 176);
        __int128 v146 = *(void *)(v33 + 184);
        *(void *)(v32 + 18sub_62AC(v0 + 4) = v146;
        swift_bridgeObjectRetain(v144);
        swift_bridgeObjectRetain(v145);
        swift_bridgeObjectRetain(v146);
      }
    }

    else if (v131 == 1)
    {
      sub_2B168((void *)(v32 + 144));
      uint64_t v140 = *(_OWORD *)(v33 + 160);
      __int128 v139 = *(_OWORD *)(v33 + 176);
      *__int128 v128 = *v129;
      *(_OWORD *)(v32 + 160) = v140;
      *(_OWORD *)(v32 + 176) = v139;
    }

    else
    {
      *(void *)(v32 + 14sub_62AC(v0 + 4) = *(void *)(v33 + 144);
      uint64_t v147 = *(void *)(v33 + 152);
      *(void *)(v32 + 152) = v147;
      swift_bridgeObjectRetain(v147);
      swift_bridgeObjectRelease(v130);
      *(void *)(v32 + 160) = *(void *)(v33 + 160);
      uint64_t v148 = *(void *)(v33 + 168);
      uint64_t v149 = *(void *)(v32 + 168);
      *(void *)(v32 + 168) = v148;
      swift_bridgeObjectRetain(v148);
      swift_bridgeObjectRelease(v149);
      *(void *)(v32 + 176) = *(void *)(v33 + 176);
      uint64_t v150 = *(void *)(v33 + 184);
      uint64_t v151 = *(void *)(v32 + 184);
      *(void *)(v32 + 18sub_62AC(v0 + 4) = v150;
      swift_bridgeObjectRetain(v150);
      swift_bridgeObjectRelease(v151);
    }

    __int128 v152 = *(void *)(v33 + 192);
    *(void *)(v32 + 192) = v152;
    swift_retain(v152);
    swift_release();
    __int128 v153 = *(void *)(v33 + 224);
    if (*(void *)(v32 + 224))
    {
      if (v153)
      {
        sub_6520((void *)(v32 + 200), (void *)(v33 + 200));
LABEL_87:
        *(_BYTE *)(v32 + 240) = *(_BYTE *)(v33 + 240);
        *(void *)(v32 + 248) = *(void *)(v33 + 248);
        uint64_t v156 = *(void *)(v33 + 256);
        uint64_t v157 = *(void *)(v32 + 256);
        *(void *)(v32 + 256) = v156;
        swift_bridgeObjectRetain(v156);
        swift_bridgeObjectRelease(v157);
        goto LABEL_88;
      }

      sub_62AC((void *)(v32 + 200));
    }

    else if (v153)
    {
      *(void *)(v32 + 22sub_62AC(v0 + 4) = v153;
      *(void *)(v32 + 232) = *(void *)(v33 + 232);
      (**(void (***)(uint64_t, uint64_t))(v153 - 8))(v32 + 200, v33 + 200);
      goto LABEL_87;
    }

    __int128 v154 = *(_OWORD *)(v33 + 200);
    __int128 v155 = *(_OWORD *)(v33 + 216);
    *(void *)(v32 + 232) = *(void *)(v33 + 232);
    *(_OWORD *)(v32 + 200) = v154;
    *(_OWORD *)(v32 + 2swift_weakDestroy(v0 + 16) = v155;
    goto LABEL_87;
  }

  if (v36)
  {
LABEL_21:
    uint64_t v49 = sub_5F6C(&qword_7CB10);
    memcpy((void *)v32, (const void *)v33, *(void *)(*(void *)(v49 - 8) + 64LL));
    return a1;
  }

  v278 = v34;
  uint64_t v37 = *(void *)v33;
  *(void *)uint64_t v32 = *(void *)v33;
  uint64_t v38 = *(void *)(v33 + 8);
  *(void *)(v32 + 8) = v38;
  uint64_t v39 = *(void *)(v33 + 16);
  *(void *)(v32 + swift_weakDestroy(v0 + 16) = v39;
  *(void *)(v32 + 2sub_62AC(v0 + 4) = *(void *)(v33 + 24);
  id v40 = *(void *)(v33 + 32);
  *(void *)(v32 + 32) = v40;
  *(_BYTE *)(v32 + 40) = *(_BYTE *)(v33 + 40);
  uint64_t v41 = *(void *)(v33 + 48);
  *(void *)(v32 + 48) = v41;
  __int128 v42 = *(void **)(v33 + 56);
  *(void *)(v32 + 56) = v42;
  id v43 = *(void *)(v33 + 88);
  *(void *)(v32 + 88) = v43;
  *(void *)(v32 + 96) = *(void *)(v33 + 96);
  uint64_t v44 = **(void (***)(uint64_t, uint64_t, uint64_t))(v43 - 8);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v40);
  swift_retain(v41);
  uint64_t v45 = v42;
  v44(v32 + 64, v33 + 64, v43);
  *(void *)(v32 + 10sub_62AC(v0 + 4) = *(void *)(v33 + 104);
  uint64_t v46 = *(void *)(v33 + 112);
  *(void *)(v32 + 112) = v46;
  __int128 v47 = *(void *)(v33 + 128);
  swift_bridgeObjectRetain(v46);
  if (v47 == 1)
  {
    memcpy((void *)(v32 + 120), (const void *)(v33 + 120), 0x90uLL);
    uint64_t v48 = v278;
  }

  else
  {
    *(void *)(v32 + 120) = *(void *)(v33 + 120);
    __int128 v70 = *(void *)(v33 + 128);
    *(void *)(v32 + 128) = v70;
    *(_BYTE *)(v32 + 136) = *(_BYTE *)(v33 + 136);
    uint64_t v71 = *(void *)(v33 + 152);
    swift_bridgeObjectRetain(v70);
    if (v71 == 1)
    {
      uint64_t v72 = *(_OWORD *)(v33 + 144);
      uint64_t v73 = *(_OWORD *)(v33 + 176);
      *(_OWORD *)(v32 + 160) = *(_OWORD *)(v33 + 160);
      *(_OWORD *)(v32 + 176) = v73;
      *(_OWORD *)(v32 + 14sub_62AC(v0 + 4) = v72;
    }

    else
    {
      *(void *)(v32 + 14sub_62AC(v0 + 4) = *(void *)(v33 + 144);
      uint64_t v74 = *(void *)(v33 + 152);
      *(void *)(v32 + 152) = v74;
      *(void *)(v32 + 160) = *(void *)(v33 + 160);
      uint64_t v75 = *(void *)(v33 + 168);
      *(void *)(v32 + 168) = v75;
      *(void *)(v32 + 176) = *(void *)(v33 + 176);
      __int128 v76 = *(void *)(v33 + 184);
      *(void *)(v32 + 18sub_62AC(v0 + 4) = v76;
      swift_bridgeObjectRetain(v74);
      swift_bridgeObjectRetain(v75);
      swift_bridgeObjectRetain(v76);
    }

    uint64_t v48 = v278;
    __int128 v77 = *(void *)(v33 + 192);
    *(void *)(v32 + 192) = v77;
    __int128 v78 = *(void *)(v33 + 224);
    swift_retain(v77);
    if (v78)
    {
      *(void *)(v32 + 22sub_62AC(v0 + 4) = v78;
      *(void *)(v32 + 232) = *(void *)(v33 + 232);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v78 - 8))(v32 + 200, v33 + 200, v78);
    }

    else
    {
      uint64_t v80 = *(_OWORD *)(v33 + 200);
      uint64_t v81 = *(_OWORD *)(v33 + 216);
      *(void *)(v32 + 232) = *(void *)(v33 + 232);
      *(_OWORD *)(v32 + 200) = v80;
      *(_OWORD *)(v32 + 2swift_weakDestroy(v0 + 16) = v81;
    }

    *(_BYTE *)(v32 + 240) = *(_BYTE *)(v33 + 240);
    *(void *)(v32 + 248) = *(void *)(v33 + 248);
    uint64_t v82 = *(void *)(v33 + 256);
    *(void *)(v32 + 256) = v82;
    swift_bridgeObjectRetain(v82);
  }

  *(_BYTE *)(v32 + 26sub_62AC(v0 + 4) = *(_BYTE *)(v33 + 264);
  if (*(void *)(v33 + 280) == 1LL)
  {
    memcpy((void *)(v32 + 272), (const void *)(v33 + 272), 0x90uLL);
  }

  else
  {
    *(void *)(v32 + 272) = *(void *)(v33 + 272);
    uint64_t v83 = *(void *)(v33 + 280);
    *(void *)(v32 + 280) = v83;
    *(_BYTE *)(v32 + 288) = *(_BYTE *)(v33 + 288);
    uint64_t v84 = *(void *)(v33 + 304);
    swift_bridgeObjectRetain(v83);
    if (v84 == 1)
    {
      uint64_t v85 = *(_OWORD *)(v33 + 296);
      uint64_t v86 = *(_OWORD *)(v33 + 328);
      *(_OWORD *)(v32 + 312) = *(_OWORD *)(v33 + 312);
      *(_OWORD *)(v32 + 328) = v86;
      *(_OWORD *)(v32 + 296) = v85;
    }

    else
    {
      *(void *)(v32 + 296) = *(void *)(v33 + 296);
      uint64_t v87 = *(void *)(v33 + 304);
      *(void *)(v32 + 30sub_62AC(v0 + 4) = v87;
      *(void *)(v32 + 312) = *(void *)(v33 + 312);
      uint64_t v88 = *(void *)(v33 + 320);
      *(void *)(v32 + 320) = v88;
      *(void *)(v32 + 328) = *(void *)(v33 + 328);
      uint64_t v89 = *(void *)(v33 + 336);
      *(void *)(v32 + 336) = v89;
      swift_bridgeObjectRetain(v87);
      swift_bridgeObjectRetain(v88);
      swift_bridgeObjectRetain(v89);
    }

    uint64_t v90 = *(void *)(v33 + 344);
    *(void *)(v32 + 34sub_62AC(v0 + 4) = v90;
    __int128 v91 = *(void *)(v33 + 376);
    swift_retain(v90);
    if (v91)
    {
      *(void *)(v32 + 376) = v91;
      *(void *)(v32 + 38sub_62AC(v0 + 4) = *(void *)(v33 + 384);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v91 - 8))(v32 + 352, v33 + 352, v91);
    }

    else
    {
      __int128 v92 = *(_OWORD *)(v33 + 352);
      uint64_t v93 = *(_OWORD *)(v33 + 368);
      *(void *)(v32 + 38sub_62AC(v0 + 4) = *(void *)(v33 + 384);
      *(_OWORD *)(v32 + 352) = v92;
      *(_OWORD *)(v32 + 368) = v93;
    }

    *(_BYTE *)(v32 + 392) = *(_BYTE *)(v33 + 392);
    *(void *)(v32 + 400) = *(void *)(v33 + 400);
    uint64_t v94 = *(void *)(v33 + 408);
    *(void *)(v32 + 408) = v94;
    swift_bridgeObjectRetain(v94);
  }

  *(_BYTE *)(v32 + 4swift_weakDestroy(v0 + 16) = *(_BYTE *)(v33 + 416);
  if (*(void *)(v33 + 432) == 1LL)
  {
    memcpy((void *)(v32 + 424), (const void *)(v33 + 424), 0x90uLL);
  }

  else
  {
    *(void *)(v32 + 42sub_62AC(v0 + 4) = *(void *)(v33 + 424);
    uint64_t v95 = *(void *)(v33 + 432);
    *(void *)(v32 + 432) = v95;
    *(_BYTE *)(v32 + 440) = *(_BYTE *)(v33 + 440);
    uint64_t v96 = *(void *)(v33 + 456);
    swift_bridgeObjectRetain(v95);
    if (v96 == 1)
    {
      uint64_t v97 = *(_OWORD *)(v33 + 448);
      uint64_t v98 = *(_OWORD *)(v33 + 480);
      *(_OWORD *)(v32 + 46sub_62AC(v0 + 4) = *(_OWORD *)(v33 + 464);
      *(_OWORD *)(v32 + 480) = v98;
      *(_OWORD *)(v32 + 448) = v97;
    }

    else
    {
      *(void *)(v32 + 448) = *(void *)(v33 + 448);
      __int128 v99 = *(void *)(v33 + 456);
      *(void *)(v32 + 456) = v99;
      *(void *)(v32 + 46sub_62AC(v0 + 4) = *(void *)(v33 + 464);
      __int128 v100 = *(void *)(v33 + 472);
      *(void *)(v32 + 472) = v100;
      *(void *)(v32 + 480) = *(void *)(v33 + 480);
      uint64_t v101 = *(void *)(v33 + 488);
      *(void *)(v32 + 488) = v101;
      swift_bridgeObjectRetain(v99);
      swift_bridgeObjectRetain(v100);
      swift_bridgeObjectRetain(v101);
    }

    uint64_t v102 = *(void *)(v33 + 496);
    *(void *)(v32 + 496) = v102;
    __int128 v103 = *(void *)(v33 + 528);
    swift_retain(v102);
    if (v103)
    {
      *(void *)(v32 + 528) = v103;
      *(void *)(v32 + 536) = *(void *)(v33 + 536);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v103 - 8))(v32 + 504, v33 + 504, v103);
    }

    else
    {
      uint64_t v104 = *(_OWORD *)(v33 + 504);
      uint64_t v105 = *(_OWORD *)(v33 + 520);
      *(void *)(v32 + 536) = *(void *)(v33 + 536);
      *(_OWORD *)(v32 + 50sub_62AC(v0 + 4) = v104;
      *(_OWORD *)(v32 + 520) = v105;
    }

    *(_BYTE *)(v32 + 54sub_62AC(v0 + 4) = *(_BYTE *)(v33 + 544);
    *(void *)(v32 + 552) = *(void *)(v33 + 552);
    __int128 v106 = *(void *)(v33 + 560);
    *(void *)(v32 + 560) = v106;
    swift_bridgeObjectRetain(v106);
  }

  __int128 v107 = *(void *)(v33 + 568);
  *(void *)(v32 + 568) = v107;
  uint64_t v108 = *(void *)(v33 + 584);
  swift_bridgeObjectRetain(v107);
  if (v108 == 1)
  {
    memcpy((void *)(v32 + 576), (const void *)(v33 + 576), 0x90uLL);
  }

  else
  {
    *(void *)(v32 + 576) = *(void *)(v33 + 576);
    uint64_t v109 = *(void *)(v33 + 584);
    *(void *)(v32 + 58sub_62AC(v0 + 4) = v109;
    *(_BYTE *)(v32 + 592) = *(_BYTE *)(v33 + 592);
    uint64_t v110 = *(void *)(v33 + 608);
    swift_bridgeObjectRetain(v109);
    if (v110 == 1)
    {
      uint64_t v111 = *(_OWORD *)(v33 + 600);
      uint64_t v112 = *(_OWORD *)(v33 + 632);
      *(_OWORD *)(v32 + 6swift_weakDestroy(v0 + 16) = *(_OWORD *)(v33 + 616);
      *(_OWORD *)(v32 + 632) = v112;
      *(_OWORD *)(v32 + 600) = v111;
    }

    else
    {
      *(void *)(v32 + 600) = *(void *)(v33 + 600);
      __int128 v113 = *(void *)(v33 + 608);
      *(void *)(v32 + 608) = v113;
      *(void *)(v32 + 6swift_weakDestroy(v0 + 16) = *(void *)(v33 + 616);
      __int128 v114 = *(void *)(v33 + 624);
      *(void *)(v32 + 62sub_62AC(v0 + 4) = v114;
      *(void *)(v32 + 632) = *(void *)(v33 + 632);
      __int128 v115 = *(void *)(v33 + 640);
      *(void *)(v32 + 640) = v115;
      swift_bridgeObjectRetain(v113);
      swift_bridgeObjectRetain(v114);
      swift_bridgeObjectRetain(v115);
    }

    __int128 v116 = *(void *)(v33 + 648);
    *(void *)(v32 + 648) = v116;
    uint64_t v117 = *(void *)(v33 + 680);
    swift_retain(v116);
    if (v117)
    {
      *(void *)(v32 + 680) = v117;
      *(void *)(v32 + 688) = *(void *)(v33 + 688);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v117 - 8))(v32 + 656, v33 + 656, v117);
    }

    else
    {
      uint64_t v118 = *(_OWORD *)(v33 + 656);
      uint64_t v119 = *(_OWORD *)(v33 + 672);
      *(void *)(v32 + 688) = *(void *)(v33 + 688);
      *(_OWORD *)(v32 + 656) = v118;
      *(_OWORD *)(v32 + 672) = v119;
    }

    *(_BYTE *)(v32 + 696) = *(_BYTE *)(v33 + 696);
    *(void *)(v32 + 70sub_62AC(v0 + 4) = *(void *)(v33 + 704);
    uint64_t v120 = *(void *)(v33 + 712);
    *(void *)(v32 + 712) = v120;
    swift_bridgeObjectRetain(v120);
  }

  *(_BYTE *)(v32 + 720) = *(_BYTE *)(v33 + 720);
  *(void *)(v32 + 728) = *(void *)(v33 + 728);
  uint64_t v121 = *(void *)(v33 + 736);
  *(void *)(v32 + 736) = v121;
  *(_WORD *)(v32 + 74sub_62AC(v0 + 4) = *(_WORD *)(v33 + 744);
  uint64_t v122 = *(int *)(v48 + 36);
  uint64_t v123 = v32 + v122;
  uint64_t v124 = v33 + v122;
  uint64_t v125 = type metadata accessor for PageMetrics(0LL);
  uint64_t v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16LL);
  swift_bridgeObjectRetain(v121);
  v126(v123, v124, v125);
  sub_5FEC(v32, 0LL, 1LL, v48);
  return a1;
}

uint64_t sub_3B380(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_5F6C(&qword_7EB58);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    *uint64_t v2 = v6;
    return result;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  uint64_t result = swift_retain(v3);
  int64_t v13 = 0LL;
  if (!v10) {
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    int64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)(v33, *(void *)(v6 + 40));
    swift_bridgeObjectRetain(v21);
    String.hash(into:)(v33, v20, v21);
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1LL << *(_BYTE *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0LL;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_33;
        }
      }

      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    unint64_t v25 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
    *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v25;
    uint64_t v30 = (void *)(*(void *)(v6 + 48) + 16 * v25);
    *uint64_t v30 = v20;
    v30[1] = v21;
    ++*(void *)(v6 + 16);
    if (v10) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      goto LABEL_39;
    }
    if (v16 >= v32) {
      goto LABEL_35;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v13;
    if (!v17)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v32) {
        goto LABEL_35;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v13);
      if (!v17)
      {
        int64_t v13 = v16 + 2;
        if (v16 + 2 >= v32) {
          goto LABEL_35;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v13);
        if (!v17) {
          break;
        }
      }
    }

unint64_t sub_3B628()
{
  unint64_t result = qword_7EB68;
  if (!qword_7EB68)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F878, &type metadata for ShelfPageCollectionCellProvider.DequeueError);
    atomic_store(result, (unint64_t *)&qword_7EB68);
  }

  return result;
}

uint64_t sub_3B664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (swift_conformsToProtocol2(a2, a3)) {
    return a1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_3B698()
{
  uint64_t v1 = sub_5F6C(&qword_7EB60);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 120) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;

  sub_62AC((void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 96));
  swift_bridgeObjectRelease(*(void *)(v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return swift_deallocObject(v0, v6 + 8, v5);
}

id sub_3B744()
{
  uint64_t v1 = *(void *)(sub_5F6C(&qword_7EB60) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 120LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_3A6A8( *(void **)(v0 + 16),  *(void *)(v0 + 24),  v0 + 32,  v0 + v2,  *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_3B790()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_3B7A0()
{
}

uint64_t sub_3B7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_3B7B8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t storeEnumTagSinglePayload for ShelfPageCollectionCellProvider.DequeueError( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_3B80C + 4 * byte_5F7B5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_3B840 + 4 * asc_5F7B0[v4]))();
}

uint64_t sub_3B840(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_3B848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x3B850LL);
  }
  return result;
}

uint64_t sub_3B85C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x3B864LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_3B868(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_3B870(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageCollectionCellProvider.DequeueError()
{
  return &type metadata for ShelfPageCollectionCellProvider.DequeueError;
}

unint64_t sub_3B890()
{
  unint64_t result = qword_7EB70;
  if (!qword_7EB70)
  {
    unint64_t result = swift_getWitnessTable(&unk_5F850, &type metadata for ShelfPageCollectionCellProvider.DequeueError);
    atomic_store(result, (unint64_t *)&qword_7EB70);
  }

  return result;
}

void *sub_3B8CC(void *a1)
{
  return memcpy(a1, (const void *)(v1 - 272), 0x58uLL);
}

uint64_t sub_3B8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(a1, v4 - 336, a3, a4, 6LL);
}

uint64_t sub_3B8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_5F6C(&qword_7EBB8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_5F6C(&qword_7EEC0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  uint64_t v11 = AsyncEvent.init()();
  uint64_t v12 = (void *)swift_allocObject(&unk_74B30, 40LL, 7LL);
  uint64_t v12[2] = v11;
  v12[3] = a1;
  v12[4] = a2;
  unint64_t v13 = sub_3BFE0();
  swift_retain(v11);
  swift_retain(a2);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v16, v5, v13);
  EventEmitter.addObserver(on:singleUse:_:)(v16, 0LL, sub_3BFD4, v12, v5, v13);
  swift_release();
  sub_62AC(v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t sub_3BA2C(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr))
{
  return sub_62AC(v4);
}

id sub_3BA70(uint64_t a1, uint64_t a2)
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  objc_super v22;
  uint64_t v23[5];
  void v24[3];
  uint64_t v25;
  uint64_t v26;
  char v27[24];
  void v28[3];
  uint64_t v29;
  uint64_t v30;
  *(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_objectGraph] = a2;
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 96LL);
  uint64_t v6 = v2;
  swift_retain(a2);
  swift_retain(v5);
  uint64_t v7 = sub_3B8E4((uint64_t)sub_3BC3C, 0LL);
  swift_release();
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 24);
  *(void *)&v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_backgroundColor] = v9;
  uint64_t v10 = *(void *)(v8 + 32);
  uint64_t v11 = v8 + 56;
  swift_beginAccess(v8 + 56, v27, 0LL, 0LL);
  sub_16D24(v11, (uint64_t)v28);
  uint64_t v12 = v29;
  uint64_t v13 = v30;
  sub_7A94(v28, v29);
  unint64_t v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8);
  swift_retain(a2);
  unint64_t v15 = v9;
  swift_retain(v10);
  v14(v24, v12, v13);
  int64_t v16 = v25;
  unint64_t v17 = v26;
  sub_7A94(v24, v25);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v23, v16, v17);
  int64_t v18 = objc_allocWithZone((Class)type metadata accessor for ShelfPageCollectionViewController());
  swift_retain(v7);
  int64_t v19 = sub_3DA20();
  sub_62AC(v24);
  sub_62AC(v28);
  *(void *)&v6[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController] = v19;

  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  uint64_t v20 = objc_msgSendSuper2(&v22, "initWithNibName:bundle:", 0, 0);
  swift_release();
  swift_release();
  swift_release();
  return v20;
}

uint64_t sub_3BC3C(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_7A94(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

void sub_3BC84()
{
}

void sub_3BCE8()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  sub_A32C((uint64_t)v9.super_class, "loadView", v1, v2, v3, v4, v5, v6, v9);
  id v7 = sub_3C024();
  [v7 setBackgroundColor:*(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_backgroundColor]];

  id v8 = sub_3C024();
  [v8 setClipsToBounds:1];
}

void sub_3BDAC()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  sub_A32C((uint64_t)v7.super_class, "viewDidLoad", v1, v2, v3, v4, v5, v6, v7);
  sub_3BE10();
}

void sub_3BE10()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController_bodyCollectionViewController];
  [v0 setChildViewController:v1];
  id v2 = [v1 view];
  sub_57360(1LL, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
}

void sub_3BE8C()
{
}

void sub_3BEC4()
{
}

id sub_3BF14()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ShelfPageCollectionLayoutViewController();
  return sub_A32C((uint64_t)v8.super_class, "dealloc", v1, v2, v3, v4, v5, v6, v8);
}

uint64_t type metadata accessor for ShelfPageCollectionLayoutViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin39ShelfPageCollectionLayoutViewController);
}

uint64_t sub_3BFA8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_3BFD4(uint64_t a1)
{
  return sub_3BA2C(a1, *(void *)(v1 + 16), *(void (**)(void *__return_ptr))(v1 + 24));
}

unint64_t sub_3BFE0()
{
  unint64_t result = qword_7EBC0;
  if (!qword_7EBC0)
  {
    uint64_t v1 = sub_14B78(&qword_7EBC8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for AsyncEvent<A>, v1);
    atomic_store(result, (unint64_t *)&qword_7EBC0);
  }

  return result;
}

id sub_3C024()
{
  return [v0 *(SEL *)(v1 + 3488)];
}

uint64_t sub_3C030()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = sub_7A94(v0 + 7, v1);
  uint64_t v4 = *(void *)(v1 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v4 + 16))(v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v8, v1, v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v1);
  AsyncEvent.post(_:)(v8);
  return sub_62AC(v8);
}

uint64_t sub_3C104(void *a1)
{
  return sub_62AC(a1);
}

void *sub_3C168(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_5F6C(&qword_7ECD0);
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_5F6C(&qword_7ECD8);
  sub_3CD30(v13);
  void v4[4] = sub_3CD20();
  sub_3CD04();
  void v4[5] = sub_3CD20();
  sub_3CD04();
  void v4[6] = sub_3CD20();
  uint64_t v14 = sub_5F6C(&qword_7EBC8);
  sub_3CD30(v14);
  uint64_t v15 = AsyncEvent.init()();
  _OWORD v4[2] = a2;
  void v4[3] = a3;
  v4[12] = v15;
  v4[13] = a1;
  sub_16D24((uint64_t)a4, (uint64_t)(v4 + 7));
  uint64_t v16 = sub_19060((uint64_t)&unk_74B58, 24LL);
  swift_weakInit(v16 + 16, v4);
  uint64_t v17 = sub_5F6C(&qword_7ECE0);
  uint64_t v18 = sub_3CC14(&qword_7ECE8, &qword_7ECE0, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
  swift_retain(a2);
  id v19 = a3;
  swift_retain(a1);
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v24, v17, v18);
  EventEmitter.addObserver(on:singleUse:_:)(v24, 0LL, sub_3CAB4, v16, v17, v18);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_62AC(a4);
  sub_62AC(v24);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
  return v5;
}

uint64_t sub_3C344(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v3);
  if (result)
  {
    sub_16D24(a1, (uint64_t)v5);
    sub_3C104(v5);
    return swift_release();
  }

  return result;
}

void sub_3C3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v4;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v12 = sub_3CCEC(v11);
  __chkstk_darwin(v12);
  uint64_t v23 = sub_3CCA0();
  uint64_t v13 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  sub_3CCBC();
  unint64_t v14 = sub_3CABC();
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  uint64_t v16 = sub_19060((uint64_t)&unk_74B58, 24LL);
  swift_weakInit(v16 + 16, v7);
  uint64_t v17 = (void *)sub_19060((uint64_t)&unk_74BD0, 48LL);
  v17[2] = v16;
  _OWORD v17[3] = a1;
  void v17[4] = a2;
  v17[5] = a3;
  v24[4] = sub_3CC8C;
  void v24[5] = v17;
  v24[1] = 1107296256LL;
  uint64_t v18 = sub_3CD14((uint64_t)sub_21544);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  uint64_t v19 = swift_release();
  static DispatchQoS.unspecified.getter(v19);
  v24[0] = _swiftEmptyArrayStorage;
  unint64_t v20 = sub_231D8();
  uint64_t v21 = sub_5F6C(&qword_7DE38);
  uint64_t v22 = sub_3CC14((unint64_t *)&qword_7DE40, &qword_7DE38, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v24, v21, v22, v3, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v6, v5, v18);
  _Block_release(v18);

  sub_3CCD8();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v23);
  sub_9ABC();
}

uint64_t sub_3C56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v7);
  if (result)
  {
    swift_retain(*(void *)(result + 32));
    swift_release();
    uint64_t v11 = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    sub_4A774();
    swift_bridgeObjectRetain(a4);
    sub_4A774();
    uint64_t v9 = sub_5F6C(&qword_7ECF0);
    uint64_t v10 = sub_3CC14(&qword_7ECF8, &qword_7ECF0, (uint64_t)&protocol conformance descriptor for [A]);
    ShelvesPresenter.setContents<A>(_:)(&v11, v9, v10);
    swift_bridgeObjectRelease(a2);
    return swift_release();
  }

  return result;
}

void sub_3C674(uint64_t a1)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v7 = sub_3CCEC(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_3CCA0();
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin(v8);
  uint64_t v9 = sub_3CCBC();
  uint64_t v10 = type metadata accessor for Shelf(v9);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = *(void *)(v2 + 32);
  sub_3CABC();
  uint64_t v14 = swift_retain_n(v13, 2LL);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  sub_30418(a1, (uint64_t)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = (v16 + 24) & ~v16;
  uint64_t v18 = swift_allocObject(&unk_74B80, v17 + v12, v16 | 7);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = v13;
  sub_3780C((uint64_t)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL), v18 + v17);
  void v27[4] = sub_3CBCC;
  void v27[5] = v18;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256LL;
  uint64_t v19 = sub_3CD14((uint64_t)sub_21544);
  uint64_t v20 = swift_release();
  static DispatchQoS.unspecified.getter(v20);
  v27[0] = _swiftEmptyArrayStorage;
  unint64_t v21 = sub_231D8();
  uint64_t v22 = sub_5F6C(&qword_7DE38);
  uint64_t v23 = sub_3CC14((unint64_t *)&qword_7DE40, &qword_7DE38, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v27, v22, v23, v1, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v4, v3, v19);
  swift_release();
  _Block_release(v19);

  sub_3CCD8();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v4, v26);
  sub_9ABC();
}

uint64_t sub_3C860(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_5F6C(&qword_7DB88);
  uint64_t v4 = *(void *)(type metadata accessor for Shelf(0LL) - 8);
  uint64_t v5 = *(void *)(v4 + 72);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 32) & ~v6;
  uint64_t v8 = v7 + v5;
  uint64_t v9 = v6 | 7;
  uint64_t v10 = swift_allocObject(v3, v7 + v5, v6 | 7);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = xmmword_5D0F0;
  sub_30418(a2, v10 + v7);
  uint64_t v15 = v10;
  uint64_t v11 = sub_5F6C(&qword_7ECF0);
  uint64_t v12 = sub_3CC14(&qword_7ECF8, &qword_7ECF0, (uint64_t)&protocol conformance descriptor for [A]);
  ShelvesPresenter.replace<A>(_:handlingProblemsWith:)(&v15, sub_3C9B4, 0LL, v11, v12);
  swift_bridgeObjectRelease(v10);
  uint64_t v13 = swift_allocObject(v3, v8, v9);
  *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = xmmword_5D0F0;
  sub_30418(a2, v13 + v7);
  uint64_t v15 = v13;
  ShelvesPresenter.replace<A>(_:handlingProblemsWith:)(&v15, sub_3C9B4, 0LL, v11, v12);
  return swift_bridgeObjectRelease(v13);
}

uint64_t sub_3C9B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ShelvesPresenter.ReplaceSolution.discard<A>(_:);
  uint64_t v3 = sub_5F6C(&qword_7ED00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104LL))(a1, v2, v3);
}

uint64_t sub_3CA00()
{
  swift_release();
  swift_release();
  swift_release();
  sub_62AC((void *)(v0 + 56));
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_3CA50()
{
  return swift_deallocClassInstance(v0, 112LL, 7LL);
}

uint64_t type metadata accessor for ShelfPageCollectionPresenter()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin28ShelfPageCollectionPresenter);
}

uint64_t sub_3CA90()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_3CAB4(uint64_t a1)
{
  return sub_3C344(a1, v1);
}

unint64_t sub_3CABC()
{
  unint64_t result = qword_7D630;
  if (!qword_7D630)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7D630);
  }

  return result;
}

uint64_t sub_3CAF8()
{
  uint64_t v1 = (int *)type metadata accessor for Shelf(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  sub_3CD28();
  uint64_t v6 = v0 + v4;
  swift_bridgeObjectRelease(*(void *)(v0 + v4 + 8));
  uint64_t v7 = v0 + v4 + v1[5];
  uint64_t v8 = type metadata accessor for ImpressionMetrics(0LL);
  swift_bridgeObjectRelease(*(void *)(v6 + v1[6]));
  uint64_t v9 = v6 + v1[7];
  swift_bridgeObjectRelease(*(void *)(v9 + 16));
  swift_bridgeObjectRelease(*(void *)(v9 + 32));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_3CBCC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Shelf(0LL) - 8) + 80LL);
  return sub_3C860(*(void *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_3CBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_3CC0C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_3CC14(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = sub_14B78(a2);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_3CC54()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_3CC8C()
{
  return sub_3C56C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_3CCA0()
{
  return type metadata accessor for DispatchQoS(0LL);
}

uint64_t sub_3CCBC()
{
  return 0LL;
}

uint64_t sub_3CCD8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 136) + 8LL))(v1, v0);
}

uint64_t sub_3CCEC(uint64_t result)
{
  *(void *)(v1 - 136) = *(void *)(result - 8);
  return result;
}

uint64_t sub_3CD04()
{
  return swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
}

void *sub_3CD14@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 10sub_62AC(v0 + 4) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t sub_3CD20()
{
  return ShelvesPresenter.init()();
}

uint64_t sub_3CD28()
{
  return swift_release(*(void *)(v0 + 16));
}

uint64_t sub_3CD30(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_3CD3C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_71CE0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_3CD8C(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x7265746F6F66LL;
  }
  else {
    return 0x726564616568LL;
  }
}

uint64_t storeEnumTagSinglePayload for ShelfPageCollectionSupplementaryItemPlacement( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_3CE00 + 4 * byte_5F975[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_3CE34 + 4 * byte_5F970[v4]))();
}

uint64_t sub_3CE34(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_3CE3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x3CE44LL);
  }
  return result;
}

uint64_t sub_3CE50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x3CE58LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_3CE5C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_3CE64(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageCollectionSupplementaryItemPlacement()
{
  return &type metadata for ShelfPageCollectionSupplementaryItemPlacement;
}

unint64_t sub_3CE84()
{
  unint64_t result = qword_7ED08;
  if (!qword_7ED08)
  {
    uint64_t v1 = sub_14B78(&qword_7ED10);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_7ED08);
  }

  return result;
}

void sub_3CEC8(char *a1, char *a2)
{
}

void sub_3CED4()
{
}

uint64_t sub_3CEDC(uint64_t a1)
{
  return sub_334F0(a1, *v1);
}

void sub_3CEE4(uint64_t a1)
{
}

uint64_t sub_3CEEC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_3CD3C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_3CF18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_3CD8C(*v1);
  *a1 = result;
  a1[1] = 0xE600000000000000LL;
  return result;
}

void sub_3CF44(void *a1@<X8>)
{
  *a1 = &off_71D30;
}

unint64_t sub_3CF58()
{
  unint64_t result = qword_7ED18;
  if (!qword_7ED18)
  {
    unint64_t result = swift_getWitnessTable(&unk_5FA60, &type metadata for ShelfPageCollectionSupplementaryItemPlacement);
    atomic_store(result, (unint64_t *)&qword_7ED18);
  }

  return result;
}

uint64_t sub_3CF94(void *a1, uint64_t a2)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 2sub_62AC(v0 + 4) = a2;
  id v4 = a1;
  swift_retain(a2);
  sub_3CFE8();

  swift_release();
  return v2;
}

void sub_3CFE8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = type metadata accessor for TextComponent();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v2);
  NSString v4 = sub_3D9D8();
  [v1 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v4];
}

uint64_t sub_3D048()
{
  swift_release(*(void *)(v0 + 24));
  return v0;
}

uint64_t sub_3D06C()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for ShelfPageCollectionSupplementaryViewProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin44ShelfPageCollectionSupplementaryViewProvider);
}

uint64_t sub_3D0AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v6 = a3 & 1;
  uint64_t v53 = sub_5F6C(&qword_7EEF0);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Text(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v50 = v4;
  uint64_t v11 = *(void **)(v4 + 16);
  NSString v12 = sub_3D9D8();
  uint64_t v13 = (void *)IndexPath._bridgeToObjectiveC()();
  id v14 = [v11 dequeueReusableCellWithReuseIdentifier:v12 forIndexPath:v13];

  uint64_t v15 = type metadata accessor for TextComponent();
  uint64_t v16 = swift_dynamicCastClass(v14, v15);
  if (v16)
  {
    uint64_t v5 = v16;
    uint64_t v48 = v15;
    if ((_DWORD)v6)
    {
      swift_getKeyPath(&unk_5FAE0);
      uint64_t v17 = UIFontTextStyleFootnote;
      uint64_t v27 = sub_5F6C((uint64_t *)&unk_7F110);
      sub_3D9C4(v27);
      swift_release();
      uint64_t v28 = v60[1];
      unint64_t v29 = v61;
      swift_bridgeObjectRelease(v63);
      if (v29) {
        uint64_t v21 = v28;
      }
      else {
        uint64_t v21 = 0LL;
      }
      if (v29) {
        unint64_t v22 = v29;
      }
      else {
        unint64_t v22 = 0xE000000000000000LL;
      }
      uint64_t v23 = 1953460070LL;
    }

    else
    {
      swift_getKeyPath(&unk_5FAE0);
      uint64_t v17 = UIFontTextStyleSubheadline;
      uint64_t v18 = sub_5F6C((uint64_t *)&unk_7F110);
      sub_3D9C4(v18);
      swift_release();
      uint64_t v19 = v62;
      unint64_t v20 = v63;
      swift_bridgeObjectRelease(v61);
      if (v20) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = 0LL;
      }
      if (v20) {
        unint64_t v22 = v20;
      }
      else {
        unint64_t v22 = 0xE000000000000000LL;
      }
      uint64_t v23 = 1684104552LL;
    }

    unint64_t v47 = v23 & 0xFFFF0000FFFFFFFFLL | 0x726500000000LL;
    id v30 = objc_msgSend((id)objc_opt_self(UIColor), "ams_secondaryText");
    uint64_t v31 = type metadata accessor for FontSource(0LL);
    uint64_t v58 = (void *)v31;
    uint64_t v59 = &protocol witness table for FontSource;
    *sub_7BA4(&v57) = v17;
    (*(void (**)(void))(*(void *)(v31 - 8) + 104LL))();
    DynamicPlainText.init(accessibilityAlignment:accessibilityText:alignment:color:customTextStyle:maximumLineCount:preferredLineCount:text:)( v60,  5LL,  0LL,  0LL,  4LL,  v30,  &v57,  0LL,  1LL,  0LL,  1,  v21,  v22);
    uint64_t v58 = &type metadata for DynamicPlainText;
    uint64_t v59 = &protocol witness table for DynamicPlainText;
    *(void *)&__int128 v57 = swift_allocObject(&unk_74D30, 152LL, 7LL);
    sub_3D64C((uint64_t)v60, v57 + 16);
    int64_t v32 = v17;
    uint64_t v33 = sub_5F6C((uint64_t *)&unk_7F110);
    unint64_t v34 = DiffableLens.id.getter(v54, v33);
    uint64_t v55 = AnyHashable.description.getter(v34);
    uint64_t v56 = v35;
    sub_D6CC((uint64_t)v54);
    v36._countAndFlagsBits = 45LL;
    v36._object = (void *)0xE100000000000000LL;
    String.append(_:)(v36);
    v37._countAndFlagsBits = v47;
    v37._object = (void *)0xE600000000000000LL;
    String.append(_:)(v37);
    swift_bridgeObjectRelease(0xE600000000000000LL);
    v54[0] = v55;
    v54[1] = v56;
    AnyHashable.init<A>(_:)(v54, &type metadata for String, &protocol witness table for String);
    uint64_t v38 = (uint64_t)&v10[*(int *)(v8 + 28)];
    uint64_t v39 = type metadata accessor for ImpressionMetrics(0LL);
    sub_5FEC(v38, 1LL, 1LL, v39);
    id v40 = &v10[*(int *)(v8 + 32)];
    *((void *)v40 + sub_62AC(v0 + 4) = 0LL;
    *(_OWORD *)id v40 = 0u;
    *((_OWORD *)v40 + 1) = 0u;
    sub_6010(&v57, (uint64_t)(v10 + 16));
    *(void *)uint64_t v10 = 0LL;
    *((_WORD *)v10 + sub_62AC(v0 + 4) = 256;
    uint64_t v58 = (void *)v8;
    uint64_t v59 = (void *)sub_98F0(&qword_7DAE8, type metadata accessor for Text, (uint64_t)&unk_603F0);
    uint64_t v41 = sub_7BA4(&v57);
    sub_3D688((uint64_t)v10, (uint64_t)v41);
    __int128 v42 = v49;
    DiffableLens<A>.init(_:)(&v57);
    uint64_t v43 = *(void *)(v50 + 24);
    uint64_t v44 = sub_98F0( &qword_7EDD8,  (uint64_t (*)(uint64_t))type metadata accessor for TextComponent,  (uint64_t)&unk_60538);
    ComponentCell.apply(contentsOf:with:asPartOf:)(v42, v51, v43, v48, v44);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v53);
    sub_3D6CC((uint64_t)v10);
    sub_3D708((uint64_t)v60);
  }

  else
  {

    unint64_t v24 = sub_3D5CC();
    uint64_t v25 = swift_allocError(&type metadata for ShelfPageCollectionSupplementaryViewProvider.DequeueError, v24, 0LL, 0LL);
    *(void *)uint64_t v26 = v6;
    *(_OWORD *)(v26 + 8) = xmmword_5FA90;
    *(void *)(v26 + 2sub_62AC(v0 + 4) = 0LL;
    *(_BYTE *)(v26 + 32) = 0;
    swift_willThrow(v25);
  }

  return v5;
}

unint64_t sub_3D5CC()
{
  unint64_t result = qword_7EDD0;
  if (!qword_7EDD0)
  {
    unint64_t result = swift_getWitnessTable( &unk_5FB10,  &type metadata for ShelfPageCollectionSupplementaryViewProvider.DequeueError);
    atomic_store(result, (unint64_t *)&qword_7EDD0);
  }

  return result;
}

uint64_t sub_3D608()
{
  if (*(void *)(v0 + 80)) {
    sub_62AC((void *)(v0 + 56));
  }
  swift_bridgeObjectRelease(*(void *)(v0 + 144));
  return swift_deallocObject(v0, 152LL, 7LL);
}

uint64_t sub_3D64C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_3D688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Text(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_3D6CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Text(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_3D708(uint64_t a1)
{
  return a1;
}

uint64_t sub_3D73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      return swift_bridgeObjectRetain(a3);
    case 2:
      a3 = a2;
      return swift_bridgeObjectRetain(a3);
    case 1:
      swift_bridgeObjectRetain(a2);
      return swift_bridgeObjectRetain(a4);
  }

  return result;
}

uint64_t destroy for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1)
{
  return sub_3D7A0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_3D7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
      return swift_bridgeObjectRelease(a3);
    case 2:
      a3 = a2;
      return swift_bridgeObjectRelease(a3);
    case 1:
      swift_bridgeObjectRelease(a2);
      return swift_bridgeObjectRelease(a4);
  }

  return result;
}

uint64_t initializeWithCopy for ShelfPageCollectionSupplementaryViewProvider.DequeueError( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(_BYTE *)(a2 + 32);
  sub_3D73C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 2sub_62AC(v0 + 4) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(_BYTE *)(a2 + 32);
  sub_3D73C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 2sub_62AC(v0 + 4) = v6;
  char v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_3D7A0(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for ShelfPageCollectionSupplementaryViewProvider.DequeueError( uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ShelfPageCollectionSupplementaryViewProvider.DequeueError(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  __int128 v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v8;
  char v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_3D7A0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfPageCollectionSupplementaryViewProvider.DequeueError( uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfPageCollectionSupplementaryViewProvider.DequeueError( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(result + 2sub_62AC(v0 + 4) = 0LL;
    *(_BYTE *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 33) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 33) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 32) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_3D9A4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_3D9AC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageCollectionSupplementaryViewProvider.DequeueError()
{
  return &type metadata for ShelfPageCollectionSupplementaryViewProvider.DequeueError;
}

uint64_t sub_3D9C4(uint64_t a1)
{
  return DiffableLens.subscript.getter(v1, a1);
}

NSString sub_3D9D8()
{
  return String._bridgeToObjectiveC()();
}

void sub_3D9E8(void (*a1)(void))
{
}

void sub_3DA04(uint64_t a1)
{
}

id sub_3DA20()
{
  uint64_t v59 = v2;
  uint64_t v60 = v3;
  __int16 v51 = v4;
  uint64_t v56 = v5;
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v55 = v10;
  uint64_t v54 = sub_44634();
  uint64_t v11 = sub_5F6C(&qword_7EE98);
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  sub_23758();
  __chkstk_darwin(v12);
  sub_12718();
  uint64_t v50 = v13;
  uint64_t v14 = type metadata accessor for Dependency(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_44544();
  sub_445DC(OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_delegate);
  uint64_t v16 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets];
  __int128 v17 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v16 + 1) = v17;
  uint64_t v18 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews];
  *(void *)uint64_t v18 = 0LL;
  *((void *)v18 + 1) = 0LL;
  uint64_t v19 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator];
  *(void *)uint64_t v19 = 0LL;
  *((void *)v19 + 1) = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_pageCount] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_previousIndex] = 0LL;
  uint64_t v20 = sub_5F6C(&qword_7EEA0);
  uint64_t v21 = type metadata accessor for BaseObjectGraph(0LL);
  unint64_t v22 = v0;
  inject<A, B>(_:from:)(v20, v7, v20, v21);
  uint64_t v23 = v57[0];
  uint64_t v24 = ((uint64_t (*)(void))type metadata accessor for Unstable.ImpressionsCalculator)(0LL);
  uint64_t v25 = swift_unknownObjectRetain(v57[0]);
  uint64_t v26 = ((uint64_t (*)(uint64_t, void, double))Unstable.ImpressionsCalculator.__allocating_init(impressionableThreshold:tracker:))( v25,  v57[1],  0.5);
  *(void *)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculator] = v26;
  v57[0] = v26;
  swift_retain(v26);
  ((void (*)(uint64_t, void *, uint64_t))Dependency.init<A>(satisfying:with:))(v24, v57, v24);
  uint64_t v27 = dispatch thunk of BaseObjectGraph.adding(dependency:)(v1);
  sub_44430(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  *(void *)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_objectGraph] = v27;
  v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_placement] = v9;
  if (v9)
  {
    if (v9 == 1) {
      id v28 = objc_allocWithZone((Class)type metadata accessor for ShelfPageBodyCollectionView());
    }
    else {
      id v28 = objc_allocWithZone((Class)type metadata accessor for ShelfPageFooterCollectionView());
    }
    id v29 = sub_44570(v28);
    *(void *)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView] = v29;
  }

  else
  {
    id v30 = objc_allocWithZone((Class)type metadata accessor for ShelfPageBodyCollectionView());
    id v29 = sub_44570(v30);
    *(void *)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView] = v29;
  }

  sub_43C28();
  uint64_t v31 = sub_5F6C(&qword_7EEA8);
  sub_3CD30(v31);
  swift_retain(v55);
  v57[0] = ((uint64_t (*)(uint64_t))TransientStateStore.init(isConcurrent:))(1LL);
  uint64_t v32 = sub_5F6C(&qword_7EEB0);
  sub_3CD30(v32);
  sub_23430(&qword_7EEB8, &qword_7EEA8, (uint64_t)&protocol conformance descriptor for TransientStateStore<A>);
  *(void *)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_statePresenter] = ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))DiffableDataStatePresenter.init<A>(dataPresenter:stateStore:))(v55, v57, v31, v33);
  uint64_t v34 = type metadata accessor for ShelfPageCollectionCellProvider();
  sub_19060(v34, 40LL);
  *(void *)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_cellProvider] = sub_3A278((uint64_t)v29, v7);
  uint64_t v35 = type metadata accessor for ShelfPageCollectionSupplementaryViewProvider();
  sub_19060(v35, 32LL);
  id v36 = v29;
  swift_retain_n(v7, 2LL);
  *(void *)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_supplementaryViewProvider] = sub_3CF94(v36, v7);
  sub_43F18( (uint64_t)v56,  (uint64_t)&v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel]);
  Swift::String v37 = &v22[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_shelfBehavior];
  char *v37 = v51;
  v37[1] = HIBYTE(v51) & 1;

  uint64_t v38 = (objc_class *)type metadata accessor for ShelfPageCollectionViewController();
  v58.receiver = v22;
  v58.super_class = v38;
  id v39 = objc_msgSendSuper2(&v58, "init");
  uint64_t v40 = sub_23844((uint64_t)&unk_74E20);
  swift_unknownObjectWeakInit(v40 + 16, v39);
  uint64_t v41 = sub_5F6C(&qword_7EEC0);
  sub_23430(&qword_7EEC8, &qword_7EEC0, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
  uint64_t v43 = v42;
  id v44 = v39;
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v57, v41, v43);
  EventEmitter.addObserver(on:singleUse:_:)(v57, 0LL, sub_43C88, v40, v41, v43);
  sub_237D8();
  sub_62AC(v57);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v53);
  uint64_t v45 = sub_5F6C(&qword_7EED0);
  uint64_t v46 = sub_19060(v45, 80LL);
  *(_OWORD *)(v46 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
  *(void *)(v46 + 32) = ((uint64_t (*)(void))type metadata accessor for UITraitPreferredContentSizeCategory)(0LL);
  *(void *)(v46 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(v46 + 48) = ((uint64_t (*)(void))type metadata accessor for UITraitLegibilityWeight)(0LL);
  *(void *)(v46 + 56) = &protocol witness table for UITraitLegibilityWeight;
  *(void *)(v46 + 6sub_62AC(v0 + 4) = ((uint64_t (*)(void))type metadata accessor for UITraitHorizontalSizeClass)(0LL);
  *(void *)(v46 + 72) = &protocol witness table for UITraitHorizontalSizeClass;
  uint64_t v47 = sub_23844((uint64_t)&unk_74E48);
  *(void *)(v47 + swift_weakDestroy(v0 + 16) = v54;
  id v48 = v44;
  ((void (*)(uint64_t, void (*)(uint64_t), uint64_t, uint64_t))UIViewController.registerForTraitChanges<A>(_:handler:))( v46,  sub_43C9C,  v47,  v54);
  swift_unknownObjectRelease(v23);
  sub_D7F0();
  sub_4463C();
  swift_release();
  sub_445A8();
  swift_bridgeObjectRelease(v46);
  swift_release();

  sub_62AC(v56);
  return v48;
}

void sub_3DF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_43F18(a1, (uint64_t)v6);
    sub_3E348(v6);
  }

void sub_3E000(uint64_t a1)
{
  id v1 =  [*(id *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) collectionViewLayout];
  [v1 invalidateLayout];
}

void sub_3E04C()
{
  id v1 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets];
  __int128 v2 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)id v1 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *((_OWORD *)v1 + 1) = v2;
  uint64_t v3 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews];
  *(void *)uint64_t v3 = 0LL;
  *((void *)v3 + 1) = 0LL;
  __int16 v4 = &v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator];
  *(void *)__int16 v4 = 0LL;
  *((void *)v4 + 1) = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_pageCount] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_previousIndex] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionViewController.swift",  59LL,  2LL,  92LL,  0);
  __break(1u);
}

uint64_t sub_3E144()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) bounds];
  uint64_t v6 = CGRect.subtracting(insets:)( v1,  *(double *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets),  *(double *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets + 8),  *(double *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets + 16),  *(double *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculatorInsets + 24),  v2,  v3,  v4,  v5);
  return Unstable.ImpressionsCalculator.viewBounds.setter(v6);
}

uint64_t sub_3E1B0()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content;
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0
                   + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___content);
  }

  else
  {
    uint64_t v3 = sub_3E640();
    *(void *)(v0 + v1) = v3;
    swift_retain(v3);
    sub_237D8();
    uint64_t v2 = 0LL;
  }

  swift_retain(v2);
  return v3;
}

uint64_t sub_3E20C()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider;
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0
                   + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController____lazy_storage___layoutProvider);
  }

  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = sub_3E1B0();
    uint64_t v6 = v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel;
    swift_beginAccess( v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel,  &v11,  0LL,  0LL);
    sub_43F18(v6, (uint64_t)v12);
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculator);
    uint64_t v8 = type metadata accessor for ShelfPageCollectionViewLayoutProvider();
    sub_19060(v8, 88LL);
    sub_44644(v5, v12, v7);
    uint64_t v3 = v9;
    *(void *)(v4 + v1) = v9;
    swift_retain(v7);
    swift_retain(v3);
    sub_4463C();
    uint64_t v2 = 0LL;
  }

  swift_retain(v2);
  return v3;
}

uint64_t sub_3E2EC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel;
  swift_beginAccess( v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel,  v4,  0LL,  0LL);
  sub_43F18(v1, (uint64_t)v3);
  sub_3F118((uint64_t)v3);
  return sub_62AC(v3);
}

uint64_t sub_3E348(void *a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel);
  sub_44608(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_spacingModel, (uint64_t)v5);
  sub_6520(v3, a1);
  swift_endAccess(v5);
  sub_3E2EC();
  return sub_62AC(a1);
}

void sub_3E3AC()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  id v7 = sub_A32C((uint64_t)v10.super_class, "loadView", v1, v2, v3, v4, v5, v6, v10);
  id v8 = sub_A324((uint64_t)v7, "view");
  id v9 = objc_msgSend((id)objc_opt_self(UIColor), "ams_clear");
  sub_44590((uint64_t)v9, "setBackgroundColor:");

  sub_E850();
}

void sub_3E45C()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  sub_A32C((uint64_t)v7.super_class, "viewDidLoad", v1, v2, v3, v4, v5, v6, v7);
  sub_3F034();
}

void sub_3E4C0()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  sub_A32C((uint64_t)v10.super_class, "viewDidLayoutSubviews", v1, v2, v3, v4, v5, v6, v10);
  sub_3E144();
  objc_super v7 = *(void (**)(uint64_t))&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews];
  if (v7)
  {
    uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController__viewDidLayoutSubviews
                      + 8];
    uint64_t v9 = swift_retain(v8);
    v7(v9);
    sub_21B94((uint64_t)v7, v8);
  }

  sub_E850();
}

void sub_3E5A0(char a1, SEL *a2, uint64_t a3)
{
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  objc_msgSendSuper2(&v7, *a2, a1 & 1);
  Unstable.ImpressionsCalculator.isVisible.setter(a3);
  sub_44514();
}

uint64_t sub_3E640()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0x726564616568LL;
  sub_5F6C((uint64_t *)&unk_7EF80);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_statePresenter);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  uint64_t v5 = sub_23844((uint64_t)&unk_74E20);
  swift_unknownObjectWeakInit(v5 + 16, v0);
  swift_retain(v3);
  uint64_t v6 = CollectionContent.__allocating_init<A>(_:collectionView:cellProvider:)(v3, v4, sub_4430C, v5);
  char v7 = 0;
  uint64_t v8 = 0LL;
  uint64_t v19 = v1;
  uint64_t v9 = *(void *)(v1
                 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_supplementaryViewProvider);
  do
  {
    char v10 = v7;
    char v11 = *((_BYTE *)&off_71D58 + v8 + 32);
    if (v11) {
      uint64_t v12 = 0x7265746F6F66LL;
    }
    else {
      uint64_t v12 = 0x726564616568LL;
    }
    uint64_t v13 = sub_23844((uint64_t)&unk_75050);
    swift_weakInit(v13 + 16, v3);
    uint64_t v14 = sub_23844((uint64_t)&unk_75078);
    swift_weakInit(v14 + 16, v9);
    uint64_t v15 = sub_19060((uint64_t)&unk_750A0, 33LL);
    *(void *)(v15 + swift_weakDestroy(v0 + 16) = v13;
    *(void *)(v15 + 2sub_62AC(v0 + 4) = v14;
    *(_BYTE *)(v15 + 32) = v11;
    CollectionContent.addSupplementaryViewProvider(forKind:_:)(v12, 0xE600000000000000LL, sub_44360, v15);
    sub_44568();
    sub_D7F0();
    char v7 = 1;
    uint64_t v8 = 1LL;
  }

  while ((v10 & 1) == 0);
  if (!*(_BYTE *)(v19 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_placement))
  {
    uint64_t v16 = 0xE600000000000000LL;
LABEL_10:
    char v17 = sub_23998(v2, v16, 0x7265746F6F66LL, 0xE600000000000000LL);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0) {
      return v6;
    }
    goto LABEL_13;
  }

  if (*(_BYTE *)(v19 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_placement) == 1)
  {
    uint64_t v16 = 0xE400000000000000LL;
    uint64_t v2 = 2036625250LL;
    goto LABEL_10;
  }

  sub_44568();
LABEL_13:
  CollectionContent.animatePresenterChanges.setter(0LL);
  return v6;
}

uint64_t sub_3E82C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_5F6C(&qword_7EEE0);
  __chkstk_darwin(v9);
  char v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v32[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  a5 += 16LL;
  swift_beginAccess(a5, v35, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (Strong)
  {
    char v17 = (void *)Strong;
    swift_retain(*(void *)(Strong
                           + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_cellProvider));
    sub_3A7A8();
    uint64_t v18 = (void *)sub_3A290(a1, a2, a3);
    uint64_t v19 = swift_release();
    sub_3E1B0(v19);
    CollectionContent.section(for:)(a2);
    swift_release();
    if (sub_6028((uint64_t)v11, 1LL, v12) == 1)
    {

      sub_60C8((uint64_t)v11, &qword_7EEE0);
    }

    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(v15, v11, v12);
      uint64_t KeyPath = swift_getKeyPath(&unk_5FC08);
      DiffableLens.subscript.getter(KeyPath, v12);
      swift_release();
      int v21 = v32[97];
      uint64_t v22 = v34;
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v22);
      if ((v21 - 1) <= 1)
      {
        uint64_t v23 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
        id v24 = v18;
        id v25 = objc_msgSend(v23, "ams_componentBackground");
        [v24 setBackgroundColor:v25];

        id v26 = v24;
        sub_56A54(0.0);
      }

      uint64_t v27 = swift_getKeyPath(&unk_5FC08);
      DiffableLens.subscript.getter(v27, v12);
      swift_release();
      int v28 = v32[96];
      uint64_t v29 = v34;
      swift_bridgeObjectRelease(v33);
      uint64_t v30 = swift_bridgeObjectRelease(v29);
      if (v28 == 2 || (v28 & 1) != 0)
      {
      }

      else
      {
        sub_3E1B0(v30);
        CollectionContent.animatePresenterChanges.setter(0LL);

        swift_release();
      }

      (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
    }

    return (uint64_t)v18;
  }

  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000012LL,  0x8000000000064CF0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionViewController.swift",  59LL,  2LL,  197LL,  0);
    __break(1u);
  }

  return result;
}

uint64_t sub_3ED2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  int v29 = a6 & 1;
  uint64_t v7 = sub_5F6C(&qword_7EB60);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = sub_5F6C(&qword_7EEE0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = a2;
  CollectionContent.section(for:)(a2);
  if (sub_6028((uint64_t)v16, 1LL, v17) == 1)
  {
    sub_60C8((uint64_t)v16, &qword_7EEE0);
  }

  else
  {
    uint64_t v21 = v26 + 16;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    swift_beginAccess(v21, v31, 0LL, 0LL);
    if (swift_weakLoadStrong(v21))
    {
      uint64_t v22 = v27 + 16;
      DiffableDataStatePresenter.lens(for:)(v20);
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
      swift_beginAccess(v22, v30, 0LL, 0LL);
      if (swift_weakLoadStrong(v22))
      {
        uint64_t v23 = sub_3D0AC((uint64_t)v20, v28, v29, (uint64_t)v13);
        swift_release();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        return v23;
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }

  uint64_t v33 = 0LL;
  unint64_t v34 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(47LL);
  v25._object = (void *)0x8000000000064CC0LL;
  v25._countAndFlagsBits = 0xD00000000000002DLL;
  String.append(_:)(v25);
  char v32 = v29;
  _print_unlocked<A, B>(_:_:)( &v32,  &v33,  &type metadata for ShelfPageCollectionSupplementaryItemPlacement,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v33,  v34,  "CoreDynamicUIPlugin/ShelfPageCollectionViewController.swift",  59LL,  2LL,  245LL,  0);
  __break(1u);
  return result;
}

void sub_3F034()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  id v3 = sub_44590(v2, "setCommonDelegate:");
  id v4 = sub_A324((uint64_t)v3, "view");
  [v4 addSubview:v1];

  sub_57360(1LL, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  sub_6D3C();
}

void sub_3F0AC()
{
  uint64_t v1 = sub_3E20C();
  *(void *)(v1 + 2sub_62AC(v0 + 4) = &off_74E00;
  swift_unknownObjectWeakAssign(v1 + 16, v0);
  sub_4450C();
  sub_3E20C();
  sub_4468C();
  uint64_t v11 = v2;
  int v3 = sub_12778();
  sub_4459C(v3, "setCollectionViewLayout:", v4, v5, v6, v7, v8, v9, v10, v11);
  sub_44440(v12);
}

void sub_3F118(uint64_t a1)
{
  uint64_t v3 = sub_3E20C();
  sub_43F18(a1, (uint64_t)v6);
  sub_44608(v3 + 32, (uint64_t)v5);
  sub_62AC((void *)(v3 + 32));
  sub_6010(v6, v3 + 32);
  swift_endAccess(v5);
  sub_237D8();
  id v4 =  [*(id *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) collectionViewLayout];
  [v4 invalidateLayout];
}

void sub_3F1BC()
{
}

void sub_3F1F4()
{
}

id sub_3F244()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ShelfPageCollectionViewController();
  return sub_A32C((uint64_t)v8.super_class, "dealloc", v1, v2, v3, v4, v5, v6, v8);
}

uint64_t type metadata accessor for ShelfPageCollectionViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController);
}

void sub_3F348(uint64_t a1, Swift::Int a2, void *a3, double a4, double a5)
{
  uint64_t v97 = *(void *)(type metadata accessor for ImpressionMetrics.ID(0LL) - 8);
  sub_23758();
  __chkstk_darwin(v10);
  sub_12718();
  uint64_t v96 = v11;
  uint64_t v12 = type metadata accessor for IndexSet(0LL);
  uint64_t v94 = *(void *)(v12 - 8);
  sub_23758();
  __chkstk_darwin(v13);
  sub_12718();
  sub_4444C(v14);
  sub_5F6C(&qword_7EED8);
  sub_23758();
  __chkstk_darwin(v15);
  sub_12718();
  sub_4444C(v16);
  sub_5F6C(&qword_7EEE0);
  sub_23758();
  __chkstk_darwin(v17);
  sub_2DD94();
  sub_4440C();
  __chkstk_darwin(v18);
  sub_444D8();
  sub_4444C(v19);
  uint64_t v109 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v105 = *(void *)(v109 - 8);
  sub_23758();
  __chkstk_darwin(v20);
  sub_12718();
  sub_4444C(v21);
  sub_5F6C(&qword_7CB00);
  sub_23758();
  __chkstk_darwin(v22);
  sub_2DD94();
  sub_4440C();
  __chkstk_darwin(v23);
  sub_4440C();
  __chkstk_darwin(v24);
  sub_444D8();
  uint64_t v112 = v25;
  uint64_t v116 = type metadata accessor for ImpressionMetrics(0LL);
  uint64_t v26 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  sub_2DD94();
  sub_4440C();
  __chkstk_darwin(v27);
  sub_4440C();
  __chkstk_darwin(v28);
  sub_444D8();
  uint64_t v110 = v29;
  uint64_t v122 = sub_44428();
  uint64_t v119 = *(void *)(v122 - 8);
  sub_23758();
  __chkstk_darwin(v30);
  sub_237A8();
  sub_5F6C(&qword_7EEE8);
  sub_23758();
  __chkstk_darwin(v31);
  sub_12718();
  sub_4444C(v32);
  uint64_t v121 = sub_5F6C(&qword_7EEF0);
  uint64_t v33 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  sub_12718();
  sub_4444C(v34);
  uint64_t v35 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  sub_23A70();
LABEL_3:
  unint64_t v111 = v26;
  uint64_t v113 = v35;
  uint64_t v117 = v6;
  if (v35)
  {
    uint64_t v91 = v12;
    unint64_t v36 = a1 & 0xC000000000000001LL;
    uint64_t v26 = 4LL;
    uint64_t v104 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculator;
    uint64_t v107 = v5;
    while (1)
    {
      if (v36)
      {
        uint64_t v37 = sub_44584();
        uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v38);
      }

      else
      {
        swift_unknownObjectRetain(*(void *)(a1 + 8 * v26));
      }

      uint64_t v40 = v26 - 3;
      if (__OFADD__(v26 - 4, 1LL))
      {
        __break(1u);
LABEL_57:
        if (a1 < 0) {
          uint64_t v89 = a1;
        }
        else {
          uint64_t v89 = a1 & 0xFFFFFFFFFFFFFF8LL;
        }
        sub_23A70();
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter(v89);
        goto LABEL_3;
      }

      uint64_t v123 = v26;
      uint64_t v41 = v35;
      uint64_t v124 = v40;
      uint64_t v42 = (void *)v39;
      uint64_t v12 = v5;
      sub_3E1B0();
      id v43 = [v42 indexPath];
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      a1 = v118;
      CollectionContent.item(for:)(v6);
      sub_12778();
      id v44 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
      v44(v6, v122);
      uint64_t v45 = sub_445C4();
      sub_443F8(v45, v46, v121);
      if (v48) {
        break;
      }
      __int128 v114 = v44;
      uint64_t v120 = v42;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v115, v118, v121);
      uint64_t KeyPath = swift_getKeyPath(&unk_5FBE0);
      DiffableLens.subscript.getter(KeyPath, v121);
      a1 = v112;
      swift_release();
      uint64_t v35 = v116;
      sub_443F8(v112, 1LL, v116);
      if (v48)
      {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v115, v121);
        sub_445D0();
        sub_60C8(v112, &qword_7CB00);
        sub_4455C();
        uint64_t v6 = v117;
        sub_445FC();
        goto LABEL_15;
      }

      uint64_t v5 = v12;
      unint64_t v36 = v111;
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 32);
      uint64_t v33 = v110;
      v49(v110, v112, v116);
      uint64_t v12 = (uint64_t)v120;
      a1 = (uint64_t)[v120 indexPath];
      sub_444E4();

      sub_425C0((uint64_t)v125);
      v114(v117, v122);
      sub_43CA4((uint64_t)v125, (uint64_t)v129);
      if (v130 != 1)
      {
        double v50 = *(double *)v129;
        double v51 = *(double *)&v129[1];
        double v52 = *(double *)&v129[2];
        double v53 = *(double *)&v129[3];
        uint64_t v33 = v122;
        swift_retain(*(void *)(v5 + v104));
        sub_3E1B0();
        id v54 = [v120 indexPath];
        sub_444E4();

        a1 = v106;
        CollectionContent.section(for:)(v117);
        sub_12778();
        v114(v117, v122);
        uint64_t v55 = sub_445C4();
        unint64_t v36 = v109;
        sub_443F8(v55, v56, v109);
        if (v48)
        {
          sub_60C8(v106, &qword_7EEE0);
          uint64_t v12 = v107;
          sub_44620();
          uint64_t v6 = v117;
        }

        else
        {
          uint64_t v33 = v105;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32))(v103, v106, v109);
          uint64_t v57 = swift_getKeyPath(&unk_5FBC0);
          DiffableLens.subscript.getter(v57, v109);
          a1 = v101;
          swift_release();
          sub_443F8(v101, 1LL, v116);
          uint64_t v35 = v113;
          uint64_t v6 = v117;
          if (!v58)
          {
            unint64_t v36 = v100;
            v49(v100, v101, v116);
            uint64_t v33 = v107;
            sub_3E1B0();
            a1 = CollectionContent.view.getter();
            sub_12778();
            id v60 = [(id)a1 collectionViewLayout];

            uint64_t v61 = objc_opt_self(&OBJC_CLASS___UICollectionViewCompositionalLayout);
            uint64_t v62 = (void *)swift_dynamicCastObjCClass(v60, v61);
            uint64_t v59 = v115;
            if (v62)
            {
              unint64_t v63 = v62;
              id v64 = [v62 _orthogonalScrollingSections];
              sub_4455C();
              sub_445FC();
              if (!v65) {
                goto LABEL_62;
              }
              __int128 v66 = v65;
              static IndexSet._unconditionallyBridgeFromObjectiveC(_:)();

              (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32))(v95, v93, v91);
              sub_5FEC(v95, 0LL, 1LL, v91);
              sub_443F8(v95, 1LL, v91);
              if (v48) {
                goto LABEL_63;
              }
              Swift::Bool v90 = IndexSet.contains(_:)(a2);
              (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v91);
              if (v90)
              {
                [v63 _orthogonalScrollingLayoutRectForSection:a2];
                uint64_t v67 = Unstable.ImpressionsCalculator.addElement(_:at:)();
                uint64_t v33 = v96;
                ImpressionMetrics.id.getter(v67);
                uint64_t v68 = Unstable.ImpressionsCalculator.childCalculator(for:)(v96);
                sub_44478();
                uint64_t v69 = sub_44534();
                sub_443F0(v69, v70);
                sub_443F0(v100, *(uint64_t (**)(uint64_t, void))(v111 + 8));
                sub_443D0();
                if (v68) {
                  sub_4450C();
                }
                uint64_t v35 = v113;
              }

              else
              {
                uint64_t v33 = v100;
                Unstable.ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)( v100,  v50,  v51,  v52,  v53);
                sub_44478();
                uint64_t v71 = sub_44534();
                sub_443F0(v71, v72);
                sub_443D0();
              }

              uint64_t v12 = v107;
              sub_44614();
              goto LABEL_28;
            }

            uint64_t v12 = v107;
            sub_44478();
            (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v100, v116);
            sub_443D0();
            sub_4455C();
            sub_44614();
LABEL_27:
            sub_445FC();
LABEL_28:
            Unstable.ImpressionsCalculator.addElement(_:at:)();
            sub_4450C();
            sub_445D0();
            sub_443F0(v110, *(uint64_t (**)(uint64_t, void))(v111 + 8));
            sub_443F0(v59, *(uint64_t (**)(uint64_t, void))(v33 + 8));
            uint64_t v5 = v12;
            goto LABEL_16;
          }

          (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v103, v109);
          sub_60C8(v101, &qword_7CB00);
          uint64_t v12 = v107;
          sub_4455C();
        }

        sub_44614();
        uint64_t v59 = v115;
        goto LABEL_27;
      }

      sub_444A4();
      sub_44430(v110, *(uint64_t (**)(uint64_t, uint64_t))(v111 + 8));
      sub_44614();
      sub_443F0(v115, *(uint64_t (**)(uint64_t, void))(v110 + 8));
      sub_44620();
      uint64_t v6 = v117;
      sub_445FC();
LABEL_16:
      uint64_t v26 = v123 + 1;
      if (v124 == v35) {
        goto LABEL_39;
      }
    }

    swift_unknownObjectRelease(v42);
    sub_60C8(v118, &qword_7EEE8);
    sub_4455C();
LABEL_15:
    uint64_t v5 = v12;
    uint64_t v35 = v41;
    goto LABEL_16;
  }

LABEL_39:
  swift_bridgeObjectRelease(a1);
  sub_3E1B0();
  IndexPath.init(item:section:)(0LL, a2);
  CollectionContent.section(for:)(v6);
  sub_12778();
  uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v119 + 8);
  v73(v6, v122);
  sub_443F8(v99, 1LL, v109);
  if (v48)
  {
    sub_60C8(v99, &qword_7EEE0);
    uint64_t v75 = v98;
    sub_5FEC(v98, 1LL, 1LL, v116);
LABEL_44:
    sub_60C8(v75, &qword_7CB00);
    return;
  }

  uint64_t v74 = swift_getKeyPath(&unk_5FBC0);
  uint64_t v75 = v98;
  DiffableLens.subscript.getter(v74, v109);
  sub_237D8();
  uint64_t v76 = sub_44534();
  v77(v76, v109);
  sub_443F8(v98, 1LL, v116);
  if (v78) {
    goto LABEL_44;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 32))(v108, v98, v116);
  id v79 = [a3 container];
  [v79 contentSize];
  double v81 = v80;
  double v83 = v82;
  uint64_t v84 = swift_unknownObjectRelease(v79);
  ImpressionMetrics.id.getter(v84);
  Unstable.ImpressionsCalculator.changeImpressionableBounds(_:forElementWithID:)(v96, a4, a5, v81, v83);
  sub_443F0(v96, *(uint64_t (**)(uint64_t, void))(v97 + 8));
  if (!v113)
  {
LABEL_55:
    sub_443F0(v108, *(uint64_t (**)(uint64_t, void))(v111 + 8));
    return;
  }

  if (v113 >= 1)
  {
    sub_23A70();
    for (uint64_t i = 0LL; i != v113; ++i)
    {
      if ((a1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v86 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }

      else
      {
        uint64_t v86 = *(void **)(a1 + 8 * i + 32);
        *(void *)&double v87 = swift_unknownObjectRetain(v86).n128_u64[0];
      }

      id v88 = objc_msgSend(v86, "indexPath", v87);
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      sub_425C0((uint64_t)v126);
      v73(v117, v122);
      sub_43CA4((uint64_t)v126, (uint64_t)v127);
      if ((v128 & 1) == 0) {
        Unstable.ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)( v108,  v127[0],  v127[1],  v127[2],  v127[3]);
      }
      swift_unknownObjectRelease(v86);
    }

    swift_bridgeObjectRelease(a1);
    goto LABEL_55;
  }

  __break(1u);
LABEL_62:
  sub_5FEC(v95, 1LL, 1LL, v91);
LABEL_63:
  sub_4450C();
  __break(1u);
}

void sub_400A8(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_delegate);
  if (Strong)
  {
    uint64_t v4 = Strong;
    sub_444A4();
  }

  id v5 = [a1 contentOffset];
  uint64_t v6 = OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY;
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_currentOffsetY) = v7;
  id v8 = sub_A324((uint64_t)v5, "parentViewController");
  if (v8)
  {
    id v15 = v8;
    uint64_t v9 = type metadata accessor for ShelfPageCollectionLayoutViewController();
    uint64_t v10 = (void *)swift_dynamicCastClass(v15, v9);
    if (v10)
    {
      id v11 = [v10 parentViewController];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = type metadata accessor for ShelfPageViewController();
        if (swift_dynamicCastClass(v12, v13))
        {
          sub_51E70(*(double *)(v1 + v6) > 0.0, 1);
          uint64_t v14 = v15;
          id v15 = v12;
        }

        else
        {
          uint64_t v14 = v12;
        }
      }
    }
  }

  else
  {
    sub_44514();
  }

void sub_4022C(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_delegate);
  if (Strong)
  {
    id v5 = Strong;
    if ([Strong respondsToSelector:"collectionView:didEndDisplayingItemAtIndexPath:"])
    {
      id v6 = (id)IndexPath._bridgeToObjectiveC()();
      [v5 collectionView:a1 didEndDisplayingItemAtIndexPath:v6];
      sub_444A4();
    }

    else
    {
      swift_unknownObjectRelease(v5);
    }
  }

void sub_402F8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ImpressionMetrics.ID(0LL);
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v61 = v3;
  __chkstk_darwin(v3);
  uint64_t v59 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_5F6C(&qword_7EEE0);
  __chkstk_darwin(v5);
  id v64 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  __chkstk_darwin(v7);
  unint64_t v63 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_5F6C(&qword_7CB00);
  __chkstk_darwin(v9);
  uint64_t v62 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v68 = (char *)&v51 - v12;
  uint64_t v65 = type metadata accessor for ImpressionMetrics(0LL);
  uint64_t v13 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  id v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v19 = sub_5F6C(&qword_7EEE8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_5F6C(&qword_7EEF0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_3E1B0();
  CollectionContent.item(for:)(a1);
  swift_release();
  if (sub_6028((uint64_t)v21, 1LL, v22) == 1)
  {
    uint64_t v26 = &qword_7EEE8;
    uint64_t v27 = (uint64_t)v21;
LABEL_5:
    sub_60C8(v27, v26);
    return;
  }

  id v54 = v15;
  uint64_t v55 = v1;
  uint64_t v56 = a1;
  uint64_t v57 = v13;
  char v58 = v18;
  uint64_t v28 = v66;
  uint64_t v29 = v67;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
  uint64_t KeyPath = swift_getKeyPath(&unk_5FBE0);
  uint64_t v31 = (uint64_t)v68;
  DiffableLens.subscript.getter(KeyPath, v22);
  swift_release();
  uint64_t v32 = v65;
  if (sub_6028(v31, 1LL, v65) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    uint64_t v26 = &qword_7CB00;
    uint64_t v27 = v31;
    goto LABEL_5;
  }

  double v51 = v25;
  uint64_t v52 = v22;
  uint64_t v53 = v23;
  uint64_t v33 = v57;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
  v34(v58, v31, v32);
  swift_retain(*(void *)(v55
                         + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_impressionsCalculator));
  sub_3E1B0();
  uint64_t v35 = (uint64_t)v64;
  CollectionContent.section(for:)(v56);
  swift_release();
  if (sub_6028(v35, 1LL, v29) == 1)
  {
    sub_60C8(v35, &qword_7EEE0);
LABEL_12:
    uint64_t v41 = v58;
    uint64_t v43 = v52;
    uint64_t v42 = v53;
    id v44 = v51;
    goto LABEL_13;
  }

  uint64_t v36 = v28;
  uint64_t v37 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v63, v35, v29);
  uint64_t v38 = swift_getKeyPath(&unk_5FBC0);
  uint64_t v39 = v32;
  uint64_t v40 = (uint64_t)v62;
  DiffableLens.subscript.getter(v38, v29);
  swift_release();
  if (sub_6028(v40, 1LL, v32) != 1)
  {
    uint64_t v45 = (uint64_t (*)(char *, uint64_t, uint64_t))v34;
    uint64_t v46 = v54;
    uint64_t v47 = v45(v54, v40, v32);
    char v48 = v59;
    ImpressionMetrics.id.getter(v47);
    uint64_t v49 = Unstable.ImpressionsCalculator.childCalculator(for:)(v48);
    double v50 = v48;
    uint64_t v33 = v57;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v50, v61);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v39);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v29);
    if (!v49)
    {
      uint64_t v32 = v39;
      uint64_t v41 = v58;
      uint64_t v43 = v52;
      uint64_t v42 = v53;
      id v44 = v51;
      goto LABEL_13;
    }

    swift_release();
    uint64_t v32 = v39;
    goto LABEL_12;
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v29);
  sub_60C8(v40, &qword_7CB00);
  uint64_t v41 = v58;
  uint64_t v43 = v52;
  uint64_t v42 = v53;
  id v44 = v51;
LABEL_13:
  Unstable.ImpressionsCalculator.removeElement(_:)(v41);
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v32);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
}

void sub_408A0()
{
}

void sub_408AC()
{
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v50 = *(void *)(sub_5F6C(&qword_7EF50) - 8);
  sub_23758();
  __chkstk_darwin(v5);
  sub_12718();
  uint64_t v49 = v6;
  sub_5F6C(&qword_7EEE0);
  sub_23758();
  __chkstk_darwin(v7);
  sub_F76C();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_2DD94();
  __chkstk_darwin(v13);
  sub_444D8();
  uint64_t v15 = v14;
  sub_5F6C(&qword_7EEE8);
  sub_23758();
  __chkstk_darwin(v16);
  sub_44544();
  uint64_t v17 = sub_5F6C(&qword_7EEF0);
  uint64_t v52 = *(void *)(v17 - 8);
  sub_23758();
  __chkstk_darwin(v18);
  sub_12718();
  uint64_t v51 = v19;
  uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  uint64_t v53 = v4;
  NSIndexPath v55 = IndexPath._bridgeToObjectiveC()();
  Class isa = v55.super.isa;
  id v54 = objc_msgSend(v20, "cellForItemAtIndexPath:", v55.super.isa, v55._reserved);

  if (!v54) {
    goto LABEL_35;
  }
  uint64_t ObjectType = swift_getObjectType(v54);
  uint64_t v23 = sub_3B664((uint64_t)v54, ObjectType, (uint64_t)&protocol descriptor for AnyComponentCell);
  if (!v23)
  {

    return;
  }

  uint64_t v48 = v23;
  sub_40EB4(v53, v1);
  sub_443F8(v1, 1LL, v17);
  if (!v24)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v51, v1, v17);
    sub_3E1B0();
    CollectionContent.section(for:)(v53);
    sub_12778();
    sub_443F8(v10, 1LL, v11);
    if (v24)
    {
      sub_60C8(v10, &qword_7EEE0);
      uint64_t v25 = v51;
      goto LABEL_29;
    }

    uint64_t v26 = sub_44578();
    v27(v26);
    uint64_t v28 = sub_44634();
    uint64_t v29 = sub_3B664(v48, v28, (uint64_t)&protocol descriptor for ToggleableCell);
    if (!v29)
    {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
      uint64_t v25 = v51;
      goto LABEL_29;
    }

    uint64_t v45 = v29;
    uint64_t v46 = v30;
    uint64_t v31 = 1701736302LL;
    uint64_t KeyPath = swift_getKeyPath(&unk_5FC08);
    id v47 = v54;
    uint64_t v33 = v15;
    DiffableLens.subscript.getter(KeyPath, v11);
    sub_D7F0();
    sub_44524();
    sub_23920();
    if ((_DWORD)KeyPath)
    {
      if ((_DWORD)KeyPath != 1)
      {
        swift_bridgeObjectRelease(0xE800000000000000LL);
        sub_44458();
        goto LABEL_21;
      }

      uint64_t v34 = sub_445B0();
    }

    else
    {
      uint64_t v33 = 0xE400000000000000LL;
      uint64_t v34 = 1701736302LL;
    }

    char v35 = sub_23998(v34, v33, 0x656C7069746C756DLL, 0xE800000000000000LL);
    sub_23920();
    sub_44458();
    if ((v35 & 1) == 0)
    {
      uint64_t v36 = swift_getKeyPath(&unk_5FC08);
      DiffableLens.subscript.getter(v36, v11);
      sub_D7F0();
      sub_44524();
      sub_23920();
      if ((_DWORD)v36)
      {
        if ((_DWORD)v36 == 1)
        {
          sub_44568();
          goto LABEL_21;
        }

        uint64_t v38 = 0xE800000000000000LL;
        uint64_t v31 = 0x656C7069746C756DLL;
      }

      else
      {
        uint64_t v38 = 0xE400000000000000LL;
      }

      char v39 = sub_23998(v31, v38, 0x656C676E6973LL, 0xE600000000000000LL);
      sub_23920();
      sub_444EC();
      if ((v39 & 1) == 0)
      {
        sub_4446C();

        uint64_t v25 = v51;
        goto LABEL_29;
      }

uint64_t sub_40EB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_5F6C(&qword_7EEE8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_3E1B0();
  CollectionContent.item(for:)(a1);
  swift_release();
  uint64_t v7 = sub_5F6C(&qword_7EEF0);
  if (sub_6028((uint64_t)v6, 1LL, v7) == 1)
  {
    sub_60C8((uint64_t)v6, &qword_7EEE8);
    memset(__src, 0, sizeof(__src));
    goto LABEL_7;
  }

  DiffableLens.value.getter(v13, v7);
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
  uint64_t v8 = sub_5F6C((uint64_t *)&unk_7F100);
  if ((swift_dynamicCast(__src, v13, v8, &type metadata for PluginComponent, 6LL) & 1) == 0)
  {
    memset(__src, 0, sizeof(__src));
    goto LABEL_7;
  }

  if (!*(void *)__src)
  {
LABEL_7:
    sub_60C8((uint64_t)__src, (uint64_t *)&unk_7EF40);
    uint64_t v9 = a2;
    uint64_t v10 = 1LL;
    return sub_5FEC(v9, v10, 1LL, v7);
  }

  memcpy(__dst, __src, sizeof(__dst));
  sub_43F18((uint64_t)&__dst[16], (uint64_t)__src);
  DiffableLens<A>.init(_:)(__src);
  sub_29734((uint64_t)__dst);
  uint64_t v9 = a2;
  uint64_t v10 = 0LL;
  return sub_5FEC(v9, v10, 1LL, v7);
}

void sub_41060(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v65 = a1;
  uint64_t v5 = sub_5F6C(&qword_7EF58);
  uint64_t v64 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_5F6C(&qword_7EEE0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_3E1B0();
  CollectionContent.section(for:)(a2);
  swift_release();
  if (sub_6028((uint64_t)v13, 1LL, v14) == 1)
  {
    sub_60C8((uint64_t)v13, &qword_7EEE0);
    return;
  }

  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  uint64_t KeyPath = swift_getKeyPath(&unk_5FC08);
  DiffableLens.subscript.getter(KeyPath, v14);
  swift_release();
  uint64_t v19 = v70;
  int v20 = v71;
  swift_bridgeObjectRelease(v68[2]);
  swift_bridgeObjectRelease(v19);
  if (!v20)
  {
    swift_bridgeObjectRelease(0xE400000000000000LL);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return;
  }

  if (v20 == 1)
  {
    unint64_t v21 = 0xE600000000000000LL;
    uint64_t v22 = 0x656C676E6973LL;
  }

  else
  {
    unint64_t v21 = 0xE800000000000000LL;
    uint64_t v22 = 0x656C7069746C756DLL;
  }

  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v21, 1701736302LL, 0xE400000000000000LL, 0LL);
  swift_bridgeObjectRelease(v21);
  if ((v23 & 1) != 0) {
    goto LABEL_9;
  }
  uint64_t v24 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v25 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v26 = *(void *)(v25 + 72);
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  v60[1] = v26;
  uint64_t v28 = swift_allocObject(v24, ((v27 + 32) & ~v27) + 2 * v26, v27 | 7);
  *(_OWORD *)(v28 + swift_weakDestroy(v0 + 16) = xmmword_5CD80;
  uint64_t v61 = v28;
  uint64_t v69 = type metadata accessor for ShelfPageCollectionViewController();
  v68[0] = v3;
  id v62 = v3;
  id v29 = (id)AMSLogKey(v62);
  uint64_t v63 = v5;
  if (v29)
  {
    uint64_t v31 = v29;
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);
    v60[0] = v33;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v34._countAndFlagsBits = 0LL;
    v34._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t v35 = v69;
    uint64_t v36 = sub_7A94(v68, v69);
    uint64_t DynamicType = swift_getDynamicType(v36, v35, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v66[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v66);
    sub_60C8((uint64_t)v66, &qword_7DDE0);
    v38._countAndFlagsBits = 5972026LL;
    v38._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    uint64_t MetatypeMetadata = &type metadata for String;
    v66[0] = v32;
    v66[1] = v60[0];
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v66);
    sub_60C8((uint64_t)v66, &qword_7DDE0);
    uint64_t v39 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v40._countAndFlagsBits = 0LL;
    v40._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    uint64_t v41 = v69;
    uint64_t v42 = sub_7A94(v68, v69);
    uint64_t v43 = swift_getDynamicType(v42, v41, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v43);
    v66[0] = v43;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v66);
    sub_60C8((uint64_t)v66, &qword_7DDE0);
    uint64_t v39 = 58LL;
  }

  uint64_t v44 = v61;
  unint64_t v45 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v39);
  LogMessage.init(stringInterpolation:)(v10);
  type metadata accessor for Log();
  sub_62AC(v68);
  LogMessage.init(stringLiteral:)(0x676E696C67676F54LL, 0xEE00736C6C656320LL);
  sub_2679C(v44);
  swift_bridgeObjectRelease(v44);
  uint64_t v46 = sub_5F6C(&qword_7EF00);
  uint64_t v47 = swift_allocBox(v46);
  uint64_t v49 = v48;
  uint64_t v50 = type metadata accessor for IndexPath(0LL);
  uint64_t v51 = sub_5FEC(v49, 1LL, 1LL, v50);
  uint64_t v52 = v62;
  uint64_t v53 = DiffableDataStatePresenter.stateStore.getter(v51);
  __n128 v54 = __chkstk_darwin(v53);
  NSIndexPath v55 = v65;
  v60[-6] = v52;
  v60[-5] = v55;
  v60[-4] = a2;
  v60[-3] = v17;
  v60[-2] = v49;
  uint64_t v56 = v63;
  AnyStateStore.performTransaction<A>(postingChanges:_:)(0LL, sub_43F58, v54);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v56);
  uint64_t v57 = (void *)swift_allocObject(&unk_74FB0, 40LL, 7LL);
  v57[2] = v47;
  void v57[3] = v55;
  v57[4] = v52;
  id v58 = v52;
  swift_retain(v47);
  id v59 = v55;
  sub_4231C((uint64_t)sub_43FA8, (uint64_t)v57);
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  swift_release();
}

uint64_t sub_415E0()
{
  uint64_t v52 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_44428();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  sub_23758();
  __chkstk_darwin(v7);
  sub_12718();
  uint64_t v47 = v8;
  uint64_t v9 = sub_5F6C(&qword_7EB60);
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  sub_23758();
  __chkstk_darwin(v10);
  sub_F76C();
  uint64_t v13 = v12 - v11;
  sub_5F6C(&qword_7EEE0);
  sub_23758();
  __chkstk_darwin(v14);
  sub_237A8();
  uint64_t v15 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_F76C();
  uint64_t v19 = v18 - v17;
  sub_5F6C(&qword_7EEE8);
  sub_23758();
  __chkstk_darwin(v20);
  sub_F76C();
  uint64_t v23 = v22 - v21;
  uint64_t v53 = sub_5F6C(&qword_7EEF0);
  uint64_t v24 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  sub_12718();
  uint64_t v51 = v25;
  NSIndexPath v56 = IndexPath._bridgeToObjectiveC()();
  Class isa = v56.super.isa;
  uint64_t v50 = v5;
  id v27 = objc_msgSend(v5, "cellForItemAtIndexPath:", v56.super.isa, v56._reserved);

  if (v27)
  {
    uint64_t ObjectType = swift_getObjectType(v27);
    uint64_t v29 = sub_3B664((uint64_t)v27, ObjectType, (uint64_t)&protocol descriptor for AnyComponentCell);
    if (v29)
    {
      uint64_t v43 = v29;
      uint64_t v44 = v30;
      sub_40EB4(v3, v23);
      sub_443F8(v23, 1LL, v53);
      if (!v33)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v51, v23, v53);
        sub_3E1B0();
        CollectionContent.section(for:)(v3);
        sub_12778();
        sub_443F8(v1, 1LL, v15);
        if (v33)
        {
          sub_60C8(v1, &qword_7EEE0);
        }

        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v19, v1, v15);
          uint64_t KeyPath = swift_getKeyPath(&unk_5FC08);
          DiffableLens.subscript.getter(KeyPath, v15);
          sub_4463C();
          uint64_t v35 = v54;
          ((void (*)())swift_bridgeObjectRelease)();
          sub_23920();
          if (v55)
          {
            if (v55 == 1)
            {
              uint64_t v36 = sub_445B0();
            }

            else
            {
              uint64_t v35 = 0xE800000000000000LL;
              uint64_t v36 = 0x656C7069746C756DLL;
            }

            char v42 = sub_23998(v36, v35, 1701736302LL, 0xE400000000000000LL);
            sub_23920();
            sub_44430(v19, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
            if ((v42 & 1) == 0)
            {
              sub_444C8();

              return 1LL;
            }
          }

          else
          {
            ((void (*)())swift_bridgeObjectRelease)();
            sub_44430(v19, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
          }
        }

        uint64_t v37 = swift_getObjectType(v43);
        ((void (*)(uint64_t))DiffableDataStatePresenter.lens(for:))(v51);
        char v38 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v44 + 24))( v51,  v13,  *(void *)(v52 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_objectGraph),  v37);
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v13, v46);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v47, v3, v49);
        if ((v38 & 1) != 0
          || (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v52 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_delegate)) == 0LL)
        {
        }

        else
        {
          Swift::String v40 = Strong;
          if ([Strong respondsToSelector:"collectionView:shouldHighlightItemAtIndexPath:"])
          {
            uint64_t v41 = (void *)IndexPath._bridgeToObjectiveC()();
            id v31 = [v40 collectionView:v50 shouldHighlightItemAtIndexPath:v41];

            sub_444A4();
LABEL_22:
            sub_44430(v47, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
            sub_444C8();
            return (uint64_t)v31;
          }

          sub_444A4();
        }

        id v31 = &dword_0 + 1;
        goto LABEL_22;
      }

      sub_60C8(v23, &qword_7EEE8);
    }

    else
    {
    }
  }

  return 0LL;
}

void sub_41ADC()
{
  uint64_t v69 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v72 = v5;
  sub_5F6C(&qword_7EF00);
  sub_23758();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v67 - v10;
  uint64_t v12 = sub_44428();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  sub_444D8();
  uint64_t v70 = v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v67 - v18;
  *(void *)&double v21 = __chkstk_darwin(v20).n128_u64[0];
  uint64_t v23 = (char *)&v67 - v22;
  id v71 = v4;
  id v24 = objc_msgSend(v4, "previouslyFocusedIndexPath", v21);
  if (!v24)
  {
    uint64_t v38 = sub_445C4();
    sub_4441C(v38, v39);
    goto LABEL_8;
  }

  uint64_t v25 = v24;
  id v68 = v2;
  sub_444E4();

  uint64_t v26 = *(void (**)(uint64_t))(v13 + 32);
  sub_44484((uint64_t)v11);
  sub_4441C((uint64_t)v11, 0LL);
  uint64_t v27 = sub_445C4();
  sub_443F8(v27, v28, v12);
  if (v29)
  {
LABEL_8:
    sub_60C8((uint64_t)v11, &qword_7EF00);
    char v33 = v72;
    goto LABEL_11;
  }

  uint64_t v30 = sub_44584();
  v26(v30);
  id v31 = [v71 nextFocusedIndexPath];
  if (!v31)
  {
    sub_4441C((uint64_t)v8, 1LL);
    char v33 = v72;
    goto LABEL_10;
  }

  uint64_t v32 = v31;
  sub_444E4();

  sub_44484((uint64_t)v8);
  sub_4441C((uint64_t)v8, 0LL);
  sub_443F8((uint64_t)v8, 1LL, v12);
  char v33 = v72;
  if (v29)
  {
LABEL_10:
    uint64_t v40 = sub_44578();
    v41(v40);
    sub_60C8((uint64_t)v8, &qword_7EF00);
    goto LABEL_11;
  }

  Swift::String v34 = v70;
  ((void (*)(char *, char *, uint64_t))v26)(v70, v8, v12);
  unint64_t v35 = sub_43CF0();
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v23, v34, v12, v35) & 1) == 0)
  {
    uint64_t v43 = sub_44584();
    BOOL v45 = sub_41F5C(v43, v44);
    uint64_t v46 = v34;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v47((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL), (uint64_t)v46, v12);
    if (v45)
    {
      uint64_t v67 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
      uint64_t v48 = v67((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL), v12);
    }

    else
    {
      BOOL v49 = sub_41F5C((uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL), v33);
      uint64_t v50 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
      uint64_t v48 = v50((char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL), v12);
      if (!v49)
      {
LABEL_22:
        v50(v70, v12);
        uint64_t v66 = sub_44578();
        ((void (*)(uint64_t))v50)(v66);
        goto LABEL_12;
      }

      uint64_t v67 = v50;
    }

    uint64_t v51 = DiffableDataStatePresenter.dataPresenter.getter(v48);
    uint64_t v52 = sub_23844((uint64_t)&unk_74E70);
    swift_weakInit(v52 + 16, v51);
    v47(v19, (uint64_t)v70, v12);
    uint64_t v53 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v54 = (v53 + 32) & ~v53;
    unint64_t v55 = (v14 + v54 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v56 = swift_allocObject(&unk_74E98, v55 + 8, v53 | 7);
    *(void *)(v56 + swift_weakDestroy(v0 + 16) = v52;
    uint64_t v57 = v72;
    *(void *)(v56 + 2sub_62AC(v0 + 4) = v72;
    sub_44484(v56 + v54);
    id v58 = v69;
    *(void *)(v56 + v55) = v69;
    v73[4] = sub_43DB4;
    v73[5] = v56;
    v73[0] = _NSConcreteStackBlock;
    v73[1] = 1107296256LL;
    v73[2] = sub_424B0;
    v73[3] = &unk_74EB0;
    id v59 = _Block_copy(v73);
    id v60 = v57;
    uint64_t v61 = v58;
    swift_release();
    id v62 = v68;
    [v68 addCoordinatedFocusingAnimations:v59 completion:0];
    _Block_release(v59);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v61[OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_delegate]);
    if (Strong)
    {
      uint64_t v64 = Strong;
      unsigned __int8 v65 = [Strong respondsToSelector:"collectionView:didUpdateFocusInContext:withAnimationCoordinator:"];
      uint64_t v50 = v67;
      if ((v65 & 1) != 0) {
        [v64 collectionView:v60 didUpdateFocusInContext:v71 withAnimationCoordinator:v62];
      }
      sub_12778();
      swift_unknownObjectRelease(v64);
    }

    else
    {
      sub_12778();
      uint64_t v50 = v67;
    }

    goto LABEL_22;
  }

  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v36((uint64_t)v34, v12);
  uint64_t v37 = sub_44578();
  ((void (*)(uint64_t))v36)(v37);
LABEL_11:
  id v42 = [v33 collectionViewLayout];
  [v42 invalidateLayout];

LABEL_12:
  sub_9ABC();
}

BOOL sub_41F5C(uint64_t a1, void *a2)
{
  NSIndexPath v8 = IndexPath._bridgeToObjectiveC()();
  Class isa = v8.super.isa;
  id v4 = objc_msgSend(a2, "cellForItemAtIndexPath:", v8.super.isa, v8._reserved);

  if (!v4) {
    return 0LL;
  }
  uint64_t ObjectType = swift_getObjectType(v4);
  BOOL v6 = sub_3B664((uint64_t)v4, ObjectType, (uint64_t)&protocol descriptor for FocusConfigurableCell) != 0;

  return v6;
}

uint64_t sub_41FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = sub_5F6C((uint64_t *)&unk_7EF10);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_beginAccess(a2 + 16, v28, 0LL, 0LL);
  if (swift_weakLoadStrong(a2 + 16))
  {
    ShelvesPresenter.onApplySnapshot.getter();
    v26[1] = a5;
    swift_release();
    uint64_t v15 = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v16 = static OS_dispatch_queue.main.getter(v15);
    _OWORD v27[3] = v15;
    void v27[4] = &protocol witness table for OS_dispatch_queue;
    v27[0] = v16;
    uint64_t v17 = swift_allocObject(&unk_74EE8, 24LL, 7LL);
    swift_unknownObjectWeakInit(v17 + 16, a3);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a4,  v9);
    uint64_t v18 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v19 = (v18 + 24) & ~v18;
    uint64_t v20 = swift_allocObject(&unk_74F10, v19 + v11, v18 | 7);
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = v17;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))( v20 + v19,  (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v9);
    uint64_t v21 = sub_5F6C(&qword_7EF20);
    sub_23430(&qword_7EF28, &qword_7EF20, (uint64_t)&protocol conformance descriptor for AsyncEvent<A>);
    EventEmitter.addObserver(on:singleUse:_:)(v27, 1LL, sub_43E7C, v20, v21, v22);
    swift_release();
    swift_release();
    sub_62AC(v27);
    uint64_t v23 = 0LL;
  }

  else
  {
    uint64_t v23 = 1LL;
  }

  uint64_t v24 = sub_5F6C((uint64_t *)&unk_7EF30);
  sub_5FEC((uint64_t)v14, v23, 1LL, v24);
  sub_60C8((uint64_t)v14, (uint64_t *)&unk_7EF10);
  swift_retain(a2);
  sub_4231C((uint64_t)sub_43EB8, a2);
  return swift_release();
}

void sub_42250(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    id v4 = (void *)Strong;
    uint64_t v5 = (void *)IndexPath._bridgeToObjectiveC()();
    [v4 scrollToItemAtIndexPath:v5 atScrollPosition:16 animated:1];
  }

uint64_t sub_422C8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v1);
  if (result)
  {
    uint64_t v3 = result;
    ShelvesPresenter.reapplySnapshot()();
    return swift_release(v3);
  }

  return result;
}

void sub_4231C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 =  [*(id *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView) collectionViewLayout];
  [v6 invalidateLayout];

  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v8 = swift_allocObject(&unk_74E20, 24LL, 7LL);
  swift_unknownObjectWeakInit(v8 + 16, v3);
  uint64_t v16 = sub_43EC0;
  uint64_t v17 = v8;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256LL;
  uint64_t v14 = sub_21544;
  uint64_t v15 = &unk_74F28;
  uint64_t v9 = _Block_copy(&v12);
  swift_release();
  uint64_t v10 = swift_allocObject(&unk_74F60, 32LL, 7LL);
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v10 + 2sub_62AC(v0 + 4) = a2;
  uint64_t v16 = sub_43EF4;
  uint64_t v17 = v10;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256LL;
  uint64_t v14 = sub_56AE0;
  uint64_t v15 = &unk_74F78;
  uint64_t v11 = _Block_copy(&v12);
  sub_21B84(a1, a2);
  swift_release();
  [v7 animateWithDuration:134 delay:v9 options:v11 animations:0.2 completion:0.0];
  _Block_release(v11);
  _Block_release(v9);
}

uint64_t sub_424B0(uint64_t a1, uint64_t a2)
{
  id v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  uint64_t v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_4257C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v1 = a1[4];
  sub_7A94(a1, v2);
  return dispatch thunk of ViewModel.impressionMetrics.getter(v2, *(void *)(v1 + 8));
}

void sub_425C0(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView);
  NSIndexPath v14 = IndexPath._bridgeToObjectiveC()();
  Class isa = v14.super.isa;
  id v5 = objc_msgSend(v3, "cellForItemAtIndexPath:", v14.super.isa, v14._reserved);

  if (v5)
  {
    [v5 frame];
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
  }

  else
  {
    uint64_t v7 = 0LL;
    uint64_t v9 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v13 = 0LL;
  }

  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v11;
  *(void *)(a1 + 2sub_62AC(v0 + 4) = v13;
  *(_BYTE *)(a1 + 32) = v5 == 0LL;
}

uint64_t sub_42680(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v62 = a5;
  uint64_t v72 = a3;
  uint64_t v67 = a2;
  uint64_t v6 = sub_5F6C(&qword_7EEE0);
  __chkstk_darwin(v6);
  id v68 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v77 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for IndexPath(0LL);
  uint64_t v71 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  *(void *)&double v19 = __chkstk_darwin(v16).n128_u64[0];
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v73 = a1;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_shelfBehavior + 1) & 1) != 0
    || (*(_BYTE *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_shelfBehavior) & 1) != 0)
  {
    uint64_t KeyPath = swift_getKeyPath(&unk_5FC08);
    DiffableLens.subscript.getter(KeyPath, v8);
    swift_release();
    uint64_t v49 = v75;
    int v50 = v76;
    swift_bridgeObjectRelease(v74);
    swift_bridgeObjectRelease(v49);
    if (v50)
    {
      uint64_t v23 = v71;
      if (v50 == 1)
      {
        uint64_t v51 = swift_bridgeObjectRelease(0xE600000000000000LL);
LABEL_39:
        uint64_t v55 = IndexPath.section.getter(v51);
        uint64_t result = (uint64_t)[v67 numberOfItemsInSection:v55];
        if (result < 0)
        {
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }

        uint64_t v56 = result;
        if (result)
        {
          uint64_t v57 = 0LL;
          do
          {
            uint64_t v58 = IndexPath.section.getter(result);
            IndexPath.init(row:section:)(v57, v58);
            sub_42D28(v67, (uint64_t)v13, 0);
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v13, v11);
            ++v57;
          }

          while (v56 != v57);
        }

LABEL_46:
      __break(1u);
      goto LABEL_47;
    }

    goto LABEL_43;
  }

LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_42D28(void *a1, uint64_t a2, int a3)
{
  id v4 = v3;
  int v86 = a3;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  double v87 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_5F6C(&qword_7EF58);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_5F6C(&qword_7EEE8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_5F6C(&qword_7EEF0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  double v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v85 = a1;
  uint64_t v88 = a2;
  sub_40EB4(a2, (uint64_t)v15);
  if (sub_6028((uint64_t)v15, 1LL, v16) != 1)
  {
    uint64_t v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    DiffableDataStatePresenter.stateStore.getter(v36);
    char v37 = sub_43764((uint64_t)v19, v86 & 1, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((v37 & 1) == 0) {
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    }
    uint64_t v38 = (uint64_t)v4;
    uint64_t v84 = v16;
    uint64_t v39 = v88;
    NSIndexPath v95 = IndexPath._bridgeToObjectiveC()();
    Class isa = v95.super.isa;
    id v41 = objc_msgSend(v85, "cellForItemAtIndexPath:", v95.super.isa, v95._reserved);

    uint64_t v42 = v87;
    if (v41)
    {
      uint64_t ObjectType = swift_getObjectType(v41);
      uint64_t v44 = sub_3B664((uint64_t)v41, ObjectType, (uint64_t)&protocol descriptor for ToggleableCell);
      if (v44)
      {
        char v46 = (void *)v44;
        uint64_t v47 = v45;
        uint64_t v48 = swift_getObjectType(v44);
        id v92 = v46;
        (*(void (**)(void, uint64_t, uint64_t))(v47 + 16))(v86 & 1, v48, v47);
        id v49 = v92;
        sub_43FB4(v49, v38, v48, v47);

        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v84);
      }
    }

    uint64_t v58 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v59 = type metadata accessor for LogMessage(0LL);
    uint64_t v60 = swift_allocObject( v58,  ((*(unsigned __int8 *)(*(void *)(v59 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v59 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v59 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v59 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v60 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
    uint64_t v94 = (void *)type metadata accessor for ShelfPageCollectionViewController();
    id v92 = v4;
    id v61 = (id)AMSLogKey(v4);
    if (v61)
    {
      uint64_t v63 = v61;
      uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61, v62);
      uint64_t v65 = v39;
      uint64_t v66 = v19;
      uint64_t v67 = v17;
      uint64_t v69 = v68;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v70._countAndFlagsBits = 0LL;
      v70._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      uint64_t v71 = v94;
      uint64_t v72 = sub_7A94(&v92, (uint64_t)v94);
      uint64_t DynamicType = swift_getDynamicType(v72, v71, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v89 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
      sub_60C8((uint64_t)&v89, &qword_7DDE0);
      v74._countAndFlagsBits = 5972026LL;
      v74._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v89 = v64;
      uint64_t v90 = v69;
      uint64_t v17 = v67;
      double v19 = v66;
      uint64_t v39 = v65;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
      sub_60C8((uint64_t)&v89, &qword_7DDE0);
      uint64_t v75 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v76._countAndFlagsBits = 0LL;
      v76._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v76);
      uint64_t v77 = v94;
      char v78 = sub_7A94(&v92, (uint64_t)v94);
      uint64_t v79 = swift_getDynamicType(v78, v77, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v79);
      uint64_t v89 = v79;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
      sub_60C8((uint64_t)&v89, &qword_7DDE0);
      uint64_t v75 = 58LL;
    }

    unint64_t v80 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v75);
    LogMessage.init(stringInterpolation:)(v42);
    type metadata accessor for Log();
    sub_62AC(&v92);
    uint64_t v94 = &type metadata for String;
    id v92 = (id)0xD00000000000004ELL;
    unint64_t v93 = 0x8000000000064C30LL;
    static LogMessage.safe(_:)(&v92);
    sub_60C8((uint64_t)&v92, &qword_7DDE0);
    double v81 = (void *)type metadata accessor for IndexPath(0LL);
    uint64_t v94 = v81;
    double v82 = sub_7BA4(&v92);
    (*(void (**)(void *, uint64_t, void *))(*((void *)v81 - 1) + 16LL))(v82, v39, v81);
    static LogMessage.safe(_:)(&v92);
    sub_60C8((uint64_t)&v92, &qword_7DDE0);
    sub_2679C(v60);
    swift_bridgeObjectRelease(v60);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v84);
  }

  sub_60C8((uint64_t)v15, &qword_7EEE8);
  uint64_t v20 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v21 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v22 = swift_allocObject( v20,  ((*(unsigned __int8 *)(v21 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
        + 3LL * *(void *)(v21 + 72),
          *(unsigned __int8 *)(v21 + 80) | 7LL);
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v94 = (void *)type metadata accessor for ShelfPageCollectionViewController();
  id v92 = v4;
  id v23 = (id)AMSLogKey(v4);
  if (v23)
  {
    uint64_t v25 = v23;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);
    uint64_t v28 = v27;

    uint64_t v29 = v87;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v30._countAndFlagsBits = 0LL;
    v30._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    unint64_t v31 = v94;
    uint64_t v32 = sub_7A94(&v92, (uint64_t)v94);
    uint64_t v33 = swift_getDynamicType(v32, v31, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v33);
    uint64_t v89 = v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
    sub_60C8((uint64_t)&v89, &qword_7DDE0);
    v34._countAndFlagsBits = 5972026LL;
    v34._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v89 = v26;
    uint64_t v90 = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
    sub_60C8((uint64_t)&v89, &qword_7DDE0);
    uint64_t v35 = 93LL;
  }

  else
  {
    uint64_t v29 = v87;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v51._countAndFlagsBits = 0LL;
    v51._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    uint64_t v52 = v94;
    unint64_t v53 = sub_7A94(&v92, (uint64_t)v94);
    uint64_t v54 = swift_getDynamicType(v53, v52, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v54);
    uint64_t v89 = v54;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
    sub_60C8((uint64_t)&v89, &qword_7DDE0);
    uint64_t v35 = 58LL;
  }

  unint64_t v55 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v35);
  LogMessage.init(stringInterpolation:)(v29);
  type metadata accessor for Log();
  sub_62AC(&v92);
  uint64_t v94 = &type metadata for String;
  id v92 = (id)0xD000000000000048LL;
  unint64_t v93 = 0x8000000000064BE0LL;
  static LogMessage.safe(_:)(&v92);
  sub_60C8((uint64_t)&v92, &qword_7DDE0);
  uint64_t v56 = (void *)type metadata accessor for IndexPath(0LL);
  uint64_t v94 = v56;
  uint64_t v57 = sub_7BA4(&v92);
  (*(void (**)(void *, uint64_t, void *))(*((void *)v56 - 1) + 16LL))(v57, v88, v56);
  static LogMessage.safe(_:)(&v92);
  sub_60C8((uint64_t)&v92, &qword_7DDE0);
  sub_2679C(v22);
  return swift_bridgeObjectRelease(v22);
}

void sub_434B4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_5F6C(&qword_7EF00);
  __chkstk_darwin(v6);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for IndexPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v14 = swift_projectBox(a1, v11);
  swift_beginAccess(v14, v20, 0LL, 0LL);
  sub_4436C(v14, (uint64_t)v8, &qword_7EF00);
  if (sub_6028((uint64_t)v8, 1LL, v9) == 1)
  {
    sub_60C8((uint64_t)v8, &qword_7EF00);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    uint64_t v15 = *(void (**)(double))(a3
                                        + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator);
    uint64_t v16 = *(void *)(a3
                    + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_visibleBoundsCalculator
                    + 8);
    sub_21B84((uint64_t)v15, v16);
    BOOL v17 = sub_43658((uint64_t)v13, v15);
    sub_21B94((uint64_t)v15, v16);
    if (!v17)
    {
      uint64_t v18 = (void *)IndexPath._bridgeToObjectiveC()();
      [a2 scrollToItemAtIndexPath:v18 atScrollPosition:0 animated:1];
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }

BOOL sub_43658(uint64_t a1, void (*a2)(double))
{
  uint64_t v7 = v2;
  NSIndexPath v17 = IndexPath._bridgeToObjectiveC()();
  Class isa = v17.super.isa;
  id v10 = objc_msgSend(v2, "layoutAttributesForItemAtIndexPath:", v17.super.isa, v17._reserved);

  if (!v10) {
    return 0LL;
  }
  [v10 frame];
  objc_msgSend( v7,  "convertRect:toView:",  objc_msgSend(v7, "superview", sub_44490()),  v3,  v4,  v5,  v6);
  double v11 = sub_44490();
  if (a2) {
    a2(v11);
  }
  else {
    objc_msgSend(v7, "bounds", v11);
  }
  v18.origin.x = v3;
  v18.origin.y = v4;
  v18.size.width = v5;
  v18.size.height = v6;
  return CGRectContainsRect(*(CGRect *)&v12, v18);
}

uint64_t sub_43764(uint64_t a1, char a2, uint64_t a3)
{
  double v4 = v3;
  uint64_t v47 = a3;
  uint64_t v48 = sub_5F6C(&qword_7EF68);
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v45 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v11 = type metadata accessor for LogMessage(0LL);
  uint64_t v12 = swift_allocObject( v10,  ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v11 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v12 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v44 = v12;
  Swift::String v51 = (void *)type metadata accessor for ShelfPageCollectionViewController();
  uint64_t v49 = (uint64_t)v4;
  id v13 = (id)AMSLogKey(v4);
  if (v13)
  {
    uint64_t v15 = v13;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);
    unint64_t v18 = v17;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v19._countAndFlagsBits = 0LL;
    v19._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t v20 = v51;
    uint64_t v21 = sub_7A94(&v49, (uint64_t)v51);
    uint64_t DynamicType = swift_getDynamicType(v21, v20, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    uint64_t v53 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v53);
    sub_60C8((uint64_t)&v53, &qword_7DDE0);
    v23._countAndFlagsBits = 5972026LL;
    v23._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v53 = v16;
    unint64_t v54 = v18;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v53);
    sub_60C8((uint64_t)&v53, &qword_7DDE0);
    uint64_t v24 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v25._countAndFlagsBits = 0LL;
    v25._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v26 = v51;
    uint64_t v27 = sub_7A94(&v49, (uint64_t)v51);
    uint64_t v28 = swift_getDynamicType(v27, v26, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v28);
    uint64_t v53 = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v53);
    sub_60C8((uint64_t)&v53, &qword_7DDE0);
    uint64_t v24 = 58LL;
  }

  unint64_t v29 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v24);
  LogMessage.init(stringInterpolation:)(v9);
  sub_62AC(&v49);
  Swift::String v51 = &type metadata for String;
  uint64_t v49 = 0x676E696C67676F54LL;
  unint64_t v50 = 0xE900000000000020LL;
  static LogMessage.safe(_:)(&v49);
  sub_60C8((uint64_t)&v49, &qword_7DDE0);
  uint64_t v30 = sub_5F6C(&qword_7EEF0);
  unint64_t v31 = DiffableLens.id.getter(&v49, v30);
  uint64_t v53 = AnyHashable.description.getter(v31);
  unint64_t v54 = v32;
  sub_D6CC((uint64_t)&v49);
  v33._countAndFlagsBits = 32LL;
  v33._object = (void *)0xE100000000000000LL;
  String.append(_:)(v33);
  int v34 = a2 & 1;
  if ((a2 & 1) != 0) {
    uint64_t v35 = 28271LL;
  }
  else {
    uint64_t v35 = 6710895LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v36 = (void *)0xE200000000000000LL;
  }
  else {
    uint64_t v36 = (void *)0xE300000000000000LL;
  }
  type metadata accessor for Log();
  v37._countAndFlagsBits = v35;
  v37._object = v36;
  String.append(_:)(v37);
  swift_bridgeObjectRelease(v36);
  Swift::String v51 = &type metadata for String;
  uint64_t v49 = v53;
  unint64_t v50 = v54;
  static LogMessage.safe(_:)(&v49);
  sub_60C8((uint64_t)&v49, &qword_7DDE0);
  uint64_t v38 = v44;
  sub_2679C(v44);
  swift_bridgeObjectRelease(v38);
  DiffableLens.id.getter(&v49, v30);
  uint64_t v39 = v45;
  StatePath.init(component:)(&v49, &type metadata for AnyHashable);
  uint64_t v40 = sub_5F6C(&qword_7EF58);
  unint64_t v41 = sub_44294();
  AnyStateStore.currentState<A>(at:)(&v53, v39, v40, &type metadata for CellState, v41);
  if (!v34)
  {
    if (v53 != 2)
    {
      char v42 = 2;
      goto LABEL_16;
    }

void sub_43BB4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    double v3 = (void *)Strong;
    id v4 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC19CoreDynamicUIPlugin33ShelfPageCollectionViewController_collectionView));

    [v4 layoutIfNeeded];
  }

void sub_43C28()
{
  NSString v8 = String._bridgeToObjectiveC()();
  int v0 = sub_23920();
  sub_4459C(v0, "setAccessibilityIdentifier:", v1, v2, v3, v4, v5, v6, v7, (uint64_t)v8);
  sub_44440(v9);
}

uint64_t sub_43C64()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_43C88(uint64_t a1)
{
}

uint64_t sub_43C90()
{
  return sub_444AC(v0, 24LL);
}

void sub_43C9C(uint64_t a1)
{
}

uint64_t sub_43CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7EEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_43CF0()
{
  unint64_t result = qword_7EF08;
  if (!qword_7EF08)
  {
    uint64_t v1 = type metadata accessor for IndexPath(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_7EF08);
  }

  return result;
}

uint64_t sub_43D30()
{
  uint64_t v1 = *(void *)(sub_44428() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v2 | 7;
  unint64_t v4 = (*(void *)(v1 + 64) + ((v2 + 32) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_3CD28();

  sub_444FC();
  return swift_deallocObject(v0, v4 + 8, v3);
}

uint64_t sub_43DB4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_44428() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_41FE0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  v1 + v4,  *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_43E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_43E14(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_43E1C()
{
  uint64_t v1 = *(void *)(sub_44428() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = ((v2 + 24) & ~v2) + *(void *)(v1 + 64);
  uint64_t v4 = v2 | 7;
  sub_3CD28();
  sub_444FC();
  return swift_deallocObject(v0, v3, v4);
}

void sub_43E7C(uint64_t a1)
{
}

uint64_t sub_43EB8()
{
  return sub_422C8(v0);
}

void sub_43EC0()
{
}

uint64_t sub_43EC8()
{
  if (*(void *)(v0 + 16)) {
    swift_release(*(void *)(v0 + 24));
  }
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_43EF4()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  if (v1) {
    v1();
  }
  sub_6D3C();
}

void sub_43F18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 2sub_62AC(v0 + 4) = v2;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_6D3C();
}

uint64_t sub_43F58()
{
  return sub_42680( *(void *)(v0 + 16),  *(void **)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(void *)(v0 + 48));
}

uint64_t sub_43F78()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_43FA8()
{
}

void sub_43FB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v7 = swift_allocObject(&unk_74FD8, 32LL, 7LL);
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v7 + 2sub_62AC(v0 + 4) = a4;
  uint64_t v8 = swift_allocObject(&unk_75000, 32LL, 7LL);
  *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_4425C;
  *(void *)(v8 + 2sub_62AC(v0 + 4) = v7;
  v19[4] = sub_44278;
  void v19[5] = v8;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256LL;
  v19[2] = sub_3DA04;
  v19[3] = &unk_75018;
  id v9 = _Block_copy(v19);
  id v10 = a1;
  swift_retain(v8);
  swift_release();
  [v6 performWithoutAnimation:v9];
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation(v8, "", 151LL, 780LL, 40LL, 1LL);
  swift_release();
  if ((v9 & 1) != 0)
  {
    __break(1u);
  }

  else
  {
    id v11 = [v10 contentView];
    id v12 = [v11 subviews];

    uint64_t v13 = sub_C184(0LL, (unint64_t *)&qword_7EF60, &OBJC_CLASS___UIView_ptr);
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

    if (!((unint64_t)v8 >> 62))
    {
      uint64_t v14 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8LL));
      if (v14) {
        goto LABEL_4;
      }
LABEL_10:
      swift_release();
      swift_bridgeObjectRelease(v8);
      return;
    }
  }

  if (v8 < 0) {
    uint64_t v18 = v8;
  }
  else {
    uint64_t v18 = v8 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v8);
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v8);
  if (!v14) {
    goto LABEL_10;
  }
LABEL_4:
  if (v14 >= 1)
  {
    for (uint64_t i = 0LL; i != v14; ++i)
    {
      if ((v8 & 0xC000000000000001LL) != 0) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
      }
      else {
        id v16 = *(id *)(v8 + 8 * i + 32);
      }
      unint64_t v17 = v16;
      [v6 transitionWithView:v16 duration:5243014 options:0 animations:0 completion:0.2];
    }

    goto LABEL_10;
  }

  __break(1u);
}

uint64_t sub_44238()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_4425C()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

uint64_t sub_4426C()
{
  return sub_444AC(v0, 32LL);
}

void sub_44278()
{
}

unint64_t sub_44294()
{
  unint64_t result = qword_7EF70;
  if (!qword_7EF70)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CellState, &type metadata for CellState);
    atomic_store(result, (unint64_t *)&qword_7EF70);
  }

  return result;
}

unint64_t sub_442D0()
{
  unint64_t result = qword_7EF78;
  if (!qword_7EF78)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CellState, &type metadata for CellState);
    atomic_store(result, (unint64_t *)&qword_7EF78);
  }

  return result;
}

uint64_t sub_4430C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  return sub_3E82C(a1, a2, a3, a4, v4);
}

uint64_t sub_44314()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_44338()
{
  return swift_deallocObject(v0, 33LL, 7LL);
}

uint64_t sub_44360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3ED2C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(_BYTE *)(v3 + 32));
}

void sub_4436C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_5F6C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  sub_6D3C();
}

uint64_t sub_443D0()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 496) + 8LL))( *(void *)(v0 - 512),  *(void *)(v0 - 464));
}

uint64_t sub_443F0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 256));
}

uint64_t sub_443F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_6028(a1, a2, a3);
}

void sub_4440C()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_4441C(uint64_t a1, uint64_t a2)
{
  return sub_5FEC(a1, a2, 1LL, v2);
}

uint64_t sub_44428()
{
  return type metadata accessor for IndexPath(0LL);
}

uint64_t sub_44430@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_44438@<X0>(uint64_t a1@<X8>)
{
  return swift_release(*(void *)(v1 + a1));
}

void sub_44440(id a1)
{
}

void sub_4444C(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_44458()
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v2, v3);
}

uint64_t sub_4446C()
{
  return v0(v1, v2);
}

void sub_44478()
{
}

uint64_t sub_44484(uint64_t a1)
{
  return v2(a1, v3, v1);
}

double sub_44490()
{
  return result;
}

uint64_t sub_444A4()
{
  return swift_unknownObjectRelease(v0);
}

uint64_t sub_444AC(uint64_t a1, uint64_t a2)
{
  return swift_deallocObject(a1, a2, 7LL);
}

uint64_t sub_444B4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 168) + 8LL))(v1, v0);
}

uint64_t sub_444C8()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v1 - 152), *(void *)(v1 - 136));
}

  ;
}

uint64_t sub_444E4()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_444EC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_444FC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t sub_4450C()
{
  return swift_release(v0);
}

  ;
}

uint64_t sub_44524()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 120));
}

uint64_t sub_44534()
{
  return v0;
}

  ;
}

  ;
}

uint64_t sub_44568()
{
  return swift_bridgeObjectRelease(0xE600000000000000LL);
}

id sub_44570(void *a1)
{
  return [a1 *(SEL *)(v1 + 3424)];
}

uint64_t sub_44578()
{
  return v0;
}

uint64_t sub_44584()
{
  return v0;
}

id sub_44590(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

id sub_4459C( int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(v10, a2, a10);
}

uint64_t sub_445A8()
{
  return swift_unknownObjectRelease(v0);
}

uint64_t sub_445B0()
{
  return 0x656C676E6973LL;
}

uint64_t sub_445C4()
{
  return v0;
}

uint64_t sub_445D0()
{
  return swift_unknownObjectRelease(*(void *)(v0 - 352));
}

uint64_t sub_445DC@<X0>(uint64_t a1@<X8>)
{
  return swift_unknownObjectWeakInit(v1 + a1, 0LL);
}

void sub_445E8()
{
}

uint64_t sub_445F0@<X0>(uint64_t a1@<X8>)
{
  return sub_21B94(*(void *)(v1 + a1), *(void *)(v1 + a1 + 8));
}

  ;
}

uint64_t sub_44608(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 33LL, 0LL);
}

  ;
}

  ;
}

uint64_t sub_44634()
{
  return swift_getObjectType(v0);
}

uint64_t sub_4463C()
{
  return swift_release(v0);
}

void sub_44644(uint64_t a1, __int128 *a2, uint64_t a3)
{
  v3[3] = 0LL;
  swift_unknownObjectWeakInit(v3 + 2, 0LL);
  void v3[9] = a1;
  v3[10] = a3;
  sub_6010(a2, (uint64_t)(v3 + 4));
  sub_35094();
}

void sub_4468C()
{
  uint64_t v1 = swift_allocObject(&unk_75148, 24LL, 7LL);
  swift_weakInit(v1 + 16, v0);
  id v2 = objc_allocWithZone(&OBJC_CLASS___UICollectionViewCompositionalLayout);
  sub_4628C((uint64_t)sub_46418, v1);
  sub_6D3C();
}

uint64_t sub_446E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5F6C(&qword_7EEE0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_5F6C((uint64_t *)&unk_7F110);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for IndexPath(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a3 += 16LL;
  swift_beginAccess(a3, v31, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a3);
  if (!Strong) {
    return 0LL;
  }
  uint64_t v18 = Strong;
  IndexPath.init(item:section:)(0LL, a1);
  swift_retain(*(void *)(v18 + 72));
  CollectionContent.section(for:)(v16);
  swift_release();
  if (sub_6028((uint64_t)v8, 1LL, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t KeyPath = swift_getKeyPath(&unk_5FCD0);
    DiffableLens.subscript.getter(KeyPath, v9);
    swift_release();
    uint64_t v20 = v30;
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v20);
    id v21 = sub_44998((uint64_t)v12, (uint64_t)v16, a2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (uint64_t)v21;
  }

  sub_60C8((uint64_t)v8, &qword_7EEE0);
  unint64_t v27 = 0LL;
  unint64_t v28 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(39LL);
  swift_bridgeObjectRelease(v28);
  unint64_t v27 = 0xD000000000000025LL;
  unint64_t v28 = 0x8000000000064F60LL;
  unint64_t v23 = sub_46420();
  v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v13, v23);
  object = v24._object;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(object);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v27,  v28,  "CoreDynamicUIPlugin/ShelfPageCollectionViewLayoutProvider.swift",  63LL,  2LL,  66LL,  0);
  __break(1u);
  return result;
}

id sub_44998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_5F6C((uint64_t *)&unk_7F110);
  DiffableLens.id.getter(&v23, v5);
  sub_45FE8((uint64_t)&v23, (uint64_t)v18);
  sub_D6CC((uint64_t)&v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_5FCB0);
  sub_464A4(KeyPath);
  swift_release();
  uint64_t v7 = v19;
  uint64_t v8 = sub_46544();
  DiffableLens.subscript.getter(v8, v5);
  swift_release();
  __int128 v23 = v21;
  v24[0] = v22[0];
  *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)v22 + 9);
  uint64_t v9 = sub_44B50(v7, (uint64_t)&v23, a3);
  swift_bridgeObjectRelease(v7);
  sub_463C0((uint64_t)&v23);
  uint64_t v10 = sub_46544();
  sub_464A4(v10);
  swift_release();
  __int128 v21 = v19;
  v22[0] = v20[0];
  *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v20 + 9);
  sub_45344((uint64_t)v9, (uint64_t)&v21, v18);
  id v12 = v11;
  swift_bridgeObjectRelease(v9);
  sub_463C0((uint64_t)&v21);
  uint64_t v13 = sub_46544();
  sub_464A4(v13);
  swift_release();
  __int128 v19 = v16;
  v20[0] = *(_OWORD *)v17;
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v17[9];
  id v14 = sub_45948((uint64_t)v12, (uint64_t)&v19, a2);
  sub_463C0((uint64_t)&v19);

  sub_62AC(v18);
  return v14;
}

void *sub_44B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = _swiftEmptyArrayStorage;
  unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = a1 + 32;
    sub_46488();
    do
    {
      sub_44C70(v9, (uint64_t)v21, a2, a3, &v19);
      uint64_t v11 = v19;
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        unint64_t v13 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8LL));
        unint64_t v12 = *(void *)((char *)&dword_18 + (v20 & 0xFFFFFFFFFFFFFF8LL));
        if (v13 >= v12 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1LL);
        }
        uint64_t v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v14, v15, v16, v17);
      }

      v9 += 40LL;
      --v8;
    }

    while (v8);
    sub_190B8();
    uint64_t v7 = (void *)v20;
  }

  swift_weakDestroy(v21);
  return v7;
}

void sub_44C70(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_beginAccess(a2, v51, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (!Strong)
  {
    *a5 = 0LL;
    return;
  }

  uint64_t v14 = Strong;
  sub_43F18(a1, (uint64_t)v47);
  uint64_t v15 = sub_5F6C((uint64_t *)&unk_7F100);
  if ((swift_dynamicCast(v49, v47, v15, &type metadata for PluginComponent, 6LL) & 1) == 0)
  {
    uint64_t v50 = 0LL;
    memset(v49, 0, sizeof(v49));
  }

  sub_46378((uint64_t)v49, (uint64_t)v47);
  uint64_t v16 = v47[0];
  if (v47[0])
  {
    sub_29734((uint64_t)v47);
    uint64_t v17 = sub_3B664(v16, v16, (uint64_t)&protocol descriptor for CollectionLayoutItemProvider);
    if (v17)
    {
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      if ((*(_BYTE *)(a3 + 2) & 1) != 0)
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)( 0x6C61636974726576LL,  0xE800000000000000LL,  0x746E6F7A69726F68LL,  0xEA00000000006C61LL,  0LL);
        swift_bridgeObjectRelease(0xE800000000000000LL);
        if ((v21 & 1) == 0)
        {
          sub_45280(v19, v20, a4);
LABEL_12:
          uint64_t v23 = v22;
          swift_release();
          *a5 = v23;
          sub_60C8((uint64_t)v49, (uint64_t *)&unk_7EF40);
          return;
        }
      }

      else
      {
        swift_bridgeObjectRelease(0xEA00000000006C61LL);
      }

      sub_45140(v19, v20, a4);
      goto LABEL_12;
    }
  }

  else
  {
    sub_60C8((uint64_t)v47, (uint64_t *)&unk_7EF40);
  }

  uint64_t v24 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v25 = type metadata accessor for LogMessage(0LL);
  uint64_t v26 = swift_allocObject( v24,  ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v25 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v26 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v48 = type metadata accessor for ShelfPageCollectionViewLayoutProvider();
  v47[0] = v14;
  id v27 = (id)AMSLogKey(v48);
  if (v27)
  {
    uint64_t v29 = v27;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);
    uint64_t v32 = v31;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v33._countAndFlagsBits = 0LL;
    v33._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    uint64_t v34 = v48;
    uint64_t v35 = sub_7A94(v47, v48);
    uint64_t DynamicType = swift_getDynamicType(v35, v34, 1LL);
    *((void *)&v46 + 1) = swift_getMetatypeMetadata(DynamicType);
    *(void *)&__int128 v45 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v45);
    sub_60C8((uint64_t)&v45, &qword_7DDE0);
    v37._countAndFlagsBits = 5972026LL;
    v37._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    *((void *)&v46 + 1) = &type metadata for String;
    *(void *)&__int128 v45 = v30;
    *((void *)&v45 + 1) = v32;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v45);
    sub_60C8((uint64_t)&v45, &qword_7DDE0);
    uint64_t v38 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v39._countAndFlagsBits = 0LL;
    v39._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    uint64_t v40 = v48;
    unint64_t v41 = sub_7A94(v47, v48);
    uint64_t v42 = swift_getDynamicType(v41, v40, 1LL);
    *((void *)&v46 + 1) = swift_getMetatypeMetadata(v42);
    *(void *)&__int128 v45 = v42;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v45);
    sub_60C8((uint64_t)&v45, &qword_7DDE0);
    uint64_t v38 = 58LL;
  }

  unint64_t v43 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v38);
  LogMessage.init(stringInterpolation:)(v12);
  sub_62AC(v47);
  LogMessage.init(stringLiteral:)(0xD000000000000045LL, 0x8000000000064E40LL);
  sub_46378((uint64_t)v49, (uint64_t)v47);
  uint64_t v44 = v47[0];
  if (v47[0])
  {
    sub_29734((uint64_t)v47);
    *((void *)&v46 + 1) = swift_getMetatypeMetadata(v44);
    *(void *)&__int128 v45 = v44;
  }

  else
  {
    sub_60C8((uint64_t)v47, (uint64_t *)&unk_7EF40);
    __int128 v45 = 0u;
    __int128 v46 = 0u;
  }

  type metadata accessor for Log();
  static LogMessage.safe(_:)(&v45);
  sub_60C8((uint64_t)&v45, &qword_7DDE0);
  sub_267BC(v26);
  swift_bridgeObjectRelease(v26);
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000039LL,  0x8000000000064ED0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionViewLayoutProvider.swift",  63LL,  2LL,  124LL,  0);
  __break(1u);
}

void sub_45140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)sub_46508(a1, a3, a2);
  uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutItem);
  id v6 = sub_4655C(v5, "itemWithLayoutSize:");
  sub_125F8((uint64_t)v6, &qword_7F0F8, &OBJC_CLASS___NSCollectionLayoutEdgeSpacing_ptr);
  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutSpacing);
  id v8 = sub_464B0(v7);
  id v9 = sub_464D0();
  id v10 = sub_45204(0LL, v3, 0LL, v9);
  sub_464F0(v6, "setEdgeSpacing:");

  sub_19098();
}

id sub_45204(void *a1, void *a2, void *a3, void *a4)
{
  id v9 = [(id)swift_getObjCClassFromMetadata(v4) spacingForLeading:a1 top:a2 trailing:a3 bottom:a4];

  return v9;
}

void sub_45280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)sub_46508(a1, a3, a2);
  uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutItem);
  id v6 = sub_4655C(v5, "itemWithLayoutSize:");
  sub_125F8((uint64_t)v6, &qword_7F0F8, &OBJC_CLASS___NSCollectionLayoutEdgeSpacing_ptr);
  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutSpacing);
  id v8 = sub_464B0(v7);
  id v9 = sub_464D0();
  id v10 = sub_45204(v3, 0LL, v9, 0LL);
  sub_464F0(v6, "setEdgeSpacing:");

  sub_19098();
}

void sub_45344(uint64_t a1, uint64_t a2, void *a3)
{
  if (!((unint64_t)a1 >> 62))
  {
LABEL_13:
    uint64_t v14 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
    id v15 = [v14 absoluteDimension:0.0];
    id v16 = [v14 absoluteDimension:0.0];
    uint64_t v17 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutSize);
    id v18 = sub_46518(v17, "sizeWithWidthDimension:heightDimension:");
    sub_4654C();

    uint64_t v19 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutGroup);
    sub_125F8((uint64_t)v19, &qword_7F0F0, &OBJC_CLASS___NSCollectionLayoutItem_ptr);
    Class isa = sub_464C4().super.isa;
    id v20 = [v19 verticalGroupWithLayoutSize:&stru_79FE8.align subitems:isa];

    goto LABEL_14;
  }

  if (a1 < 0) {
    uint64_t v12 = a1;
  }
  else {
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  sub_46488();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  sub_190B8();
  if (!v13) {
    goto LABEL_13;
  }
LABEL_3:
  if (*(_BYTE *)(a2 + 2) == 1)
  {
    swift_bridgeObjectRelease(0xE800000000000000LL);
  }

  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)( 0x746E6F7A69726F68LL,  0xEA00000000006C61LL,  0x6C61636974726576LL,  0xE800000000000000LL,  0LL);
    swift_bridgeObjectRelease(0xEA00000000006C61LL);
    if ((v6 & 1) == 0)
    {
      uint64_t v7 = sub_45628(a1);
      goto LABEL_8;
    }
  }

  sub_45540();
LABEL_8:
  id v8 = (void *)v7;
  id v9 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutSpacing);
  uint64_t v10 = a3[4];
  sub_7A94(a3, a3[3]);
  sub_46468(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  Class isa = (Class)objc_msgSend(v9, "fixedSpacing:");
  sub_464F0(v8, "setInterItemSpacing:");
LABEL_14:

  sub_19098();
}

void sub_45540()
{
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
  id v2 = [v1 fractionalWidthDimension:1.0];
  id v3 = [v1 estimatedDimension:200.0];
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutSize);
  id v5 = sub_46518(v4, "sizeWithWidthDimension:heightDimension:");
  sub_4654C();

  char v6 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutGroup);
  sub_125F8((uint64_t)v6, &qword_7F0F0, &OBJC_CLASS___NSCollectionLayoutItem_ptr);
  Class isa = sub_464C4().super.isa;
  id v8 = sub_4652C(v6, "verticalGroupWithLayoutSize:subitems:");

  sub_35094();
}

uint64_t sub_45628(uint64_t a1)
{
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
    uint64_t result = sub_46488();
    if (v3) {
      goto LABEL_3;
    }
LABEL_28:
    uint64_t result = sub_190B8();
    __break(1u);
    goto LABEL_29;
  }

  if (a1 < 0) {
    uint64_t v34 = a1;
  }
  else {
    uint64_t v34 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  sub_46488();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v34);
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_28;
  }
LABEL_3:
  if (v3 < 1)
  {
LABEL_29:
    __break(1u);
    return result;
  }

  uint64_t v5 = 0LL;
  unint64_t v6 = a1 & 0xC000000000000001LL;
  double v7 = 10.0;
  do
  {
    if (v6) {
      id v8 = (id)sub_46524(v5);
    }
    else {
      id v8 = *(id *)(a1 + 8 * v5 + 32);
    }
    id v9 = v8;
    ++v5;
    id v10 = objc_msgSend(objc_msgSend(v8, "layoutSize"), "widthDimension");
    sub_46554();
    sub_464E4();
    double v12 = v11;

    double v7 = v7 + v12;
  }

  while (v3 != v5);
  sub_190B8();
  sub_56A10(0LL, v6 == 0, a1);
  if (v6)
  {
    sub_46488();
    id v13 = (id)sub_46524(0LL);
  }

  else
  {
    uint64_t v14 = *(void **)(a1 + 32);
    sub_46488();
    id v13 = v14;
  }

  id v15 = v13;
  unint64_t v16 = v3 - 1;
  if (v16)
  {
    sub_46538(1uLL);
    sub_46538(v16);
    for (uint64_t i = 0LL; i != v16; ++i)
    {
      if (v6) {
        id v18 = (id)sub_46524(i + 1);
      }
      else {
        id v18 = *(id *)(a1 + 8 * i + 40);
      }
      uint64_t v19 = v18;
      id v20 = sub_46564([v15 layoutSize]);
      sub_46554();
      sub_464E4();
      double v22 = v21;

      id v23 = sub_46564([v19 layoutSize]);
      sub_46554();
      sub_464E4();
      double v25 = v24;

      if (v22 >= v25) {
        uint64_t v26 = v19;
      }
      else {
        uint64_t v26 = v15;
      }
      if (v22 < v25) {
        id v15 = v19;
      }
    }
  }

  sub_190B8();
  id v27 = [(id)objc_opt_self(NSCollectionLayoutDimension) estimatedDimension:v7];
  id v28 = [v15 layoutSize];
  id v29 = [v28 heightDimension];

  id v30 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v27 heightDimension:v29];
  sub_4654C();

  uint64_t v31 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutGroup);
  sub_125F8((uint64_t)v31, &qword_7F0F0, &OBJC_CLASS___NSCollectionLayoutItem_ptr);
  Class isa = sub_464C4().super.isa;
  id v33 = sub_4652C(v31, "horizontalGroupWithLayoutSize:subitems:");

  return (uint64_t)v33;
}

id sub_45948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_44428();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = sub_45C7C();
  id v10 = sub_45D40(a2);
  sub_125F8((uint64_t)v10, &qword_7F0E0, &OBJC_CLASS___NSCollectionLayoutBoundarySupplementaryItem_ptr);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  [v9 setBoundarySupplementaryItems:isa];

  if ((*(_BYTE *)(a2 + 2) & 1) == 0) {
    [v9 setOrthogonalScrollingBehavior:1];
  }
  uint64_t v12 = swift_allocObject(&unk_750D0, 32LL, 7LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3 + 16);
  *(void *)(v12 + 2sub_62AC(v0 + 4) = *(void *)(v3 + 24);
  swift_unknownObjectWeakInit(v12 + 16, Strong);
  swift_unknownObjectRelease(Strong);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))( (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a3,  v6);
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = (v14 + 24) & ~v14;
  uint64_t v16 = swift_allocObject(&unk_750F8, v15 + v8, v14 | 7);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))( v16 + v15,  (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v6);
  aBlock[4] = sub_46210;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_45BE0;
  void aBlock[3] = &unk_75110;
  uint64_t v17 = _Block_copy(aBlock);
  swift_release();
  sub_464F0(v9, "setVisibleItemsInvalidationHandler:");
  _Block_release(v17);

  return v9;
}

uint64_t sub_45B4C(uint64_t a1, void *a2, uint64_t a3, double a4, double a5)
{
  uint64_t v9 = a3 + 16;
  swift_beginAccess(a3 + 16, v13, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v9);
  if (result)
  {
    uint64_t v11 = result;
    Swift::Int v12 = IndexPath.section.getter();
    sub_3F348(a1, v12, a2, a4, a5);
    return swift_unknownObjectRelease(v11);
  }

  return result;
}

uint64_t sub_45BE0(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v10 = *(void (**)(uint64_t, uint64_t, double, double))(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v11 = sub_5F6C(&qword_7F0E8);
  uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
  swift_retain(v9);
  swift_unknownObjectRetain(a3);
  v10(v12, a3, a4, a5);
  swift_release();
  swift_bridgeObjectRelease(v12);
  return swift_unknownObjectRelease(a3);
}

id sub_45C7C()
{
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutSection);
  id v2 = sub_4655C(v1, "sectionWithGroup:");
  sub_46478();
  sub_46468(v0[5]);
  double v4 = v3;
  sub_46478();
  sub_46468(v0[6]);
  double v6 = v5;
  sub_46478();
  sub_46468(v0[4]);
  double v8 = v7;
  sub_46478();
  sub_46468(v0[7]);
  objc_msgSend(v2, "setContentInsets:", v4, v6, v8, v9);
  return v2;
}

void *sub_45D40(uint64_t a1)
{
  id v2 = (void *)objc_opt_self(&OBJC_CLASS___NSCollectionLayoutDimension);
  id v3 = [v2 fractionalWidthDimension:1.0];
  id v4 = [v2 estimatedDimension:44.0];
  id v5 =  [(id)objc_opt_self(NSCollectionLayoutSize) sizeWithWidthDimension:v3 heightDimension:v4];

  sub_46134(a1 + 24, (uint64_t)v24);
  uint64_t v6 = sub_46134((uint64_t)v24, (uint64_t)v25);
  if (v26)
  {
    sub_125F8(v6, &qword_7F0E0, &OBJC_CLASS___NSCollectionLayoutBoundarySupplementaryItem_ptr);
    id v7 = sub_45F4C(v5, 5.0, 10.0, 0x726564616568LL, 0xE600000000000000LL, 1LL);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    unint64_t v9 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
    unint64_t v8 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
    if (v9 >= v8 >> 1) {
      sub_46490(v9 + 1, v8);
    }
    uint64_t v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
    specialized Array._endMutation()(v10, v11, v12, v13);
  }

  sub_46134(a1 + 8, (uint64_t)v23);
  uint64_t v14 = sub_46134((uint64_t)v23, (uint64_t)v27);
  if (v28)
  {
    sub_125F8(v14, &qword_7F0E0, &OBJC_CLASS___NSCollectionLayoutBoundarySupplementaryItem_ptr);
    id v15 = sub_45F4C(v5, 5.0, -26.0, 0x7265746F6F66LL, 0xE600000000000000LL, 5LL);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    unint64_t v17 = *(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
    unint64_t v16 = *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL));
    if (v17 >= v16 >> 1) {
      sub_46490(v17 + 1, v16);
    }
    uint64_t v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
    specialized Array._endMutation()(v18, v19, v20, v21);
  }

  return _swiftEmptyArrayStorage;
}

id sub_45F4C(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a5);
  id v13 =  objc_msgSend( (id)swift_getObjCClassFromMetadata(v6),  "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:",  a1,  v12,  a6,  a2,  a3);

  return v13;
}

void sub_45FE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = swift_dynamicCast(v9, v10, &type metadata for AnyHashable, &type metadata for String, 6LL);
  if ((_DWORD)v4)
  {
    uint64_t v5 = v9[0];
    uint64_t v6 = v9[1];
    sub_464F8(v4, (uint64_t)v9);
    sub_43F18(v2 + 32, (uint64_t)v10);
    uint64_t v7 = v11;
    uint64_t v8 = v12;
    sub_7A94(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 64))(v5, v6, v7, v8);
    swift_bridgeObjectRelease(v6);
    sub_62AC(v10);
  }

  else
  {
    sub_464F8(v4, (uint64_t)v10);
    sub_43F18(v2 + 32, a2);
  }

uint64_t sub_460C0()
{
  return v0;
}

uint64_t sub_460F4()
{
  return swift_deallocClassInstance(v0, 88LL, 7LL);
}

uint64_t type metadata accessor for ShelfPageCollectionViewLayoutProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin37ShelfPageCollectionViewLayoutProvider);
}

uint64_t sub_46134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7D200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_4617C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_461A0()
{
  uint64_t v1 = sub_44428();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_46210(uint64_t a1, void *a2, double a3, double a4)
{
  return sub_45B4C(a1, a2, *(void *)(v4 + 16), a3, a4);
}

uint64_t sub_46274(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_46284(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

id sub_4628C(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  void v6[5] = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256LL;
  __int128 v6[2] = sub_46314;
  v6[3] = &unk_75160;
  uint64_t v3 = _Block_copy(v6);
  id v4 = [v2 initWithSectionProvider:v3];
  _Block_release(v3);
  swift_release();
  return v4;
}

id sub_46314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  uint64_t v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

uint64_t sub_46378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C((uint64_t *)&unk_7EF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_463C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease(*(void *)(a1 + 16));
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_463F4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_46418(uint64_t a1, uint64_t a2)
{
  return sub_446E4(a1, a2, v2);
}

unint64_t sub_46420()
{
  unint64_t result = qword_7F120;
  if (!qword_7F120)
  {
    uint64_t v1 = type metadata accessor for IndexPath(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_7F120);
  }

  return result;
}

uint64_t sub_46468@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

void *sub_46478()
{
  return sub_7A94(v0, v0[3]);
}

uint64_t sub_46488()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_46490@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(a2 > 1, a1, 1LL);
}

uint64_t sub_464A4(uint64_t a1)
{
  return DiffableLens.subscript.getter(a1, v1);
}

id sub_464B0(void *a1)
{
  return [a1 flexibleSpacing:0.0];
}

NSArray sub_464C4()
{
  return Array._bridgeToObjectiveC()();
}

id sub_464D0()
{
  return objc_msgSend(v0, *(SEL *)(v1 + 976), 0.0);
}

id sub_464E4()
{
  return [v0 *(SEL *)(v1 + 920)];
}

id sub_464F0(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_464F8(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(v2, a2, 0LL, 0LL);
}

uint64_t sub_46508@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return v3(a2, a1, a3);
}

id sub_46518(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v3, v2);
}

uint64_t sub_46524(uint64_t a1)
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v1);
}

id sub_4652C(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v3, v2);
}

unint64_t sub_46538(unint64_t a1)
{
  return sub_56A10(a1, v2, v1);
}

uint64_t sub_46544()
{
  return swift_getKeyPath(v0);
}

void sub_4654C()
{
}

void sub_46554()
{
}

id sub_4655C(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2);
}

id sub_46564(void *a1)
{
  return [a1 *(SEL *)(v1 + 928)];
}

uint64_t *sub_46570(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = type metadata accessor for JSServiceRequest(0LL);
    if (sub_6028((uint64_t)a2, 1LL, v7))
    {
      uint64_t v8 = sub_5F6C(&qword_7CB08);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
    }

    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[2];
      a1[2] = v11;
      uint64_t v12 = *(int *)(v7 + 24);
      id v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for URL(0LL);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      if (sub_6028((uint64_t)v14, 1LL, v15))
      {
        uint64_t v16 = sub_5F6C((uint64_t *)&unk_7DE50);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16LL))(v13, v14, v15);
        sub_5FEC((uint64_t)v13, 0LL, 1LL, v15);
      }

      sub_5FEC((uint64_t)a1, 0LL, 1LL, v7);
    }

    uint64_t v17 = *(int *)(a3 + 20);
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = type metadata accessor for ShelfPage(0LL);
    if (sub_6028((uint64_t)v19, 1LL, v20))
    {
      uint64_t v21 = sub_5F6C(&qword_7CB10);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64LL));
    }

    else
    {
      uint64_t v81 = v20;
      uint64_t v22 = *v19;
      uint64_t v23 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v23;
      uint64_t v25 = v19[2];
      uint64_t v24 = v19[3];
      v18[2] = v25;
      v18[3] = v24;
      uint64_t v26 = v19[4];
      v18[4] = v26;
      *((_BYTE *)v18 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v19 + 40);
      uint64_t v28 = v19[6];
      id v27 = (void *)v19[7];
      v18[6] = v28;
      v18[7] = (uint64_t)v27;
      __int128 v29 = *(_OWORD *)(v19 + 11);
      *(_OWORD *)(v18 + 11) = v29;
      uint64_t v30 = v29;
      uint64_t v31 = **(void (***)(uint64_t *, uint64_t *, uint64_t))(v29 - 8);
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v26);
      swift_retain(v28);
      id v32 = v27;
      v31(v18 + 8, v19 + 8, v30);
      uint64_t v33 = v19[14];
      v18[13] = v19[13];
      v18[14] = v33;
      uint64_t v34 = v19[16];
      swift_bridgeObjectRetain(v33);
      if (v34 == 1)
      {
        memcpy(v18 + 15, v19 + 15, 0x90uLL);
        uint64_t v35 = v81;
      }

      else
      {
        v18[15] = v19[15];
        v18[16] = v34;
        *((_BYTE *)v18 + 136) = *((_BYTE *)v19 + 136);
        uint64_t v36 = v19[19];
        swift_bridgeObjectRetain(v34);
        if (v36 == 1)
        {
          __int128 v37 = *((_OWORD *)v19 + 10);
          *((_OWORD *)v18 + 9) = *((_OWORD *)v19 + 9);
          *((_OWORD *)v18 + 1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v37;
          *((_OWORD *)v18 + 11) = *((_OWORD *)v19 + 11);
        }

        else
        {
          v18[18] = v19[18];
          v18[19] = v36;
          uint64_t v38 = v19[21];
          v18[20] = v19[20];
          v18[21] = v38;
          uint64_t v39 = v19[23];
          v18[22] = v19[22];
          v18[23] = v39;
          swift_bridgeObjectRetain(v36);
          swift_bridgeObjectRetain(v38);
          swift_bridgeObjectRetain(v39);
        }

        uint64_t v35 = v81;
        uint64_t v40 = v19[24];
        v18[24] = v40;
        uint64_t v41 = v19[28];
        swift_retain(v40);
        if (v41)
        {
          uint64_t v42 = v19[29];
          v18[28] = v41;
          v18[29] = v42;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v41 - 8))((uint64_t)(v18 + 25), (uint64_t)(v19 + 25), v41);
        }

        else
        {
          __int128 v43 = *(_OWORD *)(v19 + 27);
          *(_OWORD *)(v18 + 25) = *(_OWORD *)(v19 + 25);
          *(_OWORD *)(v18 + 27) = v43;
          v18[29] = v19[29];
        }

        *((_BYTE *)v18 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v19 + 240);
        uint64_t v44 = v19[32];
        v18[31] = v19[31];
        v18[32] = v44;
        swift_bridgeObjectRetain(v44);
      }

      *((_BYTE *)v18 + 26sub_62AC(v0 + 4) = *((_BYTE *)v19 + 264);
      uint64_t v45 = v19[35];
      if (v45 == 1)
      {
        memcpy(v18 + 34, v19 + 34, 0x90uLL);
      }

      else
      {
        v18[34] = v19[34];
        v18[35] = v45;
        *((_BYTE *)v18 + 288) = *((_BYTE *)v19 + 288);
        uint64_t v46 = v19[38];
        swift_bridgeObjectRetain(v45);
        if (v46 == 1)
        {
          __int128 v47 = *(_OWORD *)(v19 + 39);
          *(_OWORD *)(v18 + 37) = *(_OWORD *)(v19 + 37);
          *(_OWORD *)(v18 + 39) = v47;
          *(_OWORD *)(v18 + 41) = *(_OWORD *)(v19 + 41);
        }

        else
        {
          v18[37] = v19[37];
          v18[38] = v46;
          uint64_t v48 = v19[40];
          v18[39] = v19[39];
          v18[40] = v48;
          uint64_t v49 = v19[42];
          v18[41] = v19[41];
          v18[42] = v49;
          swift_bridgeObjectRetain(v46);
          swift_bridgeObjectRetain(v48);
          swift_bridgeObjectRetain(v49);
        }

        uint64_t v50 = v19[43];
        v18[43] = v50;
        uint64_t v51 = v19[47];
        swift_retain(v50);
        if (v51)
        {
          uint64_t v52 = v19[48];
          v18[47] = v51;
          v18[48] = v52;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v51 - 8))((uint64_t)(v18 + 44), (uint64_t)(v19 + 44), v51);
        }

        else
        {
          __int128 v53 = *((_OWORD *)v19 + 23);
          *((_OWORD *)v18 + 22) = *((_OWORD *)v19 + 22);
          *((_OWORD *)v18 + 23) = v53;
          v18[48] = v19[48];
        }

        *((_BYTE *)v18 + 392) = *((_BYTE *)v19 + 392);
        uint64_t v54 = v19[51];
        v18[50] = v19[50];
        v18[51] = v54;
        swift_bridgeObjectRetain(v54);
      }

      *((_BYTE *)v18 + 4swift_weakDestroy(v0 + 16) = *((_BYTE *)v19 + 416);
      uint64_t v55 = v19[54];
      if (v55 == 1)
      {
        memcpy(v18 + 53, v19 + 53, 0x90uLL);
      }

      else
      {
        v18[53] = v19[53];
        v18[54] = v55;
        *((_BYTE *)v18 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v19 + 440);
        uint64_t v56 = v19[57];
        swift_bridgeObjectRetain(v55);
        if (v56 == 1)
        {
          __int128 v57 = *((_OWORD *)v19 + 29);
          *((_OWORD *)v18 + 28) = *((_OWORD *)v19 + 28);
          *((_OWORD *)v18 + 29) = v57;
          *((_OWORD *)v18 + 3_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_OWORD *)v19 + 30);
        }

        else
        {
          v18[56] = v19[56];
          v18[57] = v56;
          uint64_t v58 = v19[59];
          v18[58] = v19[58];
          v18[59] = v58;
          uint64_t v59 = v19[61];
          v18[60] = v19[60];
          v18[61] = v59;
          swift_bridgeObjectRetain(v56);
          swift_bridgeObjectRetain(v58);
          swift_bridgeObjectRetain(v59);
        }

        uint64_t v60 = v19[62];
        v18[62] = v60;
        uint64_t v61 = v19[66];
        swift_retain(v60);
        if (v61)
        {
          v18[66] = v61;
          v18[67] = v19[67];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v61 - 8))((uint64_t)(v18 + 63), (uint64_t)(v19 + 63), v61);
        }

        else
        {
          __int128 v62 = *(_OWORD *)(v19 + 65);
          *(_OWORD *)(v18 + 63) = *(_OWORD *)(v19 + 63);
          *(_OWORD *)(v18 + 65) = v62;
          v18[67] = v19[67];
        }

        *((_BYTE *)v18 + 54sub_62AC(v0 + 4) = *((_BYTE *)v19 + 544);
        v18[69] = v19[69];
        uint64_t v63 = v19[70];
        v18[70] = v63;
        swift_bridgeObjectRetain(v63);
      }

      uint64_t v64 = v19[71];
      v18[71] = v64;
      uint64_t v65 = v19[73];
      swift_bridgeObjectRetain(v64);
      if (v65 == 1)
      {
        memcpy(v18 + 72, v19 + 72, 0x90uLL);
      }

      else
      {
        v18[72] = v19[72];
        v18[73] = v65;
        *((_BYTE *)v18 + 592) = *((_BYTE *)v19 + 592);
        uint64_t v66 = v19[76];
        swift_bridgeObjectRetain(v65);
        if (v66 == 1)
        {
          __int128 v67 = *(_OWORD *)(v19 + 77);
          *(_OWORD *)(v18 + 75) = *(_OWORD *)(v19 + 75);
          *(_OWORD *)(v18 + 77) = v67;
          *(_OWORD *)(v18 + 79) = *(_OWORD *)(v19 + 79);
        }

        else
        {
          v18[75] = v19[75];
          v18[76] = v66;
          v18[77] = v19[77];
          uint64_t v68 = v19[78];
          v18[78] = v68;
          v18[79] = v19[79];
          uint64_t v69 = v19[80];
          v18[80] = v69;
          swift_bridgeObjectRetain(v66);
          swift_bridgeObjectRetain(v68);
          swift_bridgeObjectRetain(v69);
        }

        uint64_t v70 = v19[81];
        v18[81] = v70;
        uint64_t v71 = v19[85];
        swift_retain(v70);
        if (v71)
        {
          v18[85] = v71;
          v18[86] = v19[86];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v71 - 8))((uint64_t)(v18 + 82), (uint64_t)(v19 + 82), v71);
        }

        else
        {
          __int128 v72 = *((_OWORD *)v19 + 42);
          *((_OWORD *)v18 + 41) = *((_OWORD *)v19 + 41);
          *((_OWORD *)v18 + 42) = v72;
          v18[86] = v19[86];
        }

        *((_BYTE *)v18 + 696) = *((_BYTE *)v19 + 696);
        v18[88] = v19[88];
        uint64_t v73 = v19[89];
        v18[89] = v73;
        swift_bridgeObjectRetain(v73);
      }

      *((_BYTE *)v18 + 72_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v19 + 720);
      v18[91] = v19[91];
      uint64_t v74 = v19[92];
      v18[92] = v74;
      *((_WORD *)v18 + 372) = *((_WORD *)v19 + 372);
      uint64_t v75 = *(int *)(v35 + 36);
      Swift::String v76 = (char *)v18 + v75;
      uint64_t v77 = (char *)v19 + v75;
      uint64_t v78 = type metadata accessor for PageMetrics(0LL);
      uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16LL);
      swift_bridgeObjectRetain(v74);
      v79(v76, v77, v78);
      sub_5FEC((uint64_t)v18, 0LL, 1LL, v35);
    }
  }

  return a1;
}

uint64_t sub_46C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSServiceRequest(0LL);
  if (!sub_6028(a1, 1LL, v4))
  {
    swift_bridgeObjectRelease(*(void *)(a1 + 8));
    swift_bridgeObjectRelease(*(void *)(a1 + 16));
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for URL(0LL);
  }

  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = type metadata accessor for ShelfPage(0LL);
  uint64_t result = sub_6028(v7, 1LL, v8);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*(void *)v7);
    swift_bridgeObjectRelease(*(void *)(v7 + 8));
    swift_bridgeObjectRelease(*(void *)(v7 + 16));
    swift_bridgeObjectRelease(*(void *)(v7 + 32));
    swift_release();

    sub_62AC((void *)(v7 + 64));
    swift_bridgeObjectRelease(*(void *)(v7 + 112));
    uint64_t v10 = *(void *)(v7 + 128);
    if (v10 != 1)
    {
      swift_bridgeObjectRelease(v10);
      uint64_t v11 = *(void *)(v7 + 152);
      if (v11 != 1)
      {
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(*(void *)(v7 + 168));
        swift_bridgeObjectRelease(*(void *)(v7 + 184));
      }

      swift_release();
      if (*(void *)(v7 + 224)) {
        sub_62AC((void *)(v7 + 200));
      }
      swift_bridgeObjectRelease(*(void *)(v7 + 256));
    }

    uint64_t v12 = *(void *)(v7 + 280);
    if (v12 != 1)
    {
      swift_bridgeObjectRelease(v12);
      uint64_t v13 = *(void *)(v7 + 304);
      if (v13 != 1)
      {
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(*(void *)(v7 + 320));
        swift_bridgeObjectRelease(*(void *)(v7 + 336));
      }

      swift_release();
      if (*(void *)(v7 + 376)) {
        sub_62AC((void *)(v7 + 352));
      }
      swift_bridgeObjectRelease(*(void *)(v7 + 408));
    }

    uint64_t v14 = *(void *)(v7 + 432);
    if (v14 != 1)
    {
      swift_bridgeObjectRelease(v14);
      uint64_t v15 = *(void *)(v7 + 456);
      if (v15 != 1)
      {
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(*(void *)(v7 + 472));
        swift_bridgeObjectRelease(*(void *)(v7 + 488));
      }

      swift_release();
      if (*(void *)(v7 + 528)) {
        sub_62AC((void *)(v7 + 504));
      }
      swift_bridgeObjectRelease(*(void *)(v7 + 560));
    }

    swift_bridgeObjectRelease(*(void *)(v7 + 568));
    uint64_t v16 = *(void *)(v7 + 584);
    if (v16 != 1)
    {
      swift_bridgeObjectRelease(v16);
      uint64_t v17 = *(void *)(v7 + 608);
      if (v17 != 1)
      {
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(*(void *)(v7 + 624));
        swift_bridgeObjectRelease(*(void *)(v7 + 640));
      }

      swift_release();
      if (*(void *)(v7 + 680)) {
        sub_62AC((void *)(v7 + 656));
      }
      swift_bridgeObjectRelease(*(void *)(v7 + 712));
    }

    swift_bridgeObjectRelease(*(void *)(v7 + 736));
    uint64_t v18 = v7 + *(int *)(v8 + 36);
    uint64_t v19 = type metadata accessor for PageMetrics(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(v18, v19);
  }

  return result;
}

void *sub_46EC4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSServiceRequest(0LL);
  if (sub_6028((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = sub_5F6C(&qword_7CB08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    a1[2] = v9;
    uint64_t v10 = *(int *)(v6 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for URL(0LL);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    if (sub_6028((uint64_t)v12, 1LL, v13))
    {
      uint64_t v14 = sub_5F6C((uint64_t *)&unk_7DE50);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16LL))(v11, v12, v13);
      sub_5FEC((uint64_t)v11, 0LL, 1LL, v13);
    }

    sub_5FEC((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for ShelfPage(0LL);
  if (sub_6028((uint64_t)v17, 1LL, v18))
  {
    uint64_t v19 = sub_5F6C(&qword_7CB10);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    uint64_t v79 = v18;
    uint64_t v20 = *v17;
    uint64_t v21 = v17[1];
    uint64_t *v16 = *v17;
    v16[1] = v21;
    uint64_t v23 = v17[2];
    uint64_t v22 = v17[3];
    v16[2] = v23;
    void v16[3] = v22;
    uint64_t v24 = v17[4];
    void v16[4] = v24;
    *((_BYTE *)v16 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v17 + 40);
    uint64_t v26 = v17[6];
    uint64_t v25 = (void *)v17[7];
    v16[6] = v26;
    void v16[7] = (uint64_t)v25;
    __int128 v27 = *(_OWORD *)(v17 + 11);
    *(_OWORD *)(v16 + 11) = v27;
    uint64_t v28 = v27;
    __int128 v29 = **(void (***)(uint64_t *, uint64_t *, uint64_t))(v27 - 8);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v24);
    swift_retain(v26);
    id v30 = v25;
    v29(v16 + 8, v17 + 8, v28);
    uint64_t v31 = v17[14];
    v16[13] = v17[13];
    v16[14] = v31;
    uint64_t v32 = v17[16];
    swift_bridgeObjectRetain(v31);
    if (v32 == 1)
    {
      memcpy(v16 + 15, v17 + 15, 0x90uLL);
      uint64_t v33 = v79;
    }

    else
    {
      v16[15] = v17[15];
      _BYTE v16[16] = v32;
      *((_BYTE *)v16 + 136) = *((_BYTE *)v17 + 136);
      uint64_t v34 = v17[19];
      swift_bridgeObjectRetain(v32);
      if (v34 == 1)
      {
        __int128 v35 = *((_OWORD *)v17 + 10);
        *((_OWORD *)v16 + 9) = *((_OWORD *)v17 + 9);
        *((_OWORD *)v16 + 1_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v35;
        *((_OWORD *)v16 + 11) = *((_OWORD *)v17 + 11);
      }

      else
      {
        v16[18] = v17[18];
        v16[19] = v34;
        uint64_t v36 = v17[21];
        v16[20] = v17[20];
        v16[21] = v36;
        uint64_t v37 = v17[23];
        v16[22] = v17[22];
        v16[23] = v37;
        swift_bridgeObjectRetain(v34);
        swift_bridgeObjectRetain(v36);
        swift_bridgeObjectRetain(v37);
      }

      uint64_t v33 = v79;
      uint64_t v38 = v17[24];
      v16[24] = v38;
      uint64_t v39 = v17[28];
      swift_retain(v38);
      if (v39)
      {
        uint64_t v40 = v17[29];
        v16[28] = v39;
        v16[29] = v40;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v39 - 8))((uint64_t)(v16 + 25), (uint64_t)(v17 + 25), v39);
      }

      else
      {
        __int128 v41 = *(_OWORD *)(v17 + 27);
        *(_OWORD *)(v16 + 25) = *(_OWORD *)(v17 + 25);
        *(_OWORD *)(v16 + 27) = v41;
        v16[29] = v17[29];
      }

      *((_BYTE *)v16 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v17 + 240);
      uint64_t v42 = v17[32];
      v16[31] = v17[31];
      v16[32] = v42;
      swift_bridgeObjectRetain(v42);
    }

    *((_BYTE *)v16 + 26sub_62AC(v0 + 4) = *((_BYTE *)v17 + 264);
    uint64_t v43 = v17[35];
    if (v43 == 1)
    {
      memcpy(v16 + 34, v17 + 34, 0x90uLL);
    }

    else
    {
      v16[34] = v17[34];
      v16[35] = v43;
      *((_BYTE *)v16 + 288) = *((_BYTE *)v17 + 288);
      uint64_t v44 = v17[38];
      swift_bridgeObjectRetain(v43);
      if (v44 == 1)
      {
        __int128 v45 = *(_OWORD *)(v17 + 39);
        *(_OWORD *)(v16 + 37) = *(_OWORD *)(v17 + 37);
        *(_OWORD *)(v16 + 39) = v45;
        *(_OWORD *)(v16 + 41) = *(_OWORD *)(v17 + 41);
      }

      else
      {
        v16[37] = v17[37];
        v16[38] = v44;
        uint64_t v46 = v17[40];
        v16[39] = v17[39];
        v16[40] = v46;
        uint64_t v47 = v17[42];
        v16[41] = v17[41];
        v16[42] = v47;
        swift_bridgeObjectRetain(v44);
        swift_bridgeObjectRetain(v46);
        swift_bridgeObjectRetain(v47);
      }

      uint64_t v48 = v17[43];
      v16[43] = v48;
      uint64_t v49 = v17[47];
      swift_retain(v48);
      if (v49)
      {
        uint64_t v50 = v17[48];
        v16[47] = v49;
        v16[48] = v50;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8))((uint64_t)(v16 + 44), (uint64_t)(v17 + 44), v49);
      }

      else
      {
        __int128 v51 = *((_OWORD *)v17 + 23);
        *((_OWORD *)v16 + 22) = *((_OWORD *)v17 + 22);
        *((_OWORD *)v16 + 23) = v51;
        v16[48] = v17[48];
      }

      *((_BYTE *)v16 + 392) = *((_BYTE *)v17 + 392);
      uint64_t v52 = v17[51];
      v16[50] = v17[50];
      v16[51] = v52;
      swift_bridgeObjectRetain(v52);
    }

    *((_BYTE *)v16 + 4swift_weakDestroy(v0 + 16) = *((_BYTE *)v17 + 416);
    uint64_t v53 = v17[54];
    if (v53 == 1)
    {
      memcpy(v16 + 53, v17 + 53, 0x90uLL);
    }

    else
    {
      v16[53] = v17[53];
      v16[54] = v53;
      *((_BYTE *)v16 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v17 + 440);
      uint64_t v54 = v17[57];
      swift_bridgeObjectRetain(v53);
      if (v54 == 1)
      {
        __int128 v55 = *((_OWORD *)v17 + 29);
        *((_OWORD *)v16 + 28) = *((_OWORD *)v17 + 28);
        *((_OWORD *)v16 + 29) = v55;
        *((_OWORD *)v16 + 3_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_OWORD *)v17 + 30);
      }

      else
      {
        v16[56] = v17[56];
        v16[57] = v54;
        uint64_t v56 = v17[59];
        v16[58] = v17[58];
        v16[59] = v56;
        uint64_t v57 = v17[61];
        v16[60] = v17[60];
        v16[61] = v57;
        swift_bridgeObjectRetain(v54);
        swift_bridgeObjectRetain(v56);
        swift_bridgeObjectRetain(v57);
      }

      uint64_t v58 = v17[62];
      v16[62] = v58;
      uint64_t v59 = v17[66];
      swift_retain(v58);
      if (v59)
      {
        v16[66] = v59;
        v16[67] = v17[67];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v59 - 8))((uint64_t)(v16 + 63), (uint64_t)(v17 + 63), v59);
      }

      else
      {
        __int128 v60 = *(_OWORD *)(v17 + 65);
        *(_OWORD *)(v16 + 63) = *(_OWORD *)(v17 + 63);
        *(_OWORD *)(v16 + 65) = v60;
        v16[67] = v17[67];
      }

      *((_BYTE *)v16 + 54sub_62AC(v0 + 4) = *((_BYTE *)v17 + 544);
      v16[69] = v17[69];
      uint64_t v61 = v17[70];
      v16[70] = v61;
      swift_bridgeObjectRetain(v61);
    }

    uint64_t v62 = v17[71];
    v16[71] = v62;
    uint64_t v63 = v17[73];
    swift_bridgeObjectRetain(v62);
    if (v63 == 1)
    {
      memcpy(v16 + 72, v17 + 72, 0x90uLL);
    }

    else
    {
      v16[72] = v17[72];
      v16[73] = v63;
      *((_BYTE *)v16 + 592) = *((_BYTE *)v17 + 592);
      uint64_t v64 = v17[76];
      swift_bridgeObjectRetain(v63);
      if (v64 == 1)
      {
        __int128 v65 = *(_OWORD *)(v17 + 77);
        *(_OWORD *)(v16 + 75) = *(_OWORD *)(v17 + 75);
        *(_OWORD *)(v16 + 77) = v65;
        *(_OWORD *)(v16 + 79) = *(_OWORD *)(v17 + 79);
      }

      else
      {
        v16[75] = v17[75];
        v16[76] = v64;
        v16[77] = v17[77];
        uint64_t v66 = v17[78];
        v16[78] = v66;
        void v16[79] = v17[79];
        uint64_t v67 = v17[80];
        v16[80] = v67;
        swift_bridgeObjectRetain(v64);
        swift_bridgeObjectRetain(v66);
        swift_bridgeObjectRetain(v67);
      }

      uint64_t v68 = v17[81];
      v16[81] = v68;
      uint64_t v69 = v17[85];
      swift_retain(v68);
      if (v69)
      {
        v16[85] = v69;
        v16[86] = v17[86];
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v69 - 8))((uint64_t)(v16 + 82), (uint64_t)(v17 + 82), v69);
      }

      else
      {
        __int128 v70 = *((_OWORD *)v17 + 42);
        *((_OWORD *)v16 + 41) = *((_OWORD *)v17 + 41);
        *((_OWORD *)v16 + 42) = v70;
        v16[86] = v17[86];
      }

      *((_BYTE *)v16 + 696) = *((_BYTE *)v17 + 696);
      v16[88] = v17[88];
      uint64_t v71 = v17[89];
      v16[89] = v71;
      swift_bridgeObjectRetain(v71);
    }

    *((_BYTE *)v16 + 72_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *((_BYTE *)v17 + 720);
    v16[91] = v17[91];
    uint64_t v72 = v17[92];
    v16[92] = v72;
    *((_WORD *)v16 + 372) = *((_WORD *)v17 + 372);
    uint64_t v73 = *(int *)(v33 + 36);
    uint64_t v74 = (char *)v16 + v73;
    uint64_t v75 = (char *)v17 + v73;
    uint64_t v76 = type metadata accessor for PageMetrics(0LL);
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16LL);
    swift_bridgeObjectRetain(v72);
    v77(v74, v75, v76);
    sub_5FEC((uint64_t)v16, 0LL, 1LL, v33);
  }

  return a1;
}

void *sub_47570(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSServiceRequest(0LL);
  int v7 = sub_6028((uint64_t)a1, 1LL, v6);
  int v8 = sub_6028((uint64_t)a2, 1LL, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v9 = a2[1];
      a1[1] = v9;
      uint64_t v10 = a2[2];
      a1[2] = v10;
      uint64_t v11 = *(int *)(v6 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for URL(0LL);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      if (sub_6028((uint64_t)v13, 1LL, v14))
      {
        uint64_t v15 = sub_5F6C((uint64_t *)&unk_7DE50);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16LL))(v12, v13, v14);
        sub_5FEC((uint64_t)v12, 0LL, 1LL, v14);
      }

      uint64_t v29 = (uint64_t)a1;
      uint64_t v30 = v6;
      goto LABEL_14;
    }

    goto LABEL_7;
  }

  if (v8)
  {
    sub_14C60((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for JSServiceRequest);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_5F6C(&qword_7CB08) - 8) + 64LL);
    uint64_t v17 = a1;
    uint64_t v18 = a2;
LABEL_8:
    memcpy(v17, v18, v16);
    goto LABEL_15;
  }

  *a1 = *a2;
  uint64_t v19 = a2[1];
  uint64_t v20 = a1[1];
  a1[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  uint64_t v21 = a1[2];
  uint64_t v22 = a2[2];
  a1[2] = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v21);
  uint64_t v23 = *(int *)(v6 + 24);
  uint64_t v24 = (uint64_t)a1 + v23;
  uint64_t v25 = (uint64_t)a2 + v23;
  uint64_t v26 = type metadata accessor for URL(0LL);
  int v27 = sub_6028(v24, 1LL, v26);
  int v28 = sub_6028(v25, 1LL, v26);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16LL))(v24, v25, v26);
      uint64_t v29 = v24;
      uint64_t v30 = v26;
LABEL_14:
      sub_5FEC(v29, 0LL, 1LL, v30);
      goto LABEL_15;
    }

    goto LABEL_36;
  }

  uint64_t v79 = *(void *)(v26 - 8);
  if (v28)
  {
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v24, v26);
LABEL_36:
    size_t v16 = *(void *)(*(void *)(sub_5F6C((uint64_t *)&unk_7DE50) - 8) + 64LL);
    uint64_t v17 = (void *)v24;
    uint64_t v18 = (const void *)v25;
    goto LABEL_8;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 24))(v24, v25, v26);
LABEL_15:
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = (uint64_t)a1 + v31;
  uint64_t v33 = (uint64_t)a2 + v31;
  uint64_t v34 = type metadata accessor for ShelfPage(0LL);
  int v35 = sub_6028(v32, 1LL, v34);
  int v36 = sub_6028(v33, 1LL, v34);
  if (!v35)
  {
    if (v36)
    {
      sub_14C60(v32, type metadata accessor for ShelfPage);
      goto LABEL_21;
    }

    uint64_t v50 = *(void *)v33;
    uint64_t v51 = *(void *)v32;
    *(void *)uint64_t v32 = *(void *)v33;
    swift_bridgeObjectRetain(v50);
    swift_bridgeObjectRelease(v51);
    uint64_t v52 = *(void *)(v33 + 8);
    uint64_t v53 = *(void *)(v32 + 8);
    *(void *)(v32 + 8) = v52;
    swift_bridgeObjectRetain(v52);
    swift_bridgeObjectRelease(v53);
    uint64_t v54 = *(void *)(v33 + 16);
    uint64_t v55 = *(void *)(v32 + 16);
    *(void *)(v32 + swift_weakDestroy(v0 + 16) = v54;
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRelease(v55);
    *(void *)(v32 + 2sub_62AC(v0 + 4) = *(void *)(v33 + 24);
    uint64_t v56 = *(void *)(v33 + 32);
    uint64_t v57 = *(void *)(v32 + 32);
    *(void *)(v32 + 32) = v56;
    swift_bridgeObjectRetain(v56);
    swift_bridgeObjectRelease(v57);
    *(_BYTE *)(v32 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v33 + 40);
    uint64_t v58 = *(void *)(v33 + 48);
    *(void *)(v32 + 48) = v58;
    swift_retain(v58);
    swift_release();
    uint64_t v59 = *(void **)(v33 + 56);
    __int128 v60 = *(void **)(v32 + 56);
    *(void *)(v32 + 56) = v59;
    id v61 = v59;

    sub_6520((void *)(v32 + 64), (void *)(v33 + 64));
    *(void *)(v32 + 10sub_62AC(v0 + 4) = *(void *)(v33 + 104);
    uint64_t v62 = *(void *)(v33 + 112);
    uint64_t v63 = *(void *)(v32 + 112);
    *(void *)(v32 + 112) = v62;
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRelease(v63);
    uint64_t v64 = *(void *)(v32 + 128);
    uint64_t v65 = *(void *)(v33 + 128);
    if (v64 == 1)
    {
      if (v65 != 1)
      {
        *(void *)(v32 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 120);
        uint64_t v66 = *(void *)(v33 + 128);
        *(void *)(v32 + 128) = v66;
        *(_BYTE *)(v32 + 136) = *(_BYTE *)(v33 + 136);
        uint64_t v67 = *(void *)(v33 + 152);
        swift_bridgeObjectRetain(v66);
        if (v67 == 1)
        {
          __int128 v68 = *(_OWORD *)(v33 + 144);
          __int128 v69 = *(_OWORD *)(v33 + 176);
          *(_OWORD *)(v32 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_OWORD *)(v33 + 160);
          *(_OWORD *)(v32 + 176) = v69;
          *(_OWORD *)(v32 + 14sub_62AC(v0 + 4) = v68;
        }

        else
        {
          *(void *)(v32 + 14sub_62AC(v0 + 4) = *(void *)(v33 + 144);
          uint64_t v134 = *(void *)(v33 + 152);
          *(void *)(v32 + 152) = v134;
          *(void *)(v32 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 160);
          uint64_t v135 = *(void *)(v33 + 168);
          *(void *)(v32 + 168) = v135;
          *(void *)(v32 + 176) = *(void *)(v33 + 176);
          uint64_t v136 = *(void *)(v33 + 184);
          *(void *)(v32 + 18sub_62AC(v0 + 4) = v136;
          swift_bridgeObjectRetain(v134);
          swift_bridgeObjectRetain(v135);
          swift_bridgeObjectRetain(v136);
        }

        uint64_t v137 = *(void *)(v33 + 192);
        *(void *)(v32 + 192) = v137;
        uint64_t v138 = *(void *)(v33 + 224);
        swift_retain(v137);
        if (v138)
        {
          *(void *)(v32 + 22sub_62AC(v0 + 4) = v138;
          *(void *)(v32 + 232) = *(void *)(v33 + 232);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v138 - 8))(v32 + 200, v33 + 200, v138);
        }

        else
        {
          __int128 v141 = *(_OWORD *)(v33 + 200);
          __int128 v142 = *(_OWORD *)(v33 + 216);
          *(void *)(v32 + 232) = *(void *)(v33 + 232);
          *(_OWORD *)(v32 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v141;
          *(_OWORD *)(v32 + 2swift_weakDestroy(v0 + 16) = v142;
        }

        *(_BYTE *)(v32 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v33 + 240);
        *(void *)(v32 + 248) = *(void *)(v33 + 248);
        uint64_t v143 = *(void *)(v33 + 256);
        *(void *)(v32 + 256) = v143;
        swift_bridgeObjectRetain(v143);
LABEL_88:
        *(_BYTE *)(v32 + 26sub_62AC(v0 + 4) = *(_BYTE *)(v33 + 264);
        uint64_t v158 = *(void *)(v32 + 280);
        uint64_t v159 = *(void *)(v33 + 280);
        if (v158 == 1)
        {
          if (v159 != 1)
          {
            *(void *)(v32 + 272) = *(void *)(v33 + 272);
            uint64_t v160 = *(void *)(v33 + 280);
            *(void *)(v32 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v160;
            *(_BYTE *)(v32 + 288) = *(_BYTE *)(v33 + 288);
            uint64_t v161 = *(void *)(v33 + 304);
            swift_bridgeObjectRetain(v160);
            if (v161 == 1)
            {
              __int128 v162 = *(_OWORD *)(v33 + 296);
              __int128 v163 = *(_OWORD *)(v33 + 328);
              *(_OWORD *)(v32 + 312) = *(_OWORD *)(v33 + 312);
              *(_OWORD *)(v32 + 328) = v163;
              *(_OWORD *)(v32 + 296) = v162;
            }

            else
            {
              *(void *)(v32 + 296) = *(void *)(v33 + 296);
              uint64_t v171 = *(void *)(v33 + 304);
              *(void *)(v32 + 30sub_62AC(v0 + 4) = v171;
              *(void *)(v32 + 312) = *(void *)(v33 + 312);
              uint64_t v172 = *(void *)(v33 + 320);
              *(void *)(v32 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v172;
              *(void *)(v32 + 328) = *(void *)(v33 + 328);
              uint64_t v173 = *(void *)(v33 + 336);
              *(void *)(v32 + 336) = v173;
              swift_bridgeObjectRetain(v171);
              swift_bridgeObjectRetain(v172);
              swift_bridgeObjectRetain(v173);
            }

            uint64_t v174 = *(void *)(v33 + 344);
            *(void *)(v32 + 34sub_62AC(v0 + 4) = v174;
            uint64_t v175 = *(void *)(v33 + 376);
            swift_retain(v174);
            if (v175)
            {
              *(void *)(v32 + 376) = v175;
              *(void *)(v32 + 38sub_62AC(v0 + 4) = *(void *)(v33 + 384);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v175 - 8))(v32 + 352, v33 + 352, v175);
            }

            else
            {
              __int128 v178 = *(_OWORD *)(v33 + 352);
              __int128 v179 = *(_OWORD *)(v33 + 368);
              *(void *)(v32 + 38sub_62AC(v0 + 4) = *(void *)(v33 + 384);
              *(_OWORD *)(v32 + 352) = v178;
              *(_OWORD *)(v32 + 368) = v179;
            }

            *(_BYTE *)(v32 + 392) = *(_BYTE *)(v33 + 392);
            *(void *)(v32 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 400);
            uint64_t v180 = *(void *)(v33 + 408);
            *(void *)(v32 + 408) = v180;
            swift_bridgeObjectRetain(v180);
LABEL_115:
            *(_BYTE *)(v32 + 4swift_weakDestroy(v0 + 16) = *(_BYTE *)(v33 + 416);
            uint64_t v195 = *(void *)(v32 + 432);
            uint64_t v196 = *(void *)(v33 + 432);
            if (v195 == 1)
            {
              if (v196 != 1)
              {
                *(void *)(v32 + 42sub_62AC(v0 + 4) = *(void *)(v33 + 424);
                uint64_t v197 = *(void *)(v33 + 432);
                *(void *)(v32 + 432) = v197;
                *(_BYTE *)(v32 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v33 + 440);
                uint64_t v198 = *(void *)(v33 + 456);
                swift_bridgeObjectRetain(v197);
                if (v198 == 1)
                {
                  __int128 v199 = *(_OWORD *)(v33 + 448);
                  __int128 v200 = *(_OWORD *)(v33 + 480);
                  *(_OWORD *)(v32 + 46sub_62AC(v0 + 4) = *(_OWORD *)(v33 + 464);
                  *(_OWORD *)(v32 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v200;
                  *(_OWORD *)(v32 + 448) = v199;
                }

                else
                {
                  *(void *)(v32 + 448) = *(void *)(v33 + 448);
                  uint64_t v208 = *(void *)(v33 + 456);
                  *(void *)(v32 + 456) = v208;
                  *(void *)(v32 + 46sub_62AC(v0 + 4) = *(void *)(v33 + 464);
                  uint64_t v209 = *(void *)(v33 + 472);
                  *(void *)(v32 + 472) = v209;
                  *(void *)(v32 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 480);
                  uint64_t v210 = *(void *)(v33 + 488);
                  *(void *)(v32 + 488) = v210;
                  swift_bridgeObjectRetain(v208);
                  swift_bridgeObjectRetain(v209);
                  swift_bridgeObjectRetain(v210);
                }

                uint64_t v211 = *(void *)(v33 + 496);
                *(void *)(v32 + 496) = v211;
                uint64_t v212 = *(void *)(v33 + 528);
                swift_retain(v211);
                if (v212)
                {
                  *(void *)(v32 + 528) = v212;
                  *(void *)(v32 + 536) = *(void *)(v33 + 536);
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v212 - 8))(v32 + 504, v33 + 504, v212);
                }

                else
                {
                  __int128 v215 = *(_OWORD *)(v33 + 504);
                  __int128 v216 = *(_OWORD *)(v33 + 520);
                  *(void *)(v32 + 536) = *(void *)(v33 + 536);
                  *(_OWORD *)(v32 + 50sub_62AC(v0 + 4) = v215;
                  *(_OWORD *)(v32 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v216;
                }

                *(_BYTE *)(v32 + 54sub_62AC(v0 + 4) = *(_BYTE *)(v33 + 544);
                *(void *)(v32 + 552) = *(void *)(v33 + 552);
                uint64_t v217 = *(void *)(v33 + 560);
                *(void *)(v32 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v217;
                swift_bridgeObjectRetain(v217);
LABEL_142:
                uint64_t v232 = *(void *)(v32 + 568);
                uint64_t v233 = *(void *)(v33 + 568);
                *(void *)(v32 + 568) = v233;
                swift_bridgeObjectRetain(v233);
                swift_bridgeObjectRelease(v232);
                uint64_t v234 = *(void *)(v32 + 584);
                uint64_t v235 = *(void *)(v33 + 584);
                if (v234 == 1)
                {
                  if (v235 != 1)
                  {
                    *(void *)(v32 + 576) = *(void *)(v33 + 576);
                    uint64_t v236 = *(void *)(v33 + 584);
                    *(void *)(v32 + 58sub_62AC(v0 + 4) = v236;
                    *(_BYTE *)(v32 + 592) = *(_BYTE *)(v33 + 592);
                    uint64_t v237 = *(void *)(v33 + 608);
                    swift_bridgeObjectRetain(v236);
                    if (v237 == 1)
                    {
                      __int128 v238 = *(_OWORD *)(v33 + 600);
                      __int128 v239 = *(_OWORD *)(v33 + 632);
                      *(_OWORD *)(v32 + 6swift_weakDestroy(v0 + 16) = *(_OWORD *)(v33 + 616);
                      *(_OWORD *)(v32 + 632) = v239;
                      *(_OWORD *)(v32 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v238;
                    }

                    else
                    {
                      *(void *)(v32 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 600);
                      uint64_t v247 = *(void *)(v33 + 608);
                      *(void *)(v32 + 608) = v247;
                      *(void *)(v32 + 6swift_weakDestroy(v0 + 16) = *(void *)(v33 + 616);
                      uint64_t v248 = *(void *)(v33 + 624);
                      *(void *)(v32 + 62sub_62AC(v0 + 4) = v248;
                      *(void *)(v32 + 632) = *(void *)(v33 + 632);
                      uint64_t v249 = *(void *)(v33 + 640);
                      *(void *)(v32 + 64_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v249;
                      swift_bridgeObjectRetain(v247);
                      swift_bridgeObjectRetain(v248);
                      swift_bridgeObjectRetain(v249);
                    }

                    uint64_t v250 = *(void *)(v33 + 648);
                    *(void *)(v32 + 648) = v250;
                    uint64_t v251 = *(void *)(v33 + 680);
                    swift_retain(v250);
                    if (v251)
                    {
                      *(void *)(v32 + 68_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v251;
                      *(void *)(v32 + 688) = *(void *)(v33 + 688);
                      (**(void (***)(uint64_t, uint64_t, uint64_t))(v251 - 8))(v32 + 656, v33 + 656, v251);
                    }

                    else
                    {
                      __int128 v254 = *(_OWORD *)(v33 + 656);
                      __int128 v255 = *(_OWORD *)(v33 + 672);
                      *(void *)(v32 + 688) = *(void *)(v33 + 688);
                      *(_OWORD *)(v32 + 656) = v254;
                      *(_OWORD *)(v32 + 672) = v255;
                    }

                    *(_BYTE *)(v32 + 696) = *(_BYTE *)(v33 + 696);
                    *(void *)(v32 + 70sub_62AC(v0 + 4) = *(void *)(v33 + 704);
                    uint64_t v256 = *(void *)(v33 + 712);
                    *(void *)(v32 + 712) = v256;
                    swift_bridgeObjectRetain(v256);
                    goto LABEL_169;
                  }

                  goto LABEL_148;
                }

                if (v235 == 1)
                {
                  sub_2A9EC(v32 + 576);
LABEL_148:
                  memcpy((void *)(v32 + 576), (const void *)(v33 + 576), 0x90uLL);
LABEL_169:
                  *(_BYTE *)(v32 + 72_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v33 + 720);
                  *(void *)(v32 + 728) = *(void *)(v33 + 728);
                  uint64_t v271 = *(void *)(v33 + 736);
                  uint64_t v272 = *(void *)(v32 + 736);
                  *(void *)(v32 + 736) = v271;
                  swift_bridgeObjectRetain(v271);
                  swift_bridgeObjectRelease(v272);
                  *(_WORD *)(v32 + 74sub_62AC(v0 + 4) = *(_WORD *)(v33 + 744);
                  uint64_t v273 = *(int *)(v34 + 36);
                  uint64_t v274 = v32 + v273;
                  uint64_t v275 = v33 + v273;
                  uint64_t v276 = type metadata accessor for PageMetrics(0LL);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v276 - 8) + 24LL))(v274, v275, v276);
                  return a1;
                }

                *(void *)(v32 + 576) = *(void *)(v33 + 576);
                uint64_t v240 = *(void *)(v33 + 584);
                *(void *)(v32 + 58sub_62AC(v0 + 4) = v240;
                swift_bridgeObjectRetain(v240);
                swift_bridgeObjectRelease(v234);
                *(_BYTE *)(v32 + 592) = *(_BYTE *)(v33 + 592);
                v241 = (__int128 *)(v32 + 600);
                v242 = (__int128 *)(v33 + 600);
                uint64_t v243 = *(void *)(v32 + 608);
                uint64_t v244 = *(void *)(v33 + 608);
                if (v243 == 1)
                {
                  if (v244 == 1)
                  {
                    __int128 v245 = *v242;
                    __int128 v246 = *(_OWORD *)(v33 + 632);
                    *(_OWORD *)(v32 + 6swift_weakDestroy(v0 + 16) = *(_OWORD *)(v33 + 616);
                    *(_OWORD *)(v32 + 632) = v246;
                    __int128 *v241 = v245;
                  }

                  else
                  {
                    *(void *)(v32 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 600);
                    uint64_t v257 = *(void *)(v33 + 608);
                    *(void *)(v32 + 608) = v257;
                    *(void *)(v32 + 6swift_weakDestroy(v0 + 16) = *(void *)(v33 + 616);
                    uint64_t v258 = *(void *)(v33 + 624);
                    *(void *)(v32 + 62sub_62AC(v0 + 4) = v258;
                    *(void *)(v32 + 632) = *(void *)(v33 + 632);
                    uint64_t v259 = *(void *)(v33 + 640);
                    *(void *)(v32 + 64_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v259;
                    swift_bridgeObjectRetain(v257);
                    swift_bridgeObjectRetain(v258);
                    swift_bridgeObjectRetain(v259);
                  }
                }

                else if (v244 == 1)
                {
                  sub_2B168((void *)(v32 + 600));
                  __int128 v253 = *(_OWORD *)(v33 + 616);
                  __int128 v252 = *(_OWORD *)(v33 + 632);
                  __int128 *v241 = *v242;
                  *(_OWORD *)(v32 + 6swift_weakDestroy(v0 + 16) = v253;
                  *(_OWORD *)(v32 + 632) = v252;
                }

                else
                {
                  *(void *)(v32 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 600);
                  uint64_t v260 = *(void *)(v33 + 608);
                  *(void *)(v32 + 608) = v260;
                  swift_bridgeObjectRetain(v260);
                  swift_bridgeObjectRelease(v243);
                  *(void *)(v32 + 6swift_weakDestroy(v0 + 16) = *(void *)(v33 + 616);
                  uint64_t v261 = *(void *)(v33 + 624);
                  uint64_t v262 = *(void *)(v32 + 624);
                  *(void *)(v32 + 62sub_62AC(v0 + 4) = v261;
                  swift_bridgeObjectRetain(v261);
                  swift_bridgeObjectRelease(v262);
                  *(void *)(v32 + 632) = *(void *)(v33 + 632);
                  uint64_t v263 = *(void *)(v33 + 640);
                  uint64_t v264 = *(void *)(v32 + 640);
                  *(void *)(v32 + 64_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v263;
                  swift_bridgeObjectRetain(v263);
                  swift_bridgeObjectRelease(v264);
                }

                uint64_t v265 = *(void *)(v33 + 648);
                *(void *)(v32 + 648) = v265;
                swift_retain(v265);
                swift_release();
                uint64_t v266 = *(void *)(v33 + 680);
                if (*(void *)(v32 + 680))
                {
                  if (v266)
                  {
                    sub_6520((void *)(v32 + 656), (void *)(v33 + 656));
LABEL_168:
                    *(_BYTE *)(v32 + 696) = *(_BYTE *)(v33 + 696);
                    *(void *)(v32 + 70sub_62AC(v0 + 4) = *(void *)(v33 + 704);
                    uint64_t v269 = *(void *)(v33 + 712);
                    uint64_t v270 = *(void *)(v32 + 712);
                    *(void *)(v32 + 712) = v269;
                    swift_bridgeObjectRetain(v269);
                    swift_bridgeObjectRelease(v270);
                    goto LABEL_169;
                  }

                  sub_62AC((void *)(v32 + 656));
                }

                else if (v266)
                {
                  *(void *)(v32 + 68_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v266;
                  *(void *)(v32 + 688) = *(void *)(v33 + 688);
                  (**(void (***)(uint64_t, uint64_t))(v266 - 8))(v32 + 656, v33 + 656);
                  goto LABEL_168;
                }

                __int128 v267 = *(_OWORD *)(v33 + 656);
                __int128 v268 = *(_OWORD *)(v33 + 672);
                *(void *)(v32 + 688) = *(void *)(v33 + 688);
                *(_OWORD *)(v32 + 656) = v267;
                *(_OWORD *)(v32 + 672) = v268;
                goto LABEL_168;
              }

LABEL_121:
              memcpy((void *)(v32 + 424), (const void *)(v33 + 424), 0x90uLL);
              goto LABEL_142;
            }

            if (v196 == 1)
            {
              sub_2A9EC(v32 + 424);
              goto LABEL_121;
            }

            *(void *)(v32 + 42sub_62AC(v0 + 4) = *(void *)(v33 + 424);
            uint64_t v201 = *(void *)(v33 + 432);
            *(void *)(v32 + 432) = v201;
            swift_bridgeObjectRetain(v201);
            swift_bridgeObjectRelease(v195);
            *(_BYTE *)(v32 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v33 + 440);
            v202 = (__int128 *)(v32 + 448);
            v203 = (__int128 *)(v33 + 448);
            uint64_t v204 = *(void *)(v32 + 456);
            uint64_t v205 = *(void *)(v33 + 456);
            if (v204 == 1)
            {
              if (v205 == 1)
              {
                __int128 v206 = *v203;
                __int128 v207 = *(_OWORD *)(v33 + 480);
                *(_OWORD *)(v32 + 46sub_62AC(v0 + 4) = *(_OWORD *)(v33 + 464);
                *(_OWORD *)(v32 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v207;
                __int128 *v202 = v206;
              }

              else
              {
                *(void *)(v32 + 448) = *(void *)(v33 + 448);
                uint64_t v218 = *(void *)(v33 + 456);
                *(void *)(v32 + 456) = v218;
                *(void *)(v32 + 46sub_62AC(v0 + 4) = *(void *)(v33 + 464);
                uint64_t v219 = *(void *)(v33 + 472);
                *(void *)(v32 + 472) = v219;
                *(void *)(v32 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 480);
                uint64_t v220 = *(void *)(v33 + 488);
                *(void *)(v32 + 488) = v220;
                swift_bridgeObjectRetain(v218);
                swift_bridgeObjectRetain(v219);
                swift_bridgeObjectRetain(v220);
              }
            }

            else if (v205 == 1)
            {
              sub_2B168((void *)(v32 + 448));
              __int128 v214 = *(_OWORD *)(v33 + 464);
              __int128 v213 = *(_OWORD *)(v33 + 480);
              __int128 *v202 = *v203;
              *(_OWORD *)(v32 + 46sub_62AC(v0 + 4) = v214;
              *(_OWORD *)(v32 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v213;
            }

            else
            {
              *(void *)(v32 + 448) = *(void *)(v33 + 448);
              uint64_t v221 = *(void *)(v33 + 456);
              *(void *)(v32 + 456) = v221;
              swift_bridgeObjectRetain(v221);
              swift_bridgeObjectRelease(v204);
              *(void *)(v32 + 46sub_62AC(v0 + 4) = *(void *)(v33 + 464);
              uint64_t v222 = *(void *)(v33 + 472);
              uint64_t v223 = *(void *)(v32 + 472);
              *(void *)(v32 + 472) = v222;
              swift_bridgeObjectRetain(v222);
              swift_bridgeObjectRelease(v223);
              *(void *)(v32 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 480);
              uint64_t v224 = *(void *)(v33 + 488);
              uint64_t v225 = *(void *)(v32 + 488);
              *(void *)(v32 + 488) = v224;
              swift_bridgeObjectRetain(v224);
              swift_bridgeObjectRelease(v225);
            }

            uint64_t v226 = *(void *)(v33 + 496);
            *(void *)(v32 + 496) = v226;
            swift_retain(v226);
            swift_release();
            uint64_t v227 = *(void *)(v33 + 528);
            if (*(void *)(v32 + 528))
            {
              if (v227)
              {
                sub_6520((void *)(v32 + 504), (void *)(v33 + 504));
LABEL_141:
                *(_BYTE *)(v32 + 54sub_62AC(v0 + 4) = *(_BYTE *)(v33 + 544);
                *(void *)(v32 + 552) = *(void *)(v33 + 552);
                uint64_t v230 = *(void *)(v33 + 560);
                uint64_t v231 = *(void *)(v32 + 560);
                *(void *)(v32 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v230;
                swift_bridgeObjectRetain(v230);
                swift_bridgeObjectRelease(v231);
                goto LABEL_142;
              }

              sub_62AC((void *)(v32 + 504));
            }

            else if (v227)
            {
              *(void *)(v32 + 528) = v227;
              *(void *)(v32 + 536) = *(void *)(v33 + 536);
              (**(void (***)(uint64_t, uint64_t))(v227 - 8))(v32 + 504, v33 + 504);
              goto LABEL_141;
            }

            __int128 v228 = *(_OWORD *)(v33 + 504);
            __int128 v229 = *(_OWORD *)(v33 + 520);
            *(void *)(v32 + 536) = *(void *)(v33 + 536);
            *(_OWORD *)(v32 + 50sub_62AC(v0 + 4) = v228;
            *(_OWORD *)(v32 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v229;
            goto LABEL_141;
          }

LABEL_94:
          memcpy((void *)(v32 + 272), (const void *)(v33 + 272), 0x90uLL);
          goto LABEL_115;
        }

        if (v159 == 1)
        {
          sub_31D1C(v32 + 272);
          goto LABEL_94;
        }

        *(void *)(v32 + 272) = *(void *)(v33 + 272);
        uint64_t v164 = *(void *)(v33 + 280);
        *(void *)(v32 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v164;
        swift_bridgeObjectRetain(v164);
        swift_bridgeObjectRelease(v158);
        *(_BYTE *)(v32 + 288) = *(_BYTE *)(v33 + 288);
        uint64_t v165 = (__int128 *)(v32 + 296);
        uint64_t v166 = (__int128 *)(v33 + 296);
        uint64_t v167 = *(void *)(v32 + 304);
        uint64_t v168 = *(void *)(v33 + 304);
        if (v167 == 1)
        {
          if (v168 == 1)
          {
            __int128 v169 = *v166;
            __int128 v170 = *(_OWORD *)(v33 + 328);
            *(_OWORD *)(v32 + 312) = *(_OWORD *)(v33 + 312);
            *(_OWORD *)(v32 + 328) = v170;
            *uint64_t v165 = v169;
          }

          else
          {
            *(void *)(v32 + 296) = *(void *)(v33 + 296);
            uint64_t v181 = *(void *)(v33 + 304);
            *(void *)(v32 + 30sub_62AC(v0 + 4) = v181;
            *(void *)(v32 + 312) = *(void *)(v33 + 312);
            uint64_t v182 = *(void *)(v33 + 320);
            *(void *)(v32 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v182;
            *(void *)(v32 + 328) = *(void *)(v33 + 328);
            uint64_t v183 = *(void *)(v33 + 336);
            *(void *)(v32 + 336) = v183;
            swift_bridgeObjectRetain(v181);
            swift_bridgeObjectRetain(v182);
            swift_bridgeObjectRetain(v183);
          }
        }

        else if (v168 == 1)
        {
          sub_2B168((void *)(v32 + 296));
          __int128 v177 = *(_OWORD *)(v33 + 312);
          __int128 v176 = *(_OWORD *)(v33 + 328);
          *uint64_t v165 = *v166;
          *(_OWORD *)(v32 + 312) = v177;
          *(_OWORD *)(v32 + 328) = v176;
        }

        else
        {
          *(void *)(v32 + 296) = *(void *)(v33 + 296);
          uint64_t v184 = *(void *)(v33 + 304);
          *(void *)(v32 + 30sub_62AC(v0 + 4) = v184;
          swift_bridgeObjectRetain(v184);
          swift_bridgeObjectRelease(v167);
          *(void *)(v32 + 312) = *(void *)(v33 + 312);
          uint64_t v185 = *(void *)(v33 + 320);
          uint64_t v186 = *(void *)(v32 + 320);
          *(void *)(v32 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v185;
          swift_bridgeObjectRetain(v185);
          swift_bridgeObjectRelease(v186);
          *(void *)(v32 + 328) = *(void *)(v33 + 328);
          uint64_t v187 = *(void *)(v33 + 336);
          uint64_t v188 = *(void *)(v32 + 336);
          *(void *)(v32 + 336) = v187;
          swift_bridgeObjectRetain(v187);
          swift_bridgeObjectRelease(v188);
        }

        uint64_t v189 = *(void *)(v33 + 344);
        *(void *)(v32 + 34sub_62AC(v0 + 4) = v189;
        swift_retain(v189);
        swift_release();
        uint64_t v190 = *(void *)(v33 + 376);
        if (*(void *)(v32 + 376))
        {
          if (v190)
          {
            sub_6520((void *)(v32 + 352), (void *)(v33 + 352));
LABEL_114:
            *(_BYTE *)(v32 + 392) = *(_BYTE *)(v33 + 392);
            *(void *)(v32 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v33 + 400);
            uint64_t v193 = *(void *)(v33 + 408);
            uint64_t v194 = *(void *)(v32 + 408);
            *(void *)(v32 + 408) = v193;
            swift_bridgeObjectRetain(v193);
            swift_bridgeObjectRelease(v194);
            goto LABEL_115;
          }

          sub_62AC((void *)(v32 + 352));
        }

        else if (v190)
        {
          *(void *)(v32 + 376) = v190;
          *(void *)(v32 + 38sub_62AC(v0 + 4) = *(void *)(v33 + 384);
          (**(void (***)(uint64_t, uint64_t))(v190 - 8))(v32 + 352, v33 + 352);
          goto LABEL_114;
        }

        __int128 v191 = *(_OWORD *)(v33 + 352);
        __int128 v192 = *(_OWORD *)(v33 + 368);
        *(void *)(v32 + 38sub_62AC(v0 + 4) = *(void *)(v33 + 384);
        *(_OWORD *)(v32 + 352) = v191;
        *(_OWORD *)(v32 + 368) = v192;
        goto LABEL_114;
      }

void *sub_48B70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSServiceRequest(0LL);
  if (sub_6028((uint64_t)a2, 1LL, v6))
  {
    uint64_t v7 = sub_5F6C(&qword_7CB08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL(0LL);
    if (sub_6028((uint64_t)v10, 1LL, v11))
    {
      uint64_t v12 = sub_5F6C((uint64_t *)&unk_7DE50);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
      sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
    }

    sub_5FEC((uint64_t)a1, 0LL, 1LL, v6);
  }

  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for ShelfPage(0LL);
  if (sub_6028((uint64_t)v15, 1LL, v16))
  {
    uint64_t v17 = sub_5F6C(&qword_7CB10);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    *uint64_t v14 = *v15;
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *(_OWORD *)((char *)v14 + 2sub_62AC(v0 + 4) = *(_OWORD *)((char *)v15 + 24);
    memcpy((char *)v14 + 40, (char *)v15 + 40, 0x2C2uLL);
    uint64_t v18 = *(int *)(v16 + 36);
    uint64_t v19 = (char *)v14 + v18;
    uint64_t v20 = (char *)v15 + v18;
    uint64_t v21 = type metadata accessor for PageMetrics(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32LL))(v19, v20, v21);
    sub_5FEC((uint64_t)v14, 0LL, 1LL, v16);
  }

  return a1;
}

uint64_t sub_48D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for JSServiceRequest(0LL);
  int v7 = sub_6028(a1, 1LL, v6);
  int v8 = sub_6028(a2, 1LL, v6);
  if (v7)
  {
    if (!v8)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = (const void *)(a2 + v9);
      uint64_t v12 = type metadata accessor for URL(0LL);
      if (sub_6028((uint64_t)v11, 1LL, v12))
      {
        uint64_t v13 = sub_5F6C((uint64_t *)&unk_7DE50);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
        sub_5FEC((uint64_t)v10, 0LL, 1LL, v12);
      }

      uint64_t v26 = a1;
      uint64_t v27 = v6;
      goto LABEL_14;
    }

    goto LABEL_7;
  }

  if (v8)
  {
    sub_14C60(a1, (uint64_t (*)(void))&type metadata accessor for JSServiceRequest);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(sub_5F6C(&qword_7CB08) - 8) + 64LL);
    uint64_t v15 = (void *)a1;
    uint64_t v16 = (const void *)a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_15;
  }

  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t v18 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v17;
  swift_bridgeObjectRelease(v18);
  uint64_t v19 = *(void *)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease(v19);
  uint64_t v20 = *(int *)(v6 + 24);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for URL(0LL);
  int v24 = sub_6028(v21, 1LL, v23);
  int v25 = sub_6028(v22, 1LL, v23);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32LL))(v21, v22, v23);
      uint64_t v26 = v21;
      uint64_t v27 = v23;
LABEL_14:
      sub_5FEC(v26, 0LL, 1LL, v27);
      goto LABEL_15;
    }

    goto LABEL_28;
  }

  uint64_t v50 = *(void *)(v23 - 8);
  if (v25)
  {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v21, v23);
LABEL_28:
    size_t v14 = *(void *)(*(void *)(sub_5F6C((uint64_t *)&unk_7DE50) - 8) + 64LL);
    uint64_t v15 = (void *)v21;
    uint64_t v16 = (const void *)v22;
    goto LABEL_8;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 40))(v21, v22, v23);
LABEL_15:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for ShelfPage(0LL);
  int v32 = sub_6028(v29, 1LL, v31);
  int v33 = sub_6028(v30, 1LL, v31);
  if (!v32)
  {
    if (v33)
    {
      sub_14C60(v29, type metadata accessor for ShelfPage);
      goto LABEL_20;
    }

    uint64_t v40 = *(void *)v29;
    *(void *)uint64_t v29 = *(void *)v30;
    swift_bridgeObjectRelease(v40);
    uint64_t v41 = *(void *)(v29 + 8);
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    swift_bridgeObjectRelease(v41);
    uint64_t v42 = *(void *)(v29 + 16);
    *(void *)(v29 + swift_weakDestroy(v0 + 16) = *(void *)(v30 + 16);
    swift_bridgeObjectRelease(v42);
    uint64_t v43 = *(void *)(v30 + 32);
    uint64_t v44 = *(void *)(v29 + 32);
    *(void *)(v29 + 2sub_62AC(v0 + 4) = *(void *)(v30 + 24);
    *(void *)(v29 + 32) = v43;
    swift_bridgeObjectRelease(v44);
    *(_BYTE *)(v29 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v30 + 40);
    *(void *)(v29 + 48) = *(void *)(v30 + 48);
    swift_release();
    id v45 = *(void **)(v29 + 56);
    *(void *)(v29 + 56) = *(void *)(v30 + 56);

    sub_62AC((void *)(v29 + 64));
    __int128 v46 = *(_OWORD *)(v30 + 80);
    *(_OWORD *)(v29 + 6sub_62AC(v0 + 4) = *(_OWORD *)(v30 + 64);
    *(_OWORD *)(v29 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v46;
    *(_OWORD *)(v29 + 96) = *(_OWORD *)(v30 + 96);
    uint64_t v47 = *(void *)(v29 + 112);
    *(void *)(v29 + 112) = *(void *)(v30 + 112);
    swift_bridgeObjectRelease(v47);
    uint64_t v48 = *(void *)(v29 + 128);
    if (v48 == 1) {
      goto LABEL_25;
    }
    uint64_t v49 = *(void *)(v30 + 128);
    if (v49 == 1)
    {
      sub_31D1C(v29 + 120);
LABEL_25:
      memcpy((void *)(v29 + 120), (const void *)(v30 + 120), 0x90uLL);
      goto LABEL_38;
    }

    *(void *)(v29 + 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v30 + 120);
    *(void *)(v29 + 128) = v49;
    swift_bridgeObjectRelease(v48);
    *(_BYTE *)(v29 + 136) = *(_BYTE *)(v30 + 136);
    uint64_t v51 = *(void *)(v29 + 152);
    if (v51 != 1)
    {
      uint64_t v52 = *(void *)(v30 + 152);
      if (v52 != 1)
      {
        *(void *)(v29 + 14sub_62AC(v0 + 4) = *(void *)(v30 + 144);
        *(void *)(v29 + 152) = v52;
        swift_bridgeObjectRelease(v51);
        uint64_t v54 = *(void *)(v30 + 168);
        uint64_t v55 = *(void *)(v29 + 168);
        *(void *)(v29 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v30 + 160);
        *(void *)(v29 + 168) = v54;
        swift_bridgeObjectRelease(v55);
        uint64_t v56 = *(void *)(v30 + 184);
        uint64_t v57 = *(void *)(v29 + 184);
        *(void *)(v29 + 176) = *(void *)(v30 + 176);
        *(void *)(v29 + 18sub_62AC(v0 + 4) = v56;
        swift_bridgeObjectRelease(v57);
        goto LABEL_35;
      }

      sub_2B168((void *)(v29 + 144));
    }

    __int128 v53 = *(_OWORD *)(v30 + 160);
    *(_OWORD *)(v29 + 14sub_62AC(v0 + 4) = *(_OWORD *)(v30 + 144);
    *(_OWORD *)(v29 + 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v53;
    *(_OWORD *)(v29 + 176) = *(_OWORD *)(v30 + 176);
LABEL_35:
    *(void *)(v29 + 192) = *(void *)(v30 + 192);
    swift_release();
    if (*(void *)(v29 + 224)) {
      sub_62AC((void *)(v29 + 200));
    }
    __int128 v58 = *(_OWORD *)(v30 + 216);
    *(_OWORD *)(v29 + 20_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_OWORD *)(v30 + 200);
    *(_OWORD *)(v29 + 2swift_weakDestroy(v0 + 16) = v58;
    *(void *)(v29 + 232) = *(void *)(v30 + 232);
    *(_BYTE *)(v29 + 24_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v30 + 240);
    uint64_t v59 = *(void *)(v30 + 256);
    uint64_t v60 = *(void *)(v29 + 256);
    *(void *)(v29 + 248) = *(void *)(v30 + 248);
    *(void *)(v29 + 256) = v59;
    swift_bridgeObjectRelease(v60);
LABEL_38:
    *(_BYTE *)(v29 + 26sub_62AC(v0 + 4) = *(_BYTE *)(v30 + 264);
    uint64_t v61 = *(void *)(v29 + 280);
    if (v61 == 1)
    {
LABEL_41:
      memcpy((void *)(v29 + 272), (const void *)(v30 + 272), 0x90uLL);
      goto LABEL_50;
    }

    uint64_t v62 = *(void *)(v30 + 280);
    if (v62 == 1)
    {
      sub_31D1C(v29 + 272);
      goto LABEL_41;
    }

    *(void *)(v29 + 272) = *(void *)(v30 + 272);
    *(void *)(v29 + 28_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v62;
    swift_bridgeObjectRelease(v61);
    *(_BYTE *)(v29 + 288) = *(_BYTE *)(v30 + 288);
    uint64_t v63 = *(void *)(v29 + 304);
    if (v63 != 1)
    {
      uint64_t v64 = *(void *)(v30 + 304);
      if (v64 != 1)
      {
        *(void *)(v29 + 296) = *(void *)(v30 + 296);
        *(void *)(v29 + 30sub_62AC(v0 + 4) = v64;
        swift_bridgeObjectRelease(v63);
        uint64_t v66 = *(void *)(v30 + 320);
        uint64_t v67 = *(void *)(v29 + 320);
        *(void *)(v29 + 312) = *(void *)(v30 + 312);
        *(void *)(v29 + 32_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v66;
        swift_bridgeObjectRelease(v67);
        uint64_t v68 = *(void *)(v30 + 336);
        uint64_t v69 = *(void *)(v29 + 336);
        *(void *)(v29 + 328) = *(void *)(v30 + 328);
        *(void *)(v29 + 336) = v68;
        swift_bridgeObjectRelease(v69);
        goto LABEL_47;
      }

      sub_2B168((void *)(v29 + 296));
    }

    __int128 v65 = *(_OWORD *)(v30 + 312);
    *(_OWORD *)(v29 + 296) = *(_OWORD *)(v30 + 296);
    *(_OWORD *)(v29 + 312) = v65;
    *(_OWORD *)(v29 + 328) = *(_OWORD *)(v30 + 328);
LABEL_47:
    *(void *)(v29 + 34sub_62AC(v0 + 4) = *(void *)(v30 + 344);
    swift_release();
    if (*(void *)(v29 + 376)) {
      sub_62AC((void *)(v29 + 352));
    }
    __int128 v70 = *(_OWORD *)(v30 + 368);
    *(_OWORD *)(v29 + 352) = *(_OWORD *)(v30 + 352);
    *(_OWORD *)(v29 + 368) = v70;
    *(void *)(v29 + 38sub_62AC(v0 + 4) = *(void *)(v30 + 384);
    *(_BYTE *)(v29 + 392) = *(_BYTE *)(v30 + 392);
    uint64_t v71 = *(void *)(v30 + 408);
    uint64_t v72 = *(void *)(v29 + 408);
    *(void *)(v29 + 40_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v30 + 400);
    *(void *)(v29 + 408) = v71;
    swift_bridgeObjectRelease(v72);
LABEL_50:
    *(_BYTE *)(v29 + 4swift_weakDestroy(v0 + 16) = *(_BYTE *)(v30 + 416);
    uint64_t v73 = *(void *)(v29 + 432);
    if (v73 == 1)
    {
LABEL_53:
      memcpy((void *)(v29 + 424), (const void *)(v30 + 424), 0x90uLL);
      goto LABEL_62;
    }

    uint64_t v74 = *(void *)(v30 + 432);
    if (v74 == 1)
    {
      sub_2A9EC(v29 + 424);
      goto LABEL_53;
    }

    *(void *)(v29 + 42sub_62AC(v0 + 4) = *(void *)(v30 + 424);
    *(void *)(v29 + 432) = v74;
    swift_bridgeObjectRelease(v73);
    *(_BYTE *)(v29 + 44_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v30 + 440);
    uint64_t v75 = *(void *)(v29 + 456);
    if (v75 != 1)
    {
      uint64_t v76 = *(void *)(v30 + 456);
      if (v76 != 1)
      {
        *(void *)(v29 + 448) = *(void *)(v30 + 448);
        *(void *)(v29 + 456) = v76;
        swift_bridgeObjectRelease(v75);
        uint64_t v78 = *(void *)(v30 + 472);
        uint64_t v79 = *(void *)(v29 + 472);
        *(void *)(v29 + 46sub_62AC(v0 + 4) = *(void *)(v30 + 464);
        *(void *)(v29 + 472) = v78;
        swift_bridgeObjectRelease(v79);
        uint64_t v80 = *(void *)(v30 + 488);
        uint64_t v81 = *(void *)(v29 + 488);
        *(void *)(v29 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v30 + 480);
        *(void *)(v29 + 488) = v80;
        swift_bridgeObjectRelease(v81);
        goto LABEL_59;
      }

      sub_2B168((void *)(v29 + 448));
    }

    __int128 v77 = *(_OWORD *)(v30 + 464);
    *(_OWORD *)(v29 + 448) = *(_OWORD *)(v30 + 448);
    *(_OWORD *)(v29 + 46sub_62AC(v0 + 4) = v77;
    *(_OWORD *)(v29 + 48_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_OWORD *)(v30 + 480);
LABEL_59:
    *(void *)(v29 + 496) = *(void *)(v30 + 496);
    swift_release();
    if (*(void *)(v29 + 528)) {
      sub_62AC((void *)(v29 + 504));
    }
    __int128 v82 = *(_OWORD *)(v30 + 520);
    *(_OWORD *)(v29 + 50sub_62AC(v0 + 4) = *(_OWORD *)(v30 + 504);
    *(_OWORD *)(v29 + 52_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v82;
    *(void *)(v29 + 536) = *(void *)(v30 + 536);
    *(_BYTE *)(v29 + 54sub_62AC(v0 + 4) = *(_BYTE *)(v30 + 544);
    *(void *)(v29 + 552) = *(void *)(v30 + 552);
    uint64_t v83 = *(void *)(v29 + 560);
    *(void *)(v29 + 56_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v30 + 560);
    swift_bridgeObjectRelease(v83);
LABEL_62:
    uint64_t v84 = *(void *)(v29 + 568);
    *(void *)(v29 + 568) = *(void *)(v30 + 568);
    swift_bridgeObjectRelease(v84);
    uint64_t v85 = *(void *)(v29 + 584);
    if (v85 == 1)
    {
LABEL_65:
      memcpy((void *)(v29 + 576), (const void *)(v30 + 576), 0x90uLL);
LABEL_74:
      *(_BYTE *)(v29 + 72_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_BYTE *)(v30 + 720);
      *(void *)(v29 + 728) = *(void *)(v30 + 728);
      uint64_t v94 = *(void *)(v29 + 736);
      *(void *)(v29 + 736) = *(void *)(v30 + 736);
      swift_bridgeObjectRelease(v94);
      *(_WORD *)(v29 + 74sub_62AC(v0 + 4) = *(_WORD *)(v30 + 744);
      uint64_t v95 = *(int *)(v31 + 36);
      uint64_t v96 = v29 + v95;
      uint64_t v97 = v30 + v95;
      uint64_t v98 = type metadata accessor for PageMetrics(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 40LL))(v96, v97, v98);
      return a1;
    }

    uint64_t v86 = *(void *)(v30 + 584);
    if (v86 == 1)
    {
      sub_2A9EC(v29 + 576);
      goto LABEL_65;
    }

    *(void *)(v29 + 576) = *(void *)(v30 + 576);
    *(void *)(v29 + 58sub_62AC(v0 + 4) = v86;
    swift_bridgeObjectRelease(v85);
    *(_BYTE *)(v29 + 592) = *(_BYTE *)(v30 + 592);
    uint64_t v87 = *(void *)(v29 + 608);
    if (v87 != 1)
    {
      uint64_t v88 = *(void *)(v30 + 608);
      if (v88 != 1)
      {
        *(void *)(v29 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v30 + 600);
        *(void *)(v29 + 608) = v88;
        swift_bridgeObjectRelease(v87);
        *(void *)(v29 + 6swift_weakDestroy(v0 + 16) = *(void *)(v30 + 616);
        uint64_t v90 = *(void *)(v29 + 624);
        *(void *)(v29 + 62sub_62AC(v0 + 4) = *(void *)(v30 + 624);
        swift_bridgeObjectRelease(v90);
        *(void *)(v29 + 632) = *(void *)(v30 + 632);
        uint64_t v91 = *(void *)(v29 + 640);
        *(void *)(v29 + 64_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(v30 + 640);
        swift_bridgeObjectRelease(v91);
        goto LABEL_71;
      }

      sub_2B168((void *)(v29 + 600));
    }

    __int128 v89 = *(_OWORD *)(v30 + 616);
    *(_OWORD *)(v29 + 60_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(_OWORD *)(v30 + 600);
    *(_OWORD *)(v29 + 6swift_weakDestroy(v0 + 16) = v89;
    *(_OWORD *)(v29 + 632) = *(_OWORD *)(v30 + 632);
LABEL_71:
    *(void *)(v29 + 648) = *(void *)(v30 + 648);
    swift_release();
    if (*(void *)(v29 + 680)) {
      sub_62AC((void *)(v29 + 656));
    }
    __int128 v92 = *(_OWORD *)(v30 + 672);
    *(_OWORD *)(v29 + 656) = *(_OWORD *)(v30 + 656);
    *(_OWORD *)(v29 + 672) = v92;
    *(void *)(v29 + 688) = *(void *)(v30 + 688);
    *(_BYTE *)(v29 + 696) = *(_BYTE *)(v30 + 696);
    *(void *)(v29 + 70sub_62AC(v0 + 4) = *(void *)(v30 + 704);
    uint64_t v93 = *(void *)(v29 + 712);
    *(void *)(v29 + 712) = *(void *)(v30 + 712);
    swift_bridgeObjectRelease(v93);
    goto LABEL_74;
  }

  if (v33)
  {
LABEL_20:
    uint64_t v38 = sub_5F6C(&qword_7CB10);
    memcpy((void *)v29, (const void *)v30, *(void *)(*(void *)(v38 - 8) + 64LL));
    return a1;
  }

  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(void *)(v29 + swift_weakDestroy(v0 + 16) = *(void *)(v30 + 16);
  *(_OWORD *)(v29 + 2sub_62AC(v0 + 4) = *(_OWORD *)(v30 + 24);
  memcpy((void *)(v29 + 40), (const void *)(v30 + 40), 0x2C2uLL);
  uint64_t v34 = *(int *)(v31 + 36);
  uint64_t v35 = v29 + v34;
  uint64_t v36 = v30 + v34;
  uint64_t v37 = type metadata accessor for PageMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32LL))(v35, v36, v37);
  sub_5FEC(v29, 0LL, 1LL, v31);
  return a1;
}

uint64_t sub_495B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_495BC);
}

uint64_t sub_495BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_5F6C(&qword_7CB08);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84LL) == (_DWORD)a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = a1;
  }

  else
  {
    uint64_t v7 = sub_5F6C(&qword_7CB10);
    uint64_t v8 = a1 + *(int *)(a3 + 20);
  }

  return sub_6028(v8, a2, v7);
}

uint64_t sub_4962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_49638);
}

uint64_t sub_49638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_5F6C(&qword_7CB08);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84LL) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v9 = sub_5F6C(&qword_7CB10);
    uint64_t v10 = a1 + *(int *)(a4 + 20);
  }

  return sub_5FEC(v10, a2, a2, v9);
}

uint64_t type metadata accessor for ShelfPageDestination(uint64_t a1)
{
  uint64_t result = qword_7F188;
  if (!qword_7F188) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ShelfPageDestination);
  }
  return result;
}

void sub_496E8(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    sub_4978C(319LL, (unint64_t *)&unk_7F1A0, type metadata accessor for ShelfPage);
    if (v5 <= 0x3F)
    {
      v6[1] = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 2LL, v6, a1 + 16);
    }
  }

void sub_4978C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*a2)
  {
    uint64_t v5 = a3(255LL);
    unint64_t v6 = type metadata accessor for Optional(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

uint64_t sub_497D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v61[0] = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_5F6C(&qword_7CB10);
  sub_6D6C();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  size_t v14 = (char *)v61 - v13;
  sub_5F6C(&qword_7CB08);
  sub_6D6C();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v61 - v19;
  uint64_t v21 = type metadata accessor for ShelfPageDestination(0LL);
  uint64_t v68 = a2;
  uint64_t v63 = a2;
  v61[1] = a1;
  sub_5154(0x5265636976726573LL, 0xEE00747365757165LL, v21, (uint64_t)sub_49F4C, (uint64_t)v62, v22, v23, v24);
  if (v3)
  {
    swift_errorRelease(v3);
    uint64_t v25 = 1LL;
  }

  else
  {
    uint64_t v25 = 0LL;
  }

  uint64_t v26 = type metadata accessor for JSServiceRequest(0LL);
  sub_5FEC((uint64_t)v20, v25, 1LL, v26);
  sub_D708((uint64_t)v20, a3, &qword_7CB08);
  __chkstk_darwin(v27);
  v61[-2] = v68;
  sub_5178(0x6B63617065646973LL, 0xE800000000000000LL, v21, (uint64_t)sub_49F54, (uint64_t)&v61[-4], v28, v29, v30);
  uint64_t v31 = type metadata accessor for ShelfPage(0LL);
  sub_5FEC((uint64_t)v14, 0LL, 1LL, v31);
  uint64_t v32 = a3 + *(int *)(v21 + 20);
  sub_D708((uint64_t)v14, v32, &qword_7CB10);
  sub_D770(a3, (uint64_t)v18, &qword_7CB08);
  LODWORD(v26) = sub_6028((uint64_t)v18, 1LL, v26);
  sub_14C38((uint64_t)v18, &qword_7CB08);
  if ((_DWORD)v26 == 1
    && (sub_D770(v32, (uint64_t)v12, &qword_7CB10),
        int v33 = sub_6028((uint64_t)v12, 1LL, v31),
        sub_14C38((uint64_t)v12, &qword_7CB10),
        v33 == 1))
  {
    uint64_t v34 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v35 = type metadata accessor for LogMessage(0LL);
    uint64_t v36 = swift_allocObject( v34,  ((*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v35 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = xmmword_5CD80;
    uint64_t v67 = v21;
    uint64_t v37 = sub_7BA4(v66);
    uint64_t v38 = sub_49F5C(a3, (uint64_t)v37);
    id v39 = (id)AMSLogKey(v38);
    if (v39)
    {
      uint64_t v41 = v39;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);
      uint64_t v44 = v43;

      uint64_t v45 = v61[0];
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      sub_C3E8();
      uint64_t v46 = v67;
      uint64_t v47 = sub_7A94(v66, v67);
      uint64_t DynamicType = swift_getDynamicType(v47, v46, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v64[0] = DynamicType;
      sub_C3F4();
      sub_4A10C();
      v49._countAndFlagsBits = 5972026LL;
      v49._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      uint64_t MetatypeMetadata = &type metadata for String;
      v64[0] = v42;
      v64[1] = v44;
      sub_C3F4();
      sub_4A10C();
      uint64_t v50 = 93LL;
    }

    else
    {
      uint64_t v45 = v61[0];
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      sub_C3E8();
      uint64_t v52 = v67;
      __int128 v53 = sub_7A94(v66, v67);
      uint64_t v54 = swift_getDynamicType(v53, v52, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v64[0] = v54;
      sub_C3F4();
      sub_14C38((uint64_t)v64, &qword_7DDE0);
      uint64_t v50 = 58LL;
    }

    unint64_t v55 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v50);
    LogMessage.init(stringInterpolation:)(v45);
    type metadata accessor for Log();
    sub_62AC(v66);
    LogMessage.init(stringLiteral:)(0xD000000000000029LL, 0x8000000000064F90LL);
    sub_267BC(v36);
    swift_bridgeObjectRelease(v36);
    unint64_t v56 = sub_49FA0();
    uint64_t v57 = swift_allocError(&type metadata for ShelfPageDestination.DecodingError, v56, 0LL, 0LL);
    swift_willThrow(v57);
    uint64_t v58 = type metadata accessor for JSONObject(0LL);
    sub_4A0F8(v58);
    sub_14C60(a3, type metadata accessor for ShelfPageDestination);
  }

  else
  {
    uint64_t v51 = type metadata accessor for JSONObject(0LL);
    sub_4A0F8(v51);
  }

  uint64_t v59 = type metadata accessor for JSONContext(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8LL))(v68, v59);
}

uint64_t sub_49D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for JSONContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for JSONObject(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  (*(void (**)(_BYTE *, uint64_t))(v13 + 16))(v12, a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  JSServiceRequest.init(deserializing:using:)(v12, v9);
  uint64_t v14 = type metadata accessor for JSServiceRequest(0LL);
  return sub_5FEC(a3, 0LL, 1LL, v14);
}

uint64_t sub_49E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for JSONContext(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for JSONObject(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for ShelfPage(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  unint64_t v13 = sub_49FDC();
  return ExpressibleByJSON.init(tryDeserializing:using:)(v11, v7, v12, v13);
}

uint64_t sub_49F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_497D8(a1, a2, a3);
}

uint64_t sub_49F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_49D0C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_49F54(uint64_t a1)
{
  return sub_49E2C(a1, *(void *)(v1 + 16));
}

uint64_t sub_49F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfPageDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_49FA0()
{
  unint64_t result = qword_7F1D0;
  if (!qword_7F1D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_5FDD0, &type metadata for ShelfPageDestination.DecodingError);
    atomic_store(result, (unint64_t *)&qword_7F1D0);
  }

  return result;
}

unint64_t sub_49FDC()
{
  unint64_t result = qword_7F1D8;
  if (!qword_7F1D8)
  {
    uint64_t v1 = type metadata accessor for ShelfPage(255LL);
    unint64_t result = swift_getWitnessTable(&unk_5F758, v1);
    atomic_store(result, (unint64_t *)&qword_7F1D8);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for ShelfPageDestination.DecodingError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_4A05C + 4 * byte_5FCF0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_4A07C + 4 * byte_5FCF5[v4]))();
  }
}

_BYTE *sub_4A05C(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_4A07C(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_4A084(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_4A08C(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_4A094(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_4A09C(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShelfPageDestination.DecodingError()
{
  return &type metadata for ShelfPageDestination.DecodingError;
}

unint64_t sub_4A0BC()
{
  unint64_t result = qword_7F1E0;
  if (!qword_7F1E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_5FDA8, &type metadata for ShelfPageDestination.DecodingError);
    atomic_store(result, (unint64_t *)&qword_7F1E0);
  }

  return result;
}

uint64_t sub_4A0F8(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)(a1 - 8) + 8LL))(*(void *)(v1 - 184), a1);
}

void sub_4A10C()
{
}

void *initializeBufferWithCopyOfBuffer for ShelfPageError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for ShelfPageError(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 8));
}

void *assignWithCopy for ShelfPageError(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

void *assignWithTake for ShelfPageError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfPageError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }

    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(swift_weakInit(v21, v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfPageError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ShelfPageError()
{
  return &type metadata for ShelfPageError;
}

id sub_4A274()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  id v1 = objc_msgSendSuper2(&v3, "init");
  sub_4A698(v1, "setContentInsetAdjustmentBehavior:");
  sub_3A270(v1, "setScrollEnabled:");

  return v1;
}

id sub_4A2F8(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  id v3 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    sub_4A698(v5, "setContentInsetAdjustmentBehavior:");
    sub_3A270(v5, "setScrollEnabled:");
  }

  return v4;
}

id sub_4A39C(void *a1, double a2, double a3, double a4, double a5)
{
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  id v11 = objc_msgSendSuper2(&v13, "initWithFrame:collectionViewLayout:", a1, a2, a3, a4, a5);
  sub_4A698(v11, "setContentInsetAdjustmentBehavior:");
  sub_3A270(v11, "setScrollEnabled:");

  return v11;
}

id sub_4A4D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  return objc_msgSendSuper2(&v2, "contentSize");
}

id sub_4A54C(double a1, double a2)
{
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  objc_msgSendSuper2(&v6, "setContentSize:", a1, a2);
  return [v2 invalidateIntrinsicContentSize];
}

CGFloat sub_4A5E4()
{
  id v1 = [v0 collectionViewLayout];
  [v1 collectionViewContentSize];

  return UIViewNoIntrinsicMetric;
}

id sub_4A648()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShelfPageFooterCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ShelfPageFooterCollectionView()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin29ShelfPageFooterCollectionView);
}

id sub_4A698(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 2);
}

void sub_4A6A0()
{
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v6 = v4;
  if (!sub_50614() || v3 > *(void *)(v1 + 24) >> 1)
  {
    sub_18AF4();
    uint64_t v1 = v7;
  }

  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  uint64_t v8 = *(void *)(v1 + 16);
  if ((*(void *)(v1 + 24) >> 1) - v8 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v9 = v1 + 40 * v8 + 32;
  sub_5F6C((uint64_t *)&unk_7F100);
  swift_arrayInitWithCopy(v9, v6 + 32, v2);
  if (!v2)
  {
LABEL_11:
    sub_190B8();
    *uint64_t v0 = v1;
    sub_19098();
    return;
  }

  uint64_t v10 = *(void *)(v1 + 16);
  BOOL v5 = __OFADD__(v10, v2);
  uint64_t v11 = v10 + v2;
  if (!v5)
  {
    *(void *)(v1 + swift_weakDestroy(v0 + 16) = v11;
    goto LABEL_11;
  }

LABEL_15:
  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

void sub_4A774()
{
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v6 = v4;
  if (!sub_50614() || v3 > *(void *)(v1 + 24) >> 1)
  {
    sub_5049C();
    uint64_t v1 = v7;
  }

  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = (*(void *)(v1 + 24) >> 1) - v8;
  uint64_t v10 = sub_19068();
  if (v9 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  swift_arrayInitWithCopy(v1 + v12 + *(void *)(v11 + 72) * v8, v6 + v12, v2);
  if (!v2)
  {
LABEL_11:
    sub_190B8();
    *uint64_t v0 = v1;
    sub_19098();
    return;
  }

  uint64_t v13 = *(void *)(v1 + 16);
  BOOL v5 = __OFADD__(v13, v2);
  uint64_t v14 = v13 + v2;
  if (!v5)
  {
    *(void *)(v1 + swift_weakDestroy(v0 + 16) = v14;
    goto LABEL_11;
  }

void sub_4A840(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16LL);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (!swift_isUniquelyReferenced_nonNull_native(*v1) || v4 + v2 > *(void *)(v3 + 24) >> 1)
  {
    sub_18A24();
    uint64_t v3 = v6;
  }

  if (!*(void *)(a1 + 16))
  {
    if (!v2) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }

  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  swift_arrayInitWithCopy(v3 + 16 * v7 + 32, a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease(a1);
    *uint64_t v1 = v3;
    return;
  }

  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + swift_weakDestroy(v0 + 16) = v10;
    goto LABEL_11;
  }

void *sub_4A920(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = type metadata accessor for Shelf(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_504F8();
  int64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    sub_29258(0LL, v9, 0);
    unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = a3 + v15;
    uint64_t v11 = *(void *)(v8 + 72);
    while (1)
    {
      a1(v10);
      if (v5) {
        break;
      }
      uint64_t v5 = 0LL;
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_29258(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      sub_50174(v4, (uint64_t)_swiftEmptyArrayStorage + v15 + v13 * v11, type metadata accessor for Shelf);
      v10 += v11;
      if (!--v9) {
        return _swiftEmptyArrayStorage;
      }
    }

    swift_release();
  }

  return _swiftEmptyArrayStorage;
}

void sub_4AA68(uint64_t a1, unsigned __int8 a2)
{
}

void sub_4AA88(uint64_t a1)
{
}

uint64_t sub_4AA90()
{
  uint64_t v74 = v1;
  uint64_t v75 = v2;
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v58 = v6;
  sub_5F6C(&qword_7CB10);
  sub_6D6C();
  __chkstk_darwin(v8);
  sub_2DD94();
  uint64_t v64 = v9;
  sub_30980();
  __chkstk_darwin(v10);
  sub_50464();
  uint64_t v63 = v11;
  sub_30980();
  __chkstk_darwin(v12);
  sub_444D8();
  uint64_t v62 = v13;
  sub_5F6C(&qword_7CB70);
  sub_6D6C();
  __chkstk_darwin(v14);
  sub_12718();
  uint64_t v61 = v15;
  type metadata accessor for MetricsFieldsContext(0LL);
  sub_6D6C();
  __chkstk_darwin(v16);
  sub_12718();
  uint64_t v60 = v17;
  uint64_t v18 = ((uint64_t (*)(void))type metadata accessor for MetricsPipeline)(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  sub_2DD94();
  uint64_t v59 = v20;
  sub_30980();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v58 - v22;
  *(_BYTE *)(v0 + swift_weakDestroy(v0 + 16) = 3;
  *(void *)(v0 + 2sub_62AC(v0 + 4) = &_swiftEmptyArrayStorage;
  uint64_t v24 = sub_5F6C(&qword_7F458);
  sub_3CD30(v24);
  *(void *)(v0 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = sub_50520();
  uint64_t v25 = sub_5F6C(&qword_7ECE0);
  sub_3CD30(v25);
  *(void *)(v0 + 48) = AsyncEvent.init()();
  uint64_t v26 = sub_5F6C(&qword_7F460);
  sub_3CD30(v26);
  *(void *)(v0 + 56) = sub_50520();
  uint64_t v27 = sub_5F6C(&qword_7F468);
  sub_3CD30(v27);
  *(void *)(v0 + 6sub_62AC(v0 + 4) = sub_50520();
  uint64_t v28 = sub_5F6C(&qword_7F470);
  sub_3CD30(v28);
  *(void *)(v0 + 72) = sub_50520();
  uint64_t v29 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  uint64_t v30 = sub_5048C();
  sub_5FEC(v29, 1LL, 1LL, v30);
  uint64_t v31 = (void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_lastItemId);
  *uint64_t v31 = 0LL;
  v31[1] = 0xE000000000000000LL;
  sub_501A8( v7,  v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination,  type metadata accessor for ShelfPageDestination);
  *(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_objectGraph) = v5;
  uint64_t v32 = ((uint64_t (*)(void))type metadata accessor for AppMetricsPresenter)(0LL);
  uint64_t v33 = type metadata accessor for BaseObjectGraph(0LL);
  swift_retain(v5);
  sub_50548(v32);
  uint64_t v34 = v69;
  inject<A, B>(_:from:)(v18, v5, v18, v33);
  __int128 v65 = v23;
  uint64_t v66 = v19;
  uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 16);
  uint64_t v36 = v59;
  uint64_t v67 = v18;
  v35(v59, v23, v18);
  uint64_t v37 = sub_5F6C(&qword_7EEA0);
  swift_retain(v34);
  uint64_t v68 = v5;
  sub_50548(v37);
  uint64_t v38 = v69;
  uint64_t v39 = v60;
  ((void (*)(uint64_t, uint64_t))static MetricsFieldsContext.createFieldsContext(impressionsTracker:))( v69,  v70);
  swift_unknownObjectRelease(v38);
  uint64_t v40 = type metadata accessor for PageMetrics(0LL);
  uint64_t v41 = v61;
  sub_5FEC(v61, 1LL, 1LL, v40);
  uint64_t v42 = sub_505B8();
  sub_3CD30(v42);
  uint64_t v43 = v58;
  uint64_t v44 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))PageMetricsPresenter.init(appMetrics:pipeline:context:data:))( v34,  v36,  v39,  v41);
  uint64_t v45 = v62;
  *(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_metricsPresenter) = v44;
  uint64_t v46 = v43 + *(int *)(type metadata accessor for ShelfPageDestination(0LL) + 20);
  sub_502FC(v46, v45, &qword_7CB10);
  uint64_t v47 = sub_503C0(v45);
  if (v48)
  {
    sub_50580(v47, &qword_7CB10);
    uint64_t v49 = 0LL;
  }

  else
  {
    sub_50600((void *)(v45 + 40));
    sub_14C60(v45, type metadata accessor for ShelfPage);
    uint64_t v49 = v70;
    swift_retain(v70);
    sub_505E0();
  }

  uint64_t v50 = v63;
  sub_502FC(v46, v63, &qword_7CB10);
  sub_503C0(v50);
  uint64_t v51 = v64;
  if (v48)
  {
    sub_14C38(v50, &qword_7CB10);
    id v52 = objc_msgSend((id)objc_opt_self(UIColor), "ams_clear");
  }

  else
  {
    sub_50600((void *)(v50 + 40));
    sub_14C60(v50, type metadata accessor for ShelfPage);
    id v52 = v71;
    sub_505E0();
  }

  sub_505CC(v46, v53, &qword_7CB10);
  uint64_t v54 = sub_503C0(v51);
  if (v48)
  {
    sub_50518(v54, &qword_7CB10);
    v72[0] = &type metadata for DefaultLayoutModel;
    v72[1] = &protocol witness table for DefaultLayoutModel;
  }

  else
  {
    sub_50600((void *)(v51 + 40));
    sub_14C60(v51, type metadata accessor for ShelfPage);
    sub_16D24((uint64_t)v72, (uint64_t)v73);
    sub_505E0();
    sub_6010(v73, (uint64_t)&v69);
  }

  sub_16D24((uint64_t)&v69, (uint64_t)v73);
  uint64_t v55 = type metadata accessor for ShelfPageCollectionPresenter();
  swift_allocObject(v55, 112LL, 7LL);
  sub_50528();
  unint64_t v56 = sub_3C168(v68, v49, v52, v73);
  swift_release();
  sub_14C60(v43, type metadata accessor for ShelfPageDestination);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
  sub_62AC(&v69);
  *(void *)(v3 + 32) = v56;
  return v3;
}

void *sub_4AFAC(uint64_t a1)
{
  return &j__swift_endAccess;
}

uint64_t sub_4AFF4()
{
  return v0;
}

uint64_t sub_4B0A4()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_4B0C8()
{
  return type metadata accessor for ShelfPagePresenter(0LL);
}

uint64_t type metadata accessor for ShelfPagePresenter(uint64_t a1)
{
  return sub_4B6FC(a1, qword_7F248, (uint64_t)&nominal type descriptor for ShelfPagePresenter);
}

void sub_4B0E4(uint64_t a1)
{
  v6[0] = &unk_5FEF8;
  v6[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  void v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t v2 = type metadata accessor for ShelfPageDestination(319LL);
  if (v3 <= 0x3F)
  {
    v6[8] = *(void *)(v2 - 8) + 64LL;
    void v6[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    sub_4978C(319LL, (unint64_t *)&unk_7F1A0, type metadata accessor for ShelfPage);
    if (v5 <= 0x3F)
    {
      v6[11] = *(void *)(v4 - 8) + 64LL;
      v6[12] = &unk_5FF10;
      swift_updateClassMetadata2(a1, 256LL, 13LL, v6, a1 + 80);
    }
  }

void *sub_4B1B4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v13);
  }

  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = *a2;
      swift_errorRetain(*a2);
      *a1 = v14;
      uint64_t v15 = sub_5F6C(&qword_7F390);
      uint64_t v16 = *(int *)(v15 + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for URL(0LL);
      if (sub_6028((uint64_t)v18, 1LL, v19))
      {
        uint64_t v20 = sub_5F6C((uint64_t *)&unk_7DE50);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16LL))(v17, v18, v19);
        sub_5FEC((uint64_t)v17, 0LL, 1LL, v19);
      }

      uint64_t v21 = *(int *)(v15 + 64);
      uint64_t v22 = (void *)((char *)a1 + v21);
      uint64_t v23 = (void *)((char *)a2 + v21);
      if (*v23)
      {
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        swift_retain(v24);
      }

      else
      {
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      }

      uint64_t v10 = a1;
      uint64_t v11 = a3;
      uint64_t v12 = 1LL;
      goto LABEL_14;
    }

    if (!EnumCaseMultiPayload)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain(v9);
      uint64_t v10 = a1;
      uint64_t v11 = a3;
      uint64_t v12 = 0LL;
LABEL_14:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      return a1;
    }

    memcpy(a1, a2, *(void *)(v5 + 64));
  }

  return a1;
}

uint64_t sub_4B340(void *a1, uint64_t a2)
{
  uint64_t result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    swift_errorRelease(*a1);
    uint64_t v4 = sub_5F6C(&qword_7F390);
    uint64_t v5 = (uint64_t)a1 + *(int *)(v4 + 48);
    uint64_t v6 = type metadata accessor for URL(0LL);
    uint64_t result = sub_6028(v5, 1LL, v6);
    if (!(_DWORD)result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
    }
  }

  else if (!(_DWORD)result)
  {
    return swift_bridgeObjectRelease(a1[1]);
  }

  return result;
}

void *sub_4B400(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = *a2;
    swift_errorRetain(*a2);
    *a1 = v11;
    uint64_t v12 = sub_5F6C(&qword_7F390);
    uint64_t v13 = *(int *)(v12 + 48);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for URL(0LL);
    if (sub_6028((uint64_t)v15, 1LL, v16))
    {
      uint64_t v17 = sub_5F6C((uint64_t *)&unk_7DE50);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
      sub_5FEC((uint64_t)v14, 0LL, 1LL, v16);
    }

    uint64_t v18 = *(int *)(v12 + 64);
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    if (*v20)
    {
      uint64_t v21 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v21;
      swift_retain(v21);
    }

    else
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    }

    uint64_t v8 = a1;
    uint64_t v9 = a3;
    uint64_t v10 = 1LL;
    goto LABEL_12;
  }

  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain(v7);
    uint64_t v8 = a1;
    uint64_t v9 = a3;
    uint64_t v10 = 0LL;
LABEL_12:
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    return a1;
  }

  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  return a1;
}

void *sub_4B564(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_14C60((uint64_t)a1, type metadata accessor for ShelfPagePresenter.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *a2;
      swift_errorRetain(*a2);
      *a1 = v11;
      uint64_t v12 = sub_5F6C(&qword_7F390);
      uint64_t v13 = *(int *)(v12 + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for URL(0LL);
      if (sub_6028((uint64_t)v15, 1LL, v16))
      {
        uint64_t v17 = sub_5F6C((uint64_t *)&unk_7DE50);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16LL))(v14, v15, v16);
        sub_5FEC((uint64_t)v14, 0LL, 1LL, v16);
      }

      uint64_t v18 = *(int *)(v12 + 64);
      uint64_t v19 = (void *)((char *)a1 + v18);
      uint64_t v20 = (void *)((char *)a2 + v18);
      if (*v20)
      {
        uint64_t v21 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v21;
        swift_retain(v21);
      }

      else
      {
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 1LL;
      goto LABEL_13;
    }

    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      uint64_t v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 0LL;
LABEL_13:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      return a1;
    }

    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

uint64_t type metadata accessor for ShelfPagePresenter.State(uint64_t a1)
{
  return sub_4B6FC(a1, (uint64_t *)&unk_7F408, (uint64_t)&nominal type descriptor for ShelfPagePresenter.State);
}

uint64_t sub_4B6FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata(a1, a3);
  }
  return result;
}

void *sub_4B72C(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    uint64_t v6 = sub_5F6C(&qword_7F390);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL(0LL);
    if (sub_6028((uint64_t)v9, 1LL, v10))
    {
      uint64_t v11 = sub_5F6C((uint64_t *)&unk_7DE50);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
      sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
    }

    uint64_t v12 = *(int *)(v6 + 64);
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = *v14;
    if (*v14)
    {
      uint64_t v16 = v14[1];
      *uint64_t v13 = v15;
      v13[1] = v16;
    }

    else
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    }

    swift_storeEnumTagMultiPayload(a1, a3, 1LL);
  }

  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  return a1;
}

void *sub_4B864(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_14C60((uint64_t)a1, type metadata accessor for ShelfPagePresenter.State);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      uint64_t v6 = sub_5F6C(&qword_7F390);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for URL(0LL);
      if (sub_6028((uint64_t)v9, 1LL, v10))
      {
        uint64_t v11 = sub_5F6C((uint64_t *)&unk_7DE50);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
        sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
      }

      uint64_t v12 = *(int *)(v6 + 64);
      uint64_t v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (void *)((char *)a2 + v12);
      uint64_t v15 = *v14;
      if (*v14)
      {
        uint64_t v16 = v14[1];
        *uint64_t v13 = v15;
        v13[1] = v16;
      }

      else
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      }

      swift_storeEnumTagMultiPayload(a1, a3, 1LL);
    }

    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }
  }

  return a1;
}

uint64_t sub_4B9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

void sub_4B9D0(uint64_t a1)
{
  v5[0] = &unk_5FF10;
  sub_4978C(319LL, (unint64_t *)&unk_7F418, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout3(v4, "\b", *(void *)(v2 - 8) + 64LL, &unk_5FF48);
    v5[1] = v4;
    void v5[2] = &unk_5FF60;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 3LL, v5);
  }

uint64_t getEnumTagSinglePayload for ShelfPagePresenter.FooterLayout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }

uint64_t storeEnumTagSinglePayload for ShelfPagePresenter.FooterLayout( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_4BB48 + 4 * byte_5FE95[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_4BB7C + 4 * asc_5FE90[v4]))();
}

uint64_t sub_4BB7C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_4BB84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x4BB8CLL);
  }
  return result;
}

uint64_t sub_4BB98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x4BBA0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_4BBA4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_4BBAC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShelfPagePresenter.FooterLayout()
{
  return &type metadata for ShelfPagePresenter.FooterLayout;
}

unint64_t sub_4BBCC()
{
  unint64_t result = qword_7F448;
  if (!qword_7F448)
  {
    unint64_t result = swift_getWitnessTable(&unk_5FFC8, &type metadata for ShelfPagePresenter.FooterLayout);
    atomic_store(result, (unint64_t *)&qword_7F448);
  }

  return result;
}

void sub_4BC08()
{
}

uint64_t sub_4BC34()
{
  uint64_t v1 = type metadata accessor for ShelfPagePresenter.State(0LL);
  sub_6D6C();
  __chkstk_darwin(v2);
  sub_F76C();
  int v5 = (_BYTE *)(v4 - v3);
  sub_5F6C(&qword_7CB10);
  sub_6D6C();
  __chkstk_darwin(v6);
  sub_F76C();
  uint64_t v9 = v8 - v7;
  sub_5048C();
  sub_6D6C();
  __chkstk_darwin(v10);
  sub_F76C();
  uint64_t v13 = v12 - v11;
  sub_505B8();
  ViewControllerPresenter.viewDidLoad()();
  uint64_t v14 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
  uint64_t v15 = type metadata accessor for ShelfPageDestination(0LL);
  sub_502FC(v14 + *(int *)(v15 + 20), v9, &qword_7CB10);
  uint64_t v16 = sub_503C0(v9);
  if (v17)
  {
    sub_50518(v16, &qword_7CB10);
    *int v5 = 0;
    swift_storeEnumTagMultiPayload(v5, v1, 2LL);
    SyncEvent.post(_:)(v5);
    uint64_t v19 = type metadata accessor for ShelfPagePresenter.State;
    uint64_t v18 = (uint64_t)v5;
  }

  else
  {
    sub_50174(v9, v13, type metadata accessor for ShelfPage);
    sub_4BDA8(v13);
    uint64_t v18 = v13;
    uint64_t v19 = type metadata accessor for ShelfPage;
  }

  sub_14C60(v18, v19);
  return sub_4C350();
}

void sub_4BDA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ShelfPagePresenter.State(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_5F6C(&qword_7CB70);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_5F6C(&qword_7CB10);
  __chkstk_darwin(v10);
  uint64_t v64 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v15 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v15);
  char v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = type metadata accessor for ShelfPage(0LL);
  __chkstk_darwin(v63);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v60 - v21;
  uint64_t v23 = *(void *)(*(void *)(a1 + 16) + 16LL);
  sub_501A8(a1, (uint64_t)&v60 - v21, v24);
  __int128 v65 = v9;
  if (v23)
  {
    sub_14C60((uint64_t)v22, type metadata accessor for ShelfPage);
    sub_501A8(a1, (uint64_t)v19, type metadata accessor for ShelfPage);
LABEL_4:
    sub_14C60((uint64_t)v19, type metadata accessor for ShelfPage);
    goto LABEL_5;
  }

  uint64_t v25 = *(void *)(*(void *)v22 + 16LL);
  sub_14C60((uint64_t)v22, type metadata accessor for ShelfPage);
  sub_501A8(a1, (uint64_t)v19, type metadata accessor for ShelfPage);
  if (v25) {
    goto LABEL_4;
  }
  uint64_t v54 = *(void *)(*((void *)v19 + 1) + 16LL);
  sub_14C60((uint64_t)v19, type metadata accessor for ShelfPage);
  if (!v54)
  {
    uint64_t v56 = *(void *)(a1 + 104);
    uint64_t v55 = *(void *)(a1 + 112);
    unint64_t v57 = sub_4DF80();
    uint64_t v58 = swift_allocError(&type metadata for ShelfPageError, v57, 0LL, 0LL);
    *uint64_t v59 = v56;
    v59[1] = v55;
    swift_bridgeObjectRetain(v55);
    sub_4CB28(v58);
    swift_errorRelease(v58);
    return;
  }

LABEL_5:
  uint64_t v61 = v6;
  uint64_t v62 = v4;
  uint64_t v26 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v27 = type metadata accessor for LogMessage(0LL);
  uint64_t v28 = swift_allocObject( v26,  ((*(unsigned __int8 *)(*(void *)(v27 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v27 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v27 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v27 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v28 + swift_weakDestroy(v0 + 16) = xmmword_5CD80;
  uint64_t v69 = type metadata accessor for ShelfPagePresenter(0LL);
  v68[0] = v2;
  uint64_t v29 = swift_retain(v2);
  id v30 = (id)AMSLogKey(v29);
  if (v30)
  {
    uint64_t v32 = v30;
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);
    uint64_t v35 = v34;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v36._countAndFlagsBits = 0LL;
    v36._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    uint64_t v37 = v69;
    uint64_t v38 = sub_7A94(v68, v69);
    uint64_t DynamicType = swift_getDynamicType(v38, v37, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v66[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v66);
    sub_14C38((uint64_t)v66, &qword_7DDE0);
    v40._countAndFlagsBits = 5972026LL;
    v40._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    uint64_t MetatypeMetadata = &type metadata for String;
    v66[0] = v33;
    v66[1] = v35;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v66);
    sub_14C38((uint64_t)v66, &qword_7DDE0);
    uint64_t v41 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v42._countAndFlagsBits = 0LL;
    v42._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    uint64_t v43 = v69;
    uint64_t v44 = sub_7A94(v68, v69);
    uint64_t v45 = swift_getDynamicType(v44, v43, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v45);
    v66[0] = v45;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v66);
    sub_14C38((uint64_t)v66, &qword_7DDE0);
    uint64_t v41 = 58LL;
  }

  uint64_t v46 = (uint64_t)v61;
  uint64_t v48 = v63;
  uint64_t v47 = (uint64_t)v64;
  unint64_t v49 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v41);
  LogMessage.init(stringInterpolation:)(v17);
  type metadata accessor for Log();
  sub_62AC(v68);
  LogMessage.init(stringLiteral:)(0x69746E6573657250LL, 0xEF6567617020676ELL);
  sub_2679C(v28);
  swift_bridgeObjectRelease(v28);
  sub_501A8(a1, (uint64_t)v14, type metadata accessor for ShelfPage);
  sub_5FEC((uint64_t)v14, 0LL, 1LL, v48);
  sub_4DEF0((uint64_t)v14, v47);
  uint64_t v50 = v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  swift_beginAccess(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage, v68, 33LL, 0LL);
  sub_4DF38(v47, v50);
  swift_endAccess(v68);
  uint64_t v51 = a1 + *(int *)(v48 + 36);
  uint64_t v52 = type metadata accessor for PageMetrics(0LL);
  uint64_t v53 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16LL))(v65, v51, v52);
  sub_5FEC(v53, 0LL, 1LL, v52);
  PageMetricsPresenter.data.setter(v53);
  LOBYTE(v68[0]) = *(_BYTE *)(a1 + 40);
  SyncEvent.post(_:)(v68);
  SyncEvent.post(_:)(a1 + 120);
  AsyncEvent.post(_:)(a1 + 64);
  sub_4D1AC();
  swift_storeEnumTagMultiPayload(v46, v62, 3LL);
  SyncEvent.post(_:)(v46);
  sub_14C60(v46, type metadata accessor for ShelfPagePresenter.State);
}

uint64_t sub_4C350()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v66[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_5F6C(&qword_7CB08);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v66[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for JSServiceRequest(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v66[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_502FC(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination, (uint64_t)v7, &qword_7CB08);
  if (sub_6028((uint64_t)v7, 1LL, v8) == 1)
  {
    sub_14C38((uint64_t)v7, &qword_7CB08);
    uint64_t v11 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v12 = type metadata accessor for LogMessage(0LL);
    uint64_t v13 = swift_allocObject( v11,  ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v12 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = xmmword_5CD80;
    uint64_t v67 = type metadata accessor for ShelfPagePresenter(0LL);
    v66[0] = v1;
    uint64_t v14 = swift_retain(v1);
    id v15 = (id)AMSLogKey(v14);
    if (v15)
    {
      char v17 = v15;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);
      uint64_t v20 = v19;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v21._countAndFlagsBits = 0LL;
      v21._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t v22 = v67;
      uint64_t v23 = sub_7A94(v66, v67);
      uint64_t DynamicType = swift_getDynamicType(v23, v22, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v69 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_14C38((uint64_t)&v69, &qword_7DDE0);
      v25._countAndFlagsBits = 5972026LL;
      v25._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v69 = v18;
      uint64_t v70 = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_14C38((uint64_t)&v69, &qword_7DDE0);
      uint64_t v26 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v43._countAndFlagsBits = 0LL;
      v43._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      uint64_t v44 = v67;
      uint64_t v45 = sub_7A94(v66, v67);
      uint64_t v46 = swift_getDynamicType(v45, v44, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v46);
      uint64_t v69 = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_14C38((uint64_t)&v69, &qword_7DDE0);
      uint64_t v26 = 58LL;
    }

    unint64_t v47 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v26);
    LogMessage.init(stringInterpolation:)(v4);
    type metadata accessor for Log();
    sub_62AC(v66);
    LogMessage.init(stringLiteral:)(0xD00000000000002ALL, 0x8000000000065160LL);
    sub_2679C(v13);
    return swift_bridgeObjectRelease(v13);
  }

  else
  {
    sub_50174((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for JSServiceRequest);
    uint64_t v27 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v28 = type metadata accessor for LogMessage(0LL);
    uint64_t v29 = swift_allocObject( v27,  ((*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v28 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v28 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v29 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
    uint64_t v67 = type metadata accessor for ShelfPagePresenter(0LL);
    v66[0] = v1;
    uint64_t v30 = swift_retain(v1);
    id v31 = (id)AMSLogKey(v30);
    if (v31)
    {
      uint64_t v33 = v31;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31, v32);
      uint64_t v36 = v35;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v37._countAndFlagsBits = 0LL;
      v37._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      uint64_t v38 = v67;
      uint64_t v39 = sub_7A94(v66, v67);
      uint64_t v40 = swift_getDynamicType(v39, v38, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v40);
      uint64_t v69 = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_14C38((uint64_t)&v69, &qword_7DDE0);
      v41._countAndFlagsBits = 5972026LL;
      v41._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v69 = v34;
      uint64_t v70 = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_14C38((uint64_t)&v69, &qword_7DDE0);
      uint64_t v42 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v49._countAndFlagsBits = 0LL;
      v49._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      uint64_t v50 = v67;
      uint64_t v51 = sub_7A94(v66, v67);
      uint64_t v52 = swift_getDynamicType(v51, v50, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v52);
      uint64_t v69 = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_14C38((uint64_t)&v69, &qword_7DDE0);
      uint64_t v42 = 58LL;
    }

    unint64_t v53 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v42);
    LogMessage.init(stringInterpolation:)(v4);
    type metadata accessor for Log();
    sub_62AC(v66);
    LogMessage.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000000065190LL);
    uint64_t v67 = v8;
    uint64_t v54 = sub_7BA4(v66);
    sub_501A8((uint64_t)v10, (uint64_t)v54, (uint64_t (*)(void))&type metadata accessor for JSServiceRequest);
    static LogMessage.safe(_:)(v66);
    sub_14C38((uint64_t)v66, &qword_7DDE0);
    sub_2679C(v29);
    swift_bridgeObjectRelease(v29);
    uint64_t v55 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_objectGraph);
    uint64_t v56 = type metadata accessor for BaseObjectGraph(0LL);
    inject<A, B>(_:from:)(&type metadata for JSService, v55, &type metadata for JSService, v56);
    uint64_t v57 = v66[0];
    uint64_t v58 = type metadata accessor for ShelfPage(0LL);
    sub_6A24((unint64_t *)&qword_7F1D8, type metadata accessor for ShelfPage, (uint64_t)&unk_5F758);
    JSService.perform<A>(request:)(v10, v57, v58, v59);
    uint64_t v60 = swift_allocObject(&unk_75428, 24LL, 7LL);
    swift_weakInit(v60 + 16, v1);
    uint64_t v61 = swift_allocObject(&unk_75428, 24LL, 7LL);
    swift_weakInit(v61 + 16, v1);
    unint64_t v62 = sub_3CABC();
    uint64_t v63 = swift_retain(v61);
    uint64_t v64 = static OS_dispatch_queue.main.getter(v63);
    uint64_t v67 = v62;
    uint64_t v68 = &protocol witness table for OS_dispatch_queue;
    v66[0] = v64;
    Promise.then(perform:orCatchError:on:)(sub_501C8, v60, sub_501D0, v61, v66);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_14C60((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for JSServiceRequest);
    sub_62AC(v66);
    return swift_release();
  }

void sub_4C9F4()
{
}

void sub_4CA18()
{
}

void sub_4CA3C(void (*a1)(uint64_t, void *))
{
  uint64_t v2 = sub_505B8();
  a1(v2, &protocol witness table for PageMetricsPresenter);
  sub_6D3C();
}

uint64_t sub_4CA70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v3);
  if (result)
  {
    sub_4BDA8(a1);
    return swift_release();
  }

  return result;
}

uint64_t sub_4CACC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v3);
  if (result)
  {
    sub_4CB28(a1);
    return swift_release();
  }

  return result;
}

uint64_t sub_4CB28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_5F6C(&qword_7CB08);
  __chkstk_darwin(v4);
  uint64_t v74 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v77 = type metadata accessor for ShelfPagePresenter.State(0LL);
  __chkstk_darwin(v77);
  uint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v69 - v9);
  uint64_t v11 = sub_5F6C(&qword_7D5C0);
  __chkstk_darwin(v11);
  uint64_t v70 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Bag(0LL);
  uint64_t v72 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v71 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v73 = (char *)&v69 - v16;
  uint64_t v17 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v21 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v22 = swift_allocObject( v20,  ((*(unsigned __int8 *)(v21 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
        + 3LL * *(void *)(v21 + 72),
          *(unsigned __int8 *)(v21 + 80) | 7LL);
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v84 = type metadata accessor for ShelfPagePresenter(0LL);
  v83[0] = v2;
  uint64_t v23 = swift_retain(v2);
  id v24 = (id)AMSLogKey(v23);
  uint64_t v75 = v10;
  uint64_t v76 = v7;
  if (v24)
  {
    uint64_t v26 = v24;
    uint64_t v27 = v2;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);
    uint64_t v30 = v29;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v31._countAndFlagsBits = 0LL;
    v31._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    uint64_t v32 = v84;
    uint64_t v33 = sub_7A94(v83, v84);
    uint64_t DynamicType = swift_getDynamicType(v33, v32, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v81[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v81);
    sub_14C38((uint64_t)v81, &qword_7DDE0);
    v35._countAndFlagsBits = 5972026LL;
    v35._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t MetatypeMetadata = &type metadata for String;
    v81[0] = v28;
    v81[1] = v30;
    uint64_t v2 = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v81);
    sub_14C38((uint64_t)v81, &qword_7DDE0);
    uint64_t v36 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v37._countAndFlagsBits = 0LL;
    v37._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    uint64_t v38 = v84;
    uint64_t v39 = sub_7A94(v83, v84);
    uint64_t v40 = swift_getDynamicType(v39, v38, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v40);
    v81[0] = v40;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v81);
    sub_14C38((uint64_t)v81, &qword_7DDE0);
    uint64_t v36 = 58LL;
  }

  unint64_t v41 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v36);
  LogMessage.init(stringInterpolation:)(v19);
  type metadata accessor for Log();
  sub_62AC(v83);
  LogMessage.init(stringLiteral:)(0xD000000000000018LL, 0x8000000000065140LL);
  swift_getErrorValue(a1, v80, &v78);
  uint64_t v42 = v78;
  uint64_t v43 = v79;
  uint64_t v84 = v79;
  uint64_t v44 = sub_7BA4(v83);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16LL))(v44, v42, v43);
  static LogMessage.safe(_:)(v83);
  sub_14C38((uint64_t)v83, &qword_7DDE0);
  sub_2679C(v22);
  swift_bridgeObjectRelease(v22);
  v81[0] = a1;
  swift_errorRetain(a1);
  uint64_t v45 = sub_5F6C(&qword_7D5D0);
  if (swift_dynamicCast(v83, v81, v45, &type metadata for ShelfPageError, 6LL))
  {
    uint64_t v47 = v83[0];
    uint64_t v46 = v83[1];
    uint64_t v48 = *(void *)(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_objectGraph);
    uint64_t v49 = type metadata accessor for BaseObjectGraph(0LL);
    uint64_t v50 = v73;
    inject<A, B>(_:from:)(v13, v48, v13, v49);
    uint64_t v52 = v71;
    uint64_t v51 = v72;
    unint64_t v53 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    v53(v71, v50, v13);
    if (!v46)
    {
      type metadata accessor for Localizations();
      uint64_t v54 = (uint64_t)v70;
      v53(v70, v52, v13);
      sub_5FEC(v54, 0LL, 1LL, v13);
      uint64_t v47 = sub_263F0(0xD000000000000015LL, 0x8000000000063F30LL, v54);
      uint64_t v46 = v55;
      sub_14C38(v54, &qword_7D5C0);
    }

    uint64_t v56 = *(void (**)(char *, uint64_t))(v51 + 8);
    v56(v52, v13);
    uint64_t v57 = v77;
    uint64_t v58 = (uint64_t)v75;
    *uint64_t v75 = v47;
    *(void *)(v58 + 8) = v46;
    swift_storeEnumTagMultiPayload(v58, v57, 0LL);
    SyncEvent.post(_:)(v58);
    sub_14C60(v58, type metadata accessor for ShelfPagePresenter.State);
    return ((uint64_t (*)(char *, uint64_t))v56)(v50, v13);
  }

  else
  {
    uint64_t v60 = sub_5F6C(&qword_7F390);
    uint64_t v61 = (uint64_t)v76;
    uint64_t v62 = (uint64_t)v76 + *(int *)(v60 + 48);
    *uint64_t v76 = a1;
    uint64_t v63 = v74;
    sub_502FC(v2 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination, v74, &qword_7CB08);
    uint64_t v64 = type metadata accessor for JSServiceRequest(0LL);
    if (sub_6028(v63, 1LL, v64) == 1)
    {
      swift_errorRetain(a1);
      sub_14C38(v63, &qword_7CB08);
      uint64_t v65 = type metadata accessor for URL(0LL);
      sub_5FEC(v62, 1LL, 1LL, v65);
    }

    else
    {
      sub_502FC(v63 + *(int *)(v64 + 24), v62, (uint64_t *)&unk_7DE50);
      swift_errorRetain(a1);
      sub_14C60(v63, (uint64_t (*)(void))&type metadata accessor for JSServiceRequest);
    }

    uint64_t v66 = v77;
    uint64_t v67 = (uint64_t (**)())(v61 + *(int *)(v60 + 64));
    uint64_t v68 = swift_allocObject(&unk_75428, 24LL, 7LL);
    swift_weakInit(v68 + 16, v2);
    *uint64_t v67 = sub_4DFE0;
    v67[1] = (uint64_t (*)())v68;
    swift_storeEnumTagMultiPayload(v61, v66, 1LL);
    swift_retain(v68);
    SyncEvent.post(_:)(v61);
    sub_14C60(v61, type metadata accessor for ShelfPagePresenter.State);
    return swift_release();
  }

void sub_4D1AC()
{
  char v1 = v0;
  sub_5048C();
  sub_6D6C();
  __chkstk_darwin(v2);
  sub_12718();
  sub_5F6C(&qword_7E9A0);
  sub_6D6C();
  __chkstk_darwin(v3);
  sub_12718();
  uint64_t v14 = sub_19068();
  __chkstk_darwin(v14);
  sub_503FC();
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  sub_50464();
  sub_30980();
  __chkstk_darwin(v6);
  sub_5F6C(&qword_7CB10);
  sub_6D6C();
  __chkstk_darwin(v7);
  sub_2DD94();
  sub_30980();
  __chkstk_darwin(v8);
  sub_50464();
  sub_30980();
  __chkstk_darwin(v9);
  sub_50464();
  sub_30980();
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  __asm { BR              X10 }

void sub_4D38C()
{
  *(_BYTE *)(v3 + swift_weakDestroy(v0 + 16) = 0;
  uint64_t v7 = v3 + *(void *)(v0 + 1392);
  sub_50390(v7, v6 - 112);
  sub_502FC(v7, (uint64_t)v2, &qword_7CB10);
  if (sub_50370((uint64_t)v2))
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v8 = (void *)*v2;
    sub_504B4();
  }

  sub_14C38((uint64_t)v2, &qword_7CB10);
  *(void *)(v6 - 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v8;
  sub_502FC(v7, v5, &qword_7CB10);
  sub_14C38(v5, &qword_7CB10);
  sub_4A774();
  sub_50630();
  uint64_t v10 = (uint64_t *)v9;
  if (!sub_50370(v9))
  {
    uint64_t v11 = *(void *)(v6 - 160);
    uint64_t v12 = *v10;
    *uint64_t v10 = v11;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRelease(v12);
  }

  sub_504BC();
  sub_505CC(v7, v13, &qword_7CB10);
  if (sub_50370(v4))
  {
    uint64_t v14 = swift_bridgeObjectRelease(*(void *)(v6 - 160));
    sub_50518(v14, &qword_7CB10);
    uint64_t v15 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v16 = *(void *)(v4 + 8);
    uint64_t v17 = swift_bridgeObjectRetain(v16);
    sub_50518(v17, &qword_7CB10);
    int64_t v18 = *(void *)(v16 + 16);
    if (v18)
    {
      *(void *)(v6 - 14sub_62AC(v0 + 4) = _swiftEmptyArrayStorage;
      sub_29204(0LL, v18, 0);
      sub_5042C();
      *(void *)(v6 - 176) = v16;
      uint64_t v20 = v16 + v19;
      uint64_t v22 = *(void *)(v21 + 72);
      uint64_t v15 = *(void **)(v6 - 144);
      *(void *)(v6 - 168) = v22;
      do
      {
        sub_501A8(v20, (uint64_t)v1, type metadata accessor for Shelf);
        uint64_t v23 = *v1;
        uint64_t v24 = v1[1];
        sub_50540();
        sub_14C60((uint64_t)v1, type metadata accessor for Shelf);
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
        {
          sub_29204(0LL, v15[2] + 1LL, 1);
          uint64_t v22 = *(void *)(v6 - 168);
          uint64_t v15 = *(void **)(v6 - 144);
        }

        unint64_t v26 = v15[2];
        unint64_t v25 = v15[3];
        if (v26 >= v25 >> 1)
        {
          sub_29204((char *)(v25 > 1), v26 + 1, 1);
          uint64_t v22 = *(void *)(v6 - 168);
          uint64_t v15 = *(void **)(v6 - 144);
        }

        v15[2] = v26 + 1;
        uint64_t v27 = &v15[2 * v26];
        void v27[4] = v23;
        void v27[5] = v24;
        v20 += v22;
        --v18;
      }

      while (v18);
      swift_bridgeObjectRelease(*(void *)(v6 - 176));
    }

    else
    {
      sub_23A00();
      uint64_t v15 = _swiftEmptyArrayStorage;
    }

    swift_bridgeObjectRelease(*(void *)(v6 - 160));
  }

  uint64_t v28 = *(void *)(v6 - 192);
  sub_4A840((uint64_t)v15);
  uint64_t v29 = (void (*)(uint64_t, void))sub_4AFAC(v6 - 144);
  uint64_t v31 = v30;
  if (!sub_6028(v30, 1LL, *(void *)(v6 - 216)))
  {
    uint64_t v32 = *(void *)(v31 + 8);
    *(void *)(v31 + 8) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v32);
  }

  v29(v6 - 144, 0LL);
  uint64_t v33 = v28 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  sub_50390(v33, v6 - 144);
  uint64_t v34 = *(void *)(v6 - 248);
  sub_505CC(v33, v35, &qword_7CB10);
  if (sub_50370(v34))
  {
    uint64_t v36 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v36 = *(void **)(v34 + 16);
    swift_bridgeObjectRetain(v36);
  }

  uint64_t v37 = *(void *)(v6 - 256);
  uint64_t v38 = *(void ***)(v6 - 264);
  sub_503DC(v34);
  sub_502FC(v33, (uint64_t)v38, &qword_7CB10);
  if (sub_50370((uint64_t)v38))
  {
    uint64_t v39 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v39 = *v38;
    sub_504B4();
  }

  sub_14C38((uint64_t)v38, &qword_7CB10);
  sub_502FC(v33, v37, &qword_7CB10);
  if (sub_50370(v37))
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v40 = *(void **)(v37 + 8);
    swift_bridgeObjectRetain(v40);
  }

  sub_14C38(v37, &qword_7CB10);
  sub_3C3AC((uint64_t)v36, (uint64_t)v39, (uint64_t)v40);
  sub_23A00();
  sub_190B8();
  swift_bridgeObjectRelease(v39);
  sub_9ABC();
}

uint64_t sub_4DB00(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v1);
  if (result)
  {
    sub_4DB54();
    return swift_release();
  }

  return result;
}

uint64_t sub_4DB54()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ShelfPagePresenter.State(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v9 = type metadata accessor for LogMessage(0LL);
  uint64_t v10 = swift_allocObject( v8,  ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v9 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = xmmword_5CD80;
  uint64_t v33 = type metadata accessor for ShelfPagePresenter(0LL);
  v32[0] = v1;
  uint64_t v11 = swift_retain(v1);
  id v12 = (id)AMSLogKey(v11);
  if (v12)
  {
    uint64_t v14 = v12;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);
    uint64_t v17 = v16;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v18._countAndFlagsBits = 0LL;
    v18._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    uint64_t v19 = v33;
    uint64_t v20 = sub_7A94(v32, v33);
    uint64_t DynamicType = swift_getDynamicType(v20, v19, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v30[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v30);
    sub_14C38((uint64_t)v30, &qword_7DDE0);
    v22._countAndFlagsBits = 5972026LL;
    v22._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t MetatypeMetadata = &type metadata for String;
    v30[0] = v15;
    v30[1] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v30);
    sub_14C38((uint64_t)v30, &qword_7DDE0);
    uint64_t v23 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v24._countAndFlagsBits = 0LL;
    v24._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t v25 = v33;
    unint64_t v26 = sub_7A94(v32, v33);
    uint64_t v27 = swift_getDynamicType(v26, v25, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v27);
    v30[0] = v27;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v30);
    sub_14C38((uint64_t)v30, &qword_7DDE0);
    uint64_t v23 = 58LL;
  }

  unint64_t v28 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v23);
  LogMessage.init(stringInterpolation:)(v7);
  type metadata accessor for Log();
  sub_62AC(v32);
  LogMessage.init(stringLiteral:)(0x676E697972746552LL, 0xE800000000000000LL);
  sub_2679C(v10);
  swift_bridgeObjectRelease(v10);
  *uint64_t v4 = 0;
  swift_storeEnumTagMultiPayload(v4, v2, 2LL);
  SyncEvent.post(_:)(v4);
  sub_14C60((uint64_t)v4, type metadata accessor for ShelfPagePresenter.State);
  return sub_4C350();
}

void sub_4DE24()
{
}

void sub_4DE48()
{
}

void sub_4DE64()
{
}

void *sub_4DE80(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_4DEBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_4DEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7CB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_4DF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7CB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_4DF80()
{
  unint64_t result = qword_7F478;
  if (!qword_7F478)
  {
    unint64_t result = swift_getWitnessTable(&unk_5FE24, &type metadata for ShelfPageError);
    atomic_store(result, (unint64_t *)&qword_7F478);
  }

  return result;
}

uint64_t sub_4DFBC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_4DFE0()
{
  return sub_4DB00(v0);
}

void sub_4DFE8()
{
  char v3 = v2;
  char v5 = v4;
  sub_505B0();
  sub_6D6C();
  __chkstk_darwin(v6);
  sub_504E0();
  uint64_t v7 = sub_5F6C((uint64_t *)&unk_7D650);
  sub_50424();
  sub_5059C();
  uint64_t v10 = swift_allocObject(v7, (v9 & ~v8) + 5 * v1, v8 | 7);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = xmmword_5DB10;
  unint64_t v26 = (ValueMetadata *)type metadata accessor for ShelfPagePresenter(0LL);
  v25[0] = v0;
  uint64_t v11 = swift_retain(v0);
  id v12 = (id)AMSLogKey(v11);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    sub_C3B0();
    sub_C3E8();
    uint64_t v17 = v26;
    Swift::String v18 = sub_7A94(v25, (uint64_t)v26);
    uint64_t v19 = sub_2C92C((uint64_t)v18, (uint64_t)v17);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    v23[0] = v19;
    sub_C3F4();
    sub_503E4((uint64_t)v23);
    sub_C378();
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v14;
    v23[1] = v16;
    sub_C3F4();
    sub_503E4((uint64_t)v23);
    uint64_t v20 = 93LL;
  }

  else
  {
    sub_C390();
    sub_C3E8();
    uint64_t v21 = v26;
    Swift::String v22 = sub_7A94(v25, (uint64_t)v26);
    sub_2C92C((uint64_t)v22, (uint64_t)v21);
    uint64_t MetatypeMetadata = (void *)sub_50588();
    v23[0] = v21;
    sub_C3F4();
    sub_14C38((uint64_t)v23, &qword_7DDE0);
    uint64_t v20 = 58LL;
  }

  sub_50494(v20);
  sub_503F4();
  sub_238FC();
  sub_62AC(v25);
  LogMessage.init(stringLiteral:)(0xD000000000000026LL, 0x8000000000065360LL);
  unint64_t v26 = (ValueMetadata *)&type metadata for Bool;
  LOBYTE(v25[0]) = v5 & 1;
  static LogMessage.safe(_:)(v25);
  sub_50444((uint64_t)v25);
  LogMessage.init(stringLiteral:)(0x3A656C797473LL, 0xE600000000000000LL);
  unint64_t v26 = &type metadata for ActivityShelfPageAction.Style;
  LOBYTE(v25[0]) = v3;
  static LogMessage.safe(_:)(v25);
  sub_50444((uint64_t)v25);
  sub_2679C(v10);
  swift_bridgeObjectRelease(v10);
  if ((v5 & 1) != 0) {
    sub_4E23C(v3);
  }
  else {
    sub_4E2F4();
  }
  sub_9ABC();
}

void sub_4E23C(char a1)
{
  uint64_t v2 = type metadata accessor for ShelfPagePresenter.State(0LL);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    if (a1 == 1) {
      char v6 = 2;
    }
    else {
      char v6 = 1;
    }
    *char v5 = v6;
  }

  else
  {
    *char v5 = 0;
  }

  swift_storeEnumTagMultiPayload(v5, v3, 2LL);
  SyncEvent.post(_:)(v5);
  sub_14C60((uint64_t)v5, type metadata accessor for ShelfPagePresenter.State);
}

void sub_4E2F4()
{
  uint64_t v0 = type metadata accessor for ShelfPagePresenter.State(0LL);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_storeEnumTagMultiPayload(v2, v3, 3LL);
  SyncEvent.post(_:)(v2);
  sub_14C60((uint64_t)v2, type metadata accessor for ShelfPagePresenter.State);
}

void sub_4E37C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  LODWORD(v18sub_62AC(v0 + 4) = v25;
  uint64_t v27 = v26;
  uint64_t v187 = v28;
  uint64_t v185 = v29;
  uint64_t v31 = v30;
  sub_505B0();
  sub_6D6C();
  __chkstk_darwin(v32);
  sub_504F8();
  uint64_t v33 = sub_19068();
  uint64_t v167 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  sub_503FC();
  uint64_t v36 = (uint64_t *)(v34 - v35);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v164 - v38;
  __chkstk_darwin(v40);
  sub_50464();
  uint64_t v173 = v41;
  sub_30980();
  __chkstk_darwin(v42);
  uint64_t v44 = (uint64_t *)((char *)&v164 - v43);
  uint64_t v186 = sub_5048C();
  sub_6D6C();
  __chkstk_darwin(v45);
  sub_503FC();
  uint64_t v48 = v46 - v47;
  __chkstk_darwin(v49);
  sub_444D8();
  uint64_t v183 = v50;
  sub_5F6C(&qword_7CB10);
  sub_6D6C();
  __chkstk_darwin(v51);
  sub_2DD94();
  uint64_t v171 = v52;
  sub_30980();
  __chkstk_darwin(v53);
  sub_444D8();
  uint64_t v182 = v54;
  sub_5F6C(&qword_7E9A0);
  sub_6D6C();
  __chkstk_darwin(v55);
  sub_503FC();
  __chkstk_darwin(v56);
  sub_50464();
  uint64_t v172 = v57;
  sub_30980();
  __chkstk_darwin(v58);
  uint64_t v60 = (char *)&v164 - v59;
  __chkstk_darwin(v61);
  sub_444D8();
  uint64_t v168 = v62;
  LODWORD(v62) = *(unsigned __int8 *)(v24 + 16);
  uint64_t v165 = v39;
  uint64_t v169 = v48;
  uint64_t v170 = v63;
  uint64_t v166 = v36;
  uint64_t v181 = v44;
  if (!(_DWORD)v62)
  {
    if ((_BYTE)v27)
    {
      if (v27 != 1)
      {
        swift_bridgeObjectRelease(0xE600000000000000LL);
LABEL_9:
        uint64_t v27 = 1LL;
        goto LABEL_10;
      }

      uint64_t v64 = 0xE400000000000000LL;
      uint64_t v65 = 2036625250LL;
    }

    else
    {
      uint64_t v65 = 0x726564616568LL;
      uint64_t v64 = 0xE600000000000000LL;
    }

    char v66 = sub_23998(v65, v64, 0x7265746F6F66LL, 0xE600000000000000LL);
    sub_23A00();
    if ((v66 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

uint64_t sub_4F140(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_4AFAC((uint64_t)v58);
  uint64_t v17 = v16;
  uint64_t v18 = type metadata accessor for ShelfPage(0LL);
  int v19 = sub_6028(v17, 1LL, v18);
  uint64_t v54 = a3;
  if (!v19) {
    sub_37558(a1, a3, a4, a5);
  }
  ((void (*)(void *, void))v15)(v58, 0LL);
  uint64_t v55 = a4;
  int v56 = a5;
  uint64_t v20 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v21 = type metadata accessor for LogMessage(0LL);
  uint64_t v22 = swift_allocObject( v20,  ((*(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL))
        + 9LL * *(void *)(*(void *)(v21 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = xmmword_600A0;
  uint64_t v53 = v22;
  uint64_t v59 = (void *)type metadata accessor for ShelfPagePresenter(0LL);
  uint64_t v57 = a2;
  v58[0] = a2;
  uint64_t v23 = swift_retain(a2);
  id v24 = (id)AMSLogKey(v23);
  if (v24)
  {
    uint64_t v26 = v24;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);
    unint64_t v29 = v28;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v30._countAndFlagsBits = 0LL;
    v30._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t v31 = v59;
    uint64_t v32 = sub_7A94(v58, (uint64_t)v59);
    uint64_t DynamicType = swift_getDynamicType(v32, v31, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v60 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v60);
    sub_14C38((uint64_t)&v60, &qword_7DDE0);
    v34._countAndFlagsBits = 5972026LL;
    v34._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v60 = v27;
    unint64_t v61 = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v60);
    sub_14C38((uint64_t)&v60, &qword_7DDE0);
    uint64_t v35 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v36._countAndFlagsBits = 0LL;
    v36._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    uint64_t v37 = v59;
    uint64_t v38 = sub_7A94(v58, (uint64_t)v59);
    uint64_t v39 = swift_getDynamicType(v38, v37, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    uint64_t v60 = v39;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v60);
    sub_14C38((uint64_t)&v60, &qword_7DDE0);
    uint64_t v35 = 58LL;
  }

  unint64_t v40 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v35);
  LogMessage.init(stringInterpolation:)(v14);
  type metadata accessor for Log();
  sub_62AC(v58);
  LogMessage.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000000065320LL);
  uint64_t v63 = a6;
  uint64_t v41 = *a6;
  uint64_t v59 = &type metadata for Int;
  v58[0] = v41;
  static LogMessage.safe(_:)(v58);
  sub_14C38((uint64_t)v58, &qword_7DDE0);
  LogMessage.init(stringLiteral:)(0xD000000000000015LL, 0x8000000000065340LL);
  uint64_t v42 = a1[3];
  uint64_t v43 = a1[4];
  sub_7A94(a1, v42);
  uint64_t v59 = &type metadata for AnyHashable;
  v58[0] = swift_allocObject(&unk_75450, 56LL, 7LL);
  dispatch thunk of ComponentModel.id.getter(v42, v43);
  static LogMessage.safe(_:)(v58);
  sub_14C38((uint64_t)v58, &qword_7DDE0);
  LogMessage.init(stringLiteral:)(0x3A666C656873LL, 0xE600000000000000LL);
  uint64_t v59 = &type metadata for String;
  v58[0] = v54;
  v58[1] = v55;
  swift_bridgeObjectRetain(v55);
  static LogMessage.safe(_:)(v58);
  sub_14C38((uint64_t)v58, &qword_7DDE0);
  LogMessage.init(stringLiteral:)(0x6E656D6563616C70LL, 0xEA00000000003A74LL);
  uint64_t v59 = &unk_73F10;
  LOBYTE(v58[0]) = v56;
  static LogMessage.safe(_:)(v58);
  sub_14C38((uint64_t)v58, &qword_7DDE0);
  uint64_t v44 = v53;
  sub_2679C(v53);
  swift_bridgeObjectRelease(v44);
  uint64_t v45 = a1[3];
  uint64_t v46 = a1[4];
  sub_7A94(a1, v45);
  dispatch thunk of ComponentModel.id.getter(v45, v46);
  if (swift_dynamicCast(&v60, v58, &type metadata for AnyHashable, &type metadata for String, 6LL))
  {
    uint64_t v47 = v60;
    unint64_t v48 = v61;
  }

  else
  {
    uint64_t v47 = 0LL;
    unint64_t v48 = 0xE000000000000000LL;
  }

  uint64_t v49 = (uint64_t *)(v57 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_lastItemId);
  uint64_t v50 = *(void *)(v57 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_lastItemId + 8);
  *uint64_t v49 = v47;
  v49[1] = v48;
  uint64_t result = swift_bridgeObjectRelease(v50);
  if (__OFADD__(*v63, 1LL)) {
    __break(1u);
  }
  else {
    ++*v63;
  }
  return result;
}

void sub_4F62C()
{
  char v3 = v2;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_505B0();
  sub_6D6C();
  __chkstk_darwin(v8);
  sub_504E0();
  sub_5F6C(&qword_7CB10);
  sub_6D6C();
  __chkstk_darwin(v9);
  sub_F76C();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  sub_50390(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage, (uint64_t)&v67);
  sub_502FC(v13, v12, &qword_7CB10);
  sub_5048C();
  uint64_t v14 = sub_50574(v12);
  if ((_DWORD)v14)
  {
    sub_50564(v14, &qword_7CB10);
    sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v15 = sub_50424();
    uint64_t v16 = (__n128 *)sub_5039C(v15);
    v69[3] = sub_50530(v16, (__n128)xmmword_5CD80);
    v69[0] = v0;
    uint64_t v17 = sub_50528();
    id v18 = (id)AMSLogKey(v17);
    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);
      sub_5063C();
      sub_C3B0();
      sub_C3E8();
      uint64_t v20 = v69[3];
      uint64_t v21 = sub_7A94(v69, v69[3]);
      sub_2C92C((uint64_t)v21, v20);
      void v68[3] = sub_50588();
      v68[0] = v20;
      sub_504C8();
      sub_50444((uint64_t)v68);
      sub_C378();
      void v68[3] = &type metadata for String;
      v68[0] = v0;
      v68[1] = v7;
      sub_504C8();
      sub_50444((uint64_t)v68);
      uint64_t v22 = 93LL;
    }

    else
    {
      sub_C390();
      sub_C3E8();
      uint64_t v27 = v69[3];
      unint64_t v28 = sub_7A94(v69, v69[3]);
      sub_2C92C((uint64_t)v28, v27);
      void v68[3] = sub_50648();
      v68[0] = v27;
      sub_504C8();
      sub_14C38((uint64_t)v68, &qword_7DDE0);
      uint64_t v22 = 58LL;
    }

    sub_50494(v22);
    sub_503F4();
    sub_238FC();
    sub_62AC(v69);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(70LL, 1LL);
    sub_505E8(0xD000000000000046LL, (uint64_t)"Can't replace naivgation bar button: navigation bar is missing. Kind: ");
    v69[3] = &type metadata for ReplaceNavigationBarItemShelfPageAction.NavigationBarKind;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v69);
    sub_14C38((uint64_t)v69, &qword_7DDE0);
    sub_C3E8();
    sub_503F4();
    sub_267BC((uint64_t)v16);
    sub_23A00();
    goto LABEL_30;
  }

  uint64_t v23 = sub_501D8((char *)(v12 + 120), (char *)v68);
  sub_50564((uint64_t)v23, &qword_7CB10);
  id v24 = memcpy(v69, v68, 0x270uLL);
  if ((v3 & 1) != 0)
  {
    if (v5) {
      unint64_t v29 = &v69[57];
    }
    else {
      unint64_t v29 = &v69[38];
    }
    sub_50580((uint64_t)v24, &qword_7CB30);
    sub_502C0(v7, (uint64_t)v29);
    goto LABEL_19;
  }

  uint64_t v25 = v69[56];
  if (!v69[56])
  {
    sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v30 = sub_50424();
    uint64_t v31 = (__n128 *)sub_5039C(v30);
    void v68[3] = sub_50530(v31, (__n128)xmmword_5CD80);
    v68[0] = v0;
    uint64_t v32 = sub_50528();
    id v33 = (id)AMSLogKey(v32);
    if (v33)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);
      sub_5063C();
      sub_C3B0();
      sub_C3E8();
      uint64_t v35 = v68[3];
      Swift::String v36 = sub_7A94(v68, v68[3]);
      sub_2C92C((uint64_t)v36, v35);
      uint64_t MetatypeMetadata = (void *)sub_50588();
      uint64_t v64 = v35;
      sub_5043C();
      sub_50444((uint64_t)&v64);
      sub_C378();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v64 = v0;
      uint64_t v65 = v7;
      sub_5043C();
      sub_50444((uint64_t)&v64);
      uint64_t v37 = 93LL;
    }

    else
    {
      sub_C390();
      sub_C3E8();
      uint64_t v56 = v68[3];
      uint64_t v57 = sub_7A94(v68, v68[3]);
      sub_2C92C((uint64_t)v57, v56);
      uint64_t MetatypeMetadata = (void *)sub_50648();
      uint64_t v64 = v56;
      sub_5043C();
      sub_14C38((uint64_t)&v64, &qword_7DDE0);
      uint64_t v37 = 58LL;
    }

    sub_50494(v37);
    sub_503F4();
    sub_238FC();
    sub_62AC(v68);
    sub_505C0(0xD00000000000003DLL);
    sub_267BC((uint64_t)v31);
    uint64_t v58 = (uint64_t)v31;
    goto LABEL_28;
  }

  if (*(void *)(v69[56] + 16LL) <= (int64_t)v5)
  {
    uint64_t v41 = sub_5F6C((uint64_t *)&unk_7D650);
    sub_50424();
    sub_5059C();
    uint64_t v44 = swift_allocObject(v41, (v43 & ~v42) + 2 * v1, v42 | 7);
    *(_OWORD *)(v44 + swift_weakDestroy(v0 + 16) = xmmword_5CD80;
    void v68[3] = type metadata accessor for ShelfPagePresenter(0LL);
    v68[0] = v0;
    swift_bridgeObjectRetain(v25);
    uint64_t v45 = sub_50528();
    id v46 = (id)AMSLogKey(v45);
    if (v46)
    {
      unint64_t v48 = v46;
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46, v47);
      uint64_t v51 = v50;

      sub_C3B0();
      sub_C3E8();
      uint64_t v52 = v68[3];
      uint64_t v53 = sub_7A94(v68, v68[3]);
      uint64_t v54 = sub_2C92C((uint64_t)v53, v52);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v64 = v54;
      sub_5043C();
      sub_503E4((uint64_t)&v64);
      sub_C378();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v64 = v49;
      uint64_t v65 = v51;
      sub_5043C();
      sub_503E4((uint64_t)&v64);
      uint64_t v55 = 93LL;
    }

    else
    {
      sub_C390();
      sub_C3E8();
      uint64_t v59 = v68[3];
      uint64_t v60 = sub_7A94(v68, v68[3]);
      sub_2C92C((uint64_t)v60, v59);
      uint64_t MetatypeMetadata = (void *)sub_50648();
      uint64_t v64 = v59;
      sub_5043C();
      sub_14C38((uint64_t)&v64, &qword_7DDE0);
      uint64_t v55 = 58LL;
    }

    sub_50494(v55);
    sub_503F4();
    sub_238FC();
    sub_62AC(v68);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(89LL, 2LL);
    sub_505E8(0xD000000000000042LL, (uint64_t)"Can't replace navigation bar otherButtons: index is out of range: ");
    void v68[3] = &type metadata for Int;
    v68[0] = v5;
    sub_504C8();
    sub_50650();
    v61._object = (void *)0x8000000000065290LL;
    v61._countAndFlagsBits = 0xD000000000000016LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v61);
    uint64_t v62 = *(void *)(v25 + 16);
    swift_bridgeObjectRelease(v25);
    void v68[3] = &type metadata for Int;
    v68[0] = v62;
    sub_504C8();
    sub_50650();
    sub_50494(32LL);
    sub_503F4();
    sub_267BC(v44);
    uint64_t v58 = v44;
LABEL_28:
    swift_bridgeObjectRelease(v58);
LABEL_29:
    sub_50214(v69);
LABEL_30:
    sub_9ABC();
    return;
  }

  uint64_t v26 = swift_bridgeObjectRetain(v69[56]);
  if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) != 0)
  {
    if ((v5 & 0x8000000000000000LL) == 0) {
      goto LABEL_9;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }

  sub_4FCF4();
  uint64_t v25 = v63;
  if ((v5 & 0x8000000000000000LL) != 0) {
    goto LABEL_32;
  }
LABEL_9:
  if (*(void *)(v25 + 16) > v5)
  {
    sub_50248(v7, v25 + 144 * v5 + 32);
    swift_bridgeObjectRelease(v69[56]);
    v69[56] = v25;
LABEL_19:
    uint64_t v38 = sub_4AFAC((uint64_t)v68);
    uint64_t v40 = v39;
    ((void (*)(void *, void))v38)(v68, 0LL);
    SyncEvent.post(_:)(v69);
    goto LABEL_29;
  }

LABEL_33:
  __break(1u);
}

void sub_4FCE0()
{
}

void sub_4FCF4()
{
}

void sub_4FD08()
{
}

void sub_4FD1C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Shelf(0LL);
  __chkstk_darwin(v7);
  uint64_t v39 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v38 = (uint64_t)v35 - v10;
  __chkstk_darwin(v11);
  uint64_t v14 = (void *)((char *)v35 - v13);
  uint64_t v40 = a1;
  uint64_t v15 = *a1;
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_12;
  }
  v35[1] = v3;
  unint64_t v17 = 0LL;
  unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(v12 + 72);
  unint64_t v37 = v18;
  while (1)
  {
    uint64_t v20 = *(void *)(v15 + v18);
    uint64_t v21 = *(void *)(v15 + v18 + 8);
    BOOL v22 = v20 == a2 && v21 == a3;
    if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, a2, a3, 0LL) & 1) != 0) {
      break;
    }
    ++v17;
    v18 += v19;
    if (v16 == v17) {
      goto LABEL_12;
    }
  }

  if (!__OFADD__(v17, 1LL))
  {
    unint64_t v23 = *(void *)(v15 + 16);
    if (v17 + 1 == v23)
    {
LABEL_12:
      swift_bridgeObjectRelease(a3);
      return;
    }

    uint64_t v24 = v19 + v18;
    unint64_t v25 = v17 + 1;
    while (v25 < v23)
    {
      sub_501A8(v15 + v24, (uint64_t)v14, type metadata accessor for Shelf);
      uint64_t v26 = v14[1];
      if (*v14 == a2 && v26 == a3)
      {
        sub_14C60((uint64_t)v14, type metadata accessor for Shelf);
      }

      else
      {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(*v14, v26, a2, a3, 0LL);
        sub_14C60((uint64_t)v14, type metadata accessor for Shelf);
        if ((v28 & 1) == 0)
        {
          if (v25 != v17)
          {
            if ((v17 & 0x8000000000000000LL) != 0) {
              goto LABEL_39;
            }
            uint64_t v29 = *v40;
            unint64_t v30 = *(void *)(*v40 + 16LL);
            if (v17 >= v30) {
              goto LABEL_40;
            }
            uint64_t v36 = v17 * v19;
            sub_501A8(v29 + v37 + v17 * v19, v38, type metadata accessor for Shelf);
            if (v25 >= v30) {
              goto LABEL_41;
            }
            sub_501A8(v29 + v24, v39, type metadata accessor for Shelf);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
            *uint64_t v40 = v29;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_4FD08();
              uint64_t v29 = v34;
              *uint64_t v40 = v34;
            }

            if (v17 >= *(void *)(v29 + 16)) {
              goto LABEL_42;
            }
            sub_50130(v39, v29 + v37 + v36);
            if (v25 >= *(void *)(*v40 + 16LL)) {
              goto LABEL_43;
            }
            sub_50130(v38, *v40 + v24);
          }

          if (__OFADD__(v17++, 1LL)) {
            goto LABEL_38;
          }
        }
      }

      unint64_t v33 = v25 + 1;
      if (__OFADD__(v25, 1LL)) {
        goto LABEL_37;
      }
      uint64_t v15 = *v40;
      unint64_t v23 = *(void *)(*v40 + 16LL);
      ++v25;
      v24 += v19;
      if (v33 == v23) {
        goto LABEL_12;
      }
    }

    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }

  __break(1u);
}

uint64_t sub_5001C(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16LL);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  uint64_t v6 = result;
  uint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v8 = result - a2;
  if (__OFSUB__(0LL, v7))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  if (__OFADD__(v5, v8))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  if (!swift_isUniquelyReferenced_nonNull_native(*v2) || v5 - v7 > *(void *)(v4 + 24) >> 1)
  {
    sub_18CA4();
    uint64_t v4 = v9;
  }

  uint64_t v10 = type metadata accessor for Shelf(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v4 + ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v13 = *(void *)(v11 + 72);
  unint64_t v14 = v12 + v13 * v6;
  uint64_t result = swift_arrayDestroy(v14, v7, v10);
  if (!v7) {
    goto LABEL_13;
  }
  uint64_t v15 = *(void *)(v4 + 16);
  if (__OFSUB__(v15, a2)) {
    goto LABEL_19;
  }
  uint64_t result = sub_18E34(v12 + v13 * a2, v15 - a2, v14);
  uint64_t v16 = *(void *)(v4 + 16);
  BOOL v17 = __OFADD__(v16, v8);
  uint64_t v18 = v16 - v7;
  if (!v17)
  {
    *(void *)(v4 + swift_weakDestroy(v0 + 16) = v18;
LABEL_13:
    *char v2 = v4;
    return result;
  }

uint64_t sub_50130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Shelf(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

void sub_50174(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = sub_19088(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(v3, v4, v5);
  sub_6D3C();
}

void sub_501A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_19088(a1, a2, a3);
  sub_5040C(v3);
  sub_6D3C();
}

uint64_t sub_501C8(uint64_t a1)
{
  return sub_4CA70(a1, v1);
}

uint64_t sub_501D0(uint64_t a1)
{
  return sub_4CACC(a1, v1);
}

char *sub_501D8(char *__src, char *__dst)
{
  return __dst;
}

void *sub_50214(void *a1)
{
  return a1;
}

uint64_t sub_50248(uint64_t a1, uint64_t a2)
{
  return a2;
}

char *sub_50284(char *__src, char *__dst)
{
  return __dst;
}

uint64_t sub_502C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_502FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_5F6C(a3);
  sub_5040C(v3);
  sub_6D3C();
}

uint64_t sub_50328()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_5034C()
{
  uint64_t v1 = *(void *)(v0 - 128);
  char v2 = sub_7A94((void *)(v0 - 152), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_50370(uint64_t a1)
{
  return sub_6028(a1, 1LL, v1);
}

uint64_t sub_5037C(uint64_t a1)
{
  *(void *)(v2 - 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = a1;
  *(void *)(v2 - 18sub_62AC(v0 + 4) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 184);
}

uint64_t sub_50390(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 0LL, 0LL);
}

uint64_t sub_5039C(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + 2LL * *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t sub_503C0(uint64_t a1)
{
  return sub_6028(a1, 1LL, v1);
}

void sub_503DC(uint64_t a1)
{
}

void sub_503E4(uint64_t a1)
{
}

uint64_t sub_503EC()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_503F4()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

  ;
}

uint64_t sub_5040C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16LL))(v1, v2, a1);
}

uint64_t sub_50424()
{
  return type metadata accessor for LogMessage(0LL);
}

  ;
}

uint64_t sub_5043C()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0);
}

void sub_50444(uint64_t a1)
{
}

uint64_t sub_5044C(uint64_t a1)
{
  return sub_6028(a1, 1LL, *(void *)(v1 - 256));
}

uint64_t sub_50458(uint64_t a1)
{
  return sub_6028(a1, 1LL, v1);
}

  ;
}

  ;
}

uint64_t sub_5048C()
{
  return type metadata accessor for ShelfPage(0LL);
}

void sub_50494(uint64_t a1)
{
  unint64_t v1 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

void sub_5049C()
{
}

uint64_t sub_504A8(uint64_t a1, uint64_t a2)
{
  return sub_5FEC(a1, a2, 1LL, v2);
}

uint64_t sub_504B4()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_504BC()
{
  return v0(v1 - 144, 0LL);
}

uint64_t sub_504C8()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 56);
}

uint64_t sub_504D0(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return swift_retain(v1);
}

  ;
}

  ;
}

void sub_50510(uint64_t a1, uint64_t *a2)
{
}

void sub_50518(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_50520()
{
  return SyncEvent.init()();
}

uint64_t sub_50528()
{
  return swift_retain(v0);
}

uint64_t sub_50530(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for ShelfPagePresenter(0LL);
}

uint64_t sub_50540()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_50548(uint64_t a1)
{
  return inject<A, B>(_:from:)(a1, v3, v1, v2);
}

uint64_t sub_50558()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

void sub_50564(uint64_t a1, uint64_t *a2)
{
}

void sub_5056C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_50574(uint64_t a1)
{
  return sub_6028(a1, 1LL, v1);
}

void sub_50580(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_50588()
{
  return swift_getMetatypeMetadata();
}

  ;
}

  ;
}

uint64_t sub_505B0()
{
  return type metadata accessor for LogMessage.StringInterpolation(0LL);
}

uint64_t sub_505B8()
{
  return type metadata accessor for PageMetricsPresenter(0LL);
}

uint64_t sub_505C0(uint64_t a1)
{
  return LogMessage.init(stringLiteral:)(a1, (v1 - 32) | 0x8000000000000000LL);
}

void sub_505CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

void sub_505D4(uint64_t a1)
{
  unint64_t v1 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

uint64_t sub_505E0()
{
  return sub_4DEBC(v0 + 88);
}

void sub_505E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (a2 - 32) | 0x8000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

  ;
}

void *sub_50600(void *a1)
{
  return sub_4DE80(a1, (void *)(v1 + 88));
}

void sub_50608(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
}

uint64_t sub_50614()
{
  return swift_isUniquelyReferenced_nonNull_native(v0);
}

  ;
}

void *sub_50630()
{
  return sub_4AFAC(v0 - 144);
}

void sub_5063C()
{
}

uint64_t sub_50648()
{
  return swift_getMetatypeMetadata();
}

void sub_50650()
{
}

uint64_t sub_5065C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_allocObject(&unk_75570, 24LL, 7LL);
  swift_weakInit(v4 + 16, v2);
  uint64_t v5 = swift_allocObject(&unk_75598, 24LL, 7LL);
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = v4;
  sub_4436C(a1, (uint64_t)&v9, &qword_7F4E0);
  if (v10)
  {
    sub_6010(&v9, (uint64_t)v11);
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    sub_7A94(v11, v12);
    dispatch thunk of TaskScheduler.schedule(task:)(sub_530D0, v5, v6, v7);
    swift_release();
    return sub_62AC(v11);
  }

  else
  {
    swift_retain(v4);
    sub_14C38((uint64_t)&v9, &qword_7F4E0);
    sub_50764(v4);
    swift_release();
    return swift_release();
  }

uint64_t sub_50764(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v1);
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = Promise.isResolved.getter();
    if ((v4 & 1) == 0) {
      Promise.resolve(_:)(v4);
    }
    return swift_release(v3);
  }

  return result;
}

uint64_t sub_507C0(unint64_t a1, void *a2, char a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a1);
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v3))
  {
    uint64_t v8 = 4LL;
    a3 &= 1u;
    while (1)
    {
      id v9 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a1)
         : *(id *)(a1 + 8 * v8);
      uint64_t v10 = v9;
      if (__OFADD__(v8 - 4, 1LL)) {
        break;
      }
      id v11 = [v9 customView];
      if (v11)
      {
        uint64_t v12 = v11;
        if ((sub_52298() & 1) != 0) {
          double v13 = 0.0;
        }
        else {
          double v13 = 1.0;
        }
        [v12 setAlpha:v13];
      }

      else
      {
      }

      if (v8 - 3 == v7) {
        goto LABEL_18;
      }
      ++v8;
    }

    __break(1u);
LABEL_17:
    sub_53198();
  }

uint64_t sub_508E8(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8LL));
  swift_bridgeObjectRetain(a1);
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v2))
  {
    unint64_t v6 = v4 & 0xC000000000000001LL;
    uint64_t v24 = a2 + 16;
    swift_beginAccess(a2 + 16, v25, 0LL, 0LL);
    uint64_t v7 = 4LL;
    uint64_t v8 = &selRef_lightGrayColor;
    while (1)
    {
      id v9 = v6 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      uint64_t v10 = v9;
      a2 = v7 - 3;
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      id v11 = [v9 v8[136]];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(v24);
        if (Strong)
        {
          unint64_t v14 = (void *)Strong;
          char v15 = sub_52298();
          uint64_t v26 = v7;
          unint64_t v16 = v6;
          uint64_t v17 = v5;
          unint64_t v18 = v4;
          uint64_t v19 = v8;
          char v20 = v15;

          BOOL v21 = (v20 & 1) == 0;
          uint64_t v8 = v19;
          unint64_t v4 = v18;
          uint64_t v5 = v17;
          unint64_t v6 = v16;
          uint64_t v7 = v26;
          if (v21) {
            double v22 = 1.0;
          }
          else {
            double v22 = 0.0;
          }
        }

        else
        {
          double v22 = 1.0;
        }

        [v12 setAlpha:v22];
      }

      else
      {
      }

      if (a2 == v5) {
        goto LABEL_21;
      }
      ++v7;
    }

    __break(1u);
LABEL_20:
    sub_53198();
  }

void sub_50AA0(void *a1@<X8>)
{
  uint64_t v6 = v5 - v4;
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_presenter)
     + OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_presentedPage;
  swift_beginAccess(v7, v9, 0LL, 0LL);
  sub_4436C(v7, v6, &qword_7CB10);
  uint64_t v8 = type metadata accessor for ShelfPage(0LL);
  if (sub_53220(v8))
  {
    sub_14C38(v6, &qword_7CB10);
    bzero(a1, 0x1C0uLL);
    a1[56] = 1LL;
    bzero(a1 + 57, 0xA8uLL);
  }

  else
  {
    sub_501D8((char *)(v6 + 120), (char *)a1);
    sub_14C38(v6, &qword_7CB10);
  }

  sub_35094();
}

void sub_50B94(uint64_t a1)
{
  if (v6[56] == 1LL)
  {
    sub_14C38(a1, &qword_7CB58);
    sub_14C38((uint64_t)v6, &qword_7CB58);
  }

  else
  {
    memcpy(__dst, v6, sizeof(__dst));
    uint64_t v2 = sub_4AFAC((uint64_t)v6);
    uint64_t v4 = v3;
    uint64_t v5 = type metadata accessor for ShelfPage(0LL);
    ((void (*)(void *, void))v2)(v6, 0LL);
    sub_14C38(a1, &qword_7CB58);
    sub_532C8();
  }

  sub_35094();
}

void sub_50C60(uint64_t a1)
{
  if (a1) {
    [v1 unsetChildViewController:a1];
  }
  uint64_t v2 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController;
  if (*(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController]) {
    objc_msgSend(v1, "setChildViewController:");
  }
  id v3 = [v1 view];
  [v3 setUserInteractionEnabled:*(void *)&v1[v2] == 0];
}

void sub_50CF0(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController);
  *(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController) = a1;
  id v3 = a1;
  sub_50C60((uint64_t)v2);
}

id sub_50D38(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = type metadata accessor for PageRenderMetricsPresenter.ActivityStart(0LL);
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  sub_F76C();
  uint64_t v8 = (_BYTE *)(v7 - v6);
  uint64_t v9 = type metadata accessor for Bag(0LL);
  uint64_t v23 = *(void *)(v9 - 8);
  sub_23758();
  __chkstk_darwin(v10);
  sub_F76C();
  uint64_t v13 = v12 - v11;
  *(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController] = 0LL;
  uint64_t v14 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_preloadingCompletionPromise;
  sub_5F6C((uint64_t *)&unk_7F8F0);
  char v15 = v2;
  *(void *)&v2[v14] = Promise.__allocating_init()(v15);
  v15[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_navigationBarAppearance] = 5;
  *(void *)&v15[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_presenter] = a1;
  *(void *)&v15[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_objectGraph] = a2;
  id v16 = objc_allocWithZone((Class)type metadata accessor for ShelfPageCollectionLayoutViewController());
  swift_retain_n(a1, 2LL);
  swift_retain_n(a2, 2LL);
  *(void *)&v15[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController] = sub_3BA70(a1, a2);
  uint64_t v17 = type metadata accessor for BaseObjectGraph(0LL);
  inject<A, B>(_:from:)(v9, a2, v9, v17);
  type metadata accessor for DynamicViewController(0LL);
  uint64_t v18 = sub_531B8();
  uint64_t v19 = static DynamicViewController.setupPageRenderPresenterWrapper(with:bag:)(v18, v13);
  sub_4450C();
  *(void *)&v15[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter] = v19;
  if (v19)
  {
    *uint64_t v8 = 1;
    (*(void (**)(_BYTE *, void, uint64_t))(v5 + 104))( v8,  enum case for PageRenderMetricsPresenter.ActivityStart.fetchPrimaryData(_:),  v22);
    (*(void (**)(_BYTE *))(*(void *)v19 + 152LL))(v8);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v22);
  }

  v24.receiver = v15;
  v24.super_class = (Class)type metadata accessor for ShelfPageViewController();
  id v20 = objc_msgSendSuper2(&v24, "initWithNibName:bundle:", 0, 0);
  swift_release();
  sub_4450C();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v9);
  return v20;
}

void sub_50F64()
{
  *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController] = 0LL;
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_preloadingCompletionPromise;
  uint64_t v2 = sub_5F6C((uint64_t *)&unk_7F8F0);
  *(void *)&v0[v1] = Promise.__allocating_init()(v2);
  v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_navigationBarAppearance] = 5;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageViewController.swift",  49LL,  2LL,  97LL,  0);
  __break(1u);
}

id sub_51050(uint64_t a1)
{
  id v2 = sub_A324(a1, "parentViewController");
  if (!v2) {
    goto LABEL_4;
  }
  id v3 = v2;
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___UINavigationController);
  if (sub_532B4(v4))
  {

LABEL_4:
    v7.receiver = v1;
    v7.super_class = (Class)type metadata accessor for ShelfPageViewController();
    return objc_msgSendSuper2(&v7, "navigationItem");
  }

  id v6 = sub_53160(0LL, "navigationItem");

  return v6;
}

uint64_t sub_51154(uint64_t a1)
{
  id v2 = sub_A324(a1, "parentViewController");
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = objc_opt_self(&OBJC_CLASS___UINavigationController);
    if (!sub_532B4(v4))
    {
      id v8 = sub_53160(0LL, "title");
      if (v8)
      {
        uint64_t v10 = v8;
        uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

        goto LABEL_8;
      }

      return 0LL;
    }
  }

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for ShelfPageViewController();
  id v5 = objc_msgSendSuper2(&v12, "title");
  if (!v5) {
    return 0LL;
  }
  id v3 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);
LABEL_8:

  return v7;
}

void sub_5129C(uint64_t a1, uint64_t a2)
{
  id v4 = sub_A324(a1, "parentViewController");
  if (!v4)
  {
LABEL_4:
    if (a2)
    {
      NSString v7 = sub_532F8();
      swift_bridgeObjectRelease(a2);
    }

    else
    {
      NSString v7 = 0LL;
    }

    v9.receiver = v2;
    v9.super_class = (Class)type metadata accessor for ShelfPageViewController();
    objc_msgSendSuper2(&v9, "setTitle:", v7);

    return;
  }

  id v5 = v4;
  uint64_t v6 = objc_opt_self(&OBJC_CLASS___UINavigationController);
  if (swift_dynamicCastObjCClass(v5, v6))
  {

    goto LABEL_4;
  }

  if (a2)
  {
    id v8 = sub_532F8();
    swift_bridgeObjectRelease(a2);
  }

  else
  {
    id v8 = 0LL;
  }

  [v5 setTitle:v8];
}

void sub_51390()
{
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for ShelfPageViewController();
  id v7 = sub_A32C((uint64_t)v16.super_class, "loadView", v1, v2, v3, v4, v5, v6, v16);
  id v8 = sub_A324((uint64_t)v7, "view");
  id v9 = objc_msgSend((id)objc_opt_self(UIColor), "ams_clear");
  [v8 setBackgroundColor:v9];

  id v10 = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:5003];
  id v11 = [objc_allocWithZone(UIVisualEffectView) initWithEffect:v10];

  id v12 = v11;
  id v13 = sub_53160((uint64_t)v12, "ams_clear");
  [v12 setBackgroundColor:v13];

  id v15 = sub_A324(v14, "view");
  sub_531F8(v15, "addSubview:");

  [v12 setAutoresizingMask:18];
}

void sub_51528()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for ShelfPageViewController();
  id v7 = sub_A32C((uint64_t)v10.super_class, "viewDidLoad", v1, v2, v3, v4, v5, v6, v10);
  sub_51A28((uint64_t)v7);
  sub_51A90();
  uint64_t v8 = sub_4BC34();
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter];
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 168LL))(v8);
  }
  sub_E850();
}

void sub_515C0()
{
  v9.receiver = v0;
  v9.super_class = (Class)sub_531AC();
  id v7 = sub_531CC((uint64_t)v9.super_class, "viewDidAppear:", v1, v2, v3, v4, v5, v6, v9);
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter];
  if (v8) {
    (*(void (**)(id))(*(void *)v8 + 184LL))(v7);
  }
  PageMetricsPresenter.viewDidAppear()();
  sub_E850();
}

void sub_51664()
{
  v9.receiver = v0;
  v9.super_class = (Class)sub_531AC();
  id v7 = sub_531CC((uint64_t)v9.super_class, "viewDidDisappear:", v1, v2, v3, v4, v5, v6, v9);
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter];
  if (v8) {
    (*(void (**)(id))(*(void *)v8 + 192LL))(v7);
  }
  sub_53304();
  ViewControllerPresenter.viewDidDisappear()();
  sub_E850();
}

void sub_51710()
{
  v10.receiver = v0;
  v10.super_class = (Class)sub_531AC();
  id v7 = sub_531CC((uint64_t)v10.super_class, "viewWillAppear:", v1, v2, v3, v4, v5, v6, v10);
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter];
  if (v8) {
    (*(void (**)(id))(*(void *)v8 + 176LL))(v7);
  }
  sub_53304();
  ViewControllerPresenter.viewWillAppear()();

  sub_E850();
}

uint64_t sub_517D4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ViewWillDisappearReason(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_F76C();
  uint64_t v8 = v7 - v6;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for ShelfPageViewController();
  objc_msgSendSuper2(&v11, "viewWillDisappear:", a1 & 1);
  uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter];
  if (v9)
  {
    sub_532EC();
    (*(void (**)(uint64_t))(*(void *)v9 + 200LL))(v8);
    sub_531C0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }

  sub_532EC();
  PageMetricsPresenter.viewWillDisappear(forReason:)(v8);
  return sub_531C0(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
}

void sub_518F0()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for ShelfPageViewController();
  sub_A32C((uint64_t)v13.super_class, "viewWillLayoutSubviews", v1, v2, v3, v4, v5, v6, v13);
  id v7 =  [*(id *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController] view];
  id v8 = sub_A324((uint64_t)v7, "view");
  [v8 bounds];
  sub_532D0();

  sub_53144();
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_overlayViewController];
  if (v9)
  {
    id v10 = [v9 view];
    if (v10)
    {
      objc_super v11 = v10;
      id v12 = sub_A324((uint64_t)v10, "view");
      [v12 bounds];
      sub_532D0();

      sub_53144();
    }

    else
    {
      __break(1u);
    }
  }

id sub_51A28(uint64_t a1)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController];
  id v3 = sub_53160(a1, "view");
  [v3 setAlpha:0.0];

  return [v1 setChildViewController:v2];
}

void sub_51A90()
{
  uint64_t v0 = sub_5F6C(&qword_7F4F0);
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  sub_23758();
  __chkstk_darwin(v1);
  sub_12718();
  uint64_t v27 = v2;
  uint64_t v3 = sub_5F6C(&qword_7F4F8);
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  sub_23758();
  __chkstk_darwin(v4);
  sub_F76C();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_5F6C(&qword_7F500);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_F76C();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_23844((uint64_t)&unk_75520);
  sub_53260(v13);
  uint64_t v14 = sub_5F6C(&qword_7F458);
  sub_23430(&qword_7F508, &qword_7F458, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  uint64_t v16 = v15;
  sub_531B8();
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v30, v14, v16);
  sub_53230();
  sub_4450C();
  swift_release();
  sub_53240();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v17 = sub_23844((uint64_t)&unk_75520);
  sub_53254(v17);
  uint64_t v18 = sub_53238();
  sub_23430(&qword_7F510, &qword_7F460, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  uint64_t v20 = v19;
  sub_531B8();
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v30, v18, v20);
  sub_53230();
  sub_4450C();
  swift_release();
  sub_53240();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v7, v26);
  uint64_t v21 = sub_23844((uint64_t)&unk_75520);
  sub_53254(v21);
  uint64_t v22 = sub_53238();
  sub_23430(&qword_7F518, &qword_7F468, (uint64_t)&protocol conformance descriptor for SyncEvent<A>);
  uint64_t v24 = v23;
  sub_531B8();
  dispatch thunk of static EventEmitter.defaultScheduler.getter(v30, v22, v24);
  sub_53230();
  sub_4450C();
  swift_release();
  sub_53240();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  sub_9ABC();
}

void sub_51D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong) {
}
  }

void sub_51D8C(char *a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_501D8(a1, __dst);
    sub_50B94((uint64_t)__dst);
    id v6 = [v5 navigationItem];
  }

void sub_51E18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_524B0(a1);
  }

void sub_51E70(uint64_t a1, char a2)
{
  char v3 = a1;
  if ((a2 & 1) != 0)
  {
    uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v5 = sub_23844((uint64_t)&unk_75520);
    sub_53260(v5);
    uint64_t v6 = swift_allocObject(&unk_755C0, 25LL, 7LL);
    *(void *)(v6 + swift_weakDestroy(v0 + 16) = v5;
    *(_BYTE *)(v6 + 2sub_62AC(v0 + 4) = v3 & 1;
    aBlock[4] = sub_530FC;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_21544;
    void aBlock[3] = &unk_755D8;
    uint64_t v7 = _Block_copy(aBlock);
    swift_release();
    [v4 animateWithDuration:134 delay:v7 options:0 animations:0.2 completion:0.0];
    _Block_release(v7);
  }

  else
  {
    id v8 = sub_A324(a1, "navigationItem");
    sub_53048(v8, (SEL *)&selRef_leftBarButtonItems);
    if (v9)
    {
      uint64_t v10 = v9;
      sub_53210(v2);
      uint64_t v9 = swift_bridgeObjectRelease(v10);
    }

    id v11 = sub_A324(v9, "navigationItem");
    sub_53048(v11, (SEL *)&selRef_rightBarButtonItems);
    if (v12)
    {
      uint64_t v13 = v12;
      sub_53210(v2);
      swift_bridgeObjectRelease(v13);
    }
  }

  int v14 = v2[OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_navigationBarAppearance];
  if (v14 != 5)
  {
    uint64_t v15 = sub_33B50(v14);
    uint64_t v17 = v16;
    if (v15 == 0xD000000000000019LL && v16 == 0x8000000000062FE0LL)
    {
      swift_bridgeObjectRelease(0x8000000000062FE0LL);
    }

    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, 0xD000000000000019LL, 0x8000000000062FE0LL, 0LL);
      swift_bridgeObjectRelease(v17);
      if ((v18 & 1) == 0) {
        return;
      }
    }

    id v19 = [objc_allocWithZone(UINavigationBarAppearance) init];
    id v20 = [v19 configureWithTransparentBackground];
    if ((v3 & 1) != 0)
    {
      objc_opt_self(&OBJC_CLASS___UIColor);
      id v21 = v19;
      id v22 = sub_53160((uint64_t)v21, "systemBackgroundColor");
      id v23 = [v22 colorWithAlphaComponent:0.96];

      [v21 setBackgroundColor:v23];
    }

    id v24 = sub_A324((uint64_t)v20, "navigationItem");
    sub_531F8(v24, "setScrollEdgeAppearance:");

    id v26 = sub_A324(v25, "navigationItem");
    sub_531F8(v26, "setStandardAppearance:");

    id v28 = sub_A324(v27, "navigationItem");
    sub_531F8(v28, "setCompactAppearance:");
  }

void sub_52164(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = [Strong navigationItem];

    sub_53048(v5, (SEL *)&selRef_leftBarButtonItems);
    if (v6)
    {
      unint64_t v7 = v6;
      swift_retain(a1);
      sub_508E8(v7, a1);
      swift_bridgeObjectRelease(v7);
    }
  }

  swift_beginAccess(v2, v13, 0LL, 0LL);
  id v8 = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 navigationItem];

    sub_53048(v10, (SEL *)&selRef_rightBarButtonItems);
    if (v11)
    {
      unint64_t v12 = v11;
      swift_retain(a1);
      sub_508E8(v12, a1);
      swift_bridgeObjectRelease(v12);
    }
  }

uint64_t sub_52298()
{
  if (__src[56] != 1LL)
  {
    memcpy(__dst, __src, sizeof(__dst));
    sub_53294();
    __asm { BR              X10 }
  }

  sub_14C38((uint64_t)__src, &qword_7CB58);
  return 0LL;
}

void sub_524B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v51 = type metadata accessor for PageRenderMetricsPresenter.ActivityEnd(0LL);
  v50[1] = *(void *)(v51 - 8);
  sub_23758();
  __chkstk_darwin(v3);
  sub_12718();
  v50[0] = v4;
  sub_5F6C(&qword_7CB10);
  sub_23758();
  __chkstk_darwin(v5);
  sub_12718();
  uint64_t v60 = v6;
  uint64_t v7 = sub_532A8();
  uint64_t v61 = type metadata accessor for ShelfPage(v7);
  sub_23758();
  __chkstk_darwin(v8);
  sub_12718();
  uint64_t v59 = v9;
  uint64_t v10 = sub_532A8();
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags(v10);
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  sub_23758();
  __chkstk_darwin(v12);
  sub_12718();
  uint64_t v56 = v13;
  uint64_t v14 = sub_532A8();
  uint64_t v55 = type metadata accessor for DispatchQoS(v14);
  uint64_t v54 = *(void *)(v55 - 8);
  sub_23758();
  __chkstk_darwin(v15);
  sub_12718();
  uint64_t v53 = v16;
  sub_5F6C((uint64_t *)&unk_7DE50);
  sub_23758();
  __chkstk_darwin(v17);
  sub_12718();
  uint64_t v52 = v18;
  uint64_t v19 = sub_532A8();
  uint64_t v20 = type metadata accessor for ShelfPagePresenter.State(v19);
  sub_23758();
  __chkstk_darwin(v21);
  uint64_t v62 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  id v26 = (char *)v50 - v25;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_23758();
  __chkstk_darwin(v27);
  sub_F76C();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v32 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v33 = swift_allocObject( v31,  ((*(unsigned __int8 *)(v32 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))
        + 3LL * *(void *)(v32 + 72),
          *(unsigned __int8 *)(v32 + 80) | 7LL);
  *(_OWORD *)(v33 + swift_weakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v66 = type metadata accessor for ShelfPageViewController();
  v65[0] = v2;
  id v64 = v2;
  id v34 = (id)AMSLogKey(v64);
  if (v34)
  {
    uint64_t v36 = v34;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34, v35);
    uint64_t v39 = v38;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    sub_C3E8();
    uint64_t v40 = sub_53174();
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v40);
    sub_53200(MetatypeMetadata);
    sub_53248();
    v42._countAndFlagsBits = 5972026LL;
    v42._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    v67[3] = &type metadata for String;
    v67[0] = v37;
    v67[1] = v39;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v67);
    sub_53248();
    uint64_t v43 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    sub_C3E8();
    uint64_t v44 = sub_53174();
    uint64_t v45 = swift_getMetatypeMetadata(v44);
    sub_53200(v45);
    sub_14C38((uint64_t)v67, &qword_7DDE0);
    uint64_t v43 = 58LL;
  }

  unint64_t v46 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v43);
  LogMessage.init(stringInterpolation:)(v30);
  type metadata accessor for Log();
  sub_62AC(v65);
  LogMessage.init(stringLiteral:)(0x6863206574617453LL, 0xEE003A6465676E61LL);
  uint64_t v66 = v20;
  uint64_t v47 = sub_7BA4(v65);
  uint64_t v48 = v63;
  sub_52F68(v63, (uint64_t)v47);
  static LogMessage.safe(_:)(v65);
  sub_14C38((uint64_t)v65, &qword_7DDE0);
  sub_2679C(v33);
  swift_bridgeObjectRelease(v33);
  sub_52F68(v48, (uint64_t)v26);
  uint64_t v49 = (char *)&loc_52870 + dword_52D14[sub_532E4((uint64_t)v26)];
  __asm { BR              X10 }

uint64_t sub_52880()
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  id v7 = objc_allocWithZone((Class)type metadata accessor for AlertViewController());
  id v8 = sub_9D38(v5, v6);
  uint64_t v9 = *(void *)(v4 - 184);
  sub_50CF0(v8);
  sub_52F68(v3, v1);
  LODWORD(sub_9A70(v3, v5) = sub_532E4(v1);
  sub_14C60(v1, type metadata accessor for ShelfPagePresenter.State);
  if ((_DWORD)v5 == 3)
  {
    uint64_t v10 = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v11 = (void *)static OS_dispatch_queue.main.getter(v10);
    uint64_t v12 = sub_23844((uint64_t)&unk_75520);
    swift_unknownObjectWeakInit(v12 + 16, v9);
    *(void *)(v4 - 14sub_62AC(v0 + 4) = sub_5300C;
    *(void *)(v4 - 136) = v12;
    *(void *)(v4 - 176) = _NSConcreteStackBlock;
    *(void *)(v4 - 168) = 1107296256LL;
    *(void *)(v4 - 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = sub_21544;
    *(void *)(v4 - 152) = &unk_75538;
    uint64_t v13 = _Block_copy((const void *)(v4 - 176));
    uint64_t v14 = swift_release();
    *(void *)(v4 - 208) = v0;
    uint64_t v15 = *(void *)(v4 - 272);
    static DispatchQoS.unspecified.getter(v14);
    *(void *)(v4 - 176) = _swiftEmptyArrayStorage;
    unint64_t v16 = sub_231D8();
    uint64_t v17 = sub_53238();
    sub_23430((unint64_t *)&qword_7DE40, &qword_7DE38, (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v18 = *(void *)(v4 - 248);
    uint64_t v19 = v17;
    uint64_t v20 = *(void *)(v4 - 232);
    dispatch thunk of SetAlgebra.init<A>(_:)(v4 - 176, v19, v21, v20, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v15, v18, v13);
    _Block_release(v13);

    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 240) + 8LL))(v18, v20);
    (*(void (**)(uint64_t, void))(*(void *)(v4 - 264) + 8LL))(v15, *(void *)(v4 - 256));
  }

  uint64_t v22 = *(void *)(v4 - 200);
  sub_52F68(v3, v22);
  int v23 = sub_532E4(v22);
  return ((uint64_t (*)(void))((char *)&loc_52B74 + dword_52D24[v23]))();
}

void sub_52B84()
{
  *(void *)(v4 - 14sub_62AC(v0 + 4) = 0LL;
  *(_OWORD *)(v4 - 176) = 0u;
  *(_OWORD *)(v4 - 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = 0u;
  sub_5065C(v4 - 176);
  sub_14C38(v4 - 176, &qword_7F4E0);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_presenter);
  uint64_t v6 = OBJC_IVAR____TtC19CoreDynamicUIPlugin18ShelfPagePresenter_destination;
  uint64_t v7 = type metadata accessor for ShelfPageDestination(0LL);
  sub_4436C(v5 + v6 + *(int *)(v7 + 20), v2, &qword_7CB10);
  if (sub_6028(v2, 1LL, v1) == 1)
  {
    sub_14C38(v2, &qword_7CB10);
  }

  else
  {
    uint64_t v8 = *(void *)(v4 - 224);
    sub_52FAC(v2, v8);
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_pageRenderPresenter);
    if (v9)
    {
      uint64_t v10 = v8 + *(int *)(v1 + 36);
      uint64_t v11 = type metadata accessor for PageMetrics(0LL);
      uint64_t v12 = *(void *)(v4 - 304);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v12, v10, v11);
      uint64_t v13 = *(void *)(v4 - 296);
      (*(void (**)(uint64_t, void, void))(v13 + 104))( v12,  enum case for PageRenderMetricsPresenter.ActivityEnd.fetchPrimaryDataCompleted(_:),  *(void *)(v4 - 288));
      (*(void (**)(uint64_t))(*(void *)v9 + 160LL))(v12);
      sub_531C0(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    }

    sub_14C60(v8, type metadata accessor for ShelfPage);
  }

  sub_9ABC();
}

void sub_52D34(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    id v4 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_collectionLayoutViewController));

    id v5 = [v4 view];
    sub_56B1C(0LL, 0LL, 1.0, 0.1);
  }

void sub_52DD4()
{
}

void sub_52E0C()
{
}

id sub_52E5C()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ShelfPageViewController();
  return sub_A32C((uint64_t)v8.super_class, "dealloc", v1, v2, v3, v4, v5, v6, v8);
}

uint64_t type metadata accessor for ShelfPageViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin23ShelfPageViewController);
}

uint64_t sub_52F14(uint64_t a1)
{
  return swift_retain(*(void *)(v1
                                + OBJC_IVAR____TtC19CoreDynamicUIPlugin23ShelfPageViewController_preloadingCompletionPromise));
}

uint64_t sub_52F48(uint64_t a1)
{
  return sub_52F14(a1);
}

uint64_t sub_52F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfPagePresenter.State(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_52FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShelfPage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_52FF0()
{
  uint64_t v1 = sub_531D8();
  return swift_deallocObject(v1, v2, v3);
}

void sub_5300C()
{
}

uint64_t sub_53014(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_53024(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_5302C()
{
  uint64_t v1 = sub_531D8();
  return swift_deallocObject(v1, v2, v3);
}

void sub_53048(void *a1, SEL *a2)
{
  id v3 = [a1 *a2];

  if (v3)
  {
    uint64_t v4 = sub_C184(0LL, &qword_7F4E8, &OBJC_CLASS___UIBarButtonItem_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);
  }

  sub_6D3C();
}

uint64_t sub_530B4()
{
  uint64_t v0 = sub_531D8();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_530D0()
{
  return sub_50764(*(void *)(v0 + 16));
}

uint64_t sub_530D8()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void sub_530FC()
{
}

void sub_53108(uint64_t a1)
{
}

void sub_53110(char *a1)
{
}

void sub_53118(uint64_t a1)
{
}

uint64_t sub_53128(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3 | 0x63536E4F00000000LL, 0xEC0000006C6C6F72LL, 0LL);
}

id sub_53144()
{
  return objc_msgSend(v0, *(SEL *)(v1 + 3528), v2, v3, v4, v5);
}

id sub_53160(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

char *sub_53168()
{
  return sub_501D8((char *)&STACK[0x750], (char *)&STACK[0x270]);
}

uint64_t sub_53174()
{
  uint64_t v1 = *(void *)(v0 - 152);
  double v2 = sub_7A94((void *)(v0 - 176), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_53198()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_531AC()
{
  return type metadata accessor for ShelfPageViewController();
}

uint64_t sub_531B8()
{
  return swift_retain(v0);
}

uint64_t sub_531C0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

id sub_531CC( uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2, v9 & 1);
}

uint64_t sub_531D8()
{
  return v0;
}

uint64_t sub_531E8()
{
  return swift_bridgeObjectRelease(0xEC0000006C6C6F72LL);
}

id sub_531F8(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_53200(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 12_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 120);
}

uint64_t sub_53210(void *a1)
{
  return sub_507C0(v2, a1, v1 & 1);
}

uint64_t sub_53220(uint64_t a1)
{
  return sub_6028(v1, 1LL, a1);
}

uint64_t sub_53230()
{
  return EventEmitter.addObserver(on:singleUse:_:)();
}

uint64_t sub_53238()
{
  return sub_5F6C(v0);
}

uint64_t sub_53240()
{
  return sub_62AC((void *)(v0 - 120));
}

void sub_53248()
{
}

uint64_t sub_53254(uint64_t a1)
{
  return swift_unknownObjectWeakInit(a1 + 16, v1);
}

uint64_t sub_53260(uint64_t a1)
{
  return swift_unknownObjectWeakInit(a1 + 16, v1);
}

uint64_t sub_5326C()
{
  return 0x63536E4F65646968LL;
}

uint64_t sub_53280()
{
  return 0x61776C41776F6873LL;
}

uint64_t sub_53294()
{
  return 0x63536E4F776F6873LL;
}

uint64_t sub_532A8()
{
  return 0LL;
}

uint64_t sub_532B4(uint64_t a1)
{
  return swift_dynamicCastObjCClass(v1, a1);
}

void *sub_532C0()
{
  return sub_50214(&STACK[0x4E0]);
}

void *sub_532C8()
{
  return sub_50214(&STACK[0x270]);
}

  ;
}

uint64_t sub_532E4(uint64_t a1)
{
  return swift_getEnumCaseMultiPayload(a1, v1);
}

uint64_t sub_532EC()
{
  return static ViewWillDisappearReason.inferred(for:)(v0);
}

NSString sub_532F8()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_53304()
{
  return type metadata accessor for PageMetricsPresenter(0LL);
}

uint64_t sub_53310(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_5335C(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x6D6F74737563LL;
  }
  else {
    return 0x6C6C616D73LL;
  }
}

void sub_5338C()
{
}

uint64_t sub_53394@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_71D80;
  uint64_t result = sub_53310(*a1, v3);
  *a2 = result;
  return result;
}

void sub_533C8(uint64_t *a1@<X8>)
{
  *a1 = sub_2F298(*v1);
  a1[1] = v3;
  sub_6D3C();
}

void sub_533EC(char *a1, unsigned __int8 *a2)
{
}

void sub_533F8()
{
}

uint64_t sub_53400(uint64_t a1)
{
  return sub_33584(a1, *v1);
}

void sub_53408(uint64_t a1)
{
}

uint64_t sub_53410@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  v3._rawValue = &off_71DD0;
  uint64_t result = sub_53310(*a1, v3);
  *a2 = result;
  return result;
}

void sub_53444(uint64_t *a1@<X8>)
{
  *a1 = sub_5335C(*v1);
  a1[1] = v3;
  sub_6D3C();
}

uint64_t sub_53468( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!v8)
  {
    if ((v10 & 1) != 0)
    {
      sub_23FC8();
      uint64_t v9 = v11;
    }

    else
    {
      uint64_t v9 = 0LL;
    }
  }

  uint64_t v12 = sub_9A58();
  sub_D79C(v12);
  uint64_t v13 = sub_6BC8();
  sub_6D14(v13);
  return v9;
}

uint64_t sub_53528@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result = sub_53468(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9)
  {
    *(void *)a9 = result;
    *(_BYTE *)(a9 + 8) = v12 & 1;
  }

  return result;
}

void sub_53558(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SpacerModel(0LL);
  uint64_t v4 = a1 + *(int *)(v3 + 28);
  uint64_t v5 = type metadata accessor for ImpressionMetrics(0LL);
  sub_5FEC(v4, 1LL, 1LL, v5);
  uint64_t v6 = a1 + *(int *)(v3 + 32);
  *(void *)(v6 + 32) = 0LL;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + swift_weakDestroy(v0 + 16) = 0u;
  uint64_t v7 = sub_23DB8();
  if (v1)
  {
    uint64_t v9 = sub_9A58();
    sub_19F8C(v9);
    uint64_t v10 = sub_6BC8();
    sub_6D14(v10);
    sub_60C8(v4, &qword_7CB00);
    sub_60C8(v6, (uint64_t *)&unk_7F900);
  }

  else
  {
    v23[0] = v7;
    v23[1] = v8;
    AnyHashable.init<A>(_:)(v23, &type metadata for String, &protocol witness table for String);
    sub_808C(0x657269446C6C6966LL, 0xED00006E6F697463LL, v3, v11, v12, v13, v14, v15);
    *(_BYTE *)(a1 + 9) = v16 & 1;
    __chkstk_darwin(v16);
    sub_52C0();
    uint64_t v18 = v17;
    char v20 = v19;
    uint64_t v21 = type metadata accessor for JSONContext(0LL);
    sub_19F8C(v21);
    uint64_t v22 = sub_6BC8();
    sub_6D14(v22);
    *(void *)a1 = v18;
    *(_BYTE *)(a1 + 8) = v20 & 1;
  }

uint64_t sub_53738@<X0>(uint64_t a1@<X8>)
{
  return sub_D734(v1 + 16, a1);
}

void sub_53744(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_5376C(uint64_t a1@<X8>)
{
}

void sub_53780(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_537A8()
{
  uint64_t v3 = sub_5F6C(&qword_7F658);
  DiffableLens.value.getter(v1, v3);
  uint64_t v4 = type metadata accessor for SpacerModel(0LL);
  sub_5FEC((uint64_t)v1, 0LL, 1LL, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SpacerComponent_spacerModel;
  sub_54AF8(v0 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SpacerComponent_spacerModel, (uint64_t)v6, 33LL);
  sub_54850((uint64_t)v1, v5);
  swift_endAccess(v6);
  sub_35094();
}

uint64_t sub_53854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SpacerComponent(0LL);
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_538A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SpacerComponent(0LL);
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_538FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_60248, a4);
  return ComponentCell.apply(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_53958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_60248, a4);
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_539B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_60248, a4);
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

id sub_53A10(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for SpacerComponent(0LL);
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

void sub_53AB4()
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SpacerComponent(0LL);
  objc_msgSendSuper2(&v5, "prepareForReuse");
  sub_54ABC();
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SpacerComponent_spacerModel;
  sub_54AF8(v3, (uint64_t)v4, 33LL);
  sub_54850(v0, v3);
  swift_endAccess(v4);
  sub_6D3C();
}

double sub_53BB4(double a1, double a2, float a3)
{
  uint64_t v9 = type metadata accessor for SpacerModel(0LL);
  sub_6D6C();
  __chkstk_darwin(v10);
  sub_54AE0();
  uint64_t v11 = v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin15SpacerComponent_spacerModel;
  sub_54AF8(v11, (uint64_t)v17, 0LL);
  sub_4436C(v11, v5, &qword_7F650);
  if (sub_6028(v5, 1LL, v9) == 1)
  {
    sub_60C8(v5, &qword_7F650);
    double v12 = 0.0;
    BOOL v13 = a3 == 1000.0;
    goto LABEL_12;
  }

  sub_548D0(v5, v3);
  if (*(_BYTE *)(v3 + 8)) {
    double v14 = 8.0;
  }
  else {
    double v14 = *(double *)v3;
  }
  if ((*(_BYTE *)(v3 + 9) & 1) == 0)
  {
    swift_bridgeObjectRelease(0xEA00000000006C61LL);
    sub_54914(v3);
    goto LABEL_11;
  }

  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)( 0x6C61636974726576LL,  0xE800000000000000LL,  0x746E6F7A69726F68LL,  0xEA00000000006C61LL,  0LL);
  swift_bridgeObjectRelease(0xE800000000000000LL);
  sub_54914(v3);
  if ((v15 & 1) != 0)
  {
LABEL_11:
    BOOL v13 = a3 == 1000.0;
    double v12 = v14;
LABEL_12:
    if (!v13) {
      return v12;
    }
    return a1;
  }

  if (a3 != 1000.0) {
    return 0.0;
  }
  return a1;
}

void sub_53DEC()
{
}

id sub_53E24()
{
  return sub_53E30((SEL *)&selRef_dealloc);
}

id sub_53E30(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SpacerComponent(0LL);
  return objc_msgSendSuper2(&v4, *a1);
}

uint64_t sub_53E94()
{
  return type metadata accessor for SpacerComponent(0LL);
}

uint64_t type metadata accessor for SpacerComponent(uint64_t a1)
{
  return sub_4B6FC(a1, (uint64_t *)&unk_7F548, (uint64_t)&nominal type descriptor for SpacerComponent);
}

void sub_53EB0(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
  }

uint64_t type metadata accessor for SpacerModel(uint64_t a1)
{
  return sub_4B6FC(a1, qword_7F5B8, (uint64_t)&nominal type descriptor for SpacerModel);
}

void *sub_53F40(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    *(void *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
    __int128 v7 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, (uint64_t)(a2 + 2));
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
    if (sub_6028((uint64_t)v10, 1LL, v11))
    {
      uint64_t v12 = sub_5F6C(&qword_7CB00);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
      sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
    }

    uint64_t v14 = *(int *)(a3 + 32);
    char v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *(void *)(v16 + 32);
      *((void *)v15 + 3) = v17;
      *((void *)v15 + sub_62AC(v0 + 4) = v18;
      (**(void (***)(void))(v17 - 8))();
    }

    else
    {
      __int128 v19 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)char v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v19;
      *((void *)v15 + sub_62AC(v0 + 4) = *(void *)(v16 + 32);
    }
  }

  return v4;
}

void *sub_54094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for ImpressionMetrics(0LL);
  uint64_t result = (void *)(a1 + *(int *)(a2 + 32));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_54120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  __int128 v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v9, 1LL, v10))
  {
    uint64_t v11 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
    sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
  }

  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 24);
  if (v15)
  {
    uint64_t v16 = *(void *)(v14 + 32);
    *(void *)(v13 + 2sub_62AC(v0 + 4) = v15;
    *(void *)(v13 + 32) = v16;
    (**(void (***)(void))(v15 - 8))();
  }

  else
  {
    __int128 v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = v17;
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
  }

  return a1;
}

uint64_t sub_54248(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(void *)a1 = v6;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  sub_6520((void *)(a1 + 16), a2 + 2);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  int v11 = sub_6028((uint64_t)v8, 1LL, v10);
  int v12 = sub_6028((uint64_t)v9, 1LL, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
      sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  __int128 v17 = (__int128 *)((char *)a2 + v15);
  uint64_t v18 = *((void *)v17 + 3);
  if (!*(void *)(a1 + v15 + 24))
  {
    if (v18)
    {
      *(void *)(v16 + 2sub_62AC(v0 + 4) = v18;
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      (**(void (***)(uint64_t, __int128 *))(v18 - 8))(v16, v17);
      return a1;
    }

uint64_t sub_543DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  __int128 v7 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v10, 1LL, v11))
  {
    uint64_t v12 = sub_5F6C(&qword_7CB00);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
    sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
  }

  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  __int128 v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_544D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  sub_62AC((void *)(a1 + 16));
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  int v11 = sub_6028((uint64_t)v8, 1LL, v10);
  int v12 = sub_6028((uint64_t)v9, 1LL, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
      sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_62AC((void *)(a1 + v15));
  }
  __int128 v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_54634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_54640);
}

uint64_t sub_54640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_5F6C(&qword_7CB00);
    return sub_6028(a1 + *(int *)(a3 + 28), a2, v8);
  }

uint64_t sub_546B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_546C4);
}

void sub_546C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = (a2 - 1);
    sub_35094();
  }

  else
  {
    uint64_t v7 = sub_5F6C(&qword_7CB00);
    sub_5FEC(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }

void sub_5472C(uint64_t a1)
{
  v4[0] = "\t";
  v4[1] = &unk_60148;
  _OWORD v4[2] = &unk_60160;
  sub_4978C( 319LL,  (unint64_t *)&qword_7D280,  (uint64_t (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(v2 - 8) + 64LL;
    void v4[4] = &unk_60178;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
  }

void sub_547CC()
{
}

void sub_547F8()
{
}

void sub_54824()
{
}

uint64_t sub_54850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_5F6C(&qword_7F650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_54898@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_86A0();
  *(void *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
  return result;
}

uint64_t sub_548C8@<X0>(uint64_t a1@<X8>)
{
  return sub_54898(a1);
}

uint64_t sub_548D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpacerModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_54914(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SpacerModel(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void type metadata accessor for SpacerModel.Size.Kind()
{
}

uint64_t sub_54964(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = 1;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_549B0 + 4 * byte_60105[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_549E4 + 4 * byte_60100[v4]))();
}

uint64_t sub_549E4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_549EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x549F4LL);
  }
  return result;
}

uint64_t sub_54A00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x54A08LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_54A0C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_54A14(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SpacerModel.FillDirection()
{
}

void type metadata accessor for SpacerModel.Size()
{
}

unint64_t sub_54A3C()
{
  unint64_t result = qword_7F660;
  if (!qword_7F660)
  {
    unint64_t result = swift_getWitnessTable(&unk_602EC, &unk_75750);
    atomic_store(result, (unint64_t *)&qword_7F660);
  }

  return result;
}

unint64_t sub_54A7C()
{
  unint64_t result = qword_7F668;
  if (!qword_7F668)
  {
    unint64_t result = swift_getWitnessTable(&unk_60354, &unk_756C0);
    atomic_store(result, (unint64_t *)&qword_7F668);
  }

  return result;
}

uint64_t sub_54ABC()
{
  uint64_t v1 = type metadata accessor for SpacerModel(0LL);
  return sub_5FEC(v0, 1LL, 1LL, v1);
}

  ;
}

uint64_t sub_54AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_beginAccess(a1, a2, a3, 0LL);
}

unint64_t sub_54B04()
{
  unint64_t result = qword_7F670;
  if (!qword_7F670)
  {
    uint64_t v1 = type metadata accessor for Text(255LL);
    unint64_t result = swift_getWitnessTable(&unk_60430, v1);
    atomic_store(result, (unint64_t *)&qword_7F670);
  }

  return result;
}

uint64_t type metadata accessor for Text(uint64_t a1)
{
  uint64_t result = qword_7F6D0;
  if (!qword_7F6D0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Text);
  }
  return result;
}

uint64_t sub_54B7C@<X0>(uint64_t a1@<X8>)
{
  return sub_D734(v1 + 56, a1);
}

uint64_t sub_54B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_55328(v2 + *(int *)(a1 + 32), a2, (uint64_t *)&unk_7F900);
}

uint64_t sub_54BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_55328(v2 + *(int *)(a1 + 28), a2, &qword_7CB00);
}

uint64_t sub_54BD8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_5F6C(&qword_7CB00);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ActionFactory(0LL);
  uint64_t v9 = sub_D7F8(v8);
  uint64_t v10 = type metadata accessor for DynamicTextFactory(0LL);
  uint64_t v11 = sub_D7F8(v10);
  uint64_t v12 = type metadata accessor for Text(0LL);
  uint64_t v34 = v11;
  uint64_t v35 = a1;
  sub_503C();
  if (v2)
  {
    uint64_t v13 = sub_6BC8();
    sub_6D14(v13);
    sub_AD00();
    sub_D7F0();
  }

  else
  {
    uint64_t v33 = sub_23DB8();
    uint64_t v43 = v14;
    uint64_t v32 = v29;
    __chkstk_darwin(v33);
    sub_55C44();
    sub_4EE0(0xD000000000000011LL, 0x8000000000063440LL, v12, (uint64_t)sub_D700, v15, v16, v17, v18);
    uint64_t v19 = type metadata accessor for ImpressionMetrics(0LL);
    uint64_t v20 = sub_5FEC((uint64_t)v7, 0LL, 1LL, v19);
    __chkstk_darwin(v20);
    v29[-2] = v9;
    v29[-1] = a1;
    sub_4EA8();
    v29[1] = v29;
    __chkstk_darwin(v21);
    sub_55C44();
    sub_52C0();
    LODWORD(v32) = v22 & 1;
    uint64_t v31 = v23;
    int v30 = 0;
    sub_16D24((uint64_t)v42, (uint64_t)v40);
    v36[0] = v33;
    uint64_t v24 = v43;
    v36[1] = v43;
    swift_bridgeObjectRetain(v43);
    AnyHashable.init<A>(_:)(v36, &type metadata for String, &protocol witness table for String);
    sub_AD00();
    sub_D7F0();
    uint64_t v25 = sub_6BC8();
    sub_6D14(v25);
    swift_bridgeObjectRelease(v24);
    sub_62AC(v42);
    sub_552F8((uint64_t)v7, a2 + *(int *)(v12 + 28), &qword_7CB00);
    sub_552F8((uint64_t)&v41, a2 + *(int *)(v12 + 32), (uint64_t *)&unk_7F900);
    sub_6010(v40, a2 + 16);
    __int128 v26 = v38;
    *(_OWORD *)(a2 + 56) = v37;
    *(_OWORD *)(a2 + 72) = v26;
    *(void *)(a2 + 88) = v39;
    *(void *)a2 = v31;
    *(_BYTE *)(a2 + 8) = (_BYTE)v32;
    *(_BYTE *)(a2 + 9) = v30;
  }

  uint64_t v27 = sub_9A58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8LL))(a1, v27);
}

uint64_t sub_54FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for JSONContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for JSONObject(0LL);
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v13 + 16))(&v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)], a1, v11);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = sub_550F0();
  *(void *)a3 = result;
  *(_BYTE *)(a3 + 8) = v15 & 1;
  *(_BYTE *)(a3 + 9) = 0;
  return result;
}

uint64_t sub_550F0()
{
  uint64_t v2 = sub_23DB8();
  if (!v0)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    if (v2 == 0x486E6F6974636573LL && v3 == 0xED00007265646165LL)
    {
      unint64_t v7 = 0xED00007265646165LL;
    }

    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 0x486E6F6974636573LL, 0xED00007265646165LL, 0LL) & 1) == 0)
      {
        if (v4 == 0x6D6F74737563LL && v5 == 0xE600000000000000LL)
        {
          swift_bridgeObjectRelease(0xE600000000000000LL);
        }

        else
        {
          uint64_t v1 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0x6D6F74737563LL, 0xE600000000000000LL, 0LL);
          swift_bridgeObjectRelease(v5);
          if ((v1 & 1) == 0)
          {
            swift_willThrow([objc_allocWithZone(NSError) init]);
            goto LABEL_10;
          }
        }

        sub_23FC8();
        uint64_t v1 = v12;
        goto LABEL_10;
      }

      unint64_t v7 = v5;
    }

    swift_bridgeObjectRelease(v7);
    uint64_t v1 = 0LL;
  }

uint64_t sub_552AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_54BD8(a1, a2);
}

uint64_t sub_552C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_550F0();
  if (!v1)
  {
    *(void *)a1 = result;
    *(_BYTE *)(a1 + 8) = v4 & 1;
  }

  return result;
}

uint64_t sub_552F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_54FD8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_552F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = sub_D7B0(a1, a2, a3);
  sub_D80C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL));
  return v3;
}

uint64_t sub_55328(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = sub_D7B0(a1, a2, a3);
  sub_D80C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL));
  return v3;
}

ValueMetadata *type metadata accessor for Text.InsetModifier()
{
  return &type metadata for Text.InsetModifier;
}

uint64_t sub_55368(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v14 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v14);
  }

  else
  {
    *(void *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    __int128 v7 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, (uint64_t)(a2 + 2));
    __int128 v8 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(v4 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 56, (uint64_t)(a2 + 7));
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(v4 + v9);
    __n128 v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for ImpressionMetrics(0LL);
    if (sub_6028((uint64_t)v11, 1LL, v12))
    {
      uint64_t v13 = sub_5F6C(&qword_7CB00);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL))(v10, v11, v12);
      sub_5FEC((uint64_t)v10, 0LL, 1LL, v12);
    }

    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 24);
    if (v18)
    {
      uint64_t v19 = *(void *)(v17 + 32);
      *(void *)(v16 + 2sub_62AC(v0 + 4) = v18;
      *(void *)(v16 + 32) = v19;
      (**(void (***)(void))(v18 - 8))();
    }

    else
    {
      __int128 v20 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v20;
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
    }
  }

  return v4;
}

void *sub_554D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for ImpressionMetrics(0LL);
  uint64_t result = (void *)(a1 + *(int *)(a2 + 32));
  if (result[3]) {
    return (void *)sub_62AC(result);
  }
  return result;
}

uint64_t sub_55568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  __int128 v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
  __int128 v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 56, a2 + 56);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v10, 1LL, v11))
  {
    uint64_t v12 = sub_5F6C(&qword_7CB00);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
  }

  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 2sub_62AC(v0 + 4) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }

  else
  {
    __int128 v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }

  return a1;
}

uint64_t sub_556A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(void *)a1 = v6;
  sub_6520((void *)(a1 + 16), a2 + 2);
  sub_6520((void *)(a1 + 56), a2 + 7);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  int v11 = sub_6028((uint64_t)v8, 1LL, v10);
  int v12 = sub_6028((uint64_t)v9, 1LL, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
      sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (__int128 *)((char *)a2 + v15);
  uint64_t v18 = *((void *)v17 + 3);
  if (!*(void *)(a1 + v15 + 24))
  {
    if (v18)
    {
      *(void *)(v16 + 2sub_62AC(v0 + 4) = v18;
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      (**(void (***)(uint64_t, __int128 *))(v18 - 8))(v16, v17);
      return a1;
    }

uint64_t sub_5583C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  __int128 v7 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 72) = v7;
  uint64_t v11 = type metadata accessor for ImpressionMetrics(0LL);
  if (sub_6028((uint64_t)v10, 1LL, v11))
  {
    uint64_t v12 = sub_5F6C(&qword_7CB00);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v9, v10, v11);
    sub_5FEC((uint64_t)v9, 0LL, 1LL, v11);
  }

  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  __int128 v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_55944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  sub_62AC((void *)(a1 + 16));
  __int128 v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_62AC((void *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImpressionMetrics(0LL);
  int v11 = sub_6028((uint64_t)v8, 1LL, v10);
  int v12 = sub_6028((uint64_t)v9, 1LL, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
      sub_5FEC((uint64_t)v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_5F6C(&qword_7CB00);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  if (*(void *)(a1 + v15 + 24)) {
    sub_62AC((void *)(a1 + v15));
  }
  __int128 v17 = *(_OWORD *)(a2 + v15 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = v17;
  *(void *)(v16 + 32) = *(void *)(a2 + v15 + 32);
  return a1;
}

uint64_t sub_55ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_55AC8);
}

uint64_t sub_55AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_5F6C(&qword_7CB00);
    return sub_6028(a1 + *(int *)(a3 + 28), a2, v8);
  }

uint64_t sub_55B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_55B4C);
}

uint64_t sub_55B4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_5F6C(&qword_7CB00);
    return sub_5FEC(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }

  return result;
}

void sub_55BBC(uint64_t a1)
{
  v4[0] = "\n";
  v4[1] = &unk_604F8;
  _OWORD v4[2] = &unk_604F8;
  sub_CE80(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(v2 - 8) + 64LL;
    void v4[4] = &unk_60510;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
  }

id sub_55C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label];
  uint64_t KeyPath = swift_getKeyPath(&unk_60558);
  sub_5F6C(&qword_7F760);
  sub_55F60(KeyPath);
  swift_release();
  (*(void (**)(double *, uint64_t))&stru_158.sectname[swift_isaMask & *v5])(&v10, a3);
  sub_62AC(&v10);
  uint64_t v7 = swift_getKeyPath(&unk_60578);
  sub_55F60(v7);
  swift_release();
  double v8 = v10;
  if ((v11 & 1) != 0) {
    double v8 = 16.0;
  }
  if (v12) {
    double v8 = 0.0;
  }
  *(double *)&v3[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset] = v8;
  return [v3 layoutIfNeeded];
}

uint64_t sub_55D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for TextComponent();
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_55DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for TextComponent();
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, v9, a5);
}

uint64_t sub_55E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_60538, a4);
  return ComponentCell.apply(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_55E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_60538, a4);
  return ComponentCell.didSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_55ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_60538, a4);
  return ComponentCell.shouldSelect(contentsOf:with:asPartOf:)(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_55F34()
{
  return sub_98F0(&qword_7DAE8, type metadata accessor for Text, (uint64_t)&unk_603F0);
}

uint64_t sub_55F60(uint64_t a1)
{
  return DiffableLens.subscript.getter(a1, v1);
}

id sub_55F6C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label;
  type metadata accessor for DynamicLabel(0LL);
  double v10 = (void *)objc_opt_self(&OBJC_CLASS___UIColor);
  char v11 = v4;
  id v12 = objc_msgSend(v10, "ams_primaryText");
  uint64_t v13 = type metadata accessor for FontSource(0LL);
  v18[3] = v13;
  v18[4] = &protocol witness table for FontSource;
  *sub_7BA4(sub_6CDC(v12, v13, v14, v15, v16, v17, v18) = UIFontTextStyleBody;
  (*(void (**)(void))(*(void *)(v13 - 8) + 104LL))();
  uint64_t v14 = UIFontTextStyleBody;
  *(void *)&v4[v9] = DynamicLabel.__allocating_init(alignment:color:customTextStyle:)(4LL, v12, v18);
  *(void *)&v11[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset] = 0LL;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for TextComponent();
  id v15 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  sub_563C4((uint64_t)v15);

  return v15;
}

uint64_t sub_560E8()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for TextComponent();
  id v7 = sub_A32C((uint64_t)v9.super_class, "prepareForReuse", v1, v2, v3, v4, v5, v6, v9);
}

id sub_56178()
{
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for TextComponent();
  id v7 = sub_A32C((uint64_t)v20.super_class, "layoutSubviews", v1, v2, v3, v4, v5, v6, v20);
  double v8 = *(void **)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label];
  id v9 = sub_A324((uint64_t)v7, "contentView");
  [v9 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  return objc_msgSend( v8,  "setFrame:",  CGRect.subtracting(insets:)( v18,  0.0,  *(double *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset],  0.0,  *(double *)&v0[OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_widthInset],  v11,  v13,  v15,  v17));
}

double sub_56278(double a1, double a2, float a3, float a4)
{
  if (a3 == 1000.0) {
    double v8 = a1;
  }
  else {
    double v8 = 1.79769313e308;
  }
  if (a4 == 1000.0) {
    double v9 = a2;
  }
  else {
    double v9 = 1.79769313e308;
  }
  double v10 = v8
  id v11 = *(id *)(v4 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label);
  id v12 = sub_A324((uint64_t)v11, "contentView");
  objc_msgSend(v11, "measurementsWithFitting:in:", v12, v10, v9);
  if (a3 == 1000.0) {
    double v14 = a1;
  }
  else {
    double v14 = v13;
  }

  return v14;
}

void sub_563C4(uint64_t a1)
{
  id v2 = sub_A324(a1, "contentView");
  [v2 addSubview:*(void *)(v1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin13TextComponent_label)];
}

void sub_56410()
{
}

id sub_56448()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for TextComponent();
  return sub_A32C((uint64_t)v8.super_class, "dealloc", v1, v2, v3, v4, v5, v6, v8);
}

uint64_t type metadata accessor for TextComponent()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin13TextComponent);
}

void sub_564A4(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    unint64_t v4 = sub_56908();
    unint64_t v5 = sub_56944();
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v36, v3, v4, v5);
    uint64_t v1 = v36[0];
    uint64_t v33 = v36[1];
    uint64_t v7 = v36[2];
    int64_t v8 = v36[3];
    unint64_t v9 = v36[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(a1 + 32);
    uint64_t v33 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t v6 = (void *)swift_bridgeObjectRetain(a1);
    int64_t v8 = 0LL;
  }

  int64_t v13 = (unint64_t)(v7 + 64) >> 6;
  while (v1 < 0)
  {
    uint64_t v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17) {
      goto LABEL_42;
    }
    uint64_t v18 = v17;
    uint64_t v34 = v17;
    unint64_t v19 = sub_56908();
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v19, 7LL);
    id v20 = v35;
    swift_unknownObjectRelease(v18);
    int64_t v16 = v8;
    uint64_t v14 = v9;
    if (!v20) {
      goto LABEL_42;
    }
LABEL_29:
    uint64_t v23 = objc_opt_self(&OBJC_CLASS___UIWindowScene);
    uint64_t v24 = (void *)swift_dynamicCastObjCClass(v20, v23);
    if (!v24)
    {

      goto LABEL_35;
    }

    id v25 = [v24 keyWindow];

    int64_t v8 = v16;
    unint64_t v9 = v14;
    if (v25)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      unint64_t v27 = *(void *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFFF8LL));
      unint64_t v26 = *(void *)((char *)&dword_18 + (v37 & 0xFFFFFFFFFFFFFF8LL));
      if (v27 >= v26 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1LL);
      }
      uint64_t v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
      uint64_t v6 = (void *)specialized Array._endMutation()(v28, v29, v30, v31);
LABEL_35:
      int64_t v8 = v16;
      unint64_t v9 = v14;
    }
  }

  if (v9)
  {
    uint64_t v14 = (v9 - 1) & v9;
    unint64_t v15 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v16 = v8;
LABEL_28:
    id v20 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    if (!v20) {
      goto LABEL_42;
    }
    goto LABEL_29;
  }

  int64_t v16 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v16 >= v13) {
      goto LABEL_42;
    }
    unint64_t v21 = *(void *)(v33 + 8 * v16);
    if (!v21)
    {
      int64_t v22 = v8 + 2;
      if (v8 + 2 >= v13) {
        goto LABEL_42;
      }
      unint64_t v21 = *(void *)(v33 + 8 * v22);
      if (v21) {
        goto LABEL_26;
      }
      int64_t v22 = v8 + 3;
      if (v8 + 3 >= v13) {
        goto LABEL_42;
      }
      unint64_t v21 = *(void *)(v33 + 8 * v22);
      if (v21) {
        goto LABEL_26;
      }
      int64_t v22 = v8 + 4;
      if (v8 + 4 >= v13) {
        goto LABEL_42;
      }
      unint64_t v21 = *(void *)(v33 + 8 * v22);
      if (v21)
      {
LABEL_26:
        int64_t v16 = v22;
      }

      else
      {
        int64_t v16 = v8 + 5;
        if (v8 + 5 >= v13) {
          goto LABEL_42;
        }
        unint64_t v21 = *(void *)(v33 + 8 * v16);
        if (!v21)
        {
          int64_t v32 = v8 + 6;
          while (v32 < v13)
          {
            unint64_t v21 = *(void *)(v33 + 8 * v32++);
            if (v21)
            {
              int64_t v16 = v32 - 1;
              goto LABEL_27;
            }
          }

LABEL_42:
          sub_12338(v1);
          return;
        }
      }
    }

LABEL_27:
    uint64_t v14 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v16 << 6);
    goto LABEL_28;
  }

  __break(1u);
}

void *UIApplication.regularWidth.unsafeMutableAddressor()
{
  return &static UIApplication.regularWidth;
}

double static UIApplication.regularWidth.getter()
{
  return 375.0;
}

uint64_t static UIApplication.window.getter()
{
  id v1 = [(id)swift_getObjCClassFromMetadata(v0) sharedApplication];
  id v2 = [v1 connectedScenes];

  unint64_t v3 = sub_56908();
  unint64_t v4 = sub_56944();
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v2, v3, v4);

  sub_564A4(v5);
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease(v5);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v7);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v11);
    uint64_t result = swift_bridgeObjectRelease(v7);
    if (!v9) {
      goto LABEL_7;
    }
  }

  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL));
    if (!v9)
    {
LABEL_7:
      swift_bridgeObjectRelease(v7);
      return v9;
    }
  }

  if ((v7 & 0xC000000000000001LL) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v7);
    goto LABEL_6;
  }

  if (*(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8LL)))
  {
    id v10 = *(id *)(v7 + 32);
LABEL_6:
    uint64_t v9 = (uint64_t)v10;
    goto LABEL_7;
  }

  __break(1u);
  return result;
}

unint64_t sub_56908()
{
  unint64_t result = qword_7F7A0;
  if (!qword_7F7A0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIScene);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7F7A0);
  }

  return result;
}

unint64_t sub_56944()
{
  unint64_t result = qword_7F7A8;
  if (!qword_7F7A8)
  {
    unint64_t v1 = sub_56908();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_7F7A8);
  }

  return result;
}

void static UIApplication.hasNotch()()
{
  uint64_t v0 = (void *)static UIApplication.window.getter();
  if (v0)
  {
    unint64_t v1 = v0;
    [v0 safeAreaInsets];
  }

  sub_56A34();
}

void static UIApplication.isCompact()()
{
  uint64_t v0 = (void *)static UIApplication.window.getter();
  if (v0)
  {
    unint64_t v1 = v0;
    [v0 frame];
    CGRectGetWidth(v2);
  }

  sub_56A34();
}

unint64_t sub_56A10(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8LL)) > result)
    {
      return result;
    }

    __break(1u);
  }

  return result;
}

  ;
}

Swift::Void __swiftcall UICollectionViewCell.setFloatingStyle()()
{
}

void sub_56A54(double a1)
{
  id v2 = sub_56AD4();
  [v2 setCornerRadius:a1];

  id v3 = sub_56AD4();
  [v3 setMasksToBounds:1];
}

id sub_56AD4()
{
  return [v0 *(SEL *)(v1 + 1176)];
}

uint64_t sub_56AE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_56B1C(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v9 = swift_allocObject(&unk_759F0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v9 + 16, v4);
  uint64_t v10 = swift_allocObject(&unk_75A18, 32LL, 7LL);
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = v9;
  *(double *)(v10 + 2sub_62AC(v0 + 4) = a3;
  uint64_t v11 = sub_263E4((uint64_t)sub_21544, (uint64_t)_NSConcreteStackBlock, 1107296256LL, v12, v14);
  swift_release();
  if (a1)
  {
    a1 = sub_263E4((uint64_t)sub_56AE0, (uint64_t)_NSConcreteStackBlock, 1107296256LL, v13, v15);
    swift_retain(a2);
    swift_release();
  }

  [(id)objc_opt_self(UIView) animateWithDuration:134 delay:v11 options:a1 animations:a4 completion:0.0];
  _Block_release(a1);
  _Block_release(v11);
}

uint64_t sub_56C58()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_56C7C(uint64_t a1, double a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = Strong;
    [Strong setAlpha:a2];
  }

uint64_t sub_56CE4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_56D08()
{
}

uint64_t sub_56D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_56D24(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

id sub_56D34(char a1, char a2)
{
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  id v5 = [v4 areAnimationsEnabled];
  [v4 setAnimationsEnabled:a2 & 1];
  sub_56DAC(a1);
  return [v4 setAnimationsEnabled:v5];
}

void sub_56DAC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
  uint64_t v5 = swift_allocObject(&unk_75A90, 24LL, 7LL);
  swift_unknownObjectWeakInit(v5 + 16, v2);
  if ((a1 & 1) != 0)
  {
    uint64_t v11 = sub_57084;
    uint64_t v12 = v5;
    uint64_t v7 = _NSConcreteStackBlock;
    uint64_t v8 = 1107296256LL;
    uint64_t v9 = sub_21544;
    uint64_t v10 = &unk_75AD0;
    uint64_t v6 = _Block_copy(&v7);
    swift_release();
    [v4 animateWithDuration:v6 animations:0.165];
  }

  else
  {
    uint64_t v11 = sub_57064;
    uint64_t v12 = v5;
    uint64_t v7 = _NSConcreteStackBlock;
    uint64_t v8 = 1107296256LL;
    uint64_t v9 = sub_21544;
    uint64_t v10 = &unk_75AA8;
    uint64_t v6 = _Block_copy(&v7);
    swift_release();
    [v4 animateWithDuration:v6 animations:0.25];
  }

  _Block_release(v6);
}

uint64_t sub_56EE0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_56F04(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    CGAffineTransformMakeScale(&v6, 0.97, 0.97);
    [v3 setTransform:&v6];
  }

  swift_beginAccess(v1, &v6, 0LL, 0LL);
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 setAlpha:0.5];
  }

void sub_56FC0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = Strong;
    v6[0] = 0x3FF0000000000000LL;
    v6[1] = 0LL;
    void v6[2] = 0LL;
    v6[3] = 0x3FF0000000000000LL;
    v6[4] = 0LL;
    void v6[5] = 0LL;
    [Strong setTransform:v6];
  }

  swift_beginAccess(v1, v6, 0LL, 0LL);
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 setAlpha:1.0];
  }

void sub_57064()
{
}

uint64_t sub_5706C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_5707C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_57084()
{
}

id static UIVisualEffect.defaultBackground.getter()
{
  return [(id)objc_opt_self(UIBlurEffect) effectWithStyle:5003];
}

id static UIVisualEffect.defaultComponentBackground.getter()
{
  return [(id)objc_opt_self(UIBlurEffect) effectWithStyle:5001];
}

void sub_570F4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  id v8 = sub_A324(a1, "superview");
  if (v8)
  {
    id v35 = v8;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v9 = sub_5F6C(&qword_7DB20);
    uint64_t v10 = sub_19060(v9, 48LL);
    *(_OWORD *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_605E0;
    id v11 = sub_53160(v10, "centerXAnchor");
    id v12 = [v35 centerXAnchor];
    id v13 = sub_57688();

    *(void *)(v10 + 32) = v13;
    id v15 = sub_53160(v14, "centerYAnchor");
    id v16 = [v35 centerYAnchor];
    id v17 = sub_57688();

    *(void *)(v10 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v17;
    sub_576A4(v18, v19, v20, v21);
    sub_57644();
    Class isa = sub_57698().super.isa;
    sub_23920();
    [v35 addConstraints:isa];

    if ((a3 & 1) == 0)
    {
      double v23 = *(double *)&a2;
      uint64_t v24 = sub_19060(v9, 48LL);
      *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_605E0;
      id v25 = sub_53160(v24, "widthAnchor");
      id v26 = [v25 constraintEqualToConstant:*(double *)&a1];

      *(void *)(v24 + 32) = v26;
      id v28 = sub_53160(v27, "heightAnchor");
      id v29 = [v28 constraintEqualToConstant:v23];

      *(void *)(v24 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v29;
      sub_576A4(v30, v31, v32, v33);
      Class v34 = sub_57698().super.isa;
      sub_23920();
      [v4 addConstraints:v34];
    }

    sub_57680(v35);
  }

void sub_57360(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char v6 = a1;
  id v11 = sub_A324(a1, "superview");
  if (v11)
  {
    id v12 = v11;
    if ((v6 & 1) != 0)
    {
      id v13 = sub_53160((uint64_t)v11, "safeAreaLayoutGuide");
      id v14 = [v13 topAnchor];

      id v16 = sub_53160(v15, "safeAreaLayoutGuide");
      id v17 = [v16 bottomAnchor];
    }

    else
    {
      id v14 = sub_53160((uint64_t)v11, "topAnchor");
      id v17 = sub_53160((uint64_t)v14, "bottomAnchor");
    }

    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v18 = sub_5F6C(&qword_7DB20);
    uint64_t v19 = sub_19060(v18, 64LL);
    *(_OWORD *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5DAA0;
    id v20 = sub_A324(v19, "topAnchor");
    id v21 = [v20 constraintEqualToAnchor:v14 constant:a2];

    *(void *)(v19 + 32) = v21;
    id v23 = sub_A324(v22, "leadingAnchor");
    id v24 = sub_53160((uint64_t)v23, "leadingAnchor");
    id v25 = [v23 constraintEqualToAnchor:v24 constant:a3];

    *(void *)(v19 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v25;
    id v27 = sub_A324(v26, "bottomAnchor");
    id v28 = [v27 constraintEqualToAnchor:v17 constant:-a4];

    *(void *)(v19 + 48) = v28;
    id v30 = sub_A324(v29, "trailingAnchor");
    id v31 = sub_53160((uint64_t)v30, "trailingAnchor");
    id v32 = [v30 constraintEqualToAnchor:v31 constant:-a5];

    *(void *)(v19 + 56) = v32;
    specialized Array._endMutation()(v33, v34, v35, v36);
    sub_57644();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    sub_23920();
    [v12 addConstraints:isa];

    sub_57680(isa);
  }

unint64_t sub_57644()
{
  unint64_t result = qword_7F7B0;
  if (!qword_7F7B0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSLayoutConstraint);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_7F7B0);
  }

  return result;
}

void sub_57680(id a1)
{
}

id sub_57688()
{
  return objc_msgSend(v0, *(SEL *)(v2 + 1296), v1);
}

NSArray sub_57698()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_576A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return specialized Array._endMutation()(a1, a2, a3, a4);
}

uint64_t sub_576B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v17 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ActionFactory(0LL);
  uint64_t v9 = swift_allocObject(v8, 16LL, 7LL);
  uint64_t v10 = type metadata accessor for WebPageDestination(0LL);
  uint64_t v11 = sub_23E7C();
  if (v2)
  {
    uint64_t v11 = swift_errorRelease(v2);
    char v12 = 2;
  }

  else
  {
    char v12 = v11 & 1;
  }

  *(_BYTE *)a2 = v12;
  __chkstk_darwin(v11);
  *((void *)&v16 - 2) = v9;
  *((void *)&v16 - 1) = a1;
  sub_4EA8();
  sub_A60C((uint64_t)&v16, a2 + 8);
  *(void *)(a2 + 48) = sub_ED98(0x6B63617065646973LL, 0xE800000000000000LL, v10);
  sub_24068(7107189LL, 0xE300000000000000LL, v10, (uint64_t)v7);
  uint64_t v13 = type metadata accessor for JSONObject(0LL);
  sub_6D14(v13);
  swift_release();
  uint64_t v14 = type metadata accessor for JSONContext(0LL);
  sub_D79C(v14);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2 + *(int *)(v10 + 28), v7, v17);
}

uint64_t sub_578F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_576B0(a1, a2);
}

uint64_t type metadata accessor for WebPageDestination(uint64_t a1)
{
  uint64_t result = qword_7F810;
  if (!qword_7F810) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WebPageDestination);
  }
  return result;
}

_BYTE *sub_57944(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (_BYTE *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    *a1 = *(_BYTE *)a2;
    uint64_t v7 = a1 + 8;
    uint64_t v8 = a2 + 1;
    uint64_t v9 = a2[4];
    if (v9)
    {
      uint64_t v10 = a2[5];
      *((void *)v4 + sub_62AC(v0 + 4) = v9;
      *((void *)v4 + 5) = v10;
      (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
    }

    else
    {
      __int128 v12 = *(_OWORD *)(a2 + 3);
      *uint64_t v7 = *v8;
      *(_OWORD *)(v4 + 2sub_62AC(v0 + 4) = v12;
      *((void *)v4 + 5) = a2[5];
    }

    uint64_t v13 = a2[6];
    *((void *)v4 + 6) = v13;
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = &v4[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = type metadata accessor for URL(0LL);
    uint64_t v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16LL);
    swift_bridgeObjectRetain(v13);
    v18(v15, v16, v17);
  }

  return v4;
}

uint64_t sub_57A28(void *a1, uint64_t a2)
{
  if (a1[4]) {
    sub_62AC(a1 + 1);
  }
  swift_bridgeObjectRelease(a1[6]);
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for URL(0LL);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
}

uint64_t sub_57A80(uint64_t a1, char *a2, uint64_t a3)
{
  char v7 = *a2;
  uint64_t v6 = a2 + 8;
  *(_BYTE *)a1 = v7;
  uint64_t v8 = a1 + 8;
  uint64_t v9 = *((void *)a2 + 4);
  if (v9)
  {
    uint64_t v10 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v10;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v8, (uint64_t)v6);
  }

  else
  {
    __int128 v11 = *((_OWORD *)v6 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v6;
    *(_OWORD *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v11;
    *(void *)(v8 + 32) = *((void *)v6 + 4);
  }

  uint64_t v12 = *((void *)a2 + 6);
  *(void *)(a1 + 48) = v12;
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for URL(0LL);
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 16LL);
  swift_bridgeObjectRetain(v12);
  v17(v14, v15, v16);
  return a1;
}

uint64_t sub_57B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v6 = a1 + 8;
  char v7 = (__int128 *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v8)
    {
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }

uint64_t sub_57C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 2sub_62AC(v0 + 4) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32LL))(v6, v7, v8);
  return a1;
}

uint64_t sub_57C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v6 = a1 + 8;
  if (*(void *)(a1 + 32)) {
    sub_62AC((void *)(a1 + 8));
  }
  __int128 v7 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(v6 + 32) = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40LL))(v11, v12, v13);
  return a1;
}

uint64_t sub_57D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_57D34);
}

uint64_t sub_57D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }

  else
  {
    uint64_t v9 = type metadata accessor for URL(0LL);
    return sub_6028(a1 + *(int *)(a3 + 28), a2, v9);
  }

uint64_t sub_57DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_57DC0);
}

uint64_t sub_57DC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }

  else
  {
    uint64_t v7 = type metadata accessor for URL(0LL);
    return sub_5FEC(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }

  return result;
}

uint64_t sub_57E2C(uint64_t a1)
{
  v4[0] = &unk_60638;
  v4[1] = &unk_60650;
  _OWORD v4[2] = &unk_60668;
  uint64_t result = type metadata accessor for URL(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

id sub_57EB8(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)) initWithRequest:a1 presentingViewController:a2];

  return v5;
}

void sub_57F10(void *a1, void (*a2)(void **, void))
{
  unint64_t v4 = a1;
  id v3 = a1;
  a2(&v4, 0LL);
  sub_44440(v3);
}

uint64_t sub_57F4C(uint64_t (*a1)(char *, void))
{
  char v2 = 0;
  return a1(&v2, 0LL);
}

void sub_57F84(uint64_t a1, void (*a2)(uint64_t *, uint64_t))
{
  uint64_t v2 = 0LL;
  a2(&v2, a1);
  sub_E850();
}

uint64_t sub_57FB4(uint64_t a1)
{
  return Promise.resolve(_:)(a1);
}

char *sub_57FD4()
{
  uint64_t v73 = v1;
  uint64_t v74 = v2;
  id v3 = v0;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_23758();
  __chkstk_darwin(v8);
  sub_12718();
  uint64_t v61 = v9;
  uint64_t v10 = type metadata accessor for Bag(0LL);
  uint64_t v66 = *(void *)(v10 - 8);
  sub_23758();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_preloadingCompletionPromise;
  uint64_t v15 = sub_5F6C((uint64_t *)&unk_7F8F0);
  uint64_t v16 = v3;
  uint64_t v64 = v15;
  *(void *)&v3[v14] = Promise.__allocating_init()(v16);
  uint64_t v17 = type metadata accessor for DynamicAccountsStore(0LL);
  uint64_t v18 = type metadata accessor for BaseObjectGraph(0LL);
  uint64_t v19 = inject<A, B>(_:from:)(v17, v5, v17, v18);
  id v20 = *(uint64_t (**)(uint64_t))(*(void *)v70[0] + 128LL);
  uint64_t v65 = v70[0];
  id v21 = (void *)v20(v19);
  uint64_t v22 = inject<A, B>(_:from:)(v10, v5, v10, v18);
  uint64_t v23 = sub_125F8(v22, &qword_7D660, &OBJC_CLASS___AMSProcessInfo_ptr);
  sub_5AC98(v23);
  id v24 = (void *)v70[0];
  sub_5AC98((uint64_t)&type metadata for MetricsContext);
  uint64_t v25 = v70[1];
  *(void *)&v16[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_objectGraph] = v5;
  sub_4436C( (uint64_t)(v7 + 8),  (uint64_t)&v16[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_resolveAction],  (uint64_t *)&unk_7F900);
  uint64_t v60 = v5;
  swift_retain(v5);

  uint64_t v26 = v13;
  uint64_t v27 = Bag.amsBag.getter();
  id v28 = (objc_class *)type metadata accessor for WebPageViewController();
  v72.receiver = v16;
  v72.super_class = v28;
  id v62 = v24;
  id v63 = v21;
  uint64_t v29 = (char *)objc_msgSendSuper2(&v72, "initWithBag:account:clientInfo:", v27, v21, v24);
  swift_unknownObjectRelease(v27);
  uint64_t v68 = v7;
  uint64_t v30 = *((void *)v7 + 6);
  uint64_t v67 = v10;
  id v31 = v29;
  if (v30)
  {
    swift_bridgeObjectRetain(v30);
    v32.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v30);
  }

  else
  {
    v32.super.Class isa = 0LL;
  }

  [v29 setClientOptions:v32.super.isa];

  [v29 setDelegate:v29];
  uint64_t v33 = v29;
  if (v25)
  {
    v34.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v25);
  }

  else
  {
    v34.super.Class isa = 0LL;
  }

  [v29 setMetricsOverlay:v34.super.isa];

  int v35 = *v68;
  if (v35 != 2)
  {
    uint64_t v36 = v35 & 1;
    uint64_t v37 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v38 = sub_50424();
    uint64_t v39 = swift_allocObject( v37,  ((*(unsigned __int8 *)(*(void *)(v38 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v38 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v38 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v39 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD70;
    uint64_t v71 = v28;
    v70[0] = v29;
    uint64_t v40 = v29;
    id v41 = (id)AMSLogKey(v40);
    if (v41)
    {
      uint64_t v43 = v41;
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);
      uint64_t v60 = v45;
      uint64_t v61 = v44;

      sub_C3B0();
      sub_C3E8();
      sub_5AB64(v70);
      uint64_t v46 = sub_5ACD8();
      sub_5AC44(v46);
      sub_14C38((uint64_t)v69, &qword_7DDE0);
      sub_C378();
      v69[3] = &type metadata for String;
      v69[0] = v61;
      v69[1] = v60;
      sub_5AC5C();
      sub_14C38((uint64_t)v69, &qword_7DDE0);
      uint64_t v47 = 93LL;
    }

    else
    {
      sub_C390();
      sub_C3E8();
      sub_5AB64(v70);
      uint64_t v48 = sub_5ACD8();
      uint64_t v49 = sub_5AC44(v48);
      sub_5AD0C(v49, &qword_7DDE0);
      uint64_t v47 = 58LL;
    }

    sub_50494(v47);
    sub_503F4();
    sub_238FC();
    sub_62AC(v70);
    sub_5AC90(28LL, 0x80000000000656E0LL);
    uint64_t v71 = (objc_class *)&type metadata for Bool;
    LOBYTE(v70[0]) = v36;
    static LogMessage.safe(_:)(v70);
    sub_14C38((uint64_t)v70, &qword_7DDE0);
    sub_2679C(v39);
    swift_bridgeObjectRelease(v39);
    [v40 setReducedMemoryMode:v36];
  }

  uint64_t v50 = *(void *)&v29[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_preloadingCompletionPromise];
  type metadata accessor for WebPageDestination(0LL);
  uint64_t v51 = (uint64_t)v68;
  uint64_t v52 = v29;
  URL._bridgeToObjectiveC()(v53);
  uint64_t v55 = v54;
  id v56 = [v52 loadURL:v54];

  uint64_t v57 = ((uint64_t (*)(id))Promise<A>.init(_:))(v56);
  sub_125F8(v57, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v58 = (void *)sub_5AD04();
  sub_5A628(v57, v58, v50);

  swift_release();
  swift_release();

  swift_release();
  sub_14C60(v51, type metadata accessor for WebPageDestination);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v26, v67);
  return v52;
}

void sub_58540()
{
  uint64_t v1 = OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_preloadingCompletionPromise;
  uint64_t v2 = sub_5F6C((uint64_t *)&unk_7F8F0);
  *(void *)&v0[v1] = Promise.__allocating_init()(v2);

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/WebPageViewController.swift",  47LL,  2LL,  49LL,  0);
  __break(1u);
}

void sub_585E0()
{
}

id sub_58634()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WebPageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for WebPageViewController()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPlugin21WebPageViewController);
}

uint64_t sub_586D4()
{
  return swift_retain(*(void *)(v0
                                + OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_preloadingCompletionPromise));
}

void sub_586E4()
{
}

void sub_58704()
{
}

uint64_t sub_58734()
{
  return sub_586D4();
}

void sub_58754()
{
}

void sub_58770(uint64_t a1)
{
}

void sub_5879C()
{
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  sub_5ACC0();
  sub_23758();
  __chkstk_darwin(v5);
  uint64_t v32 = *(void *)(sub_3CCA0() - 8);
  sub_23758();
  __chkstk_darwin(v6);
  sub_5AB80();
  sub_23758();
  __chkstk_darwin(v7);
  sub_504E0();
  sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v8 = sub_50424();
  uint64_t v9 = sub_5AB9C(v8);
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v10 = type metadata accessor for WebPageViewController();
  id v11 = sub_5AD30(v10);
  id v12 = (id)AMSLogKey(v11);
  if (v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);
    sub_5AC28();
    sub_C3B0();
    sub_C3E8();
    uint64_t v14 = v34;
    uint64_t v15 = sub_7A94(v33, v34);
    uint64_t v16 = sub_2C92C((uint64_t)v15, v14);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v16);
    uint64_t v37 = v16;
    sub_5AC54();
    sub_5AC1C();
    sub_C378();
    sub_5ABFC((uint64_t)&type metadata for String);
    sub_5AC1C();
    uint64_t v17 = 93LL;
  }

  else
  {
    sub_C390();
    sub_C3E8();
    uint64_t v18 = v34;
    uint64_t v19 = sub_7A94(v33, v34);
    uint64_t v20 = sub_2C92C((uint64_t)v19, v18);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v20);
    uint64_t v37 = v20;
    sub_5AC54();
    sub_14C38((uint64_t)&v37, &qword_7DDE0);
    uint64_t v17 = 58LL;
  }

  sub_50494(v17);
  sub_503F4();
  sub_238FC();
  sub_62AC(v33);
  sub_5AD3C();
  uint64_t v22 = sub_5AC90(33LL, v21);
  uint64_t v23 = (const void *)(v9 + v0 + 2 * v2);
  uint64_t v24 = sub_125F8(v22, &qword_7D1F0, &OBJC_CLASS___AMSAuthenticateRequest_ptr);
  sub_5AD24(v24);
  sub_5ACF4();
  sub_14C38((uint64_t)v33, &qword_7DDE0);
  sub_2679C(v9);
  uint64_t v25 = swift_bridgeObjectRelease(v9);
  sub_125F8(v25, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v26 = (void *)sub_5AD04();
  uint64_t v27 = (void *)sub_19060((uint64_t)&unk_75D20, 48LL);
  _OWORD v27[2] = v11;
  _OWORD v27[3] = v30;
  void v27[4] = v31;
  void v27[5] = v1;
  int v35 = sub_5A9E8;
  uint64_t v36 = v27;
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 1107296256LL;
  sub_5AD70((uint64_t)sub_21544);
  sub_5AD48();
  id v28 = v1;
  swift_retain(v31);
  sub_12778();
  sub_5AD68();
  v33[0] = _swiftEmptyArrayStorage;
  sub_231D8();
  sub_5F6C(&qword_7DE38);
  unint64_t v29 = sub_5AD54();
  sub_5ABC4(v29);
  sub_5AC64();
  _Block_release(v23);

  sub_5ACAC();
  sub_5ACCC(v32);
  sub_9ABC();
}

void sub_58A5C(char *a1, void (*a2)(void, void), uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for NavigationControllerList(0LL);
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_objectGraph];
  uint64_t v13 = type metadata accessor for BaseObjectGraph(0LL);
  uint64_t v14 = inject<A, B>(_:from:)(v11, v12, v11, v13);
  uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)aBlock[0] + 88LL))(v14);
  if (v15
    && (uint64_t v16 = v15,
        id v17 = [v15 topViewController],
        v16,
        v17))
  {
    id v50 = a4;
    uint64_t v51 = a2;
    uint64_t v18 = sub_5F6C((uint64_t *)&unk_7D650);
    uint64_t v19 = type metadata accessor for LogMessage(0LL);
    uint64_t v20 = swift_allocObject( v18,  ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL))
          + 3LL * *(void *)(*(void *)(v19 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v19 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD70;
    uint64_t v53 = (void *)type metadata accessor for WebPageViewController();
    aBlock[0] = a1;
    uint64_t v21 = a1;
    id v22 = v17;
    id v23 = (id)AMSLogKey(v22);
    if (v23)
    {
      uint64_t v25 = v23;
      uint64_t v26 = a3;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);
      id v49 = v22;
      uint64_t v29 = v28;

      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v30._countAndFlagsBits = 0LL;
      v30._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t v31 = v53;
      uint64_t v32 = sub_7A94(aBlock, (uint64_t)v53);
      uint64_t DynamicType = swift_getDynamicType(v32, v31, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v56[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
      sub_14C38((uint64_t)v56, &qword_7DDE0);
      v34._countAndFlagsBits = 5972026LL;
      v34._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      uint64_t MetatypeMetadata = &type metadata for String;
      v56[0] = v27;
      v56[1] = v29;
      a3 = v26;
      id v22 = v49;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
      sub_14C38((uint64_t)v56, &qword_7DDE0);
      uint64_t v35 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v38._countAndFlagsBits = 0LL;
      v38._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      uint64_t v39 = v53;
      uint64_t v40 = sub_7A94(aBlock, (uint64_t)v53);
      uint64_t v41 = swift_getDynamicType(v40, v39, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v41);
      v56[0] = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
      sub_14C38((uint64_t)v56, &qword_7DDE0);
      uint64_t v35 = 58LL;
    }

    unint64_t v42 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v35);
    LogMessage.init(stringInterpolation:)(v10);
    type metadata accessor for Log();
    sub_62AC(aBlock);
    LogMessage.init(stringLiteral:)(0x69746E6573657250LL, 0xEE003A637620676ELL);
    uint64_t v53 = (void *)sub_C184(0LL, (unint64_t *)&unk_7F940, &OBJC_CLASS___UIViewController_ptr);
    aBlock[0] = v22;
    id v43 = v22;
    static LogMessage.safe(_:)(aBlock);
    sub_14C38((uint64_t)aBlock, &qword_7DDE0);
    sub_2696C(v20);
    swift_bridgeObjectRelease(v20);
    sub_C184(0LL, &qword_7D610, &OBJC_CLASS___AMSUIAuthenticateTask_ptr);
    id v44 = sub_57EB8(v50, v43);
    id v45 = [v44 performAuthentication];
    uint64_t v46 = swift_allocObject(&unk_75D70, 32LL, 7LL);
    *(void *)(v46 + swift_unknownObjectWeakDestroy(v0 + 16) = v51;
    *(void *)(v46 + 2sub_62AC(v0 + 4) = a3;
    uint64_t v54 = sub_5AB2C;
    uint64_t v55 = v46;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_58EE8;
    uint64_t v53 = &unk_75D88;
    uint64_t v47 = _Block_copy(aBlock);
    swift_retain(a3);
    swift_release();
    [v45 addFinishBlock:v47];
    swift_release();

    _Block_release(v47);
  }

  else
  {
    unint64_t v36 = sub_5A954();
    uint64_t v37 = swift_allocError(&type metadata for WebPageViewController.PresentationError, v36, 0LL, 0LL);
    a2(0LL, v37);
    swift_errorRelease(v37);
    swift_release();
  }

void sub_58F08()
{
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  sub_5ACC0();
  sub_23758();
  __chkstk_darwin(v5);
  uint64_t v32 = *(void *)(sub_3CCA0() - 8);
  sub_23758();
  __chkstk_darwin(v6);
  sub_5AB80();
  sub_23758();
  __chkstk_darwin(v7);
  sub_504E0();
  sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v8 = sub_50424();
  uint64_t v9 = sub_5AB9C(v8);
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD70;
  uint64_t v10 = type metadata accessor for WebPageViewController();
  id v11 = sub_5AD30(v10);
  id v12 = (id)AMSLogKey(v11);
  if (v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);
    sub_5AC28();
    sub_C3B0();
    sub_C3E8();
    uint64_t v14 = v34;
    uint64_t v15 = sub_7A94(v33, v34);
    uint64_t v16 = sub_2C92C((uint64_t)v15, v14);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v16);
    uint64_t v37 = v16;
    sub_5AC54();
    sub_5AC1C();
    sub_C378();
    sub_5ABFC((uint64_t)&type metadata for String);
    sub_5AC1C();
    uint64_t v17 = 93LL;
  }

  else
  {
    sub_C390();
    sub_C3E8();
    uint64_t v18 = v34;
    uint64_t v19 = sub_7A94(v33, v34);
    uint64_t v20 = sub_2C92C((uint64_t)v19, v18);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v20);
    uint64_t v37 = v20;
    sub_5AC54();
    sub_14C38((uint64_t)&v37, &qword_7DDE0);
    uint64_t v17 = 58LL;
  }

  sub_50494(v17);
  sub_503F4();
  sub_238FC();
  sub_62AC(v33);
  sub_5AD3C();
  uint64_t v22 = sub_5AC90(25LL, v21);
  id v23 = (const void *)(v9 + v0 + 2 * v2);
  uint64_t v24 = sub_125F8(v22, &qword_7F930, &OBJC_CLASS___AMSDialogRequest_ptr);
  sub_5AD24(v24);
  sub_5ACF4();
  sub_14C38((uint64_t)v33, &qword_7DDE0);
  sub_2679C(v9);
  uint64_t v25 = swift_bridgeObjectRelease(v9);
  sub_125F8(v25, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v26 = (void *)sub_5AD04();
  uint64_t v27 = (void *)sub_19060((uint64_t)&unk_75C58, 48LL);
  _OWORD v27[2] = v11;
  _OWORD v27[3] = v30;
  void v27[4] = v31;
  void v27[5] = v1;
  uint64_t v35 = sub_5A948;
  unint64_t v36 = v27;
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 1107296256LL;
  sub_5AD70((uint64_t)sub_21544);
  sub_5AD48();
  id v28 = v1;
  swift_retain(v31);
  sub_12778();
  sub_5AD68();
  v33[0] = _swiftEmptyArrayStorage;
  sub_231D8();
  sub_5F6C(&qword_7DE38);
  unint64_t v29 = sub_5AD54();
  sub_5ABC4(v29);
  sub_5AC64();
  _Block_release(v23);

  sub_5ACAC();
  sub_5ACCC(v32);
  sub_9ABC();
}

void sub_591C8(uint64_t a1, void (*a2)(void, uint64_t), uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for NavigationControllerList(0LL);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_objectGraph);
  uint64_t v10 = type metadata accessor for BaseObjectGraph(0LL);
  uint64_t v11 = inject<A, B>(_:from:)(v8, v9, v8, v10);
  id v12 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v23[0] + 88LL))(v11);
  if (v12
    && (uint64_t v13 = v12,
        id v14 = [v12 topViewController],
        v13,
        v14))
  {
    sub_C184(0LL, &qword_7D5F0, &OBJC_CLASS___AMSUIAlertDialogTask_ptr);
    id v15 = a4;
    id v16 = v14;
    id v17 = sub_57EB8(v15, v16);
    id v18 = [v17 present];
    uint64_t v19 = swift_allocObject(&unk_75CA8, 32LL, 7LL);
    *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
    *(void *)(v19 + 2sub_62AC(v0 + 4) = a3;
    v23[4] = sub_44278;
    v23[5] = v19;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 1107296256LL;
    void v23[2] = sub_58EE8;
    void v23[3] = &unk_75CC0;
    uint64_t v20 = _Block_copy(v23);
    swift_retain(a3);
    swift_release();
    [v18 addFinishBlock:v20];
    _Block_release(v20);
    swift_release();
  }

  else
  {
    unint64_t v21 = sub_5A954();
    uint64_t v22 = swift_allocError(&type metadata for WebPageViewController.PresentationError, v21, 0LL, 0LL);
    a2(0LL, v22);
    swift_errorRelease(v22);
    swift_release();
  }

void sub_593C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = *(void (**)(void *, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  id v8 = a2;
  id v7 = a3;
  v6(a2, a3);
  swift_release(v5);
}

uint64_t sub_59450( void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(void))
{
  uint64_t v13 = _Block_copy(aBlock);
  *(void *)(sub_19060(a6, 24LL) + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  id v14 = a3;
  id v15 = a4;
  id v16 = a1;
  a8();

  return swift_release();
}

void sub_594F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)(a2);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = (void *)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
  sub_44440(v6);
}

void sub_59544()
{
  uint64_t v35 = v4;
  uint64_t v5 = sub_5ACC0();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  sub_23758();
  __chkstk_darwin(v6);
  uint64_t v36 = *(void *)(sub_3CCA0() - 8);
  sub_23758();
  __chkstk_darwin(v7);
  sub_5AB80();
  sub_23758();
  __chkstk_darwin(v8);
  sub_504E0();
  uint64_t v9 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v10 = *(void *)(sub_50424() - 8);
  uint64_t v11 = swift_allocObject( v9,  ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
        + 5LL * *(void *)(v10 + 72),
          *(unsigned __int8 *)(v10 + 80) | 7LL);
  *(_OWORD *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5DB10;
  *((void *)&v42 + 1) = type metadata accessor for WebPageViewController();
  *(void *)&__int128 v41 = v0;
  id v34 = v0;
  id v12 = (id)AMSLogKey(v34);
  if (v12)
  {
    id v14 = v12;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);
    uint64_t v17 = v16;

    sub_C3B0();
    sub_C3E8();
    sub_5AB64(&v41);
    uint64_t v18 = sub_5ACD8();
    sub_53200(v18);
    sub_5AD14((uint64_t)v45);
    sub_C378();
    void v45[3] = &type metadata for String;
    v45[0] = v15;
    v45[1] = v17;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
    sub_5AD14((uint64_t)v45);
    uint64_t v19 = 93LL;
  }

  else
  {
    sub_C390();
    sub_C3E8();
    sub_5AB64(&v41);
    uint64_t v20 = sub_5ACD8();
    sub_53200(v20);
    sub_14C38((uint64_t)v45, &qword_7DDE0);
    uint64_t v19 = 58LL;
  }

  sub_50494(v19);
  sub_503F4();
  sub_62AC(&v41);
  sub_5AD3C();
  uint64_t v22 = sub_5AC90(26LL, v21);
  if (v3)
  {
    *((void *)&v42 + 1) = sub_125F8(v22, &qword_7F928, &OBJC_CLASS___AMSPurchaseResult_ptr);
    *(void *)&__int128 v41 = v3;
  }

  else
  {
    __int128 v41 = 0u;
    __int128 v42 = 0u;
  }

  id v23 = v3;
  static LogMessage.safe(_:)(&v41);
  sub_14C38((uint64_t)&v41, &qword_7DDE0);
  sub_5AC7C();
  if (v35)
  {
    swift_getErrorValue(v35, &v40, v39);
    *((void *)&v42 + 1) = v39[1];
    uint64_t v24 = sub_7BA4(&v41);
    sub_5ACE0((uint64_t)v24);
  }

  else
  {
    __int128 v41 = 0u;
    __int128 v42 = 0u;
  }

  sub_238FC();
  static LogMessage.safe(_:)(&v41);
  sub_14C38((uint64_t)&v41, &qword_7DDE0);
  sub_2679C(v11);
  uint64_t v25 = swift_bridgeObjectRelease(v11);
  sub_125F8(v25, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v26 = (void *)sub_5AD04();
  uint64_t v27 = (void *)sub_19060((uint64_t)&unk_75BE0, 40LL);
  _OWORD v27[2] = v34;
  _OWORD v27[3] = v3;
  void v27[4] = v35;
  id v43 = sub_5A8C4;
  id v44 = v27;
  *(void *)&__int128 v41 = _NSConcreteStackBlock;
  *((void *)&v41 + 1) = 1107296256LL;
  *(void *)&__int128 v42 = sub_21544;
  *((void *)&v42 + 1) = &unk_75BF8;
  id v28 = _Block_copy(&v41);
  unint64_t v29 = v44;
  id v30 = v34;
  id v31 = v23;
  swift_errorRetain(v35);
  sub_12778();
  sub_5AD68();
  *(void *)&__int128 v41 = _swiftEmptyArrayStorage;
  unint64_t v32 = sub_231D8();
  sub_5F6C(&qword_7DE38);
  unint64_t v33 = sub_5AD54();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v29, v33, v38, v32);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v2, v1, v28);
  _Block_release(v28);

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v1, v38);
  sub_5ACCC(v36);
  sub_9ABC();
}

uint64_t sub_598F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DelegateController(0LL);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_objectGraph);
  uint64_t v8 = type metadata accessor for BaseObjectGraph(0LL);
  inject<A, B>(_:from:)(v6, v7, v6, v8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 200LL))(a2, a3);
  return swift_release();
}

void sub_59A00()
{
  uint64_t v65 = v1;
  uint64_t v63 = v2;
  uint64_t v69 = v3;
  uint64_t v5 = v4;
  type metadata accessor for ResultingActionDispatcher.MetricsBehavior(0LL);
  sub_23758();
  __chkstk_darwin(v6);
  sub_12718();
  uint64_t v62 = v7;
  uint64_t v8 = type metadata accessor for MetricsFieldsContext(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_12718();
  uint64_t v64 = v10;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_23758();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v13 = *(void *)(sub_50424() - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v15 + 32) & ~v15;
  uint64_t v61 = v15 | 7;
  uint64_t v17 = swift_allocObject(v12, v16 + 5 * v14, v15 | 7);
  *(_OWORD *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5DB10;
  uint64_t v60 = type metadata accessor for WebPageViewController();
  *((void *)&v78 + 1) = v60;
  *(void *)&__int128 v77 = v0;
  uint64_t v18 = v0;
  id v19 = (id)AMSLogKey(v18);
  uint64_t v67 = v8;
  uint64_t v66 = v9;
  uint64_t v68 = v18;
  if (v19)
  {
    uint64_t v21 = v19;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);
    uint64_t v24 = v23;

    sub_C3B0();
    sub_7C2C();
    uint64_t v25 = *((void *)&v78 + 1);
    uint64_t v26 = sub_7A94(&v77, *((uint64_t *)&v78 + 1));
    sub_2C92C((uint64_t)v26, v25);
    uint64_t v27 = sub_C3CC();
    sub_5ABE8(v27);
    sub_5AD14((uint64_t)&v74);
    sub_C378();
    uint64_t v75 = &type metadata for String;
    *(void *)&__int128 v74 = v22;
    *((void *)&v74 + 1) = v24;
    sub_5AC5C();
    sub_5AD14((uint64_t)&v74);
    uint64_t v28 = 93LL;
  }

  else
  {
    sub_C390();
    sub_7C2C();
    sub_5AB64(&v77);
    uint64_t v29 = sub_5ACD8();
    uint64_t v30 = sub_5AC44(v29);
    sub_5AD0C(v30, &qword_7DDE0);
    uint64_t v28 = 58LL;
  }

  sub_505D4(v28);
  sub_5AD5C();
  sub_62AC(&v77);
  sub_5AD3C();
  LogMessage.init(stringLiteral:)(v31, v32);
  if (v5)
  {
    *((void *)&v78 + 1) = sub_5F6C(&qword_7D668);
    *(void *)&__int128 v77 = v5;
  }

  else
  {
    __int128 v77 = 0u;
    __int128 v78 = 0u;
  }

  swift_bridgeObjectRetain(v5);
  static LogMessage.safe(_:)(&v77);
  sub_14C38((uint64_t)&v77, &qword_7DDE0);
  sub_5AC7C();
  if (v69)
  {
    swift_getErrorValue(v69, &v71, v70);
    *((void *)&v78 + 1) = v70[1];
    unint64_t v33 = sub_7BA4(&v77);
    sub_5ACE0((uint64_t)v33);
  }

  else
  {
    __int128 v77 = 0u;
    __int128 v78 = 0u;
  }

  sub_238FC();
  static LogMessage.safe(_:)(&v77);
  sub_14C38((uint64_t)&v77, &qword_7DDE0);
  sub_2679C(v17);
  swift_bridgeObjectRelease(v17);
  sub_4436C( (uint64_t)&v68[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_resolveAction],  (uint64_t)&v74,  (uint64_t *)&unk_7F900);
  if (v75)
  {
    sub_6010(&v74, (uint64_t)&v77);
    if (v5)
    {
      uint64_t v75 = (void *)sub_5F6C(&qword_7D668);
      *(void *)&__int128 v74 = v5;
      char v76 = 1;
    }

    else if (v69)
    {
      *(void *)&__int128 v74 = v69;
      char v76 = 0;
      swift_errorRetain(v69);
    }

    else
    {
      unint64_t v50 = sub_5A704();
      v72[0] = swift_allocError(&type metadata for WebPageViewController.ResolveActionError, v50, 0LL, 0LL);
      char v73 = 0;
      sub_2C838((uint64_t)v72, (uint64_t)&v74);
    }

    uint64_t v51 = type metadata accessor for ResultingActionDispatcher(0LL);
    uint64_t v52 = *(void *)&v68[OBJC_IVAR____TtC19CoreDynamicUIPlugin21WebPageViewController_objectGraph];
    uint64_t v53 = type metadata accessor for BaseObjectGraph(0LL);
    swift_bridgeObjectRetain(v5);
    inject<A, B>(_:from:)(v51, v52, v51, v53);
    uint64_t v54 = v72[0];
    inject<A, B>(_:from:)(v67, v52, v67, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v62, v64, v67);
    uint64_t v55 = sub_5F6C(&qword_7D7E0);
    sub_5FEC(v62, 0LL, 1LL, v55);
    sub_2C874((uint64_t)&v74, (uint64_t)v72);
    (*(void (**)(__int128 *, uint64_t, uint64_t, void *))(*(void *)v54 + 216LL))(&v77, v62, v52, v72);
    sub_14C38((uint64_t)v72, &qword_7F920);
    sub_14C60( v62,  (uint64_t (*)(void))&type metadata accessor for ResultingActionDispatcher.MetricsBehavior);
    id v56 = (void *)sub_19060((uint64_t)&unk_75B68, 40LL);
    v56[2] = v68;
    void v56[3] = v63;
    v56[4] = v65;
    sub_125F8((uint64_t)v56, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v57 = v68;
    uint64_t v58 = swift_retain(v65);
    uint64_t v59 = (void *)static OS_dispatch_queue.main.getter(v58);
    sub_5A774(v59, (uint64_t)sub_5A768, (uint64_t)v56);

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v67);
    sub_14BCC((uint64_t)&v74);
    sub_62AC(&v77);
  }

  else
  {
    sub_5AD0C(v34, (uint64_t *)&unk_7F900);
    uint64_t v35 = swift_allocObject(v12, v16 + 2 * v14, v61);
    *(_OWORD *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5CD80;
    *((void *)&v78 + 1) = v60;
    *(void *)&__int128 v77 = v68;
    id v36 = (id)AMSLogKey(v68);
    if (v36)
    {
      uint64_t v38 = v36;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);
      uint64_t v41 = v40;

      sub_C3B0();
      sub_7C2C();
      uint64_t v42 = *((void *)&v78 + 1);
      id v43 = sub_7A94(&v77, *((uint64_t *)&v78 + 1));
      sub_2C92C((uint64_t)v43, v42);
      uint64_t v44 = sub_C3CC();
      sub_5ABE8(v44);
      sub_5AD7C();
      sub_C378();
      uint64_t v75 = &type metadata for String;
      *(void *)&__int128 v74 = v39;
      *((void *)&v74 + 1) = v41;
      sub_5AC5C();
      sub_5AD7C();
      uint64_t v45 = 93LL;
    }

    else
    {
      sub_C390();
      sub_7C2C();
      uint64_t v46 = *((void *)&v78 + 1);
      uint64_t v47 = sub_7A94(&v77, *((uint64_t *)&v78 + 1));
      sub_2C92C((uint64_t)v47, v46);
      uint64_t v48 = sub_C3CC();
      uint64_t v49 = sub_5ABE8(v48);
      sub_5AD0C(v49, &qword_7DDE0);
      uint64_t v45 = 58LL;
    }

    sub_505D4(v45);
    sub_5AD5C();
    sub_62AC(&v77);
    sub_5AC90(28LL, 0x8000000000065730LL);
    sub_2679C(v35);
    swift_bridgeObjectRelease(v35);
  }

  sub_9ABC();
}

void sub_5A0B4( unsigned __int8 *a1, uint64_t a2, void *a3, void (*a4)(__int128 *, uint64_t), uint64_t a5)
{
  v36[1] = a5;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v12 = *a1;
  uint64_t v13 = sub_5F6C((uint64_t *)&unk_7D650);
  uint64_t v14 = type metadata accessor for LogMessage(0LL);
  uint64_t v15 = swift_allocObject( v13,  ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL))
        + 5LL * *(void *)(*(void *)(v14 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_5DB10;
  *((void *)&v43 + 1) = type metadata accessor for WebPageViewController();
  *(void *)&__int128 v42 = a3;
  id v16 = (id)AMSLogKey(a3);
  if (v16)
  {
    uint64_t v18 = v16;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);
    uint64_t v21 = v20;

    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v22._countAndFlagsBits = 0LL;
    v22._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = *((void *)&v43 + 1);
    uint64_t v24 = sub_7A94(&v42, *((uint64_t *)&v43 + 1));
    uint64_t DynamicType = swift_getDynamicType(v24, v23, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v40[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_14C38((uint64_t)v40, &qword_7DDE0);
    v26._countAndFlagsBits = 5972026LL;
    v26._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t MetatypeMetadata = &type metadata for String;
    v40[0] = v19;
    v40[1] = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_14C38((uint64_t)v40, &qword_7DDE0);
    uint64_t v27 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v28._countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = *((void *)&v43 + 1);
    uint64_t v30 = sub_7A94(&v42, *((uint64_t *)&v43 + 1));
    uint64_t v31 = swift_getDynamicType(v30, v29, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v31);
    v40[0] = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_14C38((uint64_t)v40, &qword_7DDE0);
    uint64_t v27 = 58LL;
  }

  unint64_t v32 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v27);
  LogMessage.init(stringInterpolation:)(v11);
  sub_62AC(&v42);
  LogMessage.init(stringLiteral:)(0xD000000000000027LL, 0x8000000000065750LL);
  if (v12)
  {
    __int128 v42 = 0u;
    __int128 v43 = 0u;
  }

  else
  {
    *((void *)&v43 + 1) = (char *)&type metadata for () + 8;
  }

  static LogMessage.safe(_:)(&v42);
  sub_14C38((uint64_t)&v42, &qword_7DDE0);
  LogMessage.init(stringLiteral:)(0x3A726F727265LL, 0xE600000000000000LL);
  if (a2)
  {
    swift_getErrorValue(a2, v39, &v37);
    uint64_t v33 = v37;
    uint64_t v34 = v38;
    *((void *)&v43 + 1) = v38;
    uint64_t v35 = sub_7BA4(&v42);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16LL))(v35, v33, v34);
  }

  else
  {
    __int128 v42 = 0u;
    __int128 v43 = 0u;
  }

  type metadata accessor for Log();
  static LogMessage.safe(_:)(&v42);
  sub_14C38((uint64_t)&v42, &qword_7DDE0);
  sub_2679C(v15);
  swift_bridgeObjectRelease(v15);
  if (a2)
  {
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    swift_errorRetain(a2);
    a4(&v42, a2);
    swift_errorRelease(a2);
  }

  else
  {
    *((void *)&v43 + 1) = &type metadata for Bool;
    LOBYTE(v42) = 1;
    a4(&v42, 0LL);
  }

  sub_14C38((uint64_t)&v42, &qword_7DDE0);
}

void sub_5A518(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = v13;
  if (!v13)
  {
    uint64_t v11 = 0LL;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = sub_7A94(v12, v13);
  uint64_t v7 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_62AC(v12);
  if (a2) {
LABEL_3:
  }
    a2 = (void *)_convertErrorToNSError(_:)(a2);
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v11, a2);
  swift_unknownObjectRelease(v11);
}

uint64_t sub_5A628(uint64_t a1, void *a2, uint64_t a3)
{
  v7[3] = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  void v7[4] = &protocol witness table for OS_dispatch_queue;
  v7[0] = a2;
  swift_retain_n(a3, 2LL);
  id v5 = a2;
  Promise.then(perform:orCatchError:on:)(sub_5A6CC, a3, j___s9JetEngine7PromiseC6rejectyys5Error_pF, a3, v7);
  swift_release_n(a3, 2LL);
  return sub_62AC(v7);
}

uint64_t sub_5A6CC()
{
  return sub_57FB4(v0);
}

uint64_t sub_5A6D8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_5A6FC(uint64_t a1, void *a2)
{
}

unint64_t sub_5A704()
{
  unint64_t result = qword_7F910;
  if (!qword_7F910)
  {
    unint64_t result = swift_getWitnessTable(&unk_60834, &type metadata for WebPageViewController.ResolveActionError);
    atomic_store(result, (unint64_t *)&qword_7F910);
  }

  return result;
}

uint64_t sub_5A740()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_5A768(unsigned __int8 *a1, uint64_t a2)
{
}

uint64_t sub_5A774(void *a1, uint64_t a2, uint64_t a3)
{
  void v10[3] = sub_C184(0LL, (unint64_t *)&qword_7D630, &OBJC_CLASS___OS_dispatch_queue_ptr);
  v10[4] = &protocol witness table for OS_dispatch_queue;
  v10[0] = a1;
  uint64_t v6 = swift_allocObject(&unk_75B90, 32LL, 7LL);
  *(void *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v6 + 2sub_62AC(v0 + 4) = a3;
  uint64_t v7 = swift_allocObject(&unk_75BB8, 32LL, 7LL);
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v7 + 2sub_62AC(v0 + 4) = a3;
  swift_retain_n(a3, 2LL);
  id v8 = a1;
  Promise.then(perform:orCatchError:on:)(sub_5A85C, v6, sub_5A864, v7, v10);
  swift_release();
  swift_release();
  return sub_62AC(v10);
}

uint64_t sub_5A85C()
{
  return sub_57F4C(*(uint64_t (**)(char *, void))(v0 + 16));
}

void sub_5A864(uint64_t a1)
{
  uint64_t v2 = *(void (**)(char *, uint64_t))(v1 + 16);
  char v3 = 1;
  v2(&v3, a1);
  sub_E850();
}

uint64_t sub_5A894()
{
  swift_errorRelease(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_5A8C4()
{
  return sub_598F4(v0[2], v0[3], v0[4]);
}

uint64_t sub_5A8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_5A8E0()
{
  return swift_release();
}

unint64_t sub_5A8E8()
{
  unint64_t result = qword_7DE40;
  if (!qword_7DE40)
  {
    uint64_t v1 = sub_14B78(&qword_7DE38);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_7DE40);
  }

  return result;
}

void sub_5A92C(uint64_t a1, uint64_t a2)
{
}

void sub_5A948()
{
}

unint64_t sub_5A954()
{
  unint64_t result = qword_7F938;
  if (!qword_7F938)
  {
    unint64_t result = swift_getWitnessTable(&unk_607F4, &type metadata for WebPageViewController.PresentationError);
    atomic_store(result, (unint64_t *)&qword_7F938);
  }

  return result;
}

uint64_t sub_5A990()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_5A9B8()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_5A9E8()
{
}

ValueMetadata *type metadata accessor for WebPageViewController.PresentationError()
{
  return &type metadata for WebPageViewController.PresentationError;
}

uint64_t _s19CoreDynamicUIPlugin21WebPageViewControllerC17PresentationErrorOwst_0(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(sub_6BE8(v0, v1, v2, v3, v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_5AA4C + 4 * byte_60690[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_5AA6C + 4 * byte_60695[v4]))();
  }
}

_BYTE *sub_5AA4C(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_5AA6C(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_5AA74(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_5AA7C(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_5AA84(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_5AA8C(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WebPageViewController.ResolveActionError()
{
  return &type metadata for WebPageViewController.ResolveActionError;
}

unint64_t sub_5AAAC()
{
  unint64_t result = qword_7F950;
  if (!qword_7F950)
  {
    unint64_t result = swift_getWitnessTable(&unk_60764, &type metadata for WebPageViewController.ResolveActionError);
    atomic_store(result, (unint64_t *)&qword_7F950);
  }

  return result;
}

unint64_t sub_5AAEC()
{
  unint64_t result = qword_7F958;
  if (!qword_7F958)
  {
    unint64_t result = swift_getWitnessTable(&unk_607CC, &type metadata for WebPageViewController.PresentationError);
    atomic_store(result, (unint64_t *)&qword_7F958);
  }

  return result;
}

uint64_t sub_5AB64(void *a1)
{
  uint64_t v2 = sub_7A94(a1, v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_5AB80()
{
  return type metadata accessor for LogMessage.StringInterpolation(0LL);
}

uint64_t sub_5AB9C(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + 3LL * *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t sub_5ABC4(uint64_t a1)
{
  return dispatch thunk of SetAlgebra.init<A>(_:)(v3 - 160, v1, a1, *(void *)(v3 - 168), v2);
}

uint64_t sub_5ABE8(uint64_t a1)
{
  *(void *)(v2 - 14sub_62AC(v0 + 4) = a1;
  *(void *)(v2 - 168) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 168);
}

uint64_t sub_5ABFC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 88) = a1;
  *(void *)(v3 - 112) = v2;
  *(void *)(v3 - 10sub_62AC(v0 + 4) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v3 - 112);
}

void sub_5AC1C()
{
}

void sub_5AC28()
{
  *(void *)(v2 - 2swift_unknownObjectWeakDestroy(v0 + 16) = v0;
}

uint64_t sub_5AC44(uint64_t a1)
{
  *(void *)(v2 - 14sub_62AC(v0 + 4) = a1;
  *(void *)(v2 - 168) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 168);
}

uint64_t sub_5AC54()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 112);
}

uint64_t sub_5AC5C()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 168);
}

uint64_t sub_5AC64()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v2, v0, v1);
}

uint64_t sub_5AC7C()
{
  return LogMessage.init(stringLiteral:)(0x3A726F727265LL, 0xE600000000000000LL);
}

uint64_t sub_5AC90(uint64_t a1, uint64_t a2)
{
  return LogMessage.init(stringLiteral:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a2);
}

uint64_t sub_5AC98(uint64_t a1)
{
  return inject<A, B>(_:from:)(a1, v2, a1, v1);
}

uint64_t sub_5ACAC()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 176) + 8LL))(v1, v0);
}

uint64_t sub_5ACC0()
{
  return type metadata accessor for DispatchWorkItemFlags(0LL);
}

uint64_t sub_5ACCC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_5ACD8()
{
  return swift_getMetatypeMetadata();
}

uint64_t sub_5ACE0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v1, v2);
}

uint64_t sub_5ACF4()
{
  return static LogMessage.safe(_:)(v0 - 160);
}

uint64_t sub_5AD04()
{
  return static OS_dispatch_queue.main.getter();
}

void sub_5AD0C(uint64_t a1, uint64_t *a2)
{
}

void sub_5AD14(uint64_t a1)
{
}

void sub_5AD1C()
{
}

id sub_5AD24(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v1;
  return v1;
}

id sub_5AD30(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 16_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x80000000000632D0LL,  "CoreDynamicUIPlugin/ShelfPageCollectionLayoutViewController_tvOS.swift",  70LL,  2LL,  42LL, 0) = v1;
  return v1;
}

  ;
}

id sub_5AD48()
{
  return v0;
}

unint64_t sub_5AD54()
{
  return sub_5A8E8();
}

uint64_t sub_5AD5C()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_5AD68()
{
  return static DispatchQoS.unspecified.getter();
}

void *sub_5AD70@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 14sub_62AC(v0 + 4) = a1;
  *(void *)(v2 - 136) = v1;
  return _Block_copy((const void *)(v2 - 160));
}

void sub_5AD7C()
{
}

void sub_5AD88()
{
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(&OBJC_CLASS____TtC19CoreDynamicUIPluginP33_64AC1535BAC97C7CC66456556AA4269B19ResourceBundleClass);
}

id objc_msgSend_OSLogObject(void *a1, const char *a2, ...)
{
  return _[a1 OSLogObject];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_initWithBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundle:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_sharedConfig(void *a1, const char *a2, ...)
{
  return _[a1 sharedConfig];
}