LABEL_160:
      swift_bridgeObjectRelease(v122);
      return swift_bridgeObjectRelease(v409);
    }

LABEL_139:
  swift_release(v245);
  v253((char *)v255, v100);
  v253((char *)v98, v100);
  return swift_bridgeObjectRelease(v409);
}

uint64_t sub_1004ED8A4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v247 = a3;
  uint64_t v242 = type metadata accessor for Date(0LL);
  uint64_t v234 = *(void *)(v242 - 8);
  __chkstk_darwin(v6, v7);
  v241 = (char *)&v223 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9, v10);
  v245 = (char *)&v223 - v11;
  uint64_t v12 = type metadata accessor for SenderKeyAndState(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v251 = v12;
  uint64_t v252 = v13;
  __chkstk_darwin(v14, v15);
  v233 = (char *)&v223 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17, v18);
  uint64_t v231 = (uint64_t)&v223 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v224 = (uint64_t)&v223 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v225 = (uint64_t)&v223 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v227 = (uint64_t)&v223 - v28;
  __chkstk_darwin(v29, v30);
  uint64_t v228 = (uint64_t)&v223 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v230 = (uint64_t)&v223 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v239 = (uint64_t)&v223 - v37;
  uint64_t v246 = sub_1003F5CB4((uint64_t *)&unk_1009BB120);
  __chkstk_darwin(v38, v39);
  uint64_t v226 = (uint64_t)&v223 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v41, v42);
  uint64_t v229 = (uint64_t)&v223 - v43;
  __chkstk_darwin(v44, v45);
  uint64_t v238 = (uint64_t)&v223 - v46;
  __chkstk_darwin(v47, v48);
  v253 = (char *)&v223 - v49;
  sub_1003F5CB4((uint64_t *)&unk_1009BAC60);
  __chkstk_darwin(v50, v51);
  uint64_t v240 = (uint64_t)&v223 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v53, v54);
  v237 = (char *)&v223 - v55;
  __chkstk_darwin(v56, v57);
  v236 = (char *)&v223 - v58;
  __chkstk_darwin(v59, v60);
  v235 = (char *)&v223 - v61;
  uint64_t v64 = __chkstk_darwin(v62, v63);
  uint64_t v255 = (uint64_t)&v223 - v65;
  v66 = *(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v3) + 0xD8LL);
  v254 = v3;
  v67 = (void *)v66(v64);
  uint64_t v68 = sub_1003F5CB4((uint64_t *)&unk_1009BABF0);
  uint64_t v69 = swift_allocObject(v68, 40LL, 7LL);
  *(_OWORD *)(v69 + 16) = xmmword_10071B0D0;
  *(void *)(v69 + 32) = a2;
  uint64_t v259 = v69;
  specialized Array._endMutation()(v69);
  uint64_t v70 = v259;
  uint64_t v71 = sub_10041D3C4(0LL, (unint64_t *)&unk_1009BC270, &OBJC_CLASS___IDSURI_ptr);
  id v72 = a2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v70);
  v74 = (void *)IDSServiceNameiMessage;
  uint64_t v75 = sub_1003F5CB4((uint64_t *)&unk_1009BC2B0);
  uint64_t inited = swift_initStackObject(v75, v258);
  *(_OWORD *)(inited + 16) = xmmword_1007184C0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(IDSRegistrationPropertySupportsSenderKey);
  *(void *)(inited + 40) = v77;
  id v78 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
  id v79 = v74;
  *(void *)(inited + 48) = [v78 initWithInteger:1];
  unint64_t v80 = sub_10045C120(inited);
  sub_10041D3C4(0LL, (unint64_t *)&unk_1009BACA0, &OBJC_CLASS___NSNumber_ptr);
  Class v81 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v80);
  id v82 = [v67 endpointsForURIs:isa service:v79 fromURI:a1 withCapabilities:v81];

  swift_unknownObjectRelease(v67, v83);
  if (v82)
  {
    uint64_t v84 = sub_1003F5CB4((uint64_t *)&unk_1009BC2C0);
    uint64_t v85 = sub_100438928( (unint64_t *)&unk_1009BAC00,  (unint64_t *)&unk_1009BC270,  &OBJC_CLASS___IDSURI_ptr);
    uint64_t v86 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v82, v71, v84, v85);

    if (*(void *)(v86 + 16))
    {
      id v87 = v72;
      unint64_t v88 = sub_100433024((uint64_t)v87);
      if ((v89 & 1) != 0)
      {
        uint64_t v90 = *(void *)(*(void *)(v86 + 56) + 8 * v88);
        swift_bridgeObjectRetain(v90);
      }

      else
      {
        uint64_t v90 = (uint64_t)_swiftEmptyArrayStorage;
      }

      v92 = v253;
      v91 = v254;
      v93 = a1;
    }

    else
    {
      uint64_t v90 = (uint64_t)_swiftEmptyArrayStorage;
      v92 = v253;
      v91 = v254;
      v93 = a1;
    }

    uint64_t v94 = v255;
    swift_bridgeObjectRelease(v86);
  }

  else
  {
    uint64_t v90 = (uint64_t)_swiftEmptyArrayStorage;
    v92 = v253;
    v91 = v254;
    v93 = a1;
    uint64_t v94 = v255;
  }

  sub_10050DF2C(v90);
  uint64_t v96 = v95;
  v97 = &v91[OBJC_IVAR___IDSQuerySDPersistenceManager_logger];
  id v98 = v72;
  id v99 = v93;
  swift_bridgeObjectRetain_n(v96, 2LL);
  id v100 = v98;
  id v101 = v99;
  swift_bridgeObjectRetain(v90);
  v250 = v97;
  v103 = (os_log_s *)Logger.logObject.getter(v102);
  int v104 = static os_log_type_t.default.getter();
  BOOL v105 = os_log_type_enabled(v103, (os_log_type_t)v104);
  id v248 = v101;
  id v249 = v100;
  if (v105)
  {
    LODWORD(v243) = v104;
    uint64_t v244 = v96;
    uint64_t v106 = swift_slowAlloc(42LL, -1LL);
    v107 = (void *)swift_slowAlloc(16LL, -1LL);
    *(_DWORD *)uint64_t v106 = 138413058;
    uint64_t v259 = (uint64_t)v101;
    id v108 = v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v259, v260, v106 + 4, v106 + 12);
    void *v107 = v93;

    *(_WORD *)(v106 + 12) = 2112;
    uint64_t v259 = (uint64_t)v100;
    id v109 = v100;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v259, v260, v106 + 14, v106 + 22);
    v107[1] = v100;

    *(_WORD *)(v106 + 22) = 2048;
    if ((unint64_t)v90 >> 62)
    {
      if (v90 < 0) {
        uint64_t v222 = v90;
      }
      else {
        uint64_t v222 = v90 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v90);
      uint64_t v110 = _CocoaArrayWrapper.endIndex.getter(v222);
      swift_bridgeObjectRelease(v90);
    }

    else
    {
      uint64_t v110 = *(void *)((v90 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    uint64_t v96 = v244;
    swift_bridgeObjectRelease(v90);
    uint64_t v259 = v110;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v259, v260, v106 + 24, v106 + 32);
    swift_bridgeObjectRelease(v90);
    *(_WORD *)(v106 + 32) = 2048;
    uint64_t v111 = *(void *)(v96 + 16);
    swift_bridgeObjectRelease(v96);
    uint64_t v259 = v111;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v259, v260, v106 + 34, v106 + 42);
    swift_bridgeObjectRelease(v96);
    _os_log_impl( (void *)&_mh_execute_header,  v103,  (os_log_type_t)v243,  "Determining usable sender key for senderURI: %@ receiverURI: %@ with %ld endpoints and %ld stewieCapableTokens",  (uint8_t *)v106,  0x2Au);
    uint64_t v112 = sub_1003F5CB4(&qword_1009B92C8);
    swift_arrayDestroy(v107, 2LL, v112);
    swift_slowDealloc(v107, -1LL, -1LL);
    swift_slowDealloc(v106, -1LL, -1LL);

    v92 = v253;
    uint64_t v94 = v255;
    id v101 = v248;
    id v100 = v249;
  }

  else
  {

    swift_bridgeObjectRelease_n(v90, 2LL);
    swift_bridgeObjectRelease_n(v96, 2LL);
  }

  v113 = v254;
  id v114 = [v254 decryptingKeyIDsWithSenderURI:v100 receiverURI:v101];
  uint64_t v115 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v114, &type metadata for Data);

  uint64_t v116 = *(void *)(v115 + 16);
  swift_bridgeObjectRelease(v115);
  uint64_t v117 = v251;
  if (!v116)
  {
    swift_bridgeObjectRelease(v96);
    id v159 = v100;
    v160 = (os_log_s *)Logger.logObject.getter(v159);
    os_log_type_t v161 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v160, v161))
    {
      v162 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      v163 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)v162 = 138412290;
      uint64_t v259 = (uint64_t)v159;
      id v164 = v159;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v259, v260, v162 + 4, v162 + 12);
      void *v163 = v159;

      _os_log_impl( (void *)&_mh_execute_header,  v160,  v161,  "We've never received a key from %@ - returning nil",  v162,  0xCu);
      uint64_t v165 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v163, 1LL, v165);
      v166 = v163;
      uint64_t v117 = v251;
      swift_slowDealloc(v166, -1LL, -1LL);
      swift_slowDealloc(v162, -1LL, -1LL);
    }

    else
    {
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v252 + 56))(v247, 1LL, 1LL, v117);
  }

  uint64_t v118 = (uint64_t)v92;
  v119 = *(double (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v252 + 56);
  v119(v94, 1LL, 1LL, v251);
  uint64_t v120 = v246;
  uint64_t v243 = v118 + *(int *)(v246 + 48);
  uint64_t v244 = v118 + *(int *)(v246 + 64);
  uint64_t v121 = (uint64_t)v235;
  v119((uint64_t)v235, 1LL, 1LL, v117);
  uint64_t v122 = (uint64_t)v236;
  v119((uint64_t)v236, 1LL, 1LL, v117);
  uint64_t v123 = (uint64_t)v237;
  v232 = v119;
  v124.n128_f64[0] = v119((uint64_t)v237, 1LL, 1LL, v117);
  __chkstk_darwin(v124, v125);
  uint64_t v126 = (uint64_t)v248;
  *(&v223 - 8) = (uint64_t)v113;
  *(&v223 - 7) = v126;
  *(&v223 - 6) = (uint64_t)v249;
  *(&v223 - 5) = v96;
  uint64_t v127 = v120;
  *(&v223 - 4) = v123;
  *(&v223 - 3) = v121;
  *(&v223 - 2) = v122;
  (*(void (**)(void, uint64_t (*)(os_log_s *)))((swift_isaMask & *(void *)v113) + 0xE8LL))( 0LL,  sub_10050D8A4);
  sub_100410FD0(v121, v118, (uint64_t *)&unk_1009BAC60);
  uint64_t v128 = v243;
  sub_100410FD0(v122, v243, (uint64_t *)&unk_1009BAC60);
  uint64_t v129 = v244;
  sub_10041D378(v123, v244, (uint64_t *)&unk_1009BAC60);
  uint64_t v130 = v122;
  uint64_t v131 = v128;
  sub_10040A274(v130, (uint64_t *)&unk_1009BAC60);
  sub_10040A274(v121, (uint64_t *)&unk_1009BAC60);
  swift_bridgeObjectRelease(v96);
  uint64_t v132 = v238;
  uint64_t v133 = v238 + *(int *)(v127 + 48);
  uint64_t v134 = *(int *)(v127 + 64);
  uint64_t v135 = v118;
  uint64_t v136 = v238 + v134;
  sub_100410FD0(v118, v238, (uint64_t *)&unk_1009BAC60);
  sub_100410FD0(v131, v133, (uint64_t *)&unk_1009BAC60);
  sub_100410FD0(v129, v136, (uint64_t *)&unk_1009BAC60);
  v137 = *(char **)(v252 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v137)(v132, 1LL, v117) != 1)
  {
    v254 = v137;
    v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232;
    uint64_t v168 = v239;
    sub_1003F600C(v132, v239, type metadata accessor for SenderKeyAndState);
    sub_10040A274(v136, (uint64_t *)&unk_1009BAC60);
    sub_10040A274(v133, (uint64_t *)&unk_1009BAC60);
    uint64_t v169 = v230;
    uint64_t v170 = sub_1003F5FC8(v168, v230, type metadata accessor for SenderKeyAndState);
    v171 = (os_log_s *)Logger.logObject.getter(v170);
    os_log_type_t v172 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v171, v172))
    {
      v173 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v174 = swift_slowAlloc(32LL, -1LL);
      uint64_t v259 = v174;
      *(_DWORD *)v173 = 136315138;
      Swift::String v175 = Data.base64EncodedString(options:)(0LL);
      uint64_t v256 = sub_1003FFBB0(v175._countAndFlagsBits, (unint64_t)v175._object, &v259);
      uint64_t v135 = (uint64_t)v253;
      uint64_t v117 = v251;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v256, v257, v173 + 4, v173 + 12);
      swift_bridgeObjectRelease(v175._object);
      sub_1003F6050(v169, type metadata accessor for SenderKeyAndState);
      _os_log_impl( (void *)&_mh_execute_header,  v171,  v172,  "We found a usable key: %s is acked by all Stewie capable devices",  v173,  0xCu);
      swift_arrayDestroy(v174, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v174, -1LL, -1LL);
      swift_slowDealloc(v173, -1LL, -1LL);
    }

    else
    {
      sub_1003F6050(v169, type metadata accessor for SenderKeyAndState);
    }

    uint64_t v151 = v255;
    sub_10040A274(v255, (uint64_t *)&unk_1009BAC60);
    uint64_t v156 = v242;
    v188 = v245;
    uint64_t v189 = (uint64_t)v233;
    uint64_t v157 = v234;
    sub_1003F600C(v239, v151, type metadata accessor for SenderKeyAndState);
    v167(v151, 0LL, 1LL, v117);
    v149 = v254;
    goto LABEL_38;
  }

  sub_10040A274(v136, (uint64_t *)&unk_1009BAC60);
  sub_10040A274(v133, (uint64_t *)&unk_1009BAC60);
  sub_10040A274(v132, (uint64_t *)&unk_1009BAC60);
  uint64_t v138 = v246;
  uint64_t v139 = v229;
  uint64_t v140 = v229 + *(int *)(v246 + 48);
  uint64_t v141 = v229 + *(int *)(v246 + 64);
  sub_100410FD0(v135, v229, (uint64_t *)&unk_1009BAC60);
  sub_100410FD0(v243, v140, (uint64_t *)&unk_1009BAC60);
  sub_100410FD0(v244, v141, (uint64_t *)&unk_1009BAC60);
  int v142 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v137)(v141, 1LL, v117);
  uint64_t v143 = v135;
  v144 = v137;
  uint64_t v145 = v143;
  if (v142 != 1)
  {
    v149 = v144;
    uint64_t v135 = v143;
    uint64_t v177 = v228;
    sub_1003F600C(v141, v228, type metadata accessor for SenderKeyAndState);
    sub_10040A274(v140, (uint64_t *)&unk_1009BAC60);
    sub_10040A274(v139, (uint64_t *)&unk_1009BAC60);
    uint64_t v178 = v227;
    uint64_t v179 = sub_1003F5FC8(v177, v227, type metadata accessor for SenderKeyAndState);
    v180 = (os_log_s *)Logger.logObject.getter(v179);
    os_log_type_t v181 = static os_log_type_t.default.getter();
    BOOL v182 = os_log_type_enabled(v180, v181);
    uint64_t v157 = v234;
    uint64_t v151 = v255;
    if (v182)
    {
      v183 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v184 = swift_slowAlloc(32LL, -1LL);
      v254 = v149;
      uint64_t v185 = v184;
      uint64_t v259 = v184;
      *(_DWORD *)v183 = 136315138;
      Swift::String v186 = Data.base64EncodedString(options:)(0LL);
      uint64_t v256 = sub_1003FFBB0(v186._countAndFlagsBits, (unint64_t)v186._object, &v259);
      uint64_t v135 = (uint64_t)v253;
      uint64_t v117 = v251;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v256, v257, v183 + 4, v183 + 12);
      swift_bridgeObjectRelease(v186._object);
      sub_1003F6050(v178, type metadata accessor for SenderKeyAndState);
      _os_log_impl( (void *)&_mh_execute_header,  v180,  v181,  "We found a usable key: %s is acked by recently active device",  v183,  0xCu);
      swift_arrayDestroy(v185, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v187 = v185;
      v149 = v254;
      v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232;
      swift_slowDealloc(v187, -1LL, -1LL);
      swift_slowDealloc(v183, -1LL, -1LL);

      sub_10040A274(v151, (uint64_t *)&unk_1009BAC60);
      uint64_t v156 = v242;
      v188 = v245;
      uint64_t v189 = (uint64_t)v233;
    }

    else
    {
      sub_1003F6050(v178, type metadata accessor for SenderKeyAndState);

      sub_10040A274(v151, (uint64_t *)&unk_1009BAC60);
      uint64_t v156 = v242;
      v188 = v245;
      uint64_t v189 = (uint64_t)v233;
      v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232;
    }

    sub_1003F600C(v228, v151, type metadata accessor for SenderKeyAndState);
    v167(v151, 0LL, 1LL, v117);
    goto LABEL_38;
  }

  sub_10040A274(v141, (uint64_t *)&unk_1009BAC60);
  sub_10040A274(v140, (uint64_t *)&unk_1009BAC60);
  sub_10040A274(v139, (uint64_t *)&unk_1009BAC60);
  uint64_t v146 = v226;
  uint64_t v147 = v226 + *(int *)(v138 + 48);
  uint64_t v148 = v226 + *(int *)(v138 + 64);
  sub_100410FD0(v145, v226, (uint64_t *)&unk_1009BAC60);
  sub_100410FD0(v243, v147, (uint64_t *)&unk_1009BAC60);
  sub_100410FD0(v244, v148, (uint64_t *)&unk_1009BAC60);
  v149 = v144;
  int v150 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v144)(v147, 1LL, v117);
  uint64_t v151 = v255;
  if (v150 == 1)
  {
    sub_10040A274(v148, (uint64_t *)&unk_1009BAC60);
    sub_10040A274(v147, (uint64_t *)&unk_1009BAC60);
    uint64_t v152 = sub_10040A274(v146, (uint64_t *)&unk_1009BAC60);
    v153 = (os_log_s *)Logger.logObject.getter(v152);
    os_log_type_t v154 = static os_log_type_t.default.getter();
    BOOL v155 = os_log_type_enabled(v153, v154);
    uint64_t v156 = v242;
    uint64_t v157 = v234;
    if (v155)
    {
      v158 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)v158 = 0;
      _os_log_impl((void *)&_mh_execute_header, v153, v154, "We did not find any key", v158, 2u);
      swift_slowDealloc(v158, -1LL, -1LL);
    }

    goto LABEL_37;
  }

  uint64_t v190 = v225;
  sub_1003F600C(v147, v225, type metadata accessor for SenderKeyAndState);
  sub_10040A274(v148, (uint64_t *)&unk_1009BAC60);
  sub_10040A274(v146, (uint64_t *)&unk_1009BAC60);
  uint64_t v191 = v224;
  uint64_t v192 = sub_1003F5FC8(v190, v224, type metadata accessor for SenderKeyAndState);
  v193 = (os_log_s *)Logger.logObject.getter(v192);
  os_log_type_t v194 = static os_log_type_t.default.getter();
  BOOL v195 = os_log_type_enabled(v193, v194);
  uint64_t v157 = v234;
  if (!v195)
  {
    sub_1003F6050(v191, type metadata accessor for SenderKeyAndState);

    sub_1003F6050(v190, type metadata accessor for SenderKeyAndState);
    uint64_t v156 = v242;
LABEL_37:
    v188 = v245;
    uint64_t v189 = (uint64_t)v233;
    v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232;
    uint64_t v135 = (uint64_t)v253;
    goto LABEL_38;
  }

  v196 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
  uint64_t v197 = swift_slowAlloc(32LL, -1LL);
  v254 = v144;
  uint64_t v198 = v197;
  uint64_t v259 = v197;
  *(_DWORD *)v196 = 136315138;
  Swift::String v199 = Data.base64EncodedString(options:)(0LL);
  uint64_t v256 = sub_1003FFBB0(v199._countAndFlagsBits, (unint64_t)v199._object, &v259);
  uint64_t v135 = (uint64_t)v253;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v256, v257, v196 + 4, v196 + 12);
  swift_bridgeObjectRelease(v199._object);
  sub_1003F6050(v191, type metadata accessor for SenderKeyAndState);
  _os_log_impl( (void *)&_mh_execute_header,  v193,  v194,  "We did not find a usable key: %s is not acked by all Stewie capable devices",  v196,  0xCu);
  swift_arrayDestroy(v198, 1LL, (char *)&type metadata for Any + 8);
  uint64_t v200 = v198;
  v149 = v254;
  v167 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232;
  swift_slowDealloc(v200, -1LL, -1LL);
  swift_slowDealloc(v196, -1LL, -1LL);

  uint64_t v117 = v251;
  sub_1003F6050(v225, type metadata accessor for SenderKeyAndState);
  uint64_t v156 = v242;
  v188 = v245;
  uint64_t v189 = (uint64_t)v233;
LABEL_38:
  uint64_t v201 = type metadata accessor for SenderKeyDistributionManager(0LL);
  uint64_t v202 = (*(uint64_t (**)(void))(v201 + 720))();
  double v204 = v203;
  v205 = v241;
  uint64_t v206 = Date.init()(v202);
  Date.addingTimeInterval(_:)(v206, -v204);
  v207 = *(void (**)(char *, uint64_t))(v157 + 8);
  v207(v205, v156);
  uint64_t v208 = v240;
  sub_100410FD0(v151, v240, (uint64_t *)&unk_1009BAC60);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v149)(v208, 1LL, v117) == 1)
  {
    v207(v188, v156);
    sub_10040A274(v135, (uint64_t *)&unk_1009BB120);
    v209 = (uint64_t *)&unk_1009BAC60;
    uint64_t v210 = v208;
LABEL_44:
    sub_10040A274(v210, v209);
    return sub_10041D378(v151, v247, (uint64_t *)&unk_1009BAC60);
  }

  v211 = v167;
  uint64_t v212 = v231;
  sub_1003F600C(v208, v231, type metadata accessor for SenderKeyAndState);
  uint64_t v213 = type metadata accessor for SenderKeyInfo(0LL);
  if ((static Date.< infix(_:_:)(v212 + *(int *)(v213 + 24), v188) & 1) == 0)
  {
    sub_1003F6050(v212, type metadata accessor for SenderKeyAndState);
    v207(v188, v156);
    v209 = (uint64_t *)&unk_1009BB120;
    uint64_t v210 = v135;
    goto LABEL_44;
  }

  uint64_t v214 = sub_1003F5FC8(v212, v189, type metadata accessor for SenderKeyAndState);
  v215 = (os_log_s *)Logger.logObject.getter(v214);
  os_log_type_t v216 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v215, v216))
  {
    v217 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v218 = swift_slowAlloc(32LL, -1LL);
    uint64_t v259 = v218;
    *(_DWORD *)v217 = 136315138;
    Swift::String v219 = Data.base64EncodedString(options:)(0LL);
    uint64_t v256 = sub_1003FFBB0(v219._countAndFlagsBits, (unint64_t)v219._object, &v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v256, v257, v217 + 4, v217 + 12);
    swift_bridgeObjectRelease(v219._object);
    sub_1003F6050(v189, type metadata accessor for SenderKeyAndState);
    _os_log_impl((void *)&_mh_execute_header, v215, v216, "Found key %s is expired - returning nil", v217, 0xCu);
    swift_arrayDestroy(v218, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v220 = v218;
    v211 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232;
    swift_slowDealloc(v220, -1LL, -1LL);
    swift_slowDealloc(v217, -1LL, -1LL);

    uint64_t v117 = v251;
    sub_1003F6050(v212, type metadata accessor for SenderKeyAndState);
    v207(v245, v242);
    uint64_t v221 = (uint64_t)v253;
  }

  else
  {

    sub_1003F6050(v189, type metadata accessor for SenderKeyAndState);
    sub_1003F6050(v212, type metadata accessor for SenderKeyAndState);
    v207(v245, v156);
    uint64_t v221 = v135;
  }

  sub_10040A274(v221, (uint64_t *)&unk_1009BB120);
  sub_10040A274(v255, (uint64_t *)&unk_1009BAC60);
  return v211(v247, 1LL, 1LL, v117);
}

void *sub_1004EEFE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v9 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v11, v12);
  __n128 v14 = &v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  char v23 = a3;
  uint64_t v25 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  Predicate.init(_:)(sub_10050E250, v20, 1LL, &v25);
  __n128 v24 = _swiftEmptyArrayStorage;
  __n128 v18 = &v24;
  uint64_t v19 = v14;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v4) + 0xE8LL))( a4,  sub_100513D38,  v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return v24;
}

uint64_t sub_1004EF26C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  int v83 = a4;
  uint64_t v77 = a2;
  uint64_t v90 = a5;
  uint64_t v7 = sub_1003F5CB4(&qword_1009BC5B0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v86 = v7;
  uint64_t v87 = v8;
  __chkstk_darwin(v9, v10);
  id v82 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1003F5CB4(&qword_1009BC5B8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v84 = v12;
  uint64_t v85 = v13;
  __chkstk_darwin(v14, v15);
  id v78 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1003F5CB4(&qword_1009BC5C0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v88 = v17;
  uint64_t v89 = v18;
  __chkstk_darwin(v19, v20);
  id v79 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1003F5CB4(&qword_1009BCA20);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v75 = v22;
  uint64_t v76 = v23;
  __chkstk_darwin(v24, v25);
  __n128 v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_1003F5CB4(&qword_1009BC5C8);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v30, v31);
  __n128 v33 = (char *)&v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = sub_1003F5CB4(&qword_1009BC5D0);
  uint64_t v73 = *(void *)(v34 - 8);
  __chkstk_darwin(v35, v36);
  __n128 v38 = (char *)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1003F5CB4(&qword_1009BCA28);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v80 = v39;
  uint64_t v81 = v40;
  __chkstk_darwin(v41, v42);
  v74 = (char *)&v72 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = *a1;
  uint64_t v72 = v44;
  uint64_t v45 = sub_10047E23C( &qword_1009BC5F8,  &qword_1009BC5C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v44, v28, v45);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D7B8);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v33, KeyPath, v28, v45);
  swift_release(KeyPath);
  __n128 v47 = *(void (**)(char *, uint64_t))(v29 + 8);
  v47(v33, v28);
  v91[0] = v77;
  v91[1] = a3;
  static PredicateExpressions.build_Arg<A>(_:)(v91, &type metadata for Data);
  uint64_t v48 = sub_10047E23C( &qword_1009BC608,  &qword_1009BC5D0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v49 = sub_10047E23C( &qword_1009BCA30,  &qword_1009BCA20,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  unint64_t v50 = sub_100510F48();
  uint64_t v51 = v75;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v38, v27, v34, v75, v48, v49, v50);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v27, v51);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v34);
  static PredicateExpressions.build_Arg<A>(_:)(v72, v28, v45);
  uint64_t v52 = swift_getKeyPath(&unk_10071D7E0);
  __n128 v53 = v78;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v33, v52, v28, v45);
  swift_release(v52);
  v47(v33, v28);
  LOBYTE(v91[0]) = v83;
  __n128 v54 = v82;
  static PredicateExpressions.build_Arg<A>(_:)(v91, &type metadata for Bool);
  uint64_t v55 = sub_10047E23C( &qword_1009BC620,  &qword_1009BC5B8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v56 = sub_10047E23C( &qword_1009BC628,  &qword_1009BC5B0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  __n128 v57 = v79;
  uint64_t v58 = v53;
  __n128 v59 = v53;
  uint64_t v60 = v84;
  uint64_t v61 = v86;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v58,  v54,  v84,  v86,  v55,  v56,  &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v54, v61);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v59, v60);
  uint64_t v62 = sub_1003F5CB4(&qword_1009BCAC0);
  __n128 v63 = v90;
  v90[3] = v62;
  v63[4] = sub_100512808();
  sub_10040B2A8(v63);
  uint64_t v64 = sub_10047E23C( &qword_1009BCA60,  &qword_1009BCA28,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v65 = sub_10047E23C( &qword_1009BC638,  &qword_1009BC5C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  v66 = v74;
  v67 = v57;
  uint64_t v68 = v57;
  uint64_t v69 = v80;
  uint64_t v70 = v88;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v74, v68, v80, v88, v64, v65);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v67, v70);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v66, v69);
}

void *sub_1004EF770(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v29 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  Predicate.init(_:)(sub_10050E25C, v25, 1LL, &v29);
  uint64_t v28 = _swiftEmptyArrayStorage;
  uint64_t v23 = &v28;
  __n128 v24 = v16;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8LL))( a5,  sub_100513D38,  v22);
  uint64_t v17 = v28;
  sub_1004028CC(a1, a2);
  swift_bridgeObjectRetain(v17);
  __n128 v19 = sub_10050B7B8(v18);
  sub_100402A84(a1, a2);
  swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  swift_bridgeObjectRelease(v28);
  return v19;
}

uint64_t sub_1004EFA34@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  int v79 = a5;
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v86 = a6;
  uint64_t v8 = sub_1003F5CB4(&qword_1009BC5B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v82 = v8;
  uint64_t v83 = v9;
  __chkstk_darwin(v10, v11);
  id v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1003F5CB4(&qword_1009BC5B8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v80 = v13;
  uint64_t v81 = v14;
  __chkstk_darwin(v15, v16);
  v74 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1003F5CB4(&qword_1009BC5C0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v84 = v18;
  uint64_t v85 = v19;
  __chkstk_darwin(v20, v21);
  uint64_t v75 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v69 = sub_1003F5CB4(&qword_1009BC410);
  uint64_t v71 = *(void *)(v69 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_1003F5CB4(&qword_1009BC5C8);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v68 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_1003F5CB4(&qword_1009BC6C0);
  uint64_t v68 = *(void *)(v33 - 8);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v68 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = sub_1003F5CB4(&qword_1009BC9D8);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v76 = v38;
  uint64_t v77 = v39;
  __chkstk_darwin(v40, v41);
  uint64_t v70 = (char *)&v68 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = *a1;
  uint64_t v44 = sub_10047E23C( &qword_1009BC5F8,  &qword_1009BC5C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v43, v27, v44);
  uint64_t KeyPath = swift_getKeyPath(a4);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v32, KeyPath, v27, v44);
  swift_release(KeyPath);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v28 + 8);
  v46(v32, v27);
  v87[0] = v72;
  v87[1] = v73;
  static PredicateExpressions.build_Arg<A>(_:)(v87, &type metadata for String);
  uint64_t v47 = sub_10047E23C( &qword_1009BC6F8,  &qword_1009BC6C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v48 = sub_10047E23C( &qword_1009BC460,  &qword_1009BC410,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v49 = v69;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v37,  v26,  v33,  v69,  v47,  v48,  &protocol witness table for String);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v49);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v33);
  static PredicateExpressions.build_Arg<A>(_:)(v43, v27, v44);
  uint64_t v50 = swift_getKeyPath(&unk_10071D7E0);
  uint64_t v51 = v74;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v32, v50, v27, v44);
  swift_release(v50);
  v46(v32, v27);
  LOBYTE(v87[0]) = v79;
  uint64_t v52 = v78;
  static PredicateExpressions.build_Arg<A>(_:)(v87, &type metadata for Bool);
  uint64_t v53 = sub_10047E23C( &qword_1009BC620,  &qword_1009BC5B8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v54 = sub_10047E23C( &qword_1009BC628,  &qword_1009BC5B0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v55 = v75;
  uint64_t v56 = v80;
  uint64_t v57 = v82;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v51,  v52,  v80,  v82,  v53,  v54,  &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v57);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v56);
  uint64_t v58 = sub_1003F5CB4(&qword_1009BCAB0);
  __n128 v59 = v86;
  v86[3] = v58;
  v59[4] = sub_10051279C();
  sub_10040B2A8(v59);
  uint64_t v60 = sub_10047E23C( &qword_1009BC9E8,  &qword_1009BC9D8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v61 = sub_10047E23C( &qword_1009BC638,  &qword_1009BC5C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v62 = v70;
  __n128 v63 = v55;
  uint64_t v64 = v55;
  uint64_t v65 = v76;
  uint64_t v66 = v84;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v70, v64, v76, v84, v60, v61);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v62, v65);
}

unint64_t sub_1004EFF30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1003F5CB4(&qword_1009BC2D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v7, v8);
  __n128 v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v20 = a1;
  uint64_t v24 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0LL);
  Predicate.init(_:)(sub_10050E280, v19, 1LL, &v24);
  __n128 v23 = &_swiftEmptyArrayStorage;
  unsigned int v21 = 0;
  char v22 = 1;
  __n128 v16 = &v23;
  uint64_t v17 = v10;
  uint64_t v18 = &v21;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v2) + 0xE8LL))( a2,  sub_10050E288,  v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  uint64_t v11 = v21;
  unsigned __int8 v12 = v22;
  swift_bridgeObjectRelease(v23);
  return v11 | ((unint64_t)v12 << 32);
}

uint64_t sub_1004F01D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v5 = sub_1003F5CB4(&qword_1009BCA70);
  uint64_t v29 = *(void *)(v5 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1003F5CB4(&qword_1009BC7E0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v12, v13);
  __n128 v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1003F5CB4(&qword_1009BCA78);
  uint64_t v28 = *(void *)(v16 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = *a1;
  uint64_t v22 = sub_10047E23C( &qword_1009BC7F0,  &qword_1009BC7E0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v21, v10, v22);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D9E8);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v15, KeyPath, v10, v22);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  uint64_t v30 = v27;
  static PredicateExpressions.build_Arg<A>(_:)(&v30, &type metadata for UInt64);
  a3[3] = sub_1003F5CB4(&qword_1009BCA80);
  a3[4] = sub_1005126F0();
  sub_10040B2A8(a3);
  uint64_t v24 = sub_10047E23C( &qword_1009BCAA0,  &qword_1009BCA78,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v25 = sub_10047E23C( &qword_1009BCAA8,  &qword_1009BCA70,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v20,  v9,  v16,  v5,  v24,  v25,  &protocol witness table for UInt64);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v20, v16);
}

uint64_t sub_1004F0424(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a4;
  uint64_t v32 = a2;
  sub_1003F5CB4((uint64_t *)&unk_1009BC7D0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1003F5CB4(&qword_1009BCA68);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v12, v13);
  __n128 v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1003F5CB4(&qword_1009BC2D0);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v9, a3, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v9, 0LL, 1LL, v16);
  uint64_t v18 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0LL);
  uint64_t v19 = sub_10040A2B0( &qword_1009B9FE0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex,  (uint64_t)&unk_10071A5C0);
  FetchDescriptor.init(predicate:sortBy:)(v9, &_swiftEmptyArrayStorage, v18, v19);
  uint64_t v20 = dispatch thunk of ModelContext.fetch<A>(_:)(v15, v18, v19);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v10);
  if (!v4)
  {
    uint64_t v22 = v31;
    __n128 v23 = v32;
    uint64_t v24 = *v32;
    *uint64_t v32 = v20;
    swift_bridgeObjectRelease(v24);
    uint64_t v25 = *v23;
    if ((unint64_t)*v23 >> 62)
    {
      if (v25 < 0) {
        uint64_t v29 = *v23;
      }
      else {
        uint64_t v29 = v25 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(*v23);
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v29);
      uint64_t v26 = result;
      if (result) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t result = swift_bridgeObjectRetain(v25);
      if (v26)
      {
LABEL_4:
        if ((v25 & 0xC000000000000001LL) != 0)
        {
          uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v25);
        }

        else
        {
          if (!*(void *)((v25 & 0xFFFFFFFFFFFFF8LL) + 0x10))
          {
            __break(1u);
            return result;
          }

          uint64_t v27 = *(void *)(v25 + 32);
          swift_retain(v27);
        }

        swift_bridgeObjectRelease(v25);
        int v28 = sub_100449EF4();
        uint64_t result = swift_release(v27);
        goto LABEL_13;
      }
    }

    uint64_t result = swift_bridgeObjectRelease(v25);
    int v28 = 0;
LABEL_13:
    *(_DWORD *)uint64_t v22 = v28;
    *(_BYTE *)(v22 + 4) = v26 == 0;
  }

  return result;
}

void *sub_1004F0674(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = _swiftEmptyArrayStorage;
  v4[2] = &v5;
  (*(void (**)(uint64_t, uint64_t, void *))((swift_isaMask & *v2) + 0xE8LL))(a1, a2, v4);
  return v5;
}

uint64_t sub_1004F083C(uint64_t a1, uint64_t *a2)
{
  __n128 v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1003F5CB4(&qword_1009BC6B8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v10, v11);
  __n128 v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v7, 1LL, 1LL, v14);
  uint64_t v15 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  uint64_t v16 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  FetchDescriptor.init(predicate:sortBy:)(v7, _swiftEmptyArrayStorage, v15, v16);
  uint64_t v17 = dispatch thunk of ModelContext.fetch<A>(_:)(v13, v15, v16);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  if (!v2)
  {
    uint64_t v19 = *a2;
    *a2 = v17;
    return swift_bridgeObjectRelease(v19);
  }

  return result;
}

uint64_t sub_1004F09A8(uint64_t a1, uint64_t a2)
{
  v4[2] = a2;
  v4[3] = a1;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v2) + 0xE8LL))( 0LL,  sub_10050E2BC,  v4);
  return 1LL;
}

uint64_t sub_1004F0B68(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v99 = *(void *)(v10 - 8);
  uint64_t v100 = v10;
  __chkstk_darwin(v11, v12);
  id v98 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SenderKeyAndState(0LL);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0) {
      uint64_t v76 = a2;
    }
    else {
      uint64_t v76 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v76);
    if (v19)
    {
LABEL_3:
      uint64_t v96 = v18;
      uint64_t v79 = v5;
      uint64_t v20 = type metadata accessor for SenderKeyInfo(0LL);
      uint64_t v21 = *(int *)(v20 + 28);
      uint64_t result = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
      uint64_t v97 = result;
      if (v19 < 1)
      {
        __break(1u);
        return result;
      }

      uint64_t v24 = 0LL;
      v91 = (uint64_t *)((char *)a3 + v21);
      uint64_t v90 = (uint64_t)a3 + *(int *)(v20 + 24);
      uint64_t v25 = *(int *)(v14 + 20);
      v93 = a3;
      uint64_t v89 = (uint64_t *)((char *)a3 + v25);
      uint64_t v88 = a4 + OBJC_IVAR___IDSQuerySDPersistenceManager_logger;
      unint64_t v87 = a2 & 0xC000000000000001LL;
      uint64_t v86 = IDSRegistrationPropertySupportsStewie;
      uint64_t v82 = &v110;
      *(void *)&__int128 v23 = 136315906LL;
      __int128 v81 = v23;
      uint64_t v80 = (char *)&type metadata for Any + 8;
      uint64_t v94 = a2;
      uint64_t v95 = a1;
      uint64_t v92 = v19;
      do
      {
        uint64_t v104 = v24;
        if (v87) {
          id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, a2);
        }
        else {
          id v41 = *(id *)(a2 + 8 * v24 + 32);
        }
        uint64_t v42 = v41;
        uint64_t v43 = v93;
        uint64_t v44 = (uint64_t)v96;
        id v45 = [v41 capabilities];
        id v46 = [v45 valueForCapability:v86];

        uint64_t v47 = *v91;
        unint64_t v48 = v91[1];
        uint64_t v49 = v91[2];
        unint64_t v50 = v91[3];
        sub_1003F5FC8((uint64_t)v43, v44, type metadata accessor for SenderKeyAndState);
        unint64_t v108 = v48;
        swift_bridgeObjectRetain_n(v48, 3LL);
        unint64_t v107 = v50;
        swift_bridgeObjectRetain_n(v50, 3LL);
        id v51 = v42;
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        os_log_type_t v53 = static os_log_type_t.default.getter();
        int v54 = v53;
        BOOL v55 = os_log_type_enabled(v52, v53);
        uint64_t v105 = v49;
        id v106 = v51;
        uint64_t v103 = v47;
        if (v55)
        {
          uint64_t v56 = swift_slowAlloc(42LL, -1LL);
          id v102 = v46;
          uint64_t v57 = v56;
          uint64_t v84 = (void *)swift_slowAlloc(8LL, -1LL);
          uint64_t v101 = swift_slowAlloc(96LL, -1LL);
          uint64_t v111 = v101;
          *(_DWORD *)uint64_t v57 = v81;
          os_log_t v85 = v52;
          uint64_t v58 = v47;
          uint64_t v59 = v44;
          uint64_t v61 = *(void *)(v44 + 16);
          unint64_t v60 = *(void *)(v44 + 24);
          sub_1004028CC(v61, v60);
          uint64_t v62 = Data.description.getter(v61, v60);
          int v83 = v54;
          unint64_t v64 = v63;
          sub_100402A84(v61, v60);
          uint64_t v109 = sub_1003FFBB0(v62, v64, &v111);
          uint64_t v65 = v82;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v82, v57 + 4, v57 + 12);
          swift_bridgeObjectRelease(v64);
          sub_1003F6050(v59, type metadata accessor for SenderKeyAndState);
          *(_WORD *)(v57 + 12) = 2080;
          unint64_t v66 = v108;
          swift_bridgeObjectRetain(v108);
          uint64_t v109 = sub_1003FFBB0(v58, v66, &v111);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v65, v57 + 14, v57 + 22);
          unint64_t v67 = v66;
          id v51 = v106;
          swift_bridgeObjectRelease_n(v67, 3LL);
          *(_WORD *)(v57 + 22) = 2080;
          unint64_t v68 = v107;
          swift_bridgeObjectRetain(v107);
          uint64_t v109 = sub_1003FFBB0(v105, v68, &v111);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v65, v57 + 24, v57 + 32);
          swift_bridgeObjectRelease_n(v68, 3LL);
          *(_WORD *)(v57 + 32) = 2112;
          id v69 = [v51 pushTokenObject];
          uint64_t v109 = (uint64_t)v69;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v65, v57 + 34, v57 + 42);
          uint64_t v70 = v84;
          *uint64_t v84 = v69;

          os_log_t v71 = v85;
          _os_log_impl( (void *)&_mh_execute_header,  v85,  (os_log_type_t)v83,  "Saving generated sender key and state with keyID: %s senderURI: %s receiverURI: %s receiverPushToken: %@",  (uint8_t *)v57,  0x2Au);
          uint64_t v72 = sub_1003F5CB4(&qword_1009B92C8);
          swift_arrayDestroy(v70, 1LL, v72);
          swift_slowDealloc(v70, -1LL, -1LL);
          uint64_t v73 = v101;
          swift_arrayDestroy(v101, 3LL, v80);
          swift_slowDealloc(v73, -1LL, -1LL);
          uint64_t v74 = v57;
          id v46 = v102;
          swift_slowDealloc(v74, -1LL, -1LL);
        }

        else
        {

          sub_1003F6050(v44, type metadata accessor for SenderKeyAndState);
          swift_bridgeObjectRelease_n(v107, 2LL);
          swift_bridgeObjectRelease_n(v108, 2LL);
        }

        uint64_t v26 = v104 + 1;
        LODWORD(v102) = (uint64_t)v46 > 0;
        unint64_t v27 = v43[3];
        uint64_t v104 = v43[2];
        uint64_t v28 = *v43;
        unint64_t v29 = v43[1];
        sub_1004028CC(v104, v27);
        sub_1004028CC(v28, v29);
        id v30 = [v51 pushToken];
        uint64_t v101 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v30);
        unint64_t v32 = v31;

        uint64_t v33 = v98;
        (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v98, v90, v100);
        uint64_t v34 = *v89;
        unint64_t v35 = v89[1];
        sub_1004028CC(*v89, v35);
        char v36 = sub_1000335E8();
        char v37 = sub_1000335E8();
        unint64_t v78 = v35;
        uint64_t v24 = v26;
        uint64_t v38 = v97;
        uint64_t v39 = sub_1004499D8( v104,  v27,  v28,  v29,  v103,  v108,  v105,  v107,  v101,  v32,  v33,  v34,  v78,  1u,  v36 & 1,  v102,  v37 & 1);
        uint64_t v40 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
        dispatch thunk of ModelContext.insert<A>(_:)(v39, v38, v40);

        swift_release(v39);
        a2 = v94;
      }

      while (v92 != v24);
      uint64_t v75 = swift_bridgeObjectRelease(v94);
      uint64_t result = dispatch thunk of ModelContext.hasChanges.getter(v75);
      if ((result & 1) != 0) {
        return dispatch thunk of ModelContext.save()();
      }
      return result;
    }
  }

  else
  {
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v19) {
      goto LABEL_3;
    }
  }

  uint64_t v77 = swift_bridgeObjectRelease(a2);
  uint64_t result = dispatch thunk of ModelContext.hasChanges.getter(v77);
  if ((result & 1) != 0) {
    return dispatch thunk of ModelContext.save()();
  }
  return result;
}

uint64_t sub_1004F1250(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_allocObject(&unk_100908048, 40LL, 7LL);
  v9[2] = v4;
  v9[3] = a2;
  v9[4] = a1;
  uint64_t v10 = (void *)swift_allocObject(&unk_100908070, 56LL, 7LL);
  v10[2] = v4;
  v10[3] = a2;
  v10[4] = a1;
  v10[5] = a3;
  v10[6] = a4;
  __n128 v11 = *(void (**)(uint64_t (*)(uint64_t), void *, id (*)(uint64_t), void *))((swift_isaMask & *v4) + 0xE0LL);
  __n128 v12 = v4;
  swift_bridgeObjectRetain_n(a2, 2LL);
  id v13 = a1;
  uint64_t v14 = v12;
  id v15 = v13;
  sub_10050E38C(a3, a4);
  v11(sub_10050E30C, v9, sub_10050E37C, v10);
  swift_release(v9);
  return swift_release(v10);
}

uint64_t sub_1004F1348(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (uint64_t *)((char *)&v28 - v13);
  id v15 = [a4 rawToken];
  uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v15);
  unint64_t v18 = v17;

  uint64_t v19 = (uint64_t)sub_1004E8104(a3, v16, v18, a1);
  uint64_t result = sub_100402A84(v16, v18);
  if (!((unint64_t)v19 >> 62))
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v21) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease(v19);
  }

  if (v19 < 0) {
    uint64_t v27 = v19;
  }
  else {
    uint64_t v27 = v19 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v19);
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v27);
  uint64_t result = swift_bridgeObjectRelease(v19);
  if (!v21) {
    return swift_bridgeObjectRelease(v19);
  }
LABEL_3:
  if (v21 >= 1)
  {
    for (uint64_t i = 0LL; i != v21; ++i)
    {
      if ((v19 & 0xC000000000000001LL) != 0)
      {
        uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
      }

      else
      {
        uint64_t v23 = *(void *)(v19 + 8 * i + 32);
        swift_retain(v23);
      }

      sub_100447CFC(1);
      sub_100447DA4(v14);
      uint64_t v24 = type metadata accessor for Date(0LL);
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v14, 1LL, v24) == 1)
      {
        uint64_t v26 = sub_10040A274((uint64_t)v14, &qword_1009BC130);
        static Date.now.getter(v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0LL, 1LL, v24);
        sub_100448098((uint64_t)v10);
        swift_release(v23);
      }

      else
      {
        swift_release(v23);
        sub_10040A274((uint64_t)v14, &qword_1009BC130);
      }
    }

    return swift_bridgeObjectRelease(v19);
  }

  __break(1u);
  return result;
}

id sub_1004F158C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v38 = *(void *)(v35 - 8);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v36 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  uint64_t v19 = __chkstk_darwin(v17, v18);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id result = (id)im_primary_queue(v19, v22);
  if (result)
  {
    uint64_t v24 = result;
    uint64_t v25 = (void *)swift_allocObject(&unk_100908CD8, 64LL, 7LL);
    v25[2] = a1;
    v25[3] = a2;
    v25[4] = a3;
    v25[5] = a4;
    v25[6] = a5;
    v25[7] = a6;
    aBlock[4] = sub_100512408;
    id v41 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1003F8400;
    aBlock[3] = &unk_100908CF0;
    uint64_t v26 = _Block_copy(aBlock);
    swift_errorRetain(a1);
    id v27 = a2;
    swift_bridgeObjectRetain(a3);
    id v28 = a4;
    uint64_t v29 = sub_10050E38C(a5, a6);
    static DispatchQoS.unspecified.getter(v29);
    uint64_t v39 = _swiftEmptyArrayStorage;
    uint64_t v30 = sub_10040A2B0( (unint64_t *)&unk_1009BAC40,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v31 = sub_1003F5CB4((uint64_t *)&unk_1009B9870);
    uint64_t v32 = sub_10047E23C( (unint64_t *)&qword_1009BAC50,  (uint64_t *)&unk_1009B9870,  (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v33 = v35;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v31, v32, v35, v30);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v21, v15, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v33);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v37);
    return (id)swift_release(v41);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1004F17CC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v15 = (void *)swift_allocObject(&unk_100908098, 64LL, 7LL);
  v15[2] = v7;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  v15[7] = a5;
  uint64_t v16 = (void *)swift_allocObject(&unk_1009080C0, 64LL, 7LL);
  v16[2] = v7;
  v16[3] = a3;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a6;
  v16[7] = a7;
  __n128 v17 = *(void (**)(uint64_t (*)(uint64_t), void *, id (*)(uint64_t), void *))((swift_isaMask & *v7) + 0xE0LL);
  __n128 v18 = v7;
  id v19 = a1;
  id v20 = a2;
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v21 = v18;
  id v22 = v19;
  id v23 = v20;
  swift_bridgeObjectRetain(a5);
  sub_10050E38C(a6, a7);
  v17(sub_10050E3E0, v15, sub_10050E448, v16);
  swift_release(v15);
  return swift_release(v16);
}

uint64_t sub_1004F18F0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a5;
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v16 = [a3 prefixedURI];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  uint64_t v19 = v18;

  id v20 = [a4 prefixedURI];
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  uint64_t v23 = v22;

  uint64_t v24 = (uint64_t)sub_1004E8F70(v17, v19, v21, v23, v33, a1);
  swift_bridgeObjectRelease(v19);
  uint64_t result = swift_bridgeObjectRelease(v23);
  if (!((unint64_t)v24 >> 62))
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v26) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease(v24);
  }

  if (v24 < 0) {
    uint64_t v31 = v24;
  }
  else {
    uint64_t v31 = v24 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v24);
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter(v31);
  uint64_t result = swift_bridgeObjectRelease(v24);
  if (!v26) {
    return swift_bridgeObjectRelease(v24);
  }
LABEL_3:
  if (v26 >= 1)
  {
    uint64_t v27 = 0LL;
    do
    {
      if ((v24 & 0xC000000000000001LL) != 0)
      {
        uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v24);
      }

      else
      {
        uint64_t v28 = *(void *)(v24 + 8 * v27 + 32);
        swift_retain(v28);
      }

      ++v27;
      uint64_t v29 = sub_1004486B0(1);
      static Date.now.getter(v29);
      uint64_t v30 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v15, 0LL, 1LL, v30);
      sub_1004491EC((uint64_t)v15);
      swift_bridgeObjectRetain(a7);
      sub_100448E3C(a6, a7);
      swift_release(v28);
    }

    while (v26 != v27);
    return swift_bridgeObjectRelease(v24);
  }

  __break(1u);
  return result;
}

id sub_1004F1B1C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v41 = *(void *)(v38 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v39 = *(void *)(v18 - 8);
  uint64_t v40 = v18;
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id result = (id)im_primary_queue(v21, v24);
  id v37 = result;
  if (result)
  {
    uint64_t v26 = (void *)swift_allocObject(&unk_100908C88, 72LL, 7LL);
    v26[2] = a1;
    v26[3] = a2;
    v26[4] = a3;
    v26[5] = a4;
    v26[6] = a5;
    v26[7] = a6;
    v26[8] = a7;
    aBlock[4] = sub_10051207C;
    uint64_t v44 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1003F8400;
    aBlock[3] = &unk_100908CA0;
    uint64_t v27 = _Block_copy(aBlock);
    swift_errorRetain(a1);
    id v28 = a2;
    swift_bridgeObjectRetain(a3);
    id v29 = a4;
    id v30 = a5;
    uint64_t v31 = sub_10050E38C(a6, a7);
    static DispatchQoS.unspecified.getter(v31);
    uint64_t v42 = _swiftEmptyArrayStorage;
    uint64_t v32 = sub_10040A2B0( (unint64_t *)&unk_1009BAC40,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v33 = sub_1003F5CB4((uint64_t *)&unk_1009B9870);
    uint64_t v34 = sub_10047E23C( (unint64_t *)&qword_1009BAC50,  (uint64_t *)&unk_1009B9870,  (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v35 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v42, v33, v34, v38, v32);
    uint64_t v36 = v37;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v23, v17, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v35);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v40);
    return (id)swift_release(v44);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1004F1D68(void *a1, void *a2, void *a3)
{
  return sub_1004F1DE0( a1,  a2,  a3,  (uint64_t)&unk_1009080E8,  (uint64_t)&unk_100908110,  (uint64_t)sub_10050E45C,  (uint64_t)sub_10050E4A0);
}

uint64_t sub_1004F1D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1004F1F84(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_100511EB8, (void (*)(char *))sub_10044958C);
}

uint64_t sub_1004F1DBC(void *a1, void *a2, void *a3)
{
  return sub_1004F1DE0( a1,  a2,  a3,  (uint64_t)&unk_100908138,  (uint64_t)&unk_100908160,  (uint64_t)sub_10050E4E4,  (uint64_t)sub_10050E540);
}

uint64_t sub_1004F1DE0(void *a1, id a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11 = [a2 prefixedURI];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v13 = v12;

  id v14 = [a3 prefixedURI];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  uint64_t v17 = v16;

  id v18 = [a1 rawToken];
  uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v18);
  unint64_t v21 = v20;

  uint64_t v22 = (void *)swift_allocObject(a4, 64LL, 7LL);
  v22[2] = v30;
  v22[3] = v13;
  v22[4] = v15;
  v22[5] = v17;
  v22[6] = v19;
  v22[7] = v21;
  uint64_t v23 = (void *)swift_allocObject(a5, 48LL, 7LL);
  v23[2] = v7;
  v23[3] = a1;
  v23[4] = a3;
  v23[5] = a2;
  uint64_t v24 = *(void (**)(uint64_t, void *, uint64_t, void *))((swift_isaMask & *v7) + 0xE0LL);
  sub_1004028CC(v19, v21);
  uint64_t v25 = v7;
  id v26 = a1;
  id v27 = a3;
  id v28 = a2;
  v24(a6, v22, a7, v23);
  swift_release(v22);
  swift_release(v23);
  return sub_100402A84(v19, v21);
}

uint64_t sub_1004F1F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1004F1F84(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_100511EB8, (void (*)(char *))sub_10044992C);
}

uint64_t sub_1004F1F84( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(char *))
{
  uint64_t v53 = a8;
  uint64_t v55 = a1;
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  uint64_t v49 = a5;
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1003F5CB4((uint64_t *)&unk_1009BC5A0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = sub_1003F5CB4(&qword_1009BC6B8);
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v26, v27);
  id v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v61 = v49;
  uint64_t v62 = v50;
  uint64_t v63 = v51;
  uint64_t v30 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  uint64_t v64 = v30;
  Predicate.init(_:)(v53, v57, 1LL, &v64);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v29, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v19, 0LL, 1LL, v24);
  uint64_t v31 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  FetchDescriptor.init(predicate:sortBy:)(v19, _swiftEmptyArrayStorage, v30, v31);
  uint64_t v32 = v56;
  uint64_t v33 = dispatch thunk of ModelContext.fetch<A>(_:)(v23, v30, v31);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v23, v54);
  if (v32) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v29, v24);
  }
  uint64_t v56 = v29;
  uint64_t v35 = v25;
  if ((unint64_t)v33 >> 62)
  {
    if (v33 < 0) {
      uint64_t v48 = v33;
    }
    else {
      uint64_t v48 = v33 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v33);
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter(v48);
    uint64_t result = swift_bridgeObjectRelease(v33);
  }

  else
  {
    uint64_t v36 = *(void *)((v33 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v37 = v24;
  uint64_t v38 = v35;
  uint64_t v39 = v56;
  if (v36)
  {
    if (v36 < 1)
    {
      __break(1u);
      return result;
    }

    if ((v33 & 0xC000000000000001LL) != 0)
    {
      uint64_t v40 = 0LL;
      do
      {
        uint64_t v41 = specialized _ArrayBuffer._getElementSlowPath(_:)(v40++, v33);
        static Date.now.getter(v41);
        uint64_t v42 = type metadata accessor for Date(0LL);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56LL))(v15, 0LL, 1LL, v42);
        a9(v15);
        swift_unknownObjectRelease(v41, v43);
      }

      while (v36 != v40);
    }

    else
    {
      uint64_t v44 = 0LL;
      do
      {
        uint64_t v45 = *(void *)(v33 + 8 * v44++ + 32);
        uint64_t v46 = swift_retain(v45);
        static Date.now.getter(v46);
        uint64_t v47 = type metadata accessor for Date(0LL);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v15, 0LL, 1LL, v47);
        a9(v15);
        swift_release(v45);
      }

      while (v36 != v44);
    }

    swift_bridgeObjectRelease(v33);
    uint64_t v39 = v56;
  }

  else
  {
    swift_bridgeObjectRelease(v33);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v37);
}

uint64_t sub_1004F2310@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v153 = a6;
  uint64_t v154 = a7;
  uint64_t v139 = a5;
  uint64_t v138 = a4;
  uint64_t v132 = a3;
  uint64_t v133 = a2;
  os_log_type_t v161 = a8;
  uint64_t v9 = sub_1003F5CB4(&qword_1009BCA20);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v157 = v9;
  uint64_t v158 = v10;
  __chkstk_darwin(v11, v12);
  uint64_t v152 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1003F5CB4(&qword_1009BC5D0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v155 = v14;
  uint64_t v156 = v15;
  __chkstk_darwin(v16, v17);
  int v150 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_1003F5CB4(&qword_1009BCA28);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v159 = v19;
  uint64_t v160 = v20;
  __chkstk_darwin(v21, v22);
  uint64_t v151 = (char *)&v124 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v144 = sub_1003F5CB4(&qword_1009BC5B0);
  uint64_t v145 = *(void *)(v144 - 8);
  __chkstk_darwin(v24, v25);
  uint64_t v141 = (char *)&v124 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v142 = sub_1003F5CB4(&qword_1009BC5B8);
  uint64_t v143 = *(void *)(v142 - 8);
  __chkstk_darwin(v27, v28);
  v137 = (char *)&v124 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_1003F5CB4(&qword_1009BC5C0);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v146 = v30;
  uint64_t v147 = v31;
  __chkstk_darwin(v32, v33);
  uint64_t v140 = (char *)&v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = sub_1003F5CB4(&qword_1009BC410);
  uint64_t v129 = *(void *)(v128 - 8);
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v124 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_1003F5CB4(&qword_1009BC5C8);
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (char *)&v124 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v126 = sub_1003F5CB4(&qword_1009BC6C0);
  uint64_t v45 = *(void *)(v126 - 8);
  __chkstk_darwin(v46, v47);
  uint64_t v49 = (char *)&v124 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v130 = sub_1003F5CB4(&qword_1009BC9D8);
  uint64_t v131 = *(void *)(v130 - 8);
  __chkstk_darwin(v50, v51);
  uint64_t v127 = (char *)&v124 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v53, v54);
  __n128 v125 = (char *)&v124 - v55;
  uint64_t v135 = sub_1003F5CB4(&qword_1009BC9E0);
  uint64_t v136 = *(void *)(v135 - 8);
  __chkstk_darwin(v56, v57);
  v163 = (char *)&v124 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = sub_1003F5CB4(&qword_1009BC9F0);
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v148 = v59;
  uint64_t v149 = v60;
  __chkstk_darwin(v61, v62);
  uint64_t v134 = (char *)&v124 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v64 = *a1;
  uint64_t v65 = sub_10047E23C( &qword_1009BC5F8,  &qword_1009BC5C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  uint64_t v124 = v64;
  uint64_t v164 = v65;
  static PredicateExpressions.build_Arg<A>(_:)(v64, v39, v65);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D830);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v44, KeyPath, v39, v65);
  swift_release(KeyPath);
  v162 = *(void (**)(char *, uint64_t))(v40 + 8);
  v162(v44, v39);
  uint64_t v165 = v133;
  uint64_t v166 = v132;
  unint64_t v67 = v38;
  static PredicateExpressions.build_Arg<A>(_:)(&v165, &type metadata for String);
  uint64_t v68 = sub_10047E23C( &qword_1009BC6F8,  &qword_1009BC6C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v133 = v68;
  uint64_t v132 = sub_10047E23C( &qword_1009BC460,  &qword_1009BC410,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  id v69 = v38;
  uint64_t v70 = v126;
  uint64_t v71 = v128;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v49,  v69,  v126,  v128,  v68,  v132,  &protocol witness table for String);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v129 + 8);
  v72(v67, v71);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v45 + 8);
  v73(v49, v70);
  uint64_t v74 = v164;
  static PredicateExpressions.build_Arg<A>(_:)(v64, v39, v164);
  uint64_t v75 = swift_getKeyPath(&unk_10071D858);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v44, v75, v39, v74);
  swift_release(v75);
  uint64_t v76 = v162;
  v162(v44, v39);
  uint64_t v165 = v138;
  uint64_t v166 = v139;
  static PredicateExpressions.build_Arg<A>(_:)(&v165, &type metadata for String);
  uint64_t v77 = v127;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v49,  v67,  v70,  v71,  v133,  v132,  &protocol witness table for String);
  v72(v67, v71);
  v73(v49, v70);
  uint64_t v78 = sub_10047E23C( &qword_1009BC9E8,  &qword_1009BC9D8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v79 = v125;
  uint64_t v80 = v130;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v125, v77, v130, v130, v78, v78);
  __int128 v81 = *(void (**)(char *, uint64_t))(v131 + 8);
  v81(v77, v80);
  v81(v79, v80);
  uint64_t v82 = v124;
  uint64_t v83 = v164;
  static PredicateExpressions.build_Arg<A>(_:)(v124, v39, v164);
  uint64_t v84 = swift_getKeyPath(&unk_10071D7E0);
  os_log_t v85 = v137;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v44, v84, v39, v83);
  swift_release(v84);
  v76(v44, v39);
  LOBYTE(v165) = 1;
  uint64_t v86 = v141;
  static PredicateExpressions.build_Arg<A>(_:)(&v165, &type metadata for Bool);
  uint64_t v87 = sub_10047E23C( &qword_1009BC620,  &qword_1009BC5B8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v88 = sub_10047E23C( &qword_1009BC628,  &qword_1009BC5B0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v89 = v140;
  uint64_t v90 = v86;
  v91 = v86;
  uint64_t v92 = v142;
  uint64_t v93 = v144;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v85,  v90,  v142,  v144,  v87,  v88,  &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v91, v93);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v85, v92);
  uint64_t v94 = sub_10047E23C( &qword_1009BCA10,  &qword_1009BC9E0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>);
  uint64_t v95 = sub_10047E23C( &qword_1009BC638,  &qword_1009BC5C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v96 = v134;
  uint64_t v97 = v163;
  id v98 = v89;
  uint64_t v99 = v89;
  uint64_t v100 = v135;
  uint64_t v101 = v146;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v163, v98, v135, v146, v94, v95);
  (*(void (**)(char *, uint64_t))(v147 + 8))(v99, v101);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v97, v100);
  uint64_t v102 = v82;
  uint64_t v103 = v164;
  static PredicateExpressions.build_Arg<A>(_:)(v102, v39, v164);
  uint64_t v104 = swift_getKeyPath(&unk_10071D9C0);
  uint64_t v105 = v150;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v44, v104, v39, v103);
  swift_release(v104);
  v162(v44, v39);
  id v106 = v152;
  uint64_t v165 = v153;
  uint64_t v166 = v154;
  static PredicateExpressions.build_Arg<A>(_:)(&v165, &type metadata for Data);
  uint64_t v107 = sub_10047E23C( &qword_1009BC608,  &qword_1009BC5D0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v108 = sub_10047E23C( &qword_1009BCA30,  &qword_1009BCA20,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  unint64_t v109 = sub_100510F48();
  char v110 = v151;
  uint64_t v111 = v106;
  uint64_t v112 = v106;
  uint64_t v113 = v155;
  uint64_t v114 = v157;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v105, v111, v155, v157, v107, v108, v109);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v112, v114);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v105, v113);
  uint64_t v115 = sub_1003F5CB4(&qword_1009BCA38);
  uint64_t v116 = v161;
  v161[3] = v115;
  v116[4] = sub_100511EC4();
  sub_10040B2A8(v116);
  uint64_t v117 = sub_10047E23C( &qword_1009BCA58,  &qword_1009BC9F0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>);
  uint64_t v118 = sub_10047E23C( &qword_1009BCA60,  &qword_1009BCA28,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  v119 = v110;
  uint64_t v120 = v110;
  uint64_t v121 = v148;
  uint64_t v122 = v159;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v96, v120, v148, v159, v117, v118);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v119, v122);
  return (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v96, v121);
}

uint64_t sub_1004F2D3C(void *a1, void *a2, uint64_t a3)
{
  __n128 v7 = (void *)swift_allocObject(&unk_100908188, 48LL, 7LL);
  v7[2] = a3;
  v7[3] = v3;
  v7[4] = a1;
  v7[5] = a2;
  __n128 v8 = (void *)swift_allocObject(&unk_1009081B0, 48LL, 7LL);
  v8[2] = v3;
  v8[3] = a3;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = *(void (**)(uint64_t (*)(uint64_t), void *, void (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE0LL);
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v10 = v3;
  id v11 = a1;
  id v12 = a2;
  uint64_t v13 = v10;
  id v14 = v11;
  id v15 = v12;
  v9(sub_10050E834, v7, sub_10050E89C, v8);
  swift_release(v7);
  return swift_release(v8);
}

uint64_t sub_1004F2E2C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a2)
  {
    id v26 = [a4 prefixedURI];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    uint64_t v29 = v28;

    id v30 = [a5 prefixedURI];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    uint64_t v33 = v32;

    uint64_t v21 = (uint64_t)sub_1004E89E0(v27, v29, v31, v33, a1);
    swift_bridgeObjectRelease(v29);
    uint64_t result = swift_bridgeObjectRelease(v33);
    uint64_t v35 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v35) {
      goto LABEL_12;
    }
    return swift_bridgeObjectRelease(v21);
  }

  id v13 = [a4 prefixedURI];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v16 = v15;

  id v17 = [a5 prefixedURI];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  uint64_t v20 = v19;

  uint64_t v21 = (uint64_t)sub_1004E8F70(v14, v16, v18, v20, a2, a1);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v20);
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v39 = v21;
    }
    else {
      uint64_t v39 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v21);
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v21);
    if (!v22) {
      return swift_bridgeObjectRelease(v21);
    }
    goto LABEL_4;
  }

  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v22) {
    return swift_bridgeObjectRelease(v21);
  }
LABEL_4:
  if (v22 >= 1)
  {
    uint64_t v23 = 0LL;
    do
    {
      if ((v21 & 0xC000000000000001LL) != 0)
      {
        uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v21);
      }

      else
      {
        uint64_t v24 = *(void *)(v21 + 8 * v23 + 32);
        swift_retain(v24);
      }

      ++v23;
      sub_1004486B0(0);
      sub_100447CFC(0);
      uint64_t v25 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v12, 1LL, 1LL, v25);
      sub_100448098((uint64_t)v12);
      swift_release(v24);
    }

    while (v22 != v23);
    return swift_bridgeObjectRelease(v21);
  }

  __break(1u);
LABEL_25:
  if (v21 < 0) {
    uint64_t v40 = v21;
  }
  else {
    uint64_t v40 = v21 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v21);
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter(v40);
  uint64_t result = swift_bridgeObjectRelease(v21);
  if (!v35) {
    return swift_bridgeObjectRelease(v21);
  }
LABEL_12:
  if (v35 >= 1)
  {
    uint64_t v36 = 0LL;
    do
    {
      if ((v21 & 0xC000000000000001LL) != 0)
      {
        uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v21);
      }

      else
      {
        uint64_t v37 = *(void *)(v21 + 8 * v36 + 32);
        swift_retain(v37);
      }

      ++v36;
      sub_1004486B0(0);
      sub_100447CFC(0);
      uint64_t v38 = type metadata accessor for Date(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v12, 1LL, 1LL, v38);
      sub_100448098((uint64_t)v12);
      swift_release(v37);
    }

    while (v35 != v36);
    return swift_bridgeObjectRelease(v21);
  }

  __break(1u);
  return result;
}

uint64_t sub_1004F318C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[2] = a1;
  v5[4] = a2;
  v5[5] = a3;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE8LL))( 0LL,  sub_10050ECAC,  v5);
  return 1LL;
}

uint64_t sub_1004F334C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v67 = a1;
  unint64_t v65 = a5;
  uint64_t v66 = a4;
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  __chkstk_darwin(v7, v8);
  uint64_t v64 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = type metadata accessor for SenderKeyAndState(0LL);
  __chkstk_darwin(v10, v11);
  id v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v60 = type metadata accessor for SenderKeyInfo(0LL);
  uint64_t v14 = (uint64_t *)((char *)a2 + *(int *)(v60 + 28));
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  uint64_t v17 = v14[2];
  unint64_t v18 = v14[3];
  sub_1003F5FC8((uint64_t)a2, (uint64_t)v13, type metadata accessor for SenderKeyAndState);
  unint64_t v70 = v16;
  swift_bridgeObjectRetain_n(v16, 3LL);
  unint64_t v69 = v18;
  uint64_t v19 = swift_bridgeObjectRetain_n(v18, 3LL);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  int v22 = v21;
  BOOL v23 = os_log_type_enabled(v20, v21);
  uint64_t v59 = v15;
  uint64_t v68 = v17;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v58 = swift_slowAlloc(96LL, -1LL);
    uint64_t v73 = v58;
    *(_DWORD *)uint64_t v24 = 136315650;
    LODWORD(v57) = v22;
    uint64_t v25 = v15;
    uint64_t v26 = *((void *)v13 + 2);
    unint64_t v27 = *((void *)v13 + 3);
    sub_1004028CC(v26, v27);
    uint64_t v28 = Data.description.getter(v26, v27);
    os_log_t v56 = v20;
    unint64_t v30 = v29;
    sub_100402A84(v26, v27);
    uint64_t v71 = sub_1003FFBB0(v28, v30, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease(v30);
    sub_1003F6050((uint64_t)v13, type metadata accessor for SenderKeyAndState);
    *(_WORD *)(v24 + 12) = 2080;
    unint64_t v31 = v70;
    swift_bridgeObjectRetain(v70);
    uint64_t v71 = sub_1003FFBB0(v25, v31, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v24 + 14, v24 + 22);
    swift_bridgeObjectRelease_n(v31, 3LL);
    *(_WORD *)(v24 + 22) = 2080;
    unint64_t v32 = v69;
    swift_bridgeObjectRetain(v69);
    uint64_t v71 = sub_1003FFBB0(v68, v32, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v24 + 24, v24 + 32);
    swift_bridgeObjectRelease_n(v32, 3LL);
    os_log_t v33 = v56;
    _os_log_impl( (void *)&_mh_execute_header,  v56,  (os_log_type_t)v57,  "Saving received sender key and state with keyID: %s senderURI: %s receiverURI: %s",  (uint8_t *)v24,  0x20u);
    uint64_t v34 = v58;
    swift_arrayDestroy(v58, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  else
  {

    sub_1003F6050((uint64_t)v13, type metadata accessor for SenderKeyAndState);
    swift_bridgeObjectRelease_n(v69, 2LL);
    swift_bridgeObjectRelease_n(v70, 2LL);
  }

  uint64_t v35 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  unint64_t v37 = a2[3];
  uint64_t v57 = a2[2];
  uint64_t v36 = v57;
  uint64_t v58 = v35;
  uint64_t v39 = *a2;
  unint64_t v55 = a2[1];
  unint64_t v38 = v55;
  os_log_t v56 = (os_log_t)v37;
  uint64_t v40 = v64;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v64, (char *)a2 + *(int *)(v60 + 24), v63);
  uint64_t v41 = (uint64_t *)((char *)a2 + *(int *)(v61 + 20));
  uint64_t v42 = *v41;
  unint64_t v43 = v41[1];
  sub_1004028CC(v36, v37);
  sub_1004028CC(v39, v38);
  unint64_t v45 = v65;
  uint64_t v44 = v66;
  sub_1004028CC(v66, v65);
  sub_1004028CC(v42, v43);
  char v46 = sub_1000335E8();
  char v47 = sub_1000335E8();
  LOBYTE(v37) = sub_1000335E8();
  char v48 = sub_1000335E8();
  unsigned __int8 v54 = v37 & 1;
  uint64_t v49 = v58;
  __n128 v50 = sub_1004499D8( v57,  (unint64_t)v56,  v39,  v55,  v59,  v70,  v68,  v69,  v44,  v45,  v40,  v42,  v43,  v46 & 1,  v47 & 1,  v54,  v48 & 1);
  uint64_t v51 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  uint64_t v52 = dispatch thunk of ModelContext.insert<A>(_:)(v50, v49, v51);
  if ((dispatch thunk of ModelContext.hasChanges.getter(v52) & 1) != 0) {
    dispatch thunk of ModelContext.save()();
  }
  return swift_release(v50);
}

uint64_t sub_1004F37C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  LOBYTE(v14) = 1;
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  char v10 = a3;
  __n128 v11 = &v14;
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  (*(void (**)(void, uint64_t (*)(uint64_t), _BYTE *))((swift_isaMask & *v5) + 0xE8LL))( 0LL,  sub_10050ECC8,  v7);
  return v14;
}

void *sub_1004F3AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  void v5[6] = &v6;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE8LL))( 0LL,  sub_10050EDF8,  v5);
  return v6;
}

uint64_t sub_1004F3B10( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t *a6)
{
  uint64_t v63 = a6;
  type metadata accessor for Date(0LL);
  __chkstk_darwin(v10, v11);
  uint64_t v62 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for SenderKeyInfo(0LL);
  __chkstk_darwin(v13, v14);
  uint64_t v61 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v60 = *(void *)(type metadata accessor for SenderKeyAndState(0LL) - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20, v21);
  BOOL v23 = (char *)&v56 - v22;
  id v24 = [a5 prefixedURI];
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  uint64_t v27 = v26;

  uint64_t v28 = (uint64_t)sub_1004EF770(a3, a4, v25, v27, a1);
  uint64_t result = swift_bridgeObjectRelease(v27);
  if (!((unint64_t)v28 >> 62))
  {
    uint64_t v30 = *(void *)((v28 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v30) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease(v28);
  }

  if (v28 < 0) {
    uint64_t v55 = v28;
  }
  else {
    uint64_t v55 = v28 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v28);
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v55);
  uint64_t result = swift_bridgeObjectRelease(v28);
  if (!v30) {
    return swift_bridgeObjectRelease(v28);
  }
LABEL_3:
  if (v30 < 1)
  {
    __break(1u);
  }

  else
  {
    uint64_t v31 = 0LL;
    unint64_t v57 = v28 & 0xC000000000000001LL;
    uint64_t v58 = v28;
    uint64_t v59 = v19;
    uint64_t v56 = v30;
    unint64_t v32 = v62;
    do
    {
      if (v57)
      {
        uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
      }

      else
      {
        uint64_t v33 = *(void *)(v28 + 8 * v31 + 32);
        swift_retain(v33);
      }

      uint64_t v34 = sub_100446720();
      uint64_t v36 = v35;
      uint64_t v37 = sub_100446490();
      uint64_t v39 = v38;
      sub_100447148(v32);
      uint64_t v40 = sub_1004469B0();
      sub_100446C34();
      uint64_t v41 = nullsub_36(v40);
      uint64_t v42 = v61;
      sub_10046BDE8(v34, v36, v37, v39, (uint64_t)v32, v41, v43, v44, v61, v45);
      uint64_t v46 = sub_100447444();
      sub_100466FC0((uint64_t)v42, v46, v47, (uint64_t)v23);
      uint64_t v48 = (uint64_t)v59;
      sub_1003F5FC8((uint64_t)v23, (uint64_t)v59, type metadata accessor for SenderKeyAndState);
      uint64_t v49 = v63;
      unint64_t v50 = *v63;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v63);
      *uint64_t v49 = v50;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v50 = sub_100503C28( 0,  *(void *)(v50 + 16) + 1LL,  1,  v50,  &qword_1009BCA18,  type metadata accessor for SenderKeyAndState);
        *uint64_t v63 = v50;
      }

      uint64_t v52 = v56;
      unint64_t v54 = *(void *)(v50 + 16);
      unint64_t v53 = *(void *)(v50 + 24);
      if (v54 >= v53 >> 1)
      {
        unint64_t v50 = sub_100503C28(v53 > 1, v54 + 1, 1, v50, &qword_1009BCA18, type metadata accessor for SenderKeyAndState);
        *uint64_t v63 = v50;
      }

      ++v31;
      *(void *)(v50 + 16) = v54 + 1;
      sub_1003F600C( v48,  v50 + ((*(unsigned __int8 *)(v60 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))
      + *(void *)(v60 + 72) * v54,
        type metadata accessor for SenderKeyAndState);
      swift_release(v33);
      sub_1003F6050((uint64_t)v23, type metadata accessor for SenderKeyAndState);
      uint64_t v28 = v58;
    }

    while (v52 != v31);
    return swift_bridgeObjectRelease(v58);
  }

  return result;
}

uint64_t sub_1004F3ED8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1004ED8A4(a2, a1, a3);
}

uint64_t sub_1004F3EE8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v5 = 0;
  v4[3] = a1;
  void v4[4] = a2;
  void v4[5] = &v5;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v2) + 0xE8LL))( 0LL,  sub_10050EE14,  v4);
  return v5;
}

uint64_t *sub_1004F3F4C(void *a1, void *a2)
{
  uint64_t v5 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v7, v8);
  __n128 v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  id v11 = [a1 prefixedURI];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v14 = v13;

  id v15 = [a2 prefixedURI];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  uint64_t v28 = v12;
  uint64_t v29 = v14;
  uint64_t v30 = v16;
  uint64_t v31 = v18;
  uint64_t v33 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  Predicate.init(_:)(sub_10050EED4, v27, 1LL, &v33);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v14);
  unint64_t v32 = &_swiftEmptySetSingleton;
  uint64_t v25 = v10;
  uint64_t v26 = &v32;
  (*(void (**)(void, void (*)(uint64_t), char *))((swift_isaMask & *v2) + 0xE8LL))( 0LL,  sub_10050EEF4,  v24);
  uint64_t v19 = v32;
  swift_bridgeObjectRetain(v32);
  __n128 v21 = sub_100503F64(v20);
  swift_bridgeObjectRelease(v19);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  swift_bridgeObjectRelease(v32);
  return v21;
}

void sub_1004F4238(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v44 = a3;
  sub_1003F5CB4((uint64_t *)&unk_1009BC5A0);
  __chkstk_darwin(v5, v6);
  __n128 v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1003F5CB4(&qword_1009BC6B8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, a2, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0LL, 1LL, v15);
  uint64_t v17 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  uint64_t v18 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  FetchDescriptor.init(predicate:sortBy:)(v8, _swiftEmptyArrayStorage, v17, v18);
  uint64_t v19 = dispatch thunk of ModelContext.fetch<A>(_:)(v14, v17, v18);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  if (!v3)
  {
    uint64_t v20 = v44;
    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0) {
        uint64_t v42 = v19;
      }
      else {
        uint64_t v42 = v19 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v19);
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v42);
    }

    else
    {
      uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(v19);
    }

    uint64_t v22 = v20;
    v43[1] = 0LL;
    if (v21)
    {
      if (v21 < 1)
      {
        __break(1u);
        return;
      }

      if ((v19 & 0xC000000000000001LL) != 0)
      {
        uint64_t v23 = 0LL;
        id v24 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v19);
          uint64_t v26 = sub_100446490();
          uint64_t v28 = v27;
          swift_unknownObjectRelease(v25, v27);
          if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0) {
            id v24 = sub_10046D170(0LL, v24[2] + 1LL, 1, v24);
          }
          unint64_t v30 = v24[2];
          unint64_t v29 = v24[3];
          if (v30 >= v29 >> 1) {
            id v24 = sub_10046D170((void *)(v29 > 1), v30 + 1, 1, v24);
          }
          ++v23;
          v24[2] = v30 + 1;
          uint64_t v31 = &v24[2 * v30];
          v31[4] = v26;
          v31[5] = v28;
          uint64_t v22 = v20;
        }

        while (v21 != v23);
      }

      else
      {
        uint64_t v34 = (void *)(v19 + 32);
        id v24 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v35 = *v34;
          swift_retain(*v34);
          uint64_t v36 = sub_100446490();
          uint64_t v38 = v37;
          swift_release(v35);
          if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0) {
            id v24 = sub_10046D170(0LL, v24[2] + 1LL, 1, v24);
          }
          unint64_t v40 = v24[2];
          unint64_t v39 = v24[3];
          if (v40 >= v39 >> 1) {
            id v24 = sub_10046D170((void *)(v39 > 1), v40 + 1, 1, v24);
          }
          v24[2] = v40 + 1;
          uint64_t v41 = &v24[2 * v40];
          v41[4] = v36;
          v41[5] = v38;
          ++v34;
          --v21;
          uint64_t v22 = v20;
        }

        while (v21);
      }
    }

    else
    {
      id v24 = _swiftEmptyArrayStorage;
    }

    swift_bridgeObjectRelease_n(v19, 2LL);
    uint64_t v32 = sub_10047A7B4((uint64_t)v24);
    swift_bridgeObjectRelease(v24);
    uint64_t v33 = *v22;
    *uint64_t v22 = v32;
    swift_bridgeObjectRelease(v33);
  }

BOOL sub_1004F4628(void *a1, void *a2)
{
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1004ED8A4(a2, a1, (uint64_t)v7);
  uint64_t v8 = type metadata accessor for SenderKeyAndState(0LL);
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))(v7, 1LL, v8) != 1;
  sub_10040A274((uint64_t)v7, (uint64_t *)&unk_1009BAC60);
  return v9;
}

BOOL sub_1004F46E0(uint64_t a1)
{
  char v4 = 0;
  v3[3] = a1;
  v3[4] = &v4;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v1) + 0xE8LL))( 0LL,  sub_10050EF0C,  v3);
  return (v4 & 1) == 0;
}

uint64_t sub_1004F474C(uint64_t a1, uint64_t a2, void *a3, BOOL *a4)
{
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v9, v10);
  __n128 v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v31 - v15;
  id v17 = [a3 prefixedURI];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  uint64_t v20 = v19;

  sub_1004E8C64(v18, v20, a1);
  uint64_t v22 = v21;
  uint64_t result = swift_bridgeObjectRelease(v20);
  if (v22)
  {
    uint64_t v24 = Date.init()(result);
    double v25 = Date.timeIntervalSince1970.getter(v24);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v16, v7);
    uint64_t v27 = sub_100447148(v12);
    double v28 = Date.timeIntervalSince1970.getter(v27);
    v26(v12, v7);
    double v29 = v25 - v28;
    double v30 = *(double *)sub_10045B4F8();
    uint64_t result = swift_release(v22);
    *a4 = v30 < v29;
  }

  return result;
}

uint64_t sub_1004F48AC(void *a1, uint64_t a2)
{
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    uint64_t v9 = 4LL;
    while (1)
    {
      id v10 = (a2 & 0xC000000000000001LL) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a2)
          : *(id *)(a2 + 8 * v9);
      uint64_t v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1LL)) {
        break;
      }
      sub_1004ED8A4(v10, a1, (uint64_t)v7);

      uint64_t v13 = type metadata accessor for SenderKeyAndState(0LL);
      int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48LL))(v7, 1LL, v13);
      sub_10040A274((uint64_t)v7, (uint64_t *)&unk_1009BAC60);
      if (v14 != 1)
      {
        swift_bridgeObjectRelease(a2);
        return 1LL;
      }

      ++v9;
      if (v12 == v8) {
        goto LABEL_10;
      }
    }

    __break(1u);
LABEL_13:
    if (a2 < 0) {
      uint64_t v16 = a2;
    }
    else {
      uint64_t v16 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
  }

uint64_t sub_1004F4AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(a3, 1LL, 1LL, v7);
  id v10 = v3;
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  return (*(uint64_t (**)(void, uint64_t (*)(uint64_t), uint64_t *))((swift_isaMask & *v3) + 0xE8LL))( 0LL,  sub_10050EF38,  &v9);
}

uint64_t sub_1004F4B34(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v32 = a5;
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v13 = [a3 prefixedURI];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v16 = v15;

  id v17 = [a4 prefixedURI];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  uint64_t v20 = v19;

  unint64_t v21 = (unint64_t)sub_1004E89E0(v14, v16, v18, v20, a1);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v20);
  if ((v21 & 0x8000000000000000LL) != 0 || (v21 & 0x4000000000000000LL) != 0)
  {
    swift_bridgeObjectRetain(v21);
    uint64_t v22 = (uint64_t)sub_100503E70(v26);
    swift_bridgeObjectRelease(v21);
  }

  else
  {
    uint64_t v22 = v21 & 0xFFFFFFFFFFFFFF8LL;
    swift_bridgeObjectRetain(v21);
  }

  uint64_t v33 = v22;
  sub_100504A54(&v33);
  if (v5) {
    goto LABEL_18;
  }
  swift_bridgeObjectRelease(v21);
  uint64_t v23 = v33;
  if (v33 < 0 || (v33 & 0x4000000000000000LL) != 0)
  {
    swift_bridgeObjectRetain(v33);
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_release(v23);
    if (v28) {
      goto LABEL_8;
    }
LABEL_14:
    swift_release(v23);
    uint64_t v29 = type metadata accessor for Date(0LL);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v12, 1LL, 1LL, v29);
    return sub_100427794((uint64_t)v12, v32, &qword_1009BC130);
  }

  if (!*(void *)(v33 + 16)) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v23 & 0xC000000000000001LL) != 0)
  {
    uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v23);
    goto LABEL_11;
  }

  if (*(void *)(v23 + 16))
  {
    uint64_t v24 = *(void *)(v23 + 32);
    swift_retain(v24);
LABEL_11:
    swift_release(v23);
    sub_100447148(v12);
    swift_release(v24);
    uint64_t v25 = type metadata accessor for Date(0LL);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v12, 0LL, 1LL, v25);
    return sub_100427794((uint64_t)v12, v32, &qword_1009BC130);
  }

  __break(1u);
LABEL_18:
  uint64_t result = swift_release(v33);
  __break(1u);
  return result;
}

uint64_t sub_1004F4D84(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v13, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))( (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a3,  v10);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = (v15 + 28) & ~v15;
  uint64_t v17 = swift_allocObject(&unk_1009081D8, v16 + v12, v15 | 7);
  *(void *)(v17 + 16) = a1;
  *(_DWORD *)(v17 + 24) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))( v17 + v16,  (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v10);
  uint64_t v18 = (void *)swift_allocObject(&unk_100908200, 40LL, 7LL);
  v18[2] = v5;
  v18[3] = a4;
  uint64_t v19 = v24;
  v18[4] = v24;
  uint64_t v20 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, id (*)(uint64_t), void *))((swift_isaMask & *v5) + 0xE0LL);
  unint64_t v21 = v5;
  sub_10050E38C(a4, v19);
  v20(sub_10050EFB4, v17, sub_10050F008, v18);
  swift_release(v17);
  return swift_release(v18);
}

uint64_t sub_1004F4EE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, a4, v7);
  uint64_t v14 = sub_10044A4D8(a2, a3, v12);
  uint64_t v15 = sub_10040A2B0( &qword_1009B9FE0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex,  (uint64_t)&unk_10071A5C0);
  dispatch thunk of ModelContext.insert<A>(_:)(v14, v13, v15);
  return swift_release(v14);
}

uint64_t sub_1004F4FD8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_allocObject(&unk_100908228, 40LL, 7LL);
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  uint64_t v12 = (void *)swift_allocObject(&unk_100908250, 40LL, 7LL);
  v12[2] = v5;
  v12[3] = a4;
  v12[4] = a5;
  swift_bridgeObjectRetain(a1);
  id v14 = a2;
  uint64_t v15 = v5;
  swift_retain(a5);
  v13(sub_10050F068, v11, sub_10050F3F0, v12);
  swift_release(v11);
  return swift_release(v12);
}

unint64_t sub_1004F50B8()
{
  uint64_t v1 = sub_1003F5CB4(&qword_1009BC2D8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  unint64_t v13 = sub_1004D9C3C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v12 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0LL);
  Predicate.init(_:)(sub_1004F5308, 0LL, 1LL, &v12);
  __n128 v10 = v6;
  uint64_t v11 = &v13;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v0) + 0xE8LL))( 0LL,  sub_10050F424,  v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  return v13;
}

uint64_t sub_1004F5308@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PredicateExpressions.ComparisonOperator(0LL);
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1003F5CB4(&qword_1009BC960);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  uint64_t v39 = v10;
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1003F5CB4(&qword_1009BC968);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_1003F5CB4(&qword_1009BC970);
  uint64_t v37 = *(void *)(v21 - 8);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = *a1;
  uint64_t v27 = sub_10047E23C( &qword_1009BC978,  &qword_1009BC968,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v26, v15, v27);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D998);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v20, KeyPath, v15, v27);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  uint64_t v40 = 0LL;
  static PredicateExpressions.build_Arg<A>(_:)(&v40, &type metadata for Int);
  uint64_t v30 = v35;
  uint64_t v29 = v36;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))( v8,  enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:),  v36);
  a2[3] = sub_1003F5CB4(&qword_1009BC980);
  a2[4] = sub_1005118C4();
  sub_10040B2A8(a2);
  uint64_t v31 = sub_10047E23C( &qword_1009BC9A8,  &qword_1009BC970,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v32 = sub_10047E23C( &qword_1009BC9B0,  &qword_1009BC960,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v33 = v38;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)( v25,  v14,  v8,  v21,  v38,  v31,  v32,  &protocol witness table for Int);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v25, v21);
}

uint64_t sub_1004F55B8(uint64_t a1, uint64_t a2, char ***a3)
{
  uint64_t v63 = a3;
  sub_1003F5CB4(&qword_1009BC910);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1003F5CB4(&qword_1009BC918);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1003F5CB4(&qword_1009BC2D8);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, a2, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0LL, 1LL, v15);
  uint64_t v17 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0LL);
  uint64_t v18 = sub_10040A2B0( (unint64_t *)&unk_1009BC920,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle,  (uint64_t)&unk_10071A6DC);
  FetchDescriptor.init(predicate:sortBy:)(v8, _swiftEmptyArrayStorage, v17, v18);
  uint64_t isUniquelyReferenced_nonNull_native = dispatch thunk of ModelContext.fetch<A>(_:)(v14, v17, v18);
  uint64_t v20 = v3;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  if (!v3)
  {
    if ((unint64_t)isUniquelyReferenced_nonNull_native >> 62)
    {
LABEL_35:
      if (isUniquelyReferenced_nonNull_native < 0) {
        uint64_t v60 = isUniquelyReferenced_nonNull_native;
      }
      else {
        uint64_t v60 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain_n(isUniquelyReferenced_nonNull_native, 2LL);
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v60);
      swift_bridgeObjectRelease(isUniquelyReferenced_nonNull_native);
      uint64_t v62 = v20;
      if (v22) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v22 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(isUniquelyReferenced_nonNull_native);
      uint64_t v62 = 0LL;
      if (v22)
      {
LABEL_4:
        unint64_t v67 = isUniquelyReferenced_nonNull_native & 0xC000000000000001LL;
        __n128 v23 = (char **)&_swiftEmptyDictionarySingleton;
        uint64_t v24 = 4LL;
        uint64_t v25 = &IMInsertBoolsToXPCDictionary_ptr;
        uint64_t v64 = isUniquelyReferenced_nonNull_native;
        uint64_t v66 = v22;
        while (1)
        {
          uint64_t v26 = v24 - 4;
          if (v67)
          {
            uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, isUniquelyReferenced_nonNull_native);
            uint64_t v28 = v24 - 3;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_32;
            }
          }

          else
          {
            uint64_t v27 = swift_retain(*(void *)(isUniquelyReferenced_nonNull_native + 8 * v24));
            uint64_t v28 = v24 - 3;
            if (__OFADD__(v26, 1LL))
            {
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
          }

          unint64_t v69 = v23;
          uint64_t v29 = v27;
          sub_10044ACD0();
          uint64_t v31 = v30;
          id v32 = objc_allocWithZone((Class)v25[416]);
          NSString v33 = String._bridgeToObjectiveC()();
          uint64_t v34 = v31;
          uint64_t v20 = &selRef_handleRegistrationSMSDeliveryFailed;
          swift_bridgeObjectRelease(v34);
          id v35 = [v32 initWithPrefixedURI:v33];

          if (!v35) {
            break;
          }
          uint64_t v68 = v28;
          sub_10044AA4C();
          uint64_t v37 = v36;
          id v38 = objc_allocWithZone((Class)v25[416]);
          NSString v39 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v37);
          uint64_t v20 = (char **)[v38 initWithPrefixedURI:v39];

          if (!v20)
          {
            swift_release(v29);

            uint64_t isUniquelyReferenced_nonNull_native = v64;
            uint64_t v25 = &IMInsertBoolsToXPCDictionary_ptr;
            uint64_t v28 = v68;
            goto LABEL_6;
          }

          uint64_t v65 = v29;
          id v40 = v35;
          uint64_t v41 = v20;
          uint64_t v20 = v69;
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v69);
          unint64_t v70 = v20;
          unint64_t v43 = sub_100433024((uint64_t)v40);
          uint64_t v44 = v20[2];
          BOOL v45 = (v42 & 1) == 0;
          uint64_t v46 = (uint64_t)&v44[v45];
          uint64_t v28 = v68;
          if (__OFADD__(v44, v45)) {
            goto LABEL_33;
          }
          char v47 = v42;
          if ((uint64_t)v20[3] >= v46)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1005098DC();
            }
          }

          else
          {
            sub_100509048(v46, isUniquelyReferenced_nonNull_native);
            uint64_t v48 = sub_10041D3C4(0LL, (unint64_t *)&unk_1009BC270, &OBJC_CLASS___IDSURI_ptr);
            unint64_t v49 = sub_100433024((uint64_t)v40);
            if ((v47 & 1) != (v50 & 1))
            {
              uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v48);
              __break(1u);
              return result;
            }

            unint64_t v43 = v49;
          }

          __n128 v23 = v70;
          swift_bridgeObjectRelease(0x8000000000000000LL);
          uint64_t isUniquelyReferenced_nonNull_native = v64;
          if ((v47 & 1) != 0)
          {
            swift_bridgeObjectRetain(v23);
          }

          else
          {
            v23[(v43 >> 6) + 8] = (char *)((unint64_t)v23[(v43 >> 6) + 8] | (1LL << v43));
            uint64_t v51 = 8 * v43;
            *(void *)&v23[6][v51] = v40;
            *(void *)&v23[7][v51] = _swiftEmptyArrayStorage;
            uint64_t v52 = v23[2];
            unint64_t v53 = v52 + 1;
            uint64_t v20 = (char **)__OFADD__(v52, 1LL);
            swift_bridgeObjectRetain(v23);
            v23[2] = v53;
            id v54 = v40;
          }

          uint64_t v55 = v23[7];
          uint64_t v56 = swift_bridgeObjectRelease(v23);
          uint64_t v20 = (char **)&v55[8 * v43];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
          unint64_t v58 = *(void *)(((unint64_t)*v20 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v57 = *(void *)(((unint64_t)*v20 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v58 >= v57 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1LL);
          }
          uint64_t v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v41);
          specialized Array._endMutation()(v59);
          swift_release(v65);

          uint64_t v25 = &IMInsertBoolsToXPCDictionary_ptr;
LABEL_7:
          ++v24;
          if (v28 == v66) {
            goto LABEL_40;
          }
        }

        swift_release(v29);
LABEL_6:
        __n128 v23 = v69;
        goto LABEL_7;
      }
    }

    __n128 v23 = (char **)&_swiftEmptyDictionarySingleton;
LABEL_40:
    swift_bridgeObjectRelease_n(isUniquelyReferenced_nonNull_native, 2LL);
    uint64_t v61 = *v63;
    *uint64_t v63 = v23;
    return swift_bridgeObjectRelease(v61);
  }

  return result;
}

uint64_t sub_1004F5AAC()
{
  __n128 v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  uint64_t v5 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v3, 1LL, 1LL, v5);
  uint64_t v6 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v4, v3, 1LL, v4, v6);
  return sub_10040A274((uint64_t)v3, (uint64_t *)&unk_1009BC5A0);
}

id sub_1004F5BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v34 = *(void *)(v12 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v32 = *(void *)(v17 - 8);
  uint64_t v33 = v17;
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id result = (id)im_primary_queue(v20, v23);
  if (result)
  {
    uint64_t v25 = result;
    uint64_t v26 = (void *)swift_allocObject(a4, 40LL, 7LL);
    v26[2] = a1;
    v26[3] = a2;
    v26[4] = a3;
    aBlock[4] = a5;
    uint64_t v37 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1003F8400;
    aBlock[3] = a6;
    uint64_t v27 = _Block_copy(aBlock);
    swift_errorRetain(a1);
    uint64_t v28 = swift_retain(a3);
    static DispatchQoS.unspecified.getter(v28);
    id v35 = _swiftEmptyArrayStorage;
    uint64_t v29 = sub_10040A2B0( (unint64_t *)&unk_1009BAC40,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v30 = sub_1003F5CB4((uint64_t *)&unk_1009B9870);
    uint64_t v31 = sub_10047E23C( (unint64_t *)&qword_1009BAC50,  (uint64_t *)&unk_1009B9870,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v30, v31, v12, v29);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v22, v16, v27);
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v12);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
    return (id)swift_release(v37);
  }

  else
  {
    __break(1u);
  }

  return result;
}

void *sub_1004F5E7C()
{
  __n128 v3 = _swiftEmptyArrayStorage;
  v2[2] = &v3;
  (*(void (**)(void, void (*)(uint64_t), void *))((swift_isaMask & *v0) + 0xE8LL))( 0LL,  sub_10050F490,  v2);
  return v3;
}

void sub_1004F6044(uint64_t a1, void *a2)
{
  uint64_t v76 = a1;
  type metadata accessor for Date(0LL);
  __chkstk_darwin(v3, v4);
  uint64_t v74 = (void *)((char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (void *)((char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_1003F5CB4(&qword_1009BC940);
  __chkstk_darwin(v10, v11);
  uint64_t v72 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for IDSRegistrationEventStruct(0LL);
  uint64_t v70 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  __chkstk_darwin(v14, v15);
  uint64_t v73 = (uint64_t)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)v64 - v19;
  sub_1003F5CB4(&qword_1009BC530);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_1003F5CB4((uint64_t *)&unk_1009BC948);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_1003F5CB4(&qword_1009BC538);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v24, 1LL, 1LL, v31);
  uint64_t v32 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0LL);
  uint64_t v33 = sub_10040A2B0( &qword_1009BC540,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent,  (uint64_t)&unk_10071A7F8);
  FetchDescriptor.init(predicate:sortBy:)(v24, _swiftEmptyArrayStorage, v32, v33);
  uint64_t v34 = v77;
  uint64_t v35 = dispatch thunk of ModelContext.fetch<A>(_:)(v30, v32, v33);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v25);
  if (!v34)
  {
    v64[1] = 0LL;
    uint64_t v65 = v20;
    if ((unint64_t)v35 >> 62)
    {
      if (v35 < 0) {
        uint64_t v61 = v35;
      }
      else {
        uint64_t v61 = v35 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v35);
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter(v61);
      uint64_t v37 = v74;
      if (v36) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(v35);
      uint64_t v37 = v74;
      if (v36)
      {
LABEL_4:
        if (v36 < 1)
        {
          __break(1u);
          return;
        }

        uint64_t v38 = 0LL;
        unint64_t v67 = v35 & 0xC000000000000001LL;
        uint64_t v75 = _swiftEmptyArrayStorage;
        uint64_t v68 = v35;
        unint64_t v69 = a2;
        uint64_t v66 = v36;
        do
        {
          if (v67)
          {
            uint64_t v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v35);
          }

          else
          {
            uint64_t v40 = *(void *)(v35 + 8 * v38 + 32);
            swift_retain(v40);
          }

          uint64_t v77 = sub_10044B984();
          uint64_t v76 = v41;
          sub_10044BC08(v9);
          sub_10044BEFC(v37);
          uint64_t v42 = sub_10044C28C();
          uint64_t v43 = sub_10044C570();
          uint64_t v44 = sub_10044C854();
          uint64_t v46 = v45;
          uint64_t v47 = sub_10044CB10();
          uint64_t v49 = v48;
          uint64_t v50 = sub_10044B6A0();
          uint64_t v63 = v47;
          uint64_t v37 = v74;
          uint64_t v51 = v42;
          uint64_t v52 = v72;
          sub_1004D54A8(v77, v76, (uint64_t)v9, (uint64_t)v74, v51, v43, v44, v46, v72, v63, v49, v50);
          uint64_t v54 = v70;
          uint64_t v53 = v71;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v52, 0LL, 1LL, v71);
          swift_release(v40);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1LL, v53) == 1)
          {
            sub_10040A274((uint64_t)v52, &qword_1009BC940);
            a2 = v69;
            uint64_t v39 = v66;
          }

          else
          {
            uint64_t v55 = (uint64_t)v65;
            sub_1003F600C((uint64_t)v52, (uint64_t)v65, type metadata accessor for IDSRegistrationEventStruct);
            sub_1003F600C(v55, v73, type metadata accessor for IDSRegistrationEventStruct);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v75);
            a2 = v69;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              uint64_t v75 = (void *)sub_100503C28( 0,  v75[2] + 1LL,  1,  (unint64_t)v75,  (uint64_t *)&unk_1009BC260,  type metadata accessor for IDSRegistrationEventStruct);
            }
            uint64_t v39 = v66;
            unint64_t v58 = v75[2];
            unint64_t v57 = v75[3];
            uint64_t v59 = v73;
            if (v58 >= v57 >> 1)
            {
              uint64_t v75 = (void *)sub_100503C28( v57 > 1,  v58 + 1,  1,  (unint64_t)v75,  (uint64_t *)&unk_1009BC260,  type metadata accessor for IDSRegistrationEventStruct);
              uint64_t v59 = v73;
            }

            uint64_t v60 = v75;
            v75[2] = v58 + 1;
            sub_1003F600C( v59,  (uint64_t)v60 + ((*(unsigned __int8 *)(v54 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))
            + *(void *)(v54 + 72) * v58,
              type metadata accessor for IDSRegistrationEventStruct);
          }

          ++v38;
          uint64_t v35 = v68;
        }

        while (v39 != v38);
        goto LABEL_22;
      }
    }

    uint64_t v75 = _swiftEmptyArrayStorage;
LABEL_22:
    swift_bridgeObjectRelease_n(v35, 2LL);
    uint64_t v62 = *a2;
    *a2 = v75;
    swift_bridgeObjectRelease(v62);
  }

unint64_t sub_1004F656C(uint64_t a1)
{
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v66 = 0xD00000000000002ELL;
  unint64_t v67 = 0x80000001008436B0LL;
  uint64_t v65 = (uint64_t)_swiftEmptyArrayStorage;
  if (a1)
  {
    uint64_t v53 = 0LL;
    swift_bridgeObjectRetain(a1);
    uint64_t v9 = v1;
    uint64_t v11 = sub_100438A1C( v10,  (unint64_t *)&unk_1009BC270,  &OBJC_CLASS___IDSURI_ptr,  (unint64_t *)&unk_1009BAC00,  &qword_1009B9D90);
    swift_bridgeObjectRelease(a1);
    uint64_t v12 = sub_100504048( v11,  (unint64_t *)&unk_1009BC270,  &OBJC_CLASS___IDSURI_ptr,  (unint64_t *)&unk_1009BAC00);
    swift_bridgeObjectRelease(v11);
    uint64_t v65 = (uint64_t)v12;
  }

  else
  {
    __chkstk_darwin(v5, v6);
    *(&v52 - 2) = (uint64_t)v1;
    *(&v52 - 1) = (uint64_t)&v65;
    uint64_t v9 = v1;
    (*(void (**)(void, void (*)(uint64_t)))((swift_isaMask & *v1) + 0xE8LL))(0LL, sub_10050F4A8);
    uint64_t v53 = 0LL;
  }

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(IDSServiceNameiMessage);
  uint64_t v15 = v14;
  uint64_t v16 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v9) + 0xD0LL);
  uint64_t v61 = v9;
  uint64_t v17 = v16(v13);
  swift_bridgeObjectRelease(v15);
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (v18)
  {
    unint64_t v19 = 0LL;
    uint64_t v57 = v17;
    unint64_t v58 = v17 & 0xC000000000000001LL;
    uint64_t v54 = v17 + 32;
    uint64_t v55 = v17 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v60 = (void *)0x80000001008436E0LL;
    uint64_t v56 = v18;
    while (1)
    {
      if (v58)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
      }

      else
      {
        if (v19 >= *(void *)(v55 + 16)) {
          goto LABEL_34;
        }
        id v20 = *(id *)(v54 + 8 * v19);
      }

      __n128 v21 = v20;
      BOOL v22 = __OFADD__(v19, 1LL);
      unint64_t v23 = v19 + 1;
      if (v22) {
        break;
      }
      uint64_t v24 = v65;
      if ((unint64_t)v65 >> 62)
      {
        if (v65 < 0) {
          uint64_t v48 = v65;
        }
        else {
          uint64_t v48 = v65 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain_n(v65, 2LL);
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease(v24);
        unint64_t v59 = v23;
        if (!v17) {
          goto LABEL_7;
        }
      }

      else
      {
        uint64_t v17 = *(void *)((v65 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        swift_bridgeObjectRetain(v65);
        unint64_t v59 = v23;
        if (!v17) {
          goto LABEL_7;
        }
      }

      if (v17 < 1) {
        goto LABEL_33;
      }
      uint64_t v25 = 0LL;
      unint64_t v62 = v24 & 0xC000000000000001LL;
      uint64_t v63 = v17;
      uint64_t v26 = v24;
      do
      {
        if (v62) {
          id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v24);
        }
        else {
          id v27 = *(id *)(v24 + 8 * v25 + 32);
        }
        __n128 v28 = v27;
        ++v25;
        sub_1004ED8A4(v21, v27, (uint64_t)v8);
        uint64_t v29 = type metadata accessor for SenderKeyAndState(0LL);
        int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48LL))(v8, 1LL, v29);
        sub_10040A274((uint64_t)v8, (uint64_t *)&unk_1009BAC60);
        v64._countAndFlagsBits = 0LL;
        v64._object = (void *)0xE000000000000000LL;
        _StringGuts.grow(_:)(39LL);
        swift_bridgeObjectRelease(v64._object);
        v64._countAndFlagsBits = 0x203A4D4F5246LL;
        v64._object = (void *)0xE600000000000000LL;
        id v31 = [v21 prefixedURI];
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        uint64_t v34 = v33;

        v35._countAndFlagsBits = v32;
        v35._object = v34;
        String.append(_:)(v35);
        swift_bridgeObjectRelease(v34);
        v36._countAndFlagsBits = 0x203A4F5420LL;
        v36._object = (void *)0xE500000000000000LL;
        String.append(_:)(v36);
        id v37 = [v28 prefixedURI];
        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        uint64_t v40 = v39;

        v41._countAndFlagsBits = v38;
        v41._object = v40;
        String.append(_:)(v41);
        swift_bridgeObjectRelease(v40);
        v42._countAndFlagsBits = 0xD000000000000015LL;
        v42._object = v60;
        String.append(_:)(v42);
        if (v30 == 1) {
          uint64_t v43 = 20302LL;
        }
        else {
          uint64_t v43 = 5457241LL;
        }
        if (v30 == 1) {
          unint64_t v44 = 0xE200000000000000LL;
        }
        else {
          unint64_t v44 = 0xE300000000000000LL;
        }
        unint64_t v45 = v44;
        String.append(_:)(*(Swift::String *)&v43);
        swift_bridgeObjectRelease(v44);
        v46._countAndFlagsBits = 10LL;
        v46._object = (void *)0xE100000000000000LL;
        String.append(_:)(v46);
        object = v64._object;
        String.append(_:)(v64);

        swift_bridgeObjectRelease(object);
        uint64_t v24 = v26;
      }

      while (v63 != v25);
LABEL_7:

      swift_bridgeObjectRelease(v24);
      uint64_t v17 = v57;
      unint64_t v19 = v59;
      if (v59 == v56) {
        goto LABEL_39;
      }
    }

    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    if (v17 < 0) {
      uint64_t v49 = v17;
    }
    else {
      uint64_t v49 = v17 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v17);
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v17);
  }

char *sub_1004F6A4C(uint64_t a1, __n128 a2, __n128 a3)
{
  __n128 v4 = v3;
  v26[0] = 0xD000000000000029LL;
  v26[1] = 0x8000000100843700LL;
  if (!a1)
  {
    uint64_t v19 = 0LL;
    goto LABEL_16;
  }

  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0) {
      uint64_t v20 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v20 = a1;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v6)
  {
LABEL_14:
    uint64_t v19 = sub_100438988((uint64_t)v7);
    swift_bridgeObjectRelease(v7);
LABEL_16:
    __chkstk_darwin(a2, a3);
    __n128 v21 = v4;
    uint64_t v22 = v19;
    unint64_t v23 = v26;
    (*(void (**)(void, uint64_t (*)(uint64_t)))((swift_isaMask & *v4) + 0xE8LL))( 0LL,  sub_10050F6FC);
    swift_bridgeObjectRelease(v19);
    return (char *)v26[0];
  }

  uint64_t v25 = _swiftEmptyArrayStorage;
  id result = sub_100411D38(0LL, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000LL) == 0)
  {
    uint64_t v24 = v4;
    uint64_t v9 = 0LL;
    uint64_t v7 = v25;
    do
    {
      if ((a1 & 0xC000000000000001LL) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v12 = [v10 prefixedURI];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      uint64_t v15 = v14;

      uint64_t v25 = v7;
      unint64_t v17 = v7[2];
      unint64_t v16 = v7[3];
      if (v17 >= v16 >> 1)
      {
        sub_100411D38((char *)(v16 > 1), v17 + 1, 1);
        uint64_t v7 = v25;
      }

      ++v9;
      v7[2] = v17 + 1;
      uint64_t v18 = &v7[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
    }

    while (v6 != v9);
    __n128 v4 = v24;
    goto LABEL_14;
  }

  __break(1u);
  return result;
}

uint64_t sub_1004F6C54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v202 = a4;
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v6, v7);
  BOOL v195 = (uint64_t *)((char *)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v9, v10);
  uint64_t v192 = (uint64_t *)((char *)&v174 - v11);
  __chkstk_darwin(v12, v13);
  uint64_t object = (uint64_t)&v174 - v14;
  __chkstk_darwin(v16, v17);
  v188 = (uint64_t *)((char *)&v174 - v18);
  uint64_t v19 = type metadata accessor for Date(0LL);
  uint64_t v200 = *(void *)(v19 - 8);
  uint64_t v201 = v19;
  __chkstk_darwin(v20, v21);
  Swift::String v186 = (char *)&v174 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23, v24);
  uint64_t v185 = (char *)&v174 - v25;
  __chkstk_darwin(v26, v27);
  BOOL v182 = (char *)&v174 - v28;
  __chkstk_darwin(v29, v30);
  v183 = (char *)&v174 - v31;
  __chkstk_darwin(v32, v33);
  Swift::String v35 = (char *)&v174 - v34;
  uint64_t v36 = (uint64_t)sub_1004F0674(a1, (uint64_t)sub_10050E2A4);
  uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_3:
  uint64_t v187 = (void *)object;
  if (!v37)
  {
    uint64_t v177 = 0LL;
    uint64_t v178 = &_swiftEmptyDictionarySingleton;
LABEL_28:
    swift_bridgeObjectRelease(v36);
    int64_t v72 = 0LL;
    uint64_t v73 = v178;
    uint64_t v74 = v178[8];
    Swift::String v175 = (char *)(v178 + 8);
    uint64_t v75 = 1LL << *((_BYTE *)v178 + 32);
    uint64_t v76 = -1LL;
    if (v75 < 64) {
      uint64_t v76 = ~(-1LL << v75);
    }
    unint64_t v77 = v76 & v74;
    int64_t v176 = (unint64_t)(v75 + 63) >> 6;
    v193 = (void *)0x80000001008439E0LL;
    os_log_type_t v194 = (void *)0x80000001008439C0LL;
    uint64_t v190 = (void *)0x8000000100843A20LL;
    uint64_t v191 = (void *)0x8000000100843A00LL;
    os_log_type_t v181 = (void *)0x8000000100843A80LL;
    uint64_t v189 = (void *)0x8000000100843A40LL;
    uint64_t v184 = (void *)0x8000000100843A60LL;
    while (1)
    {
      if (v77)
      {
        uint64_t v179 = (v77 - 1) & v77;
        int64_t v180 = v72;
        unint64_t v78 = __clz(__rbit64(v77)) | (v72 << 6);
      }

      else
      {
        int64_t v79 = v72 + 1;
        if (__OFADD__(v72, 1LL)) {
          goto LABEL_102;
        }
        if (v79 >= v176)
        {
LABEL_99:
          swift_release(v73);
          return sub_100482178((uint64_t)v177, 0LL);
        }

        unint64_t v80 = *(void *)&v175[8 * v79];
        int64_t v81 = v72 + 1;
        if (!v80)
        {
          int64_t v81 = v72 + 2;
          if (v72 + 2 >= v176) {
            goto LABEL_99;
          }
          unint64_t v80 = *(void *)&v175[8 * v81];
          if (!v80)
          {
            int64_t v81 = v72 + 3;
            if (v72 + 3 >= v176) {
              goto LABEL_99;
            }
            unint64_t v80 = *(void *)&v175[8 * v81];
            if (!v80)
            {
              uint64_t v82 = v72 + 4;
              if (v72 + 4 >= v176) {
                goto LABEL_99;
              }
              unint64_t v80 = *(void *)&v175[8 * v82];
              if (!v80)
              {
                while (1)
                {
                  int64_t v81 = v82 + 1;
                  if (__OFADD__(v82, 1LL)) {
                    break;
                  }
                  if (v81 >= v176) {
                    goto LABEL_99;
                  }
                  unint64_t v80 = *(void *)&v175[8 * v81];
                  ++v82;
                  if (v80) {
                    goto LABEL_47;
                  }
                }

uint64_t sub_1004F7CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(void *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1LL << *(_BYTE *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v8) & 1) != 0)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      uint64_t v12 = v11[1];
      BOOL v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0LL) & 1) != 0) {
        return 1LL;
      }
      uint64_t v15 = ~v7;
      unint64_t v16 = (v8 + 1) & v15;
      if (((*(void *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) != 0)
      {
        while (1)
        {
          __n128 v17 = (void *)(v10 + 16 * v16);
          uint64_t v18 = v17[1];
          BOOL v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0LL) & 1) != 0) {
            break;
          }
          uint64_t result = 0LL;
          unint64_t v16 = (v16 + 1) & v15;
          if (((*(void *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v16) & 1) == 0) {
            return result;
          }
        }

        return 1LL;
      }
    }
  }

  return 0LL;
}

void sub_1004F7E08(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

uint64_t sub_1004F7E18()
{
  v3[0] = 0LL;
  v3[1] = 0xE000000000000000LL;
  v2[2] = v3;
  (*(void (**)(void, uint64_t (*)(), void *))((swift_isaMask & *v0) + 0xE8LL))(0LL, sub_10050F728, v2);
  return v3[0];
}

uint64_t sub_1004F7FDC()
{
  __n128 v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1003F5CB4(&qword_1009BC918);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1003F5CB4(&qword_1009BC2D8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v4, 1LL, 1LL, v11);
  uint64_t v12 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0LL);
  uint64_t v13 = sub_10040A2B0( (unint64_t *)&unk_1009BC920,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle,  (uint64_t)&unk_10071A6DC);
  FetchDescriptor.init(predicate:sortBy:)(v4, _swiftEmptyArrayStorage, v12, v13);
  uint64_t v14 = dispatch thunk of ModelContext.fetch<A>(_:)(v10, v12, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  if (!v0)
  {
    v33[1] = 0LL;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0) {
        uint64_t v32 = v14;
      }
      else {
        uint64_t v32 = v14 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v14);
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter(v32);
      uint64_t result = swift_bridgeObjectRelease(v14);
      if (v16) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v16)
      {
LABEL_4:
        if (v16 < 1)
        {
          __break(1u);
          return result;
        }

        uint64_t v17 = 0LL;
        do
        {
          if ((v14 & 0xC000000000000001LL) != 0)
          {
            uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v14);
          }

          else
          {
            uint64_t v18 = *(void *)(v14 + 8 * v17 + 32);
            swift_retain(v18);
          }

          ++v17;
          v19._uint64_t countAndFlagsBits = 0xD000000000000026LL;
          v19._uint64_t object = (void *)0x8000000100843990LL;
          String.append(_:)(v19);
          v34._uint64_t countAndFlagsBits = 0x203A495255LL;
          v34._uint64_t object = (void *)0xE500000000000000LL;
          v20._uint64_t countAndFlagsBits = sub_10044AA4C();
          uint64_t object = v20._object;
          String.append(_:)(v20);
          swift_bridgeObjectRelease(object);
          v22._uint64_t countAndFlagsBits = 10LL;
          v22._uint64_t object = (void *)0xE100000000000000LL;
          String.append(_:)(v22);
          __n128 v23 = v34._object;
          String.append(_:)(v34);
          swift_bridgeObjectRelease(v23);
          v34._uint64_t countAndFlagsBits = 0x3A4952556D6F7266LL;
          v34._uint64_t object = (void *)0xE900000000000020LL;
          v24._uint64_t countAndFlagsBits = sub_10044ACD0();
          uint64_t v25 = v24._object;
          String.append(_:)(v24);
          swift_bridgeObjectRelease(v25);
          v26._uint64_t countAndFlagsBits = 10LL;
          v26._uint64_t object = (void *)0xE100000000000000LL;
          String.append(_:)(v26);
          __n128 v27 = v34._object;
          String.append(_:)(v34);
          swift_bridgeObjectRelease(v27);
          v34._uint64_t countAndFlagsBits = 0x797469726F697270LL;
          v34._uint64_t object = (void *)0xEA0000000000203ALL;
          uint64_t v35 = sub_10044AF54();
          v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
          __n128 v29 = v28._object;
          String.append(_:)(v28);
          swift_bridgeObjectRelease(v29);
          v30._uint64_t countAndFlagsBits = 10LL;
          v30._uint64_t object = (void *)0xE100000000000000LL;
          String.append(_:)(v30);
          uint64_t v31 = v34._object;
          String.append(_:)(v34);
          swift_release(v18);
          swift_bridgeObjectRelease(v31);
        }

        while (v16 != v17);
      }
    }

    return swift_bridgeObjectRelease(v14);
  }

  return result;
}

uint64_t sub_1004F8340(uint64_t a1)
{
  __n128 v2 = v1;
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Called to perform DB cleanup tasks", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  [v2 cleanupExpiredSessionsIfNeededWithCompletion:0];
  [v2 cleanupShortHandlesWithExpireDuration:0 completion:sub_10050F890()];
  uint64_t v6 = (void *)swift_allocObject(&unk_100908278, 40LL, 7LL);
  v6[3] = 0LL;
  v6[4] = 0LL;
  v6[2] = v2;
  __n128 v8 = v2;
  v7(sub_1004F8FC4, 0LL, sub_10050F9E4, v6);
  return swift_release(v6);
}

uint64_t sub_1004F849C(uint64_t a1)
{
  Swift::String v100 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1003F5CB4(&qword_1009BC828);
  __chkstk_darwin(v5, v6);
  uint64_t v94 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v87 - v10;
  uint64_t v12 = sub_1003F5CB4((uint64_t *)&unk_1009BC830);
  uint64_t v97 = *(void *)(v12 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Date(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v98 = v17;
  uint64_t v99 = v18;
  uint64_t v21 = __chkstk_darwin(v19, v20);
  __n128 v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static Date.now.getter(v21);
  uint64_t v104 = v23;
  uint64_t v24 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0LL);
  uint64_t v106 = v24;
  Predicate.init(_:)(sub_100511734, v103, 1LL, &v106);
  uint64_t v25 = sub_1003F5CB4(&qword_1009BC288);
  Swift::String v95 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL);
  v95(v11, 0LL, 1LL, v25);
  uint64_t v26 = sub_10040A2B0( &qword_1009B9F70,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession,  (uint64_t)&unk_10071A150);
  FetchDescriptor.init(predicate:sortBy:)(v11, _swiftEmptyArrayStorage, v24, v26);
  uint64_t v27 = sub_1003F5CB4((uint64_t *)&unk_1009BABF0);
  uint64_t v28 = swift_allocObject(v27, 48LL, 7LL);
  *(_OWORD *)(v28 + 16) = xmmword_10071D590;
  *(void *)(v28 + 32) = swift_getKeyPath(&unk_10071D8D0);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D8F8);
  *(void *)(v28 + 40) = KeyPath;
  unint64_t v105 = (void *)v28;
  Swift::String v30 = v16;
  specialized Array._endMutation()(KeyPath);
  FetchDescriptor.propertiesToFetch.setter(v105, v12);
  unint64_t v31 = v102;
  uint64_t v32 = dispatch thunk of ModelContext.fetch<A>(_:)(v16, v24, v26);
  unint64_t v33 = v31;
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v97 + 8))(v30, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v23, v98);
  }

  uint64_t v90 = v12;
  uint64_t v91 = v26;
  uint64_t v92 = v25;
  uint64_t v93 = v24;
  unint64_t v102 = v32;
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0) {
      uint64_t v85 = v32;
    }
    else {
      uint64_t v85 = v32 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v32);
    uint64_t v86 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(v102);
    uint64_t v35 = v86;
    uint64_t v32 = v102;
  }

  else
  {
    uint64_t v35 = *(void *)((v32 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v37 = v92;
  uint64_t v36 = v93;
  uint64_t v38 = (void (*)(uint64_t, void, uint64_t, uint64_t))v95;
  uint64_t v39 = a1;
  uint64_t v40 = v23;
  if (v35)
  {
    unint64_t v105 = _swiftEmptyArrayStorage;
    uint64_t v101 = v35;
    uint64_t result = sub_1005041A0(0, v35 & ~(v35 >> 63), 0);
    if (v101 < 0)
    {
      __break(1u);
      return result;
    }

    unint64_t v87 = 0LL;
    uint64_t v88 = v30;
    uint64_t v89 = v23;
    uint64_t v96 = a1;
    uint64_t v41 = v105;
    unint64_t v42 = v102;
    if ((v102 & 0xC000000000000001LL) != 0)
    {
      uint64_t v43 = 0LL;
      do
      {
        uint64_t v44 = specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v42);
        uint64_t v45 = sub_100442AF0();
        uint64_t v47 = v46;
        uint64_t v48 = sub_100442FF8();
        uint64_t v50 = v49;
        swift_unknownObjectRelease(v44, v49);
        unint64_t v105 = v41;
        unint64_t v52 = v41[2];
        unint64_t v51 = v41[3];
        if (v52 >= v51 >> 1)
        {
          sub_1005041A0(v51 > 1, v52 + 1, 1);
          uint64_t v41 = v105;
        }

        ++v43;
        v41[2] = v52 + 1;
        Swift::String v53 = &v41[4 * v52];
        v53[4] = v45;
        v53[5] = v47;
        v53[6] = v48;
        v53[7] = v50;
        unint64_t v42 = v102;
      }

      while (v101 != v43);
    }

    else
    {
      uint64_t v57 = 0LL;
      do
      {
        uint64_t v58 = *(void *)(v42 + 8 * v57 + 32);
        swift_retain(v58);
        uint64_t v59 = sub_100442AF0();
        uint64_t v61 = v60;
        uint64_t v62 = sub_100442FF8();
        uint64_t v64 = v63;
        swift_release(v58);
        unint64_t v105 = v41;
        unint64_t v66 = v41[2];
        unint64_t v65 = v41[3];
        if (v66 >= v65 >> 1)
        {
          sub_1005041A0(v65 > 1, v66 + 1, 1);
          uint64_t v41 = v105;
        }

        ++v57;
        v41[2] = v66 + 1;
        char v67 = &v41[4 * v66];
        v67[4] = v59;
        v67[5] = v61;
        v67[6] = v62;
        v67[7] = v64;
        unint64_t v42 = v102;
      }

      while (v101 != v57);
    }

    swift_bridgeObjectRelease(v42);
    uint64_t v38 = (void (*)(uint64_t, void, uint64_t, uint64_t))v95;
    uint64_t v39 = v96;
    Swift::String v30 = v88;
    uint64_t v40 = v89;
    unint64_t v33 = v87;
    uint64_t v36 = v93;
    uint64_t v56 = (uint64_t)v94;
    uint64_t v37 = v92;
  }

  else
  {
    swift_bridgeObjectRelease(v32);
    uint64_t v41 = _swiftEmptyArrayStorage;
    uint64_t v56 = (uint64_t)v94;
  }

  unint64_t v102 = (unint64_t)&v87;
  __chkstk_darwin(v54, v55);
  *(&v87 - 2) = (unint64_t)v40;
  Predicate.init(_:)(sub_100513B20, &v87 - 4, 1LL, &v106);
  v38(v56, 0LL, 1LL, v37);
  dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v36, v56, 1LL, v36, v91);
  if (v33)
  {
    swift_bridgeObjectRelease(v41);
    sub_10040A274(v56, &qword_1009BC828);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v30, v90);
    return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v40, v98);
  }

  else
  {
    sub_10040A274(v56, &qword_1009BC828);
    uint64_t v68 = v41[2];
    uint64_t v69 = v99;
    if (v68)
    {
      uint64_t v88 = v30;
      uint64_t v89 = v40;
      uint64_t v96 = v39;
      uint64_t v70 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0LL);
      uint64_t v73 = v41 + 7;
      uint64_t v74 = v68 - 1;
      uint64_t v75 = (uint64_t)v100;
      while (1)
      {
        uint64_t v76 = *v73;
        uint64_t v77 = *(v73 - 2);
        __chkstk_darwin(v71, v72);
        *(&v87 - 4) = v78;
        *(&v87 - 3) = v77;
        *(&v87 - 2) = v79;
        *(&v87 - 1) = v76;
        swift_bridgeObjectRetain(v77);
        swift_bridgeObjectRetain(v76);
        unint64_t v105 = (void *)v70;
        Predicate.init(_:)(sub_100513C1C, &v87 - 6, 1LL, &v105);
        swift_bridgeObjectRelease(v76);
        swift_bridgeObjectRelease(v77);
        uint64_t v80 = sub_1003F5CB4(&qword_1009BC280);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56LL))(v75, 0LL, 1LL, v80);
        uint64_t v81 = sub_10040A2B0( &qword_1009BC840,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable,  (uint64_t)&unk_100719F18);
        dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v70, v75, 1LL, v70, v81);
        sub_10040A274(v75, &qword_1009BC820);
        if (!v74) {
          break;
        }
        v73 += 4;
        --v74;
      }

      swift_bridgeObjectRelease(v41);
      uint64_t v83 = v98;
      uint64_t v69 = v99;
      uint64_t v40 = v89;
      uint64_t v84 = v90;
      uint64_t v82 = v97;
      Swift::String v30 = v88;
    }

    else
    {
      swift_bridgeObjectRelease(v41);
      uint64_t v82 = v97;
      uint64_t v83 = v98;
      uint64_t v84 = v90;
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v30, v84);
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v40, v83);
  }

uint64_t sub_1004F8BF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v5 = type metadata accessor for PredicateExpressions.ComparisonOperator(0LL);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v6, v7);
  __n128 v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1003F5CB4(&qword_1009BC548);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1003F5CB4(&qword_1009BC8A0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1003F5CB4(&qword_1009BC8A8);
  uint64_t v41 = *(void *)(v22 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = *a1;
  uint64_t v28 = sub_10047E23C( &qword_1009BC8B0,  &qword_1009BC8A0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v27, v16, v28);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D970);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, KeyPath, v16, v28);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  uint64_t v30 = type metadata accessor for Date(0LL);
  static PredicateExpressions.build_Arg<A>(_:)(v40, v30);
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))( v9,  enum case for PredicateExpressions.ComparisonOperator.lessThan(_:),  v39);
  a3[3] = sub_1003F5CB4(&qword_1009BC8B8);
  a3[4] = sub_1005117F8();
  sub_10040B2A8(a3);
  uint64_t v33 = sub_10047E23C( &qword_1009BC8D8,  &qword_1009BC8A8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v34 = sub_10047E23C( &qword_1009BC598,  &qword_1009BC548,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v35 = sub_10040A2B0( (unint64_t *)&unk_1009BC4A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t v36 = v42;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v26, v15, v9, v22, v42, v33, v34, v35);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v26, v22);
}

uint64_t sub_1004F8FC4()
{
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1003F5CB4(&qword_1009BC8F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1003F5CB4(&qword_1009BC290);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v4, 1LL, 1LL, v11);
  uint64_t v12 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0LL);
  uint64_t v13 = sub_10040A2B0( (unint64_t *)&unk_1009BC900,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice,  (uint64_t)&unk_10071A034);
  FetchDescriptor.init(predicate:sortBy:)(v4, _swiftEmptyArrayStorage, v12, v13);
  uint64_t v14 = dispatch thunk of ModelContext.fetch<A>(_:)(v10, v12, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  if (!v0)
  {
    unint64_t v40 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0) {
        uint64_t v32 = v14;
      }
      else {
        uint64_t v32 = v14 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v14);
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter(v32);
      uint64_t result = swift_bridgeObjectRelease(v14);
      uint64_t v39 = 0LL;
      if (!v16) {
        goto LABEL_32;
      }
    }

    else
    {
      uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t v39 = 0LL;
      if (!v16) {
        goto LABEL_32;
      }
    }

    if (v16 < 1)
    {
      __break(1u);
      goto LABEL_45;
    }

    if ((v14 & 0xC000000000000001LL) != 0)
    {
      for (uint64_t i = 0LL; i != v16; ++i)
      {
        uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
        uint64_t v21 = sub_1004418E0();
        if (!v21) {
          goto LABEL_7;
        }
        uint64_t v22 = v21;
        if ((unint64_t)v21 >> 62)
        {
          if (v21 >= 0) {
            v21 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v21);
        }

        else
        {
          uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        }

        uint64_t v21 = swift_bridgeObjectRelease(v22);
        if (v23)
        {
          swift_unknownObjectRelease(v20, v24);
        }

        else
        {
LABEL_7:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
          uint64_t v18 = *(void *)(v40 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
          uint64_t v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v20);
          specialized ContiguousArray._endMutation()(v19);
        }
      }
    }

    else
    {
      for (uint64_t j = 0LL; j != v16; ++j)
      {
        uint64_t v28 = *(void *)(v14 + 8 * j + 32);
        swift_retain(v28);
        uint64_t v29 = sub_1004418E0();
        if (!v29) {
          goto LABEL_18;
        }
        uint64_t v30 = v29;
        if ((unint64_t)v29 >> 62)
        {
          if (v29 >= 0) {
            v29 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          uint64_t v31 = _CocoaArrayWrapper.endIndex.getter(v29);
        }

        else
        {
          uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        }

        uint64_t v29 = swift_bridgeObjectRelease(v30);
        if (v31)
        {
          swift_release(v28);
        }

        else
        {
LABEL_18:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v29);
          uint64_t v26 = *(void *)(v40 + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
          uint64_t v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v28);
          specialized ContiguousArray._endMutation()(v27);
        }
      }
    }

uint64_t sub_1004F9368(uint64_t a1, double a2)
{
  uint64_t v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (uint64_t *)((char *)&v37 - v9);
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v37 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v37 = a1;
  uint64_t v25 = (uint64_t)sub_1004F0674(a1, (uint64_t)sub_10050D570);
  Date.init()(v25);
  uint64_t v39 = v24;
  unint64_t v40 = v20;
  uint64_t result = static Date.- infix(_:_:)(v24, a2);
  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0) {
      uint64_t v35 = v25;
    }
    else {
      uint64_t v35 = v25 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v25);
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v35);
    uint64_t result = swift_bridgeObjectRelease(v25);
    if (v27) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease(v25);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v12 + 8);
    v36(v40, v11);
    return ((uint64_t (*)(char *, uint64_t))v36)(v39, v11);
  }

  uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v27) {
    goto LABEL_19;
  }
LABEL_3:
  if (v27 >= 1)
  {
    uint64_t v28 = 0LL;
    unint64_t v29 = v25 & 0xC000000000000001LL;
    uint64_t v30 = v25;
    while (1)
    {
      if (v29)
      {
        uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v25);
      }

      else
      {
        uint64_t v32 = *(void *)(v25 + 8 * v28 + 32);
        swift_retain(v32);
      }

      sub_100445A34(v10);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11) == 1)
      {
        sub_10040A274((uint64_t)v10, &qword_1009BC130);
        uint64_t v31 = (uint64_t)v38;
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v38, v39, v11);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v31, 0LL, 1LL, v11);
        sub_100445D28(v31);
      }

      else
      {
        (*(void (**)(char *, void *, uint64_t))(v12 + 32))(v16, v10, v11);
        if ((static Date.< infix(_:_:)(v16, v40) & 1) != 0)
        {
          uint64_t v33 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0LL);
          uint64_t v34 = sub_10040A2B0( &qword_1009B9FA0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle,  (uint64_t)&unk_10071A388);
          dispatch thunk of ModelContext.delete<A>(_:)(v32, v33, v34);
          swift_release(v32);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
          goto LABEL_7;
        }

        (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
      }

      swift_release(v32);
LABEL_7:
      uint64_t v25 = v30;
      if (v27 == ++v28) {
        goto LABEL_19;
      }
    }
  }

  __break(1u);
  return result;
}

id sub_1004F9680(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = a7;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v38 = *(void *)(v13 - 8);
  __chkstk_darwin(v14, v15);
  __n128 v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v36 = *(void *)(v18 - 8);
  uint64_t v37 = v18;
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id result = (id)im_primary_queue(v21, v24);
  if (result)
  {
    uint64_t v26 = result;
    uint64_t v27 = (void *)swift_allocObject(a5, 48LL, 7LL);
    v27[2] = a1;
    v27[3] = a2;
    v27[4] = a3;
    v27[5] = a4;
    aBlock[4] = a6;
    uint64_t v41 = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1003F8400;
    aBlock[3] = v35;
    uint64_t v28 = _Block_copy(aBlock);
    swift_errorRetain(a1);
    id v29 = a2;
    uint64_t v30 = sub_10050E38C(a3, a4);
    static DispatchQoS.unspecified.getter(v30);
    uint64_t v39 = &_swiftEmptyArrayStorage;
    uint64_t v31 = sub_10040A2B0( (unint64_t *)&unk_1009BAC40,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v32 = sub_1003F5CB4((uint64_t *)&unk_1009B9870);
    uint64_t v33 = sub_10047E23C( (unint64_t *)&qword_1009BAC50,  (uint64_t *)&unk_1009B9870,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v32, v33, v13, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v23, v17, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v13);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v37);
    return (id)swift_release(v41);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1004F99D0(double a1)
{
  uint64_t v3 = sub_1003F5CB4(&qword_1009BC2D0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v6, v7);
  __n128 v8 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v9, v10);
  uint64_t v12 = &v32[-v11];
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = &v32[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = &v32[-v22];
  Date.init()(v21);
  static Date.- infix(_:_:)(v18, a1);
  uint64_t v24 = *(void (**)(_BYTE *, uint64_t))(v14 + 8);
  v24(v18, v13);
  uint64_t v33 = v23;
  uint64_t v34 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0LL);
  Predicate.init(_:)(sub_10050FAD0, v32, 1LL, &v34);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v8, v12, v3);
  uint64_t v25 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v26 = (v25 + 16) & ~v25;
  uint64_t v27 = swift_allocObject(&unk_1009082A0, v26 + v5, v25 | 7);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 32))(v27 + v26, v8, v3);
  uint64_t v28 = swift_allocObject(&unk_1009082C8, 24LL, 7LL);
  *(void *)(v28 + 16) = v1;
  id v29 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t))((swift_isaMask & *v1) + 0xE0LL);
  uint64_t v30 = v1;
  v29(sub_10050FB3C, v27, sub_10050FBAC, v28);
  swift_release(v27);
  swift_release(v28);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v12, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v24)(v23, v13);
}

uint64_t sub_1004F9BEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v5 = type metadata accessor for PredicateExpressions.ComparisonOperator(0LL);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v6, v7);
  __n128 v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1003F5CB4(&qword_1009BC548);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  __chkstk_darwin(v12, v13);
  __n128 v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1003F5CB4(&qword_1009BC7E0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1003F5CB4(&qword_1009BC7E8);
  uint64_t v41 = *(void *)(v22 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = *a1;
  uint64_t v28 = sub_10047E23C( &qword_1009BC7F0,  &qword_1009BC7E0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v27, v16, v28);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D8A8);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, KeyPath, v16, v28);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  uint64_t v30 = type metadata accessor for Date(0LL);
  static PredicateExpressions.build_Arg<A>(_:)(v40, v30);
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))( v9,  enum case for PredicateExpressions.ComparisonOperator.lessThan(_:),  v39);
  a3[3] = sub_1003F5CB4(&qword_1009BC7F8);
  a3[4] = sub_100511688();
  sub_10040B2A8(a3);
  uint64_t v33 = sub_10047E23C( &qword_1009BC818,  &qword_1009BC7E8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v34 = sub_10047E23C( &qword_1009BC598,  &qword_1009BC548,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v35 = sub_10040A2B0( (unint64_t *)&unk_1009BC4A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t v36 = v42;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v26, v15, v9, v22, v42, v33, v34, v35);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v26, v22);
}

uint64_t sub_1004F9EC0(uint64_t a1, uint64_t a2)
{
  __n128 v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0LL);
  uint64_t v8 = sub_1003F5CB4(&qword_1009BC2D0);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, a2, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  uint64_t v10 = sub_10040A2B0( &qword_1009B9FE0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex,  (uint64_t)&unk_10071A5C0);
  dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v7, v6, 1LL, v7, v10);
  return sub_10040A274((uint64_t)v6, (uint64_t *)&unk_1009BC7D0);
}

uint64_t sub_1004F9FE0(uint64_t result, double a2)
{
  __n128 v3 = v2;
  uint64_t v5 = result;
  if (!((unint64_t)result >> 62))
  {
    if (!*(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      return result;
    }
    goto LABEL_3;
  }

  if (result < 0) {
    uint64_t v20 = result;
  }
  else {
    uint64_t v20 = result & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(result);
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter(v20);
  id result = swift_bridgeObjectRelease(v5);
  if (v21)
  {
LABEL_3:
    uint64_t v6 = swift_bridgeObjectRetain_n(v5, 2LL);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc(22LL, -1LL);
      uint64_t v10 = swift_slowAlloc(32LL, -1LL);
      uint64_t v23 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v11 = sub_10041D3C4(0LL, (unint64_t *)&unk_1009BC270, &OBJC_CLASS___IDSURI_ptr);
      swift_bridgeObjectRetain(v5);
      uint64_t v13 = Array.description.getter(v12, v11);
      unint64_t v15 = v14;
      swift_bridgeObjectRelease(v5);
      uint64_t v22 = sub_1003FFBB0(v13, v15, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease_n(v5, 2LL);
      swift_bridgeObjectRelease(v15);
      *(_WORD *)(v9 + 12) = 2048;
      uint64_t v22 = *(void *)&a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 14, v9 + 22);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  v8,  "Will mark sender key entries for delete - with unregisteredURIs: %s deleteAfter: %f",  (uint8_t *)v9,  0x16u);
      swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1LL, -1LL);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v5, 2LL);
    }

    uint64_t v16 = swift_allocObject(&unk_1009082F0, 32LL, 7LL);
    *(void *)(v16 + 16) = v5;
    *(double *)(v16 + 24) = a2;
    uint64_t v17 = swift_allocObject(&unk_100908318, 24LL, 7LL);
    *(void *)(v17 + 16) = v3;
    __n128 v18 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t))((swift_isaMask & *v3) + 0xE0LL);
    swift_bridgeObjectRetain(v5);
    __n128 v19 = v3;
    v18(sub_10050FBDC, v16, sub_10050FBF8, v17);
    swift_release(v16);
    return swift_release(v17);
  }

  return result;
}

uint64_t sub_1004FA284(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5 = v3;
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v78 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1003F5CB4((uint64_t *)&unk_1009BC5A0);
  __chkstk_darwin(v18, v19);
  uint64_t v69 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_1003F5CB4(&qword_1009BC6B8);
  uint64_t v71 = *(void *)(v21 - 8);
  uint64_t v72 = v21;
  __chkstk_darwin(v22, v23);
  uint64_t v70 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v25 = *(void *)(v76 - 8);
  __chkstk_darwin(v26, v27);
  uint64_t v77 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0) {
      uint64_t v64 = a2;
    }
    else {
      uint64_t v64 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter(v64);
  }

  else
  {
    uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a2);
  }

  uint64_t v74 = v5;
  uint64_t v75 = v25;
  uint64_t v67 = v13;
  uint64_t v68 = v14;
  unint64_t v66 = v12;
  uint64_t v73 = a1;
  if (v29)
  {
    if (v29 < 1)
    {
      __break(1u);
      goto LABEL_34;
    }

    uint64_t v30 = 0LL;
    uint64_t v31 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((a2 & 0xC000000000000001LL) != 0) {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a2);
      }
      else {
        id v32 = *(id *)(a2 + 8 * v30 + 32);
      }
      uint64_t v33 = v32;
      id v34 = objc_msgSend(v32, "prefixedURI", v66);
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      uint64_t v37 = v36;

      if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0) {
        uint64_t v31 = (char *)sub_10046D484(0LL, *((void *)v31 + 2) + 1LL, 1, v31);
      }
      unint64_t v39 = *((void *)v31 + 2);
      unint64_t v38 = *((void *)v31 + 3);
      if (v39 >= v38 >> 1) {
        uint64_t v31 = (char *)sub_10046D484((void *)(v38 > 1), v39 + 1, 1, v31);
      }
      ++v30;
      *((void *)v31 + 2) = v39 + 1;
      uint64_t v40 = &v31[16 * v39];
      *((void *)v40 + 4) = v35;
      *((void *)v40 + 5) = v37;
    }

    while (v29 != v30);
  }

  else
  {
    uint64_t v31 = (char *)_swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease(a2);
  __n128 v4 = &v66;
  __chkstk_darwin(v41, v42);
  *(&v66 - 2) = v31;
  uint64_t v43 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  uint64_t v79 = v43;
  uint64_t v44 = v77;
  Predicate.init(_:)(sub_1005115B0, &v66 - 4, 1LL, &v79);
  swift_bridgeObjectRelease(v31);
  uint64_t v25 = v75;
  uint64_t v14 = v76;
  uint64_t v45 = v69;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v69, v44, v76);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v45, 0LL, 1LL, v14);
  uint64_t v46 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  uint64_t v47 = v70;
  FetchDescriptor.init(predicate:sortBy:)(v45, _swiftEmptyArrayStorage, v43, v46);
  uint64_t v48 = v74;
  a1 = dispatch thunk of ModelContext.fetch<A>(_:)(v47, v43, v46);
  uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v47, v72);
  if (v48) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v44, v14);
  }
  a2 = (uint64_t)v78;
  uint64_t result = static Date.now.getter(v49);
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v51 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v52 = v67;
    if (v51) {
      goto LABEL_20;
    }
LABEL_38:
    swift_bridgeObjectRelease(a1);
LABEL_39:
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(a2, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v77, v14);
  }

uint64_t sub_1004FA7F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v109 = a3;
  uint64_t v118 = sub_1003F5CB4(&qword_1009BC5B0);
  uint64_t v104 = *(void *)(v118 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v116 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = sub_1003F5CB4(&qword_1009BC5B8);
  uint64_t v103 = *(void *)(v117 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v113 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v119 = sub_1003F5CB4(&qword_1009BC5C0);
  uint64_t v105 = *(void *)(v119 - 8);
  __chkstk_darwin(v11, v12);
  BOOL v115 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1003F5CB4(&qword_1009BC5C8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v16, v17);
  __n128 v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v112 = sub_1003F5CB4(&qword_1009BC6C0);
  uint64_t v96 = *(void *)(v112 - 8);
  __chkstk_darwin(v20, v21);
  __n128 v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v111 = sub_1003F5CB4(&qword_1009BC6C8);
  uint64_t v95 = *(void *)(v111 - 8);
  __chkstk_darwin(v24, v25);
  unint64_t v87 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v114 = sub_1003F5CB4(&qword_1009BC6D0);
  uint64_t v102 = *(void *)(v114 - 8);
  __chkstk_darwin(v27, v28);
  uint64_t v88 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_1003F5CB4(&qword_1009BC7A8);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v107 = v30;
  uint64_t v108 = v31;
  __chkstk_darwin(v32, v33);
  uint64_t v106 = (char *)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v35, v36);
  uint64_t v120 = (char *)&v87 - v37;
  uint64_t v121 = a2;
  uint64_t v38 = *a1;
  uint64_t v110 = v38;
  uint64_t v100 = sub_1003F5CB4(&qword_1009BAC90);
  static PredicateExpressions.build_Arg<A>(_:)(&v121, v100);
  uint64_t v39 = sub_10047E23C( &qword_1009BC5F8,  &qword_1009BC5C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v38, v14, v39);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D830);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v19, KeyPath, v14, v39);
  swift_release(KeyPath);
  __n128 v41 = *(void (**)(char *, uint64_t))(v15 + 8);
  v41(v19, v14);
  uint64_t v89 = v41;
  uint64_t v42 = sub_10047E23C( &qword_1009BC6F0,  &qword_1009BC6C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v99 = v42;
  uint64_t v43 = sub_10047E23C( &qword_1009BC6F8,  &qword_1009BC6C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v98 = v43;
  uint64_t v97 = sub_10047E23C(&qword_1009BC700, &qword_1009BAC90, (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v44 = v87;
  uint64_t v92 = v23;
  uint64_t v46 = v111;
  uint64_t v45 = v112;
  static PredicateExpressions.build_contains<A, B>(_:_:)( v87,  v23,  v111,  v112,  v42,  v43,  v97,  &protocol witness table for String);
  uint64_t v96 = *(void *)(v96 + 8);
  ((void (*)(char *, uint64_t))v96)(v23, v45);
  uint64_t v95 = *(void *)(v95 + 8);
  ((void (*)(char *, uint64_t))v95)(v44, v46);
  static PredicateExpressions.build_Arg<A>(_:)(v110, v14, v39);
  uint64_t v47 = swift_getKeyPath(&unk_10071D7E0);
  uint64_t v48 = v113;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v19, v47, v14, v39);
  swift_release(v47);
  v41(v19, v14);
  LOBYTE(v121) = 1;
  uint64_t v49 = v116;
  static PredicateExpressions.build_Arg<A>(_:)(&v121, &type metadata for Bool);
  uint64_t v50 = sub_10047E23C( &qword_1009BC620,  &qword_1009BC5B8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v94 = v50;
  uint64_t v93 = sub_10047E23C( &qword_1009BC628,  &qword_1009BC5B0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v51 = v115;
  uint64_t v52 = v117;
  uint64_t v53 = v118;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v48,  v49,  v117,  v118,  v50,  v93,  &protocol witness table for Bool);
  uint64_t v104 = *(void *)(v104 + 8);
  ((void (*)(char *, uint64_t))v104)(v49, v53);
  uint64_t v103 = *(void *)(v103 + 8);
  ((void (*)(char *, uint64_t))v103)(v48, v52);
  uint64_t v54 = sub_10047E23C( &qword_1009BC708,  &qword_1009BC6D0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.SequenceContains<A, B>);
  uint64_t v91 = v54;
  uint64_t v90 = sub_10047E23C( &qword_1009BC638,  &qword_1009BC5C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v55 = v88;
  uint64_t v56 = v51;
  uint64_t v57 = v51;
  uint64_t v58 = v114;
  uint64_t v59 = v119;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v88, v57, v114, v119, v54, v90);
  uint64_t v105 = *(void *)(v105 + 8);
  ((void (*)(char *, uint64_t))v105)(v56, v59);
  uint64_t v102 = *(void *)(v102 + 8);
  uint64_t v60 = v55;
  ((void (*)(char *, uint64_t))v102)(v55, v58);
  uint64_t v121 = v101;
  static PredicateExpressions.build_Arg<A>(_:)(&v121, v100);
  uint64_t v61 = v110;
  static PredicateExpressions.build_Arg<A>(_:)(v110, v14, v39);
  uint64_t v62 = swift_getKeyPath(&unk_10071D858);
  uint64_t v63 = v92;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v19, v62, v14, v39);
  swift_release(v62);
  uint64_t v64 = v89;
  v89(v19, v14);
  uint64_t v65 = v44;
  unint64_t v66 = v44;
  uint64_t v67 = v111;
  uint64_t v68 = v112;
  static PredicateExpressions.build_contains<A, B>(_:_:)( v66,  v63,  v111,  v112,  v99,  v98,  v97,  &protocol witness table for String);
  ((void (*)(char *, uint64_t))v96)(v63, v68);
  ((void (*)(char *, uint64_t))v95)(v65, v67);
  static PredicateExpressions.build_Arg<A>(_:)(v61, v14, v39);
  uint64_t v69 = swift_getKeyPath(&unk_10071D7E0);
  uint64_t v70 = v113;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v19, v69, v14, v39);
  swift_release(v69);
  v64(v19, v14);
  LOBYTE(v121) = 0;
  uint64_t v71 = v116;
  static PredicateExpressions.build_Arg<A>(_:)(&v121, &type metadata for Bool);
  uint64_t v72 = v115;
  uint64_t v74 = v117;
  uint64_t v73 = v118;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v70,  v71,  v117,  v118,  v94,  v93,  &protocol witness table for Bool);
  ((void (*)(char *, uint64_t))v104)(v71, v73);
  ((void (*)(char *, uint64_t))v103)(v70, v74);
  uint64_t v75 = v106;
  uint64_t v76 = v72;
  uint64_t v77 = v72;
  uint64_t v78 = v114;
  uint64_t v79 = v119;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v60, v77, v114, v119, v91, v90);
  ((void (*)(char *, uint64_t))v105)(v76, v79);
  ((void (*)(char *, uint64_t))v102)(v60, v78);
  uint64_t v80 = sub_1003F5CB4(&qword_1009BC7B0);
  uint64_t v81 = v109;
  v109[3] = v80;
  v81[4] = sub_1005115B8( &qword_1009BC7B8,  &qword_1009BC7B0,  (void (*)(void))sub_10051161C,  (uint64_t)&protocol conformance descriptor for <> PredicateExpressions.Disjunction<A, B>);
  sub_10040B2A8(v81);
  uint64_t v82 = sub_10047E23C( &qword_1009BC7C8,  &qword_1009BC7A8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>);
  uint64_t v83 = v120;
  uint64_t v84 = v107;
  static PredicateExpressions.build_Disjunction<A, B>(lhs:rhs:)(v120, v75, v107, v107, v82, v82);
  uint64_t v85 = *(void (**)(char *, uint64_t))(v108 + 8);
  v85(v75, v84);
  return ((uint64_t (*)(char *, uint64_t))v85)(v83, v84);
}

uint64_t sub_1004FB0A8(uint64_t a1, uint64_t a2)
{
  __n128 v3 = v2;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(IDSServiceNameiMessage);
  uint64_t v8 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xD0LL))(v6);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = swift_bridgeObjectRetain_n(v9, 2LL);
  __n128 v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v26 = a2;
    uint64_t v14 = swift_slowAlloc(32LL, -1LL);
    uint64_t v28 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v15 = sub_10041D3C4(0LL, (unint64_t *)&unk_1009BC270, &OBJC_CLASS___IDSURI_ptr);
    swift_bridgeObjectRetain(v9);
    uint64_t v17 = Array.description.getter(v16, v15);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease(v9);
    uint64_t v27 = sub_1003FFBB0(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease_n(v9, 2LL);
    swift_bridgeObjectRelease(v19);
    _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "Cleaning up invalid sender key entries - with registeredURIs: %s",  v13,  0xCu);
    swift_arrayDestroy(v14, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v20 = v14;
    a2 = v26;
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(v9, 2LL);
  }

  uint64_t v21 = swift_allocObject(&unk_100908340, 24LL, 7LL);
  *(void *)(v21 + 16) = v9;
  uint64_t v22 = (void *)swift_allocObject(&unk_100908368, 40LL, 7LL);
  v22[2] = v3;
  v22[3] = a1;
  v22[4] = a2;
  __n128 v23 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, id (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE0LL);
  __n128 v24 = v3;
  swift_retain(a2);
  v23(sub_10050FC28, v21, sub_10050FC70, v22);
  swift_release(v21);
  return swift_release(v22);
}

uint64_t sub_1004FB330(uint64_t a1, uint64_t *a2)
{
  uint64_t v120 = a2;
  uint64_t v126 = a1;
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v2, v3);
  uint64_t v124 = (uint64_t *)((char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v112 = sub_1003F5CB4(&qword_1009BC6B8);
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v110 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1003F5CB4((uint64_t *)&unk_1009BC5A0);
  __chkstk_darwin(v8, v9);
  uint64_t v109 = (char *)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11, v12);
  uint64_t v113 = (char *)&v108 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v118 = (char *)&v108 - v16;
  uint64_t v122 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v17 = *(void *)(v122 - 8);
  __chkstk_darwin(v18, v19);
  Swift::String v130 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21, v22);
  __n128 v24 = (char *)&v108 - v23;
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (uint64_t)&v108 - v27;
  uint64_t v29 = type metadata accessor for Date(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v31, v32);
  uint64_t v114 = (char *)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v34, v35);
  BOOL v115 = (char *)&v108 - v36;
  __chkstk_darwin(v37, v38);
  uint64_t v40 = (char *)&v108 - v39;
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (char *)&v108 - v43;
  __chkstk_darwin(v45, v46);
  uint64_t v48 = (char *)&v108 - v47;
  uint64_t v49 = type metadata accessor for SenderKeyDistributionManager(0LL);
  double v50 = (*(double (**)(void))(v49 + 720))();
  uint64_t v51 = (*(uint64_t (**)(void))(v49 + 728))();
  double v53 = v52;
  uint64_t v54 = Date.init()(v51);
  Date.addingTimeInterval(_:)(v54, -v50);
  uint64_t v123 = v30;
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
  uint64_t v56 = v55(v44, v29);
  uint64_t v57 = Date.init()(v56);
  uint64_t v58 = v44;
  Date.addingTimeInterval(_:)(v57, -v53);
  uint64_t v128 = v55;
  v55(v44, v29);
  uint64_t v116 = v48;
  Swift::String v135 = v48;
  uint64_t v59 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  uint64_t v136 = v59;
  Predicate.init(_:)(sub_1005112C4, v134, 1LL, &v136);
  uint64_t v117 = v40;
  Swift::String v133 = v40;
  uint64_t v60 = (uint64_t)v120;
  uint64_t v127 = v24;
  Predicate.init(_:)(sub_1005112E0, v132, 1LL, &v136);
  if ((unint64_t)v60 >> 62)
  {
    if (v60 < 0) {
      uint64_t v106 = v60;
    }
    else {
      uint64_t v106 = v60 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v60);
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter(v106);
  }

  else
  {
    uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v60);
  }

  uint64_t v121 = v17;
  uint64_t v129 = v28;
  uint64_t v131 = v29;
  uint64_t v125 = v59;
  if (v61)
  {
    if (v61 < 1)
    {
      __break(1u);
      goto LABEL_39;
    }

    uint64_t v62 = 0LL;
    unint64_t v63 = v60 & 0xC000000000000001LL;
    uint64_t v64 = _swiftEmptyArrayStorage;
    uint64_t v65 = v60;
    do
    {
      if (v63) {
        id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v60);
      }
      else {
        id v66 = *(id *)(v60 + 8 * v62 + 32);
      }
      uint64_t v67 = v66;
      id v68 = [v66 prefixedURI];
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
      uint64_t v71 = v70;

      if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0) {
        uint64_t v64 = sub_10046D484(0LL, v64[2] + 1LL, 1, v64);
      }
      unint64_t v73 = v64[2];
      unint64_t v72 = v64[3];
      if (v73 >= v72 >> 1) {
        uint64_t v64 = sub_10046D484((void *)(v72 > 1), v73 + 1, 1, v64);
      }
      ++v62;
      void v64[2] = v73 + 1;
      uint64_t v74 = &v64[2 * v73];
      v74[4] = v69;
      v74[5] = v71;
      uint64_t v60 = v65;
    }

    while (v61 != v62);
  }

  else
  {
    uint64_t v64 = _swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease(v60);
  uint64_t v120 = &v108;
  __chkstk_darwin(v75, v76);
  *(&v108 - 2) = (uint64_t)v64;
  Predicate.init(_:)(sub_1005112FC, &v108 - 4, 1LL, &v136);
  swift_bridgeObjectRelease(v64);
  uint64_t v78 = v121;
  uint64_t v77 = v122;
  uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
  uint64_t v80 = (uint64_t)v118;
  v79(v118, v129, v122);
  uint64_t v81 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56);
  v81(v80, 0LL, 1LL, v77);
  uint64_t v82 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  uint64_t v83 = v125;
  uint64_t v84 = v119;
  dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v125, v80, 1LL, v125, v82);
  uint64_t v60 = v84;
  if (v84)
  {
    sub_10040A274(v80, (uint64_t *)&unk_1009BC5A0);
    uint64_t v86 = v131;
    unint64_t v87 = *(void (**)(char *, uint64_t))(v78 + 8);
    v87(v130, v77);
    v87(v127, v77);
    v87((char *)v129, v77);
    uint64_t v88 = v128;
    v128(v117, v86);
    return v88(v116, v86);
  }

  sub_10040A274(v80, (uint64_t *)&unk_1009BC5A0);
  uint64_t v85 = (uint64_t)v113;
  v79(v113, (uint64_t)v127, v77);
  v81(v85, 0LL, 1LL, v77);
  dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v83, v85, 1LL, v83, v82);
  sub_10040A274(v85, (uint64_t *)&unk_1009BC5A0);
  uint64_t v90 = v109;
  v79(v109, (uint64_t)v130, v77);
  v81((uint64_t)v90, 0LL, 1LL, v77);
  uint64_t v91 = v110;
  FetchDescriptor.init(predicate:sortBy:)(v90, _swiftEmptyArrayStorage, v83, v82);
  uint64_t v28 = dispatch thunk of ModelContext.fetch<A>(_:)(v91, v83, v82);
  uint64_t v61 = v82;
  uint64_t v92 = (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v91, v112);
  uint64_t result = static Date.now.getter(v92);
  uint64_t v58 = (char *)v131;
  if (!((unint64_t)v28 >> 62))
  {
    uint64_t v93 = *(void *)((v28 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    goto LABEL_21;
  }

uint64_t sub_1004FBC44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  int v95 = a3;
  uint64_t v89 = a2;
  uint64_t v102 = a4;
  uint64_t v5 = sub_1003F5CB4(&qword_1009BC5B0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v98 = v5;
  uint64_t v99 = v6;
  __chkstk_darwin(v7, v8);
  uint64_t v94 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1003F5CB4(&qword_1009BC5B8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v96 = v10;
  uint64_t v97 = v11;
  __chkstk_darwin(v12, v13);
  uint64_t v90 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1003F5CB4(&qword_1009BC5C0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v100 = v15;
  uint64_t v101 = v16;
  __chkstk_darwin(v17, v18);
  uint64_t v93 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = type metadata accessor for PredicateExpressions.ComparisonOperator(0LL);
  uint64_t v20 = *(void *)(v85 - 8);
  __chkstk_darwin(v21, v22);
  __n128 v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_1003F5CB4(&qword_1009BC548);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v87 = v25;
  uint64_t v88 = v26;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_1003F5CB4(&qword_1009BC5C8);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v80 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = sub_1003F5CB4(&qword_1009BC768);
  uint64_t v86 = *(void *)(v84 - 8);
  __chkstk_darwin(v37, v38);
  uint64_t v40 = (char *)&v80 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_1003F5CB4(&qword_1009BC770);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v91 = v41;
  uint64_t v92 = v42;
  __chkstk_darwin(v43, v44);
  uint64_t v103 = (char *)&v80 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = *a1;
  uint64_t v83 = v46;
  uint64_t v47 = sub_10047E23C( &qword_1009BC5F8,  &qword_1009BC5C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  uint64_t v81 = v47;
  static PredicateExpressions.build_Arg<A>(_:)(v46, v31, v47);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D880);
  uint64_t v49 = v40;
  uint64_t v80 = v31;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v36, KeyPath, v31, v47);
  swift_release(KeyPath);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v32 + 8);
  v82(v36, v31);
  uint64_t v50 = type metadata accessor for Date(0LL);
  uint64_t v51 = v30;
  static PredicateExpressions.build_Arg<A>(_:)(v89, v50);
  uint64_t v52 = v85;
  (*(void (**)(char *, void, uint64_t))(v20 + 104))( v24,  enum case for PredicateExpressions.ComparisonOperator.lessThan(_:),  v85);
  uint64_t v53 = sub_10047E23C( &qword_1009BC778,  &qword_1009BC768,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v54 = sub_10047E23C( &qword_1009BC598,  &qword_1009BC548,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v55 = sub_10040A2B0( (unint64_t *)&unk_1009BC4A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t v56 = v49;
  uint64_t v57 = v49;
  uint64_t v58 = v51;
  uint64_t v59 = v51;
  uint64_t v60 = v84;
  uint64_t v61 = v87;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v56, v58, v24, v84, v87, v53, v54, v55);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v52);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v59, v61);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v57, v60);
  uint64_t v62 = v80;
  uint64_t v63 = v81;
  static PredicateExpressions.build_Arg<A>(_:)(v83, v80, v81);
  uint64_t v64 = swift_getKeyPath(&unk_10071D7E0);
  uint64_t v65 = v90;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v36, v64, v62, v63);
  swift_release(v64);
  v82(v36, v62);
  v104[0] = v95;
  id v66 = v94;
  static PredicateExpressions.build_Arg<A>(_:)(v104, &type metadata for Bool);
  uint64_t v67 = sub_10047E23C( &qword_1009BC620,  &qword_1009BC5B8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v68 = sub_10047E23C( &qword_1009BC628,  &qword_1009BC5B0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v69 = v93;
  uint64_t v70 = v96;
  uint64_t v71 = v98;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v65,  v66,  v96,  v98,  v67,  v68,  &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v66, v71);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v65, v70);
  uint64_t v72 = sub_1003F5CB4(&qword_1009BC780);
  unint64_t v73 = v102;
  v102[3] = v72;
  v73[4] = sub_1005114B8();
  sub_10040B2A8(v73);
  uint64_t v74 = sub_10047E23C( &qword_1009BC7A0,  &qword_1009BC770,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Comparison<A, B>);
  uint64_t v75 = sub_10047E23C( &qword_1009BC638,  &qword_1009BC5C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  __n128 v76 = v103;
  uint64_t v77 = v91;
  uint64_t v78 = v100;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v103, v69, v91, v100, v74, v75);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v69, v78);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v76, v77);
}

uint64_t sub_1004FC210@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v129 = a3;
  uint64_t v142 = sub_1003F5CB4(&qword_1009BC5B0);
  uint64_t v124 = *(void *)(v142 - 8);
  __chkstk_darwin(v5, v6);
  unint64_t v140 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v141 = sub_1003F5CB4(&qword_1009BC5B8);
  uint64_t v123 = *(void *)(v141 - 8);
  __chkstk_darwin(v8, v9);
  BOOL v138 = (char *)&v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v143 = sub_1003F5CB4(&qword_1009BC5C0);
  uint64_t v125 = *(void *)(v143 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v139 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1003F5CB4(&qword_1009BC5C8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v135 = sub_1003F5CB4(&qword_1009BC6C0);
  uint64_t v116 = *(void *)(v135 - 8);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = sub_1003F5CB4(&qword_1009BC6C8);
  uint64_t v115 = *(void *)(v134 - 8);
  __chkstk_darwin(v24, v25);
  __n128 v27 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = sub_1003F5CB4(&qword_1009BC6D0);
  uint64_t v113 = *(void *)(v133 - 8);
  __chkstk_darwin(v28, v29);
  uint64_t v132 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v137 = sub_1003F5CB4(&qword_1009BC6D8);
  uint64_t v122 = *(void *)(v137 - 8);
  __chkstk_darwin(v31, v32);
  uint64_t v106 = (char *)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = sub_1003F5CB4((uint64_t *)&unk_1009BC6E0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v127 = v34;
  uint64_t v128 = v35;
  __chkstk_darwin(v36, v37);
  uint64_t v126 = (char *)&v105 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v39, v40);
  uint64_t v144 = (char *)&v105 - v41;
  uint64_t v145 = a2;
  uint64_t v136 = *a1;
  uint64_t v42 = v136;
  uint64_t v120 = sub_1003F5CB4(&qword_1009BAC90);
  static PredicateExpressions.build_Arg<A>(_:)(&v145, v120);
  uint64_t v43 = sub_10047E23C( &qword_1009BC5F8,  &qword_1009BC5C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  uint64_t v44 = v42;
  uint64_t v45 = v43;
  uint64_t v131 = v43;
  static PredicateExpressions.build_Arg<A>(_:)(v44, v14, v43);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D830);
  uint64_t v112 = v23;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v19, KeyPath, v14, v45);
  swift_release(KeyPath);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v15 + 8);
  v47(v19, v14);
  uint64_t v105 = v47;
  uint64_t v48 = sub_10047E23C( &qword_1009BC6F0,  &qword_1009BC6C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v119 = v48;
  uint64_t v49 = sub_10047E23C( &qword_1009BC6F8,  &qword_1009BC6C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v118 = v49;
  uint64_t v117 = sub_10047E23C(&qword_1009BC700, &qword_1009BAC90, (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v50 = v132;
  uint64_t v107 = v27;
  uint64_t v52 = v134;
  uint64_t v51 = v135;
  static PredicateExpressions.build_contains<A, B>(_:_:)( v27,  v23,  v134,  v135,  v48,  v49,  v117,  &protocol witness table for String);
  uint64_t v116 = *(void *)(v116 + 8);
  ((void (*)(char *, uint64_t))v116)(v23, v51);
  uint64_t v115 = *(void *)(v115 + 8);
  ((void (*)(char *, uint64_t))v115)(v27, v52);
  uint64_t v114 = sub_10047E23C( &qword_1009BC708,  &qword_1009BC6D0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.SequenceContains<A, B>);
  uint64_t v53 = v106;
  uint64_t v54 = v133;
  static PredicateExpressions.build_Negation<A>(_:)(v50, v133, v114);
  uint64_t v113 = *(void *)(v113 + 8);
  ((void (*)(char *, uint64_t))v113)(v50, v54);
  Swift::String v130 = v19;
  uint64_t v55 = v131;
  static PredicateExpressions.build_Arg<A>(_:)(v136, v14, v131);
  uint64_t v56 = swift_getKeyPath(&unk_10071D7E0);
  uint64_t v57 = v138;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v19, v56, v14, v55);
  swift_release(v56);
  uint64_t v58 = v19;
  uint64_t v59 = v14;
  v47(v58, v14);
  LOBYTE(v145) = 1;
  uint64_t v60 = v140;
  static PredicateExpressions.build_Arg<A>(_:)(&v145, &type metadata for Bool);
  uint64_t v61 = sub_10047E23C( &qword_1009BC620,  &qword_1009BC5B8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v111 = v61;
  uint64_t v110 = sub_10047E23C( &qword_1009BC628,  &qword_1009BC5B0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v62 = v139;
  uint64_t v63 = v57;
  uint64_t v64 = v57;
  uint64_t v66 = v141;
  uint64_t v65 = v142;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v63,  v60,  v141,  v142,  v61,  v110,  &protocol witness table for Bool);
  uint64_t v124 = *(void *)(v124 + 8);
  ((void (*)(char *, uint64_t))v124)(v60, v65);
  uint64_t v123 = *(void *)(v123 + 8);
  ((void (*)(char *, uint64_t))v123)(v64, v66);
  uint64_t v67 = sub_10047E23C( &qword_1009BC710,  &qword_1009BC6D8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Negation<A>);
  uint64_t v109 = v67;
  uint64_t v108 = sub_10047E23C( &qword_1009BC638,  &qword_1009BC5C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v68 = v143;
  uint64_t v69 = v53;
  uint64_t v70 = v62;
  uint64_t v71 = v62;
  uint64_t v72 = v137;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v53, v71, v137, v143, v67, v108);
  uint64_t v125 = *(void *)(v125 + 8);
  ((void (*)(char *, uint64_t))v125)(v70, v68);
  uint64_t v122 = *(void *)(v122 + 8);
  ((void (*)(char *, uint64_t))v122)(v53, v72);
  uint64_t v145 = v121;
  unint64_t v73 = v107;
  static PredicateExpressions.build_Arg<A>(_:)(&v145, v120);
  uint64_t v75 = v130;
  uint64_t v74 = v131;
  uint64_t v76 = v136;
  static PredicateExpressions.build_Arg<A>(_:)(v136, v59, v131);
  uint64_t v77 = swift_getKeyPath(&unk_10071D858);
  uint64_t v78 = v112;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v75, v77, v59, v74);
  swift_release(v77);
  uint64_t v79 = v105;
  v105(v75, v59);
  uint64_t v80 = v132;
  uint64_t v81 = v73;
  uint64_t v82 = v73;
  uint64_t v83 = v134;
  uint64_t v84 = v135;
  static PredicateExpressions.build_contains<A, B>(_:_:)( v81,  v78,  v134,  v135,  v119,  v118,  v117,  &protocol witness table for String);
  ((void (*)(char *, uint64_t))v116)(v78, v84);
  ((void (*)(char *, uint64_t))v115)(v82, v83);
  uint64_t v85 = v133;
  static PredicateExpressions.build_Negation<A>(_:)(v80, v133, v114);
  ((void (*)(char *, uint64_t))v113)(v80, v85);
  uint64_t v86 = v130;
  static PredicateExpressions.build_Arg<A>(_:)(v76, v59, v74);
  uint64_t v87 = swift_getKeyPath(&unk_10071D7E0);
  uint64_t v88 = v138;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v86, v87, v59, v74);
  swift_release(v87);
  v79(v86, v59);
  LOBYTE(v145) = 0;
  uint64_t v89 = v140;
  static PredicateExpressions.build_Arg<A>(_:)(&v145, &type metadata for Bool);
  uint64_t v90 = v139;
  uint64_t v92 = v141;
  uint64_t v91 = v142;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v88,  v89,  v141,  v142,  v111,  v110,  &protocol witness table for Bool);
  ((void (*)(char *, uint64_t))v124)(v89, v91);
  ((void (*)(char *, uint64_t))v123)(v88, v92);
  uint64_t v93 = v126;
  uint64_t v94 = v90;
  int v95 = v90;
  uint64_t v96 = v137;
  uint64_t v97 = v143;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v69, v95, v137, v143, v109, v108);
  ((void (*)(char *, uint64_t))v125)(v94, v97);
  ((void (*)(char *, uint64_t))v122)(v69, v96);
  uint64_t v98 = sub_1003F5CB4(&qword_1009BC718);
  uint64_t v99 = v129;
  v129[3] = v98;
  v99[4] = sub_1005115B8( &qword_1009BC720,  &qword_1009BC718,  (void (*)(void))sub_100511304,  (uint64_t)&protocol conformance descriptor for <> PredicateExpressions.Disjunction<A, B>);
  sub_10040B2A8(v99);
  uint64_t v100 = sub_10047E23C( &qword_1009BC760,  (uint64_t *)&unk_1009BC6E0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>);
  uint64_t v101 = v144;
  uint64_t v102 = v127;
  static PredicateExpressions.build_Disjunction<A, B>(lhs:rhs:)(v144, v93, v127, v127, v100, v100);
  uint64_t v103 = *(void (**)(char *, uint64_t))(v128 + 8);
  v103(v93, v102);
  return ((uint64_t (*)(char *, uint64_t))v103)(v101, v102);
}

id sub_1004FCBF4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = a7;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v38 = *(void *)(v13 - 8);
  __chkstk_darwin(v14, v15);
  __n128 v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v36 = *(void *)(v18 - 8);
  uint64_t v37 = v18;
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id result = (id)im_primary_queue(v21, v24);
  if (result)
  {
    uint64_t v26 = result;
    __n128 v27 = (void *)swift_allocObject(a5, 48LL, 7LL);
    v27[2] = a1;
    v27[3] = a2;
    v27[4] = a3;
    v27[5] = a4;
    aBlock[4] = a6;
    uint64_t v41 = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1003F8400;
    aBlock[3] = v35;
    __n128 v28 = _Block_copy(aBlock);
    swift_errorRetain(a1);
    id v29 = a2;
    uint64_t v30 = swift_retain(a4);
    static DispatchQoS.unspecified.getter(v30);
    __n128 v39 = _swiftEmptyArrayStorage;
    uint64_t v31 = sub_10040A2B0( (unint64_t *)&unk_1009BAC40,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v32 = sub_1003F5CB4((uint64_t *)&unk_1009B9870);
    uint64_t v33 = sub_10047E23C( (unint64_t *)&qword_1009BAC50,  (uint64_t *)&unk_1009B9870,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v32, v33, v13, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v23, v17, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v13);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v37);
    return (id)swift_release(v41);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1004FCE7C(uint64_t a1)
{
  uint64_t v3 = swift_allocObject(&unk_100908390, 24LL, 7LL);
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject(&unk_1009083B8, 24LL, 7LL);
  *(void *)(v4 + 16) = v1;
  __n128 v5 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t))((swift_isaMask & *v1) + 0xE0LL);
  swift_bridgeObjectRetain(a1);
  __n128 v6 = v1;
  v5(sub_10050FCA4, v3, sub_10050FCBC, v4);
  swift_release(v3);
  return swift_release(v4);
}

uint64_t sub_1004FCF30(uint64_t a1, uint64_t a2)
{
  __n128 v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = sub_1003F5CB4((uint64_t *)&unk_1009BC2A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v9, v10);
  __n128 v12 = &v16[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v17 = a2;
  uint64_t v13 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
  uint64_t v18 = v13;
  Predicate.init(_:)(sub_100510F40, v16, 1LL, &v18);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v6, v12, v7);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0LL, 1LL, v7);
  uint64_t v14 = sub_10040A2B0( &qword_1009B9FC8,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution,  (uint64_t)&unk_10071A4A4);
  dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v13, v6, 1LL, v13, v14);
  sub_10040A274((uint64_t)v6, (uint64_t *)&unk_1009BC5A0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v12, v7);
}

uint64_t sub_1004FD0B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v88 = a3;
  uint64_t v93 = sub_1003F5CB4(&qword_1009BC5B0);
  uint64_t v83 = *(void *)(v93 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v92 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1003F5CB4(&qword_1009BC5B8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v81 = v8;
  uint64_t v82 = v9;
  __chkstk_darwin(v10, v11);
  uint64_t v77 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1003F5CB4(&qword_1009BC5C0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v84 = v13;
  uint64_t v85 = v14;
  __chkstk_darwin(v15, v16);
  uint64_t v80 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1003F5CB4(&qword_1009BC5C8);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = sub_1003F5CB4(&qword_1009BC5D0);
  uint64_t v76 = *(void *)(v75 - 8);
  __chkstk_darwin(v24, v25);
  __n128 v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_1003F5CB4(&qword_1009BC5D8);
  uint64_t v74 = *(void *)(v28 - 8);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_1003F5CB4(&qword_1009BC5E0);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v78 = v33;
  uint64_t v79 = v34;
  __chkstk_darwin(v35, v36);
  uint64_t v91 = (char *)&v74 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = sub_1003F5CB4(&qword_1009BC5E8);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v86 = v38;
  uint64_t v87 = v39;
  __chkstk_darwin(v40, v41);
  uint64_t v94 = (char *)&v74 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = *a1;
  uint64_t v43 = v90;
  uint64_t v97 = a2;
  uint64_t v44 = sub_1003F5CB4(&qword_1009BC5F0);
  static PredicateExpressions.build_Arg<A>(_:)(&v97, v44);
  uint64_t v45 = sub_10047E23C( &qword_1009BC5F8,  &qword_1009BC5C8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v43, v18, v45);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D7B8);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v23, KeyPath, v18, v45);
  swift_release(KeyPath);
  uint64_t v89 = *(void (**)(char *, uint64_t))(v19 + 8);
  v89(v23, v18);
  uint64_t v47 = sub_10047E23C( &qword_1009BC600,  &qword_1009BC5D8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v48 = sub_10047E23C( &qword_1009BC608,  &qword_1009BC5D0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v49 = sub_10047E23C(&qword_1009BC610, &qword_1009BC5F0, (uint64_t)&protocol conformance descriptor for [A]);
  unint64_t v50 = sub_100510F48();
  uint64_t v51 = v28;
  uint64_t v52 = v28;
  uint64_t v53 = v75;
  static PredicateExpressions.build_contains<A, B>(_:_:)(v32, v27, v52, v75, v47, v48, v49, v50);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v27, v53);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v32, v51);
  static PredicateExpressions.build_Arg<A>(_:)(v90, v18, v45);
  uint64_t v54 = swift_getKeyPath(&unk_10071D7E0);
  uint64_t v55 = v77;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v23, v54, v18, v45);
  swift_release(v54);
  v89(v23, v18);
  char v96 = 1;
  uint64_t v56 = v92;
  static PredicateExpressions.build_Arg<A>(_:)(&v96, &type metadata for Bool);
  uint64_t v57 = sub_10047E23C( &qword_1009BC620,  &qword_1009BC5B8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v76 = v57;
  uint64_t v75 = sub_10047E23C( &qword_1009BC628,  &qword_1009BC5B0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v58 = v80;
  uint64_t v59 = v81;
  uint64_t v60 = v93;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v55,  v56,  v81,  v93,  v57,  v75,  &protocol witness table for Bool);
  uint64_t v74 = *(void *)(v83 + 8);
  ((void (*)(char *, uint64_t))v74)(v56, v60);
  uint64_t v82 = *(void *)(v82 + 8);
  ((void (*)(char *, uint64_t))v82)(v55, v59);
  uint64_t v61 = sub_10047E23C( &qword_1009BC630,  &qword_1009BC5E0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.SequenceContains<A, B>);
  uint64_t v83 = sub_10047E23C( &qword_1009BC638,  &qword_1009BC5C0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Equal<A, B>);
  uint64_t v62 = v91;
  uint64_t v63 = v78;
  uint64_t v64 = v84;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v91, v58, v78, v84, v61, v83);
  uint64_t v85 = *(void *)(v85 + 8);
  ((void (*)(char *, uint64_t))v85)(v58, v64);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v62, v63);
  static PredicateExpressions.build_Arg<A>(_:)(v90, v18, v45);
  uint64_t v65 = swift_getKeyPath(&unk_10071D808);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v23, v65, v18, v45);
  swift_release(v65);
  v89(v23, v18);
  char v95 = 0;
  uint64_t v66 = v92;
  static PredicateExpressions.build_Arg<A>(_:)(&v95, &type metadata for Bool);
  uint64_t v67 = v93;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v55,  v66,  v59,  v93,  v76,  v75,  &protocol witness table for Bool);
  ((void (*)(char *, uint64_t))v74)(v66, v67);
  ((void (*)(char *, uint64_t))v82)(v55, v59);
  uint64_t v68 = sub_1003F5CB4(&qword_1009BC640);
  uint64_t v69 = v88;
  v88[3] = v68;
  v69[4] = sub_100510F8C();
  sub_10040B2A8(v69);
  uint64_t v70 = sub_10047E23C( &qword_1009BC6B0,  &qword_1009BC5E8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>);
  uint64_t v71 = v94;
  uint64_t v72 = v86;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v94, v58, v86, v64, v70, v83);
  ((void (*)(char *, uint64_t))v85)(v58, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v71, v72);
}

uint64_t sub_1004FD778(uint64_t a1)
{
  uint64_t v28 = a1;
  sub_1003F5CB4(&qword_1009BC530);
  __chkstk_darwin(v1, v2);
  __n128 v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v5 = sub_1003F5CB4(&qword_1009BC538);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v7, v8);
  __n128 v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v13, v14);
  __n128 v16 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v17, v18);
  __n128 v20 = &v29[-v19];
  __n128 v21 = (double *)sub_1004D4858();
  double v22 = *v21;
  uint64_t v23 = Date.init()(v21);
  Date.addingTimeInterval(_:)(v23, -v22);
  __n128 v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v16, v11);
  __n128 v30 = v20;
  uint64_t v25 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0LL);
  uint64_t v31 = v25;
  Predicate.init(_:)(sub_100510E08, v29, 1LL, &v31);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v10, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0LL, 1LL, v5);
  uint64_t v26 = sub_10040A2B0( &qword_1009BC540,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent,  (uint64_t)&unk_10071A7F8);
  dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v25, v4, 1LL, v25, v26);
  sub_10040A274((uint64_t)v4, &qword_1009BC530);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  return ((uint64_t (*)(char *, uint64_t))v24)(v20, v11);
}

uint64_t sub_1004FD984@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v5 = type metadata accessor for PredicateExpressions.ComparisonOperator(0LL);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1003F5CB4(&qword_1009BC548);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1003F5CB4(&qword_1009BC550);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v18, v19);
  __n128 v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1003F5CB4(&qword_1009BC558);
  uint64_t v41 = *(void *)(v22 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = *a1;
  uint64_t v28 = sub_10047E23C( &qword_1009BC560,  &qword_1009BC550,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v27, v16, v28);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D790);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v21, KeyPath, v16, v28);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  uint64_t v30 = type metadata accessor for Date(0LL);
  static PredicateExpressions.build_Arg<A>(_:)(v40, v30);
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))( v9,  enum case for PredicateExpressions.ComparisonOperator.lessThan(_:),  v39);
  a3[3] = sub_1003F5CB4(&qword_1009BC568);
  a3[4] = sub_100510E10();
  sub_10040B2A8(a3);
  uint64_t v33 = sub_10047E23C( &qword_1009BC590,  &qword_1009BC558,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v34 = sub_10047E23C( &qword_1009BC598,  &qword_1009BC548,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v35 = sub_10040A2B0( (unint64_t *)&unk_1009BC4A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t v36 = v42;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)(v26, v15, v9, v22, v42, v33, v34, v35);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v26, v22);
}

void sub_1004FDCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a1;
  v49[0] = a2;
  v49[1] = a3;
  sub_1003F5CB4(&qword_1009BC4D8);
  __chkstk_darwin(v3, v4);
  __n128 v6 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1003F5CB4(&qword_1009BC4E0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v9, v10);
  __n128 v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1003F5CB4(&qword_1009BC4E8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v15, v16);
  __n128 v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(0LL);
  uint64_t v57 = v19;
  Predicate.init(_:)(sub_1004FE26C, 0LL, 1LL, &v57);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  unint64_t v50 = v18;
  v20(v6, v18, v13);
  uint64_t v51 = v14;
  uint64_t v52 = v13;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0LL, 1LL, v13);
  uint64_t v21 = sub_10040A2B0( &qword_1009BC4D0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount,  (uint64_t)&unk_10071A914);
  FetchDescriptor.init(predicate:sortBy:)(v6, _swiftEmptyArrayStorage, v19, v21);
  uint64_t v22 = v54;
  uint64_t v23 = dispatch thunk of ModelContext.fetch<A>(_:)(v12, v19, v21);
  if (!v22)
  {
    uint64_t v31 = v23;
    uint64_t v32 = (void **)v49[0];
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    if ((unint64_t)v31 >> 62)
    {
      if (v31 < 0) {
        uint64_t v47 = v31;
      }
      else {
        uint64_t v47 = v31 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v31);
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_bridgeObjectRelease(v31);
      uint64_t v33 = v32;
      if (v48)
      {
LABEL_6:
        if ((v31 & 0xC000000000000001LL) != 0)
        {
          uint64_t v34 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v31);
        }

        else
        {
          if (!*(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10))
          {
            __break(1u);
            return;
          }

          uint64_t v34 = *(void *)(v31 + 32);
          swift_retain(v34);
        }

        swift_bridgeObjectRelease(v31);
        id v35 = [objc_allocWithZone(IDSQualifiedContactsMetric) init];
        sub_10044D960();
        Class isa = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setQualifiedHandlesCount:isa];

        sub_10044DC44();
        Class v37 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setQualifiedHandlesIML:v37];

        sub_10044DF28();
        Class v38 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setHandlesCount:v38];

        sub_10044E7D4();
        Class v39 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setEmergencyHandlesCount:v39];

        sub_10044E20C();
        Class v40 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setQualifiedEmergencyHandles:v40];

        sub_10044E4F0();
        Class v41 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setQualifiedEmergencyHandlesIML:v41];

        sub_10044EAB8();
        Class v42 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setQualifiedPrimaryHandles:v42];

        sub_10044ED9C();
        Class v43 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setQualifiedPrimaryHandlesIML:v43];

        sub_10044F080();
        Class v44 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setPrimaryHandlesCount:v44];

        sub_10044F364();
        Class v45 = Int._bridgeToObjectiveC()().super.super.isa;
        [v35 setFamilyHandlesCount:v45];
        swift_release(v34);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
        uint64_t v46 = *v33;
        *uint64_t v33 = v35;

        return;
      }
    }

    else
    {
      uint64_t v33 = v32;
      if (*(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRelease(v31);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
    return;
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  swift_errorRetain(v22);
  uint64_t v24 = swift_errorRetain(v22);
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v28 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v27 = 138412290;
    swift_errorRetain(v22);
    uint64_t v29 = _swift_stdlib_bridgeErrorToNSError(v22);
    uint64_t v55 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v27 + 4, v27 + 12);
    *uint64_t v28 = v29;
    swift_errorRelease(v22);
    swift_errorRelease(v22);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Error fetching IDSQualifiedContactsCount: %@", v27, 0xCu);
    uint64_t v30 = sub_1003F5CB4(&qword_1009B92C8);
    swift_arrayDestroy(v28, 1LL, v30);
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v27, -1LL, -1LL);

    swift_errorRelease(v22);
  }

  else
  {
    swift_errorRelease(v22);
    swift_errorRelease(v22);
    swift_errorRelease(v22);
  }

  (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
}

uint64_t sub_1004FE26C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1003F5CB4(&qword_1009BC410);
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1003F5CB4(&qword_1009BC4F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1003F5CB4(&qword_1009BC4F8);
  uint64_t v29 = *(void *)(v15 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = *a1;
  uint64_t v21 = sub_10047E23C( &qword_1009BC500,  &qword_1009BC4F0,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v20, v9, v21);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D768);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v14, KeyPath, v9, v21);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(kIDSQualifiedContactsMetric);
  uint64_t v25 = v24;
  v31[0] = v23;
  v31[1] = v24;
  static PredicateExpressions.build_Arg<A>(_:)(v31, &type metadata for String);
  swift_bridgeObjectRelease(v25);
  a2[3] = sub_1003F5CB4(&qword_1009BC508);
  a2[4] = sub_100510CE4();
  sub_10040B2A8(a2);
  uint64_t v26 = sub_10047E23C( &qword_1009BC528,  &qword_1009BC4F8,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v27 = sub_10047E23C( &qword_1009BC460,  &qword_1009BC410,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v19,  v8,  v15,  v4,  v26,  v27,  &protocol witness table for String);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v19, v15);
}

uint64_t sub_1004FE540(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(0LL);
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(kIDSQualifiedContactsMetric);
  uint64_t v29 = v5;
  uint64_t v30 = v4;
  id v6 = [a2 qualifiedHandlesCount];
  id v28 = [v6 integerValue];

  id v7 = [a2 qualifiedHandlesIML];
  id v27 = [v7 integerValue];

  id v8 = [a2 handlesCount];
  id v26 = [v8 integerValue];

  id v9 = [a2 qualifiedEmergencyHandles];
  id v10 = [v9 integerValue];

  id v11 = [a2 qualifiedEmergencyHandlesIML];
  id v12 = [v11 integerValue];

  id v13 = [a2 emergencyHandlesCount];
  id v14 = [v13 integerValue];

  id v15 = [a2 qualifiedPrimaryHandles];
  id v16 = [v15 integerValue];

  id v17 = [a2 qualifiedPrimaryHandlesIML];
  id v18 = [v17 integerValue];

  id v19 = [a2 primaryHandlesCount];
  id v20 = [v19 integerValue];

  id v21 = [a2 familyHandlesCount];
  id v22 = [v21 integerValue];

  uint64_t v23 = sub_10044F648( v30,  v29,  (uint64_t)v28,  (uint64_t)v27,  (uint64_t)v26,  (uint64_t)v10,  (uint64_t)v12,  (uint64_t)v14,  (uint64_t)v16,  (uint64_t)v18,  (uint64_t)v20,  (uint64_t)v22);
  uint64_t v24 = sub_10040A2B0( &qword_1009BC4D0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount,  (uint64_t)&unk_10071A914);
  dispatch thunk of ModelContext.insert<A>(_:)(v23, v3, v24);
  return swift_release(v23);
}

void sub_1004FE7C0(uint64_t a1, uint64_t a2, const char *a3)
{
  if (a1)
  {
    swift_errorRetain(a1);
    swift_errorRetain(a1);
    uint64_t v5 = swift_errorRetain(a1);
    id v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)id v8 = 138412290;
      swift_errorRetain(a1);
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v12 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4, v8 + 12);
      *id v9 = v10;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, a3, v8, 0xCu);
      uint64_t v11 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v9, 1LL, v11);
      swift_slowDealloc(v9, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);
      swift_errorRelease(a1);
    }

    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }
  }

void sub_1004FEA38(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t *a6)
{
  id v10 = [a5 prefixedURI];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  uint64_t v13 = v12;

  sub_1004DF32C(a3, a4, v11, v13, a1);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease(v13);
  if (!v15) {
    return;
  }
  uint64_t v16 = sub_10043F574();
  if (!v16)
  {
    swift_release(v15);
    return;
  }

  uint64_t v17 = v16;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 >= 0) {
      uint64_t v31 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v31 = v16;
    }
    swift_bridgeObjectRetain(v16);
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v31);
    if (v18) {
      goto LABEL_5;
    }
LABEL_22:
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v17);
    uint64_t v32 = sub_100438A1C( (uint64_t)_swiftEmptyArrayStorage,  (unint64_t *)&qword_1009BBE30,  &OBJC_CLASS___IDSPushToken_ptr,  (unint64_t *)&qword_1009BC4C0,  (uint64_t *)&unk_1009B99A0);
    swift_release(v15);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    uint64_t v33 = *a6;
    *a6 = v32;
    swift_bridgeObjectRelease(v33);
    return;
  }

  uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v16);
  if (!v18) {
    goto LABEL_22;
  }
LABEL_5:
  if (v18 >= 1)
  {
    for (uint64_t i = 0LL; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001LL) != 0)
      {
        uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
      }

      else
      {
        uint64_t v21 = *(void *)(v17 + 8 * i + 32);
        swift_retain(v21);
      }

      uint64_t v22 = sub_10044026C();
      unint64_t v24 = v23;
      id v25 = objc_allocWithZone(&OBJC_CLASS___IDSPushToken);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v27 = [v25 initWithData:isa];
      sub_100402A84(v22, v24);
      swift_release(v21);

      if (v27)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        unint64_t v30 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v29 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v30 >= v29 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1LL);
        }
        uint64_t v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
        specialized Array._endMutation()(v20);
      }
    }

    goto LABEL_22;
  }

  __break(1u);
}

void sub_1004FEE18( uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  id v15 = [a5 prefixedURI];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  sub_1004DF32C(a3, a4, v16, v18, a1);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease(v18);
  if (v20)
  {
    uint64_t v21 = sub_10043F574();
    if (v21)
    {
      uint64_t v22 = v21;
      id v23 = a6;
      uint64_t v24 = sub_10050D8B8(v22, v23);
      swift_bridgeObjectRelease(v22);

      uint64_t v46 = v24;
      if (!v24)
      {
        swift_release(v20);
        return;
      }

      id v25 = [a7 prefixedURI];
      id v49 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      uint64_t v45 = v26;

      id v27 = [a5 prefixedURI];
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      uint64_t v29 = v28;

      id v30 = [v23 rawToken];
      uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v30);
      unint64_t v33 = v32;

      sub_1004E3370(a3, a4, (uint64_t)v49, v45, v44, v29, v31, v33, 0, a1);
      uint64_t v35 = v34;
      sub_100402A84(v31, v33);
      swift_bridgeObjectRelease(v45);
      swift_bridgeObjectRelease(v29);
      swift_release(v35);
      if (v35)
      {
        type metadata accessor for ArchiveHelper();
        uint64_t v36 = sub_10041D3C4(0LL, &qword_1009BC470, &OBJC_CLASS___IDSEndpointCapabilities_ptr);
        uint64_t v37 = sub_1004404FC();
        unint64_t v39 = v38;
        Class v40 = (void *)sub_10040AB44(v36, v37, v38, v36);
        sub_100402A84(v37, v39);
        if (v40)
        {
          NSString v41 = String._bridgeToObjectiveC()();
          id v42 = [v40 valueForCapability:v41];

          swift_release(v20);
          swift_release(v46);

          *a8 = v42;
          return;
        }

        swift_release(v20);
        uint64_t v43 = v46;
        goto LABEL_10;
      }

      swift_release(v46);
    }

    uint64_t v43 = v20;
LABEL_10:
    swift_release(v43);
  }

void sub_1004FF1D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = sub_10044350C();
    uint64_t v15 = v14;
    swift_release(v12);
    uint64_t v16 = *a11;
    unint64_t v17 = a11[1];
    *a11 = v13;
    a11[1] = v15;
    sub_10040AD00(v16, v17);
  }

void sub_1004FF3D0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t *a6)
{
  id v10 = [a5 prefixedURI];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  uint64_t v13 = v12;

  uint64_t v14 = (uint64_t)sub_1004E5890(a3, a4, v11, v13, a1);
  swift_bridgeObjectRelease(v13);
  if (!((unint64_t)v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v14);
    if (v15) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v14);
    uint64_t v28 = sub_100438A1C( (uint64_t)_swiftEmptyArrayStorage,  (unint64_t *)&unk_1009BC270,  &OBJC_CLASS___IDSURI_ptr,  (unint64_t *)&unk_1009BAC00,  &qword_1009B9D90);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    uint64_t v29 = *a6;
    *a6 = v28;
    swift_bridgeObjectRelease(v29);
    return;
  }

  if (v14 < 0) {
    uint64_t v27 = v14;
  }
  else {
    uint64_t v27 = v14 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v14);
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v27);
  if (!v15) {
    goto LABEL_18;
  }
LABEL_3:
  if (v15 >= 1)
  {
    for (uint64_t i = 0LL; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001LL) != 0)
      {
        uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
      }

      else
      {
        uint64_t v18 = *(void *)(v14 + 8 * i + 32);
        swift_retain(v18);
      }

      sub_100442FF8();
      uint64_t v20 = v19;
      id v21 = objc_allocWithZone(&OBJC_CLASS___IDSURI);
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v20);
      id v23 = [v21 initWithPrefixedURI:v22];
      swift_release(v18);

      if (v23)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        unint64_t v26 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v25 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v26 >= v25 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1LL);
        }
        uint64_t v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v23);
        specialized Array._endMutation()(v17);
      }
    }

    goto LABEL_18;
  }

  __break(1u);
}

void sub_1004FF648(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t *a6)
{
  id v10 = [a5 rawToken];
  uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
  unint64_t v13 = v12;

  sub_1004E15C0(a3, a4, v11, v13, a1);
  uint64_t v15 = v14;
  sub_100402A84(v11, v13);
  if (!v15) {
    return;
  }
  uint64_t v16 = sub_1004418E0();
  if (!v16)
  {
    swift_release(v15);
    return;
  }

  uint64_t v17 = v16;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 >= 0) {
      uint64_t v30 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v30 = v16;
    }
    swift_bridgeObjectRetain(v16);
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    unint64_t v32 = a6;
    if (v18) {
      goto LABEL_5;
    }
LABEL_22:
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v17);
    swift_release(v15);
    uint64_t v31 = *v32;
    *unint64_t v32 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v31);
    return;
  }

  uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v16);
  unint64_t v32 = a6;
  if (!v18) {
    goto LABEL_22;
  }
LABEL_5:
  if (v18 >= 1)
  {
    for (uint64_t i = 0LL; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001LL) != 0)
      {
        uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
      }

      else
      {
        uint64_t v21 = *(void *)(v17 + 8 * i + 32);
        swift_retain(v21);
      }

      sub_10043E948();
      uint64_t v23 = v22;
      id v24 = objc_allocWithZone(&OBJC_CLASS___IDSURI);
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v23);
      id v26 = [v24 initWithPrefixedURI:v25];
      swift_release(v21);

      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        unint64_t v29 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v28 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v29 >= v28 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1LL);
        }
        uint64_t v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
        specialized Array._endMutation()(v20);
      }
    }

    goto LABEL_22;
  }

  __break(1u);
}

uint64_t sub_1004FFA2C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t a6)
{
  id v10 = [a5 rawToken];
  uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
  unint64_t v13 = v12;

  sub_1004E15C0(a3, a4, v11, v13, a1);
  uint64_t v15 = v14;
  uint64_t result = sub_100402A84(v11, v13);
  if (v15)
  {
    sub_10044152C((uint64_t)v17);
    swift_release(v15);
    sub_10041D378((uint64_t)&v18, (uint64_t)v19, &qword_1009B9EE0);
    sub_100510C8C((uint64_t)v19);
    sub_100510914(v17);
    return sub_100427794((uint64_t)v19, a6, &qword_1009B9EE0);
  }

  return result;
}

void sub_1004FFC08(uint64_t a1, int a2, id a3, os_log_s *a4)
{
  id v8 = [a3 rawToken];
  uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
  unint64_t v11 = v10;

  sub_1004E1F80(v9, v11, a1);
  uint64_t v13 = v12;
  sub_100402A84(v9, v11);
  if (v13)
  {
    sub_10044152C((uint64_t)v42);
    sub_10041D378((uint64_t)&v43, (uint64_t)v52, &qword_1009B9EE0);
    sub_100510C8C((uint64_t)v52);
    sub_100510914(v42);
    sub_10041D378((uint64_t)v52, (uint64_t)v53, &qword_1009B9EE0);
    if (v53[1] >> 60 == 15LL)
    {
      swift_release(v13);
      return;
    }

    os_log_t log = a4;
    sub_10044152C((uint64_t)v44);
    sub_10041D378((uint64_t)&v45, (uint64_t)v51, &qword_1009B9EE0);
    sub_100510C8C((uint64_t)v51);
    sub_100510914(v44);
    sub_10041D378((uint64_t)v51, (uint64_t)v54, &qword_1009B9EE0);
    if (v54[1] >> 60 == 15LL)
    {
      swift_release(v13);
LABEL_8:
      sub_100510CB8((uint64_t)v52);
      return;
    }

    sub_10044152C((uint64_t)v46);
    sub_10041D378((uint64_t)&v47, (uint64_t)v50, &qword_1009B9EE0);
    sub_100510C8C((uint64_t)v50);
    sub_100510914(v46);
    sub_10041D378((uint64_t)v50, (uint64_t)v55, &qword_1009B9EE0);
    if (v55[1] >> 60 == 15LL)
    {
      swift_release(v13);
      sub_100510CB8((uint64_t)v51);
      goto LABEL_8;
    }

    sub_10044152C((uint64_t)v48);
    sub_100510914(v48);
    __int16 v37 = v49;
    sub_10041D3C4(0LL, &qword_1009BC4B0, &OBJC_CLASS___IDSMPPublicLegacyIdentity_ptr);
    sub_100510C8C((uint64_t)v52);
    id v14 = sub_1005109BC();
    uint64_t v15 = v4;
    if (v4)
    {
      sub_100510CB8((uint64_t)v52);
    }

    else
    {
      uint64_t v16 = v14;
      sub_100510CB8((uint64_t)v52);
      sub_10041D3C4(0LL, &qword_1009BC4B8, &OBJC_CLASS___IDSNGMPublicDeviceIdentity_ptr);
      sub_100510C8C((uint64_t)v51);
      sub_100510C8C((uint64_t)v50);
      id v26 = sub_100510A84();
      sub_100510CB8((uint64_t)v50);
      sub_100510CB8((uint64_t)v51);
      uint64_t v27 = (void *)objc_opt_self(&OBJC_CLASS___IDSMPPublicDeviceIdentityContainer);
      id v28 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
      id v29 = v26;
      id v30 = [v28 initWithShort:v37];
      id v41 = 0LL;
      id v31 =  [v27 identityWithLegacyPublicIdentity:v16 ngmPublicDeviceIdentity:v29 ngmVersion:v30 error:&v41];

      id v32 = v41;
      unint64_t v33 = v16;
      if (v31)
      {
        sub_100510CB8((uint64_t)v52);
        sub_100510CB8((uint64_t)v51);
        sub_100510CB8((uint64_t)v50);
        swift_release(v13);

        uint64_t v34 = *(void **)log;
        *(void *)os_log_t log = v31;

        return;
      }

      uint64_t v35 = v32;
      uint64_t v15 = _convertNSErrorToError(_:)(v32);

      swift_willThrow(v36);
    }

    id v17 = a3;
    swift_errorRetain(v15);
    id v18 = v17;
    uint64_t v19 = swift_errorRetain(v15);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t type = v21;
      uint64_t v22 = swift_slowAlloc(22LL, -1LL);
      unint64_t v38 = (void *)swift_slowAlloc(16LL, -1LL);
      *(_DWORD *)uint64_t v22 = 138412546;
      id v41 = v18;
      id v23 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v22 + 4, v22 + 12);
      *unint64_t v38 = v18;

      *(_WORD *)(v22 + 12) = 2112;
      swift_errorRetain(v15);
      id v24 = (void *)_swift_stdlib_bridgeErrorToNSError(v15);
      id v41 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v22 + 14, v22 + 22);
      v38[1] = v24;
      swift_errorRelease(v15);
      swift_errorRelease(v15);
      _os_log_impl( (void *)&_mh_execute_header,  v20,  type,  "Error initializing IDSMPPublicDeviceIdentityContainer for pushToken %@ error: %@",  (uint8_t *)v22,  0x16u);
      uint64_t v25 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v38, 2LL, v25);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
      sub_100510CB8((uint64_t)v52);
      sub_100510CB8((uint64_t)v51);
      sub_100510CB8((uint64_t)v50);
      swift_release(v13);
      swift_errorRelease(v15);
    }

    else
    {
      sub_100510CB8((uint64_t)v52);
      sub_100510CB8((uint64_t)v51);
      sub_100510CB8((uint64_t)v50);
      swift_release(v13);
      swift_errorRelease(v15);

      swift_errorRelease(v15);
      swift_errorRelease(v15);
    }
  }

uint64_t sub_100500284(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t *a6)
{
  id v10 = [a5 prefixedURI];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  uint64_t v13 = v12;

  sub_1004DF32C(a3, a4, v11, v13, a1);
  uint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease(v13);
  if (v15)
  {
    uint64_t v17 = sub_10043EBCC();
    uint64_t v19 = v18;
    swift_release(v15);
    uint64_t v20 = a6[1];
    *a6 = v17;
    a6[1] = v19;
    return swift_bridgeObjectRelease(v20);
  }

  return result;
}

void sub_100500428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v47 = a7;
  uint64_t v48 = a2;
  uint64_t v49 = a4;
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v51 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16, v17);
  unint64_t v50 = (char *)&v46 - v18;
  sub_1003F5CB4(&qword_1009BC130);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23, v24);
  uint64_t v46 = (char *)&v46 - v25;
  id v26 = [a5 prefixedURI];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  uint64_t v29 = v28;

  id v30 = [a6 prefixedURI];
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
  uint64_t v33 = v32;

  uint64_t v34 = (uint64_t)sub_1004E4770(a3, v49, v27, v29, v31, v33, a1);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v33);
  if (!((unint64_t)v34 >> 62))
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v34);
    if (v35) {
      goto LABEL_3;
    }
LABEL_20:
    unint64_t v38 = (char *)_swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease_n(v34, 2LL);
    uint64_t v45 = v46;
    sub_1005007BC((uint64_t)v38, v46);
    swift_bridgeObjectRelease(v38);
    sub_100427794((uint64_t)v45, v47, &qword_1009BC130);
    return;
  }

  if (v34 < 0) {
    uint64_t v44 = v34;
  }
  else {
    uint64_t v44 = v34 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v34);
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter(v44);
  if (!v35) {
    goto LABEL_20;
  }
LABEL_3:
  if (v35 >= 1)
  {
    uint64_t v36 = 0LL;
    unint64_t v37 = v34 & 0xC000000000000001LL;
    unint64_t v38 = (char *)_swiftEmptyArrayStorage;
    uint64_t v49 = v34;
    do
    {
      if (v37)
      {
        uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v34);
      }

      else
      {
        uint64_t v39 = *(void *)(v34 + 8 * v36 + 32);
        swift_retain(v39);
      }

      sub_10044379C(v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0LL, 1LL, v11);
      swift_release(v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v22, 1LL, v11) == 1)
      {
        sub_10040A274((uint64_t)v22, &qword_1009BC130);
      }

      else
      {
        Class v40 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        id v41 = v50;
        v40(v50, v22, v11);
        v40(v51, v41, v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0) {
          unint64_t v38 = (char *)sub_100503C28( 0,  *((void *)v38 + 2) + 1LL,  1,  (unint64_t)v38,  &qword_1009BC498,  (uint64_t (*)(void))&type metadata accessor for Date);
        }
        unint64_t v43 = *((void *)v38 + 2);
        unint64_t v42 = *((void *)v38 + 3);
        if (v43 >= v42 >> 1) {
          unint64_t v38 = (char *)sub_100503C28( v42 > 1,  v43 + 1,  1,  (unint64_t)v38,  &qword_1009BC498,  (uint64_t (*)(void))&type metadata accessor for Date);
        }
        *((void *)v38 + 2) = v43 + 1;
        v40( &v38[((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
             + *(void *)(v12 + 72) * v43],
          v51,
          v11);
        uint64_t v34 = v49;
      }

      ++v36;
    }

    while (v35 != v36);
    goto LABEL_21;
  }

  __break(1u);
}

uint64_t sub_1005007BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  os_log_type_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v14, v15);
  __n128 v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v36 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (!v22)
  {
    __n128 v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v23(v11, 1LL, 1LL, v12);
    goto LABEL_7;
  }

  unint64_t v38 = (*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v41 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v41(v11, a1 + v38, v12);
  uint64_t v39 = a1;
  __n128 v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v23(v11, 0LL, 1LL, v12);
  __n128 v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v24(v11, 1LL, v12) == 1)
  {
LABEL_7:
    sub_10040A274((uint64_t)v11, &qword_1009BC130);
    uint64_t v29 = a2;
    uint64_t v30 = 1LL;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v23)(v29, v30, 1LL, v12);
  }

  unint64_t v37 = a2;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v25(v21, v11, v12);
  __n128 v26 = swift_bridgeObjectRetain(v39);
  uint64_t v27 = v22 - 1;
  if (v27)
  {
    uint64_t v40 = *(void *)(v13 + 72);
    unint64_t v32 = v39 + v40 + v38;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t, __n128))v41)(v7, v32, v12, v26);
      v23(v7, 0LL, 1LL, v12);
      if (v24(v7, 1LL, v12) == 1) {
        break;
      }
      v25(v17, v7, v12);
      uint64_t v33 = sub_10040A2B0( (unint64_t *)&unk_1009BC4A0,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
      char v34 = dispatch thunk of static Comparable.< infix(_:_:)(v17, v21, v12, v33);
      uint64_t v35 = *(void (**)(char *, uint64_t))(v13 + 8);
      if ((v34 & 1) != 0)
      {
        v35(v21, v12);
        v25(v21, v17, v12);
      }

      else
      {
        v35(v17, v12);
      }

      v32 += v40;
      if (!--v27) {
        goto LABEL_4;
      }
    }
  }

  else
  {
LABEL_4:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v23)(v7, 1LL, 1LL, v12, v26);
  }

  swift_bridgeObjectRelease(v39);
  sub_10040A274((uint64_t)v7, &qword_1009BC130);
  uint64_t v28 = v37;
  v25(v37, v21, v12);
  uint64_t v29 = v28;
  uint64_t v30 = 0LL;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v23)(v29, v30, 1LL, v12);
}

void sub_100500C3C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, void *a6, void *a7, void **a8)
{
  id v14 = [a5 prefixedURI];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  uint64_t v17 = v16;

  sub_1004DF32C(a3, a4, v15, v17, a1);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease(v17);
  if (v19)
  {
    unint64_t v43 = a8;
    id v20 = [a6 rawToken];
    uint64_t v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
    unint64_t v23 = v22;

    sub_1004E15C0(a3, a4, v21, v23, a1);
    uint64_t v25 = v24;
    sub_100402A84(v21, v23);
    if (v25)
    {
      uint64_t v42 = v25;
      id v26 = [a7 prefixedURI];
      id v45 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      uint64_t v41 = v27;

      id v28 = [a5 prefixedURI];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      uint64_t v31 = v30;

      id v32 = [a6 rawToken];
      uint64_t v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v32);
      unint64_t v35 = v34;

      sub_1004E3370(a3, a4, (uint64_t)v45, v41, v29, v31, v33, v35, 0, a1);
      unint64_t v37 = v36;
      sub_100402A84(v33, v35);
      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease(v31);
      if (v37)
      {
        id v38 = sub_10050C768(v19, v42, v37);
        swift_release(v37);
        swift_release(v42);
        swift_release(v19);
        uint64_t v39 = *v43;
        *unint64_t v43 = v38;

        return;
      }

      swift_release(v19);
      uint64_t v40 = v42;
    }

    else
    {
      uint64_t v40 = v19;
    }

    swift_release(v40);
  }

uint64_t sub_100500F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (uint64_t)sub_1004E5618(a3, a4, a1);
  uint64_t v31 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0) {
      result &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(result);
    uint64_t v5 = result;
    if (!result) {
      return swift_bridgeObjectRelease(v31);
    }
  }

  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v5) {
      return swift_bridgeObjectRelease(v31);
    }
  }

  if (v5 >= 1)
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = v31 & 0xC000000000000001LL;
    __n128 v8 = &IMInsertBoolsToXPCDictionary_ptr;
    __n128 v9 = &selRef_handleRegistrationSMSDeliveryFailed;
    do
    {
      if (v7)
      {
        uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v31);
      }

      else
      {
        uint64_t v10 = *(void *)(v31 + 8 * v6 + 32);
        swift_retain(v10);
      }

      sub_100442D74();
      uint64_t v12 = v11;
      id v13 = objc_allocWithZone((Class)v8[416]);
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
      id v15 = objc_msgSend(v13, v9[495], v14);

      if (v15)
      {
        sub_100442FF8();
        uint64_t v17 = v16;
        id v18 = objc_allocWithZone((Class)v8[416]);
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v17);
        id v20 = objc_msgSend(v18, v9[495], v19);

        if (v20)
        {
          uint64_t v21 = v5;
          unint64_t v22 = v7;
          sub_100442AF0();
          uint64_t v24 = v23;
          id v25 = objc_allocWithZone((Class)&OBJC_CLASS___IDSPeerIDKey);
          id v26 = v15;
          id v27 = v20;
          NSString v28 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v24);
          id v29 = [v25 initWithService:v28 fromURI:v26 toURI:v27];

          if (v29)
          {
            id v30 = v29;
            sub_100433318((Swift::Int *)&v32, v30, &qword_1009BC3B0, off_1008F3918, &qword_1009BC490);

            swift_release(v10);
          }

          else
          {
            swift_release(v10);
          }

          unint64_t v7 = v22;
          uint64_t v5 = v21;
          __n128 v8 = &IMInsertBoolsToXPCDictionary_ptr;
          __n128 v9 = &selRef_handleRegistrationSMSDeliveryFailed;
        }

        else
        {

          swift_release(v10);
          __n128 v9 = &selRef_handleRegistrationSMSDeliveryFailed;
        }
      }

      else
      {
        swift_release(v10);
      }

      ++v6;
    }

    while (v5 != v6);
    return swift_bridgeObjectRelease(v31);
  }

  __break(1u);
  return result;
}

uint64_t sub_100501338(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5)
{
  id v8 = [a5 prefixedURI];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v11 = v10;

  uint64_t v12 = (uint64_t)sub_1004E4F8C(a3, a4, v9, v11, a1);
  uint64_t result = swift_bridgeObjectRelease(v11);
  uint64_t v41 = v12;
  if (!((unint64_t)v12 >> 62))
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v14) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease(v41);
  }

  if (v12 < 0) {
    uint64_t v40 = v12;
  }
  else {
    uint64_t v40 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v12);
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v40);
  uint64_t result = swift_bridgeObjectRelease(v12);
  if (!v14) {
    return swift_bridgeObjectRelease(v41);
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v15 = 0LL;
    unint64_t v16 = v12 & 0xC000000000000001LL;
    uint64_t v17 = &IMInsertBoolsToXPCDictionary_ptr;
    id v18 = &selRef_handleRegistrationSMSDeliveryFailed;
    do
    {
      if (v16)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v41);
      }

      else
      {
        uint64_t v19 = *(void *)(v41 + 8 * v15 + 32);
        swift_retain(v19);
      }

      sub_100442D74();
      uint64_t v21 = v20;
      id v22 = objc_allocWithZone((Class)v17[416]);
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
      id v24 = objc_msgSend(v22, v18[495], v23);

      if (v24)
      {
        sub_100442FF8();
        uint64_t v26 = v25;
        id v27 = objc_allocWithZone((Class)v17[416]);
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26);
        id v29 = objc_msgSend(v27, v18[495], v28);

        if (v29)
        {
          uint64_t v30 = v14;
          unint64_t v31 = v16;
          sub_100442AF0();
          uint64_t v33 = v32;
          id v34 = objc_allocWithZone((Class)&OBJC_CLASS___IDSPeerIDKey);
          id v35 = v24;
          id v36 = v29;
          NSString v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v33);
          id v38 = [v34 initWithService:v37 fromURI:v35 toURI:v36];

          if (v38)
          {
            id v39 = v38;
            sub_100433318((Swift::Int *)&v42, v39, &qword_1009BC3B0, off_1008F3918, &qword_1009BC490);

            swift_release(v19);
          }

          else
          {
            swift_release(v19);
          }

          unint64_t v16 = v31;
          uint64_t v14 = v30;
          uint64_t v17 = &IMInsertBoolsToXPCDictionary_ptr;
          id v18 = &selRef_handleRegistrationSMSDeliveryFailed;
        }

        else
        {

          swift_release(v19);
          id v18 = &selRef_handleRegistrationSMSDeliveryFailed;
        }
      }

      else
      {
        swift_release(v19);
      }

      ++v15;
    }

    while (v14 != v15);
    return swift_bridgeObjectRelease(v41);
  }

  __break(1u);
  return result;
}

Class sub_100501660( void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t *a6, void *a7, unint64_t *a8)
{
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  uint64_t v16 = v15;
  uint64_t v26 = &_swiftEmptySetSingleton;
  v25[2] = a1;
  v25[3] = v14;
  v25[4] = v15;
  v25[5] = a4;
  v25[6] = &v26;
  uint64_t v17 = *(void (**)(void, uint64_t, void *))((swift_isaMask & *a1) + 0xE8LL);
  id v18 = a4;
  uint64_t v19 = a1;
  v17(0LL, a5, v25);
  uint64_t v20 = v26;
  swift_bridgeObjectRetain(v26);
  id v22 = sub_100504048(v21, a6, a7, a8);

  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease_n(v20, 2LL);
  sub_10041D3C4(0LL, a6, a7);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_release(v22);
  return isa;
}

uint64_t sub_100501788(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_1004F0674(a1, (uint64_t)sub_10050D558);
  uint64_t v28 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0) {
      result &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(result);
    uint64_t v2 = result;
    if (!result) {
      return swift_bridgeObjectRelease(v28);
    }
  }

  else
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v2) {
      return swift_bridgeObjectRelease(v28);
    }
  }

  if (v2 >= 1)
  {
    uint64_t v3 = 0LL;
    unint64_t v4 = v28 & 0xC000000000000001LL;
    uint64_t v5 = &IMInsertBoolsToXPCDictionary_ptr;
    uint64_t v6 = &selRef_handleRegistrationSMSDeliveryFailed;
    do
    {
      if (v4)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v28);
      }

      else
      {
        uint64_t v7 = *(void *)(v28 + 8 * v3 + 32);
        swift_retain(v7);
      }

      sub_100442D74();
      uint64_t v9 = v8;
      id v10 = objc_allocWithZone((Class)v5[416]);
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v9);
      id v12 = objc_msgSend(v10, v6[495], v11);

      if (v12)
      {
        sub_100442FF8();
        uint64_t v14 = v13;
        id v15 = objc_allocWithZone((Class)v5[416]);
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v14);
        id v17 = objc_msgSend(v15, v6[495], v16);

        if (v17)
        {
          uint64_t v18 = v2;
          unint64_t v19 = v4;
          sub_100442AF0();
          uint64_t v21 = v20;
          id v22 = objc_allocWithZone((Class)&OBJC_CLASS___IDSPeerIDKey);
          id v23 = v12;
          id v24 = v17;
          NSString v25 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v21);
          id v26 = [v22 initWithService:v25 fromURI:v23 toURI:v24];

          if (v26)
          {
            id v27 = v26;
            sub_100433318((Swift::Int *)&v29, v27, &qword_1009BC3B0, off_1008F3918, &qword_1009BC490);

            swift_release(v7);
          }

          else
          {
            swift_release(v7);
          }

          unint64_t v4 = v19;
          uint64_t v2 = v18;
          uint64_t v5 = &IMInsertBoolsToXPCDictionary_ptr;
          uint64_t v6 = &selRef_handleRegistrationSMSDeliveryFailed;
        }

        else
        {

          swift_release(v7);
          uint64_t v6 = &selRef_handleRegistrationSMSDeliveryFailed;
        }
      }

      else
      {
        swift_release(v7);
      }

      ++v3;
    }

    while (v2 != v3);
    return swift_bridgeObjectRelease(v28);
  }

  __break(1u);
  return result;
}

uint64_t sub_100501B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::String v164 = (id *)((char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v9, v10);
  v163 = (id *)((char *)&v133 - v11);
  uint64_t v135 = a1;
  uint64_t v136 = a2;
  uint64_t v12 = (uint64_t)sub_1004F0674(a1, (uint64_t)sub_10050D558);
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (v13)
  {
    while (1)
    {
      uint64_t v134 = (Swift::Int *)a3;
      unint64_t v14 = 0LL;
      unint64_t v166 = v12 & 0xC000000000000001LL;
      uint64_t v138 = v12 & 0xFFFFFFFFFFFFFF8LL;
      uint64_t v137 = v12 + 32;
      id v15 = &IMInsertBoolsToXPCDictionary_ptr;
      NSString v16 = &selRef_handleRegistrationSMSDeliveryFailed;
      uint64_t v141 = v12;
      uint64_t v165 = v13;
      while (1)
      {
        while (1)
        {
          if (v166)
          {
            uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
            BOOL v18 = __OFADD__(v14, 1LL);
            unint64_t v19 = v14 + 1;
            if (v18) {
              goto LABEL_62;
            }
          }

          else
          {
            if (v14 >= *(void *)(v138 + 16)) {
              goto LABEL_63;
            }
            uint64_t v17 = *(void *)(v137 + 8 * v14);
            swift_retain(v17);
            BOOL v18 = __OFADD__(v14, 1LL);
            unint64_t v19 = v14 + 1;
            if (v18)
            {
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
          }

          unint64_t v173 = v19;
          a3 = sub_100442AF0();
          uint64_t v21 = v20;
          sub_100442D74();
          uint64_t v23 = v22;
          id v24 = objc_allocWithZone((Class)v15[416]);
          NSString v25 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v23);
          id v26 = objc_msgSend(v24, v16[495], v25);

          if (!v26)
          {
            swift_bridgeObjectRelease(v21);
            swift_release(v17);
            goto LABEL_5;
          }

          sub_100442FF8();
          uint64_t v28 = v27;
          id v29 = objc_allocWithZone((Class)v15[416]);
          NSString v30 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v28);
          id v31 = objc_msgSend(v29, v16[495], v30);

          if (v31) {
            break;
          }

          swift_bridgeObjectRelease(v21);
          swift_release(v17);
          unint64_t v14 = v173;
          id v15 = &IMInsertBoolsToXPCDictionary_ptr;
          if (v173 == v165) {
            return swift_bridgeObjectRelease(v12);
          }
        }

        uint64_t v168 = v17;
        id v32 = objc_allocWithZone((Class)&OBJC_CLASS___IDSPeerIDKey);
        swift_bridgeObjectRetain(v21);
        id v33 = v26;
        id v34 = v31;
        NSString v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v21);
        id v36 = [v32 initWithService:v35 fromURI:v33 toURI:v34];

        NSString v37 = v34;
        id v15 = &IMInsertBoolsToXPCDictionary_ptr;
        if (!v36)
        {
          swift_release(v168);
          swift_bridgeObjectRelease(v21);

          goto LABEL_5;
        }

        id v139 = v37;
        id v140 = v33;
        uint64_t v38 = v168;
        uint64_t v39 = sub_100442FF8();
        uint64_t v41 = v40;
        sub_1004DF32C(a3, v21, v39, v40, v135);
        uint64_t v43 = v42;
        swift_bridgeObjectRelease(v41);
        swift_bridgeObjectRelease(v21);
        if (!v43)
        {

          uint64_t v110 = v38;
LABEL_48:
          swift_release(v110);

          goto LABEL_5;
        }

        uint64_t v44 = type metadata accessor for ArchiveHelper();
        uint64_t v45 = sub_10041D3C4(0LL, &qword_1009BC468, &OBJC_CLASS___IDSQueryKeyTransparencyContext_ptr);
        a3 = sub_10043F144();
        unint64_t v47 = v46;
        uint64_t v48 = (void *)sub_10040AB44(v45, a3, v46, v45);
        sub_10040AD00(a3, v47);
        if (!v48)
        {
          swift_release(v43);

          uint64_t v110 = v168;
          goto LABEL_48;
        }

        id v133 = v48;
        unint64_t v176 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v49 = sub_10043F574();
        if (v49) {
          uint64_t v50 = v49;
        }
        else {
          uint64_t v50 = (uint64_t)_swiftEmptyArrayStorage;
        }
        if (!((unint64_t)v50 >> 62))
        {
          a3 = *(void *)((v50 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          if (a3) {
            break;
          }
          goto LABEL_53;
        }

        uint64_t v112 = v50 < 0 ? v50 : v50 & 0xFFFFFFFFFFFFFF8LL;
        swift_bridgeObjectRetain(v50);
        a3 = _CocoaArrayWrapper.endIndex.getter(v112);
        swift_bridgeObjectRelease(v50);
        if (a3) {
          break;
        }
LABEL_53:
        swift_bridgeObjectRelease(v50);
        uint64_t v111 = _swiftEmptyArrayStorage;
LABEL_54:
        id v113 = objc_allocWithZone((Class)&OBJC_CLASS___IDSPeerIDValue);
        sub_10041D3C4(0LL, (unint64_t *)&unk_1009BC3D0, &OBJC_CLASS___IDSEndpoint_ptr);
        id v114 = v133;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v111);
        a3 = (uint64_t)[v113 initWithEndpoints:isa keyTransparencyContext:v114];

        Swift::Int v116 = *v134;
        if ((*v134 & 0xC000000000000001LL) != 0)
        {
          if (v116 >= 0) {
            v116 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          id v117 = v36;
          id v118 = (id)a3;
          uint64_t v119 = __CocoaDictionary.count.getter(v116);
          uint64_t v120 = v168;
          if (__OFADD__(v119, 1LL)) {
            goto LABEL_65;
          }
          Swift::Int v116 = sub_100508DF8(v116, v119 + 1);
          uint64_t v121 = v134;
          *uint64_t v134 = v116;
        }

        else
        {
          id v122 = v36;
          id v123 = (id)a3;
          uint64_t v120 = v168;
          uint64_t v121 = v134;
        }

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v116);
        Swift::Int v175 = *v121;
        *uint64_t v121 = 0x8000000000000000LL;
        sub_100509DC4(a3, v36, isUniquelyReferenced_nonNull_native);
        Swift::Int v125 = *v121;
        *uint64_t v121 = v175;
        swift_release(v43);
        swift_release(v120);

        swift_bridgeObjectRelease(v125);
LABEL_5:
        unint64_t v14 = v173;
        if (v173 == v165) {
          return swift_bridgeObjectRelease(v12);
        }
      }

      if (a3 >= 1) {
        break;
      }
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      if (v12 < 0) {
        uint64_t v126 = v12;
      }
      else {
        uint64_t v126 = v12 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v126);
      if (!v13) {
        return swift_bridgeObjectRelease(v12);
      }
    }

    uint64_t v51 = 0LL;
    unint64_t v172 = v50 & 0xC000000000000001LL;
    uint64_t v143 = v44;
    uint64_t v171 = v50;
    uint64_t v170 = a3;
    id v142 = v36;
    uint64_t v174 = v43;
    while (1)
    {
      if (v172)
      {
        uint64_t v52 = specialized _ArrayBuffer._getElementSlowPath(_:)(v51, v50);
      }

      else
      {
        uint64_t v52 = *(void *)(v50 + 8 * v51 + 32);
        swift_retain(v52);
      }

      sub_10043E948();
      uint64_t v54 = v53;
      sub_10043E6C4();
      uint64_t v56 = v55;
      id v57 = objc_allocWithZone((Class)v15[416]);
      NSString v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v54);
      NSString v59 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v56);
      id v60 = [v57 initWithPrefixedURI:v58 withServiceLoggingHint:v59];

      if (v60)
      {
        uint64_t v61 = sub_10044026C();
        unint64_t v63 = v62;
        id v64 = objc_allocWithZone(&OBJC_CLASS___IDSPushToken);
        Class v65 = Data._bridgeToObjectiveC()().super.isa;
        id v66 = [v64 initWithData:v65];
        sub_100402A84(v61, v63);

        if (v66)
        {
          id v169 = v60;
          uint64_t v67 = sub_10041D3C4(0LL, &qword_1009BC470, &OBJC_CLASS___IDSEndpointCapabilities_ptr);
          uint64_t v68 = sub_1004404FC();
          unint64_t v70 = v69;
          uint64_t v71 = sub_10040AB44(v67, v68, v69, v67);
          sub_100402A84(v68, v70);
          if (v71)
          {
            os_log_type_t v161 = (void *)v71;
            uint64_t v72 = sub_10041D3C4(0LL, &qword_1009BC478, &OBJC_CLASS___IDSFamilyEndpointData_ptr);
            uint64_t v73 = sub_10044144C();
            unint64_t v75 = v74;
            uint64_t v160 = (void *)sub_10040AB44(v72, v73, v74, v72);
            sub_10040AD00(v73, v75);
            uint64_t v76 = sub_10041D3C4(0LL, &qword_1009BC480, &OBJC_CLASS___IDSGameCenterData_ptr);
            uint64_t v77 = sub_100441180();
            unint64_t v79 = v78;
            id v167 = (id)sub_10040AB44(v76, v77, v78, v76);
            sub_10040AD00(v77, v79);
            sub_10044152C((uint64_t)&v177);
            id v80 = [objc_allocWithZone(IDSEndpointURIProperties) init];
            sub_10043EBCC();
            if (v81)
            {
              uint64_t v82 = v81;
              NSString v83 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v82);
              [v80 setSenderCorrelationIdentifier:v83];
            }

            id v162 = v66;
            sub_10043EE88();
            if (v84)
            {
              uint64_t v85 = v84;
              NSString v86 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v85);
              [v80 setShortHandle:v86];
            }

            uint64_t v157 = v177;
            unint64_t v156 = v178;
            uint64_t v87 = v179;
            unint64_t v88 = v180;
            uint64_t v155 = v179;
            unint64_t v154 = v180;
            int v159 = v182;
            int v158 = v181;
            sub_100439780(v177, v178);
            sub_100439780(v87, v88);
            int v152 = sub_10044078C();
            int v151 = sub_1004409F4();
            uint64_t v150 = sub_10044350C();
            uint64_t v149 = v89;
            sub_10044379C(v163);
            sub_100443A98(v164);
            uint64_t v148 = sub_100440C5C();
            uint64_t v147 = v90;
            int v145 = sub_100440F18();
            unint64_t v91 = v184;
            uint64_t v144 = v183;
            sub_100439780(v183, v184);
            double v92 = sub_100443D94();
            uint64_t v93 = v185;
            unint64_t v94 = v186;
            uint64_t v95 = v187;
            unint64_t v96 = v188;
            uint64_t v98 = v189;
            unint64_t v97 = v190;
            id v146 = objc_allocWithZone(&OBJC_CLASS___IDSEndpoint);
            sub_100439780(v93, v94);
            sub_100439780(v95, v96);
            sub_100439780(v98, v97);
            uint64_t v153 = v52;
            uint64_t v99 = v160;
            uint64_t v131 = v98;
            unint64_t v132 = v97;
            uint64_t v130 = v95;
            unint64_t v129 = v94;
            unint64_t v128 = v91;
            unint64_t v100 = v149;
            uint64_t v101 = v150;
            uint64_t v102 = v162;
            id v103 = v169;
            uint64_t v104 = v161;
            id v105 = sub_10050C44C( (uint64_t)v169,  (uint64_t)v161,  v158,  v159,  v157,  v156,  v155,  v154,  v92,  v152 & 1,  v151 & 1,  (uint64_t)v162,  v150,  v149,  (uint64_t)v163,  (uint64_t)v164,  v148,  v147,  v145 & 1,  v144,  v128,  v93,  v129,  v130,  v96,  v131,  v132,  (uint64_t)v80,  (uint64_t)v160,  (uint64_t)v167);

            sub_100402A84(v101, v100);
            sub_100510914(&v177);
            id v106 = v105;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v106);
            unint64_t v108 = *(void *)((v176 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
            unint64_t v107 = *(void *)((v176 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
            if (v108 >= v107 >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v107 > 1, v108 + 1, 1LL);
            }
            uint64_t v109 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v108, v106);
            specialized Array._endMutation()(v109);
            swift_release(v153);

            uint64_t v12 = v141;
            id v15 = &IMInsertBoolsToXPCDictionary_ptr;
            NSString v16 = &selRef_handleRegistrationSMSDeliveryFailed;
            id v36 = v142;
            goto LABEL_26;
          }

          swift_release(v52);
        }

        else
        {
          swift_release(v52);
        }
      }

      else
      {
        swift_release(v52);
      }

      id v15 = &IMInsertBoolsToXPCDictionary_ptr;
      NSString v16 = &selRef_handleRegistrationSMSDeliveryFailed;
LABEL_26:
      uint64_t v43 = v174;
      uint64_t v50 = v171;
      if (v170 == ++v51)
      {
        swift_bridgeObjectRelease(v171);
        uint64_t v111 = (void *)v176;
        goto LABEL_54;
      }
    }
  }

  return swift_bridgeObjectRelease(v12);
}

id sub_1005028EC(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = &v9;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v2) + 0xE8LL))( 0LL,  sub_10050FF8C,  v8);
  uint64_t v3 = v10;
  if (!v10) {
    return 0LL;
  }
  id v4 = objc_allocWithZone(&OBJC_CLASS___IDSURI);
  swift_bridgeObjectRetain(v3);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  id v6 = [v4 initWithPrefixedURI:v5];
  swift_bridgeObjectRelease(v3);

  return v6;
}

uint64_t sub_100502B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v36 = a4;
  sub_1003F5CB4(&qword_1009BC3F8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_1003F5CB4((uint64_t *)&unk_1009BC400);
  uint64_t v10 = *(void *)(v37 - 8);
  __chkstk_darwin(v11, v12);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1003F5CB4(&qword_1009BC2E0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v21 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0LL);
  uint64_t v42 = v21;
  Predicate.init(_:)(sub_10051090C, v39, 1LL, &v42);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v9, v20, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0LL, 1LL, v15);
  uint64_t v22 = sub_10040A2B0( &qword_1009B9FA0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle,  (uint64_t)&unk_10071A388);
  FetchDescriptor.init(predicate:sortBy:)(v9, _swiftEmptyArrayStorage, v21, v22);
  uint64_t v23 = v38;
  uint64_t v24 = dispatch thunk of ModelContext.fetch<A>(_:)(v14, v21, v22);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v37);
  if (v23) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  }
  uint64_t v26 = v15;
  uint64_t v27 = v36;
  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0) {
      uint64_t v32 = v24;
    }
    else {
      uint64_t v32 = v24 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v24);
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    uint64_t result = swift_bridgeObjectRelease(v24);
    if (v33) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease(v24);
    uint64_t v29 = 0LL;
    uint64_t v31 = 0LL;
    goto LABEL_14;
  }

  if (!*(void *)((v24 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v24 & 0xC000000000000001LL) != 0)
  {
    uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v24);
  }

  else
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      return result;
    }

    uint64_t v28 = *(void *)(v24 + 32);
    swift_retain(v28);
  }

  swift_bridgeObjectRelease(v24);
  uint64_t v29 = sub_10044552C();
  uint64_t v31 = v30;
  swift_release(v28);
LABEL_14:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v26);
  uint64_t v34 = v27[1];
  *uint64_t v27 = v29;
  v27[1] = v31;
  return swift_bridgeObjectRelease(v34);
}

uint64_t sub_100502DD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v6 = sub_1003F5CB4(&qword_1009BC410);
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1003F5CB4(&qword_1009BC418);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1003F5CB4(&qword_1009BC420);
  uint64_t v30 = *(void *)(v17 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = *a1;
  uint64_t v23 = sub_10047E23C( &qword_1009BC428,  &qword_1009BC418,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v22, v11, v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D740);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v16, KeyPath, v11, v23);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  v32[0] = v28;
  v32[1] = v29;
  static PredicateExpressions.build_Arg<A>(_:)(v32, &type metadata for String);
  a4[3] = sub_1003F5CB4(&qword_1009BC430);
  a4[4] = sub_100510860();
  sub_10040B2A8(a4);
  uint64_t v25 = sub_10047E23C( &qword_1009BC458,  &qword_1009BC420,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v26 = sub_10047E23C( &qword_1009BC460,  &qword_1009BC410,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v21,  v10,  v17,  v6,  v25,  v26,  &protocol witness table for String);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v17);
}

uint64_t sub_100503084(void *a1)
{
  uint64_t v3 = sub_1003F5CB4(&qword_1009BC2E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v5, v6);
  __n128 v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  id v9 = [a1 prefixedURI];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  uint64_t v12 = v11;

  uint64_t v19 = v10;
  uint64_t v20 = v12;
  uint64_t v22 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0LL);
  Predicate.init(_:)(sub_10050FFA8, v18, 1LL, &v22);
  swift_bridgeObjectRelease(v12);
  v21[0] = 0LL;
  v21[1] = 0LL;
  uint64_t v16 = v8;
  uint64_t v17 = v21;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v1) + 0xE8LL))( 0LL,  sub_10050FFB0,  v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  return v21[0];
}

uint64_t sub_100503304@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v6 = sub_1003F5CB4(&qword_1009BC410);
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1003F5CB4(&qword_1009BC418);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1003F5CB4(&qword_1009BC420);
  uint64_t v30 = *(void *)(v17 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = *a1;
  uint64_t v23 = sub_10047E23C( &qword_1009BC428,  &qword_1009BC418,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v22, v11, v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_10071D718);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v16, KeyPath, v11, v23);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  v32[0] = v28;
  v32[1] = v29;
  static PredicateExpressions.build_Arg<A>(_:)(v32, &type metadata for String);
  a4[3] = sub_1003F5CB4(&qword_1009BC430);
  a4[4] = sub_100510860();
  sub_10040B2A8(a4);
  uint64_t v25 = sub_10047E23C( &qword_1009BC458,  &qword_1009BC420,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v26 = sub_10047E23C( &qword_1009BC460,  &qword_1009BC410,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)( v21,  v10,  v17,  v6,  v25,  v26,  &protocol witness table for String);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v17);
}

uint64_t sub_100503554(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v30 = a3;
  sub_1003F5CB4(&qword_1009BC3F8);
  __chkstk_darwin(v5, v6);
  __n128 v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1003F5CB4((uint64_t *)&unk_1009BC400);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v11, v12);
  __n128 v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1003F5CB4(&qword_1009BC2E0);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v8, a2, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0LL, 1LL, v15);
  uint64_t v17 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0LL);
  uint64_t v18 = sub_10040A2B0( &qword_1009B9FA0,  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle,  (uint64_t)&unk_10071A388);
  FetchDescriptor.init(predicate:sortBy:)(v8, _swiftEmptyArrayStorage, v17, v18);
  uint64_t v19 = dispatch thunk of ModelContext.fetch<A>(_:)(v14, v17, v18);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  if (!v3)
  {
    uint64_t v21 = v30;
    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0) {
        uint64_t v26 = v19;
      }
      else {
        uint64_t v26 = v19 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v19);
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v26);
      uint64_t result = swift_bridgeObjectRelease(v19);
      if (v27) {
        goto LABEL_4;
      }
    }

    else if (*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
LABEL_4:
      if ((v19 & 0xC000000000000001LL) != 0)
      {
        uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v19);
      }

      else
      {
        if (!*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10))
        {
          __break(1u);
          return result;
        }

        uint64_t v22 = *(void *)(v19 + 32);
        swift_retain(v22);
      }

      swift_bridgeObjectRelease(v19);
      uint64_t v23 = sub_1004457B0();
      uint64_t v25 = v24;
      swift_release(v22);
      goto LABEL_13;
    }

    swift_bridgeObjectRelease(v19);
    uint64_t v23 = 0LL;
    uint64_t v25 = 0LL;
LABEL_13:
    uint64_t v28 = v21[1];
    *uint64_t v21 = v23;
    v21[1] = v25;
    return swift_bridgeObjectRelease(v28);
  }

  return result;
}

uint64_t *sub_100503804@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2 = *result;
  *a2 = v2;
  return result;
}

void sub_10050381C(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_10050388C()
{
  if (!*(_BYTE *)(v0
                 + OBJC_IVAR____TtC17identityservicesdP33_534A9A00092BF767A56A700BAD85BE0F19ContainerLoadMetric_containerType))
    return sub_10045C238((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v1 = sub_1003F5CB4(&qword_1009BB080);
  uint64_t inited = swift_initStackObject(v1, v4);
  *(_OWORD *)(inited + 16) = xmmword_1007184C0;
  strcpy((char *)(inited + 32), "containerType");
  *(_WORD *)(inited + 46) = -4864;
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  return sub_10045C238(inited);
}

id sub_1005039B0(uint64_t a1)
{
  return sub_1005039BC(a1, type metadata accessor for ContainerLoadMetric);
}

id sub_1005039BC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1005039EC(uint64_t result)
{
  unint64_t v2 = *(void *)((*v1 & 0xFFFFFFFFFFFFF8LL) + 0x18);
  return result;
}

uint64_t sub_100503A18(char a1, int64_t a2, char a3, unint64_t a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_1003F5CB4(&qword_1009BCAE0);
  uint64_t v11 = *(void *)(sub_1003F5CB4(&qword_1009BCAD8) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12) {
    goto LABEL_29;
  }
  if (v16 - v14 == 0x8000000000000000LL && v12 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = sub_1003F5CB4(&qword_1009BCAD8);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    unint64_t v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(void *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }

    else if (v15 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }

    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    sub_10050DE10(0LL, v8, v21, a4);
  }

  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

uint64_t sub_100503C28( char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if ((a3 & 1) != 0)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v10 = a2;
  }

  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v13 = sub_1003F5CB4(a5);
  uint64_t v14 = *(void *)(a6(0LL) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 32) & ~v16;
  uint64_t v18 = (void *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  size_t v19 = j__malloc_size(v18);
  if (!v15) {
    goto LABEL_29;
  }
  if (v19 - v17 == 0x8000000000000000LL && v15 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  uint64_t v21 = a6(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v18 + v23;
  if ((a1 & 1) != 0)
  {
    unint64_t v25 = a4 + v23;
    if ((unint64_t)v18 < a4 || v24 >= v25 + *(void *)(v22 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v23, v25, v11, v21);
    }

    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v23);
    }

    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    sub_100510B74(0LL, v11, v24, a4, a6);
  }

  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t type metadata accessor for SDPersistenceManager(uint64_t a1)
{
  uint64_t result = qword_1009C7028;
  if (!qword_1009C7028) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDPersistenceManager);
  }
  return result;
}

void *sub_100503E70(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      objc_super v4 = &_swiftEmptyArrayStorage;
    }

    else
    {
      uint64_t v3 = sub_1003F5CB4((uint64_t *)&unk_1009BABF0);
      objc_super v4 = (void *)swift_allocObject(v3, 8 * v2 + 32, 7LL);
      int64_t v5 = j__malloc_size(v4);
      uint64_t v6 = v5 - 32;
      if (v5 < 32) {
        uint64_t v6 = v5 - 25;
      }
      v4[2] = v2;
      v4[3] = (2 * (v6 >> 3)) | 1;
    }

    swift_bridgeObjectRetain(v1);
    uint64_t v7 = sub_100509FEC((unint64_t)(v4 + 4), v2, v1);
    uint64_t v1 = v8;
    swift_bridgeObjectRelease(v7);
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    if (v1 < 0) {
      uint64_t v9 = v1;
    }
    else {
      uint64_t v9 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v1);
    if (!v2) {
      return &_swiftEmptyArrayStorage;
    }
  }

  return v4;
}

uint64_t *sub_100503F64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = sub_1003F5CB4((uint64_t *)&unk_1009BB520);
  objc_super v4 = (uint64_t *)swift_allocObject(v3, 16 * v1 + 32, 7LL);
  int64_t v5 = j__malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  uint64_t v7 = sub_10050A220((uint64_t)&v10, v4 + 4, v1, a1);
  uint64_t v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_10041D3BC(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }

  return v4;
}

uint64_t **sub_100504048(uint64_t a1, unint64_t *a2, void *a3, unint64_t *a4)
{
  uint64_t v7 = a1;
  if ((a1 & 0xC000000000000001LL) == 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
    return (uint64_t **)_swiftEmptyArrayStorage;
  }

  if (a1 >= 0) {
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  uint64_t v8 = __CocoaSet.count.getter(a1);
  if (!v8) {
    return (uint64_t **)_swiftEmptyArrayStorage;
  }
LABEL_5:
  if (v8 <= 0)
  {
    uint64_t v10 = (uint64_t **)_swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v9 = sub_1003F5CB4((uint64_t *)&unk_1009BABF0);
    uint64_t v10 = (uint64_t **)swift_allocObject(v9, 8 * v8 + 32, 7LL);
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = (uint64_t *)v8;
    v10[3] = (uint64_t *)((2 * (v12 >> 3)) | 1);
  }

  swift_bridgeObjectRetain(v7);
  uint64_t v13 = sub_10050A41C(&v15, v10 + 4, v8, v7, a2, a3, a4);
  uint64_t result = (uint64_t **)sub_10041D3BC(v15);
  __break(1u);
  return result;
}

uint64_t sub_100504168(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005041BC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100504184(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10050439C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1005041A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005046EC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1005041BC(char a1, int64_t a2, char a3, void *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_1003F5CB4(&qword_1009BCF18);
  uint64_t v11 = *(void *)(type metadata accessor for URL(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }

  if (v16 - v14 == 0x8000000000000000LL && v12 == -1) {
    goto LABEL_34;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = type metadata accessor for URL(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v15 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }

    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21);
    }

    a4[2] = 0LL;
    goto LABEL_32;
  }

  uint64_t v23 = *(void *)(v19 + 72) * v8;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }

uint64_t sub_10050439C(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_32;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1003F5CB4((uint64_t *)&unk_1009BB520);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
    goto LABEL_30;
  }

  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }

uint64_t sub_100504504(char a1, int64_t a2, char a3, void *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_1003F5CB4(&qword_1009BCAE0);
  uint64_t v11 = *(void *)(sub_1003F5CB4(&qword_1009BCAD8) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }

  if (v16 - v14 == 0x8000000000000000LL && v12 == -1) {
    goto LABEL_34;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = sub_1003F5CB4(&qword_1009BCAD8);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v15 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }

    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21);
    }

    a4[2] = 0LL;
    goto LABEL_32;
  }

  uint64_t v23 = *(void *)(v19 + 72) * v8;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }

uint64_t sub_1005046EC(char a1, int64_t a2, char a3, void *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_32;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1003F5CB4(&qword_1009BC8E0);
    uint64_t v11 = (void *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 1;
    }
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 5);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  unint64_t v14 = (unint64_t)(v11 + 4);
  unint64_t v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 32 * v8) {
      memmove(v11 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0LL;
    goto LABEL_30;
  }

  if (v15 >= v14 + 32 * v8 || v14 >= v15 + 32 * v8)
  {
    sub_1003F5CB4(&qword_1009BC8E8);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }

unint64_t sub_100504874(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_1005048C0(a1, v4, &qword_1009BC3B0, off_1008F3918);
}

unint64_t sub_1005048C0(uint64_t a1, uint64_t a2, unint64_t *a3, void *a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1LL << *(_BYTE *)(v4 + 32);
  unint64_t i = a2 & ~v6;
  if (((*(void *)(v4 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0)
  {
    sub_10041D3C4(0LL, a3, a4);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * i);
    char v10 = static NSObject.== infix(_:_:)(v9, a1);

    if ((v10 & 1) == 0)
    {
      uint64_t v11 = ~v6;
      for (unint64_t i = (i + 1) & v11; ((*(void *)(v5 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0; unint64_t i = (i + 1) & v11)
      {
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * i);
        char v13 = static NSObject.== infix(_:_:)(v12, a1);

        if ((v13 & 1) != 0) {
          break;
        }
      }
    }
  }

  return i;
}

Swift::Int sub_1005049D0(void *a1)
{
  uint64_t v2 = *(void *)(sub_1003F5CB4(&qword_1009BCAD8) - 8);
  uint64_t v3 = (void *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    uint64_t v3 = (void *)sub_10050A1F8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100506D64(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_100504A54(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_10050A20C(v2);
    *a1 = v2;
  }

  uint64_t v4 = *(void *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  Swift::Int v5 = sub_100507764(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

uint64_t sub_100504ACC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) >= *(void *)(a2 + 16))
  {
    uint64_t v19 = (void *)(a2 + 56);
    uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
    if (-v5 < 64) {
      uint64_t v6 = ~(-1LL << -(char)v5);
    }
    else {
      uint64_t v6 = -1LL;
    }
    unint64_t v7 = v6 & *(void *)(a2 + 56);
    int64_t v18 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a1 + 56;
    swift_bridgeObjectRetain(a2);
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      if (!*(void *)(a1 + 16)) {
        goto LABEL_27;
      }
      goto LABEL_22;
    }

    if (v18 > 1)
    {
      unint64_t v10 = v19[1];
      uint64_t v11 = 1LL;
      if (v10) {
        goto LABEL_21;
      }
      uint64_t v11 = 2LL;
      if (v18 > 2)
      {
        unint64_t v10 = v19[2];
        if (v10) {
          goto LABEL_21;
        }
        uint64_t v11 = 3LL;
        if (v18 > 3)
        {
          unint64_t v10 = v19[3];
          if (v10) {
            goto LABEL_21;
          }
          uint64_t v12 = 4LL;
          if (v18 > 4)
          {
            unint64_t v10 = v19[4];
            if (v10)
            {
              uint64_t v11 = 4LL;
LABEL_21:
              unint64_t v9 = __clz(__rbit64(v10)) + (v11 << 6);
              if (!*(void *)(a1 + 16))
              {
LABEL_27:
                uint64_t v2 = 0LL;
LABEL_25:
                sub_10041D3BC(a2);
                return v2;
              }

Swift::Int sub_100505604(uint64_t a1, uint64_t a2, __n128 a3, __n128 a4)
{
  char v6 = *(_BYTE *)(a2 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (1LL << v6) + 63;
  uint64_t v9 = v8 >> 6;
  size_t v10 = 8 * (v8 >> 6);
  if (v7 <= 0xD || (swift_stdlib_isStackAllocationSafe(8 * (v8 >> 6), 8LL) & 1) != 0)
  {
    __chkstk_darwin(a3, a4);
    bzero((char *)&v14 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0LL), v10);
    Swift::Int v11 = sub_100505784((unint64_t *)((char *)&v14 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v9, a2, a1);
    swift_release(a2);
  }

  else
  {
    uint64_t v12 = (void *)swift_slowAlloc(v10, -1LL);
    bzero(v12, v10);
    Swift::Int v11 = sub_100505784((unint64_t *)v12, v9, a2, a1);
    swift_release(a2);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  return v11;
}

Swift::Int sub_100505784(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0LL;
    uint64_t v36 = a4 + 56;
    uint64_t v7 = 1LL << *(_BYTE *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v38 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v43 = a3 + 56;
    while (1)
    {
      if (v9)
      {
        uint64_t v39 = (v9 - 1) & v9;
        int64_t v41 = v6;
        unint64_t v10 = __clz(__rbit64(v9)) | (v6 << 6);
      }

      else
      {
        int64_t v11 = v6 + 1;
        if (__OFADD__(v6, 1LL))
        {
          __break(1u);
          goto LABEL_50;
        }

        if (v11 >= v38) {
          goto LABEL_48;
        }
        unint64_t v12 = *(void *)(v36 + 8 * v11);
        int64_t v13 = v6 + 1;
        if (!v12)
        {
          int64_t v13 = v6 + 2;
          if (v6 + 2 >= v38) {
            goto LABEL_48;
          }
          unint64_t v12 = *(void *)(v36 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v6 + 3;
            if (v6 + 3 >= v38) {
              goto LABEL_48;
            }
            unint64_t v12 = *(void *)(v36 + 8 * v13);
            if (!v12)
            {
              uint64_t v14 = v6 + 4;
              if (v6 + 4 >= v38) {
                goto LABEL_48;
              }
              unint64_t v12 = *(void *)(v36 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  int64_t v13 = v14 + 1;
                  if (__OFADD__(v14, 1LL)) {
                    break;
                  }
                  if (v13 >= v38) {
                    goto LABEL_48;
                  }
                  unint64_t v12 = *(void *)(v36 + 8 * v13);
                  ++v14;
                  if (v12) {
                    goto LABEL_22;
                  }
                }

                __break(1u);
LABEL_52:
                __break(1u);
                JUMPOUT(0x100506C80LL);
              }

              int64_t v13 = v6 + 4;
            }
          }
        }

Swift::Int sub_100506D64(void *a1)
{
  uint64_t v139 = sub_1003F5CB4(&qword_1009BCAD8);
  uint64_t v132 = *(void *)(v139 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v129 = (uint64_t)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6, v7);
  uint64_t v140 = (uint64_t)&v125 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v137 = (uint64_t)&v125 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v136 = (uint64_t)&v125 - v14;
  Swift::Int v15 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v15);
  if (result >= v15)
  {
    if (v15 < 0) {
      goto LABEL_139;
    }
    if (v15) {
      return sub_100507FBC(0LL, v15, 1LL, a1);
    }
    return result;
  }

  if (v15 >= 0) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v15 + 1;
  }
  if (v15 < -1) {
    goto LABEL_147;
  }
  uint64_t v138 = a1;
  Swift::Int v127 = result;
  uint64_t v133 = v1;
  if (v15 < 2)
  {
    uint64_t v21 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v131 = (unint64_t)&_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v132 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    uint64_t v126 = &_swiftEmptyArrayStorage;
    if (v15 != 1)
    {
      unint64_t v23 = *(&_swiftEmptyArrayStorage + 2);
LABEL_105:
      uint64_t v110 = v21;
      if (v23 >= 2)
      {
        uint64_t v117 = *v138;
        do
        {
          unint64_t v118 = v23 - 2;
          if (v23 < 2) {
            goto LABEL_134;
          }
          if (!v117) {
            goto LABEL_146;
          }
          uint64_t v119 = *(void *)&v110[16 * v118 + 32];
          uint64_t v120 = *(void *)&v110[16 * v23 + 24];
          uint64_t v121 = v133;
          sub_100508390( v117 + *(void *)(v132 + 72) * v119,  v117 + *(void *)(v132 + 72) * *(void *)&v110[16 * v23 + 16],  v117 + *(void *)(v132 + 72) * v120,  v131);
          uint64_t v133 = v121;
          if (v121) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native(v110) & 1) == 0) {
            uint64_t v110 = sub_1004C4A88((uint64_t)v110);
          }
          if (v118 >= *((void *)v110 + 2)) {
            goto LABEL_136;
          }
          id v122 = &v110[16 * v118 + 32];
          *(void *)id v122 = v119;
          *((void *)v122 + 1) = v120;
          unint64_t v123 = *((void *)v110 + 2);
          if (v23 > v123) {
            goto LABEL_137;
          }
          memmove(&v110[16 * v23 + 16], &v110[16 * v23 + 32], 16 * (v123 - v23));
          *((void *)v110 + 2) = v123 - 1;
          unint64_t v23 = v123 - 1;
        }

        while (v123 > 2);
      }

LABEL_88:
        if ((v92 & 1) != 0) {
          goto LABEL_126;
        }
        unint64_t v100 = &v67[16 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_129;
        }
        if (v103 < v91) {
          goto LABEL_14;
        }
LABEL_96:
        Swift::Int v108 = v22;
        unint64_t v109 = v69 - 1;
        if (v69 - 1 >= v23)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }

        if (!*v138) {
          goto LABEL_144;
        }
        uint64_t v110 = v21;
        uint64_t v111 = &v67[16 * v109];
        uint64_t v112 = *(void *)v111;
        id v113 = &v67[16 * v69];
        uint64_t v114 = *((void *)v113 + 1);
        uint64_t v115 = v133;
        sub_100508390( *v138 + *(void *)(v132 + 72) * *(void *)v111,  *v138 + *(void *)(v132 + 72) * *(void *)v113,  *v138 + *(void *)(v132 + 72) * v114,  v131);
        uint64_t v133 = v115;
        if (v115) {
          goto LABEL_116;
        }
        if (v114 < v112) {
          goto LABEL_119;
        }
        if (v69 > *((void *)v110 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v111 = v112;
        *(void *)&v67[16 * v109 + 8] = v114;
        unint64_t v116 = *((void *)v110 + 2);
        if (v69 >= v116) {
          goto LABEL_121;
        }
        uint64_t v21 = v110;
        unint64_t v23 = v116 - 1;
        memmove(&v67[16 * v69], v113 + 16, 16 * (v116 - 1 - v69));
        *((void *)v110 + 2) = v116 - 1;
        BOOL v97 = v116 > 2;
        Swift::Int v22 = v108;
        if (!v97) {
          goto LABEL_14;
        }
      }
    }

    unint64_t v23 = 1LL;
LABEL_14:
    Swift::Int v15 = v138[1];
    if (v22 >= v15) {
      goto LABEL_105;
    }
  }

  Swift::Int v135 = v15;
  Swift::Int v125 = v21;
  uint64_t v57 = 0LL;
  uint64_t v58 = v141 * (v22 - 1);
  uint64_t v59 = v22 * v141;
  Swift::Int v60 = v24;
  uint64_t v61 = v24 * v141;
  uint64_t v40 = v138;
  Swift::Int v130 = v24;
  do
  {
    if (v60 != v22 + v57 - 1)
    {
      uint64_t v62 = v134;
      if (!v134) {
        goto LABEL_145;
      }
      unint64_t v63 = v134 + v61;
      uint64_t v64 = v134 + v58;
      sub_10041D378(v134 + v61, v129, &qword_1009BCAD8);
      if (v61 < v58 || v63 >= v62 + v59)
      {
        swift_arrayInitWithTakeFrontToBack(v62 + v61, v62 + v58, 1LL, v139);
        uint64_t v56 = v141;
      }

      else
      {
        uint64_t v56 = v141;
        if (v61 != v58) {
          swift_arrayInitWithTakeBackToFront(v63);
        }
      }

      sub_10041D378(v129, v64, &qword_1009BCAD8);
      uint64_t v40 = v138;
      Swift::Int v24 = v130;
    }

    ++v60;
    --v57;
    v58 -= v56;
    v59 -= v56;
    v61 += v56;
  }

  while (v60 < v22 + v57);
  uint64_t v21 = v125;
  Swift::Int v15 = v135;
  if (v22 >= v135) {
    goto LABEL_57;
  }
LABEL_25:
  if (__OFSUB__(v22, v24)) {
    goto LABEL_138;
  }
  if (v22 - v24 >= v127) {
    goto LABEL_57;
  }
  if (__OFADD__(v24, v127)) {
    goto LABEL_141;
  }
  if (v24 + v127 >= v15) {
    Swift::Int v41 = v15;
  }
  else {
    Swift::Int v41 = v24 + v127;
  }
  if (v41 >= v24)
  {
    if (v22 != v41)
    {
      Swift::Int v125 = v21;
      uint64_t v42 = *(void *)(v132 + 72);
      uint64_t v141 = v42 * (v22 - 1);
      uint64_t v134 = v42;
      Swift::Int v43 = v22 * v42;
      Swift::Int v130 = v24;
      Swift::Int v128 = v41;
      do
      {
        uint64_t v45 = 0LL;
        Swift::Int v46 = v24;
        Swift::Int v135 = v22;
        while (1)
        {
          uint64_t v47 = *v40;
          Swift::Int v48 = v43;
          uint64_t v49 = v43 + v45 + *v40;
          uint64_t v50 = v136;
          uint64_t v51 = v40;
          sub_100410FD0(v49, v136, &qword_1009BCAD8);
          uint64_t v52 = v137;
          sub_100410FD0(v141 + v45 + v47, v137, &qword_1009BCAD8);
          LOBYTE(v47) = static Date.> infix(_:_:)(v50 + *(int *)(v139 + 48), v52 + *(int *)(v139 + 48));
          sub_10040A274(v52, &qword_1009BCAD8);
          sub_10040A274(v50, &qword_1009BCAD8);
          if ((v47 & 1) == 0) {
            break;
          }
          uint64_t v53 = *v51;
          if (!*v51) {
            goto LABEL_143;
          }
          Swift::Int v43 = v48;
          uint64_t v54 = v53 + v48 + v45;
          uint64_t v55 = v53 + v141 + v45;
          sub_10041D378(v54, v140, &qword_1009BCAD8);
          swift_arrayInitWithTakeFrontToBack(v54, v55, 1LL, v139);
          sub_10041D378(v140, v55, &qword_1009BCAD8);
          Swift::Int v44 = v135;
          v45 -= v134;
          ++v46;
          uint64_t v40 = v138;
          if (v135 == v46) {
            goto LABEL_35;
          }
        }

        Swift::Int v44 = v135;
        Swift::Int v43 = v48;
        uint64_t v40 = v51;
LABEL_35:
        Swift::Int v22 = v44 + 1;
        v141 += v134;
        v43 += v134;
        Swift::Int v24 = v130;
      }

      while (v22 != v128);
      Swift::Int v22 = v128;
      uint64_t v21 = v125;
    }

    goto LABEL_57;
  }

Swift::Int sub_100507764(uint64_t *a1)
{
  uint64_t v130 = type metadata accessor for Date(0LL);
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v129 = (uint64_t *)((char *)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v6, v7);
  __n128 v9 = (uint64_t *)((char *)&v116 - v8);
  Swift::Int v10 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v10);
  if (result >= v10)
  {
    if (v10 < 0) {
      goto LABEL_135;
    }
    if (v10) {
      return sub_1005081FC(0LL, v10, 1LL, a1);
    }
    return result;
  }

  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_143;
  }
  Swift::Int v121 = result;
  uint64_t v127 = v1;
  unint64_t v118 = a1;
  if (v10 < 2)
  {
    unint64_t v16 = (char *)_swiftEmptyArrayStorage;
    uint64_t v132 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v126 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 32);
    if (v10 != 1)
    {
      unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_100:
      uint64_t v107 = v127;
      if (v20 >= 2)
      {
        uint64_t v108 = *v118;
        do
        {
          unint64_t v109 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_130;
          }
          if (!v108) {
            goto LABEL_142;
          }
          uint64_t v98 = v16;
          uint64_t v110 = v16 + 32;
          uint64_t v111 = *(void *)&v16[16 * v109 + 32];
          uint64_t v112 = *(void *)&v16[16 * v20 + 24];
          sub_100508844( (char *)(v108 + 8 * v111),  (char *)(v108 + 8LL * *(void *)&v110[16 * v20 - 16]),  (char *)(v108 + 8 * v112),  v126);
          if (v107) {
            goto LABEL_98;
          }
          if (v112 < v111) {
            goto LABEL_131;
          }
          if ((swift_isUniquelyReferenced_nonNull_native(v98) & 1) == 0) {
            uint64_t v98 = sub_1004C4A88((uint64_t)v98);
          }
          if (v109 >= *((void *)v98 + 2)) {
            goto LABEL_132;
          }
          id v113 = &v98[16 * v109 + 32];
          *(void *)id v113 = v111;
          *((void *)v113 + 1) = v112;
          unint64_t v114 = *((void *)v98 + 2);
          if (v20 > v114) {
            goto LABEL_133;
          }
          unint64_t v16 = v98;
          memmove(&v98[16 * v20 + 16], &v98[16 * v20 + 32], 16 * (v114 - v20));
          *((void *)v98 + 2) = v114 - 1;
          unint64_t v20 = v114 - 1;
        }

        while (v114 > 2);
      }

      uint64_t v106 = v16;
LABEL_112:
      uint64_t v115 = swift_bridgeObjectRelease(v106);
      *(void *)((v132 & 0xFFFFFFFFFFFFF8LL) + 0x10) = 0LL;
      specialized Array._endMutation()(v115);
      return swift_bridgeObjectRelease(v132);
    }
  }

  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0LL);
    uint64_t v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13, v14);
    *(void *)((v15 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v13;
    uint64_t v126 = (char *)((v15 & 0xFFFFFFFFFFFFFF8LL) + 32);
    uint64_t v132 = v15;
  }

  Swift::Int v17 = 0LL;
  uint64_t v18 = *a1;
  uint64_t v19 = *a1 + 16;
  uint64_t v119 = *a1 - 8;
  uint64_t v120 = v19;
  unint64_t v16 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v124 = v10;
  uint64_t v131 = v18;
  while (1)
  {
    Swift::Int v21 = v17;
    Swift::Int v22 = v17 + 1;
    if (v17 + 1 < v10)
    {
      uint64_t v23 = *(void *)(v18 + 8 * v22);
      uint64_t v24 = *(void *)(v18 + 8 * v17);
      swift_retain(v23);
      swift_retain(v24);
      sub_100447148(v9);
      Swift::Int v25 = v129;
      sub_100447148(v129);
      LODWORD(v125) = static Date.> infix(_:_:)(v9, v25);
      uint64_t v26 = *(void (**)(void *, uint64_t))(v128 + 8);
      uint64_t v27 = v25;
      uint64_t v28 = v130;
      v26(v27, v130);
      v26(v9, v28);
      swift_release(v23);
      Swift::Int v10 = v124;
      swift_release(v24);
      Swift::Int v22 = v21 + 2;
      if (v21 + 2 < v10)
      {
        Swift::Int v123 = v21;
        uint64_t v29 = (void *)(v120 + 8 * v21);
        while (1)
        {
          Swift::Int v30 = v22;
          uint64_t v32 = *(v29 - 1);
          uint64_t v31 = *v29;
          swift_retain(*v29);
          swift_retain(v32);
          sub_100447148(v9);
          uint64_t v33 = v129;
          sub_100447148(v129);
          int v34 = static Date.> infix(_:_:)(v9, v33);
          uint64_t v35 = v33;
          uint64_t v36 = v130;
          v26(v35, v130);
          v26(v9, v36);
          swift_release(v31);
          swift_release(v32);
          Swift::Int v22 = v30 + 1;
          ++v29;
          Swift::Int v10 = v124;
          if (v124 == v30 + 1)
          {
            Swift::Int v22 = v124;
            goto LABEL_22;
          }
        }

        Swift::Int v10 = v124;
        Swift::Int v22 = v30;
LABEL_22:
        Swift::Int v21 = v123;
      }

      uint64_t v18 = v131;
      if ((v125 & 1) != 0)
      {
        if (v22 < v21) {
          goto LABEL_136;
        }
        if (v21 < v22)
        {
          uint64_t v37 = (uint64_t *)(v119 + 8 * v22);
          Swift::Int v38 = v22;
          Swift::Int v39 = v21;
          uint64_t v40 = (uint64_t *)(v131 + 8 * v21);
          do
          {
            if (v39 != --v38)
            {
              if (!v18) {
                goto LABEL_141;
              }
              uint64_t v41 = *v40;
              *uint64_t v40 = *v37;
              *uint64_t v37 = v41;
            }

            ++v39;
            --v37;
            ++v40;
          }

          while (v39 < v38);
        }
      }
    }

    if (v22 < v10)
    {
      if (__OFSUB__(v22, v21)) {
        goto LABEL_134;
      }
      if (v22 - v21 < v121) {
        break;
      }
    }

uint64_t sub_100507FBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v30 = a1;
  uint64_t v34 = sub_1003F5CB4(&qword_1009BCAD8);
  __chkstk_darwin(v7, v8);
  uint64_t v35 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10, v11);
  uint64_t v31 = (uint64_t)&v28 - v12;
  uint64_t result = __chkstk_darwin(v13, v14);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v33 = a3;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void *)(v16 + 72);
    uint64_t v37 = v19 * (v33 - 1);
    uint64_t v32 = v19;
    uint64_t v36 = v19 * v33;
LABEL_5:
    uint64_t v20 = 0LL;
    uint64_t v21 = v30;
    while (1)
    {
      uint64_t v22 = *a4;
      sub_100410FD0(v36 + v20 + *a4, (uint64_t)v18, &qword_1009BCAD8);
      uint64_t v23 = v31;
      sub_100410FD0(v37 + v20 + v22, v31, &qword_1009BCAD8);
      LOBYTE(v22) = static Date.> infix(_:_:)(&v18[*(int *)(v34 + 48)], v23 + *(int *)(v34 + 48));
      sub_10040A274(v23, &qword_1009BCAD8);
      uint64_t result = sub_10040A274((uint64_t)v18, &qword_1009BCAD8);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v37 += v32;
        v36 += v32;
        if (++v33 == v29) {
          return result;
        }
        goto LABEL_5;
      }

      uint64_t v24 = *a4;
      if (!*a4) {
        break;
      }
      Swift::Int v25 = a4;
      uint64_t v26 = v24 + v36 + v20;
      uint64_t v27 = v24 + v37 + v20;
      sub_10041D378(v26, v35, &qword_1009BCAD8);
      swift_arrayInitWithTakeFrontToBack(v26, v27, 1LL, v34);
      uint64_t result = sub_10041D378(v35, v27, &qword_1009BCAD8);
      v20 -= v32;
      ++v21;
      a4 = v25;
      if (v33 == v21) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_1005081FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v28 = a1;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  __chkstk_darwin(v8, v9);
  uint64_t v30 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t result = __chkstk_darwin(v11, v12);
  uint64_t v15 = (uint64_t *)((char *)&v26 - v14);
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v33 = *a4;
    uint64_t v16 = (void *)(v33 + 8 * a3 - 8);
LABEL_5:
    uint64_t v17 = *(void *)(v33 + 8 * a3);
    uint64_t v18 = v28;
    uint64_t v29 = v16;
    while (1)
    {
      uint64_t v19 = *v16;
      swift_retain(v17);
      swift_retain(v19);
      sub_100447148(v15);
      uint64_t v20 = v30;
      sub_100447148(v30);
      char v21 = static Date.> infix(_:_:)(v15, v20);
      uint64_t v22 = *(void (**)(void *, uint64_t))(v31 + 8);
      uint64_t v23 = v20;
      uint64_t v24 = v32;
      v22(v23, v32);
      v22(v15, v24);
      swift_release(v17);
      uint64_t result = swift_release(v19);
      if ((v21 & 1) == 0)
      {
LABEL_4:
        ++a3;
        uint64_t v16 = v29 + 1;
        if (a3 == v27) {
          return result;
        }
        goto LABEL_5;
      }

      if (!v33) {
        break;
      }
      uint64_t v25 = *v16;
      uint64_t v17 = v16[1];
      *uint64_t v16 = v17;
      v16[1] = v25;
      --v16;
      if (a3 == ++v18) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_100508390(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v48 = sub_1003F5CB4(&qword_1009BCAD8);
  __chkstk_darwin(v8, v9);
  uint64_t v47 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v16 = *(void *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }

  if (a2 - a1 == 0x8000000000000000LL && v16 == -1) {
    goto LABEL_62;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000LL && v16 == -1) {
    goto LABEL_63;
  }
  uint64_t v18 = (uint64_t)(a2 - a1) / v16;
  unint64_t v51 = a1;
  unint64_t v50 = a4;
  uint64_t v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000LL) == 0)
    {
      uint64_t v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v19, v48);
      }

      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }

      unint64_t v28 = a4 + v21;
      unint64_t v49 = a4 + v21;
      unint64_t v51 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        uint64_t v30 = -v16;
        unint64_t v45 = a4;
        unint64_t v46 = a1;
        do
        {
          unint64_t v31 = a3 + v30;
          sub_100410FD0(v28 + v30, (uint64_t)v14, &qword_1009BCAD8);
          unint64_t v32 = a2 + v30;
          unint64_t v33 = a3;
          uint64_t v34 = (uint64_t)v14;
          uint64_t v35 = v47;
          sub_100410FD0(a2 + v30, v47, &qword_1009BCAD8);
          char v36 = static Date.> infix(_:_:)(v34 + *(int *)(v48 + 48), v35 + *(int *)(v48 + 48));
          uint64_t v37 = v35;
          uint64_t v14 = (char *)v34;
          sub_10040A274(v37, &qword_1009BCAD8);
          sub_10040A274(v34, &qword_1009BCAD8);
          if ((v36 & 1) != 0)
          {
            if (v33 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v31, a2 + v30, 1LL, v48);
              unint64_t v40 = v45;
              unint64_t v39 = v46;
            }

            else
            {
              BOOL v38 = v33 == a2;
              unint64_t v40 = v45;
              unint64_t v39 = v46;
              if (!v38) {
                swift_arrayInitWithTakeBackToFront(v31);
              }
            }

            v51 += v30;
          }

          else
          {
            unint64_t v41 = v49;
            unint64_t v42 = v49 + v30;
            v49 += v30;
            if (v33 < v41 || v31 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack(v31, v42, 1LL, v48);
              unint64_t v32 = a2;
              unint64_t v40 = v45;
              unint64_t v39 = v46;
            }

            else
            {
              BOOL v38 = v33 == v41;
              unint64_t v40 = v45;
              unint64_t v39 = v46;
              if (!v38) {
                swift_arrayInitWithTakeBackToFront(v31);
              }
              unint64_t v32 = a2;
            }
          }

          unint64_t v28 = v49;
          if (v49 <= v40) {
            break;
          }
          a2 = v32;
          a3 = v31;
        }

        while (v32 > v39);
      }

      goto LABEL_60;
    }
  }

  else if ((v18 & 0x8000000000000000LL) == 0)
  {
    uint64_t v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v18, v48);
    }

    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }

    unint64_t v46 = a4 + v20;
    unint64_t v49 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      uint64_t v23 = v47;
      do
      {
        sub_100410FD0(a2, (uint64_t)v14, &qword_1009BCAD8);
        sub_100410FD0(a4, v23, &qword_1009BCAD8);
        char v24 = static Date.> infix(_:_:)(&v14[*(int *)(v48 + 48)], v23 + *(int *)(v48 + 48));
        sub_10040A274(v23, &qword_1009BCAD8);
        sub_10040A274((uint64_t)v14, &qword_1009BCAD8);
        unint64_t v25 = v51;
        if ((v24 & 1) != 0)
        {
          unint64_t v26 = a2 + v16;
          if (v51 < a2 || v51 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack(v51, a2, 1LL, v48);
          }

          else if (v51 == a2)
          {
            unint64_t v25 = a2;
          }

          else
          {
            swift_arrayInitWithTakeBackToFront(v51);
          }
        }

        else
        {
          unint64_t v27 = v50 + v16;
          if (v51 < v50 || v51 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack(v51, v50, 1LL, v48);
          }

          else if (v51 != v50)
          {
            swift_arrayInitWithTakeBackToFront(v51);
          }

          unint64_t v50 = v27;
          unint64_t v26 = a2;
        }

        unint64_t v51 = v25 + v16;
        a4 = v50;
        if (v50 >= v46) {
          break;
        }
        a2 = v26;
      }

      while (v26 < a3);
    }

uint64_t sub_100508844(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  __chkstk_darwin(v9, v10);
  uint64_t v53 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v12, v13);
  unint64_t v51 = a3;
  uint64_t v52 = (uint64_t *)((char *)&v46 - v14);
  uint64_t v15 = a2 - a1;
  uint64_t v16 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v16 = a2 - a1;
  }
  uint64_t v17 = v16 >> 3;
  uint64_t v18 = a3 - a2;
  uint64_t v19 = v18 / 8;
  unint64_t v58 = a1;
  uint64_t v48 = a4;
  uint64_t v57 = a4;
  if (v16 >> 3 >= v18 / 8)
  {
    if (v18 < -7) {
      goto LABEL_43;
    }
    uint64_t v30 = v48;
    if (v48 != a2 || &a2[8 * v19] <= v48) {
      memmove(v48, a2, 8 * v19);
    }
    unint64_t v31 = &v30[8 * v19];
    uint64_t v56 = v31;
    unint64_t v58 = a2;
    if (v18 < 8 || a1 >= a2) {
      goto LABEL_42;
    }
    unint64_t v32 = v51 - 8;
    unint64_t v33 = a2;
    uint64_t v47 = a1;
    while (1)
    {
      unint64_t v51 = a2;
      unint64_t v49 = v31;
      unint64_t v50 = v32 + 8;
      uint64_t v35 = *((void *)v31 - 1);
      v31 -= 8;
      uint64_t v34 = v35;
      uint64_t v36 = *((void *)v33 - 1);
      v33 -= 8;
      swift_retain(v34);
      swift_retain(v36);
      uint64_t v37 = v52;
      sub_100447148(v52);
      BOOL v38 = v53;
      sub_100447148(v53);
      char v39 = static Date.> infix(_:_:)(v37, v38);
      unint64_t v40 = *(void (**)(void *, uint64_t))(v54 + 8);
      unint64_t v41 = v38;
      uint64_t v42 = v55;
      v40(v41, v55);
      v40(v37, v42);
      swift_release(v34);
      swift_release(v36);
      if ((v39 & 1) != 0)
      {
        unint64_t v31 = v49;
        if (v50 != v51 || v32 >= v51) {
          *(void *)unint64_t v32 = *(void *)v33;
        }
        unint64_t v58 = v33;
      }

      else
      {
        uint64_t v56 = v31;
        unint64_t v33 = v51;
        if (v50 >= v49 && v32 < v49)
        {
          unint64_t v44 = (unint64_t)v47;
          Swift::Int v43 = v48;
          if (v50 != v49) {
            *(void *)unint64_t v32 = *(void *)v31;
          }
          goto LABEL_40;
        }

        *(void *)unint64_t v32 = *(void *)v31;
      }

      unint64_t v44 = (unint64_t)v47;
      Swift::Int v43 = v48;
LABEL_40:
      if (v31 > v43)
      {
        v32 -= 8;
        a2 = v33;
      }

      goto LABEL_42;
    }
  }

  if (v15 >= -7)
  {
    uint64_t v20 = v48;
    if (v48 != a1 || &a1[8 * v17] <= v48) {
      memmove(v48, a1, 8 * v17);
    }
    unint64_t v50 = &v20[8 * v17];
    uint64_t v56 = v50;
    if (v15 >= 8 && a2 < v51)
    {
      uint64_t v21 = v52;
      do
      {
        uint64_t v22 = *(void *)a2;
        uint64_t v23 = *(void *)v20;
        swift_retain(*(void *)a2);
        swift_retain(v23);
        sub_100447148(v21);
        char v24 = v53;
        sub_100447148(v53);
        char v25 = static Date.> infix(_:_:)(v21, v24);
        unint64_t v26 = *(void (**)(void *, uint64_t))(v54 + 8);
        unint64_t v27 = v24;
        uint64_t v28 = v55;
        v26(v27, v55);
        v26(v21, v28);
        swift_release(v22);
        swift_release(v23);
        if ((v25 & 1) != 0)
        {
          uint64_t v29 = a2 + 8;
          if (a1 < a2 || a1 >= v29 || a1 != a2) {
            *(void *)a1 = *(void *)a2;
          }
        }

        else
        {
          if (a1 != v20) {
            *(void *)a1 = *(void *)v20;
          }
          v20 += 8;
          uint64_t v57 = v20;
          uint64_t v29 = a2;
        }

        a1 += 8;
        unint64_t v58 = a1;
        if (v20 >= v50) {
          break;
        }
        a2 = v29;
      }

      while (v29 < v51);
    }

uint64_t sub_100508C40(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_1003F5CB4(&qword_1009BCAD8);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72LL);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000LL && v7 == -1) {
    goto LABEL_14;
  }
  uint64_t v10 = v8 / v7;
  if (v8 / v7 < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1046LL,  0);
    __break(1u);
    return result;
  }

  if (v3 < v4 || v3 >= v4 + v10 * v7) {
    return swift_arrayInitWithTakeFrontToBack(v3, v4, v10, result);
  }
  if (v3 != v4) {
    return swift_arrayInitWithTakeBackToFront(v3);
  }
  return result;
}

char *sub_100508D50(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    char v9 = 2;
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v9,  1046LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7]) {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }

  return result;
}

Swift::Int sub_100508DF8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1003F5CB4(&qword_1009BC488);
    uint64_t v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    uint64_t v32 = v4;
    uint64_t v5 = __CocoaDictionary.makeIterator()(a1);
    uint64_t v7 = __CocoaDictionary.Iterator.next()(v6);
    if (v7)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      uint64_t v11 = sub_10041D3C4(0LL, &qword_1009BC3B0, off_1008F3918);
      do
      {
        uint64_t v30 = v9;
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v11, 7LL);
        uint64_t v29 = v10;
        uint64_t v23 = sub_10041D3C4(0LL, &qword_1009BC3B8, &off_1008F3920);
        swift_dynamicCast(&v30, &v29, (char *)&type metadata for Swift.AnyObject + 8, v23, 7LL);
        uint64_t v4 = v32;
        unint64_t v24 = *(void *)(v32 + 16);
        if (*(void *)(v32 + 24) <= v24)
        {
          sub_10050960C(v24 + 1, 1LL);
          uint64_t v4 = v32;
        }

        uint64_t v13 = v30;
        uint64_t v12 = v31;
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
        uint64_t v16 = v4 + 64;
        uint64_t v17 = -1LL << *(_BYTE *)(v4 + 32);
        unint64_t v18 = result & ~v17;
        unint64_t v19 = v18 >> 6;
        if (((-1LL << v18) & ~*(void *)(v4 + 64 + 8 * (v18 >> 6))) != 0)
        {
          unint64_t v20 = __clz(__rbit64((-1LL << v18) & ~*(void *)(v4 + 64 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0LL;
        }

        else
        {
          char v25 = 0;
          unint64_t v26 = (unint64_t)(63 - v17) >> 6;
          do
          {
            if (++v19 == v26 && (v25 & 1) != 0)
            {
              __break(1u);
              return result;
            }

            BOOL v27 = v19 == v26;
            if (v19 == v26) {
              unint64_t v19 = 0LL;
            }
            v25 |= v27;
            uint64_t v28 = *(void *)(v16 + 8 * v19);
          }

          while (v28 == -1);
          unint64_t v20 = __clz(__rbit64(~v28)) + (v19 << 6);
        }

        *(void *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v20;
        uint64_t v21 = 8 * v20;
        *(void *)(*(void *)(v4 + 48) + v21) = v12;
        *(void *)(*(void *)(v4 + 56) + v21) = v13;
        ++*(void *)(v4 + 16);
        uint64_t v9 = __CocoaDictionary.Iterator.next()(v15);
        uint64_t v10 = v22;
      }

      while (v9);
    }

    swift_release(v5);
  }

  else
  {
    swift_unknownObjectRelease(a1, 0LL);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }

  return v4;
}

Swift::Int sub_100509048(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1003F5CB4(&qword_1009BC958);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v36 = v3;
    uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
    uint64_t v10 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v11 = ~(-1LL << v9);
    }
    else {
      uint64_t v11 = -1LL;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v14 = v7 + 64;
    Swift::Int result = swift_retain(v5);
    int64_t v16 = 0LL;
    while (1)
    {
      if (v12)
      {
        unint64_t v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v23 = v22 | (v16 << 6);
      }

      else
      {
        if (__OFADD__(v16++, 1LL)) {
          goto LABEL_41;
        }
        if (v16 >= v13)
        {
LABEL_34:
          swift_release(v5);
          unint64_t v3 = v36;
          if ((v37 & 1) != 0)
          {
            uint64_t v35 = 1LL << *(_BYTE *)(v5 + 32);
            if (v35 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
            }
            else {
              *uint64_t v10 = -1LL << v35;
            }
            *(void *)(v5 + 16) = 0LL;
          }

          break;
        }

        unint64_t v25 = v10[v16];
        if (!v25)
        {
          int64_t v26 = v16 + 1;
          if (v16 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v25 = v10[v26];
          if (!v25)
          {
            while (1)
            {
              int64_t v16 = v26 + 1;
              if (__OFADD__(v26, 1LL)) {
                break;
              }
              if (v16 >= v13) {
                goto LABEL_34;
              }
              unint64_t v25 = v10[v16];
              ++v26;
              if (v25) {
                goto LABEL_23;
              }
            }

Swift::Int sub_1005092F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1003F5CB4((uint64_t *)&unk_1009BC930);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }

    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v14 >= v35) {
              goto LABEL_36;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_33;
            }
          }
        }

        int64_t v14 = v25;
      }
    }

Swift::Int sub_10050960C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1003F5CB4(&qword_1009BC488);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  char v37 = v3;
  uint64_t v38 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v15 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }

    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_36;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          unint64_t v3 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_45;
            }
            if (v15 >= v12) {
              goto LABEL_36;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_33;
            }
          }
        }

        int64_t v15 = v26;
      }
    }

void sub_1005098DC()
{
  uint64_t v1 = v0;
  sub_1003F5CB4(&qword_1009BC958);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    if (__OFADD__(v9++, 1LL)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    if (!v21) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    swift_bridgeObjectRetain(v18);
  }

  int64_t v22 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }

  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }

  __break(1u);
LABEL_26:
  __break(1u);
}

void sub_100509A6C()
{
  uint64_t v1 = v0;
  sub_1003F5CB4((uint64_t *)&unk_1009BC930);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    uint64_t *v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

id sub_100509C20()
{
  uint64_t v1 = v0;
  sub_1003F5CB4(&qword_1009BC488);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release(v2);
    uint64_t *v1 = v4;
    return result;
  }

  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }

void sub_100509DC4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_100504874((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100509C20();
LABEL_7:
    unint64_t v15 = (void *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }

void (*sub_100509F24(uint64_t **a1, unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_100509F78(v6, a2, a3);
  return sub_100477BBC;
}

uint64_t *sub_100509F78(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain(*(void *)(a3 + 8 * a2 + 32));
LABEL_5:
    uint64_t *v3 = v4;
    return (uint64_t *)sub_100509FE4;
  }

  __break(1u);
  return result;
}

uint64_t sub_100509FE4(void *a1)
{
  return swift_release(*a1);
}

uint64_t sub_100509FEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return a3;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return a3;
    }
  }

  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8LL;
  if (v6)
  {
    if (a3 < 0) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10047E23C( (unint64_t *)&unk_1009BC9C0,  &qword_1009BC9B8,  (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (unint64_t i = 0LL; i != v7; ++i)
        {
          sub_1003F5CB4(&qword_1009BC9B8);
          char v13 = sub_100509F24(v18, i, a3);
          uint64_t v15 = *v14;
          swift_retain(*v14);
          ((void (*)(uint64_t **, void))v13)(v18, 0LL);
          *(void *)(a1 + 8 * i) = v15;
        }

        swift_bridgeObjectRelease(a3);
        return a3;
      }

      goto LABEL_24;
    }

uint64_t sub_10050A1F8(void *a1)
{
  return sub_100504504(0, a1[2], 0, a1);
}

uint64_t sub_10050A20C(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  *(void *)(a1 + 16),  0LL,  a1);
}

uint64_t sub_10050A220(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1LL << -(char)v7);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0LL;
    uint64_t v10 = 0LL;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }

  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v11 = a2;
  int64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_1004028CC(v21, v22);
      goto LABEL_38;
    }

    v11 += 2;
    uint64_t result = sub_1004028CC(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }

  v12 += 2LL;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }

  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0LL;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0LL;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }

    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }

uint64_t *sub_10050A41C( uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4, unint64_t *a5, void *a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  unint64_t v9 = a2;
  char v39 = result;
  if ((a4 & 0xC000000000000001LL) != 0)
  {
    if (a4 < 0) {
      uint64_t v13 = a4;
    }
    else {
      uint64_t v13 = a4 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v14 = __CocoaSet.makeIterator()(v13);
    uint64_t v15 = sub_10041D3C4(0LL, a5, a6);
    uint64_t v16 = sub_100438928(a7, a5, a6);
    uint64_t result = Set.Iterator.init(_cocoa:)(v45, v14, v15, v16);
    uint64_t v7 = v45[0];
    uint64_t v17 = v45[1];
    uint64_t v18 = v45[2];
    int64_t v19 = v45[3];
    unint64_t v20 = v45[4];
    if (v9) {
      goto LABEL_6;
    }
LABEL_39:
    uint64_t v21 = 0LL;
    goto LABEL_41;
  }

  int64_t v19 = 0LL;
  uint64_t v34 = -1LL << *(_BYTE *)(a4 + 32);
  uint64_t v17 = a4 + 56;
  uint64_t v18 = ~v34;
  uint64_t v35 = -v34;
  if (v35 < 64) {
    uint64_t v36 = ~(-1LL << v35);
  }
  else {
    uint64_t v36 = -1LL;
  }
  unint64_t v20 = v36 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_39;
  }
LABEL_6:
  if (!a3)
  {
    uint64_t v21 = 0LL;
LABEL_41:
    char v37 = v39;
LABEL_44:
    *char v37 = v7;
    v37[1] = v17;
    v37[2] = v18;
    v37[3] = v19;
    v37[4] = v20;
    return (uint64_t *)v21;
  }

  if (a3 < 0) {
    goto LABEL_51;
  }
  uint64_t v21 = 0LL;
  int64_t v40 = (unint64_t)(v18 + 64) >> 6;
  uint64_t v38 = v18;
  while (1)
  {
    if (v7 < 0)
    {
      uint64_t v28 = __CocoaSet.Iterator.next()(result);
      if (!v28) {
        goto LABEL_43;
      }
      uint64_t v29 = v28;
      uint64_t v43 = v28;
      uint64_t v30 = sub_10041D3C4(0LL, a5, a6);
      swift_unknownObjectRetain(v29, v31);
      swift_dynamicCast(&v44, &v43, (char *)&type metadata for Swift.AnyObject + 8, v30, 7LL);
      uint64_t v24 = v44;
      uint64_t result = (uint64_t *)swift_unknownObjectRelease(v29, v32);
      if (!v24) {
        goto LABEL_43;
      }
      goto LABEL_11;
    }

    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v19 << 6);
      goto LABEL_10;
    }

    int64_t v25 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v25 >= v40)
    {
      unint64_t v20 = 0LL;
      goto LABEL_43;
    }

    unint64_t v26 = *(void *)(v17 + 8 * v25);
    if (v26) {
      goto LABEL_26;
    }
    int64_t v27 = v19 + 2;
    if (v19 + 2 >= v40)
    {
      unint64_t v20 = 0LL;
      ++v19;
      goto LABEL_43;
    }

    unint64_t v26 = *(void *)(v17 + 8 * v27);
    if (!v26)
    {
      if (v19 + 3 >= v40) {
        goto LABEL_47;
      }
      unint64_t v26 = *(void *)(v17 + 8 * (v19 + 3));
      if (v26)
      {
        int64_t v25 = v19 + 3;
        goto LABEL_26;
      }

      int64_t v27 = v19 + 4;
      if (v19 + 4 >= v40)
      {
        unint64_t v20 = 0LL;
        v19 += 3LL;
        goto LABEL_43;
      }

      unint64_t v26 = *(void *)(v17 + 8 * v27);
      if (!v26)
      {
        int64_t v25 = v19 + 5;
        if (v19 + 5 >= v40)
        {
LABEL_47:
          unint64_t v20 = 0LL;
          int64_t v19 = v27;
          goto LABEL_43;
        }

        unint64_t v26 = *(void *)(v17 + 8 * v25);
        if (!v26)
        {
          int64_t v33 = v19 + 6;
          while (v40 != v33)
          {
            unint64_t v26 = *(void *)(v17 + 8 * v33++);
            if (v26)
            {
              int64_t v25 = v33 - 1;
              goto LABEL_26;
            }
          }

          unint64_t v20 = 0LL;
          int64_t v19 = v40 - 1;
          goto LABEL_43;
        }

        goto LABEL_26;
      }
    }

    int64_t v25 = v27;
LABEL_26:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v19 = v25;
LABEL_10:
    uint64_t result = (uint64_t *)*(id *)(*(void *)(v7 + 48) + 8 * v23);
    uint64_t v24 = result;
    if (!result) {
      goto LABEL_43;
    }
LABEL_11:
    ++v21;
    *v9++ = v24;
    if (v21 == a3)
    {
      uint64_t v21 = a3;
LABEL_43:
      uint64_t v18 = v38;
      char v37 = v39;
      goto LABEL_44;
    }
  }

  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_10050A714(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8, v9);
  uint64_t v71 = (char *)&v68 - v10;
  uint64_t v11 = type metadata accessor for URL(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17, v18);
  uint64_t v74 = (char *)&v68 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v76 = (char *)&v68 - v22;
  __chkstk_darwin(v23, v24);
  unint64_t v26 = (char *)&v68 - v25;
  if (a2)
  {
    id v70 = (id)objc_opt_self(&OBJC_CLASS___NSFileManager);
    id v27 = [v70 defaultManager];
    URL.init(fileURLWithPath:)(a1, a2);
    URL._bridgeToObjectiveC()(v28);
    uint64_t v30 = v29;
    uint64_t v75 = *(void (**)(char *, uint64_t))(v12 + 8);
    v75(v26, v11);
    v78[0] = 0LL;
    a2 = (uint64_t) [v27 contentsOfDirectoryAtURL:v30 includingPropertiesForKeys:0 options:0 error:v78];

    id v31 = v78[0];
    if (a2)
    {
      uint64_t v68 = v16;
      BOOL v69 = v7;
      uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);

      BOOL v79 = (char *)_swiftEmptyArrayStorage;
      uint64_t v73 = *(void *)(v32 + 16);
      if (v73)
      {
        unint64_t v33 = 0LL;
        uint64_t v34 = (uint64_t)v71;
        uint64_t v72 = v32;
        while (1)
        {
          if (v33 >= *(void *)(v32 + 16)) {
            __break(1u);
          }
          unint64_t v35 = (*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
          uint64_t v36 = *(void *)(v12 + 72);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v34, v32 + v35 + v36 * v33, v11);
          char v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
          v37(v34, 0LL, 1LL, v11);
          uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
          uint64_t v39 = v38(v76, v34, v11);
          int64_t v40 = (void *)URL.lastPathComponent.getter(v39);
          uint64_t v42 = v41;
          v78[0] = v40;
          v78[1] = v41;
          if (qword_1009C7020 != -1) {
            swift_once(&qword_1009C7020, sub_1004D8030);
          }
          v77[0] = qword_1009C7978;
          v77[1] = unk_1009C7980;
          unint64_t v43 = sub_10047E08C();
          char v44 = StringProtocol.contains<A>(_:)(v77, &type metadata for String, &type metadata for String, v43, v43);
          swift_bridgeObjectRelease(v42);
          if ((v44 & 1) != 0)
          {
            v38(v74, (uint64_t)v76, v11);
            unint64_t v45 = v79;
            if ((swift_isUniquelyReferenced_nonNull_native(v79) & 1) == 0)
            {
              sub_100504168(0, *((void *)v45 + 2) + 1LL, 1);
              unint64_t v45 = v79;
            }

            unint64_t v47 = *((void *)v45 + 2);
            unint64_t v46 = *((void *)v45 + 3);
            if (v47 >= v46 >> 1)
            {
              sub_100504168(v46 > 1, v47 + 1, 1);
              unint64_t v45 = v79;
            }

            *((void *)v45 + 2) = v47 + 1;
            v38(&v45[v35 + v47 * v36], (uint64_t)v74, v11);
            BOOL v79 = v45;
            uint64_t v34 = (uint64_t)v71;
          }

          else
          {
            v75(v76, v11);
          }

          uint64_t v32 = v72;
          if (v73 == ++v33) {
            goto LABEL_19;
          }
        }
      }

      else
      {
        char v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
        uint64_t v34 = (uint64_t)v71;
LABEL_19:
        v37(v34, 1LL, 1LL, v11);
      }

      swift_bridgeObjectRelease(v32);
      sub_10040A274(v34, &qword_1009BCF08);
      uint64_t v51 = *((void *)v79 + 2);
      if (v51)
      {
        uint64_t v52 = *(unsigned __int8 *)(v12 + 80);
        uint64_t v74 = v79;
        uint64_t v53 = &v79[(v52 + 32) & ~v52];
        uint64_t v76 = *(char **)(v12 + 72);
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        uint64_t v55 = v68;
        while (1)
        {
          uint64_t v56 = v69;
          v54(v69, v53, v11);
          v37((uint64_t)v56, 0LL, 1LL, v11);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v56, 1LL, v11) == 1)
          {
            swift_release(v74);
            return 1LL;
          }

          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v55, v56, v11);
          id v57 = [v70 defaultManager];
          URL._bridgeToObjectiveC()(v58);
          uint64_t v60 = v59;
          v78[0] = 0LL;
          unsigned int v61 = [v57 removeItemAtURL:v59 error:v78];

          id v62 = v78[0];
          if (!v61) {
            break;
          }
          id v63 = v78[0];
          v75(v55, v11);
          uint64_t v53 = &v76[(void)v53];
          if (!--v51)
          {
            a2 = 1LL;
            v37((uint64_t)v69, 1LL, 1LL, v11);
            swift_release(v74);
            return a2;
          }
        }

        id v64 = v78[0];
        swift_release(v74);
        uint64_t v65 = _convertNSErrorToError(_:)(v62);

        swift_willThrow(v66);
        v75(v55, v11);
        swift_errorRelease(v65);
      }

      else
      {
        swift_release(v79);
      }

      return 0LL;
    }

    else
    {
      uint64_t v48 = v31;
      uint64_t v49 = _convertNSErrorToError(_:)(v31);

      swift_willThrow(v50);
      swift_errorRelease(v49);
    }
  }

  return a2;
}

uint64_t sub_10050ACDC()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

void sub_10050AD10()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = (void (*)(id))v0[3];
  uint64_t v3 = (uint64_t (*)(void))v0[5];
  sub_1004D8838();
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x78LL))();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = type metadata accessor for ModelContext(0LL);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v7 = swift_retain(v5);
    uint64_t v8 = ModelContext.init(_:)(v7);
    uint64_t v9 = v3();
    uint64_t v10 = dispatch thunk of ModelContext.save()(v9);
    dispatch thunk of ModelContext.reset()(v10);
    v2(0LL);
    swift_release(v5);
    swift_release(v8);
  }

  else
  {
    uint64_t v11 = *((void *)sub_1004BA170() + 1);
    swift_bridgeObjectRetain(v11);
    uint64_t v12 = sub_1004BA120(6u);
    uint64_t v13 = sub_1003F5CB4(&qword_1009B9A10);
    uint64_t inited = swift_initStackObject(v13, v22);
    *(_OWORD *)(inited + 16) = xmmword_1007184C0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(void *)(inited + 40) = v15;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000018LL;
    *(void *)(inited + 56) = 0x8000000100843AA0LL;
    unint64_t v16 = sub_100427AB8(inited);
    id v17 = objc_allocWithZone(&OBJC_CLASS___NSError);
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v16);
    id v20 = [v17 initWithDomain:v18 code:v12 userInfo:isa];

    id v21 = v20;
    v2(v20);
  }

uint64_t sub_10050AF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10050AF84(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10050AF8C()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 24);
  sub_1004D8838();
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x78LL))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = type metadata accessor for ModelContext(0LL);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v7 = swift_retain(v5);
    uint64_t v8 = ModelContext.init(_:)(v7);
    uint64_t v9 = v3();
    if (v1)
    {
      uint64_t v10 = dispatch thunk of ModelContext.reset()(v9);
      swift_willThrow(v10);
    }

    else
    {
      dispatch thunk of ModelContext.reset()(v9);
    }

    swift_release(v8);
    return swift_release(v5);
  }

  return result;
}

id sub_10050B058(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908FF8,  (uint64_t)sub_100513AFC,  (uint64_t)&unk_100909010);
}

uint64_t sub_10050B088(uint64_t a1)
{
  return sub_1004DAF94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_10050B0A0(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908FA8,  (uint64_t)sub_1005137C8,  (uint64_t)&unk_100908FC0);
}

id sub_10050B0D0(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908F58,  (uint64_t)sub_1005137C8,  (uint64_t)&unk_100908F70);
}

id sub_10050B100(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908F08,  (uint64_t)sub_1005137C8,  (uint64_t)&unk_100908F20);
}

uint64_t sub_10050B130()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10050B15C(uint64_t a1)
{
  return sub_1004DD050(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_10050B174(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908EB8,  (uint64_t)sub_1005137C8,  (uint64_t)&unk_100908ED0);
}

id sub_10050B1A4(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908E68,  (uint64_t)sub_1005137BC,  (uint64_t)&unk_100908E80);
}

id sub_10050B1D4(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908E18,  (uint64_t)sub_1005137B0,  (uint64_t)&unk_100908E30);
}

id sub_10050B204(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908DC8,  (uint64_t)sub_100513600,  (uint64_t)&unk_100908DE0);
}

void *sub_10050B234(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0) {
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(a1))
    {
LABEL_3:
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v1);
      }

      else
      {
        if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x10050B6D8LL);
        }

        swift_retain(*(void *)(v1 + 32));
      }

      sub_100446490();
      uint64_t v3 = v2;
      sub_100446490();
      __asm { BR              X10 }
    }
  }

  else if (*(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    goto LABEL_3;
  }

  return _swiftEmptyArrayStorage;
}

void *sub_10050B7B8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0) {
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    if (_CocoaArrayWrapper.endIndex.getter(a1))
    {
LABEL_3:
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v1);
      }

      else
      {
        if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x10050BDD0LL);
        }

        swift_retain(*(void *)(v1 + 32));
      }

      sub_100446490();
      __asm { BR              X13 }
    }
  }

  else if (*(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    goto LABEL_3;
  }

  return _swiftEmptyArrayStorage;
}

uint64_t sub_10050BF10(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v5))
    {
LABEL_3:
      if ((a1 & 0xC000000000000001LL) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
      }
      else {
        swift_retain(*(void *)(a1 + 32));
      }
      sub_10044327C();
      uint64_t v4 = v3;
      sub_10044026C();
      __asm { BR              X10 }
    }
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease(a1);
  return 0LL;
}

id sub_10050C44C( uint64_t a1, uint64_t a2, __int16 a3, char a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, double a9, char a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, unint64_t a21, uint64_t a22, unint64_t a23, uint64_t a24, unint64_t a25, uint64_t a26, unint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30)
{
  if (a6 >> 60 == 15)
  {
    Class isa = 0LL;
  }

  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_10040AD00(a5, a6);
  }

  if (a8 >> 60 == 15)
  {
    Class v52 = 0LL;
  }

  else
  {
    Class v52 = Data._bridgeToObjectiveC()().super.isa;
    sub_10040AD00(a7, a8);
  }

  v35.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  v36.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  v37.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (a18)
  {
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a18);
  }

  else
  {
    NSString v38 = 0LL;
  }

  if (a21 >> 60 == 15)
  {
    Class v51 = 0LL;
  }

  else
  {
    Class v51 = Data._bridgeToObjectiveC()().super.isa;
    sub_10040AD00(a20, a21);
  }

  if (a23 >> 60 == 15)
  {
    Class v50 = 0LL;
  }

  else
  {
    Class v50 = Data._bridgeToObjectiveC()().super.isa;
    sub_10040AD00(a22, a23);
  }

  Class v60 = v35.super.isa;
  Class v59 = v37.super.isa;
  if (a25 >> 60 == 15)
  {
    Class v39 = 0LL;
  }

  else
  {
    Class v39 = Data._bridgeToObjectiveC()().super.isa;
    sub_10040AD00(a24, a25);
  }

  uint64_t v40 = a12;
  char v41 = a11;
  if (a27 >> 60 == 15)
  {
    Class v42 = 0LL;
  }

  else
  {
    Class v43 = Data._bridgeToObjectiveC()().super.isa;
    sub_10040AD00(a26, a27);
    char v41 = a11;
    Class v42 = v43;
    uint64_t v40 = a12;
  }

  LOBYTE(v49) = a19 & 1;
  BYTE1(v48) = v41 & 1;
  LOBYTE(v48) = a10 & 1;
  id v44 = objc_msgSend( v58,  "initWithURI:capabilities:ngmVersion:legacyVersion:KTLoggableData:KTDeviceSignature:mismatchedAccountFlag:ktCap ableFlag:pushTokenObject:sessionToken:expireDate:refreshDate:anonymizedSenderID:verifiedBusiness:serializedPub licMessageProtectionIdentity:queryTimeInterval:serializedNGMDeviceIdentity:serializedNGMDevicePrekey:serialize dApplicationPublicKey:endpointURIProperties:familyEndpointData:gameCenterData:",  a1,  a2,  a3,  a4,  isa,  v52,  a9,  v48,  v40,  v60,  v36.super.isa,  v59,  v38,  v49,  v51,  v50,  v39,  v42,  a28,  a29,  a30);

  uint64_t v45 = type metadata accessor for Date(0LL);
  unint64_t v46 = *(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8LL);
  v46(a16, v45);
  v46(a15, v45);
  return v44;
}

id sub_10050C768(uint64_t a1, uint64_t a2, void *a3)
{
  id v94 = a3;
  type metadata accessor for Date(0LL);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (uint64_t *)((char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (uint64_t *)((char *)&v71 - v9);
  sub_10043E948();
  uint64_t v12 = v11;
  sub_10043E6C4();
  uint64_t v14 = v13;
  id v15 = objc_allocWithZone(&OBJC_CLASS___IDSURI);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  id v18 = [v15 initWithPrefixedURI:v16 withServiceLoggingHint:v17];

  if (!v18) {
    return 0LL;
  }
  uint64_t v19 = sub_10044026C();
  unint64_t v21 = v20;
  id v22 = objc_allocWithZone(&OBJC_CLASS___IDSPushToken);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v24 = [v22 initWithData:isa];
  sub_100402A84(v19, v21);

  if (!v24)
  {

    return 0LL;
  }

  id v93 = v24;
  type metadata accessor for ArchiveHelper();
  uint64_t v25 = sub_10041D3C4(0LL, &qword_1009BC470, &OBJC_CLASS___IDSEndpointCapabilities_ptr);
  uint64_t v26 = sub_1004404FC();
  unint64_t v28 = v27;
  uint64_t v29 = sub_10040AB44(v25, v26, v27, v25);
  sub_100402A84(v26, v28);
  if (!v29)
  {

    return 0LL;
  }

  uint64_t v92 = (void *)v29;
  uint64_t v30 = sub_10041D3C4(0LL, &qword_1009BC478, &OBJC_CLASS___IDSFamilyEndpointData_ptr);
  uint64_t v31 = sub_10044144C();
  unint64_t v33 = v32;
  uint64_t v91 = (void *)sub_10040AB44(v30, v31, v32, v30);
  sub_10040AD00(v31, v33);
  uint64_t v34 = sub_10041D3C4(0LL, &qword_1009BC480, &OBJC_CLASS___IDSGameCenterData_ptr);
  uint64_t v35 = sub_100441180();
  unint64_t v37 = v36;
  uint64_t v89 = (void *)sub_10040AB44(v34, v35, v36, v34);
  sub_10040AD00(v35, v37);
  sub_10044152C((uint64_t)&v95);
  id v38 = [objc_allocWithZone(IDSEndpointURIProperties) init];
  sub_10043EBCC();
  if (v39)
  {
    uint64_t v40 = v39;
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    [v38 setSenderCorrelationIdentifier:v41];
  }

  id v90 = v18;
  sub_10043EE88();
  if (v42)
  {
    uint64_t v43 = v42;
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43);
    [v38 setShortHandle:v44];
  }

  uint64_t v86 = v95;
  unint64_t v85 = v96;
  uint64_t v45 = v97;
  unint64_t v46 = v98;
  uint64_t v84 = v97;
  unint64_t v83 = v98;
  int v88 = v100;
  int v87 = v99;
  sub_100439780(v95, v96);
  sub_100439780(v45, v46);
  int v82 = sub_10044078C();
  int v81 = sub_1004409F4();
  uint64_t v80 = sub_10044350C();
  uint64_t v79 = v47;
  sub_10044379C(v10);
  sub_100443A98(v6);
  uint64_t v78 = sub_100440C5C();
  uint64_t v77 = v48;
  int v76 = sub_100440F18();
  unint64_t v49 = v102;
  uint64_t v74 = v101;
  sub_100439780(v101, v102);
  double v50 = sub_100443D94();
  uint64_t v51 = v103;
  unint64_t v52 = v104;
  uint64_t v54 = v105;
  unint64_t v53 = v106;
  id v72 = v38;
  uint64_t v75 = v10;
  uint64_t v73 = v6;
  uint64_t v55 = v107;
  unint64_t v56 = v108;
  id v94 = objc_allocWithZone(&OBJC_CLASS___IDSEndpoint);
  sub_100439780(v51, v52);
  sub_100439780(v54, v53);
  sub_100439780(v55, v56);
  id v57 = v89;
  unint64_t v58 = v91;
  uint64_t v70 = (uint64_t)v38;
  unint64_t v69 = v56;
  uint64_t v67 = v54;
  unint64_t v68 = v53;
  unint64_t v66 = v49;
  unint64_t v59 = v79;
  uint64_t v60 = v80;
  id v61 = v93;
  id v62 = v90;
  id v63 = v92;
  id v64 = sub_10050C44C( (uint64_t)v90,  (uint64_t)v92,  v87,  v88,  v86,  v85,  v84,  v83,  v50,  v82 & 1,  v81 & 1,  (uint64_t)v93,  v80,  v79,  (uint64_t)v75,  (uint64_t)v73,  v78,  v77,  v76 & 1,  v74,  v66,  v51,  v52,  v67,  v68,  v55,  v69,  v70,  (uint64_t)v91,  (uint64_t)v89);

  sub_100402A84(v60, v59);
  sub_100510914(&v95);
  return v64;
}

void *sub_10050CD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    uint64_t v5 = 4LL;
    while (1)
    {
      uint64_t v6 = v5 - 4;
      if ((a1 & 0xC000000000000001LL) == 0) {
        break;
      }
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, a1);
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v6, 1LL)) {
        goto LABEL_17;
      }
LABEL_11:
      swift_retain(v7);
      uint64_t v9 = (void *)sub_10050BF10(a2);
      swift_release(v7);
      if (v9)
      {
        id v10 = sub_10050C768(a3, v7, v9);
        swift_release(v7);
        uint64_t v11 = swift_release(v9);
        if (v10)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
          unint64_t v13 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v12 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v13 >= v12 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1LL);
          }
          uint64_t v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v10);
          specialized Array._endMutation()(v14);
        }
      }

      else
      {
        swift_release(v7);
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_22;
      }
    }

    uint64_t v7 = *(void *)(a1 + 8 * v5);
    swift_retain(v7);
    uint64_t v8 = v5 - 3;
    if (!__OFADD__(v6, 1LL)) {
      goto LABEL_11;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    if (a1 < 0) {
      uint64_t v15 = a1;
    }
    else {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v15);
  }

void *sub_10050CEE8( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, __int16 a6, char a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, __int128 a14, __n128 a15, uint64_t a16, unint64_t a17, char a18, char a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24)
{
  char v25 = sub_10040A96C();
  uint64_t v26 = sub_10040A974(a5, v25 & 1);
  if (v27 >> 60 == 15) {
    uint64_t v28 = 0LL;
  }
  else {
    uint64_t v28 = v26;
  }
  unint64_t v29 = 0xC000000000000000LL;
  if (v27 >> 60 != 15) {
    unint64_t v29 = v27;
  }
  unint64_t v44 = v29;
  uint64_t v45 = v28;
  sub_10041D3C4(0LL, &qword_1009BC480, &OBJC_CLASS___IDSGameCenterData_ptr);
  char v30 = sub_10040A96C();
  uint64_t v43 = sub_10040A974(a23, v30 & 1);
  uint64_t v42 = v31;
  sub_10041D3C4(0LL, &qword_1009BC478, &OBJC_CLASS___IDSFamilyEndpointData_ptr);
  char v32 = sub_10040A96C();
  uint64_t v33 = sub_10040A974(a24, v32 & 1);
  uint64_t v40 = v34;
  uint64_t v41 = v33;
  sub_100439780(a8, a9);
  sub_100439780(a10, a11);
  sub_100439780(a12, a13);
  sub_100439780(a14, *((unint64_t *)&a14 + 1));
  sub_100439780(a15.n128_i64[0], a15.n128_u64[1]);
  sub_100439780(a16, a17);
  sub_100442728(a8, a9, a10, a11, a6, a7, a12, a13, (uint64_t)v53, a14, a15, a16, a17);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0LL);
  swift_bridgeObjectRetain(a2);
  sub_1004028CC(a3, a4);
  swift_bridgeObjectRetain(a21);
  *((void *)&v39 + 1) = v40;
  *((void *)&v38 + 1) = v42;
  *(void *)&__int128 v39 = v41;
  *(void *)&__int128 v38 = v43;
  *(void *)&__int128 v37 = a20;
  *((void *)&v37 + 1) = v35;
  return sub_100441C14(a1, a2, a3, a4, v45, v44, a18, a19, v37, a22, v38, v39, v53);
}

id sub_10050D174(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908D28,  (uint64_t)sub_100513538,  (uint64_t)&unk_100908D40);
}

uint64_t sub_10050D1A4(uint64_t a1)
{
  return sub_1004E1434(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10050D1BC()
{
  uint64_t v1 = *(void *)(sub_1003F5CB4(&qword_1009BC130) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1LL, v5);
  id v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v9) {
    v10(v0 + v3, v5);
  }
  uint64_t v11 = (v3 + v4 + v7) & ~v7;
  unint64_t v12 = (((((v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  v10(v0 + v11, v5);
  swift_bridgeObjectRelease(*(void *)(v0 + v12 + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + v13 + 8));
  return swift_deallocObject(v0, v13 + 16, v2 | v7 | 7);
}

uint64_t sub_10050D2CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1003F5CB4(&qword_1009BC130) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for Date(0LL) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_1004DFA58( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  v1 + v4,  v1 + v7,  *(void *)(v1 + v8),  *(void *)(v1 + v9),  *(void *)(v1 + v10),  *(void *)(v1 + v10 + 8),  *(void *)(v1 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_10050D398()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10050D414(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Date(0LL) - 8) + 80LL);
  sub_1004E01D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_10050D458@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E24E0( a1,  *(void (**)(void, void))(v2 + 16),  *(void *)(v2 + 24),  *(void (**)(void, void))(v2 + 32),  *(void *)(v2 + 40),  *(void (**)(void, void))(v2 + 48),  *(void *)(v2 + 56),  *(void (**)(void, void))(v2 + 64),  a2,  *(_BYTE *)(v2 + 72),  *(void *)(v2 + 80));
}

uint64_t sub_10050D494@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E18E0(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_10050D4A0(uint64_t a1)
{
  return sub_1004E1DF4(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10050D4B8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E228C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_10050D4C0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E3770( a1,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56),  *(void *)(v2 + 64),  a2,  *(void *)(v2 + 72),  *(_BYTE *)(v2 + 80),  *(void *)(v2 + 88));
}

uint64_t sub_10050D500(uint64_t a1)
{
  return sub_1004E45E4(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10050D518(uint64_t a1)
{
  return sub_100513A8C( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1004E4A0C);
}

uint64_t sub_10050D524@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E5210(a1, v2[2], v2[3], v2[4], v2[5], (uint64_t)&unk_10071DAB0, a2);
}

uint64_t sub_10050D548@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E5B68(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_10050D558(uint64_t a1)
{
  return sub_1004E631C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10050D570(uint64_t a1)
{
  return sub_1004E6488(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10050D588@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E6A54(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_10050D598(uint64_t a1)
{
  return sub_1004E7158(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10050D5B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E773C(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10050D5BC(uint64_t a1)
{
  return sub_1004E7CF0(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_10050D5D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E838C(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10050D5E4(uint64_t a1)
{
  return sub_1004E8854(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10050D5FC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004EFA34(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&unk_10071D858, 1, a2);
}

uint64_t sub_10050D620(uint64_t a1)
{
  return sub_100513914(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004E9208);
}

void sub_10050D62C(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 32);
  uint64_t v26 = *(uint64_t **)(v1 + 40);
  id v4 = [*(id *)(v1 + 24) prefixedURI];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  uint64_t v7 = v6;

  id v8 = [v3 prefixedURI];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v11 = v10;

  uint64_t v12 = (uint64_t)sub_1004E89E0(v5, v7, v9, v11, a1);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v7);
  if (!((unint64_t)v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v12);
    if (v13) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease_n(v12, 2LL);
    uint64_t v24 = sub_10047A7B4((uint64_t)v15);
    swift_bridgeObjectRelease(v15);
    uint64_t v25 = *v26;
    *uint64_t v26 = v24;
    swift_bridgeObjectRelease(v25);
    return;
  }

  if (v12 < 0) {
    uint64_t v23 = v12;
  }
  else {
    uint64_t v23 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v12);
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v23);
  if (!v13) {
    goto LABEL_18;
  }
LABEL_3:
  if (v13 >= 1)
  {
    uint64_t v14 = 0LL;
    uint64_t v15 = _swiftEmptyArrayStorage;
    do
    {
      if ((v12 & 0xC000000000000001LL) != 0)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
      }

      else
      {
        uint64_t v16 = *(void *)(v12 + 8 * v14 + 32);
        swift_retain(v16);
      }

      uint64_t v17 = sub_100446EB8();
      uint64_t v19 = v18;
      swift_release(v16);
      if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0) {
        uint64_t v15 = sub_10046D170(0LL, v15[2] + 1LL, 1, v15);
      }
      unint64_t v21 = v15[2];
      unint64_t v20 = v15[3];
      if (v21 >= v20 >> 1) {
        uint64_t v15 = sub_10046D170((void *)(v20 > 1), v21 + 1, 1, v15);
      }
      ++v14;
      v15[2] = v21 + 1;
      id v22 = &v15[2 * v21];
      v22[4] = v17;
      v22[5] = v19;
    }

    while (v13 != v14);
    goto LABEL_19;
  }

  __break(1u);
}

uint64_t sub_10050D848@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E9F94(a1, v2[2], v2[3], v2[4], v2[5], 1, a2);
}

uint64_t sub_10050D868(uint64_t a1)
{
  return sub_1004EA68C(a1, *(void *)(v1 + 16), *(BOOL **)(v1 + 24));
}

uint64_t sub_10050D880@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004EAAD8(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_10050D88C(uint64_t a1)
{
}

uint64_t sub_10050D8A4(os_log_s *a1)
{
  return sub_10050E0F8(a1);
}

uint64_t sub_10050D8B8(uint64_t a1, void *a2)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v7 = a1;
    }
    else {
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v7))
    {
LABEL_3:
      if ((a1 & 0xC000000000000001LL) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
      }
      else {
        swift_retain(*(void *)(a1 + 32));
      }
      sub_10044026C();
      uint64_t v5 = v4;
      id v6 = [a2 rawToken];
      static Data._unconditionallyBridgeFromObjectiveC(_:)(v6);

      __asm { BR              X10 }
    }
  }

  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v3) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease(a1);
  return 0LL;
}

uint64_t sub_10050DE10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v8 = *(void *)(sub_1003F5CB4(&qword_1009BCAD8) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  uint64_t v12 = v10 * v4;
  unint64_t v13 = a3 + v12;
  unint64_t v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10050DF2C(uint64_t a1)
{
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease(a1);
    return;
  }

  if (a1 < 0) {
    uint64_t v17 = a1;
  }
  else {
    uint64_t v17 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v2) {
    goto LABEL_19;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v3 = 0LL;
    uint64_t v4 = IDSRegistrationPropertySupportsStewie;
    uint64_t v5 = _swiftEmptyArrayStorage;
    do
    {
      if ((a1 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
      }
      else {
        id v7 = *(id *)(a1 + 8 * v3 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 capabilities];
      uint64_t v10 = (uint64_t)[v9 valueForCapability:v4];

      if (v10 >= 1)
      {
        id v11 = [v8 pushToken];
        uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
        uint64_t v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0) {
          uint64_t v5 = sub_10046D170(0LL, v5[2] + 1LL, 1, v5);
        }
        unint64_t v16 = v5[2];
        unint64_t v15 = v5[3];
        if (v16 >= v15 >> 1) {
          uint64_t v5 = sub_10046D170((void *)(v15 > 1), v16 + 1, 1, v5);
        }
        v5[2] = v16 + 1;
        id v6 = &v5[2 * v16];
        v6[4] = v12;
        v6[5] = v14;
      }

      ++v3;
    }

    while (v2 != v3);
    goto LABEL_19;
  }

  __break(1u);
}

uint64_t sub_10050E0F8(os_log_s *a1)
{
  return sub_1004EB9F0( a1,  *(void *)(v1 + 16),  *(void **)(v1 + 24),  *(void **)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64));
}

BOOL sub_10050E11C(uint64_t a1)
{
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v13))
  {
    uint64_t v3 = (void *)IDSRegistrationPropertySenderKeyMessageVersion;
    uint64_t v4 = 4LL;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      id v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1LL)) {
        break;
      }
      id v8 = [v5 capabilities];
      id v9 = v3;
      uint64_t v10 = (uint64_t)[v8 valueForCapability:v9];

      BOOL v11 = v10 > 0;
      ++v4;
      if (v10 < 1 || v7 == v2) {
        goto LABEL_20;
      }
    }

    __break(1u);
LABEL_15:
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
  }

  BOOL v11 = 1LL;
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return v11;
}

uint64_t sub_10050E250@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004EF26C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t sub_10050E25C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004EFA34(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&unk_10071D830, 0, a2);
}

uint64_t sub_10050E280@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004F01D8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10050E288(uint64_t a1)
{
  return sub_1004F0424(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10050E2A4(uint64_t a1)
{
  return sub_1004F083C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10050E2BC(uint64_t a1)
{
  return sub_1004F0B68(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10050E2D8()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10050E30C(uint64_t a1)
{
  return sub_1004F1348(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10050E338()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  if (*(void *)(v0 + 40)) {
    swift_release(*(void *)(v0 + 48));
  }
  return swift_deallocObject(v0, 56LL, 7LL);
}

id sub_10050E37C(uint64_t a1)
{
  return sub_1004F158C( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48));
}

uint64_t sub_10050E38C(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_10050E39C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_10050E3E0(uint64_t a1)
{
  return sub_100510268( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1004F18F0);
}

uint64_t sub_10050E3FC()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  if (*(void *)(v0 + 48)) {
    swift_release(*(void *)(v0 + 56));
  }
  return swift_deallocObject(v0, 64LL, 7LL);
}

id sub_10050E448(uint64_t a1)
{
  return sub_1004F1B1C( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void **)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56));
}

uint64_t sub_10050E45C(uint64_t a1)
{
  return sub_10050E478(a1, sub_1004F1D8C);
}

uint64_t sub_10050E478( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

void sub_10050E4A0(uint64_t a1)
{
}

uint64_t sub_10050E4B0()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_10050E4E4(uint64_t a1)
{
  return sub_10050E478(a1, sub_1004F1F54);
}

uint64_t sub_10050E504()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_10050E540(uint64_t a1)
{
}

void sub_10050E54C(uint64_t a1, char *a2)
{
  if (a1)
  {
    id v5 = (void *)v2[4];
    id v6 = (void *)v2[5];
    uint64_t v7 = (void *)v2[3];
    swift_errorRetain(a1);
    swift_errorRetain(a1);
    id v8 = v7;
    id v9 = v5;
    id v10 = v6;
    swift_errorRetain(a1);
    id v11 = v8;
    id v12 = v9;
    id v13 = v10;
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc(42LL, -1LL);
      format = a2;
      uint64_t v26 = (uint64_t)v11;
      uint64_t v17 = (void *)swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v16 = 138413058;
      os_log_type_t type = v15;
      os_log_t log = v14;
      id v18 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v16 + 4, v16 + 12);
      *uint64_t v17 = v11;

      *(_WORD *)(v16 + 12) = 2112;
      uint64_t v26 = (uint64_t)v12;
      id v19 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v16 + 14, v16 + 22);
      v17[1] = v12;

      *(_WORD *)(v16 + 22) = 2112;
      uint64_t v26 = (uint64_t)v13;
      id v20 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v16 + 24, v16 + 32);
      v17[2] = v13;

      *(_WORD *)(v16 + 32) = 2112;
      swift_errorRetain(a1);
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v26 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v16 + 34, v16 + 42);
      v17[3] = v21;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, log, type, format, (uint8_t *)v16, 0x2Au);
      uint64_t v22 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v17, 4LL, v22);
      swift_slowDealloc(v17, -1LL, -1LL);
      swift_slowDealloc(v16, -1LL, -1LL);
      swift_errorRelease(a1);
    }

    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }
  }

uint64_t sub_10050E7F8()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10050E834(uint64_t a1)
{
  return sub_1004F2E2C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10050E860()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_10050E89C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v3 = (void *)v1[4];
    uint64_t v4 = (void *)v1[5];
    uint64_t v5 = v1[3];
    swift_errorRetain(a1);
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(v5);
    id v6 = v3;
    id v7 = v4;
    swift_errorRetain(a1);
    swift_bridgeObjectRetain(v5);
    id v8 = v6;
    id v9 = v7;
    id v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      char v32 = v9;
      uint64_t v12 = swift_slowAlloc(42LL, -1LL);
      uint64_t v31 = (void *)swift_slowAlloc(24LL, -1LL);
      uint64_t v13 = swift_slowAlloc(32LL, -1LL);
      uint64_t v35 = v13;
      *(_DWORD *)uint64_t v12 = 136315906;
      uint64_t v33 = v13;
      os_log_type_t v30 = v11;
      if (v5 && (uint64_t v14 = *(void *)(v5 + 16)) != 0)
      {
        id v29 = v8;
        swift_bridgeObjectRetain(v5);
        os_log_type_t v15 = (unint64_t *)(v5 + 40);
        uint64_t v16 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v17 = *(v15 - 1);
          unint64_t v18 = *v15;
          sub_1004028CC(v17, *v15);
          Swift::String v19 = Data.base64EncodedString(options:)(0LL);
          sub_100402A84(v17, v18);
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
            uint64_t v16 = sub_10046D484(0LL, v16[2] + 1LL, 1, v16);
          }
          unint64_t v21 = v16[2];
          unint64_t v20 = v16[3];
          if (v21 >= v20 >> 1) {
            uint64_t v16 = sub_10046D484((void *)(v20 > 1), v21 + 1, 1, v16);
          }
          v15 += 2;
          v16[2] = v21 + 1;
          *(Swift::String *)&v16[2 * v21 + 4] = v19;
          --v14;
        }

        while (v14);
        swift_bridgeObjectRelease(v5);
        id v8 = v29;
      }

      else
      {
        uint64_t v16 = _swiftEmptyArrayStorage;
      }

      uint64_t v22 = Array.description.getter(v16, &type metadata for String);
      unint64_t v24 = v23;
      swift_bridgeObjectRelease(v16);
      uint64_t v34 = sub_1003FFBB0(v22, v24, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease_n(v5, 2LL);
      *(_WORD *)(v12 + 12) = 2112;
      uint64_t v34 = (uint64_t)v8;
      id v25 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v12 + 14, v12 + 22);
      *uint64_t v31 = v8;

      *(_WORD *)(v12 + 22) = 2112;
      uint64_t v34 = (uint64_t)v32;
      id v26 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v12 + 24, v12 + 32);
      v31[1] = v32;

      *(_WORD *)(v12 + 32) = 2112;
      swift_errorRetain(a1);
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v34 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v12 + 34, v12 + 42);
      void v31[2] = v27;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v10,  v30,  "Failed to reset state for %s for senderURI: %@ receiverURI: %@ error: %@",  (uint8_t *)v12,  0x2Au);
      uint64_t v28 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v31, 3LL, v28);
      swift_slowDealloc(v31, -1LL, -1LL);
      swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);
      swift_errorRelease(a1);
    }

    else
    {
      swift_errorRelease(a1);

      swift_bridgeObjectRelease_n(v5, 2LL);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }
  }

uint64_t sub_10050ECAC(uint64_t a1)
{
  return sub_1004F334C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10050ECC8(uint64_t a1)
{
  uint64_t v3 = *(_BYTE **)(v1 + 48);
  uint64_t v2 = *(void *)(v1 + 56);
  unint64_t v4 = *(void *)(v1 + 64);
  uint64_t result = (uint64_t)sub_1004EEFE4(*(void *)(v1 + 24), *(void *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
  uint64_t v6 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0) {
      result &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(result);
    uint64_t v7 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease(v6);
    _BYTE *v3 = 0;
    return result;
  }

  uint64_t v7 = *(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v7) {
    goto LABEL_14;
  }
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
  }

  else
  {
    uint64_t v8 = 0LL;
    do
    {
      if ((v6 & 0xC000000000000001LL) != 0)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      }

      else
      {
        uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
        swift_retain(v9);
      }

      ++v8;
      sub_1004028CC(v2, v4);
      sub_1004476D4(v2, v4);
      swift_release(v9);
    }

    while (v7 != v8);
    uint64_t v10 = swift_bridgeObjectRelease(v6);
    uint64_t result = dispatch thunk of ModelContext.hasChanges.getter(v10);
    if ((result & 1) != 0) {
      return dispatch thunk of ModelContext.save()();
    }
  }

  return result;
}

uint64_t sub_10050EDF8(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004F3B10);
}

uint64_t sub_10050EE14(uint64_t a1)
{
  uint64_t v2 = (BOOL *)v1[5];
  uint64_t v3 = (uint64_t)sub_1004EEFE4(v1[3], v1[4], 0, a1);
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (v4)
  {
    while ((v3 & 0xC000000000000001LL) == 0)
    {
      uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t result = swift_bridgeObjectRelease(v3);
      if (v5) {
        goto LABEL_13;
      }
      __break(1u);
LABEL_6:
      if (v3 < 0) {
        uint64_t v7 = v3;
      }
      else {
        uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v7);
      if (!v4) {
        goto LABEL_12;
      }
    }

    uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v3);
    swift_unknownObjectRelease(v8, v9);
  }

uint64_t sub_10050EED4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E9F94(a1, v2[2], v2[3], v2[4], v2[5], 0, a2);
}

void sub_10050EEF4(uint64_t a1)
{
}

uint64_t sub_10050EF0C(uint64_t a1)
{
  return sub_1004F474C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(BOOL **)(v1 + 32));
}

uint64_t sub_10050EF38(uint64_t a1)
{
  return sub_1004F4B34(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10050EF54()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 28) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10050EFB4(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Date(0LL) - 8) + 80LL);
  return sub_1004F4EE0(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24), v1 + ((v3 + 28) & ~v3));
}

id sub_10050F008(uint64_t a1)
{
  return sub_1004F9680( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  (uint64_t)&unk_100908C38,  (uint64_t)sub_100511BA8,  (uint64_t)&unk_100908C50);
}

uint64_t sub_10050F03C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_10050F068()
{
  uint64_t v1 = v0[2];
  id v41 = (id)v0[3];
  uint64_t v40 = v0[4];
  if ((v1 & 0xC000000000000001LL) != 0)
  {
    if (v1 < 0) {
      uint64_t v2 = v0[2];
    }
    else {
      uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v1);
    uint64_t v3 = __CocoaSet.makeIterator()(v2);
    uint64_t v4 = sub_10041D3C4(0LL, (unint64_t *)&unk_1009BC270, &OBJC_CLASS___IDSURI_ptr);
    uint64_t v5 = sub_100438928((unint64_t *)&unk_1009BAC00, (unint64_t *)&unk_1009BC270, &OBJC_CLASS___IDSURI_ptr);
    uint64_t v6 = Set.Iterator.init(_cocoa:)(v45, v3, v4, v5);
    uint64_t v1 = v45[0];
    uint64_t v39 = v45[1];
    uint64_t v7 = v45[2];
    uint64_t v8 = v45[3];
    unint64_t v9 = v45[4];
  }

  else
  {
    uint64_t v10 = -1LL << *(_BYTE *)(v1 + 32);
    uint64_t v39 = v1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v9 = v12 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain(v1);
    uint64_t v8 = 0LL;
  }

  int64_t v38 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_13;
  }
  while (1)
  {
    if (v9)
    {
      uint64_t v13 = (v9 - 1) & v9;
      unint64_t v14 = __clz(__rbit64(v9)) | (v8 << 6);
      uint64_t v15 = v8;
      goto LABEL_30;
    }

    int64_t v22 = v8 + 1;
    if (__OFADD__(v8, 1LL)) {
      break;
    }
    if (v22 >= v38) {
      goto LABEL_33;
    }
    unint64_t v23 = *(void *)(v39 + 8 * v22);
    uint64_t v15 = v8 + 1;
    if (!v23)
    {
      uint64_t v15 = v8 + 2;
      if (v8 + 2 >= v38) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v39 + 8 * v15);
      if (!v23)
      {
        uint64_t v15 = v8 + 3;
        if (v8 + 3 >= v38) {
          goto LABEL_33;
        }
        unint64_t v23 = *(void *)(v39 + 8 * v15);
        if (!v23)
        {
          uint64_t v15 = v8 + 4;
          if (v8 + 4 >= v38) {
            goto LABEL_33;
          }
          unint64_t v23 = *(void *)(v39 + 8 * v15);
          if (!v23)
          {
            uint64_t v24 = v8 + 5;
            while (v38 != v24)
            {
              unint64_t v23 = *(void *)(v39 + 8 * v24++);
              if (v23)
              {
                uint64_t v15 = v24 - 1;
                goto LABEL_29;
              }
            }

id sub_10050F3F0(uint64_t a1)
{
  return sub_1004FCBF4( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  (uint64_t)&unk_100908BE8,  (uint64_t)sub_1005119A8,  (uint64_t)&unk_100908C00);
}

uint64_t sub_10050F424(uint64_t a1)
{
  return sub_1004F55B8(a1, *(void *)(v1 + 16), *(char ****)(v1 + 24));
}

uint64_t sub_10050F43C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_10050F460(uint64_t a1)
{
  return sub_1004F5BA0( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  (uint64_t)&unk_100908B98,  (uint64_t)sub_100511898,  (uint64_t)&unk_100908BB0);
}

void sub_10050F490(uint64_t a1)
{
}

void sub_10050F4A8(uint64_t a1)
{
  uint64_t v2 = *(uint64_t ****)(v1 + 24);
  uint64_t v3 = (uint64_t)sub_1004F0674(a1, (uint64_t)sub_10050E2A4);
  uint64_t v4 = v3;
  if (!((unint64_t)v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v3);
    uint64_t v21 = v2;
    if (v5) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v4);
    uint64_t v18 = sub_100438A1C( (uint64_t)_swiftEmptyArrayStorage,  (unint64_t *)&unk_1009BC270,  &OBJC_CLASS___IDSURI_ptr,  (unint64_t *)&unk_1009BAC00,  &qword_1009B9D90);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    uint64_t v19 = sub_100504048( v18,  (unint64_t *)&unk_1009BC270,  &OBJC_CLASS___IDSURI_ptr,  (unint64_t *)&unk_1009BAC00);
    swift_bridgeObjectRelease(v18);
    id v20 = *v21;
    *uint64_t v21 = v19;
    swift_bridgeObjectRelease(v20);
    return;
  }

  if (v3 < 0) {
    uint64_t v17 = v3;
  }
  else {
    uint64_t v17 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v3);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  uint64_t v21 = v2;
  if (!v5) {
    goto LABEL_18;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0LL; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001LL) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      }

      else
      {
        uint64_t v8 = *(void *)(v4 + 8 * i + 32);
        swift_retain(v8);
      }

      sub_100446C34();
      uint64_t v10 = v9;
      id v11 = objc_allocWithZone(&OBJC_CLASS___IDSURI);
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
      id v13 = [v11 initWithPrefixedURI:v12];

      uint64_t v14 = swift_release(v8);
      if (v13)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        unint64_t v16 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v15 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v16 >= v15 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1LL);
        }
        uint64_t v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
        specialized Array._endMutation()(v7);
      }
    }

    goto LABEL_18;
  }

  __break(1u);
}

uint64_t sub_10050F6FC(uint64_t a1)
{
  return sub_1004F6C54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10050F728()
{
  return sub_1004F7FDC();
}

double sub_10050F890()
{
  id v0 = [(id)objc_opt_self(IDSServerBag) sharedInstance];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v9, v2);
    swift_unknownObjectRelease(v2, v3);
  }

  else
  {
    memset(v9, 0, sizeof(v9));
  }

  sub_10041D378((uint64_t)v9, (uint64_t)v10, &qword_1009B92B8);
  if (v11)
  {
    uint64_t v4 = sub_10041D3C4(0LL, (unint64_t *)&unk_1009BACA0, &OBJC_CLASS___NSNumber_ptr);
    if ((swift_dynamicCast(&v8, v10, (char *)&type metadata for Any + 8, v4, 6LL) & 1) != 0)
    {
      id v5 = v8;
      id v6 = [v8 integerValue];

      return (double)(uint64_t)v6;
    }
  }

  else
  {
    sub_10040A274((uint64_t)v10, &qword_1009B92B8);
  }

  return 6048000.0;
}

id sub_10050F9E4(uint64_t a1)
{
  return sub_1004F9680( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  (uint64_t)&unk_100908B48,  (uint64_t)sub_100511888,  (uint64_t)&unk_100908B60);
}

id sub_10050FA18(uint64_t a1)
{
  return sub_1004F9680( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  (uint64_t)&unk_100908AF8,  (uint64_t)sub_100511728,  (uint64_t)&unk_100908B10);
}

uint64_t sub_10050FA4C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10050FA70(uint64_t a1)
{
  return sub_1004F9368(a1, *(double *)(v1 + 24));
}

id sub_10050FA9C(uint64_t a1)
{
  return sub_1004F9680( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  (uint64_t)&unk_100908AA8,  (uint64_t)sub_100511718,  (uint64_t)&unk_100908AC0);
}

uint64_t sub_10050FAD0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004F9BEC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10050FAD8()
{
  uint64_t v1 = sub_1003F5CB4(&qword_1009BC2D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10050FB3C(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_1003F5CB4(&qword_1009BC2D0) - 8) + 80LL);
  return sub_1004F9EC0(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10050FB88()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10050FBAC(uint64_t a1)
{
}

uint64_t sub_10050FBB8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10050FBDC(uint64_t a1)
{
  return sub_1004FA284(a1, *(void *)(v1 + 16), *(double *)(v1 + 24));
}

void sub_10050FBF8(uint64_t a1)
{
}

uint64_t sub_10050FC04()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10050FC28(uint64_t a1)
{
  return sub_1004FB330(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10050FC44()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_10050FC70(uint64_t a1)
{
  return sub_1004FCBF4( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  (uint64_t)&unk_100908A58,  (uint64_t)sub_1005112B8,  (uint64_t)&unk_100908A70);
}

uint64_t sub_10050FCA4(uint64_t a1)
{
  return sub_1004FCF30(a1, *(void *)(v1 + 16));
}

void sub_10050FCBC(uint64_t a1)
{
}

void sub_10050FCC8(uint64_t a1, const char *a2)
{
  if (a1)
  {
    swift_errorRetain(a1);
    swift_errorRetain(a1);
    uint64_t v4 = swift_errorRetain(a1);
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v8 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v7 = 138412290;
      swift_errorRetain(a1);
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v11 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v7 + 4, v7 + 12);
      *id v8 = v9;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, a2, v7, 0xCu);
      uint64_t v10 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v8, 1LL, v10);
      swift_slowDealloc(v8, -1LL, -1LL);
      swift_slowDealloc(v7, -1LL, -1LL);
      swift_errorRelease(a1);
    }

    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }
  }

void sub_10050FE74(uint64_t a1)
{
}

void sub_10050FE94(uint64_t a1)
{
}

uint64_t sub_10050FEAC(uint64_t a1)
{
  return sub_1004FE540(a1, *(void **)(v1 + 16));
}

void sub_10050FED4(uint64_t a1)
{
}

void sub_10050FEF4(uint64_t a1)
{
}

uint64_t sub_10050FF10(uint64_t a1)
{
  return sub_100500F8C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10050FF3C(uint64_t a1)
{
  return sub_100501788(a1);
}

uint64_t sub_10050FF64(uint64_t a1)
{
  return sub_100501B1C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10050FF8C(uint64_t a1)
{
  return sub_100502B1C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_10050FFA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100503304(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_10050FFB0(uint64_t a1)
{
  return sub_100503554(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10050FFC8()
{
  return type metadata accessor for SDPersistenceManager(0LL);
}

uint64_t sub_10050FFD0(uint64_t a1)
{
  uint64_t result = type metadata accessor for Logger(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    v4[3] = &unk_10071D600;
    void v4[4] = "\b";
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t type metadata accessor for ContainerLoadMetric()
{
  return objc_opt_self(&OBJC_CLASS____TtC17identityservicesdP33_534A9A00092BF767A56A700BAD85BE0F19ContainerLoadMetric);
}

uint64_t storeEnumTagSinglePayload for ContainerLoadMetric.ContainerType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(__chkstk_darwin(v3, v4) = 1;
  }
  else {
    LODWORD(__chkstk_darwin(v3, v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1005100CC + 4 * byte_10071D5A5[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100510100 + 4 * byte_10071D5A0[v4]))();
}

uint64_t sub_100510100(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100510108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100510110LL);
  }
  return result;
}

uint64_t sub_10051011C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100510124LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_100510128(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100510130(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContainerLoadMetric.ContainerType()
{
  return &type metadata for ContainerLoadMetric.ContainerType;
}

void type metadata accessor for FTMessageDeliveryInterface()
{
  if (!qword_1009BC3A0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, &unk_100908470);
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1009BC3A0);
    }
  }

unint64_t sub_1005101A4()
{
  unint64_t result = qword_1009C70C0[0];
  if (!qword_1009C70C0[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_10071D6E4, &type metadata for ContainerLoadMetric.ContainerType);
    atomic_store(result, qword_1009C70C0);
  }

  return result;
}

uint64_t sub_1005101E8(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100501338);
}

void sub_100510204(uint64_t a1)
{
}

void sub_100510218(uint64_t a1)
{
}

uint64_t sub_10051024C(uint64_t a1)
{
  return sub_100510268( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100500428);
}

uint64_t sub_100510268( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_10051029C(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100500284);
}

uint64_t sub_1005102B8(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004FFA2C);
}

uint64_t sub_1005102D4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_100510308(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004FF648);
}

uint64_t sub_100510324(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004FF3D0);
}

void sub_100510340(uint64_t a1)
{
}

void sub_100510354(uint64_t a1)
{
}

void sub_1005103A0(uint64_t a1)
{
}

void sub_1005103B4(uint64_t a1)
{
}

uint64_t sub_1005103E8(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004FEA38);
}

uint64_t sub_100510404()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100510430()
{
  if (*(void *)(v0 + 24)) {
    swift_release(*(void *)(v0 + 32));
  }
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100510464(uint64_t a1)
{
  return sub_1005102D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004E65F4);
}

uint64_t sub_100510480(uint64_t a1)
{
  return sub_100510494(a1);
}

uint64_t sub_100510494(uint64_t a1)
{
  return sub_1004E0884( a1,  *(void **)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(id *)(v1 + 40),  *(void **)(v1 + 48),  *(_BYTE *)(v1 + 56),  *(uint64_t **)(v1 + 64));
}

uint64_t sub_1005104BC(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(v2 + 16) + 16LL))( *(void *)(v2 + 16),  a1 & 1,  a2);
}

uint64_t sub_1005104D8()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 56));

  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_10051051C(uint64_t a1)
{
  return sub_10051062C( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1004DF048);
}

uint64_t sub_10051053C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 72LL, 7LL);
}

void sub_100510588(uint64_t a1)
{
}

void sub_10051059C(uint64_t a1)
{
}

uint64_t sub_1005105D4()
{
  sub_100402A84(*(void *)(v0 + 56), *(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_100510610(uint64_t a1)
{
  return sub_10051062C( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1004DDFD0);
}

uint64_t sub_10051062C( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_100510668()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_10051069C(uint64_t a1)
{
  return sub_1005106B0(a1);
}

uint64_t sub_1005106B0(uint64_t a1)
{
  return sub_1004DBF00(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1005106D4()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100510708(uint64_t a1)
{
  return sub_10050E478(a1, sub_1004DBAE4);
}

uint64_t sub_100510724()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10051074C()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v7 + v5;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);
  v9(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v6);
}

uint64_t sub_1005107D0(uint64_t a1)
{
  return sub_1005107E4(a1);
}

uint64_t sub_1005107E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date(0LL) - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  return sub_1004DA6FC(a1, v1 + ((v4 + 16) & ~v4), v1 + ((*(void *)(v3 + 64) + v4 + ((v4 + 16) & ~v4)) & ~v4));
}

void sub_100510840()
{
}

unint64_t sub_100510860()
{
  unint64_t result = qword_1009BC438;
  if (!qword_1009BC438)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC430);
    sub_100510D90(&qword_1009BC440, &qword_1009BC420, &qword_1009BC448, &qword_1009BC418);
    sub_1005134D4(&qword_1009BC450, &qword_1009BC410);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC438);
  }

  return result;
}

uint64_t sub_10051090C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100502DD4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t *sub_100510914(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  unint64_t v5 = a1[6];
  uint64_t v6 = a1[7];
  unint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  unint64_t v9 = a1[10];
  uint64_t v10 = a1[11];
  unint64_t v12 = a1[12];
  sub_10040AD00(*a1, a1[1]);
  sub_10040AD00(v2, v3);
  sub_10040AD00(v4, v5);
  sub_10040AD00(v6, v7);
  sub_10040AD00(v8, v9);
  sub_10040AD00(v10, v12);
  return a1;
}

id sub_1005109BC()
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = 0LL;
  id v2 = [(id)swift_getObjCClassFromMetadata(v0) identityWithData:isa error:&v8];

  id v3 = v8;
  if (v2)
  {
    id v4 = v8;
  }

  else
  {
    id v5 = v8;
    _convertNSErrorToError(_:)(v3);

    swift_willThrow(v6);
  }

  return v2;
}

id sub_100510A84()
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  Class v2 = Data._bridgeToObjectiveC()().super.isa;
  id v9 = 0LL;
  id v3 =  [(id)swift_getObjCClassFromMetadata(v0) identityWithIdentityData:isa prekeyData:v2 error:&v9];

  id v4 = v9;
  if (v3)
  {
    id v5 = v9;
  }

  else
  {
    id v6 = v9;
    _convertNSErrorToError(_:)(v4);

    swift_willThrow(v7);
  }

  return v3;
}

uint64_t sub_100510B74( uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v5 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v9 = *(void *)(a5(0LL) - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  uint64_t v13 = v11 * v5;
  unint64_t v14 = a3 + v13;
  unint64_t v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100510C8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100510CB8(uint64_t a1)
{
  return a1;
}

unint64_t sub_100510CE4()
{
  unint64_t result = qword_1009BC510;
  if (!qword_1009BC510)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC508);
    sub_100510D90(&qword_1009BC518, &qword_1009BC4F8, &qword_1009BC520, &qword_1009BC4F0);
    sub_1005134D4(&qword_1009BC450, &qword_1009BC410);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC510);
  }

  return result;
}

uint64_t sub_100510D90(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = sub_100401A88(a2);
    sub_10047E23C(a3, a4, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.KeyPath<A, B>, v8);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100510E08@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004FD984(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_100510E10()
{
  unint64_t result = qword_1009BC570;
  if (!qword_1009BC570)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC568);
    sub_100510D90(&qword_1009BC578, &qword_1009BC558, &qword_1009BC580, &qword_1009BC550);
    sub_100510E9C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC570);
  }

  return result;
}

unint64_t sub_100510E9C()
{
  unint64_t result = qword_1009BC588;
  if (!qword_1009BC588)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC548);
    sub_10040A2B0( &qword_1009BAD20,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    sub_10040A2B0( &qword_1009BAD00,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC588);
  }

  return result;
}

uint64_t sub_100510F40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004FD0B0(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_100510F48()
{
  unint64_t result = qword_1009BC618;
  if (!qword_1009BC618)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, (unint64_t *)&qword_1009BC618);
  }

  return result;
}

unint64_t sub_100510F8C()
{
  unint64_t result = qword_1009BC648;
  if (!qword_1009BC648)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC640);
    sub_100510FF8();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC648);
  }

  return result;
}

unint64_t sub_100510FF8()
{
  unint64_t result = qword_1009BC650;
  if (!qword_1009BC650)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC5E8);
    sub_100511064();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC650);
  }

  return result;
}

unint64_t sub_100511064()
{
  unint64_t result = qword_1009BC658;
  if (!qword_1009BC658)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC5E0);
    sub_1005110F0();
    sub_100510D90(&qword_1009BC688, &qword_1009BC5D0, &qword_1009BC690, &qword_1009BC5C8);
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for <> PredicateExpressions.SequenceContains<A, B>,  v1);
    atomic_store(result, (unint64_t *)&qword_1009BC658);
  }

  return result;
}

unint64_t sub_1005110F0()
{
  unint64_t result = qword_1009BC660;
  if (!qword_1009BC660)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC5D8);
    sub_1005111A4( &qword_1009BC668,  &qword_1009BC5F0,  (void (*)(void))sub_100451340,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    sub_1005111A4( &qword_1009BC678,  &qword_1009BC5F0,  (void (*)(void))sub_100451294,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC660);
  }

  return result;
}

uint64_t sub_1005111A4(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = sub_100401A88(a2);
    a3();
    uint64_t result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_100511208()
{
  unint64_t result = qword_1009BC698;
  if (!qword_1009BC698)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC5C0);
    sub_100510D90(&qword_1009BC6A0, &qword_1009BC5B8, &qword_1009BC690, &qword_1009BC5C8);
    sub_1005134D4(&qword_1009BC6A8, &qword_1009BC5B0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC698);
  }

  return result;
}

uint64_t sub_1005112B8()
{
  return sub_1005119B4("Error cleaning up invalid sender key entries: %@");
}

uint64_t sub_1005112C4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004FBC44(a1, *(void *)(v2 + 16), 1, a2);
}

uint64_t sub_1005112E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004FBC44(a1, *(void *)(v2 + 16), 0, a2);
}

uint64_t sub_1005112FC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004FC210(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_100511304()
{
  unint64_t result = qword_1009BC728;
  if (!qword_1009BC728)
  {
    uint64_t v1 = sub_100401A88((uint64_t *)&unk_1009BC6E0);
    sub_1005111A4( &qword_1009BC730,  &qword_1009BC6D8,  (void (*)(void))sub_100511390,  (uint64_t)&protocol conformance descriptor for <> PredicateExpressions.Negation<A>);
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC728);
  }

  return result;
}

unint64_t sub_100511390()
{
  unint64_t result = qword_1009BC738;
  if (!qword_1009BC738)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC6D0);
    sub_10051141C();
    sub_100510D90(&qword_1009BC758, &qword_1009BC6C0, &qword_1009BC690, &qword_1009BC5C8);
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for <> PredicateExpressions.SequenceContains<A, B>,  v1);
    atomic_store(result, (unint64_t *)&qword_1009BC738);
  }

  return result;
}

unint64_t sub_10051141C()
{
  unint64_t result = qword_1009BC740;
  if (!qword_1009BC740)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC6C8);
    sub_10047DBF8( (unint64_t *)&unk_1009BB0D0,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    sub_10047DBF8( &qword_1009BC750,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC740);
  }

  return result;
}

unint64_t sub_1005114B8()
{
  unint64_t result = qword_1009BC788;
  if (!qword_1009BC788)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC780);
    sub_100511524();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC788);
  }

  return result;
}

unint64_t sub_100511524()
{
  unint64_t result = qword_1009BC790;
  if (!qword_1009BC790)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC770);
    sub_100510D90(&qword_1009BC798, &qword_1009BC768, &qword_1009BC690, &qword_1009BC5C8);
    sub_100510E9C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC790);
  }

  return result;
}

uint64_t sub_1005115B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004FA7F8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1005115B8(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = sub_100401A88(a2);
    a3();
    uint64_t result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_10051161C()
{
  unint64_t result = qword_1009BC7C0;
  if (!qword_1009BC7C0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC7A8);
    sub_100511390();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC7C0);
  }

  return result;
}

unint64_t sub_100511688()
{
  unint64_t result = qword_1009BC800;
  if (!qword_1009BC800)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC7F8);
    sub_100510D90(&qword_1009BC808, &qword_1009BC7E8, &qword_1009BC810, &qword_1009BC7E0);
    sub_100510E9C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC800);
  }

  return result;
}

uint64_t sub_100511718()
{
  return sub_100511BB4((uint64_t)"Error cleanup expired short handles: %@");
}

uint64_t sub_100511728()
{
  return sub_100511BB4((uint64_t)"Error cleaning up expired sessions: %@");
}

uint64_t sub_100511734@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004F8BF8(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_10051174C()
{
  unint64_t result = qword_1009BC880;
  if (!qword_1009BC880)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC858);
    sub_100510D90(&qword_1009BC888, &qword_1009BC850, &qword_1009BC890, &qword_1009BC848);
    sub_1005134D4(&qword_1009BC450, &qword_1009BC410);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC880);
  }

  return result;
}

unint64_t sub_1005117F8()
{
  unint64_t result = qword_1009BC8C0;
  if (!qword_1009BC8C0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC8B8);
    sub_100510D90(&qword_1009BC8C8, &qword_1009BC8A8, &qword_1009BC8D0, &qword_1009BC8A0);
    sub_100510E9C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC8C0);
  }

  return result;
}

uint64_t sub_100511888()
{
  return sub_100511BB4((uint64_t)"Error cleaning up orphaned IDSQuerySDDevices: %@");
}

uint64_t sub_100511898()
{
  return (*(uint64_t (**)(BOOL))(v0 + 24))(*(void *)(v0 + 16) == 0LL);
}

unint64_t sub_1005118C4()
{
  unint64_t result = qword_1009BC988;
  if (!qword_1009BC988)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC980);
    sub_100510D90(&qword_1009BC990, &qword_1009BC970, &qword_1009BC998, &qword_1009BC968);
    sub_1005134D4(&qword_1009BC9A0, &qword_1009BC960);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC988);
  }

  return result;
}

uint64_t sub_100511974()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1005119A8()
{
  return sub_1005119B4("Error saving donated handles for offgrid delivery: %@");
}

uint64_t sub_1005119B4(char *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  id v3 = *(uint64_t (**)(uint64_t))(v1 + 32);
  if (!v2) {
    return v3(1LL);
  }
  swift_errorRetain(v2);
  swift_errorRetain(v2);
  uint64_t v5 = swift_errorRetain(v2);
  id v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    format = a1;
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v2);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v2);
    uint64_t v14 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v8 + 4, v8 + 12);
    *uint64_t v9 = v10;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, format, v8, 0xCu);
    uint64_t v11 = sub_1003F5CB4(&qword_1009B92C8);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {

    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  v3(0LL);
  return swift_errorRelease(v2);
}

uint64_t sub_100511B6C()
{
  if (*(void *)(v0 + 32)) {
    swift_release(*(void *)(v0 + 40));
  }
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100511BA8()
{
  return sub_100511BB4((uint64_t)"Error saving key roll index: %@");
}

uint64_t sub_100511BB4(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  id v3 = *(uint64_t (**)(uint64_t))(v1 + 32);
  if (v2)
  {
    id v4 = (const char *)result;
    swift_errorRetain(v2);
    swift_errorRetain(v2);
    uint64_t v5 = swift_errorRetain(v2);
    id v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v8 = 138412290;
      swift_errorRetain(v2);
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v2);
      uint64_t v12 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4, v8 + 12);
      *uint64_t v9 = v10;
      swift_errorRelease(v2);
      swift_errorRelease(v2);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v4, v8, 0xCu);
      uint64_t v11 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v9, 1LL, v11);
      swift_slowDealloc(v9, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);

      if (!v3) {
        return swift_errorRelease(v2);
      }
    }

    else
    {

      swift_errorRelease(v2);
      swift_errorRelease(v2);
      if (!v3) {
        return swift_errorRelease(v2);
      }
    }

    v3(0LL);
    return swift_errorRelease(v2);
  }

  if (v3) {
    return v3(1LL);
  }
  return result;
}

unint64_t sub_100511D78()
{
  unint64_t result = qword_1009BC9F8;
  if (!qword_1009BC9F8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC9F0);
    sub_1005115B8( &qword_1009BCA00,  &qword_1009BC9E0,  (void (*)(void))sub_100511E0C,  (uint64_t)&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>);
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BC9F8);
  }

  return result;
}

unint64_t sub_100511E0C()
{
  unint64_t result = qword_1009BCA08;
  if (!qword_1009BCA08)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BC9D8);
    sub_100510D90(&qword_1009BC758, &qword_1009BC6C0, &qword_1009BC690, &qword_1009BC5C8);
    sub_1005134D4(&qword_1009BC450, &qword_1009BC410);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCA08);
  }

  return result;
}

uint64_t sub_100511EB8(uint64_t a1)
{
  return sub_100513A8C( a1,  (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1004F2310);
}

unint64_t sub_100511EC4()
{
  unint64_t result = qword_1009BCA40;
  if (!qword_1009BCA40)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCA38);
    sub_100511D78();
    sub_100511F30();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCA40);
  }

  return result;
}

unint64_t sub_100511F30()
{
  unint64_t result = qword_1009BCA48;
  if (!qword_1009BCA48)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCA28);
    sub_100510D90(&qword_1009BC688, &qword_1009BC5D0, &qword_1009BC690, &qword_1009BC5C8);
    sub_100511FBC();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCA48);
  }

  return result;
}

unint64_t sub_100511FBC()
{
  unint64_t result = qword_1009BCA50;
  if (!qword_1009BCA50)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCA20);
    sub_100451340();
    sub_100451294();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCA50);
  }

  return result;
}

uint64_t sub_100512028()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  if (*(void *)(v0 + 56)) {
    swift_release(*(void *)(v0 + 64));
  }
  return swift_deallocObject(v0, 72LL, 7LL);
}

void sub_10051207C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void (*)(uint64_t))v0[7];
  if (v1)
  {
    id v3 = (void *)v0[5];
    id v4 = (void *)v0[6];
    uint64_t v5 = v0[4];
    swift_errorRetain(v1);
    swift_errorRetain(v1);
    swift_bridgeObjectRetain(v5);
    id v6 = v3;
    id v7 = v4;
    swift_errorRetain(v1);
    swift_bridgeObjectRetain(v5);
    id v8 = v6;
    id v9 = v7;
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc(42LL, -1LL);
      uint64_t v13 = (void *)swift_slowAlloc(24LL, -1LL);
      uint64_t v23 = swift_slowAlloc(32LL, -1LL);
      uint64_t v25 = v23;
      *(_DWORD *)uint64_t v12 = 136315906;
      swift_bridgeObjectRetain(v5);
      os_log_type_t type = v11;
      uint64_t v15 = Array.description.getter(v14, &type metadata for Data);
      unint64_t v17 = v16;
      swift_bridgeObjectRelease(v5);
      uint64_t v24 = sub_1003FFBB0(v15, v17, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease_n(v5, 2LL);
      *(_WORD *)(v12 + 12) = 2112;
      uint64_t v24 = (uint64_t)v8;
      id v18 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v12 + 14, v12 + 22);
      *uint64_t v13 = v8;

      *(_WORD *)(v12 + 22) = 2112;
      uint64_t v24 = (uint64_t)v9;
      id v19 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v12 + 24, v12 + 32);
      v13[1] = v9;

      *(_WORD *)(v12 + 32) = 2112;
      swift_errorRetain(v1);
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError(v1);
      uint64_t v24 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v12 + 34, v12 + 42);
      v13[2] = v20;
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl( (void *)&_mh_execute_header,  v10,  type,  "Failed to mark keyIDs: %s as didSend for senderURI: %@ receiverURI: %@ error: %@",  (uint8_t *)v12,  0x2Au);
      uint64_t v21 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v13, 3LL, v21);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);

      if (!v2) {
        goto LABEL_9;
      }
    }

    else
    {

      swift_bridgeObjectRelease_n(v5, 2LL);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      if (!v2)
      {
LABEL_9:
        swift_errorRelease(v1);
        return;
      }
    }

    v2(0LL);
    goto LABEL_9;
  }

  if (v2) {
    v2(1LL);
  }
}

uint64_t sub_1005123BC()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  if (*(void *)(v0 + 48)) {
    swift_release(*(void *)(v0 + 56));
  }
  return swift_deallocObject(v0, 64LL, 7LL);
}

void sub_100512408()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void (*)(void))v0[6];
  if (v1)
  {
    uint64_t v4 = v0[4];
    id v3 = (void *)v0[5];
    swift_errorRetain(v1);
    swift_errorRetain(v1);
    swift_bridgeObjectRetain(v4);
    id v5 = v3;
    swift_errorRetain(v1);
    swift_bridgeObjectRetain(v4);
    id v6 = v5;
    id v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc(32LL, -1LL);
      uint64_t v10 = (void *)swift_slowAlloc(16LL, -1LL);
      uint64_t v18 = swift_slowAlloc(32LL, -1LL);
      uint64_t v21 = v18;
      *(_DWORD *)uint64_t v9 = 136315650;
      swift_bridgeObjectRetain(v4);
      uint64_t v12 = Array.description.getter(v11, &type metadata for Data);
      id v19 = v2;
      unint64_t v14 = v13;
      swift_bridgeObjectRelease(v4);
      uint64_t v20 = sub_1003FFBB0(v12, v14, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v4, 2LL);
      *(_WORD *)(v9 + 12) = 2112;
      uint64_t v20 = (uint64_t)v6;
      id v15 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v9 + 14, v9 + 22);
      *uint64_t v10 = v6;

      *(_WORD *)(v9 + 22) = 2112;
      swift_errorRetain(v1);
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError(v1);
      uint64_t v20 = v16;
      uint64_t v2 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v9 + 24, v9 + 32);
      v10[1] = v16;
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  v8,  "Failed to mark keyIDs %s as certified delivered for receiverPushToken %@ error: %@",  (uint8_t *)v9,  0x20u);
      uint64_t v17 = sub_1003F5CB4(&qword_1009B92C8);
      swift_arrayDestroy(v10, 2LL, v17);
      swift_slowDealloc(v10, -1LL, -1LL);
      swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1LL, -1LL);
      swift_slowDealloc(v9, -1LL, -1LL);

      if (!v19) {
        goto LABEL_9;
      }
    }

    else
    {

      swift_bridgeObjectRelease_n(v4, 2LL);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      if (!v2)
      {
LABEL_9:
        swift_errorRelease(v1);
        return;
      }
    }

    v2(0LL);
    goto LABEL_9;
  }

  if (v2) {
    v2(1LL);
  }
}

unint64_t sub_1005126F0()
{
  unint64_t result = qword_1009BCA88;
  if (!qword_1009BCA88)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCA80);
    sub_100510D90(&qword_1009BCA90, &qword_1009BCA78, &qword_1009BC810, &qword_1009BC7E0);
    sub_1005134D4(&qword_1009BCA98, &qword_1009BCA70);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCA88);
  }

  return result;
}

unint64_t sub_10051279C()
{
  unint64_t result = qword_1009BCAB8;
  if (!qword_1009BCAB8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCAB0);
    sub_100511E0C();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCAB8);
  }

  return result;
}

unint64_t sub_100512808()
{
  unint64_t result = qword_1009BCAC8;
  if (!qword_1009BCAC8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCAC0);
    sub_100511F30();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCAC8);
  }

  return result;
}

unint64_t sub_100512874()
{
  unint64_t result = qword_1009BCAF0;
  if (!qword_1009BCAF0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCAE8);
    sub_100511D78();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCAF0);
  }

  return result;
}

unint64_t sub_1005128E0()
{
  unint64_t result = qword_1009BCB18;
  if (!qword_1009BCB18)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCB10);
    sub_10051294C();
    sub_100511208();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCB18);
  }

  return result;
}

unint64_t sub_10051294C()
{
  unint64_t result = qword_1009BCB20;
  if (!qword_1009BCB20)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCB00);
    sub_1005129B8();
    sub_100511E0C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCB20);
  }

  return result;
}

unint64_t sub_1005129B8()
{
  unint64_t result = qword_1009BCB28;
  if (!qword_1009BCB28)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCAF8);
    sub_100511064();
    sub_100511E0C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCB28);
  }

  return result;
}

unint64_t sub_100512A24()
{
  unint64_t result = qword_1009BCB40;
  if (!qword_1009BCB40)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCB38);
    sub_100511064();
    sub_100511F30();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCB40);
  }

  return result;
}

unint64_t sub_100512A90()
{
  unint64_t result = qword_1009BCBA8;
  if (!qword_1009BCBA8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCBA0);
    sub_100512AFC();
    sub_100512BA8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCBA8);
  }

  return result;
}

unint64_t sub_100512AFC()
{
  unint64_t result = qword_1009BCBB0;
  if (!qword_1009BCBB0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCB80);
    sub_100510D90(&qword_1009BCBB8, &qword_1009BCB78, &qword_1009BCBC0, &qword_1009BCB70);
    sub_1005134D4(&qword_1009BC450, &qword_1009BC410);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCBB0);
  }

  return result;
}

unint64_t sub_100512BA8()
{
  unint64_t result = qword_1009BCBC8;
  if (!qword_1009BCBC8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCB68);
    sub_100510D90(&qword_1009BCBD0, &qword_1009BCB60, &qword_1009BCBC0, &qword_1009BCB70);
    sub_100510E9C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCBC8);
  }

  return result;
}

unint64_t sub_100512C34()
{
  unint64_t result = qword_1009BCC10;
  if (!qword_1009BCC10)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCC08);
    sub_1005115B8( &qword_1009BCC18,  &qword_1009BCBF8,  (void (*)(void))sub_100512AFC,  (uint64_t)&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>);
    sub_100512CC8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCC10);
  }

  return result;
}

unint64_t sub_100512CC8()
{
  unint64_t result = qword_1009BCC20;
  if (!qword_1009BCC20)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCBF0);
    sub_100510D90(&qword_1009BCC28, &qword_1009BCBE8, &qword_1009BCBC0, &qword_1009BCB70);
    sub_100511FBC();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCC20);
  }

  return result;
}

unint64_t sub_100512D54()
{
  unint64_t result = qword_1009BCC70;
  if (!qword_1009BCC70)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCC68);
    sub_1005115B8( &qword_1009BCC78,  &qword_1009BCC50,  (void (*)(void))sub_100512DE8,  (uint64_t)&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>);
    sub_1005117F8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCC70);
  }

  return result;
}

unint64_t sub_100512DE8()
{
  unint64_t result = qword_1009BCC80;
  if (!qword_1009BCC80)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCC48);
    sub_100510D90(&qword_1009BCC88, &qword_1009BCC40, &qword_1009BC8D0, &qword_1009BC8A0);
    sub_1005134D4(&qword_1009BC450, &qword_1009BC410);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCC80);
  }

  return result;
}

unint64_t sub_100512E94()
{
  unint64_t result = qword_1009BCCA8;
  if (!qword_1009BCCA8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCCA0);
    sub_1005115B8( &qword_1009BCC78,  &qword_1009BCC50,  (void (*)(void))sub_100512DE8,  (uint64_t)&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>);
    sub_100512DE8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCCA8);
  }

  return result;
}

unint64_t sub_100512F28()
{
  unint64_t result = qword_1009BCCF0;
  if (!qword_1009BCCF0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCCE8);
    sub_100512F94();
    sub_10051308C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCCF0);
  }

  return result;
}

unint64_t sub_100512F94()
{
  unint64_t result = qword_1009BCCF8;
  if (!qword_1009BCCF8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCCC8);
    sub_100512E94();
    sub_100513000();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCCF8);
  }

  return result;
}

unint64_t sub_100513000()
{
  unint64_t result = qword_1009BCD00;
  if (!qword_1009BCD00)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCCC0);
    sub_100510D90(&qword_1009BCD08, &qword_1009BCCB8, &qword_1009BC8D0, &qword_1009BC8A0);
    sub_100511FBC();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCD00);
  }

  return result;
}

unint64_t sub_10051308C()
{
  unint64_t result = qword_1009BCD10;
  if (!qword_1009BCD10)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCCB0);
    sub_1005134D4(&qword_1009BC6A8, &qword_1009BC5B0);
    sub_1005117F8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Disjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCD10);
  }

  return result;
}

unint64_t sub_100513118()
{
  unint64_t result = qword_1009BCD48;
  if (!qword_1009BCD48)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCD40);
    sub_100510D90(&qword_1009BCD50, &qword_1009BCD30, &qword_1009BCD58, &qword_1009BCD28);
    sub_100511FBC();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCD48);
  }

  return result;
}

unint64_t sub_1005131A4()
{
  unint64_t result = qword_1009BCD88;
  if (!qword_1009BCD88)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCD80);
    sub_100513210();
    sub_100513118();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCD88);
  }

  return result;
}

unint64_t sub_100513210()
{
  unint64_t result = qword_1009BCD90;
  if (!qword_1009BCD90)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCD70);
    sub_100510D90(&qword_1009BCD98, &qword_1009BCD68, &qword_1009BCD58, &qword_1009BCD28);
    sub_1005134D4(&qword_1009BC450, &qword_1009BC410);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCD90);
  }

  return result;
}

unint64_t sub_1005132BC()
{
  unint64_t result = qword_1009BCDD0;
  if (!qword_1009BCDD0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCDC8);
    sub_100513328();
    sub_10051308C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCDD0);
  }

  return result;
}

unint64_t sub_100513328()
{
  unint64_t result = qword_1009BCDD8;
  if (!qword_1009BCDD8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCDB8);
    sub_100512E94();
    sub_100513394();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCDD8);
  }

  return result;
}

unint64_t sub_100513394()
{
  unint64_t result = qword_1009BCDE0;
  if (!qword_1009BCDE0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCDB0);
    sub_1005110F0();
    sub_100510D90(&qword_1009BCD08, &qword_1009BCCB8, &qword_1009BC8D0, &qword_1009BC8A0);
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for <> PredicateExpressions.SequenceContains<A, B>,  v1);
    atomic_store(result, (unint64_t *)&qword_1009BCDE0);
  }

  return result;
}

uint64_t sub_100513420@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DFF14(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_100513428()
{
  unint64_t result = qword_1009BCE08;
  if (!qword_1009BCE08)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCE00);
    sub_100510D90(&qword_1009BCE10, &qword_1009BCDF8, &qword_1009BC580, &qword_1009BC550);
    sub_1005134D4(&qword_1009BCE18, &qword_1009BCDF0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCE08);
  }

  return result;
}

uint64_t sub_1005134D4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_100401A88(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100513538()
{
  return sub_100513608(5u);
}

void sub_100513540()
{
  uint64_t v1 = *(void (**)(void, id))(v0 + 16);
  uint64_t v2 = *((void *)sub_1004BA170() + 1);
  swift_bridgeObjectRetain(v2);
  uint64_t v3 = sub_1004BA120(5u);
  id v4 = objc_allocWithZone(&OBJC_CLASS___NSError);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  id v6 = [v4 initWithDomain:v5 code:v3 userInfo:0];

  id v7 = v6;
  v1(0LL, v6);
}

uint64_t sub_100513600()
{
  return sub_100513608(0);
}

uint64_t sub_100513608(unsigned __int8 a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(uint64_t, id))(v1 + 24);
  if (!v2) {
    return v3(1LL, 0LL);
  }
  swift_errorRetain(v2);
  uint64_t v5 = *((void *)sub_1004BA170() + 1);
  swift_bridgeObjectRetain(v5);
  uint64_t v6 = sub_1004BA120(a1);
  uint64_t v7 = sub_1003F5CB4(&qword_1009B9A10);
  uint64_t inited = swift_initStackObject(v7, v23);
  *(_OWORD *)(inited + 16) = xmmword_1007184C0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
  *(void *)(inited + 40) = v9;
  swift_getErrorValue(v2, v22, &v20);
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  *(void *)(inited + 72) = v21;
  uint64_t v12 = sub_10040B2A8((void *)(inited + 48));
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16LL))(v12, v10, v11);
  unint64_t v13 = sub_100427AB8(inited);
  id v14 = objc_allocWithZone(&OBJC_CLASS___NSError);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  id v17 = [v14 initWithDomain:v15 code:v6 userInfo:isa];

  id v18 = v17;
  v3(0LL, v17);

  return swift_errorRelease(v2);
}

uint64_t sub_1005137B0()
{
  return sub_100513608(2u);
}

uint64_t sub_1005137BC()
{
  return sub_100513608(4u);
}

uint64_t sub_1005137C8()
{
  return sub_100513608(1u);
}

uint64_t sub_1005137D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DD288(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005137D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DD6BC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1005137E0()
{
  unint64_t result = qword_1009BCE68;
  if (!qword_1009BCE68)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCE50);
    sub_10051141C();
    sub_100510D90(&qword_1009BCC88, &qword_1009BCC40, &qword_1009BC8D0, &qword_1009BC8A0);
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for <> PredicateExpressions.SequenceContains<A, B>,  v1);
    atomic_store(result, (unint64_t *)&qword_1009BCE68);
  }

  return result;
}

unint64_t sub_10051386C()
{
  unint64_t result = qword_1009BCE90;
  if (!qword_1009BCE90)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCE78);
    sub_10051141C();
    sub_100510D90(&qword_1009BC888, &qword_1009BC850, &qword_1009BC890, &qword_1009BC848);
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for <> PredicateExpressions.SequenceContains<A, B>,  v1);
    atomic_store(result, (unint64_t *)&qword_1009BCE90);
  }

  return result;
}

uint64_t sub_1005138FC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DC154(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_100513908(uint64_t a1)
{
  return sub_100513914(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1004DC60C);
}

uint64_t sub_100513914(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_100513928()
{
  unint64_t result = qword_1009BCEB0;
  if (!qword_1009BCEB0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCEA8);
    sub_100513994();
    sub_100512DE8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCEB0);
  }

  return result;
}

unint64_t sub_100513994()
{
  unint64_t result = qword_1009BCEB8;
  if (!qword_1009BCEB8)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCEA0);
    sub_1005137E0();
    sub_100512DE8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCEB8);
  }

  return result;
}

unint64_t sub_100513A00()
{
  unint64_t result = qword_1009BCED0;
  if (!qword_1009BCED0)
  {
    uint64_t v1 = sub_100401A88(&qword_1009BCEC8);
    sub_10051386C();
    sub_10051174C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009BCED0);
  }

  return result;
}

uint64_t sub_100513A70@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004E1028(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_100513A8C( uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_100513AB4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DB2E0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100513ABC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DB530(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100513AC4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DB780(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100513AD0()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100513AFC()
{
  return sub_100513608(3u);
}

uint64_t sub_100513B04@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004DA880(a1, *(void (**)(char *, void, uint64_t))(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100513B0C(uint64_t a1)
{
  return sub_10050FEAC(a1);
}

uint64_t sub_100513C08(uint64_t a1)
{
  return sub_10050FF10(a1);
}

uint64_t sub_100513C70(uint64_t a1)
{
  return sub_10050FF64(a1);
}

uint64_t sub_100513C84(uint64_t a1)
{
  return sub_10050FF3C(a1);
}

void sub_100513C98(uint64_t a1)
{
}

uint64_t sub_100513CAC(uint64_t a1)
{
  return sub_10050FA70(a1);
}

uint64_t sub_100513CC0(uint64_t a1)
{
  return sub_10050B088(a1);
}

void sub_100513CD8(uint64_t a1)
{
}

uint64_t sub_100513D10(uint64_t a1)
{
  return sub_10050D4A0(a1);
}

uint64_t sub_100513D24(uint64_t a1)
{
  return sub_10050D500(a1);
}

uint64_t sub_100513D38(uint64_t a1)
{
  return sub_10050D5E4(a1);
}

uint64_t sub_100513D4C( mach_port_t a1, unsigned int a2, uint64_t a3, unsigned int a4, unint64_t *a5, void *a6, unsigned int *a7)
{
  int v18 = 1;
  uint64_t v19 = a3;
  int v20 = 16777472;
  unsigned int v21 = a4;
  NDR_record_t v22 = NDR_record;
  unint64_t v23 = __PAIR64__(a4, a2);
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v12 = mach_msg(&msg, 3, 0x3Cu, 0x48u, reply_port, 0, 0);
  uint64_t v13 = v12;
  if ((v12 - 268435458) <= 0xE && ((1 << (v12 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v13;
  }

  if ((_DWORD)v12)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v13;
  }

  if (msg.msgh_id == 71)
  {
    uint64_t v15 = 4294966988LL;
  }

  else if (msg.msgh_id == 1300)
  {
    if ((msg.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v15 = 4294966996LL;
      if (v18 == 1 && msg.msgh_size == 64 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
      {
        unsigned int v16 = v21;
        if (v21 == v24)
        {
          *a5 = v23;
          *a6 = v19;
          *a7 = v16;
          return 0LL;
        }
      }
    }

    else if (msg.msgh_size == 36)
    {
      uint64_t v15 = 4294966996LL;
      if (HIDWORD(v19))
      {
        if (msg.msgh_remote_port) {
          uint64_t v15 = 4294966996LL;
        }
        else {
          uint64_t v15 = HIDWORD(v19);
        }
      }
    }

    else
    {
      uint64_t v15 = 4294966996LL;
    }
  }

  else
  {
    uint64_t v15 = 4294966995LL;
  }

  mach_msg_destroy(&msg);
  return v15;
}

uint64_t sub_100513F40(mach_port_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = 1;
  uint64_t v12 = a4;
  int v13 = 16777472;
  int v14 = a5;
  NDR_record_t v15 = NDR_record;
  int v16 = a2;
  uint64_t v17 = a3;
  int v18 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v7 = mach_msg(&msg, 3, 0x44u, 0x2Cu, reply_port, 0, 0);
  uint64_t v8 = v7;
  if ((v7 - 268435458) <= 0xE && ((1 << (v7 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v8;
  }

  if ((_DWORD)v7)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v8;
  }

  if (msg.msgh_id == 71)
  {
    uint64_t v8 = 4294966988LL;
LABEL_17:
    mach_msg_destroy(&msg);
    return v8;
  }

  if (msg.msgh_id != 1301)
  {
    uint64_t v8 = 4294966995LL;
    goto LABEL_17;
  }

  uint64_t v8 = 4294966996LL;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v8 = HIDWORD(v12);
  if (HIDWORD(v12)) {
    goto LABEL_17;
  }
  return v8;
}

uint64_t sub_1005140B8(mach_port_t a1, int a2, uint64_t a3, uint64_t a4, int a5, void *a6, _DWORD *a7)
{
  int v17 = 1;
  uint64_t v18 = a4;
  int v19 = 16777472;
  int v20 = a5;
  NDR_record_t v21 = NDR_record;
  int v22 = a2;
  uint64_t v23 = a3;
  int v24 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v11 = mach_msg(&msg, 3, 0x44u, 0x40u, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) <= 0xE && ((1 << (v11 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v12;
  }

  if ((_DWORD)v11)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v12;
  }

  if (msg.msgh_id == 71)
  {
    uint64_t v14 = 4294966988LL;
  }

  else if (msg.msgh_id == 1302)
  {
    if ((msg.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v14 = 4294966996LL;
      if (v17 == 1 && msg.msgh_size == 56 && !msg.msgh_remote_port && HIBYTE(v19) == 1)
      {
        int v15 = v20;
        if (v20 == v22)
        {
          *a6 = v18;
          *a7 = v15;
          return 0LL;
        }
      }
    }

    else if (msg.msgh_size == 36)
    {
      uint64_t v14 = 4294966996LL;
      if (HIDWORD(v18))
      {
        if (msg.msgh_remote_port) {
          uint64_t v14 = 4294966996LL;
        }
        else {
          uint64_t v14 = HIDWORD(v18);
        }
      }
    }

    else
    {
      uint64_t v14 = 4294966996LL;
    }
  }

  else
  {
    uint64_t v14 = 4294966995LL;
  }

  mach_msg_destroy(&msg);
  return v14;
}

uint64_t sub_1005142A8(mach_port_t a1, unsigned int a2, uint64_t a3)
{
  NDR_record_t v9 = NDR_record;
  unsigned int v10 = a2;
  uint64_t v11 = a3;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v5 = mach_msg(&msg, 3, 0x2Cu, 0x2Cu, reply_port, 0, 0);
  uint64_t v6 = v5;
  if ((v5 - 268435458) <= 0xE && ((1 << (v5 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v6;
  }

  if ((_DWORD)v5)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v6;
  }

  else
  {
    if (msg.msgh_id == 71)
    {
      uint64_t v6 = 4294966988LL;
    }

    else if (msg.msgh_id == 1303)
    {
      uint64_t v6 = 4294966996LL;
      if ((msg.msgh_bits & 0x80000000) == 0 && msg.msgh_size == 36 && !msg.msgh_remote_port)
      {
        uint64_t v6 = v10;
        if (!v10) {
          return v6;
        }
      }
    }

    else
    {
      uint64_t v6 = 4294966995LL;
    }

    mach_msg_destroy(&msg);
    return v6;
  }

void sub_1005143F8(uint64_t a1)
{
  __asm { BR              X11 }

uint64_t sub_1005144B0()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL
                                             * (((((v1 + 121702045) & 0x856FEF6) - 4) * (v2 == 0)) ^ (v0 + v1 + 2)))
                            - 8LL))();
}

uint64_t sub_1005144F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(a1 + 8LL * (v1 - 3)))(v3);
  *(_DWORD *)(v2 + 24) = 0;
  return result;
}

void sub_100514664(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BR              X9 }

uint64_t sub_1005146C8()
{
  return 4294923273LL;
}

void sub_1005147F8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (646995413 * ((((2 * a1) | 0x8F18737E) - a1 + 947111489) ^ 0x534DB4D5));
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(unsigned int *)off_1009093C0[v1 - 36];
  strcpy(v5, "com.apple.absd");
  uint64_t v4 = *(void *)((char *)off_1009093C0[v1 - 46]
                 + 8
                 * ((123
                   * (((unsigned int (*)(uint64_t, char *, uint64_t))off_1009093C0[v1 - 40])(v3, v5, v2) == 0)) ^ v1)
                 - 12)
     - ((v1 + 23) ^ 0x41LL);
  __asm { BR              X9 }

void sub_1005148FC()
{
  *(_DWORD *)(v0 + 4) = v1;
}

void sub_10051498C(uint64_t a1, uint64_t a2, int a3)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v5 = v3 || a3 == 0;
  __asm { BR              X9 }

uint64_t sub_1005149F8()
{
  return 4294923273LL;
}

void sub_100514B1C(uint64_t a1)
{
  __asm { BR              X10 }

uint64_t sub_100514BC8()
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t (*)()))(v2 + 8LL * (v0 & 0x40188)))( *(void *)(v2 + 8LL * (v0 & 0x40000402)),  nullsub_37);
  _DWORD *v1 = 1410186986;
  return result;
}

void sub_100515BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    BOOL v4 = a4 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = !v4;
  __asm { BR              X9 }

uint64_t sub_100515C3C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v14[0] = *(void *)(v6 + 16);
  unsigned int v20 = 1829790799 * (((&v18 | 0xDC543C92) - (&v18 & 0xDC543C92)) ^ 0x1E9D9CD9) + 463207035;
  int v19 = v14;
  uint64_t v11 = *(void (**)(int *))(a6 + 48);
  v11(&v18);
  v14[0] = *(void *)(v6 + 248);
  v14[1] = a1;
  v14[2] = a2;
  int v15 = a3;
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  int v19 = v14;
  unsigned int v20 = 1829790799 * (&v18 ^ 0xC2C9A04B) + 463207035;
  v11(&v18);
  return (v18 - 1787617099);
}

uint64_t sub_100515D7C(uint64_t a1)
{
  qword_1009BCF40 = 1681628227 * ((qword_1009BCF40 - (void)&v4 + qword_1009BCF30) ^ 0x68EECD5B1F580389LL);
  qword_1009BCF30 = qword_1009BCF40;
  uint64_t v1 = *(void *)((char *)off_1009093C0[((67 * ((2 * qword_1009BCF40) ^ 0x89)) ^ byte_10071E1A0[byte_10071E0A0[(67 * ((2 * qword_1009BCF40) ^ 0x89))] ^ 0x34])
                                       - 49]
                 + 140)
     - 4LL;
  unint64_t v2 = 942846689 * ((unint64_t)&v5 ^ 0x2DF4282E8CBBA516LL);
  int v5 = v2 ^ 0xF067FA72;
  uint64_t v6 = a1;
  unint64_t v7 = v1 ^ v2;
  ((void (*)(int *))off_1009093C0[(unk_10071DF5D ^ 0xDB) - 185])(&v5);
  return v8;
}

uint64_t sub_100515EC8(uint64_t a1)
{
  qword_1009BCF38 = 1681628227 * ((qword_1009BCF30 + qword_1009BCF38) ^ (unint64_t)&v4 ^ 0x68EECD5B1F580389LL);
  qword_1009BCF30 = qword_1009BCF38;
  uint64_t v1 = *(void *)((char *)off_1009093C0[((67 * ((2 * qword_1009BCF38) ^ 0x89)) ^ byte_10071DDA0[byte_10071E2A0[(67 * ((2 * qword_1009BCF38) ^ 0x89))] ^ 0xD6])
                                       - 8]
                 + 28)
     - 4LL;
  unint64_t v2 = 942846689
     * ((((unint64_t)&v5 | 0xDBD392286209E2F0LL)
  int v5 = v2 ^ 0xF067FA72;
  uint64_t v6 = a1;
  unint64_t v7 = v1 ^ v2;
  ((void (*)(int *))off_1009093C0[(unk_10071E099 ^ 0xDB) - 226])(&v5);
  return v8;
}

uint64_t sub_100516044( mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }

  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988LL;
      }

      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996LL;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0LL;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              __int128 v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              __int128 v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              __int128 v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              __int128 v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }

        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996LL;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996LL;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }

        else
        {
          uint64_t v20 = 4294966996LL;
        }
      }

      else
      {
        uint64_t v20 = 4294966995LL;
      }

      mach_msg_destroy(&msg);
      return v20;
    }

    mig_dealloc_reply_port(msg.msgh_local_port);
  }

  return v20;
}

uint64_t sub_10051629C(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4 = a3[5];
  __int128 v19 = a3[4];
  __int128 v20 = v4;
  __int128 v5 = a3[7];
  __int128 v21 = a3[6];
  __int128 v22 = v5;
  __int128 v6 = a3[1];
  __int128 v15 = *a3;
  __int128 v16 = v6;
  __int128 v7 = a3[3];
  __int128 v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  __int128 v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }

  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }

  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988LL;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }

  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995LL;
    goto LABEL_17;
  }

  uint64_t v10 = 4294966996LL;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_100516428( mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)__int128 v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }

  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988LL;
      }

      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996LL;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0LL;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }

        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996LL;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996LL;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }

        else
        {
          uint64_t v14 = 4294966996LL;
        }
      }

      else
      {
        uint64_t v14 = 4294966995LL;
      }

      mach_msg_destroy(&msg);
      return v14;
    }

    mig_dealloc_reply_port(msg.msgh_local_port);
  }

  return v14;
}

uint64_t sub_100516614(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000LL;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }

  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }

    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988LL;
    }

    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }

            goto LABEL_23;
          }
        }

        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996LL;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }

      uint64_t v12 = 4294966996LL;
    }

    else
    {
      uint64_t v12 = 4294966995LL;
    }

uint64_t sub_10051678C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x13AAEC8A5CF1D15CLL) - 1559160794;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x13AAEC8A5CF1D15CLL) - 1559160794;
  int v4 = (v2 < 1087979611) ^ (v3 < 1087979611);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v5 = v2 < 1087979611;
  }
  int v1 = *(_DWORD *)(a1 + 24) ^ (1374699841 * ((2106847513 - (a1 | 0x7D93F119) + (a1 | 0x826C0EE6)) ^ 0xEF9816EF));
  return (*(uint64_t (**)(void))((char *)*(&off_10090D690 + (v1 ^ 0x12C)) + 8 * ((235 * !v5) ^ v1) - 12))();
}

uint64_t sub_10051686C()
{
  int v4 = v2 + 2065581284;
  BOOL v5 = v4 < ((v1 - 302) | 0x200) + 417753809;
  BOOL v6 = v3 + 2065581284 < v4;
  if (v3 + 2065581284 < 417754393 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8LL * ((1173 * !v6) ^ v1)))();
}

uint64_t sub_1005168D8()
{
  int v3 = v2 ^ 0x33E;
  int v4 = (v2 ^ 0x3B905222) - v1;
  if (v1 + 1647826891 < 0) {
    int v4 = v1;
  }
  return (*(uint64_t (**)(void))(v0 + 8LL * ((1654 * (v4 - 499656758 >= 0)) ^ v3)))();
}

uint64_t sub_10051695C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * ((232
                                * ((*(_DWORD *)(*v3 + 4LL * v5) ^ (v1 + 584)) <= (*(_DWORD *)(*v4 + 4LL * v5) ^ (v2 + 210 + v1)))) ^ v2)))();
}

uint64_t sub_1005169A4(uint64_t a1, int a2, unsigned int a3)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((a2 + ((a2 - 326) | 0x74) - 911) * (v4 < a3)) ^ a2)) - 12LL))();
}

uint64_t sub_1005169D4()
{
  return (*(uint64_t (**)(void))(v0 + 8LL * ((1654 * (v2 - 499656758 >= 0)) ^ v1)))();
}

uint64_t sub_100516A04(uint64_t result)
{
  *(_DWORD *)(result + 8) = -571310770 - v1;
  return result;
}

void sub_100516A18(uint64_t a1)
{
  int v1 = 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x2185BF99DEDD7440LL) + 231116856;
  unsigned int v3 = *(_DWORD *)(a1 + 4) - v1 + 260563207;
  int v4 = (v3 < 0x117AF4CD) ^ (v2 < 0x117AF4CD);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0x117AF4CD;
  }
  __asm { BR              X11 }

uint64_t sub_100516B2C()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((53 * ((((v0 ^ 0x549) - 794) & *(_DWORD *)(v1 - 0x2185BF99DEDD7438LL)) == 0)) ^ v0))
                            - ((v0 - 1125) ^ 0x1E9LL)))();
}

void sub_100516B78()
{
  *(_DWORD *)(v0 - 0x2185BF99DEDD7434LL) = 2006390527;
}

uint64_t sub_1005171C4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 3804331 * ((-1818215500 - (a1 | 0x93A03BB4) + (a1 | 0x6C5FC44B)) ^ 0x96C1371D);
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + (v1 ^ 0x51D))
                                        + 8 * (((*(void *)(a1 + 8) == 0x2185BF99DEDD744CLL) * (v1 - 1322)) ^ v1)
                                        - 12)
                            - 8LL))();
}

uint64_t sub_100517260()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * ((868 * (*(_DWORD *)(v2 - 0x2185BF99DEDD7434LL) == v1 - 2006431772)) ^ (v1 + 19)))
                            - 8LL))();
}

uint64_t sub_1005172A8()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x2185BF99DEDD743CLL) + 136105425;
  unsigned int v4 = *(_DWORD *)(v1 - 0x2185BF99DEDD7440LL) + 211494967;
  BOOL v5 = v4 < v2 + 273647474;
  BOOL v6 = v3 < v4;
  if (v3 < 0x104F8CCC != v5) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * ((884 * v6) ^ v2)) - 8LL))();
}

uint64_t sub_100517338@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 4) = 2006390302;
  return result;
}

void sub_10051734C(uint64_t a1)
{
  int v1 = 1374699841 * (((a1 | 0xB24FA6E) - (a1 & 0xB24FA6E)) ^ 0x66D0E267);
  __asm { BR              X13 }

uint64_t sub_1005173F8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = 1224239923 * ((((2 * &v7) | 0x7B12072) - &v7 + 2082959303) ^ 0x716B6DEE);
  int v9 = v5 - v3 - ((731135054 - v4) & 0x78D3F82A) + ((v1 - 1998201694) & 0x771A23EE ^ 0x523419D2);
  uint64_t v8 = v2;
  int v7 = v1 - v5 + 521;
  return ((uint64_t (*)(int *))(*(void *)(a1 + 8LL * (v1 - 809)) - 8LL))(&v7);
}

uint64_t sub_100517570(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1759421093 * ((-746607788 - (a1 | 0xD37FAB54) + (a1 | 0x2C8054AB)) ^ 0x9FFDE4FF);
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + (v1 ^ 0x11A))
                                        + 8 * (((*(void *)(a1 + 8) != *(void *)a1) * ((v1 ^ 0x44D) - 1260)) | v1)
                                        - 12)
                            - 8LL))();
}

uint64_t sub_1005175F8@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x13AAEC8A5CF1D15CLL);
  int v5 = v4 - 499656757;
  if (v4 - 499656757 < 0) {
    int v5 = 499656757 - v4;
  }
  *(_DWORD *)(v1 - 0x13AAEC8A5CF1D15CLL) = v4;
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * ((27
                                          * ((v5 ^ 0xFFBA6FF3)
                                           + 1728028350
                                           + ((((v3 + 110786785) & 0xF9658351) - 9118042) & (2 * v5)) == 1723469489)) ^ v3))
                            - 12LL))();
}

uint64_t sub_100517694@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v2 - 0x13AAEC8A5CF1D158LL) + 4LL * (v5 - 1723469490)) = *(_DWORD *)(*(void *)(v3 - 0x13AAEC8A5CF1D158LL)
                                                                                            + 4LL * (v5 - 1723469490));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((v5 - 1 == v1) * (v4 + 70)) ^ (v4 - 122))) - 8LL))();
}

uint64_t sub_1005176F4@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v2 + 4LL * (v7 + v5)) = *(_DWORD *)(*v3 + 4LL * (v7 + v5));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((v7 - 1 == v1) * v6) ^ v4)) - 8LL))();
}

uint64_t sub_100517730(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x13AAEC8A5CF1D15CLL);
  int v4 = v2 - 499656757;
  BOOL v3 = v2 - 499656757 < 0;
  int v5 = 499656757 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = (1734042137 * (((a1 | 0xD7F017E0) - (a1 & 0xD7F017E0)) ^ 0x8B3ED4AD)) ^ *(_DWORD *)(a1 + 12) ^ 0x569;
  return (*(uint64_t (**)(void))((char *)*(&off_10090D690 + v1 - 137)
                              + 8
                              * ((1181
                                * (((v1 + 1191) ^ 0x8E86C2E2)
                                 + (v5 ^ 0x79FFFCFF)
                                 - 143049832
                                 + ((v1 - 201328357) & (2 * v5)) < v1 + 2147483420)) ^ v1)
                              - 12))();
}

uint64_t sub_100517840()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (((*(_DWORD *)(*v1 + 4LL * v4) != ((v3 - 1192) ^ 0x385 ^ v0)) * (((v3 - 1192) | 1) - 221)) ^ v3)))();
}

uint64_t sub_100517878@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(*(void *)(v1 + 8LL * (v2 - 137))
                              - 12LL
                              + 8LL * ((1181 * (((v2 + 1191) ^ 0x8E86C2E2) + a1 - 1 < v2 + 2147483420)) ^ v2)))();
}

uint64_t sub_1005178C4(uint64_t result)
{
  *(_DWORD *)(result + 8) = 544568610;
  return result;
}

uint64_t sub_1005178D4()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL
}

uint64_t sub_100517914()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (int)((((v0 >> (v2 + 31)) & 1) * v3) ^ v4)) - 12LL))();
}

uint64_t sub_100517938@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 8) = (a2 << (v2 + 34)) + v3 - 246521277;
  return result;
}

uint64_t sub_100517958(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_1009094D0
                             + ((1180 * ((*a1 + *(_DWORD *)(a2 + 4) + 694941569) < 0xC9)) ^ 0x387u)))();
}

uint64_t sub_1005179A0@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((45 * (v1 != 1731329620)) ^ 0x354u)) - 12LL))();
}

uint64_t sub_1005179D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)(a1 + (v3 - 1868696108) + 4) = (**(_BYTE **)(a2 + 8) ^ 0x67)
                                                       + (((45 * (v4 ^ 0x57)) ^ 0x49) & (2 * **(_BYTE **)(a2 + 8)))
                                                       - 2;
  unsigned int v5 = *(_DWORD *)(a2 + 4) + 1850135832;
  BOOL v6 = v5 < 0xD578D36C;
  BOOL v7 = v5 > 0xD578D36D;
  if (v6) {
    BOOL v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)(a3 + 8LL * ((1613 * v7) ^ v4)) - 12LL))();
}

void sub_100517A90()
{
}

uint64_t sub_100517A98()
{
  return 4294925278LL;
}

uint64_t sub_100517AA0(_DWORD *a1)
{
  *((_BYTE *)a1 + ((v2 - 724747326) ^ 0x4450CA9Du) + v1 + 4) = 101;
  *a1 = v1;
  return 0LL;
}

void sub_100517AD4(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1224239923 * ((a1 & 0x6C08674A | ~(a1 | 0x6C08674A)) ^ 0x61446562);
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (535753261 * ((2 * (&v2 & 0x67ADD9C8) - &v2 + 408036914) ^ 0x12A6281D)) ^ (v1 - 835);
  sub_100555204((uint64_t)&v2);
  __asm { BR              X9 }

uint64_t sub_100517C0C@<X0>(uint64_t a1@<X8>)
{
  int v5 = v2 ^ 0x102;
  unsigned int v6 = (((v4 - v3) >> 4) & 0xBEFFFF6 ^ 0x3C69FC0)
  BOOL v8 = v6 > 0xD7967B9 && v6 < v5 - 407 + v1 + (((v5 - 979) | 0x50E) ^ 0xD796172u);
  return (*(uint64_t (**)(void))(a1 + 8LL * ((214 * v8) ^ v5)))();
}

uint64_t sub_100517C94@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (v2 ^ (45 * ((v1 & 0x1F) != 0x15)))) - 8LL))();
}

uint64_t sub_100517CE0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8LL * ((1626 * (v1 + 1844969465 < ((v2 + 218383341) & 0xF2FBBDE6) + 2147482265)) ^ v2)))();
}

uint64_t sub_100517D50@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  BOOL v8 = (void *)(v7 - 0x13AAEC8A5CF1D158LL);
  int v9 = a1 - 1084284407;
  int v10 = a1 - 470;
  BOOL v11 = v3 - 2037050091 < -1734535909;
  unsigned int v12 = ((2 * (*(_DWORD *)(*v8 + 4LL * (v2 - 1844970590 + (v9 & 0x40A0DCF4))) ^ v5)) << (v4 ^ 0x1F)) | ((*(_DWORD *)(*v8 + 4LL * (v2 - 1844969467)) ^ v5) >> v4);
  *(_DWORD *)*BOOL v8 = v12 + v5 - (v6 & (2 * v12));
  if (v3 - 2037050091 >= -1734535909) {
    BOOL v11 = v3 - 2037050091 > 412947740;
  }
  return (*(uint64_t (**)(uint64_t))(a2 + 8LL * (v10 | (2 * !v11))))(1199004519LL);
}

void sub_100517E38()
{
}

void sub_100517E40()
{
  _DWORD *v0 = 499656757;
}

void sub_100518018(uint64_t a1)
{
  __asm { BR              X8 }

void sub_100518138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  BOOL v11 = (unsigned __int8 *)(*(void *)(v7 + 8LL * (a5 & 0x16657EF3)) - 1LL);
  uint64_t v12 = (((((a5 - 313) ^ 0xE888815F) - 916029434) & 0x36997FF7) - 1448856448) & 0x565BCB7A;
  BOOL v14 = ((**(unsigned __int8 **)(v10 + 80) - (*v11 ^ 0x98)) ^ ((((_DWORD)v12 - 19220499) & 0xE9ADC7FF) - 1771648236))
      + ((2 * (**(unsigned __int8 **)(v10 + 80) - (*v11 ^ 0x98))) & 0xFDDE98E6)
      - 1879195666 == v9
     && a7 - 2363631672LL + v12 != 0;
  __asm { BR              X15 }

void sub_100519248(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  uint64_t v2 = *(void *)((char *)*(&off_10090D690 + v1 - 628)
                 + 8
                 * (((((uint64_t (*)(uint64_t))*(&off_10090D690 + (v1 ^ 0x2D4)))(32LL) == 0)
                   * (((v1 - 550) | 0x251) ^ 0x2CE)) ^ v1)
                 - 12)
     - 12LL;
  __asm { BR              X8 }

void sub_1005192EC()
{
  *(_DWORD *)(v0 + 8) = 2006390527;
}

void sub_10051936C(uint64_t a1)
{
  int v1 = 1178560073 * ((a1 - 2 * (a1 & 0x8314ACD2) - 2095797038) ^ 0xB102AC92);
  __asm { BR              X11 }

uint64_t sub_100519424@<X0>(int a1@<W8>)
{
}

uint64_t sub_100519478()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1595 * (*v1 != 0)) ^ v0)) - 4 * (v0 ^ 0xEDu) + 200LL))();
}

uint64_t sub_1005194AC()
{
  int v5 = v0 - 182;
  uint64_t v6 = v3(*v4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v2 + 8LL * ((1595 * (*v1 != 0)) ^ v5)) - 4 * (v5 ^ 0xEDu) + 200LL))(v6);
}

uint64_t sub_1005194EC()
{
  uint64_t result = v2(*v3);
  _DWORD *v1 = 0;
  *(_DWORD *)uint64_t v0 = 0;
  *(void *)(v0 + 344) = 0LL;
  *(void *)(v0 + 352) = 0LL;
  *(_DWORD *)(v0 + 360) = 1903865540;
  *(_DWORD *)(v0 + 56) = 1637603447;
  return result;
}

void sub_10051952C(int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  if (a5) {
    BOOL v5 = *a4 == 0LL;
  }
  else {
    BOOL v5 = 0;
  }
  int v8 = !v5 || a2 == 0 || a1 == 0;
  __asm { BR              X8 }

uint64_t sub_1005195B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  a15 = (1178560073 * (((&a15 | 0x5D0CF361) - (&a15 & 0x5D0CF361)) ^ 0x6F1AF321)) ^ 0x650810FC;
  uint64_t v17 = sub_100556E04(&a15);
  return ((uint64_t (*)(uint64_t))(*(void *)(v16 + 8LL * ((336 * (a16 == -2006430421)) ^ 0xE2u)) - 8LL))(v17);
}

uint64_t sub_10051965C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a15 = &STACK[0x8C0F0A4F49AC042];
  a17 = 718 - 460628867 * ((((2 * &a15) | 0x98B0CA2E) - &a15 - 1280861463) ^ 0xCEE76A);
  sub_100519248((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8LL * ((1612 * (a16 == -2006430421)) ^ v18)) - 8LL))( v19,  v20,  v21,  v22,  v23,  v24,  v25,  v26);
}

uint64_t sub_1005196F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18)
{
  unsigned int v24 = 1734042137 * ((&a15 + 148822889 - 2 * (&a15 & 0x8DEDB69)) ^ 0x54101824);
  a15 = a13;
  LODWORD(a16) = v21 - v24 + 840;
  a17 = v24 ^ ((v20 ^ 0xB0BFCFBF) + 1875555670 + ((2 * v20) & 0x617F9F7E));
  ((void (*)(uint64_t *))(*(void *)(v23 + 8LL * (int)(v21 - 266)) - 4LL))(&a15);
  unsigned int v25 = 628203409 * (&a15 ^ 0x82880C33);
  a16 = v18;
  LODWORD(a15) = v21 - v25 - 34;
  a18 = a13;
  a17 = ((2 * v19) & 0xB76BB7FE) + (v19 ^ 0x5BB5DBFF) + (((v21 - 263) | 0x80) ^ 0xF7FFAEBA) + v25;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v23 + 8LL * (v21 ^ 0x1DB)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8LL * ((254 * (HIDWORD(a15) == -2006430421)) ^ v21)))(v26);
}

uint64_t sub_100519844( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, unsigned int a17, uint64_t a18, unint64_t *a19, int a20)
{
  unsigned int v22 = 3804331 * ((2 * (&a15 & 0x19519B58) - &a15 - 424778592) ^ 0x1C3097F6);
  a20 = (v20 + 2138962999) ^ v22;
  a18 = a13;
  a19 = &STACK[0x5BFD90C18C6562DA];
  a16 = -383805490 - v22;
  a17 = v22 ^ 0xAEC324F7;
  uint64_t v23 = sub_100556BC0((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8LL * ((1015 * (a15 == ((v20 - 135) ^ 0x88684977 ^ v20 ^ 0x5D7))) ^ v20)))(v23);
}

uint64_t sub_100519918( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17, unint64_t *a18, unint64_t *a19, unint64_t *a20, unsigned int a21)
{
  a21 = (v23 - 345) ^ (1225351577
                     * (((&a16 | 0x3D40A92E) - &a16 + (&a16 & 0xC2BF56D0)) ^ 0x1EDA7138));
  a18 = a15;
  a19 = v21;
  a20 = &STACK[0x57BFF69C8C42E157];
  (*(void (**)(unsigned int *))(v25 + 8LL * (int)(v23 - 1072)))(&a16);
  a16 = (v23 - 535) ^ (1374699841 * (&a16 ^ 0x6DF41809));
  a18 = &STACK[0x3703560E774B8137];
  a19 = a15;
  (*(void (**)(unsigned int *))(v25 + 8LL * (int)(v23 - 1139)))(&a16);
  a18 = a15;
  a16 = v23
      + (((&a16 | 0xE3F748ED) - &a16 + (&a16 & 0x1C08B710)) ^ 0x1969BBBB)
      * v22
      + 137;
  uint64_t v26 = sub_1005171C4((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t))(*(void *)(v24 + 8LL * ((83 * (a17 == (((v23 - 893) | 0x28) ^ a11))) ^ v23))
                                          - ((v23 - 495522111) & 0xEFE)
                                          + 630LL))(v26);
}

uint64_t sub_100519A84( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v14
                              + 8LL * (((a13 != -2006430421) * ((v13 + 916) ^ 0x789 ^ ((v13 - 637) | 0x168))) ^ v13)))();
}

uint64_t sub_100519AC4@<X0>(unsigned int a1@<W8>)
{
}

uint64_t sub_100519B08()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8LL * (int)(v1 ^ 0x481)))();
  uint64_t *v0 = v4;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (int)(((v4 == 0) * (v1 ^ 0x4BE)) ^ v1)) - (v1 ^ 0x493LL)))();
}

uint64_t sub_100519B5C()
{
  int v3 = *v0 - ((2 * *v0) & 0x13A16390) + 164671944;
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((601
                                          * ((((v1 ^ 0x25) - 1500267719) & 0x596C439E ^ (2 * v3) & 0x765BF89E ^ 0x12016306)
                                           + (v3 ^ 0x32FD4D87)
                                           - 2103307 != 990766148)) ^ v1 ^ 0x25))
                            - 8LL))();
}

uint64_t sub_100519C04(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5
                                                               + 8LL
                                                               * (v4 ^ (114
                                                                      * ((v2 + v1 - 992869455) > 7))))
                                                   + 409250522LL
                                                   - ((v4 + 140770604) | 0x1000AA24u)))( a1,  v3);
}

uint64_t sub_100519C74(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6
                                                               + 8LL
                                                               * (((((v5 - 760) ^ (v1 + 1687)) + v5 + v2)
                                                                 * ((unint64_t)(v3 - a1) > 0x1F)) ^ v5))
                                                   - 12LL))( a1,  v4);
}

uint64_t sub_100519CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8LL
                              * (((v6 >= ((a5 + 922) | 4u) - 1052) * (((a5 + 134218310) | 0x1064A802) ^ (v5 + 896))) ^ a5)))();
}

uint64_t sub_100519CF4(uint64_t a1, int a2)
{
  unsigned int v10 = v7 + v6 + v8;
  uint64_t v11 = v4 + v10;
  __int128 v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9
                              + 8LL
                              * ((137 * ((((v5 & 0xFFFFFFE0) == 32) ^ ((a2 ^ (v3 + 26)) + 1)) & 1)) ^ (v2 + a2 + 1384))))();
}

void sub_100519D58()
{
}

uint64_t sub_100519D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8LL * ((((a6 - 494) ^ 0x4B6) * (v6 != v7)) ^ a6)))();
}

uint64_t sub_100519D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v9
                                                    + 8LL
                                                    * (int)(((v5 + ((a5 + 1013755480) & 0xDBF7FBEF) + 344)
                                                           * ((v6 & 0x18) == 0)) ^ a5)))( a1,  (v7 - v8));
}

uint64_t sub_100519DD8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a1 - 7 + (v7 + v6 + v8 - v9)) = *(void *)(v4 - 7 + (v7 + v6 + v8 - v9));
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL * (((v9 - (v5 & 0xFFFFFFF8) == -8) * ((163 * (a4 ^ 0x438)) ^ 0x2F7)) ^ a4))
                            - 8LL))();
}

void sub_100519E3C()
{
}

uint64_t sub_100519E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8LL
                                                             * (((8
                                                                * (((v6 == a5) ^ (v5 + v7 + 13)) & 1)) & 0xDF | (32 * (((v6 == a5) ^ (v5 + v7 + 13)) & 1))) ^ v7)))( a1,  a2,  (v5 + v7 + 266));
}

uint64_t sub_100519E94@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(_BYTE *)(a1 + (a2 - 990766149)) = *(_BYTE *)(v6 + (a2 - 990766149));
  return (*(uint64_t (**)(void))(v7 + 8LL * ((156 * (a2 - 1 == ((a3 - v5 - 557) ^ (a4 + 233)))) ^ (v4 + a3 + 302))))();
}

uint64_t sub_100519EE8()
{
  uint64_t v8 = v5;
  unsigned int v7 = v0 + 535753261 * ((2 * (v6 & 0x412B78B8) - v6 + 1054115655) ^ 0x34208968) + 208;
  v3(v6);
  uint64_t v8 = v4;
  unsigned int v7 = (v0 ^ 0x18B)
  v3(v6);
  return v1 ^ 0x88684D2B;
}

void sub_100519FE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16)
     + 1374699841 * ((2 * ((a1 ^ 0x8BDA9FA5) & 0x337A87DF) - (a1 ^ 0x8BDA9FA5) + 1283815456) ^ 0xAAABFF8C)
     - 568;
  __asm { BR              X11 }

uint64_t sub_10051A208(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * (((a7 + 1 != ((a8 + a1) & a2) - 416) * (((a8 - 966) | 0x400) - 1010)) ^ a8))
                            - 12LL))();
}

uint64_t sub_10051A244( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a10 - 0x33A24D71401A864LL) = 1987199149 - v16;
  int v22 = 535753261 * ((2 * ((v21 - 136) & 0x5289D090) - (v21 - 136) - 1384763538) ^ 0xA7822141);
  *(_DWORD *)(v21 - 136) = v22 + v17 - 206;
  *(void *)(v21 - 128) = v19;
  *(_DWORD *)(v21 - 120) = v22 ^ 0x25B8EE99;
  sub_10053FB04((_DWORD *)(v21 - 136));
  int v23 = 1374699841 * ((1086364362 - ((v21 - 136) | 0x40C09ACA) + ((v21 - 136) | 0xBF3F6535)) ^ 0xD2CB7D3C);
  *(_DWORD *)(v21 - 136) = v23 + v17 - 39;
  *(_DWORD *)(v21 - 132) = v23 + ((v20 << 6) & 0xAB9F7E40) + ((32 * v20) ^ 0xD5CFBF37) + 1073372912;
  *(void *)(v21 - 128) = v19;
  sub_10051734C(v21 - 136);
  *(_DWORD *)(v21 - 120) = v17 - 1759421093 * ((v21 - 365201346 - 2 * ((v21 - 136) & 0xEA3B78C6)) ^ 0x5946C892) - 725;
  *(void *)(v21 - 136) = &STACK[0x13AAEC8A5CF1D1A0];
  *(void *)(v21 - 128) = a16;
  sub_100517570(v21 - 136);
  *(_DWORD *)(v21 - 112) = (v17 - 671) ^ (1374699841
                                        * ((((v21 - 136) | 0x5428CE33) + (~(v21 - 136) | 0xABD731CC)) ^ 0x39DCD63B));
  *(void *)(v21 - 120) = a16;
  *(void *)(v21 - 136) = v19;
  uint64_t v24 = ((uint64_t (*)(uint64_t))((char *)*(&off_10090D690 + v17 - 953) - 12))(v21 - 136);
  return ((uint64_t (*)(uint64_t))(*(void *)(v18
                                                      + 8LL
                                                      * ((149
}

uint64_t sub_10051A4AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(_DWORD *)(v18 - 120) = v17
                         - 1759421093 * (((v18 - 136) & 0xE38F931A | ~((v18 - 136) | 0xE38F931A)) ^ 0xAF0DDCB1)
                         - 400;
  *(void *)(v18 - 136) = a15;
  *(void *)(v18 - 128) = v15;
  uint64_t v19 = sub_100517570(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16 + 8LL * ((1186 * (a10 < v17 - 719)) ^ v17)))(v19);
}

uint64_t sub_10051A534( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t), uint64_t a16)
{
  *(_DWORD *)(v18 - 120) = v17
                         + 296
                         - 1759421093 * ((2 * ((v18 - 136) & 0x9DEAFE8) - (v18 - 136) - 165588971) ^ 0x455CE041)
                         - 696;
  *(void *)(v18 - 136) = a12;
  *(void *)(v18 - 128) = a16;
  sub_100517570(v18 - 136);
  int v19 = 1374699841 * ((((v18 - 136) | 0x8590F274) - ((v18 - 136) & 0x8590F274)) ^ 0xE864EA7D);
  *(void *)(v18 - 128) = a14;
  *(_DWORD *)(v18 - 136) = v19 + v17 + 296 - 10;
  *(_DWORD *)(v18 - 132) = v19 + 365567528;
  sub_10051734C(v18 - 136);
  *(void *)(v18 - 136) = a14;
  *(void *)(v18 - 120) = a16;
  *(_DWORD *)(v18 - 112) = (v17 - 346) ^ (1374699841
                                        * (((((v18 - 136) ^ 0x60944128 | 0xF4B9EC4) ^ 0xFFFFFFFE)
                                          - ((v18 - 136) ^ 0x5099404 | 0xF0B4613B)) ^ 0xF79632DA));
  uint64_t v20 = a15(v18 - 136);
  return ((uint64_t (*)(uint64_t))(*(void *)(v16
                                                      + 8LL
                                                      * (((*(_DWORD *)(v18 - 128) > 0x6EF93EA6u)
                                                        * ((856 * ((v17 + 296) ^ 0x3FA) - 1400084401) & 0x5373959D ^ 0x484)) ^ (v17 - 133)))
                                          - 4LL))(v20);
}

uint64_t sub_10051A724( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return ((uint64_t (*)(void))(*(void *)(v12
                                        + 8LL
                                        * ((396
                                          * (((2 * a12) & 0xFDF959FA)
                                           + (a12 ^ 0xFEFCACFD)
                                           + ((254 * (v13 ^ 0x499)) ^ 0x177F7C04)
                                           - 377236731 < 37 * (v13 ^ 0x494u) + 2147483313)) ^ v13))
                            - 4LL))();
}

  ;
}

void sub_10051B3D4(uint64_t a1)
{
  int v2 = 1734042137 * (a1 ^ 0x5CCEC34D);
  int v3 = *(_DWORD *)(a1 + 24) ^ v2;
  int v4 = *(_DWORD *)(a1 + 20) ^ v2;
  int v5 = *(_DWORD *)(a1 + 8);
  uint64_t v20 = 1734042137 * (a1 ^ 0x1A7FA49B5CCEC34DLL);
  int v6 = v5 + v2;
  unsigned int v7 = 3804331 * ((&v39 & 0xFE7BA37C | ~(&v39 | 0xFE7BA37C)) ^ 0xFB1AAFD5);
  int v39 = v7 ^ (v3 + 1172345383);
  unsigned int v41 = v7 + 629839620;
  uint64_t v28 = &STACK[0x24207EE97761D898];
  __int128 v40 = &STACK[0x24207EE97761D898];
  sub_1005300F4((uint64_t)&v39);
  int v8 = v4;
  int v17 = v6 - 804708095;
  int v16 = -384966120;
  int v19 = v6 + 2066499387;
  int v14 = v6 + 802094763;
  int v13 = v6 + 228192187;
  uint64_t v12 = (char *)&v11[-488469973] + 1;
  int v22 = v3 + 231958203;
  int v21 = v3 ^ 0x6E;
  uint64_t v33 = (v3 + 1040559434) & 0xC1FA56F7;
  int v15 = v3 - 1879462007;
  uint64_t v23 = a1;
  uint64_t v24 = 796 * (v3 ^ 0x36u);
  v11[1] = v3 + 904781435;
  uint64_t v18 = (v3 + 904781435);
  uint64_t v32 = v18;
  int v31 = v3;
  int32x4_t v26 = vdupq_n_s32(0x88684D2B);
  int32x4_t v27 = vdupq_n_s32(0x8684D3Bu);
  int32x4_t v25 = vdupq_n_s32(0x8684D2Fu);
  uint64_t v29 = *(void *)a1;
  int v9 = (char *)*(&off_10090D690 + (v3 ^ 0x6E)) - 12;
  uint64_t v30 = *(void *)&v9[8 * v3] - 4LL;
  unsigned int v10 = ((v3 + 231958203) & 0xF22C9BDF) + v8 - ((2 * v8 + 1613088976) & 0xF7CC6302) + 737743642;
  char v34 = (HIBYTE(v10) ^ 0x7B) - (((HIBYTE(v10) ^ 0x7B) << (((v3 + 6) | 0x80) + 71)) & 0x30) - 104;
  char v35 = (BYTE2(v10) ^ 0xE6) - ((v10 >> 15) & 0x30) - 104;
  char v36 = (BYTE1(v10) ^ 0x31) - 2 * ((BYTE1(v10) ^ 0x31) & 0x1A ^ BYTE1(v10) & 2) - 104;
  char v37 = (((v3 - 69) & 0xDF) + v8 - ((2 * v8 - 48) & 2) + 26) ^ 0x19;
  __asm { BR              X16 }

uint64_t sub_10051B7B8(int a1, int a2)
{
  unsigned int v7 = v3 + a2;
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8LL
                                                                       * (((v2 + 959 + 5 * (v2 ^ 0xF3) - 1390)
                                                                         * (a1 - v4 - v5 + v7 < 0xF)) ^ v2)))( 354LL,  3962655170LL,  3778891515LL,  1678839810LL);
}

uint64_t sub_10051B838(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v9 = v5 + v4 + a4;
  if (v9 <= 0x40) {
    int v10 = 64;
  }
  else {
    int v10 = v5 + v4 + a4;
  }
  BOOL v11 = !__CFADD__(v9 - 1, v7 + v10);
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((((73 * (v6 ^ 0x47C) + 328) ^ v6 ^ 0x621) * v11) ^ v6)) - 4LL))();
}

uint64_t sub_10051B898@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, _OWORD *a5@<X5>, int a6@<W8>)
{
  *(_OWORD *)(a4 + (a6 + v8)) = *a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                       + 8LL
                                                                       * ((1405
                                                                         * (((v6 - 406) ^ 0xD2LL) == ((v7 + 1) & 0x1FFFFFFF0LL))) ^ v6)))( a1,  a2,  a3,  210LL);
}

uint64_t sub_10051B8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(_BYTE *)(a2 + (v6 + v4 + 423 - 1143)) = v5;
  *(_BYTE *)(a2 + (a4 - 332312126)) = *(_BYTE *)(a3 + 1);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v7 + 14856) - 4LL))(a1, 3962655170LL);
}

uint64_t sub_10051CB18@<X0>(int a1@<W1>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(_BYTE *)(a2 + (a1 + a4 + 1)) = *(_BYTE *)(a3 + (v7 - 516075727));
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (v6 ^ (532 * ((v5 + 55) < 4)))) - (v4 ^ 0x30)))();
}

uint64_t sub_10051CB60@<X0>( uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t (*a24)(uint64_t))
{
  *(_BYTE *)(a1 + (a3 + 2)) = *(_BYTE *)(a2 + v25 - 516075778 + (v24 ^ 0x442u));
  int v27 = 1759421093 * ((((v26 - 168) | 0xC192A817) - (v26 - 168) + ((v26 - 168) & 0x3E6D57E8)) ^ 0x72EF1843);
  *(_DWORD *)(v26 - 160) = v27 + (v24 ^ 0x442) + 722;
  *(_DWORD *)(v26 - 156) = v27 + 647934166;
  *(void *)(v26 - 168) = a22;
  uint64_t v28 = sub_10052C098(v26 - 168);
  return a24(v28);
}

uint64_t sub_10051CBF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  BOOL v15 = a12 < 0x48D3BFC2;
  unsigned int v16 = v12 + ((v13 - 843738446) & 0x324A6FFF ^ 0xED465EA1);
  int v17 = v15 ^ (v16 < 0x48D3BFC2);
  BOOL v18 = v16 < a12;
  if (!v17) {
    BOOL v15 = v18;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v14 + 8LL * (((8 * !v15) | (16 * !v15)) ^ v13)) - 4LL))( 2758973756LL,  1221836738LL);
}

uint64_t sub_10051CC7C@<X0>( int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  BOOL v12 = a3 < a2;
  *(_BYTE *)(a5 + (((v8 - 359) | a4) ^ (v10 + 1594)) + a7) = *(_BYTE *)(a6 + (v7 + a1))
  if (v12 == v7 + v9 < a2) {
    BOOL v12 = v7 + v9 < a3;
  }
  return ((uint64_t (*)(void))(*(void *)(v11 + 8LL * (((8 * !v12) | (16 * !v12)) ^ v8)) - 4LL))();
}

uint64_t sub_10051CCF8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, int a41, char a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,int a51)
{
  int v54 = 1759421093 * ((v53 - 168) ^ 0xB37DB054);
  *(void *)(v53 - 168) = a28;
  *(_DWORD *)(v53 - 160) = v54 + v51 - 857;
  *(_DWORD *)(v53 - 156) = a12 + v54;
  uint64_t v55 = sub_10052C098(v53 - 168);
  uint64_t v56 = a51 & ((((v51 - 1631) ^ 0x5FD) - 1522) ^ ((v51 - 1631) | 0x34u));
  *(&a42 + (v56 ^ 0x1F)) = 24;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52
                                                                       + 8LL
                                                                       * ((51 * ((v56 ^ 0x1F) > 0x37)) ^ v51)))( v55,  3962655170LL,  3778891515LL,  a32);
}

uint64_t sub_10051CDE0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((1009 * (((v0 == (v1 ^ 0x5EB) + 41) ^ (-41 * (v1 ^ 0xFA))) & 1)) ^ v1)))();
}

uint64_t sub_10051CE38@<X0>(int a1@<W8>)
{
}

uint64_t sub_10051CE90@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + __chkstk_darwin(v3, v4) = v6;
}

void sub_10051CED8()
{
}

uint64_t sub_10051CEE0()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((1974 * ((v0 - 1953880143) < 0x38)) ^ (v2 + 815)))
                            - ((v2 + 469) | 0x4D0u)
                            + 1741LL))();
}

uint64_t sub_10051CF38@<X0>(int a1@<W8>)
{
  uint64_t v4 = v1;
  unint64_t v5 = v1 + v2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56LL;
  }
  BOOL v6 = v5 - v4 + (((((2 * a1) ^ 0xD86) + 988) | 0x108u) ^ 0x7475DD57LL) < 8;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((8 * v6) | (32 * v6)) ^ a1)) - 4LL))();
}

uint64_t sub_10051CF9C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v12) = v14;
  return ((uint64_t (*)(void))(*(void *)(v13 + 8LL * ((((v11 & 0xFFFFFFFFFFFFFFF8LL) == 8) * (v10 - 1135)) ^ v10)) - 8LL))();
}

uint64_t sub_10051CFD8()
{
  void *v1 = v5;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (((v3 == 0) * v2) ^ v0)) - 8LL))();
}

uint64_t sub_10051CFFC()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((28 * (v0 != v1)) | v2)) - (((v2 - 819) | 4u) ^ 0x38LL)))();
}

uint64_t sub_10051D044@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a2 + v4 + a1 - 1) = v5;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((((unint64_t)(a2 + v4) > 0x37) * v3) ^ (v2 + 326))) - 12LL))();
}

void sub_10051D074()
{
}

uint64_t sub_10051D2AC@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((1759 * (((v1 == a1) ^ (v2 - 10)) & 1)) ^ v2))
                            - (v2 ^ 0x315u)
                            + 44LL))();
}

uint64_t sub_10051D300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_BYTE *)(v5 + v8 + a5 - 1) = v9;
  BOOL v12 = v5 + v8 < (v6 ^ v10 ^ v7);
  return ((uint64_t (*)(void))(*(void *)(v11 + 8LL * ((v12 | (4 * v12)) ^ (v6 + 749))) - 8LL))();
}

void sub_10051D338()
{
}

uint64_t sub_10051D348( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, int a33, char a34, uint64_t a35, uint64_t a36, char a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,int a56)
{
  if (a34 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 8LL * ((59 * (a56 == (v56 ^ 0x258AC849))) ^ (v56 + 298))))( a1,  a14);
  }
  if (a34 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57
  }
                                                                + 8LL
                                                                * ((145 * (a56 != (v56 ^ 0x258AC849))) ^ (v56 + 305))))( a1,  a2,  a14);
  uint64_t v59 = (v56 + 1266);
  unint64_t v60 = ((unint64_t)&a37 ^ 0x7A78FB59BF7BEFEFLL)
      - 0x1050090811584612LL
      + ((v59 ^ 0xF4F1F6B37EF7DAF0LL) & (2LL * (void)&a37));
  a55 = (v60 + 13 * ((v56 - 14) ^ 0x22)) * ((v60 + 35) ^ 0xBA);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 + 8LL * (int)v59) - 4LL))(a1, a2, a14);
}

void sub_10051D668()
{
}

uint64_t sub_10051D670@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(void *)(v7 + 32);
  uint64_t v4 = *(void *)(v7 + 40);
  *(void *)(v1 - 184) = 0x9898989898989898LL;
  *(void *)(v1 - 176) = 0x9898989898989898LL;
  int v5 = 235795823 * ((((2 * (v1 - 168)) | 0x8903073A) - (v1 - 168) + 998145123) ^ 0x502CCAC4);
  *(_DWORD *)(v1 - 132) = (a1 + 1744) ^ v5;
  *(void *)(v1 - 152) = &v8;
  *(void *)(v1 - 144) = v4;
  *(_DWORD *)(v1 - 160) = v5 + 87424939;
  *(void *)(v1 - 168) = v3;
  *(void *)(v1 - 128) = v1 + 0x3F70C0CAD41266BCLL;
  uint64_t result = ((uint64_t (*)(uint64_t))(*(void *)(v2 + 8LL * (a1 + 102)) - 8LL))(v1 - 168);
  *(_DWORD *)(v7 + 16) = *(_DWORD *)(v1 - 136);
  return result;
}

uint64_t sub_10051D760(_DWORD *a1)
{
  unsigned int v1 = 3804331 * ((((2 * (_DWORD)a1) | 0x5B2BA828) - (_DWORD)a1 - 764793876) ^ 0xD70B2742);
  unsigned int v2 = a1[1] + v1;
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + (int)(v2 - 574))
                                        + 8 * (int)((89 * ((*a1 ^ v1 ^ 0x88684D2B) - 1 < 0x63)) ^ v2)
                                        - 12)
                            - (v2 ^ 0x119)
                            - ((v2 + 105) | 0x80)
                            + 1790LL))();
}

uint64_t sub_10051D7FC@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x335F4D7B17DD4E17LL) = (a2 ^ 0x7797B2D4)
                                                              - ((v2 + 2 * (a2 ^ 0x7797B2D4) + 536784817) & 0x10D09A56)
                                                              - 2006473020;
  return result;
}

void sub_10051D8BC(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 24) != 0x2185BF99DEDD744CLL
    && *(void *)(a1 + 8) != 0x3F786DCCE8121A19LL
    && *(void *)(a1 + 40) != 0x1219B1992AFF1EFBLL;
  int v1 = *(_DWORD *)(a1 + 36) - 1178560073 * ((2 * (a1 & 0x2A268EDC) - a1 - 707170013) ^ 0xE7CF7163);
  __asm { BR              X9 }

uint64_t sub_10051D9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8LL * ((281 * (*(_DWORD *)(a6 - 0x2185BF99DEDD7434LL) == 411 * (v8 ^ 0x81) - 2006431654)) | v8)))( a1,  a2,  a3,  a4,  a5,  a6,  a7);
}

uint64_t sub_10051DA24@<X0>( uint64_t a1@<X0>, uint64_t a2@<X5>, int a3@<W8>, __n128 a4@<Q0>, __n128 a5@<Q1>, __n128 a6@<Q2>, __n128 a7@<Q3>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _DWORD *a15)
{
  unsigned int v22 = *(_DWORD *)(a2 - 0x2185BF99DEDD743CLL) - 1628939717;
  *(_DWORD *)(v17 - 140) = a3 ^ *a15 ^ 0x49B959D5;
  v18.n128_u64[0] = 0x3030303030303030LL;
  v18.n128_u64[1] = 0x3030303030303030LL;
  v19.n128_u64[0] = 0x9898989898989898LL;
  v19.n128_u64[1] = 0x9898989898989898LL;
  BOOL v20 = v22 < 0xA71B1936;
  if (v20 == (((v15 ^ 0x6CC) - 236482899) & 0xE186FB7 ^ 0xA71B19B4) > 0xA71B1936) {
    BOOL v20 = v22 > 0xA71B1936;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v16 + 8LL * ((89 * !v20) ^ v15 ^ 0x6CC)))( a1,  3636353107LL,  a4,  a5,  a6,  a7,  v18,  v19);
}

uint64_t sub_10051DC48( uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, _DWORD *a16)
{
  int v19 = 3804331 * ((2 * ((v18 - 136) & 0x41412018) - (v18 - 136) - 1094787101) ^ 0x44202CB5);
  *(_DWORD *)(v18 - 120) = v19 + v17 + 1718;
  *(void *)(v18 - 128) = a6;
  *(_DWORD *)(v18 - 136) = v19 + a3 - a14 + 392680416;
  *(_DWORD *)(v18 - 132) = v19 + ((a3 - 796157608) & 0xFFFFFFF0) + 32707542;
  uint64_t v20 = ((uint64_t (*)(uint64_t))*(&off_10090D690 + (v17 ^ 0x89)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8LL * ((4 * (*a16 == -2006430421)) | (16 * (*a16 == -2006430421)) | v17)))(v20);
}

uint64_t sub_10051DD1C( __n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17, unsigned int a18)
{
  v20.n128_u64[0] = 0x3030303030303030LL;
  v20.n128_u64[1] = 0x3030303030303030LL;
  v21.n128_u64[0] = 0x9898989898989898LL;
  v21.n128_u64[1] = 0x9898989898989898LL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(*(void *)(v18 + 8LL * ((v19 - 33) ^ (1360 * (a18 < a17)))) - (v19 - 37) - ((v19 - 33) ^ 0xE3u) + 215LL))( 2078683521LL,  3636353107LL,  1393583534LL,  385848927LL,  3909118369LL,  a10,  2901383632LL,  a1,  a2,  a3,  a4,  v20,  v21);
}

uint64_t sub_10051DDC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8LL * v13) + (v13 + 920) - 1025LL);
  uint64_t v20 = *v18;
  unsigned int v21 = a5 + 385848927;
  *(_BYTE *)(v20 + v21) = (v15 ^ 0x7B) - ((2 * (v15 ^ 0x7B)) & 0x30) - 104;
  *(_BYTE *)(v20 + v21 + 1) = 99;
  *(_BYTE *)(v20 + (a5 + 385848929)) = -79 - 2 * (v16 & 0x19);
  *(_BYTE *)(v20 + v21 + 3) = v14 ^ 0xD9;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

void sub_10051E1AC()
{
}

void sub_10051E1CC()
{
}

uint64_t sub_10051E1F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20, uint64_t a21, int a22)
{
  unsigned int v24 = (a8 + (a19 & 0xF6A0F7EF) + 848 - 945) ^ a22;
  return (*(uint64_t (**)(void))(v22
                              + 8LL
                              * ((119
                                * (((2 * (v24 - ((2 * v24) & 0x7C0DCE4E) + 1040639783)) & 0xF6E67DFA ^ 0x74044C4A)
                                 + ((v24 - ((2 * v24) & 0x7C0DCE4E) + 1040639783) ^ 0xC575D9DA)
                                 + 1979711359 != 1903378044)) ^ (v23 + 699))))();
}

uint64_t sub_10051E2A4(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((4 * ((((a1 + v2 + 76333315) < 8) ^ (v1 + 100)) & 1)) & 0xF7 | (8 * ((((a1 + v2 + 76333315) < 8) ^ (v1 + 100)) & 1)) | v1)))();
}

uint64_t sub_10051E31C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v23
                                                               + 8LL
                                                               * ((92
                                                                 * (a20 - v20 - a3 - 0xD7CDE9D8B19902BLL < (unint64_t)(((v22 - 925) | 0x50Au) - 1180) - 98)) ^ ((v22 - 925) | 0x50A)))
                                                   - ((((v22 - 925) | 0x50A) - 589563689) & 0x232407EE)
                                                   + 1500LL))( a1,  v21);
}

uint64_t sub_10051E390(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
}

uint64_t sub_10051E3C8( int a1, double a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, int a10)
{
  unsigned int v15 = a1 + 76333314 + v13;
  unsigned int v16 = ((a10 ^ 0x566) + 1324363645) & 0xB10FD1FF;
  int v17 = (a10 ^ 0x566) + 892;
  uint64_t v18 = v11 + v15;
  int8x16_t v19 = vrev64q_s8(*(int8x16_t *)(v18 - 15));
  int8x16_t v20 = vextq_s8(v19, v19, 8uLL);
  int8x16_t v21 = vrev64q_s8(*(int8x16_t *)(v18 - 31));
  int8x16_t v22 = vextq_s8(v21, v21, 8uLL);
  uint64_t v23 = v10 + v15;
  int8x16_t v24 = vrev64q_s8(vaddq_s8(vsubq_s8(v20, vandq_s8(vaddq_s8(v20, v20), a6)), a7));
  *(int8x16_t *)(v23 - 15) = vextq_s8(v24, v24, 8uLL);
  int8x16_t v25 = vrev64q_s8(vaddq_s8(vsubq_s8(v22, vandq_s8(vaddq_s8(v22, v22), a6)), a7));
  *(int8x16_t *)(v23 - 31) = vextq_s8(v25, v25, 8uLL);
  return ((uint64_t (*)(void))(*(void *)(v14 + 8LL * (int)((((v12 & 0xFFFFFFE0) == 32) * (v16 ^ 0x65B)) ^ v17)) - 4LL))();
}

void sub_10051E484()
{
}

uint64_t sub_10051E490( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return ((uint64_t (*)(void))(*(void *)(v19
                                        + 8LL
                                        * ((71 * (v18 - v20 + ((a18 + 971590317) & 0xC616AF7D) == -734969248)) ^ a18))
                            - 8LL))();
}

uint64_t sub_10051E50C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, int a25)
{
  unsigned int v29 = (v27 + 1492157245) & 0xA70F7CE3;
  int v30 = v25 - 1726148148 + v29 + v26;
  BOOL v31 = v30 - 1195288287 < (a25 - 1332831706);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v28 + 8LL * (int)((54 * v31) ^ (v29 + 1437))) - 12LL))( a1,  3636353107LL);
}

uint64_t sub_10051E828( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, unsigned int a24)
{
  return sub_10051E844(a1, a2, a3, a24);
}

void sub_10051E844()
{
}

uint64_t sub_10051E920( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  *(_BYTE *)(*v21 + v18 + a7 + ((v19 - 896) | 0x82u)) = 24;
  BOOL v22 = v18 - 1715676159 < (a18 - 1748263765);
  return (*(uint64_t (**)(void))(v20 + 8LL * (v19 | !v22 | (8 * !v22))))();
}

uint64_t sub_10051E99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v14 = v11 < v7;
  *(_BYTE *)(*v13 + (a7 + v8 + 131)) = -104;
  unsigned int v15 = v8 + 1 + v10;
  int v16 = v14 ^ (v15 < v7);
  BOOL v17 = v15 < v11;
  if (!v16) {
    LOBYTE(v14) = v17;
  }
  return (*(uint64_t (**)(void))(v12
                              + 8LL
                              * ((((v9 + 1) ^ v14) & 1 | (8 * (((v9 + 1) ^ v14) & 1))) ^ v9)))();
}

void sub_10051E9F8(uint64_t a1@<X5>, int a2@<W8>)
{
  *(void *)(v5 - 0x3F786DCCE8121A19LL) = *v2;
  *(_DWORD *)(v6 - 0x1219B1992AFF1EFBLL) = a2;
  void *v2 = 0LL;
  *(void *)(a1 - 0x2185BF99DEDD7444LL) = 0x3B4649503B46495LL;
  _DWORD *v4 = 137543419;
  unsigned int v3 = ((*(_DWORD *)(a1 - 0x2185BF99DEDD7438LL) & 0x1386221C ^ 0x13860015)
      + (*(_DWORD *)(a1 - 0x2185BF99DEDD7438LL) & 0xEC79DDE2 ^ 0xE4490161)
      - 2) ^ 0x796A38CA;
  *(_DWORD *)(a1 - 0x2185BF99DEDD7438LL) = (((2 * v3) | 0xCA058CD2) - v3 + 452802967) ^ 0x6BA7FFD7;
  *(_DWORD *)(v8 + 16) = *v7;
}

void sub_10051EB38(uint64_t a1)
{
  if (*(void *)a1) {
    BOOL v2 = *(void *)(a1 + 8) == 0x5BFD90C18C6562B2LL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(a1 + 20) ^ (1755732067 * (((a1 | 0xFD508F6) - a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D));
  __asm { BR              X8 }

void sub_10051EC6C()
{
  *(_DWORD *)(v1 + 28) = v0 | 4;
}

uint64_t sub_10051EC74()
{
  STACK[0x218] = v1;
  *(_BYTE *)(v5 - 180) = ((2 * ((v5 + 64) & 0xA0) - (v5 + 64) + 93) ^ 0x86) * v0 + 26;
  STACK[0x260] = (unint64_t)&STACK[0xFB9CCB0B87C5B60];
  *(void *)(v5 - 168) = &STACK[0xFB9CCB0B87C5B60];
  STACK[0x268] = (unint64_t)&STACK[0x2609BEA098DA53AC];
  *(void *)(v5 - 192) = &STACK[0x2609BEA098DA53AC];
  *(_DWORD *)(v5 - 184) = v4 - ((2 * ((v5 - 192) & 0x3D721AA0) - (v5 - 192) + 1116595549) ^ 0x9C4B5886) * v0 - 612;
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v2 + 8LL * (v4 - 815));
  STACK[0x258] = (unint64_t)v6;
  STACK[0x420] = v3;
  uint64_t v7 = v6(v5 - 192);
  unint64_t v8 = STACK[0x420];
  int v9 = *(_DWORD *)(v5 - 176);
  LODWORD(STACK[0x478]) = v9;
  return ((uint64_t (*)(uint64_t))(*(void *)(v8
                                                      + 8LL
                                                      * (((v9 == -2006430421) * (((v4 - 726) | 0x400) + 730)) ^ v4))
                                          - (((v4 - 509) | 0xABu) ^ 0x1FFLL)))(v7);
}

#error "10051F504: call analysis failed (funcsize=315)"
uint64_t sub_10051F508()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  STACK[0x430] = 0LL;
  int v4 = 1755732067 * (((v1 | 0x3CFC1E2F) - (v1 & 0x3CFC1E2F)) ^ 0xE23AA3F4);
  *(_DWORD *)(v3 - 192) = v2 - v4 - 702;
  *(_DWORD *)(v3 - 188) = v4 ^ 0x31530203;
  *(void *)(v3 - 184) = STACK[0x270];
  *(void *)(v3 - 176) = 0x567B1177B2900930LL;
  *(void *)(v3 - 168) = STACK[0x278];
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 8LL * (v2 - 1138)) - 8LL);
  STACK[0x280] = (unint64_t)v5;
  uint64_t v6 = v5(v3 - 192);
  return ((uint64_t (*)(uint64_t))(*(void *)(STACK[0x420]
                                                      + 8LL * ((11 * (*(_DWORD *)(v3 - 160) != v2 - 2006431590)) ^ v2))
                                          - 12LL))(v6);
}

uint64_t sub_10051F5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x248] = v7;
  STACK[0x298] = v6;
  BOOL v9 = ((73 * (v8 ^ 0x26B)) ^ 0x98CDFA88) + LODWORD(STACK[0x4AC]) > 0xFFFFF7FE;
  return (*(uint64_t (**)(void))(a6 + 8LL * ((v9 | (2 * v9)) ^ v8)))();
}

uint64_t sub_10051F624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8 = v7 - ((2 * v7 + 295437144) & 0x13A16390) - 1566657676;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6
                                                                                 + 8LL
                                                                                 * ((151
                                                                                   * (((v8 << (((v6 + 107) & 0xBF) - 4)) & 0x765BF89E ^ 0x12016090)
                                                                                    + (v8 ^ 0x32FD4D87)
                                                                                    - 2103307 != 990766148)) ^ (v6 + 329)))
                                                                     - 12LL))( a1,  a2,  a3,  990766148LL);
}

uint64_t sub_10051F7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6
                                        + 8LL
                                        * ((338 * (v7 + v6 - 992869455 >= ((v8 + 845709818) & 0xCD9779DA) - 466)) ^ v8))
                            - ((v8 + 1560898466) & 0xA2F68FDF ^ 0x18BLL)))();
}

uint64_t sub_10051F834@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (v3 ^ (42 * ((unint64_t)(v2 - a2) < 0x20))))
}

uint64_t sub_10051F868(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t sub_10051F8A4@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  unsigned int v7 = v5 - 992869456 + v4;
  uint64_t v8 = v2 + v7;
  __int128 v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((((v3 & 0xFFFFFFE0) == 32) * (v6 ^ 0x448)) ^ (v6 + 500))) - 8LL))();
}

void sub_10051F900()
{
}

uint64_t sub_10051F90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6
                              + 8LL
                              * (int)(((((((v8 ^ 0x7B5) - 365) | 0x10) ^ 0xFFFFFB57) + v8) * (v6 == v7)) ^ v8 ^ 0x7B5)))();
}

uint64_t sub_10051F944(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((791 * (((((a1 - 274) | 0x10) - 1016) & v6) == 0)) ^ a1)) - 12LL))();
}

uint64_t sub_10051F978@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v5 - 992869456 + v4 - v6)) = *(void *)(v2
                                                                             - 7
                                                                             + (v5 - 992869456 + v4 - v6));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((2034 * (((v7 - 1048) & v3) - v6 != 8)) ^ (v7 - 46)))
}

void sub_10051F9DC()
{
}

uint64_t sub_10051F9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((((v7 ^ 0x77) + 507) * (v6 == v8)) ^ v7))
}

uint64_t sub_10051FA14@<X0>(int a1@<W3>, uint64_t a2@<X5>, int a3@<W7>, uint64_t a4@<X8>)
{
  *(_BYTE *)(a4 + (v6 + a3)) = *(_BYTE *)(v4 + (v6 + a3));
  return ((uint64_t (*)(void))(*(void *)(a2 + 8LL * (((v6 - 1 == a1) * v7) ^ (v5 + 145))) - 4LL))();
}

uint64_t sub_10051FA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = STACK[0x430];
  int v8 = (uint64_t (*)(unint64_t))(*(void *)(a6
                                                            + 8LL
                                                            * (((STACK[0x430] != 0) << 7) | ((STACK[0x430] != 0) << 8) | (v6 + 645)))
                                                - 12LL);
  STACK[0x2C8] = (unint64_t)*(&off_10090D690 + (v6 ^ 0x138));
  return v8(v7);
}

uint64_t sub_10051FA98()
{
  uint64_t v4 = v0();
  unint64_t v5 = STACK[0x420];
  LODWORD(STACK[0x588]) = v2;
  return (*(uint64_t (**)(uint64_t))(v5 + 8LL * (((((v1 + 294) | 0x38) - 814) * (v3 ^ 1)) ^ (v1 + 553))))(v4);
}

void sub_10051FADC()
{
}

uint64_t sub_10051FAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  LODWORD(STACK[0x588]) = v7;
  return (*(uint64_t (**)(void))(a6 + 8LL * (((((v6 + 294) | 0x38) - 814) * (v8 ^ 1)) ^ (v6 + 553))))();
}

uint64_t sub_10051FB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  LODWORD(STACK[0x454]) = 2;
  *(void *)(v8 + 160) = 0LL;
  LODWORD(STACK[0x610]) = 0;
  LODWORD(STACK[0x530]) = 0;
  return (*(uint64_t (**)(void))(a6
                              + 8LL
                              * ((1334
                                * ((((v6 - 632051517) & 0x25AC55DE ^ 0x1D8) & v7) != (((v6 + 200) | 0x141) ^ 0x541))) ^ v6)))();
}

uint64_t sub_10051FB90( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50)
{
  *(_DWORD *)(STACK[0x398] + 360) = 1903865542;
  uint64_t v59 = ((uint64_t (*)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))*(&off_10090D690 + (v50 ^ 0x193u)))( v53,  2LL,  &STACK[0x454],  STACK[0x4A0],  (v55 - 1731329620),  v51,  &STACK[0x550],  &STACK[0x610]);
  int v62 = ((2 * v59) & 0xE3FFF378) + (v59 ^ 0x71FFF9BC);
  if (v62 == -2113930817)
  {
    LODWORD(STACK[0x588]) = 2006390291;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(STACK[0x420]
                                                                        + 8LL
                                                                        * (((*(void *)(v56 + 160) == 0LL)
                                                                          * (((LODWORD(STACK[0x428]) ^ 0x232) - 491) ^ 0x1BF)) ^ (LODWORD(STACK[0x428]) - 27))))( v59,  *(void *)(v56 + 160),  v60,  v61);
  }

  else if (v62 == 1912601020)
  {
    int v63 = LODWORD(STACK[0x428]) ^ 0x49B;
    STACK[0x388] = *(void *)(v56 + 160);
    LODWORD(STACK[0x380]) = STACK[0x610];
    unint64_t v64 = STACK[0x420];
    STACK[0x290] = STACK[0x248] + 2304;
    uint64_t v65 = (v63 - 671) | 4u;
    LODWORD(STACK[0x5D4]) = 1238980609;
    unint64_t v66 = (char *)&STACK[0x690] + v54 - 0x90E6A15395EE7D4LL;
    STACK[0x2B8] = v54 + 4144;
    STACK[0x498] = v54 + 4144;
    *(void *)unint64_t v66 = 0x6370646600LL;
    v66[8] = 1;
    STACK[0x3D8] = (unint64_t)&STACK[0x690] + v54 - 0x90E6A15395EE7CBLL;
    STACK[0x410] = STACK[0x460];
    STACK[0x390] = (unint64_t)&STACK[0x690]
                 + v54
                 + ((v65 - 646) & (16 * ((void)&STACK[0x690] + v54 - 0x90E6A15395EE124LL) + 16))
                 - 0x90E6A15395EE114LL;
    LODWORD(STACK[0x3E0]) = 182239058;
    STACK[0x378] = v52;
    uint64_t v67 = (uint64_t (*)(__n128))(*(void *)(v64
                                                     + 8LL
                                                     * (int)((1434
                                                            * ((((((_DWORD)v65 - 596) | 0x188) + 903) ^ ((_DWORD)v65 + 667)) == 32)) ^ v65))
                                         - 8LL);
    STACK[0x3D0] = (unint64_t)*(&off_10090D690 + (int)(v65 ^ 0x2BC));
    STACK[0x3F8] = (unint64_t)*(&off_10090D690 + (int)v65 - 487);
    STACK[0x3F0] = (unint64_t)*(&off_10090D690 + (int)(v65 ^ 0x28A)) - 4;
    return v67((__n128)0);
  }

  else
  {
    int v69 = 3804331 * (((((v58 - 192) | 0xDDB62E52) ^ 0xFFFFFFFE) - (~(v58 - 192) | 0x2249D1AD)) ^ 0xD8D722FB);
    *(void *)(v57 + 8) = a50;
    int v70 = STACK[0x428];
    *(_DWORD *)(v58 - 192) = (v62 - ((2 * v62 + 469765256) & 0x10D09A56) + 375935855) ^ v69;
    *(_DWORD *)(v58 - 188) = v70 - v69 + 190;
    uint64_t v71 = sub_10051D760((_DWORD *)(v58 - 192));
    return (*(uint64_t (**)(uint64_t))(STACK[0x420]
                                              + 8LL
                                              * (((*(void *)(v56 + 160) == 0LL) * (((v70 ^ 0x232) - 491) ^ 0x1BF)) ^ (v70 - 27))))(v71);
  }

uint64_t sub_100522D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v8 + 176) = v7;
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((1322 * (STACK[0x5B0] != 0)) ^ (v6 + 9))) - 8LL))();
}

uint64_t sub_100522DA4()
{
}

uint64_t sub_100522DE0()
{
  return ((uint64_t (*)(void))(*(void *)(STACK[0x420] + 8LL * ((54 * (STACK[0x448] != 0)) ^ (v0 + 192))) - 8LL))();
}

uint64_t sub_100522E14()
{
  return ((uint64_t (*)(void))(*(void *)(STACK[0x420] + 8LL * ((562 * (*v1 != 0LL)) ^ (v0 + 858))) - 8LL))();
}

uint64_t sub_100522E4C()
{
  uint64_t v2 = ((uint64_t (*)(void))STACK[0x2C8])();
  return ((uint64_t (*)(uint64_t))(*(void *)(STACK[0x420]
                                                      + 8LL
                                                      * ((((v1 ^ 0xDC) + 1131) * (v0 == -2006430421)) ^ (v1 - 189)))
                                          - 4LL))(v2);
}

uint64_t sub_100522E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((235 * (*(void *)(v7 + 312) != 0LL)) ^ (v6 + 165))) - 8LL))();
}

uint64_t sub_100522EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((54 * (STACK[0x448] != 0)) ^ (v6 + 192))) - 8LL))();
}

uint64_t sub_100522EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((562 * (*v7 != 0LL)) ^ (v6 + 858))) - 8LL))();
}

uint64_t sub_100522F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((((v7 ^ 0xDC) + 1131) * (v6 == -2006430421)) ^ (v7 - 189))) - 4LL))();
}

uint64_t sub_100522F54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52)
{
  LODWORD(STACK[0x5D4]) = 1238980329;
  LODWORD(STACK[0x56C]) = 128;
  v54[4] = v53 + 0x13AAEC8A5CF1D500LL;
  v54[5] = 0LL;
  int v56 = 1759421093 * ((v55 + 181515909 - 2 * ((v55 - 192) & 0xAD1B745)) ^ 0xB9AC0711);
  v54[7] = v53 + 0x13AAEC8A5CF1D3F0LL;
  v54[8] = 0LL;
  v54[6] = a45;
  *(_DWORD *)(v55 - 184) = v56 ^ 0x270A2F08;
  *(_DWORD *)(v55 - 168) = v52 - v56 + 77;
  void v54[2] = a52;
  *uint64_t v54 = v53;
  uint64_t v57 = ((uint64_t (*)(uint64_t))STACK[0x418])(v55 - 192);
  return ((uint64_t (*)(uint64_t))(*(void *)(STACK[0x420]
                                                      + 8LL
                                                      * ((27 * (*(_DWORD *)(v55 - 180) != v52 - 2006430683)) ^ v52))
                                          - 4LL))(v57);
}

uint64_t sub_100523054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  LODWORD(STACK[0x588]) = v6;
  return (*(uint64_t (**)(void))(a6
                              + 8LL * (((*(void *)(v8 + 160) == 0LL) * (((v7 ^ 0x232) - 491) ^ 0x1BF)) ^ (v7 - 27))))();
}

uint64_t sub_100523094@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * (int)(((LODWORD(STACK[0x588]) != v2 + (a2 ^ 0x80) - 872)
                                               * ((a2 + 201437687) & 0xF3FE4BFA ^ 0x6EA)) ^ a2))
                            - 12LL))();
}

uint64_t sub_1005230EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)(v7 + 52) += (31 * (v6 ^ 0x36D) - 766935844) & 0x2DB682EE ^ 0x67;
  STACK[0x498] = v8 - 2432;
  LODWORD(STACK[0x478]) = v10;
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((1343 * (*(void *)(v9 + 112) == 0LL)) ^ v6)) - 4LL))();
}

uint64_t sub_10052315C()
{
  int v5 = 1178560073 * ((((2 * v0) | 0x55A17138) - v0 - 718321820) ^ 0x18C6B8DC);
  v3[3] = STACK[0x2B0];
  *(_DWORD *)(v4 - 192) = LODWORD(STACK[0x234]) ^ v5;
  *(_DWORD *)(v4 - 160) = v5 + v1 + 770 - 853825270 + v2;
  *(_DWORD *)(v4 - 156) = v5 + v1 + 28;
  v3[1] = STACK[0x240];
  v3[5] = STACK[0x238];
  uint64_t v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_10090D690 + (v1 ^ 0xDB)) - 8))(v4 - 192);
  unint64_t v7 = STACK[0x420];
  int v8 = *(_DWORD *)(v4 - 176);
  LODWORD(STACK[0x478]) = v8;
}

uint64_t sub_10052323C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  LODWORD(STACK[0x2EC]) = STACK[0x4EC];
  return ((uint64_t (*)(void))(*(void *)(a6
                                        + 8LL
                                        * ((52 * (v6 - 1903865541 + ((31 * (v7 ^ 0x36D)) ^ 0x141u) - 372 - 102 < 2)) ^ (31 * (v7 ^ 0x36D))))
                            - 8LL))();
}

uint64_t sub_1005232A4@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int8x16_t v4 = vrev64q_s8(*(int8x16_t *)(v3 + 127 - a2 - 15));
  int8x16_t v5 = vextq_s8(v4, v4, 8uLL);
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(v3 + 127 - a2 - 31));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  unint64_t v8 = STACK[0x290] + 127 - a2;
  v9.i64[0] = 0x3030303030303030LL;
  v9.i64[1] = 0x3030303030303030LL;
  int8x16_t v10 = vmvnq_s8(vandq_s8(vaddq_s8(v5, v5), v9));
  int8x16_t v11 = vmvnq_s8(vandq_s8(vaddq_s8(v7, v7), v9));
  v9.i64[0] = 0x9999999999999999LL;
  v9.i64[1] = 0x9999999999999999LL;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vaddq_s8(v5, v9), v10));
  *(int8x16_t *)(v8 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vaddq_s8(v7, v9), v11));
  *(int8x16_t *)(v8 - 31) = vextq_s8(v13, v13, 8uLL);
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((a2 == 96) * (v2 - 75)) ^ v2)) - 4LL))();
}

uint64_t sub_10052333C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  LODWORD(STACK[0x588]) = v7;
  return ((uint64_t (*)(void))(*(void *)(a6
                                        + 8LL
                                        * ((((*(_DWORD *)(STACK[0x398] + 360) - 1903865542) > 0xFFFFFFFD)
                                          * (158 * ((v6 + 1078) ^ 0x53F) - 374)) ^ (v6 + 1078)))
                            - 12LL))();
}

uint64_t sub_10052338C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  unint64_t v10 = STACK[0x388];
  int8x16_t v11 = (char *)&STACK[0x690] + STACK[0x388] - 0x90E6A15395EF154LL;
  *(void *)(v9 + 48) = v11 - 1824;
  STACK[0x3F0] = (unint64_t)(v11 - 1596);
  LODWORD(STACK[0x5F8]) = 1427280025;
  STACK[0x498] = v10 - 192;
  *(void *)(v9 + 64) = 0LL;
  LODWORD(STACK[0x5BC]) = 1731329620;
  STACK[0x3F8] = (unint64_t)(v11 - 1824);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8LL * (((((a9 - 298) | 0x240) - 741) * (v11 == (char *)1576)) ^ (a9 + 651))) - 4LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8);
}

uint64_t sub_100523BD4@<X0>(uint64_t a1@<X5>, int a2@<W6>, uint64_t a3@<X8>)
{
  STACK[0x498] = a3 - 16;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((1311 * (a2 == v4)) ^ v3)) - ((v3 + 31) | 0xCAu) + 462LL))();
}

uint64_t sub_100523C18()
{
  *(_DWORD *)(v2 - 192) = v1 - 1374699841 * (((v0 | 0x794D81D9) - (v0 & 0x794D81D9)) ^ 0x14B999D0) - 231789542;
  nullsub_36(v2 - 192);
  uint64_t v3 = ((uint64_t (*)(uint64_t))STACK[0x3D0])(336LL);
  return ((uint64_t (*)(void))(*(void *)(STACK[0x420] + 8LL * (((v3 == 0) * (((v1 + 350) | 0x20) ^ 0x46B)) | v1))
                            - ((v1 - 558) | 0x134u)
                            + 494LL))();
}

uint64_t sub_100523CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a6
                                                     + 8LL
                                                     * ((1115
                                                       * ((unint64_t)*(&off_10090D690 + (v6 & 0x7C8952A0))
                                                        - a1
                                                        - 12 < ((v6 + 1609690101) & 0xA00E17BC ^ 0x588uLL))) ^ v6)))( 903LL,  1201LL);
}

uint64_t sub_100523D54@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(_BYTE *)(v6 + ((v2 - 721) ^ v4) + __chkstk_darwin(v2, v3) = *(_BYTE *)(a2 + ((v2 - 721) ^ v4) + v3);
  return (*(uint64_t (**)(void))(a1 + 8LL * (((v3 - 1 != v5) | (4 * (v3 - 1 != v5))) ^ v2)))();
}

uint64_t sub_100523D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((((v6 ^ 0x7BF) - 1350) * (v7 == 0)) ^ v6))
                            - 9 * (v6 ^ 0x2A9u)
                            + 1126LL))();
}

uint64_t sub_100523DC0()
{
  int v6 = (void *)(v1 + v0 - 449);
  *(void *)(v4 + 120) = v3 + 0x70D8B5D370459CB0LL;
  *int v6 = 0x6767676767676767LL;
  v6[1] = 0x989898989E98988ALL;
  int v7 = 1755732067 * ((v5 - 192) ^ 0xDEC6BDDB);
  *(_DWORD *)(v5 - 184) = v2 - v7 + 1064655307;
  *(_DWORD *)(v5 - 192) = v7 ^ 0xCD7B82C5;
  nullsub_36(v5 - 192);
  LODWORD(STACK[0x450]) = 1731329956;
  uint64_t v8 = ((uint64_t (*)(uint64_t))STACK[0x3D0])(336LL);
  unint64_t v9 = STACK[0x420];
  *(void *)(v4 + 8) = v8;
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((((((v2 - 1190) ^ (v8 == 0)) & 1) == 0) * (((v2 - 1384) | 0x109) - 237)) ^ v2))
                            - 12LL))();
}

uint64_t sub_100523EA4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x498] = STACK[0x388] + (v6 ^ 0x1F7u) - 430;
  unint64_t v9 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8LL * (v6 ^ (804 * (v7 <= a1))));
  *(void *)(v8 + 208) = a1;
  return v9(a1, a2, 723LL, 4294967223LL, 503LL, a6, 4294966246LL);
}

uint64_t sub_100523F64@<X0>( uint64_t a1@<X0>, int a2@<W2>, char a3@<W3>, uint64_t a4@<X5>, int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  uint64_t v14 = (v10 + a6);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(v9 + (v14 & 0xF)) ^ *(_BYTE *)(v8 + (v14 & 0xF)) ^ *(_BYTE *)((v14 & 0xF) + v7 + 2) ^ ((v14 & 0xF) * a3) ^ ((*(_BYTE *)(v13 + v14) ^ v11) + ((2 * *(_BYTE *)(v13 + v14)) & 0xAE) + 20);
  return (*(uint64_t (**)(void))(a4 + 8LL * (((((a7 + 795) ^ a5) + v10 != v12) * a2) ^ a7)))();
}

uint64_t sub_100523FD0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v8 = (v4 - v2);
  __int128 v9 = *(_OWORD *)(a2 + v8 - 15);
  __int128 v10 = *(_OWORD *)(a2 + v8 - 31);
  uint64_t v11 = v7 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(a1 + 8LL * (((v2 + 32 == (((v6 - 94) | 0x42) ^ v3)) * v5) ^ v6)))();
}

uint64_t sub_100524018@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  *(void *)(v6 - 7 + (v5 - 320)) = *(void *)(a4 + (v5 - 320) - 7);
  return (*(uint64_t (**)(void))(a3 + 8LL * (((((v4 + 253) ^ a1) == 328) * a2) ^ (v4 - 193))))();
}

uint64_t sub_10052405C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6)
{
  uint64_t v15 = (v10 + v11);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(v8 + (v15 & 0xF)) ^ *(_BYTE *)(v7 + (v15 & 0xF)) ^ *(_BYTE *)((v15 & 0xF) + v6 + 2) ^ ((v15 & 0xF) * a4) ^ (((((v9 + v12) & v13) - 36) ^ (*(_BYTE *)(v14 + v15) - 118)) + ((2 * (*(_BYTE *)(v14 + v15) - 118)) & 0xEA) + 108);
  return (*(uint64_t (**)(void))(a6 + 8LL * ((((v10 + 1 + v11) < 0x150) * a5) ^ v9)))();
}

uint64_t sub_1005240D4@<X0>( int8x16_t *a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int8x16_t *a11)
{
  uint64_t v14 = (int8x16_t *)((char *)&STACK[0x690] + v12 + a4 - 0x90E6A15395EF312LL);
  *uint64_t v14 = veorq_s8(*a11, (int8x16_t)xmmword_10071E3A0);
  uint64_t v15 = v13[45] + 32LL;
  v13[46] = a1;
  v13[47] = a1;
  v13[45] = v15;
  return ((uint64_t (*)(int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8LL * (v11 ^ (4 * (v14 != a1))))
                                                                                           - (v11 | 4u)
                                                                                           + 1045LL))( a1,  19LL,  108LL,  1085LL,  a2,  a3);
}

uint64_t sub_100524150@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t a5@<X7>, unsigned __int8 *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15 = *(void *)(v14 + 8LL * (v13 - 913)) - 12LL;
  uint64_t v16 = *(void *)(v14 + 8LL * (v13 - 837)) - 12LL;
  uint64_t v17 = *(void *)(v14 + 8LL * ((v13 - 608) ^ 0x183));
  char v18 = *(_BYTE *)(v17 + (a6[14] ^ 0x86LL));
  char v19 = *(_BYTE *)(v17 + (a6[10] ^ 0xCBLL));
  uint64_t v20 = *(void *)(v14 + 8LL * ((v13 - 608) ^ 0x164)) - 8LL;
  unsigned int v21 = *(unsigned __int8 *)(v20 + (a6[1] ^ 0x1ALL));
  int v22 = (v21 >> 1) ^ (((((v21 ^ 0xE8) + (v21 & 0xD5 ^ 0x3F) + 1) ^ v21 & 0xDF) & 0xF0) >> 4) ^ 0x1F;
  int v23 = (*(_BYTE *)(v15 + (a6[3] ^ 0x54LL)) + (a6[3] ^ 0xB8)) | (((v21 ^ (v22 + (~(2 * v22) | 0x31) - 24)) ^ 0xCC) << 16);
  LOBYTE(v21) = *(_BYTE *)(v17 + (a6[6] ^ 0x2ELL));
  int v24 = (((*(unsigned __int8 *)(v16 + (a6[8] ^ 0x65LL)) + (a6[8] ^ 0x34) - 82) ^ 0xF5) << 24) | (((v19 ^ (16 * v19)) ^ 0x49) << 8) | (*(_BYTE *)(v15 + (a6[11] ^ 0xD2LL)) + (a6[11] ^ 0x3E));
  unsigned int v25 = *(_BYTE *)(v20 + (a6[13] ^ 0x5BLL)) ^ 0x3D;
  unsigned int v26 = (*(_BYTE *)(v15 + (a6[7] ^ 0x7CLL)) + (a6[7] ^ 0x90)) | ((((a6[4] ^ a1)
                                                                                  + *(unsigned __int8 *)(v16 + (a6[4] ^ 0x42LL))
                                                                                  - 82) ^ (((v13 - 1091769922) & 0x411317AC)
                                                                                         + 98)) << 24) | (((v21 ^ (16 * v21)) ^ 0x55) << 8);
  int v27 = *(unsigned __int8 *)(v20 + (a6[13] ^ 0x5BLL)) ^ 0x3D ^ (v25 >> 4) ^ (v25 >> 1);
  int v28 = (((v18 ^ (16 * v18)) ^ 0x85) << 8) | ((v27 - ((2 * v27) & 0x2E) + 23) << 16);
  int v29 = v23 | (((*(unsigned __int8 *)(v16 + (*a6 ^ 0x81LL)) + (*a6 ^ 0xD0) - 82) ^ 0x3C) << 24);
  LOBYTE(v23) = *(_BYTE *)(v20 + (a6[5] ^ 0xEDLL));
  int v30 = ((v23 ^ 0x3D) >> 4) ^ ((v23 ^ 0x3D) >> 1);
  unsigned int v31 = v24 & 0xFF00FFFF | (((*(_BYTE *)(v20 + (a6[9] ^ 0x38LL)) ^ ((*(_BYTE *)(v20 + (a6[9] ^ 0x38LL)) ^ 0x3D) >> 4) ^ ((*(_BYTE *)(v20 + (a6[9] ^ 0x38LL)) ^ 0x3D) >> 1)) ^ 0x96) << 16);
  unsigned int v32 = v29 & 0xFFFF00FF | (((*(_BYTE *)(v17 + (a6[2] ^ 0x22LL)) ^ (16
                                                                                   * *(_BYTE *)(v17 + (a6[2] ^ 0x22LL)))) ^ 0x7B) << 8);
  LODWORD(STACK[0x3E0]) = (v28 & 0xFFFFFF00 | ((((a6[12] ^ a1)
                                               + *(unsigned __int8 *)(v16 + (a6[12] ^ 0x42LL))
                                               - 82) ^ 0xE6) << 24) | ((a6[15] ^ 0xD4)
                                                                                      + *(_BYTE *)(v15
                                                                                                 + (a6[15] ^ 0x38LL)))) ^ 0x7518018B;
  LODWORD(STACK[0x388]) = v32 ^ 0xCCD9ADF0;
  LODWORD(STACK[0x280]) = (v26 & 0xFF00FFFF | ((v23 ^ a2 ^ (v30 - ((2 * v30) & 0xFC) + 126)) << 16)) ^ 0xFD65BF72;
  LODWORD(STACK[0x3C0]) = v31 ^ 0x4C8C42EE;
  return sub_100524F04(66LL, a1, a2, a3, 61LL, v17, a4, a5, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_100524158()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))STACK[0x2C8])(v0);
  return sub_100523054(v1, v2, v3, v4, v5, STACK[0x420]);
}

uint64_t sub_100524254( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41)
{
  unint64_t v43 = STACK[0x448];
  uint64_t v44 = *v41;
  STACK[0x410] = a41 + STACK[0x388];
  if (v43) {
    BOOL v45 = v44 == 0;
  }
  else {
    BOOL v45 = 1;
  }
  int v46 = v45;
  return (*(uint64_t (**)(void))(a6
                              + 8LL
                              * ((1002 * ((((((v42 - 457) ^ 0x1CB) - 20) ^ v46) & 1) == 0)) ^ (((v42 - 457) ^ 0x1CB) - 20))))();
}

uint64_t sub_1005242E8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8LL * ((849 * (*(_DWORD *)(a2 + 1424) != 158 * (v2 ^ 0x1C5) + 502974894)) ^ v2)))();
}

uint64_t sub_100524324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8LL * ((1952 * (*(_DWORD *)(v7 + 1424) != 502975368)) ^ v6)))();
}

uint64_t sub_10052434C@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * (int)(((*(unsigned __int8 *)(a2 + 236) == *(unsigned __int8 *)(v3 + 32))
                                               * (((21 * (((v2 ^ 0x2E3) - 339) ^ 0x1F7) + 2015034406) & 0x87E503D9) + 207)) ^ ((v2 ^ 0x2E3) - 339)))
                            - 8LL))();
}

uint64_t sub_1005243E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v11 = v6 + ((v7 - 311) ^ v9) - 1082;
  BOOL v13 = v8 != 101 && v11 != v10 + 200;
  return (*(uint64_t (**)(void))(a6 + 8LL * ((v13 * a5) ^ v7)))();
}

uint64_t sub_100524418@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  int v6 = (*(unsigned __int8 *)(a4 + 1128) ^ 0x98) - *(unsigned __int8 *)(v5 + 1148);
  return (*(uint64_t (**)(uint64_t))(a3
                                            + 8LL
                                            * ((745
                                              * ((v6 ^ 0xBF797FFB)
                                               + ((((v4 + 306) ^ a1) * a2) ^ 0x499EEF3C)
                                               + ((2 * v6) & 0x7EF2FFF6) != 152596193)) ^ (v4 + 306))))(1235152700LL);
}

void sub_1005244E0()
{
}

uint64_t sub_1005244E8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v4 = *(_DWORD *)(v2 + 1428);
  if (v4 == 1595468497 || v4 == 1595468493) {
    return ((uint64_t (*)(void))(*(void *)(a1
  }
                                          + 8LL
                                          * ((1112
                                            * (*(_DWORD *)(a2 + 476) == ((74 * (LODWORD(STACK[0x428]) ^ 0x1DE)) ^ 0x2BFEFADA))) ^ (LODWORD(STACK[0x428]) - 178)))
                              - 12LL))();
  STACK[0x498] = STACK[0x2B8];
  return v3();
}

uint64_t sub_100524B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8LL * ((v6 - 304) ^ (1380 * (v7 == v8)))))();
}

void sub_100524B40()
{
}

uint64_t sub_100524B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  LODWORD(STACK[0x638]) = 2006390527;
  return ((uint64_t (*)(void))(*(void *)(a6
                                        + 8LL
                                        * (((*(void *)(v7 + 120) != 0x70D8B5D370459CB0LL)
                                          * (((v6 | 0x118) ^ 0x32F) + 162 * ((v6 | 0x118) ^ 0x1DD) - 790)) ^ ((v6 | 0x118) + 283)))
                            - 8LL))();
}

void sub_100524B78(uint64_t a1)
{
  uint64_t v2 = (char *)&STACK[0x1920] + v1;
  char v3 = *(_BYTE *)a1;
  *(void *)(v2 + 17) = *(void *)(a1 + 1);
  *(_DWORD *)(v2 + 25) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v2 + 29) = *(_WORD *)(a1 + 13);
  v2[31] = *(_BYTE *)(a1 + 15);
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)uint64_t v2 = *(void *)a1;
  *((void *)v2 + 1) = v4;
  v2[16] = v3;
  JUMPOUT(0x100524BB8LL);
}

uint64_t sub_100524F04( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(v326) = v64 ^ a4;
  unint64_t v69 = v64 ^ a4 ^ v63 & 0xFFFFFFF1 ^ 0x59088C7;
  STACK[0x3D8] = v69;
  LODWORD(v69) = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a19 + v69) ^ 0xD9LL));
  unint64_t v70 = v63 & 0xFFFFFFFB ^ 0x590897E;
  STACK[0x2B8] = v70;
  HIDWORD(a17) = (v64 - 1396) | 0x480;
  uint64_t v71 = *(unsigned __int8 *)(a19 + v70);
  unsigned int v72 = ((((_DWORD)v69 << (BYTE4(a17) + 116)) ^ 0x60) - 32 * (v69 & 1) - 106) ^ v69;
  LOBYTE(v69) = *(_BYTE *)(a22 + (v71 ^ v67));
  unint64_t v73 = v63 & 0xFFFFFFF0 ^ 0x590897F;
  STACK[0x410] = v73;
  int v74 = *(unsigned __int8 *)(a19 + v73);
  unsigned __int8 v75 = (v69 + (v71 ^ 0xB7) - 82) ^ 0xE5;
  if ((v74 & 0x20) != 0) {
    int v76 = -32;
  }
  else {
    int v76 = 32;
  }
  LODWORD(STACK[0x418]) = ((v76 + v74) ^ 0x31) + *(unsigned __int8 *)(a23 + ((v76 + v74) ^ 0xDDLL));
  unint64_t v77 = v63 & 0xFFFFFFF9 ^ 0x590897E;
  STACK[0x3C8] = v77;
  int v78 = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a19 + v77) ^ 0x51LL));
  unint64_t v79 = v63 & 0xFFFFFFF3 ^ 0x590897E;
  STACK[0x2D8] = v79;
  unint64_t v80 = v63 ^ 0x590897Au;
  STACK[0x250] = v80;
  HIDWORD(v81) = v78 ^ (((16 * v78) ^ 0x60) + (~(32 * v78) | 0xFFFFFFDF) - 105) ^ 0x3F;
  LODWORD(v81) = BYTE4(v81) & 0xF8;
  unint64_t v82 = ((v81 >> 3) | ((unint64_t)v75 << 13)) ^ 0x58F620A6;
  int v83 = (v82 >> 21) | ((_DWORD)v82 << 11);
  int v329 = *(unsigned __int8 *)(a22
                            + (*(unsigned __int8 *)(a19 + v79) ^ 0xF7)
                            - 2 * ((*(unsigned __int8 *)(a19 + v79) ^ 0xF7) & 0xAEu)
                            + 174)
       - (*(unsigned __int8 *)(a19 + v79) ^ 0xF7);
  uint64_t v84 = *(unsigned __int8 *)(a19 + v80);
  unint64_t v85 = v63 & 0xFFFFFFFC ^ 0x590897B;
  STACK[0x380] = v85;
  uint64_t v86 = *(unsigned __int8 *)(a19 + v85);
  int v87 = *(unsigned __int8 *)(a22 + (v84 ^ 0xD8)) + (v84 ^ v65) - 2 * (v84 ^ v65);
  unint64_t v88 = v63 & 0xFFFFFFF7 ^ 0x590897A;
  STACK[0x390] = v88;
  unsigned int v89 = *(unsigned __int8 *)(a23 + (v86 ^ 0x57)) + (v86 ^ 0xFFFFFFBB);
  char v90 = (*(_BYTE *)(a19 + v88) ^ 0xA7) + *(_BYTE *)(a22 + (*(unsigned __int8 *)(a19 + v88) ^ 0xF6LL));
  char v91 = v90 - ((2 * v90 + 92) & 0x4E);
  unint64_t v92 = v63 & 0xFFFFFFF8 ^ 0x590897F;
  STACK[0x2E0] = v92;
  uint64_t v337 = v63 & 0xFFFFFFF2 ^ 0x590897F;
  int v93 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a19 + v337) ^ 0x12LL));
  uint64_t v332 = v63 & 0xFFFFFFFA ^ 0x590897F;
  char v94 = *(_BYTE *)(a20 + (*(unsigned __int8 *)(a19 + v332) ^ 0x9CLL));
  unsigned int v95 = v93 ^ ((((v93 ^ 0x3Du) >> 3) & 4 ^ v93 & 0xA4 | ((v93 ^ 0x3Du) >> 3) & 0xFFFFFFFB ^ (v93 ^ 0x3D) & 0x5A) >> 1);
  int v96 = ((v94 ^ 0x3D) >> 4) ^ ((v94 ^ 0x3D) >> 1);
  int v97 = (*(_BYTE *)(a23 + (*(unsigned __int8 *)(a19 + v92) ^ 5LL)) + (*(_BYTE *)(a19 + v92) ^ 0xE9)) | ((v94 ^ v67 ^ (v96 - ((2 * v96) & 0xFC) + 126)) << 16);
  uint64_t v336 = v63 & 0xFFFFFFF6 ^ 0x590897B;
  int v98 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a19 + v336) ^ v65));
  int v99 = (2 * (v98 & 8)) ^ 0x10 | v98 & 8;
  unsigned int v100 = (v98 ^ 0x3Du) >> 3;
  BOOL v101 = ((v99 + 120) & v100) == 0;
  char v102 = v99 + 20;
  char v103 = 36 - v99;
  if (v101) {
    char v103 = v102;
  }
  int v104 = v98 ^ ((((v100 + v103 - 28) ^ (v98 ^ 0x3D) & 0xF7) & 0xFE) >> 1);
  uint64_t v333 = v63 & 0xFFFFFFF4 ^ 0x590897B;
  uint64_t v334 = v63 & 0xFFFFFFFE ^ 0x590897B;
  int v105 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a19 + v334) ^ 0xCFLL));
  unsigned int v106 = v105 & 0xFFFFFFBF ^ ((v105 | 0xFFFFFFBF) + 68) ^ 0x3E;
  uint64_t v107 = *(void *)(v68 + 8LL * (v64 - 1266));
  int v108 = *(_DWORD *)(v107 + 4LL * (v95 ^ 0x5A));
  int v109 = v106 ^ (v106 >> 4) ^ (v106 >> 1);
  uint64_t v335 = v63 & 0xFFFFFFF5 ^ 0x590897A;
  char v110 = *(_BYTE *)(a21 + (*(unsigned __int8 *)(a19 + v335) ^ 0xFBLL));
  uint64_t v111 = *(void *)(v68 + 8LL * (v64 ^ 0x5AE)) - 4LL;
  LODWORD(v324) = (v110 ^ (16 * v110) ^ v66);
  int v112 = *(_DWORD *)(v111 + 4LL * (v324 ^ 0x8F));
  HIDWORD(v113) = v112 ^ 0x9295;
  LODWORD(v113) = v112 ^ 0x6200000;
  HIDWORD(v323) = v87 - 83;
  uint64_t v114 = *(void *)(v68 + 8LL * (v64 - 1311));
  int v115 = (v113 >> 16) ^ *(_DWORD *)(v114 + 4LL * ((v87 - 83) ^ 0xF9u)) ^ (16 * (v108 ^ 0xEB4F0D56)
                                                                                         + 2044105829
                                                                                         - ((32 * (v108 ^ 0xEB4F0D56)) & 0xF3AD28C0));
  unsigned int v116 = v108 ^ (v115 + 1735915887 - ((2 * v115) & 0xCEEFF2DE));
  LODWORD(v323) = v97 ^ v83;
  unsigned int v117 = v97 ^ v83 ^ 0xDD03A24B;
  HIDWORD(v330) = v64;
  uint64_t v118 = *(void *)(v68 + 8LL * (v64 ^ 0x5F2)) - 4LL;
  int v119 = *(_DWORD *)(v111 + 4LL * (v72 ^ 0x71u));
  unsigned int v120 = *(_DWORD *)(v118 + 4LL * (v117 ^ 0x33u)) ^ v116;
  HIDWORD(v113) = v119 ^ 0x9295;
  LODWORD(v113) = v119 ^ 0x6200000;
  HIDWORD(v324) = v109;
  unsigned int v121 = *(_DWORD *)(v107 + 4LL * (v109 ^ 0xBFu)) ^ 0xEB4F0D56;
  int v122 = (v113 >> 16) ^ (16 * v121 + 2044105829 - ((32 * v121) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * HIBYTE(v117));
  unsigned int v123 = *(_DWORD *)(v118 + 4LL * (HIDWORD(v322) ^ 0xB9u)) ^ v121 ^ (v122 + 1735915887 - ((2 * v122) & 0xCEEFF2DE));
  unsigned int v124 = *(_DWORD *)(v107 + 4LL * BYTE2(v117)) ^ 0xEB4F0D56;
  uint64_t v331 = v63 & 0xFFFFFFFD ^ 0x590897A;
  int v125 = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a19 + v331) ^ 0x26LL)) ^ 0x2E;
  LODWORD(v322) = v125 ^ (16 * v125);
  int v126 = *(_DWORD *)(v111 + 4LL * (v322 ^ 0xFBu));
  HIDWORD(v113) = v126 ^ 0x9295;
  LODWORD(v113) = v126 ^ 0x6200000;
  HIDWORD(v321) = (v91 - 43);
  int v127 = (v113 >> 16) ^ *(_DWORD *)(v114 + 4LL * (HIDWORD(v321) ^ 0x40u)) ^ (16 * v124
                                                                           + 2044105829
                                                                           - ((32 * v124) & 0xF3AD28C0));
  unsigned int v128 = *(_DWORD *)(v118 + 4LL * (LODWORD(STACK[0x418]) ^ 0xEBu)) ^ v124 ^ (v127
                                                                                            + 1735915887
                                                                                            - ((2 * v127) & 0xCEEFF2DE));
  unsigned int v129 = *(_DWORD *)(v107 + 4LL * (v104 ^ 0x41u)) ^ 0xEB4F0D56;
  int v130 = *(_DWORD *)(v111 + 4LL * (BYTE1(v83) ^ 0x31u));
  HIDWORD(v113) = v130 ^ 0x9295;
  LODWORD(v113) = v130 ^ 0x6200000;
  LODWORD(v321) = v329 - 83;
  int v131 = (v113 >> 16) ^ *(_DWORD *)(v114 + 4LL * ((v329 - 83) ^ 0xF7u)) ^ (16 * v129
                                                                                          + 2044105829
                                                                                          - ((32 * v129) & 0xF3AD28C0));
  unint64_t v325 = __PAIR64__(v72, v89);
  unsigned int v132 = *(_DWORD *)(v118 + 4LL * (v89 ^ 0x33u)) ^ v129 ^ (v131 + 1735915887 - ((2 * v131) & 0xCEEFF2DE));
  int v133 = *(_DWORD *)(v111 + 4LL * (BYTE1(v128) ^ 0xF4u));
  HIDWORD(v113) = v133 ^ 0x9295;
  LODWORD(v113) = v133 ^ 0x6200000;
  unsigned int v134 = *(_DWORD *)(v107 + 4LL * (BYTE2(v132) ^ 0xBBu)) ^ 0xEB4F0D56;
  unsigned __int8 v135 = BYTE1(v123) ^ 0xAD;
  unsigned int v136 = v134 ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v120) ^ 0xBC)) ^ *(_DWORD *)(v118
                                                                            + 4LL * (v123 ^ 0xDBu)) ^ (16 * v134 + 2044105829 - ((32 * v134) & 0xF3AD28C0)) ^ (v113 >> 16);
  int v137 = *(_DWORD *)(v107 + 4LL * (BYTE2(v120) ^ 0xA3u));
  int v138 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v132 ^ 0x22E) >> 8));
  HIDWORD(v113) = v138 ^ 0x9295;
  LODWORD(v113) = v138 ^ 0x6200000;
  int v139 = (16 * (v137 ^ 0xEB4F0D56) + 2044105829 - ((32 * (v137 ^ 0xEB4F0D56)) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * ((v123 ^ 0xF15ADDB) >> 24)) ^ (v113 >> 16);
  unsigned int v140 = *(_DWORD *)(v118 + 4LL * (v128 ^ 0x80u)) ^ v137 ^ (v139
                                                                           + 1735915887
                                                                           - ((2 * v139) & 0xCEEFF2DE));
  unsigned int v141 = *(_DWORD *)(v107 + 4LL * (BYTE2(v123) ^ 0xD6u)) ^ 0xEB4F0D56;
  int v142 = *(_DWORD *)(v111 + 4LL * (BYTE1(v120) ^ 0xEBu));
  HIDWORD(v113) = v142 ^ 0x9295;
  LODWORD(v113) = v142 ^ 0x6200000;
  unsigned int v143 = (16 * v141 + 2044105829 - ((32 * v141) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v128) ^ 0x19));
  int v144 = *(_DWORD *)(v111 + 4LL * v135);
  unsigned int v145 = *(_DWORD *)(v118 + 4LL * (v132 ^ 0x2Eu)) ^ v141 ^ (v113 >> 16) ^ (v143
                                                                                          + 1735915887
                                                                                          - ((2 * v143) & 0xCEEFF2DE));
  HIDWORD(v113) = v144 ^ 0x9295;
  LODWORD(v113) = v144 ^ 0x6200000;
  int v146 = *(_DWORD *)(v107 + 4LL * (BYTE2(v128) ^ 0x32u));
  int v147 = (v113 >> 16) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v132) ^ 0xBD)) ^ (16 * (v146 ^ 0xEB4F0D56)
                                                                         + 2044105829
                                                                         - ((32 * (v146 ^ 0xEB4F0D56)) & 0xF3AD28C0));
  unsigned int v148 = v146 ^ *(_DWORD *)(v118 + 4LL * (v120 ^ 0xF6u)) ^ 0x9A86DB92 ^ (v147
                                                                                        + 1735915887
                                                                                        - ((2 * v147) & 0xCEEFF2DE));
  unsigned int v149 = v148
       - ((2 * v148) & 0x5F186BF6)
       + 797718011
       - ((2 * (v148 - ((2 * v148) & 0x5F186BF6) + 797718011)) & 0x393F108E)
       + 480217159;
  int v150 = *(_DWORD *)(v107 + 4LL * (BYTE2(v149) ^ 0x5Cu));
  BYTE2(v148) = BYTE2(v145) ^ 0xEB;
  int v151 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v145 ^ 0xDFF9) >> 8));
  unsigned int v152 = (16 * (v150 ^ 0xEB4F0D56) + 2044105829 - ((32 * (v150 ^ 0xEB4F0D56)) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v136) ^ 0xF1)) ^ (((v151 ^ 0x6209295u) >> (v136 & 0x10) >> (v136 & 0x10 ^ 0x10)) + ((v151 << 16) ^ 0x92950000));
  unsigned int v153 = *(_DWORD *)(v118 + 4LL * (v140 ^ 0x8Fu)) ^ v150 ^ (v152
                                                                           + 1735915887
                                                                           - ((2 * v152) & 0xCEEFF2DE));
  LOWORD(v152) = v136 ^ 0x2D4F;
  unsigned int v154 = *(_DWORD *)(v107 + 4LL * ((v136 ^ 0x182D2D4F) >> 16)) ^ 0xEB4F0D56;
  int v155 = *(_DWORD *)(v111 + 4LL * (BYTE1(v149) ^ 0x1Bu));
  HIDWORD(v113) = v155 ^ 0x9295;
  LODWORD(v113) = v155 ^ 0x6200000;
  int v156 = (16 * v154 + 2044105829 - ((32 * v154) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v140) ^ 0xA0)) ^ (v113 >> 16);
  unsigned int v157 = *(_DWORD *)(v118 + 4LL * (v145 ^ 0xF9u)) ^ v154 ^ (v156
                                                                           + 1735915887
                                                                           - ((2 * v156) & 0xCEEFF2DE));
  int v158 = *(_DWORD *)(v114 + 4LL * (HIBYTE(v145) ^ 5));
  HIDWORD(v113) = v158 ^ 0x65;
  LODWORD(v113) = v158 ^ 0x79D69400;
  unsigned int v159 = *(_DWORD *)(v107 + 4LL * (BYTE2(v140) ^ 0x7Au)) ^ 0xEB4F0D56;
  unsigned int v160 = (((v113 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v159) ^ (((v113 >> 10) ^ 0x25EB099C) >> 22);
  int v161 = *(_DWORD *)(v111 + 4LL * BYTE1(v152));
  HIDWORD(v113) = v161 ^ 0x9295;
  LODWORD(v113) = v161 ^ 0x6200000;
  int v162 = *(_DWORD *)(v111 + 4LL * (BYTE1(v140) ^ 0xC0u));
  int v163 = *(_DWORD *)(v118 + 4LL * (v149 ^ 0x74u)) ^ v159 ^ (v113 >> 16);
  HIDWORD(v113) = v162 ^ 0x9295;
  LODWORD(v113) = v162 ^ 0x6200000;
  unsigned int v164 = *(_DWORD *)(v107 + 4LL * BYTE2(v148)) ^ 0xEB4F0D56;
  int v165 = (v113 >> 16) ^ (16 * v164 + 2044105829 - ((32 * v164) & 0xF3AD28C0)) ^ *(_DWORD *)(v114
                                                                                          + 4LL * (HIBYTE(v149) ^ 0xF5));
  unsigned int v166 = *(_DWORD *)(v118 + 4LL * (v152 ^ 0x33u)) ^ v164 ^ (v165
                                                                           + 1735915887
                                                                           - ((2 * v165) & 0xCEEFF2DE));
  unsigned int v167 = v163 ^ (v160 + 1735915887 - ((2 * v160) & 0xCEEFF2DE));
  unsigned int v168 = *(_DWORD *)(v107 + 4LL * (BYTE2(v166) ^ 0x62u)) ^ 0xEB4F0D56;
  unsigned __int8 v169 = BYTE2(v167) ^ 0xF7;
  int v170 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v167 ^ 0xE4A6) >> 8));
  unsigned int v171 = (16 * v168 + 2044105829 - ((32 * v168) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v153) ^ 0x36));
  HIDWORD(v113) = v170 ^ 0x9295;
  LODWORD(v113) = v170 ^ 0x6200000;
  int v172 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v166 ^ 0x2957) >> 8));
  unsigned int v173 = *(_DWORD *)(v118 + 4LL * (v157 ^ 0x68u)) ^ v168 ^ (v113 >> 16) ^ (v171
                                                                                          + 1735915887
                                                                                          - ((2 * v171) & 0xCEEFF2DE));
  HIDWORD(v113) = v172 ^ 0x9295;
  LODWORD(v113) = v172 ^ 0x6200000;
  unsigned int v174 = *(_DWORD *)(v107 + 4LL * (BYTE2(v153) ^ 0x14u)) ^ 0xEB4F0D56;
  int v175 = (16 * v174 + 2044105829 - ((32 * v174) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v157) ^ 0xCE)) ^ (v113 >> 16);
  unsigned int v176 = *(_DWORD *)(v118 + 4LL * (v167 ^ 0x15u)) ^ v174 ^ (v175
                                                                           + 1735915887
                                                                           - ((2 * v175) & 0xCEEFF2DE));
  unsigned int v177 = *(_DWORD *)(v107 + 4LL * (BYTE2(v157) ^ 0x60u)) ^ 0xEB4F0D56;
  int v178 = *(_DWORD *)(v111 + 4LL * (BYTE1(v153) ^ 0x96u));
  HIDWORD(v113) = v178 ^ 0x9295;
  LODWORD(v113) = v178 ^ 0x6200000;
  int v179 = (16 * v177 + 2044105829 - ((32 * v177) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * ((v167 ^ 0xF1F7E4A6) >> 24)) ^ (v113 >> 16);
  unsigned int v180 = *(_DWORD *)(v118 + 4LL * (v166 ^ 0x57u)) ^ v177 ^ (v179
                                                                           + 1735915887
                                                                           - ((2 * v179) & 0xCEEFF2DE));
  if ((v157 & 0x1000) != 0) {
    int v181 = -16;
  }
  else {
    int v181 = 16;
  }
  unsigned int v182 = *(_DWORD *)(v107 + 4LL * v169) ^ 0xEB4F0D56;
  unsigned int v183 = *(_DWORD *)(v111 + 4LL * (((BYTE1(v157) ^ 0xC) + v181) ^ 0x83u));
  unsigned int v184 = *(_DWORD *)(v114 + 4LL * (HIBYTE(v166) ^ 0xA1)) ^ HIWORD(v183) ^ (16 * v182
                                                                         + 2044105829
                                                                         - ((32 * v182) & 0xF3AD28C0));
  unsigned int v185 = *(_DWORD *)(v118 + 4LL * (v153 ^ 0x35u)) ^ v182 ^ (((v183 << 16) ^ 0x92950620 ^ v184)
                                                                           + 1735915887
                                                                           - 2
                                                                           * (((v183 << 16) ^ 0x92950620 ^ v184) & 0x6777F97F ^ v184 & 0x10));
  unsigned int v186 = v185 ^ 0xEFBC3B44;
  unsigned int v187 = *(_DWORD *)(v107 + 4LL * ((v185 ^ 0xEFBC3B44) >> 16)) ^ 0xEB4F0D56;
  int v188 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v180 ^ 0x8D48) >> 8));
  HIDWORD(v189) = v188 ^ 0x9295;
  LODWORD(v189) = v188 ^ 0x6200000;
  int v190 = (v189 >> 16) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v173) ^ 0xCC)) ^ (16 * v187
                                                                         + 2044105829
                                                                         - ((32 * v187) & 0xF3AD28C0));
  unsigned int v191 = *(_DWORD *)(v118 + 4LL * (v176 ^ 0xA9u)) ^ v187 ^ (v190
                                                                           + 1735915887
                                                                           - ((2 * v190) & 0xCEEFF2DE));
  LOWORD(v187) = v173 ^ 0xD583;
  unsigned int v192 = *(_DWORD *)(v107 + 4LL * (((v173 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0xEB4F0D56;
  int v193 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v185 ^ 0x3B44) >> 8));
  HIDWORD(v189) = v193 ^ 0x9295;
  LODWORD(v189) = v193 ^ 0x6200000;
  int v194 = (v189 >> 16) ^ *(_DWORD *)(v114 + 4LL * HIBYTE(v176)) ^ (16 * v192 + 2044105829 - ((32 * v192) & 0xF3AD28C0));
  unsigned int v195 = *(_DWORD *)(v118 + 4LL * (v180 ^ 0x48u)) ^ v192 ^ (v194
                                                                           + 1735915887
                                                                           - ((2 * v194) & 0xCEEFF2DE));
  unsigned int v196 = *(_DWORD *)(v107 + 4LL * ((v176 ^ 0xE93411A9) >> 16)) ^ 0xEB4F0D56;
  int v197 = *(_DWORD *)(v111 + 4LL * BYTE1(v187));
  HIDWORD(v189) = v197 ^ 0x9295;
  LODWORD(v189) = v197 ^ 0x6200000;
  int v198 = (16 * v196 + 2044105829 - ((32 * v196) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * ((v180 ^ 0x807D8D48) >> 24)) ^ (v189 >> 16);
  int v199 = *(_DWORD *)(v111 + 4LL * (BYTE1(v176) ^ 0x82u));
  int v200 = *(_DWORD *)(v118 + 4LL * (v185 ^ 0x77u)) ^ v196;
  HIDWORD(v189) = v199 ^ 0x9295;
  LODWORD(v189) = v199 ^ 0x6200000;
  unsigned int v201 = *(_DWORD *)(v107 + 4LL * (BYTE2(v180) ^ 0xBEu)) ^ 0xEB4F0D56;
  int v202 = (v189 >> 16) ^ *(_DWORD *)(v114 + 4LL * HIBYTE(v186)) ^ (16 * v201 + 2044105829 - ((32 * v201) & 0xF3AD28C0));
  unsigned int v203 = *(_DWORD *)(v118 + 4LL * v187) ^ v201 ^ (v202 + 1735915887 - ((2 * v202) & 0xCEEFF2DE));
  unsigned int v204 = v200 ^ (v198 + 1735915887 - ((2 * v198) & 0xCEEFF2DE));
  unsigned int v205 = *(_DWORD *)(v107 + 4LL * ((v203 ^ 0x950DA39D) >> 16)) ^ 0xEB4F0D56;
  unsigned int v206 = (16 * v205 + 2044105829 - ((32 * v205) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * ((v191 ^ 0x11521BCA) >> 24));
  int v207 = *(_DWORD *)(v111 + 4LL * (BYTE1(v204) ^ 0x89u));
  HIDWORD(v189) = v207 ^ 0x9295;
  LODWORD(v189) = v207 ^ 0x6200000;
  BYTE1(v207) = BYTE1(v195) ^ 0xD1;
  int v208 = *(_DWORD *)(v107 + 4LL * ((v191 ^ 0x11521BCA) >> 16));
  int v209 = v205 ^ *(_DWORD *)(v118 + 4LL * (v195 ^ 0x88u)) ^ (v189 >> 16) ^ (v206
                                                                                          + 1735915887
                                                                                          - ((2 * v206) & 0xCEEFF2DE));
  int v210 = (v209 ^ 0x71C9D6C4) - 2 * ((v209 ^ 0x71C9D6C4) & 0x2D70576B ^ v209 & 0x20);
  int v211 = *(_DWORD *)(v111 + 4LL * (BYTE1(v203) ^ 0x30u));
  HIDWORD(v189) = v211 ^ 0x9295;
  LODWORD(v189) = v211 ^ 0x6200000;
  int v212 = (16 * (v208 ^ 0xEB4F0D56) + 2044105829 - ((32 * (v208 ^ 0xEB4F0D56)) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v195) ^ 0xDF)) ^ (v189 >> 16);
  v204 ^= 0x7A851A70u;
  unsigned int v213 = *(_DWORD *)(v118 + 4LL * (v204 ^ 0x33u)) ^ v208 ^ (v212
                                                                           + 1735915887
                                                                           - ((2 * v212) & 0xCEEFF2DE));
  unsigned int v214 = *(_DWORD *)(v107 + 4LL * (BYTE2(v195) ^ 0xA7u)) ^ 0xEB4F0D56;
  int v215 = *(_DWORD *)(v111 + 4LL * (BYTE1(v191) ^ 0x88u));
  HIDWORD(v189) = v215 ^ 0x9295;
  LODWORD(v189) = v215 ^ 0x6200000;
  int v216 = (16 * v214 + 2044105829 - ((32 * v214) & 0xF3AD28C0)) ^ *(_DWORD *)(v114
                                                                           + 4LL
                                                                           * ((HIBYTE(v204) ^ -HIBYTE(v204) ^ ((HIBYTE(v204) ^ 0xFFFFFF16) + 234))
                                                                            + 233)) ^ (v189 >> 16);
  unsigned int v217 = *(_DWORD *)(v118 + 4LL * (v203 ^ 0x9Du)) ^ v214 ^ (v216
                                                                           + 1735915887
                                                                           - ((2 * v216) & 0xCEEFF2DE));
  int v218 = *(_DWORD *)(v107 + 4LL * BYTE2(v204));
  int v219 = *(_DWORD *)(v111 + 4LL * BYTE1(v207));
  HIDWORD(v189) = v219 ^ 0x9295;
  LODWORD(v189) = v219 ^ 0x6200000;
  int v220 = (v189 >> 16) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v203) ^ 0x7C)) ^ (16 * (v218 ^ 0xEB4F0D56)
                                                                         + 2044105829
                                                                         - ((32 * (v218 ^ 0xEB4F0D56)) & 0xF3AD28C0));
  unsigned int v221 = *(_DWORD *)(v118 + 4LL * (v191 ^ 0xF9u)) ^ v218 ^ (v220
                                                                           + 1735915887
                                                                           - ((2 * v220) & 0xCEEFF2DE));
  unsigned int v222 = HIBYTE(v221) ^ 0xFFFFFFFE;
  int v223 = *(_DWORD *)(v107 + 4LL * (BYTE2(v221) ^ 0xC8u));
  int v224 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v217 ^ 0xDE69) >> 8));
  HIDWORD(v189) = v224 ^ 0x9295;
  LODWORD(v189) = v224 ^ 0x6200000;
  int v225 = v210 - 1385146549;
  int v226 = (v189 >> 16) ^ (16 * (v223 ^ 0xEB4F0D56) + 2044105829 - ((32 * (v223 ^ 0xEB4F0D56)) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (((v210 - 1385146549) >> 24) ^ 0xC4));
  int v227 = *(_DWORD *)(v111 + 4LL * (BYTE1(v221) ^ 0x32u));
  HIDWORD(v189) = v227 ^ 0x9295;
  LODWORD(v189) = v227 ^ 0x6200000;
  unsigned int v228 = *(_DWORD *)(v118 + 4LL * (v213 ^ 0x85u)) ^ v223 ^ (v226
                                                                           + 1735915887
                                                                           - ((2 * v226) & 0xCEEFF2DE));
  unsigned int v229 = *(_DWORD *)(v107 + 4LL * (BYTE2(v225) ^ 0x1Au)) ^ 0xEB4F0D56;
  unsigned int v230 = v229 ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v213) ^ 0x36)) ^ *(_DWORD *)(v118
                                                                            + 4LL * (v217 ^ 0x69u)) ^ ((v189 >> 16) + 1735915887 - ((2 * (v189 >> 16)) & 0xCEEFF2DE)) ^ (16 * v229 + 2044105829 - ((32 * v229) & 0xF3AD28C0));
  unsigned int v231 = *(_DWORD *)(v107 + 4LL * (BYTE2(v213) ^ 0xB5u)) ^ 0xEB4F0D56;
  int v232 = *(_DWORD *)(v111 + 4LL * (BYTE1(v225) ^ 0x3Cu));
  HIDWORD(v189) = v232 ^ 0x9295;
  LODWORD(v189) = v232 ^ 0x6200000;
  int v233 = (16 * v231 + 2044105829 - ((32 * v231) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * ((v217 ^ 0x5FEEDE69) >> 24)) ^ (v189 >> 16);
  unsigned int v234 = *(_DWORD *)(v118
                   + 4LL
  unsigned int v235 = *(_DWORD *)(v107 + 4LL * (BYTE2(v217) ^ 0x2Du)) ^ 0xEB4F0D56;
  int v236 = *(_DWORD *)(v111 + 4LL * (BYTE1(v213) ^ 0xD2u));
  HIDWORD(v189) = v236 ^ 0x9295;
  LODWORD(v189) = v236 ^ 0x6200000;
  int v237 = (v189 >> 16) ^ (16 * v235 + 2044105829 - ((32 * v235) & 0xF3AD28C0)) ^ *(_DWORD *)(v114
                                                                                          + 4LL
                                                                                          * (v222 & 0x90 ^ 0x86 ^ (~(2 * (v222 | 0x90)) + (v222 | 0x90))));
  unsigned int v238 = *(_DWORD *)(v118 + 4LL * (v225 ^ 0x10u)) ^ v235 ^ (v237
                                                                           + 1735915887
                                                                           - ((2 * v237) & 0xCEEFF2DE));
  unsigned int v239 = *(_DWORD *)(v107 + 4LL * ((v238 ^ 0x59A5F4B7) >> 16)) ^ 0xEB4F0D56;
  int v240 = *(_DWORD *)(v111 + 4LL * ((unsigned __int16)(v234 ^ 0x872B) >> 8));
  HIDWORD(v189) = v240 ^ 0x9295;
  LODWORD(v189) = v240 ^ 0x6200000;
  int v241 = (16 * v239 + 2044105829 - ((32 * v239) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v228) ^ 0x39)) ^ (v189 >> 16);
  unsigned int v242 = *(_DWORD *)(v118 + 4LL * (v230 ^ 0xEEu)) ^ v239 ^ (v241
                                                                           + 1735915887
                                                                           - ((2 * v241) & 0xCEEFF2DE));
  unsigned int v243 = *(_DWORD *)(v107 + 4LL * (BYTE2(v228) ^ 0x6Au)) ^ 0xEB4F0D56;
  int v244 = *(_DWORD *)(v111 + 4LL * (BYTE1(v238) ^ 0x67u));
  HIDWORD(v189) = v244 ^ 0x9295;
  LODWORD(v189) = v244 ^ 0x6200000;
  int v245 = v243 ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v230) ^ 0xD6)) ^ *(_DWORD *)(v118
                                                                            + 4LL * (v234 ^ 0x18u)) ^ (16 * v243 + 2044105829 - ((32 * v243) & 0xF3AD28C0)) ^ ((v189 >> 16) + 1735915887 - ((2 * (v189 >> 16)) & 0xCEEFF2DE));
  unsigned int v246 = *(_DWORD *)(v107 + 4LL * (BYTE2(v230) ^ 0x56u)) ^ 0xEB4F0D56;
  int v247 = *(_DWORD *)(v111 + 4LL * (BYTE1(v228) ^ 0xB6u));
  HIDWORD(v189) = v247 ^ 0x9295;
  LODWORD(v189) = v247 ^ 0x6200000;
  int v248 = v189 >> 16;
  HIDWORD(v189) = *(_DWORD *)(v118 + 4LL * (v238 ^ 0xB7u)) ^ 0x7BFF5DD5;
  LODWORD(v189) = HIDWORD(v189);
  int v249 = (v189 >> 21) ^ __ROR4__( *(_DWORD *)(v114 + 4LL * ((v234 ^ 0x911B872B) >> 24)) ^ v246 ^ 0x6D41727E ^ (16 * v246 + 2044105829 - ((32 * v246) & 0xF3AD28C0)) ^ v248,  21);
  unsigned int v250 = *(_DWORD *)(v107 + 4LL * (BYTE2(v234) ^ 0xD8u)) ^ 0xEB4F0D56;
  int v251 = *(_DWORD *)(v111 + 4LL * (BYTE1(v230) ^ 0xE4u));
  HIDWORD(v189) = v251 ^ 0x9295;
  LODWORD(v189) = v251 ^ 0x6200000;
  int v252 = (v189 >> 16) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v238) ^ 0xB0)) ^ (16 * v250
                                                                         + 2044105829
                                                                         - ((32 * v250) & 0xF3AD28C0));
  HIDWORD(v189) = v249 ^ 0x549BF9D9;
  LODWORD(v189) = v249 ^ 0x549BF9D9;
  int v253 = v189 >> 11;
  int v254 = *(_DWORD *)(v111 + 4LL * (BYTE1(v253) ^ 0xA0u));
  HIDWORD(v189) = v254 ^ 0x9295;
  LODWORD(v189) = v254 ^ 0x6200000;
  unsigned int v255 = *(_DWORD *)(v118 + 4LL * (v228 ^ 0xF0u)) ^ v250 ^ (v252
                                                                           + 1735915887
                                                                           - ((2 * v252) & 0xCEEFF2DE));
  unsigned int v256 = *(_DWORD *)(v107 + 4LL * (BYTE2(v255) ^ 0x72u)) ^ 0xEB4F0D56;
  int v257 = (v189 >> 16) ^ *(_DWORD *)(v114 + 4LL * ((v242 ^ 0xD4B73D47) >> 24)) ^ (16 * v256
                                                                               + 2044105829
                                                                               - ((32 * v256) & 0xF3AD28C0));
  unsigned int v258 = *(_DWORD *)(v118 + 4LL * (v245 ^ 0xEAu)) ^ v256 ^ (v257
                                                                           + 1735915887
                                                                           - ((2 * v257) & 0xCEEFF2DE));
  unsigned int v259 = *(_DWORD *)(v107 + 4LL * (BYTE2(v242) ^ 0x74u)) ^ 0xEB4F0D56;
  int v260 = *(_DWORD *)(v111 + 4LL * (BYTE1(v255) ^ 0x66u));
  HIDWORD(v189) = v260 ^ 0x9295;
  LODWORD(v189) = v260 ^ 0x6200000;
  unsigned int v261 = v245 ^ 0x177CD9D9;
  int v262 = *(_DWORD *)(v114 + 4LL * HIBYTE(v261)) ^ 0x6D41727E ^ v259 ^ (16 * v259
                                                                     + 2044105829
                                                                     - ((32 * v259) & 0xF3AD28C0)) ^ (v189 >> 16);
  int v263 = *(_DWORD *)(v118 + 4LL * (v253 ^ 0xEFu));
  int v264 = v262 & 0x200 | 0x73E94C2B;
  unsigned int v265 = ((v263 ^ 0x7BFF5DD5) - 1944669227 + v264) ^ v262 & 0xFFFFFDFF;
  unsigned int v266 = *(_DWORD *)(v107 + 4LL * BYTE2(v261)) ^ 0xEB4F0D56;
  unsigned int v267 = (16 * v266 + 2044105829 - ((32 * v266) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * ((v253 ^ 0x1EA133EFu) >> 24));
  int v268 = *(_DWORD *)(v111 + 4LL * (BYTE1(v242) ^ 0xAEu));
  HIDWORD(v269) = v268 ^ 0x9295;
  LODWORD(v269) = v268 ^ 0x6200000;
  unsigned int v270 = *(_DWORD *)(v118 + 4LL * (v255 ^ 0xDu)) ^ v266 ^ (v269 >> 16) ^ (v267
                                                                                         + 1735915887
                                                                                         - ((2 * v267) & 0xCEEFF2DE));
  int v271 = *(_DWORD *)(v111 + 4LL * BYTE1(v261));
  HIDWORD(v269) = v271 ^ 0x9295;
  LODWORD(v269) = v271 ^ 0x6200000;
  unsigned int v272 = *(_DWORD *)(v107 + 4LL * (BYTE2(v253) ^ 0x62u)) ^ 0xEB4F0D56;
  int v273 = (16 * v272 + 2044105829 - ((32 * v272) & 0xF3AD28C0)) ^ *(_DWORD *)(v114 + 4LL * (HIBYTE(v255) ^ 0x32)) ^ (v269 >> 16);
  unsigned int v274 = *(_DWORD *)(v118 + 4LL * (v242 ^ 0x74u)) ^ v272 ^ (v273
                                                                           + 1735915887
                                                                           - ((2 * v273) & 0xCEEFF2DE));
  uint64_t v275 = (uint64_t)*(&off_10090D690 + (HIDWORD(v330) ^ 0x545));
  unsigned __int8 v276 = v265 ^ 0x9F;
  uint64_t v277 = (uint64_t)*(&off_10090D690 + HIDWORD(v330) - 1364);
  int v278 = v270 ^ 0xBC37B;
  v279 = (char *)*(&off_10090D690 + HIDWORD(v330) - 1257) - 12;
  unsigned int v280 = *(_DWORD *)(v277 + 4LL * (BYTE2(v258) ^ 0x99u)) ^ 0xA14E5647;
  unsigned int v281 = ((((v265 ^ 0xF137909F) >> 24) ^ 0x9FD52929)
        - 1529643805
        + *(_DWORD *)(v275 + 4LL * (((v265 ^ 0xF137909F) >> 24) ^ 0xB4))) ^ ((v270 ^ 0x7B)
                                                                           + 1148938895
                                                                           + ((2
                                                                             * (((v270 ^ 0x7B) + 16) & 0x1F ^ (v270 ^ 0xBC37B | 0x7FFFFFFE))) ^ 0x89032003)) ^ v280 ^ (v280 >> 2) ^ *(_DWORD *)&v279[4 * (v270 ^ 0x79)] ^ (v280 >> 4);
  v282 = (char *)*(&off_10090D690 + HIDWORD(v330) - 1231) - 12;
  unsigned int v283 = *(_DWORD *)&v282[4 * ((unsigned __int16)(v274 ^ 0x7C9C) >> 8)] ^ 0x9E275509;
  int v284 = v283 ^ (1515496080 * v283);
  unsigned int v285 = HIBYTE(v270);
  int v286 = *(_DWORD *)(v275 + 4LL * (((v258 ^ 0x6792B6A6) >> 24) ^ 0xB4));
  HIDWORD(v327) = *(_DWORD *)(v275 + 4LL * (v285 ^ 0xB4));
  HIDWORD(v328) = (v274 ^ 0x250E7C9C) >> 24;
  LODWORD(v330) = *(_DWORD *)(v275 + 4LL * (HIDWORD(v328) ^ 0xB4u));
  int v287 = *(_DWORD *)(v277 + 4LL * (BYTE2(v274) ^ 5u));
  int v288 = *(_DWORD *)(v277 + 4LL * ((v265 ^ 0xF137909F) >> 16));
  LODWORD(v328) = *(_DWORD *)(v277 + 4LL * BYTE2(v278));
  int v289 = *(_DWORD *)&v282[4 * BYTE1(v278)];
  HIDWORD(v326) = *(_DWORD *)&v282[4 * ((unsigned __int16)(v258 ^ 0xB6A6) >> 8)];
  int v290 = *(_DWORD *)&v282[4 * (BYTE1(v265) ^ 0x5E)];
  int v291 = *(_DWORD *)&v279[4 * (v265 ^ 0x9D)];
  int v292 = *(_DWORD *)&v279[4 * (v274 ^ 0x9E)];
  LODWORD(v327) = *(_DWORD *)&v279[4 * (v258 ^ 0xA4)];
  unsigned int v293 = ((v281 ^ v284) - 43663526 - ((2 * (v281 ^ v284)) & 0xFACB7EB4)) ^ LODWORD(STACK[0x280]);
  uint64_t v294 = (uint64_t)*(&off_10090D690 + (HIDWORD(v330) ^ 0x5E4));
  *(_BYTE *)(a18 + v332) = *(_BYTE *)(v294 + (((v293 ^ 0x5244C6B3) >> 16) ^ 0x5ELL)) ^ ((v293 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v293 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v293 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0x8F) + 62) ^ 0xB9;
  unsigned int v295 = v287 ^ 0xA14E5647 ^ ((((v258 ^ 0x6792B6A6) >> 24) ^ 0x9FD52929) - 1529643805 + v286) ^ ((v287 ^ 0xA14E5647) >> 2) ^ ((v287 ^ 0xA14E5647) >> 4) ^ v289 ^ 0x9E275509 ^ v291 ^ (1515496080 * (v289 ^ 0x9E275509)) ^ (~((2 * v276 - 102555424) & 0x8903203C) + v276 + 1148938895);
  unsigned int v296 = (v295 - 858149557 - ((2 * v295) & 0x99B35A96)) ^ LODWORD(STACK[0x388]);
  unsigned int v297 = v296 ^ 0x22A932A6;
  uint64_t v298 = (BYTE1(v297) | 0x88) ^ (v297 >> 8) & 0x88;
  uint64_t v299 = (uint64_t)*(&off_10090D690 + HIDWORD(v330) - 1288);
  *(_BYTE *)(a18 + v331) = (((unsigned __int16)(v296 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v296 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((*(_BYTE *)(v299 + (v298 ^ 0x14)) ^ 0x68) - ((2 * *(_BYTE *)(v299 + (v298 ^ 0x14))) & 0x20) - 112);
  v300 = (char *)*(&off_10090D690 + HIDWORD(v330) - 1409) - 4;
  LODWORD(v298) = v300[HIBYTE(v293) ^ 0xEFLL];
  HIDWORD(v269) = v298 ^ 0x15;
  LODWORD(v269) = (v298 ^ 0xC0) << 24;
  *(_BYTE *)(a18 + STACK[0x2B8]) = (v269 >> 29) ^ 0x83;
  unsigned int v301 = v288 ^ 0xA14E5647 ^ ((v285 ^ 0x9FD52929) - 1529643805 + HIDWORD(v327)) ^ ((v288 ^ 0xA14E5647) >> 2) ^ ((v288 ^ 0xA14E5647) >> 4);
  int v302 = v301 & 0x1000000 | 0xF098DF;
  if ((v301 & 0x1000000 & ~v292) != 0) {
    int v302 = 31535550 - v302;
  }
  unsigned int v303 = v301 & 0xFEFFFFFF ^ (1515496080 * (HIDWORD(v326) ^ 0x9E275509)) ^ ((v292 ^ ((v274 ^ 0x9C)
                                                                                   + 1148938895
                                                                                   + ((2
                                                                                     * (((v274 ^ 0x9C)
                                                                                       + 16) & 0x1F ^ (v274 | 0x7FFFFFFE))) ^ 0x89032003)))
                                                                          - 15767775
                                                                          + v302);
  unsigned int v304 = HIDWORD(v326) ^ 0x9E275509 ^ LODWORD(STACK[0x3C0]) ^ (v303 + 1284260521 + (~(2 * v303) | 0x66E77AAF));
  uint64_t v305 = BYTE4(v326) ^ 9u ^ LOBYTE(STACK[0x3C0]) ^ (v303 - 87 + (~(2 * v303) | 0xAF)) ^ 0x28LL;
  v306 = (char *)*(&off_10090D690 + (HIDWORD(v330) ^ 0x5C0)) - 12;
  *(_BYTE *)(a18 + v333) = v306[v305] & 0xFB ^ 0x28 ^ ((v306[v305] | 0xFB) + 24);
  LODWORD(v305) = v300[HIBYTE(v296) ^ 0xF9LL];
  HIDWORD(v307) = v305 ^ 0x15;
  LODWORD(v307) = (v305 ^ 0xC0) << 24;
  unint64_t v308 = STACK[0x250];
  *(_BYTE *)(a18 + STACK[0x250]) = (v307 >> 29) ^ 0xFB;
  *(_BYTE *)(a18 + v334) = BYTE2(v297) ^ 0x61 ^ ((BYTE2(v297) ^ 0x61) - ((2 * (BYTE2(v297) ^ 0x61) - 18) & 0x8E) + 62) ^ 0xB8 ^ *(_BYTE *)(v294 + (BYTE2(v297) ^ 0xB5LL));
  int v309 = (HIDWORD(v328) ^ 0x9FD52929) - 1529643805 + v330;
  int v310 = v328 ^ 0xA14E5647 ^ ((v328 ^ 0xA14E5647) >> 4) ^ ((v328 ^ 0xA14E5647) >> 2);
  int v311 = v310 & 0x80000 | 0x6BF6B338;
  if ((v310 & 0x80000 & v309) != 0) {
    int v311 = -672307600 - v311;
  }
  unsigned int v312 = v310 & 0xFFF7FFFF ^ (v309 - 1811329848 + v311) ^ (1515496080 * (v290 ^ 0x9E275509));
  int v313 = v327 ^ ((v258 ^ 0xA6) + 2096205936) ^ (v312 - ((2 * v312) & 0x8F13B43C) - 947267042);
  unsigned int v314 = v290 ^ LODWORD(STACK[0x3E0]) ^ (v313 + 1964507531 - ((2 * v313) & 0xEA300376) + 48);
  *(_BYTE *)(a18 + v337) = *(_BYTE *)(v294 + (BYTE2(v314) ^ 0xBC) + ((v314 >> 15) & 0x1A8 ^ 0xFFFFFED7) + 213) ^ BYTE2(v314) ^ ((BYTE2(v314) ^ 0xBC) - ((2 * (BYTE2(v314) ^ 0xBC) - 18) & 0x8F) + 62) ^ 0x3A;
  int v315 = v300[HIBYTE(v314) ^ 0x64LL];
  HIDWORD(v316) = v315 ^ 0x15;
  LODWORD(v316) = (v315 ^ 0xC0) << 24;
  *(_BYTE *)(a18 + STACK[0x2D8]) = (v316 >> 29) ^ 0x50;
  *(_BYTE *)(a18 + v336) = ((v304 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v304 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                               - ((2 * (((v304 ^ 0xCFDDD967) >> 16) ^ 0x94) - 18) & 0x8E)
                                                               + 62) ^ *(_BYTE *)(v294
                                                                                + (((v304 ^ 0xCFDDD967) >> 16) ^ 0x40LL)) ^ 0xC;
  unsigned int v317 = (((v314 ^ 0xC112C726) >> 4) & 0xF0 | ((unsigned __int16)(v314 ^ 0xC726) >> 12)) ^ 0xE6;
  *(_BYTE *)(a18 + STACK[0x3D8]) = *(_BYTE *)(v299 + (((v317 >> 4) & 0xFFFFFF0F | (16 * (v317 & 0xF))) ^ 0xAELL)) ^ (((v317 >> 4) & 0xF | (16 * (v317 & 0xF))) - ((2 * ((v317 >> 4) & 0xF | (16 * (v317 & 0xF)))) & 0xD0) + 104) ^ 0x2B;
  *(_BYTE *)(a18 + v335) = (((unsigned __int16)(v304 ^ 0xD967) >> 8) - (((v304 ^ 0xCFDDD967) >> 7) & 0xD0) + 104) ^ 0xDB ^ *(_BYTE *)(v299 + (((unsigned __int16)(v304 ^ 0xD967) >> 8) ^ 0xA0LL));
  *(_BYTE *)(a18 + STACK[0x3C8]) = (((unsigned __int16)(v293 ^ 0xC6B3) >> 8) - (((v293 ^ 0x5244C6B3) >> 7) & 0xD0) + 104) ^ *(_BYTE *)(v299 + (((unsigned __int16)(v293 ^ 0xC6B3) >> 8) ^ 0x75LL)) ^ 0x80;
  *(_BYTE *)(a18 + STACK[0x380]) = v306[v296 ^ 0x95LL] ^ 0x96;
  *(_BYTE *)(a18 + STACK[0x2E0]) = v306[v293 ^ 0x7FLL] ^ 7;
  *(_BYTE *)(a18 + STACK[0x410]) = v306[v314 ^ 0x89LL] ^ 0xA8;
  int v318 = v300[HIBYTE(v304) ^ 0x49LL];
  HIDWORD(v316) = v318 ^ 0x15;
  LODWORD(v316) = (v318 ^ 0xC0) << 24;
  *(_BYTE *)(a18 + STACK[0x390]) = (v316 >> 29) ^ 0x2E;
  BOOL v319 = (((_DWORD)v308 + 93358458 - ((2 * (_DWORD)v308 + 32) & 0xB2112F4) + 16) ^ 0x5908970u) < 0x150;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x420] + 8LL * (((2 * v319) | (16 * v319)) ^ HIDWORD(v330))))( 142LL,  1515496080LL,  21LL,  STACK[0x420],  v308,  1515496080LL,  v306,  v299,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  v321,  v322,  v323,  v324,  __PAIR64__(v95, v104),  v325,  v326,  v327,  v328,  v330,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  v331,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           v332,
           v333,
           a62,
           a63);
}

uint64_t sub_100526D2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x388]) = (a29 | ((HIDWORD(a26) ^ 0xC) << 24) | ((BYTE4(a27) ^ 0x92) << 16) | ((a25 ^ 0xEF) << (a30 ^ 0xB1))) ^ 0x54597E2B;
  LODWORD(STACK[0x280]) = a26 ^ 0xFAE4CBD9;
  LODWORD(STACK[0x3C0]) = (((_DWORD)a27 << 8) | (HIDWORD(a24) << 24) | ((a28 ^ 0x38) << 16) | HIDWORD(a25)) ^ 0x65526817;
  LODWORD(STACK[0x3E0]) = ((((HIDWORD(a28) ^ 0xF1) << 16) + ((a24 ^ 0x1A) << 24)) | LODWORD(STACK[0x418]) | ((BYTE4(a29) ^ v63) << 8)) ^ 0x6689A82A;
  return sub_100524F04( a1,  a2,  a3,  1085,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_100526E30( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18 = a18 - 56;
  unint64_t v19 = STACK[0x580];
  STACK[0x618] -= 32LL;
  char v20 = ((a18 + 63) ^ 0x3D) + 93;
  *(_BYTE *)(v19 + ((v18 - 905) ^ 0xAB100F3D) + 1425011037) = *(_BYTE *)(a14 + ((v18 - 905) ^ 0xAB100F3D) + 1425011037) ^ *((_BYTE *)*(&off_10090D690 + v18 - 979) + (v20 & 0xF) - 12) ^ *((_BYTE *)*(&off_10090D690 + (v18 ^ 0x40E)) + (v20 & 0xF) - 2) ^ (99 * ((((v18 + 119) ^ 0x3D) + 93) & 0xF)) ^ *((_BYTE *)*(&off_10090D690 + v18 - 1007) + (v20 & 0xF) - 9) ^ 0x98;
  return (*(uint64_t (**)(void))(a4 + 8LL * ((a18 - 56) ^ 0xC8)))();
}

void sub_100526F30()
{
}

uint64_t sub_100526F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  STACK[0x498] -= 16LL;
}

uint64_t sub_100526F74@<X0>( uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _BYTE *a9)
{
  int v10 = a2 + 468;
  uint64_t v11 = (_BYTE *)STACK[0x4B8];
  unsigned int v12 = ((v10 + 404) ^ 0x7BE632EF) - 1;
  a9[12] = (HIBYTE(v12) ^ 0x7B) - ((2 * (HIBYTE(v12) ^ 0x7B)) & 0x30) - 104;
  a9[13] = (v9 ^ BYTE2(v12)) - ((v12 >> 15) & 0x30) - 104;
  a9[14] = (BYTE1(v12) ^ 0x31) - 2 * ((BYTE1(v12) ^ 0x31) & 0x1A ^ BYTE1(v12) & 2) - 104;
  a9[15] = (((v10 - 108) ^ 0xEF) - 1) ^ 0x19;
  v11[16] ^= *a9 ^ 0x98;
  v11[17] ^= a9[1] ^ 0x98;
  v11[18] ^= a9[2] ^ 0x98;
  v11[19] ^= a9[3] ^ 0x98;
  v11[20] ^= a9[4] ^ 0x98;
  v11[21] ^= a9[5] ^ 0x98;
  v11[22] ^= a9[6] ^ 0x98;
  v11[23] ^= a9[7] ^ 0x98;
  v11[24] ^= a9[8] ^ 0x98;
  v11[25] ^= a9[9] ^ 0x98;
  v11[26] ^= a9[10] ^ 0x98;
  v11[27] ^= a9[11] ^ 0x98;
  v11[28] ^= a9[12] ^ 0x98;
  v11[29] ^= a9[13] ^ 0x98;
  v11[30] ^= a9[14] ^ 0x98;
  v11[31] ^= a9[15] ^ 0x98;
  return (*(uint64_t (**)(void))(a1 + 8LL * (v10 + 789)))();
}

void sub_10052718C()
{
}

uint64_t sub_100527194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(void))(*(void *)(a4
                                        + 8LL
                                        * (((8 * (LODWORD(STACK[0x450]) == 1731329620)) | (16
                                                                                         * (LODWORD(STACK[0x450]) == 1731329620))) ^ v4 ^ 0x6E5))
                            - ((3 * ((((v4 ^ 0x6E5) - 1417) | 0x1D8) ^ 0xD0u)) ^ 0x31ALL)))();
}

uint64_t sub_10052720C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(void))(*(void *)(a4
                                        + 8LL
                                        * ((112
                                          * (*(unsigned __int8 *)(v7
                                                                + v4
                                                                + (((v5 - 792) | v8) ^ (a2 - 1213))
                                                                + 33 * (v5 ^ v6)) == 152)) ^ v5))
                            - 4LL))();
}

void sub_10052725C()
{
}

uint64_t sub_100527264( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
  LODWORD(STACK[0x450]) = 1731329620;
  unint64_t v38 = STACK[0x4B8];
  STACK[0x598] = 335LL;
  *(_BYTE *)(v38 + 335) = ((a37 + 15) ^ 0xBA) * (a37 + (v37 ^ 0xFA));
  return (*(uint64_t (**)(void))(a4 + 8LL * ((87 * (STACK[0x598] == 0)) ^ v37 ^ 0x7CA)))();
}

void sub_100527778()
{
}

uint64_t sub_100527780()
{
  uint64_t v2 = ((uint64_t (*)(void))STACK[0x2C8])();
  unint64_t v3 = STACK[0x420];
  LODWORD(STACK[0x638]) = v1;
  return ((uint64_t (*)(uint64_t))(*(void *)(v3
                                                      + 8LL
                                                      * ((672
                                                        * (v1 == (v0 ^ 0x5FA)
                                                               - 2006430421
                                                               + ((v0 + 1130919871) & 0xBC9785FA)
                                                               - 948)) ^ v0))
                                          - 12LL))(v2);
}

uint64_t sub_1005277E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = STACK[0x398];
  unint64_t v8 = STACK[0x3F8];
  unint64_t v10 = STACK[0x248];
  STACK[0x3E0] = STACK[0x248] + 2353;
  STACK[0x3D8] = v8 + 49;
  STACK[0x3D0] = v10 + 2333;
  STACK[0x3C8] = v8 + 29;
  STACK[0x3C0] = v10 + 2313;
  STACK[0x390] = v8 + 9;
  return v9(a1, a2, a3, a4, v7);
}

uint64_t sub_100527824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6
                                        + 8LL
                                        * (((*(void *)(v7 + 120) != 0x70D8B5D370459CB0LL)
                                          * ((v6 ^ 0x32F) + 162 * (v6 ^ 0x1DD) - 790)) ^ (v6 + 283)))
                            - 8LL))();
}

uint64_t sub_100527834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8LL * ((79 * ((v6 & 1) == ((v7 + 394) ^ 0x364))) ^ (v7 + 1104))))();
}

uint64_t sub_100527864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = (LODWORD(STACK[0x5BC]) - 1731329620);
  *(void *)(v7 + 224) = v9;
  return ((uint64_t (*)(uint64_t))(*(void *)(a6
                                                      + 8LL
                                                      * ((44 * ((_DWORD)v9 == 334 * (v6 ^ 0x1D8) - 668)) ^ (v6 + 194)))
                                          - 4LL))(v8);
}

uint64_t sub_100527D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, int a3@<W8>)
{
  uint64_t v8 = v4 - 1;
  *(void *)(v7 + 224) = v8;
  *(_BYTE *)(a1 + __chkstk_darwin(v7, v8) = ((v3 - 123) ^ v6) * (v3 - 106);
  return ((uint64_t (*)(void))(*(void *)(a2 + 8LL * (((*(void *)(v7 + 224) == 0LL) * v5) ^ a3))
}

void sub_100527D84()
{
}

uint64_t sub_100527DF4@<X0>(int a1@<W8>)
{
  int v3 = a1 ^ 0x69B;
  uint64_t v4 = ((uint64_t (*)(uint64_t))STACK[0x2C8])(v1 - 0x70D8B5D370459CB0LL);
  unint64_t v5 = STACK[0x420];
  STACK[0x498] -= 16LL;
  return ((uint64_t (*)(uint64_t))(*(void *)(v5 + 8LL * ((1311 * (v2 == -2006430421)) ^ (v3 - 893)))
                                          - ((v3 - 862) | 0xCAu)
                                          + 462LL))(v4);
}

uint64_t sub_100527E6C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44)
{
  int v47 = 3804331 * ((((v46 - 192) | 0xA5C8480) - ((v46 - 192) & 0xA5C8480)) ^ 0xF0C277D6);
  *(_DWORD *)(v46 - 152) = v47 + 1427280025;
  *(_DWORD *)(v46 - 144) = v44 - v47 + 1249;
  v45[7] = a34;
  unint64_t v48 = STACK[0x3F8];
  v45[3] = a16;
  v45[4] = 0LL;
  *BOOL v45 = 0LL;
  v45[1] = a44;
  v45[2] = v48;
  uint64_t v49 = ((uint64_t (*)(uint64_t))*(&off_10090D690 + v44 - 196))(v46 - 192);
  unint64_t v50 = STACK[0x420];
  int v51 = *(_DWORD *)(v46 - 148);
  LODWORD(STACK[0x63C]) = v51;
  return ((uint64_t (*)(uint64_t))(*(void *)(v50
                                                      + 8LL
                                                      * (((v51 == ((v44 + 1421911821) & 0xAB3F59DB) - 2006430895)
                                                        * (((v44 - 407387414) & 0x18483DFE) - 20)) ^ v44))
                                          - 12LL))(v49);
}

void sub_100527F6C()
{
}

void sub_100527FF0()
{
}

void sub_1005280A8()
{
  LODWORD(STACK[0x630]) = v0;
  JUMPOUT(0x100528024LL);
}

uint64_t sub_1005280E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x410] = v6;
  int v11 = (v8 - 470) | 0x150;
  int v12 = STACK[0x5E0];
  *(_DWORD *)(*(void *)(v10 + 432) + ((LODWORD(STACK[0x5E0]) + v9) & 0xFFFFFFFC)) = v7;
  int v13 = v12 + v11 - 336;
  LODWORD(STACK[0x5E0]) = v13;
  return ((uint64_t (*)(void))(*(void *)(a6
                                        + 8LL
                                        * ((1122 * (v9 + v13 + ((v11 + 342260218) & 0xEB9984B7) - 6 < 0x40)) ^ v11))
                            - 4LL))();
}

uint64_t sub_100529870@<X0>(uint64_t a1@<X5>, int a2@<W7>, uint64_t a3@<X8>)
{
  int v9 = v7 + v5;
  int v10 = *(_DWORD *)(a3 + 4LL * (v9 - 8)) ^ *(_DWORD *)(a3 + 4LL * (v9 - 3));
  int v11 = v10 + v8 - (a2 & (2 * v10));
  int v12 = *(_DWORD *)(a3 + 4LL * (v9 - 16)) ^ *(_DWORD *)(a3 + 4LL * (v9 - 14));
  HIDWORD(v13) = v12 ^ (v3 + 956 + v6) ^ v11;
  LODWORD(v13) = v12 ^ ~v11;
  *(_DWORD *)(a3 + 4LL * (v4 + v7)) = (v13 >> 31) + v8 - (a2 & (2 * (v13 >> 31)));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((v4 + 1 + v7) > 0x4F) | v3)) - 4LL))();
}

uint64_t sub_1005298F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * v6) - 12LL))();
}

void sub_100529A04()
{
}

uint64_t sub_100529A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL
}

void sub_100529AD4()
{
}

uint64_t sub_100529AEC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((53 * ((a2 + 1 + v7) > 0x3B)) ^ v6)) - 12LL))();
}

uint64_t sub_100529BB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
}

void sub_100529C74()
{
  LODWORD(STACK[0x518]) = v0;
  LODWORD(STACK[0x534]) = v4;
  LODWORD(STACK[0x504]) = v1;
  LODWORD(STACK[0x51C]) = v3;
  LODWORD(STACK[0x58C]) = v2;
  uint64_t v10 = *(void *)(v9 + 416);
  int v11 = *(_DWORD *)(v10 - 0x24207EE97761D744LL);
  LODWORD(STACK[0x5E0]) = v8 + 80;
  *(_DWORD *)(v10 - 0x24207EE97761D744LL) = (v11 ^ v7)
                                          + (v2 ^ v7)
                                          + (((v5 - 525) | 0x1C8) ^ (v7 + 454))
                                          - (v6 & (2 * ((v11 ^ v7) + (v2 ^ v7))));
  JUMPOUT(0x100529CF0LL);
}

uint64_t sub_100529DD0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  uint64_t v59 = *(void *)(v58 + 136);
  int v60 = *(unsigned __int8 *)(v59 - 0x24207EE97761D73CLL) ^ 0xAB;
  if (v60 == 2) {
    return ((uint64_t (*)(void))(*(void *)(a6
  }
                                          + 8LL
                                          * ((1203
                                            * (*(_DWORD *)(v59 - 0x24207EE97761D740LL) != ((LODWORD(STACK[0x428]) - 345) ^ 0x258AC8FC))) ^ (LODWORD(STACK[0x428]) - 144)))
                              - 8LL))();
  int v61 = STACK[0x428];
  if (v60 == 1) {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6
  }
                                                                                            + 8LL
                                                                                            * ((170
                                                                                              * (*(_DWORD *)(v59 - 0x24207EE97761D740LL) == ((LODWORD(STACK[0x428]) - 158) ^ 0x258AC941))) ^ (LODWORD(STACK[0x428]) + 1189)))
                                                                                - 4LL))( a1,  2873348091LL,  118LL,  407860898LL,  3887106555LL);
  unint64_t v63 = STACK[0x398];
  *(void *)(v58 + 280) = 91LL;
  *(_BYTE *)(v59 - 0x24207EE97761D741LL) = (a58 ^ 0xBA) * (a58 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(void *)(a6 + 8LL * ((1433 * (*(void *)(v58 + 280) == (((v61 ^ 0x2AC) + 734412392) & 0xD439BFFB) - 474LL)) ^ v61 ^ 0x2AC))
                                                                                       - 4LL))( a1,  2873348091LL,  118LL,  407860898LL,  v63);
}

void sub_10052A70C()
{
}

uint64_t sub_10052A714()
{
  return ((uint64_t (*)(void))STACK[0x440])();
}

uint64_t sub_10052A74C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, int a39, int a40)
{
  *(_DWORD *)(a5 + 52) = (a40 ^ (((LODWORD(STACK[0x634]) ^ v42) + (v40 ^ v42)) % 0x2710))
                       + 471527808
                       + ((2 * (((LODWORD(STACK[0x634]) ^ v42) + (v40 ^ v42)) % 0x2710)) & 0x5D7A);
  int v43 = STACK[0x63C];
  LODWORD(STACK[0x588]) = STACK[0x63C];
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((1634 * (v43 == v42)) ^ (v41 - 315))) - 8LL))();
}

uint64_t sub_10052A7CC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, int a39)
{
  *a5 = STACK[0x530];
  a5[85] = STACK[0x5D4];
  a5[86] = STACK[0x514];
  a5[87] = STACK[0x494];
  a5[88] = STACK[0x42C];
  return (*(uint64_t (**)(void))(a6
                              + 8LL
                              * (((*(void *)(v39 + 160) == 0LL) * (((a39 ^ 0x377) - 491) ^ 0x1BF)) ^ ((a39 ^ 0x145) - 27))))();
}

uint64_t sub_10052A838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  STACK[0x498] -= 1616LL;
  LODWORD(STACK[0x588]) = a7 - 214;
  return (*(uint64_t (**)(void))(a6
                              + 8LL * (((*(void *)(v8 + 160) == 0LL) * (((v7 ^ 0x232) - 491) ^ 0x1BF)) ^ (v7 - 27))))();
}

uint64_t sub_10052A888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6
                              + 8LL * (((*(void *)(v7 + 160) == 0LL) * (((v6 ^ 0x232) - 491) ^ 0x1BF)) ^ (v6 - 27))))();
}

uint64_t sub_10052A8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  STACK[0x378] = v7;
  LODWORD(STACK[0x478]) = a7 - 46;
}

uint64_t sub_10052AA28()
{
  return (*(uint64_t (**)(void))(v0 + 8LL * (((v1 - 1903865541 >= ((v2 - 208) | 0xD0u) - 472) * (v2 - 360)) ^ (v2 - 308))))();
}

uint64_t sub_10052AA64(uint64_t a1)
{
  LODWORD(STACK[0x478]) = v2 - 46;
  unint64_t v4 = STACK[0x4C8];
  unint64_t v5 = LODWORD(STACK[0x46C]);
  STACK[0x548] = v5;
  BOOL v6 = v5 == ((v3 + 198) | 0x41) + ((v3 + 1994590757) & 0x891CF66F) - 1360;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v1 + 8LL * ((v6 | (16 * v6)) ^ (v3 + 589))))(a1, v4);
}

void sub_10052AC7C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10052AD4C@<X0>(int a1@<W8>)
{
  uint64_t v5 = LODWORD(STACK[0x478]);
  unint64_t v6 = 1374699841 * ((2 * (v1 & 0xBCA4019836DA1E8LL) - v1 - 0xBCA4019836DA1EELL) ^ 0xFA3921EA1166461BLL);
  *(_DWORD *)(v4 - 176) = (v2 - 504207504) ^ (1374699841 * ((2 * (v1 & 0x836DA1E8) - v1 + 2089967122) ^ 0x1166461B));
  *(void *)(v3 + 24) = v5 + v6;
  *(void *)(v3 + 40) = 2006390513 - v6;
  *(_DWORD *)(v4 - 188) = a1 - 1374699841 * ((2 * (v1 & 0x836DA1E8) - v1 + 2089967122) ^ 0x1166461B);
  *(_DWORD *)(v4 - 184) = 1374699841 * ((2 * (v1 & 0x836DA1E8) - v1 + 2089967122) ^ 0x1166461B);
  *(_DWORD *)(v4 - 192) = (a1 | 0x12) ^ (1374699841 * ((2 * (v1 & 0x836DA1E8) - v1 + 2089967122) ^ 0x1166461B));
  *(_DWORD *)(v4 - 160) = 1374699841 * ((2 * (v1 & 0x836DA1E8) - v1 + 2089967122) ^ 0x1166461B) + a1 + 52;
  uint64_t v7 = ((uint64_t (*)(uint64_t))STACK[0x370])(v4 - 192);
  unint64_t v8 = STACK[0x420];
  STACK[0x378] = 0LL;
  uint64_t v9 = (uint64_t (*)(uint64_t))(*(void *)(v8 + 8LL * *(int *)(v4 - 180)) - 12LL);
  LODWORD(STACK[0x2EC]) = 1426171139;
  return v9(v7);
}

uint64_t sub_10052AE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x378] = 0LL;
  int v6 = STACK[0x428];
  int v7 = *(_DWORD *)(STACK[0x398] + 56);
  *(_DWORD *)(STACK[0x398] + 56) = v7 + 1;
  unint64_t v8 = (uint64_t (*)(void))(*(void *)(a6 + 8LL * ((880 * ((v7 - 1637603452) < 0xFFFFFFFA)) ^ (v6 - 372)))
                         - ((v6 - 472) | 0x64u)
                         + 90LL);
  LODWORD(STACK[0x2EC]) = 1426171139;
  return v8();
}

void sub_10052AE90()
{
  *(_DWORD *)(v2 - 192) = (v0 + 426522915) ^ (460628867 * ((v2 - 768153055 - 2 * ((v2 - 192) & 0xD236EAE1)) ^ 0x9EA0689C));
  sub_100556F64((_DWORD *)(v2 - 192));
  *(void *)(v1 + 24) = STACK[0x260];
  *(_BYTE *)(v1 + 12) = 99 * ((((v2 + 64) | 0xAB) - ((v2 + 64) & 0xAB)) ^ 0x70) + 27;
  *(_DWORD *)(v2 - 184) = v0 - 1755732067 * ((((v2 - 192) | 0x7D1B5DAB) - ((v2 - 192) & 0x7D1B5DAB)) ^ 0xA3DDE070) + 131;
  *(void *)uint64_t v1 = STACK[0x268];
  ((void (*)(uint64_t))STACK[0x258])(v2 - 192);
  STACK[0x378] = 0LL;
  LODWORD(STACK[0x2EC]) = 1426171139;
  JUMPOUT(0x10052AF68LL);
}

void sub_10052AFBC(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = a2 - 338;
  v2(*(unsigned int *)STACK[0x2D0], a1, ((a2 - 338) ^ 0xAAFE5B06) + LODWORD(STACK[0x2EC]));
  *(_DWORD *)(v3 - 192) = (v4 + 426522510) ^ (460628867
                                            * (((((v3 - 192) | 0x64BC5B96) ^ 0xFFFFFFFE) - (~(v3 - 192) | 0x9B43A469)) ^ 0xD7D52614));
  sub_100556F64((_DWORD *)(v3 - 192));
  JUMPOUT(0x10052B044LL);
}

uint64_t sub_10052B08C(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0xD350F8B8) - a1 - 1772649564) ^ 0x253EFE21);
  int v2 = *(_DWORD *)(a1 + 4) + v1;
  int v3 = *(_DWORD *)(a1 + 8) ^ v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x13AAEC8A5CF1D15CLL);
  unsigned int v6 = v4 - 499656757;
  BOOL v5 = v4 - 499656757 < 0;
  unsigned int v7 = 499656757 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_10090D690 + (v2 ^ 0x2EB))
                              + 8
                              * ((((v3 - 1375346159) >= 4 * (unint64_t)v8)
                                * (((v2 - 681) | 0x353) - 770)) ^ v2)
                              - 12))();
}

uint64_t sub_10052B158()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL * ((196 * (((v1 == 1375346159) ^ (v2 + 98)) & 1)) ^ v2))
}

uint64_t sub_10052B19C(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1
                                                               + 8LL
                                                               * (((((v2 ^ 0x218) - 92) | 0x26) + 290) ^ ((v2 ^ 0x218) + 524) ^ v2 ^ 0x218))
                                                   - 12LL))( a1,  2227144630LL);
}

uint64_t sub_10052B21C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  *(_BYTE *)(*(void *)(a1 + 24) + (a3 + a4)) = ((a2 ^ v6) >> v7)
  return (*(uint64_t (**)(void))(v4 + 8LL * (v8 | (4 * (a3 - 1 != v5)) | (8 * (a3 - 1 != v5)))))();
}

uint64_t sub_10052B27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5
                                                               + 8LL
                                                               * (((v6 == 24) * ((((a5 - 92) | 0x26) + 290) ^ (a5 + 524))) ^ a5))
                                                   - 12LL))( a1,  a2);
}

uint64_t sub_10052B2B8(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v7 = v5 - 856367094 < 1859888690 && v5 - 856367094 >= v4;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8LL * (((a3 + 91) * v7) ^ a3))
                                                   - ((a3 + 578) ^ 0x2BDLL)))( a1,  2227144630LL);
}

uint64_t sub_10052B30C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  return sub_10052B21C(a1, *(_DWORD *)(*v4 + 4LL * (v5 - 568772825 + ((a2 + 545) | 0x21))), v3, a3);
}

_DWORD *sub_10052B344(_DWORD *result)
{
  *uint64_t result = v1;
  return result;
}

void sub_10052B34C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (460628867 * (((a1 | 0x6C5795E7) - a1 + (a1 & 0x93A86A18)) ^ 0x20C1179A));
  __asm { BR              X15 }

uint64_t sub_10052B400(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (((*(_DWORD *)(*(void *)(a1 + 16) + v4) == v2)
                                          * (((v1 - 653583810) & 0x26F4E5C1) - 81)) ^ (v1 + 1532)))
                            - 12LL))();
}

uint64_t sub_10052B448@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = v2
     - 1759421093
  v5[0] = v1;
  v5[1] = a1;
  uint64_t result = sub_100517570((uint64_t)v5);
  _DWORD *v3 = 999313514 - *v3;
  return result;
}

void sub_10052B5E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8)
     + 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  __asm { BR              X10 }

uint64_t sub_10052B6B8@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, int a5, int a6, unsigned int a7)
{
  unsigned int v10 = 1178560073 * ((&a3 & 0x7F041AE0 | ~(&a3 | 0x7F041AE0)) ^ 0xB2EDE55F);
  a3 = v8;
  a4 = &STACK[0x52155BFDA38671FD];
  a5 = v10 ^ 0x49FCA545;
  a6 = v10 + v7 - 930;
  a7 = -1222334525 - v10;
  uint64_t v11 = ((uint64_t (*)(uint64_t *))(*(void *)(a1 + 8LL * (v7 - 1136)) - 12LL))(&a3);
  return ((uint64_t (*)(uint64_t))(*(void *)(v9
                                                      + 8LL
                                                      * ((76 * (*(_DWORD *)(v8 - 0x2185BF99DEDD7434LL) == -2006430421)) | v7))
                                          - 4LL))(v11);
}

void sub_10052B788(_DWORD *a1@<X8>)
{
  unsigned int v3 = (*(_DWORD *)(v1 + 16) ^ v2) - ((2 * (*(_DWORD *)(v1 + 16) ^ v2) - 1091897898) & 0xF7CC6302) + 1532734572;
  _BYTE *v4 = (HIBYTE(v3) ^ 0x7B) - ((2 * (HIBYTE(v3) ^ 0x7B)) & 0x30) - 104;
  v4[1] = (BYTE2(v3) ^ 0xE6) - ((v3 >> 15) & 0x30) - 104;
  v4[2] = (BYTE1(v3) ^ 0x31) - 2 * ((BYTE1(v3) ^ 0x31) & 0x1A ^ BYTE1(v3) & 2) - 104;
  v4[3] = v3 ^ 0x19;
  *(_DWORD *)(v1 + 12) = *a1;
}

uint64_t sub_10052B864(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (qword_1009BDB28 - qword_1009BDB38) ^ (unint64_t)&v8;
  qword_1009BDB38 = 1045096823 * v2 + 0xF4347460D903F27LL;
  qword_1009BDB28 = 1045096823 * (v2 ^ 0xFEEA6317167EC3D1LL);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = 119 * ((119 * v2 + 39) ^ 0xD1 ^ qword_1009BDB28);
  if (v3 == 1731329623) {
    __asm { BR              X17 }
  }

  if (v3 == 1731329630)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X16 }
  }

  return 4294925278LL;
}

void sub_10052BF7C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 628203409 * ((a1 & 0x7EE22050 | ~(a1 | 0x7EE22050)) ^ 0x395D39C);
  uint64_t v2 = *(void *)(a1 + 8);
  ((void (*)(char *, void (*)()))*(&off_10090D690 + (v1 ^ 0x5FA)))( (char *)*(&off_10090D690 + v1 - 1277) - 8,  sub_10055759C);
  __asm { BR              X10 }

uint64_t sub_10052C030()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * ((58 * (*(void *)(*(void *)(v1 + 8LL * (v2 - 1187)) - 4LL) == 0LL)) ^ v2))
                            - ((4 * v2) ^ 0x1148u)
                            + 1304LL))();
}

  ;
}

uint64_t sub_10052C078@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8LL * (a1 ^ 0x5B3)))(v1);
}

uint64_t sub_10052C098(uint64_t a1)
{
  int v1 = 1759421093 * ((2 * (a1 & 0x6BD6573D) - a1 - 1809209150) ^ 0x27541896);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = *(_DWORD *)(a1 + 12) - v1 - 647934162;
  unsigned int v4 = v3 + (*(_DWORD *)(*(void *)a1 - 0x24207EE97761D758LL) ^ 0x716F945F);
  unsigned int v5 = v4 - ((2 * v4) & 0xE2DF28BE) + 1903137887;
  *(_DWORD *)(*(void *)a1 - 0x24207EE97761D758LL) = v5;
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + v2 - 684)
                                        + 8 * ((((v5 ^ 0x716F945F) >= v3) * (v2 - 742)) ^ v2)
                                        - 12)
                            - 12LL))();
}

void sub_10052C160(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x24207EE97761D75CLL) = (*(_DWORD *)(a1 - 0x24207EE97761D75CLL) ^ 0x259ADE43)
                                         + 630906435
                                         - ((((*(_DWORD *)(a1 - 0x24207EE97761D75CLL) ^ 0x259ADE43) << ((2 * ((v1 + 32) ^ 0xA5)) ^ 7))
                                           + 2) & 0x4B35BC86)
                                         + 1;
}

void sub_10052C1BC(int a1)
{
  __asm { BR              X8 }

uint64_t sub_10052C230( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = (1178560073
       * ((2061852057 - (&a13 ^ 0xA21B5928 | 0x7AE55D99) + (&a13 ^ 0xA21B5928 | 0x851AA266)) ^ 0x1517FB0E)) ^ 0x650810FC;
  uint64_t v15 = sub_100556E04(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8LL * ((1406 * (a14 == -2006430421)) ^ 0x151u)))(v15);
}

uint64_t sub_10052C2DC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, int a15)
{
  a13 = &STACK[0x8C0F0A4F49AC02A];
  a15 = v18
  sub_100519248((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                         + 8LL
                                                                                         * ((1642
                                                                                           * (a14 == ((((v18 - 292029331) & 0x6607FF7F) - v16 + 401) ^ (v15 + 670)))) ^ v18)))( v19,  v20,  v21,  v22,  v23,  v24);
}

uint64_t sub_10052C388( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, unsigned int a16)
{
  int v21 = 1734042137 * ((&a13 + 583966989 - 2 * ((unint64_t)&a13 & 0x22CEA10D)) ^ 0x7E006240);
  a16 = v21 ^ ((v16 ^ 0xFBBBE57D) + 617521048 + ((2 * v16) & 0xF777CAFA));
  a14 = v19 - v21 + 463;
  a13 = a10;
  uint64_t v22 = ((uint64_t (*)(uint64_t *))(*(void *)(v18 + 8LL * (v19 ^ 0x2BD)) - 4LL))(&a13);
  return ((uint64_t (*)(uint64_t))(*(void *)(v20
                                                      + 8LL
}

uint64_t sub_10052C470( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unsigned int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v21 = 3804331 * (((&a13 | 0x26569924) - (&a13 & 0x26569924)) ^ 0xDCC86A72);
  a16 = a10;
  a17 = &STACK[0x5BFD90C18C6562C2];
  a18 = (v19 + 2138962622) ^ v21;
  a14 = -1677788500 - v21;
  a15 = v21 ^ 0xAEC324F7;
  uint64_t v22 = sub_100556BC0((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(void *)(v20
                                                      + 8LL
                                                      * ((1590 * (a13 == v18 + ((v19 - 657) | 0x100) - 337)) ^ v19))
                                          - 8LL))(v22);
}

uint64_t sub_10052C534()
{
  unint64_t v13 = &STACK[0x3703560E774B8087];
  uint64_t v14 = v9;
  unsigned int v11 = (v3 - 59) ^ (1374699841 * (&v11 ^ 0x6DF41809));
  (*(void (**)(unsigned int *))(v2 + 8LL * (v3 - 663)))(&v11);
  unint64_t v13 = v9;
  unsigned int v11 = v3
      + (((&v11 | 0x90F48624) - &v11 + (&v11 & 0x6F0B79D8)) ^ 0x6A6A7572) * v5
      + 613;
  sub_1005171C4((uint64_t)&v11);
  if (v12 == v1 + (v3 ^ 0x3B3) - 337) {
    unsigned int v6 = v10;
  }
  else {
    unsigned int v6 = v12;
  }
  unsigned int v12 = v3 + ((2 * (&v11 & 0x4855FEB0) - &v11 - 1213595313) ^ 0xBD5E0F60) * v4 - 169;
  unint64_t v13 = v9;
  v0(&v11);
  unsigned int v12 = (v3 ^ 0x3B3) + (&v11 ^ 0xAF40E2F) * v4 + 232;
  unint64_t v13 = v8;
  v0(&v11);
  return v6 ^ v1;
}

void sub_10052C6A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48) + 3804331 * (((a1 | 0x6BF12641) - (a1 | 0x940ED9BE) - 1810966082) ^ 0x916FD517);
  __asm { BR              X10 }

uint64_t sub_10052C7D8()
{
  BOOL v5 = *(_DWORD *)(v2 + 40) - v0 != 153 * (v1 ^ 0x5D1) + 1427279438
    && (*(void *)(v2 + 56) | *(void *)(v2 + 32)) != 0LL;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((712 * v5) ^ v1)) - 4LL))();
}

uint64_t sub_10052C834()
{
  BOOL v4 = v1[1] != 0x499E23D0EA4735A8LL && (*v1 | v1[2]) != 0LL;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (int)((v4 * (((v0 + 637822508) & 0xD9FB9DDA) - 1441)) ^ v0)) - 8LL))();
}

uint64_t sub_10052C894(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3
                                                               + 8LL
                                                               * (((26 * ((v2 + 697) ^ 0x493) - 547) * (v1 == 0)) ^ (v2 + 697)))
                                                   - ((299 * ((v2 + 697) ^ 0x486u)) ^ 0x25ELL)))( a1,  460628867LL);
}

uint64_t sub_10052C9C4@<X0>( int a1@<W1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned int v28 = (v21 + 839170465) & 0xCDFB477F;
  int v29 = ((((2 * (v27 - 144)) | 0xACBF0A1E) - (v27 - 144) - 1449100559) ^ 0x1AC90772) * a1;
  *(void *)(v27 - 128) = a18;
  *(_DWORD *)(v27 - 120) = v29 + v22 - 473610063 + v28;
  *(void *)(v27 - 144) = v19;
  *(_DWORD *)(v27 - 136) = v29 + v21 + 95;
  uint64_t v45 = a2 + v20;
  ((void (*)(uint64_t))(*(void *)(v25 + 8LL * (v21 ^ 0x2EA)) - 4LL))(v27 - 144);
  uint64_t v46 = v23;
  HIDWORD(a8) = v28 + 129;
  *(void *)(v27 - 144) = a17;
  *(void *)(v27 - 136) = a16;
  *(_DWORD *)(v27 - 128) = v28
                         + 129
                         - 1374699841 * (((v27 - 144) & 0xF7F8D106 | ~((v27 - 144) | 0xF7F8D106)) ^ 0x65F336F0);
  int v44 = *(void (**)(uint64_t))(v25 + 8LL * (int)(v28 - 755));
  v44(v27 - 144);
  HIDWORD(a6) = v28 - 204;
  *(void *)(v27 - 144) = a18;
  *(void *)(v27 - 136) = a17;
  *(void *)(v27 - 128) = a19;
  *(void *)(v27 - 112) = a16;
  *(_DWORD *)(v27 - 120) = v28
                         - 204
                         - 235795823
                         * ((1074139766 - ((v27 - 144) | 0x40061276) + ((v27 - 144) | 0xBFF9ED89)) ^ 0x2B54A4D0);
  int v43 = (void (*)(uint64_t))(*(void *)(v25 + 8LL * (int)(v28 ^ 0x330)) - 8LL);
  v43(v27 - 144);
  HIDWORD(v42) = v28 - 17;
  *(void *)(v27 - 136) = a19;
  *(void *)(v27 - 128) = v23;
  *(void *)(v27 - 120) = a16;
  *(void *)(v27 - 112) = a19;
  *(void *)(v27 - 104) = a17;
  *(_DWORD *)(v27 - 144) = v28
                         - 17
                         + 1759421093
                         * ((-815595121 - ((v27 - 144) | 0xCF63018F) + ((v27 - 144) | 0x309CFE70)) ^ 0x83E14E24);
  uint64_t v30 = v25;
  unsigned int v31 = *(void (**)(uint64_t))(v25 + 8LL * (int)(v28 - 850));
  v31(v27 - 144);
  LODWORD(v42) = v28 + 872;
  *(void *)(v27 - 128) = a17;
  *(void *)(v27 - 120) = a19;
  *(_DWORD *)(v27 - 136) = (v28 + 872) ^ (235795823
                                        * ((((v27 - 144) | 0x73E2E362) - ((v27 - 144) & 0x73E2E362)) ^ 0xE74FAA3B));
  *(void *)(v27 - 144) = a19;
  *(void *)(v27 - 112) = a16;
  *(void *)(v27 - 104) = a9;
  unsigned int v32 = (void (*)(uint64_t))(*(void *)(v30 + 8LL * (int)(v28 ^ 0x3FC)) - 8LL);
  v32(v27 - 144);
  *(void *)(v27 - 144) = a17;
  *(void *)(v27 - 136) = a12;
  *(_DWORD *)(v27 - 128) = v28
                         + 129
                         - 1374699841
                         * ((148725413 - ((v27 - 144) | 0x8DD5EA5) + ((v27 - 144) | 0xF722A15A)) ^ 0x9AD6B953);
  v44(v27 - 144);
  *(_DWORD *)(v27 - 120) = v28
                         - 204
                         - 235795823
                         * ((902851631 - ((v27 - 144) | 0x35D06C2F) + ((v27 - 144) | 0xCA2F93D0)) ^ 0x5E82DA89);
  *(void *)(v27 - 112) = a12;
  *(void *)(v27 - 144) = a18;
  *(void *)(v27 - 136) = a17;
  *(void *)(v27 - 128) = v26;
  v43(v27 - 144);
  *(void *)(v27 - 136) = v26;
  *(void *)(v27 - 128) = v46;
  *(_DWORD *)(v27 - 144) = v28
                         - 17
                         + 1759421093 * ((2 * ((v27 - 144) & 0x2455F070) - (v27 - 144) + 1537871758) ^ 0xE8D7BFDA);
  *(void *)(v27 - 120) = a12;
  *(void *)(v27 - 112) = v26;
  *(void *)(v27 - 104) = a17;
  v31(v27 - 144);
  *(_DWORD *)(v27 - 136) = (v28 + 872) ^ (235795823
                                        * (((v27 - 144) & 0x9926B9E1 | ~((v27 - 144) | 0x9926B9E1)) ^ 0xF2740F47));
  *(void *)(v27 - 128) = a17;
  *(void *)(v27 - 120) = v26;
  *(void *)(v27 - 144) = v26;
  *(void *)(v27 - 112) = a12;
  *(void *)(v27 - 104) = a10;
  v32(v27 - 144);
  *(void *)(v27 - 128) = v26;
  *(_DWORD *)(v27 - 136) = (v28 - 694) ^ (460628867
                                        * ((((v27 - 144) | 0xDDE6058) - ((v27 - 144) & 0xDDE6058)) ^ 0x4148E225));
  *(void *)(v27 - 144) = a19;
  ((void (*)(uint64_t))((char *)*(&off_10090D690 + (int)(v28 - 771)) - 8))(v27 - 144);
  *(_DWORD *)(v27 - 144) = (v28 + 592) ^ (535753261
                                        * (((v27 - 144) & 0x2C0F99B6 | ~((v27 - 144) | 0x2C0F99B6)) ^ 0xD9046866));
  *(void *)(v27 - 136) = v26;
  sub_100530690(v27 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t))(v24 + 8LL * (int)((1084 * (*(_DWORD *)(v27 - 128) < ((149 * (v28 ^ 0x37D)) ^ (v28 + 1957522022)))) ^ v28)))( v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  a3,  v42,  v43,  a6,  v44,  a8,  (char *)*(&off_10090D690 + (int)(v28 ^ 0x314)) - 12,  a10,  v45,  a12,  a13,  a14,  a15,  a16,  a17,  v31,  a19);
}

uint64_t sub_10052CF1C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, void (*a24)(uint64_t), uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  *(void *)(v38 - 136) = v37;
  *(void *)(v38 - 128) = v34;
  *(_DWORD *)(v38 - 144) = v36 - 1178560073 * ((v38 - 144) ^ 0x32160040) - 810;
  v33(v38 - 144);
  *(_DWORD *)(v38 - 144) = v36
                         - 620
                         + 1759421093
                         * ((-1670690441 - ((v38 - 144) | 0x9C6B4977) + ((v38 - 144) | 0x6394B688)) ^ 0xD0E906DC);
  *(void *)(v38 - 136) = v37;
  *(void *)(v38 - 128) = a33;
  *(void *)(v38 - 120) = v34;
  *(void *)(v38 - 112) = v37;
  *(void *)(v38 - 104) = a23;
  a24(v38 - 144);
  *(_DWORD *)(v38 - 144) = v36
                         - 620
                         + 1759421093
                         * ((((v38 - 144) | 0x9CFAAF67) - (v38 - 144) + ((v38 - 144) & 0x63055098)) ^ 0x2F871F33);
  *(void *)(v38 - 136) = v37;
  *(void *)(v38 - 128) = v37;
  *(void *)(v38 - 112) = a17;
  *(void *)(v38 - 104) = a23;
  *(void *)(v38 - 120) = v34;
  a24(v38 - 144);
  *(_DWORD *)(v38 - 136) = v36
                         + 235795823 * ((2 * ((v38 - 144) & 0x409FA7C8) - (v38 - 144) - 1084205001) ^ 0x2BCD116E)
                         - 1882358954;
  *(void *)(v38 - 144) = v37;
  *(void *)(v38 - 128) = a22;
  sub_1005578C8(v38 - 144);
  *(_DWORD *)(v38 - 144) = v36
                         - 1178560073 * ((((v38 - 144) | 0xD53ABD4A) - ((v38 - 144) & 0xD53ABD4A)) ^ 0xE72CBD0A)
                         - 810;
  *(void *)(v38 - 136) = v37;
  *(void *)(v38 - 128) = a25;
  a15(v38 - 144);
  *(_DWORD *)(v38 - 128) = v36
                         - 1759421093
                         * ((439292421 - ((v38 - 144) | 0x1A2F1205) + ((v38 - 144) | 0xE5D0EDFA)) ^ 0x56AD5DAE)
                         - 1170;
  *(void *)(v38 - 144) = a25;
  *(void *)(v38 - 136) = v37;
  uint64_t v39 = sub_100517570(v38 - 144);
  return ((uint64_t (*)(uint64_t))(*(void *)(v35
                                                      + 8LL
}

uint64_t sub_10052D184()
{
  int v4 = 460628867 * ((2 * ((v3 - 144) & 0x330228A8) - (v3 - 144) - 855779503) ^ 0x806B552C);
  *(_DWORD *)(v3 - 140) = v1 - v4 - 786;
  *(_DWORD *)(v3 - 136) = (((51 * (v1 ^ 0x5CA)) ^ 0xFCE78C1D) + v7) ^ v4;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v8;
  uint64_t result = ((uint64_t (*)(uint64_t))*(&off_10090D690 + (v1 ^ 0x55Eu)))(v3 - 144);
  *(_DWORD *)(v6 - 0x499E23D0EA4735A8LL) = v7;
  *(_DWORD *)(v0 + 44) = -2006430421;
  return result;
}

void sub_10052D318(int a1, uint64_t a2, int a3)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v5 = !v3 && a3 != 0;
  __asm { BR              X8 }

uint64_t sub_10052D398( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = (1178560073 * ((&a13 & 0x85A57A70 | ~(&a13 | 0x85A57A70)) ^ 0x484C85CF)) ^ 0x650810FC;
  uint64_t v16 = sub_100556E04(&a13);
}

uint64_t sub_10052D41C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = 718 - 460628867 * (((&a13 | 0xB65DA74D) + (~&a13 | 0x49A258B2)) ^ 0xFACB2531);
  a13 = &STACK[0x8C0F0A4F49AC02A];
  sub_100519248((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8LL * ((2003 * (a14 == -2006430421)) ^ 0x13Eu))
                                                                                       - 4LL))( v16,  v17,  v18,  v19,  v20,  v21);
}

uint64_t sub_10052D4CC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16)
{
  unsigned int v23 = 1734042137
      * (((&a13 ^ 0xED082909) & 0xF7DF73A9 | ~(&a13 ^ 0xED082909 | 0xF7DF73A9)) ^ 0xB9E66612);
  LODWORD(a14) = v21 - v23 + 321;
  a15 = (((2 * v18) & 0x579D2E2E) + (v18 ^ 0xABCE9717) + ((v21 - 562) ^ 0x74BBECC0)) ^ v23;
  a13 = a10;
  ((void (*)(uint64_t *))(*(void *)(v20 + 8LL * (int)(v21 - 785)) - 4LL))(&a13);
  unsigned int v24 = 628203409 * (((&a13 | 0xF32FC617) + (~&a13 | 0xCD039E8)) ^ 0x71A7CA25);
  a16 = a10;
  LODWORD(a13) = v21 - v24 - 553;
  a15 = (v17 ^ 0x5BFDDA7F) + ((2 * v17) & 0xB7FBB4FE) - 138956840 + v24;
  a14 = v16;
  uint64_t v25 = (*(uint64_t (**)(uint64_t *))(v20 + 8LL * (int)(v21 - 702)))(&a13);
  return ((uint64_t (*)(uint64_t))(*(void *)(v22 + 8LL * ((1481 * (HIDWORD(a13) == v19)) ^ v21)) - 4LL))(v25);
}

uint64_t sub_10052D638( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unsigned int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v21 = 3804331 * ((&a13 & 0x421C9AA2 | ~(&a13 | 0x421C9AA2)) ^ 0x477D960B);
  a18 = (v19 + 2138962480) ^ v21;
  a16 = a10;
  a17 = &STACK[0x5BFD90C18C6562C2];
  a14 = -2142580665 - v21;
  a15 = v21 ^ 0xAEC324F7;
  uint64_t v22 = sub_100556BC0((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(void *)(v20
                                                      + 8LL * ((1355 * (a13 == v18 + 6 * (v19 ^ 0x345) - 318)) ^ v19))
                                          - 4LL))(v22);
}

uint64_t sub_10052D704()
{
  int v6 = 3 * (v4 ^ 0x31A);
  int v14 = &STACK[0x3703560E774B8087];
  uint64_t v15 = v10;
  unsigned int v12 = (v4 - 201) ^ (1374699841
                    * ((2 * (&v12 & 0x10D727D0) - &v12 - 282535890) ^ 0x82DCC027));
  (*(void (**)(unsigned int *))(v3 + 8LL * (v4 - 805)))(&v12);
  int v14 = v10;
  unsigned int v12 = v4 + ((&v12 + 1146705048 - 2 * (&v12 & 0x44595498)) ^ 0xBEC7A7CE) * v1 + 471;
  sub_1005171C4((uint64_t)&v12);
  if (v13 == (v6 ^ (v2 - 278))) {
    unsigned int v7 = v11;
  }
  else {
    unsigned int v7 = v13;
  }
  int v14 = v10;
  unsigned int v13 = v4 + ((((2 * &v12) | 0xE8105D64) - &v12 + 200790350) ^ 0xFEFC209D) * v5 - 311;
  v0(&v12);
  unsigned int v13 = v6 + ((&v12 + 749825941 - 2 * ((unint64_t)&v12 & 0x2CB16F95)) ^ 0x264561BA) * v5 + 251;
  int v14 = v9;
  v0(&v12);
  return v7 ^ v2;
}

void sub_10052D8B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1374699841 * (((a1 | 0x3B067EF8) - (a1 & 0x3B067EF8)) ^ 0x56F266F1);
  uint64_t v2 = *(void *)a1;
  ((void (*)(char *, void (*)()))*(&off_10090D690 + (v1 ^ 0x5A3)))( (char *)*(&off_10090D690 + (v1 ^ 0x55E)) - 8,  sub_10055759C);
  __asm { BR              X10 }

uint64_t sub_10052D968@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * (int)(((*(void *)(*(void *)(v2 + 8LL * (a1 ^ 0x55A)) - 4LL) != 0LL)
                                               * ((a1 + 365228186) & 0xEA3B0F7B ^ 0x52D)) ^ a1))
                            - 8LL))();
}

uint64_t sub_10052D9B4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8LL * (a1 - 1184)))(v1);
}

  ;
}

void sub_10052D9E0(uint64_t a1)
{
  __asm { BR              X9 }

uint64_t sub_10052DA18@<X0>(uint64_t a1@<X8>)
{
  return 0LL;
}

void sub_10052DA2C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((-2 - ((a1 | 0xA88133EE) + (~(_DWORD)a1 | 0x577ECC11))) ^ 0x3A8AD418));
  __asm { BR              X9 }

uint64_t sub_10052DAE4()
{
  BOOL v3 = (*(uint64_t (**)(uint64_t))(v0 + 8LL * (v1 - 384)))(200LL) != 0;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((v3 * (v1 - 2 + ((v1 - 2) ^ 0x29A))) ^ v1)) - 8LL))();
}

uint64_t sub_10052DB28(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8LL * (v7 ^ 0x1E5)))(a1, 0LL);
  if ((_DWORD)result == 16)
  {
    v3 -= 5;
    goto LABEL_7;
  }

  if ((_DWORD)result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8LL * (v4 ^ 0x17A)))(a1);
    int v10 = v3;
    goto LABEL_8;
  }

  if ((_DWORD)result)
  {
    v3 -= 6;
    goto LABEL_7;
  }

  *int v6 = a1;
  int v10 = -406385910;
LABEL_8:
  *(_DWORD *)(v1 + 4) = v10 ^ v2;
  return result;
}

uint64_t sub_10052DBAC(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_1009094D8 + ((875 * (*(_DWORD *)(a2 + 4) == 1731329621)) ^ 0x5C1u) - 1))();
}

uint64_t sub_10052DBE8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = (((**(_BYTE **)(a2 + 8) != 0) | (2 * (**(_BYTE **)(a2 + 8) != 0))) ^ 0xCD) + 120;
  return 0LL;
}

uint64_t sub_10052DC18()
{
  return 4294925278LL;
}

void sub_10052DC20(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * (_DWORD)a1) | 0x97E9331C) - (_DWORD)a1 + 873162354) ^ 0xA6008187));
  __asm { BR              X11 }

uint64_t sub_10052DCF8@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v12 = v8 ^ 0x1F;
  int v13 = v8 ^ 0x6C0;
  unsigned int v14 = 1755732067 * ((100290236 - (&a4 | 0x5FA4EBC) + (&a4 | 0xFA05B143)) ^ 0x24C30C98);
  a8 = v14 ^ 0x6140FAE2;
  a4 = &STACK[0x5BA13F8D95227257];
  a5 = v11;
  a6 = ((v8 ^ 0x1F) - 544) ^ v14;
  a7 = &STACK[0x770D305875D185D];
  uint64_t v15 = ((uint64_t (*)(unint64_t **))(*(void *)(a1 + 8LL * (v8 ^ 0x2EF)) - 8LL))(&a4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v10
                                                      + 8LL
                                                      * (int)(((*(_DWORD *)(v11 - 0x2185BF99DEDD7434LL) == (v13 ^ (v9 - 991)))
                                                             * ((v12 + 221840455) & 0xF2C6FBA7 ^ 0x6E0)) ^ v12))
                                          - 12LL))(v15);
}

uint64_t sub_10052DE10( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return ((uint64_t (*)(void))(*(void *)(v12
                                        + 8LL
                                        * ((((v13 ^ 0x47F) + 672 + 29 * (v13 ^ 0x47F) - 1382) * (a11 != v11 + 4)) ^ v13))
                            - 4LL))();
}

void sub_10052DE50(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 4) = 2006390302;
}

void sub_10052DF14(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }

uint64_t sub_10052DF7C()
{
  return 4294925278LL;
}

uint64_t sub_10052E128(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  return (*(uint64_t (**)(void))((char *)*(&off_10090D690 + v1 - 62)
                              + 8 * ((1515 * (*(void *)(a1 + 8) != 0x2185BF99DEDD744CLL)) ^ v1)
                              - 12))();
}

uint64_t sub_10052E1B0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8LL
                              * ((1973 * (*(_DWORD *)(v2 - 0x2185BF99DEDD7434LL) == ((4 * v1) ^ 0xF0) - 2006431077)) ^ v1)))();
}

uint64_t sub_10052E1FC@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x2185BF99DEDD743CLL) - 1925498783;
  unsigned int v4 = 461 * (v2 ^ 0x293) + *(_DWORD *)(v1 - 0x2185BF99DEDD7440LL) - 1850110632;
  BOOL v5 = v3 < 0x956DF754;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x956DF754) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((!v6 * ((v2 - 232781297) & 0xDDFF3F8 ^ 0xA6)) ^ v2)) - 4LL))();
}

uint64_t sub_10052E2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = *(void *)(v4 - 0x2185BF99DEDD744CLL);
  int v8 = *(unsigned __int8 *)(v7 + (v3 - 137543416)) ^ 0x98;
  int v9 = ((*(unsigned __int8 *)(v7 + (v3 - 137543419)) ^ 0x98) << ((4 * (((v6 - 91) | 0x10) ^ 0x3A)) ^ 0x80)) | ((*(unsigned __int8 *)(v7 + (v3 - 137543418)) ^ 0x98) << 16) | ((*(unsigned __int8 *)(v7 + (v3 - 137543417)) ^ 0x98) << 8) | v8;
  return ((uint64_t (*)(void))(*(void *)(a2
                                        + 8LL
                                        * ((231
                                          * (((v9 + v2 - 2 * (v9 & 0x8684D3B ^ v8 & 0x10)) & 0xFFFFFF ^ 0x684D2B)
                                           - (*(_DWORD *)(a1 + 32) ^ v5) != -1615192458)) ^ v6))
                            - 4LL))();
}

void sub_10052E394()
{
  _DWORD *v0 = 2006390302;
}

void sub_10052E614(uint64_t a1)
{
  __asm { BR              X8 }

uint64_t sub_10052E698()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 7992))(2288536875LL);
}

uint64_t sub_10052E7C8()
{
}

uint64_t sub_10052E818( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return ((uint64_t (*)(void))(*(void *)(v19
                                        + 8LL
                                        * (((((v18 - 1731329617) & 0xFFFFFFFC) - a17 == v17 - 1731330327) * (v17 - 654)) ^ v17))
                            - 8LL))();
}

uint64_t sub_10052E85C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t))(*(void *)(v2 + 8LL * (((v1 - 753) * (a1 == 1634819820)) ^ v1))
                                          - ((v1 + 1383785271) & 0xAD851ABF)
                                          + 693LL))(2006390517LL);
}

uint64_t sub_10052E8A8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unsigned int v23 = (((v22 + v19 - 196) | 0xC4) ^ 0x159FBB96) + v22 + v19 + 279 + v20;
  BOOL v24 = a19 + 875402464 < v23;
  return (*(uint64_t (**)(void))(v21 + 8LL * ((30 * !v24) ^ (v22 + v19 + 763))))();
}

uint64_t sub_10052EA4C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8LL
                              * ((((v0 - 336615335) & 0x5F78FFDB ^ (v2 + 400))
                                * (*(_DWORD *)(v5 + 48LL * (v3 + v1) + 36) != v3)) ^ v0)))();
}

uint64_t sub_10052EAA0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17)
{
  int v22 = 628203409 * ((((v21 - 160) | 0xDA60A5B6) - ((v21 - 160) & 0xDA60A5B6)) ^ 0x58E8A985);
  STACK[0x2A8] = a15;
  *(_DWORD *)(v21 - 144) = v18 - v22 + 369;
  *(_DWORD *)(v21 - 140) = v19 - v22 + 233078638;
  STACK[0x2C0] = a13;
  STACK[0x290] = a14;
  STACK[0x298] = a12;
  STACK[0x2B8] = a17;
  ((void (*)(uint64_t))(*(void *)(a8 + 8LL * (v18 - 421)) - 4LL))(v21 - 160);
  return (*(uint64_t (**)(void))(v20
                              + 8LL * ((19 * (*(_DWORD *)(v21 - 128) == (v18 ^ 0xC300E7FF ^ (v17 + v18 - 392)))) ^ v18)))();
}

uint64_t sub_10052EB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8LL * (int)(((*(_DWORD *)(v12 + 48LL * (v8 + v7)) == 1432966000) * (((v10 + 733461229) & 0xD44841DE) - 416)) ^ v10)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  v11);
}

uint64_t sub_10052EBE4@<X0>(int a1@<W6>, int a2@<W8>)
{
  if ((v2 - 1568615585) <= 0x1D && ((1 << (v2 + 95)) & 0x20002821) != 0)
  {
    int v8 = v3 + 70;
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFLL;
    if (v9)
    {
      if (v9 == 3)
      {
        int v10 = v8 ^ v3;
        int v11 = v8 + v6;
        int v12 = (*(uint64_t (**)())(v5 + 48LL * a2 + 8))();
        __asm { BR              X8 }
      }

      __asm { BR              X2 }
    }

    __asm { BR              X11 }
  }

  return a1 ^ 0x779716F5u;
}

void sub_10052F208(uint64_t a1)
{
  int v1 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  int v3 = (*(_BYTE *)(a1 + 12) - v1);
  ((void (*)(char *, void (*)()))*(&off_10090D690 + (v2 ^ 9)))( (char *)*(&off_10090D690 + v2 - 194) - 4,  sub_100557358);
  uint64_t v4 = *(void *)((char *)*(&off_10090D690 + v2 - 113) - 4);
  unsigned int v6 = v2 - 1374699841 * (&v5 ^ 0x6DF41809) + 1114;
  uint64_t v5 = v4;
  sub_10052D8B0((uint64_t)&v5);
  __asm { BR              X8 }

uint64_t sub_10052F30C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, char a17)
{
  a17 = 73 * ((-2 - ((~&a16 | 0x95) + (&a16 | 0x6A))) ^ 0xD5) + 12;
  a16 = (v17 - 25) ^ (1178560073
                    * ((-2 - ((~&a16 | 0xECF3EB95) + (&a16 | 0x130C146A))) ^ 0xDEE5EBD5));
  sub_10051936C((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8LL * (((v17 + 829) | 0x119) ^ ((**(_DWORD **)(v19 + 8LL * (((v17 + 829) | 0x119) ^ 0x514)) == ((((v17 + 829) | 0x119) - 1022) | 0x220) - 865) << 6)))
                                                                                                - (((v17 + 829) | 0x119u)
                                                                                                 - 1110)
                                                                                                + 229LL))( v20,  v21,  v22,  v23,  v24,  v25,  v26);
}

uint64_t sub_10052F3C4@<X0>(int a1@<W8>)
{
  int v8 = *(unsigned int **)(v6 + 8LL * (a1 - 67));
  uint64_t v9 = *(void *)(v6 + 8LL * (a1 - 180));
  uint64_t v10 = *v8;
  int v11 = *(_BYTE **)(v9 - 4);
  v23[0] = *v11 - 10;
  v23[1] = v11[1] - 10;
  v23[2] = v11[2] - 10;
  v23[3] = v11[3] - 10;
  v23[4] = v11[4] - 10;
  v23[5] = v11[5] - 10;
  v23[6] = v11[6] - 10;
  v23[7] = v11[7] - 10;
  v23[8] = v11[8] - 10;
  v23[9] = v11[9] - 10;
  v23[10] = v11[10] - 10;
  v23[11] = v11[11] - 10;
  v23[12] = v11[12] - 10;
  v23[13] = v11[13] - 10;
  v23[14] = v11[14] - 10;
  v23[15] = v11[15] - 10;
  v23[16] = v11[16] - 10;
  v23[17] = v11[17] - 10;
  v23[18] = v11[18] - 10;
  v23[19] = v11[19] - 10;
  v23[20] = v11[20] - 10;
  v23[21] = v11[21] - 10;
  int v12 = *(_BYTE **)(v9 - 4);
  v23[22] = v12[22] - 10;
  v23[23] = v12[23] - 10;
  v23[24] = v12[24] - 10;
  v23[25] = v12[25] - 10;
  v23[26] = v12[26] - 10;
  v23[27] = v12[27] - 10;
  _BYTE v23[28] = v12[28] - 10;
  v23[29] = v12[29] - 10;
  int v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8LL * (a1 - 29));
  int v14 = v13(v10, v23, v2);
  unsigned int v15 = ((2 * v14) & 0xE96F9FF2) + (v14 ^ 0x74B7CFF9);
  if (v15 != 1958203385)
  {
    if (v15 == 1958204487)
    {
      uint64_t v16 = *v8;
      int v17 = **(_BYTE ***)(v6 + 8LL * (v4 ^ 0x26));
      v22[0] = *v17 - 86;
      v22[1] = v17[1] - 86;
      v22[2] = v17[2] - 86;
      v22[3] = v17[3] - 86;
      v22[4] = v17[4] - 86;
      v22[5] = v17[5] - 86;
      v22[6] = v17[6] - 86;
      v22[7] = v17[7] - 86;
      _BYTE v22[8] = v17[8] - 86;
      v22[9] = v17[9] - 86;
      v22[10] = v17[10] - 86;
      v22[11] = v17[11] - 86;
      v22[12] = v17[12] - 86;
      v22[13] = v17[13] - 86;
      v22[14] = v17[14] - 86;
      v22[15] = v17[15] - 86;
      char v22[16] = v17[16] - 86;
      v22[17] = v17[17] - 86;
      v22[18] = v17[18] - 86;
      v22[19] = v17[19] - 86;
      int v18 = v13(v16, v22, v2);
      unsigned int v19 = (2 * v18) & 0xE5FFD7D2;
      unsigned int v15 = (v18 ^ 0x72FFEBE9) - 38543393;
    }

    else
    {
      unsigned int v19 = -67372081;
    }

    __asm { BR              X8 }
  }

  *(_DWORD *)(v7 + 356) |= v4 - 223;
  *(_DWORD *)(v7 + 56) = 1637603447;
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8LL * (v4 - 126)))( *v2,  v7 + 344,  v7 + 348,  v7 + 352,  v3);
  uint64_t v21 = *v1;
  *(_DWORD *)(v1[3] - 0xFB9CCB0B87C569CLL) = *v2;
  *(_DWORD *)(v21 - 0x2609BEA098DA4F30LL) = *v3;
  *((_DWORD *)v1 + 4) = -2006430421;
  return result;
}

void sub_10052F7D4(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1178560073 * ((((2 * (_DWORD)a1) | 0xC6F7E34E) - (_DWORD)a1 - 1669067175) ^ 0x516DF1E7);
  __asm { BR              X15 }

uint64_t sub_10052F88C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (((*(_DWORD *)(*(void *)(a1 + 8) + v4) == (v1 ^ 0x69C) - 396 + v3)
                                * ((v1 ^ 0x69C) - 953)) ^ v1 ^ 0x69C)))();
}

uint64_t sub_10052F8C0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = v2
  v4[0] = v1;
  v4[1] = a1;
  return sub_100517570((uint64_t)v4);
}

uint64_t sub_10052FA3C(uint64_t a1)
{
  int v1 = 1225351577 * (((a1 | 0xA3D2D055) - (a1 & 0xA3D2D055)) ^ 0x80480843);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  int v3 = *(_DWORD *)(a1 + 8) - v1;
  int v4 = *(_DWORD *)(*(void *)a1 - 0x13AAEC8A5CF1D15CLL);
  unsigned int v6 = v4 - 499656757;
  BOOL v5 = v4 - 499656757 < 0;
  unsigned int v7 = 499656757 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + v2 - 997)
                                        + 8 * ((282 * ((v3 - 21856980) >= 4 * (unint64_t)v8)) ^ v2)
                                        - 12)
                            - ((v2 - 982) ^ 0x61LL)))();
}

uint64_t sub_10052FB0C(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 8LL * (v3 ^ (244 * (v1 != 21856980))))
                                                   - ((v3 + 977) | 5u)
                                                   + 1075LL))( a1,  936673610LL);
}

uint64_t sub_10052FB4C(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, void, uint64_t))(*(void *)(v1
                                                                       + 8LL
                                                                       * ((1013
                                                                         * (((((v2 - 675742927) & 0x284704FF) - 13) ^ 0xAD) == 32)) ^ (v2 - 675742927) & 0x284704FF))
                                                           - 12LL))( a1,  (((v2 - 675742927) & 0x284704FF) - 13) ^ 0xE4u,  2227144630LL);
}

uint64_t sub_10052FBE8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  *(_BYTE *)(*(void *)(a1 + 16) + (a4 + a5)) = (a3 ^ v7) >> v9;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (((((v8 + a2 + 916) ^ v8) - 634) * (a4 - 1 != v6)) ^ a2)) - 12LL))();
}

uint64_t sub_10052FC34(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v4
                                                              + 8LL
                                                              * (int)((1013
                                                                     * ((a4 & 0xD55DFAFB) + v5 - 146 == (((a4 & 0xD55DFAFB) - 13) ^ 0xAD))) ^ a4 & 0xD55DFAFB))
                                                  - 12LL))( a1,  ((a4 & 0xD55DFAFB) - 13) ^ 0xE4);
}

uint64_t sub_10052FC80(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v8 = v6 - 2001877894 <= ((a4 - 76) | 0x28) + 1602644496 && v6 - 2001877894 >= v5;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((v8 * ((a4 + 13) ^ 0x8D)) ^ a4)) - 12LL))();
}

uint64_t sub_10052FCE0@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  return sub_10052FBE8(a1, a2 ^ 0xF3u, *(_DWORD *)(*v4 + 4LL * (v5 - 1457038848)), v3, a3);
}

uint64_t sub_10052FD14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_10052FD1C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }

uint64_t sub_10052FD68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24LL) = v3;
  int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 295437144) & 0x13A16390) - 1566657676;
  return ((uint64_t (*)(void))(*(void *)(v2
                                                     + 8LL
                                                     * ((32
                                                       * (((2 * v4) & 0x765BF89E ^ 0x12016090)
                                                        + (v4 ^ 0x32FD4D87)
                                                        - 2103307 != 990766148)) | 0x105u))
                                         - 8LL))(0LL);
}

uint64_t sub_10052FDF4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * ((28
                                * (v3 + v2 - 992869455 >= ((((v1 - 1008989604) ^ 0xC3DC088A) - 1413781549) & 0x77D ^ 0x334))) ^ (v1 - 1008989604) ^ 0xC3DC088A)))();
}

uint64_t sub_10052FE68(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8LL
}

uint64_t sub_10052FEA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8LL
}

uint64_t sub_10052FEF8@<X0>(char a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v10 = v8 + v7 + v9;
  uint64_t v11 = v4 + v10;
  __int128 v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a3 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((27 * (((a2 - a1 + 46) ^ ((v6 & 0xFFFFFFE0) == 32)) & 1)) ^ (v5 + a2 + 297))))();
}

void sub_10052FF58()
{
}

uint64_t sub_10052FF64(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                                     + 8LL * ((((a3 + a5 + 1116 + 468) ^ (a5 - v6)) * (v7 != a2)) ^ a5))
                                         - 8LL))(0LL);
}

uint64_t sub_10052FF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v6
                                                     + 8LL
}

uint64_t sub_10052FFFC@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(a3 - 7 + (v7 + v6 + v8 - a2)) = *(void *)(v4 - 7 + (v7 + v6 + v8 - a2));
}

void sub_100530058()
{
}

uint64_t sub_100530064(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8LL * ((((v5 ^ 0xD7) + 1173) * (v4 == a3)) ^ v5)))(0LL);
}

  ;
}

uint64_t sub_100530094@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(_BYTE *)(a3 + (a1 - 990766149)) = *(_BYTE *)(v5 + (a1 - 990766149));
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((569 * (a1 - 1 != v4)) ^ ((a2 - 828) | 0x105)))
                                         - (((a2 - 828) | 0x105u)
                                          - v6)
                                         + 3285977945LL))(0LL);
}

void sub_1005300EC()
{
}

uint64_t sub_1005300F4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)(result + 16) - 3243 * (((result ^ 0xC815 | 0xC663) - ((result ^ 0xC815) & 0xC663)) ^ 0xFD20);
  unsigned int v3 = ((2 * (v2 & 0x1FF)) | 0xA94FC674) - (v2 & 0x1FF) + 727194822;
  *(_DWORD *)(v1 - 0x24207EE97761D73CLL) = ((v3 & 0xC401A65C ^ 0x61511645) + (v3 & 0x10A641A3) - 1) ^ 0x17F4A3D3;
  *(void *)(v1 - 0x24207EE97761D75CLL) = 0x716F945F259ADE43LL;
  *(_DWORD *)(v1 - 0x24207EE97761D740LL) = 629852285;
  int v4 = v2 ^ 6;
  if (v4 == 1)
  {
    int v5 = 629852301;
    goto LABEL_5;
  }

  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x24207EE97761D744LL) = -1127053318;
    int v5 = 629852305;
LABEL_5:
    *(void *)(v1 - 0x24207EE97761D754LL) = 0x90CDCD831845450BLL;
    *(void *)(v1 - 0x24207EE97761D74CLL) = 0x6F32327CE7BABAF4LL;
    *(_DWORD *)(v1 - 0x24207EE97761D740LL) = v5;
  }

  *(_DWORD *)(result + 4) = 441533490;
  return result;
}

void sub_100530288(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0x80334E9A) - a1 + 1072060595) ^ 0x8C8F2530);
  __asm { BR              X10 }

uint64_t sub_100530318@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8LL
                              * (((((v2 == 953670721) ^ ((v1 ^ 0x47) - 1)) & 1) * ((v1 ^ 0x7B3) - 1280)) ^ v1 ^ 0x447)))();
}

uint64_t sub_100530378@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((v1 - 690) | 0x23A) - 1263)) - 8LL))();
}

uint64_t sub_100530474@<X0>(int a1@<W5>, int a2@<W7>, uint64_t a3@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a3 + 8LL * (((a2 == ((v4 - 1263) ^ v3 ^ ((v4 - 57) | 0x80))) * a1) ^ v4)) - 4LL))();
}

uint64_t sub_1005304A4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8LL
                              * (int)(((v1 == ((2 * v2) ^ 0xD82)) * (((v2 + 1558518073) & 0xA31AE6F7) - 1727)) ^ v2)))();
}

uint64_t sub_1005304EC@<X0>(uint64_t a1@<X8>)
{
  int v6 = v1 + v2;
  int v7 = v2 + 1;
  *(_DWORD *)(*(void *)(v3 - 0x13AAEC8A5CF1D158LL) + 4LL * (v6 + (v4 ^ 0x3F4) - 1286)) = v5;
  *(_DWORD *)(v3 - 0x13AAEC8A5CF1D15CLL) = v7;
  int v8 = v7 + v1;
  if (v7 + v1 < 0) {
    int v8 = -v8;
  }
  return (*(uint64_t (**)(void))(a1
                              + 8LL
                              * ((339
                                * ((int)(v1
                                       + ((3 * (v4 ^ 0x755) + 195827144) & 0xF453E7F7)
                                       + (v8 ^ (3 * (v4 ^ 0x755) - 1075027062))
                                       + ((2 * v8) & 0x7FD8D0FE)
                                       + 1574682550
                                       - 694) >= 0)) ^ (3 * (v4 ^ 0x755)))))();
}

uint64_t sub_1005305C8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8LL * ((499 * (*(_DWORD *)(*v2 + 4LL * v4) == v1)) ^ v3)))();
}

uint64_t sub_1005305EC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8LL
                              * ((339
                                * ((int)(v1
                                       + ((77 * (v2 ^ 0x4FC)) ^ 0xFFFFFD4A)
                                       + v3
                                       + ((v2 + 195827144) & 0xF453E7F7)
                                       - 694) >= 0)) ^ v2)))();
}

uint64_t sub_100530648(uint64_t result)
{
  else {
    int v5 = v4;
  }
  _DWORD *v3 = v5;
  *(_DWORD *)(result + 28) = 583743006;
  return result;
}

void sub_100530690(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (535753261 * ((-1040680992 - (a1 | 0xC1F877E0) + (a1 | 0x3E07881F)) ^ 0x34F38630));
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v5 = (535753261 * ((433373245 - (&v3 | 0x19D4C03D) + (&v3 | 0xE62B3FC2)) ^ 0xECDF31ED)) ^ (v1 - 932);
  uint64_t v4 = v2;
  sub_100555204((uint64_t)&v3);
  __asm { BR              X8 }

void sub_1005307A0()
{
  else {
    int v3 = v1 + 2;
  }
  *(_DWORD *)(v0 + 16) = v3;
}

void sub_10053080C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BR              X14 }

uint64_t sub_100530918()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((((v0 - 415) | 0x1C1) + 274) * (v1 != 0x74E33468)) ^ v0)) - 12LL))();
}

uint64_t sub_100530964()
{
  BOOL v9 = v3 > 0xD7410671;
  unsigned int v10 = (v1 ^ 0xC6F158F5) + v5;
  int v11 = v9 ^ (v10 < v2);
  BOOL v12 = v10 < v4;
  if (!v11) {
    BOOL v9 = v12;
  }
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((745 * v9) ^ v1)) - 12LL))();
}

uint64_t sub_100530A28()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((((v1 ^ 0x279DB2C0 ^ (v0 - 467732485) & 0x1BE103D7)
                                 + ((2 * v1) & 0xA6FD0EFE ^ 0xA0C408D0) != 1400801151)
                                * ((v0 - 652) ^ 0x3FE)) ^ v0)))();
}

uint64_t sub_100530AA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8LL * ((1317 * (v4 + ((211 * (a4 ^ 0x37D)) ^ 0xAC817C9E) > 7)) ^ a4)))();
}

uint64_t sub_100530B0C(int a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8LL
                              * ((2001 * ((((((a4 - 295) | 0x120) - 1922) ^ (a4 + 167)) & (a1 + a2)) == 1400801152)) ^ a4)))();
}

uint64_t sub_100530B54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v12 = v9 + a3;
  uint64_t v13 = v12 + v5;
  uint64_t v14 = v12 + v11;
  unint64_t v15 = v13 - v14;
  uint64_t v16 = (((a5 ^ 0x76E) + 679) ^ 0x6C9) & v9;
  uint64_t v17 = v7 - v14;
  uint64_t v18 = (v16 | v6) - v14;
  unint64_t v19 = (v16 | v8) - v14;
  BOOL v23 = v15 < 0x10 || (unint64_t)(v17 + v16) < 0x10 || (unint64_t)(v18 + 3) < 0x10 || v19 < 0x10;
  return (*(uint64_t (**)(void))(v10 + 8LL * ((v23 | (8 * v23)) ^ a5)))();
}

uint64_t sub_100530BC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9 + 8LL * ((v8 > 0xF) | a8)))( a1,  a2,  a3,  a4,  ((a8 - 1604) | 0x321u) - 510);
}

uint64_t sub_100530BE8( int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(v63 - 128) = v61 - 1;
  *(_DWORD *)(v63 - 136) = v61 + 14;
  v68.val[1].i64[0] = ((_BYTE)v61 + 5) & 0xF;
  v68.val[1].i64[1] = ((_BYTE)v61 + 4) & 0xF;
  v68.val[2].i64[0] = ((_BYTE)v61 + 3) & 0xF;
  v68.val[2].i64[1] = (((a6 - 23) ^ 0xE) + (_BYTE)v61) & 0xF;
  v68.val[3].i64[0] = ((_BYTE)v61 + 1) & 0xF;
  v68.val[3].i64[1] = v61 & 0xF;
  v64.i64[0] = 0x7373737373737373LL;
  v64.i64[1] = 0x7373737373737373LL;
  v68.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)a2 + (_BYTE)a3) & 0xF;
  v68.val[0].i64[1] = ((_BYTE)v61 + 6) & 0xF;
  v65.i64[0] = vqtbl4q_s8(v68, (int8x16_t)xmmword_10071E3B0).u64[0];
  v69.val[0].i64[1] = *(_DWORD *)(v63 - 136) & 0xF;
  v69.val[1].i64[1] = ((_BYTE)v61 + 12) & 0xF;
  v69.val[2].i64[1] = (v61 + 10) & 0xF;
  v69.val[3].i64[1] = ((_BYTE)v61 + 8) & 0xF;
  v69.val[0].i64[0] = *(_DWORD *)(v63 - 128) & 0xF;
  v69.val[1].i64[0] = ((_BYTE)v61 + 13) & 0xF;
  v69.val[2].i64[0] = ((_BYTE)v61 + 11) & 0xF;
  v69.val[3].i64[0] = ((_BYTE)v61 + 9) & 0xF;
  v65.i64[1] = vqtbl4q_s8(v69, (int8x16_t)xmmword_10071E3B0).u64[0];
  int8x16_t v66 = vrev64q_s8(vmulq_s8(v65, v64));
  *(int8x16_t *)(*(void *)(v63 - 120) - 15LL + (a1 + a2 + a3)) = veorq_s8( veorq_s8( veorq_s8( *(int8x16_t *)(v59 + v68.val[0].i64[0] - 15),  *(int8x16_t *)(v57 - 15 + (a1 + a2 + a3))),  veorq_s8( *(int8x16_t *)(v68.val[0].i64[0] + v58 - 12),  *(int8x16_t *)(v60 + v68.val[0].i64[0] - 15))),  vextq_s8(v66, v66, 8uLL));
  return ((uint64_t (*)(void))(*(void *)(a57
                                        + 8LL
                                        * ((((v62 & 0xFFFFFFF0) != 16) * (((a6 - 675) | 0xB5) ^ 0x19A)) ^ (a6 - 23)))
                            - 8LL))();
}

void sub_100530D64()
{
}

uint64_t sub_100530D70()
{
}

uint64_t sub_100530DC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * (int)((((a8 - 397) ^ 0x440) * ((v8 >> 3) & 1)) ^ a8))
}

uint64_t sub_100530DF0( int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(v65 - 144) = v62;
  *(void *)(v65 - 128) = v57 - 7;
  *(void *)(v65 - 136) = v66 - 7;
  *(_DWORD *)(v65 - 148) = v62 & 0xFFFFFFF8;
  *(_DWORD *)(v65 - 140) = 8 - (v62 & 0xFFFFFFF8);
  char v67 = v63 + a1 + a2;
  uint64_t v68 = a3 + a1 + a2 - 1452 - v64 + 363 * (a5 ^ 0x1A1u);
  v70.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a1 + (_BYTE)a2 + 84 - (_BYTE)v64 + 107 * (a5 ^ 0xA1)) & 0xF;
  v70.val[0].i64[1] = ((_BYTE)a1 + (_BYTE)a2 - 1 - (_BYTE)v64) & 0xF;
  v70.val[1].i64[0] = (v67 + 5 - (_BYTE)v64) & 0xF;
  v70.val[1].i64[1] = (v67 + 4 - (_BYTE)v64) & 0xF;
  v70.val[2].i64[0] = (v67 + 3 - (_BYTE)v64) & 0xF;
  v70.val[2].i64[1] = (v67 + 2 - (_BYTE)v64) & 0xF;
  v70.val[3].i64[0] = (v67 + 1 - (_BYTE)v64) & 0xF;
  v70.val[3].i64[1] = (v61 - (_BYTE)v64) & 0xF;
  *(int8x8_t *)(*(void *)(v65 - 136) + v68) = veor_s8( veor_s8( veor_s8( *(int8x8_t *)(v59 + (v68 & 0xF) - 7),  *(int8x8_t *)(*(void *)(v65 - 128) + v68)),  veor_s8( *(int8x8_t *)((v68 & 0xF) + v58 - 4),  *(int8x8_t *)(v60 + (v68 & 0xF) - 7))),  vrev64_s8( vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8( v70,  (int8x16_t)xmmword_10071E3C0),  (int8x8_t)0x7373737373737373LL)));
}

void sub_100530F4C()
{
}

uint64_t sub_100530F54(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (((((a3 - 981) ^ 0x5C8) - 45)
                                          * (*(_DWORD *)(v4 - 144) == *(_DWORD *)(v4 - 148))) ^ a3))
                            - 8LL))();
}

uint64_t sub_100530F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(_BYTE *)(v13 + (a6 - 1379174265)) = *(_BYTE *)(v10 + ((a6 - 1379174265) & 0xFLL)) ^ *(_BYTE *)(v7 + (a6 - 1379174265)) ^ *(_BYTE *)((((_BYTE)a6 - 121) & 0xF) + v9 + 3) ^ *(_BYTE *)(v11 + (((_BYTE)a6 - 121) & 0xF)) ^ (((a6 - 121) & 0xF) * (a7 ^ 0x6C));
  return (*(uint64_t (**)(void))(v12 + 8LL * ((990 * (a6 - 1 == v8)) ^ (a7 + 443))))();
}

uint64_t sub_100531004( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48)
{
  uint64_t v53 = *(void *)(v49 + 24);
  *(int8x16_t *)(v51 - 112) = veorq_s8( *(int8x16_t *)(*(void *)(v49 + 16) - 0x1F589EA4AC42BDE9LL),  (int8x16_t)xmmword_10071E3D0);
  if (v52) {
    BOOL v54 = v53 == 0x777DA4F8B3291E09LL;
  }
  else {
    BOOL v54 = 1;
  }
  int v55 = v54;
  HIDWORD(a26) = 2 * v48;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 + 8LL * (int)((1175 * (((((_DWORD)a5 - 85) ^ v55) & 1) == 0)) ^ a5)) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48);
}

uint64_t sub_10053108C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48)
{
  BOOL v51 = (((BYTE4(a26) & 0xA6) + (v48 ^ 0xD3) + 13) & 0xF) == 0
     && (HIDWORD(a26) & 0xD93CEFA6) + (v48 ^ 0xEC9E77D3) != (((_DWORD)a5 - 332) ^ 0x509) - 325160367;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 + 8LL * (int)((51 * v51) ^ a5)) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48);
}

uint64_t sub_1005310F8@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50)
{
  int v55 = v52;
  uint64_t v56 = *(void *)(v53 + 8LL * (v52 - 65)) - 12LL;
  int v57 = *(unsigned __int8 *)(v56 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E07LL) ^ 0xD7LL));
  *(_DWORD *)(v54 - 216) = a1;
  char v58 = (v52 - 126) | 0x12;
  *(_DWORD *)(v54 - 128) = (v52 - 126) | 0x412;
  uint64_t v59 = *(void *)(v53 + 8LL * (v52 - 42));
  int v60 = (v57 ^ 0x25) << 8;
  uint64_t v61 = *(void *)(v53 + 8LL * (v55 + 59)) - 8LL;
  int v62 = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291DFCLL) ^ 0x49LL));
  int v63 = v60 | ((*(unsigned __int8 *)(v59 + (*v51 ^ (v58 - 110))) ^ 0x92) << 24);
  HIDWORD(v65) = ~v62;
  LODWORD(v65) = (v62 ^ 0xFFFFFFC7) << 24;
  unsigned __int8 v64 = v65 >> 26;
  uint64_t v66 = *(void *)(v53 + 8LL * (v55 ^ 0xBC)) - 8LL;
  int v67 = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291DFDLL) ^ 0xB8LL));
  int v68 = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E00LL) ^ 0x6BLL));
  HIDWORD(v65) = ~v68;
  LODWORD(v65) = (v68 ^ 0xFFFFFFC7) << 24;
  unsigned __int8 v69 = *(_BYTE *)(v56 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291DFBLL) ^ 0x2ELL));
  int v70 = ((v65 >> 26) ^ 0x53) << 16;
  int v71 = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E08LL) ^ 0x47LL));
  HIDWORD(v65) = ~v71;
  LODWORD(v65) = (v71 ^ 0xFFFFFFC7) << 24;
  int v73 = v70 | ((*(unsigned __int8 *)(v56 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291DFFLL) ^ 0x77LL)) ^ 0xEA) << 8);
  int v74 = (*(_BYTE *)(v66 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E02LL) ^ 0xA9LL)) + 70) | ((*(unsigned __int8 *)(v56 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E03LL) ^ 0x30LL)) ^ 0x10) << 8);
  LODWORD(v56) = *(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E04LL) ^ 0xCBLL));
  HIDWORD(v65) = ~(_DWORD)v56;
  LODWORD(v65) = (v56 ^ 0xFFFFFFC7) << 24;
  LOBYTE(v56) = *(_BYTE *)(v66 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291DFELL) ^ 0xB5LL));
  unsigned int v75 = v74 & 0xFF00FFFF | (((v65 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v59
                                                                                                + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E05LL) ^ 0x35LL)) ^ 0x5D) << 24);
  int v76 = v73 | ((*(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291E01LL) ^ 0xBFLL)) ^ 0x44444444) << 24);
  unsigned __int8 v77 = *(_BYTE *)(v66 + (*(unsigned __int8 *)(v50 - 0x777DA4F8B3291DFALL) ^ 0x36LL)) + 70;
  uint64_t v78 = *(void *)(v53 + 8LL * (v55 ^ 0x9A)) - 4LL;
  uint64_t v79 = *(void *)(v53 + 8LL * (v55 + 22)) - 8LL;
  unsigned int v80 = *(_DWORD *)(v78 + 4LL * (v77 ^ 0xFDu)) ^ 0xF2150226 ^ *(_DWORD *)(v79 + 4LL * (v64 ^ 0x61u));
  *(_DWORD *)(v54 - 160) = v55;
  uint64_t v81 = *(void *)(v53 + 8LL * (v55 ^ 0x8E));
  unsigned int v82 = (v80 - ((2 * v80) & 0xA0FAA472) - 797093319) ^ *(_DWORD *)(v81 + 4LL * (v67 ^ 0xBFu));
  uint64_t v83 = *(void *)(v53 + 8LL * (v55 - 80)) - 4LL;
  HIDWORD(v566) = v72;
  unsigned int v84 = *(_DWORD *)(v83 + 4LL * (v69 ^ 0xD8u)) ^ v72 ^ (v82 - ((2 * v82) & 0xFB1B2B3C) - 41052770);
  v77 ^= 0x2Au;
  LODWORD(v566) = ((v64 ^ 0xFB) << 16) | ((v67 ^ 0x2A) << 24) | ((v69 ^ 0xE0) << 8) | v77;
  LOBYTE(v74) = (v56 + 70) ^ 0xA8;
  unsigned int v85 = v76 & 0xFFFFFF00 | v74;
  int v86 = v84 ^ v75;
  unsigned int v87 = v84;
  unsigned int v448 = v84;
  int v88 = v84 ^ v75 ^ 0x4D;
  *(_DWORD *)(v54 - 208) = v86;
  *(_DWORD *)(v54 - 136) = v88 ^ v85;
  unsigned __int8 v446 = v88;
  int v89 = v88 ^ v85 ^ (v566 + 203126023 + ~(2 * (v566 & 0xC1B750F ^ v77 & 9)));
  int v475 = BYTE1(v89);
  int v480 = BYTE2(v89);
  unsigned int v90 = v89 ^ 0xB6EC58AF;
  int v91 = *(_DWORD *)(v83 + 4LL * (BYTE1(v89) ^ 0x8Fu)) ^ *(_DWORD *)(v79 + 4LL * (BYTE2(v89) ^ 0xA5u)) ^ 0x3B61B5B6;
  int v487 = v89;
  int v92 = (v91 - ((2 * v91) & 0x69F2441C) + 888742414) ^ *(_DWORD *)(v78 + 4LL * (v89 ^ 0x2Fu));
  unsigned int v485 = HIBYTE(v90);
  LODWORD(v56) = v87 ^ *(_DWORD *)(v81 + 4LL * (HIBYTE(v90) ^ 0x65)) ^ (v92 - ((2 * v92) & 0xA0FAA472) - 797093319);
  unint64_t v565 = __PAIR64__(v75, v85);
  int v93 = v56 ^ 0xAEAB1E0;
  *(_DWORD *)(v54 - 192) = v56;
  int v94 = v56 ^ 0xAEAB1E0 ^ (v85 - 2 * (v85 & 0xAEAB1EA ^ v74 & 0xA) + 183153120);
  unsigned int v95 = v94 ^ v90;
  *(_DWORD *)(v54 - 184) = v94;
  int v502 = ((v94 ^ v90) >> 16);
  int v505 = ((unsigned __int16)(v94 ^ v90) >> 8);
  int v96 = *(_DWORD *)(v79 + 4LL * (v502 ^ 0x2Eu)) ^ *(_DWORD *)(v83 + 4LL * (v505 ^ 0x9Bu)) ^ 0x3B61B5B6;
  int v583 = v95;
  int v97 = (v96 - ((2 * v96) & 0x69F2441C) + 888742414) ^ *(_DWORD *)(v78 + 4LL * (v95 ^ 0xD2u));
  *(_DWORD *)(v54 - 224) = HIBYTE(v95);
  unsigned int v98 = (v97 - ((2 * v97) & 0xA0FAA472) - 797093319) ^ *(_DWORD *)(v81 + 4LL * (HIBYTE(v95) ^ 0x69));
  int v525 = v98 ^ v88;
  int v530 = v98 ^ v88 ^ 0x37A08FE ^ v94;
  unsigned int v99 = ((v530 ^ 0x99FC0514) - ((2 * (v530 ^ 0x99FC0514)) & 0x8618C5B8) - 1022598436) ^ v95 ^ 0xB7ABC395 ^ 0x9547167F;
  int v543 = BYTE2(v99);
  int v553 = ((unsigned __int16)(((v530 ^ 0x514) - ((2 * (v530 ^ 0x514)) & 0xC5B8) + 25308) ^ v95 ^ 0xC395 ^ 0x167F) >> 8);
  int v100 = *(_DWORD *)(v79 + 4LL * (BYTE2(v99) ^ 0x89u)) ^ *(_DWORD *)(v83 + 4LL * (v553 ^ 0x3Au)) ^ 0x3B61B5B6;
  int v550 = (((v530 ^ 0x14) - ((2 * (v530 ^ 0x14)) & 0xB8) - 36) ^ v95 ^ 0x95);
  int v101 = (v100 - ((2 * v100) & 0x69F2441C) + 888742414) ^ *(_DWORD *)(v78 + 4LL * (v550 ^ 0xE4u));
  unsigned int v567 = HIBYTE(v99);
  unsigned int v102 = (v101 - ((2 * v101) & 0xA0FAA472) - 797093319) ^ *(_DWORD *)(v81 + 4LL * (HIBYTE(v99) ^ 0x1D));
  unsigned int v511 = v98 ^ v56;
  int v579 = (v102 - ((2 * v102) & 0x646F6870) + 842511416) ^ v98 ^ v56;
  *(_DWORD *)(v54 - 256) = v579 ^ 0x3237B438;
  unsigned int v576 = v579 ^ 0x3237B438 ^ v98 ^ v88;
  unsigned int v103 = ((v576 ^ 0xFE25CD6D) - ((2 * (v576 ^ 0xFE25CD6D)) & 0x8618C5B8) - 1022598436) ^ v95 ^ 0xB7ABC395;
  int v104 = ((unsigned __int16)(((v576 ^ 0xCD6D) - ((2 * (v576 ^ 0xCD6D)) & 0xC5B8) + 25308) ^ v95 ^ 0xC395) >> 8);
  *(_DWORD *)(v54 - 232) = v104;
  int v105 = *(_DWORD *)(v83 + 4LL * (v104 ^ 0x6Fu));
  *(_DWORD *)(v54 - 248) = BYTE2(v103);
  LODWORD(v56) = v105 ^ *(_DWORD *)(v79 + 4LL * (BYTE2(v103) ^ 0xA8u)) ^ 0x3B61B5B6;
  LODWORD(v56) = (v56 - ((2 * v56) & 0xA0FAA472) - 797093319) ^ *(_DWORD *)(v81 + 4LL * (HIBYTE(v103) ^ 0x85));
  int v561 = (((v576 ^ 0x6D) - ((2 * (v576 ^ 0x6D)) & 0xB8) - 36) ^ v95 ^ 0x95);
  LODWORD(v56) = (v56 - ((2 * v56) & 0x69F2441C) + 888742414) ^ *(_DWORD *)(v78 + 4LL * (v561 ^ 0x25u));
  unsigned int v106 = (v56 - 1181932200 + (~(2 * v56) | 0x8CE5B551)) ^ v525 ^ 0x37A08FE;
  unsigned int v570 = v576 ^ v530;
  unsigned int v442 = v106 ^ v576 ^ v530;
  unsigned int v445 = v106;
  unsigned int v107 = v103 ^ v442 ^ 0xEA75D436;
  unsigned int v585 = v103;
  unsigned int v477 = (v107 ^ 0x64FD6621) >> 24;
  int v462 = ((v107 ^ 0x64FD6621) >> 16);
  int v108 = *(_DWORD *)(v81 + 4LL * (v477 ^ 0x1D)) ^ *(_DWORD *)(v79 + 4LL * (v462 ^ 0x89u)) ^ 0x16917211;
  int v587 = ((unsigned __int16)(v107 ^ 0x6621) >> 8);
  unsigned int v109 = (v108 - ((2 * v108) & 0xFB1B2B3C) - 41052770) ^ *(_DWORD *)(v83 + 4LL * (v587 ^ 0x3Au));
  int v559 = (v103 ^ v442 ^ 0x36);
  int v110 = *(_DWORD *)(v78 + 4LL * (v559 ^ 0xBAu));
  *(_DWORD *)(v54 - 200) = v579 ^ 0x3237B438 ^ v56;
  int v111 = v579 ^ 0x3237B438 ^ v56 ^ v110 ^ (v109 - ((2 * v109) & 0x69F2441C) + 888742414);
  unsigned __int8 v470 = BYTE2(v106) ^ 0x16;
  int v112 = v111 ^ v106 ^ 0x7C166C11;
  *(_DWORD *)(v54 - 168) = v111;
  LODWORD(v56) = (v112 ^ v103) >> 24;
  *(_DWORD *)(v54 - 240) = v56;
  LODWORD(v56) = *(_DWORD *)(v81 + 4LL * (v56 ^ 0x9B));
  int v548 = (v112 ^ v103);
  int v113 = *(_DWORD *)(v78 + 4LL * (v548 ^ 0x31u));
  unsigned int v496 = v93 ^ ((v86 ^ 0xBAF72DE4) - ((2 * (v86 ^ 0xBAF72DE4)) & 0x15D563C0) + 183153120);
  unsigned int v522 = ((v112 ^ v103) >> 8) ^ 0x86839A;
  int v527 = ((unsigned __int16)(v112 ^ ((v576 ^ 0xCD6D) - ((2 * (v576 ^ 0xCD6D)) & 0xC5B8) + 25308) ^ v95 ^ 0xC395) >> 8) ^ 0x9A;
  int v114 = ((v56 ^ v113 ^ 0xE4847037) - ((2 * (v56 ^ v113 ^ 0xE4847037)) & 0xFB1B2B3C) - 41052770) ^ *(_DWORD *)(v83 + 4LL * (((unsigned __int16)(v112 ^ ((v576 ^ 0xCD6D) - ((2 * (v576 ^ 0xCD6D)) & 0xC5B8) + 25308) ^ v95 ^ 0xC395) >> 8) ^ 0xA0u));
  LODWORD(v56) = v112 ^ v103 ^ 0xEE249084;
  int v519 = ((v112 ^ v103) >> 16);
  unsigned int v115 = (v114 - ((2 * v114) & 0x8DD84050) - 957603800) ^ *(_DWORD *)(v79 + 4LL * (v519 ^ 0xAu));
  int v116 = (v115 - ((2 * v115) & 0x53D40302) + 703201665) ^ v111;
  *(_DWORD *)(v54 - 140) = v116;
  unsigned int v117 = v116 ^ 0xD4699B2B ^ v112;
  __int16 v471 = v116 ^ 0x9B2B;
  unsigned int v535 = v112 ^ v442 ^ 0xEA75D436;
  int v508 = v112;
  *(_DWORD *)(v54 - 144) = v535 ^ 0x488DF08B;
  int v118 = ((v117 ^ 0x5A137D54) - 2 * ((v117 ^ 0x5A137D54) & 0x318AE7DE ^ v117 & 2) - 1316296740) ^ v535 ^ 0x488DF08B;
  *(_DWORD *)(v54 - 148) = v118;
  unsigned int v119 = ((v118 ^ 0xDE34AA6C) - ((2 * (v118 ^ 0xDE34AA6C)) & 0xD14E145C) + 1755777582) ^ v56 ^ 0x479AB031;
  int v557 = (((v118 ^ 0x6C) - ((2 * (v118 ^ 0x6C)) & 0x5C) + 46) ^ v56);
  int v581 = BYTE1(v119);
  unsigned int v120 = *(_DWORD *)(v83 + 4LL * (BYTE1(v119) ^ 0x3Au)) ^ *(_DWORD *)(v78 + 4LL * (v557 ^ 0xAAu)) ^ 0xC974B790;
  int v121 = BYTE2(v119);
  unsigned int v122 = (v120 - ((2 * v120) & 0x8DD84050) - 957603800) ^ *(_DWORD *)(v79 + 4LL * (BYTE2(v119) ^ 0x89u));
  unsigned int v490 = HIBYTE(v119);
  unsigned int v123 = (v122 - ((2 * v122) & 0xA0FAA472) - 797093319) ^ *(_DWORD *)(v81 + 4LL * (HIBYTE(v119) ^ 0x1D));
  unsigned int v124 = v123 ^ v112;
  unsigned int v125 = ((v123 ^ v112 ^ 0xA6C48CD5) - ((2 * (v123 ^ v112 ^ 0xA6C48CD5)) & 0xD14E145C) + 1755777582) ^ v56;
  int v126 = *(_DWORD *)(v81 + 4LL * (HIBYTE(v125) ^ 5)) ^ *(_DWORD *)(v83 + 4LL * (BYTE1(v125) ^ 0x6Fu)) ^ 0x2DF0C7A7;
  int v536 = (((v123 ^ v112 ^ 0xD5) - ((2 * (v123 ^ v112 ^ 0xD5)) & 0x5C) + 46) ^ v56);
  int v127 = (v126 - ((2 * v126) & 0x69F2441C) + 888742414) ^ *(_DWORD *)(v78 + 4LL * (v536 ^ 0x25u));
  unsigned int v128 = v116 ^ 0xD4699B2B ^ v123;
  unsigned int v129 = v128 ^ *(_DWORD *)(v79 + 4LL * (BYTE2(v125) ^ 0xA8u)) ^ (v127 - ((2 * v127) & 0x8DD84050) - 957603800);
  int v130 = v118 ^ 0x59AB726C;
  int v131 = v118 ^ 0x59AB726C ^ v129;
  int v132 = v131 ^ v125;
  int v133 = v131;
  *(_DWORD *)(v54 - 176) = v131;
  int v572 = ((unsigned __int16)(v131 ^ v125) >> 8);
  unsigned int v134 = (v131 ^ v125) >> 24;
  LODWORD(v81) = *(_DWORD *)(v83 + 4LL * (v572 ^ 0x44u)) ^ *(_DWORD *)(v81 + 4LL * (v134 ^ 0x47)) ^ 0x2DF0C7A7;
  unsigned int v454 = v134;
  LODWORD(v78) = (v81 - ((2 * v81) & 0x69F2441C) + 888742414) ^ *(_DWORD *)(v78 + 4LL * (v132 ^ 0xD5u));
  LODWORD(v78) = (v78 - ((2 * v78) & 0x8DD84050) - 957603800) ^ *(_DWORD *)(v79 + 4LL * (BYTE2(v132) ^ 0xCBu));
  HIDWORD(v564) = v129 ^ 0xC454C95B ^ (v78 - ((2 * v78) & 0x8947C9E4) + 1151591666);
  int v439 = v129 ^ v124;
  LODWORD(v564) = v129 ^ v124 ^ 0x9A0DF8F6 ^ (HIDWORD(v564) - ((2 * HIDWORD(v564)) & 0x7D5E6FC4) - 1095813150);
  HIDWORD(v563) = v564 ^ v133 ^ 0x4018996;
  LODWORD(v563) = (HIDWORD(v563) - ((2 * (v564 ^ v133)) & 0x55F0CC80) - 1426561472) ^ v132;
  int v135 = *(_DWORD *)(v54 - 160);
  unsigned int v136 = (char *)*(&off_10090D690 + (v135 ^ 0x87)) - 4;
  LODWORD(v78) = (((v128 ^ 0x1B9155BD) >> 16)
                + 543892127
                - ((2 * ((v128 ^ 0x1B9155BD) >> 16) + 25990232) & 0x10890E6)) ^ *(_DWORD *)&v136[4 * (((v128 ^ 0x1B9155BD) >> 16) ^ 0x2D)];
  LODWORD(v83) = ((BYTE2(v125) ^ 0x89) + 543892128 + ((2 * (BYTE2(v125) ^ 0x89) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ *(_DWORD *)&v136[4 * (BYTE2(v125) ^ 0xA4)];
  int v137 = (char *)*(&off_10090D690 + v135 + 23) - 4;
  int v138 = (v78 - ((2 * v78) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * (BYTE1(v128) ^ 0x47)];
  int v139 = (char *)*(&off_10090D690 + v135 - 138) - 8;
  int v140 = (v83 - ((2 * v83) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * (HIBYTE(v125) ^ 0xCC)];
  unsigned int v141 = (char *)*(&off_10090D690 + *(_DWORD *)(v54 - 160) + 45) - 12;
  int v142 = *(_DWORD *)&v141[4 * (v118 ^ 0x6C ^ v124 ^ 0x53)];
  unsigned __int8 v429 = BYTE1(v130) ^ BYTE1(v124);
  unsigned int v143 = *(_DWORD *)&v136[4 * (((v130 ^ v124) >> 16) ^ 0xAA)] ^ *(_DWORD *)&v139[4
                                                                                                * (((v130 ^ v124) >> 24) ^ 0x3E)] ^ ((((v130 ^ v124) >> 16) ^ 0x87) + 543892128 + ((2 * (((v130 ^ v124) >> 16) ^ 0x87) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ (181304767 * v142 - ((362609534 * v142 + 869203860) & 0x8FEF5DE2) - 505467205);
  LODWORD(v56) = *(_DWORD *)&v141[4 * (v124 ^ 0x74)];
  LODWORD(v56) = (181304767 * v56 - ((362609534 * v56 + 332332948) & 0x12B1F272) - 1556055805) ^ *(_DWORD *)&v137[4 * (BYTE1(v124) ^ 0x5A)];
  int v555 = v56 - ((2 * v56) & 0x8FEF5DE2);
  unsigned int v545 = HIBYTE(v124) ^ 0xB2;
  int v515 = BYTE2(v124);
  unsigned int v541 = (BYTE2(v124) ^ 0x4C) + 543892128 + ((2 * (BYTE2(v124) ^ 0x4C) + 88) & 0xE6 ^ 0xFEF76FFF);
  int v539 = v140 - ((2 * v140) & 0x12B1F272);
  unsigned int v532 = v143 - ((2 * v143) & 0x12B1F272);
  unsigned int v569 = (v138 - ((2 * v138) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * ((v128 ^ 0x1B9155BD) >> 24)] ^ (181304767 * *(_DWORD *)&v141[4 * (v128 ^ 0x7D)] - 1712881718);
  unsigned int v144 = *(_DWORD *)&v136[4 * (((v496 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v496 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                      + 543892128
                                                                                      + ((2
  unsigned int v145 = *(_DWORD *)(v54 - 184) ^ 0x31676F78;
  unsigned int v146 = *(_DWORD *)&v136[4 * (BYTE2(v145) ^ 0x7B)] ^ ((BYTE2(v145) ^ 0x56)
                                                     + 543892128
                                                     + ((2 * (BYTE2(v145) ^ 0x56) + 88) & 0xE6 ^ 0xFEF76FFF));
  unsigned int v147 = (v146 - ((2 * v146) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * HIBYTE(v145)];
  int v148 = *(_DWORD *)&v136[4 * (v502 ^ 0x34)] ^ ((v502 ^ 0x19) + 543892127 - ((2 * (v502 ^ 0x19) + 25990232) & 0x10890E6));
  int v149 = (v148 - ((2 * v148) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * (v505 ^ 5)];
  unsigned int v503 = v147 - ((2 * v147) & 0x12B1F272);
  unsigned int v506 = v149 - ((2 * v149) & 0x8FEF5DE2);
  int v150 = *(_DWORD *)&v141[4 * (*(_DWORD *)(v54 - 192) ^ 0xDF)];
  unsigned int v151 = *(_DWORD *)(v54 - 192) ^ 0x5A18571F;
  unsigned int v152 = *(_DWORD *)&v139[4 * HIBYTE(v151)] ^ ((BYTE2(v151) ^ 0xC1)
                                             + 543892127
                                             - ((2 * (BYTE2(v151) ^ 0xC1) + 25990232) & 0x10890E6)) ^ *(_DWORD *)&v136[4 * (BYTE2(v151) ^ 0xEC)] ^ (181304767 * v150 - ((362609534 * v150 + 869203860) & 0x8FEF5DE2) - 505467205);
  unsigned int v499 = v152 - ((2 * v152) & 0x12B1F272);
  unsigned int v153 = *(_DWORD *)&v139[4 * ((v496 ^ 0xE9B45E6C) >> 24)] ^ (v144 - ((2 * v144) & 0x8FEF5DE2) + 1207414513);
  unsigned int v440 = v496 ^ 0xAC;
  unsigned int v493 = BYTE1(v496) ^ 0xB4;
  unsigned int v497 = v153 - ((2 * v153) & 0x12B1F272);
  unsigned __int8 v461 = BYTE1(v117) ^ 0x8E;
  LODWORD(v56) = *(_DWORD *)&v136[4 * (v121 ^ 0xDE)] ^ ((v121 ^ 0xF3)
                                                      + 543892128
                                                      + ((2 * (v121 ^ 0xF3) + 88) & 0xE6 ^ 0xFEF76FFF));
  unsigned int v154 = *(_DWORD *)&v136[4 * (((v117 ^ 0x35C48CD5) >> 16) ^ 0xFE)] ^ ((((v117 ^ 0x35C48CD5) >> 16) ^ 0xD3)
                                                                                      + 543892128
                                                                                      + ((2
  int v155 = *(_DWORD *)&v141[4 * (v130 ^ 0xC5)];
  int v156 = (v56 - ((2 * v56) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * (v490 ^ 0x36)];
  LODWORD(v56) = BYTE2(*(_DWORD *)(v54 - 140));
  LODWORD(v56) = *(_DWORD *)&v136[4 * (v56 ^ 0x45)] ^ ((v56 ^ 0x68)
                                                                   + 543892128
                                                                   + ((2 * (v56 ^ 0x68) + 88) & 0xE6 ^ 0xFEF76FFF));
  int v157 = (v56 - ((2 * v56) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * (HIBYTE(v471) ^ 0x8B)];
  int v482 = v156 - ((2 * v156) & 0x12B1F272);
  int v491 = v157 - ((2 * v157) & 0x8FEF5DE2);
  int v158 = *(_DWORD *)(v54 - 148) ^ 0x3B34AA6C;
  unsigned int v159 = *(_DWORD *)&v137[4 * (BYTE1(v158) ^ 0x20)] ^ ((BYTE2(v158) ^ 0xD7)
                                                     + 543892128
                                                     + ((2 * (BYTE2(v158) ^ 0xD7) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ *(_DWORD *)&v136[4 * (BYTE2(v158) ^ 0xFA)] ^ (181304767 * v155 - ((362609534 * v155 + 332332948) & 0x12B1F272) - 1556055805);
  unsigned int v160 = (v154 - ((2 * v154) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * ((v117 ^ 0x35C48CD5) >> 24)] ^ (181304767 * *(_DWORD *)&v141[4 * (v117 ^ 0x3D)] - 1712881718);
  unsigned int v433 = v471 ^ 0xA3;
  unsigned int v465 = v160 - ((2 * v160) & 0x12B1F272);
  unsigned int v472 = v159 - ((2 * v159) & 0x8FEF5DE2);
  LODWORD(v59) = v475 ^ 0xE5;
  int v161 = *(_DWORD *)(v54 - 136);
  unsigned int v443 = BYTE1(v161) ^ 0xF5;
  unsigned int v457 = v448 ^ 0x2BEAE26B;
  unsigned int v162 = *(_DWORD *)&v136[4 * (((v448 ^ 0x2BEAE26B) >> 16) ^ 0xEC)] ^ ((((v448 ^ 0x2BEAE26B) >> 16) ^ 0xC1)
                                                                                      + 543892128
                                                                                      + ((2
  int v163 = (v162 - ((2 * v162) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * (BYTE1(v448) ^ 8)];
  unsigned int v164 = *(_DWORD *)&v136[4 * (v480 ^ 0x3B)] ^ ((v480 ^ 0x16)
                                              + 543892128
                                              + ((2 * (v480 ^ 0x16) + 88) & 0xE6 ^ 0xFEF76FFF));
  int v165 = *(_DWORD *)&v141[4 * (v446 ^ 0x55)];
  unsigned int v481 = v163 - ((2 * v163) & 0x8FEF5DE2);
  int v435 = BYTE2(v161);
  unsigned int v476 = (BYTE2(v161) ^ 0xA7) + 543892128 + ((2 * (BYTE2(v161) ^ 0xA7) + 88) & 0xE6 ^ 0xFEF76FFF);
  unsigned int v449 = v485 ^ 0x4B;
  LODWORD(v59) = (v164 - ((2 * v164) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * v59] ^ (181304767 * *(_DWORD *)&v141[4 * (v487 ^ 0x5C)] - 1712881718);
  unsigned int v166 = *(_DWORD *)(v54 - 208);
  int v486 = v59 - ((2 * v59) & 0x8FEF5DE2);
  LODWORD(v59) = (181304767 * v165 - ((362609534 * v165 + 869203860) & 0x8FEF5DE2) - 505467205) ^ ((BYTE2(v166) ^ 0xBA)
                                                                                                 + 543892128
                                                                                                 + ((2 * (BYTE2(v166) ^ 0xBA) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ *(_DWORD *)&v139[4 * (HIBYTE(v166) ^ 0x2F)] ^ *(_DWORD *)&v136[4 * (BYTE2(v166) ^ 0x97)];
  int v447 = v59 - ((2 * v59) & 0x12B1F272);
  LODWORD(v59) = *(_DWORD *)&v136[4 * (BYTE2(v442) ^ 0x7F)] ^ ((BYTE2(v442) ^ 0x52)
                                                             + 543892128
                                                             + ((2 * (BYTE2(v442) ^ 0x52) + 88) & 0xE6 ^ 0xFEF76FFF));
  unsigned int v167 = *(_DWORD *)(v54 - 200);
  unsigned int v168 = *(_DWORD *)&v136[4 * (BYTE2(v167) ^ 0x56)] ^ ((BYTE2(v167) ^ 0x7B)
                                                     + 543892128
                                                     + ((2 * (BYTE2(v167) ^ 0x7B) + 88) & 0xE6 ^ 0xFEF76FFF));
  int v169 = *(_DWORD *)&v141[4 * (v445 ^ 0xFB)];
  LODWORD(v59) = (v59 - ((2 * v59) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4
                                                                               * (((unsigned __int16)(v442 ^ 0xD436) >> 8) ^ 0x26)] ^ (181304767 * *(_DWORD *)&v141[4 * (v442 ^ 0x64)] - 1712881718);
  int v170 = (181304767 * v169 - ((362609534 * v169 + 332332948) & 0x12B1F272) - 1556055805) ^ *(_DWORD *)&v137[4 * (BYTE1(v445) ^ 0xEF)];
  LODWORD(v438) = v59 - ((2 * v59) & 0x8FEF5DE2);
  LODWORD(v434) = v170 - ((2 * v170) & 0x8FEF5DE2);
  LODWORD(v59) = (v168 - ((2 * v168) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * (HIBYTE(v167) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v141[4 * (v167 ^ 0x79)] - 1712881718);
  unsigned int v171 = *(_DWORD *)&v136[4 * (v462 ^ 0x86)] ^ ((v462 ^ 0xAB)
                                              + 543892128
                                              + ((2 * (v462 ^ 0xAB) + 88) & 0xE6 ^ 0xFEF76FFF));
  unsigned int v172 = (v171 - ((2 * v171) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * v477];
  unsigned int v463 = v172 - ((2 * v172) & 0x12B1F272);
  int v431 = v59 - ((2 * v59) & 0x12B1F272);
  int v468 = v470;
  unsigned int v488 = (v468 ^ 0x65) + 543892128 + ((2 * (v468 ^ 0x65) + 88) & 0xE6 ^ 0xFEF76FFF);
  LODWORD(v56) = *(_DWORD *)&v136[4 * (BYTE2(v132) ^ 0x8B)] ^ ((BYTE2(v132) ^ 0xA6)
                                                             + 543892128
                                                             + ((2 * (BYTE2(v132) ^ 0xA6) + 88) & 0xE6 ^ 0xFEF76FFF));
  int v430 = BYTE2(*(_DWORD *)(v54 - 176));
  unsigned int v478 = (v430 ^ 0x8F) + 543892128 + ((2 * (v430 ^ 0x8F) + 88) & 0xE6 ^ 0xFEF76FFF);
  unsigned int v173 = *(_DWORD *)&v136[4 * (BYTE2(v129) ^ 0xE8)] ^ ((BYTE2(v129) ^ 0xC5)
                                                     + 543892128
                                                     + ((2 * (BYTE2(v129) ^ 0xC5) + 88) & 0xE6 ^ 0xFEF76FFF));
  unsigned int v426 = v429 ^ 0x8E;
  unsigned int v174 = (181304767 * *(_DWORD *)&v141[4 * (v129 ^ 0xCA)] - 1712881718) ^ *(_DWORD *)&v139[4 * (HIBYTE(v129) ^ 0x8E)] ^ (v173 - ((2 * v173) & 0x8FEF5DE2) + 1207414513);
  unsigned int v437 = v129 ^ v124 ^ 0x44039AAA;
  LODWORD(v59) = (181304767 * *(_DWORD *)&v141[4 * (v439 ^ 0xDB)] - 1712881718) ^ (((v439 ^ 0x44039AAAu) >> 16)
                                                                                                  + 543892128
                                                                                                  + ((2 * ((v439 ^ 0x44039AAAu) >> 16) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ *(_DWORD *)&v136[4 * (((v439 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  unsigned int v424 = BYTE1(v129) ^ 0x16;
  unsigned int v427 = v174 - ((2 * v174) & 0x12B1F272);
  int v175 = (v59 - ((2 * v59) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4
                                                                       * (((unsigned __int16)(v129 ^ v124) >> 8) ^ 0xC0)];
  LODWORD(v56) = *(_DWORD *)&v139[4 * (v454 ^ 0x22)] ^ (181304767 * *(_DWORD *)&v141[4 * (v132 ^ 0xFE)]
                                                      - 1712881718) ^ (v56 - ((2 * v56) & 0x8FEF5DE2) + 1207414513);
  int v455 = v175 - ((2 * v175) & 0x8FEF5DE2);
  int v452 = v56 - ((2 * v56) & 0x12B1F272);
  int v176 = *(_DWORD *)&v141[4 * (v511 ^ 0xEC)];
  LODWORD(v56) = *(_DWORD *)&v136[4 * (v543 ^ 0x32)] ^ ((v543 ^ 0x1F)
                                                      + 543892128
                                                      + ((2 * (v543 ^ 0x1F) + 88) & 0xE6 ^ 0xFEF76FFF));
  int v177 = *(_DWORD *)&v141[4 * (v525 ^ 0xE6)];
  unsigned int v178 = *(_DWORD *)&v139[4 * (HIBYTE(v511) ^ 0xCA)] ^ ((BYTE2(v511) ^ 0x2F)
                                                      + 543892128
                                                      + ((2 * (BYTE2(v511) ^ 0x2F) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ *(_DWORD *)&v136[4 * (BYTE2(v511) ^ 2)] ^ (181304767 * v176 - ((362609534 * v176 + 869203860) & 0x8FEF5DE2) - 505467205);
  LODWORD(v56) = (v56 - ((2 * v56) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * (v553 ^ 0x8C)] ^ (181304767 * *(_DWORD *)&v141[4 * (v550 ^ 0xD9)] - 1712881718);
  unsigned int v179 = *(_DWORD *)&v139[4 * ((v525 ^ 0x49A657C7u) >> 24)] ^ ((((v525 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                             + 543892128
                                                             + ((2
  LODWORD(v59) = *(_DWORD *)&v136[4 * (((v530 ^ 0xA701136B) >> 16) ^ 0x2D)] ^ (((v530 ^ 0xA701136B) >> 16)
                                                                                              + 543892128
                                                                                              + ((2
                                                                                                * ((v530 ^ 0xA701136B) >> 16)
                                                                                                + 88) & 0xE6 ^ 0xFEF76FFF));
  unsigned int v554 = v567 ^ 0xAA;
  int v568 = (v178 - ((2 * v178) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * (BYTE1(v511) ^ 0x2E)];
  int v551 = v56 - ((2 * v56) & 0x8FEF5DE2);
  int v180 = (v59 - ((2 * v59) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * ((v530 ^ 0xA701136B) >> 24)] ^ (181304767 * *(_DWORD *)&v141[4 * (v530 ^ 0xFB)] - 1712881718);
  HIDWORD(v438) = BYTE1(v530) ^ 0x93;
  unsigned int v544 = v179 - ((2 * v179) & 0x12B1F272);
  int v512 = v180 - ((2 * v180) & 0x12B1F272);
  LODWORD(v56) = *(_DWORD *)&v136[4 * (v519 ^ 0xC1)] ^ ((v519 ^ 0xEC)
                                                      + 543892127
                                                      - ((2 * (v519 ^ 0xEC) + 25990232) & 0x10890E6));
  int v181 = (v56 - ((2 * v56) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4
                                                                       * ((v527 - ((2 * v522) & 0x166) + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v141[4 * (v548 ^ 0xE2)] - 1712881718);
  LODWORD(v56) = *(_DWORD *)&v141[4 * (*(_DWORD *)(v54 - 144) ^ 0xE4)];
  LODWORD(v56) = (181304767 * v56 - ((362609534 * v56 + 869203860) & 0x8FEF5DE2) - 505467205) ^ *(_DWORD *)&v139[4 * (HIBYTE(v535) ^ 0x37)];
  int v549 = v181 - ((2 * v181) & 0x8FEF5DE2);
  int v520 = v56 - ((2 * v56) & 0x12B1F272);
  unsigned int v523 = v508 ^ 0xEEA2BFA8;
  LODWORD(v56) = *(_DWORD *)&v136[4 * (((v508 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v508 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                              + 543892128
                                                                                              + ((2
  int v182 = (181304767 * *(_DWORD *)&v141[4 * (v508 ^ 0x68)] - 1712881718) ^ *(_DWORD *)&v137[4 * (BYTE1(v508) ^ 0x55)] ^ (v56 - ((2 * v56) & 0x12B1F272) + 156825913);
  HIDWORD(v423) = HIBYTE(v442) ^ 0xC1;
  unsigned int v509 = *(_DWORD *)(v54 - 168) ^ 0x231B9DB5;
  int v531 = (BYTE2(v509) ^ 0xC1) + 543892127 - ((2 * (BYTE2(v509) ^ 0xC1) + 25990232) & 0x10890E6);
  LODWORD(v423) = v182 - ((2 * v182) & 0x8FEF5DE2);
  unsigned int v421 = BYTE1(v525) ^ 0xB9;
  int v528 = (BYTE2(v535) ^ 0xB9) + 543892127 - ((2 * (BYTE2(v535) ^ 0xB9) + 25990232) & 0x10890E6);
  unsigned int v183 = v579 ^ 0xA3957B2C;
  unsigned int v420 = HIBYTE(v103) ^ 0x7B;
  int v184 = *(_DWORD *)&v141[4 * (v536 ^ 0x60)];
  int v185 = *(_DWORD *)&v141[4 * (v561 ^ 0x74)];
  int v186 = *(_DWORD *)&v141[4 * (v583 ^ 0xFB)];
  int v187 = *(_DWORD *)(v54 - 184);
  LODWORD(v79) = *(_DWORD *)&v141[4 * (v187 ^ 0xB8)];
  int v188 = *(_DWORD *)&v141[4 * v440];
  int v189 = *(_DWORD *)&v141[4 * v433];
  int v190 = *(_DWORD *)&v141[4 * (v557 ^ 0xF0)];
  int v191 = *(_DWORD *)&v141[4 * (*(_DWORD *)(v54 - 136) ^ 0x57)];
  LODWORD(v59) = *(_DWORD *)&v141[4 * (v559 ^ 0x1C)];
  LODWORD(v81) = *(_DWORD *)(v54 - 176);
  int v192 = *(_DWORD *)&v141[4 * (v81 ^ 0x78)];
  int v193 = *(_DWORD *)&v141[4 * (*(_DWORD *)(v54 - 168) ^ 0x75)];
  LODWORD(v56) = *(_DWORD *)&v141[4 * (v570 ^ 0x56)];
  int v194 = *(_DWORD *)&v141[4 * (v576 ^ 0x2A)];
  LODWORD(v141) = *(_DWORD *)&v141[4 * (v579 ^ 0x15)];
  HIDWORD(v432) = 181304767 * v184 - 1712881718;
  int v580 = 181304767 * v186 - 1712881718;
  HIDWORD(v441) = 181304767 * v79 - 1712881718;
  int v574 = 181304767 * v188 - 1712881718;
  int v537 = 181304767 * v190 - 1712881718;
  int v584 = 181304767 * v191 - 1712881718;
  LODWORD(v441) = 181304767 * v59 - 1712881718;
  HIDWORD(v422) = 181304767 * v192 - 1712881718;
  int v526 = 181304767 * v193 - 1712881718;
  HIDWORD(v434) = 181304767 * (_DWORD)v141 - 1712881718;
  unsigned int v195 = (181304767 * v185 - ((362609534 * v185 + 869203860) & 0x8FEF5DE2) - 505467205) ^ *(_DWORD *)&v139[4 * v420];
  LODWORD(v56) = *(_DWORD *)&v136[4 * (BYTE2(v570) ^ 0x21)] ^ ((BYTE2(v570) ^ 0xC)
                                                             + 543892128
                                                             + ((2 * (BYTE2(v570) ^ 0xC) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ (181304767 * v56 - 1712881718);
  LODWORD(v56) = (v56 - ((2 * v56) & 0x12B1F272) + 156825913) ^ *(_DWORD *)&v137[4 * (BYTE1(v570) ^ 0xA1)];
  unsigned int v196 = *(_DWORD *)&v136[4 * (BYTE2(v183) ^ 0x3C)] ^ ((BYTE2(v183) ^ 0x11)
                                                     + 543892128
                                                     + ((2 * (BYTE2(v183) ^ 0x11) + 88) & 0xE6 ^ 0xFEF76FFF));
  LODWORD(v59) = (181304767 * v194 - 1712881718) ^ ((BYTE2(v576) ^ 0x37)
                                                  + 543892128
                                                  + ((2 * (BYTE2(v576) ^ 0x37) + 88) & 0xE6 ^ 0xFEF76FFF)) ^ *(_DWORD *)&v136[4 * (BYTE2(v576) ^ 0x1A)];
  unsigned int v197 = v195 - ((2 * v195) & 0x12B1F272);
  int v198 = (v59 - ((2 * v59) & 0x8FEF5DE2) + 1207414513) ^ *(_DWORD *)&v139[4 * (HIBYTE(v576) ^ 0xF9)];
  LODWORD(v59) = v581 ^ 0x1A;
  LODWORD(v78) = *(_DWORD *)(v54 - 248);
  HIDWORD(v419) = *(_DWORD *)&v136[4 * (v515 ^ 0x61)];
  *(_DWORD *)(v54 - 248) = *(_DWORD *)&v136[4 * (v435 ^ 0x8A)];
  int v516 = *(_DWORD *)&v136[4 * (v468 ^ 0x48)];
  LODWORD(v419) = *(_DWORD *)&v136[4 * (v430 ^ 0xA2)];
  HIDWORD(v428) = *(_DWORD *)&v136[4 * (BYTE2(v509) ^ 0xEC)];
  LODWORD(v436) = *(_DWORD *)&v136[4 * (BYTE2(v535) ^ 0x94)];
  int v582 = *(_DWORD *)&v136[4 * (v78 ^ 0x1A)];
  int v199 = ((v585 >> 15) & 0x58 ^ 0x48) + (v78 ^ 0x4C64A1B);
  unsigned int v200 = (2 * (v199 & 0x77 ^ (HIWORD(v585) | 0xFFFFFFFB))) ^ 0x1089009;
  HIDWORD(v418) = *(_DWORD *)&v137[4 * (BYTE1(v125) ^ 0xB0)];
  int v517 = *(_DWORD *)&v137[4 * v426];
  *(_DWORD *)(v54 - 184) = *(_DWORD *)&v137[4 * (BYTE1(v187) ^ 0x85)];
  *(_DWORD *)(v54 - 192) = *(_DWORD *)&v137[4 * (BYTE1(*(_DWORD *)(v54 - 192)) ^ 0xBD)];
  int v586 = *(_DWORD *)&v137[4 * v493];
  HIDWORD(v425) = *(_DWORD *)&v137[4 * v59];
  int v459 = *(_DWORD *)&v137[4 * (v461 ^ 0x14)];
  int v469 = *(_DWORD *)&v137[4 * v443];
  unsigned int v494 = v199 + 463788148 + v200;
  *(_DWORD *)(v54 - 208) = *(_DWORD *)&v137[4 * (BYTE1(*(_DWORD *)(v54 - 208)) ^ 0xD6)];
  LODWORD(v59) = HIBYTE(v570) ^ 0x33;
  int v588 = *(_DWORD *)&v137[4 * (v587 ^ 0xEE)];
  int v571 = *(_DWORD *)&v137[4 * (BYTE1(*(_DWORD *)(v54 - 200)) ^ 0xD7)];
  LODWORD(v418) = *(_DWORD *)&v137[4 * (BYTE1(v81) ^ 0x76)];
  int v201 = *(_DWORD *)&v137[4 * v424];
  int v202 = v56 - ((2 * v56) & 0x8FEF5DE2);
  HIDWORD(v417) = *(_DWORD *)&v137[4 * (v572 ^ 0xBE)];
  *(_DWORD *)(v54 - 176) = *(_DWORD *)&v137[4 * v421];
  *(_DWORD *)(v54 - 200) = *(_DWORD *)&v137[4 * HIDWORD(v438)];
  HIDWORD(v438) = *(_DWORD *)&v137[4 * (BYTE1(*(_DWORD *)(v54 - 168)) ^ 0x77)];
  LODWORD(v425) = *(_DWORD *)&v137[4 * (BYTE1(*(_DWORD *)(v54 - 144)) ^ 0x41)];
  *(_DWORD *)(v54 - 168) = *(_DWORD *)&v137[4 * (*(_DWORD *)(v54 - 232) ^ 0x84)];
  *(_DWORD *)(v54 - 232) = *(_DWORD *)&v137[4 * (BYTE1(v576) ^ 0x2E)];
  LODWORD(v56) = *(_DWORD *)&v137[4 * (BYTE1(*(_DWORD *)(v54 - 256)) ^ 0xC8)];
  LODWORD(v422) = *(_DWORD *)&v139[4 * v545];
  int v546 = v539 + 156825913;
  unsigned int v540 = v532 + 156825913;
  *(_DWORD *)(v54 - 224) = *(_DWORD *)&v139[4 * (*(_DWORD *)(v54 - 224) ^ 7)];
  *(_DWORD *)(v54 - 256) = v503 + 156825913;
  LODWORD(v444) = v499 + 156825913;
  unsigned int v577 = v497 + 156825913;
  int v533 = *(_DWORD *)&v139[4 * (HIBYTE(*(_DWORD *)(v54 - 140)) ^ 0x38)];
  HIDWORD(v416) = v482 + 156825913;
  LODWORD(v416) = v465 + 156825913;
  LODWORD(v417) = *(_DWORD *)&v139[4 * (HIBYTE(*(_DWORD *)(v54 - 148)) ^ 0x4C)];
  unsigned int v203 = HIBYTE(v457);
  int v458 = *(_DWORD *)&v139[4 * (HIBYTE(*(_DWORD *)(v54 - 136)) ^ 0xB8)];
  int v573 = *(_DWORD *)&v139[4 * v203];
  int v466 = *(_DWORD *)&v139[4 * v449];
  int v450 = v447 + 156825913;
  unsigned int v504 = v463 + 156825913;
  LODWORD(a17) = v431 + 156825913;
  unsigned int v204 = v427 + 156825913;
  int v205 = v452 + 156825913;
  unsigned int v483 = v544 + 156825913;
  int v464 = v512 + 156825913;
  int v521 = v520 + 156825913;
  unsigned int v500 = v197 + 156825913;
  int v498 = v198 - ((2 * v198) & 0x12B1F272) + 156825913;
  int v513 = *(_DWORD *)&v139[4 * HIDWORD(v423)];
  LODWORD(v432) = *(_DWORD *)&v139[4 * (HIBYTE(v445) ^ 0xE8)];
  int v206 = *(_DWORD *)&v139[4 * (BYTE3(v81) ^ 0xA6)];
  int v207 = *(_DWORD *)&v139[4 * HIBYTE(v437)];
  int v453 = *(_DWORD *)&v139[4 * v554];
  int v208 = v56 ^ (v196 - ((2 * v196) & 0x12B1F272) + 156825913);
  int v209 = *(_DWORD *)&v139[4 * HIBYTE(v509)];
  *(_DWORD *)(v54 - 240) = *(_DWORD *)&v139[4 * (*(_DWORD *)(v54 - 240) ^ 0x38)];
  int v210 = *(_DWORD *)&v139[4 * HIBYTE(v523)];
  LODWORD(v428) = *(_DWORD *)&v139[4 * v59];
  int v510 = *(_DWORD *)&v139[4 * HIBYTE(v183)];
  int v211 = v555 + 1207414513;
  HIDWORD(v436) = v506 + 1207414513;
  int v212 = v491 + 1207414513;
  unsigned int v213 = v472 + 1207414513;
  HIDWORD(v444) = v481 + 1207414513;
  int v473 = v486 + 1207414513;
  int v492 = v551 + 1207414513;
  int v214 = v549 + 1207414513;
  int v215 = v202 + 1207414513;
  unsigned int v216 = v208 - ((2 * v208) & 0x8FEF5DE2) + 1207414513;
  int v217 = v569 ^ v568 ^ 0x6285F181;
  int v218 = v204 ^ v201 ^ v217;
  LODWORD(v139) = *(_DWORD *)(v54 - 160);
  int v219 = (char *)*(&off_10090D690 + (int)v139 + 53) - 12;
  int v220 = (char *)*(&off_10090D690 + (int)(v139 ^ 0xAB)) - 12;
  unsigned int v221 = (char *)*(&off_10090D690 + (int)v139 - 54) - 8;
  unsigned int v222 = (char *)*(&off_10090D690 + (int)v139 - 61) - 8;
  unsigned int v223 = (v222[*(unsigned __int8 *)(v54 - 109) ^ 0x41LL] ^ 0x71) & 0xFF00FFFF | (((v220[*(unsigned __int8 *)(v54 - 111) ^ 0x40LL] + 57) ^ 0x5A) << 16) | ((v221[*(unsigned __int8 *)(v54 - 110) ^ 0xBBLL] ^ 0x77) << 8) | ((v219[*(unsigned __int8 *)(v54 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v54 - 112) + (~(2 * *(unsigned __int8 *)(v54 - 112)) | 0x77777777) + 69) ^ 0x84) << 24);
  v562 = v219;
  int v224 = v222[*(unsigned __int8 *)(v54 - 97) ^ 0x74LL] ^ 0xD6 | (((v220[*(unsigned __int8 *)(v54 - 99) ^ 0xF3LL] + 57) ^ 2) << 16) | ((v221[*(unsigned __int8 *)(v54 - 98) ^ 0x20LL] ^ 0x9D) << 8) | ((v219[*(unsigned __int8 *)(v54 - 100) ^ 0xF3LL] ^ (*(unsigned __int8 *)(v54 - 100) - ((2 * *(_BYTE *)(v54 - 100)) & 0x88) + 68) ^ 0x85) << 24);
  v556 = v222;
  v558 = v221;
  unsigned int v225 = (v222[*(unsigned __int8 *)(v54 - 105) ^ 0xE4LL] ^ 0x47) & 0xFF00FFFF | ((v219[*(unsigned __int8 *)(v54 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v54 - 108) - ((2 * *(_BYTE *)(v54 - 108)) & 0x88) + 68) ^ 0xFFFFFFE1) << 24) | (((v220[*(unsigned __int8 *)(v54 - 107) ^ 0x27LL] + 57) ^ 0x96) << 16) | ((v221[*(unsigned __int8 *)(v54 - 106) ^ 9LL] ^ 0x72) << 8);
  v560 = v220;
  unsigned int v226 = (v222[*(unsigned __int8 *)(v54 - 101) ^ 0xF2LL] ^ 0xFE) & 0xFF00FFFF | ((v219[*(unsigned __int8 *)(v54 - 104) ^ 0xD3LL] ^ (*(unsigned __int8 *)(v54 - 104) - ((2 * *(_BYTE *)(v54 - 104)) & 0x88) + 68) ^ 0xE0) << 24) | ((v221[*(unsigned __int8 *)(v54 - 102) ^ 0xBELL] ^ 0xD5) << 8) & 0xFF00FFFF | (((v220[*(unsigned __int8 *)(v54 - 103) ^ 0xE9LL] + 57) ^ 0x8A) << 16);
  if ((v218 & 0x80) != 0) {
    int v227 = -128;
  }
  else {
    int v227 = 128;
  }
  *(_DWORD *)(v54 - 136) = v224 ^ 0xE59363EB;
  *(_DWORD *)(v54 - 140) = v223 ^ 0xAC8DD115;
  *(_DWORD *)(v54 - 144) = v225 ^ 0x9023179F;
  *(_DWORD *)(v54 - 148) = v226 ^ 0x299C49B0;
  HIDWORD(v552) = v205 ^ HIDWORD(v417);
  LODWORD(v552) = v206 ^ v478 ^ v418 ^ v419 ^ HIDWORD(v422);
  HIDWORD(v547) = (v455 + 1207414513) ^ v207;
  LODWORD(v547) = HIDWORD(v432) ^ HIDWORD(v418) ^ v546;
  HIDWORD(v542) = v540 ^ v517;
  LODWORD(v542) = v422 ^ v541 ^ HIDWORD(v419) ^ v211;
  HIDWORD(v538) = v416 ^ v459;
  LODWORD(v538) = HIDWORD(v416) ^ HIDWORD(v425) ^ v537;
  HIDWORD(v534) = v212 ^ v533 ^ (181304767 * v189 - 1712881718);
  LODWORD(v534) = v213 ^ v417;
  HIDWORD(v529) = HIDWORD(v438) ^ v531 ^ v209 ^ HIDWORD(v428) ^ v526;
  LODWORD(v529) = v425 ^ v528 ^ v436 ^ v521;
  HIDWORD(v524) = (v423 + 1207414513) ^ v210;
  LODWORD(v524) = v214 ^ *(_DWORD *)(v54 - 240);
  HIDWORD(v518) = a17 ^ v571;
  unsigned int v228 = *(unsigned __int8 **)(v54 - 120);
  LODWORD(v518) = v432 ^ v488 ^ v516 ^ (v434 + 1207414513);
  HIDWORD(v514) = (v438 + 1207414513) ^ v513;
  LODWORD(v514) = v441 ^ v588 ^ v504;
  HIDWORD(v507) = HIDWORD(v434) ^ v510 ^ v216;
  LODWORD(v507) = v498 ^ *(_DWORD *)(v54 - 232);
  HIDWORD(v501) = v215 ^ v428;
  LODWORD(v501) = *(_DWORD *)(v54 - 168) ^ v494 ^ v582 ^ v500;
  HIDWORD(v495) = v492 ^ v453;
  LODWORD(v495) = *(_DWORD *)(v54 - 176) ^ v483;
  HIDWORD(v489) = v464 ^ *(_DWORD *)(v54 - 200);
  LODWORD(v489) = v444 ^ *(_DWORD *)(v54 - 192);
  HIDWORD(v484) = *(_DWORD *)(v54 - 256) ^ *(_DWORD *)(v54 - 184) ^ HIDWORD(v441);
  LODWORD(v484) = v574 ^ v586 ^ v577;
  HIDWORD(v479) = v580 ^ *(_DWORD *)(v54 - 224) ^ HIDWORD(v436);
  LODWORD(v479) = v450 ^ *(_DWORD *)(v54 - 208);
  HIDWORD(v474) = v469 ^ v476 ^ v458 ^ *(_DWORD *)(v54 - 248) ^ v584;
  LODWORD(v474) = v473 ^ v466;
  HIDWORD(v467) = HIDWORD(v444) ^ v573;
  LODWORD(v467) = *(_DWORD *)(v54 - 216) + 325158957;
  HIDWORD(v460) = (v227 + (v218 ^ 0x2497E332)) ^ v217;
  int v229 = *(_DWORD *)(v54 - 128);
  LODWORD(v460) = v229 ^ 0x498;
  HIDWORD(v456) = v229 ^ 0x49E;
  LODWORD(v456) = v229 ^ 0x4B2;
  HIDWORD(v451) = v229 ^ 0x407;
  LODWORD(v451) = v229 ^ 0x46A;
  *(void *)(v54 - 200) = 13LL;
  char v230 = v560[v228[13] ^ 0xF3LL] + 57;
  *(void *)(v54 - 160) = 1LL;
  int v231 = (((v229 + 99) ^ v230) ^ 0x80) << 16;
  uint64_t v232 = v228[1] ^ 0x57LL;
  *(void *)(v54 - 168) = 10LL;
  uint64_t v233 = v228[10] ^ 0xB6LL;
  int v234 = ((v560[v232] + 57) ^ 0xF6) << 16;
  *(void *)(v54 - 192) = 4LL;
  int v235 = (v558[v233] ^ 0xF8) << 8;
  uint64_t v236 = v228[4];
  int v237 = v562[v236 ^ 0x9A];
  *(void *)(v54 - 232) = 7LL;
  LODWORD(v236) = v237 ^ (v236 - ((2 * v236) & 0x88888888) + 68) ^ 0xFFFFFFCF;
  int v238 = v556[v228[7] ^ 0xD6LL];
  *(void *)(v54 - 224) = 2LL;
  LODWORD(v236) = v238 ^ 0x14 | ((_DWORD)v236 << 24);
  int v239 = v558[v228[2]] ^ 0xEA;
  *(void *)(v54 - 184) = 3LL;
  int v240 = v234 | (v239 << 8);
  int v241 = v556[v228[3] ^ 0x74LL];
  *(void *)(v54 - 176) = 12LL;
  int v242 = v240 | v241 ^ 0xD6;
  int v243 = v562[v228[12] ^ 0x6ELL] ^ (v228[12] - ((2 * v228[12]) & 0x88) + 68) ^ 0x51;
  *(void *)(v54 - 208) = 0LL;
  int v244 = v242 | ((v562[*v228 ^ 0x15LL] ^ (*v228 - ((2 * *v228) & 0x88) + 68) ^ 0xAE) << 24);
  unsigned int v245 = v235 | ((v562[v228[8] ^ 0x46LL] ^ (v228[8] - ((2 * v228[8]) & 0x88) + 68) ^ 0xFFFFFFE7) << 24);
  *(void *)(v54 - 216) = 14LL;
  int v246 = v558[v228[14] ^ 0xD5LL] ^ 0x62;
  *(void *)(v54 - 240) = 5LL;
  int v247 = v231 | (v243 << 24) | (v246 << 8);
  *(void *)(v54 - 256) = 11LL;
  LODWORD(v236) = v236 & 0xFF00FFFF | (((v560[v228[5] ^ 0x9DLL] + 57) ^ 0xF7) << 16);
  uint64_t v248 = v228[6] ^ 0xA4LL;
  unsigned int v249 = (v556[v228[11] ^ 0xC2LL] ^ 0xF3 | v245) & 0xFF00FFFF | (((v560[v228[9] ^ 0x3ELL] + 57) ^ 0xDF) << 16);
  *(void *)(v54 - 248) = 15LL;
  int v578 = v236 | ((v558[v248] ^ 0x32) << 8);
  unsigned int v250 = (char *)*(&off_10090D690 + (v229 ^ 0x498)) - 4;
  LODWORD(v232) = ((((unsigned __int16)(v578 ^ v564) >> 8) ^ 0x4C)
                 - 1734287436
                 - 2 * ((((v578 ^ v564) >> 8) ^ 0xB71C4C) & 0xB5 ^ ((v578 ^ v564) >> 8) & 1)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v578 ^ v564) >> 8) ^ 0x21)];
  int v251 = (char *)*(&off_10090D690 + v229 - 942) - 12;
  unsigned int v252 = v244 ^ HIDWORD(v564) ^ 0x730032AA;
  LODWORD(v232) = (v232 - 226708020 - ((2 * v232) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4
                                                                                  * ((v244 ^ BYTE4(v564)) ^ 0xAA)];
  int v575 = v556[v228[15] ^ 0x47LL] ^ 0xD6 | v247;
  unsigned int v253 = *(_DWORD *)&v250[4 * (((unsigned __int16)(v563 ^ v575) >> 8) ^ 0x6A)] ^ ((((unsigned __int16)(v563 ^ v575) >> 8) ^ 7)
                                                                                                 - 1734287436
                                                                                                 - ((2 * (((v563 ^ v575) >> 8) ^ 0xFC0807)) & 0x168));
  int v254 = (2 * v232) & 0xBE54CC0;
  int v255 = v232 + 99788384;
  unsigned int v256 = v249 ^ HIDWORD(v563);
  int v257 = (char *)*(&off_10090D690 + v229 - 928) - 4;
  LODWORD(v228) = *(_DWORD *)&v257[4 * (((v249 ^ HIDWORD(v563)) >> 16) ^ 0x68)];
  int v258 = v255 - v254;
  HIDWORD(v260) = v228 ^ 0xF3F3F3F3;
  LODWORD(v260) = v228 ^ 0xA82D5000;
  int v259 = v260 >> 12;
  LODWORD(v248) = *(_DWORD *)&v257[4 * (BYTE2(v244) ^ BYTE6(v564))];
  HIDWORD(v260) = v248 ^ 0xF3F3F3F3;
  LODWORD(v260) = v248 ^ 0xA82D5000;
  uint64_t v261 = (uint64_t)*(&off_10090D690 + v229 - 1047);
  int v262 = (v253 + 99788384 - ((2 * v253) & 0xBE54CC0)) ^ *(_DWORD *)(v261
                                                                  + 4LL * (((v578 ^ v564) >> 24) ^ 0xB7)) ^ (v260 >> 12);
  int v263 = *(_DWORD *)&v257[4 * (((v563 ^ v575) >> 16) ^ 8)];
  HIDWORD(v260) = v263 ^ 0xF3F3F3F3;
  LODWORD(v260) = v263 ^ 0xA82D5000;
  int v264 = *(_DWORD *)&v251[4 * ((v578 ^ v564) ^ 0xFB)] ^ BYTE1(v256) ^ *(_DWORD *)&v250[4 * (BYTE1(v256) ^ 0x23)] ^ 0x6ADC6A36 ^ (v260 >> 12);
  int v265 = v264 + 99788384 - ((2 * v264) & 0xBE54CC0);
  int v266 = *(_DWORD *)&v257[4 * (((v578 ^ v564) >> 16) ^ 0x1C)];
  HIDWORD(v260) = v266 ^ 0xF3F3F3F3;
  LODWORD(v260) = v266 ^ 0xA82D5000;
  int v267 = *(_DWORD *)(v261 + 4LL * (HIBYTE(v256) ^ 0xF6)) ^ (BYTE1(v252) - 1734287436 - ((v252 >> 7) & 0x168)) ^ *(_DWORD *)&v250[4 * (BYTE1(v252) ^ 0x6D)] ^ ((v260 >> 12) + 99788384 - ((2 * (v260 >> 12)) & 0xBE54CC0));
  int v268 = HIDWORD(v552) ^ v259 ^ *(_DWORD *)(v261 + 4LL * (((v563 ^ v575) >> 24) ^ 0xFC)) ^ v258;
  unsigned int v269 = v552 ^ *(_DWORD *)&v251[4 * ((v563 ^ v575) ^ 0xF)] ^ (v267
                                                                              - 226708020
                                                                              - ((2 * v267) & 0xE4F96B98));
  unsigned int v270 = HIDWORD(v547) ^ *(_DWORD *)&v251[4 * (v256 ^ 0x5F)] ^ (v262
                                                                               - 226708020
                                                                               - ((2 * v262) & 0xE4F96B98));
  unsigned int v271 = HIDWORD(v460) ^ *(_DWORD *)(v261 + 4LL * HIBYTE(v252)) ^ v265;
  unsigned int v272 = v268 ^ 0xF9388C2F;
  int v273 = *(_DWORD *)&v257[4 * ((v268 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v260) = v273 ^ 0xF3F3F3F3;
  LODWORD(v260) = v273 ^ 0xA82D5000;
  int v274 = v260 >> 12;
  int v275 = *(_DWORD *)&v257[4 * (BYTE2(v269) ^ 0xD7)];
  HIDWORD(v260) = v275 ^ 0xF3F3F3F3;
  LODWORD(v260) = v275 ^ 0xA82D5000;
  int v276 = v260 >> 12;
  int v277 = *(_DWORD *)&v257[4 * (BYTE2(v270) ^ 0x66)];
  HIDWORD(v260) = v277 ^ 0xF3F3F3F3;
  LODWORD(v260) = v277 ^ 0xA82D5000;
  int v278 = (v260 >> 12) ^ *(_DWORD *)&v250[4 * (BYTE1(v271) ^ 5)] ^ ((BYTE1(v271) ^ 0x68)
                                                                 - 1734287436
                                                                 - 2
                                                                 * (((v271 >> 8) ^ 0x42BD68) & 0xB6 ^ (v271 >> 8) & 2));
  unsigned int v279 = (v274 - 226708020 - ((2 * v274) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v270 ^ 0xB6)];
  unsigned int v280 = (v278 - 226708020 - ((2 * v278) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v268 ^ 0x61)];
  unsigned int v281 = (((unsigned __int16)(v268 ^ 0x8C2F) >> 8) - 1734287436 - (((v268 ^ 0xF9388C2F) >> 7) & 0x168)) ^ 0xD678EAEF ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v268 ^ 0x8C2F) >> 8) ^ 0x6D)];
  unsigned int v282 = *(_DWORD *)(v261 + 4LL * (HIBYTE(v270) ^ 0x43)) ^ 0xA7E8FDDE;
  LODWORD(v228) = v281 + v282;
  int v283 = v281 & v282;
  int v284 = *(_DWORD *)&v257[4 * (BYTE2(v271) ^ 0xBD)];
  HIDWORD(v260) = v284 ^ 0xF3F3F3F3;
  LODWORD(v260) = v284 ^ 0xA82D5000;
  int v285 = *(_DWORD *)(v261 + 4LL * HIBYTE(v272)) ^ (v276 + 99788384 - ((2 * v276) & 0xBE54CC0));
  unsigned int v286 = (v285 - 226708020 - ((2 * v285) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v271 ^ 0xAB)];
  unsigned int v287 = *(_DWORD *)(v261 + 4LL * (HIBYTE(v271) ^ 0x42)) ^ v569 ^ *(_DWORD *)&v250[4 * (BYTE1(v269) ^ 0xA1)] ^ ((BYTE1(v269) ^ 0xCC) - 1734287436 - 2 * (((v269 >> 8) ^ 0x9BD7CC) & 0xB5 ^ (v269 >> 8) & 1)) ^ (v279 + 99788384 - ((2 * v279) & 0xBE54CC0));
  LOBYTE(v284) = BYTE1(v270) ^ 0x54;
  unsigned int v288 = v547 ^ *(_DWORD *)&v250[4 * (BYTE1(v270) ^ 0x39)] ^ (v286 - 1734287436 - ((2 * v286) & 0x3141BF68));
  int v289 = HIDWORD(v542) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v269) ^ 0x9B)) ^ (v280 + 99788384 - ((2 * v280) & 0xBE54CC0));
  unsigned int v290 = v542 ^ *(_DWORD *)&v251[4 * (v269 ^ 0xA0)] ^ ((((_DWORD)v228 - 2 * v283) ^ (v260 >> 12))
                                                                      - 226708020
                                                                      - ((2 * (((_DWORD)v228 - 2 * v283) ^ (v260 >> 12))) & 0xE4F96B98));
  int v291 = *(_DWORD *)&v257[4 * (BYTE2(v290) ^ 0x79)];
  HIDWORD(v260) = v291 ^ 0xF3F3F3F3;
  LODWORD(v260) = v291 ^ 0xA82D5000;
  BYTE1(v269) = BYTE1(v289) ^ 0x68;
  int v292 = ((v260 >> 12) + 99788384 - ((2 * (v260 >> 12)) & 0xBE54CC0)) ^ *(_DWORD *)(v261
                                                                                  + 4LL * ((v289 ^ 0x2261685Eu) >> 24));
  int v293 = ((BYTE1(v290) ^ 0xD0) - 1734287436 - 2 * (((v290 >> 8) ^ 0x679D0) & 0xBF ^ (v290 >> 8) & 0xB)) ^ *(_DWORD *)&v250[4 * (BYTE1(v290) ^ 0xBD)];
  unsigned int v294 = (v293 - 226708020 - ((2 * v293) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v287 ^ 0x76)];
  int v295 = ((BYTE1(v288) ^ 0xEC) - 1734287436 - ((2 * ((v288 >> 8) ^ 0xE5FEC)) & 0x168)) ^ *(_DWORD *)&v250[4 * (BYTE1(v288) ^ 0x81)];
  int v296 = *(_DWORD *)&v257[4 * (BYTE2(v288) ^ 0x5F)];
  HIDWORD(v260) = v296 ^ 0xF3F3F3F3;
  LODWORD(v260) = v296 ^ 0xA82D5000;
  int v297 = v260 >> 12;
  HIDWORD(v260) = *(_DWORD *)&v251[4 * (v289 ^ 0x5E)] ^ 0x1B6B9244;
  LODWORD(v260) = HIDWORD(v260);
  int v298 = (v260 >> 28) ^ __ROR4__( *(_DWORD *)(v261 + 4LL * (HIBYTE(v290) ^ 6)) ^ 0x7462B151 ^ (v295 + 99788384 - ((2 * v295) & 0xBE54CC0)),  28);
  int v299 = (v297 + 99788384 - ((2 * v297) & 0xBE54CC0)) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v287) ^ 0xD2));
  unsigned int v300 = (v299 - 226708020 - ((2 * v299) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v290 ^ 0x4C)];
  int v301 = *(_DWORD *)&v257[4 * (BYTE2(v289) ^ 0x1B)];
  HIDWORD(v260) = v301 ^ 0xF3F3F3F3;
  LODWORD(v260) = v301 ^ 0xA82D5000;
  int v302 = v260 >> 12;
  unsigned int v303 = v292 - 226708020 - ((2 * v292) & 0xE4F96B98);
  LODWORD(v228) = BYTE1(v287) ^ 0xC0;
  LODWORD(v236) = (_DWORD)v228 - 1734287436 - 2 * (((v287 >> 8) ^ 0xD2CCC0) & 0xB7 ^ (v287 >> 8) & 3);
  int v304 = *(_DWORD *)&v257[4 * (BYTE2(v287) ^ 0xCC)];
  HIDWORD(v260) = v304 ^ 0xF3F3F3F3;
  LODWORD(v260) = v304 ^ 0xA82D5000;
  int v305 = HIDWORD(v538) ^ (v260 >> 12) ^ __ROR4__(v298 ^ 0x78071371, 4);
  unsigned int v306 = v538 ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v288) ^ 0xE)) ^ v302 ^ (v294 + 99788384 - ((2 * v294) & 0xBE54CC0));
  unsigned int v307 = HIDWORD(v534) ^ *(_DWORD *)&v250[4 * (BYTE1(v269) ^ 0x6D)] ^ (v300 - 1734287436 - ((2 * v300) & 0x3141BF68));
  unsigned int v308 = v534 ^ v236 ^ *(_DWORD *)&v251[4 * ((v288 ^ v284) ^ 0xCA)] ^ *(_DWORD *)&v250[4 * (v228 ^ 0x6D)] ^ v303;
  unsigned int v309 = BYTE1(v269) ^ 0x4552953C ^ v307;
  LODWORD(v236) = *(_DWORD *)&v257[4 * BYTE2(v309)];
  HIDWORD(v260) = v236 ^ 0xF3F3F3F3;
  LODWORD(v260) = v236 ^ 0xA82D5000;
  unsigned int v310 = v260 >> 12;
  BYTE1(v288) = BYTE1(v305) ^ 0xE7;
  int v311 = *(_DWORD *)&v257[4 * ((v305 ^ 0x99FEE750) >> 16)];
  HIDWORD(v260) = v311 ^ 0xF3F3F3F3;
  LODWORD(v260) = v311 ^ 0xA82D5000;
  int v312 = (BYTE1(v309) - 1734287436 - ((v309 >> 7) & 0x168)) ^ *(_DWORD *)&v251[4 * (v306 ^ 0x72)] ^ *(_DWORD *)&v250[4 * (BYTE1(v309) ^ 0x6D)] ^ ((v260 >> 12) - 226708020 - ((2 * (v260 >> 12)) & 0xE4F96B98));
  int v313 = *(_DWORD *)&v257[4 * (BYTE2(v308) ^ 2)];
  HIDWORD(v260) = v313 ^ 0xF3F3F3F3;
  LODWORD(v260) = v313 ^ 0xA82D5000;
  int v314 = *(_DWORD *)&v251[4 * v309] ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v306) ^ 0xA7)) ^ (v260 >> 12) ^ 0xF78E13AC;
  int v315 = *(_DWORD *)&v257[4 * (BYTE2(v306) ^ 0x3B)];
  HIDWORD(v260) = v315 ^ 0xF3F3F3F3;
  LODWORD(v260) = v315 ^ 0xA82D5000;
  LODWORD(v236) = HIDWORD(v529) ^ ((BYTE1(v308) ^ 0xD9) - 1734287436 - ((2 * ((v308 >> 8) ^ 0x9802D9)) & 0x168)) ^ *(_DWORD *)&v251[4 * (v305 ^ 0x1E)] ^ *(_DWORD *)&v250[4 * (BYTE1(v308) ^ 0xB4)] ^ (v260 >> 12) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v307) ^ 0x61));
  unsigned int v316 = v529 ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v308) ^ 0x98)) ^ (v312 + 99788384 - ((2 * v312) & 0xBE54CC0));
  int v317 = v314 - 1734287436 - ((2 * v314) & 0x3141BF68);
  int v318 = HIDWORD(v524) ^ *(_DWORD *)&v251[4 * (v308 ^ 0x3D)] ^ ((BYTE1(v306) ^ 0x29)
                                                                               - 1734287436
                                                                               - ((2 * ((v306 >> 8) ^ 0xA73B29)) & 0x168)) ^ *(_DWORD *)(v261 + 4LL * ((v305 ^ 0x99FEE750) >> 24)) ^ *(_DWORD *)&v250[4 * (BYTE1(v306) ^ 0x44)];
  int v319 = *(_DWORD *)&v257[4 * (BYTE2(v236) ^ 0xC7)];
  HIDWORD(v260) = v319 ^ 0xF3F3F3F3;
  LODWORD(v260) = v319 ^ 0xA82D5000;
  int v320 = v260 >> 12;
  unsigned int v321 = v318 ^ v310;
  int v322 = *(_DWORD *)&v257[4 * (((v318 ^ v310) >> 16) ^ 0x66)];
  unsigned int v323 = v524 ^ *(_DWORD *)&v250[4 * (BYTE1(v288) ^ 0x6D)] ^ v317;
  HIDWORD(v260) = v322 ^ 0xF3F3F3F3;
  LODWORD(v260) = v322 ^ 0xA82D5000;
  unsigned int v324 = ((v318 ^ v310) >> 8) ^ 0x2266EC;
  int v325 = v324;
  int v326 = v324 - 1734287436 - ((2 * v324) & 0x168);
  LOBYTE(v228) = v236 ^ 0xC4;
  int v327 = *(_DWORD *)&v251[4 * ((v323 ^ BYTE1(v288)) ^ 0x41)] ^ (((unsigned __int16)(v236 ^ 0xDCC4) >> 8)
                                                                               - 1734287436
                                                                               - (((v236 ^ 0x2FBDDCC4) >> 7) & 0x168)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v236 ^ 0xDCC4) >> 8) ^ 0x6D)] ^ ((v260 >> 12) - 226708020 - ((2 * (v260 >> 12)) & 0xE4F96B98));
  int v328 = *(_DWORD *)&v257[4 * (BYTE2(v323) ^ 0x81)];
  HIDWORD(v260) = v328 ^ 0xF3F3F3F3;
  LODWORD(v260) = v328 ^ 0xA82D5000;
  LODWORD(v236) = ((v260 >> 12) + 99788384 - ((2 * (v260 >> 12)) & 0xBE54CC0)) ^ *(_DWORD *)(v261
                                                                                           + 4LL
                                                                                           * ((v236 ^ 0x2FBDDCC4) >> 24));
  LODWORD(v236) = (v236 - 226708020 - ((2 * v236) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v321 ^ 0xA9)];
  unsigned int v329 = ((BYTE1(v323) ^ 0xA0) - 1734287436 - 2 * (((v323 >> 8) ^ 0x6881A0) & 0xBD ^ (v323 >> 8) & 9)) ^ (v320 - 226708020 - ((2 * v320) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v316 ^ 0xFC)];
  int v330 = *(_DWORD *)&v250[4 * (BYTE1(v323) ^ 0xCD)];
  unsigned int v331 = *(_DWORD *)&v257[4 * (BYTE2(v316) ^ 0xC6)];
  LODWORD(v260) = __ROR4__((v331 >> 12) ^ 0x2675FF7, 17) ^ 0xEE910136;
  HIDWORD(v260) = v260;
  int v332 = (v329 ^ v330) + 99788384 - ((2 * (v329 ^ v330)) & 0xBE54CC0);
  unsigned int v333 = a17 ^ v571 ^ *(_DWORD *)&v250[4 * (BYTE1(v316) ^ 0x75)] ^ (v236 - 1734287436 - ((2 * v236) & 0x3141BF68));
  unsigned int v334 = v518 ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v321) ^ 0x22)) ^ v332;
  int v335 = HIDWORD(v514) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v316) ^ 0x5A)) ^ (v327 + 99788384 - ((2 * v327) & 0xBE54CC0));
  unsigned int v336 = v514 ^ v326 ^ *(_DWORD *)&v251[4 * v228] ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v323) ^ 0x68)) ^ *(_DWORD *)&v250[4 * (v325 ^ 0x6D)] ^ ((v260 >> 15) + (v331 << 20));
  int v337 = ((BYTE1(v333) ^ 0x9D) - 1734287436 - ((2 * ((v333 >> 8) ^ 0xC2489D)) & 0x168)) ^ *(_DWORD *)&v250[4 * (BYTE1(v333) ^ 0xF0)];
  unsigned int v338 = *(_DWORD *)&v257[4 * (BYTE2(v334) ^ 0x8F)];
  unsigned int v339 = *(_DWORD *)&v251[4 * (v336 ^ 0x26)] ^ (v338 << 20) ^ (v338 >> 12) ^ 0x3F3A82D5 ^ (v337 - 226708020 - ((2 * v337) & 0xE4F96B98));
  LODWORD(v236) = *(_DWORD *)&v257[4 * ((v335 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v260) = v236 ^ 0xF3F3F3F3;
  LODWORD(v260) = v236 ^ 0xA82D5000;
  LODWORD(v236) = ((v260 >> 12) - 226708020 - ((2 * (v260 >> 12)) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * ((v333 ^ BYTE1(v316)) ^ 0x3F)];
  int v340 = v339 + 99788384 - ((2 * v339) & 0xBE54CC0);
  int v341 = v236 + 99788384 - ((2 * v236) & 0xBE54CC0);
  int v342 = BYTE1(v334) ^ 0xD9;
  LODWORD(v236) = v342 - 1734287436 - ((2 * ((v334 >> 8) ^ 0xC78FD9)) & 0x168);
  int v343 = *(_DWORD *)&v257[4 * (BYTE2(v333) ^ 0x48)];
  HIDWORD(v260) = v343 ^ 0xF3F3F3F3;
  LODWORD(v260) = v343 ^ 0xA82D5000;
  int v344 = *(_DWORD *)&v257[4 * (BYTE2(v336) ^ 0x35)];
  int v345 = ((BYTE1(v336) ^ 0x73) - 1734287436 - ((2 * ((v336 >> 8) ^ 0xEE3573)) & 0x168)) ^ *(_DWORD *)&v251[4 * (v335 ^ 0xCC)] ^ *(_DWORD *)&v250[4 * (BYTE1(v336) ^ 0x1E)] ^ ((v260 >> 12) - 226708020 - ((2 * (v260 >> 12)) & 0xE4F96B98));
  HIDWORD(v260) = v344 ^ 0xF3F3F3F3;
  LODWORD(v260) = v344 ^ 0xA82D5000;
  unsigned int v346 = HIDWORD(v507) ^ (((unsigned __int16)(v335 ^ 0xD782) >> 8)
                        - 1734287436
                        - (((v335 ^ 0xCFB8D782) >> 7) & 0x168)) ^ *(_DWORD *)&v251[4 * (v334 ^ 0x50)] ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v335 ^ 0xD782) >> 8) ^ 0x6D)] ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v333) ^ 0xC2)) ^ (v260 >> 12);
  unsigned int v347 = v507 ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v334) ^ 0xC7)) ^ (v345 + 99788384 - ((2 * v345) & 0xBE54CC0));
  unsigned int v348 = v215 ^ v428 ^ *(_DWORD *)(v261 + 4LL * ((v335 ^ 0xCFB8D782) >> 24)) ^ v340;
  unsigned int v349 = v501 ^ v236 ^ *(_DWORD *)&v250[4 * (v342 ^ 0x6D)] ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v336) ^ 0xEE)) ^ v341;
  unsigned int v350 = (((unsigned __int16)(v349 ^ 0xCCA2) >> 8) - 1734287436 - (((v349 ^ 0x33C8CCA2) >> 7) & 0x168)) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v349 ^ 0xCCA2) >> 8) ^ 0x6D)];
  int v351 = *(_DWORD *)&v257[4 * (BYTE2(v347) ^ 0xE6)];
  HIDWORD(v260) = v351 ^ 0xF3F3F3F3;
  LODWORD(v260) = v351 ^ 0xA82D5000;
  int v352 = v260 >> 12;
  int v353 = *(_DWORD *)&v257[4 * (BYTE2(v348) ^ 0x1C)];
  HIDWORD(v260) = v353 ^ 0xF3F3F3F3;
  LODWORD(v260) = v353 ^ 0xA82D5000;
  int v354 = (v260 >> 12) ^ *(_DWORD *)&v250[4 * (BYTE1(v347) ^ 0xD9)] ^ ((BYTE1(v347) ^ 0xB4)
                                                                    - 1734287436
                                                                    - 2
                                                                    * (((v347 >> 8) ^ 0x4FE6B4) & 0xBC ^ (v347 >> 8) & 8));
  unsigned int v355 = (v354 - 226708020 - ((2 * v354) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v346 ^ 0x46)];
  unsigned int v356 = (v350 - 226708020 - ((2 * v350) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4
                                                                         * ((v215 ^ v428 ^ *(_BYTE *)(v261 + 4LL * ((v335 ^ 0xCFB8D782) >> 24)) ^ v340) ^ 0x3A)];
  unsigned int v357 = *(_DWORD *)&v251[4 * (v349 ^ 0xA2)] ^ (((unsigned __int16)(v346 ^ 0x746) >> 8)
                                                               - 1734287436
                                                               + (~((v346 ^ 0xEEBD0746) >> 7) | 0xFFFFFE97)
                                                               + 1) ^ *(_DWORD *)&v250[4
                                                                                     * (((unsigned __int16)(v346 ^ 0x746) >> 8) ^ 0x6D)] ^ (v352 - 226708020 - ((2 * v352) & 0xE4F96B98));
  int v358 = *(_DWORD *)&v251[4 * (v347 ^ 0x96)];
  HIDWORD(v260) = v358 ^ 0x127CB5CC;
  LODWORD(v260) = ~v358;
  HIDWORD(v260) = (v260 >> 29) ^ 0x6615DA09;
  LODWORD(v260) = HIDWORD(v260);
  int v359 = (v260 >> 3) - 1734287436 - ((2 * (v260 >> 3)) & 0x3141BF68);
  LODWORD(v236) = *(_DWORD *)&v257[4 * ((v346 ^ 0xEEBD0746) >> 16)];
  HIDWORD(v260) = v236 ^ 0xF3F3F3F3;
  LODWORD(v260) = v236 ^ 0xA82D5000;
  LODWORD(v236) = v260 >> 12;
  int v360 = *(_DWORD *)&v257[4 * ((v349 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v260) = v360 ^ 0xF3F3F3F3;
  LODWORD(v260) = v360 ^ 0xA82D5000;
  unsigned int v361 = HIDWORD(v495) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v349) ^ 0x17)) ^ (v355 + 99788384 - ((2 * v355) & 0xBE54CC0));
  int v362 = BYTE1(v348);
  int v363 = v359 ^ *(_DWORD *)&v250[4 * (BYTE1(v348) ^ 0xD1)] ^ (v260 >> 12);
  unsigned int v364 = *(_DWORD *)(v261 + 4LL * (HIBYTE(v346) ^ 0xCA)) ^ v568 ^ (v363 + 99788384 - ((2 * v363) & 0xBE54CC0));
  int v365 = v495 ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v347) ^ 0x4F)) ^ v236;
  unsigned int v366 = HIDWORD(v489) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v348) ^ 0x1B)) ^ (v357 + 99788384 - ((2 * v357) & 0xBE54CC0));
  LODWORD(v236) = *(_DWORD *)&v257[4 * (BYTE2(v366) ^ 0x7E)];
  HIDWORD(v260) = v236 ^ 0xF3F3F3F3;
  LODWORD(v260) = v236 ^ 0xA82D5000;
  int v367 = v260 >> 12;
  unsigned int v368 = v365 ^ (v356 + 99788384 - ((2 * v356) & 0xBE54CC0));
  int v369 = *(_DWORD *)&v257[4 * (BYTE2(v368) ^ 1)];
  HIDWORD(v260) = v369 ^ 0xF3F3F3F3;
  LODWORD(v260) = v369 ^ 0xA82D5000;
  int v370 = ((v260 >> 12) - 226708020 - ((2 * (v260 >> 12)) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4
                                                                                         * (v361 ^ 0xC6)];
  LODWORD(v236) = ((BYTE1(v361) ^ 0x71) - 1734287436 - 2 * (((v361 >> 8) ^ 0xF25B71) & 0xBC ^ (v361 >> 8) & 8)) ^ *(_DWORD *)&v250[4 * (BYTE1(v361) ^ 0x1C)];
  LODWORD(v236) = (v236 + 99788384 - ((2 * v236) & 0xBE54CC0)) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v368) ^ 0x1F));
  int v371 = *(_DWORD *)&v257[4 * (BYTE2(v361) ^ 0x5B)];
  HIDWORD(v260) = v371 ^ 0xF3F3F3F3;
  LODWORD(v260) = v371 ^ 0xA82D5000;
  int v372 = v260 >> 12;
  unsigned int v373 = v362 ^ 0x73F4E0AF ^ v364;
  int v374 = *(_DWORD *)&v257[4 * BYTE2(v373)];
  HIDWORD(v260) = v374 ^ 0xF3F3F3F3;
  LODWORD(v260) = v374 ^ 0xA82D5000;
  int v375 = v260 >> 12;
  HIDWORD(v260) = v367 ^ ((BYTE1(v368) ^ 0x81) - 1734287436 - ((2 * ((v368 >> 8) ^ 0x1F0181)) & 0x168)) ^ 0xD678EAEF ^ *(_DWORD *)&v250[4 * (BYTE1(v368) ^ 0xEC)];
  LODWORD(v260) = HIDWORD(v260);
  LODWORD(v260) = (v260 >> 11) ^ __ROR4__(*(_DWORD *)(v261 + 4LL * (HIBYTE(v361) ^ 0xF2)) ^ 0xA7E8FDDE, 11) ^ 0xD490839A;
  HIDWORD(v260) = v260;
  unsigned int v376 = v489 ^ *(_DWORD *)&v251[4 * (v368 ^ 0xB8)] ^ ((BYTE1(v366) ^ 0xAA)
                                                                      - 1734287436
                                                                      - ((2 * ((v366 >> 8) ^ 0x967EAA)) & 0x168)) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v364) ^ 0x57)) ^ v372 ^ *(_DWORD *)&v250[4 * (BYTE1(v366) ^ 0xC7)];
  unsigned int v377 = HIDWORD(v484) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v366) ^ 0x96)) ^ (BYTE1(v373)
                                                                          - 1734287436
                                                                          - ((v373 >> 7) & 0x168)) ^ *(_DWORD *)&v250[4 * (BYTE1(v373) ^ 0x6D)] ^ (v370 + 99788384 - ((2 * v370) & 0xBE54CC0));
  unsigned int v378 = v484 ^ *(_DWORD *)&v251[4 * (v366 ^ 0x88)] ^ v375 ^ (v236
                                                                             - 226708020
                                                                             - ((2 * v236) & 0xE4F96B98));
  unsigned int v379 = HIDWORD(v479) ^ *(_DWORD *)&v251[4 * (v362 ^ 0xAF ^ v364)] ^ ((v260 >> 21) - 226708020 - ((2 * (v260 >> 21)) & 0xE4F96B98));
  int v380 = *(_DWORD *)&v257[4 * (BYTE2(v376) ^ 0x65)];
  BYTE2(v236) = BYTE2(v378) ^ 0x4A;
  HIDWORD(v260) = v380 ^ 0xF3F3F3F3;
  LODWORD(v260) = v380 ^ 0xA82D5000;
  int v381 = v260 >> 12;
  int v382 = *(_DWORD *)&v250[4 * (BYTE1(v377) ^ 0x96)] ^ ((BYTE1(v377) ^ 0xFB)
                                                     - 1734287436
                                                     - ((2 * ((v377 >> 8) ^ 0x3EA2FB)) & 0x168));
  int v383 = *(_DWORD *)&v257[4 * (BYTE2(v377) ^ 0xA2)];
  unsigned int v384 = (v382 - 226708020 - ((2 * v382) & 0xE4F96B98)) ^ *(_DWORD *)&v251[4 * (v378 ^ 0x75)];
  HIDWORD(v260) = v383 ^ 0xF3F3F3F3;
  LODWORD(v260) = v383 ^ 0xA82D5000;
  int v385 = (((unsigned __int16)(v378 ^ 0xF075) >> 8) - 1734287436 - (((v378 ^ 0xB54AF075) >> 7) & 0x168)) ^ (v260 >> 12) ^ *(_DWORD *)&v250[4 * (((unsigned __int16)(v378 ^ 0xF075) >> 8) ^ 0x6D)];
  int v386 = (v385 + 99788384 - ((2 * v385) & 0xBE54CC0)) ^ *(_DWORD *)(v261 + 4LL * (HIBYTE(v379) ^ 0xED));
  int v387 = *(_DWORD *)(v261 + 4LL * (HIBYTE(v378) ^ 0x91));
  int v388 = *(_DWORD *)(v261 + 4LL * (HIBYTE(v377) ^ 0x3E));
  int v389 = *(_DWORD *)(v261 + 4LL * (HIBYTE(v376) ^ 0x30));
  v379 ^= 0xC9AF1D8F;
  LODWORD(v261) = *(_DWORD *)&v251[4 * v379];
  unsigned int v390 = *(_DWORD *)&v257[4 * BYTE2(v379)];
  LODWORD(v257) = *(_DWORD *)&v257[4 * BYTE2(v236)];
  HIDWORD(v260) = v257 ^ 0xF3F3F3F3;
  LODWORD(v260) = v257 ^ 0xA82D5000;
  unsigned int v391 = v479 ^ *(_DWORD *)&v251[4 * (v377 ^ 0x9A)] ^ v381 ^ v387 ^ (BYTE1(v379)
                                                                                    - 1734287436
                                                                                    - ((v379 >> 7) & 0x168)) ^ *(_DWORD *)&v250[4 * (BYTE1(v379) ^ 0x6D)];
  LODWORD(v261) = HIDWORD(v474) ^ ((BYTE1(v376) ^ 0xD3) - 1734287436 - ((2 * ((v376 >> 8) ^ 0x3065D3)) & 0x168)) ^ v388 ^ *(_DWORD *)&v250[4 * (BYTE1(v376) ^ 0xBE)] ^ v261 ^ (v260 >> 12);
  unsigned int v392 = v474 ^ *(_DWORD *)&v251[4 * (v376 ^ 0xC3)] ^ (v386 - 226708020 - ((2 * v386) & 0xE4F96B98));
  LODWORD(v250) = HIDWORD(v444) ^ v573 ^ v389 ^ (v390 >> 12) ^ (v390 << 20) ^ (v384 + 99788384 - ((2 * v384) & 0xBE54CC0));
  uint64_t v393 = *(unsigned int *)(v54 - 128);
  v394 = (char *)*(&off_10090D690 + (int)v393 - 890) - 12;
  v395 = (char *)*(&off_10090D690 + SHIDWORD(v456)) - 8;
  int v396 = *(_DWORD *)&v395[4
                        * (((unsigned __int16)(WORD2(v444) ^ v573 ^ v389 ^ (v390 >> 12) ^ (v384 - 22944 - ((2 * v384) & 0x4CC0))) >> 8) ^ 0xA1)] ^ *(_DWORD *)&v394[4 * (v392 ^ 7)];
  LODWORD(v257) = *(_DWORD *)&v395[4 * (BYTE1(v391) ^ 0x62)];
  int v397 = *(_DWORD *)&v395[4 * ((unsigned __int16)(v392 ^ 0x6F07) >> 8)];
  int v398 = *(_DWORD *)&v395[4 * (BYTE1(v261) ^ 1)];
  LODWORD(v395) = v396 ^ 0x26F63AE5;
  LODWORD(v236) = (v396 ^ 0x26F63AE5) & 0x6A465CBE ^ v396 & 8;
  v399 = (char *)*(&off_10090D690 + (int)v456) - 12;
  int v400 = *(_DWORD *)&v399[4 * (HIBYTE(v392) ^ 0xEF)];
  int v401 = *(_DWORD *)&v399[4 * (BYTE3(v261) ^ 0x47)];
  LODWORD(v251) = *(_DWORD *)&v399[4 * ((v250 >> 24) ^ 0xA2)];
  LODWORD(v395) = (_DWORD)v395 + 1782996150 - 2 * v236;
  LODWORD(v236) = *(_DWORD *)&v399[4 * (HIBYTE(v391) ^ 0xC6)];
  v402 = (char *)*(&off_10090D690 + (int)v393 - 1037) - 8;
  LODWORD(v399) = *(_DWORD *)&v402[4 * (BYTE2(v250) ^ 0x86)];
  LODWORD(v228) = *(_DWORD *)&v402[4 * (BYTE2(v392) ^ 0x2A)];
  int v403 = *(_DWORD *)&v402[4 * (BYTE2(v261) ^ 0xAB)];
  LODWORD(v395) = (v395 ^ v401) - 285236152 - ((2 * (v395 ^ v401)) & 0xDDFF4890);
  int v404 = *(_DWORD *)&v394[4 * (v391 ^ 0x70)];
  LODWORD(v261) = *(_DWORD *)&v394[4 * (v261 ^ 0x43)];
  LODWORD(v395) = *(_DWORD *)&v402[4 * (BYTE2(v391) ^ 5)] ^ v395;
  uint64_t v405 = *(unsigned int *)&v394[4 * (v250 ^ 0xE)];
  uint64_t v406 = *(_DWORD *)(v54 - 148) ^ v565 ^ ((_DWORD)v395 - ((2 * (_DWORD)v395) & 0x563D9664) - 1424045262);
  v407 = (char *)*(&off_10090D690 + (int)v393 - 849) - 12;
  *(_BYTE *)(*(void *)(v54 - 120) + 8LL) = v407[BYTE3(v406) ^ 0xD7LL] ^ 1;
  LODWORD(v395) = ((v399 ^ 0xAD993CCB ^ v397)
                 + 1782996150
                 - ((2 * (v399 ^ 0xAD993CCB ^ v397)) & 0xD48CB96C)) ^ v236;
  LODWORD(v395) = ((_DWORD)v395 + 1703977574 - ((2 * (_DWORD)v395) & 0xCB2144CC)) ^ v261;
  LODWORD(v395) = *(_DWORD *)(v54 - 144) ^ HIDWORD(v565) ^ ((_DWORD)v395 - ((2 * (_DWORD)v395) & 0x25432A3A) + 312579357);
  v408 = (char *)*(&off_10090D690 + (int)v393 - 985) - 4;
  *(_BYTE *)(*(void *)(v54 - 120) + *(void *)(v54 - 2swift_release(*(void *)(v0 + 32)) = (v408[v395 ^ 0xC7LL] - 108) ^ 0x5F;
  v409 = (char *)*(&off_10090D690 + SHIDWORD(v451)) - 12;
  LODWORD(v236) = v409[BYTE1(v395) ^ 0x13LL];
  HIDWORD(v260) = v236 ^ 9;
  LODWORD(v260) = (_DWORD)v236 << 24;
  *(_BYTE *)(*(void *)(v54 - 120) + 6LL) = (v260 >> 30) ^ 0x40;
  LODWORD(v236) = v404 ^ 0x8B6F062E ^ v228;
  uint64_t v410 = *(void *)(v54 - 120);
  LODWORD(v236) = (v236 + 1782996150 - ((2 * v236) & 0xD48CB96C)) ^ v251;
  LODWORD(v236) = (v236 - ((2 * v236) & 0x86CD3106) + 1130797187) ^ v398;
  uint64_t v411 = *(_DWORD *)(v54 - 140) ^ HIDWORD(v566) ^ (v236 - ((2 * (_DWORD)v236) & 0x5C1EA72E) + 772756375);
  LODWORD(v236) = v409[BYTE1(v411)];
  HIDWORD(v260) = v236 ^ 9;
  LODWORD(v260) = (_DWORD)v236 << 24;
  *(_BYTE *)(v410 + *(void *)(v54 - 2swift_bridgeObjectRelease(*(void *)(v0 + 24)) = (v260 >> 30) ^ 0x7E;
  v412 = (char *)*(&off_10090D690 + (int)v451) - 8;
  *(_BYTE *)(v410 + 9) = v412[BYTE2(v406) ^ 0xFBLL] ^ 0x5B;
  LODWORD(v257) = ((v257 ^ 0x2920C435 ^ v400)
                 - 285236152
                 - ((2 * (v257 ^ 0x2920C435 ^ v400)) & 0xDDFF4890)) ^ v403;
  LODWORD(v257) = v405 ^ ((_DWORD)v257 + 1703977574 - ((2 * (_DWORD)v257) & 0xCB2144CC));
  LODWORD(v257) = *(_DWORD *)(v54 - 136) ^ v566 ^ ((_DWORD)v257 - ((2 * (_DWORD)v257) & 0xCE23C394) + 1729225162);
  *(_BYTE *)(v410 + *(void *)(v54 - 200)) = v412[BYTE2(v257) ^ 0xB8LL] ^ 0x88;
  *(_BYTE *)(v410 + *(void *)(v54 - 256)) = (v408[v406 ^ 0x1BLL] - 108) ^ 0x7D;
  *(_BYTE *)(v410 + *(void *)(v54 - 2sub_100402A84(*(void *)(v0 + 32), *(void *)(v0 + 40)) = v412[BYTE2(v395) ^ 3LL] ^ 0xF6;
  *(_BYTE *)(v410 + *(void *)(v54 - 192)) = v407[(v395 >> 24) ^ 0x6DLL] ^ 0xF9;
  LODWORD(v395) = v409[BYTE1(v406) ^ 0x92LL];
  HIDWORD(v260) = v395 ^ 9;
  LODWORD(v260) = (_DWORD)v395 << 24;
  *(_BYTE *)(v410 + *(void *)(v54 - 168)) = (v260 >> 30) ^ 0xD2;
  uint64_t v413 = *(void *)(v54 - 208);
  *(_BYTE *)(v410 + v413) = v407[BYTE3(v411) ^ 0x53LL] ^ 0x15;
  *(_BYTE *)(v410 + *(void *)(v54 - 184)) = (v408[v411 ^ 0x95LL] - 108) ^ 0xAF;
  *(_BYTE *)(v410 + *(void *)(v54 - 248)) = (v408[v257 ^ 0x64LL] - 108) ^ 0x27;
  *(_BYTE *)(v410 + *(void *)(v54 - 176)) = v407[(v257 >> 24) ^ 0x6ELL] ^ 0x83;
  LODWORD(v395) = v409[BYTE1(v257) ^ 0x1FLL];
  HIDWORD(v260) = v395 ^ 9;
  LODWORD(v260) = (_DWORD)v395 << 24;
  *(_BYTE *)(v410 + *(void *)(v54 - 2swift_errorRelease(*(void *)(v0 + 16)) = (v260 >> 30) ^ 0x58;
  *(_BYTE *)(v410 + *(void *)(v54 - 160)) = v412[BYTE2(v411) ^ 0xC8LL] ^ 0xD9;
  uint64_t v414 = (_DWORD)v413 - 1237381207 - 2 * (((_DWORD)v413 + 16) & 0x363F0F9Fu);
  return ((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, unint64_t, uint64_t))(*(void *)(a50 + 8LL * ((1179 * ((v414 ^ 0xB63F0F99) < v467)) ^ ((int)v393 - 584))) - 8LL))( v406,  v411,  v412,  v414,  3407955148LL,  v405,  v393,  4009731144LL,  a2,  v416,  v417,  v418,  v419,  v422,  v423,  v425,  v428,  v432,  v434,  v436,  v438,  v441,  v444,  a17,  a18,  a19,  v451,  v456,  v460,  v467,  v474,  v479,  v484,  v489,  v495,  v501,  v507,  v514,  v518,  v524,  v529,  v534,  v538,  v542,  v547,  v552,  v556,  v558,  v560,
           v562,
           v563,
           v564,
           v565,
           v566);
}

void sub_100535780( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61)
{
  *(_DWORD *)(v61 - 136) = a58 ^ 0xBC23BAE6;
  *(_DWORD *)(v61 - 148) = a60 ^ 0x1047AA9D;
  *(_DWORD *)(v61 - 140) = a61 ^ 0x5A199A6F;
  *(_DWORD *)(v61 - 144) = a59 ^ 0xEBFD0A01;
  JUMPOUT(0x100533B1CLL);
}

uint64_t sub_1005357D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, int a25, uint64_t a26, int a27, int a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  BOOL v60 = ((a59 + 200455802) ^ (a25 - (a28 & 0x4810AA62) + 292003090) ^ (97 * (a59 ^ 0x581)))
      + ((2 * (a25 - (a28 & 0x4810AA62) + 292003090)) & 0x5FF5DFDC ^ 0x48108A40) == 804974574;
  return (*(uint64_t (**)(void))(v59 + 8LL * (((2 * v60) | (8 * v60)) ^ a59)))();
}

uint64_t sub_10053589C()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1932 * (v0 - 804974574 >= (((v1 - 282) | 0x200) ^ 0x201u))) ^ v1))
                            - 211 * (v1 ^ 0x126u)
                            + 1047LL))();
}

uint64_t sub_100535918(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8LL
                              * ((30 * (v3 + a1 + ((3 * (a3 ^ 0x268)) ^ (v4 + 273)) > 0xFFFFFFEF)) ^ a3)))();
}

uint64_t sub_10053595C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v13 = (a7 + v10);
  unint64_t v14 = v13 + v12 + 1;
  uint64_t v15 = ((_BYTE)a7 + (_BYTE)v10) & 0xF;
  uint64_t v16 = v15 - v13;
  unint64_t v17 = v7 + v16;
  ++v15;
  unint64_t v18 = v7 + v15;
  unint64_t v19 = v8 + v16;
  unint64_t v20 = v8 + v15;
  unint64_t v21 = v9 + v16;
  unint64_t v22 = v9 + v15;
  BOOL v24 = v18 > v12 && v17 < v14;
  if (v20 > v12 && v19 < v14) {
    BOOL v24 = 1;
  }
  int v27 = v22 > v12 && v21 < v14 || v24;
  return ((uint64_t (*)(void))(*(void *)(v11 + 8LL * ((123 * (v27 ^ 1)) ^ a5)) - 8LL))();
}

uint64_t sub_1005359D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6
                                                             + 8LL
                                                             * (((((v5 < 0x10) ^ (((a5 - 35) | 0x99)
                                                                                                 - 88)) & 1)
                                                               * (((a5 + 477) | 0x99) + 767)) ^ ((a5 + 477) | 0x99))))( a1,  a2,  0LL);
}

uint64_t sub_100535A0C( int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  v71.val[1].i64[0] = ((_BYTE)a2 + 11) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)a2 + 10) & 0xF;
  v71.val[2].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v71.val[2].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v71.val[3].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v72.val[0].i64[0] = ((_BYTE)a2 + 5) & 0xF;
  v72.val[0].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  unsigned int v64 = v61 + a1 + v62;
  v72.val[1].i64[0] = ((_BYTE)a2 + 3) & 0xF;
  v72.val[1].i64[1] = (a2 + 2) & 0xF;
  v72.val[2].i64[0] = ((_BYTE)a2 + 1) & 0xF;
  v72.val[2].i64[1] = a2 & 0xF;
  v72.val[3].i64[0] = (a2 - 1) & 0xF;
  v72.val[3].i64[1] = (a2 + 14) & 0xF;
  v65.i64[0] = 0x505050505050505LL;
  v65.i64[1] = 0x505050505050505LL;
  v66.i64[0] = 0x9898989898989898LL;
  v66.i64[1] = 0x9898989898989898LL;
  v71.val[0].i64[0] = v64 & 0xF;
  v71.val[0].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v67.i64[0] = vqtbl4q_s8(v71, (int8x16_t)xmmword_10071E3B0).u64[0];
  v67.i64[1] = vqtbl4q_s8(v72, (int8x16_t)xmmword_10071E3B0).u64[0];
  int8x16_t v68 = vrev64q_s8( veorq_s8( veorq_s8(*(int8x16_t *)(v63 - 15 + v64), *(int8x16_t *)(v57 + v71.val[0].i64[0] - 15)),  veorq_s8(*(int8x16_t *)(v58 + v71.val[0].i64[0] - 15), *(int8x16_t *)(v59 + v71.val[0].i64[0] - 15))));
  int8x16_t v69 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v68, v68, 8uLL), v66), vmulq_s8(v67, v65)));
  *(int8x16_t *)(v63 - 15 + v64) = vextq_s8(v69, v69, 8uLL);
}

void sub_100535B74()
{
}

uint64_t sub_100535B80(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
}

uint64_t sub_100535BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8LL
                                                                      * ((400
                                                                        * (((a7 + 56) ^ ((((a7 + 534) ^ 0x417) & v7) == 0)) & 1)) ^ a7)))( a1,  a2,  a3,  (a2 - a3));
}

uint64_t sub_100535C04( int a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(v64 - 128) = v60;
  int v66 = (a5 - 585) & v60;
  int v67 = -a3;
  *(_DWORD *)(v64 - 136) = v66;
  char v68 = v62 + a1 + v61;
  uint64_t v69 = (v67 + v62 + a1 + v63);
  v71.val[0].i64[0] = ((_BYTE)v67 + (_BYTE)v62 + (_BYTE)a1 + (_BYTE)v63) & 0xF;
  v71.val[0].i64[1] = ((_BYTE)v67 + v68 + 36) & 0xF;
  v71.val[1].i64[0] = ((_BYTE)v67 + v68 + (((_BYTE)a5 - 70) & 0x27)) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)v67 + v68 + 34) & 0xF;
  v71.val[2].i64[0] = ((_BYTE)v67 + v68 + 33) & 0xF;
  v71.val[2].i64[1] = ((_BYTE)v67 + v68 + 32) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)v67 + v68 + 31) & 0xF;
  v71.val[3].i64[1] = ((_BYTE)v67 + v68 + 30) & 0xF;
  *(int8x8_t *)(v65 - 7 + v69) = vrev64_s8( veor_s8( veor_s8( vrev64_s8( veor_s8( veor_s8(*(int8x8_t *)(v65 - 7 + v69), *(int8x8_t *)(v57 + (v69 & 0xF) - 7)),  veor_s8( *(int8x8_t *)(v58 + (v69 & 0xF) - 7),  *(int8x8_t *)(v59 + (v69 & 0xF) - 7)))),  (int8x8_t)0x9898989898989898LL),  vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8(v71, (int8x16_t)xmmword_10071E3C0),  (int8x8_t)0x505050505050505LL)));
  return (*(uint64_t (**)(__n128))(a57 + 8LL * ((126 * (v67 != 8 - v66)) ^ (a5 - 2))))((__n128)xmmword_10071E3C0);
}

void sub_100535D4C()
{
}

uint64_t sub_100535D74()
{
}

uint64_t sub_100535DC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  uint64_t v12 = (a4 - 681732515);
  *(_BYTE *)(v11 + v12) ^= *(_BYTE *)(v7 + (v12 & 0xF)) ^ *(_BYTE *)(v8 + (v12 & 0xF)) ^ *(_BYTE *)(v9 + (v12 & 0xF)) ^ (5 * (v12 & 0xF)) ^ 0x98;
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * ((1003 * (a4 - 1 != v6)) ^ (a6 - 556))) - 8LL))();
}

void sub_100535E2C()
{
  if (v0 == 1628906194) {
    int v1 = -2006430421;
  }
  else {
    int v1 = 2006390515;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_100535E90(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)*(&off_1009094D8 + ((1696 * (*(_DWORD *)(a2 + 4) == 1731329621)) ^ 0x345u) - 1) - 4))();
}

uint64_t sub_100535ED0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x7FFE7BC9)
                       - 1250451464
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x192);
  return 0LL;
}

uint64_t sub_100535F08()
{
  return 4294925278LL;
}

uint64_t sub_100535F10(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1009094D0
                                                    + ((1548 * (*(_DWORD *)(a2 + 4) == 1731329633)) ^ 0x35Au))
                                          - 4))(4294925278LL);
}

uint64_t sub_100535F58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_BYTE *)(*(void *)(a2 + 96) + 448LL) = *(_BYTE *)(*(void *)(a1 + 8) + 12LL);
  return ((uint64_t (*)(void))(*(void *)(v2 + 3464) - 4LL))(0LL);
}

void sub_100535FC4()
{
}

void sub_100535FD0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BR              X13 }

uint64_t sub_100536124()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((50
                                          * ((v0 ^ (v1 + 1496870562) & 0xA6C78ED6 ^ 0x249B556E) != ((v1 - 1091) | 0x421)
                                                                                                 - 1275)) ^ v1))
                            - 4LL))();
}

uint64_t sub_100536190@<X0>(uint64_t a1@<X8>)
{
  BOOL v11 = v7 > 0x2FB40318;
  uint64_t v12 = (v9 - 307265123);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(v1 + v12) ^ *(_BYTE *)(v3 + (v12 & 0xF)) ^ *(_BYTE *)(v4 + (v12 & 0xF)) ^ *(_BYTE *)(v2 + (v12 & 0xF)) ^ (97 * ((v9 - 99) & 0xF)) ^ 0x98;
  unsigned int v13 = ((v6 + 2104968041) & 0x8288BEFB ^ 0xBDFB7A7E) + v9;
  int v14 = v11 ^ (v13 < v5);
  BOOL v15 = v13 < v8;
  if (!v14) {
    BOOL v11 = v15;
  }
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * ((1165 * v11) ^ v6)) - 8LL))();
}

uint64_t sub_100536244()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((105
                                * (((2 * v1) & 0x3DDCF6DE ^ 0x914A6D0)
                                 + (v1 ^ 0xBA752C97)
                                 + (((v0 - 1252) | 0x400) ^ 0x7BF3E938) != v0 + 451044291)) ^ v0)))();
}

uint64_t sub_1005362B0(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8LL
                                   * (((a1 + v3 + 1628538001 < ((a3 + 580) ^ 0x70Cu)) * ((a3 ^ 0x403) - 191)) ^ a3)))();
}

uint64_t sub_100536300( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  BOOL v9 = ((((a7 - 540516309) & 0x20379FF7) - 246) & a8) == ((449 * (a7 ^ 0xC7)) ^ 0x9EEE7C74);
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((v9 | (8 * v9)) ^ a7)) - 8LL))();
}

uint64_t sub_10053635C@<X0>(int a1@<W0>, unsigned int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v10 = (a1 + v8 + a3);
  uint64_t v11 = v10 + v4;
  uint64_t v12 = v10 + a4;
  unint64_t v13 = v11 - v12;
  uint64_t v14 = (a1 + v8) & 0xF;
  unint64_t v15 = v14 + v6 - v12;
  unint64_t v16 = (v14 | v7) - v12;
  unint64_t v17 = (v14 | v5) - v12;
  BOOL v21 = v13 < 0x10 || v15 < (unint64_t)(a2 + 288) - 502 || v16 < 0x10 || v17 < 0x10;
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((19 * ((((a2 + 1566) ^ v21) & 1) == 0)) ^ a2)) - 12LL))();
}

uint64_t sub_1005363D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((14 * (v7 < ((16 * (a7 ^ 0x23D)) ^ 0x3A0))) ^ a7)) - 8LL))();
}

uint64_t sub_10053640C@<X0>( int a1@<W0>, int a2@<W1>, int a3@<W6>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  *(_DWORD *)(v46 - 120) = v43 + 13;
  *(_DWORD *)(v46 - 116) = v43 + 14;
  v54.val[1].i64[0] = ((_BYTE)v43 + 6) & 0xF;
  v54.val[1].i64[1] = ((_BYTE)v43 + 5) & 0xF;
  v54.val[2].i64[0] = ((_BYTE)v43 + 4) & 0xF;
  v54.val[2].i64[1] = ((_BYTE)v43 + 3) & 0xF;
  v54.val[3].i64[0] = ((_BYTE)v43 + 2) & 0xF;
  v54.val[3].i64[1] = ((_BYTE)v43 + 1) & 0xF;
  v55.val[0].i64[0] = v43 & 0xF;
  v55.val[0].i64[1] = ((_BYTE)v43 - 1) & 0xF;
  unsigned int v47 = a2 + a1 + v45 + v42;
  v55.val[1].i64[0] = *(_DWORD *)(v46 - 116) & 0xF;
  v55.val[1].i64[1] = *(_DWORD *)(v46 - 120) & 0xF;
  v55.val[2].i64[0] = ((_BYTE)v43 + 12) & 0xF;
  v55.val[2].i64[1] = ((_BYTE)v43 + 11) & 0xF;
  v55.val[3].i64[0] = ((_BYTE)v43 + 10) & 0xF;
  v55.val[3].i64[1] = ((_BYTE)v43 + 9) & 0xF;
  v48.i64[0] = 0x6161616161616161LL;
  v48.i64[1] = 0x6161616161616161LL;
  v49.i64[0] = 0x9898989898989898LL;
  v49.i64[1] = 0x9898989898989898LL;
  v54.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v45 + (_BYTE)v42) & 0xF;
  v54.val[0].i64[1] = ((_BYTE)v43 + 7) & 0xF;
  v50.i64[0] = vqtbl4q_s8(v54, (int8x16_t)xmmword_10071E3B0).u64[0];
  v50.i64[1] = vqtbl4q_s8(v55, (int8x16_t)xmmword_10071E3B0).u64[0];
  int8x16_t v51 = vrev64q_s8( veorq_s8( veorq_s8(*(int8x16_t *)(v38 - 15 + v47), *(int8x16_t *)(v40 + (v47 & 0xF) - 15)),  veorq_s8(*(int8x16_t *)(v41 + (v47 & 0xF) - 15), *(int8x16_t *)(v39 + (v47 & 0xF) - 15))));
  int8x16_t v52 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v51, v51, 8uLL), v49), vmulq_s8(v50, v48)));
  *(int8x16_t *)(a4 - 15 + v47) = vextq_s8(v52, v52, 8uLL);
  return ((uint64_t (*)(void))(*(void *)(a38 + 8LL
                                              * ((1106 * ((a3 ^ 0x175) - (v44 & 0xFFFFFFF0) == 867)) ^ a3 ^ 0x175u))
                            - 12LL))();
}

void sub_10053658C()
{
}

uint64_t sub_100536594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
}

uint64_t sub_1005365CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
}

uint64_t sub_100536604@<X0>( int a1@<W0>, int a2@<W1>, int a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  int v48 = (a3 - 952) & v44;
  *(_DWORD *)(v47 - 116) = v48;
  uint64_t v49 = (a2 + a1 + v45 + v42 - v46);
  v51.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v45 + (_BYTE)v42 - (_BYTE)v46) & 0xF;
  v51.val[0].i64[1] = (v43 - (_BYTE)v46 + 7) & 0xF;
  v51.val[1].i64[0] = (v43 - (_BYTE)v46 + 6) & 0xF;
  v51.val[1].i64[1] = (v43 - (_BYTE)v46 + 5) & 0xF;
  v51.val[2].i64[0] = (v43 - (_BYTE)v46 + 4) & 0xF;
  v51.val[2].i64[1] = (v43 - (_BYTE)v46 + 3) & 0xF;
  v51.val[3].i64[0] = (v43 - (_BYTE)v46 + 2 * ((_BYTE)a3 - 111)) & 0xF;
  v51.val[3].i64[1] = (v43 - (_BYTE)v46 + 1) & 0xF;
  *(int8x8_t *)(a4 - 7 + v49) = vrev64_s8( veor_s8( veor_s8( vrev64_s8( veor_s8( veor_s8(*(int8x8_t *)(v38 - 7 + v49), *(int8x8_t *)(v40 + (v49 & 0xF) - 7)),  veor_s8( *(int8x8_t *)(v41 + (v49 & 0xF) - 7),  *(int8x8_t *)(v39 + (v49 & 0xF) - 7)))),  (int8x8_t)0x9898989898989898LL),  vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8(v51, (int8x16_t)xmmword_10071E3C0),  (int8x8_t)0x6161616161616161LL)));
  return ((uint64_t (*)(__n128))(*(void *)(a38 + 8LL * ((241 * (-v46 != 8 - v48)) ^ (a3 - 111))) - 12LL))((__n128)xmmword_10071E3C0);
}

void sub_10053672C()
{
}

uint64_t sub_10053673C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
}

uint64_t sub_100536784@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v10 = (a1 + v8);
  *(_BYTE *)(a3 + __chkstk_darwin(v9, v10) = *(_BYTE *)(v3 + v10) ^ *(_BYTE *)(v5 + (v10 & 0xF)) ^ *(_BYTE *)(v6 + (v10 & 0xF)) ^ *(_BYTE *)(v4 + (v10 & 0xF)) ^ (97 * (v10 & 0xF)) ^ 0x98;
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((617 * (a1 - 1 == (a2 ^ 0x3FF) + v7)) ^ (a2 - 1541))) - 8LL))();
}

uint64_t sub_1005367F0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34)
{
  uint64_t v37 = *(void *)(v34 + 24);
  *(int8x16_t *)(v36 - 112) = veorq_s8( *(int8x16_t *)(*(void *)(v34 + 40) - 0x3F70C0CAD4126774LL),  (int8x16_t)xmmword_10071E3E0);
  if (a9) {
    BOOL v38 = v37 == 0x777DA4F8B3291E09LL;
  }
  else {
    BOOL v38 = 1;
  }
  int v39 = !v38;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8LL * (int)((v39 * ((a4 + 151) ^ 0x1A1 ^ ((a4 - 955) | 0x409))) ^ a4)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34);
}

uint64_t sub_100536874( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  BOOL v36 = ((v33 - 1411) & ((_DWORD)a10 + 5)) != 0 || (_DWORD)a10 == 87424923;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 + 8LL * (((4 * (((v33 + 55) ^ v36) & 1)) & 0xDF | (32 * (((v33 - 713) ^ v36) & 1))) ^ v33)) - 8LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33);
}

uint64_t sub_1005368C8@<X0>( unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, int a33, unsigned int a34, uint64_t a35, uint64_t a36)
{
  int v40 = ((v38 | 0x100) - 626984060) & 0x255F07B6;
  uint64_t v41 = (uint64_t)*(&off_10090D690 + ((v38 | 0x100) ^ 0x313));
  int v42 = *(unsigned __int8 *)(v41 + (*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E08LL) ^ 0x85LL));
  HIDWORD(v43) = v42 ^ 0x2F;
  LODWORD(v43) = (v42 ^ 0x40) << 24;
  unsigned __int8 v44 = (v43 >> 30) ^ 0x9F;
  int v45 = (char *)*(&off_10090D690 + ((v38 | 0x100) ^ 0x30E)) - 8;
  int v46 = v45[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291DFELL) ^ 0xBFLL];
  HIDWORD(v43) = v46 ^ 9;
  LODWORD(v43) = (v46 ^ (v40 - 68)) << 24;
  LOBYTE(v46) = v43 >> 28;
  int v47 = *(unsigned __int8 *)(v41 + (*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E04LL) ^ 0x6FLL));
  HIDWORD(v43) = v47 ^ 0x2F;
  LODWORD(v43) = (v47 ^ 0x40) << 24;
  int v48 = (char *)*(&off_10090D690 + (v38 | 0x100) - 746) - 8;
  uint64_t v49 = (char *)*(&off_10090D690 + (v38 | 0x100) - 922) - 8;
  LOBYTE(v47) = v49[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291DFDLL) ^ 0xD8LL];
  int v50 = (((v43 >> 30) ^ 0x68) << 16) | ((v48[*(unsigned __int8 *)(v37
                                                                                                  - 0x777DA4F8B3291E03LL) ^ 0xDFLL] ^ 0x2E) << 8);
  int v51 = v45[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291DFALL) ^ 0xBCLL];
  HIDWORD(v43) = v51 ^ 9;
  LODWORD(v43) = (v51 ^ 0xC0) << 24;
  LOBYTE(v51) = v43 >> 28;
  int v52 = v50 | ((v49[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E05LL) ^ 0xAFLL] ^ 0x9A) << 24);
  int v53 = v45[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E02LL) ^ 0x98LL];
  HIDWORD(v43) = v53 ^ 9;
  LODWORD(v43) = (v53 ^ 0xC0) << 24;
  unsigned int v54 = v52 & 0xFFFFFF00 | (v43 >> 28);
  LODWORD(v45) = v45[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E06LL) ^ 0xD0LL];
  HIDWORD(v43) = v45 ^ 9;
  LODWORD(v43) = (v45 ^ 0xC0) << 24;
  int v55 = *(unsigned __int8 *)(v41 + (*(unsigned __int8 *)(v37 - 0x777DA4F8B3291DFCLL) ^ 0xB6LL));
  LOBYTE(v45) = (v43 >> 28) ^ 0x3C;
  HIDWORD(v43) = v55 ^ 0x2F;
  LODWORD(v43) = (v55 ^ 0x40) << 24;
  int v56 = (v44 << 16) | ((v48[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E07LL) ^ 0x49LL] ^ 0xA4) << 8) | ((v49[*v36 ^ 0xFELL] ^ 0x43) << 24) | v45;
  uint64_t v57 = (v43 >> 30) ^ 0x21LL;
  LODWORD(v41) = *(unsigned __int8 *)(v41 + (*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E00LL) ^ 0xC8LL));
  unint64_t v58 = ((v48[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291DFBLL) ^ 0xC7LL] ^ 0xEFLL) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v47 ^ 0x4Au) << 24) | (v57 << 16) | v51 ^ 0x68LL;
  HIDWORD(v43) = v41 ^ 0x2F;
  LODWORD(v43) = (v41 ^ 0x40) << 24;
  unsigned int v59 = v58 ^ 0x75F49EF4;
  unsigned int v60 = v46 | ((v48[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291DFFLL) ^ 0xB7LL] ^ 0xF) << 8) & 0xFF00FFFF | (((v43 >> 30) ^ 0x37) << 16) | ((v49[*(unsigned __int8 *)(v37 - 0x777DA4F8B3291E01LL) ^ 0x18LL] ^ 5) << 24);
  char v61 = (char *)*(&off_10090D690 + (v38 | 0x100) - 942) - 12;
  LODWORD(v58) = (((unsigned __int16)(v58 ^ 0x9EF4) >> 8)
                - ((2 * ((v58 ^ 0x75F49EF4) >> 8)) & 0xCA)
                - 460369051) ^ *(_DWORD *)&v61[4 * (((unsigned __int16)(v58 ^ 0x9EF4) >> 8) ^ 0xF5LL)];
  int v62 = (char *)*(&off_10090D690 + (v38 | 0x100) - 881) - 12;
  int v63 = *(_DWORD *)&v62[4 * (v47 ^ 0x55)];
  HIDWORD(v43) = v63 ^ 1;
  LODWORD(v43) = v63 ^ 0x7DD158CC;
  unsigned int v64 = v57 ^ 0xDD;
  uint64_t v65 = (uint64_t)*(&off_10090D690 + ((v38 | 0x100) ^ 0x3C4));
  int v66 = (v43 >> 2) ^ *(_DWORD *)(v65 + 4LL * v64) ^ (v58 - ((2 * v58) & 0xA29E1CC) - 2062225178);
  int v67 = v66 - ((2 * v66) & 0x67F93E54);
  uint64_t v68 = (uint64_t)*(&off_10090D690 + (v38 | 0x100) - 876);
  int v307 = v56;
  unsigned int v308 = v54;
  int v69 = *(_DWORD *)(v68 + 4LL * (v51 ^ 0xD9u)) ^ v56 ^ (v67 - 1275289814);
  unsigned int v305 = v60;
  int v303 = v69 ^ v54 ^ 0x2789BBD4;
  int v70 = v60 ^ 0xE6 ^ v303;
  LODWORD(v45) = *(_DWORD *)&v62[4 * (((v70 ^ v59) >> 24) ^ 0x21)];
  HIDWORD(v43) = v45 ^ 1;
  LODWORD(v43) = v45 ^ 0x7DD158CC;
  LODWORD(v45) = ((v43 >> 2) - ((2 * (v43 >> 2)) & 0x67F93E54) - 1275289814) ^ *(_DWORD *)(v68
                                                                                         + 4LL
                                                                                         * ((v70 ^ v59) ^ 0xDEu));
  int v301 = v70 ^ v59;
  int v304 = v69;
  unsigned int v300 = *(_DWORD *)&v61[4 * (((unsigned __int16)(v70 ^ v59) >> 8) ^ 0x1E)] ^ *(_DWORD *)(v65 + 4LL * (((v70 ^ v59) >> 16) ^ 0x8Fu)) ^ v69 ^ ((((unsigned __int16)(v70 ^ v59) >> 8) ^ 0xEB) - ((2 * (((v70 ^ v59) >> 8) ^ 0x4BA6EB)) & 0xCA) - 460369051) ^ ((_DWORD)v45 - ((2 * (_DWORD)v45) & 0xA29E1CC) - 2062225178);
  int v71 = v300 ^ 0x76E748E2 ^ v69 ^ v54;
  unsigned int v306 = v59;
  int v72 = *(_DWORD *)&v62[4 * (((v71 ^ v59) >> 24) ^ 0xA2)];
  HIDWORD(v43) = v72 ^ 1;
  LODWORD(v43) = v72 ^ 0x7DD158CC;
  unsigned int v73 = v71 ^ v59 ^ 0xC84590C6;
  int v74 = *(_DWORD *)&v61[4 * (BYTE1(v73) ^ 0xF5)] ^ *(_DWORD *)(v65 + 4LL
                                                                   * (((v71 ^ v59) >> 16) ^ 0x6Cu)) ^ (BYTE1(v73) - (((v71 ^ v59) >> 7) & 0xCA) - 460369051) ^ ((v43 >> 2) - ((2 * (v43 >> 2)) & 0xA29E1CC) - 2062225178);
  int v298 = v71 ^ v59;
  int v299 = v71;
  HIDWORD(v297) = v300 ^ 0x76E748E2 ^ *(_DWORD *)(v68 + 4LL * ((v71 ^ v59) ^ 0x83u)) ^ (v74 - ((2 * v74) & 0x67F93E54) - 1275289814);
  unsigned int v75 = HIDWORD(v297) ^ 0x2789BBD4 ^ v71 ^ 0x8EDEEA78;
  int v302 = v70;
  HIDWORD(v296) = v71 ^ v70;
  LODWORD(v297) = HIDWORD(v297) ^ 0x2789BBD4 ^ v71;
  int v76 = v75 ^ v71 ^ v70;
  unsigned int v77 = v76 ^ v73;
  int v78 = *(_DWORD *)&v62[4 * (((v76 ^ v73) >> 24) ^ 0x67)];
  HIDWORD(v43) = v78 ^ 1;
  LODWORD(v43) = v78 ^ 0x7DD158CC;
  int v79 = (v43 >> 2) ^ *(_DWORD *)&v61[4 * (BYTE1(v77) ^ 0x97)] ^ ((BYTE1(v77) ^ 0x62)
                                                               - ((2 * ((v77 >> 8) ^ 0xD8B62)) & 0xCA)
                                                               - 460369051);
  int v80 = (v79 - ((2 * v79) & 0x67F93E54) - 1275289814) ^ *(_DWORD *)(v68 + 4LL * ((v76 ^ v73) ^ 0xE1u));
  int v81 = HIDWORD(v297) ^ 0x2789BBD4 ^ *(_DWORD *)(v65 + 4LL * (((v76 ^ v73 ^ 0x2142BA5) >> 16) ^ 0xB6u)) ^ (v80 - ((2 * v80) & 0xA29E1CC) - 2062225178);
  int v82 = v81 ^ v75;
  HIDWORD(v295) = v76 ^ v73;
  LODWORD(v296) = v76;
  int v83 = v81 ^ v75 ^ 0x307C325C;
  LODWORD(v294) = v83 ^ v76 ^ 0x5EF1BA37;
  int v84 = *(_DWORD *)&v62[4 * (((v294 ^ v76 ^ v73) >> 24) ^ 0xA4)];
  HIDWORD(v43) = v84 ^ 1;
  LODWORD(v43) = v84 ^ 0x7DD158CC;
  int v85 = ((v43 >> 2) - ((2 * (v43 >> 2)) & 0x67F93E54) - 1275289814) ^ *(_DWORD *)(v68
                                                                                + 4LL
                                                                                * ((v294 ^ v76 ^ v73) ^ 0x18u));
  unsigned int v86 = v294 ^ v76 ^ v73 ^ 0xCEE37B5D;
  HIDWORD(v293) = v294 ^ v77;
  HIDWORD(v294) = v82;
  LODWORD(v295) = v81;
  unsigned int v87 = *(_DWORD *)(v65 + 4LL * (((v294 ^ v77) >> 16) ^ 0xCAu)) ^ *(_DWORD *)&v61[4 * (BYTE1(v86) ^ 0xF5)] ^ v81 ^ (BYTE1(v86) - ((v86 >> 7) & 0xCA) - 460369051) ^ 0xBB2B5DFE ^ (v85 - ((2 * v85) & 0xA29E1CC) - 2062225178);
  int v88 = v87 ^ ((v76 ^ 0x5EF1BA37) - ((2 * (v76 ^ 0x5EF1BA37)) & 0x7656BBFC) - 1154785794);
  LODWORD(v45) = *(_DWORD *)&v62[4 * (((v88 ^ v86) >> 24) ^ 0x70)];
  int v89 = v83 - 2 * (v83 & 0x3B2B5DFF ^ v82 & 1);
  HIDWORD(v43) = v45 ^ 1;
  LODWORD(v43) = v45 ^ 0x7DD158CC;
  LODWORD(v45) = ((v43 >> 2) - ((2 * (v43 >> 2)) & 0xA29E1CC) - 2062225178) ^ *(_DWORD *)(v65
                                                                                        + 4LL
                                                                                        * (((v88 ^ v86 ^ 0xF3443494) >> 16) ^ 0xE4u));
  LODWORD(v45) = ((_DWORD)v45 - ((2 * (_DWORD)v45) & 0x67F93E54) - 1275289814) ^ *(_DWORD *)(v68
                                                                                           + 4LL
                                                                                           * ((v88 ^ v86) ^ 0x91u));
  LODWORD(v292) = v88 ^ v86;
  int v90 = v88 ^ v86 ^ 0x1A89BBD4;
  LODWORD(v45) = ((_DWORD)v45 - ((2 * (_DWORD)v45) & 0xC91EA6CA) - 460369051) ^ *(_DWORD *)&v61[4 * (BYTE1(v90) ^ 0xF5)];
  unsigned int v91 = v87 ^ BYTE1(v90) ^ ((_DWORD)v45 - ((2 * (_DWORD)v45) & 0x7656BBFC) - 1154785794);
  HIDWORD(v292) = v88;
  LODWORD(v293) = v87;
  LODWORD(v291) = v87 ^ (v89 - 1154785794);
  HIDWORD(v290) = v91 ^ v291;
  LODWORD(v45) = v91 ^ v291 ^ 0xE6F58988;
  unsigned int v92 = v45 ^ v88;
  unsigned int v93 = v45 ^ v88 ^ v90;
  int v94 = *(_DWORD *)&v62[4 * (HIBYTE(v93) ^ 0x43)];
  HIDWORD(v43) = v94 ^ 1;
  LODWORD(v43) = v94 ^ 0x7DD158CC;
  HIDWORD(v289) = v93;
  int v95 = v93 ^ 0x299B7ABE;
  int v96 = *(_DWORD *)&v61[4 * (((unsigned __int16)(v93 ^ 0x7ABE) >> 8) ^ 0xF5)] ^ *(_DWORD *)(v65 + 4LL * (((v93 ^ 0x4D501F31) >> 16) ^ 0xE2u)) ^ (((unsigned __int16)(v93 ^ 0x7ABE) >> 8) - (((v93 ^ 0x299B7ABE) >> 7) & 0xCA) - 460369051) ^ ((v43 >> 2) - ((2 * (v43 >> 2)) & 0xA29E1CC) - 2062225178);
  HIDWORD(v291) = v91;
  int v97 = v91 ^ *(_DWORD *)(v68 + 4LL * (v93 ^ 0xFBu)) ^ (v96 - ((2 * v96) & 0x67F93E54) - 1275289814);
  unsigned int v98 = v97 ^ v45 ^ 0x5BF36347;
  LODWORD(v290) = v92;
  LODWORD(v288) = v98 ^ v92;
  HIDWORD(v288) = v97 ^ v45;
  LODWORD(v45) = v98 ^ v92 ^ 0x2745D0FF;
  unsigned int v99 = v45 ^ v95;
  unsigned int v100 = v45 ^ v95 ^ 0x3DCC6B2B;
  int v101 = (BYTE1(v100) - ((v100 >> 7) & 0xCA) - 460369051) ^ *(_DWORD *)&v61[4 * (BYTE1(v100) ^ 0xF5)];
  unsigned int v102 = v45 ^ v95 ^ 0x516EF336;
  int v103 = (v101 - ((2 * v101) & 0x67F93E54) - 1275289814) ^ *(_DWORD *)(v68 + 4LL * (v102 ^ 0x58u));
  HIDWORD(v287) = v99;
  int v104 = *(_DWORD *)&v62[4 * (HIBYTE(v99) ^ 0x57)];
  HIDWORD(v43) = v104 ^ 1;
  LODWORD(v43) = v104 ^ 0x7DD158CC;
  LODWORD(v289) = v97;
  LODWORD(v287) = (v43 >> 2) ^ *(_DWORD *)(v65 + 4LL * (BYTE2(v102) ^ 0x8Bu)) ^ v97 ^ (v103
                                                                                     - ((2 * v103) & 0xA29E1CC)
                                                                                     - 2062225178);
  HIDWORD(v286) = v287 ^ 0x930000ED ^ v98;
  LODWORD(v286) = HIDWORD(v286) ^ 0x8D06EA22 ^ v45;
  unsigned int v105 = v286 ^ v100;
  int v106 = v286 ^ v100 ^ 0x9289BB39;
  int v107 = *(_DWORD *)&v62[4 * (HIBYTE(v105) ^ 0x39)];
  HIDWORD(v43) = v107 ^ 1;
  LODWORD(v43) = v107 ^ 0x7DD158CC;
  HIDWORD(v285) = v105;
  int v108 = v105 ^ 0x53DEAA41;
  int v109 = ((unsigned __int16)(v105 ^ 0xAA41) >> 8);
  LODWORD(v49) = *(_DWORD *)(v68 + 4LL * (v106 ^ 0x3Du)) ^ *(_DWORD *)&v61[4 * (v109 ^ 0xF5)] ^ 0x5773CC4F ^ (v43 >> 2);
  int v110 = *(_DWORD *)(v65 + 4LL * (BYTE2(v106) ^ 0x7Eu)) ^ v287 ^ 0x930000ED ^ v109 ^ 0x27088441 ^ ((_DWORD)v49
                                                                                                 - ((2 * (_DWORD)v49) & 0xA29E1CC)
                                                                                                 - 2062225178);
  LODWORD(v49) = (HIDWORD(v286) ^ 0x8D06EA22) - ((2 * (HIDWORD(v286) ^ 0x8D06EA22)) & 0x4E110882);
  LODWORD(v45) = v110 ^ ((_DWORD)v45 - ((2 * (_DWORD)v45) & 0x4E110882) + 654869569);
  LODWORD(v62) = *(_DWORD *)&v62[4 * (((v45 ^ v105 ^ 0x53DEAA41) >> 24) ^ 0x44)];
  HIDWORD(v43) = v62 ^ 1;
  LODWORD(v43) = v62 ^ 0x7DD158CC;
  LODWORD(v41) = *(_DWORD *)&v61[4 * (((unsigned __int16)((unsigned __int16)v45 ^ v108) >> 8) ^ 0xFD)] ^ *(_DWORD *)(v68 + 4LL * ((v45 ^ v108) ^ 0xC4u)) ^ ((((unsigned __int16)((unsigned __int16)v45 ^ v108) >> 8) ^ 8) - (((v45 ^ v108) >> 7) & 0xCA) - 460369051) ^ ((v43 >> 2) - ((2 * (v43 >> 2)) & 0x67F93E54) - 1275289814);
  HIDWORD(v284) = v45 ^ v105 ^ 0x53DEAA41 ^ 0xF5697186;
  int v111 = (v41 - ((2 * v41) & 0xA29E1CC) - 2062225178) ^ *(_DWORD *)(v65
                                                                  + 4LL
                                                                  * (((v45 ^ v105 ^ 0x53DEAA41) >> 16) ^ 0x16u));
  int v112 = v111 - ((2 * v111) & 0x4E110882);
  int v113 = (char *)*(&off_10090D690 + ((v38 | 0x100) ^ 0x31A)) - 12;
  int v114 = (char *)*(&off_10090D690 + (v38 | 0x100) - 782) - 4;
  int v115 = v114[*(unsigned __int8 *)(v39 - 109) ^ 0xA5LL];
  HIDWORD(v43) = v115 ^ 0x2F;
  LODWORD(v43) = (v115 ^ 0x80) << 24;
  int v116 = (char *)*(&off_10090D690 + ((v38 | 0x100) ^ 0x3CF)) - 4;
  unsigned int v117 = (char *)*(&off_10090D690 + (v38 | 0x100) - 835) - 4;
  unsigned int v282 = v114;
  unsigned int v118 = (v114[*(unsigned __int8 *)(v39 - 97) ^ 0x7BLL] ^ 0xD0) & 0xFFFF00FF | ((((*(_BYTE *)(v39 - 98) ^ 0xD0) + v113[*(unsigned __int8 *)(v39 - 98) ^ 0xDFLL] + 117) ^ 0xE4) << 8) | ((v116[*(unsigned __int8 *)(v39 - 99) ^ 0xAALL] ^ 0x53) << 16);
  int v283 = v113;
  unsigned int v119 = (v114[*(unsigned __int8 *)(v39 - 101) ^ 0x60LL] ^ 0x64) & 0xFFFF00FF | ((v116[*(unsigned __int8 *)(v39 - 103) ^ 5LL] ^ 0x61) << 16) | (((v113[*(unsigned __int8 *)(v39 - 102) ^ 4LL] + (*(_BYTE *)(v39 - 102) ^ 0xB) + 117) ^ 0x33) << 8) | ((v117[*(unsigned __int8 *)(v39 - 104) ^ 0x1CLL] ^ 0xB0) << 24);
  LODWORD(v41) = (v114[*(unsigned __int8 *)(v39 - 105) ^ 0x28LL] ^ 0xA5) & 0xFFFF00FF | ((((*(_BYTE *)(v39 - 106) ^ 0xAC) + v113[*(unsigned __int8 *)(v39 - 106) ^ 0xA3LL] + 117) ^ 0xF6) << 8) | ((v117[*(unsigned __int8 *)(v39 - 108) ^ 0xB2LL] ^ 0x47) << 24);
  unsigned int v280 = v117;
  unsigned int v281 = v116;
  LODWORD(v113) = (((((v43 >> 30) ^ 0xDB) >> 2) | (((v43 >> 30) ^ 0xDB) << 6)) | ((v116[*(unsigned __int8 *)(v39 - 111) ^ 0x7ALL] ^ 0x30) << 16) | ((v117[*(unsigned __int8 *)(v39 - 112) ^ 0x78LL] ^ 0x45) << 24) | (((v113[*(unsigned __int8 *)(v39 - 110) ^ 0x5DLL] + (*(_BYTE *)(v39 - 110) ^ 0x52) + 117) ^ 0x5D) << 8)) ^ 0x9BC1429;
  int v120 = (v41 | ((v116[*(unsigned __int8 *)(v39 - 107) ^ 0x27LL] ^ 5) << 16)) ^ 0xB5B02374;
  LODWORD(v117) = (v118 | ((v117[*(unsigned __int8 *)(v39 - 100) ^ 0x45LL] ^ 0x7F) << 24)) ^ 0x617455FD;
  LODWORD(v279) = v40 ^ 0x755;
  LODWORD(v278) = v110 ^ ((_DWORD)v49 + 654869569);
  HIDWORD(v278) = v40 ^ 0x720;
  LODWORD(v285) = v110;
  HIDWORD(v277) = (v112 + 654869569) ^ v110;
  LODWORD(v277) = v40 ^ 0x737;
  *(_DWORD *)(v39 - 120) = v40;
  HIDWORD(a5) = v40 ^ 0x739;
  LODWORD(v284) = v45 ^ 0x626A2240;
  HIDWORD(v279) = ((_DWORD)v49 + 654869569) ^ 0x3DC8BA5D ^ (v112 + 654869569);
  HIDWORD(a3) = HIDWORD(v279) ^ v45 ^ 0x626A2240;
  int v121 = *(_DWORD *)(v39 - 120);
  int v122 = v121;
  *(void *)(v39 - 200) = 7LL;
  int v123 = v114[a1[7] ^ 0x41LL];
  *(void *)(v39 - 152) = 12LL;
  uint64_t v124 = a1[12] ^ 0x60LL;
  uint64_t v125 = (((v121 - 1724) | 0x501) ^ 0xFFFFFABE) & 0xDDF5FB42 ^ 0xDDF5FB4A;
  *(void *)(v39 - 160) = v125;
  LODWORD(v124) = v280[v124];
  *(void *)(v39 - 128) = 1LL;
  int v126 = v280[a1[v125] ^ 0xC1LL] ^ 0x70;
  LODWORD(v65) = v116[a1[1] ^ 0x66LL] ^ 0xDC;
  *(void *)(v39 - 136) = 15LL;
  int v127 = (_DWORD)v65 << 16;
  uint64_t v128 = a1[15] ^ 0xE9LL;
  *(void *)(v39 - 168) = 11LL;
  LODWORD(v128) = v114[v128] ^ 0x72;
  int v129 = v114[a1[11] ^ 0xC3LL];
  *(void *)(v39 - 176) = 0LL;
  int v130 = v127 | ((v280[*a1 ^ 0x30LL] ^ 0xF4) << 24);
  int v131 = v129 ^ 0xB8 | (v126 << 24);
  *(void *)(v39 - 144) = 2LL;
  unsigned int v132 = v130 & 0xFFFF00FF | (((v283[a1[2] ^ 0xC0LL] + (a1[2] ^ 0xCF) + 117) ^ 0xF9) << 8);
  *(void *)(v39 - 216) = 4LL;
  int v133 = v280[a1[4] ^ 0xFCLL] ^ 0x4A;
  *(void *)(v39 - 208) = 5LL;
  int v134 = v116[a1[5] ^ 0xA9LL] ^ 0xE1;
  *(void *)(v39 - 232) = 9LL;
  int v135 = v123 ^ 0xA2 | (v133 << 24) | (v134 << 16);
  int v136 = v131 | ((v116[a1[9] ^ 0x5DLL] ^ 0xF) << 16);
  *(void *)(v39 - 192) = 10LL;
  LOBYTE(v134) = (v283[a1[10] ^ 0xD5LL] + (a1[10] ^ 0xDA) + 117) ^ 0xCF;
  *(void *)(v39 - 184) = 14LL;
  unsigned int v137 = v136 & 0xFFFF00FF | (v134 << 8);
  int v138 = (v283[a1[14] ^ 0xE4LL] + (a1[14] ^ 0xEB) - 11);
  *(_DWORD *)(v39 - 252) = -571081918;
  *(void *)(v39 - 224) = 3LL;
  int v139 = v114[a1[3] ^ 0xDCLL] ^ 0x66;
  *(void *)(v39 - 240) = 13LL;
  int v140 = (v138 << 8) | ((v116[a1[13] ^ 0x92LL] ^ 0x32) << 16) | v128 | ((v124 ^ 0xC4) << 24);
  *(void *)(v39 - 248) = 6LL;
  unsigned int v141 = v135 & 0xFFFF00FF | (((v283[a1[6] ^ 0x4FLL] + (a1[6] ^ 0x40) + 117) ^ 0xB7) << 8);
  LODWORD(v114) = v113 ^ v307 ^ ((v139 | v132) - 2 * ((v139 | v132) & 0x3005AD11 ^ v139 & 1) - 1341805296);
  LODWORD(v124) = v120 ^ v308 ^ (v141 - ((2 * v141) & 0x1813359A) + 201956045);
  unsigned int v142 = v117 ^ v306 ^ (v140 - 2 * (v140 & 0x58CDEC56 ^ v128 & 0x12) - 657593276);
  unsigned int v143 = v119 ^ 0xFF9DE532 ^ v305 ^ (v137 - ((2 * v137) & 0x8C48B916) + 1176788107);
  LODWORD(v128) = (v113 ^ v307 ^ ((v139 | v132)
                                                                  - 2 * ((v139 | v132) & 0x11 ^ v139 & 1)
                                                                  + 16));
  unsigned int v144 = (char *)*(&off_10090D690 + v122 - 1690) - 8;
  LODWORD(v117) = *(_DWORD *)&v144[4 * (HIBYTE(v143) ^ 0x3F)];
  HIDWORD(v43) = ~(_DWORD)v117;
  LODWORD(v43) = v117 ^ 0x15172E90;
  unsigned int v145 = (char *)*(&off_10090D690 + v279) - 12;
  int v146 = (v43 >> 1) ^ *(_DWORD *)&v145[4 * (BYTE2(v142) ^ 0x34)] ^ ((BYTE2(v142) ^ 0x68)
                                                                  - 1307131069
                                                                  - ((2 * (HIWORD(v142) ^ 0xB768)) & 0x86));
  uint64_t v147 = (uint64_t)*(&off_10090D690 + v122 - 1781);
  unsigned int v148 = *(_DWORD *)(v147 + 4LL * (v143 ^ 0xC6u)) ^ *(_DWORD *)&v145[4 * (BYTE2(v114) ^ 0x89)] ^ ((BYTE2(v114) ^ 0xD5) - 1307131069 - ((2 * ((v114 >> 16) ^ 0x6CD5)) & 0x86)) ^ ((v143 ^ 0xAB) + 1511711218 + ((2 * (v143 ^ 0xAB) + 254) & 0x2E4 ^ 0xFFC7FBFF));
  unsigned int v149 = *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0x8C)] ^ *(_DWORD *)(v147 + 4LL * (v142 ^ 0xB6u)) ^ ((v142 ^ 0xDB) + 1511711217 - ((2 * (v142 ^ 0xDB) + 4031742) & 0x3806E4)) ^ ((BYTE2(v124) ^ 0xD0) - 1307131069 - ((2 * (WORD1(v124) ^ 0xC8D0)) & 0x86));
  int v150 = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0xC8)];
  HIDWORD(v43) = ~v150;
  LODWORD(v43) = v150 ^ 0x15172E90;
  int v151 = v148 - 2068209466 - ((2 * v148) & 0x973418C);
  int v152 = ((BYTE2(v143) ^ 0xAD) - 1307131069 - ((2 * (HIWORD(v143) ^ 0x3FAD)) & 0x86)) ^ *(_DWORD *)(v147
                                                                                                  + 4LL * (v128 ^ 0x1C)) ^ ((v128 ^ 0x71) + 1511711218 + ((2 * (v128 ^ 0x71) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ (v43 >> 1) ^ *(_DWORD *)&v145[4 * (BYTE2(v143) ^ 0xF1)];
  LODWORD(v128) = *(_DWORD *)&v144[4 * ((v114 >> 24) ^ 0x6C)];
  HIDWORD(v43) = ~(_DWORD)v128;
  LODWORD(v43) = v128 ^ 0x15172E90;
  LODWORD(v128) = v43 >> 1;
  int v153 = v124;
  int v154 = *(_DWORD *)&v144[4 * (HIBYTE(v142) ^ 0xB7)];
  HIDWORD(v43) = ~v154;
  LODWORD(v43) = v154 ^ 0x15172E90;
  int v155 = (char *)*(&off_10090D690 + HIDWORD(v278)) - 4;
  unsigned int v156 = *(_DWORD *)&v155[4 * (BYTE1(v114) ^ 0xDE)] ^ v302 ^ ((v124 ^ 0x10)
                                                            + 1511711218
                                                            + ((2 * (v124 ^ 0x10) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ (v146 - 2068209466 - ((2 * v146) & 0x973418C));
  LODWORD(v124) = v151 ^ *(_DWORD *)&v155[4 * (BYTE1(v124) ^ 0x2F)] ^ (v43 >> 1);
  int v157 = v124 - ((2 * v124) & 0x5406C02A);
  LODWORD(v124) = *(_DWORD *)&v155[4 * (BYTE1(v143) ^ 0x29)] ^ v304 ^ v128;
  LODWORD(v128) = *(_DWORD *)(v147 + 4LL * (v153 ^ 0x7Du));
  LODWORD(v124) = v124 ^ (v149 - 2068209466 - ((2 * v149) & 0x973418C));
  LODWORD(v114) = v156 ^ v128;
  int v158 = *(_DWORD *)&v144[4 * ((v156 ^ ~(_DWORD)v128) >> 24)];
  LODWORD(v128) = *(_DWORD *)&v155[4 * (BYTE1(v142) ^ 0x66)] ^ v303 ^ (v152 - 2068209466 - ((2 * v152) & 0x973418C));
  HIDWORD(v43) = ~v158;
  LODWORD(v43) = v158 ^ 0x15172E90;
  int v159 = v43 >> 1;
  int v160 = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0x91)];
  HIDWORD(v43) = ~v160;
  LODWORD(v43) = v160 ^ 0x15172E90;
  int v161 = v43 >> 1;
  int v162 = *(_DWORD *)&v144[4 * (BYTE3(v128) ^ 0xA3)];
  HIDWORD(v43) = ~v162;
  LODWORD(v43) = v162 ^ 0x15172E90;
  unsigned int v163 = v161 ^ *(_DWORD *)&v145[4 * (BYTE2(v128) ^ 0xF0)] ^ ((BYTE2(v128) ^ 0xAC)
                                                            - 1307131069
                                                            - ((v128 >> 15) & 0x86));
  *(_DWORD *)(v39 - 116) = 1511711217;
  int v164 = (v43 >> 1) ^ *(_DWORD *)(v147 + 4LL * (v124 ^ 0x7Bu)) ^ *(_DWORD *)&v145[4
                                                                                                 * (BYTE2(v114) ^ 0x15)] ^ ((BYTE2(v114) ^ 0x49) - 1307131069 - ((2 * ((v114 >> 16) ^ 0xFF49)) & 0x86)) ^ ((v124 ^ 0x16) + 1511711217 - ((2 * (v124 ^ 0x16) + 4031742) & 0x3806E4));
  int v165 = v164 - 2068209466 - ((2 * v164) & 0x973418C);
  unsigned int v166 = (v157 + 704864277) ^ v301;
  int v167 = (v163 - 2068209466 - ((2 * v163) & 0x973418C)) ^ *(_DWORD *)&v155[4 * (BYTE1(v114) ^ 0x2C)];
  unsigned int v168 = v159 ^ *(_DWORD *)(v147 + 4LL * (v128 ^ 3u)) ^ ((v128 ^ 0x6E)
                                                                        + 1511711218
                                                                        + ((2 * (v128 ^ 0x6E) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ *(_DWORD *)&v145[4 * (BYTE2(v166) ^ 0x66)] ^ ((BYTE2(v166) ^ 0x3A) - 1307131069 - ((2 * (HIWORD(v166) ^ 0x443A)) & 0x86));
  unsigned int v169 = *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0x2E)] ^ ((BYTE2(v124) ^ 0x72)
                                                     - 1307131069
                                                     - 2 * ((WORD1(v124) ^ 0x9172) & 0x4B ^ WORD1(v124) & 8));
  int v170 = *(_DWORD *)&v144[4 * (HIBYTE(v166) ^ 0x44)];
  HIDWORD(v43) = ~v170;
  LODWORD(v43) = v170 ^ 0x15172E90;
  int v171 = ((v114 ^ 0xFC) + 1511711218 + ((2 * (v114 ^ 0xFC) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ *(_DWORD *)&v155[4 * (BYTE1(v128) ^ 0xBD)] ^ *(_DWORD *)(v147 + 4LL * (v114 ^ 0x91u)) ^ (v169 - 2068209466 - ((2 * v169) & 0x973418C)) ^ (v43 >> 1);
  LODWORD(v128) = *(_DWORD *)&v155[4 * (BYTE1(v124) ^ 0x57)];
  LODWORD(v124) = ((v166 ^ 0x58) - 1726037377) ^ v300 ^ *(_DWORD *)(v147
                                                                                   + 4LL
                                                                                   * (v166 ^ 0x35u)) ^ (v167 - 1057218702 - ((2 * v167) & 0x81F83EE4));
  LODWORD(v114) = v128 ^ HIDWORD(v296) ^ (v168 - 2068209466 - ((2 * v168) & 0x973418C));
  LODWORD(v128) = (v171 - ((2 * v171) & 0x9FB45834) + 1339698202) ^ v298;
  unsigned int v172 = *(_DWORD *)&v155[4 * (BYTE1(v166) ^ 0xFB)] ^ v299 ^ v165;
  int v173 = *(_DWORD *)&v144[4 * (BYTE3(v128) ^ 0xA2)];
  HIDWORD(v43) = ~v173;
  LODWORD(v43) = v173 ^ 0x15172E90;
  int v174 = (v155[4 * (BYTE1(v166) ^ 0xFB)] ^ v299 ^ v165);
  unsigned int v175 = ((v174 ^ 0xA1) + 1511711218 + ((2 * (v174 ^ 0xA1) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ *(_DWORD *)(v147 + 4LL * (v174 ^ 0xCCu));
  int v176 = *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0xDB)] ^ ((BYTE2(v124) ^ 0x87)
                                                     - 1307131069
                                                     - 2 * ((WORD1(v124) ^ 0x3A87) & 0x5B ^ WORD1(v124) & 0x18)) ^ (v43 >> 1);
  int v177 = (v175 - 2068209466 - ((2 * v175) & 0x973418C)) ^ *(_DWORD *)&v155[4
                                                                         * (((unsigned __int16)(((v166 ^ 0x58) - 15745) ^ v300 ^ *(_WORD *)(v147 + 4LL * (v166 ^ 0x35u)) ^ (v167 + 8050 - ((2 * v167) & 0x3EE4))) >> 8) ^ 0xDE)];
  int v178 = (((v166 ^ 0x58) + 127) ^ v300 ^ *(_BYTE *)(v147 + 4LL * (v166 ^ 0x35u)) ^ (v167 + 114 - ((2 * v167) & 0xE4)));
  int v179 = ((v178 ^ 0x9E) + 1511711217 - ((2 * (v178 ^ 0x9E) + 4031742) & 0x3806E4)) ^ *(_DWORD *)(v147
                                                                                               + 4LL * (v178 ^ 0xF3u));
  int v180 = v179 - 2068209466 - ((2 * v179) & 0x973418C);
  int v181 = *(_DWORD *)&v144[4 * ((v114 >> 24) ^ 0x37)];
  HIDWORD(v43) = ~v181;
  LODWORD(v43) = v181 ^ 0x15172E90;
  int v182 = v43 >> 1;
  int v183 = (v176 - 2068209466 - ((2 * v176) & 0x973418C)) ^ *(_DWORD *)&v155[4 * (BYTE1(v172) ^ 0x57)];
  LODWORD(v124) = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0x3A)];
  HIDWORD(v43) = ~(_DWORD)v124;
  LODWORD(v43) = v124 ^ 0x15172E90;
  LODWORD(v49) = ((v114 ^ 0x740CBC3A) >> 16);
  unsigned int v184 = (_DWORD)v49 - 1307131069 - ((v114 >> 15) & 0x86);
  LODWORD(v124) = BYTE2(v172) ^ *(_DWORD *)&v145[4 * (BYTE2(v172) ^ 0xF6)] ^ *(_DWORD *)&v155[4
                                                                                            * ((unsigned __int16)((unsigned __int16)v114 ^ 0xBC3A) >> 8)] ^ (v43 >> 1) ^ 0x36AF632F;
  LODWORD(v124) = ((v128 ^ 0xA) - 1726037377) ^ HIDWORD(v297) ^ *(_DWORD *)(v147
                                                                                           + 4LL
                                                                                           * (v128 ^ 0x67u)) ^ (v124 - 1057218702 - ((2 * v124) & 0x81F83EE4));
  int v185 = ((v114 ^ 0x3A) - 1726037377) ^ HIDWORD(v295) ^ *(_DWORD *)(v147
                                                                                   + 4LL
                                                                                   * (v114 ^ 0x57u));
  LODWORD(v114) = *(_DWORD *)&v144[4 * (HIBYTE(v172) ^ 0x7C)];
  HIDWORD(v43) = ~(_DWORD)v114;
  LODWORD(v43) = v114 ^ 0x15172E90;
  LODWORD(v114) = v185 ^ (v183 - 1057218702 - ((2 * v183) & 0x81F83EE4));
  unsigned int v186 = *(_DWORD *)&v145[4 * (BYTE2(v128) ^ 0x5C)] ^ v296 ^ BYTE2(v128) ^ v182 ^ (v177
                                                                                 - 1307131069
                                                                                 - ((2 * v177) & 0x642D8686));
  unsigned int v187 = *(_DWORD *)&v155[4 * (BYTE1(v128) ^ 0xCC)] ^ v297 ^ v184 ^ *(_DWORD *)&v145[4 * (v49 ^ 0x5C)] ^ v180 ^ (v43 >> 1);
  LODWORD(v128) = v186 ^ 0xFA64A5C3;
  unsigned int v188 = ((v186 ^ 0xC3) + 1511711218 + ((2 * (v186 ^ 0xC3) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ *(_DWORD *)(v147 + 4LL * (v186 ^ 0xAEu));
  int v189 = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0x5B)];
  HIDWORD(v43) = ~v189;
  LODWORD(v43) = v189 ^ 0x15172E90;
  int v190 = v188 - 2068209466 - ((2 * v188) & 0x973418C);
  int v191 = (v43 >> 1) ^ *(_DWORD *)(v147 + 4LL * (v114 ^ 0x1Fu)) ^ ((v114 ^ 0x72)
                                                                                 + 1511711218
  int v192 = *(_DWORD *)&v144[4 * ((v114 >> 24) ^ 0x28)];
  HIDWORD(v43) = ~v192;
  LODWORD(v43) = v192 ^ 0x15172E90;
  int v193 = v43 >> 1;
  int v194 = *(_DWORD *)&v144[4 * (HIBYTE(v186) ^ 0xB9)];
  HIDWORD(v43) = ~v194;
  LODWORD(v43) = v194 ^ 0x15172E90;
  int v195 = v43 >> 1;
  int v196 = v191 - 2068209466 - ((2 * v191) & 0x973418C);
  int v197 = *(_DWORD *)&v144[4 * (HIBYTE(v187) ^ 0xB4)];
  HIDWORD(v43) = ~v197;
  LODWORD(v43) = v197 ^ 0x15172E90;
  unsigned int v198 = v195 ^ *(_DWORD *)(v147 + 4LL * (v187 ^ 0x8Bu)) ^ ((v187 ^ 0xE6)
                                                                           + 1511711218
                                                                           + ((2 * (v187 ^ 0xE6) + 254) & 0x2E4 ^ 0xFFC7FBFF));
  unsigned int v199 = ((BYTE2(v114) ^ 0x14) - 1307131069 - ((v114 >> 15) & 0x86)) ^ v294 ^ *(_DWORD *)&v155[4 * (BYTE1(v124) ^ 0x1F)] ^ *(_DWORD *)&v145[4 * (BYTE2(v114) ^ 0x48)] ^ (v198 - 2068209466 - ((2 * v198) & 0x973418C));
  LODWORD(v41) = *(_DWORD *)&v155[4 * BYTE1(v128)] ^ v295 ^ *(_DWORD *)&v145[4 * (BYTE2(v187) ^ 5)] ^ ((BYTE2(v187) ^ 0x59) - 1307131069 - 2 * ((HIWORD(v187) ^ 0xB459) & 0x47 ^ HIWORD(v187) & 4)) ^ v196;
  LODWORD(v128) = (BYTE2(v128) - 1307131069 - ((v128 >> 15) & 0x86)) ^ HIDWORD(v294) ^ *(_DWORD *)(v147 + 4LL * (v124 ^ 0x99u)) ^ ((v124 ^ 0xF4) + 1511711218 + ((2 * (v124 ^ 0xF4) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ ((v43 >> 1) - 2068209466 - ((2 * (v43 >> 1)) & 0x973418C)) ^ *(_DWORD *)&v145[4 * (BYTE2(v128) ^ 0x5C)] ^ *(_DWORD *)&v155[4 * (BYTE1(v114) ^ 0x12)];
  LODWORD(v114) = *(_DWORD *)&v155[4 * (BYTE1(v187) ^ 0x34)] ^ HIDWORD(v293) ^ ((BYTE2(v124) ^ 0x95)
                                                                              - 1307131069
                                                                              - ((2 * (WORD1(v124) ^ 0x5B95)) & 0x86)) ^ *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0xC9)] ^ v190 ^ v193;
  int v200 = *(_DWORD *)&v144[4 * ((v114 >> 24) ^ 0xEB)];
  HIDWORD(v43) = ~v200;
  LODWORD(v43) = v200 ^ 0x15172E90;
  int v201 = (v43 >> 1) - 2068209466 - ((2 * (v43 >> 1)) & 0x973418C);
  unsigned int v202 = ((BYTE2(v128) ^ 0x81) - 1307131069 - 2 * ((WORD1(v128) ^ 0x1481) & 0x4B ^ WORD1(v128) & 8)) ^ *(_DWORD *)&v145[4 * (BYTE2(v128) ^ 0xDD)];
  LODWORD(v125) = ((v128 ^ 0x51)
                 + *(_DWORD *)(v39 - 116)
                 - ((2 * (v128 ^ 0x51) + 4031742) & 0x3806E4)) ^ *(_DWORD *)(v147
                                                                                            + 4LL
                                                                                            * (v128 ^ 0x3Cu));
  int v203 = *(_DWORD *)&v145[4 * (BYTE2(v199) ^ 0xDB)] ^ ((BYTE2(v199) ^ 0x87)
                                                     - 1307131069
                                                     - ((2 * (HIWORD(v199) ^ 0x7787)) & 0x86));
  LODWORD(v49) = *(_DWORD *)&v144[4 * (BYTE3(v128) ^ 0x14)];
  HIDWORD(v43) = ~(_DWORD)v49;
  LODWORD(v43) = v49 ^ 0x15172E90;
  LODWORD(v49) = v43 >> 1;
  LODWORD(v58) = *(_DWORD *)&v144[4 * (BYTE3(v41) ^ 0x9A)];
  HIDWORD(v43) = ~(_DWORD)v58;
  LODWORD(v43) = v58 ^ 0x15172E90;
  int v204 = *(_DWORD *)&v145[4 * (((v114 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v114 ^ 0xA87CE98B) >> 16) ^ (v125 - 1307131069 - ((2 * v125) & 0x642D8686));
  int v205 = *(_DWORD *)(v147 + 4LL * (v114 ^ 0xE6u)) ^ *(_DWORD *)&v155[4 * (BYTE1(v199) ^ 0xDE)] ^ ((v114 ^ 0x8B) + 1511711218 + ((2 * (v114 ^ 0x8B) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ (v202 - 2068209466 - ((2 * v202) & 0x973418C)) ^ (v43 >> 1);
  LODWORD(v58) = *(_DWORD *)&v144[4 * (HIBYTE(v199) ^ 0x77)];
  HIDWORD(v43) = ~(_DWORD)v58;
  LODWORD(v43) = v58 ^ 0x15172E90;
  int v206 = *(_DWORD *)&v155[4 * (BYTE1(v128) ^ 0x34)] ^ v292 ^ ((BYTE2(v41) ^ 0xE9)
                                                            - 1307131069
                                                            - ((2 * (WORD1(v41) ^ 0x9AE9)) & 0x86)) ^ *(_DWORD *)&v145[4 * (BYTE2(v41) ^ 0xB5)] ^ ((v199 ^ 0x9E) + 1511711218 + ((2 * (v199 ^ 0x9E) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ v201 ^ *(_DWORD *)(v147 + 4LL * (v199 ^ 0xF3u));
  unsigned int v207 = *(_DWORD *)&v155[4 * (BYTE1(v114) ^ 0xB)] ^ v291 ^ ((v41 ^ 0xA8)
                                                           + 1511711218
                                                           + ((2 * (v41 ^ 0xA8) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ v49 ^ (v203 - 2068209466 - ((2 * v203) & 0x973418C)) ^ *(_DWORD *)(v147 + 4LL * (v41 ^ 0xC5u));
  LODWORD(v124) = *(_DWORD *)&v155[4 * (BYTE1(v41) ^ 0x2D)] ^ HIDWORD(v292) ^ (v43 >> 1) ^ (v204
                                                                                          - 2068209466
                                                                                          - ((2 * v204) & 0x973418C));
  BYTE1(v128) = ((unsigned __int16)(*(_WORD *)&v155[4 * (BYTE1(v114) ^ 0xB)] ^ v291 ^ ((v41 ^ 0xA8)
                                                                                     - 7694
                                                                                     + ((2
  int v208 = v205 - 1154785794 - ((2 * v205) & 0x7656BBFC);
  int v209 = *(_DWORD *)&v144[4 * (HIBYTE(v207) ^ 0x6D)];
  HIDWORD(v43) = ~v209;
  LODWORD(v43) = v209 ^ 0x15172E90;
  int v210 = v43 >> 1;
  LODWORD(v125) = ((v207 ^ 0x2E0E654A) >> 16);
  int v211 = v125 - 1307131069 - (((v207 ^ 0x2E0E654A) >> 15) & 0x86);
  unsigned int v212 = v208 ^ v293;
  int v213 = *(_DWORD *)&v145[4 * (v125 ^ 0x5C)];
  LODWORD(v125) = *(_DWORD *)&v144[4 * (HIBYTE(v212) ^ 0xFD)];
  unsigned int v214 = v213 ^ (~(_DWORD)v125 << 31) ^ (v125 >> 1) ^ v211;
  unsigned int v215 = ((v207 ^ 0x4A) + 1511711218 + ((2 * (v207 ^ 0x4A) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ *(_DWORD *)(v147 + 4LL * (v207 ^ 0x27u));
  LODWORD(v114) = (v214 ^ 0xA8B9748) - 2068209466 - 2 * ((v214 ^ 0xA8B9748) & 0x4B9A0E6 ^ v214 & 0x20);
  int v216 = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0xAE)];
  HIDWORD(v43) = ~v216;
  LODWORD(v43) = v216 ^ 0x15172E90;
  int v217 = (v43 >> 1) ^ *(_DWORD *)&v155[4 * (BYTE1(v212) ^ 0xA4)] ^ (v215 - 2068209466 - ((2 * v215) & 0x973418C));
  unsigned int v218 = *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0x3A)] ^ v210 ^ ((BYTE2(v124) ^ 0x66)
                                                            - 1307131069
                                                            - ((2 * (WORD1(v124) ^ 0xAE66)) & 0x86)) ^ *(_DWORD *)(v147 + 4LL * (v212 ^ 0x4Du)) ^ ((v212 ^ 0x20) + 1511711218 + ((2 * (v212 ^ 0x20) + 254) & 0x2E4 ^ 0xFFC7FBFF));
  unsigned int v219 = ((v124 ^ 0xB3) + 500720454 + ((2 * (v124 ^ 0xB3) + 254) & 0x18C ^ 0xFFCEFFFF)) ^ *(_DWORD *)&v155[4 * BYTE1(v128)];
  LODWORD(v125) = (v219 - 1057218702 - ((2 * v219) & 0x81F83EE4)) ^ *(_DWORD *)(v147
                                                                              + 4LL * (v124 ^ 0xDEu));
  int v220 = *(_DWORD *)&v145[4 * (BYTE2(v212) ^ 0x40)] ^ ((BYTE2(v212) ^ 0x1C) - 1307131069 - ((v212 >> 15) & 0x86));
  LODWORD(v125) = (v220 ^ 0xD9E215AF ^ -(v220 ^ 0xD9E215AF) ^ ((v125 ^ 0x6500C283) + (v125 ^ v220 ^ 0x431D28D3) + 1))
                + (v125 ^ 0x6500C283);
  int v221 = *(_DWORD *)&v144[4 * ((v206 ^ 0x3F162902u) >> 24)];
  HIDWORD(v43) = ~v221;
  LODWORD(v43) = v221 ^ 0x15172E90;
  LODWORD(v49) = *(_DWORD *)&v155[4 * (BYTE1(v124) ^ 0x7C)];
  LODWORD(v124) = ((v206 ^ 0x3F162902u) >> 16) ^ v290 ^ *(_DWORD *)&v145[4 * (((v206 ^ 0x3F162902u) >> 16) ^ 0x5C)] ^ (v217 - 1307131069 - ((2 * v217) & 0x642D8686));
  LODWORD(v128) = (v43 >> 1) ^ HIDWORD(v289) ^ v125;
  unsigned int v222 = *(_DWORD *)&v155[4 * (BYTE1(v206) ^ 0xCB)] ^ HIDWORD(v290) ^ (v218 - 2068209466 - ((2 * v218) & 0x973418C));
  unsigned int v223 = v49 ^ HIDWORD(v291) ^ ((v206 ^ 2)
                                            + 1511711218
                                            + ((2 * (v206 ^ 2) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ *(_DWORD *)(v147 + 4LL * (v206 ^ 0x6Fu)) ^ v114;
  int v224 = ((BYTE2(v223) ^ 0xE9) - 1307131069 - 2 * ((HIWORD(v223) ^ 0xB8E9) & 0x53 ^ HIWORD(v223) & 0x10)) ^ *(_DWORD *)&v145[4 * (BYTE2(v223) ^ 0xB5)];
  int v225 = v224 - 2068209466 - ((2 * v224) & 0x973418C);
  int v226 = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0x9D)];
  HIDWORD(v43) = ~v226;
  LODWORD(v43) = v226 ^ 0x15172E90;
  int v227 = v43 >> 1;
  LODWORD(v58) = *(_DWORD *)&v144[4 * (HIBYTE(v222) ^ 0x61)];
  HIDWORD(v43) = ~(_DWORD)v58;
  LODWORD(v43) = v58 ^ 0x15172E90;
  int v228 = *(_DWORD *)(v147 + 4LL * (v223 ^ 0xC5u)) ^ *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0x28)] ^ ((v223 ^ 0xA8) + 1511711218 + ((2 * (v223 ^ 0xA8) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ (v43 >> 1) ^ ((BYTE2(v124) ^ 0x74) - 1307131069 - ((2 * (WORD1(v124) ^ 0x9D74)) & 0x86));
  unsigned int v229 = v227 ^ ((BYTE2(v128) ^ 0xE6) - 1307131069 - ((2 * (WORD1(v128) ^ 0xB0E6)) & 0x86)) ^ *(_DWORD *)&v145[4 * (BYTE2(v128) ^ 0xBA)];
  int v230 = v124;
  LODWORD(v41) = *(_DWORD *)(v39 - 116);
  LODWORD(v125) = (v124 ^ 0xD9) + v41 - ((2 * (v124 ^ 0xD9) + 4031742) & 0x3806E4);
  LODWORD(v116) = v222;
  unsigned int v231 = (v222 ^ 0x85) + 1511711218 + ((2 * (v222 ^ 0x85) + 254) & 0x2E4 ^ 0xFFC7FBFF);
  int v232 = *(_DWORD *)&v144[4 * (HIBYTE(v223) ^ 0xB8)];
  HIDWORD(v43) = ~v232;
  LODWORD(v43) = v232 ^ 0x15172E90;
  int v233 = ((BYTE2(v222) ^ 8) - 1307131069 - ((v222 >> 15) & 0x86)) ^ *(_DWORD *)&v145[4 * (BYTE2(v222) ^ 0x54)] ^ ((v128 ^ 0x44) + v41 - ((2 * (v128 ^ 0x44) + 4031742) & 0x3806E4)) ^ *(_DWORD *)(v147 + 4LL * (v128 ^ 0x29u)) ^ (v43 >> 1);
  LODWORD(v114) = *(_DWORD *)&v155[4 * (BYTE1(v128) ^ 0xDD)] ^ HIDWORD(v288) ^ (v228
                                                                              - 2068209466
                                                                              - ((2 * v228) & 0x973418C));
  int v234 = *(_DWORD *)&v144[4 * (BYTE3(v128) ^ 0xB0)];
  HIDWORD(v43) = ~v234;
  LODWORD(v43) = v234 ^ 0x15172E90;
  LODWORD(v124) = *(_DWORD *)&v155[4 * (BYTE1(v124) ^ 0xBD)] ^ v289 ^ (v233 - 2068209466 - ((2 * v233) & 0x973418C));
  unsigned int v235 = *(_DWORD *)&v155[4 * (BYTE1(v222) ^ 0x8F)] ^ HIDWORD(v287) ^ *(_DWORD *)(v147 + 4LL * (v230 ^ 0xB4u)) ^ v125 ^ (v43 >> 1) ^ v225;
  LODWORD(v128) = v231 ^ v288 ^ *(_DWORD *)(v147 + 4LL * (v116 ^ 0xE8)) ^ *(_DWORD *)&v155[4 * (BYTE1(v223) ^ 0x2D)] ^ (v229 - 2068209466 - ((2 * v229) & 0x973418C));
  int v236 = *(_DWORD *)&v144[4 * (HIBYTE(v235) ^ 0x18)];
  unsigned int v237 = ((BYTE2(v128) ^ 0x66) - 1307131069 - ((2 * (WORD1(v128) ^ 0xAE66)) & 0x86)) ^ *(_DWORD *)&v145[4 * (BYTE2(v128) ^ 0x3A)];
  HIDWORD(v43) = ~v236;
  LODWORD(v43) = v236 ^ 0x15172E90;
  int v238 = BYTE2(v124);
  int v239 = ((v43 >> 1) - 1307131069 - ((2 * (v43 >> 1)) & 0x642D8686)) ^ *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0x40)];
  LODWORD(v125) = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0xEF)];
  HIDWORD(v43) = ~(_DWORD)v125;
  LODWORD(v43) = v125 ^ 0x15172E90;
  int v240 = (v43 >> 1) ^ *(_DWORD *)(v147 + 4LL * (v235 ^ 0x90u)) ^ ((v235 ^ 0xFD)
                                                                                 + 1511711218
  unsigned int v241 = *(_DWORD *)(v147 + 4LL * (v114 ^ 0x27u)) ^ ((v114 ^ 0x4A)
                                                                    + 1511711218
                                                                    + ((2 * (v114 ^ 0x4A) + 254) & 0x2E4 ^ 0xFFC7FBFF));
  LODWORD(v49) = *(_DWORD *)&v144[4 * (BYTE3(v128) ^ 0xAE)];
  HIDWORD(v43) = ~(_DWORD)v49;
  LODWORD(v43) = v49 ^ 0x15172E90;
  int v242 = (v43 >> 1) ^ *(_DWORD *)&v145[4 * (BYTE2(v235) ^ 0xF)] ^ (v241 - 1307131069 - ((2 * v241) & 0x642D8686));
  LODWORD(v58) = *(_DWORD *)&v144[4 * ((v114 >> 24) ^ 0xDC)];
  HIDWORD(v43) = ~(_DWORD)v58;
  LODWORD(v43) = v58 ^ 0x15172E90;
  LODWORD(v116) = v239 - 2068209466 - ((2 * v239) & 0x973418C);
  int v243 = ((BYTE2(v114) ^ 0xE)
        - 1307131069
        - 2 * (((v114 >> 16) ^ 0xDC0E) & 0x53 ^ (v114 >> 16) & 0x10)) ^ v287 ^ *(_DWORD *)&v155[4 * (BYTE1(v128) ^ 0x7C)] ^ *(_DWORD *)&v145[4 * (BYTE2(v114) ^ 0x52)] ^ (v240 - 2068209466 - ((2 * v240) & 0x973418C));
  unsigned int v244 = *(_DWORD *)&v155[4 * (BYTE1(v235) ^ 0x1B)] ^ HIDWORD(v286) ^ *(_DWORD *)(v147
                                                                                + 4LL * (v124 ^ 0x4Du)) ^ ((v124 ^ 0x20) + v41 - ((2 * (v124 ^ 0x20) + 4031742) & 0x3806E4)) ^ (v237 - 2068209466 - ((2 * v237) & 0x973418C)) ^ (v43 >> 1);
  LODWORD(v128) = ((v128 ^ 0xB3)
                 + 1511711218
                 + ((2 * (v128 ^ 0xB3) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ HIDWORD(v285) ^ *(_DWORD *)&v155[4 * (BYTE1(v114) ^ 0x65)] ^ *(_DWORD *)(v147 + 4LL * (v128 ^ 0xDEu)) ^ v116;
  LODWORD(v124) = *(_DWORD *)&v155[4 * (BYTE1(v124) ^ 0xA4)] ^ v286 ^ (v242 - 2068209466 - ((2 * v242) & 0x973418C));
  int v245 = (v124 ^ BYTE2(v235));
  int v246 = v128 ^ v238;
  LODWORD(v125) = *(_DWORD *)&v144[4 * ((v246 ^ 0x7641388Bu) >> 24)];
  HIDWORD(v43) = ~(_DWORD)v125;
  LODWORD(v43) = v125 ^ 0x15172E90;
  LODWORD(v125) = v43 >> 1;
  LODWORD(v114) = *(_DWORD *)&v144[4 * ((v243 ^ 0xF7E9CFA8) >> 24)];
  HIDWORD(v43) = ~(_DWORD)v114;
  LODWORD(v43) = v114 ^ 0x15172E90;
  LODWORD(v116) = v43 >> 1;
  LODWORD(v114) = (((v246 ^ 0x7641388Bu) >> 16) - 1307131069 - (((v246 ^ 0x7641388Bu) >> 15) & 0x86)) ^ *(_DWORD *)&v145[4 * (((v246 ^ 0x7641388Bu) >> 16) ^ 0x5C)];
  int v247 = *(_DWORD *)&v144[4 * (BYTE3(v124) ^ 0xE7)];
  HIDWORD(v43) = ~v247;
  LODWORD(v43) = v247 ^ 0x15172E90;
  int v248 = v43 >> 1;
  int v249 = v125 ^ *(_DWORD *)(v147 + 4LL * (v245 ^ 0x18u)) ^ (((v243 ^ 0xF7E9CFA8) >> 16)
                                                          - 1307131069
                                                          - (((v243 ^ 0xF7E9CFA8) >> 15) & 0x86)) ^ *(_DWORD *)&v145[4 * (((v243 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((v245 ^ 0x75) + 1511711218 + ((2 * (v245 ^ 0x75) + 254) & 0x2E4 ^ 0xFFC7FBFF));
  int v250 = (v249 - 2068209466 - ((2 * v249) & 0x973418C)) ^ *(_DWORD *)&v155[4 * (BYTE1(v244) ^ 0xEC)];
  int v251 = *(_DWORD *)&v144[4 * (HIBYTE(v244) ^ 0x57)];
  HIDWORD(v43) = ~v251;
  LODWORD(v43) = v251 ^ 0x15172E90;
  int v252 = v116 ^ *(_DWORD *)&v145[4 * (BYTE2(v244) ^ 0xA7)] ^ ((BYTE2(v244) ^ 0xFB)
                                                                          - 1307131069
                                                                          - ((2 * (HIWORD(v244) ^ 0x57FB)) & 0x86)) ^ (v41 + (v246 ^ 0x8B) - ((2 * (v246 ^ 0x8B) + 4031742) & 0x3806E4)) ^ *(_DWORD *)(v147 + 4LL * (v246 ^ 0xE6u));
  int v253 = (v252 - 2068209466 - ((2 * v252) & 0x973418C)) ^ *(_DWORD *)&v155[4 * (BYTE1(v124) ^ 0x6D)];
  LODWORD(v125) = *(_DWORD *)&v155[4 * (BYTE1(v243) ^ 0x2D)];
  LODWORD(v124) = ((v243 ^ 0xA8)
                 + 1511711218
                 + ((2 * (v243 ^ 0xA8) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ *(_DWORD *)(v147
                                                                                                  + 4LL * (v243 ^ 0xC5u)) ^ ((BYTE2(v124) ^ 0x31) - 1307131069 - ((2 * (WORD1(v124) ^ 0xE731)) & 0x86)) ^ *(_DWORD *)&v145[4 * (BYTE2(v124) ^ 0x6D)] ^ (v43 >> 1);
  LODWORD(v128) = v278 ^ *(_DWORD *)&v155[4 * (BYTE1(v128) ^ 0xDA)] ^ (v124 - 2068209466 - ((2 * v124) & 0x973418C));
  LODWORD(v124) = (v253 + 654869569 - ((2 * v253) & 0x4E110882)) ^ v110;
  LODWORD(v145) = (v250 - 615089913 - ((2 * v250) & 0xB6ACF20E)) ^ HIDWORD(v284);
  LODWORD(v144) = v125 ^ v284 ^ ((v244 ^ 0x2F)
                               + 1511711218
                               + ((2 * (v244 ^ 0x2F) + 254) & 0x2E4 ^ 0xFFC7FBFF)) ^ v248 ^ *(_DWORD *)(v147 + 4LL * (v244 ^ 0x42u)) ^ ((_DWORD)v114 - 2068209466 - ((2 * (_DWORD)v114) & 0x973418C));
  unsigned int v254 = (v125 ^ v284 ^ ((v244 ^ 0x2F) - 14 + ~((2 * (v244 ^ 0x2F) - 2) & 0xE4)) ^ v248 ^ *(_BYTE *)(v147 + 4LL * (v244 ^ 0x42u)) ^ ((_BYTE)v114 - 58 - ((2 * (_BYTE)v114) & 0x8C))) ^ 0xC9;
  int v255 = *(_DWORD *)(v39 - 120);
  uint64_t v256 = (uint64_t)*(&off_10090D690 + v255 - 1693);
  int v257 = (char *)*(&off_10090D690 + v255 - 1717) - 4;
  int v258 = *(_DWORD *)&v257[4 * (((v253 + 65 - ((2 * v253) & 0x82)) ^ v285) ^ 0xA2)];
  uint64_t v259 = (uint64_t)*(&off_10090D690 + v255 - 1626);
  int v260 = (*(_DWORD *)(v259 + 4LL * (BYTE2(v124) ^ 0x9Eu)) - 1863078502) ^ (*(_DWORD *)&v257[4 * v254] - 2052208298);
  int v261 = (*(_DWORD *)(v259 + 4LL * (BYTE2(v144) ^ 0x38u)) - 1863078502) ^ (*(_DWORD *)(v256
                                                                                     + 4LL
  uint64_t v262 = *(unsigned int *)&v257[4 * (v128 ^ 0xC8)];
  unsigned int v263 = v145 ^ 0x351D74B9;
  LODWORD(v114) = *(_DWORD *)&v257[4 * (v145 ^ 0xB9)];
  uint64_t v264 = *(unsigned int *)(v256 + 4LL * (BYTE3(v124) ^ 0xE7));
  LODWORD(v257) = *(_DWORD *)(v256 + 4LL * ((v144 >> 24) ^ 0xB8));
  LODWORD(v256) = *(_DWORD *)(v256 + 4LL * ((v145 >> 24) ^ 0x65));
  int v265 = (char *)*(&off_10090D690 + v255 - 1716) - 8;
  int v266 = v261 ^ (v258 - 2052208298);
  int v267 = (v260 + 539915761 - ((2 * v260) & 0x405CEBE2)) ^ *(_DWORD *)&v265[4 * (BYTE1(v128) ^ 0x61)] ^ (v256 - 434711303);
  int v268 = *(_DWORD *)&v265[4 * (BYTE1(v124) ^ 0xA0)];
  uint64_t v269 = *(unsigned int *)&v265[4 * (BYTE1(v144) ^ 0xE9)];
  LODWORD(v155) = *(_DWORD *)(v259 + 4LL * ((v128 ^ 0x898C5DC8) >> 16));
  LODWORD(v256) = *(_DWORD *)(v259 + 4LL * BYTE2(v263));
  LODWORD(v147) = *(_DWORD *)&v265[4 * BYTE1(v263)] ^ HIDWORD(v279) ^ (v266 + 539915761 - ((2 * v266) & 0x405CEBE2));
  uint64_t v270 = (uint64_t)*(&off_10090D690 + v277);
  LODWORD(v124) = HIDWORD(a3) ^ HIDWORD(v284) ^ (v267 - 615089913 - ((2 * v267) & 0xB6ACF20E));
  a1[*(void *)(v39 - 248)] = *(_BYTE *)(v270 + (BYTE1(v147) ^ 0x99LL)) ^ 0xCA;
  unsigned int v271 = (char *)*(&off_10090D690 + HIDWORD(a5)) - 4;
  a1[*(void *)(v39 - 240)] = (v271[BYTE2(v124) ^ 0xADLL] - 32) ^ 0xC5;
  LODWORD(v128) = v268 ^ HIDWORD(a3) ^ (v262 - ((2 * v262 + 190550700) & 0x405CEBE2) - 1512292537) ^ ((_DWORD)v257 - 434711303) ^ (v256 - 1863078502);
  uint64_t v272 = (uint64_t)*(&off_10090D690 + v255 - 1762);
  a1[*(void *)(v39 - 200)] = *(_BYTE *)(v272 + (v147 ^ 0xFCLL)) ^ 0xE7;
  a1[*(void *)(v39 - 232)] = (v271[BYTE2(v128) ^ 0x8CLL] - 32) ^ 0x47;
  uint64_t v273 = (uint64_t)*(&off_10090D690 + v255 - 1736);
  a1[*(void *)(v39 - 216)] = (*(_BYTE *)(v273 + (BYTE3(v147) ^ 0xDELL)) - 60) ^ 0x1B;
  a1[*(void *)(v39 - 208)] = ((v271[BYTE2(v147) ^ 0x15LL] + ((v271[BYTE2(v147) ^ 0x15LL] - 32) ^ 0xDA) - 31) ^ 0xFE)
                             + v271[BYTE2(v147) ^ 0x15LL]
                             - 32;
  LOWORD(v256) = (_WORD)v114 - 13994;
  uint64_t v274 = HIDWORD(v277) ^ v269 ^ ((_DWORD)v155 - 1863078502) ^ ((_DWORD)v114 - 2052208298) ^ ((_DWORD)v264 - ((2 * (_DWORD)v264 + 1278061042) & 0x405CEBE2) + 105204458);
  a1[*(void *)(v39 - 224)] = *(_BYTE *)(v272
                                        + ((BYTE4(v277) ^ v269 ^ ((_BYTE)v155 - 102) ^ v256 ^ (v264 - ((2 * v264 - 14) & 0xE2) - 22)) ^ 5LL)) ^ 0x15;
  a1[*(void *)(v39 - 152)] = (*(_BYTE *)(v273 + (BYTE3(v124) ^ 0x4ELL)) - 60) ^ 0xE6;
  a1[*(void *)(v39 - 160)] = (*(_BYTE *)(v273 + (BYTE3(v128) ^ 0x9CLL)) - 60) ^ 0xB8;
  uint64_t v275 = *(void *)(v39 - 176);
  a1[v275] = (*(_BYTE *)(v273 + (BYTE3(v274) ^ 0x67LL)) - 60) ^ 0x91;
  a1[*(void *)(v39 - 168)] = *(_BYTE *)(v272 + (v128 ^ 0xF2LL)) ^ 0x1F;
  a1[*(void *)(v39 - 192)] = *(_BYTE *)(v270 + (BYTE1(v128) ^ 0x1ELL)) ^ 0x69;
  a1[*(void *)(v39 - 144)] = *(_BYTE *)(v270
                                        + (((unsigned __int16)(WORD2(v277) ^ v269 ^ ((_WORD)v155 - 21094) ^ v256 ^ (v264 - ((2 * v264 - 22030) & 0xEBE2) + 19178)) >> 8) ^ 0x33LL)) ^ 0x70;
  a1[*(void *)(v39 - 184)] = *(_BYTE *)(v270
                                        + (((unsigned __int16)(WORD2(a3) ^ WORD2(v284) ^ (v267 + 30983 - ((2 * v267) & 0xF20E))) >> 8) ^ 0xBCLL)) ^ 0xBE;
  a1[*(void *)(v39 - 136)] = *(_BYTE *)(v272
                                        + ((BYTE4(a3) ^ BYTE4(v284) ^ (v267 + 7 - ((2 * v267) & 0xE))) ^ 0x9FLL)) ^ 0xE7;
  a1[*(void *)(v39 - 128)] = (v271[BYTE2(v274) ^ 0xDLL] - 32) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a36 + 8LL * ((v255 - 521) | (4 * ((((_DWORD)v275 - 571081902 - 2 * (((_DWORD)v275 + 16) & 0x5DF5FB43 ^ *(_DWORD *)(v39 - 252) & 1)) ^ 0xDDF5FB42) < a34)))))( v262,  v271,  v270,  v274,  v259,  v272,  v264,  v269,  a2,  a3,  a1,  a5,  v277,  v278,  v279,  v280,  v281,  v282,  v283,  v284,  v285,  v286,  v287,  v288,  v289,  v290,  v291,  v292,  v293,  v294,  v295,  v296,  v297);
}

void sub_1005398F4()
{
}

uint64_t sub_100539928( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, int a40, int a41, int a42, int a43)
{
  unsigned int v44 = a10 - ((2 * a41) & 0x83D231A8) + a43 + 1018369008;
  BOOL v45 = ((2 * v44) & 0x7FCF5EFC ^ 0x3C210A8) + (v44 ^ 0xFE0EB7AA) + 1728051078 != 652715780;
  return ((uint64_t (*)(void))(*(void *)(v43 + 8LL * ((2 * v45) | (16 * v45) | a43)) - 8LL))();
}

uint64_t sub_1005399EC(int a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL * ((172 * (a2 + a1 + 1075335298 >= ((v2 + 1425) ^ 0x23Eu) - 1330)) ^ v2))
                            - 12LL))();
}

uint64_t sub_100539A6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((114 * (a8 + (a7 ^ 0x37A ^ (a3 + 1456)) < 0xFFFFFFF0)) ^ a7))
                            - ((a7 - 1338) | 0x704u)
                            + 1788LL))();
}

uint64_t sub_100539AB4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  uint64_t v9 = (a2 + a1 + a3);
  unint64_t v10 = v9 + a5 + 1;
  uint64_t v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v5 + v11 - v9;
  unint64_t v14 = v5 + ((a4 - 1619977793) & 0x608EE1D6 ^ 0x1D7LL) + v11;
  unint64_t v15 = v11 + v6 - v9 + 2;
  unint64_t v16 = v11 + v6 + 3;
  unint64_t v17 = v12 + v7 + 4;
  unint64_t v18 = v7 + ((a4 + 1953169836) & 0x8B94FF17 ^ 0x701LL) + v11;
  BOOL v20 = v16 > a5 && v15 < v10;
  if (v13 < v10 && v14 > a5) {
    BOOL v20 = 1;
  }
  if (v17 < v10 && v18 > a5) {
    BOOL v20 = 1;
  }
  return (*(uint64_t (**)(void))(v8 + 8LL * (v20 | (16 * v20) | a4)))();
}

uint64_t sub_100539B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v8
                                                                                + 8LL * (((a7 + 47) * (v7 > 0xF)) ^ a7))
                                                                    - (((a7 + 590) | 0xC3u) ^ 0x4EBLL)))( a1,  a2,  a3,  0LL);
}

uint64_t sub_100539BA8@<X0>( int a1@<W6>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36)
{
  *(_DWORD *)(v42 - 116) = v40 + 3;
  *(_DWORD *)(v42 - 128) = v40 + 2;
  v48.val[1].i64[0] = ((_BYTE)v40 + 9) & 0xF;
  v48.val[1].i64[1] = ((_BYTE)v40 + 8) & 0xF;
  v48.val[2].i64[0] = ((_BYTE)v40 + 7) & 0xF;
  v48.val[2].i64[1] = ((_BYTE)v40 + 6) & 0xF;
  v48.val[3].i64[0] = ((_BYTE)v40 + 5) & 0xF;
  v48.val[3].i64[1] = ((_BYTE)v40 + 4) & 0xF;
  v43.i64[0] = 0x7777777777777777LL;
  v43.i64[1] = 0x7777777777777777LL;
  uint64_t v44 = (v40 + v36);
  v48.val[0].i64[0] = ((_BYTE)v40 + (_BYTE)v36) & 0xF;
  v48.val[0].i64[1] = ((_BYTE)v40 + 10) & 0xF;
  v45.i64[0] = vqtbl4q_s8(v48, (int8x16_t)xmmword_10071E3B0).u64[0];
  v49.val[0].i64[1] = *(_DWORD *)(v42 - 128) & 0xF;
  v49.val[1].i64[1] = v40 & 0xF;
  v49.val[2].i64[1] = ((_BYTE)v40 + 14) & 0xF;
  v49.val[3].i64[1] = ((_BYTE)v40 + 12) & 0xF;
  v49.val[0].i64[0] = *(_DWORD *)(v42 - 116) & 0xF;
  v49.val[1].i64[0] = ((_BYTE)v40 + 1) & 0xF;
  v49.val[2].i64[0] = ((_BYTE)v40 - 1) & 0xF;
  v49.val[3].i64[0] = ((_BYTE)v40 + 13) & 0xF;
  v45.i64[1] = vqtbl4q_s8(v49, (int8x16_t)xmmword_10071E3B0).u64[0];
  int8x16_t v46 = vrev64q_s8(vmulq_s8(v45, v43));
  *(int8x16_t *)(a2 - 15 + v44) = veorq_s8( veorq_s8( veorq_s8(*(int8x16_t *)(v37 + (v44 & 0xF) - 15), *(int8x16_t *)(a2 - 15 + v44)),  veorq_s8( *(int8x16_t *)((v44 & 0xF) + v38 - 13),  *(int8x16_t *)((v44 & 0xF) + v39 - 11))),  vextq_s8(v46, v46, 8uLL));
  return ((uint64_t (*)(void))(*(void *)(a36
                                        + 8LL
                                        * ((1943 * (((a1 + 1856149256) & 0x915D67A9 ^ 0x98) == (v41 & 0xFFFFFFF0))) ^ (a1 - 35)))
                            - 4LL))();
}

uint64_t sub_100539D30(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * (v5 ^ (413 * (v4 != a4)))) - ((v5 + 1660) ^ 0x677u) + 367LL))();
}

uint64_t sub_100539D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v9
                                                                                         + 8LL
                                                                                         * ((165
                                                                                           * (((((4 * a7) ^ 0x2C8)
                                                                                              + ((a7 - 207) | 0x443)
                                                                                              - 3043) & v8) != 0)) ^ a7))
                                                                             - 12LL))( a1,  a2,  a3,  a4,  (v7 - a4));
}

uint64_t sub_100539DA0@<X0>( int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40)
{
  *(_DWORD *)(v47 - 120) = v46;
  int v48 = (a5 - 1880787000) & 0x701A87DF;
  *(_DWORD *)(v47 - 128) = v44;
  unsigned int v49 = (v48 ^ 0xFFFFFB77) & v44;
  int v50 = -a4;
  *(_DWORD *)(v47 - 136) = v49;
  char v51 = v45 + a2 + a1;
  *(_DWORD *)(v47 - 116) = v48;
  uint64_t v52 = (v50 + a2 + a1 + a3);
  v54.val[0].i64[0] = ((_BYTE)v50 + (_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v54.val[0].i64[1] = ((_BYTE)v50 + v51 + 10) & 0xF;
  v54.val[1].i64[0] = ((_BYTE)v50 + v51 + 9) & 0xF;
  v54.val[1].i64[1] = ((_BYTE)v50 + v51 + 8) & 0xF;
  v54.val[2].i64[0] = ((_BYTE)v50 + v51 + 7) & 0xF;
  v54.val[2].i64[1] = ((_BYTE)v50 + v43 + ((v48 - 28) ^ 0x55)) & 0xF;
  v54.val[3].i64[0] = ((_BYTE)v50 + v51 + 5) & 0xF;
  v54.val[3].i64[1] = ((_BYTE)v50 + v51 + 4) & 0xF;
  *(int8x8_t *)(a6 - 7 + v52) = veor_s8( veor_s8( veor_s8(*(int8x8_t *)(v40 + (v52 & 0xF) - 7), *(int8x8_t *)(a6 - 7 + v52)),  veor_s8(*(int8x8_t *)((v52 & 0xF) + v41 - 5), *(int8x8_t *)((v52 & 0xF) + v42 - 3))),  vrev64_s8( vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8(v54, (int8x16_t)xmmword_10071E3C0),  (int8x8_t)0x7777777777777777LL)));
  return ((uint64_t (*)(__n128))(*(void *)(a40
                                                     + 8LL
}

void sub_100539EF4()
{
}

uint64_t sub_100539F1C(uint64_t a1, uint64_t a2, int a3)
{
}

uint64_t sub_100539F5C@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a1 + v4);
  *(_BYTE *)(a3 + v9) ^= *(_BYTE *)(v5 + (v9 & 0xF)) ^ *(_BYTE *)((v9 & 0xF) + v6 + 2) ^ *(_BYTE *)((v9 & 0xF) + v7 + 4) ^ (119 * (v9 & 0xF));
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((28 * (a1 - 1 != v3)) ^ (a2 - 1660))) - 4LL))();
}

void sub_100539FC0()
{
  if (v0 == 256899873) {
    int v1 = -2006430421;
  }
  else {
    int v1 = 2006390515;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_10053A024(uint64_t a1)
{
  int v1 = 1759421093 * (((a1 | 0x2E78BC3A) - (a1 & 0x2E78BC3A)) ^ 0x9D050C6E);
  int v2 = *(_DWORD *)(a1 + 24) + v1;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)a1;
  int v5 = *(_DWORD *)(a1 + 8) ^ v1;
  uint64_t v16 = 0x1DC8283574CFFF8ALL;
  unint64_t v17 = &v18;
  int v13 = 1959788297;
  int v14 = 499656757;
  unint64_t v15 = &v8;
  uint64_t v9 = 0x1DC8283574CFFF8ALL;
  unint64_t v10 = &v20;
  uint64_t v11 = 0x1DC8283574CFFF8ALL;
  uint64_t v12 = &v19;
  if (v3 | v4) {
    BOOL v6 = v5 == 654978696;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  __asm { BR              X8 }

uint64_t sub_10053A174()
{
  BOOL v4 = *(void *)(v1 + 16) != 0x5CF9E3AABE5369CCLL && *(_OWORD *)(v1 + 40) != 0LL;
  return (*(uint64_t (**)(void))(v2 + 8LL * ((v4 * ((v0 + 1166) ^ (v0 - 12) ^ 0x449)) ^ v0)))();
}

uint64_t sub_10053A1C8@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(void *)(v2 + 32);
  *(_DWORD *)(v1 - 0x5CF9E3AABE5369CCLL) = 0;
}

uint64_t sub_10053A2AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, char a32)
{
  int v37 = 535753261 * ((((v36 - 144) | 0x58E14AB9) - ((v36 - 144) & 0x58E14AB9)) ^ 0x52154496);
  *(_DWORD *)(v36 - 144) = v37 + v33 + 500;
  *(_DWORD *)(v36 - 128) = v37 ^ 0x25B9EE99;
  *(void *)(v36 - 136) = &a32 + v32;
  sub_10053FB04((_DWORD *)(v36 - 144));
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v35
                                                               + 8LL
                                                               * ((((v34 == 0) ^ (v33 - 84)) & 1 | (8 * (((v34 == 0) ^ (v33 - 84)) & 1))) ^ (v33 + 495)))
                                                   - 12LL))( a1,  a2);
}

uint64_t sub_10053A38C@<X0>( uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v21 = a2 + 778;
  int v22 = 1734042137 * ((2 * ((v20 - 144) & 0x195CF8E8) - (v20 - 144) - 425523436) ^ 0xBA6DC459);
  *(_DWORD *)(v20 - 132) = v14 - v22 + ((a2 + 778) ^ 0xFF2FCC98);
  *(void *)(v20 - 128) = v16;
  *(_DWORD *)(v20 - 120) = a2 - v22 - 809;
  *(void *)(v20 - 144) = v19;
  BOOL v25 = a1 == 0;
  ((void (*)(uint64_t))(*(void *)(v17 + 8LL * (a2 - 988)) - 8LL))(v20 - 144);
  *(_DWORD *)(v20 - 128) = v21
                         - 1374699841
                         * ((((v20 - 144) | 0x51C125E3) - (v20 - 144) + ((v20 - 144) & 0xAE3EDA18)) ^ 0x3C353DEA)
                         - 785;
  *(void *)(v20 - 144) = a13;
  *(void *)(v20 - 136) = v15;
  (*(void (**)(uint64_t))(v17 + 8LL * (v21 - 1669)))(v20 - 144);
  *(void *)(v20 - 104) = a12;
  *(_DWORD *)(v20 - 112) = (v21 - 1189) ^ (1755732067
                                         * (((v20 - 144) & 0x378E2C8 | ~((v20 - 144) | 0x378E2C8)) ^ 0x2241A0EC));
  *(void *)(v20 - 136) = v15;
  *(void *)(v20 - 128) = a13;
  *(void *)(v20 - 144) = a14;
  *(void *)(v20 - 120) = a8;
  uint64_t v23 = ((uint64_t (*)(uint64_t))(*(void *)(v17 + 8LL * (v21 ^ 0x7D7)) - 8LL))(v20 - 144);
  return ((uint64_t (*)(uint64_t))(*(void *)(v18
                                                      + 8LL * ((22 * ((v25 ^ (v21 + 110)) & 1)) ^ v21))
                                          - 5 * (v21 ^ 0x71Eu)
                                          + 103LL))(v23);
}

uint64_t sub_10053A610()
{
  int v6 = ((v5 - 144) ^ 0x4C96827D) * v9;
  *(_DWORD *)(v5 - 140) = v3 - v6 + 574;
  *(_DWORD *)(v5 - 136) = (v1 + 720367112 + (v3 ^ 0x12C)) ^ v6;
  *(void *)(v5 - 128) = v2;
  *(void *)(v5 - 120) = v8;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 8LL * (v3 + 42)))(v5 - 144);
  *uint64_t v11 = v10;
  *(_DWORD *)(v0 + 12) = -2006430421;
  return result;
}

void sub_10053A748(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1759421093 * (((_DWORD)a1 + 1083783468 - 2 * (a1 & 0x4099392C)) ^ 0xF3E48978);
  __asm { BR              X15 }

uint64_t sub_10053A864()
{
  if (v2 < 0) {
    int v2 = -v2;
  }
  if (v1 >= 0) {
    unsigned int v4 = v1;
  }
  else {
    unsigned int v4 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8LL * ((248 * (((v2 > v4) ^ (v0 + 1)) & 1)) ^ v0)))();
}

uint64_t sub_10053A8A4()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v0 < 0x83) * ((v1 ^ 0x262) + 1692)) ^ (v1 - 573))) - 4LL))();
}

void sub_10053A8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + __chkstk_darwin(v2, v3) = 499656757;
}

void sub_10053B770(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86);
  if (*(_DWORD *)(*(void *)a1 - 0x13AAEC8A5CF1D15CLL) - 499656757 >= 0) {
    unsigned int v2 = *(_DWORD *)(*(void *)a1 - 0x13AAEC8A5CF1D15CLL) - 499656757;
  }
  else {
    unsigned int v2 = 499656757 - *(_DWORD *)(*(void *)a1 - 0x13AAEC8A5CF1D15CLL);
  }
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0x13AAEC8A5CF1D15CLL) - 499656757 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x13AAEC8A5CF1D15CLL) - 499656757;
  }
  else {
    unsigned int v3 = 499656757 - *(_DWORD *)(*(void *)(a1 + 8) - 0x13AAEC8A5CF1D15CLL);
  }
  uint64_t v6 = *(void *)a1;
  unsigned int v5 = (535753261 * ((2 * (&v5 & 0x5487F1F8) - &v5 - 1418195452) ^ 0xA18C002B)) ^ (v1 + 305);
  sub_100530690((uint64_t)&v5);
  if (v2 >= v3) {
    unsigned int v4 = v3;
  }
  else {
    unsigned int v4 = v2;
  }
  __asm { BR              X13 }

uint64_t sub_10053B908@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v11 = 4LL * (v7 + v5);
  int v12 = v10
      - 751690803
      + (*(_DWORD *)(*(void *)(v9 - 0x13AAEC8A5CF1D158LL) + v11) ^ v6)
      - (*(_DWORD *)(*(void *)(a2 - 0x13AAEC8A5CF1D158LL) + v11) ^ v6);
  *(_DWORD *)(*(void *)(a1 - 0x13AAEC8A5CF1D158LL) + v11) = v12
                                                            + v6
                                                            - ((v8 + 18 * ((v4 + 1007) ^ 0x56D) - 396) & (2 * v12));
  BOOL v13 = v7 - 642019022 < (int)(v3 + 1464513163);
  if (v3 > 0x28B54D74 != v7 - 642019022 < -682970485) {
    BOOL v13 = v3 > 0x28B54D74;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((493 * v13) ^ (v4 + 1007) ^ 0x1EDu)))();
}

uint64_t sub_10053BA28()
{
  int v4 = v2 - 579638195 + 257 * (v1 ^ 0x18E);
  int v5 = (v3 > 0x24FD7056) ^ (v4 < -620589143);
  BOOL v6 = v4 < (int)(v3 + 1526894505);
  if (v5) {
    BOOL v6 = v3 > 0x24FD7056;
  }
  return (*(uint64_t (**)(void))(v0 + 8LL * ((v6 * ((v1 ^ 0x34) + 727)) ^ v1)))();
}

uint64_t sub_10053BAA0@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v16 = v15 > a1;
  uint64_t v17 = 4LL * (v9 + v11 + ((2 * (a2 - 44)) ^ 0x11A) - 514);
  int v18 = v4 + v14 + (*(_DWORD *)(*(void *)(v13 - 0x13AAEC8A5CF1D158LL) + v17) ^ v10);
  *(_DWORD *)(*(void *)(a3 - 0x13AAEC8A5CF1D158LL) + v17) = v18 + v10 - (v12 & (2 * v18));
  int v19 = v5 + v11 + 515;
  LODWORD(v17) = v16 ^ (v19 < v6);
  BOOL v20 = v19 < v8;
  if (!(_DWORD)v17) {
    BOOL v16 = v20;
  }
  return (*(uint64_t (**)(void))(v3 + 8LL * ((v16 * v7) ^ (a2 - 44))))();
}

uint64_t sub_10053BB7C()
{
  BOOL v4 = v2 - 684505640 < (int)(((v1 + 19) ^ 0x54C26527) + v3);
  if (v2 - 684505640 < -725457102 != v3 > (((v1 + 552) | 0x104) ^ 0x2B3D9DE3u)) {
    BOOL v4 = v3 > (((v1 + 552) | 0x104) ^ 0x2B3D9DE3u);
  }
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * ((1641 * v4) ^ v1)) - 4LL))();
}

uint64_t sub_10053BBF8@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3)
{
  int v14 = 2 * (a1 ^ 0x314);
  BOOL v15 = v13 > v8;
  uint64_t v16 = 4LL * (v11 + v9);
  int v17 = ((v14 + 812) ^ 0x2CCDE11A) + v4 + (*(_DWORD *)(*(void *)(a3 - 0x13AAEC8A5CF1D158LL) + v16) ^ 0x7B407849);
  *(_DWORD *)(*(void *)(a2 - 0x13AAEC8A5CF1D158LL) + v16) = v17 + v10 - (v12 & (2 * v17));
  int v18 = v11 + 1 + v5;
  LODWORD(v16) = v15 ^ (v18 < v6);
  BOOL v19 = v18 < v7;
  if (!(_DWORD)v16) {
    BOOL v15 = v19;
  }
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((23 * v15) ^ v14)) - 4LL))();
}

uint64_t sub_10053BCF4()
{
}

uint64_t sub_10053BD34()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * ((((v2 + v3 - 1) < 0x7FFFFFFF) * (((v1 - 1916069075) & 0x7234E3FE) + 636)) ^ (v1 - 443))))();
}

uint64_t sub_10053BEC0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * (((*(_DWORD *)(*(void *)(a1 - 0x13AAEC8A5CF1D158LL)
                                             + 4LL * (((29 * (v2 ^ 0x3DB) + 271145994) & 0xEFD6A3FB ^ (v3 - 552)) + v5)) != v4)
                                * (29 * (v2 ^ 0x3DB) - 711)) ^ (29 * (v2 ^ 0x3DB)))))();
}

uint64_t sub_10053BF2C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL * ((281 * (v3 + v2 + ((v1 + 1994337059) & 0x8920D697) - 1176 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_10053BF88()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * (((*(_DWORD *)(v1 + 4LL * (((v3 + 271145994) & 0xEFD6A3FB ^ v2) + v5)) != v4)
                                * (v3 - 711)) ^ v3)))();
}

void sub_10053BFCC(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x13AAEC8A5CF1D15CLL) = (((v3 + v2) * (v1 - 1957521423)) ^ 0x3DCFF87D)
                                         - 537382984
                                         + ((2 * (v3 + v2) * (v1 - 1957521423)) & 0x7B9FF0FA);
}

void sub_10053C058(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }

uint64_t sub_10053C0E4(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1199 * (**(_BYTE **)(a2 + 8) == 0)) ^ 0xB8u)) - 4LL))();
}

uint64_t sub_10053C110( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  *(void *)(*(void *)(a17 + 96) + 504LL) = v19 + 1;
  *(_DWORD *)(*(void *)(a17 + 96) + 496LL) = a19 - 1;
  int v22 = 3804331 * ((v21 - 1322445200 - 2 * ((v21 - 152) & 0xB12D1708)) ^ 0x4BB3E45E);
  *(_DWORD *)(v21 - 136) = v22 + 629839620;
  *(_DWORD *)(v21 - 152) = v22 ^ 0x45E0925B;
  *(void *)(v21 - 144) = v21 + 0x24207EE97761D6A0LL;
  uint64_t v23 = sub_1005300F4(v21 - 152);
  return ((uint64_t (*)(uint64_t))(*(void *)(v20
                                                      + 8LL
                                                      * ((1283
                                                        * (a19
                                                         + 777169330
                                                         + ((2 * *(_DWORD *)(v21 - 184)) & 0x72 ^ 0x32)
                                                         + (*(_DWORD *)(v21 - 184) & 0x3F ^ 0x6A7B57A6u) < 0xFFFFFFC0)) ^ 0x37Au))
                                          - 8LL))(v23);
}

uint64_t sub_10053C2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v11 = v7 - 1786468280;
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
}

uint64_t sub_10053C37C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = v7 + v6;
  int v12 = v11 + v8;
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
                                        * ((((((v9 - 298) | 0x155) + 1216) ^ 0x6D1)
}

uint64_t sub_10053C3C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return ((uint64_t (*)(void))(*(void *)(v23
                                        + 8LL
                                        * ((59
                                          * (~a20
                                           + v24
                                           - 252
                                           + (unint64_t)(v20
                                                              + ((337 * (v22 ^ 0x1D0) + 1036174184) & 0xC23D37FB ^ (v21 + 374))) < 0x10)) ^ v22))
                            - 12LL))();
}

uint64_t sub_10053C430@<X0>(int a1@<W8>)
{
  int v7 = 42 * (v4 ^ 0x1F5);
  v8.i64[0] = 0x3030303030303030LL;
  v8.i64[1] = 0x3030303030303030LL;
  v9.i64[0] = 0x9898989898989898LL;
  v9.i64[1] = 0x9898989898989898LL;
  *(int8x16_t *)(v2 + a1 + ((v7 + 411) ^ (v1 + 653))) = vaddq_s8( vsubq_s8(*v5, vandq_s8(vaddq_s8(*v5, *v5), v8)),  v9);
  return ((uint64_t (*)(int8x16_t *))(*(void *)(v6 + 8LL * ((((v3 + 1) & 0x1FFFFFFF0LL) != 16) ^ v7)) - 12LL))(&v5[1]);
}

void sub_10053C4A8()
{
}

uint64_t sub_10053C4B4()
{
}

uint64_t sub_10053C50C@<X0>(int a1@<W2>, int a2@<W8>)
{
  *(_BYTE *)(v7 - 252 + (a2 + v2)) = *(_BYTE *)(v3 + v5 - 313388984)
                                                 - ((2 * *(_BYTE *)(v3 + v5 - 313388984)) & 0x30)
                                                 - 104;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((15 * ((a1 + a2 + 1) > 0x3F)) ^ v4)) - 8LL))();
}

uint64_t sub_10053C578( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, int a25, uint64_t (*a26)(void, __n128, __n128, __n128, __n128, __n128), uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, int32x4_t a33, int32x4_t a34, int32x4_t a35, int32x4_t a36)
{
  int v44 = (uint64_t (*)(void, __n128, __n128, __n128, __n128, __n128))(*(void *)(v41 + 8LL * v36) - 12LL);
  char v45 = (const char *)(v43 - 252);
  v46.n128_u64[0] = 0x9898989898989898LL;
  v46.n128_u64[1] = 0x9898989898989898LL;
  __n128 v47 = (__n128)vdupq_n_s32(0x8684D3Bu);
  __n128 v48 = (__n128)vdupq_n_s32(0x88684D2B);
  a27 = v40 - 16;
  uint64_t v49 = (v39 - 2);
  __n128 v50 = (__n128)vdupq_n_s32(0x8684D2Fu);
  v51.n128_u64[0] = 0x3030303030303030LL;
  v51.n128_u64[1] = 0x3030303030303030LL;
  int v52 = *(_DWORD *)(v43 - 176);
  int v54 = *(_DWORD *)(v43 - 172);
  int v53 = *(_DWORD *)(v43 - 168);
  int v55 = *(_BYTE *)(v43 - 156) ^ 0xAB;
  if (v55 == 2)
  {
    a25 = *(_DWORD *)(v43 - 168);
    a26 = v44;
    int8x16x4_t v101 = vld4q_s8(v45);
    uint8x16_t v80 = (uint8x16_t)veorq_s8(v101.val[0], (int8x16_t)v46);
    uint16x8_t v81 = vmovl_u8(*(uint8x8_t *)v80.i8);
    uint16x8_t v82 = vmovl_high_u8(v80);
    uint8x16_t v83 = (uint8x16_t)veorq_s8(v101.val[1], (int8x16_t)v46);
    _Q22 = vmovl_u8(*(uint8x8_t *)v83.i8);
    _Q21 = vmovl_high_u8(v83);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }

    uint8x16_t v88 = (uint8x16_t)veorq_s8(v101.val[2], (int8x16_t)v46);
    uint16x8_t v89 = vmovl_high_u8(v88);
    uint16x8_t v90 = vmovl_u8(*(uint8x8_t *)v88.i8);
    v101.val[0] = veorq_s8(v101.val[3], (int8x16_t)v46);
    v101.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v101.val[0]);
    v101.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[1]);
    v101.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v101.val[1].i8);
    v101.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v101.val[0].i8);
    v101.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v101.val[0]);
    v101.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v101.val[0].i8);
    int32x4_t v91 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8( (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL),  (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v81.i8), 0x18uLL)),  v101.val[0]);
    int32x4_t v92 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v90, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v81), 0x18uLL)),  v101.val[3]);
    int32x4_t v93 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8( (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL),  (int8x16_t)vshll_n_u16(*(uint16x4_t *)v89.i8, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)),  v101.val[1]);
    int32x4_t v94 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v89, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)),  v101.val[2]);
    v101.val[0] = veorq_s8( vandq_s8((int8x16_t)v91, (int8x16_t)v47),  (int8x16_t)(*(_OWORD *)v101.val & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v101.val[3] = veorq_s8( vandq_s8((int8x16_t)v92, (int8x16_t)v47),  (int8x16_t)(*(_OWORD *)&v101.val[3] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v101.val[1] = veorq_s8( vandq_s8((int8x16_t)v93, (int8x16_t)v47),  (int8x16_t)(*(_OWORD *)&v101.val[1] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v101.val[2] = veorq_s8( vandq_s8((int8x16_t)v94, (int8x16_t)v47),  (int8x16_t)(*(_OWORD *)&v101.val[2] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    a35 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v101.val[1], (int32x4_t)v101.val[1])), (int32x4_t)v48);
    a36 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v101.val[2], (int32x4_t)v101.val[2])), (int32x4_t)v48);
    a33 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v101.val[0], (int32x4_t)v101.val[0])), (int32x4_t)v48);
    a34 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v101.val[3], (int32x4_t)v101.val[3])), (int32x4_t)v48);
    int v95 = (_DWORD *)&a33 + v42 + 1677465096;
    int v96 = *(v95 - 8) ^ *(v95 - 3);
    int v97 = v96 + v38 - ((2 * v96) & 0x10D09A56);
    int v98 = *(v95 - 16) ^ *(v95 - 14);
    HIDWORD(v99) = v98 ^ 0x8684D2B ^ v97;
    LODWORD(v99) = v98 ^ ~v97;
    *int v95 = (v99 >> 31) + v38 - ((2 * (v99 >> 31)) & 0x10D09A56);
    return ((uint64_t (*)(uint64_t))(*(void *)(v41 + 8LL * ((15 * (v40 != 1677465033)) ^ 0x242)) - 12LL))(v49);
  }

  else if (v55 == 1)
  {
    a25 = *(_DWORD *)(v43 - 168);
    a26 = v44;
    int8x16x4_t v100 = vld4q_s8(v45);
    uint8x16_t v56 = (uint8x16_t)veorq_s8(v100.val[0], (int8x16_t)v46);
    uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v56.i8);
    int8x16_t v58 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8);
    int8x16_t v59 = (int8x16_t)vmovl_high_u16(v57);
    uint16x8_t v60 = vmovl_high_u8(v56);
    int8x16_t v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
    int8x16_t v62 = (int8x16_t)vmovl_high_u16(v60);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v100.val[1], (int8x16_t)v46);
    uint16x8_t v64 = vmovl_high_u8(v63);
    uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v63.i8);
    uint8x16_t v66 = (uint8x16_t)veorq_s8(v100.val[2], (int8x16_t)v46);
    _Q26 = (int8x16_t)vmovl_high_u8(v66);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
    int8x16_t v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }

    int8x16_t v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }

    v100.val[0] = veorq_s8(v100.val[3], (int8x16_t)v46);
    v100.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v100.val[0]);
    v100.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[1]);
    v100.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v100.val[0].i8);
    v100.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v100.val[0]);
    v100.val[0] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v100.val[0].i8), 0x18uLL), v69),  vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), v58));
    v100.val[3] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v100.val[3], 0x18uLL), _Q25),  vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v59));
    v100.val[1] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v100.val[1].i8), 0x18uLL), v74),  vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), v61));
    v100.val[2] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v100.val[2], 0x18uLL), _Q26),  vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v62));
    int32x4_t v75 = (int32x4_t)veorq_s8( vandq_s8(v100.val[0], (int8x16_t)v50),  (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v76 = (int32x4_t)veorq_s8( vandq_s8(v100.val[3], (int8x16_t)v50),  (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v77 = (int32x4_t)veorq_s8( vandq_s8(v100.val[1], (int8x16_t)v50),  (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v78 = (int32x4_t)veorq_s8( vandq_s8(v100.val[2], (int8x16_t)v50),  (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[1], vaddq_s32(v77, v77)), (int32x4_t)v48);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[2], vaddq_s32(v78, v78)), (int32x4_t)v48);
    a33 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[0], vaddq_s32(v75, v75)), (int32x4_t)v48);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v100.val[3], vaddq_s32(v76, v76)), (int32x4_t)v48);
  }

  else
  {
    *(_DWORD *)(v43 - 180) = 2 * (*(_DWORD *)(v43 - 180) ^ v39) + v39 - (v37 & (4 * (*(_DWORD *)(v43 - 180) ^ v39)));
    *(_DWORD *)(v43 - 176) = 2 * (v52 ^ v39) + v39 - (v37 & (4 * (v52 ^ v39)));
    *(_DWORD *)(v43 - 172) = 2 * (v54 ^ v39) + v39 - (v37 & (4 * (v54 ^ v39)));
    *(_DWORD *)(v43 - 168) = 2 * (v53 ^ v39) + v39 - (v37 & (4 * (v53 ^ v39)));
    a29 = 0LL;
    return v44(v49, v46, v47, v48, v50, v51);
  }

uint64_t sub_10053D138( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, int a21, uint64_t a22, unsigned int a23)
{
  else {
    BOOL v25 = a21 + 1215073226 > a23;
  }
}

uint64_t sub_10053D1C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
}

uint64_t sub_10053D208( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return ((uint64_t (*)(void))(*(void *)(v24
                                        + 8LL
                                        * (((~a20 + v21 - (unint64_t)(((v23 + v22 - 1126) ^ 0x5310CBC0u) + v20) > 0xF)
                                          * ((v22 - a5 - 895) ^ (v23 - 25))) ^ v22))
                            - 12LL))();
}

uint64_t sub_10053D260( int8x16_t a1, double a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11, int a12)
{
  *unsigned int v13 = vaddq_s8( vsubq_s8( *(int8x16_t *)(v16 + (v12 + a9)),  vandq_s8( vaddq_s8(*(int8x16_t *)(v16 + (v12 + a9)), *(int8x16_t *)(v16 + (v12 + a9))),  a5)),  a1);
  return (*(uint64_t (**)(void))(v17 + 8LL * ((((v15 ^ (v14 + 4)) * a11 == 136LL) * a12) ^ (a10 + v15 + 199))))();
}

uint64_t sub_10053D2C0@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W7>, uint64_t a4@<X8>)
{
  *(_BYTE *)(v6 + a4) = *(_BYTE *)(v8 + (v4 + a1))
  return (*(uint64_t (**)(void))(v9 + 8LL * (((a4 + 1 == (v5 - v7 + 88) - 24LL) * a3) ^ (a2 + v5 + 44))))();
}

uint64_t sub_10053D314( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  BOOL v22 = v19 + 712596016 < (a19 - 705344621);
  return ((uint64_t (*)(void))(*(void *)(v20 + 8LL * ((46 * (((v21 - 34) ^ v22) & 1)) ^ v21)) - 8LL))();
}

uint64_t sub_10053D380( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  uint64_t v21 = a1 ^ 0xBE42DBB5;
  int v22 = 1759421093 * ((((v20 - 152) | 0x4697CBA3) + (~(v20 - 152) | 0xB968345C)) ^ 0xF5EA7BF6);
  *(void *)(v20 - 152) = a16;
  *(_DWORD *)(v20 - 144) = v22 + a1 + 713;
  *(_DWORD *)(v20 - 140) = a19 + ((3 * (a1 ^ 0x70)) ^ 0xBF6CB29A) + v22;
  uint64_t v23 = sub_10052C098(v20 - 152);
  uint64_t v24 = *(_DWORD *)(v20 - 184) & 0x3F;
  *(_BYTE *)(v20 - 252 + (v24 ^ 0x1F)) = 24;
  return ((uint64_t (*)(uint64_t))(3192052612LL
                                          - v21
}

uint64_t sub_10053D490( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, int a26)
{
  return ((uint64_t (*)(void))(*(void *)(v28
                                        + 8LL
                                        * (((v26 != (((a26 - 1539158119) | 0x1A008B08) ^ (v27 + 47)))
                                          * ((a26 - 1101306856) & 0x41A49BF7 ^ 0x17E)) ^ a26))
                            - 4LL))();
}

uint64_t sub_10053D4F0()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL
}

uint64_t sub_10053D530()
{
  *(void *)(v4 - 252 + v0 + 1) = 0x9898989898989898LL;
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_10053D598(double a1)
{
  *(double *)(v3 + __chkstk_darwin(v4, v5) = a1;
}

uint64_t sub_10053D5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * (int)(((((v7 == v6) ^ (v5 - a5 + 1)) & 1)
                                               * (a5 + ((v5 - 10756378) & 0xBEE6FBBA) - 215)) | v5))
                            - 4LL))();
}

void sub_10053D614()
{
}

uint64_t sub_10053D624@<X0>(int a1@<W3>, int a2@<W8>)
{
  BOOL v11 = v3 < v5;
  *(_BYTE *)(v10 - 252 + (a2 - 1749698361)) = *(_BYTE *)(v7 + (v2 + a1))
  unsigned int v12 = v2 + 1 + v6;
  int v13 = v11 ^ (v12 < v5);
  BOOL v14 = v12 < v3;
  if (!v13) {
    BOOL v11 = v14;
  }
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((!v11 * v4) ^ v9)) - 8LL))(v9 ^ 0x562u);
}

uint64_t sub_10053D6A8@<X0>(int a1@<W4>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((51 * (a2 + ((599 * (v4 ^ (v2 + 3))) ^ 0x8ECDA9C3) > 0x37)) ^ (a1 + v4 + 232)))
                            - 8LL))();
}

uint64_t sub_10053D6F0@<X0>(int a1@<W4>, unsigned int a2@<W8>)
{
  uint64_t v5 = a2;
  unint64_t v6 = a2 - 1899123002LL + ((v2 - 1793) | 0x182u) - 389;
  if (v6 <= 0x38) {
    unint64_t v6 = 56LL;
  }
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL
                                             * (((v6 - v5 + 1899123002 > 7) * ((v2 - a1 - 1566) ^ (v3 + 23))) ^ v2))
                            - 4LL))();
}

uint64_t sub_10053D760()
{
  *(void *)(v4 - 252 + v2 - 1899123002) = 0x9898989898989898LL;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((((v1 & 0xFFFFFFFFFFFFFFF8LL) == 8) * (v0 ^ 0x4BF)) ^ v0)) - 4LL))();
}

uint64_t sub_10053D7B4(double a1)
{
  double *v2 = a1;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (((v4 == 0) * v3) ^ v1)) - 4LL))();
}

uint64_t sub_10053D7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * (int)((((((v7 - a5 + 1) ^ (v5 == v6)) & 1) == 0)
                                               * (a5 + ((v7 - 11543106) & 0xBEF2FBCD) + 680)) ^ v7))
                            - 8LL))();
}

void sub_10053D82C()
{
  int v1 = *(unsigned __int8 *)(v0 - 156) ^ 0xAB;
  if (v1 == 1)
  {
    unsigned int v8 = *(_DWORD *)(v0 - 188);
    unsigned int v7 = *(_DWORD *)(v0 - 184);
    *(_BYTE *)(v0 - 196) = 8 * ~(_BYTE)v7 - 16 * (~(_BYTE)v7 & 3) - 104;
    *(_BYTE *)(v0 - 195) = ((v7 >> 5) ^ 0xA2) - ((v7 >> 4) & 0x30) - 104;
    *(_BYTE *)(v0 - 194) = ((v7 >> 13) ^ 0x7C) - 2 * (((v7 >> 13) ^ 0x7C) & 0x1A ^ (v7 >> 13) & 2) - 104;
    HIDWORD(v9) = v8 ^ 3;
    LODWORD(v9) = v7 ^ 0x60000000;
    *(_BYTE *)(v0 - 193) = ((v7 >> 21) ^ 0x8B) + (~(2 * ((v7 >> 21) ^ 0x8B)) | 0xCF) - 103;
    *(_BYTE *)(v0 - 192) = (v9 >> 29) - ((2 * (v9 >> 29)) & 0x30) - 104;
    *(_BYTE *)(v0 - 191) = ((v8 >> 5) ^ 0xF2) - ((2 * ((v8 >> 5) ^ 0xF2)) & 0x30) - 104;
    *(_BYTE *)(v0 - 190) = ((v8 >> 13) ^ 0xD6) - ((2 * ((v8 >> 13) ^ 0xD6)) & 0x30) - 104;
    int v5 = (v8 >> 21) ^ 0x2C;
    char v6 = 2 * v5;
  }

  else
  {
    if (v1 != 2) {
      goto LABEL_6;
    }
    unsigned int v2 = *(_DWORD *)(v0 - 188);
    unsigned int v3 = *(_DWORD *)(v0 - 184);
    *(_BYTE *)(v0 - 196) = ((v2 >> 21) ^ 0x2C) - ((2 * ((v2 >> 21) ^ 0x2C)) & 0x30) - 104;
    *(_BYTE *)(v0 - 195) = ((v2 >> 13) ^ 0xD6) - ((2 * ((v2 >> 13) ^ 0xD6)) & 0x30) - 104;
    *(_BYTE *)(v0 - 194) = ((v2 >> 5) ^ 0xF2) + (~(2 * ((v2 >> 5) ^ 0xF2)) | 0xCF) - 103;
    HIDWORD(__chkstk_darwin(v3, v4) = v2 ^ 3;
    LODWORD(__chkstk_darwin(v3, v4) = v3 ^ 0x60000000;
    *(_BYTE *)(v0 - 193) = (v4 >> 29) - ((2 * (v4 >> 29)) & 0x30) - 104;
    *(_BYTE *)(v0 - 192) = ((v3 >> 21) ^ 0x8B) - ((2 * ((v3 >> 21) ^ 0x8B)) & 0x30) - 104;
    *(_BYTE *)(v0 - 191) = ((v3 >> 13) ^ 0x7C) - ((2 * ((v3 >> 13) ^ 0x7C)) & 0x30) - 104;
    *(_BYTE *)(v0 - 190) = ((v3 >> 5) ^ 0xA2) - ((v3 >> 4) & 0x30) - 104;
    LOBYTE(__chkstk_darwin(v2, v3) = ~(_BYTE)v3;
    LOBYTE(__chkstk_darwin(v4, v5) = 8 * v3;
    char v6 = 16 * v3;
  }

  *(_BYTE *)(v0 - 189) = v5 - (v6 & 0x30) - 104;
LABEL_6:
  JUMPOUT(0x10053C590LL);
}

uint64_t sub_10053DCE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v13 = *(_DWORD *)(v12 - 252 + ((v10 + v8) & 0xFFFFFFFC) + 72);
  int v14 = (v13 >> ((v9 - 101) & 0xD8 ^ (a4 + 8))) ^ 0x7F;
  *(_BYTE *)(a7 + (v10 + v8 + 1)) = BYTE2(v13) - ((v13 >> 15) & 0x30) - 104;
  *(_BYTE *)(a7 + (v10 + v8 + 2)) = (BYTE1(v13) ^ 0x66) - ((v13 >> 7) & 0x30) - 104;
  *(_BYTE *)(a7 + (v10 + v8)) = v14 - ((2 * v14) & 0x30) - 104;
  *(_BYTE *)(a7 + (v10 + v8 + 3)) = v13 ^ 0x92;
  unsigned int v15 = *(_DWORD *)(v12 - 160) - 1711804677;
  BOOL v16 = v15 < v7;
  BOOL v17 = v10 + 2006261825 < v15;
  if (v10 + 2006261825 < v7 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v11 + 8LL * ((515 * v17) | v9)))();
}

uint64_t sub_10053DDD8@<X0>( int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22)
{
  uint64_t v24 = (a1 + a2 + 76);
  unint64_t v25 = ((unint64_t)&a22 ^ 0x62BFF7AFDDD7FDFALL)
      + ((2LL * (void)&a22) & 0xC57FEF5FBBAFFBF0LL)
      + (v24 ^ 0xDFF589F6AB6BBEF3LL)
      + 70;
  *(_BYTE *)(v23 - 161) = (v25 ^ 0xBA) * (v25 + 17);
  return ((uint64_t (*)(void))(*(void *)(v22 + 8LL * (int)v24) - 8LL))();
}

void sub_10053DE78()
{
}

uint64_t sub_10053DE84( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
  *(_DWORD *)(&a33 + a29) = 549541838;
  return ((uint64_t (*)(uint64_t))(*(void *)(v34
                                                      + 8LL * ((1713 * (((v33 - 451) ^ 0x1E3) != 348)) ^ (v33 - 451)))
                                          - 4LL))(3295926840LL);
}

uint64_t sub_10053DF30(uint64_t a1, int a2)
{
}

uint64_t sub_10053DF7C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, int a32)
{
  BOOL v36 = a32 - 820334914 < (v34 - 1332947173);
  return ((uint64_t (*)(void))(*(void *)(v35 + 8LL * ((!v36 * (v32 - v33 + 9)) ^ (a5 + v32 + 957))) - 4LL))();
}

uint64_t sub_10053E17C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * ((38
                                          * (*(_DWORD *)(a6
                                                       + 48LL * ((((v6 - 1109) | 0x88) ^ (a1 + v6 - 973 - 112)) + v8)
                                                       + 36) == v8)) ^ v6))
                            - 12LL))();
}

uint64_t sub_10053E1D8@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12 = a1 + 184;
  int v13 = (a1 - 1241360376) | 0x8408380;
  int v14 = 628203409 * ((((v11 - 152) | 0xC162CF87) - (v11 - 152) + ((v11 - 152) & 0x3E9D3078)) ^ 0x43EAC3B4);
  *(_DWORD *)(v11 - 136) = v12 - v14 + 647;
  *(_DWORD *)(v11 - 132) = v7 - v14 + 233078638;
  *(void *)(v11 - 128) = a7;
  *(void *)(v11 - 152) = a6;
  *(void *)(v11 - 144) = a4;
  *(void *)(v11 - 112) = v8;
  *(void *)(v11 - 104) = a5;
  ((void (*)(uint64_t))((char *)*(&off_10090D690 + (v12 ^ 0x91)) - 4))(v11 - 152);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v10
                                                                        + 8LL
                                                                        * (((*(_DWORD *)(v11 - 120) == v9)
                                                                          * (v13 + 1102916086)) ^ v12))
                                                            - 4LL))( 3295926840LL,  999040455LL,  549541838LL);
}

uint64_t sub_10053E2F8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL * ((61 * (*(_DWORD *)(a6 + 48LL * (v8 + a1)) != 621632200)) ^ (v6 + 1353)))
                            - 4LL))();
}

uint64_t sub_10053E340()
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * ((475
                                          * (((v3 + ((v2 - 663738888) & 0x278FD4BE) - 1623437198) ^ v0) == v1 - 638409416)) ^ (v2 - 663738888) & 0x278FD4BEu))
                            - 4LL))();
}

void sub_10053E3A0(int a1@<W4>, int a2@<W8>)
{
  __asm { BR              X10 }

uint64_t sub_10053E424( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, int a32, int a33)
{
  *(_DWORD *)(a4 + 392) = v33;
  *(_DWORD *)(a4 + 396) = a33;
  *(void *)(a4 + 400) = a30;
  *(_DWORD *)(a4 + 408) = a32 - v34 + 768623631;
  *(void *)(a4 + 416) = v35 + (v34 - 1218717361);
  int v41 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 48LL * v36 + 8))(a17, a25);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v38
                                                                        + 8LL
                                                                        * ((1006
                                                                          * (v41
                                                                           + (((v40 + 407017672) | 0xA6004208) ^ 0x362A96A3)
                                                                           - (v39 & (2 * v41)) == v37)) ^ v40))
                                                            - 4LL))( 3295926840LL,  999040455LL,  549541838LL);
}

uint64_t sub_10053E510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5
                                                                                 + 8LL
                                                                                 * ((1347
                                                                                   * (v4 < ((v6 + 103) ^ 0x11CuLL))) ^ (v6 + 103)))
                                                                     - ((v6 + 103) ^ 0x1A7u)
                                                                     + 176LL))( a1,  a2,  a3,  v3);
}

uint64_t sub_10053E554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(v7
                            - (v6 - a5 + 106)
                            + *(void *)(v9
                                        + 8LL
                                        * ((197
                                          * (((v6 - 870939523) & 0x33E97BBD ^ 0x4473DA80u)
                                           + *(_DWORD *)(a6 + 48LL * v8 + 36) > 0x80000002)) ^ v6))))();
}

uint64_t sub_10053E5D0@<X0>(_DWORD *a1@<X3>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((1162 * (*a1 - 549541838 < (((a2 + 939706184) | 0x86401388) ^ (v2 + 16)))) ^ a2))
                            - 4LL))();
}

uint64_t sub_10053E62C@<X0>( _DWORD *a1@<X3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, int a27)
{
  uint64_t v35 = &a1[6 * v28];
  v35[2] = v34;
  v35[3] = v30;
  *((void *)v35 + 2) = v31;
  v35[6] = a27;
  *a1 = v27 + 1;
  return ((uint64_t (*)(void))(*(void *)(v33
                                        + 8LL
                                        * ((((*(_DWORD *)(a2 + 48LL * v32 + 32) + 1148443192) < 0x80000003)
                                          * (a3 + 1002)) ^ a3))
                            - ((a3 - 1085539580) & 0xFEF6DFCB ^ (unint64_t)(v29 + 8))))();
}

uint64_t sub_10053E6B4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 - ((((a9 - 8) | 8) + 507514952) | 0xA002CA88) + *(void *)(v26 + 8LL * ((707 * (v25 == -2006430421)) ^ ((a9 - 8) | 8)))))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24);
}

uint64_t sub_10053E71C@<X0>(int a1@<W1>, int a2@<W2>, _DWORD *a3@<X3>, int a4@<W8>)
{
  BOOL v7 = v5 != a1 + (a4 ^ 0x1E3) - 347 || *a3 != a2;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((1713 * v7) ^ a4)) - 4LL))();
}

void sub_10053E75C()
{
}

void sub_10053E7D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (235795823 * ((a1 - 1923327579 - 2 * (a1 & 0x8D5C59A5)) ^ 0x19F110FC));
  __asm { BR              X13 }

uint64_t sub_10053E944@<X0>( void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28, uint64_t a29, char a30, uint64_t a31, char a32, uint64_t a33, char a34, uint64_t a35, char a36, uint64_t a37, char a38)
{
  int v44 = &a34 + v38;
  uint16x8_t v60 = &a32 + v38;
  int8x16_t v59 = &a28 + v38;
  int8x16_t v58 = &a38 + v38;
  uint16x8_t v57 = &a30 + v38;
  uint8x16_t v56 = &a24 + v38;
  int v55 = &a36 + v38;
  char v45 = &a22 + v38;
  uint64_t v46 = a1[4];
  uint64_t v61 = a1[5];
  uint64_t v47 = a1[2];
  uint64_t v48 = *(void *)(v47 - 0x33A24D71401A86CLL);
  *(void *)(v43 - 136) = &a34 + v38;
  *(void *)(v43 - 128) = v48;
  *(void *)(v43 - 120) = v46;
  *(void *)(v43 - 112) = a2;
  int v62 = v39 - 285;
  *(_DWORD *)(v43 - 144) = v39 - 285 + ((((v43 - 144) | 0x6FE9286B) + (~(v43 - 144) | 0x9016D794)) ^ 0xDC94983E) * v41;
  *(void *)(v43 - 104) = v47;
  uint64_t v49 = (184 * (v39 ^ 0x481) + 1847182478) & 0x91E63EFE;
  __n128 v50 = *(void (**)(uint64_t))(v40 + 8LL * (v39 - 1118));
  int v51 = v39;
  v50(v43 - 144);
  *(_DWORD *)(v43 - 128) = v51
                         + 1225351577 * ((((v43 - 144) | 0x22994526) - ((v43 - 144) & 0x22994526)) ^ 0x1039D30)
                         + 563;
  *(void *)(v43 - 144) = v47;
  *(void *)(v43 - 136) = v45;
  *(void *)(v43 - 120) = v44;
  *(void *)(v43 - 112) = v46;
  ((void (*)(uint64_t))((char *)*(&off_10090D690 + v51 - 938) - 12))(v43 - 144);
  *(_DWORD *)(v43 - 144) = v62 + 1759421093 * ((((v43 - 144) | 0x65772B9F) - ((v43 - 144) & 0x65772B9F)) ^ 0xD60A9BCB);
  *(void *)(v43 - 136) = v60;
  *(void *)(v43 - 128) = v44;
  *(void *)(v43 - 112) = v45;
  *(void *)(v43 - 104) = v47;
  *(void *)(v43 - 120) = v46;
  v50(v43 - 144);
  *(void *)(v43 - 112) = v45;
  *(void *)(v43 - 104) = v47;
  *(_DWORD *)(v43 - 144) = v62 + 1759421093 * ((2 * ((v43 - 144) & 0x4A8C94F8) - (v43 - 144) - 1250727161) ^ 0x60EDB53);
  *(void *)(v43 - 136) = v59;
  *(void *)(v43 - 128) = v60;
  *(void *)(v43 - 120) = v46;
  v50(v43 - 144);
  *(void *)(v43 - 136) = v58;
  *(void *)(v43 - 128) = v59;
  *(void *)(v43 - 112) = v45;
  *(void *)(v43 - 104) = v47;
  *(_DWORD *)(v43 - 144) = v62 + 1759421093 * ((2 * ((v43 - 144) & 0x5AA23F78) - (v43 - 144) + 626901121) ^ 0x962070D5);
  *(void *)(v43 - 120) = v46;
  v50(v43 - 144);
  *(_DWORD *)(v43 - 144) = v62 + 1759421093 * ((v43 - 144) ^ 0xB37DB054);
  *(void *)(v43 - 128) = v58;
  *(void *)(v43 - 120) = v46;
  *(void *)(v43 - 136) = v57;
  *(void *)(v43 - 112) = v45;
  *(void *)(v43 - 104) = v47;
  v50(v43 - 144);
  *(_DWORD *)(v43 - 144) = v62
                         + 1759421093
                         * ((((v43 - 144) | 0xE2ED7C5F) - (v43 - 144) + ((v43 - 144) & 0x1D1283A0)) ^ 0x5190CC0B);
  *(void *)(v43 - 120) = v46;
  *(void *)(v43 - 112) = v45;
  *(void *)(v43 - 128) = v57;
  *(void *)(v43 - 136) = v56;
  *(void *)(v43 - 104) = v47;
  v50(v43 - 144);
  *(_DWORD *)(v43 - 144) = v62 + 1759421093 * (((v43 - 144) & 0x4E8A1644 | ~((v43 - 144) | 0x4E8A1644)) ^ 0x20859EF);
  *(void *)(v43 - 120) = v46;
  *(void *)(v43 - 112) = v45;
  *(void *)(v43 - 136) = v55;
  *(void *)(v43 - 128) = v56;
  *(void *)(v43 - 104) = v47;
  v50(v43 - 144);
  *(void *)(v43 - 136) = v45;
  *(void *)(v43 - 128) = v55;
  *(_DWORD *)(v43 - 144) = v62 + 1759421093 * ((2 * ((v43 - 144) & 0x4B665BF8) - (v43 - 144) + 882484229) ^ 0x87E41451);
  *(void *)(v43 - 112) = v45;
  *(void *)(v43 - 104) = v47;
  *(void *)(v43 - 120) = v46;
  v50(v43 - 144);
  uint64_t v52 = *(void *)(v47 - 0x33A24D71401A874LL);
  *(_DWORD *)(v43 - 128) = v51
                         - 1759421093
                         * (((((v43 - 144) | 0xC4C87612) ^ 0xFFFFFFFE) - (~(v43 - 144) | 0x3B3789ED)) ^ 0x884A39B9)
                         - 835;
  *(void *)(v43 - 144) = v42;
  *(void *)(v43 - 136) = v52;
  sub_100517570(v43 - 144);
  *(_DWORD *)(v43 - 132) = (v51 + 263) ^ (1734042137
                                        * ((((v43 - 144) | 0x822A0DBE) - (v43 - 144) + ((v43 - 144) & 0x7DD5F240)) ^ 0xDEE4CEF3));
  *(void *)(v43 - 144) = v61;
  uint64_t v53 = sub_100517730(v43 - 144);
  return ((uint64_t (*)(uint64_t))(*(void *)(a21
                                                      + 8LL
                                                      * ((38
}

uint64_t sub_10053EE14()
{
  int v3 = 535753261 * ((v2 + 1689794359 - 2 * ((v2 - 144) & 0x64B837C7)) ^ 0x6E4C39E8);
  *(void *)(v2 - 136) = v6;
  *(_DWORD *)(v2 - 144) = v3 + v0 - 439;
  *(_DWORD *)(v2 - 128) = v3 ^ 0x25B8EE99;
  sub_10053FB04((_DWORD *)(v2 - 144));
  *(void *)(v2 - 136) = v1;
  *(void *)(v2 - 128) = v1;
  *(_DWORD *)(v2 - 144) = v0
                        + 1759421093 * ((2 * ((v2 - 144) & 0x43B959E8) - (v2 - 144) + 1011262992) ^ 0x8F3B1644)
                        - 408;
  *(void *)(v2 - 112) = v6;
  *(void *)(v2 - 104) = v8;
  *(void *)(v2 - 120) = v9;
  v7(v2 - 144);
  *(_DWORD *)(v2 - 128) = ((v0 + 1829388769) & 0x92F5BFFF) - 1759421093 * ((v2 - 144) ^ 0xB37DB054) - 1439;
  *(void *)(v2 - 144) = v5;
  *(void *)(v2 - 136) = v1;
  return sub_100517570(v2 - 144);
}

uint64_t sub_10053FB04(_DWORD *a1)
{
  unsigned int v1 = 535753261 * ((2 * (a1 & 0x629F6417) - (_DWORD)a1 - 1654613016) ^ 0x979495C7);
  unsigned int v2 = *a1 - v1;
  int v3 = a1[4] ^ v1;
  unsigned int v5 = v3 - 632876696;
  BOOL v4 = v3 - 632876696 < 0;
  LODWORD(v6) = 632876696 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + (int)(v2 - 749))
                                        + 8 * (int)((1785 * (v6 != ((2 * (_DWORD)v6) & 0xC2DEB70))) ^ v2)
                                        - 12)
                            - 8LL))();
}

void sub_10053FBB8(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x13AAEC8A5CF1D158LL) = (v2 + 102167992) ^ 0x82A9720E;
  *(_DWORD *)(v1 - 0x13AAEC8A5CF1D15CLL) = a1 + 1;
}

void sub_10053FC10(uint64_t a1, uint64_t a2)
{
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  unsigned int v3 = 3804331 * ((2 * (&v5 & 0x6A05AD98) - &v5 - 1778757019) ^ 0x6F64A133);
  unsigned int v7 = v3 + 629839620;
  int v5 = v3 ^ 0x45E0925B;
  uint64_t v6 = &STACK[0x24207EE97761D818];
  sub_1005300F4((uint64_t)&v5);
  __asm { BR              X9 }

uint64_t sub_10053FDC8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v8 = v5 - 1609297849;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((638 * (a4 - v4 - v6 + v8 > 0xE)) ^ 0x52Bu)) - 4LL))();
}

uint64_t sub_10053FE34(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v10 = v5 + v4;
  int v11 = v10 + v6;
  return (*(uint64_t (**)(void))(v9 + 8LL * ((438 * (a4 - v10 >= v8 + v7 + ((a4 - 273) ^ 0x111u) + v11)) ^ 0xA1u)))();
}

uint64_t sub_10053FE88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, char a25)
{
  return ((uint64_t (*)(void))(*(void *)(v28
                                        + 8LL
                                        * ((55
}

uint64_t sub_10053FEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v7.i64[0] = 0x3030303030303030LL;
  v7.i64[1] = 0x3030303030303030LL;
  v8.i64[0] = 0x9898989898989898LL;
  v8.i64[1] = 0x9898989898989898LL;
  *(int8x16_t *)(v4 + ((v2 - 1181 + 4294967134LL) & (a1 + a2))) = vaddq_s8( vsubq_s8(*v5, vandq_s8(vaddq_s8(*v5, *v5), v7)),  v8);
  return (*(uint64_t (**)(void))(v6 + 8LL * ((911 * (((v3 + 1) & 0x1FFFFFFF0LL) == 16)) ^ v2)))();
}

void sub_10053FF54()
{
}

uint64_t sub_10053FF60()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8LL
                                            * (int)(((v3 ^ 0x46B ^ (v3 + 599897833) & 0xDC3E487F) * (v1 == v2)) ^ v3)))(v0);
}

uint64_t sub_10053FFAC@<X0>( uint64_t a1@<X0>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + (a1 + a3)) = *(_BYTE *)(v20 + v22 - 1145886373)
                                    - ((((v21 - 17) | 0xA) ^ 0x3A) & (2 * *(_BYTE *)(v20 + v22 - 1145886373)))
                                    - 104;
  return (*(uint64_t (**)(uint64_t))(v23 + 8LL * ((1392 * ((a2 + a1 + 1) > 0x3F)) ^ v21)))(a1 + 1);
}

uint64_t sub_100540018( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, int32x4_t a43, int32x4_t a44, int32x4_t a45, int32x4_t a46)
{
  int v55 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(void *)(v48 + 8LL * v46) - 4LL);
  v56.n128_u64[0] = 0x9898989898989898LL;
  v56.n128_u64[1] = 0x9898989898989898LL;
  __n128 v57 = (__n128)vdupq_n_s32(0x8684D3Bu);
  uint64_t v118 = v53 - 16;
  __n128 v58 = (__n128)vdupq_n_s32(0x88684D2B);
  HIDWORD(v119) = a5 - 1888824310;
  __n128 v59 = (__n128)vdupq_n_s32(0x8684D2Fu);
  v60.n128_u64[0] = 0x3030303030303030LL;
  v60.n128_u64[1] = 0x3030303030303030LL;
  uint64_t v61 = HIDWORD(a33);
  HIDWORD(a22) = HIDWORD(a33);
  uint64_t v62 = a34;
  int v63 = BYTE4(a36) ^ 0xAB;
  LODWORD(v119) = BYTE4(a36) ^ 0xFFFFFFAB;
  if (v63 == 2)
  {
    HIDWORD(v120) = a34;
    unint64_t v121 = __PAIR64__(a35, HIDWORD(a34));
    uint64_t v122 = *(void *)(v48 + 8LL * v46) - 4LL;
    int8x16x4_t v124 = vld4q_s8((const char *)&a24 + 4);
    uint64_t v93 = (a6 + a5 + 504);
    HIDWORD(a16) = HIDWORD(a35);
    uint8x16_t v94 = (uint8x16_t)veorq_s8(v124.val[0], (int8x16_t)v56);
    uint16x8_t v95 = vmovl_u8(*(uint8x8_t *)v94.i8);
    uint16x8_t v96 = vmovl_high_u8(v94);
    uint8x16_t v97 = (uint8x16_t)veorq_s8(v124.val[1], (int8x16_t)v56);
    _Q22 = vmovl_u8(*(uint8x8_t *)v97.i8);
    _Q21 = vmovl_high_u8(v97);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }

    uint8x16_t v102 = (uint8x16_t)veorq_s8(v124.val[2], (int8x16_t)v56);
    uint16x8_t v103 = vmovl_high_u8(v102);
    uint16x8_t v104 = vmovl_u8(*(uint8x8_t *)v102.i8);
    v124.val[0] = veorq_s8(v124.val[3], (int8x16_t)v56);
    v124.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v124.val[0]);
    v124.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v124.val[1]);
    v124.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v124.val[1].i8);
    v124.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v124.val[0].i8);
    v124.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v124.val[0]);
    v124.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v124.val[0].i8);
    int32x4_t v105 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8( (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL),  (int8x16_t)vshll_n_u16(*(uint16x4_t *)v104.i8, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v95.i8), 0x18uLL)),  v124.val[0]);
    int32x4_t v106 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v104, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v95), 0x18uLL)),  v124.val[3]);
    int32x4_t v107 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8( (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL),  (int8x16_t)vshll_n_u16(*(uint16x4_t *)v103.i8, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v96.i8), 0x18uLL)),  v124.val[1]);
    int32x4_t v108 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v103, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v96), 0x18uLL)),  v124.val[2]);
    v124.val[0] = veorq_s8( vandq_s8((int8x16_t)v105, (int8x16_t)v57),  (int8x16_t)(*(_OWORD *)v124.val & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v124.val[3] = veorq_s8( vandq_s8((int8x16_t)v106, (int8x16_t)v57),  (int8x16_t)(*(_OWORD *)&v124.val[3] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v124.val[1] = veorq_s8( vandq_s8((int8x16_t)v107, (int8x16_t)v57),  (int8x16_t)(*(_OWORD *)&v124.val[1] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v124.val[2] = veorq_s8( vandq_s8((int8x16_t)v108, (int8x16_t)v57),  (int8x16_t)(*(_OWORD *)&v124.val[2] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    a45 = vaddq_s32(vsubq_s32(v107, vaddq_s32((int32x4_t)v124.val[1], (int32x4_t)v124.val[1])), (int32x4_t)v58);
    a46 = vaddq_s32(vsubq_s32(v108, vaddq_s32((int32x4_t)v124.val[2], (int32x4_t)v124.val[2])), (int32x4_t)v58);
    a43 = vaddq_s32(vsubq_s32(v105, vaddq_s32((int32x4_t)v124.val[0], (int32x4_t)v124.val[0])), (int32x4_t)v58);
    a44 = vaddq_s32(vsubq_s32(v106, vaddq_s32((int32x4_t)v124.val[3], (int32x4_t)v124.val[3])), (int32x4_t)v58);
    uint64_t v109 = (a6 + a5 + 544);
    int v110 = (_DWORD *)&a43 + v52 + 1452181763;
    int v111 = *((_DWORD *)&a43 + v52 + v109 + 1452181163) ^ *(v110 - 3);
    int v112 = v111 + v50 - ((2 * v111) & 0x10D09A56);
    int v113 = *(v110 - 16) ^ *(v110 - 14);
    uint64_t v114 = v113 ^ 0x8684D2B ^ v112;
    HIDWORD(v116) = v113 ^ 0x8684D2B ^ v112;
    LODWORD(v116) = v113 ^ ~v112;
    int v115 = v116 >> 31;
    uint64_t v117 = (2 * v115) & 0x10D09A56;
    *int v110 = v115 + v50 - v117;
    LODWORD(v120) = HIDWORD(a13) + 2062566555;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8LL * (int)((120 * (v53 == 1452181700)) ^ v93)) - 4LL))( v93,  v62,  v117,  v61,  v114,  282106454LL,  v109,  141053227LL,  a9,  a10,  a11,  a12,  a13,  a14,  v47,  a16,  v118,  v119,  v120,  v121,  v122,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42);
  }

  else if (v63 == 1)
  {
    int8x16x4_t v123 = vld4q_s8((const char *)&a24 + 4);
    int v64 = a5 ^ (a5 + 562);
    uint8x16_t v65 = (uint8x16_t)veorq_s8(v123.val[0], (int8x16_t)v56);
    uint16x8_t v66 = vmovl_u8(*(uint8x8_t *)v65.i8);
    int8x16_t v67 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v66.i8);
    int8x16_t v68 = (int8x16_t)vmovl_high_u16(v66);
    uint16x8_t v69 = vmovl_high_u8(v65);
    int8x16_t v70 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v69.i8);
    int8x16_t v71 = (int8x16_t)vmovl_high_u16(v69);
    uint8x16_t v72 = (uint8x16_t)veorq_s8(v123.val[1], (int8x16_t)v56);
    uint16x8_t v73 = vmovl_high_u8(v72);
    uint16x8_t v74 = vmovl_u8(*(uint8x8_t *)v72.i8);
    uint8x16_t v75 = (uint8x16_t)veorq_s8(v123.val[2], (int8x16_t)v56);
    _Q26 = (int8x16_t)vmovl_high_u8(v75);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v75.i8);
    int8x16_t v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }

    int8x16_t v83 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }

    v123.val[0] = veorq_s8(v123.val[3], (int8x16_t)v56);
    v123.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v123.val[0]);
    v123.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v123.val[1]);
    v123.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v123.val[0].i8);
    v123.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v123.val[0]);
    v123.val[0] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v123.val[0].i8), 0x18uLL), v78),  vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v74.i8, 8uLL), v67));
    v123.val[3] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v123.val[3], 0x18uLL), _Q25),  vorrq_s8((int8x16_t)vshll_high_n_u16(v74, 8uLL), v68));
    v123.val[1] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v123.val[1].i8), 0x18uLL), v83),  vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL), v70));
    v123.val[2] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v123.val[2], 0x18uLL), _Q26),  vorrq_s8((int8x16_t)vshll_high_n_u16(v73, 8uLL), v71));
    int32x4_t v84 = (int32x4_t)veorq_s8( vandq_s8(v123.val[0], (int8x16_t)v59),  (int8x16_t)(*(_OWORD *)&v67 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v85 = (int32x4_t)veorq_s8( vandq_s8(v123.val[3], (int8x16_t)v59),  (int8x16_t)(*(_OWORD *)&v68 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v86 = (int32x4_t)veorq_s8( vandq_s8(v123.val[1], (int8x16_t)v59),  (int8x16_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v87 = (int32x4_t)veorq_s8( vandq_s8(v123.val[2], (int8x16_t)v59),  (int8x16_t)(*(_OWORD *)&v71 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    a45 = vaddq_s32(vsubq_s32((int32x4_t)v123.val[1], vaddq_s32(v86, v86)), (int32x4_t)v58);
    a46 = vaddq_s32(vsubq_s32((int32x4_t)v123.val[2], vaddq_s32(v87, v87)), (int32x4_t)v58);
    a43 = vaddq_s32(vsubq_s32((int32x4_t)v123.val[0], vaddq_s32(v84, v84)), (int32x4_t)v58);
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v123.val[3], vaddq_s32(v85, v85)), (int32x4_t)v58);
    uint64_t v88 = ((v64 - 1116) ^ (unint64_t)(v52 - 502)) + v118;
    int v89 = (HIDWORD(a33) ^ v49)
        + v51
        + ((HIDWORD(a34) ^ v49) & (a34 ^ v49) | (a35 ^ v49) & (a34 ^ 0x80FF99F5))
        + *((_DWORD *)*(&off_10090D690 + v64 - 1440) + v88)
        + (a43.i32[(*((_BYTE *)*(&off_10090D690 + v64 - 1563) + v88 - 8) - 4)] ^ v50);
    char v90 = *((_BYTE *)*(&off_10090D690 + v64 - 1633) + v88 - 4) - 34;
    unsigned int v91 = (v89 + v49 - (v54 & (2 * v89))) ^ v49;
    return ((uint64_t (*)(void, void))(*(void *)(v48 + 8LL * (v64 ^ 0xF2)) - 12LL))( a34,  ((v91 << v90) | (v91 >> -v90))
           + (a34 ^ v49)
           + v49
           - (v54 & (2 * (((v91 << v90) | (v91 >> -v90)) + (a34 ^ v49)))));
  }

  else
  {
    HIDWORD(a33) = 2 * (HIDWORD(a33) ^ v49) + v49 - (v54 & (4 * (HIDWORD(a33) ^ v49)));
    LODWORD(a34) = 2 * (a34 ^ v49) + v49 - (v54 & (4 * (a34 ^ v49)));
    HIDWORD(a34) = 2 * (HIDWORD(a34) ^ v49) + v49 - (v54 & (4 * (HIDWORD(a34) ^ v49)));
    LODWORD(a35) = 2 * (a35 ^ v49) + v49 - (v54 & (4 * (a35 ^ v49)));
    return v55(v56, v57, v58, v59, v60);
  }

uint64_t sub_100540B74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, int a18, int a19, unsigned int a20)
{
  else {
    BOOL v21 = a15 + 1685303877 > a20;
  }
  return ((uint64_t (*)(uint64_t))(*(void *)(v20
                                                      + 8LL
                                                      * (int)((!v21 * (a19 & 0x85E8DBFA ^ 0x46F)) ^ (a6 + a5 + 722)))
}

uint64_t sub_100540C14(uint64_t a1, int a2, int a3)
{
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (v3 ^ (1295 * (a2 + a3 + 63 >= (a2 + a3)))))
                            + 3937162139LL
                            - ((v3 + 1610891254) | 0x8AA81083)))();
}

uint64_t sub_100540C64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return ((uint64_t (*)(void))(*(void *)(v17
                                        + 8LL
                                        * ((26
}

uint64_t sub_100540CBC( int8x16_t a1, double a2, double a3, double a4, int8x16_t a5, uint64_t a6, int a7, int a8, uint64_t a9, int a10, int a11, unint64_t a12, int a13)
{
  *int v13 = vaddq_s8( vsubq_s8( *(int8x16_t *)(v15 + (a7 + a8)),  vandq_s8( vaddq_s8(*(int8x16_t *)(v15 + (a7 + a8)), *(int8x16_t *)(v15 + (a7 + a8))),  a5)),  a1);
  return ((uint64_t (*)(void))(*(void *)(v16
                                        + 8LL
}

uint64_t sub_100540D1C@<X0>( uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X8>)
{
  *(_BYTE *)(v7 + a6) = *(_BYTE *)(v10 + (a2 + a3))
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v11
                                                              + 8LL
                                                              * (((a6 + (v9 ^ (a4 - 3)) * v6 != 120) * v8) ^ (a5 + v9 + 410)))
                                                  - 4LL))( a1,  (a2 + 1));
}

uint64_t sub_100540D78@<X0>( int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  BOOL v9 = a1 - 889656528 < (a8 - 512393786);
  return (*(uint64_t (**)(void))(v8 + 8LL * ((v9 | (16 * v9)) ^ a2)))();
}

uint64_t sub_100540DE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, int a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  int v43 = v35;
  int v42 = 4 * v35;
  int v38 = 1759421093 * ((((2 * (v37 - 120)) | 0xB6890BF0) - (v37 - 120) + 616266248) ^ 0x683935AC);
  *(void *)(v37 - 120) = a11;
  *(_DWORD *)(v37 - 112) = v38 + v35 + 726;
  *(_DWORD *)(v37 - 108) = v38 + a14 - 120689469;
  uint64_t v39 = sub_10052C098(v37 - 120);
  uint64_t v40 = a35 & 0x3F;
  *(&a26 + (v40 ^ 0x1F)) = 24;
  return ((uint64_t (*)(uint64_t))(*(void *)(v36
                                                      + 8LL
}

uint64_t sub_100540ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(uint64_t))(*(void *)(v7
                                                      + 8LL
                                                      * (((v5 == ((3 * (v6 ^ 0x2A5)) ^ 0x710))
                                                        * (v6 ^ 0x638 ^ (a5 + 440) ^ (a5 - 298))) ^ v6 ^ 0x638))
                                          - 4LL))(-817741640LL);
}

uint64_t sub_100540F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v8 = (v5 ^ (a5 - 32) ^ (a5 + v6 - 1839)) >= ((4 * v6) ^ 0x1984u) - 1328;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((v8 | (16 * v8)) ^ v6)) - 4LL))();
}

uint64_t sub_100540F68@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + a2 + a1) = 0x9898989898989898LL;
  return ((uint64_t (*)(void))(*(void *)(v21
                                        + 8LL
                                        * ((343 * (((((v20 - 1235) | 0x40A) - 1079) & v19) != 8LL)) ^ ((v20 - 1235) | 0x40A)))
                            - ((((v20 - 1235) | 0x40A) - 63759489) & 0x3CCE3BB)
                            + 934LL))();
}

uint64_t sub_100540FDC@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(v3 + v6) = a2;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * (((v4 != v6) * v5) ^ v2)) - a1 + 934))();
}

uint64_t sub_100541004@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (a3 ^ (1350 * (v4 != v3))))
}

void sub_100541040()
{
}

uint64_t sub_10054104C@<X0>( int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20, char a21)
{
  BOOL v26 = v21 < v23;
  char v27 = *(_BYTE *)(v24 + a3 + a2 + 3 * (a4 ^ 0x3B8u) - 48);
  *(&a21 + (a1 - 1533701554)) = v27 - ((2 * v27) & 0x30) - 104;
  unsigned int v28 = a2 + 1 + v22;
  int v29 = v26 ^ (v28 < v23);
  BOOL v30 = v28 < v21;
  if (!v29) {
    BOOL v26 = v30;
  }
  return (*(uint64_t (**)(void))(v25 + 8LL * (v26 | (16 * v26) | a4)))((a1 + 1));
}

uint64_t sub_1005410D0@<X0>(int a1@<W5>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((964 * ((a2 - 817741640) < 0x38)) ^ (a1 + v3 + 424)))
                            - ((a1 + v3 + 1552) | 0x88u)
                            + 1728LL))();
}

uint64_t sub_100541124@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  uint64_t v5 = v2 + a1;
  else {
    uint64_t v6 = 56LL;
  }
}

uint64_t sub_100541180@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18)
{
  *(void *)(&a18 + v19 + (((v18 - 433) | 0x158u) ^ (unint64_t)(v20 + 168))) = 0x9898989898989898LL;
  return (*(uint64_t (**)(void))(v21 + 8LL * ((1278 * ((a1 & 0xFFFFFFFFFFFFFFF8LL) == 8)) ^ v18)))();
}

void sub_1005411CC()
{
}

uint64_t sub_1005411D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, int a24, char a25)
{
  *(&a25 + v25 + a1) = -104;
  return ((uint64_t (*)(void))(*(void *)(v27
                                        + 8LL
                                        * ((((unint64_t)(v25 + 1 + a1) < 0x40) | (4
}

uint64_t sub_100541218@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (v3 ^ (2026 * (a2 != v2))))
                            - (((v3 - 273853933) & 0xFAFEFFB7)
                             - a1
                             + 464)
                            + 456LL))();
}

void sub_100541264()
{
}

uint64_t sub_100541690@<X0>( char a1@<W5>, uint64_t a2@<X6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, int a32)
{
  unsigned int v37 = *(_DWORD *)(&a20 + ((v35 + a3) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a2 + (v35 + a3 + 1)) = BYTE2(v37) - ((v37 >> 15) & 0x30) - 104;
  *(_BYTE *)(a2 + (v35 + a3 + 2)) = (BYTE1(v37) ^ 0x66) - ((v37 >> 7) & 0x30) - 104;
  *(_BYTE *)(a2 + (v35 + a3)) = (HIBYTE(v37) ^ 0x7F)
                                            - (((HIBYTE(v37) ^ 0x7F) << ((v33 - a1 - 101) ^ 0xA2)) & 0x30)
                                            - 104;
  *(_BYTE *)(a2 + (v35 + a3 + 3)) = v37 ^ 0x92;
  BOOL v38 = v35 + 754371511 < (a32 + 1307972983);
  if (v35 + 754371511 < v32 != a32 + 1307972983 < v32) {
    BOOL v38 = a32 + 1307972983 < v32;
  }
  return ((uint64_t (*)(void))(*(void *)(v36 + 8LL * ((v38 * v34) ^ v33)) - 4LL))();
}

void sub_100541828()
{
}

uint64_t sub_100541834()
{
  return 0LL;
}

void sub_100541874(uint64_t a1)
{
  __asm { BR              X8 }

uint64_t sub_1005418B8(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 1352))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0LL;
  }
  (*(void (**)(uint64_t))(v1 + 1808))(a1);
  return v5;
}

uint64_t sub_100541900(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))((char *)*(&off_1009094D0
                                                    + ((439 * (*(_DWORD *)(a2 + 4) == 1731329633)) ^ 0x2F4u))
                                          - 12))(4294925278LL);
}

uint64_t sub_100541948@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_BYTE *)(*(void *)(a2 + 96) + 468LL) = *(_BYTE *)(*(void *)(a1 + 8) + 12LL);
  return ((uint64_t (*)(void))(*(void *)(v2 + 1512) - 12LL))(0LL);
}

uint64_t sub_1005419B0@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + (v6 + v4)) = *(_BYTE *)(v3 + (v6 + v4));
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (((v6 - 1 == v2) * v5) ^ v7)) - 12LL))(0LL);
}

void sub_1005419E4(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0x81A8D923) - (a1 & 0x81A8D923)) ^ 0x8B5CD70C);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  __asm { BR              X14 }

uint64_t sub_100541AAC@<X0>(uint64_t a1@<X8>)
{
  int v5 = ((((v3 + 752) | 0x153) ^ 0x757B35D5) + v4) & 0x78D3F82A;
  unsigned int v6 = 1224239923 * (((&v8 | 0x176E3726) - (&v8 & 0x176E3726)) ^ 0xE5DDCAF1);
  uint64_t v9 = v1;
  int v10 = v2 + v6 - v5 - 148401064;
  int v8 = v3 - v6 + 1110;
  return ((uint64_t (*)(int *))(*(void *)(a1 + 8LL * (v3 - 220)) - 8LL))(&v8);
}

void sub_100541BFC(unint64_t a1)
{
  unsigned int v2 = 1224239923 * ((2 * ((a1 ^ 0x6CFE4100) & 0x6997F88A) - (a1 ^ 0x6CFE4100) - 1771567243) ^ 0x825BBA2);
  int v3 = *(_DWORD *)(a1 + 44);
  uint64_t v4 = *(_DWORD *)(a1 + 40) - v2;
  unsigned int v5 = *(_DWORD *)(a1 + 12) + v2;
  unint64_t v16 = 1224239923
      * ((2 * ((a1 ^ 0xDCF66856CFE4100LL) & 0x712F41ED6997F88ALL) - (a1 ^ 0xDCF66856CFE4100LL) - 0x712F41ED6997F88BLL) ^ 0xAB456DFE0825BBA2LL);
  int v6 = v3 - v2;
  int v7 = (v4 + 1009) | 0xA4;
  unsigned int v8 = 3804331
     * (((&v41 | 0xF888041B) - &v41 + (&v41 & 0x777FBE0)) ^ 0x216F74D);
  int v41 = v8 ^ (v4 + 1172345356);
  unsigned int v43 = v8 + 629839620;
  uint64_t v21 = &STACK[0x24207EE97761DA24];
  int v42 = &STACK[0x24207EE97761DA24];
  sub_1005300F4((uint64_t)&v41);
  uint64_t v9 = (_DWORD *)a1;
  int v10 = (char *)*(&off_10090D690 + (int)v4 + 11) - 12;
  uint64_t v20 = *(void *)&v10[8 * (int)v4] - 12LL;
  int v29 = v6 - 846931001;
  int v15 = v6 + 1900593466;
  int v19 = v6 + 123957641;
  int v26 = &v38;
  v12[0] = v39;
  v12[1] = (char *)&v12[-194207209] + 7;
  uint64_t v17 = 70 * (v4 ^ 0x48);
  int v32 = (v4 - 803344528) & 0x2FE211F0;
  int32x4_t v22 = vdupq_n_s32(0x8684D2Fu);
  int32x4_t v23 = vdupq_n_s32(0x8684D3Bu);
  int v13 = 842 * (v4 ^ 0x4D);
  int32x4_t v24 = vdupq_n_s32(0x88684D2B);
  int v33 = v4 ^ 0x24F;
  uint64_t v14 = (int)v4;
  uint64_t v31 = (int)v4;
  uint64_t v25 = (int)v4;
  uint64_t v27 = v4;
  int v28 = v7 + v6 + 1193976124;
  int v18 = v9;
  uint64_t v30 = *((void *)v9 + 3);
  unsigned int v11 = v5 + 202303723 + (~((v5 << (((v4 - 15) | 0xA4) + 29)) + 542207698) | 0x8339CFD);
  char v34 = ((v11 >> ((37 * (((v4 - 15) | 0xA4) ^ 0xC6)) ^ 0xF2)) ^ 0x7B)
      - ((2 * ((v11 >> ((37 * (((v4 - 15) | 0xA4) ^ 0xC6)) ^ 0xF2)) ^ 0x7B)) & 0x30)
      - 104;
  char v35 = (BYTE2(v11) ^ 0xE6) - ((v11 >> 15) & 0x30) - 104;
  char v36 = (BYTE1(v11) ^ 0x31) - 2 * ((BYTE1(v11) ^ 0x31) & 0x1A ^ BYTE1(v11) & 2) - 104;
  char v37 = (v5 - 21 + (~(((_BYTE)v5 << (((v4 - 15) | 0xA4) + 29)) - 46) | 0xFD)) ^ 0x19;
  LODWORD(v9) = ((2 * v40) & 0x66 ^ 0x26) + (v40 & 0x3F ^ 0xFFFFEFAC) + 4113 > 0xFFFFFFBF;
  __asm { BR              X14 }

uint64_t sub_100542054@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X5>, int a5@<W8>)
{
  *(_BYTE *)(a4 + (a5 + v8)) = *(_BYTE *)(a3 + (v6 + a2));
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((31 * ((((((5 * (v5 ^ 0x197) - 414) | 3) ^ a1) + v6) & 0xFFFFFFFC) == v7)) ^ (5 * (v5 ^ 0x197))))
                            - 8LL))();
}

uint64_t sub_1005420B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t), uint64_t a20)
{
  int v22 = 1759421093 * ((~((v21 - 160) | 0x4D5C05F8) + ((v21 - 160) & 0x4D5C05F8)) ^ 0x1DE4A53);
  *(void *)(v21 - 160) = a20;
  *(_DWORD *)(v21 - 152) = v22 + v20 + 695;
  *(_DWORD *)(v21 - 148) = v22 + 647934166;
  uint64_t v23 = sub_10052C098(v21 - 160);
  return a19(v23);
}

uint64_t sub_100542120( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, int a32, unsigned int a33)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, void))(*(void *)(v34 + 8LL * ((37 * (((v33 - 82) ^ (a14 + ((2 * LODWORD(STACK[0x2CC])) & 0x7A ^ 0x3A) + (STACK[0x2CC] & 0x3F ^ (v33 + 1870397139)) < 0xFFFFFFC0)) & 1)) ^ (v33 + 1464))) - 4LL))( a1,  3303296346LL,  1717953897LL,  726282947LL,  a5,  &STACK[0x288],  a33);
}

uint64_t sub_1005421CC@<X0>(unsigned int a1@<W2>, int a2@<W3>, unsigned int a3@<W6>, int a4@<W8>)
{
  BOOL v6 = a3 < a1;
  if (v6 == a4 + a2 < a1) {
    BOOL v6 = a4 + a2 < a3;
  }
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((511 * !v6) ^ v4)) - ((v4 + 1880562142) & 0x8FE8E57F) + 87LL))();
}

uint64_t sub_100542234@<X0>( int a1@<W1>, unsigned int a2@<W2>, int a3@<W3>, uint64_t a4@<X5>, unsigned int a5@<W6>, int a6@<W8>)
{
  BOOL v11 = a5 < a2;
  *(_BYTE *)(a4 + (v6 + v8)) = *(_BYTE *)(v9 + (a6 + a1))
  unsigned int v12 = a6 + 1 + a3;
  int v13 = v11 ^ (v12 < a2);
  BOOL v14 = v12 < a5;
  if (!v13) {
    BOOL v11 = v14;
  }
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * ((511 * !v11) ^ v7)) - 4LL))();
}

uint64_t sub_1005422A8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  int v24 = 1759421093 * ((((2 * (v23 - 160)) | 0xFC58BA80) - (v23 - 160) + 30646976) ^ 0x4D51ED14);
  *(void *)(v23 - 160) = a21;
  *(_DWORD *)(v23 - 152) = v24 + v21 + 683;
  *(_DWORD *)(v23 - 148) = a18 + v24;
  sub_10052C098(v23 - 160);
  uint64_t v25 = STACK[0x2CC] & 0x3F;
  *((_BYTE *)&STACK[0x288] + (v25 ^ 0x1F)) = 24;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22
                                                                                 + 8LL
                                                                                 * ((((v25 ^ 0x1F) > 0x37)
                                                                                   * (((v21 + 500) ^ 0x200) + 229)) ^ v21))
                                                                     - 4LL))( 966615264LL,  3303296346LL,  1717953897LL,  726282947LL);
}

uint64_t sub_10054239C@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, int a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31
                                                                                + 8LL
                                                                                * ((157
                                                                                  * (((a4 == (a31 ^ 0x214) - 28) ^ (a31 + 88)) & 1)) ^ a31)))( 152LL,  a1,  a2,  a3,  42LL);
}

uint64_t sub_1005423EC()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_100542450@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  *(void *)(a2 + a1) = v5;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((((v2 & 0x38) == 8LL) * (v3 ^ 0x1EC)) ^ v3)) - 12LL))();
}

uint64_t sub_100542494()
{
  void *v0 = v5;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (((v3 == 0) * v2) ^ v1)) - 12LL))();
}

uint64_t sub_1005424B8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7
                                                                                          + 8LL
                                                                                          * (((((a5 ^ 0x3AB) + 66) ^ 0x7D9)
                                                                                            * (v6 == v5)) ^ a5))
                                                                              - ((7 * (a5 ^ 0x3AB)) ^ 0x53LL)))( a1,  a2,  a3,  a4,  42LL);
}

uint64_t sub_100542510(char a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  *(_BYTE *)(v6 + v9 + a6 - 1) = a1;
  return (*(uint64_t (**)(void))(v12 + 8LL * (((v6 + v9 < ((v7 + v11) & v8 ^ v10)) * a5) ^ (v7 + 512))))();
}

uint64_t sub_100542548( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, unint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, int a36, int a37)
{
  __n128 v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(void *)(v40 + 8LL * v37)
                                                                                       + ((v37 + 1071) | 0x125u)
                                                                                       - 1459LL);
  int v44 = STACK[0x2D4];
  int v45 = STACK[0x2D4];
  int v46 = STACK[0x2D8];
  int v47 = STACK[0x2DC];
  int v48 = STACK[0x2D8];
  int v49 = STACK[0x2DC];
  int v50 = LOBYTE(STACK[0x2E8]) ^ 0xAB;
  if (v50 == 2)
  {
    BOOL v58 = (unint64_t)&STACK[0x288] < a29 && v41 < (unint64_t)&STACK[0x2C8];
    return ((uint64_t (*)(void, void))(*(void *)(v40
                                                               + 8LL * ((396 * (((a37 ^ v58) & 1) == 0)) ^ (v39 + 488)))
                                                   - 8LL))( LODWORD(STACK[0x2E0]),  LODWORD(STACK[0x2E0]));
  }

  else if (v50 == 1)
  {
    uint64_t v51 = (2 * v39);
    BOOL v53 = (unint64_t)&STACK[0x288] >= a29 || v41 >= (unint64_t)&STACK[0x2C8];
    uint64_t v54 = v51 ^ 0x5CF;
    int v55 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8LL * (int)((v53 * v54) ^ (v39 + 377)));
    return v55( v51,  v55,  v54,  a4,  &STACK[0x288],  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  v43 - 196,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27);
  }

  else
  {
    LODWORD(STACK[0x2D0]) = 2 * (LODWORD(STACK[0x2D0]) ^ v42) + v42 - (v38 & (4 * (LODWORD(STACK[0x2D0]) ^ v42)));
    LODWORD(STACK[0x2D4]) = (v45 ^ v42) + (v44 ^ v42) + v42 - (v38 & (2 * ((v45 ^ v42) + (v44 ^ v42))));
    LODWORD(STACK[0x2D8]) = (v48 ^ v42) + (v46 ^ v42) + v42 - (v38 & (2 * ((v48 ^ v42) + (v46 ^ v42))));
    LODWORD(STACK[0x2DC]) = (v49 ^ v42) + (v47 ^ v42) + v42 - (v38 & (2 * ((v49 ^ v42) + (v47 ^ v42))));
    return v59(966615264LL, a2, a3, a4, &STACK[0x288]);
  }

uint64_t sub_100543758( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, int a28, uint64_t a29, uint64_t a30, uint64_t a31, unsigned int a32)
{
  unsigned int v34 = a28 - 1314626642 + ((v32 + 45) | 0x480);
  BOOL v35 = v34 < 0xECC01B10;
  BOOL v36 = v34 > a32;
  if (a32 < 0xECC01B10 != v35) {
    BOOL v37 = v35;
  }
  else {
    BOOL v37 = v36;
  }
  return ((uint64_t (*)(void))(*(void *)(v33 + 8LL * ((!v37 * ((v32 + 174) ^ 0xE0)) ^ (v32 + 1491))) - 4LL))();
}

uint64_t sub_1005437E0@<X0>(int a1@<W1>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((v2 - 778) * (a2 + a1 + 63 < (a2 + a1))) ^ v2))
}

uint64_t sub_100543814@<X0>(int a1@<W1>, uint64_t a2@<X5>, int a3@<W8>)
{
  *(_BYTE *)(a2 + __chkstk_darwin(v2, v3) = *(_BYTE *)(v5 + (a3 + a1))
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * (((v3 != 63) * v7) ^ v4)) - 12LL))();
}

uint64_t sub_100543864@<X0>(int a1@<W1>, int8x16_t *a2@<X5>, int a3@<W8>)
{
  int v8 = v3 - 1197;
  int8x16_t v9 = *(int8x16_t *)(v4 + (a1 + a3 + v8 - 54 - 25));
  *a2 = vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v6)), v7);
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (v8 + 740)) - 12LL))();
}

uint64_t sub_1005438C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, int a34)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v35
                                                                        + 8LL
                                                                        * ((((a34 - 1228744129) > 0xFFFFFFFA) | (2 * ((a34 - 1228744129) > 0xFFFFFFFA))) ^ (v34 + 1697)))
                                                            - (a15 ^ 0x1E6)))( a1,  a2,  a3);
}

void sub_10054392C()
{
}

uint64_t sub_10054394C()
{
}

uint64_t sub_100543998@<X0>(int a1@<W8>)
{
  uint64_t v4 = v1;
  unint64_t v5 = v1 + v2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56LL;
  }
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (int)(((v5 - v4 + 1553658313 >= (unint64_t)(a1 + 584)
                                                                        - 1103)
                                               * (((a1 + 533976432) & 0xE02C28CF) + 205)) ^ a1))
                            - 8LL))();
}

uint64_t sub_100543A00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v12) = v14;
  return ((uint64_t (*)(void))(*(void *)(v13 + 8LL * ((153 * ((v11 & 0xFFFFFFFFFFFFFFF8LL) == 8)) ^ v10))
}

uint64_t sub_100543A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *int8x16_t v6 = v10;
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * (((v8 == 0) * a5) ^ v5)) - v7 + 515))();
}

uint64_t sub_100543A68()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (int)((((v2 + 629584352) & 0xDA794C5F ^ 3) * (v0 == v1)) ^ v2))
                            - (v2 ^ 0x240u)
                            + 71LL))();
}

uint64_t sub_100543AB0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a2 + v4 + a1 - 1) = v5;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((((unint64_t)(a2 + v4) < 0x38) * v3) ^ (v2 + 500))) - 8LL))();
}

void sub_100543AE0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  int v12 = LOBYTE(STACK[0x2E8]) ^ 0xAB;
  if (v12 == 1)
  {
    unsigned int v17 = STACK[0x2CC];
    unsigned int v18 = STACK[0x2C8];
    LOBYTE(STACK[0x2C0]) = 8 * ((v11 - 80) ^ LOBYTE(STACK[0x2CC]))
                         - 16 * (((v11 - 80) ^ LOBYTE(STACK[0x2CC])) & 3)
                         - 104;
    LOBYTE(STACK[0x2C1]) = ((v17 >> 5) ^ 0xA2) - ((v17 >> 4) & 0x30) - 104;
    LOBYTE(STACK[0x2C2]) = ((v17 >> 13) ^ 0x7C) - ((2 * ((v17 >> 13) ^ 0x7C)) & 0x30) - 104;
    HIDWORD(v19) = v18 ^ 3;
    LODWORD(v19) = v17 ^ 0x60000000;
    LOBYTE(STACK[0x2C3]) = ((v17 >> 21) ^ 0x8B) - ((2 * ((v17 >> 21) ^ 0x8B)) & 0x30) - 104;
    LOBYTE(STACK[0x2C4]) = (v19 >> 29) - ((2 * (v19 >> 29)) & 0x30) - 104;
    LOBYTE(STACK[0x2C5]) = ((v18 >> 5) ^ 0xF2) + ~(2 * (((v18 >> 5) ^ 0xF2) & 0x1C ^ (v18 >> 5) & 4)) - 103;
    LOBYTE(STACK[0x2C6]) = ((v18 >> 13) ^ 0xD6) - 2 * (((v18 >> 13) ^ 0xD6) & 0x99 ^ ((v18 & 0x2000) != 0)) - 104;
    unsigned int v16 = ((v18 >> 21) ^ 0x2C) - 2 * (((v18 >> 21) ^ 0x2C) & 0x1A ^ (v18 >> 21) & 2) - 104;
  }

  else
  {
    if (v12 != 2) {
      goto LABEL_6;
    }
    unsigned int v13 = STACK[0x2C8];
    unsigned int v16 = STACK[0x2CC];
    unsigned int v14 = (LODWORD(STACK[0x2C8]) >> 13) ^ 0xFFFFFFD6;
    LOBYTE(STACK[0x2C0]) = ((LODWORD(STACK[0x2C8]) >> 21) ^ 0x2C)
                         + (a11 ^ 0xC)
                         - ((2 * ((LODWORD(STACK[0x2C8]) >> 21) ^ 0x2C)) & 0x30);
    LOBYTE(STACK[0x2C1]) = v14 - ((2 * v14) & 0x30) - 104;
    LOBYTE(STACK[0x2C2]) = ((v13 >> 5) ^ 0xF2) - ((2 * ((v13 >> 5) ^ 0xF2)) & 0x30) - 104;
    HIDWORD(v15) = v13 ^ 3;
    LODWORD(v15) = v16 ^ 0x60000000;
    LOBYTE(STACK[0x2C3]) = (v15 >> 29) - ((2 * (v15 >> 29)) & 0x30) - 104;
    LOBYTE(STACK[0x2C4]) = ((v16 >> 21) ^ 0x8B) - ((2 * ((v16 >> 21) ^ 0x8B)) & 0x30) - 104;
    LOBYTE(STACK[0x2C5]) = ((v16 >> 13) ^ 0x7C) - 2 * (((v16 >> 13) ^ 0x7C) & 0x99 ^ ((v16 & 0x2000) != 0)) - 104;
    LOBYTE(STACK[0x2C6]) = ((v16 >> 5) ^ 0xA2) - ((v16 >> 4) & 0x30) - 104;
    LOBYTE(v16) = (~(16 * ~(_BYTE)v16) | 0xCF) + 8 * ~(_BYTE)v16 - 103;
  }

  LOBYTE(STACK[0x2C7]) = v16;
LABEL_6:
  JUMPOUT(0x100542A30LL);
}

uint64_t sub_100543D3C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, int a38, char a39)
{
  return ((uint64_t (*)(uint64_t, uint64_t, char *))(*(void *)(v40
                                                                       + 8LL
                                                                       * ((1284
                                                                         * ((v39 & 0xFFFFFFFC) == ((a15 - 1644119547) & 0x61FF445F)
                                                                                                + 1228744109)) ^ a15))
                                                           - ((a15 - 2078145517) & 0x7BDDFBF7 ^ 0x1FDLL)))( 78LL,  3066223108LL,  &a39);
}

uint64_t sub_100543DC8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, int a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38)
{
  if (a33 == 2) {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39
  }
                                                                                   + 8LL
                                                                                   * ((1730
                                                                                     * (((LODWORD(STACK[0x2E4]) == 629852285) ^ (7 * v38)) & 1)) ^ (v38 + 474)))
                                                                       - 4LL))( a1,  a2,  a3,  a18);
  if (a33 == 1) {
    return ((uint64_t (*)(void))(*(void *)(v39
  }
                                          + 8LL
                                          * (((LODWORD(STACK[0x2E4]) != 629852285) * (((v38 - 79) | 0x229) - 383)) ^ (v38 + 474)))
                              - 4LL))();
  uint64_t v41 = 42 * (v38 ^ 0x45u);
  unint64_t v42 = ((unint64_t)&a38 ^ 0xFBBD7F8DB3FFF1FDLL)
      + 0x7F6F9C7F7FEC0003LL
      + ((v41 ^ 0xF77AFF1B67FFE250LL) & (2LL * (void)&a38));
  LOBYTE(STACK[0x2E3]) = (v42 ^ 0xBA) * (v42 + 17);
  return ((uint64_t (*)(void))(*(void *)(v39 + 8LL * (int)v41) - 8LL))();
}

void sub_100544108()
{
}

uint64_t sub_100544110( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t *a16)
{
  uint64_t v20 = *a16;
  *(void *)(v19 - 176) = 0x9898989898989898LL;
  *(void *)(v19 - 168) = 0x9898989898989898LL;
  int v21 = 235795823 * (((v19 - 160) & 0x27E1E489 | ~((v19 - 160) | 0x27E1E489)) ^ 0x4CB3522F);
  *(_DWORD *)(v19 - 124) = (v16 + 1137) ^ v21;
  *(_DWORD *)(v19 - 152) = v21 + 87424939;
  *(void *)(v19 - 120) = v19 + 0x3F70C0CAD41266C4LL;
  *(void *)(v19 - 144) = v19 - 196;
  *(void *)(v19 - 136) = v20;
  *(void *)(v19 - 160) = &STACK[0x278];
  uint64_t v22 = ((uint64_t (*)(uint64_t))((char *)*(&off_10090D690 + (v16 ^ 0x209)) - 8))(v19 - 160);
  return ((uint64_t (*)(uint64_t))(*(void *)(v17
                                                      + 8LL
                                                      * ((1415
                                                        * (*(_DWORD *)(v19 - 128) == (((v16 ^ 0x2DC) + 1720) ^ (v18 - 767)))) ^ v16))
                                          - 4LL))(v22);
}

uint64_t sub_100544224()
{
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0xEFDDCFF7) + 1577056768 + ((((v4 - 1728) | 8) - 541352033) & (2 * v6)) == 1306380791 && v7 != v2 + 16;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((19 * v9) ^ v4)) - 4LL))();
}

uint64_t sub_1005442B0@<X0>(int a1@<W8>)
{
  unint64_t v4 = 1759421093
     * ((((v3 - 160) | 0x60E2BDCEF914AA9ELL) - (v3 - 160) + ((v3 - 160) & 0x9F1D423106EB5560LL)) ^ 0x4E5C7C9E4A691ACALL);
  *(void *)(v3 - 136) = v4 ^ 0x4DDDC9F7;
  *(_DWORD *)(v3 - 144) = a1 + 1051201844 + v4;
  *(void *)(v3 - 152) = v1 - v4;
  *(_DWORD *)(v3 - 124) = -1759421093
                        * ((((v3 - 160) | 0xF914AA9E) - (v3 - 160) + ((v3 - 160) & 0x6EB5560)) ^ 0x4A691ACA);
  *(_DWORD *)(v3 - 120) = v4 ^ (a1 + 1051201844) ^ 0x37;
  *(_DWORD *)(v3 - 160) = v4 + a1 + 2021363698;
  *(_DWORD *)(v3 - 128) = ((a1 + 1051201844) | 0x7C) ^ v4;
  uint64_t v5 = ((uint64_t (*)(uint64_t))((char *)*(&off_10090D690 + a1 + 118) - 4))(v3 - 160);
  return (*(uint64_t (**)(uint64_t))(v2 + 8LL * *(int *)(v3 - 116)))(v5);
}

void sub_100544398()
{
  *(_DWORD *)(v0 + 8) = -2006430421;
}

void sub_1005443E4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }

uint64_t sub_100544454@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((200
                                          * (((a1 - 1731329620) ^ 0xFB1FDDFFDEEFEF7CLL)
                                           + 0x4E02200696A35A4LL
}

uint64_t sub_1005444F0()
{
  return (*(uint64_t (**)(uint64_t))(v5 + 8LL * ((58 * (((2 * v6) & 0xDFDFCF4E) + (v6 ^ v0) != v0)) | v2)))(4294925278LL);
}

uint64_t sub_100544560()
{
  BOOL v5 = v2 < v0;
  if (v5 == v3 - 0x204B5AA47AE0A23CLL < v0 + ((v1 - 332) | 0x186u) - 446) {
    BOOL v5 = v3 - 0x204B5AA47AE0A23CLL < v2;
  }
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((200 * v5) ^ (v1 + 1252))) - 12LL))();
}

uint64_t sub_1005445DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8LL
                                            * (((v1 ^ 0x1A64FC62 ^ (((v1 - 447124418) & 0x1AA692BF) + 442824835))
                                              * (a1 == 1731329629)) ^ v1)))(4294925278LL);
}

uint64_t sub_100544634()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (v1
                                         + ((((2 * (*v0 - 42)) & 0xFDDE98E6)
                                                            + ((*v0 - 42) ^ (v1 + 2129611703)) == 2129611891) << 10)))
                            - 4LL))();
}

uint64_t sub_100544688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((1301
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v6 + 1) - 134)))
}

uint64_t sub_1005446D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((1697
                                          * ((((3 * (v7 ^ 0x81)) ^ (a5 - 149)) & (2 * (*(unsigned __int8 *)(v6 + 2) - 72)))
}

uint64_t sub_10054471C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((1429
                                          * ((((*(unsigned __int8 *)(v6 + 3) - 134) << ((61 * (v7 ^ 0xBF)) ^ 0xB6)) & a5)
}

uint64_t sub_100544770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char v11 = (v7 ^ 9 ^ v9) * v8;
  BOOL v12 = (a5 & (2 * (*(unsigned __int8 *)(v6 + 4) - 247))) + ((*(unsigned __int8 *)(v6 + 4) - 247) ^ v5) == v5;
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
}

uint64_t sub_1005447D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((1132
                                          * (((a5 + ((v7 + 1750891843) & 0x97A382B7) - 183) & (2
                                                                                             * (*(unsigned __int8 *)(v6 + 5)
                                                                                              - 13)))
}

uint64_t sub_100544828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((317
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v6 + 6) - 1)))
}

uint64_t sub_10054486C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((93
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v6 + 7) - 1)))
}

uint64_t sub_1005448B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((((a5 & (2 * (*(unsigned __int8 *)(v6 + 8) - 4)))
                                           + ((*(unsigned __int8 *)(v6 + 8) - 4) ^ (v5 + ((v7 - 60) | 0x521) - 1441)) == v5)
                                          * ((v7 - 1605990077) & 0x5FB976B7 ^ 0x482)) ^ v7))
                            - 4LL))();
}

uint64_t sub_10054491C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428LL) = 1595468493;
}

uint64_t sub_10054497C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * ((((a5 & (2 * (**(unsigned __int8 **)(a2 + 8) - 42)))
                                           + ((**(unsigned __int8 **)(a2 + 8) - 42) ^ v5) == v5)
                                          * (v6 ^ 0x4EC)) ^ v6))
                            - 4LL))();
}

uint64_t sub_1005449C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((((a5 & (2 * (*(unsigned __int8 *)(v7 + 1) - 134)))
                                           + ((*(unsigned __int8 *)(v7 + 1) - 134) ^ v5) == v5)
                                          * (((v6 - 174) | 0x204) ^ 0x5F3)) ^ v6))
                            - 4LL))();
}

uint64_t sub_100544A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((((a5 & (2 * (*(unsigned __int8 *)(v7 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v7 + 2) - 72) ^ v5) == v5)
                                          * (v6 ^ 0x236)) ^ v6))
                            - 4LL))();
}

uint64_t sub_100544A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((109
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v8 + 3) - 134)))
}

uint64_t sub_100544A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((126
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v7 + 4) - 247)))
}

uint64_t sub_100544ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((1925
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v7 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v7 + 5) - 13) ^ v5) == v5)) ^ v6))
                            - ((v6 + 1268) ^ 0x7A6u)
                            + 521LL))();
}

uint64_t sub_100544B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((893
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v7 + 6) - 1)))
}

uint64_t sub_100544B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((447
                                          * ((a5 & (2 * (*(unsigned __int8 *)(v7 + 7) - 1)))
}

uint64_t sub_100544B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v9 = ((v6 - 145896986) & 0x8B2376F ^ 0xFFFFFDF6) + *(unsigned __int8 *)(v7 + 8);
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL * ((1717 * (((v9 << ((v6 - 22) ^ 0xA0)) & a5) + (v9 ^ v5) == v5)) ^ v6))
                            - 4LL))();
}

uint64_t sub_100544BE4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428LL) = 1595468497;
  BOOL v6 = *(_DWORD *)(a2 + 4) == 105 * (v3 ^ 0x5A4) + (v3 ^ 0x1E3 ^ (v2 - 1611));
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (((2 * v6) | (8 * v6)) ^ v3)) - 12LL))();
}

uint64_t sub_100544C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v7 + 8LL * ((((a5 & (2 * v8)) + (v8 ^ v5) == v5) * (((v6 + 500) | 0x1A0) - 1268)) ^ v6)))();
}

uint64_t sub_100544C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * ((1252
}

uint64_t sub_100544CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * ((205
}

uint64_t sub_100544D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * ((1854
                                * ((((v7 + 755174810) & 0xD2FCF5F9 ^ (a5 + 1121)) & (2
}

uint64_t sub_100544D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * ((1746
}

uint64_t sub_100544DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v9 = 175 * (v7 ^ 0x1FD) + *(unsigned __int8 *)(v6 + 5) - 538;
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * ((1011
                                * (((11 * (v7 ^ 0x7D)) ^ ((a5 & (2 * v9)) + (v9 ^ v5) == v5)) & 1)) ^ v7)))();
}

uint64_t sub_100544E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * ((((a5 & (2 * (*(unsigned __int8 *)(v6 + 6) - 1)))
}

uint64_t sub_100544E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v9 = ((11 * (v7 ^ 0x28E)) ^ 0xFFFFFA5E) + *(unsigned __int8 *)(v6 + 7);
  return (*(uint64_t (**)(void))(v8 + 8LL * ((212 * ((a5 & (2 * v9)) + (v9 ^ v5) == v5)) ^ v7)))();
}

uint64_t sub_100544E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * ((2043
                                * (((a5 + ((v7 - 1444688920) & 0x561C37AB) - 1441) & (2
}

void sub_100544F0C()
{
  *(_DWORD *)(*(void *)(v1 + 96) + 1428LL) = 1595468509;
  int v7 = v0 ^ 0x1E3;
  char v4 = ((v0 ^ 0xE3) - 66) | 0x88;
  int v5 = 37 * (v0 ^ 0x5A6);
  int v6 = 3804331 * ((2 * ((v3 - 120) & 0x5457C938) - (v3 - 120) - 1415039290) ^ 0x5136C590);
  *(void *)(v3 - 112) = v3 + 0x24207EE97761D6C0LL;
  *(_DWORD *)(v3 - 120) = ((v0 ^ 0x1E3) + 1172344345) ^ v6;
  *(_DWORD *)(v3 - 104) = v6 + 629839621;
  sub_1005300F4(v3 - 120);
  __asm { BR              X10 }

uint64_t sub_10054515C(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  unsigned int v9 = v7 + (a2 ^ (a5 - 253)) - 407083610;
  if (v9 <= 0x40) {
    unsigned int v9 = 64;
  }
  BOOL v10 = a4 - v5 - v6 + v9 + 920 < 0xF;
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((v10 | (32 * v10)) ^ a2)) - ((4 * a2) ^ 0x404LL)))();
}

uint64_t sub_1005451DC(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5, int a6)
{
  int v12 = v7 + v6;
  unsigned int v13 = ((a6 + (v10 ^ (a5 + 188)) + 87) ^ 0x22162A0) + v12;
  if (v13 <= 0x40) {
    unsigned int v13 = a3;
  }
  return (*(uint64_t (**)(void))(v11 + 8LL * (v10 ^ (2 * (a4 + 920 - v12 >= v8 + a4 + 920 + v9 + v13)))))();
}

uint64_t sub_100545230( int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return ((uint64_t (*)(void))(*(void *)(v15
                                        + 8LL
                                        * (((a6 + ((a5 + a1 - 440700202) | 0x1A448C08) - 71)
}

uint64_t sub_10054528C@<X0>(int a1@<W5>, int a2@<W8>)
{
  v9.i64[0] = 0x3030303030303030LL;
  v9.i64[1] = 0x3030303030303030LL;
  v10.i64[0] = 0x9898989898989898LL;
  v10.i64[1] = 0x9898989898989898LL;
  *(int8x16_t *)(v4 + (a2 + v2)) = vaddq_s8(vsubq_s8(*v8, vandq_s8(vaddq_s8(*v8, *v8), v9)), v10);
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8LL
                                            * ((363 * (((v5 + 1) & 0x1FFFFFFF0LL) - (v6 + 633) == -820)) ^ (a1 + v3 + 912))))((v6 + 633) - 820LL);
}

void sub_1005452FC()
{
}

uint64_t sub_100545304(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL * ((((a6 + ((a3 - 93389039) & 0x1FF5FDFF) - 173) ^ 0xD7) * (v6 == v7)) ^ (a3 + 633))))();
}

uint64_t sub_100545358@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  *(_BYTE *)(v8 - 220 + (a3 + v3)) = ((v5 - 30) & 0x5F)
                                                 + *(_BYTE *)(v4 + v7 - 2039916697)
                                                 - ((2 * *(_BYTE *)(v4 + v7 - 2039916697)) & 0x30)
                                                 + 122;
  return (*(uint64_t (**)(void))(v6 + 8LL * ((15 * ((a2 + a3 + 658) > 0x3F)) ^ (a1 + v5 + 695))))();
}

uint64_t sub_1005453D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t (*a19)(__n128, __n128, __n128, __n128, __n128, __n128), unint64_t a20, uint64_t a21, uint64_t a22, int32x4_t a23, int32x4_t a24, int32x4_t a25, int32x4_t a26)
{
  return sub_100545400( a5,  a6,  v26 ^ 0x54Fu,  a9,  a10,  a11,  a12,  a13,  a14,  v27,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_100545400@<X0>( int a1@<W4>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t (*a14)(__n128, __n128, __n128, __n128, __n128, __n128), unint64_t a15, uint64_t a16, uint64_t a17, int32x4_t a18, int32x4_t a19, int32x4_t a20, int32x4_t a21)
{
  HIDWORD(a12) = HIDWORD(a8) + 1212229990;
  LODWORD(a12) = ((a3 + 407158903) | 0x2203814) ^ 0x6C7590A9;
  int v29 = (const char *)(v28 - 220);
  v30.n128_u64[0] = 0x9898989898989898LL;
  v30.n128_u64[1] = 0x9898989898989898LL;
  __n128 v31 = (__n128)vdupq_n_s32(0x8684D3Bu);
  __n128 v32 = (__n128)vdupq_n_s32(0x88684D2B);
  a16 = v25 - 16;
  __n128 v33 = (__n128)vdupq_n_s32(0x8684D2Fu);
  v34.n128_u64[0] = 0x3030303030303030LL;
  v34.n128_u64[1] = 0x3030303030303030LL;
  v35.n128_u64[0] = 0x9999999999999999LL;
  v35.n128_u64[1] = 0x9999999999999999LL;
  unsigned int v37 = *(_DWORD *)(v28 - 148);
  unsigned int v36 = *(_DWORD *)(v28 - 144);
  a15 = __PAIR64__(v36, v37);
  unsigned int v39 = *(_DWORD *)(v28 - 140);
  unsigned int v38 = *(_DWORD *)(v28 - 136);
  int v40 = *(_BYTE *)(v28 - 124) ^ 0xAB;
  HIDWORD(a11) = *(unsigned __int8 *)(v28 - 124) ^ 0xFFFFFFAB;
  if (v40 == 2)
  {
    a13 = __PAIR64__(v38, v39);
    a14 = v21;
    int8x16x4_t v94 = vld4q_s8(v29);
    LODWORD(a11) = *(_DWORD *)(v28 - 132);
    uint8x16_t v71 = (uint8x16_t)veorq_s8(v94.val[0], (int8x16_t)v30);
    uint16x8_t v72 = vmovl_u8(*(uint8x8_t *)v71.i8);
    uint16x8_t v73 = vmovl_high_u8(v71);
    uint8x16_t v74 = (uint8x16_t)veorq_s8(v94.val[1], (int8x16_t)v30);
    _Q23 = vmovl_u8(*(uint8x8_t *)v74.i8);
    _Q22 = vmovl_high_u8(v74);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }

    uint8x16_t v79 = (uint8x16_t)veorq_s8(v94.val[2], (int8x16_t)v30);
    uint16x8_t v80 = vmovl_high_u8(v79);
    uint16x8_t v81 = vmovl_u8(*(uint8x8_t *)v79.i8);
    v94.val[0] = veorq_s8(v94.val[3], (int8x16_t)v30);
    v94.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v94.val[0]);
    v94.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v94.val[1]);
    v94.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v94.val[1].i8);
    v94.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v94.val[0].i8);
    v94.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v94.val[0]);
    v94.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v94.val[0].i8);
    int32x4_t v82 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8( (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL),  (int8x16_t)vshll_n_u16(*(uint16x4_t *)v81.i8, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v72.i8), 0x18uLL)),  v94.val[0]);
    int32x4_t v83 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v81, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v72), 0x18uLL)),  v94.val[3]);
    int32x4_t v84 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8( (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL),  (int8x16_t)vshll_n_u16(*(uint16x4_t *)v80.i8, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v73.i8), 0x18uLL)),  v94.val[1]);
    int32x4_t v85 = (int32x4_t)vorrq_s8( vorrq_s8( vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v80, 8uLL)),  (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v73), 0x18uLL)),  v94.val[2]);
    v94.val[0] = veorq_s8( vandq_s8((int8x16_t)v82, (int8x16_t)v31),  (int8x16_t)(*(_OWORD *)v94.val & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v94.val[3] = veorq_s8( vandq_s8((int8x16_t)v83, (int8x16_t)v31),  (int8x16_t)(*(_OWORD *)&v94.val[3] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v94.val[1] = veorq_s8( vandq_s8((int8x16_t)v84, (int8x16_t)v31),  (int8x16_t)(*(_OWORD *)&v94.val[1] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    v94.val[2] = veorq_s8( vandq_s8((int8x16_t)v85, (int8x16_t)v31),  (int8x16_t)(*(_OWORD *)&v94.val[2] & __PAIR128__(0xFFFFFF10FFFFFF10LL, 0xFFFFFF10FFFFFF10LL)));
    a20 = vaddq_s32(vsubq_s32(v84, vaddq_s32((int32x4_t)v94.val[1], (int32x4_t)v94.val[1])), (int32x4_t)v32);
    a21 = vaddq_s32(vsubq_s32(v85, vaddq_s32((int32x4_t)v94.val[2], (int32x4_t)v94.val[2])), (int32x4_t)v32);
    a18 = vaddq_s32(vsubq_s32(v82, vaddq_s32((int32x4_t)v94.val[0], (int32x4_t)v94.val[0])), (int32x4_t)v32);
    a19 = vaddq_s32(vsubq_s32(v83, vaddq_s32((int32x4_t)v94.val[3], (int32x4_t)v94.val[3])), (int32x4_t)v32);
    int32x4_t v86 = (_DWORD *)&a18 + v27 + 1340001916;
    int v87 = *(v86 - 8) ^ *((_DWORD *)&a18
    int v88 = v87 + v26 - ((2 * v87) & 0x10D09A56);
    int v89 = *(v86 - 16) ^ *(v86 - 14);
    HIDWORD(v90) = v89 ^ 0x8684D2B ^ v88;
    LODWORD(v90) = v89 ^ ~v88;
    *int32x4_t v86 = (v90 >> 31) + v26 - ((2 * (v90 >> 31)) & 0x10D09A56);
    return (*(uint64_t (**)(uint64_t))(v22 + 8LL * ((275 * (v25 == 1340001853)) ^ (a2 + a1 + 370))))(a16);
  }

  else if (v40 == 1)
  {
    a13 = __PAIR64__(v38, v39);
    a14 = v21;
    int8x16x4_t v93 = vld4q_s8(v29);
    uint64_t v41 = a1 ^ (a1 - 145);
    uint8x16_t v42 = (uint8x16_t)veorq_s8(v93.val[0], (int8x16_t)v30);
    uint16x8_t v43 = vmovl_u8(*(uint8x8_t *)v42.i8);
    int8x16_t v44 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v43.i8);
    int8x16_t v45 = (int8x16_t)vmovl_high_u16(v43);
    uint16x8_t v46 = vmovl_high_u8(v42);
    int8x16_t v47 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v46.i8);
    int8x16_t v48 = (int8x16_t)vmovl_high_u16(v46);
    uint8x16_t v49 = (uint8x16_t)veorq_s8(v93.val[1], (int8x16_t)v30);
    uint16x8_t v50 = vmovl_high_u8(v49);
    uint16x8_t v51 = vmovl_u8(*(uint8x8_t *)v49.i8);
    uint8x16_t v52 = (uint8x16_t)veorq_s8(v93.val[2], (int8x16_t)v30);
    _Q27 = (int8x16_t)vmovl_high_u8(v52);
    _Q26 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v52.i8);
    int8x16_t v55 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }

    int8x16_t v60 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q27.i8, 0x10uLL);
    __asm { SHLL2           V27.4S, V27.8H, #0x10 }

    v93.val[0] = veorq_s8(v93.val[3], (int8x16_t)v30);
    v93.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v93.val[0]);
    v93.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v93.val[1]);
    v93.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v93.val[0].i8);
    v93.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v93.val[0]);
    v93.val[0] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v93.val[0].i8), 0x18uLL), v55),  vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v51.i8, 8uLL), v44));
    v93.val[3] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v93.val[3], 0x18uLL), _Q26),  vorrq_s8((int8x16_t)vshll_high_n_u16(v51, 8uLL), v45));
    v93.val[1] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v93.val[1].i8), 0x18uLL), v60),  vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v50.i8, 8uLL), v47));
    v93.val[2] = vorrq_s8( vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v93.val[2], 0x18uLL), _Q27),  vorrq_s8((int8x16_t)vshll_high_n_u16(v50, 8uLL), v48));
    int32x4_t v61 = (int32x4_t)veorq_s8( vandq_s8(v93.val[0], (int8x16_t)v33),  (int8x16_t)(*(_OWORD *)&v44 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v62 = (int32x4_t)veorq_s8( vandq_s8(v93.val[3], (int8x16_t)v33),  (int8x16_t)(*(_OWORD *)&v45 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v63 = (int32x4_t)veorq_s8( vandq_s8(v93.val[1], (int8x16_t)v33),  (int8x16_t)(*(_OWORD *)&v47 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    int32x4_t v64 = (int32x4_t)veorq_s8( vandq_s8(v93.val[2], (int8x16_t)v33),  (int8x16_t)(*(_OWORD *)&v48 & __PAIR128__(0xFFFFFF04FFFFFF04LL, 0xFFFFFF04FFFFFF04LL)));
    a20 = vaddq_s32(vsubq_s32((int32x4_t)v93.val[1], vaddq_s32(v63, v63)), (int32x4_t)v32);
    a21 = vaddq_s32(vsubq_s32((int32x4_t)v93.val[2], vaddq_s32(v64, v64)), (int32x4_t)v32);
    a18 = vaddq_s32(vsubq_s32((int32x4_t)v93.val[0], vaddq_s32(v61, v61)), (int32x4_t)v32);
    a19 = vaddq_s32(vsubq_s32((int32x4_t)v93.val[3], vaddq_s32(v62, v62)), (int32x4_t)v32);
    int v65 = (v37 ^ v24)
        - 1876367480
        + ((v38 ^ v24) & (v36 ^ 0x80FF99F5) | (v39 ^ v24) & (v36 ^ v24))
        + *((_DWORD *)*(&off_10090D690 + (int)(v41 ^ 0x41)) + a16 + v27)
        + ((v41 + 632) ^ (v26 + 249) ^ a18.i32[(*((_BYTE *)*(&off_10090D690 + (int)(v41 ^ 0xCC))
                                                                 + a16
                                                                 + v27
                                                                 - 8)
                                                               - 4)]);
    uint16x8_t v66 = (char *)*(&off_10090D690 + (int)v41 - 130) - 4;
    unsigned int v67 = (v65 + v24 - (v23 & (2 * v65))) ^ v24;
    uint64_t v68 = v67 << (v66[a16 + v27] - 34);
    int v69 = (v68 | (v67 >> (34 - v66[a16 + v27]))) + (v36 ^ v24);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (**)(int, int, int, int, int, int, int, int, uint64_t, uint64_t), uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128), unint64_t, uint64_t, uint64_t))(*(void *)(v22 + 8LL * (int)((920 * (a16 + 1 == v25)) ^ v41)) - 4LL))( a16 + 1,  v41,  442826204LL,  1340001916LL,  &off_10090D690,  v68,  -(v66[a16 + v27] - 34),  v69 + v24 - (v23 & (2 * v69)),  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  __PAIR64__(v38, v39),  a14,  a15,  a16,  a17);
  }

  else
  {
    int v91 = (v37 ^ v24) + (a15 ^ v24) + v24 - (v23 & (2 * ((v37 ^ v24) + (a15 ^ v24))));
    int v92 = (v36 ^ v24) + (HIDWORD(a15) ^ v24);
    *(_DWORD *)(v28 - 148) = v91;
    *(_DWORD *)(v28 - 144) = v92 + v24 - (v23 & (2 * v92));
    *(_DWORD *)(v28 - 140) = 2 * (v39 ^ v24) + v24 - (v23 & (4 * (v39 ^ v24)));
    *(_DWORD *)(v28 - 136) = v24 + 2 * (v38 ^ v24) - (v23 & (4 * (v38 ^ v24)));
    return v21(v30, v31, v32, v33, v34, v35);
  }

void sub_100545498()
{
}

void sub_10054572C()
{
}

uint64_t sub_100545738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (((a4 + 1 == v7 + 16) * v4) ^ v6)) - 4LL))();
}

uint64_t sub_10054580C(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((619 * (a1 + 1 != v3 + 32)) ^ a2)) - 4LL))();
}

uint64_t sub_1005458C8(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((57 * (v3 + 1 == v4 + 48)) ^ a2)) - 4LL))();
}

void sub_1005459A4()
{
}

uint64_t sub_100545BD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8LL * ((170 * (a1 + 1 == v3 + 4)) ^ v2)))();
}

uint64_t sub_100545C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5 + 8LL * ((109 * (a4 + 1 == v6 + 24)) ^ v4)))();
}

uint64_t sub_100545D50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8LL * ((1817 * (a1 + 1 == v3 + 44)) ^ v1)))();
}

uint64_t sub_100545E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5 + 8LL * ((491 * (a4 + 1 == v6 + 64)) ^ v4)))();
}

void sub_100545ED8( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  int v20 = ((v18 + a1 - 352) ^ v16) + (a16 ^ v18);
  *(_DWORD *)(v19 - 132) = v20 + v18 - (v17 & (2 * v20));
  JUMPOUT(0x100545F28LL);
}

uint64_t sub_100545FAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, unsigned int a17, unsigned int a18)
{
  unsigned int v19 = (((a6 + a5 - 203) | 0x40C) ^ 0xFC7AC110) + a15;
  BOOL v20 = v19 < 0x76116D75;
  BOOL v21 = v19 > a18;
  if (a18 < a17 != v20) {
    BOOL v22 = v20;
  }
  else {
    BOOL v22 = v21;
  }
  return ((uint64_t (*)(void))(*(void *)(v18
                                        + 8LL * ((881 * ((((145 * (a5 ^ (a5 - 8))) ^ v22) & 1) == 0)) ^ (a6 + a5 + 887)))
                            - 4LL))();
}

uint64_t sub_10054604C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL * ((641 * (v9 + v6 + 63 >= (v6 + 1812224395 + v7 - a6 - 833))) | v7)))();
}

uint64_t sub_10054608C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v18 = a14 + v15 - (unint64_t)(v16 + ((v14 + 140824960) | 0x12002850u)) >= (((v14 + 134246580) | 0x1264891Cu) ^ (unint64_t)(a3 - 12));
  return (*(uint64_t (**)(void))(v17 + 8LL * (((4 * v18) | (16 * v18)) ^ v14)))();
}

uint64_t sub_1005460F4( double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, int a8, uint64_t a9, int a10, uint64_t a11, int a12)
{
  *unsigned int v13 = vaddq_s8( vaddq_s8(*(int8x16_t *)(v17 + (v12 + v16)), a6),  vmvnq_s8( vandq_s8( vaddq_s8( *(int8x16_t *)(v17 + (v12 + v16)),  *(int8x16_t *)(v17 + (v12 + v16))),  a5)));
  BOOL v18 = ((v14 + a8) & a10) != 108LL;
  return ((uint64_t (*)(void))(*(void *)(v15 + 8LL * (((8 * v18) | (32 * v18)) ^ (a12 + v14 + 770))) - 8LL))();
}

uint64_t sub_10054615C@<X0>(char a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(_BYTE *)(v5 + a3) = *(_BYTE *)(v10 + (v3 + v9))
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (((a3 != 63) * v7) ^ (a2 + v4 + 770))) - 8LL))();
}

uint64_t sub_1005461B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = v14 + ((v16 - 503) ^ 0x17BD7F2A);
  int v18 = ((a14 + 1669587525) < 0x91542654) ^ (v17 < 0x91542654);
  BOOL v19 = v17 < a14 + 1669587525;
  if (v18) {
    BOOL v19 = (a14 + 1669587525) < 0x91542654;
  }
  return (*(uint64_t (**)(void))(v15 + 8LL * ((86 * !v19) | v16)))();
}

uint64_t sub_100546224( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v16 = (a2 + 170184255) | 0x10402D0C;
  int v17 = 1759421093 * ((((2 * (v15 - 120)) | 0x3FB8D572) - (v15 - 120) - 534538937) ^ 0xACA1DAED);
  *(void *)(v15 - 120) = a11;
  *(_DWORD *)(v15 - 112) = v17 + a2 + 117;
  *(_DWORD *)(v15 - 108) = v17 + a14 - 120689469;
  uint64_t v18 = sub_10052C098(v15 - 120);
  uint64_t v19 = *(_DWORD *)(v15 - 152) & 0x3F;
  *(_BYTE *)(v15 - 220 + (v19 ^ 0x1F)) = 24;
  return ((uint64_t (*)(uint64_t))(*(void *)(v14
                                                      + 8LL
}

uint64_t sub_100546334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v7
                                                               + 8LL
                                                               * ((1673 * (v6 - 1178951072 < (v8 ^ (a5 - 141) ^ 0xABu))) ^ (v8 + a6)))
                                                   - 8LL))( a1,  -1178951072LL);
}

uint64_t sub_10054637C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9 = v6;
  uint64_t v10 = a2 + v6;
  else {
    uint64_t v11 = 56LL;
  }
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (v7 ^ (925 * ((unint64_t)(v11 - v9 + 1178951072) > 7))))
                            - (v7 - a6 + 56)
                            - ((v7 + 6589433) | 0x1A007150u)
                            + 885652400LL))();
}

uint64_t sub_1005463F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(v10 - 220 + v8 + ((v7 - 975277093) & 0x1FBC8EDB ^ (unint64_t)(a2 + 147))) = 0x9898989898989898LL;
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((62 * ((v6 & 0xFFFFFFFFFFFFFFF8LL) != 8)) ^ (a6 + v7 + 572))) - 4LL))();
}

void sub_100546454()
{
}

uint64_t sub_100546460@<X0>(int a1@<W0>, int a2@<W8>)
{
  BOOL v11 = v3 < v5;
  *(_BYTE *)(v10 - 220 + a2 - 1641553622 + 3 * (v7 ^ 0x453u)) = *(_BYTE *)(v9 + (v2 + v8))
  if (v11 == v2 + a1 < v5) {
    BOOL v11 = v2 + a1 < v3;
  }
  return (*(uint64_t (**)(void))(v6 + 8LL * ((!v11 * v4) | v7)))();
}

uint64_t sub_1005464E0()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v0 == v1 - 618) * (v1 - 677)) ^ v1)) - 4LL))();
}

uint64_t sub_100546510@<X0>(unint64_t a1@<X2>, int a2@<W4>, int a3@<W8>)
{
}

uint64_t sub_10054654C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(v11 - 220 + v6 + v9) = 0x9898989898989898LL;
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL * ((((v7 & 0x38) != 8LL) * (v8 ^ (a5 + 405) ^ 0x288)) ^ (a6 + v8 + 195)))
                            - 12LL))();
}

uint64_t sub_1005465A0(double a1)
{
  double *v1 = a1;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (((v4 != 0) * v3) ^ v2)) - 12LL))();
}

uint64_t sub_1005465C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (v5 ^ (1961 * (v7 != v6)))) + a3 - (a5 + (v5 ^ 0x2ECu) - 65)))();
}

uint64_t sub_1005465F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t (*a19)(__n128, __n128, __n128, __n128, __n128, __n128), unint64_t a20, uint64_t a21, uint64_t a22, int32x4_t a23, int32x4_t a24, int32x4_t a25, int32x4_t a26)
{
  return sub_100545400( a5,  a6,  v26 ^ 0x510u,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26);
}

uint64_t sub_100546608@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  *(_BYTE *)(v5 - 220 + a2 + __chkstk_darwin(v2, v3) = -104;
  return ((uint64_t (*)(void))(*(void *)(v4
}

uint64_t sub_100546664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL * (((a6 + ((a5 + v8 - 134527447) | 0x804B944) - 115) * (v6 == v7)) ^ v8))
                            - 8LL))();
}

uint64_t sub_1005466AC@<X0>( int a1@<W4>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t (*a14)(__n128, __n128, __n128, __n128, __n128, __n128), unint64_t a15, uint64_t a16, uint64_t a17, int32x4_t a18, int32x4_t a19, int32x4_t a20, int32x4_t a21)
{
  int v22 = *(unsigned __int8 *)(v21 - 124) ^ a3;
  if (v22 == 1)
  {
    unsigned int v30 = *(_DWORD *)(v21 - 156);
    unsigned int v29 = *(_DWORD *)(v21 - 152);
    *(_BYTE *)(v21 - 164) = (~(16 * ~(_BYTE)v29) | 0xCF) + 8 * ~(_BYTE)v29 - 103;
    *(_BYTE *)(v21 - 163) = ((a2 + a1 - 41) ^ (v29 >> 5)) - ((v29 >> 4) & 0x30) - 104;
    *(_BYTE *)(v21 - 162) = ((v29 >> 13) ^ 0x7C) - ((2 * ((v29 >> 13) ^ 0x7C)) & 0x30) - 104;
    HIDWORD(v31) = v30 ^ 3;
    LODWORD(v31) = v29 ^ 0x60000000;
    *(_BYTE *)(v21 - 161) = ((v29 >> 21) ^ 0x8B) - ((2 * ((v29 >> 21) ^ 0x8B)) & 0x30) - 104;
    *(_BYTE *)(v21 - 160) = (v31 >> 29) - ((2 * (v31 >> 29)) & 0x30) - 104;
    *(_BYTE *)(v21 - 159) = ((v30 >> 5) ^ 0xF2) - ((2 * ((v30 >> 5) ^ 0xF2)) & 0x30) - 104;
    *(_BYTE *)(v21 - 158) = ((v30 >> 13) ^ 0xD6) - ((2 * ((v30 >> 13) ^ 0xD6)) & 0x30) - 104;
    int v24 = a2 + a1 + 1024;
    unsigned int v27 = (v30 >> 21) ^ 0x2C;
    char v28 = 2 * v27;
    goto LABEL_5;
  }

  int v23 = 442826204;
  if (v22 == 2)
  {
    int v24 = (a1 + 56907523) & 0x2236AFEB;
    unsigned int v27 = *(_DWORD *)(v21 - 156);
    unsigned int v25 = *(_DWORD *)(v21 - 152);
    *(_BYTE *)(v21 - 164) = ((v27 >> 21) ^ 0x2C)
                          + ((a1 + 3) & 0xEB ^ 0x53)
                          - 2 * (((v27 >> 21) ^ 0x2C) & 0x1B ^ (v27 >> 21) & 3);
    *(_BYTE *)(v21 - 163) = ((v27 >> 13) ^ 0xD6) - ((2 * ((v27 >> 13) ^ 0xD6)) & 0x30) - 104;
    *(_BYTE *)(v21 - 162) = ((v27 >> 5) ^ 0xF2) - 2 * (((v27 >> 5) ^ 0xF2) & 0x99 ^ ((v27 & 0x20) != 0)) - 104;
    HIDWORD(v26) = v27 ^ 3;
    LODWORD(v26) = v25 ^ 0x60000000;
    *(_BYTE *)(v21 - 161) = (v26 >> 29) + (~(2 * (v26 >> 29)) | 0xCF) - 103;
    *(_BYTE *)(v21 - 160) = ((v25 >> 21) ^ 0x8B) - ((2 * ((v25 >> 21) ^ 0x8B)) & 0x30) - 104;
    *(_BYTE *)(v21 - 159) = ((v25 >> 13) ^ 0x7C) - 2 * (((v25 >> 13) ^ 0x7C) & 0x99 ^ ((v25 & 0x2000) != 0)) - 104;
    *(_BYTE *)(v21 - 158) = ((v25 >> 5) ^ 0xA2) - ((v25 >> 4) & 0x30) - 104;
    LOBYTE(v25) = ~(_BYTE)v25;
    LOBYTE(v27) = 8 * v25;
    char v28 = 16 * v25;
LABEL_5:
    int v23 = v24 ^ (a1 - 1221);
    *(_BYTE *)(v21 - 157) = v27 - ((v23 + 84) & v28) - 104;
  }

  return sub_100545400( a1,  a2,  (a2 + v23 + 901) | 0x101u,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21);
}

uint64_t sub_100546B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v13 = v8 - a6 - 140 + v10 - 1327759721;
  unsigned int v14 = *(_DWORD *)(v12 - 220 + (v13 & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a4 + v13) = (HIBYTE(v14) ^ 0x7F) - ((2 * (HIBYTE(v14) ^ 0x7F)) & 0x30) - 104;
  *(_BYTE *)(a4 + (v10 + v7)) = BYTE2(v14) - ((v14 >> 15) & 0x30) - 104;
  *(_BYTE *)(a4 + (v10 + v7 + 1)) = (BYTE1(v14) ^ 0x66) - ((v14 >> 7) & 0x30) - 104;
  *(_BYTE *)(a4 + (v10 + v7 + 2)) = v14 ^ 0x92;
  unsigned int v15 = *(_DWORD *)(v12 - 128) - 1000902706;
  BOOL v16 = v15 < v6;
  BOOL v17 = v10 - 1255983934 < v15;
  if (v10 - 1255983934 < v6 != v16) {
    BOOL v17 = v16;
  }
  return ((uint64_t (*)(void))(*(void *)(v11 + 8LL * ((v17 * v9) ^ v8)) - 4LL))();
}

uint64_t sub_100546C1C@<X0>( char a1@<W1>, char a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v19 = (a3 + 446);
  unint64_t v20 = ((2LL * (void)&a17) & 0xEE3DDAE9BE777B70LL)
      + 0x3BF77FFF62E47F80LL
      + ((v19 - 0x8E1128B20C44401LL) ^ (unint64_t)&a17);
  *(_BYTE *)(v18 - 129) = (v19 ^ a1 ^ (a2 - 114) ^ (v20 - 61)) * (v20 - 44);
  return (*(uint64_t (**)(void))(v17 + 8LL * (int)(v19 ^ 0x3D0)))(0LL);
}

void sub_100546CB0()
{
}

void sub_100546CB8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (535753261 * ((a1 + 317168069 - 2 * (a1 & 0x12E799C5)) ^ 0x181397EA));
  if (*(_DWORD *)(*(void *)(a1 + 16) - 0x13AAEC8A5CF1D15CLL) - 499656757 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x13AAEC8A5CF1D15CLL) - 499656757;
  }
  else {
    unsigned int v3 = 499656757 - *(_DWORD *)(*(void *)(a1 + 16) - 0x13AAEC8A5CF1D15CLL);
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (*(_DWORD *)(v2 - 0x13AAEC8A5CF1D15CLL) - 499656757 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x13AAEC8A5CF1D15CLL) - 499656757;
  }
  else {
    unsigned int v4 = 499656757 - *(_DWORD *)(v2 - 0x13AAEC8A5CF1D15CLL);
  }
  uint64_t v7 = *(void *)(a1 + 16);
  unsigned int v6 = (535753261 * (&v6 ^ 0xAF40E2F)) ^ (v1 + 764);
  sub_100530690((uint64_t)&v6);
  if (v3 >= v4) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v3;
  }
  __asm { BR              X15 }

uint64_t sub_100546E40@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v11 = 4LL * (v9 + v5);
  int v12 = v7
      + 1902143841
      + v4
      + 672
      + (*(_DWORD *)(*(void *)(v10 - 0x13AAEC8A5CF1D158LL) + v11) ^ v8)
      + (*(_DWORD *)(*(void *)(a2 - 0x13AAEC8A5CF1D158LL) + v11) ^ v8)
      - 1158;
  *(_DWORD *)(*(void *)(a1 - 0x13AAEC8A5CF1D158LL) + v11) = v12 + v8 - (v6 & (2 * v12));
  BOOL v13 = v9 + 851079212 < (int)(v3 + 1467526418);
  if (v3 > 0x288752ED != v9 + 851079212 < -679957230) {
    BOOL v13 = v3 > 0x288752ED;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((813 * !v13) ^ v4)) - 8LL))();
}

uint64_t sub_100546F64()
{
  int v4 = v3 - 739131580 + 13 * (v1 ^ 0x4B1);
  BOOL v6 = v4 > (int)((v1 + 452774201) & 0xE50336F6 ^ 0x78AFFA43) || v4 < v2 - 122683658;
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * ((338 * v6) ^ v1)) - 8LL))();
}

uint64_t sub_100546FD8@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v13 = 4LL * (v11 + v7);
  int v14 = v3 + v9 + (*(_DWORD *)(*(void *)(v12 - 0x13AAEC8A5CF1D158LL) + v13) ^ v10);
  *(_DWORD *)(*(void *)(a2 - 0x13AAEC8A5CF1D158LL) + v13) = v14 + v10 - (v8 & (2 * v14));
  int v15 = v4 + v11 + 716;
  BOOL v17 = v15 > a1 + 1202 || v15 < v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))(*(void *)(v2
                                                                                          + 8LL
                                                                                          * (((4 * v17) | (16 * v17)) ^ (v5 + 443)))
                                                                              - 8LL))( 1174LL,  0x6FDFEFFF776BFF71LL,  4007132898LL,  0xDBEE9F48F9F469F0LL);
}

uint64_t sub_1005470A8()
{
  BOOL v4 = v3 + 1217689075 < (int)(v2 + 1834136282);
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * ((111 * v4) ^ v1)) - 12LL))();
}

uint64_t sub_10054711C@<X0>(int a1@<W6>, uint64_t a2@<X8>, uint64_t a3)
{
  BOOL v15 = v13 > v8;
  uint64_t v16 = 4LL * (v14 + v9);
  int v17 = v4 + v11 + (*(_DWORD *)(*(void *)(a3 - 0x13AAEC8A5CF1D158LL) + v16) ^ v12);
  *(_DWORD *)(*(void *)(a2 - 0x13AAEC8A5CF1D158LL) + v16) = v17 + v12 - ((v17 << (((v6 + 30) | 0x4C) - 91)) & v10);
  int v18 = v14 + 1 + v5;
  LODWORD(v16) = v15 ^ (v18 < a1 + 690);
  BOOL v19 = v18 < v7;
  if (!(_DWORD)v16) {
    BOOL v15 = v19;
  }
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((1604 * !v15) ^ v6)) - 12LL))();
}

uint64_t sub_100547204()
{
}

void sub_100547248(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x13AAEC8A5CF1D158LL) + 4LL * (v3 + v5 + ((v2 + 108) | 3) - 715)) = v1
                                                                                                 - ((2 * v1 + 222244158) & v4)
                                                                                                 + 325000789;
  *(_DWORD *)(a1 - 0x13AAEC8A5CF1D15CLL) = (((v5 + 1 + v3) * (v6 - 1957521423)) ^ 0x7DEEF87F)
                                         - 1613156426
                                         + ((2 * (v5 + 1 + v3) * (v6 - 1957521423)) & 0xFBDDF0FE);
}

void sub_10054732C(_DWORD *a1)
{
  unsigned int v1 = 1755732067 * ((650609490 - (a1 | 0x26C78352) + (a1 | 0xD9387CAD)) ^ 0x7FEC176);
  unsigned int v2 = *a1 + v1;
  int v3 = a1[1] ^ v1;
  BOOL v5 = (v3 & 0x30000000) == 0x10000000 || (v3 & 0x3F000000) == 822083584;
  __asm { BR              X12 }

uint64_t sub_10054741C@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, char a5, unint64_t *a6, int a7, unint64_t *a8, uint64_t a9, int a10, unsigned int a11)
{
  uint64_t v16 = *(void *)(v13 + 16);
  unsigned int v17 = (((&a4 | 0x3B2B84C7) - &a4 + (&a4 & 0xC4D47B38)) ^ 0xE5ED391C) * a1;
  a4 = &STACK[0x1C6D093801E6EF71];
  a8 = &STACK[0x2064890B78DB05E2];
  a9 = v16;
  a7 = v15 - v17 - 111;
  a11 = (v12 ^ 0xA9B5DEC5)
      + v17
      + 2145236928
      + ((((334 * (v15 ^ 0x1D2) - 807) | 0x110) + 869119917) & (2 * v12) ^ 0x20840000);
  a5 = v17 ^ 0x69;
  a6 = &STACK[0x21738119BF0B6188];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v11 + 8LL * (v15 ^ 0x1CD)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v14 + 8LL * (v15 | (2 * (a10 != -2006430421)))))(v18);
}

uint64_t sub_10054754C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL * (((((v2 - 857) ^ 0x34B) + ((v2 - 857) | 0x40) + 220) * (v1 == 822083584)) ^ v2)))();
}

uint64_t sub_100547580( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v10 + 8LL * ((54 * (a9 + 4 < a9)) ^ v9)) - 4LL))( a1,  a2);
}

uint64_t sub_1005475E8()
{
  int v3 = v0 - 4;
  BOOL v4 = ((((v3 - 304) | 0x10) - 776878430) ^ v1) + 971893728 + ((2 * v1) & 0xEFBFADF6 ^ 0x4C9C2110) == 835568347;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((v4 | (2 * v4)) ^ v3)) - 8LL))();
}

uint64_t sub_100547658()
{
  int v4 = v1 + 1506;
  BOOL v5 = v0 + v2 + 136325381 >= ((40 * (v4 ^ 0x697) - 1166) | 0xC1u) - 455;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((v5 | (8 * v5)) ^ v4)) - 12LL))();
}

uint64_t sub_1005476B8(int a1, uint64_t a2, int a3)
{
  BOOL v5 = ((a3 - (v3 & 3) + (a1 ^ 0x776)) & 0xFFFFFFFC) > a3 + a1 - 973 + 262;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((8 * v5) | (16 * v5) | a1)) - 4LL))();
}

uint64_t sub_100547704@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 3 + (v3 + v2)) = *(_DWORD *)(v1 - 3 + (v3 + v2));
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * (((v5 != 4) * ((2 * v4) ^ 0x5A7)) ^ (v4 + 198))) - 8LL))((2 * v4) ^ 0x254u);
}

uint64_t sub_10054775C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL * ((1990 * ((v1 ^ 0x266E1188) != ((11 * ((2 * v0) ^ 0x3F9)) ^ 0xD1))) ^ (2 * v0))))();
}

uint64_t sub_1005477B8@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v4 > 0xE5F90B04;
  *(_BYTE *)(a1 + (v7 - 1385697266)) = *(_BYTE *)(v1 + (v7 - 1385697266));
  return (*(uint64_t (**)(BOOL))(v8 + 8LL * ((v9 * v6) ^ v2)))(v7 - 949033718 < v5);
}

uint64_t sub_100547820@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  uint64_t v8 = 7 * (v6 ^ 0x289u);
  a3.i32[0] = *(_DWORD *)(a2 + (v8 ^ 0x298) + a1);
  *(_DWORD *)(a2 - 3 + v4 + ((166 * (v8 ^ 0x29A)) ^ (v3 - 78))) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * (int)((79 * (v5 != 4)) ^ v8)) - 8LL))();
}

uint64_t sub_10054789C(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (a1 ^ (836 * (v1 != v2)))) - (((a1 - 305) | 0x10u) ^ 0xD9LL)))();
}

uint64_t sub_1005478D0@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + (v4 + v3)) = *(_BYTE *)(v1 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8LL * ((1760 * (v4 - 1 != ((v5 - 423440860) & 0x193D30D9 ^ v2))) ^ (v5 + 535))))();
}

uint64_t sub_10054791C()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((*(void *)(v1 + 8) != 0x2E08524DB1FD77B6LL) * ((v0 ^ 0x102) + 466)) ^ v0))
                            - 12LL))();
}

uint64_t sub_100547958@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4)
{
  *(_DWORD *)(a1 - 0x2E08524DB1FD77B6LL) = a4;
  return (*(uint64_t (**)(void))(v6 + 8LL * ((1407 * (*(void *)(v5 + 24) != 0x3F8123127DDA1A64LL)) ^ (v4 + 258))))();
}

void sub_1005479AC(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x3F8123127DDA1A64LL) = v3;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_100547A34()
{
  unint64_t v0 = (unint64_t)&v2[qword_1009BDB28 - qword_1009BDB90];
  qword_1009BDB90 = 1045096823 * v0 - 0x1159CE8E9813C2FLL;
  qword_1009BDB28 = 1045096823 * (v0 ^ 0xFEEA6317167EC3D1LL);
  *(_DWORD *)*(&off_10090D690
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_10090D690
  *(void *)*(&off_10090D690
  __asm { BR              X8 }

uint64_t sub_100547BDC()
{
  uint64_t v6 = v0;
  unint64_t v2 = 1374699841
     * ((((v1 - 144) | 0x429F1B131B3800B3LL) - (v1 - 144) + ((v1 - 144) & 0xBD60E4ECE4C7FF48LL)) ^ 0x4C93851F76CC18BALL);
  uint64_t v3 = dword_1009BCF50;
  *(_DWORD *)(v1 - 128) = v2 ^ 0xE1F2694A;
  *(_DWORD *)(v1 - 140) = -1659236701 - v2;
  *(_DWORD *)(v1 - 136) = v2;
  *(_DWORD *)(v1 - 144) = v2 ^ 0x9D1A0E89;
  *(void *)(v1 - 104) = v3 - v2;
  *(_DWORD *)(v1 - 112) = v2 - 1659236648;
  *(void *)(v1 - 120) = v2 + 931881356;
  uint64_t v4 = sub_100557810(v1 - 144);
  return ((uint64_t (*)(uint64_t))(*(void *)(v6 + 8LL * *(int *)(v1 - 132)) - 12LL))(v4);
}

uint64_t sub_100547EC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41)
{
  int v45 = v44();
  unsigned int v46 = v45 + 383259168 - ((v43 + v42 + 1200221923 - 443) & (2 * v45));
  *uint64_t v41 = v46;
  v41[1] = 1812433253 * (((v46 >> 30) | 0x16D81220) ^ v46)
         - ((-670100790 * (((v46 >> 30) | 0x16D81220) ^ v46) + 2) & v43)
         + 383259169;
  return ((uint64_t (*)(uint64_t))(*(void *)(a41
                                                      + 8LL
                                                      * ((1989 * (((v42 + 23873819) & 0x461DA6FFu) - 132 <= 1)) ^ (v42 + 1200221923)))
                                          - 4LL))(1812433253LL);
}

void sub_100547FA0()
{
}

uint64_t sub_100547FB4( double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int8x16_t a19, int32x4_t a20, int8x16_t a21, int8x16_t a22, int8x16_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38)
{
  int8x16_t v40 = (int8x16_t)vld1q_dup_f32((const float *)v38);
  v41.i64[0] = 0x8000000080000000LL;
  v41.i64[1] = 0x8000000080000000LL;
  a2.i64[0] = *(void *)(v38 + 4);
  a2.i32[2] = *(_DWORD *)(v38 + 12);
  int8x16_t v42 = vextq_s8(v40, a2, 0xCuLL);
  int8x16_t v43 = a2;
  v43.i32[3] = *(_DWORD *)(v38 + 16);
  int32x4_t v44 = (int32x4_t)veorq_s8( (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v43, a23), vandq_s8(v42, v41)), 1uLL),  a22);
  v45.i32[0] = *(_DWORD *)(v39 + 4 * (*(_DWORD *)(v38 + 4) & 1LL));
  v45.i32[1] = *(_DWORD *)(v39 + 4 * (*(_DWORD *)(v38 + 8) & 1LL));
  v45.i32[2] = *(_DWORD *)(v39 + 4 * (*(_DWORD *)(v38 + 12) & 1LL));
  v45.i32[3] = *(_DWORD *)(v39 + 4LL * (v43.i8[12] & 1));
  *(int8x16_t *)uint64_t v38 = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)(v38 + 1588), v45), a19),  (int8x16_t)vaddq_s32( vsubq_s32(v44, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v44, v44), a21)),  a20));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a38 + 8784) - 4LL))( 383259168LL,  3344506767LL,  1534599651LL,  2760368091LL);
}

uint64_t sub_10054875C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v10 = (unsigned int *)(v5 + 4 * v4);
  uint64_t v11 = v4 + 1;
  int v12 = *(_DWORD *)(v5 + 4 * v11);
  unsigned int v13 = v6 ^ ((v12 & 0x7FFFFFFE | v3 & 0x80000000) >> 1);
  *uint64_t v10 = v10[397] ^ a2 ^ *(_DWORD *)(v9 + 4LL * (v12 & 1)) ^ (v13 + a1 - ((v7 + a3 + 243 - 848) & (2 * v13)));
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((60 * (v11 != 227)) ^ a3)) - 4LL))();
}

uint64_t sub_1005487D0( double a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12)
{
  int v18 = v12 ^ 0x1C;
  BOOL v19 = (const float *)(v13 + 908);
  int8x16_t v20 = (int8x16_t)vld1q_dup_f32(v19);
  uint64_t v21 = (v18 + a11) & a12;
  a2.i64[0] = *(void *)(v13 + 912);
  a2.i32[2] = *(_DWORD *)(v13 + 4 * (v21 - 1061));
  int8x16_t v22 = vextq_s8(v20, a2, 0xCuLL);
  int8x16_t v23 = a2;
  v23.i32[3] = *(_DWORD *)(v13 + 924);
  int32x4_t v24 = (int32x4_t)veorq_s8( (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v23, a6), vandq_s8(v22, a5)), 1uLL),  a7);
  v25.i32[0] = *(_DWORD *)(v15 + 4 * (*(_DWORD *)(v13 + 912) & 1LL));
  v25.i32[1] = *(_DWORD *)(v15 + 4 * (*(_DWORD *)(v13 + 916) & 1LL));
  v25.i32[2] = *(_DWORD *)(v15 + 4 * (*(_DWORD *)(v13 + 4 * (v21 - 1061)) & 1LL));
  v25.i32[3] = *(_DWORD *)(v15 + 4LL * (v23.i8[12] & 1));
  *(int8x16_t *)(v13 + 908) = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)v13, v25), v17),  (int8x16_t)vaddq_s32( vsubq_s32(v24, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v24, v24), a8)),  v16));
  return (*(uint64_t (**)(void))(v14 + 8LL * (v18 ^ 0x1C)))();
}

void sub_100548898()
{
}

uint64_t sub_1005488A4@<X0>( int a1@<W0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, unsigned int a39)
{
  unsigned int v43 = (a3 - 1149774124) & 0xFCFE36F8 ^ ((*v39 & 0x7FFFFFFE | v39[623] & 0x80000000) >> 1) ^ 0xB31A1BC8;
  v39[623] = v39[396] ^ a2 ^ *(_DWORD *)(v42 + 4 * (*v39 & 1LL)) ^ (v43 + a1 - (v40 & (2 * v43)));
  return ((uint64_t (*)(void))(*(void *)(v41 + 8LL * ((908 * (a39 > 0x26F)) ^ a3)) - 8LL))();
}

uint64_t sub_100548938( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t (*a39)(uint64_t))
{
  *int v40 = 1572052252;
  uint64_t v44 = (*v41 - 242643600);
  *(_DWORD *)(v43 - 132) = a15;
  *(_DWORD *)(v43 - 112) = v39 + 1906335105 + a15;
  *(_DWORD *)(v43 - 108) = v39 + 1906335105 - a15 - 51;
  *(_DWORD *)(v43 - 144) = (v39 - 301464364) ^ a15;
  *(_DWORD *)(v43 - 140) = ((v39 + 1906335105) | 6) ^ a15;
  *(void *)(v43 - 128) = v44 + a15;
  *(void *)(v43 - 120) = a14;
  uint64_t v45 = a39(v43 - 144);
  return ((uint64_t (*)(uint64_t))(*(void *)(v42 + 8LL * *(int *)(v43 - 136)) - 8LL))(v45);
}

uint64_t sub_1005489DC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, void *a32, unint64_t a33)
{
  if (v34 >= 0x2914EEFC) {
    unsigned int v37 = *v35 + (a16 ^ 0x835B6C65);
  }
  else {
    unsigned int v37 = 931881356;
  }
  *__n128 v35 = v37;
  int v38 = (((v33 >> 11) ^ 0x2DB02) + 383259168 - ((2 * ((v33 >> 11) ^ 0x2DB02)) & 0x302440)) ^ v33;
  unsigned int v39 = (((v38 << 7) & 0x9D2C5680 ^ v38) << 15) & 0xEFC60000 ^ (v38 << 7) & 0x9D2C5680 ^ v38;
  *(_DWORD *)(*a32 + a33) ^= v39 ^ (v39 >> 18);
  return (*(uint64_t (**)(void))(v36 + 8LL * ((1858 * (a33 > 0x1FB)) ^ 0x3B8)))();
}

void sub_100548AC8()
{
}

void sub_100548ADC()
{
  int *v1 = v0 | 0x6B;
}

uint64_t sub_10054F06C(uint64_t a1)
{
  int v1 = 1755732067 * ((a1 & 0x2162CAC3 | ~(a1 | 0x2162CAC3)) ^ 0x5B88E7);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 20) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x13AAEC8A5CF1D15CLL);
  unsigned int v6 = v4 - 499656757;
  BOOL v5 = v4 - 499656757 < 0;
  unsigned int v7 = 499656757 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + v2 - 809)
                                        + 8 * ((1506 * (v3 >> 5 < v7)) ^ v2)
                                        - 12)
                            - 4LL))();
}

uint64_t sub_10054F120@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  unsigned int v4 = ((*(_DWORD *)(*(void *)(v2 - 0x13AAEC8A5CF1D158LL) + 4LL * v3) ^ 0x84BF87B6) >> a2) ^ 0x5E5A4A4;
  unsigned int v5 = -2 - ((~(v4 & 0x77D437CD) | 0x3E1F163C) + (v4 & 0x3614160C | 0xC1E0E9C3));
  *(_DWORD *)(result + 16) = (((2 * (v4 & 0x77D437CC ^ 0x3BDB32B8 ^ v5)) | 0x8999C9DC)
                            - (v4 & 0x77D437CC ^ 0x3BDB32B8 ^ v5)
                            - 1154278638) ^ 0xC0614309;
  return result;
}

uint64_t sub_10054F1CC(uint64_t result)
{
  *(_DWORD *)(result + 16) = -2123791517;
  return result;
}

void sub_10054F1DC(_DWORD *a1)
{
  unsigned int v1 = *a1 + 628203409 * ((-2 - ((~(_DWORD)a1 | 0x96C77CC6) + (a1 | 0x69388339))) ^ 0x144F70F5);
  __asm { BR              X10 }

uint64_t sub_10054F2CC@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL * ((253 * (((v1 == 0) ^ ((a1 ^ 0x59) + 1)) & 1)) ^ a1))
                            - ((a1 - 827) | 0x107u)
                            + 315LL))();
}

uint64_t sub_10054F324()
{
  BOOL v6 = ((((v1 - 750587519) & 0x2CBD0BDC) - 383) & *(_DWORD *)(v3 - 0x2185BF99DEDD7438LL)) != 0
    && (*(_DWORD *)(v2 + 16) - v0 - 1404406424) < 0xFFFFFFBF;
  return (*(uint64_t (**)(void))(v4
                              + 8LL
                              * ((((v1 + 33) ^ v6) & 1 | (8 * (((v1 + 33) ^ v6) & 1))) ^ v1)))();
}

uint64_t sub_10054F3B4@<X0>( uint64_t (*a1)(uint64_t *)@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  int v12 = v7 | 0x28;
  unsigned int v13 = 1178560073 * (&a3 ^ 0x32160040);
  a7 = -1216315885 - v13;
  a3 = v9;
  a4 = v8;
  a5 = (v11 - 163112214) ^ v13;
  a6 = v13 + (v7 | 0x28) - 91;
  uint64_t v14 = a1(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8LL
}

uint64_t sub_10054F458()
{
  int v3 = v1 - (((((v2 ^ 0xEA) - 57) ^ 0x1894EA15) + 2 * v1) & 0x19FCF322) - 1186402502;
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * ((71
                                * (((2 * v3) & 0xFFFC7EF6 ^ 0x19FC7222) + (v3 ^ 0xF30046EA) + 1841163968 != 1841049147)) | v2 ^ 0xEA)))();
}

uint64_t sub_10054F4EC()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((247
                                          * (v2 + v1 + ((((v0 ^ 0x72C) - 1635) | 0xD5) ^ 0x1C058u) >= (v0 ^ 0x14Fu))) ^ v0 ^ 0x72C))
                            - 8LL))();
}

uint64_t sub_10054F548()
{
  return (*(uint64_t (**)(void))(v3
                                           + 8LL
                                           * (v1 ^ 0x440 ^ ((8 * ((unint64_t)(v2 - v0) < 0x20)) | (16 * ((unint64_t)(v2 - v0) < 0x20))))))((199 * (v1 ^ 0x668) - 975944312) & 0x3A2BB8FF);
}

uint64_t sub_10054F59C(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((1752 * (v2 >= ((a2 - 270) ^ 0x167u))) ^ a2))
                            - ((a2 - 1022725727) & 0x3CF58FFB)
                            + 998LL))();
}

uint64_t sub_10054F5E8()
{
  unsigned int v8 = v3 + v2 + v4;
  v9.i64[0] = 0x3030303030303030LL;
  v9.i64[1] = 0x3030303030303030LL;
  v10.i64[0] = 0x9999999999999999LL;
  v10.i64[1] = 0x9999999999999999LL;
  uint64_t v11 = v6 + v8;
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v11 - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v11 - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v0 + v8;
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vaddq_s8(v13, v10), vmvnq_s8(vandq_s8(vaddq_s8(v13, v13), v9))));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vaddq_s8(v15, v10), vmvnq_s8(vandq_s8(vaddq_s8(v15, v15), v9))));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL * ((((v1 & 0xFFFFFFE0) == 32) * (((v5 - 71) | 0x80) - 340)) ^ (v5 + 276)))
                            - 8LL))();
}

void sub_10054F690()
{
}

void sub_10054F69C()
{
  *(_DWORD *)(v0 + 4) = 2006390514;
}

void sub_10054FB90(uint64_t a1)
{
  unint64_t v2 = (unint64_t)&v3 ^ qword_1009BD998 ^ qword_1009BDB28;
  qword_1009BD998 = 1045096823 * v2 + 0xF4347460D903F27LL;
  qword_1009BDB28 = 1045096823 * (v2 ^ 0xFEEA6317167EC3D1LL);
  ((void (*)(char *, void (*)()))*(&off_10090D690
                                            + ((119 * (qword_1009BD998 ^ 0xD1 ^ qword_1009BDB28)) ^ byte_100722700[byte_10072D720[(119 * (qword_1009BD998 ^ 0xD1 ^ qword_1009BDB28))] ^ 0x9D])
                                            - 31))( (char *)*(&off_10090D690 + ((119 * ((qword_1009BDB28 + qword_1009BD998) ^ 0xD1)) ^ byte_100729F30[byte_100725F50[(119 * ((qword_1009BDB28 + qword_1009BD998) ^ 0xD1))] ^ 0x1D])
            - 128)
  - 8,
    sub_10055759C);
  __asm { BR              X10 }

uint64_t sub_10054FCB8()
{
}

  ;
}

uint64_t sub_10054FCF0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8LL * (a1 - 551)))(v1);
}

void sub_10054FD0C(uint64_t a1)
{
  uint64_t v2 = qword_1009BDB30 - (void)&v3 + qword_1009BDB28;
  qword_1009BDB30 = 1045096823 * v2 + 0xF4347460D903F27LL;
  qword_1009BDB28 = 1045096823 * (v2 ^ 0xFEEA6317167EC3D1LL);
  ((void (*)(char *, void (*)()))*(&off_10090D690
                                            + ((119
                                                                             * ((qword_1009BDB28 + qword_1009BDB30) ^ 0xD1)) ^ byte_100725E50[byte_100722600[(119 * ((qword_1009BDB28 + qword_1009BDB30) ^ 0xD1))] ^ 0xFE])
                                            + 38))( (char *)*(&off_10090D690 + ((119 * ((qword_1009BDB28 - qword_1009BDB30) ^ 0xD1)) ^ byte_10072D820[byte_100729E30[(119 * ((qword_1009BDB28 - qword_1009BDB30) ^ 0xD1))] ^ 0x3D])
            - 197)
  - 8,
    sub_10055759C);
  __asm { BR              X11 }

uint64_t sub_10054FE30()
{
}

  ;
}

uint64_t sub_10054FE68@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8LL * (a1 - 963)))(v1);
}

void sub_10054FE84(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a4) {
    BOOL v4 = *a3 == 0LL;
  }
  else {
    BOOL v4 = 0;
  }
  int v7 = v4 && a1 != 0 && a2 != 0;
  __asm { BR              X8 }

uint64_t sub_10054FF10( uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, int a20)
{
  *a2 = 0;
  a19 = (1178560073
       * ((-1469648303 - (&a19 | 0xA866F251) + (&a19 | 0x57990DAE)) ^ 0x658F0DEE)) ^ 0x650810FC;
  uint64_t v23 = sub_100556E04(&a19);
  return ((uint64_t (*)(uint64_t))(*(void *)(v21
                                                      + 8LL
}

uint64_t sub_10054FFBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20, unsigned int a21)
{
  a21 = 718
      - 460628867 * ((194051134 - (&a19 | 0xB90FC3E) + (&a19 | 0xF46F03C1)) ^ 0xB8F981BC);
  a19 = &STACK[0x8C0F0A4F49AC06A];
  sub_100519248((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 8LL * ((1722 * (a20 == v21)) ^ 0x2B4u)) - ((-1689052593 - v23) ^ 0x2A9LL)))( v24,  v25,  v26,  v27,  v28,  v29,  v30,  v31,  a9,  a10,  a11,  a12);
}

uint64_t sub_100550068( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20, uint64_t a21, unsigned int a22, uint64_t a23)
{
  unsigned int v27 = 628203409 * ((&a19 & 0xF6415C06 | ~(&a19 | 0xF6415C06)) ^ 0x8B36AFCA);
  a21 = v23;
  a22 = v27 + 1404406371;
  a23 = a18;
  a19 = v26 - v27 - 346;
  uint64_t v28 = ((uint64_t (*)(int *))*(&off_10090D690 + v26 - 495))(&a19);
  return ((uint64_t (*)(uint64_t))(*(void *)(v25
                                                      + 8LL * (((a20 != v24) * ((346 * (v26 ^ 0x2A3)) ^ 0x2BA)) | v26))
                                          - ((v26 + 14) ^ 0x2A3LL)))(v28);
}

uint64_t sub_100550134( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20, unsigned int a21, uint64_t a22, unint64_t *a23, int a24)
{
  unsigned int v27 = 3804331 * ((2 * (&a19 & 0x6F8198C8) - &a19 + 276719411) ^ 0xEAE09465);
  a24 = (v26 + 2138962673) ^ v27;
  a20 = 2128190208 - v27;
  a21 = v27 ^ 0xAEC324F7;
  a22 = a18;
  a23 = &STACK[0x5BFD90C18C6562EA];
  uint64_t v28 = sub_100556BC0((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(void *)(v25 + 8LL * ((1914 * (a19 == v24)) ^ v26))
                                          - ((v26 + 115) ^ 0x196u)
                                          + 680LL))(v28);
}

uint64_t sub_1005501FC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, uint64_t a17, uint64_t a18, unsigned int a19, int a20, unint64_t *a21, unint64_t *a22, unint64_t *a23, unsigned int a24)
{
  a19 = (v25 - 123) ^ (1374699841
                     * ((-328946516 - (&a19 | 0xEC64ACAC) + (&a19 | 0x139B5353)) ^ 0x7E6F4B5A));
  a21 = &STACK[0x3703560E774B814F];
  a22 = a16;
  uint64_t v28 = (void (*)(unsigned int *))*(&off_10090D690 + (v25 ^ 0x369));
  v28(&a19);
  a22 = v24;
  a23 = &STACK[0x57BFF69C8C42E16F];
  a21 = a16;
  a24 = (v25 + 67) ^ (1225351577
                    * ((&a19 + 1237682669 - 2 * (&a19 & 0x49C589ED)) ^ 0x6A5F51FB));
  ((void (*)(unsigned int *))*(&off_10090D690 + v25 - 660))(&a19);
  unsigned int v29 = 2 * &a19;
  a19 = (v25 - 123) ^ (1374699841 * (((v29 | 0xAD106330) - &a19 - 1451766168) ^ 0x3B7C2991));
  a22 = a16;
  a21 = &STACK[0x3703560E774B815F];
  v28(&a19);
  a21 = a16;
  a19 = v25 + 3804331 * (((v29 | 0x78F86528) - &a19 - 1014772372) ^ 0xC6E2C1C2) + 549;
  uint64_t v30 = sub_1005171C4((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(void *)(v27
                                                      + 8LL * ((1120 * (a20 == v26 + 229 * (v25 ^ 0x321) - 687)) ^ v25))
                                          - 12LL))(v30);
}

uint64_t sub_10055040C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  return ((uint64_t (*)(void))(*(void *)(v21 + 8LL * ((((a10 + 1426) ^ 0x1DC ^ a7) * (a19 == v20)) ^ v19)) - 12LL))();
}

uint64_t sub_100550440@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, int a9)
{
  *int8x16_t v10 = a9 ^ v11;
  return ((uint64_t (*)(void))(*(void *)(v12 + 8LL * ((63 * (*v9 == 0)) ^ a1)) - ((a1 + 101) ^ 0x5F2LL)))();
}

uint64_t sub_100550490()
{
  uint64_t v3 = ((uint64_t (*)(void))*(&off_10090D690 + (v1 ^ 0x5E0)))();
  uint64_t *v0 = v3;
  return (*(uint64_t (**)(void))(v2
                              + 8LL
}

uint64_t sub_1005504FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v9 = (v7 - 1146) | 0x470;
  int v10 = (v9 - 1480142786) & 0x58392FD9;
  int v11 = *v6 - ((2 * *v6) & 0x13A16390) + 164671944;
  BOOL v12 = ((2 * v11) & 0x765BF89E ^ 0x12016090) - 2103307 + (v11 ^ (v10 + 855459711)) == 990766148;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                                 + 8LL
                                                                                                 * ((2 * v12) | (8 * v12) | v9)))( a1,  a2,  a3,  a4,  a5,  a6,  (v10 - 857));
}

uint64_t sub_1005505A4(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5
                                                               + 8LL
                                                               * (v4 ^ (91
                                                                      * ((v2 + v1 - 992869455) > 7))))
                                                   - (((v4 ^ 0xECu) - 1689053266) ^ 0x9B531E96LL)))( a1,  v3);
}

uint64_t sub_100550608(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (a3 ^ (492 * ((unint64_t)(v4 - a1) < 0x20))))
                            - ((v6 + a4 - 545) | 0x22Cu)
                            + 695LL))();
}

uint64_t sub_100550644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
}

uint64_t sub_100550690(uint64_t a1, int a2)
{
  uint64_t v8 = (v5 + v3);
  __int128 v9 = *(_OWORD *)(v2 + v8 - 15);
  __int128 v10 = *(_OWORD *)(v2 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
                                        * ((219 * (((a2 + 1689052815) ^ 0x501) != (v4 & 0xFFFFFFE0))) ^ (v7 + a2 + 456)))
                            - 12LL))();
}

uint64_t sub_100550700(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * (int)(((((a3 ^ 0x7E3 ^ (v3 == v4)) & 1) == 0)
                                               * (((a3 + 1160979166) & 0xBACCDAAF) + 313)) ^ a3))
                            - 4LL))();
}

uint64_t sub_10055075C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v10
                                                              + 8LL
                                                              * ((1226
                                                                * ((v7 & 0x18) == ((a4 - 1206856661) & 0x47EF2BFF ^ 0x2ED))) ^ a4))
                                                  - ((a6 + a4 + 1058) ^ v6)))( a1,  (v8 - v9));
}

uint64_t sub_1005507B4(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a1 - 7 + (v6 + v5 + v7 - v8)) = *(void *)(v3 - 7 + (v6 + v5 + v7 - v8));
}

void sub_100550824()
{
}

uint64_t sub_100550830(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
}

uint64_t sub_10055087C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  *(_BYTE *)(a1 + (a2 + v5)) = *(_BYTE *)(v4 + (a2 + v5));
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * ((1434 * (a2 - 1 == a4)) ^ (v7 + a3 - 505)))
}

uint64_t sub_1005508C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v10 = (a7 - 1913078712) & 0x720743BC;
  uint64_t v16 = v12;
  unsigned int v15 = a7 + 535753261 * (((v14 | 0x72FB31C9) + (~v14 | 0x8D04CE36)) ^ 0x780F3FE7) - 118;
  v8(v14);
  uint64_t v16 = v13;
  unsigned int v15 = v10 + 535753261 * (v14 ^ 0xAF40E2F) - 123;
  v8(v14);
  return v9 ^ v7;
}

void sub_1005509A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) + 235795823 * (a1 ^ 0x94AD4959);
  __asm { BR              X15 }

uint64_t sub_100550ABC@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  BOOL v14 = v11 > 0x5BCD7B8B;
  *(_DWORD *)(a9 + 4LL * (v9 + a1)) = *(_DWORD *)(*(void *)(v12 - 0x13AAEC8A5CF1D158LL) + 4LL * (v9 + a1));
  return (*(uint64_t (**)(uint64_t))(v13 + 8LL * ((1700 * v14) ^ v10)))(4149683957LL);
}

uint64_t sub_100550B5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v16 = v13 - 1907894490 + ((v14 - 104) | 0x40);
  BOOL v18 = v16 > 992163229 || v16 < a13 - 1155320418;
  return ((uint64_t (*)(void))(*(void *)(v15 + 8LL * ((111 * v18) ^ v14)) - 12LL))();
}

uint64_t sub_100550BCC@<X0>( int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(_DWORD *)(a10 + 4LL * (v10 + a2)) = a1;
  int v16 = v12 + v10 + 249;
  BOOL v18 = v16 > v13 || v16 < v14;
  return ((uint64_t (*)(void))(*(void *)(v15 + 8LL * ((v18 * ((v11 - 1523435812) & 0x5ACDC8FB ^ 0x97)) ^ v11)) - 12LL))();
}

uint64_t sub_100550C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8LL
                                                                                * (((v5 != 757 * (v6 ^ 0xFA) - 1514)
                                                                                  * (((v6 + 56) | 1) ^ 0x453)) ^ v6)))( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_100550C68@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v12 = a1 ^ 0x1C9;
  int v13 = a1 ^ 0x19D;
  unsigned int v14 = (*(_DWORD *)(*(void *)(a4 + 8) - 0x33A24D71401A864LL) - 1197324802)
      * (*(_DWORD *)(a10 + 4LL * ((a1 ^ 0x4DB) - 1514)) ^ 0x84BF87B6);
  int v15 = 1755732067 * ((((v11 - 128) | 0xC1312103) + (~(v11 - 128) | 0x3ECEDEFC)) ^ 0x1FF79CD9);
  *(_DWORD *)(v11 - 104) = (v14 ^ 0xFFFFEFCF) - v15 + ((2 * v14) & 0xFFFFDF9E) + 1448279808;
  *(_DWORD *)(v11 - 120) = v12 - v15 + 1215;
  *(_DWORD *)(v11 - 116) = v15 ^ 0x1DC82835;
  *(void *)(v11 - 128) = a8;
  *(void *)(v11 - 112) = a7;
  uint64_t v16 = ((uint64_t (*)(uint64_t))((char *)*(&off_10090D690 + v13) - 8))(v11 - 128);
  BOOL v17 = (int)(a6 + 1892794578) > 1892794579;
  if (a6 > 0xF2E3F2D) {
    BOOL v17 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8LL * ((457 * v17) ^ v12)))(v16);
}

void sub_100550DE8()
{
}

uint64_t sub_100550DF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  int v17 = 535753261
      * ((((v16 - 128) ^ 0x68A3C2CB) + 279095631 - 2 * (((v16 - 128) ^ 0x68A3C2CB) & 0x10A2A94F)) ^ 0x72F565AB);
  *(_DWORD *)(v16 - 120) = v15 - v17 - 151;
  *(_DWORD *)(v16 - 116) = v17
                         + ((a13 << 6) & 0xDBD6EF40)
                         + ((a13 << (((v15 - 86) | 0x41) + 48)) ^ 0x6DEB77BD)
                         - 682168320;
  *(void *)(v16 - 128) = a14;
  sub_1005419E4(v16 - 128);
}

uint64_t sub_100550ECC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 128) = &STACK[0x13AAEC8A5CF1D1A0];
  *(void *)(v17 - 120) = a14;
  *(_DWORD *)(v17 - 112) = v16 - 1759421093 * ((v17 - 128) ^ 0xB37DB054) - 1194;
  sub_100517570(v17 - 128);
  *(void *)(v17 - 128) = v15;
  *(void *)(v17 - 112) = a14;
  *(_DWORD *)(v17 - 104) = (v16 - 1140) ^ (1374699841
                                         * ((1825418699 - ((v17 - 128) | 0x6CCDADCB) + ((v17 - 128) | 0x93325234)) ^ 0xFEC64A3D));
  uint64_t v18 = ((uint64_t (*)(uint64_t))((char *)*(&off_10090D690 + v16 - 1422) - 12))(v17 - 128);
  return ((uint64_t (*)(uint64_t))(*(void *)(v14
                                                      + 8LL
                                                      * ((22
                                                        * (*(_DWORD *)(v17 - 120) - 1861828263 < ((3 * (v16 ^ 0x5AD)
                                                                                                 - 46612740) & 0x2C743FFu)
                                                                                               - 377835537)) ^ v16))
                                          - 4LL))(v18);
}

uint64_t sub_100550FF0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  if (a16 - 499656757 >= 0) {
    int v18 = a16 - 499656757;
  }
  else {
    int v18 = ~(a16 - 499656758);
  }
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v16
                                                               + 8LL
                                                               * ((v17 + 596) | (4
                                                                               * (((v17 + 42) ^ ((int)((v18 ^ 0xBFEC7F35) + ((v17 + 596) ^ 0x5DDBAA29) + ((2 * v18) & 0x7FD8FE6A) - 499656758) > (int)((v17 + 1557998370) & 0xA322D4DD ^ 0xFFFFFF2A))) & 1))))
                                                   - 4LL))( 777LL,  339LL);
}

uint64_t sub_1005510AC(int a1, int a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((((((a3 - 181) | a1) - 126) ^ a2) * (*(_DWORD *)(v7 + 4LL * a4) != a7)) ^ a3))
                            - 4LL))();
}

void sub_1005510DC()
{
}

uint64_t sub_1005510E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v21 = (v18 - 1034) | 0x4C2;
  int v22 = ((~((v20 - 128) | 0x24BBBEF0) + ((v20 - 128) & 0x24BBBEF0)) ^ 0xB6B05906) * v17;
  *(void *)(v20 - 120) = v19;
  *(_DWORD *)(v20 - 128) = v22 + v18 - 324;
  *(_DWORD *)(v20 - 124) = v16 + (v21 ^ 0xC5E39DD7) + v22;
  sub_10051734C(v20 - 128);
  *(void *)(v20 - 128) = a13;
  *(void *)(v20 - 112) = a14;
  *(_DWORD *)(v20 - 104) = (v21 - 1140) ^ (1374699841
                                         * ((2 * ((v20 - 128) & 0x2F83ECE8) - (v20 - 128) + 1350308629) ^ 0x3D880B1C));
  uint64_t v23 = v14(v20 - 128);
  return ((uint64_t (*)(uint64_t))(*(void *)(v15
                                                      + 8LL
                                                      * ((22
}

uint64_t sub_100551204()
{
  *(_DWORD *)(v6 - 104) = (v5 - 603) ^ (((1659477659 - ((v6 - 128) | 0x62E99E9B) + ((v6 - 128) | 0x9D166164)) ^ 0xF0E2796D)
                                      * v3);
  *(void *)(v6 - 112) = v4;
  *(void *)(v6 - 128) = v2;
  uint64_t v7 = v0(v6 - 128);
  return ((uint64_t (*)(uint64_t))(*(void *)(v1
                                                      + 8LL
                                                      * (int)(((*(_DWORD *)(v6 - 120) - 1861828263 >= (v5 - 1698320412))
                                                             * (((v5 + 509059454) & 0xE1A85FBF) - 1246)) ^ v5))
                                          - 12LL))(v7);
}

uint64_t sub_1005512C4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = v15;
  *(void *)(v17 - 112) = a13;
  *(_DWORD *)(v17 - 120) = (v16 - 784) ^ (460628867 * ((v17 - 128) ^ 0x4C96827D));
  uint64_t v18 = ((uint64_t (*)(uint64_t))((char *)*(&off_10090D690 + v16 - 861) - 8))(v17 - 128);
  return ((uint64_t (*)(uint64_t))(*(void *)(v14
                                                      + 8LL
                                                      * (((((v16 - 1832410075) & 0x6D385D3B) + 445) * (v13 == 1340507627)) ^ (v16 + 15)))
                                          - 12LL))(v18);
}

uint64_t sub_100551368( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 104) = (v16 - 921) ^ (((~((v19 - 128) | 0xB0449EB5) + ((v19 - 128) & 0xB0449EB5)) ^ 0x224F7943) * v17);
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 112) = a14;
  uint64_t v20 = v14(v19 - 128);
  return ((uint64_t (*)(uint64_t))(*(void *)(v15
                                                      + 8LL
                                                      * (((*(_DWORD *)(v19 - 120) < 0x6EF93EA8u)
                                                        * (((2 * v16) ^ 0xFF4) - 1453)) ^ v16))
                                          - 12LL))(v20);
}

uint64_t sub_1005513FC()
{
  uint64_t v3 = *(void *)(v5 + 16);
  *(_DWORD *)(v2 - 112) = v0
                        - 1759421093
                        * ((1781720329 - ((v2 - 128) | 0x6A32E509) + ((v2 - 128) | 0x95CD1AF6)) ^ 0x26B0AAA2)
                        - 363;
  *(void *)(v2 - 128) = v3;
  *(void *)(v2 - 120) = v1;
  return sub_100517570(v2 - 128);
}

void sub_1005514B8(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 3804331 * (a1 ^ 0xFA9EF356);
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(_DWORD *)(v2 - 0x13AAEC8A5CF1D15CLL);
  unsigned int v4 = (535753261 * ((((2 * &v4) | 0xA2C26CC2) - &v4 + 782158239) ^ 0xDB95384E)) ^ (v1 + 373);
  uint64_t v5 = v2;
  sub_100530690((uint64_t)&v4);
  __asm { BR              X9 }

uint64_t sub_1005515D0@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((38 * (((v3 ^ v2) & 0x1F ^ 0xB) == v1 - 1348)) ^ v1)) - 4LL))();
}

uint64_t sub_100551630@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * (int)((203
                                               * ((v2 & 0xB3FDABBC)
                                                + (v3 ^ (v1 + 648356245) & 0xD95ADF3E ^ 0x59FED3C6)
                                                - 1346371656
                                                + ((((v1 + 648356245) & 0xD95ADF3E) - 383683174) & 0x16DE87EF)
                                                - 163502393 < 0x7FFFFFFF)) ^ (v1 + 648356245) & 0xD95ADF3E))
                            - 4LL))();
}

uint64_t sub_1005516CC@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v5 - 0x13AAEC8A5CF1D158LL) + 4LL * (v1 + 2118890474 + v2)) = *(_DWORD *)(*(void *)(v5 - 0x13AAEC8A5CF1D158LL)
                                                                                                 + 4LL
                                                                                                 * (v3 + v2 + 1432));
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t))(*(void *)(a1
                                                                                + 8LL
                                                                                * ((896
                                                                                  * ((v3 + v2 + 1431) > 0x7FFFFFFE)) ^ v4))
                                                                    - 4LL))( v4 + 1212630619,  934852526LL,  4294966365LL,  2147483646LL);
}

void sub_100551748()
{
}

uint64_t sub_100551754@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * ((43
                                          * ((int)((v3 ^ 0x78CAFBFF) - 537395242 + (v2 & 0xF195F7FE) - 1489173462) > 115 * ((v1 + 135) ^ 0x5C2) - 1036)) ^ (v1 + 135)))
                            - ((v1 - 1296) | 0x101u)
                            + 297LL))();
}

uint64_t sub_100551800@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v10 = *(_DWORD *)(*(void *)(v9 - 0x13AAEC8A5CF1D158LL) + 4LL * (a1 + v7));
  *(_DWORD *)(*(void *)(v9 - 0x13AAEC8A5CF1D158LL) + 4LL * (v3 + v4)) = (((v10 ^ v5) >> (32 - v6)) | (v8 - 726) ^ (v5 - 307) ^ a2)
                                                                        + v5
                                                                        - ((2
                                                                          * (((v10 ^ v5) >> (32 - v6)) | (v8 - 726) ^ (v5 - 307) ^ a2)) & 0x97F0F6C);
  return ((uint64_t (*)(void))(*(void *)(a3 + 8LL * (int)((448 * ((a1 - 1 + v7) >> 31)) ^ v8)) - 12LL))();
}

uint64_t sub_1005518A0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8LL * ((1176 * (((((v3 - 337032691) & 0x1416B3F2) + 688) ^ 0x880A8DD2) + v1 < v2)) ^ v3)))();
}

uint64_t sub_1005518F4@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v4 - 0x13AAEC8A5CF1D158LL) + 4LL * (v1 + v2 + 1)) = -2067822666;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1
                                                     + 8LL
                                                     * ((317 * ((v1 + v2) > 0x7FFFFFFE)) ^ (v3 - 435))))( 4294966877LL,  2147483646LL);
}

void sub_100551958()
{
}

uint64_t sub_100551964@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(v5 - 0x13AAEC8A5CF1D158LL) + 4LL * (v4 + v2)) = a1;
  return (*(uint64_t (**)(void))(a2
                              + 8LL
                              * (int)(((2 * (((v3 ^ 0x97 ^ (v2 - 351)) + v4) >> 31)) | (8 * (((v3 ^ 0x97 ^ (v2 - 351)) + v4) >> 31))) ^ v3)))();
}

uint64_t sub_1005519B0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4LL * (v1 + v5 - 1)) = v2;
  return (*(uint64_t (**)(void))(a1
                              + 8LL * (int)((((v1 + v5 - 2) >> 31) * (((v4 - 275) | 0x180) ^ 0x1A8)) ^ v4)))();
}

void sub_1005519EC()
{
  BOOL v7 = *(_DWORD *)(*v4 + 4LL * (v0 + v2)) == v3;
  *char v6 = v1 + v1 * (v2 + v0 - v7) + (v0 - v7) * (((v5 + 624) | 0x40) - 1957522529) - 1166353976;
}

void sub_100551AA4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1755732067 * (((a1 | 0x8AD08517) - (a1 & 0x8AD08517)) ^ 0x541638CC);
  __asm { BR              X16 }

uint64_t sub_100551B98()
{
  int v4 = 53 * (v0 ^ 0x1EA);
  uint64_t v5 = v3 + 1687508982;
  int v6 = v1 + (v4 ^ 0x46CD2D86);
  int v7 = (v3 > (v4 ^ 0x1B6AAA4Eu)) ^ (v6 < -459974666);
  BOOL v8 = v6 < (int)v5;
  if (v7) {
    BOOL v8 = v3 > (v4 ^ 0x1B6AAA4Eu);
  }
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8LL
                                            * ((((((v4 - 102) ^ v8) & 1) << 6) & 0x7F | ((((v4 - 102) ^ v8) & 1) << 7)) ^ v4)))(v5);
}

uint64_t sub_100551CD4@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, void *a4@<X7>, int a5@<W8>)
{
  unsigned int v12 = ((v7 + 102) ^ 0x61F76D7E) + v10 + (v8 ^ 0x84BF87B6) + v11 * (*(_DWORD *)(*a4 + 4LL * a2) ^ v8);
  *(_DWORD *)(v5 + 4 * v9) = v12 + v8 - ((2 * v12) & 0x97F0F6C);
  BOOL v14 = a2 - 619242387 < a5 && a2 - 619242387 >= a3;
  return (*(uint64_t (**)(void))(v6 + 8LL * (v7 ^ (v14 * a1))))();
}

uint64_t sub_100551D88()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
}

uint64_t sub_100551DDC@<X0>(int a1@<W8>)
{
  BOOL v4 = v1 + 840055463 < (int)(v3 + a1 - 593 + 1339712029);
  if (v3 > 0x30259D23 != v1 + 840055463 < -807771428) {
    BOOL v4 = v3 > 0x30259D23;
  }
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((((a1 + 65) ^ v4) & 1)
                                          * (((a1 - 1373626145) & 0x51DFDD17) + 177)) ^ (a1 - 593)))
                            - 12LL))();
}

uint64_t sub_100551EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v16 = (v11 - 1186166127) & 0x46B377BF;
  uint64_t v17 = (v16 + v8) & v9;
  unint64_t v18 = v7 - 0x3313992C9E089282LL + v17 + (v6 ^ 0x84BF87B6) + 252;
  *(_DWORD *)(a4 + 4 * __chkstk_darwin(v3, v4) = v7
                           + 1643605374
                           + v17
                           + (v6 ^ 0x84BF87B6)
                           + 252
                           + v6
                           - ((2 * (v7 + 1643605374 + v17 + (v6 ^ 0x84BF87B6) + 252)) & 0x97F0F6C);
  BOOL v19 = ((v16 + v10) & v12 ^ HIDWORD(v18) ^ v13) + (v14 & (v18 >> 31)) + v15 == 0x3313992C9E0890C7LL;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((v19 | (8 * v19)) ^ v16)) - 8LL))();
}

uint64_t sub_100551FBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  int v13 = *a10 + 2108581034;
  int v14 = (v10 + 2108581034 < 460754143) ^ (v13 < 460754143);
  BOOL v15 = v10 + 2108581034 > v13;
  if (v14) {
    BOOL v15 = v10 + 2108581034 < 460754143;
  }
  return ((uint64_t (*)(void))(*(void *)(v11 + 8LL * ((1742 * v15) ^ v12)) - ((v12 + 760446228) & 0xD2AC85BF) + 1455LL))();
}

void sub_100552034()
{
  _DWORD *v1 = v0;
}

void sub_100552058(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x13AAEC8A5CF1D15CLL) == 499656757
    || *(_DWORD *)(*(void *)a1 - 0x13AAEC8A5CF1D15CLL) == 499656757;
  int v1 = *(_DWORD *)(a1 + 16) + 460628867 * ((a1 + 1711807950 - 2 * (a1 & 0x66081DCE)) ^ 0x2A9E9FB3);
  __asm { BR              X14 }

void sub_100552158()
{
  _DWORD *v0 = v1;
}

void sub_100552828(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~(_DWORD)a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BR              X10 }

uint64_t sub_1005528FC@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  unsigned int v12 = 1755732067 * ((490657451 - (&a4 | 0x1D3ED6AB) + (&a4 | 0xE2C12954)) ^ 0x3C07948F);
  a7 = &STACK[0x770D305875D185D];
  a8 = v12 ^ 0x60A5A212;
  a6 = (v10 - 717) ^ v12;
  a4 = &STACK[0x5BA13F8D95227257];
  a5 = v11;
  uint64_t v13 = ((uint64_t (*)(unint64_t **))(*(void *)(a1 + 8LL * (v10 ^ 0x32D)) - 8LL))(&a4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v9
                                                      + 8LL
                                                      * ((184
                                                        * (*(_DWORD *)(v11 - 0x2185BF99DEDD7434LL) == ((v10 + 342) ^ (v8 - 923)))) ^ v10))
                                          - 8LL))(v13);
}

uint64_t sub_1005529F0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return ((uint64_t (*)(void))(*(void *)(v12 + 8LL * (((a11 == v11) * (((v13 - 1051) | 0x400) ^ 0x685)) ^ v13))
                            - ((v13 - 1051) ^ 0x3C5u)
                            + 857LL))();
}

void sub_100552A40(_DWORD *a1@<X8>)
{
  BOOL v3 = *(_DWORD **)(v2 + 16);
  *(void *)(*(void *)(v2 + 24) - 0x57BFF69C8C42E147LL) = v1;
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v2 = *a1;
}

void sub_100552B0C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1755732067 * ((-1951871487 - (a1 | 0x8BA8CE01) + (a1 | 0x745731FE)) ^ 0xAA918C25));
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v4 = *(unint64_t **)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(v3 - 0x33A24D71401A86CLL);
  LODWORD(__chkstk_darwin(v7, v8) = v1
  uint64_t v12 = v2;
  uint64_t v13 = v3;
  uint64_t v10 = v6;
  uint64_t v11 = v5;
  uint64_t v9 = &STACK[0x13AAEC8A5CF1D180];
  ((void (*)(unint64_t **))*(&off_10090D690 + (v1 ^ 0x241)))(&v8);
  uint64_t v7 = *(unint64_t **)(v3 - 0x33A24D71401A874LL);
  LODWORD(__chkstk_darwin(v9, v10) = v1
  int v8 = &STACK[0x13AAEC8A5CF1D190];
  uint64_t v9 = v7;
  sub_100517570((uint64_t)&v8);
  int v8 = v4;
  HIDWORD(v9) = (1734042137 * ((&v8 & 0x50353EEC | ~(&v8 | 0x50353EEC)) ^ 0xF304025E)) ^ (v1 + 806);
  sub_100517730((uint64_t)&v8);
  __asm { BR              X8 }

uint64_t sub_100552D58( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  *(_DWORD *)(v19 - 144) = v17
                         + 1759421093
                         * ((((v19 - 144) | 0xC7E2DF16) - (v19 - 144) + ((v19 - 144) & 0x381D20E8)) ^ 0x749F6F42)
                         - 527;
  *(void *)(v19 - 128) = v13;
  *(void *)(v19 - 120) = v15;
  *(void *)(v19 - 112) = a12;
  *(void *)(v19 - 104) = v14;
  *(void *)(v19 - 136) = v13;
  uint64_t v20 = a11(v19 - 144);
  return ((uint64_t (*)(uint64_t))(*(void *)(v16
                                                      + 8LL
}

uint64_t sub_100552E00()
{
  *(void *)(v7 - 120) = v2;
  *(void *)(v7 - 112) = v4;
  *(void *)(v7 - 144) = v3;
  *(void *)(v7 - 136) = v2;
  *(_DWORD *)(v7 - 128) = v6 + 1225351577 * ((v7 - 144) ^ 0x239AD816) + 321;
  ((void (*)(uint64_t))((char *)*(&off_10090D690 + v6 - 1180) - 12))(v7 - 144);
  int v8 = 1755732067 * ((((v7 - 144) | 0xCE78F267) - ((v7 - 144) & 0xCE78F267)) ^ 0x10BE4FBC);
  *(_DWORD *)(v7 - 124) = -544568611 - v8 + v1;
  *(void *)(v7 - 136) = v0;
  *(_DWORD *)(v7 - 144) = (v6 - 498) ^ v8;
  uint64_t v9 = sub_10054F06C(v7 - 144);
  return ((uint64_t (*)(uint64_t))(*(void *)(v5
                                                      + 8LL
                                                      * (((*(_DWORD *)(v7 - 128) != -2123791517)
                                                        * ((v6 - 1351195280) & 0x5089977E ^ 0x29C)) ^ v6))
                                          - 4LL))(v9);
}

uint64_t sub_100552EF4()
{
}

uint64_t sub_100552F38()
{
  uint64_t v5 = *v9;
  int v6 = 2 * (v4 - 144);
  int v7 = 535753261 * (((v6 | 0x1CE0AA34) - (v4 - 144) - 242242842) ^ 0x4845B35);
  *(_DWORD *)(v4 - 144) = v7 + v3 + 227;
  *(_DWORD *)(v4 - 128) = v7 ^ 0x25B8EE99;
  *(void *)(v4 - 136) = v11;
  sub_10053FB04((_DWORD *)(v4 - 144));
  *(void *)(v4 - 136) = v0;
  *(void *)(v4 - 128) = v0;
  *(void *)(v4 - 120) = v2;
  *(void *)(v4 - 112) = v11;
  *(void *)(v4 - 104) = v1;
  *(_DWORD *)(v4 - 144) = v3 + 1759421093 * (((~(v4 - 144) & 0xE2DB43C) - (~(v4 - 144) | 0xE2DB43D)) ^ 0xBD500469) + 258;
  v10(v4 - 144);
  *(_DWORD *)(v4 - 128) = v3 - 1759421093 * (((v6 | 0x1D0B0EDE) - (v4 - 144) + 1903851665) ^ 0x3DF8373B) - 292;
  *(void *)(v4 - 144) = v5;
  *(void *)(v4 - 136) = v0;
  return sub_100517570(v4 - 144);
}

void sub_100553078(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 62153877;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BR              X8 }

uint64_t sub_10055311C()
{
  BOOL v3 = (*(uint64_t (**)(uint64_t))(v0 + 8LL * (v2 - 148)))(32LL) != 0;
}

uint64_t sub_100553184()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v1 != v0) * (v3 ^ 0x28A)) ^ v3)) - 12LL))();
}

uint64_t sub_1005531C8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v11 = v2 - 62153878;
  int v12 = v2 - 1;
  int v13 = *(unsigned __int8 *)(v6 + v11);
  if (v13 == 152) {
    __asm { BR              X11 }
  }

  if (v13 == 24)
  {
    int v14 = -2006430421;
    uint64_t v15 = *(void *)(v4 + 8);
    int v16 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(void *)uint64_t result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 44) {
      int v17 = 246750526;
    }
    else {
      int v17 = 246750527;
    }
    *(_DWORD *)(result + 16) = 137543419;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = -2006430421;
    *(void *)(v15 - 0x56C1C02D74538802LL) = a2;
  }

  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v8 + 8LL * (v9 ^ 0x42)))();
    int v14 = 2006390514;
  }

  *(_DWORD *)uint64_t v4 = v14;
  return result;
}

void sub_1005532AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2) {
    BOOL v4 = a4 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v6 = !v4 && a1 != 0;
  __asm { BR              X8 }

uint64_t sub_10055332C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = (1178560073 * (((&a13 | 0x4705D23) + (~&a13 | 0xFB8FA2DC)) ^ 0x36665D62)) ^ 0x650810FC;
  uint64_t v17 = sub_100556E04(&a13);
  return ((uint64_t (*)(uint64_t))(*(void *)(v16 + 8LL * ((1864 * (a14 == v14)) ^ v15)) - 12LL))(v17);
}

uint64_t sub_1005533B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x8C0F0A4F49AC02A];
  a15 = 718 - 460628867 * (((&a13 | 0x98AB1C2F) - (&a13 & 0x98AB1C2F)) ^ 0xD43D9E52);
  sub_100519248((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8LL * ((1600 * (a14 == -2006430421)) ^ 0x29Bu))
                                                                                       - 12LL))( v16,  v17,  v18,  v19,  v20,  v21);
}

uint64_t sub_100553448( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16)
{
  unsigned int v24 = 1734042137 * (((&a13 | 0xF54C8DC3) - (&a13 & 0xF54C8DC3)) ^ 0xA9824E8E);
  LODWORD(a14) = 1201 - v24;
  a15 = ((v20 ^ 0x7AFACFD5) - 1517308608 + ((2 * v20) & 0xF5F59FAA)) ^ v24;
  a13 = a10;
  ((void (*)(uint64_t *))(*(void *)(v22 + 760) - 4LL))(&a13);
  unsigned int v25 = 628203409 * ((-1875716877 - (&a13 | 0x9032D4F3) + (&a13 | 0x6FCD2B0C)) ^ 0xED45273F);
  a14 = v18;
  a15 = (v19 ^ 0xFFBF8ED7) + ((2 * v19) & 0xFF7F1DAE) + 1408629632 + v25;
  a16 = a10;
  LODWORD(a13) = 327 - v25;
  int v26 = *(void (**)(uint64_t *))(v22 + 1424);
  v26(&a13);
  unsigned int v27 = 628203409 * ((((2 * &a13) | 0x362FCC5E) - &a13 + 1692932561) ^ 0x199FEA1C);
  a14 = v16;
  LODWORD(a13) = 327 - v27;
  a15 = (v17 ^ 0xDBBFBEDF) + ((2 * v17) & 0xB77F7DBE) + 2012597112 + v27;
  a16 = a10;
  uint64_t v28 = ((uint64_t (*)(uint64_t *))v26)(&a13);
  return ((uint64_t (*)(uint64_t))(*(void *)(v23 + 8LL * ((1542 * (HIDWORD(a13) == v21)) ^ 0x2DAu)) - 12LL))(v28);
}

uint64_t sub_100553638( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unsigned int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v22 = 3804331 * (((&a13 | 0x172953CF) + (~&a13 | 0xE8D6AC30)) ^ 0xEDB7A098);
  a18 = (v20 + 2138962630) ^ v22;
  a16 = a10;
  a17 = &STACK[0x5BFD90C18C6562C2];
  a14 = -1582722126 - v22;
  a15 = v22 ^ 0xAEC324F7;
  uint64_t v23 = sub_100556BC0((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(void *)(v21 + 8LL * (((a13 == v19) * (v18 ^ 0x4B8)) ^ v20)) - 12LL))(v23);
}

uint64_t sub_1005536F0()
{
  int v14 = &STACK[0x3703560E774B8087];
  uint64_t v15 = v10;
  unsigned int v12 = (v6 - 51) ^ (1374699841
                   * ((((2 * &v12) | 0x78596D6C) - &v12 - 1009563318) ^ 0x51D8AEBF));
  (*(void (**)(unsigned int *))(v5 + 8LL * (v6 - 655)))(&v12);
  unsigned int v12 = v6
      + (((&v12 | 0xEE37027) - &v12 + (&v12 & 0xF11C8FD8)) ^ 0xF47D8371) * v1
      + 621;
  int v14 = v10;
  sub_1005171C4((uint64_t)&v12);
  if (v13 == v4 + v3 - 667) {
    unsigned int v7 = v11;
  }
  else {
    unsigned int v7 = v13;
  }
  int v14 = v10;
  unsigned int v13 = v6 + ((&v12 & 0x493F6C94 | ~(&v12 | 0x493F6C94)) ^ 0xBC349D44) * v2 - 161;
  v0(&v12);
  int v14 = v9;
  unsigned int v13 = v3 + (((~&v12 & 0xF5EFFFB2) - (~&v12 | 0xF5EFFFB3)) ^ 0xFF1BF19C) * v2 - 98;
  v0(&v12);
  return v7 ^ v4;
}

void sub_100553890(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x4908E0DB1B326768LL) - 1133295642;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 - 1878986540;
  BOOL v4 = v2 < 0x5176E96;
  BOOL v5 = v2 > v3;
  if (v3 < 0x5176E96 != v4) {
    BOOL v5 = v4;
  }
  __asm { BR              X9 }

uint64_t sub_10055397C(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 - 1218717361));
  BOOL v5 = ((v4 - ((2 * v4) & 0x164) + 1568615602) & 0x1F) == 13;
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * (((4 * ((v3 ^ v5) & 1)) & 0xF7 | (8
}

uint64_t sub_1005539D8()
{
  unsigned int v4 = v2 - 1518992995 + ((v3 + 123984552) ^ 0x763D840);
  BOOL v5 = v4 < 0xEE1A2B8B;
  BOOL v6 = v4 > v0 + 2030284233;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((993 * (((v3 - 88) ^ v6) & 1)) ^ v3)) - 8LL))();
}

uint64_t sub_100553A54(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v2
                                                              + 8LL
                                                              * (int)((1347
                                                                     * (*(unsigned __int8 *)(v1
                                                                                           + (v3 + v4 + 830)) >> 7)) ^ v5 & 0xF89C25C1))
                                                  - 4LL))( a1,  ((*(unsigned __int8 *)(v1 + (v3 + v4 + 830)) << ((((v5 & 0xC1) - 98) & 0xF7) + 42)) & 0x1FC)
}

uint64_t sub_100553AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
                                        * (a6 ^ (1607
                                               * (((((v7 + 2) & 0x7F ^ 0x3EBCBBFF) + 2 * ((v7 + 2) & 0x7F)) & 0x3EBCBFFC) == 1052556288))))
                            - ((a6 - 1637444826) & 0x61996F57 ^ 0x35DLL)))();
}

uint64_t sub_100553B48(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v8 = v6 + a4 - 2062911285;
  BOOL v9 = v8 < v7 + 208361508;
  BOOL v10 = v8 > v4 - 1756045897;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((!v10 * ((33 * (v7 ^ 0x377)) ^ 0x2E1)) ^ v7)) - 12LL))();
}

uint64_t sub_100553BCC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v9 = *(unsigned __int8 *)(v4 + (v6 + v7 + v8 - 291));
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v5 + 8LL * (v8 ^ (22 * (a4 == 1052556288)))) - 12LL))( a1,  ((v8 - 536) ^ 0xFFB3FD96 ^ v9) + 1736310392 + ((2 * v9) & 0x1B8));
}

uint64_t sub_100553C4C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v12 = *(unsigned __int8 *)(v8 + (a6 + v11 + 831));
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v9 + 8LL * ((39 * (v10 - 1 == a7)) ^ a8)) - 12LL))( a1,  (((v12 | (a2 << 8)) - 838751232) ^ 0xFFB7FF7D)
         + (a8 ^ 0x6779FC9D)
         + ((2 * ((v12 | (a2 << 8)) - 838751232)) & 0xFF6FFEFA));
}

uint64_t sub_100553CBC( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v13 = a2 + v10 + v11 + v12 - 2063588267 - 1053557246;
  unsigned int v14 = v8 - 1078950505;
  int v15 = (v14 < (a8 ^ 0x175u) + 885456922) ^ (v13 < 0x34C70359);
  BOOL v16 = v13 > v14;
  if (v15) {
    BOOL v16 = v13 < 0x34C70359;
  }
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((1317 * !v16) ^ ((a8 ^ 0x175) - 616))) - 8LL))();
}

uint64_t *sub_100553D50@<X0>(uint64_t *result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v8 = result[6];
  uint64_t v10 = *result;
  uint64_t v9 = result[1];
  *a3 = v5 - 720297638;
  *(_DWORD *)(v10 - 0x7424148229FD0586LL) = v4;
  *(_DWORD *)(v8 - 0x3B5CAFF718CFECABLL) = a2;
  *(void *)(v9 - 0x685C86573AC75C5FLL) = v3 + v7 - 207686210 + ((v6 + 1403384424) & 0xAC5A0FFF);
  *((_DWORD *)result + 8) = -2006430421;
  return result;
}

void sub_100553DE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1225351577 * (a1 ^ 0x239AD816);
  __asm { BR              X15 }

void sub_100553ECC()
{
  *(_DWORD *)(v2 + __chkstk_darwin(v0, v1) = v0;
}

void sub_100554D7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 1178560073 * ((2 * (a1 & 0xF0D1717) - a1 - 252516120) ^ 0xC2E4E8A8);
  __asm { BR              X9 }

uint64_t sub_100554E5C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, int a8)
{
  int v14 = (*(_DWORD *)(a1 + 16) ^ v12) + *(_DWORD *)(v8 - 0x2185BF99DEDD743CLL) - 1241294137;
  unsigned int v15 = 3804331 * ((((2 * &a5) | 0x1C5404B6) - &a5 + 1909849509) ^ 0x74B4F10D);
  a7 = v8;
  a8 = v15 + v13 + 1577;
  a6 = ((v13 + 165) ^ 0xF9C0557F) + v15 + v14;
  a5 = v15 + 1051294605;
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(a2 + 8LL * (v13 - 260)))(&a5);
  return (*(uint64_t (**)(uint64_t))(v11 + 8LL * ((902 * (*v10 == v9)) ^ v13)))(v16);
}

uint64_t sub_100554F34()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (((*(void *)(v0 + 8) != 0x52155BFDA38671FDLL) * (((v1 + 1083) ^ 0x4E0) - 160)) ^ v1)))();
}

uint64_t sub_100554F80@<X0>(int a1@<W8>)
{
  *(void *)(v1 - 0x52155BFDA38671FDLL) = (*v3 + a1) + *(void *)(v4 - 0x2185BF99DEDD744CLL) + 8LL;
  return (*(uint64_t (**)(void))(v7 + 8LL * ((688 * (*v6 == v5)) ^ v2)))();
}

void sub_100554FD8(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v3 - 0x2185BF99DEDD744CLL);
  unsigned int v6 = *v2 + a1;
  *(_BYTE *)(v5 + v6) = (HIBYTE(v1) ^ 0xB7) - ((2 * (HIBYTE(v1) ^ 0xB7)) & 0x30) - 104;
  *(_BYTE *)(v5 + v6 + 1) = (BYTE2(v1) ^ 0xDF) - ((2 * (BYTE2(v1) ^ 0xDF)) & 0x30) - 104;
  *(_BYTE *)(v5 + v6 + 2) = (BYTE1(v1) ^ 0xBE) - ((2 * (BYTE1(v1) ^ 0xBE)) & 0x30) - 104;
  *(_BYTE *)(v5 + v6 + 3) = v1 ^ 3;
  uint64_t v7 = *(void *)(v3 - 0x2185BF99DEDD744CLL);
  unsigned int v8 = v4 - ((2 * v4 + 1812379006) & 0xF7CC6302) + 837389376;
  unsigned int v9 = ((2 * (a1 + *v2 + 4)) & 0x7DFFAEBE) + ((a1 + *v2 + 4) ^ 0x3EFFD75F) - 1056954207;
  *(_BYTE *)(v7 + v9) = (HIBYTE(v8) ^ 0x7B) - ((2 * (HIBYTE(v8) ^ 0x7B)) & 0x30) - 104;
  *(_BYTE *)(v7 + v9 + 1) = (BYTE2(v8) ^ 0xE6) - ((v8 >> 15) & 0x30) - 104;
  *(_BYTE *)(v7 + v9 + 2) = (BYTE1(v8) ^ 0x31)
                          - 2
  *(_BYTE *)(v7 + v9 + 3) = (v4 - ((2 * v4 + 126) & 2) + 64) ^ 0x19;
  _DWORD *v2 = v10;
}

uint64_t sub_100555204(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x13AAEC8A5CF1D15CLL);
  int v4 = v2 - 499656757;
  BOOL v3 = v2 - 499656757 < 0;
  int v5 = 499656757 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 16) ^ (535753261 * (((a1 | 0x79825E86) - a1 + (a1 & 0x867DA179)) ^ 0x737650A9));
  return ((uint64_t (*)(void))(*(void *)((char *)*(&off_10090D690 + ((v1 + 222) ^ 0x35B))
                                        + 8
                                        * ((((v5 ^ 0xEDDFAFD7) + 304107560 + ((v5 << (v1 - 34)) & 0xDBBF5FAE) < 0x7FFFFFFF)
                                          * ((v1 + 222) ^ 0x320)) ^ (v1 + 222))
                                        - 12)
                            - 8LL))();
}

uint64_t sub_10055532C(uint64_t a1, int a2, int a3, int a4, uint64_t a5)
{
  return ((uint64_t (*)(void))(*(void *)(a5
                                        + 8LL
                                        * (((*(_DWORD *)(*v6 + 4LL * v7) != a3) * (((v5 ^ v8) + v9) & a2 ^ a4)) ^ v5 ^ v8))
                            - 8LL))();
}

void sub_100555368()
{
}

_DWORD *sub_100555370(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *uint64_t result = a6;
  return result;
}

void sub_100555378(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }

uint64_t sub_1005553BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8LL * ((405 * (**(_BYTE **)(a2 + 8) == 0)) ^ v3)))();
}

uint64_t sub_1005553E4()
{
  BOOL v2 = ((v1 - ((2 * v1 + 295437142) & 0x111EB754) + 559766869) ^ 0x54F0E445) != -866023269;
  return (*(uint64_t (**)(void))(v0 + 8LL * (((16 * v2) | (32 * v2)) ^ 0x394u)))();
}

uint64_t sub_100555480()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
}

uint64_t sub_1005554E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6
                                                                        + 8LL
                                                                        * (((((a4 ^ 0x12) + 1551960574) & 0x1399 ^ 0x213)
                                                                          * ((unint64_t)(v8 - a6 - 1167) < 0x20)) | a4 ^ 0x12u))
                                                            - 8LL))( a1,  a2,  v7);
}

uint64_t sub_10055552C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * (int)(((((v5 < 0x20) ^ (a4 + 3) ^ 0x6D) & 1)
                                               * ((a4 - 51040136) & 0xF32ECB9F ^ 0xF024004D)) ^ (a4 - 253)))
                            - 8LL))();
}

uint64_t sub_100555588(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v13 = v11 + v10 + v12;
  uint64_t v14 = v7 + v13;
  __int128 v15 = *(_OWORD *)(v14 - 31);
  uint64_t v16 = v8 + v13;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL * ((((v9 & 0xFFFFFFE0) == 32) * ((a6 - a3) ^ 0x3E5)) ^ (a6 + 266076208)))
                            - 12LL))();
}

void sub_1005555E8()
{
}

uint64_t sub_1005555F4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424LL) = v2 - 962278222 + ((v3 - 72523594) & 0xF4769BA9);
  *(void *)(*(void *)(a1 + 96) + 520LL) = *(void *)(a2 + 8) + 1LL;
  return 0LL;
}

uint64_t sub_100555754@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  *(_BYTE *)(v5 + (((a2 ^ 0x391) - 1638710738) & 0x61ACBFD5 ^ 0xE7E843C5) + a1) = *(_BYTE *)(v4
                                                                                           + (((a2 ^ 0x391) - 1638710738) & 0x61ACBFD5 ^ 0xE7E843C5)
                                                                                           + a1);
  return (*(uint64_t (**)(void))(v3 + 8LL * ((913 * (a1 - 1 != a3)) ^ a2 ^ 0x391)))();
}

void sub_1005557A8()
{
}

void sub_1005557B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BR              X9 }

uint64_t sub_100555840@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * ((651
                                * ((*(_DWORD *)(v2 - 0x2185BF99DEDD7438LL) & 1) != ((((a1 - 1571355443) & 0x5DA8FFFE)
                                                                                   - 932) ^ 0x308))) ^ a1)))();
}

uint64_t sub_100555898(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v2
                                                              + 8LL
                                                              * ((25
                                                                * (*(_DWORD *)(v3 - 0x2185BF99DEDD7440LL)
                                                                 + (v1 ^ 0xFC4B9DC7) == 0)) ^ v1))
                                                  - ((v1 - 1627) | 0x1A6)
                                                  + 491LL))( a1,  *(void *)(v3 - 0x2185BF99DEDD744CLL));
}

void sub_100555910(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v6 = (v2 + 1924070836) & 0x8D51031A;
  (*(void (**)(void, uint64_t, void))(v3 + 8LL * (v2 ^ 0x283)))( **(unsigned int **)(v3 + 8LL * (v2 - 531)),  a1,  *(_DWORD *)(v5 - 0x2185BF99DEDD7444LL) + (v6 ^ a2));
  unint64_t v7 = ((unint64_t)v8 ^ 0x7BFEDDFFBB27ED99LL)
     - 0x6024C00480016081LL
     + ((2LL * (void)v8) & 0xF7FDBBFF764FDB30LL);
  *(_BYTE *)(v5 - 0x2185BF99DEDD742DLL) = ((v7 - 24) ^ 0xBA) * (v7 - 7);
  __asm { BR              X15 }

void sub_100555AB4()
{
}

void sub_100555AC0()
{
}

void sub_100555AF4(uint64_t a1)
{
  int v1 = 1734042137 * ((-2 - ((a1 | 0xC7BA4821) + (~(_DWORD)a1 | 0x3845B7DE))) ^ 0x648B7493);
  __asm { BR              X9 }

uint64_t sub_100555BA0(uint64_t result)
{
  *(_DWORD *)(result + 8) = -2090093495;
  return result;
}

void sub_100555F34(uint64_t a1)
{
  int v1 = 1374699841 * (a1 ^ 0x6DF41809);
  int v2 = *(_DWORD *)a1 + v1;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 4) - v1;
  int v6 = 1029940069 * (*(_DWORD *)(a1 + 56) - v1) - 1711805123;
  unsigned int v7 = 1225351577 * ((&v8 & 0x7192D4E0 | ~(&v8 | 0x7192D4E0)) ^ 0xADF7F309);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v15 = v4;
  uint64_t v13 = v4;
  int v9 = v7 ^ (v2 + 368399414);
  int v10 = v5 - v7 + 255689239;
  int v12 = v7 ^ v6;
  uint64_t v11 = v3;
  sub_100557158((uint64_t)&v8);
  __asm { BR              X8 }

uint64_t sub_100556090( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, unsigned int a14, uint64_t a15, int a16)
{
  int v24 = *(unsigned __int8 *)(v16 + 24) + v23;
  unsigned int v25 = 1759421093 * ((&a11 - 2 * (&a11 & 0xCDA22E79) - 845009287) ^ 0x7EDF9E2D);
  a15 = v21;
  a14 = v20 - 1159586285 + v25;
  a16 = v22 - v25 - 686;
  a12 = &STACK[0x56C1C02D7453880A];
  a13 = ((v24 ^ 0x1A) + ((v24 << ((v22 + 64) ^ 0x74 ^ ((v22 - 60) | 0xE9))) & 0xF8 ^ 0xC8) + 48) ^ (-91
                                                                                                  * ((&a11 - 2 * (&a11 & 0x79) + 121) ^ 0x2D));
  uint64_t v26 = ((uint64_t (*)(int *))(*(void *)(v18 + 8LL * (v22 ^ 0x347)) - 12LL))(&a11);
  return ((uint64_t (*)(uint64_t))(*(void *)(v19 + 8LL * ((1460 * (a11 == v17)) ^ v22)) - 12LL))(v26);
}

uint64_t sub_100556190()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * (((((v2 - 1100) | 0x680) ^ 0x6DF) * ((v0 - 125842921) < 0xFFFFFFFE)) ^ v2)))();
}

uint64_t sub_1005561CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  a6 = a1;
  a7 = a3;
  a4 = (v10 - 1051) ^ (1374699841
                     * ((&a4 + 1577800182 - 2 * ((unint64_t)&a4 & 0x5E0B51F6)) ^ 0x33FF49FF));
  uint64_t v11 = (*(uint64_t (**)(int *))(v8 + 8LL * (v10 - 1655)))(&a4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v9 + 8LL * ((8 * (a5 == v7)) | (16 * (a5 == v7)) | v10))
                                          - (v10 ^ 0x58Cu)
                                          + 842LL))(v11);
}

void sub_10055625C(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 64) - 0x5BFD90C18C6562B2LL) = a1;
  *(_DWORD *)(v1 + 8) = -2006430421;
}

void sub_100556334(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }

uint64_t sub_100556398()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((39 * (v0 != 1731329620)) ^ 0x8Au)) - 12LL))();
}

uint64_t sub_1005563DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = v3 - (**(unsigned __int8 **)(a2 + 8) == (v4 + 118));
  unsigned int v6 = (v4 - 57672939) & 0xBC9FE76B;
  *(_DWORD *)(*(void *)(a1 + 96) + 800LL) = 1959788360;
  *(_DWORD *)(*(void *)(a1 + 96) + 804LL) = 499656757;
  *(void *)(*(void *)(a1 + 96) + 808LL) = *(void *)(a1 + 96) + 816LL;
  uint64_t v7 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v5);
  unsigned int v8 = 460628867 * (((&v10 | 0x4CBFC596) - (&v10 & 0x4CBFC596)) ^ 0x2947EB);
  uint64_t v12 = *(void *)(a1 + 96) + 0x13AAEC8A5CF1D480LL;
  uint64_t v10 = v7;
  unsigned int v13 = v8 + v5 - 777658899;
  int v11 = v8 + v4 + 766 - 211;
  ((void (*)(uint64_t *))(*(void *)(a3 + 8LL * ((v4 + 766) ^ 0x334u)) - 4LL))(&v10);
  return v6 - 1105902197 * v14 - 452090709;
}

void sub_100556534(uint64_t a1)
{
  int v2 = 1755732067 * ((~(_DWORD)a1 & 0x435CECC | a1 & 0xFBCA3133) ^ 0xDAF37317);
  int v3 = *(_DWORD *)(a1 + 24) + v2;
  unsigned int v4 = v3
  nullsub_36(&v4);
  __asm { BR              X17 }

uint64_t sub_1005566A4()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v3 ^ (30 * (((v0 + 1) & 0x7FFFFFFC) != v1)))) - 8LL))();
}

void sub_1005566CC()
{
}

uint64_t sub_1005566D8@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((682 * v5) ^ v4)) - 8LL))();
}

uint64_t sub_100556724()
{
  unsigned int v3 = v0 - ((2 * v0 + 832308056) & 0x9487E4C2) - 485362675;
  BOOL v4 = (((((v2 ^ 0x773) + 895336903) & 0x4AA23E3F) - 413140552) & (2 * v3) ^ ((((v2 ^ 0x773) - 2103733970) & 0x7D646EEF)
                                                                            - 2079859051))
     + (v3 ^ 0xB9EC0D86)
     + 2144625788 != 1938056291;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (v2 ^ 0x773 ^ ((8 * v4) | (16 * v4)))) - 4LL))();
}

uint64_t sub_1005567E8()
{
}

uint64_t sub_100556844(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_10055687C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8LL * (((((a4 - 1641392600) & 0x61D5A9EB) - 330) * (v4 < 0x20)) ^ a4)))();
}

uint64_t sub_1005568B8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v9 = v7 + v6 + a3;
  v10.i64[0] = 0xEBEBEBEBEBEBEBEBLL;
  v10.i64[1] = 0xEBEBEBEBEBEBEBEBLL;
  uint64_t v11 = v3 + v9;
  uint64_t v12 = a1 + v9;
  int8x16_t v13 = vaddq_s8(*(int8x16_t *)(v11 - 31), v10);
  *(int8x16_t *)(v12 - 15) = vaddq_s8(*(int8x16_t *)(v11 - 15), v10);
  *(int8x16_t *)(v12 - 31) = v13;
}

void sub_10055691C()
{
}

uint64_t sub_100556928()
{
  return (*(uint64_t (**)(void))(v3
                              + 8LL
}

uint64_t sub_10055697C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((((v0 & 0x18) == ((24 * (v1 ^ 0x15F)) ^ 0xD8)) * (42 * (v1 ^ 0x15E) + 1613)) ^ v1)))();
}

uint64_t sub_1005569C8(uint64_t a1)
{
  *(int8x8_t *)(a1 - 7 + (v3 + v2 - v5)) = vadd_s8( *(int8x8_t *)(v1 - 7 + (v3 + v2 - v5)),  (int8x8_t)0xEBEBEBEBEBEBEBEBLL);
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((54 * (((v6 + 19) ^ 0xE3) + v5 == (v4 & 0xFFFFFFF8))) ^ v6)) - 12LL))();
}

uint64_t sub_100556A24()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (((19 * (v2 ^ 0xB9) + ((v2 - 1364543244) & 0x51554770) - 1476) * (v0 == v1)) ^ v2))
                            - 8LL))();
}

uint64_t sub_100556A70@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(_BYTE *)(a1 + (v5 + v4)) = *(_BYTE *)(v3 + (v5 + v4)) - 21;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * (((v5 - 1 != a3) * ((a2 - 7) ^ 0x150)) ^ (a2 - 7))) - 8LL))();
}

uint64_t sub_100556AB4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(_BYTE *)(a1 + (v5 + v3)) = *(_BYTE *)(v2 + (v5 + v3)) - 21;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * (((v5 - 1 != a2) * v6) ^ v4)) - 8LL))();
}

uint64_t sub_100556AE4()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((*(void *)(v1 + 32) == 0x2064890B78DB05D7LL)
                                          * (((v0 - 1274) | 0x60) ^ 0x150)) ^ v0))
}

uint64_t sub_100556B2C(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(*(void *)v1 - 0x1C6D093801E6EF71LL) = result;
  *(_DWORD *)(v3 - 0x21738119BF0B617CLL) = v2;
  *(_DWORD *)(v1 + 48) = -2006430421;
  return result;
}

uint64_t sub_100556BC0(uint64_t a1)
{
  int v2 = 3804331 * ((-2 - ((a1 | 0x4D8BE6A2) + (~(_DWORD)a1 | 0xB274195D))) ^ 0x48EAEA0B);
  int v3 = *(_DWORD *)(a1 + 32) ^ v2;
  int v4 = *(_DWORD *)(a1 + 4) + v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  int v7 = -1642922731 * (*(_DWORD *)(a1 + 8) ^ v2) - 1021846338;
  unsigned int v8 = 1755732067 * ((2 * (v10 & 0x2FC35F18) - v10 - 801333019) ^ 0xEFA1D3E);
  v3 -= 2138963311;
  unsigned int v11 = 166634119 * v4 - ((333268238 * v4 + 879994578) & 0xC429D186) - v8 - 61948884;
  int v12 = v8 ^ (v3 + 425);
  v10[0] = v5;
  v10[1] = v6;
  int v13 = (v7 ^ 0x294DB3F7) - v8 + ((2 * v7) & 0x529B67EE) - 541069316;
  uint64_t result = ((uint64_t (*)(void *))((char *)*(&off_10090D690 + v3) - 8))(v10);
  *(_DWORD *)a1 = v14;
  return result;
}

uint64_t sub_100556D60(uint64_t result)
{
  unint64_t v1 = 1178560073 * ((result - 2 * (result & 0xAE9DDB9EFF8D7B05LL) - 0x51622461007284FBLL) ^ 0x9324D8DECD9B7B45LL);
  int v2 = *(_DWORD *)(result + 12) ^ v1;
  int v3 = *(_DWORD *)(result + 4) ^ v1;
  unint64_t v4 = *(void *)(result + 24) ^ v1;
  int v5 = *(_DWORD *)(result + 32) - v1;
  int v6 = *(_DWORD *)(result + 36) + v1;
  unint64_t v7 = *(void *)(result + 16) - v1;
  BOOL v8 = (uint64_t)v7 < (uint64_t)v4;
  BOOL v9 = v7 < v4;
  int v10 = v8;
  if ((v2 & 1) != 0) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v5;
  }
  else {
    int v11 = v3;
  }
  *(_DWORD *)(result + 8) = v11 ^ v6;
  return result;
}

uint64_t sub_100556DEC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0LL;
}

uint64_t sub_100556E04(_DWORD *a1)
{
  unsigned int v2 = *a1 ^ (1178560073 * (((a1 | 0x10B6B0E1) - (a1 & 0x10B6B0E1)) ^ 0x22A0B0A1));
  uint64_t result = ((uint64_t (*)(void, void))*(&off_10090D690 + (int)(v2 ^ 0x6508101C)))( *(&off_10090D690 + (int)(v2 - 1695027267)),  *(&off_10090D690 + (int)(v2 - 1695027294)));
  int v4 = *(_DWORD *)*(&off_10090D690 + (v2 & 0x1A11238D));
  if ((_DWORD)result) {
    int v4 = 2006390677;
  }
  a1[1] = v4;
  return result;
}

uint64_t sub_100556EC0(uint64_t result)
{
  unint64_t v1 = 535753261
     * ((-2LL - ((~result | 0xCE9083717906D1D1LL) + (result | 0x316F7C8E86F92E2ELL))) ^ 0x3B72DE1C73F2DFFELL);
  int v2 = *(_DWORD *)(result + 4) + v1;
  int v3 = *(_DWORD *)(result + 40) - v1;
  unint64_t v4 = *(void *)(result + 32) ^ v1;
  int v5 = *(_DWORD *)result ^ v1;
  unint64_t v6 = *(void *)(result + 16) + v1;
  int v7 = *(_DWORD *)(result + 44) ^ v1;
  BOOL v8 = v4 > v6;
  BOOL v9 = v4 == v6;
  if ((v5 & 1) != 0) {
    BOOL v10 = v8;
  }
  else {
    BOOL v10 = v9;
  }
  if (v10) {
    int v7 = v3;
  }
  *(_DWORD *)(result + 24) = v7 ^ v2;
  return result;
}

void sub_100556F64(_DWORD *a1)
{
  signed int v1 = (*a1 ^ (460628867 * ((((2 * (_DWORD)a1) | 0xFE17D808) - (_DWORD)a1 - 2131487748) ^ 0x339D6E79))) - 426522897;
  uint64_t v3 = *(void *)((char *)*(&off_10090D690 + v1) - 4);
  unsigned int v2 = v1 + 628203409 * ((&v2 & 0x83759BA4 | ~(&v2 | 0x83759BA4)) ^ 0xFE026868) + 1186;
  sub_10052BF7C((uint64_t)&v2);
}

_BYTE *sub_10055704C(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(__chkstk_darwin(v2, v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }

  unint64_t v4 = a3 - v3;
  unint64_t v6 = v4;
  unint64_t v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *uint64_t result = a2;
      break;
    default:
      uint64_t result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1005570DC + 4 * byte_100722907[(v5 >> 3) & 7]))();
      break;
  }

  return result;
}

uint64_t sub_100557140(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0LL;
}

uint64_t sub_100557158(uint64_t a1)
{
  int v2 = 1225351577 * ((a1 & 0x1891AAC5 | ~(a1 | 0x1891AAC5)) ^ 0xC4F48D2C);
  int v3 = *(_DWORD *)(a1 + 12);
  int v4 = *(_DWORD *)(a1 + 8) ^ v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 48);
  unsigned int v8 = 1224239923 * (((&v10 | 0xAFC9BDF5) - (&v10 & 0xAFC9BDF5)) ^ 0x5D7A4022);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = v6;
  uint64_t v12 = v5;
  int v11 = v2 + v3 - v8 - 1164906618;
  uint64_t v10 = v7;
  unsigned int v16 = v4 + v8 - 368399122;
  uint64_t result = ((uint64_t (*)(uint64_t *))((char *)*(&off_10090D690 + (v4 ^ 0x15F557B1)) - 12))(&v10);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

uint64_t sub_100557290(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 69;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0LL;
}

uint64_t sub_1005572B0(uint64_t result)
{
  unint64_t v1 = 1759421093
     * ((-2LL - ((~result | 0xA799CC8FED74AA68LL) + (result | 0x58663370128B5597LL))) ^ 0x89270DDF5E091A3CLL);
  int v2 = *(_DWORD *)(result + 32) ^ v1;
  int v3 = *(_DWORD *)(result + 36) + v1;
  unint64_t v4 = *(void *)(result + 8) + v1;
  int v5 = *(_DWORD *)(result + 40) ^ v1;
  int v6 = *(_DWORD *)(result + 16) - v1;
  unint64_t v7 = *(void *)(result + 24) ^ v1;
  BOOL v8 = v4 >= v7;
  BOOL v9 = v4 != v7;
  int v10 = v8;
  if ((v3 & 1) != 0) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v6;
  }
  else {
    int v11 = v2;
  }
  *(_DWORD *)(result + 44) = v5 ^ v11;
  return result;
}

void sub_100557358()
{
  unint64_t v0 = (unint64_t)&v1[qword_1009BDB28 - qword_1009BCF78];
  qword_1009BCF78 = (1045096823 * v0) ^ 0xFEEA6317167EC3D1LL;
  qword_1009BDB28 = 1045096823 * (v0 ^ 0xFEEA6317167EC3D1LL);
  unsigned int v2 = (1374699841
      * (((&v2 | 0x72AA6537) - &v2 + (&v2 & 0x8D559AC8)) ^ 0x1F5E7D3E)) ^ 0x198;
  unint64_t v4 = (char *)*(&off_10090D690
               + ((119 * ((119 * v0) ^ qword_1009BDB28)) ^ byte_10072D820[byte_100729E30[(119 * ((119 * v0) ^ qword_1009BDB28))] ^ 0x19])
               + 101)
     - 4;
  sub_10052DA2C(&v2);
  unsigned int v2 = (1374699841 * ((941312316 - (&v2 | 0x381B493C) + (&v2 | 0xC7E4B6C3)) ^ 0xAA10AECA)) ^ 0x198;
  unint64_t v4 = (char *)*(&off_10090D690
  sub_10052DA2C(&v2);
  char v3 = 73 * (((&v2 ^ 0x69 | 0x71) - (&v2 ^ 0x69 | 0x8E) - 114) ^ 0x58) + 11;
  unsigned int v2 = (1178560073
      * (((&v2 ^ 0xD78BD769 | 0xFC054C71) - (&v2 ^ 0xD78BD769 | 0x3FAB38E) + 66761614) ^ 0x19989B58)) ^ 0xD0;
  sub_10051936C((uint64_t)&v2);
}

void sub_10055759C()
{
  unint64_t v0 = qword_1009BDB98 ^ (unint64_t)&v1 ^ qword_1009BDB28;
  qword_1009BDB98 = 1045096823 * v0 + 0x1159CE8E9813C2FLL;
  qword_1009BDB28 = 1045096823 * (v0 ^ 0xFEEA6317167EC3D1LL);
  char v3 = (char *)*(&off_10090D690
               + ((119 * (qword_1009BDB98 ^ 0xD1 ^ qword_1009BDB28)) ^ byte_100729F30[byte_100725F50[(119 * (qword_1009BDB98 ^ 0xD1 ^ qword_1009BDB28))] ^ 0xCB])
               - 18)
     - 4;
  unsigned int v2 = (1374699841 * (((&v2 | 0xD1CBF6C8) - (&v2 & 0xD1CBF6C8)) ^ 0xBC3FEEC1)) ^ 0x198;
  sub_10052DA2C(&v2);
}

uint64_t sub_1005576C8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0LL;
}

uint64_t sub_1005576E0(uint64_t a1)
{
  int v2 = 460628867 * (a1 ^ 0x4C96827D);
  int v3 = *(_DWORD *)(a1 + 32) ^ v2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  int v8 = 1705026251 * (*(_DWORD *)(a1 + 48) + v2) + 1441390897;
  unsigned int v9 = 235795823 * (&v11 ^ 0x94AD4959);
  int v16 = v9 ^ (v3 + 2024874879);
  uint64_t v11 = v7;
  int v12 = v9 + (v8 ^ 0x2F7DFFFB) + ((2 * v8) & 0x5EFBFFF6) - 709361760;
  uint64_t v17 = v4;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t result = ((uint64_t (*)(uint64_t *))((char *)*(&off_10090D690 + (int)(v3 ^ 0x874EE31F)) - 8))(&v11);
  *(_DWORD *)(a1 + 16) = v15;
  return result;
}

uint64_t sub_100557810(uint64_t result)
{
  unint64_t v1 = 1374699841
     * (((result ^ 0x1C901A3C001822A1LL) & 0x1FB61EFE8E9BEAE7LL | (result ^ 0xE008E10020040010LL) & 0xE049E10171641518LL) ^ 0xF29465304DE83AB8LL);
  unint64_t v2 = *(void *)(result + 40) + v1;
  int v3 = *(_DWORD *)result ^ v1;
  int v4 = *(_DWORD *)(result + 8) - v1;
  int v5 = *(_DWORD *)(result + 32) - v1;
  unint64_t v6 = *(void *)(result + 24) - v1;
  int v7 = *(_DWORD *)(result + 4) + v1;
  BOOL v8 = v2 == v6;
  BOOL v9 = v2 > v6;
  int v10 = v8;
  if ((v4 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (!v9) {
    int v7 = v3;
  }
  *(_DWORD *)(result + 12) = v7 ^ v5;
  return result;
}

uint64_t sub_1005578C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 235795823 * (((a1 | 0xDA219BBE) - (a1 & 0xDA219BBE)) ^ 0x4E8CD2E7);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)a1;
  int v6 = v1
  v5[0] = v3;
  v5[1] = v2;
  return ((uint64_t (*)(void *))*(&off_10090D690 + (int)(v1 ^ 0x8FCD812A)))(v5);
}

uint64_t sub_1005579B8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0LL;
}

uint64_t sub_1005579D0(__SecKey *a1, const UInt8 *a2, CFIndex length, UInt8 **a4, unsigned int *a5)
{
  CFErrorRef error = 0LL;
  BOOL v8 = CFDataCreate(0LL, a2, length);
  BOOL v9 = SecKeyCreateSignature(a1, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, v8, &error);
  if (!v9)
  {
    uint64_t v14 = 4294925247LL;
    if (!v8) {
      return v14;
    }
    goto LABEL_8;
  }

  int v10 = v9;
  unsigned int v11 = CFDataGetLength(v9);
  int v12 = (UInt8 *)malloc(v11);
  if (v12)
  {
    uint64_t v13 = v12;
    v17.length = CFDataGetLength(v10);
    v17.location = 0LL;
    CFDataGetBytes(v10, v17, v13);
    uint64_t v14 = 0LL;
    *a4 = v13;
    *a5 = v11;
  }

  else
  {
    uint64_t v14 = 4294925268LL;
  }

  CFRelease(v10);
  if (v8) {
LABEL_8:
  }
    CFRelease(v8);
  return v14;
}

uint64_t sub_100557AB8()
{
  uint64_t v8 = 0LL;
  BOOL v9 = &v8;
  uint64_t v10 = 0x3052000000LL;
  unsigned int v11 = sub_100557C8C;
  int v12 = sub_100557C9C;
  uint64_t v13 = 0LL;
  unint64_t v0 = dispatch_semaphore_create(0LL);
  if (v0)
  {
    if (getenv("RunningTestSUInfoRefetch"))
    {
      v16[0] = @"IgnoreExistingCollection";
      v17[0] = +[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", 1LL);
      v17[1] = &__kCFBooleanTrue;
      v16[1] = @"scheduleCollectionForCurrentBuild";
      v16[2] = @"NetworkTimeoutInterval";
      v17[2] = &off_1009480D0;
      int v1 = (const __CFString **)v16;
      uint64_t v2 = (void **)v17;
      uint64_t v3 = 3LL;
    }

    else
    {
      uint64_t v14 = @"scheduleCollectionForCurrentBuild";
      int v15 = &__kCFBooleanTrue;
      int v1 = &v14;
      uint64_t v2 = &v15;
      uint64_t v3 = 1LL;
    }

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3254779904LL;
    uint64_t v7[2] = sub_100557CA8;
    v7[3] = &unk_10090DDA8;
    v7[4] = v0;
    v7[5] = &v8;
    MAEPerformCollectionWithCompletion( 0LL,  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v2,  v1,  v3),  v7);
    dispatch_time_t v5 = dispatch_time(0LL, 70000000000LL);
    uint64_t v4 = 4294924355LL;
    if (!dispatch_semaphore_wait(v0, v5))
    {
      if (v9[5]) {
        uint64_t v4 = 4294924355LL;
      }
      else {
        uint64_t v4 = 0LL;
      }
    }
  }

  else
  {
    uint64_t v4 = 4294925268LL;
  }

  dispatch_release(v0);
  _Block_object_dispose(&v8, 8);
  return v4;
}

void sub_100557C74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void sub_100557C8C(uint64_t a1, uint64_t a2)
{
}

void sub_100557C9C(uint64_t a1)
{
}

uint64_t sub_100557CA8(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100557CBC(uint64_t a1, uint64_t a2)
{
}

void sub_100557CF8(uint64_t a1)
{
}

void sub_100557D28(uint64_t a1)
{
  __asm { BR              X11 }

uint64_t sub_100557DCC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v10 = v9 + v6;
  if (a6) {
    BOOL v11 = v8 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  int v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7
                                                                                          + 8LL * ((177 * v12) ^ v10))
                                                                              - 12LL))( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_100557E20@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v10 = v9 + v6;
  if (a6) {
    BOOL v11 = v8 == 0;
  }
  else {
    BOOL v11 = 1;
  }
  int v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7
                                                                                          + 8LL * (v10 ^ (177 * v12)))
                                                                              - (v10 + 770)
                                                                              + 1820LL))( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_100557E68( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11
                                                                                + 8LL
                                                                                * ((26
                                                                                  * (a11 == (((v12 - 1826) | 0x380) ^ 0x387))) ^ v12)))( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_100557EB0()
{
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * (((v2 - 886) * v1) ^ v2))
                            - ((v2 + 14224799) | 0x6800A280u)
                            + 1759097757LL))();
}

void sub_100557EE8(uint64_t a1@<X8>)
{
  uint64_t v17 = 0x40AF9B25784C106DLL;
  int v9 = (char *)&v5 + 4;
  uint64_t v10 = 0LL;
  uint64_t v12 = a1;
  uint64_t v13 = 0LL;
  unsigned int v4 = 562267567 * ((2 * (&v7 & 0x10B87750) - &v7 - 280524627) ^ 0xFCDD74EE);
  uint64_t v7 = &v5;
  uint64_t v8 = v1;
  uint64_t v11 = &v6;
  unsigned int v15 = v4 ^ 0xC84ECD32;
  int v16 = (v2 + 764) ^ v4;
  sub_100558830((uint64_t)&v7);
  *(_DWORD *)(v3 + 2_Block_object_dispose(va, 8) = v14;
}

uint64_t sub_100558064(uint64_t a1)
{
  unint64_t v1 = 941074649
     * (((unint64_t)&v3 - 2 * ((unint64_t)&v3 & 0xBB02B8911101A284LL) - 0x44FD476EEEFE5D7CLL) ^ 0xBA845F7311C96DE0LL);
  unsigned int v4 = (char *)&loc_100686DCC + v1 - 4;
  uint64_t v5 = a1;
  int v6 = -804802556 - v1;
  sub_100686D0C((uint64_t)&v3);
  return v3;
}

void sub_100558118(uint64_t a1)
{
  unsigned int v1 = 755310587 * ((a1 + 704913948 - 2 * (a1 & 0x2A04221C)) ^ 0x6B0879D5);
  unsigned int v2 = *(_DWORD *)(a1 + 8) - v1;
  uint64_t v3 = *(void *)(a1 + 56);
  unsigned int v4 = *(const UInt8 **)(a1 + 16);
  CFIndex v5 = *(_DWORD *)(a1 + 48) ^ v1;
  uint64_t v7 = 0LL;
  unsigned int v8 = 0;
  uint64_t v6 = (uint64_t)*(&off_10090DDE0
                + (int)(v2 ^ (32
                            * (((v2 - 1) ^ (sub_1005579D0( (__SecKey *)(*(void *)(v3 - 0x57F7A3E501E5FAB3LL)
                                                                                        - 0xF869F1E666387A4LL),
                                                                             v4,
                                                                             v5,
                                                                             &v7,
                                                                             &v8) == 0)) & 1))));
  __asm { BR              X8 }

uint64_t sub_100558208( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
}

void sub_10055823C(void *a1)
{
  *(_DWORD *)(v1 + 24) = v2;
}

uint64_t sub_1005587BC(uint64_t result)
{
  unint64_t v1 = 516615401 * (result ^ 0x88BC887B73630632LL);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  int v3 = *(_DWORD *)(result + 24) ^ v1;
  int v4 = *(_DWORD *)result - v1;
  unint64_t v5 = *(void *)(result + 32) - v1;
  int v6 = *(_DWORD *)(result + 4) + v1;
  int v7 = *(_DWORD *)(result + 44) - v1;
  BOOL v8 = v5 == v2;
  BOOL v9 = v5 > v2;
  int v10 = v8;
  if ((v4 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v6;
  }
  else {
    int v11 = v3;
  }
  *(_DWORD *)(result + _Block_object_dispose(va, 8) = v11 ^ v7;
  return result;
}

void sub_100558830(uint64_t a1)
{
  int v1 = 562267567 * ((~(_DWORD)a1 & 0xCACA2F0 | a1 & 0xF3535D0F) ^ 0x1F365EB3);
  unsigned int v2 = ((*(_DWORD *)(a1 + 64) ^ v1) + 1104762746) & 0xBE26A32F;
  __asm { BR              X13 }

uint64_t sub_100558A78()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_100558AB0@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((a1 + 235) ^ (154 * (v1 < -167487494))))
                            - (a1 + 117)
                            - 7 * ((a1 + 235) ^ 0x159u)
                            + 525LL))();
}

uint64_t sub_100558AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8LL * (v6 ^ (719 * (v7 == v5))))
                                                                                       - (v6 - 163)
                                                                                       - ((119 * (v6 ^ 0xF4u)) ^ 0xFFFFFFFFFFFFF933LL)))( a1,  a2,  a3,  a4,  a5,  4294924373LL);
}

uint64_t sub_100558B3C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v6
                                                                                                  + 8LL * ((1791 * (((*(void *)STACK[0x630] == 0LL) ^ (a6 - 72)) & 1)) ^ a6))
                                                                                      - (a6 ^ 0x6D5u)
                                                                                      + 1654LL))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_100558B80@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((208 * (*(void *)(v1 + 48) != 0LL)) ^ ((a1 + 439) | 0x410)))
                            - ((((a1 + 439) | 0x410) - 402) | 0x122u)
                            + 1442LL))();
}

void sub_100558BC0(void *a1@<X0>, int a2@<W8>)
{
  unsigned int v3 = (a2 + 279674848) & 0xEF547FAF;
  free(a1);
  *(void *)(v2 + 4_Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(v2 + 56) = 448329679;
  __asm { BR              X10 }

uint64_t sub_100559D6C()
{
  *(_DWORD *)(v0 + 72) = 678136159;
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((681
                                * (((((v1 ^ 0x497) + 369) ^ (*(void *)(v0 + 120) == 0x57F7A3E501E5FAB3LL)) & 1) == 0)) ^ v1)))();
}

uint64_t sub_100559E84@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (a1 ^ (95 * (v3 == v1)))) - (v2 ^ ((a1 - 609) | 0x140u) ^ 0x57ALL)))();
}

uint64_t sub_100559EBC()
{
  *(void *)(v1 + 120) = 0x57F7A3E501E5FAB3LL;
  return (*(uint64_t (**)(void))(v2
                              + 8LL
}

void sub_10055AB8C(void *a1)
{
  *(void *)(v1 + 104) = 0LL;
  *(_DWORD *)(v1 + 112) = 1768032834;
  JUMPOUT(0x10055ABACLL);
}

void sub_10055ABE4()
{
  _DWORD *v0 = 1711260689;
  JUMPOUT(0x10055AC10LL);
}

uint64_t sub_10055AC1C()
{
  int v1 = STACK[0x9B4];
  STACK[0x748] = 0x657CD3A60B29129ALL;
  LODWORD(STACK[0xA5C]) = 1461276729;
  BOOL v2 = malloc(((v1 - 1282311541) & 0xFFFFFFF0 ^ 0x9CF8EEBF) + ((2 * (v1 - 1282311541)) & 0x39F1DD60) + 1661407569) == 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
}

uint64_t sub_10055ACB8()
{
  BOOL v2 = (uint64_t (*)(void))*(&off_10090DDE0
  return v2();
}

uint64_t sub_10055AD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(void))(*(void *)(a3 + 8LL * (((v4 != 1282311541) * (98 * (v3 ^ 0x100) - 1596)) | v3)) - 8LL))();
}

uint64_t sub_10055AD74@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(_BYTE *)(v4 + a2 + 234696783 + ((unint64_t)(v2 > 0xDFD304F) << swift_release(*(void *)(v0 + 32)) = *(_BYTE *)(STACK[0x618]
                                                                                          + a2
                                                                                          + 234696783
  BOOL v6 = (v5 + 183136455) > 0x5758F63D;
  return (*(uint64_t (**)(void))(a1 + 8LL * ((964 * !v6) ^ (34 * (v3 ^ 0x120) - 1177))))();
}

void sub_10055AE18()
{
}

uint64_t sub_10055AE20()
{
  STACK[0x7E0] = 0x657CD3A60B29129ALL;
  LODWORD(STACK[0x968]) = 1461276729;
  BOOL v3 = malloc( ((((v0 - 2066930280) & 0x7B32DDFF) + 802945528) ^ (v1 - 1282311541) & 0xFFFFFFF0)
       + ((v0 ^ 0x5FB7FDEE) & (2 * (v1 - 1282311541)))
       - 802947023) != 0LL;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((1978 * v3) ^ v0)) - 8LL))();
}

uint64_t sub_10055AEC8(unint64_t a1)
{
  LODWORD(STACK[0x658]) = v1;
  STACK[0x660] = a1;
  STACK[0x650] = v3;
  uint64_t v4 = (uint64_t (*)(unint64_t))((char *)*(&off_10090DDE0
                                                          + (((malloc(v3) != 0LL) * ((((v2 ^ 0x7C) + 491) | 0xC0) - 53)) ^ v2 ^ 0x7C))
                                                - 8);
  return v4(STACK[0x660]);
}

uint64_t sub_10055AF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

uint64_t sub_10055AF88@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  unint64_t v6 = a2 + 677762745 + ((unint64_t)(v2 > 0x2865D6B9) << 32);
  *(_BYTE *)(v4 + v6) = ((2 * *(_BYTE *)(STACK[0x618] + v6)) & 0xB8) + (*(_BYTE *)(STACK[0x618] + v6) ^ 0x5C);
  BOOL v7 = (v5 + 1320341879) > 0x9B2156ED;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((311 * !v7) ^ (v3 - 959))) - 12LL))();
}

void sub_10055B02C()
{
}

uint64_t sub_10055B034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                        + 8LL
                                                                                        * (((v5 == v7 - 2)
                                                                                          * ((v6 ^ 0x79D) + 667)) ^ (v6 - 1379))))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_10055B064@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8LL
                                                                                        * ((1233
                                                                                          * ((*(_DWORD *)(v6 + 96) & 2) != ((a6 - 1696739936) & 0x652237C2) - 1666)) ^ a6)))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_10055B0A8@<X0>(int a1@<W8>)
{
}

uint64_t sub_10055B0DC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8LL
                                                                                         * ((537
                                                                                           * (v6 == (unsigned __int16)((((a6 + 1251) ^ 0x2B9) - 9625) ^ ((a6 + 1251) | 0x80)))) ^ a6)))( a1,  a2,  a3,  a4,  a5,  4294924368LL);
}

uint64_t sub_10055B11C()
{
  STACK[0x980] = 0x657CD3A60B29129ALL;
  LODWORD(STACK[0x868]) = 1461276729;
  unsigned int v2 = malloc( ((v0 << (((v1 ^ 0x55) + 115) ^ 0x60)) & 0xEFFF6640)
       + (v0 & 0xFFFFFFF0 ^ 0x77FFB5A7 ^ (7 * (v1 ^ 0x455)))
       - 2013246229);
  STACK[0x660] = (unint64_t)v2;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((635 * (v2 != 0LL)) ^ v1)) - 4))();
}

uint64_t sub_10055B1C8()
{
  int v3 = *(uint64_t (**)(void))(v0 + 8LL * (((malloc(v1) == 0LL) * ((98 * (v2 ^ 0x170)) ^ 0x690)) | v2));
  return v3();
}

uint64_t sub_10055B208(uint64_t a1)
{
  STACK[0x650] = a1 + 0x3BF73A4905DA790BLL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((((((v2 ^ 0x98) - 505) | 0x94) ^ 0x39F) * (v1 != 0)) ^ v2 ^ 0x98))
                            - 4))();
}

uint64_t sub_10055B290@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  BOOL v10 = v8 > 0x53E4A1CB;
  unint64_t v11 = a3 + v4 + ((unint64_t)(v4 < v3) << 32);
  *(_BYTE *)(v9 + v11) = (*(_BYTE *)(a2 + v11) ^ 0x5E) + (((v6 + 11) & 0xFB ^ 0x44) & (2 * *(_BYTE *)(a2 + v11))) - 2;
  if (v10 == v4 - 2086203105 < v5) {
    BOOL v10 = v4 - 2086203105 < v7;
  }
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((504 * !v10) ^ v6)) - 4LL))();
}

uint64_t sub_10055B330@<X0>(uint64_t a1@<X8>)
{
  int v5 = v3 - 357;
  *(_BYTE *)(STACK[0x650]
           + ((unint64_t)(v2 < (v5 ^ (v1 + 108))) << 32)
           + a1
           + v2
           - 0x3BF73A4905DA790BLL) = -36;
  BOOL v6 = v2 - 1903885687 < v4 + 1056545929;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((46 * !v6) ^ v5)) - 12))();
}

uint64_t sub_10055B34C@<X0>(uint64_t a1@<X5>, unint64_t a2@<X6>, uint64_t a3@<X8>)
{
  int v4 = STACK[0x658];
  STACK[0x658] = a2;
  *(_BYTE *)(a2 + a3 + 357632335 - 0x3BF73A4905DA790BLL) = -36;
  BOOL v5 = (v4 - 981519104) < 0x255F1B0D || (v4 - 981519104) > 0x255F1B0E;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((202 * v5) ^ (v3 - 1322))) - ((v3 ^ 0x7DAu) + 214) + 550LL))();
}

uint64_t sub_10055B404@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  BOOL v11 = v4 < v5;
  *(_BYTE *)(v9 + (v10 ^ 0x22Fu) + v3 + a2 + ((unint64_t)((v10 ^ 0x22Fu) + v3 < v2) << swift_release(*(void *)(v0 + 32)) = 92;
  unsigned int v12 = v6 + v3 + 1;
  int v13 = v11 ^ (v12 < v5);
  BOOL v14 = v12 < v4;
  if (!v13) {
    BOOL v11 = v14;
  }
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((v11 * v8) ^ v7)) - 8LL))();
}

uint64_t sub_10055B468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(v6 + 64);
  int v12 = *(_DWORD *)(v6 + 72);
  int v13 = 1448877107 * ((2 * ((v10 - 192) & 0x6AB54B10) - (v10 - 192) + 357217515) ^ 0x6471A9C1);
  *(_DWORD *)(v10 - 12_Block_object_dispose(va, 8) = v9 - v13 + 118;
  *(_DWORD *)(v10 - 192) = ((v9 + 596) | 0x200) - v13 + v12 + ((v9 + 596) ^ 0x320D7AEA);
  *(_DWORD *)(v10 - 18_Block_object_dispose(va, 8) = v13 + 1598548771;
  *(_DWORD *)(v10 - 160) = v13 ^ 0x5D49146A;
  *(void *)(v10 - 152) = v6 + 0x54BD9D2603AA2709LL;
  *(void *)(v10 - 144) = v6 + 0x5A78D2218AD9E76LL;
  *(void *)(v10 - 120) = v6 + 0x59E3FCAF6574EC83LL;
  *(_DWORD *)(v10 - 112) = v13 + 41966287;
  *(void *)(v10 - 176) = v7;
  *(void *)(v10 - 16_Block_object_dispose(va, 8) = v11;
  *(void *)(v10 - 136) = v8;
  sub_100668C0C(v10 - 192);
  return (*(uint64_t (**)(void))(a6 + 8LL * ((90 * (*(_DWORD *)(v10 - 184) != 0)) ^ v9)))();
}

uint64_t sub_10055B58C()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)(v1 ^ 0x7F0)) - (v1 ^ 0x686LL)))();
}

uint64_t sub_10055B5A4()
{
  unint64_t v5 = STACK[0x660];
  bzero((void *)STACK[0x660], v1);
  unint64_t v6 = STACK[0x778];
  int v7 = STACK[0x680];
  int v8 = 176504963 * ((((v4 - 192) | 0x5EA181C6) - (v4 - 192) + ((v4 - 192) & 0xA15E7E38)) ^ 0xD40768D9);
  *(_DWORD *)(v4 - 160) = v2 - v8 - 230;
  *(void *)(v4 - 152) = STACK[0x658];
  *(void *)(v4 - 136) = v5;
  *(void *)(v4 - 176) = &unk_100736D14;
  *(void *)(v4 - 16_Block_object_dispose(va, 8) = v6;
  LOBYTE(STACK[0x16C4]) = -125 * ((((v4 + 64) | 0xC6) - (v4 + 64) + ((v4 + 64) & 0x38)) ^ 0xD9) + 66;
  *(_DWORD *)(v4 - 144) = v3 - v8 - 639381030;
  *(_DWORD *)(v4 - 12_Block_object_dispose(va, 8) = v8 + 1320091323;
  *(_DWORD *)(v4 - 18_Block_object_dispose(va, 8) = v8 + v3 + (~(v2 + 31 + 2 * v3 + 1077949069) | 0x35CC54FF) + 87682946;
  *(_DWORD *)(v4 - 184) = v7 - v8 - 471107164;
  sub_1005E4568(v4 - 192);
  return (*(uint64_t (**)(void))(v0 + 8LL * ((756 * (*(_DWORD *)(v4 - 192) == 0)) ^ v2)))();
}

uint64_t sub_10055B6D4()
{
  STACK[0xA38] = v3;
  LODWORD(STACK[0x8CC]) = v0 - 1062194574;
  free((void *)(STACK[0x778] - 0x657CD3A60B29129ALL));
  free(v1);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((833 * ((115 * (v2 ^ 0x139) - 161972722) & 0x9A782F8 ^ 0x262) + 129)
                                        * (v4 == 0)) ^ (115 * (v2 ^ 0x139))))
                            - 12))();
}

uint64_t sub_10055B710@<X0>(int a1@<W8>)
{
}

uint64_t sub_10055B790()
{
  unsigned int v3 = (v0 + 178230520) & 0xF5606A77;
  __int16 v4 = v2 + ((2 * v1) & 0xEB9C ^ 0x18) + ((((v0 - 27400) & 0x6A77) + 30123) ^ v1);
  LOWORD(STACK[0x906]) = v4 - 30155;
  unint64_t v5 = malloc((unsigned __int16)(v4 - 30514));
  STACK[0x9A8] = (unint64_t)v5;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)((120 * (v5 == 0LL)) ^ v3))
                            + -(unint64_t)((v3 - 85) | 0x405)
                            - ((v3 - 54) | 0x128)
                            + 2312))();
}

uint64_t sub_10055B83C(_BYTE *a1)
{
  *a1 = 1;
  a1[1] = (((v1 - 31) | 0x20) - 97 - (((v2 - 362) >> 7) & 0x26) + ((unsigned __int16)(v2 - 362) >> 8) + 74) ^ 0x13;
  a1[2] = (v2 - ((2 * v2 + 44) & 0x36) + 49) ^ 0x9B;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((115 * (LODWORD(STACK[0x9F4]) != 68355794)) ^ v1)) - 4LL))();
}

uint64_t sub_10055B8D8(_BYTE *a1)
{
  a1[3] = 4;
  __int16 v4 = ((v1 + 15617) ^ 0xD949) + LOWORD(STACK[0x9F4]) - 2 * ((LOWORD(STACK[0x9F4]) + 31022) & 0x5F35 ^ STACK[0x9F4] & 1);
  a1[4] = HIBYTE(v4) ^ 0xDF;
  a1[5] = v4 ^ 0x34;
  unint64_t v5 = (LODWORD(STACK[0x9F4]) | ((unint64_t)(LODWORD(STACK[0x9F4]) < v2) << 32)) + 726252888;
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * (int)(v1 ^ 0x2F5CC501 ^ (1890 * ((((v5 - v1) | (v1 - v5)) & 0x8000000000000000LL) == 0LL)))))();
}

uint64_t sub_10055B9BC()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((v0 ^ 0x7A9) - 441) ^ (556 * (v1 != v2))))
                            - ((v0 ^ 0x7A9u)
                             - 376)
                            - (((v0 ^ 0x7A9) - 642) | 0x122u)
                            + 2596LL))();
}

void sub_10055BA78()
{
}

uint64_t sub_10055BAF8()
{
  int v1 = malloc(0x10uLL);
  STACK[0x9A8] = (unint64_t)v1;
}

uint64_t sub_10055BB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * (int)((614 * (v6 != 0)) ^ v5))
                                                                                       - (v5 ^ 0x176LL)))( a1,  a2,  a3,  a4,  a5,  4294925268LL);
}

uint64_t sub_10055BBC0(int a1, int a2)
{
  __int16 v4 = (uint64_t (*)(void))(*(void *)(v3 + 8LL * (a2 ^ (1667 * (a1 == -9820))))
                         - ((a2 + 53012120) & 0xFCD71F92)
                         + 1654LL);
  LODWORD(STACK[0x650]) = v2;
  return v4();
}

uint64_t sub_10055BC08(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * ((925
                                          * ((unsigned __int16)(v3
                                                              - (((a3 - 473) ^ 0xFBD2) & (2 * (v4 - 6778)))
                                                              + ((v4 - 6778) ^ ((a3 - 1650) | 0x10F) ^ 0x815D)
                                                              + 28638) < 0xFFFDu)) ^ (a3 - 264)))
                            - 8LL))();
}

uint64_t sub_10055BC88(int a1)
{
  uint64_t v7 = ((unsigned __int16)(v5 - 8936) ^ 0xFFF7FFEF) + ((v3 + 992) & (2 * (v5 + 56600))) + 820394683;
  unint64_t v8 = (v7 | ((unint64_t)(v7 < 0x30DE3AA9) << 32)) + v2 + STACK[0x608] + 0x4807B2AF5E102500LL;
  unsigned int v9 = (((*(unsigned __int8 *)v8 - ((2 * *(unsigned __int8 *)v8) & 0xA8)) << 8) - 11264) ^ 0xFFFFD400;
  LODWORD(__chkstk_darwin(v7, v8) = (v9 - ((2 * v9) & 0xFFFFAA00) + 21945) ^ 0x55B9 | (30975 - *(unsigned __int8 *)(v8 + 1)) ^ 0x78FF;
  return (*(uint64_t (**)(void))(v6
                              + 8LL
                              * ((1939
                                * ((v1 | ((v1 < 0xFDDu) << 16)) - 142223786 >= ((2
                                                                                                * (((_DWORD)v8
                                                                                                  - ((2 * (_DWORD)v8) & 0xFFFFB360)
                                                                                                  - 9808) ^ v4)) & 0x34FA)
}

uint64_t sub_10055BDB4(int a1, uint64_t a2, __int16 a3)
{
  int v6 = a1 ^ 0x118;
  int v7 = v6 + 1659;
  unint64_t v8 = (char *)(STACK[0x608] + v4 + ((v6 + 1659 + v3) ^ (238 * v6)));
  uint64_t v9 = (__int16)(a3 - 9804);
  int v10 = v7 - 149;
  BOOL v11 = *v8 >= (char)((v7 ^ 0x2A) + 90);
  return (*(uint64_t (**)(uint64_t))(v5 + 8LL * ((2 * v11) | (16 * v11) | v10)))(v9);
}

uint64_t sub_10055BE1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
}

uint64_t sub_10055BE54(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  STACK[0x658] = a2 + 3;
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * (((a1 < (__int16)(((a5 - 1664) | 0x55) ^ 0xD9F3))
                                          * (((a5 - 488) | 0x21) ^ 0x451)) ^ (a5 - 274)))
                            - 12LL))();
}

uint64_t sub_10055BEA4(int a1, uint64_t a2, int a3)
{
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(v4 + 8LL * (a3 ^ (350 * (a1 == -9836)))) - (((a3 - 185) | 0x280u) ^ 0x686LL));
  LODWORD(STACK[0x650]) = v3;
  return v5();
}

uint64_t sub_10055BEE4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8LL
}

uint64_t sub_10055BF34(int a1)
{
}

uint64_t sub_10055BF74(uint64_t a1, uint64_t a2)
{
  STACK[0x648] = a2 + 3;
  return sub_10055BC08(a1, a2, (int)a1 + 1579);
}

void sub_10055BF84()
{
}

uint64_t sub_10055BFC4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(_BYTE *)(a1 + (a2 - 1810100425)) = 1;
  int v6 = (_BYTE *)(((a2 - 260725330) | ((unint64_t)((a2 - 260725330) < 0x5C599676) << 32))
               + a1
               - 1549375094);
  *int v6 = 0;
  v6[1] = (v3 - ((((v2 - 35) ^ 0xCD) + 2 * v3) & (5 * (v2 ^ 0xD7) - 87)) - 110) ^ 0x39;
  return (*(uint64_t (**)(void))(v5 + 8LL * (v2 ^ (835 * (v3 > v4)))))();
}

uint64_t sub_10055C094(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8LL
                                                              * (int)((1979
                                                                     * ((v1 ^ 0xFFFFFFFFDF44CCA6LL) + v2 < (unint64_t)(v1 - 734) - 281)) ^ v1)))( a1,  0x5A3700CAC178BD5LL,  0x845760FC234DD6BLL);
}

uint64_t sub_10055C138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * ((90
}

uint64_t sub_10055C1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL
}

uint64_t sub_10055C1D8(uint64_t a1, int a2)
{
  v6.i64[0] = 0xC8C8C8C8C8C8C8C8LL;
  v6.i64[1] = 0xC8C8C8C8C8C8C8C8LL;
  int8x16_t *v2 = vaddq_s8(*v4, v6);
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
}

uint64_t sub_10055C228()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((962 * ((((v0 - 907) ^ 0x58B ^ (v2 == v1)) & 1) == 0)) ^ v0)) - 4LL))();
}

uint64_t sub_10055C260(_BYTE *a1)
{
  unint64_t v6 = (v4 | ((unint64_t)(v4 < (v3 ^ 0x495) + v2) << 32)) + v5 + 0x12182CD2E75B1EB2LL;
  *a1 = *(_BYTE *)(v6 - 0x12182CD30258084CLL);
  a1[1] = *(_BYTE *)(v6 - 0x12182CD30258084BLL);
  a1[2] = *(_BYTE *)(v6 - 0x12182CD30258084ALL);
  a1[3] = *(_BYTE *)(v6 - 0x12182CD302580849LL);
  a1[4] = *(_BYTE *)(v6 - 0x12182CD302580848LL);
  a1[5] = *(_BYTE *)(v6 + (v3 ^ 0xEDE7D32CFDA7F25ELL));
  a1[6] = *(_BYTE *)(v6 - 0x12182CD302580846LL);
  a1[7] = *(_BYTE *)(v6 - 0x12182CD302580845LL);
  a1[8] = *(_BYTE *)(v6 - 0x12182CD302580844LL);
  a1[9] = *(_BYTE *)(v6 - 0x12182CD302580843LL);
  a1[10] = *(_BYTE *)(v6 - 0x12182CD302580842LL);
  a1[11] = *(_BYTE *)(v6 - 0x12182CD302580841LL);
  a1[12] = *(_BYTE *)(v6 - 0x12182CD302580840LL);
  a1[13] = *(_BYTE *)(v6 - 0x12182CD30258083FLL);
  a1[14] = *(_BYTE *)(v6 - 0x12182CD30258083ELL);
  a1[15] = *(_BYTE *)(v6 - 0x12182CD30258083DLL);
  LOWORD(STACK[0x906]) = 375;
  uint64_t v7 = malloc((*(_DWORD *)(v1 + 56) - 448329679));
  STACK[0x770] = (unint64_t)v7;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)((931 * (v7 != 0LL)) ^ v3)) - 8))();
}

uint64_t sub_10055C380()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((((*(unsigned int *)(v0 + 56) | ((unint64_t)(*(unsigned int *)(v0 + 56) < 0x1AB8F7CFuLL) << 32)) == 448329679)
                                          * (49 * (v1 ^ 0x16A) - 442)) ^ v1))
                            - 8LL))();
}

uint64_t sub_10055C410@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  LOWORD(STACK[0x73E]) = ((v6 + 2097) ^ 0x977F) + 28566 + (((v6 + 2097) << (((2 * a6) ^ 0x76) - 113)) & 0x2EFE);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v8
                                                                                                  + 8LL * ((614 * (v7 != 0)) ^ (2 * a6) ^ 0xC76))
                                                                                      - ((2 * a6) ^ 0xD00LL)))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_10055C518@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v5 = v2 - 1462;
  *(_BYTE *)(v4 + a2 + 234696783 - 0x3BF73A4905DA790BLL) = -36;
  unsigned int v6 = v3 - 1921731385 + ((v2 - 1130) | 0x400);
  BOOL v7 = v6 > 0x2A6DA98F;
  if (v6 < 0x2A6DA98E) {
    BOOL v7 = 1;
  }
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((v7 * (v5 ^ 0xD4)) ^ v5)) - 8LL))();
}

uint64_t sub_10055C5D0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(_BYTE *)(v8 + v3 + ((8 * v6) ^ 0x78u) - 1559 + a2 + ((unint64_t)(v3 + ((8 * v6) ^ 0x78u) - 1559 < v2) << swift_release(*(void *)(v0 + 32)) = 92;
  unsigned int v9 = v5 + v3 + 1;
  int v10 = (v7 < v4) ^ (v9 < v4);
  BOOL v11 = v9 < v7;
  if (v10) {
    BOOL v11 = v7 < v4;
  }
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((8 * v11) | (16 * v11)) ^ v6)) - 8LL))();
}

uint64_t sub_10055C640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = STACK[0x668];
  uint64_t v8 = *(void *)(STACK[0x668] + 64);
  int v9 = *(_DWORD *)(STACK[0x668] + 72);
  int v10 = 1448877107 * (((v6 - 192) & 0x8D583415 | ~((v6 - 192) | 0x8D583415)) ^ 0x39CD6C0);
  *(_DWORD *)(v6 - 160) = v10 ^ 0x5D49146A;
  *(_DWORD *)(v6 - 112) = v10 + 41966287;
  *(void *)(v6 - 144) = v7 + 0x5A78D2218AD9E76LL;
  *(void *)(v6 - 136) = a5;
  *(void *)(v6 - 152) = v7 + 0x54BD9D2603AA2709LL;
  *(_DWORD *)(v6 - 192) = 839746794 - v10 + ((v5 - 1046439741) & 0x3E5F63FD) + v9 - 729;
  *(_DWORD *)(v6 - 18_Block_object_dispose(va, 8) = v10 + 1598548771;
  *(_DWORD *)(v6 - 12_Block_object_dispose(va, 8) = v5 - v10 - 884;
  *(void *)(v6 - 120) = v7 + 0x59E3FCAF6574EC83LL;
  *(void *)(v6 - 176) = a4;
  *(void *)(v6 - 16_Block_object_dispose(va, 8) = v8;
  sub_100668C0C(v6 - 192);
  return ((uint64_t (*)(void))(*(void *)(a3
                                        + 8LL * (((*(_DWORD *)(v6 - 184) == 0) * (((v5 - 1558) | 0x680) ^ 0x6B8)) ^ v5))
                            - 4LL))();
}

uint64_t sub_10055C780()
{
  unint64_t v7 = STACK[0x748];
  int v8 = 176504963 * ((2 * ((v6 - 192) & 0x61636310) - (v6 - 192) + 513580264) ^ 0x943A75F7);
  int v9 = LODWORD(STACK[0xA5C]) - v8 - 471107164;
  *(_DWORD *)(v6 - 18_Block_object_dispose(va, 8) = v8 + v3 - (((v5 + 937) ^ 0xCA33AD82) & (2 * v3 - 972152158)) - 937367841;
  *(_DWORD *)(v6 - 184) = v9;
  *(void *)(v6 - 152) = v4;
  LOBYTE(STACK[0x16C4]) = -125 * ((2 * ((v6 + 64) & 0x10) - (v6 + 64) - 24) ^ 0xF7) + 66;
  *(_DWORD *)(v6 - 12_Block_object_dispose(va, 8) = v8 + 1320091323;
  *(void *)(v6 - 176) = &unk_100736D14;
  *(void *)(v6 - 16_Block_object_dispose(va, 8) = v7;
  *(_DWORD *)(v6 - 160) = v5 - v8 - 645;
  *(void *)(v6 - 136) = v1;
  *(_DWORD *)(v6 - 144) = v3 - v8 - 1664431816;
  sub_1005E4568(v6 - 192);
  return (*(uint64_t (**)(void))(v0 + 8LL * (((*(_DWORD *)(v6 - 192) == 0) | (2 * (*(_DWORD *)(v6 - 192) == 0))) ^ v5)))();
}

uint64_t sub_10055C898()
{
  STACK[0xA38] = v0;
  LODWORD(STACK[0x8CC]) = v3 + (v1 ^ 0x83972F52);
  free((void *)(STACK[0x748] - 0x657CD3A60B29129ALL));
  free(v2);
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((929 * (v4 == ((v5 - 24346761) & 0x1737BCF) - 457)) ^ (v5 - 1157))))();
}

uint64_t sub_10055CFE4()
{
  int v1 = malloc(0x10uLL);
  STACK[0xA48] = (unint64_t)v1;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((v1 != 0LL) * ((v0 + 1371) ^ 0x721)) ^ v0)))();
}

uint64_t sub_10055D040(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((103
                                          * (a1
                                           - (v1 ^ 0xBD218A5A)
                                           - STACK[0xA38]
                                           - (LODWORD(STACK[0x8CC]) + 1507809170)
                                           - ((unint64_t)((LODWORD(STACK[0x8CC]) + 1507809170) < 0x7A6F7021) << 32)
                                           + 0x13790FD9FLL > 0xF)) ^ v1))
                            - ((v1 + 12199643) & 0x745D3C9 ^ 0x1C5LL)))();
}

uint64_t sub_10055D118@<X0>(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  int8x16_t v5 = *(int8x16_t *)(v2 + ((2 * (v4 ^ 0x288u)) ^ (unint64_t)(a2 + 1028)) + v3);
  v6.i64[0] = 0xB9B9B9B9B9B9B9B9LL;
  v6.i64[1] = 0xB9B9B9B9B9B9B9B9LL;
  int8x16_t v7 = veorq_s8(v5, v6);
  v8.i64[0] = 0x7272727272727272LL;
  v8.i64[1] = 0x7272727272727272LL;
  int8x16_t v9 = vandq_s8(vaddq_s8(v5, v5), v8);
  v8.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v8.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  *a1 = vaddq_s8(vaddq_s8(v7, v8), v9);
  return sub_10055D238();
}

uint64_t sub_10055D16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(v5 + a1 - 0x631F69ED56FBD83ALL) = (*(_BYTE *)(v2 + (((_DWORD)v3 + 1733677685) & 0xDB88A68E) + a2 + v4) ^ 0xB9)
                                             + ((2 * *(_BYTE *)(v2 + (((_DWORD)v3 + 1733677685) & 0xDB88A68E) + a2 + v4)) & 0x72)
                                             + 127;
  return (*(uint64_t (**)(void))(v7
                              + 8LL
                              * (int)((681
                                     * (((v6 + 1 - (v3 | ((unint64_t)(v3 - 1060431777) << 32))) | ((v3 | ((unint64_t)(v3 - 1060431777) << 32)) - (v6 + 1))) >> 63)) ^ (v3 + 1121875019))))();
}

uint64_t sub_10055D238()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL * (((STACK[0xA38] == 0) * (v0 - 1004 + 245 * (v0 ^ 0x681) - 1197)) ^ (v0 - 1060))))();
}

uint64_t sub_10055D274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((((v6 - 366637800) & 0x15DA75EF ^ 0x169) * (a6 == 0)) ^ v6)) - 12LL))();
}

uint64_t sub_10055D2BC@<X0>(void *a1@<X0>, int a2@<W5>, int a3@<W8>)
{
  unsigned int v3 = (a3 + 1076136297) & 0xBFDB76DF;
  free(a1);
  STACK[0xA38] = 0LL;
  LODWORD(STACK[0x8CC]) = 546314367;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
}

void sub_10055D340()
{
}

uint64_t sub_10055D420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = v6 ^ 0x4CD;
  free(v8);
  STACK[0xA38] = 0LL;
  LODWORD(STACK[0x8CC]) = v7;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((476 * (a6 == ((v10 + 133241776) & 0xF80EE7E7 ^ (v10 + 920)))) ^ v10))
                            - 8))();
}

uint64_t sub_10055D44C()
{
  uint64_t v1 = malloc(0x10uLL);
  STACK[0x740] = (unint64_t)v1;
}

uint64_t sub_10055D48C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8LL
                              * (v2 ^ (422
                                     * (a1
                                      - ((v1 + 182231395)
                                       + v3
}

void sub_10055D548(int8x16_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X8>)
{
  int8x16_t v6 = *(int8x16_t *)(a2 + ((v4 - 1397674787) & 0x534ED6F6 ^ a3) + v3);
  v7.i64[0] = 0x404040404040404LL;
  v7.i64[1] = 0x404040404040404LL;
  v8.i64[0] = 0x202020202020202LL;
  v8.i64[1] = 0x202020202020202LL;
  *a1 = vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v7)), v8);
  LODWORD(STACK[0x8AC]) = v5 + 16;
  JUMPOUT(0x10055D424LL);
}

uint64_t sub_10055D698()
{
  return ((uint64_t (*)(unint64_t, unint64_t))(*(void *)(v0
                                                                                 + 8LL
                                                                                 * ((981
                                                                                   * (((v1 - 241) ^ 0x35B5C233LL) == 901104314)) ^ v1))
                                                                     - 4LL))( STACK[0x798],  STACK[0x648] + 1);
}

void sub_10055D710()
{
}

void sub_10055D720(void *a1)
{
  *(_DWORD *)(v2 + 56) = v1;
}

uint64_t sub_10055D72C(void *a1)
{
  unsigned int v3 = (v1 >> 4) ^ 0xE | v1 ^ 0xFFFFFFE8;
  int v4 = v3 - ((v3 << ((v2 - 120) ^ 0x83)) & 0x5E) + 47;
  int v5 = ((v4 & 0xFC) >> 2) ^ 0xB | v4 ^ 0x2F;
  int v6 = -42022 * ((((v5 & 1 | ((v5 & 2) != 0)) ^ 0xDD) + 24) ^ 0x79F0FB49) + 2064240104;
  free(a1);
  STACK[0x798] = 0LL;
  LODWORD(STACK[0x880]) = 708975256;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1036 * (v6 == 0)) ^ v2)) - 8))();
}

uint64_t sub_10055D7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                        + 8LL
                                                                                        * (((*(_DWORD *)(v5 + 4) == v7 - 2)
                                                                                          * ((v6 ^ 0x79D) + 667)) ^ (v6 - 1379))))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_10055D818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8LL
                                                                                         * (int)(((((((v5 ^ 0x22C) + 1495) ^ (v6 == 0)) & 1) == 0)
                                                                                                * (((v5 ^ 0x22C)
                                                                                                  + 103622476) & 0xF9D2DDEF ^ 0xFB)) ^ v5 ^ 0x22C)))( a1,  a2,  a3,  a4,  a5,  4294925268LL);
}

uint64_t sub_10055D878()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((201 * (v0 == v1 + v2 - 55)) ^ v2)) - (v2 ^ 0x148u) + 275))();
}

uint64_t sub_10055D8B4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  if (STACK[0x618]) {
    BOOL v7 = STACK[0x658] == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8LL
                                                                                         * (((a6 ^ 0x79D ^ (a6 + 203))
                                                                                           * v8) ^ a6)))( a1,  a2,  a3,  a4,  a5,  4294925273LL);
}

uint64_t sub_10055D8EC@<X0>(int a1@<W8>)
{
  int v3 = a1 - 261;
  int v4 = 308 * (v3 ^ 0x18);
  STACK[0x950] = (unint64_t)&STACK[0xBE8];
  STACK[0xA88] = (unint64_t)&STACK[0xBA4];
  int v5 = (_BYTE *)STACK[0x658];
  LOBYTE(STACK[0xB80]) = *(_BYTE *)STACK[0x658];
  LOBYTE(STACK[0xB81]) = v5[1];
  LOBYTE(STACK[0xB82]) = v5[2];
  LOBYTE(STACK[0xB83]) = v5[3];
  LOBYTE(STACK[0xB84]) = v5[4];
  LOBYTE(STACK[0xB85]) = v5[5];
  LOBYTE(STACK[0xB86]) = v5[6];
  LOBYTE(STACK[0xB87]) = v5[7];
  LOBYTE(STACK[0xB88]) = v5[8];
  LOBYTE(STACK[0xB89]) = v5[9];
  LOBYTE(STACK[0xB8A]) = v5[10];
  LOBYTE(STACK[0xB8B]) = v5[11];
  LOBYTE(STACK[0xB8C]) = v5[12];
  LOBYTE(STACK[0xB8D]) = v5[13];
  LOBYTE(STACK[0xB8E]) = v5[14];
  LOBYTE(STACK[0xB8F]) = v5[15];
  LODWORD(STACK[0xC48]) = 781741397;
  STACK[0xC28] = 0xE8E125912DC2764BLL;
  STACK[0xC30] = 0xC5C1D9754D4951FDLL;
  STACK[0xC38] = 0x3A3E268AB2B6AE02LL;
  LODWORD(STACK[0xC40]) = -371289332;
  LODWORD(STACK[0xC44]) = 2028013733;
  LODWORD(__chkstk_darwin(v4, v5) = (v1 ^ 0xEE7E8DF5) + 1576007552 + ((v4 - 587392638) & (2 * v1));
  STACK[0x8E8] = *(void *)(v2 + 8LL * v3) - 4LL;
  unint64_t v6 = STACK[0x618];
  STACK[0x618] = STACK[0x618];
  STACK[0xA68] = (unint64_t)&STACK[0xBE8];
  LODWORD(STACK[0x8E4]) = (_DWORD)v5;
  STACK[0x970] = v6;
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((208
                                          * ((_DWORD)v5
                                           + 1028141499
                                           + ((LODWORD(STACK[0xC2C]) << ((v4 + 75) & 0xCE ^ 0x83)) & 0x6A ^ (((v4 + 1642128791) & 0x9E1F1EF9) - 1751))
                                           + (STACK[0xC2C] & 0x3F ^ 0xFEFB7DA4)
                                           + 2001586907 < 0xFFFFFFC0)) ^ v4))
                            - 8LL))();
}

uint64_t sub_10055DA40()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (((((v2 - 1313) | 0x4C8) - 246) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_10055DA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8
                                                               + 8LL
                                                               * (int)((((708 * ((a5 - 936) ^ 0x123)) ^ 0x7F7)
                                                                      * ((v5 >> 3) & 1)) ^ (a5 - 936)))
                                                   - 12LL))( a1,  v6 + v7);
}

uint64_t sub_10055DAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(int8x8_t *)(v5 + __chkstk_darwin(v6, v7) = vadd_s8(*(int8x8_t *)(v9 + v7), (int8x8_t)0xC8C8C8C8C8C8C8C8LL);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t))(*(void *)(v10
                                                                                 + 8LL
                                                                                 * ((666
                                                                                   * (((((a5 - 1127)
                                                                                       - 281LL
                                                                                       - (v6 & 0xFFFFFFFFFFFFFFF8LL)
                                                                                       + v7) | ((v6 & 0xFFFFFFFFFFFFFFF8LL)
                                                                                              - v7
                                                                                              - (a5 - 1127)
                                                                                              + 281)) & 0x8000000000000000LL) == 0LL)) ^ a5))
                                                                     - 8LL))( a1,  (v6 & 0xFFFFFFFFFFFFFFF8LL) + v8,  281LL - (a5 - 1127));
}

void sub_10055DB30()
{
}

uint64_t sub_10055DB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((((v7 ^ 0x5DC) + 269) * (v6 == a6)) ^ v7)) - 12LL))();
}

uint64_t sub_10055DB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
}

uint64_t sub_10055DBC4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(_BYTE *)(a1 + (((v2 - 889) | 4) ^ 0x941C0E48) + a2) = 2;
  int v6 = (_BYTE *)(((a2 - 136342551) | ((unint64_t)((a2 - 136342551) < 0x63C384B1) << 32))
               + a1
               - 1673757873);
  *int v6 = BYTE1(v4) ^ 2;
  v6[1] = v4 ^ 0x2C;
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * (v2 ^ (510
                                               * ((v4 ^ v3 ^ 0xDDFFFFF3FDFDFDF7LL)
                                                + 0x2200000C60A0218ALL
                                                + ((2LL * (v4 ^ v3)) & 0x1FBFBFBEELL) == 1587421057))))
                            - 4LL))();
}

uint64_t sub_10055DCEC@<X0>(uint64_t a1@<X8>)
{
  BOOL v9 = v3 < v1;
  *(_BYTE *)(v5 + a1 - 0x6F6E60911E2522A6LL) = *(_BYTE *)(((v2 - 1193) | 0x134u) + v4 + v7 - 0x2FECD2E6A52ACB92LL) ^ 2;
  if (v9 == v6 - 0x3C01E9432D4CCC57LL < v1) {
    BOOL v9 = v6 - 0x3C01E9432D4CCC57LL < v3;
  }
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((510 * !v9) ^ v2)) - 4LL))();
}

uint64_t sub_10055DD90()
{
  LOWORD(STACK[0x73E]) = 1816;
}

uint64_t sub_10055DDDC()
{
  LOWORD(STACK[0x73E]) = ((LOWORD(STACK[0xA84]) + 4363) ^ 0xD79D)
                       + 12158
                       + ((v0 - 21061) & (2 * (LOWORD(STACK[0xA84]) + 4363)));
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((398 * (v1 != v2)) ^ (v0 + 270))) - 4LL))();
}

uint64_t sub_10055DE48()
{
  LOWORD(STACK[0x73E]) = v2
                       + v0
                       - 481
                       + ((*(_WORD *)(STACK[0x668] + 56) + 2097) ^ 0xD6F3)
                       + ((2 * (*(_WORD *)(STACK[0x668] + 56) + 2097)) & 0xADE6)
                       + 10340;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((((v0 - 481) ^ 0x539) * (v3 != v1)) ^ (v0 - 481))) - 4LL))();
}

uint64_t sub_10055DEB0()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((398 * (v1 != v2)) ^ v0)) - 4LL))();
}

uint64_t sub_10055DEEC@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((a1 ^ 0x539) * (v2 != v1)) ^ a1)) - 4LL))();
}

uint64_t sub_10055DF1C@<X0>(int a1@<W8>)
{
  unint64_t v3 = STACK[0x668];
  LOWORD(STACK[0x73E]) = v1
                       + ((*(_WORD *)(STACK[0x668] + 56) + 2097) ^ 0x76FE)
                       + (((*(_WORD *)(STACK[0x668] + 56) + 2097) << (((a1 ^ 7) + 17) ^ 0xBD)) & 0xEDFC)
                       - 30459;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((100 * (*(void *)(v3 + 136) != 0LL)) ^ a1)) - 4LL))();
}

uint64_t sub_10055DF84()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((*(_DWORD *)(v1 + 144) != 150298638) * (v0 ^ 0x5FA)) ^ v0)))();
}

uint64_t sub_10055DFB8@<X0>(__int16 a1@<W8>)
{
  int v3 = (v1 - 1330) | 0x21;
  __int16 v4 = v2 + ((2 * (a1 - 24590)) & 0xF3FC) + ((a1 - 24590) ^ v3 ^ 0x7955) - 31227;
  LOWORD(STACK[0x73E]) = v4;
  uint64_t v5 = malloc((unsigned __int16)(v4 - 1813));
  STACK[0x770] = (unint64_t)v5;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((v5 != 0LL) * (((v3 ^ 0x54C) - 508) ^ 2)) ^ v3)))();
}

uint64_t sub_10055E038(_BYTE *a1)
{
  *a1 = 1;
  a1[1] = (((unsigned __int16)(v2 - 1816) >> 8)
  a1[2] = (v2 - 2 * ((v2 + 8) & 0xB ^ v2 & 3) - 16) ^ 8;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((1978 * (LODWORD(STACK[0x9F4]) != v3)) ^ v1)) - 8LL))();
}

uint64_t sub_10055E0BC@<X0>(_BYTE *a1@<X0>, int a2@<W8>)
{
  a1[3] = 4;
  int v3 = LOWORD(STACK[0xA84]) - (((LOWORD(STACK[0xA84]) << (((a2 - 107) ^ 1) & 0x7D)) + 534) & 0x1F1E) + 8346;
  a1[4] = BYTE1(v3) ^ 0xF;
  a1[5] = v3 ^ 0x8F;
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((226
}

uint64_t sub_10055E18C()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL * (((((v0 | 0x682) - 1307) ^ 0x65F) * (v1 != v2)) ^ ((v0 | 0x682) - 671)))
                            - (((v0 | 0x682u) - 671) ^ 0x3EBLL)))();
}

uint64_t sub_10055E288@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(_BYTE *)(a1 + (a2 - 1209526082)) = 1;
  unint64_t v4 = STACK[0x668];
  __int16 v5 = *(_WORD *)(STACK[0x668] + 56)
     - ((2 * *(_WORD *)(STACK[0x668] + 56) + 4194) & (((v2 + 1305) | 2) + 15774))
     - 21951;
  uint64_t v6 = (_BYTE *)(((a2 - 1122171600) | ((unint64_t)((a2 - 1122171600) < 0x534EC71) << 32))
               + a1
               - 87354481);
  *uint64_t v6 = HIBYTE(v5) ^ 0xA2;
  v6[1] = v5 ^ 0x10;
  BOOL v7 = (*(unsigned int *)(v4 + 56) | ((unint64_t)(*(unsigned int *)(v4 + 56) < 0x1AB8F7CFuLL) << 32)) == 448329679;
  return (*(uint64_t (**)(void))(v3 + 8LL * ((v7 | (16 * v7)) ^ v2)))();
}

uint64_t sub_10055E3AC()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (((((v0 - 1631) | 0x5C4) + ((v0 - 386753731) & 0x170D5FF2) - 1759) * (v2 != v1)) ^ (v0 - 1075)))
                            - 8LL))();
}

uint64_t sub_10055E504@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(_BYTE *)(a1 + (a2 - 1209526082)) = 2;
  unint64_t v4 = STACK[0x668];
  __int16 v5 = *(_WORD *)(STACK[0x668] + 56) - ((2 * *(_WORD *)(STACK[0x668] + 56) + 4194) & 0x794E) + 17624;
  uint64_t v6 = (_BYTE *)(((a2 - 134145554) | ((unint64_t)((a2 - 134145554) < 0x4019012F) << 32))
               + ((2 * (v2 ^ 0x2F3)) ^ 0x315B80111FB7A5E3LL)
               + a1
               - 0x315B80115FD0A490LL);
  *uint64_t v6 = HIBYTE(v5) ^ 0x3C;
  v6[1] = v5 ^ 0xA7;
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((802
                                * ((*(unsigned int *)(v4 + 56) | ((unint64_t)(*(unsigned int *)(v4 + 56) < 0x1AB8F7CFuLL) << 32)) == 448329679)) ^ v2)))();
}

uint64_t sub_10055E634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v7
                                                                                                  + 8LL * ((1598 * (*(void *)(v5 + 136) != 0LL)) ^ (v6 - 1075)))
                                                                                      - ((v6 - 804358035) & 0x2FF181BB ^ 0xA3LL)))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_10055E728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8LL
                                                                                        * ((79
                                                                                          * (((*(_DWORD *)(v5 + 144) == 150298638) ^ (v6 + 60)) & 1)) ^ v6)))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_10055E774@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v7 = a2 + 90590467 + v4;
  *(_BYTE *)(a1 + v7 - 1748447736 + v3 + 1340) = 5;
  __int16 v8 = *(_WORD *)(v2 + 144) - ((2 * *(_WORD *)(v2 + 144) + 16356) & 0x2E60) - 18654;
  BOOL v9 = (_BYTE *)(((v7 - 125525280) | ((unint64_t)((v7 - 125525280) < 0x60BBCEF0) << 32))
               + a1
               - 1622920944);
  *BOOL v9 = HIBYTE(v8) ^ 0x17;
  v9[1] = v8 ^ 0x30;
  return (*(uint64_t (**)(void))(v6
                              + 8LL
                              * ((22
                                * ((*(unsigned int *)(v2 + 144) | ((unint64_t)(*(_DWORD *)(v2 + 144) < v5) << 32)) != 150298638)) ^ v3)))();
}

uint64_t sub_10055E8A4@<X0>(unint64_t a1@<X8>)
{
  BOOL v11 = v1 < a1;
  *(_BYTE *)(v4 + (v3 ^ 0xA6C45F6F4BC74DDALL) + __chkstk_darwin(v7, v8) = *(_BYTE *)(v7 + v5 - 0x6BCE7EBA2137C3FELL) - 53;
  if (v11 == v9 - 0x4583B8494AABB54ELL < a1) {
    BOOL v11 = v9 - 0x4583B8494AABB54ELL < v1;
  }
  return (*(uint64_t (**)(void))(v10 + 8LL * ((v11 * v6) ^ v2)))();
}

uint64_t sub_10055E938(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_BYTE *)(v6 + v4 - 0x55E63EBFEA0FE26ELL) = *(_BYTE *)(a2 + v8 - 0x5A3700CAC178BD5LL) - 56;
  return (*(uint64_t (**)(void))(v9 + 8LL * ((479 * (v7 == v5 + 0x845760FA179ACC3LL)) ^ a4)))();
}

void sub_10055E9A8()
{
}

void sub_10055E9BC()
{
}

uint64_t sub_10055EA6C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v10 = v7 < v5;
  uint64_t v11 = (v3 + 1);
  *(_BYTE *)(v9 + v11 + a2 + ((unint64_t)(v11 < v2) << swift_release(*(void *)(v0 + 32)) = 92;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((((v4 + 95) ^ v10) & 1) * v8) ^ v4)) - 12LL))();
}

uint64_t sub_10055EAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 64);
  int v8 = *(_DWORD *)(v2 + 72);
  *(void *)(v6 - 120) = v2 + 0x59E3FCAF6574EC83LL;
  int v9 = 1448877107 * ((((v6 - 192) | 0xC561C967) + (~(v6 - 192) | 0x3A9E3698)) ^ 0xB45AD44C);
  *(_DWORD *)(v6 - 160) = v9 ^ 0x5D49146A;
  *(_DWORD *)(v6 - 12_Block_object_dispose(va, 8) = v3 - v9 - 847;
  *(void *)(v6 - 136) = v5;
  *(_DWORD *)(v6 - 192) = v8 - v9 + 839746794;
  *(_DWORD *)(v6 - 18_Block_object_dispose(va, 8) = v9 + 1598548771;
  *(void *)(v6 - 176) = v4;
  *(void *)(v6 - 16_Block_object_dispose(va, 8) = v7;
  *(void *)(v6 - 152) = v2 + 0x54BD9D2603AA2709LL;
  *(void *)(v6 - 144) = v2 + 0x5A78D2218AD9E76LL;
  *(_DWORD *)(v6 - 112) = v9 + 41966287;
  sub_100668C0C(v6 - 192);
}

void sub_10055EBFC()
{
  *(_DWORD *)(v2 + 56) = v0;
}

void sub_10055EECC(void *a1)
{
  int v3 = v1 ^ v2 ^ 0x57 | ((v2 & 0xF0) >> 4) ^ 0xA;
  unsigned int v4 = (((v3 - ((2 * v3) & 0x26) - 109) & 0xFCu) >> 2) ^ 0x24 | (v3 - ((2 * v3) & 0x26) - 109) ^ 0xFFFFFF93;
  int v5 = v4 & 1 | (((~(2 * v4) + v4) & 2) == 0);
  unsigned int v6 = -42022 * ((v5 | (2 * v5)) ^ 0xFFFEDEFD) + 1185885582;
  free(a1);
  *(_DWORD *)(v7 + 56) = v6;
}

uint64_t sub_10055EF4C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
}

uint64_t sub_10055EFB0(int a1, uint64_t a2, unsigned int a3)
{
  v18.val[1].i64[0] = ((_BYTE)v5 - 1) & 0xF;
  v18.val[1].i64[1] = v5 & 0xF;
  v18.val[2].i64[0] = ((_BYTE)v5 + 1) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)v5 + 2) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v5 + 3) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)v5 + 4) & 0xF;
  v19.val[0].i64[0] = ((_BYTE)v5 + 5) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v5 + 6) & 0xF;
  v19.val[1].i64[0] = (v5 + 7) & 0xF;
  v19.val[1].i64[1] = (v5 + 8) & 0xF;
  v19.val[2].i64[0] = (v5 + 9) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v5 + 10) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v5 + 11) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v5 + 12) & 0xF;
  unsigned int v13 = v5 + v4;
  v14.i64[0] = 0xE3E3E3E3E3E3E3E3LL;
  v14.i64[1] = 0xE3E3E3E3E3E3E3E3LL;
  v15.i64[0] = 0x3030303030303030LL;
  v15.i64[1] = 0x3030303030303030LL;
  v18.val[0].i64[0] = ((_BYTE)v5 + (_BYTE)v4) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v5 + 14) & 0xF;
  v16.i64[0] = vqtbl4q_s8(v18, (int8x16_t)xmmword_10071E3B0).u64[0];
  v16.i64[1] = vqtbl4q_s8(v19, (int8x16_t)xmmword_10071E3B0).u64[0];
  *(int8x16_t *)(v11 + (v3 + v6)) = veorq_s8( veorq_s8( veorq_s8( veorq_s8( veorq_s8( *(int8x16_t *)(v7 + v13),  *(int8x16_t *)(v8 + (v13 & 0xF))),  *(int8x16_t *)(a3 + 806 + (unint64_t)(v13 & 0xF)
                                                                       + v9
                                                                       - 1211)),
                                                        *(int8x16_t *)((v13 & 0xF) + v10 + 2)),
                                                      v15),
                                                    vmulq_s8(v16, v14));
  return (*(uint64_t (**)(void))(v12 + 8LL * ((732 * ((a1 & 0xFFFFFFF0) == 16)) ^ a3)))();
}

void sub_10055F0F4()
{
}

uint64_t sub_10055F104(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * (((((a1 == a2) ^ (a5 - 13)) & 1)
                                          * (((a5 - 1208) | 0x686) ^ 0x516)) ^ a5))
                            - 8LL))();
}

uint64_t sub_10055F15C( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL
                                             * ((29 * (((((a8 - 609761308) ^ 0xDBA7CBF9) - 1411) & a1) != 0)) ^ a8))
                            - 12LL))();
}

uint64_t sub_10055F1A0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v16 = (a7 ^ 0x2458318A) & a1;
  LODWORD(STACK[0x658]) = v16;
  v18.val[0].i64[0] = ((_BYTE)v9 + (_BYTE)v8 + (_BYTE)a2) & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v9 + (_BYTE)a2 + 14) & 0xF;
  v18.val[1].i64[0] = ((_BYTE)v9 + (_BYTE)a2 + ((((a7 ^ 0xE) - 58) | 0x91) ^ 0xC)) & 0xF;
  v18.val[1].i64[1] = (v9 + a2) & 0xFLL;
  v18.val[2].i64[0] = ((_BYTE)v9 + (_BYTE)a2 + 1) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)v9 + (_BYTE)a2 + 2) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v9 + (_BYTE)a2 + 3) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)v9 + (_BYTE)a2 + 4) & 0xF;
  *(int8x8_t *)(v15 + (v7 + v10 + a2)) = veor_s8( veor_s8( veor_s8( veor_s8( *(int8x8_t *)(v11 + (v9 + v8 + a2)),  *(int8x8_t *)(v12 + v18.val[0].i64[0])),  veor_s8( *(int8x8_t *)(v18.val[0].i64[0] + v13 + 5),  *(int8x8_t *)(v18.val[0].i64[0] + v14 + 2))),  (int8x8_t)0x3030303030303030LL),  vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8( v18,  (int8x16_t)xmmword_10071E3C0),  (int8x8_t)0xE3E3E3E3E3E3E3E3LL));
  return ((uint64_t (*)(__n128))*(&off_10090DDE0 + (int)((885 * (v16 - 8 == a2)) ^ a7 ^ 0xDBA7CF0E)))((__n128)xmmword_10071E3C0);
}

void sub_10055F2C0()
{
}

uint64_t sub_10055F2C8(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((((((v1 - 918213396) & 0x36BAD5CB) + 134) ^ 2) * (a1 == LODWORD(STACK[0x658]))) ^ v1))
                            - 8LL))();
}

uint64_t sub_10055F310@<X0>(int a1@<W8>)
{
  _DWORD *v2 = v2[623];
  return (*(uint64_t (**)(void))(v1 + 8LL * (((v3 - 1 != ((a1 - 944) | 0x680) + 1521778934) * (a1 - 821)) ^ (a1 - 135))))();
}

uint64_t sub_10055F35C@<X0>(int a1@<W8>)
{
  uint64_t v4 = 4LL * (v1 - 1026811161);
  unsigned int v5 = *((_DWORD *)&xmmword_1009BDBB4 + (v1 - 1026811162));
  int v6 = (*(_DWORD *)((char *)&xmmword_1009BDBB4 + v4) ^ 0xCA8A73D4 ^ (1566083941 * (v5 ^ 0x1D5D65FB ^ (v5 >> 30))
                                                                   - ((-1162799414 * (v5 ^ 0x1D5D65FB ^ (v5 >> 30))) & 0xAFAE2C5E)
                                                                   - 673769937))
     - v1;
  *(_DWORD *)((char *)&xmmword_1009BDBB4 + __chkstk_darwin(v3, v4) = v6 - ((2 * v6 + 979880498) & 0x3ABACBF6) + 1519471380;
  unint64_t v7 = 1606104089 * ((v3 - 192) ^ 0xC2BEFB347517423ELL);
  *(_DWORD *)(v3 - 164) = -1231242048 - v7 + a1;
  *(_DWORD *)(v3 - 172) = ((a1 - 1340772251) ^ 0x5D) + v7;
  *(_DWORD *)(v3 - 16_Block_object_dispose(va, 8) = (a1 - 1340772251) ^ v7;
  *(_DWORD *)(v3 - 180) = v7;
  *(_DWORD *)(v3 - 176) = (a1 - 1340772247) ^ v7;
  *(void *)(v3 - 192) = (v1 - 99615332) + v7;
  *(void *)(v3 - 160) = 927195828 - v7;
  uint64_t v8 = sub_1005E44CC(v3 - 192);
  return ((uint64_t (*)(uint64_t))(*(void *)(v2 + 8LL * *(int *)(v3 - 184)) - 4LL))(v8);
}

uint64_t sub_10055F4B4()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((1760
                                          * (v0 < ((LODWORD(STACK[0x660]) - 1539142471) & 0x5BBD6FEFu) + 927195017)) ^ (LODWORD(STACK[0x660]) - 720)))
                            - (((LODWORD(STACK[0x660]) - 1616) | 0x380u) ^ 0x3BALL)))();
}

uint64_t sub_10055F510()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((1760 * (v0 > ((LODWORD(STACK[0x660]) - 855) ^ 0x3743E608u))) ^ (LODWORD(STACK[0x660]) - 720)))
                            - (LODWORD(STACK[0x660]) ^ 0x68ALL)))();
}

uint64_t sub_10055F55C()
{
  LODWORD(xmmword_1009BDBB4) = -1654823429;
  free((void *)STACK[0x650]);
  return sub_100587D3C();
}

uint64_t sub_10055F5CC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v75 = (((v70 + 2105179262) >> 8) ^ 0x33EF8FEF)
      + v70
      + (((v70 + 2105179262) >> 7) & 0x1DF1FDE);
  unsigned int v76 = v75 + (((v75 + 1233841295) >> 5) ^ 0x38194000) - (((v75 + 1233841295) >> 4) & 0xFCD7FFE) + 1;
  int v77 = v76 - ((2 * v76 + 585324828) & 0x4E0B65CC) + 947347316;
  unsigned int v78 = ((2 * ((v77 ^ 0x2705B2E6) - 1879573490)) & 0xDF7D7F9E) + (((v77 ^ 0x2705B2E6) - 1879573490) ^ 0x6FBEBFCF);
  unsigned int v79 = (((v78 - 1874771919) >> 10) ^ 0x2FFB673F) + v78 + (((v78 - 1874771919) >> 9) & 0x76CE7E);
  unsigned int v80 = ((v79 + 1615190258) & 0xDFFECFE2) + v79 + (((v79 + 1615190258) >> 1) ^ 0x6FFF67F1);
  unsigned int v81 = v80 - ((2 * v80 - 527638014) & 0x9B8BD52A) - 1106486378;
  unsigned int v82 = ((2 * ((v81 ^ 0xCDC5EA95) + 1287124013)) & 0xEFDBFD84) + (((v81 ^ 0xCDC5EA95) + 1287124013) ^ 0x77EDFEC2);
  unsigned int v83 = v82 + (((v82 - 2012085954) >> 13) ^ 0x81001000) - ((2 * ((v82 - 2012085954) >> 13)) & 0xFDFFE);
  unsigned int v84 = v83 + (((v83 + 118616382) >> 6) ^ 0x48090009) - (((v83 + 118616382) >> 5) & 0x7EDFFEC) + 2;
  int v85 = v84 - ((2 * v84 + 504488550) & 0x145BC00E) + 1228329274;
  unsigned int v86 = ((2 * ((v85 ^ 0x8A2DE007) - 1282870125)) & 0xEBBBAE7E) + (((v85 ^ 0x8A2DE007) - 1282870125) ^ 0xF5DDD73F);
  unsigned int v87 = (((v86 + 170010817) >> 8) ^ 0xFF5EBDF7) + v86 + (((v86 + 170010817) >> 7) & 0xBD7BEE);
  unsigned int v88 = (((v87 + 180579018) >> 2) ^ 0xCCEFAFDE) + v87 + (((v87 + 180579018) >> 1) & 0x19DF5FBC);
  int v89 = v88 - ((2 * v88 + 463959512) & 0x19C87C98) - 893912776;
  unsigned int v90 = ((2 * ((v89 ^ 0x8CE43E4C) + 707258702)) & 0xFE7EDF76) + (((v89 ^ 0x8CE43E4C) + 707258702) ^ 0xFF3F6FBB);
  unsigned int v91 = (((v90 + 12619845) >> 13) ^ 0x1BAEF5FD) + v90 + (((v90 + 12619845) >> 12) & 0xDEBFA);
  unsigned int v92 = (((v91 - 451831224) >> 3) ^ 0xFD52FA6B) + v91 + (((v91 - 451831224) >> 2) & 0x3AA5F4D6);
  unsigned int v93 = v92 - ((2 * v92 + 1333608378) & 0x445982AA) - 1981062862;
  unsigned int v94 = (v93 ^ 0x29A397DF) + ((v93 >> 11) ^ 0x81953EE2) + ((v93 >> 10) & 0x1FEADE ^ 0xFFF5973B) + 2121266545;
  unsigned int v95 = (((((2 * v94) & 0xE775FFFE) + (v94 ^ 0xF3BAFFFF) + 205848577) >> 5) ^ 0xDBEFFF5B)
      + ((2 * v94) & 0xE775FFFE)
      + (v94 ^ 0xF3BAFFFF)
      + (((((2 * v94) & 0xE775FFFE) + (v94 ^ 0xF3BAFFFF) + 205848577) >> 4) & 0x7DFFEB6);
  unsigned int v96 = v95 - ((2 * v95 + 548012364) & 0x2F698E1E) + 1208600501;
  unsigned int v97 = (v96 ^ 0x23E813F7) + ((v96 >> 12) ^ 0x10A3E88) - 17301512 + ((2 * (v96 >> 12)) & 0xFFFEC ^ 0xFFFB82FF);
  unsigned int v98 = (((((2 * v97) & 0xD7EBDBFA) + (v97 ^ 0x6BF5EDFD) - 1811279357) >> 7) ^ 0xFBFFFADF)
      + ((2 * v97) & 0xD7EBDBFA)
      + (v97 ^ 0x6BF5EDFD)
      + ((2 * ((((2 * v97) & 0xD7EBDBFA) + (v97 ^ 0x6BF5EDFD) - 1811279357) >> 7)) & 0x3FFF5BE);
  unsigned int v99 = v98 - ((2 * v98 + 806628936) & 0xD18270A8) - 2134159496;
  unsigned int v100 = ((2 * ((v99 ^ 0xE8C13854) - 2045107421)) & 0xFF6BBEEE) + (((v99 ^ 0xE8C13854) - 2045107421) ^ 0xFFB5DF77);
  unsigned int v101 = (((v100 + 4857993) >> 11) ^ 0xBFF1BAFF) + v100 + (((v100 + 4857993) >> 10) & 0x2375FE);
  unsigned int v102 = v101 + (((v101 + 1079534986) >> 8) ^ 0x98014600) - (((v101 + 1079534986) >> 7) & 0x1FD73FE) + 1;
  unsigned int v103 = v102 - ((2 * v102 + 279854866) & 0x3FAACE64) - 936606021;
  unsigned int v104 = (((v89 ^ v77 ^ v99) >> 1) & 0x437A6022 ^ 0xC30C50E3 | ((v89 ^ v77 ^ v99) >> 1) & 0x3C81841C) - 1;
  unsigned int v105 = (v104 & 0x7318642C ^ 0x910406A1) + (v104 & 0xCE38012 ^ 0xE00013);
  unsigned int v106 = ((((v93 ^ v81 ^ v103) >> 1) & 0x27930410 ^ 0x22800291 | ((v93 ^ v81 ^ v103) >> 1) & 0x5868E02E) - 1) ^ 0xCBF385D9;
  unsigned int v107 = (v103 ^ 0x2545E961) + ((v103 >> 8) ^ 0x281E7C1) + ((v103 >> 7) & 0xB6BBAE ^ 0xFFFD747D) - 44343847;
  unsigned int v108 = (((((2 * v107) & 0x3DF79FF8) + (v107 ^ 0x9EFBCFFC) + 1627664388) >> 8) ^ 0x7FBFD5BF)
       + ((2 * v107) & 0x3DF79FF8)
       + (v107 ^ 0x9EFBCFFC)
       + (((((2 * v107) & 0x3DF79FF8) + (v107 ^ 0x9EFBCFFC) + 1627664388) >> 7) & 0x17FAB7E);
  int v109 = v108 - ((2 * v108 + 1116255370) & 0x5F2733A0) - 1864895467;
  unsigned int v110 = ((v96 ^ v85 ^ v109) >> 1) & 0x7FFBE43E ^ 0x453C018;
  unsigned int v111 = (v110 - ((2 * v110) & 0xDDB48860) - 287420560) ^ 0x44AB364C;
  unsigned int v112 = (v111 | 0x285AF694) - (v111 | 0xD7A5096B) - 677050005;
  unsigned int v113 = LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x550]);
  unsigned int v114 = (((v113 >> 1) & 0x7FFBE43E ^ 0xEA0E1265) - 1) ^ 0xB3AA3E16;
  unsigned int v115 = a70 ^ v113 ^ 0xD93956E1 ^ (((2 * v114) & 0x11E850E8) - v114 - 150218870);
  unsigned int v116 = ((v115 & 0xFF188309 ^ 0xF7108009) - ((2 * (v115 & 0xFF188309 ^ 0xF7108009)) & 0xCE300200) - 411164334) ^ 0xF3B60DD0;
  unsigned int v117 = ((v116 | 0xFBBDC81) - (v116 | 0xF044237E) - 263969922) ^ 0xE56BF003 | (((2 * (v115 & 0xE77CF6 ^ 0x5163AC57)) | 0xE1B1BEA)
                                                                              - (v115 & 0xE77CF6 ^ 0x5163AC57)
                                                                              + 2029154827) ^ 0xD6A825B6;
  unsigned int v118 = v77 ^ (v117 - ((2 * v117) & 0xC70FCF0C) + 1669851014) ^ v72 ^ v89 ^ v99 ^ (v105 - 2);
  HIDWORD(v119) = LODWORD(STACK[0x5C8]) ^ 0x3020;
  LODWORD(v119) = LODWORD(STACK[0x5C8]) ^ 0x7EAAC000;
  int v120 = (v119 >> 14) - ((2 * (v119 >> 14)) & 0x25116360) + 310948272;
  HIDWORD(v119) = v118 ^ 0x2E72;
  LODWORD(v119) = v118 ^ 0x148B8000;
  int v121 = ((v119 >> 14) - ((2 * (v119 >> 14)) & 0x5114ED76) - 1467320645) ^ v120;
  HIDWORD(v119) = v121 ^ 0x8278;
  LODWORD(v119) = v121 ^ 0x27780000;
  int v122 = v119 >> 18;
  int v123 = (LODWORD(STACK[0x560]) >> 1) & 0x3D23A036 ^ 0x3D209121 | (LODWORD(STACK[0x560]) >> 1) & 0x42D84408;
  LODWORD(STACK[0x5C8]) = (2 * v122) & 0xB00DEBAA;
  LODWORD(STACK[0x570]) = v122 + 1476851157;
  unsigned int v124 = LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x418]) ^ LODWORD(STACK[0x5A0]);
  int v125 = ((2 * ((v124 >> 1) & 0x7FFBE43E ^ 0x4EB0A032)) | 0x5120D008)
       - ((v124 >> 1) & 0x7FFBE43E ^ 0x4EB0A032)
       + 1466931196;
  int v126 = STACK[0x5D0];
  unsigned int v127 = ((LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x590])) ^ LODWORD(STACK[0x5D0])) >> 1;
  unsigned int v128 = ((2 * ((LODWORD(STACK[0x590]) >> 1) & 0x7FFBE43E ^ 0xB7829615)) | 0x2188AF78)
       - ((LODWORD(STACK[0x590]) >> 1) & 0x7FFBE43E ^ 0xB7829615)
       + 1866180676;
  unsigned int v129 = LODWORD(STACK[0x418]) ^ LODWORD(STACK[0x394]) ^ LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x5D8]) ^ LODWORD(STACK[0x35C]) ^ LODWORD(STACK[0x358]) ^ (((LODWORD(STACK[0x418]) >> 1) & 0x7FFBE43E ^ 0x6A129426 | 0xA5AEB1A6) - ((LODWORD(STACK[0x418]) >> 1) & 0x7FFBE43E ^ 0x6A129426 | 0x5A514E59) + 1515277913) ^ v124 ^ ((v125 & 0x9EA15B60 ^ 0x1E215360) + (v125 ^ 0xA098A819) - ((v125 ^ 0xA098A819) & 0x9EA15B60)) ^ v73 ^ v81;
  LODWORD(STACK[0x650]) = v123 - 1;
  LODWORD(STACK[0x35C]) = v129 ^ v93 ^ v103 ^ (v106 - 1);
  LODWORD(STACK[0x358]) = v128 ^ LODWORD(STACK[0x398]) ^ v126 ^ ((v127 & 0x47702000 ^ 0x46700A01 | v127 & 0x388BC43E) - 1) ^ v71 ^ v85 ^ v96 ^ v109 ^ v112 ^ 0x3D456B66;
  int v130 = LODWORD(STACK[0x460]) ^ 0x28;
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x340]) ^ 0x80F2EF9C;
  LODWORD(STACK[0x398]) = LODWORD(STACK[0x3D4]) ^ 0x1A69EAEA;
  LODWORD(STACK[0x394]) = LODWORD(STACK[0x3E0]) ^ 0x6B7E1DD8;
  unint64_t v131 = STACK[0xB58];
  int v132 = LODWORD(STACK[0x238]) ^ LODWORD(STACK[0x218]);
  int v133 = (v74 - 45) ^ 0x280;
  int v134 = (2 * ((v133 & STACK[0x3A4]) - ((2 * (v133 & STACK[0x3A4])) & 0x6D9ABDBC)) + 1838857660) ^ 0x6D9ABDBC;
  unsigned int v135 = (v134 - ((2 * v134) & 0xE88C366C) - 196732105) ^ 0x77091448;
  int v136 = ((((v135 ^ 0x7F) & LOBYTE(STACK[0x39C]))
                          - ((2 * ((v135 ^ 0x7F) & LOBYTE(STACK[0x39C]))) & 0xE4)
                          - 14) ^ 0xF2) >> STACK[0x5E8];
  unsigned int v137 = (2 * ((STACK[0x3A8] & 0x48FF756B) - ((2 * (STACK[0x3A8] & 0x48FF756B)) & 0x607E9A42)) - 528573886) ^ 0xE07E9A42;
  unsigned int v138 = (v137 - ((2 * v137) & 0x3189099C) - 1731951410) ^ 0xD03BF1A5;
  int v139 = (v138 & STACK[0x398]) - 1775220253 - ((2 * (v138 & STACK[0x398])) & 0x2C6093C6);
  unsigned int v140 = (((v138 & STACK[0x394]) - 1795783510 - ((2 * (v138 & STACK[0x394])) & 0x29ED0954)) ^ 0x94F684AA) >> STACK[0x3B0];
  uint64_t v141 = ((v139 ^ 0x963049E3) << LODWORD(STACK[0x3A0]))
       - ((2 * ((v139 ^ 0x963049E3) << LODWORD(STACK[0x3A0]))) & 0x59EE8CE4);
  uint64_t v142 = 4LL
       * ((LODWORD(STACK[0x620]) ^ (127 - ((v135 ^ 0x7F) << v130))) ^ 0x9Cu ^ (v136 - ((2 * v136) & 0xC8) - 28));
  *(_DWORD *)(STACK[0xB48] + v142) = v132 ^ 0xDC194ED ^ (v140 - 268195785 + ~((2 * v140) & 0xE007506C)) ^ (v141 - 1393080718);
  int v143 = (unsigned __int16)(unk_1007564D8 - 9869);
  uint64_t v144 = (2 * v143) & 0x16608;
  uint64_t v145 = v132 ^ 0x8D8E4FCC ^ (v143 - (_DWORD)v144 + 1781117700);
  *(_DWORD *)(v131 + v142) = v145;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((359 * (((v133 + 1997083648 - ((2 * v133 + 2) & 0xEE122890) + 73) ^ 0x77091400) > 0xFF)) ^ v74)) - 8))( v145,  v144,  1508805860LL,  1781117700LL,  2901886578LL,  v141,  2519747043LL,  3994167440LL,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

#error "100560424: too big function (funcsize=0)"
void sub_100574EDC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v0 = (LODWORD(STACK[0x244]) - 948615140) & 0x388AB7F7;
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x658]) - 20982368;
  LODWORD(STACK[0x3D0]) = LODWORD(STACK[0x3C0]) - 640163848;
  LODWORD(STACK[0x258]) = (v0 + 23132887) ^ LODWORD(STACK[0x238]);
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x240]) ^ 0xC8724BA3;
  LODWORD(STACK[0x248]) = LODWORD(STACK[0x23C]) ^ 0x95295CCE;
  LODWORD(STACK[0x254]) = LODWORD(STACK[0x230]) ^ 0x65C03C75;
  uint64_t v1 = STACK[0x3CC];
  uint64_t v2 = STACK[0x228];
  uint64_t v3 = STACK[0x3BC];
  if ((STACK[0x3CC] & 1) != 0) {
    uint64_t v4 = STACK[0x3BC];
  }
  else {
    uint64_t v4 = STACK[0x228];
  }
  if ((v1 & 1) != 0) {
    unsigned int v5 = STACK[0x218];
  }
  else {
    unsigned int v5 = STACK[0x224];
  }
  if ((v1 & 1) != 0) {
    uint64_t v3 = STACK[0x224];
  }
  else {
    uint64_t v2 = STACK[0x218];
  }
  if ((v1 & 2) != 0) {
    int v6 = v4;
  }
  else {
    int v6 = v5;
  }
  LODWORD(STACK[0x228]) = v6;
  if ((v1 & 2) != 0) {
    uint64_t v4 = v5;
  }
  LODWORD(STACK[0x224]) = v4;
  if ((v1 & 2) != 0) {
    unint64_t v7 = v2;
  }
  else {
    unint64_t v7 = v3;
  }
  LODWORD(STACK[0x218]) = v7;
  if ((v1 & 2) != 0) {
    uint64_t v8 = v3;
  }
  else {
    uint64_t v8 = v2;
  }
  LODWORD(STACK[0x3BC]) = v8;
  JUMPOUT(0x1005690C8LL);
}

uint64_t sub_100574FC4()
{
  return sub_1005C5928();
}

uint64_t sub_100575000(uint64_t a1)
{
  *(_BYTE *)(v6 + v1 - 0x777C85519531D504LL) = ((2 * v5) ^ 0x38 ^ *(_BYTE *)(v3 + v2 - 0x6B14BB2BF8744D34LL) ^ 0xFD)
                                             + ((2 * *(_BYTE *)(v3 + v2 - 0x6B14BB2BF8744D34LL)) & 0xDF)
                                             - 66;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((1209 * (a1 + 1 != v4 + 16)) ^ v5)) - 4LL))();
}

uint64_t sub_100575080()
{
  int v0 = STACK[0x5B0];
  unint64_t v1 = LODWORD(STACK[0x5B0]) ^ 0x80u;
  uint64_t v2 = malloc(0x408uLL);
  STACK[0xAD8] = (unint64_t)v2;
  STACK[0x648] = v1;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)(((v2 != 0LL) * ((v0 + 211) ^ v1)) ^ v0)) - 12))();
}

uint64_t sub_1005750C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v9 = LODWORD(STACK[0x468]) ^ LODWORD(STACK[0x5F0]) ^ 0x30C59D1E;
  int v10 = (v9 + 55978900) & 0x3581483 ^ v9 & 2;
  v9 -= 1095876587;
  unsigned int v11 = ((((v9 - 2 * v10) ^ 0x30C59D1E)
        - 2 * ((((v9 - 2 * v10) ^ 0x30C59D1E) + 55978900) & 0x3581483 ^ ((v9 - 2 * v10) ^ 0x30C59D1E) & 2)
        - 1095876587) ^ 0x83581481)
      + LODWORD(STACK[0x5A0]);
  LOBYTE(v9) = ((v11 - ((2 * v11) & 0xC2) + 97) | v9 & 1) ^ 0x34;
  LOBYTE(v9) = (v9 - ((2 * v9) & 0x46) - 93) ^ 0xA3;
  unsigned int v12 = (((2 * (STACK[0x590] & 0x90BF9B66 ^ 0x8E1966)) & 0x1601288) - (STACK[0x590] & 0x90BF9B66 ^ 0x8E1966) - 61877726) ^ 0xBC4FD222;
  int v13 = dword_100731F20[(((((v6 + 41) ^ 0xB3) - 18) * v9
                                         - ((2 * (((v6 + 41) ^ 0xB3) - 18) * v9) & 0xDE)
                                         - 17) ^ v8) ^ 0x35];
  *(_DWORD *)(a1
            + 4LL
            * (((((v6 + 41) ^ 0xB3) - 18) * v9 - ((2 * (((v6 + 41) ^ 0xB3) - 18) * v9) & 0xDE) - 17) ^ 0xEFu)) = ((STACK[0x590] & 0x6F406499 ^ 0x27006419) + (STACK[0x590] & 0x67400400 ^ 0xC06F9124) - ((STACK[0x590] & 0x6F406499 ^ 0x27006419) & 0x67400400)) & 0xFFC17D99 ^ (((2 * v12) & 0x639B7EC) - v12 + 2095260680) ^ a6 ^ LODWORD(STACK[0x608]) ^ 0x35D8BEBF ^ (v13 - ((2 * v13 + 1609614356) & 0xC23F1D98) - 1860701994);
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * (v6 - 1205)) - 4LL))();
}

void sub_100575314()
{
}

uint64_t sub_10057531C()
{
  unint64_t v1 = 137 * (v0 ^ 0x487u);
  uint64_t v2 = malloc(0x404uLL);
  STACK[0xAB0] = (unint64_t)v2;
  uint64_t v3 = (uint64_t)*(&off_10090DDE0 + ((366 * (((v2 == 0LL) ^ (v0 - 1)) & 1)) ^ v0));
  STACK[0x648] = v1;
  return ((uint64_t (*)(void))(v3 - (v1 ^ 0x5EB)))();
}

uint64_t sub_100575378()
{
  int v2 = LODWORD(STACK[0x460]) ^ LODWORD(STACK[0x5B8]);
  char v3 = (((((v0 - 108) | 0xCE) - 70) ^ (2 * v2))
      - 2 * (((((v0 - 108) | 0xCE) - 70) ^ (2 * v2)) & 0x74 ^ (2 * v2) & 0x10)
      + 100) & 0x60;
  LOBYTE(bzero(v1, v2) = (v3 ^ 0x20) + (v2 ^ 0x48) - 2 * (((v3 ^ 0x20) + (v2 ^ 0x48)) & 0xDD ^ (v2 ^ 0x48) & 9) - 44;
  char v4 = (((2 * v2) ^ 0xA8) - 2 * (((2 * v2) ^ 0xA8) & 0x74 ^ (2 * v2) & 0x10) + 100) & 0x60;
  LOBYTE(bzero(v1, v2) = (v4 ^ 0x20) + (v2 ^ 0x48) - 2 * (((v4 ^ 0x20) + (v2 ^ 0x48)) & 0xDD ^ (v2 ^ 0x48) & 9) - 44;
  char v5 = (((2 * v2) ^ 0xA8) - 2 * (((2 * v2) ^ 0xA8) & 0x74 ^ (2 * v2) & 0x10) + 100) & 0x60;
  LOBYTE(bzero(v1, v2) = (v5 ^ 0x20) + (v2 ^ 0x48) - 2 * (((v5 ^ 0x20) + (v2 ^ 0x48)) & 0xDD ^ (v2 ^ 0x48) & 9) - 44;
  int v6 = STACK[0x580];
  int v7 = LODWORD(STACK[0x580]) ^ 0x700EB282;
  LODWORD(STACK[0x660]) = v7;
  char v8 = 2 * (((v2 ^ 0xD4) & v7) - ((2 * ((v2 ^ 0xD4) & v7)) & 0x28)) + 40;
  LOBYTE(bzero(v1, v2) = (v6 ^ 0x56 ^ v2) + (v8 ^ 0xED) + 59 + ((2 * v8) & 0x88);
  LOBYTE(bzero(v1, v2) = ((v2 & 0xFE) - ((2 * v2) & 0x5C) + 47) ^ 8;
  unsigned int v9 = LODWORD(STACK[0x560]) ^ 0x8C29496C;
  unsigned int v10 = v9
      + (((LODWORD(STACK[0x560]) ^ 0xD68EA24C) + 1) ^ 0x53B76F1E)
      + ((2 * ((LODWORD(STACK[0x560]) ^ 0xD68EA24C) + 1)) & 0xA76EDE3C)
      - 1404530462;
  unsigned int v11 = ((v10 - ((2 * v10) & 0xD5FF42F8) - 352345732) ^ 0x15005E82) + v9;
  int v12 = (63 * v2 + 110 - ((126 * v2) & 0xDC));
  unsigned int v13 = ((v12 ^ 0x8A17B6A2) - (((v12 ^ 0x8A17B6A2) << (((v0 - 108) | 0xCE) + 19)) & 0x80884) - 1243347646) ^ 0xBB4A930C;
  int v14 = dword_10073C870[LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x5E0]) ^ LODWORD(STACK[0x620]) ^ 0x5A1733BD ^ (v13 - ((2 * v13) & 0x1201E32) + 1536429849)];
  HIDWORD(v15) = v14 ^ 0xFA189;
  LODWORD(v15) = v14 ^ 0x3E500000;
  *(_DWORD *)(STACK[0xAB0] + 4LL * (v12 ^ 0x6Eu)) = (v11 - ((2 * v11) & 0xB9DF91F0) - 588265224) ^ LODWORD(STACK[0x600]) ^ LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x5E8]) ^ LODWORD(STACK[0x498]) ^ 0x20E4788C ^ ((v15 >> 20) - ((2 * (v15 >> 20)) & 0x38651234) + 473073946);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8LL * ((((v0 - 876) | 0xCE) - 41) ^ 0x2B)))( 3142226700LL,  1536429849LL,  1511470013LL,  dword_10073C870,  1024393LL,  1045430272LL,  946147892LL,  473073946LL);
}

void sub_100575764()
{
}

uint64_t sub_100575774@<X0>(int a1@<W8>)
{
  int v1 = a1 + 597;
  unsigned __int8 v2 = a1 + 14;
  STACK[0x648] = (a1 + 1054);
  char v3 = malloc(0x404uLL);
  STACK[0xAF0] = (unint64_t)v3;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((((v3 == 0LL) ^ v2) & 1) * (v1 - 977)) ^ v1)))();
}

uint64_t sub_1005757C4(uint64_t a1)
{
  unsigned int v3 = ((LODWORD(STACK[0x540]) ^ LODWORD(STACK[0x5F0]) ^ 0x9F815D2F)
      - ((2 * (LODWORD(STACK[0x540]) ^ LODWORD(STACK[0x5F0]) ^ 0x9F815D2F) + 363524808) & 0x57E48D80)
      - 1228423132) ^ 0x9F815D2F;
  unsigned int v4 = ((v3 - ((2 * v3 + 363524808) & 0x57E48D80) - 1228423132) ^ 0xABF246C0) + LODWORD(STACK[0x5A0]);
  unsigned int v5 = (v4 ^ 0x7E66FFFF) - 2120679423 + ((2 * v4) & 0xFCCDFFFE);
  unsigned int v6 = (v5 & 0xFFFFFFFE) - ((2 * v5) & 0x8D16E7D0) - 963939352;
  unsigned int v7 = (STACK[0x47C] & 8 | 0xE9F54C16) + ((2 * (STACK[0x47C] & 8)) ^ 0x10);
  unsigned int v8 = v7 + 369800162;
  char v9 = 60 - v7;
  unsigned int v11 = ((-448883050 * (v6 ^ 0x63021F3F)) & 0xF74D76FC) + ((1923042123 * (v6 ^ 0x63021F3F)) ^ 0x7BA6BB7E);
  if (((v11 - 2074524542) & v8) + 1595179159 - ((((v11 - 2074524542) & v8) << ((v1 & 0x7D) - 80)) & 0xBE290108) == 1595179159) {
    char v12 = (STACK[0x47C] & 8 | 0x16) + ((2 * (STACK[0x47C] & 8)) ^ 0x10);
  }
  else {
    char v12 = v9;
  }
  unsigned int v10 = (STACK[0x47C] & 0xF7 ^ 0xA3) + (STACK[0x47C] & 0x62 ^ 0xB70CE140) - ((STACK[0x47C] & 0xF7 ^ 0xA3) & 0x62);
  unsigned __int8 v13 = ((v10 & 0xB5 ^ 0xB1) + (v10 & 0x4A ^ 0x43) - 1) ^ LOBYTE(STACK[0x480]) ^ LOBYTE(STACK[0x470]) ^ (v12 + v11 - ((2 * (v12 + v11) - 56) & 0xDC) + 82);
  int v14 = (v13 ^ (v2 + 75)) + (v13 & 0xB9 ^ 0x4B1429A1) - ((v13 ^ (v2 + 75)) & (v2 + 168));
  *(_DWORD *)(a1 + 4LL * (v11 - 126)) = LODWORD(STACK[0x530]) ^ LODWORD(STACK[0x520]) ^ LODWORD(STACK[0x498]) ^ v14 ^ dword_1007542E0[((v13 ^ 0x10860178) + (v13 & 0x51 ^ 0xCD284C01) - ((v13 ^ 0x10860178) & 0x800151)) ^ 0xDD2E4C66] ^ ((v14 ^ 0x4B142937) - ((2 * (v14 ^ 0x4B142937) + 2036754586) & 0x7C7DDD2A) + 988947170) ^ 0xB308C448;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (v1 & 0x6AFF357D)) - 8))();
}

void sub_100575AEC()
{
}

uint64_t sub_100575AFC@<X0>(int a1@<W8>)
{
  int v1 = a1 - 362;
  unint64_t v2 = (a1 + 911036586) & 0xC9B2AFE7;
  int v3 = a1 - 1095;
  unsigned int v4 = malloc(0x408uLL);
  STACK[0xAA8] = (unint64_t)v4;
  STACK[0x648] = v2;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (int)((((v2 ^ 0x310) + v3) * (v4 == 0LL)) ^ v1)))();
}

uint64_t sub_100575B58(uint64_t a1)
{
  int v2 = (v1 - 10) | 4;
  unsigned int v3 = ((LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x460]) ^ 0xE9C5DA46)
      - (((v2 ^ 0x527C99B2) + 2 * (LODWORD(STACK[0x580]) ^ LODWORD(STACK[0x460]) ^ 0xE9C5DA46)) & 0xE1A05170)
      - 1710328557) ^ 0x8D5D8894;
  unsigned int v4 = ((((v3 - 1710328557 - ((2 * v3 + 1383897270) & 0xE1A05170)) ^ 0xF0D028B8)
       + LODWORD(STACK[0x5A0])
       - ((2 * (((v3 - 1710328557 - ((2 * v3 + 1383897270) & 0xE1A05170)) ^ 0xF0D028B8) + LODWORD(STACK[0x5A0]))) & 0x98A5303E)
       + 1280481311) | (v3 - 1710328557) & 1) ^ 0x381BFF48;
  unsigned int v5 = (v4 - ((2 * v4) & 0x8E514F2A) + 1193846677) ^ 0x4728A795;
  int v6 = LODWORD(STACK[0x450]) ^ 0xF525;
  unsigned int v7 = ((1648467110 * v5) & 0x9FE9D6E2) + ((-1323250093 * v5) ^ 0x4FF4EB71);
  int v8 = 2 * (((v7 + 5263) & v6) - ((((v7 + 5263) & v6) << (((v2 - 38) & 0xAD) + 117)) & 0x11932)) - 658433742;
  unsigned int v9 = ((v6 - 1341451121 + v7) ^ 0xEEAC92FF)
     + ((2 * (v6 - 1341451121 + v7)) & 0xDD5925FE)
     + (v8 ^ 0xF8ED1BB3)
     + ((2 * v8) & 0xBFA7FAFC ^ 0x4E7DCD9B);
  int v10 = LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x5C8]) ^ (v9
                                                       + 1
                                                       - 2 * ((v9 + 824666753) & 0x2E9A1F7D ^ (v9 + 1) & 5)
                                                       + 532777464);
  unsigned int v11 = (((32 * v10) ^ 0x5FF8E500) - 213362537) ^ 0xF3485897 | (v10 >> 3) ^ 5;
  int v12 = v11 - ((2 * v11) & 0x32) - 103;
  HIDWORD(v13) = v12 ^ 0x1D;
  LODWORD(v13) = v12 << 24;
  int v14 = dword_100732330[((v13 >> 29) - ((2 * (v13 >> 29)) & 0xFA) + 125) ^ 0x83];
  HIDWORD(v13) = v14 ^ 0x109FD12D;
  LODWORD(v13) = ~v14;
  *(_DWORD *)(a1 + 4LL * (v7 - 113)) = LODWORD(STACK[0x510]) ^ LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x5E8]) ^ 0x67D39D61 ^ ((v13 >> 29) - ((2 * (v13 >> 29)) & 0xE08056C2) + 1883253601);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (v2 ^ 0xE)) - 8))();
}

void sub_100575E50()
{
}

uint64_t sub_100575E60()
{
  unint64_t v1 = (v0 + 343);
  int v2 = malloc(0x404uLL);
  STACK[0xAE0] = (unint64_t)v2;
  unsigned int v3 = (uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((401 * (((v2 == 0LL) ^ (v0 - 1)) & 1)) ^ v0))
                         - v1
                         + 1499);
  STACK[0x648] = v1;
  return v3();
}

uint64_t sub_100575EAC(uint64_t a1)
{
  unsigned int v3 = (((LODWORD(STACK[0x418]) ^ 0x644CA32C)
       - ((2 * (LODWORD(STACK[0x418]) ^ 0x644CA32C) + 1225213828) & 0xD0055332)
       - 1937355429) ^ 0xE802A999)
     + LODWORD(STACK[0x660]);
  LOBYTE(__chkstk_darwin(v2, v3) = (v3 ^ 0xDF) - 58 + ((2 * v3) & 0xBE) + 91;
  LOBYTE(__chkstk_darwin(v2, v3) = ((v3 & 0xFE) - ((2 * v3) & 0x40) + 32) ^ 0x9D;
  int v4 = (-5 * v3 - 33 - ((-10 * v3) & 0xBE));
  unsigned int v5 = dword_100740BB0[LODWORD(STACK[0x640]) ^ LODWORD(STACK[0x5E0]) ^ LODWORD(STACK[0x620]) ^ 0x7DA2C853 ^ ((((v4 ^ 0xB8C095) << (((v1 + 70) ^ 0x5E) + 117)) & 0x1318154) - (v4 ^ 0xB8C095) - 132115371)];
  int v6 = LODWORD(STACK[0x438]) ^ LODWORD(STACK[0x590]) ^ LODWORD(STACK[0x440]) ^ LODWORD(STACK[0x658]) ^ LODWORD(STACK[0x650]) ^ LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x5F8]) ^ LODWORD(STACK[0x430]) ^ LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x448]) ^ v5 ^ (v5 >> 2) ^ (v5 >> 6) ^ 0x31A2732D;
  *(_DWORD *)(a1 + 4LL * (v4 ^ 0xDFu)) = LODWORD(STACK[0x610]) ^ LODWORD(STACK[0x500]) ^ 0xA85B8AD1 ^ (v6 - ((2 * v6) & 0xBDA017E) + 99418303);
  return (*(uint64_t (**)(void))(v2 + 8LL * (v1 - 186)))();
}

void sub_1005760B8()
{
}

uint64_t sub_1005760C8()
{
  unint64_t v1 = (v0 - 597468321) & 0x239CA5F7;
  uint64_t v2 = malloc(0x404uLL);
  uint64_t v3 = (uint64_t)*(&off_10090DDE0 + ((538 * (v2 != 0LL)) ^ v0));
  STACK[0xAE8] = (unint64_t)v2;
  STACK[0x648] = v1;
  return ((uint64_t (*)(void))(v3 - (((v0 + 2131744607) & 0xFBFF7476) + v1) + 2064602685))();
}

uint64_t sub_100576140(uint64_t a1)
{
  int v3 = (v1 - 2064601038) | 0x20;
  unsigned int v4 = ((LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x460]) ^ 0x8A3D6E7D)
      - ((2 * (LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x460]) ^ 0x8A3D6E7D) + 654657334) & 0x33C02974)
      + 224573525) ^ 0x8A3D6E7D;
  unsigned int v5 = ((v4 - ((v3 + 2 * v4 + 654657154) & 0x33C02974) + 224573525) ^ 0x99E014BA) + LODWORD(STACK[0x5A0]);
  unsigned int v6 = (v5 ^ 0x77BF15DD) - 2009011677 + ((2 * v5) & 0xEF7E2BBA);
  int v7 = LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x5C8]) ^ LODWORD(STACK[0x450]);
  unsigned int v8 = 1226662033 * (((v6 & 0xFFFFFFFE) - ((2 * v6) & 0x9FA3DE28) + 1339158293) ^ 0x41C6E680);
  unsigned __int8 v9 = v8 - ((v8 << ((((v1 + 50) | 0x20) ^ 0xD7) - 98)) & 0xC8) + 100;
  unsigned int v10 = (923291449
  *(_DWORD *)(a1 + 4LL * (v9 ^ 0x64u)) = LODWORD(STACK[0x4C0]) ^ LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x448]) ^ (v10 - ((2 * v10) & 0xA3E19E0) + 85921008) ^ 0x3BCB896F ^ dword_100734EC0[(v10 - ((2 * v10) & 0xA3E19E0) + 85921008) ^ 0x851B4F48];
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * v3) - 4LL))();
}

void sub_100576330()
{
}

uint64_t sub_10057633C()
{
  char v1 = STACK[0xB8D];
  STACK[0x648] = (v0 + 128);
  int v2 = byte_1007353C0[(v1 - ((((v0 + 0x80) ^ 0x27) + 2 * v1) & 0xE0) - 46) ^ 0x41LL];
  int v3 = (v2 - ((2 * v2 + 106) & 0xCE) - 100) ^ 0xD3;
  int v4 = (((v3 - ((2 * v3) & 0x82)) << 16) + 4259840) ^ 0x410000;
  int v5 = byte_10073F540[(LOBYTE(STACK[0xB8F])
                                      - 2 * ((LOBYTE(STACK[0xB8F]) + 100) & 0x4F ^ STACK[0xB8F] & 3)
                                      - 80) ^ 0x76LL] ^ 0xF2;
  unsigned int v6 = (v5 - ((2 * v5) & 0xC6) - 1349786525) ^ 0xAF8BE463 | (v4 - ((2 * v4) & 0x9E9A0000) + 1330453826) ^ 0x4F4D1D42;
  int v7 = byte_100753FC0[(LOBYTE(STACK[0xB8C]) - ((2 * LOBYTE(STACK[0xB8C]) + 2) & 0x26) - 76) ^ 0x6DLL] ^ (LOBYTE(STACK[0xB8C]) - ((2 * LOBYTE(STACK[0xB8C]) + 2) & 0x26) - 76) ^ 0x4A;
  int v8 = ((v7 - ((2 * v7) & 0x1C)) << 24) + 234881024;
  unsigned int v9 = ((v8 ^ 0xE000000) - ((2 * v8) & 0x62000000) + 838419600) ^ 0x31F94490 | (v6 - ((2 * v6) & 0xA3230102) + 1368490113) ^ 0x51918081;
  int v10 = byte_100756E60[((~(2 * LOBYTE(STACK[0xB8E]) + 70) | 0x47) + LOBYTE(STACK[0xB8E]) + 0x80) ^ 0xA6LL];
  int v11 = v10 ^ 0x8D ^ (((16 * v10) ^ 0x30) - ((2 * ((16 * v10) ^ 0x30)) & 0xA0) - 44);
  int v12 = (((v11 - ((2 * v11) & 0x18E)) << 8) + 1601619712) ^ 0x5F76C700;
  unsigned int v13 = (v12 - ((2 * v12) & 0x65200600) + 1922040746) ^ 0x729003AA | (v9 - ((2 * v9) & 0xB252B798) + 1495882700) ^ 0x59295BCC;
  int v14 = (v13 - 43785462 + (~(2 * v13) | 0x53839ED)) ^ LODWORD(STACK[0x580]);
  unsigned int v15 = ((25 - LODWORD(STACK[0x420])) & 0x40000 ^ 0xFFFFBBBF) + 2 * ((25 - LODWORD(STACK[0x420])) & 0x40000);
  BOOL v16 = ((v14 ^ 0x8D6C0000) & (v15 + 17473)) == ((2 * ((v14 ^ 0x8D6C0000) & (v15 + 17473))) & 0x41880000);
  unsigned __int8 v17 = byte_1007353C0[(LOBYTE(STACK[0xB85])
                                       - 2 * ((LOBYTE(STACK[0xB85]) + 2) & 7 ^ STACK[0xB85] & 1)
                                       - 32) ^ 0xC8LL];
  int v18 = byte_100756E60[(LOBYTE(STACK[0xB86]) - ((2 * LOBYTE(STACK[0xB86]) + 54) & 0x78) - 41) ^ 0xCCLL];
  int v19 = v18 ^ 0x51 ^ (((16 * v18) ^ 0x35) - 4);
  int v20 = (((v19 - ((2 * v19) & 0x22)) << 8) + 1317081344) ^ 0x4E811100;
  unsigned __int8 v21 = (v17 - ((2 * v17 + 106) & 0x82) - 10) ^ 0x52;
  unsigned int v22 = (((v21 - 2 * (v21 & 3)) << 16) - 888995840) ^ 0xCB030000;
  unsigned int v23 = (v22 - ((2 * v22) & 0x3720000) - 1044822657) ^ 0xC1B9457F | (v20 - ((2 * v20) & 0x6F52AC00) - 1213639051) ^ 0xB7A95675;
  int v24 = byte_100753FC0[((~(2 * LOBYTE(STACK[0xB84]) + 50) | 0x33) + LOBYTE(STACK[0xB84])) ^ 0x38LL] ^ ((~(2 * LOBYTE(STACK[0xB84]) + 50) | 0x33) + LOBYTE(STACK[0xB84])) ^ 0xD8;
  unsigned int v25 = (((v24 - ((2 * v24) & 0xFFFFFFDF)) << 24) - 285212672) ^ 0xEF000000;
  unsigned int v26 = (v25 - ((2 * v25) & 0xC3FFFFFF) + 1631451201) ^ 0x613DF841 | (v23 - ((2 * v23) & 0xCF3F9526) + 1738525331) ^ 0x679FCA93;
  int v27 = byte_10073F540[(LOBYTE(STACK[0xB87]) - ((2 * LOBYTE(STACK[0xB87]) - 72) & 0x88) - 96) ^ 0x9DLL];
  HIDWORD(v2_Block_object_dispose(va, 8) = v27 ^ 0x12;
  LODWORD(v2_Block_object_dispose(va, 8) = ~v27 << 24;
  int v29 = (v28 >> 29) - ((2 * (v28 >> 29)) & 0xFFFFFF8F);
  HIDWORD(v2_Block_object_dispose(va, 8) = (v29 + 79) ^ 5;
  LODWORD(v2_Block_object_dispose(va, 8) = (-72 - v29) << 24;
  int v30 = ((((v28 >> 27) + (~(2 * (v28 >> 27)) | 0x67) + 77) ^ 0x4C)
       - ((2 * (((v28 >> 27) + (~(2 * (v28 >> 27)) | 0x67) + 77) ^ 0x4C)) & 0x132)
       - 377124967) ^ 0xE9858799 | (v26 - ((2 * v26) & 0xF94F68FC) - 56118146) ^ 0xFCA7B47E;
  int v31 = STACK[0x5F8];
  unsigned int v32 = LODWORD(STACK[0x5F8]) ^ LODWORD(STACK[0x4E0]) ^ (v30 - ((2 * v30) & 0xF6B53662) - 77948111);
  unsigned int v33 = v15 + 1607724784;
  unsigned int v34 = 1607689838 - v15;
  if (v16) {
    unsigned int v34 = v33;
  }
  int v35 = STACK[0x610];
  unsigned int v36 = (LODWORD(STACK[0x610]) ^ v32 ^ 0xEDEAE447) + 1;
  int v37 = v32 ^ 0x73D9D4EF;
  unsigned int v38 = v37 + (v36 ^ 0xAFA6FF4F) + ((2 * v36) & 0x5F4DFE9E) + 1348010161;
  unsigned int v39 = (((LODWORD(STACK[0x4A0]) ^ 0xBF4BBF3F)
        - ((2 * (LODWORD(STACK[0x4A0]) ^ 0xBF4BBF3F) + 250260704) & 0xE4E1206)
        - 1768136845) ^ LODWORD(STACK[0x610]) ^ 0x44DBB91E ^ (v38 - ((2 * v38) & 0x4460FE94) + 573603658))
      + v37;
  int v40 = STACK[0x5D8];
  unsigned int v41 = (v39 - ((2 * v39) & 0xA3E37046) - 772687837) ^ LODWORD(STACK[0x5D8]);
  char v42 = (v39 - ((2 * v39) & 0x46) + 35) ^ LOBYTE(STACK[0x5D8]) ^ 0xA3;
  unsigned int v43 = (v41 ^ 0x581216A3) % 0x3A5E0577;
  LOBYTE(v3_Block_object_dispose(va, 8) = LOBYTE(STACK[0xB8B]) + (~(2 * LOBYTE(STACK[0xB8B]) + 22) | 0xAD) - 11;
  LOBYTE(v3_Block_object_dispose(va, 8) = (v38 ^ 0xBC) + ((2 * ((2 * v38) ^ 0x12)) & 4) + ((((2 * v38) ^ 0x12) + 32) & 0x2A ^ 0xF7) + 41;
  char v44 = v38 + (~(2 * v38) | 0x5F);
  unsigned int v45 = LOBYTE(STACK[0xB81]) - ((2 * LOBYTE(STACK[0xB81]) - 84) & 0xFFFFFF87) + 25;
  int v46 = (v45 ^ 0x43) - ((2 * (v45 ^ 0x43)) & 0x8A) - 244854203;
  unsigned int v47 = ((2 * (v45 ^ 0xBF)) & 0x1DE) + (v45 ^ 0xFFBF7C50);
  unsigned int v48 = v46 ^ (300619312 - v47 - ((1065286614 - 2 * v47) & 0x2457308A)) ^ 0xFC46C0CD ^ ((v46 ^ 0xE982DBA)
                                                                                      - ((2 * (v46 ^ 0xE982DBA) + 2) & 0x3E15159A)
                                                                                      + 520784590);
  int v49 = v48 + 584656932 - ((2 * v48 + 504) & 0x45B2507E) + 279;
  unsigned int v50 = v49 ^ 0x22D92824;
  int v51 = v49 ^ 0xD378C4D ^ (((2 * (v49 ^ 0xAE)) & 0x24) - (v49 ^ 0xAE) - 1258979603);
  LOWORD(v46) = (v51 & 0xAC ^ 0x8C) - ((2 * (v51 & 0xAC ^ 0x8C)) & 0xFF3F) - 7459;
  unsigned int v52 = ((v46 & 0xC0 | v46 & 0x33C ^ 0x80281215) + 2118183935) ^ 0xFE68FC40 | (((2 * v51) & 0x84)
                                                                             + (v51 & 0x53 ^ 0xFFFFFFEF)
                                                                             - 246802114) ^ 0xF14A192E;
  int v53 = ((v52 - ((2 * v52) & 4) + 2) ^ 0x7D) + byte_1007353C0[v50] + ((2 * (v52 - ((2 * v52) & 4) + 2)) ^ 4);
  unsigned int v54 = v53 + (~(2 * v53 + 26) | 0xFFFFFFD5) + 67;
  LODWORD(STACK[0x660]) = v54;
  int v55 = ((((v54 ^ 0xC1) - ((2 * (v54 ^ 0xC1)) & 0xBC)) << 16) + 224264192) ^ 0xD5E0000;
  unsigned int v56 = LOBYTE(STACK[0xB80]) - ((2 * LOBYTE(STACK[0xB80]) + 42) & 0xFFFFFFFB) + 18;
  int v57 = byte_100753FC0[(LOBYTE(STACK[0xB80]) - ((2 * LOBYTE(STACK[0xB80]) + 42) & 0xFB) + 18) ^ 0xF1LL] ^ v56 ^ 0x6C;
  unsigned int v58 = (((v57 + (~(2 * v57) | 0x11111111)) << 24) - 0x8000000) ^ 0xF7000000;
  unsigned int v59 = v58 - ((2 * v58) & 0x1E000000);
  int v60 = byte_1007353C0[(LOBYTE(STACK[0xB89]) - ((2 * LOBYTE(STACK[0xB89]) + 28) & 0x1E) - 19) ^ 0xECLL];
  int v61 = ((~(2 * v60 + 106) | 0x6B) + v60) ^ 0x21;
  int v62 = (((v61 - ((2 * v61) & 0xF6)) << 16) + 796590080) ^ 0x2F7B0000;
  int v63 = byte_10073F540[(v44 + 81) ^ 0xEFLL] ^ 0xF2;
  unsigned int v64 = (v62 - ((2 * v62) & 0x9B40000) - 2066073087) ^ 0x84DA3A01 | (v63 - ((2 * v63) & 0xFC) - 1091074178) ^ 0xBEF7877E;
  int v65 = byte_100756E60[(LOBYTE(STACK[0xB8A]) - ((2 * LOBYTE(STACK[0xB8A]) + 62) & 0x6A) + 84) ^ 0x7ALL];
  int v66 = v65 ^ 0x36 ^ (((16 * v65) ^ 0x30) - ((2 * ((16 * v65) ^ 0x30)) & 0x20) - 102);
  int v67 = ((((~(2 * v66) | 0xFFFE43) + v66) << 8) + 1823923968) ^ 0x6CB6DE00;
  unsigned int v68 = (v64 - ((2 * v64) & 0xEF790DDC) - 138639634) ^ 0xF7BC86EE | (v67 - ((2 * v67) & 0x33A00) + 912629089) ^ 0x36659D61;
  int v69 = byte_100753FC0[(LOBYTE(STACK[0xB88]) + ((-60 - 2 * LOBYTE(STACK[0xB88])) | 5) - 101) ^ 0xA2LL] ^ (LOBYTE(STACK[0xB88]) + ((-60 - 2 * LOBYTE(STACK[0xB88])) | 5) - 101) ^ 9;
  unsigned int v70 = (((v69 - ((2 * v69) & 0xD0)) << 24) - 402653184) ^ 0xE8000000;
  unsigned int v71 = (v68 - ((2 * v68) & 0x77E72122) - 1141665647) ^ 0xBBF39091 | (v70 + 440023992 + (~(2 * v70) | 0xCBFFFFFF) + 1) ^ 0x1A3A3BB8;
  int v72 = byte_100756E60[(LOBYTE(STACK[0xB82]) - 105) ^ 0xFALL];
  unsigned int v73 = v72 ^ 0x9B ^ (((16 * v72) ^ 0xFFFFFFE0) + (~(2 * ((16 * v72) ^ 0xFFFFFFE0)) | 0xBF) + 34);
  int v74 = (((v73 - ((2 * v73) & 0x34)) << 8) + 797514240) ^ 0x2F891A00;
  unsigned int v75 = (v74 - ((2 * v74) & 0x73B7B200) - 103032424) ^ 0xF9DBD998 | (v59 + 266349169) ^ 0xFE02A71;
  int v76 = byte_10073F540[(LOBYTE(STACK[0xB83])
                                       - 2 * ((LOBYTE(STACK[0xB83]) + 24) & 0x17 ^ STACK[0xB83] & 1)
                                       - 18) ^ 0x48LL] ^ 0xF2;
  unsigned int v77 = (v75 - ((2 * v75) & 0x4CA6AF3C) - 1504487522) ^ 0xA653579E | (v76 - ((2 * v76) & 0xFC) + 97013630) ^ 0x5C84F7E;
  unsigned int v78 = (v55 - ((2 * v55) & 0x28520000) - 1809251117) ^ 0x942904D3 | (v77 - ((2 * v77) & 0x8C5AC022) - 970104815) ^ 0xC62D6011;
  unsigned int v79 = v40 ^ LODWORD(STACK[0x540]) ^ v35 ^ v31 ^ (v71 - ((2 * v71) & 0x6064E45C) + 808612398);
  unsigned int v80 = v40 ^ LODWORD(STACK[0x468]) ^ v35 ^ v31 ^ (v78 - ((2 * v78) & 0x80528122) - 1071038319);
  unsigned int v81 = v35 ^ v40 ^ ((v31 & 0xFFFBFFFF ^ 0xEF51935F | 0x9CF229B7)
                   - (v31 & 0xFFFBFFFF ^ 0xEF51935F | 0x630DD648)
                   + 1661851208) ^ ((v14 ^ 0x8D6D5139)
                                  - 1607707311
                                  + v34
                                  - ((2 * ((v14 ^ 0x8D6D5139) - 1607707311 + v34)) & 0x2604D03E)
                                  + 318924831);
  char v82 = (v43 ^ 0xAA) + 86 + ((2 * v43) & 0x54);
  if (((2 * v43) & 0x55FDD36E) + (v43 ^ 0x6AFEE9B7) != 1795090871) {
    char v82 = 0;
  }
  char v83 = v42 - v82;
  unint64_t v84 = STACK[0xAE8];
  unint64_t v85 = STACK[0xAE0];
  unint64_t v86 = STACK[0xAD0];
  int v87 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v41) ^ 0x12u)) ^ 0x18A85BE ^ *(_DWORD *)(STACK[0xAE0]
                                                                                       + 4LL * (HIBYTE(v80) ^ 0x97));
  unsigned int v88 = *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v79) ^ 0x5Au)) ^ 0xAE65CC52;
  int v89 = (v88 & v87) - ((2 * (v88 & v87)) & 0x419CD434);
  unsigned int v90 = ((v88 + v87) ^ 0xA7DBCAB9)
      + ((2 * (v88 + v87)) & 0x4FB79572)
      + ((2 * v89 + 1100796980) ^ 0x41BEB473)
      + ((2 * (2 * v89 + 1100796980)) & 0xFFBB3F70 ^ 0x7CC6D79F);
  unint64_t v91 = STACK[0xAD8];
  unsigned int v92 = *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v81) ^ 0xF9u)) ^ *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v79) ^ 0x21u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v41) ^ 0x58)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v80 ^ 0x51u));
  unsigned int v93 = (v90 + 1 - 2 * ((v90 + 402773249) & 0x2D973746 ^ (v90 + 1) & 2) - 2053567420) ^ *(_DWORD *)(STACK[0xAD8]
                                                                                                  + 4LL * (v81 ^ 0xB8u));
  unsigned int v94 = *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v79) ^ 0x87)) ^ *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v81) ^ 0x39u)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v80) ^ 0xBDu)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * ((v83 ^ 0xAD) + ((2 * v83) & 0x5A) + 83));
  unsigned int v95 = *(_DWORD *)(STACK[0xAE8]
                  + 4LL
                  * (((BYTE2(v80) ^ 0x219CB798 | 0x6A18294A) - (BYTE2(v80) ^ 0x219CB798 | 0x95E7D6B5) - 1779968331) ^ 0x4B849E13)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v41) ^ 0x16u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v81) ^ 0xF5)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * ((v40 ^ LOBYTE(STACK[0x540]) ^ v35 ^ v31 ^ (v71 - ((2 * v71) & 0x5C) + 46)) ^ 0xCFu));
  int v96 = ((v95 >> 8) & 0xD6) + (BYTE1(v95) ^ 0xF6) - ((BYTE1(v95) ^ 0xF6) & 0xD6) - 2024524544;
  unsigned int v97 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v92) ^ 0xE2u)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v94) ^ 0x9Fu)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * ((*(_BYTE *)(STACK[0xAE8] + 4LL * (((BYTE2(v80) ^ 0x219CB798 | 0x6A18294A) - (BYTE2(v80) ^ 0x219CB798 | 0x95E7D6B5) - 1779968331) ^ 0x4B849E13)) ^ *(_BYTE *)(STACK[0xAD0] + 4LL * (BYTE1(v41) ^ 0x16u)) ^ *(_BYTE *)(STACK[0xAE0] + 4LL * (HIBYTE(v81) ^ 0xF5)) ^ *(_BYTE *)(STACK[0xAD8] + 4LL * (v79 ^ 0xCFu))) ^ 0x11u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v93) ^ 0xCD));
  unsigned int v98 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v94) ^ 0x5Fu)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v92) ^ 0x31)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (((v96 & 0x80103153 ^ 0x4020C801) + (v96 ^ 0x83D23556) - ((v96 ^ 0x83D23556) & 0x60153)) ^ 0xC4B0F95C)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v93 ^ 0x4Eu));
  unsigned int v99 = *(_DWORD *)(STACK[0xAE8] + 4LL * BYTE2(v95)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v94) ^ 0xA9)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v92 ^ 0x44u)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v93) ^ 0xE7u));
  unsigned int v100 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v93) ^ 0xD5u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v95) ^ 0x88)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v92) ^ 0xF1u)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v94 ^ 0xAu));
  unsigned int v101 = *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v98) ^ 0x34)) ^ *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v99) ^ 8u)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v100) ^ 0x44u)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v97 ^ 0xD9u));
  unsigned int v102 = *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v97) ^ 0x97)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v99) ^ 0x4Au)) ^ *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v98) ^ 0x6Cu)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v100 ^ 0xC2u));
  int v103 = ((2 * v102) ^ 0x2476EE88) + 151628 - ((2 * ((2 * v102) ^ 0x2476EE88)) & 0xBAA4) + 3335;
  unsigned int v104 = *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v97) ^ 0x24u)) ^ *(_DWORD *)(STACK[0xAD8]
                                                                            + 4LL * (v98 ^ 0xD9u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v99) ^ 0xF)) ^ *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v100) ^ 0x33u));
  unsigned int v105 = (((v102 ^ 0xF51C7765) + 61136) ^ 0xB7BDEBDD)
       + ((2 * ((v102 ^ 0xF51C7765) + 61136)) & 0x6F7BD7BA)
       + (v103 & 0x1DDA0 ^ 0x27655D81)
       + ((2 * v103) & 0x1BA40 ^ 0xFFFF45FF)
       + 551359395;
  unsigned int v106 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v97) ^ 0xB5u)) ^ *(_DWORD *)(STACK[0xAD8]
                                                                            + 4LL * (v99 ^ 0x97u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v100) ^ 0x15)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v98) ^ 0xA2u));
  unsigned int v107 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v104) ^ 0x78u)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL
                                                                                            * (BYTE1(v106) ^ 0xACu)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v101) ^ 0x53)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v102 ^ 0x65u));
  unsigned int v108 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v101) ^ 0x4Bu)) ^ *(_DWORD *)(STACK[0xAD8]
                                                                             + 4LL * (v106 ^ 0xADu)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v104) ^ 0x9Fu)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v102) ^ 0xF5));
  unsigned int v109 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v106) ^ 0x70u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL
                                                                                            * (HIBYTE(v104) ^ 0xCE)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v102) ^ 0x77u)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v101 ^ 0xF8u));
  unsigned int v110 = *(_DWORD *)(STACK[0xAE8] + 4LL * ((BYTE2(v105) - ((v105 >> 15) & 0xC6) - 29) ^ 0xE3u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v106) ^ 0x49)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v101) ^ 0xA2u)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v104 ^ 0x2Bu));
  int v111 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v107) ^ 0x5Bu)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL
                                                                                            * (HIBYTE(v108) ^ 0xB8)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v109) ^ 0xD4u)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * ((*(_BYTE *)(STACK[0xAE8] + 4LL * ((BYTE2(v105) - ((v105 >> 15) & 0xC6) - 29) ^ 0xE3u)) ^ *(_BYTE *)(STACK[0xAE0] + 4LL * (HIBYTE(v106) ^ 0x49)) ^ *(_BYTE *)(STACK[0xAD0] + 4LL * (BYTE1(v101) ^ 0xA2u)) ^ *(_BYTE *)(STACK[0xAD8] + 4LL * (v104 ^ 0x2Bu))) ^ 0x94u));
  unsigned int v112 = ((2 * v111) & 0xEFDE7F76 ^ 0x4C502420) + (v111 ^ 0x59C72DAF);
  unsigned int v113 = *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v109) ^ 0x18u)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL
                                                                                            * (HIBYTE(v107) ^ 0x79)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v108 ^ 0xAEu)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v110) ^ 0xFu));
  unsigned int v114 = *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v109) ^ 0x25)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL
                                                                                            * (BYTE1(v108) ^ 0xE9u)) ^ *(_DWORD *)(STACK[0xAD8] + 4LL * (v107 ^ 0x12u)) ^ *(_DWORD *)(STACK[0xAE8] + 4LL * (BYTE2(v110) ^ 0x53u));
  unsigned int v115 = v112 - 2012168123;
  int v116 = HIWORD(v115) - ((v115 >> 15) & 0x56);
  unsigned int v117 = *(_DWORD *)(STACK[0xAD8] + 4LL * (v109 ^ 0x7Du)) ^ *(_DWORD *)(STACK[0xAE8]
                                                                                       + 4LL * (BYTE2(v108) ^ 0x2Bu)) ^ *(_DWORD *)(STACK[0xAD0] + 4LL * (BYTE1(v107) ^ 0x3Cu)) ^ *(_DWORD *)(STACK[0xAE0] + 4LL * (HIBYTE(v110) ^ 0xFE));
  if (v112 - 395043541 >= 0x9F9CA31A) {
    char v118 = -76;
  }
  else {
    char v118 = -50;
  }
  if (v115 >= 0x9F9CA31A) {
    char v119 = 48;
  }
  else {
    char v119 = 22;
  }
  unsigned int v120 = ((((v114 ^ 0x726BFA7B) >> (BYTE2(v110) & 0x10 ^ 0x10))
         - ((2 * ((v114 ^ 0x726BFA7B) >> (BYTE2(v110) & 0x10 ^ 0x10))) & 0x5A2896DC)
         + 756304750) ^ 0x2D144B6E) >> (BYTE2(v110) & 0x10);
  char v121 = v112 + v119;
  if (v115 < 0x9F9CA31A) {
    char v118 = -24;
  }
  int v122 = *(_DWORD *)(v86 + 4LL * (BYTE1(v117) ^ 0x82u)) ^ *(_DWORD *)(v85 + 4LL * (HIBYTE(v113) ^ 0xC5)) ^ *(_DWORD *)(v84 + 4LL * v120) ^ *(_DWORD *)(v91 + 4LL * (v121 + v118 + 71));
  unsigned int v123 = *(_DWORD *)(v84 + 4LL * (BYTE2(v113) ^ 0x48u)) ^ *(_DWORD *)(v91 + 4LL * (v117 ^ 0xABu)) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v114) ^ 0xFAu)) ^ *(_DWORD *)(v85 + 4LL * HIBYTE(v115));
  int v124 = *(_DWORD *)(v84 + 4LL * (BYTE2(v117) ^ 3u)) ^ *(_DWORD *)(v85 + 4LL * (HIBYTE(v114) ^ 0x72)) ^ *(_DWORD *)(v91 + 4LL * (v113 ^ 0x42u)) ^ *(_DWORD *)(v86 + 4LL * ((BYTE1(v115) - ((v115 >> 7) & 0x52) + 41) ^ 0x29u));
  char v125 = (v56 & 0x18 ^ 8) - ((2 * (v56 & 0x18 ^ 8)) & 0x10);
  int v126 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v117) ^ 0x1E));
  unsigned int v127 = (((2 * (v122 & 0xFFFFFFDF ^ 0xBE663183)) | 0x4A8F27AA) - (v122 & 0xFFFFFFDF ^ 0xBE663183) - 625447893) ^ (v122 & 0x20 | 0x8DE8AD91);
  unsigned int v128 = *(_DWORD *)(v84 + 4LL * ((v116 - 85) ^ 0xABu)) ^ v126 ^ *(_DWORD *)(v91
                                                                                            + 4LL
                                                                                            * (v114 ^ 0x7Bu)) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v113) ^ 0x59u));
  unsigned int v129 = (v124 ^ 0xAC2D59EF) >> (((v125 - 119) ^ 0x9F) & 0xF8);
  unsigned int v130 = ((v129 - ((2 * v129) & 0xF6DF3E1E) + 2070912783) ^ 0x7B6F9F0F) >> (((v125 - 119) ^ 0x80) & 0xF8);
  unsigned int v131 = *(_DWORD *)(v86 + 4LL * (BYTE1(v124) ^ 0x59u)) ^ *(_DWORD *)(v85 + 4LL * (HIBYTE(v123) ^ 0x1B)) ^ *(_DWORD *)(v91 + 4LL * v128) ^ *(_DWORD *)(v84 + 4LL * (BYTE2(v127) ^ 0xB4u));
  unsigned int v132 = (v130 - ((2 * v130) & 0x2A) - 107) ^ 0x95;
  unsigned int v133 = *(_DWORD *)(v84 + 4LL * (BYTE2(v124) ^ 0x2Du)) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v128) ^ 0xACu)) ^ *(_DWORD *)(v91 + 4LL * (v123 ^ 0xD6u)) ^ *(_DWORD *)(v85 + 4LL * (HIBYTE(v127) ^ 0x5A));
  unsigned int v134 = *(_DWORD *)(v91 + 4LL * (v127 ^ 0x17u)) ^ *(_DWORD *)(v84 + 4LL * (BYTE2(v128) ^ 0x15u)) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v123) ^ 0xFAu)) ^ *(_DWORD *)(v85 + 4LL * v132);
  unsigned int v135 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v128) ^ 0x20)) ^ *(_DWORD *)(v91 + 4LL * (v124 ^ 0xEFu)) ^ *(_DWORD *)(v84 + 4LL * (BYTE2(v123) ^ 0xEu)) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v127) ^ 0xDBu));
  unsigned int v136 = ((2 * v134) & 0x212A1820 ^ 0xC2D60798)
       + (v134 & 0x9A958C13 ^ 0x9E947C33)
       + (((v134 ^ 0x55FCAF30) + 1) ^ 0xFF16FEFD)
       + ((2 * ((v134 ^ 0x55FCAF30) + 1)) & 0xFE2DFDFA);
  unsigned int v137 = (v136 - ((2 * v136 + 500425294) & 0xE75C6EB4) - 2103957375) ^ ((v134 & 0x9A958C13 ^ 0xB8C00012)
                                                                      - ((2 * (v134 & 0x9A958C13 ^ 0xB8C00012)) & 0x402A1826)
                                                                      - 518168937);
  unsigned int v138 = BYTE2(v131) ^ 0x39;
  unsigned int v139 = ((v136 - ((2 * v136 + 78) & 0xB4) - 127) ^ ((v134 & 0x13 ^ 0x12)
                                                                    - ((2 * (v134 & 0x13 ^ 0x12)) & 0x26)
                                                                    - 105)) ^ 0xDC;
  int v140 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v131) ^ 0x2F));
  int v141 = *(_DWORD *)(v86
                   + 4LL
                   * (((unsigned __int16)((v136 - ((2 * v136 - 7602) & 0x6EB4) + 10369) ^ ((v134 & 0x8C13 ^ 0x12) - ((2 * (v134 & 0x8C13 ^ 0x12)) & 0x1826) + 24215)) >> 8) ^ 0x69u));
  int v142 = *(_DWORD *)(v91 + 4LL * (v135 ^ 0x67u));
  unsigned int v143 = *(_DWORD *)(v84 + 4LL * (BYTE2(v133) ^ 0x7Fu)) ^ v140 ^ v142 ^ v141;
  int v144 = *(_DWORD *)(v84 + 4LL * (BYTE2(v137) ^ 0x72u));
  int v145 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v137) ^ 0x20));
  int v146 = *(_DWORD *)(v86 + 4LL * (BYTE1(v135) ^ 0xF8u));
  int v147 = *(_DWORD *)(v91 + 4LL * (v131 ^ 0x1Cu));
  int v148 = *(_DWORD *)(v86 + 4LL * (BYTE1(v131) ^ 0xAEu));
  unsigned int v149 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v133) ^ 0xF1)) ^ v146 ^ v147 ^ v144;
  int v150 = *(_DWORD *)(v84 + 4LL * (BYTE2(v135) ^ 0x47u));
  unsigned int v151 = v145 ^ v148 ^ *(_DWORD *)(v91 + 4LL * (v133 ^ 0x88u)) ^ v150 ^ 0x923B7744;
  unsigned int v152 = v151 - ((2 * v151) & 0x96877A80) - 884753088;
  int v153 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v135) ^ 0x7D)) ^ *(_DWORD *)(v84 + 4LL * v138);
  unsigned int v154 = v153 ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v133) ^ 0xDu)) ^ *(_DWORD *)(v91 + 4LL * v139);
  int v155 = (v133 ^ 0xE80F277) + 1;
  v133 ^= 0x923B7744;
  unsigned int v156 = v133 + (v155 ^ 0xDF99D6DD) + ((2 * v155) & 0xBF33ADBA) + 543566115;
  unsigned int v157 = ((v156 + 1391615425 + (~(2 * v156) | 0x5A1B447F)) ^ 0xAD0DA238) + v133;
  unsigned int v158 = v157 - ((2 * v157) & 0x1FD1EAB0) - 1880558248;
  unsigned int v159 = v140 ^ v142 ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v134) ^ 0x23u)) ^ *(_DWORD *)(v84 + 4LL * (BYTE2(v158) ^ 0xE8u));
  unsigned int v160 = *(_DWORD *)(v84 + 4LL * (BYTE2(v134) ^ 0x69u)) ^ v146 ^ v147 ^ *(_DWORD *)(v85 + 4LL * (HIBYTE(v158) ^ 0x8F));
  unsigned int v161 = v153 ^ *(_DWORD *)(v91 + 4LL * (v134 ^ 0x23u)) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v158) ^ 0xF5u));
  int v162 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v134) ^ 0xCF)) ^ v150 ^ v148 ^ *(_DWORD *)(v91
                                                                                  + 4LL
                                                                                  * (v158 ^ 0x58u));
  unsigned int v163 = v162 ^ 0x923B7744;
  if ((v162 & 0x40000) != 0) {
    int v164 = -262144;
  }
  else {
    int v164 = 0x40000;
  }
  unsigned int v165 = v164 + v163 - ((2 * (v164 + v163)) & 0x312952AA) + 412395861;
  unsigned int v166 = v154 ^ 0x5A;
  unsigned __int8 v167 = v143;
  int v168 = *(_DWORD *)(v84 + 4LL * (BYTE2(v149) ^ 0x15u));
  int v169 = *(_DWORD *)(v84 + 4LL * (BYTE2(v152) ^ 0x3Fu));
  LODWORD(STACK[0x658]) = *(_DWORD *)(v84 + 4LL * (BYTE2(v154) ^ 0x3Bu));
  LODWORD(STACK[0x640]) = *(_DWORD *)(v84 + 4LL * (BYTE2(v143) ^ 0x51u));
  int v170 = *(_DWORD *)(v84 + 4LL * (BYTE2(v165) ^ 0xECu));
  int v171 = *(_DWORD *)(v84 + 4LL * (BYTE2(v161) ^ 0x3Bu));
  int v172 = *(_DWORD *)(v84 + 4LL * (BYTE2(v159) ^ 0x51u));
  int v173 = *(_DWORD *)(v91 + 4LL * (v161 ^ 0x5Au)) ^ *(_DWORD *)(v84 + 4LL * (BYTE2(v160) ^ 0x15u)) ^ *(_DWORD *)(v85 + 4LL * (HIBYTE(v159) ^ 0x35)) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v165) ^ 0x94u));
  unsigned int v174 = HIBYTE(v154) ^ 0xE4;
  int v175 = *(_DWORD *)(v86 + 4LL * (BYTE1(v154) ^ 0xC5u));
  unsigned int v176 = v152;
  int v177 = *(_DWORD *)(v86 + 4LL * (BYTE1(v152) ^ 0x80u));
  LODWORD(STACK[0x650]) = *(_DWORD *)(v86 + 4LL * (BYTE1(v143) ^ 0x64u));
  int v178 = *(_DWORD *)(v86 + 4LL * (BYTE1(v149) ^ 0x1Eu));
  unsigned int v179 = HIBYTE(v161) ^ 0xE4;
  int v180 = *(_DWORD *)(v86 + 4LL * (BYTE1(v161) ^ 0xC5u));
  int v181 = *(_DWORD *)(v86 + 4LL * (BYTE1(v159) ^ 0x64u));
  int v182 = *(_DWORD *)(v86 + 4LL * (BYTE1(v160) ^ 0x1Eu));
  int v183 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v143) ^ 0x35));
  int v184 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v149) ^ 0x56));
  int v185 = *(_DWORD *)(v85 + 4LL * v174);
  int v186 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v176) ^ 0x52));
  int v187 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v165) ^ 0x81));
  int v188 = *(_DWORD *)(v85 + 4LL * v179);
  int v189 = *(_DWORD *)(v85 + 4LL * (HIBYTE(v160) ^ 0x56)) ^ v180;
  unsigned int v190 = v159 ^ 0xD2;
  int v191 = (v183 ^ v168 ^ *(_DWORD *)(v91 + 4LL * v166) ^ 0x621DCA2 ^ v177) - 1202274211;
  unsigned int v192 = v191 ^ 0xF1DF566B;
  unsigned int v193 = (2 * v191) & 0xE3BEACD6;
  int v194 = v181 ^ v171 ^ *(_DWORD *)(v91 + 4LL * (v160 ^ 0x1Eu)) ^ v187;
  int v195 = v189 ^ *(_DWORD *)(v91 + 4LL * v190) ^ v170;
  int v196 = *(_DWORD *)(v91 + 4LL * (v149 ^ 0x1Eu));
  unsigned int v197 = v176;
  int v198 = *(_DWORD *)(v91 + 4LL * (v176 ^ 0x7Du));
  int v199 = *(_DWORD *)(v91 + 4LL * (v165 ^ 0x68u));
  unsigned int v200 = v193
       + v192
       + (v173 ^ 0xF9DE235D)
       - ((2 * (v193 + v192 + (v173 ^ 0xF9DE235D)) + 474043180) & 0xCD81BC50)
       - 186546242;
  unsigned int v201 = (v184 ^ v175 ^ *(_DWORD *)(v91 + 4LL * (v167 ^ 0xD2u)) ^ 0xC20FB5F8 ^ v169) + 758658806;
  int v202 = v182 ^ v172 ^ v188 ^ v199;
  int v203 = (v185 ^ LODWORD(STACK[0x640]) ^ v178 ^ 0x2D733ADB ^ v198) - 907041214;
  unsigned int v204 = ((2 * v203) & 0x77FC7BAE) + (v203 ^ 0x3BFE3DD7) + (v202 ^ 0xD28CC524);
  int v205 = (v196 ^ LODWORD(STACK[0x658]) ^ LODWORD(STACK[0x650]) ^ 0x5B7388C5 ^ v186) + 1794750297;
  unsigned int v206 = ((2 * v205) & 0x76FFE1EE) + (v205 ^ 0xBB7FF0F7) + (v194 ^ 0xA48C773A);
  unsigned int v207 = (v206 - ((2 * v206 + 151002644) & 0x48D63642) + 1760242219) ^ 0x931257AA;
  unsigned int v208 = ((-1397497827 * v207) ^ 0xFFEBEFFD) + ((1499971642 * v207) & 0xFFD7DFFA);
  unsigned int v209 = (((2 * v201) & 0xFD7D77E2)
        + (v201 ^ 0x7EBEBBF1)
        + (v195 ^ 0x3DF04A07)
        - 2
        * ((((2 * v201) & 0xFD7D77E2) + (v201 ^ 0x7EBEBBF1) + (v195 ^ 0x3DF04A07) + 21054480) & 0x6C4A1C2D ^ (((2 * v201) & 0xFD7D77E2) + (v201 ^ 0x7EBEBBF1) + (v195 ^ 0x3DF04A07)) & 4)
        - 309632967) ^ 0x50BB3C78;
  int v210 = ((1339632071 * v209) ^ 0x39DFFFFE) + ((531780494 * v209) & 0x73BFFFFC);
  unsigned int v211 = (v204 - 121452476 - ((2 * v204 + 134448212) & 0x6982007E) - 1499) ^ 0xA290FAA8;
  unsigned int v212 = ((-193647233 * v211) ^ 0x5FF79FF3) + ((-387294466 * v211) & 0xBFEF3FE6);
  unsigned int v213 = ((-619630751 * (v200 ^ 0x202FA21A)) ^ 0xEFCF6FFE) + ((-1239261502 * (v200 ^ 0x202FA21A)) & 0xDF9EDFFC) + v210;
  unsigned int v214 = v212 - v213 - 870454676 - ((2 * (v212 - v213 - 870454676) - 80491718) & 0xE282DA2A) - 287616334;
  unsigned int v215 = v210
       + ((v208 + 1312335 + (v214 ^ 0xF1416D15) + 2484) ^ 0x588400D0)
       - ((2 * (v208 + 1312335 + (v214 ^ 0xF1416D15) + 2484)) & 0x4EF7FE5E)
       + 1;
  unsigned int v216 = v212 + v208 - ((2 * (v212 + v208) + 1077469216) & 0x90086780) + 1746969552;
  int v217 = (v216 ^ 0x37FBCC3F) + v213 - ((2 * ((v216 ^ 0x37FBCC3F) + v213) + 748757002) & 0x4DEC8086) + 2101792840;
  int v218 = (v215 - ((2 * v215 + 1530396258) & 0x51E17A4A) - 1769161642) ^ v214;
  unsigned int v219 = (v173 ^ 0x621DCA2) + (v217 ^ 0x80B86F8C ^ v218) + 1;
  int v220 = v217 ^ v214;
  int v221 = (v217 ^ v214 ^ 0x57B72D56) + (v216 ^ 0x6EF27383 ^ v217);
  int v222 = v221 - ((2 * v221) & 0x7FE8994C);
  unsigned int v223 = ((2 * v219) & 0xEBFAEDFE)
       + (v219 ^ 0x75FD76FF)
       - ((2 * (((2 * v219) & 0xEBFAEDFE) + (v219 ^ 0x75FD76FF)) - 1551204038) & 0xFB1BF444)
       + 1330854591;
  unsigned int v224 = ((2 * ((v195 ^ 0xC20FB5F8) + (v220 ^ 0xA848D2A9) + 1)) & 0xFFBDADFE)
       + (((v195 ^ 0xC20FB5F8) + (v220 ^ 0xA848D2A9) + 1) ^ 0xFFDED6FF);
  unsigned int v225 = v224 - 2020846856 + (~(2 * v224 + 1067733826) | 0xB08BAD53);
  int v226 = (v222 - 1074508634) ^ 0x400BB359;
  unsigned int v227 = ((2 * ((v194 ^ 0x5B7388C5) + v226 + 1)) & 0xBDDFDDFE) + (((v194 ^ 0x5B7388C5) + v226 + 1) ^ 0x5EEFEEFF);
  unsigned int v228 = v218 ^ 0xD9B1D030;
  unsigned int v229 = ((v222 - 1074508634) ^ 0xBFF44CA6) & (v218 ^ 0xD9B1D030);
  unsigned int v230 = (v218 ^ 0xD9B1D030) + ((v222 - 1074508634) ^ 0x99BA6369 ^ v218) + 1;
  unsigned int v231 = v227 - ((2 * v227 + 733042046) & 0x37DC1A84) + 1908848641;
  unsigned int v232 = ((v222 - 1074508634) ^ (v226 - ((2 * v226 + 2) & 0x2A036938) + 352433309) ^ 0xC3899B61 ^ (v230
                                                                                                 - ((2 * v230) & 0xD2F8C6B6)
                                                                                                 + 1769759579))
       + v228;
  int v233 = 2 * (v229 - ((2 * v229) & 0x3409F99C)) + 873068956;
  unsigned int v234 = (v202 ^ 0x2D733ADB)
       + (v233 ^ 0x152969BD)
       + ((2 * v233) & 0xBDBEDFBC ^ 0xD7ED2CC7)
       + (v232 ^ 0x30D09908)
       - ((2 * v232) & 0x9E5ECDEE)
       - 1374759208;
  unsigned int v235 = ((2 * v234) & 0xFD73FBCE)
       + (v234 ^ 0xFEB9FDE7)
       + 334459460
       - ((2 * (((2 * v234) & 0xFD73FBCE) + (v234 ^ 0xFEB9FDE7)) - 1803481188) & 0x935DEDBE)
       + 3177;
  int v236 = *(_DWORD *)(STACK[0xAB0] + 4LL * (HIBYTE(v231) ^ 0x9B));
  unsigned int v237 = v236 ^ 0xA67DE88C;
  int v238 = *(_DWORD *)(STACK[0xAA8] + 4LL * (BYTE2(v235) ^ 0xAEu));
  unsigned int v239 = (v236 ^ 0xA67DE88C) + (v236 ^ 0x8B08F6AE ^ v238) + 1;
  unsigned int v240 = (v238 ^ ((v238 ^ 0x2D751E22) - ((2 * (v238 ^ 0x2D751E22) + 2) & 0xEF7F437C) + 2009047487) ^ (v239 - ((2 * v239) & 0x67E2996A) + 871451829) ^ 0x96C40CD6)
       + v237;
  int v241 = LODWORD(STACK[0x460]) ^ LODWORD(STACK[0x4B0]);
  int v242 = v241 ^ LODWORD(STACK[0x4D0]);
  unsigned int v243 = v242 ^ *(_DWORD *)(STACK[0xAA8] + 4LL * (BYTE2(v225) ^ 0xBAu)) ^ *(_DWORD *)(STACK[0xAF0]
                                                                                    + 4LL * (BYTE1(v231) ^ 0xDu)) ^ *(_DWORD *)(STACK[0xAB0] + 4LL * (HIBYTE(v223) ^ 0x7D)) ^ *(_DWORD *)(STACK[0xAC0] + 4LL * ((((2 * v234) & 0xCE) + (v234 ^ 0xE7) + 68 - ((2 * (((2 * v234) & 0xCE) + (v234 ^ 0xE7)) - 100) & 0xBE) + 105) ^ 0xDFu));
  int v244 = v241 ^ *(_DWORD *)(STACK[0xAA8] + 4LL * (BYTE2(v231) ^ 0xEEu)) ^ *(_DWORD *)(STACK[0xAC0]
                                                                                    + 4LL
                                                                                    * ((2 * v219 + ~(_BYTE)v219 - ((2 * (2 * v219 + ~(_BYTE)v219) + 58) & 0x44) - 65) ^ 0x22u)) ^ *(_DWORD *)(STACK[0xAB0] + 4LL * (HIBYTE(v225) ^ 0xA7)) ^ *(_DWORD *)(STACK[0xAF0] + 4LL * (BYTE1(v235) ^ 0xF6u));
  unsigned int v245 = v242 ^ *(_DWORD *)(STACK[0xAC0] + 4LL * (v225 ^ 0x56u)) ^ *(_DWORD *)(STACK[0xAF0]
                                                                                              + 4LL
                                                                                              * (BYTE1(v223) ^ 0xFAu)) ^ (v240 - ((2 * v240) & 0xEF9DF36C) + 2010053046);
  unsigned int v246 = v242 ^ *(_DWORD *)(STACK[0xAC0] + 4LL * (v231 ^ 0x42u)) ^ *(_DWORD *)(STACK[0xAA8]
                                                                                              + 4LL
                                                                                              * (BYTE2(v223) ^ 0x8Du)) ^ *(_DWORD *)(STACK[0xAF0] + 4LL * (BYTE1(v225) ^ 0x29u)) ^ *(_DWORD *)(STACK[0xAB0] + 4LL * (HIBYTE(v235) ^ 0x49));
  HIDWORD(v247) = LODWORD(STACK[0x4D0]) ^ 0xD4086F;
  LODWORD(v247) = LODWORD(STACK[0x4D0]) ^ 0x43000000;
  int v248 = (v247 >> 24) - ((2 * (v247 >> 24)) & 0x49008322);
  HIDWORD(v247) = v244 ^ 0x707F83;
  LODWORD(v247) = v244 ^ 0xFA000000;
  int v249 = ((v247 >> 24) - 1968264890 + (~(2 * (v247 >> 24)) | 0xEAA2AD75)) ^ (v248 - 1535098479);
  HIDWORD(v247) = v249 ^ 0x2B;
  LODWORD(v247) = v249 ^ 0x7E938C00;
  int v250 = (v247 >> 8) - ((2 * (v247 >> 8)) & 0x61A4E618) + 819098380;
  unsigned int v251 = (v250 & 0xC080B2 ^ 0x450409F3) + (v250 & 0x311405 ^ 0x9021120C);
  else {
    int v252 = -680223668;
  }
  unsigned int v253 = v250 ^ v252;
  unsigned int v254 = (((v250 ^ v252) & 0xFF0E6B48 ^ 0x82064240)
        - ((2 * ((v250 ^ v252) & 0xFF0E6B48 ^ 0x82064240)) & 0xB2048480)
        - 654162364) ^ 0xD3625640;
  unsigned int v255 = ((v254 | 0xDE748F6A) - (v254 | 0x218B7095) + 562786453) ^ 0x4E149F2E | (v251 - 1) ^ 0xD5A59FDE;
  unsigned int v256 = v255 + 1016232655 + (~(2 * v255) | 0x86DB0A63);
  int v257 = byte_100754840[BYTE1(v246) ^ 0xCLL];
  int v258 = v257 - ((2 * v257 + 18) & 0xFFFFFFA6);
  LOBYTE(v257) = (((2 * ((v258 + 92) & 0xBE ^ 0x36)) & 0x74) - ((v258 + 92) & 0xBE ^ 0x36) + 69) ^ 0x45;
  int v259 = ((v246 ^ 0x59) - ((2 * (v246 ^ 0x59)) & 0x1BC) + 1258345182) ^ 0x6F94D4EF;
  LOBYTE(v259) = byte_10072ECC0[(((2 * v259) | 0x712C1466u) - v259 + 1198126541) ^ 0x9C020CA9LL];
  LOBYTE(STACK[0xB8E]) = ((((v258 + 92) >> 2) & 0x1D ^ 4) - (((v258 + 92) >> 1) & 0x20) - 80) ^ (((-93 - v258) | 0xBE) + ((2 * (((-93 - v258) & 0x41 | 2) ^ ((-93 - v258) | 0x7E))) ^ 0x2F) + 85) ^ 0x8E ^ ((v257 | 0xDE) - (v257 | 0x21) + 33);
  LOBYTE(STACK[0xB8F]) = v259 ^ 0x1F;
  uint64_t v260 = HIBYTE(v245);
  int v261 = 2 * (v260 ^ 0x47);
  int v262 = (v260 ^ 0x47) - (v261 & 0x94);
  unsigned int v263 = ((((v260 ^ 0x47) - (v261 & 0x55555555)) << 24) - 1442840576) ^ 0xAA000000;
  int v264 = v263 - ((2 * v263) & 0x3E000000) - 1621892273;
  LOBYTE(v261) = byte_10072FBE0[HIBYTE(v246) ^ 2LL];
  LOBYTE(STACK[0xB8C]) = (v261 + (~(2 * v261 + 60) | 0xD5) + 84) ^ 0xA4;
  unsigned int v265 = ((((v262 << 24) - 894220469) ^ 0xCA000000) - 15) ^ 0x3C298FE5;
  int v266 = ((v264 ^ 0x7E980888) & v265) - ((2 * ((v264 ^ 0x7E980888) & v265)) & 0x5735DA7A);
  unsigned int v267 = (((v264 ^ 0x7EDC288E) + v265) ^ 0xFF7FFEF2)
       + ((2 * ((v264 ^ 0x7EDC288E) + v265)) & 0xFEFFFDE4)
       + ((2 * v266 - 684336518) ^ 0x3BF6DA3F)
       + 331153610
       + ((2 * (2 * v266 - 684336518)) & 0x2679FF74 ^ 0xD9964B8B);
  unsigned int v268 = ((v267 >> 22) - 1713205148 - ((v267 >> 21) & 0x12A) + 49) ^ 0x99E29064;
  unsigned int v269 = (((v268 >> 2) - ((v268 >> 1) & 0xFA) + 125) ^ 0xFFFFFF98) + 1;
  LOBYTE(v260) = (v269 ^ 0x7B) + byte_10072FBE0[v260 ^ 0x62] + ((2 * v269) & 0xF7);
  int v270 = (HIWORD(v245) ^ 0x9ABB) + (HIWORD(v245) ^ 0x9AA4);
  LOBYTE(STACK[0xB88]) = (v260 + (~(2 * v260 + 60) | 0xD3) - 43) ^ 0xDB;
  unsigned int v271 = (((v270 ^ 0x7F) + 2 * v270 - 127) ^ 0x7E)
       + byte_100752100[((HIWORD(v245) & 0x92 ^ 0x61127203) + (HIWORD(v245) & 0x6D ^ 0x80A8040D) - 1) ^ 0xE1BA761FLL]
       + 4 * (((v270 ^ 0x7Fu) + 2 * v270 - 127) >> 1);
  LOBYTE(STACK[0xB89]) = (v271 - ((2 * v271 + 78) & 0xA4) + 121) ^ 0xE3;
  LOBYTE(v261) = byte_10072FBE0[HIBYTE(v253) ^ 0xD1LL];
  LOBYTE(v271) = v261 - ((2 * v261 + 28) & 0x1A) + 75;
  LOBYTE(STACK[0xB84]) = ((-58 - v261 - ((4 - 2 * v261) & 8)) ^ v271 ^ 0xB4 ^ ((v271 ^ 0x10)
                                                                             - ((2 * (v271 ^ 0x10) + 70) & 0x7A)
                                                                             + 32))
                       + 98;
  unsigned int v272 = ((BYTE2(v246) ^ 0x5C | 0x80FFD192) - (BYTE2(v246) ^ 0x5C | 0x7F002E6D) + 2130718317) ^ 0x80FFD125;
  int v273 = (HIWORD(v246) ^ 0xB940) + (HIWORD(v246) ^ 0xB95F);
  LOBYTE(v273) = 2 * (v273 & 0x3F) + (v273 ^ 0xBF) + 65;
  LOBYTE(v273) = byte_100752100[v272] + (v273 ^ 0x5E) + ((2 * v273) & 0xBC);
  LOBYTE(STACK[0xB8D]) = (v273 + (~(2 * v273 - 114) | 0x63) - 106) ^ 0xE3;
  LOBYTE(STACK[0xB87]) = byte_10072ECC0[(((2 * (v256 ^ 0x830286E7)) & 0x401043E)
  int v274 = (BYTE1(v245) ^ 0xB5) - ((2 * (BYTE1(v245) ^ 0xB5)) & 0x70) + 1441938232;
  LOBYTE(v274) = byte_100754840[((v274 ^ 0x7471D918) - (v274 & 0x10220A0) + (v274 & 0x41000A0 ^ 0x20000A0u)) ^ 0x2691C225LL];
  LOBYTE(STACK[0xB83]) = byte_10072ECC0[((v243 ^ 0x880913EE | 0xEBDB37FA)
  char v275 = v274 - ((2 * v274 + 18) & 0x34) + 35;
  if ((v197 ^ 0x52000000) >> 24) {
    char v276 = v275 ^ 0x12;
  }
  else {
    char v276 = 116;
  }
  LOBYTE(STACK[0xB8A]) = v275 ^ ((((v276 & (v275 ^ 0x9A)) + (~(2 * (v276 & (v275 ^ 0x9A))) | 0x65) + 78) & 0xFC) >> 2) ^ 0x58;
  int v277 = (v245 & 0x25) + (v245 ^ 0xAD) - ((v245 ^ 0xAD) & 0x25) + 996175616;
  LOBYTE(STACK[0xB8B]) = byte_10072ECC0[((v277 & 0x2A205ED4 ^ 0x8102D0)
                                       + (v277 ^ 0x3F707C05)
                                       - ((v277 ^ 0x3F707C05) & 0x4001ED4u)) ^ 0x2AB14DBELL] ^ 0xB9;
  int v278 = (HIWORD(v243) ^ 0xD007) + (HIWORD(v243) ^ 0xD018);
  int v279 = 2 * (v278 & 0x3F) + (v278 ^ 0x3F) - 63;
  unsigned int v280 = (v279 ^ 0x77)
       + ((2 * v279) & 0xFFFFFFEF)
       + byte_100752100[(((v243 >> 15) & 0x130) + (BYTE2(v243) ^ 0xFFFFFFFC) + 447656808) ^ 0x1AAEB3D7];
  HIDWORD(v281) = v280 - 26;
  LODWORD(v281) = (v280 << 24) + 771751936;
  int v282 = (v281 >> 27) - ((2 * (v281 >> 27)) & 0x76) - 69;
  HIDWORD(v281) = v282 ^ 0x10;
  LODWORD(v281) = (v282 ^ 0x20) << 24;
  LOBYTE(STACK[0xB81]) = ((v281 >> 29) - ((2 * (v281 >> 29)) & 0x84) + 66) ^ 0x48;
  int v283 = (((2 * (BYTE1(v243) ^ 0x32)) & 0x148) - (BYTE1(v243) ^ 0x32) + 188012635) ^ 0xF24405F;
  LOBYTE(v283) = byte_100754840[(v283 - ((2 * v283) & 0x82020EAu) + 1866010741) ^ 0x6B29886BLL];
  LOBYTE(v283) = v283 - ((2 * v283 + 18) & 0xE0) + 121;
  char v284 = (v283 >> 2) & 0x11 ^ 0x92 | (v283 >> 2) & 0xC;
  LOBYTE(STACK[0xB82]) = v283 ^ (((((v283 >> 2) & 0x11 ^ 0x92) & 0xFC | (v283 >> 2) & 0xC) ^ 0x18)
                               + (v284 ^ 0xE7)
                               - ((v284 ^ 0xE7) & 0x3C)) ^ 0xC3;
  int v285 = ((BYTE1(v256) ^ 0x61B15528) + ((v256 >> 8) & 0x65 ^ 0xE002A45) - ((BYTE1(v256) ^ 0x61B15528) & 0x1201165)) ^ 0xC986637;
  int v286 = byte_100754840[((v285 | 0xC22922D8) - (v285 | 0x3DD6DD27) + 1037491495) ^ 0xA0202A2DLL];
  unsigned int v287 = v286 - ((2 * v286 + 18) & 0xFFFFFFE0) + 121;
  unsigned int v288 = (((2 * ((v287 >> 2) & 0x1D ^ 9)) | 0xFFFFFFA4) - ((v287 >> 2) & 0x1D ^ 9) - 82) ^ 0xFFFFFFC7;
  int v289 = ((2 * ((HIWORD(v256) ^ 0x3C41) + (HIWORD(v256) ^ 0x3C5E))) & 0x1C)
       + (((HIWORD(v256) ^ 0x3C41) + (HIWORD(v256) ^ 0x3C5E)) ^ 0x8E);
  LOBYTE(STACK[0xB86]) = v287 ^ 0xC5 ^ (((2 * v288) | 0xA2) - v288 - 81);
  unsigned int v290 = (((2 * (BYTE2(v256) ^ 0x8B)) | 0x8F8A1CD2) - (BYTE2(v256) ^ 0x8B) + 943387031) ^ 0xF5C14769;
  LOBYTE(v290) = v289 + byte_100752100[(((2 * v290) & 0x66481B0) - v290 - 1127366873) ^ 0x8EC9F659LL];
  LOBYTE(STACK[0xB85]) = (v290 - ((2 * v290 + 46) & 0x38) + 51) ^ 0x43;
  char v291 = byte_10072FBE0[HIBYTE(v243) ^ 0x93LL];
  LOBYTE(STACK[0xB80]) = (v291 + (~(2 * v291 + 124) | 0x67) + 11) ^ 0x4F;
  LODWORD(STACK[0xACC]) = 0;
  return sub_1005D1038();
}

uint64_t sub_1005794D8( uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = (((*v12 - ((2 * *v12) & 0x20)) << 8) + 4096) ^ 0x1000;
  unsigned int v14 = (v13 - ((2 * v13) & 0xFFFFB200) + a8) ^ a8 | (v12[1] - ((2 * v12[1]) & 0x60) + v10) ^ v10;
  unsigned int v15 = a3
      + 1073741058
      + ((unsigned __int16)(v14 - ((2 * v14) & 0x35EE) - 25865) ^ 0xEBE791AC)
      + ((2 * ((v14 - ((2 * v14) & 0x35EE) - 25865) ^ 0x9AF7)) & 0x16B6)
      + 595990111;
  BOOL v16 = v15 < v8;
  BOOL v17 = v15 > v9;
  if (v9 < v8 != v16) {
    BOOL v17 = v16;
  }
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1912 * !v17) ^ (v11 - 837))) - 12))();
}

uint64_t sub_100579608(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v8 = 13 * (a4 ^ 0x6B0);
  __int16 v9 = ((v8 ^ 0xF39B)
      + ((*(unsigned __int8 *)(v7 + v5 - 0x5C01ACC5FE0FCFAELL + v6 + 0x5C01ACC5A73EFA1DLL)
  __int16 v10 = *(unsigned __int8 *)(v7 + v5 - 0x5C01ACC5FE0FCFAELL + v6 + 0x5C01ACC5A73EFA1ELL);
  __int16 v11 = (v9 - ((2 * v9) & 0x7400) + v4) ^ v4 | (v10 - ((2 * v10) & 0x14) - 2294) ^ 0xF70A;
  BOOL v12 = (__int16)(v11 - ((2 * v11) & 0x2448) - 28115) < (__int16)(v8 - 29028);
}

uint64_t sub_100579710(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(void *)(a7
                                        + 8LL
                                        * (int)((((((a4 + 728502884) & 0xD493EA79) + 705) ^ (a4 - 210) ^ 0x1F4)
                                               * (v7 == -28118)) ^ (a4 - 210)))
                            - 12LL))();
}

uint64_t sub_10057975C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * (((((v8 - 829) | 0x682) ^ 0x18F) * (v7 == 39655)) ^ v8))
                            - ((v8 - 1943260022) & 0x73D3CEBA)
                            + 1654LL))();
}

uint64_t sub_1005797B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * (v7 + 56)) - 8LL))();
}

void sub_100579830()
{
}

uint64_t sub_100579838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * (((((v8 - 652) | 0x300) ^ 0x790) * (v7 == -28105)) ^ v8))
                            - ((v8 - 640) | 0x30u)
                            + 109LL))();
}

uint64_t sub_100579874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * (((119 * (v7 ^ 0x333) - 1546) * (v8 == 39670)) ^ v7)) - 12LL))();
}

uint64_t sub_1005798AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v11 = (v9 ^ 0x1F4) - 592;
  int v12 = *(unsigned __int8 *)(v10 + (a3 - 1456526854 + v11));
  LODWORD(STACK[0x648]) = v12 + 1148548335 - ((2 * v12) & 0xFFFFFFDF);
  BOOL v13 = v8 < v7;
  unint64_t v14 = (a3 + 5) - 512955774LL + ((unint64_t)((a3 + 5) < 0x56D0D591) << 32);
  int v15 = v13 ^ (v14 < v7);
  BOOL v16 = v14 <= v8;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(a7 + 8LL * ((!v13 * (14 * (v11 ^ 0xE) - 1455)) ^ v11)))();
}

uint64_t sub_1005799C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return sub_1005794D8(a1, a2, v8, a4, a5, a6, a7, a8);
}

void sub_1005799D0()
{
  LODWORD(STACK[0x860]) = STACK[0x648];
  free((void *)(STACK[0x650] - 0x4378B8CC4843E522LL));
  JUMPOUT(0x1005DF978LL);
}

uint64_t sub_1005799E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4 = a4 ^ 0x6FB;
  LODWORD(STACK[0x860]) = STACK[0x648];
  uint64_t v5 = malloc((LODWORD(STACK[0x9B8]) - 448329679));
  STACK[0x8A0] = (unint64_t)v5;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((352 * (((v5 == 0LL) ^ (v4 - 1)) & 1)) ^ (v4 - 570))))();
}

uint64_t sub_1005799F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v15 = v10 < v11;
  *(_BYTE *)(v13 + v9 - 0x7C65EBDE71DF5DDLL) = *((_BYTE *)&STACK[0xB80] + v12 - 0x5223ECBA77EC9A08LL) - 45;
  if (v15 == v14 - 0x70CA68FCB356AC5FLL < v8) {
    BOOL v15 = v14 - 0x70CA68FCB356AC5FLL < v10;
  }
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * (((2 * v15) | (8 * v15)) ^ v7)) - 4LL))();
}

uint64_t sub_100579A94()
{
  LODWORD(STACK[0x580]) = LODWORD(STACK[0x5B8]) ^ 0x369A7E1C;
  LODWORD(STACK[0x498]) = LODWORD(STACK[0x550]) + 1303212602;
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x620]) ^ 0xE5296E40;
  int v1 = *(unsigned __int8 *)(STACK[0x658]
                          + (*(_BYTE *)(STACK[0x658]
                                      + ((*(_BYTE *)(STACK[0x658] + ((*(_BYTE *)(STACK[0x658] + 5) + 12) & 0xF)) + 6) & 0xF)) & 0xF))
     + 14;
  int v2 = ((v1 & 0xF) + (~(2 * v1) | 0xE7) - 35) ^ 0xDC;
  unsigned int v3 = ((2 * v2) & 0x56) + (v2 ^ 0x1F2F9F2B);
  unsigned int v4 = (v0 + 1555170427) & 0xA34DFB5F;
  LODWORD(STACK[0x5E8]) = (v4 + 1477571239) & 0xA7EE0E7F;
  BOOL v5 = v3 < 0x1F2F9F2B || v3 + 1306989744 > 0x6D16B3DC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + (int)((43 * v5) ^ v4)) - 4))( 1537814864LL,  3928587484LL,  2733201174LL);
}

uint64_t sub_10057ABEC()
{
  int v1 = STACK[0x5E0];
  if (LODWORD(STACK[0x640]) != -1965538105) {
    int v1 = STACK[0x5D8];
  }
  LODWORD(STACK[0x368]) = v1;
  LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x460]) ^ LODWORD(STACK[0x3E8]);
  LODWORD(STACK[0x640]) = (LODWORD(STACK[0x5E8]) + 1962892176) & 0x8B00A0FF;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0
                                                                      + (LODWORD(STACK[0x5E8]) ^ (((v0 + 1) > 0xF) << 9)))
                                                            - 12))( 1844608292LL,  1916524612LL,  3875987025LL);
}

#error "10057DEC8: call analysis failed (funcsize=2152)"
void sub_10057DECC()
{
  JUMPOUT(0x10057D454LL);
}

uint64_t sub_10057DED8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = (a5 - 276582046) & 0x107C4E93;
  STACK[0x5E8] = LODWORD(STACK[0x23C]) ^ v73 ^ 0x1Cu;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x228]) ^ LODWORD(STACK[0x5E0]);
  LODWORD(STACK[0x378]) = a70 - a72;
  LODWORD(STACK[0x4E0]) ^= LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x47C]) ^ (a57 - 2 * a59);
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x3E4]) ^ 0x51EEA42A;
  LODWORD(STACK[0x228]) = a55 - a56;
  LODWORD(STACK[0x560]) = a52 - a53;
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x338]) - a54;
  LODWORD(STACK[0x238]) = LODWORD(STACK[0x4A0]) ^ 0x631B314E;
  BOOL v74 = STACK[0x650] > v72 - 1395463997;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0
                                                                      + (((2 * v74) | (8 * v74)) ^ v73))
                                                            - 12))( 0x7A7911952AB4018LL,  1847072088LL,  437999840LL);
}

void sub_10057E94C()
{
}

uint64_t sub_10057E978( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  LODWORD(STACK[0x338]) = LODWORD(STACK[0x218]) ^ LODWORD(STACK[0x5E0]);
  LODWORD(STACK[0x468]) = LODWORD(STACK[0x4D0]) - LODWORD(STACK[0x468]);
  LODWORD(STACK[0x374]) = a73 - LODWORD(STACK[0x230]);
  LODWORD(STACK[0x358]) = a63 - a64;
  LODWORD(STACK[0x4D0]) = a65 ^ LODWORD(STACK[0x390]) ^ LODWORD(STACK[0x4B0]);
  LODWORD(STACK[0x4A0]) = a57 - a58;
  int v74 = STACK[0x5D8];
  LODWORD(STACK[0x230]) = a59 - a61;
  LODWORD(STACK[0x218]) = v74 ^ 0x95CE9246;
  char v75 = *(_BYTE *)(STACK[0x658]
                 + ((*(_BYTE *)(STACK[0x658]
                              + ((*(_BYTE *)(STACK[0x658] + ((*(_BYTE *)(STACK[0x658] + 13) + 10) & 0xF)) + 9) & 0xF))
                   + 3) & 0xF))
      + 11;
  int v76 = (v75 & 0xF) - 2 * (v75 & 1) + 1;
  LODWORD(STACK[0x4B0]) = LODWORD(STACK[0x4F0]) ^ 0xB3A16243;
  unsigned int v77 = (v76 ^ 0x9FFFEDA7) + ((2 * v76) & 0x14C) - 1518020783;
  LODWORD(STACK[0x5E0]) = v73;
  LODWORD(STACK[0x640]) = v73 ^ 0x503;
  LODWORD(STACK[0x5D8]) = -1611244054;
  BOOL v78 = v77 > 0x4584C4F8;
  if (v77 < 0x4584C4F7) {
    BOOL v78 = 1;
  }
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + ((1303 * !v78) ^ LODWORD(STACK[0x5E0]))) - 4))(3746159248LL);
}

uint64_t sub_10058021C( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int v72 = LODWORD(STACK[0x640]) - 15;
  LODWORD(STACK[0x3BC]) ^= LODWORD(STACK[0x224]);
  LODWORD(STACK[0x5D8]) = a70 - 2 * a71;
  LODWORD(STACK[0x224]) = a62 - a65;
  LODWORD(STACK[0x390]) = a67 - a68;
  int v73 = *(unsigned __int8 *)(STACK[0x658] + v71 + 681728843 + ((v72 - 164) ^ 0xD75DA763));
  unsigned int v74 = 1364176807 * (((2 * v73) & 0xFFFFFFC3) + (v73 ^ 0x7EE86BE1))
      - ((-1566613682 * (((2 * v73) & 0xFFFFFFC3) + (v73 ^ 0x7EE86BE1)) - 1301831054) & 0x8929BEFA)
      + 499691702;
  unsigned int v75 = v71 + 681728843 + (a2 ^ 0x5153A5FF ^ v74) + ((v72 - 164) ^ 0xD75DA763);
  unsigned int v76 = (((((2 * v75) & 0xEB76FFFE) + (v75 ^ 0x75BB7FFF) - 1975222271) >> 16) ^ 0xFDFEEDFC)
      + ((2 * v75) & 0xEB76FFFE)
      + (v75 ^ 0x75BB7FFF)
      + ((2 * ((((2 * v75) & 0xEB76FFFE) + (v75 ^ 0x75BB7FFF) - 1975222271) >> 16)) & 0x1DBF8);
  unsigned int v77 = (((v76 - 1941597691) >> 8) ^ 0x7F70FFC7) + v76 + (((v76 - 1941597691) >> 7) & 0xE1FF8E);
  unsigned int v78 = v77 - ((2 * v77 + 430515324) & 0x85994C02) + 1335965759;
  int v79 = 2 * (v78 ^ 0x42CCA601);
  unsigned int v80 = (v78 ^ 0x42CCA601) - ((v79 + 276970722) & 0xF24EA026) + 23621252;
  int v81 = (((2 * v80) ^ 0xF24EA026) - ((2 * ((2 * v80) ^ 0xF24EA026)) & 0x1701E7E0) + 1266742256) & a4 ^ 0x2A4726D8;
  uint64_t v82 = ((v81 - ((2 * v81) & 0x1CA146B0) + 240167770) & 0x1A72119A ^ 0x10601118)
      + ((v81 - ((2 * v81) & 0x1CA146B0) + 240167770) ^ 0x2A170CE7)
      - (((v81 - ((2 * v81) & 0x1CA146B0) + 240167770) ^ 0x2A170CE7) & 0x1A721198u);
  unsigned int v83 = (v78 ^ 0x42CCA601) - ((v79 + 553941444) & 0xA7D95614) - 462493716;
  int v84 = (((2 * v83) ^ 0xA7D95614) - ((2 * ((2 * v83) ^ 0xA7D95614)) & 0x437C7BEC) + 566115830) & a4 ^ 0x78019610;
  unsigned int v85 = (((2 * v84) & 0x96030C10) - v84 - 1262743055) ^ 0xACFED2B1;
  unsigned int v86 = ((2 * v85) | 0xE443917E) - v85;
  unsigned int v87 = v71 + 681728843 + (v74 ^ 0x97787477 ^ v83) + ((v72 - 164) ^ 0xD75DA763);
  unsigned int v88 = (((((2 * v87) & 0xFCC6FFBC) + (v87 ^ 0x7E637FDE) - 2120450014) >> 16) ^ 0xEFD9EFED)
      + ((2 * v87) & 0xFCC6FFBC)
      + (v87 ^ 0x7E637FDE)
      + ((2 * ((((2 * v87) & 0xFCC6FFBC) + (v87 ^ 0x7E637FDE) - 2120450014) >> 16)) & 0x1DFDA);
  unsigned int v89 = (((v88 - 1849520075) >> 8) ^ 0xFDE0DFAF) + v88 + (((v88 - 1849520075) >> 7) & 0x1C1BF5E);
  int v90 = v89 - ((2 * v89 + 1221057232) & 0x5CB95C8C) + 1388354478;
  int v91 = ((2 * v90) ^ 0x5CB95C8C) - ((2 * ((2 * v90) ^ 0x5CB95C8C)) & 0xDEAAE8C) - 2030741690;
  unsigned int v92 = v71 + 681728843 + (v74 ^ 0xEAC8713B ^ v90) + ((v72 - 164) ^ 0xD75DA763);
  unsigned int v93 = (((((2 * v92) & 0xF7FFFFDA) + (v92 ^ 0xFBFFFFED) + 67108883) >> 16) ^ 0x6BFA7FD7)
      + ((2 * v92) & 0xF7FFFFDA)
      + (v92 ^ 0xFBFFFFED)
      + (((((2 * v92) & 0xF7FFFFDA) + (v92 ^ 0xFBFFFFED) + 67108883) >> 15) & 0xFFAE);
  uint64_t v94 = (((v93 - 1744469956) >> 8) ^ 0xBFF5E8AD) + v93 + (((v93 - 1744469956) >> 7) & 0x1EBD15A);
  uint64_t v95 = v94 - ((2 * (_DWORD)v94 + 287549666) & 0x2B8EF504) - 27701517;
  int v96 = (((((2 * v95) ^ 0x2B8EF504) + 867768396 - 2 * (((2 * v95) ^ 0x2B8EF504) & 0x33B9184E ^ (2 * v95) & 2)) & a4 ^ 0x63BCC7A5)
       - 1) ^ 0x10C5D16D;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((243 * ((v71 + 1) < 0x10)) ^ v72)) - 12))( v94,  v95,  2380150593LL,  a4,  v96 - ((2 * v96) & 0x10B029A0u),  1612747522LL,  a7 ^ v83 ^ (v86 - 1914816703) ^ v90 ^ ((v91 & a4 ^ 0x65113F49)
                                                + (v91 & 0x31018760 ^ 0x108680A4)
                                                - ((v91 & a4 ^ 0x65113F49) & 0x3101AF60)) ^ v95 ^ 0x41340AE9 ^ (v96 - ((2 * v96) & 0x10B029A0) + 148798676),
           v82,
           a9,
           a10,
           a11,
           a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_100580AFC( int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x370]) ^= LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x47C]) ^ a66;
  LODWORD(STACK[0x5E0]) = a69 - a70;
  unsigned int v71 = (((a1 - 1568380730) >> 8) ^ 0x67DFEDF1)
      + a1
      + (((a1 - 1568380730) >> 7) & 0x1BFDBE2);
  unsigned int v72 = v71 + (((v71 + 983857877) >> 5) ^ 0x27A400C2) - (((v71 + 983857877) >> 4) & 0xB7FE7A) + 1;
  int v73 = v72 - ((2 * v72 + 637596708) & 0x35748B26) + 767213477;
  unsigned int v74 = ((2 * ((v73 ^ 0x1ABA4593) - 1879573490)) & 0x7FF7777E) + (((v73 ^ 0x1ABA4593) - 1879573490) ^ 0xBFFBBBBF);
  unsigned int v75 = (((v74 + 1074021441) >> 10) ^ 0xFEFDF9FF) + v74 + (((v74 + 1074021441) >> 9) & 0x7BF3FE);
  unsigned int v76 = ((v75 + 1090931266) & 0xFFBBFEFE) + v75 + (((v75 + 1090931266) >> 1) ^ 0xFFDDFF7F);
  unsigned int v77 = v76 - ((2 * v76 - 2108648058) & 0xAFEB36D6) - 1726093778;
  unsigned int v78 = ((2 * ((v77 ^ 0x57F59B6B) + 1287124013)) & 0x701FF77E) + (((v77 ^ 0x57F59B6B) + 1287124013) ^ 0xB80FFBBF);
  unsigned int v79 = v78 + (((v78 + 1206912065) >> 13) ^ 0x30409058) - (((v78 + 1206912065) >> 12) & 0xEDF4E);
  unsigned int v80 = (((v79 + 397374441) >> 5) & 0x39BEEFE) + (((v79 + 397374441) >> 6) ^ 0x55CDF77F);
  unsigned int v81 = v79 + v80 + ((2 * v80 + 1415844098) ^ 0x618681) - ((2 * (2 * v80 + 1415844098)) & 0xFF3CF2FC) + 1;
  int v82 = v81 - ((2 * v81 + 50326480) & 0x3E7BA50) + 1131664144;
  unsigned int v83 = ((2 * ((v82 ^ 0x81F3DD28) - 1282870125)) & 0x7FDDFB9E) + (((v82 ^ 0x81F3DD28) - 1282870125) ^ 0x3FEEFDCF);
  unsigned int v84 = (((v83 - 1072627151) >> 8) ^ 0x5FF3DF7) + v83 + (((v83 - 1072627151) >> 7) & 0x1FE7BEE);
  unsigned int v85 = (((v84 - 1173240774) >> 2) ^ 0xEDFFFFEF) + v84 + (((v84 - 1173240774) >> 1) & 0x5BFFFFDE);
  int v86 = v85 - ((2 * v85 + 404981910) & 0x5D6173B8) - 87917017;
  unsigned int v87 = ((2 * ((v86 ^ 0x2EB0B9DC) + 707258702)) & 0x7EBF7FFC) + (((v86 ^ 0x2EB0B9DC) + 707258702) ^ 0xBF5FBFFE);
  unsigned int v88 = (((v87 + 1084243970) >> 13) ^ 0x774F7717) + v87 + (((v87 + 1084243970) >> 12) & 0xEEE2E);
  unsigned int v89 = (((v88 - 917452565) >> 3) ^ 0xFFFE6AFB) + v88 + (((v88 - 917452565) >> 2) & 0x3FFCD5F6);
  unsigned int v90 = v89 - 2 * ((v89 + 156392944) & 0x893981F ^ v89 & 6) - 773458423;
  int v91 = v90 ^ v77;
  unsigned int v92 = (v90 ^ 0x831CCE93) + ((v90 >> 11) ^ 0x550FBFC) + ((v90 >> 10) & 0x3ECF34 ^ 0xFFDF38CF) - 88119396;
  unsigned int v93 = (((((2 * v92) & 0xF47E7F88) + (v92 ^ 0x7A3F3FC4) - 2050965444) >> 5) ^ 0x73D6FDEB)
      + ((2 * v92) & 0xF47E7F88)
      + (v92 ^ 0x7A3F3FC4)
      + (((((2 * v92) & 0xF47E7F88) + (v92 ^ 0x7A3F3FC4) - 2050965444) >> 4) & 0x7ADFBD6);
  unsigned int v94 = v93 - ((2 * v93 + 601064610) & 0xCA67ABC4) + 1998428211;
  unsigned int v95 = (v94 ^ 0x516F011A) + ((v94 >> 12) ^ 0x9A1D0632) + ((v94 >> 11) & 0xFDE7A ^ 0xFFF5F39F) + 1709698879;
  unsigned int v96 = (((((2 * v95) & 0xFFDEF5F6) + (v95 ^ 0x7FEF7AFB) - 2146401019) >> 7) ^ 0x7DEBAED7)
      + ((2 * v95) & 0xFFDEF5F6)
      + (v95 ^ 0x7FEF7AFB)
      + (((((2 * v95) & 0xFFDEF5F6) + (v95 ^ 0x7FEF7AFB) - 2146401019) >> 6) & 0x3D75DAE);
  unsigned int v97 = v96 - ((2 * v96 + 71937116) & 0xF2AC8EAA) - 75817597;
  unsigned int v98 = ((2 * ((v97 ^ 0xF9564755) - 2045107421)) & 0x47FEDFEC) + (((v97 ^ 0xF9564755) - 2045107421) ^ 0x23FF6FF6);
  unsigned int v99 = (((v98 - 603942902) >> 11) ^ 0xEB1BFFF1) + v98 + (((v98 - 603942902) >> 10) & 0x37FFE2);
  unsigned int v100 = v99 + (((v99 - 253456359) >> 8) ^ 0x8059028) - (((v99 - 253456359) >> 7) & 0x1F4DFAE) + 1;
  unsigned int v101 = v100 - ((2 * v100 - 776077344) & 0xC3BA8708) + 1253852020;
  unsigned int v102 = (v101 ^ 0x5B4DCDD7) + ((v101 >> 8) ^ 0x817B55CD) + ((v101 >> 7) & 0x1BFCFFE ^ 0xFF497465) + 2128603137;
  int v103 = ((2 * v102) & 0x5BF9DB4A) + (v102 ^ 0x2DFCEDA5);
  unsigned int v104 = (((v103 - 771550629) >> 8) ^ 0x3BFF9DF7)
       + v103
       + (((v103 - 771550629) >> 7) & 0x1FF3BEE)
       - 2
       * (((((v103 - 771550629) >> 8) ^ 0x3BFF9DF7)
         + v103
         + (((v103 - 771550629) >> 7) & 0x1FF3BEE)
  LODWORD(STACK[0x47C]) = (((((2 * (v91 ^ v101)) ^ 0x7D7681EC)
                           - ((2 * ((2 * (v91 ^ v101)) ^ 0x7D7681EC)) & 0x4B0A57B0)
                           + 1703226329) & a4 ^ 0x15E7256F)
                         - 1) & 0x32188468 ^ 0x2B8A04B;
  int v105 = LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x5C8]);
  int v106 = STACK[0x468];
  LODWORD(STACK[0x550]) = v105;
  unsigned int v107 = ((2 * (v106 ^ v105)) ^ 0xA7D624DC) + 1246275268 + (~(2 * ((2 * (v106 ^ v105)) ^ 0xA7D624DC)) | 0xEB6EB27B);
  int v108 = (v107 & 0x6C080508 ^ 0x4460107 | v107 & 0x13119270) - 1;
  LODWORD(STACK[0x498]) = (v108 & 0x6001027A ^ 0x214020) + (v108 ^ 0xEE0EA7DE) - ((v108 ^ 0xEE0EA7DE) & 0xE04122F8);
  unint64_t v111 = STACK[0xB40];
  unint64_t v113 = STACK[0x570];
  unint64_t v114 = (*(void *)(STACK[0xB40]
                    + 8
                    * (((v112 ^ 0xBAFF37575DDFF963LL) + 0x4500C8A8A220069DLL + ((2 * v112) & 0x75FE6EAEBBBFF2C6LL))
                     % STACK[0x570])) ^ 0xC9C9C9C9C9C9C9C9LL)
       + 2207661067u;
  unint64_t v115 = (*(void *)(STACK[0xB40]
                    + 8
                    * (((v114 ^ 0xEFEFFFCDFD17DAFCLL) + 0x1010003202E82504LL + ((2 * v114) & 0xDFDFFF9BFA2FB5F8LL))
                     % STACK[0x570])) ^ 0xC9C9C9C9C9C9C9C9LL)
       + 1300402492;
  unint64_t v116 = ((v115 ^ 0xB3D7E2FBF37BFFBDLL) + 0x4C281D040C840043LL + ((2 * v115) & 0x67AFC5F7E6F7FF7ALL)) % STACK[0x570];
  STACK[0x640] = STACK[0xB40];
  unint64_t v117 = (*(void *)(v111 + 8 * v116) ^ 0xC9C9C9C9C9C9C9C9LL) + 214590498;
  int v118 = LODWORD(STACK[0x5D0]) ^ LODWORD(STACK[0x500]);
  LODWORD(STACK[0x39C]) = v82;
  LODWORD(v117) = ((v117 ^ 0x5FFF676FA6EDFECFLL) - 0x5FFF676FA6EDFECFLL + ((2 * v117) & 0xBFFECEDF4DDBFD9ELL)) % v113;
  unsigned int v119 = ((v117 - ((2 * v117) & 0x478F871C) + 600294286) ^ 0xDC313838)
       - 919437460
       + ((2 * (v117 - ((2 * v117) & 0x478F871C) + 600294286)) & 0xFFEDF76C ^ 0x478D870C);
  LODWORD(STACK[0x5B8]) = LODWORD(STACK[0x480]) ^ 0xD637AC8E;
  unsigned int v109 = ((2 * v106) ^ 0xDD448668) - 2 * (((2 * v106) ^ 0xDD448668) & 0x89C34BE ^ (2 * v106) & 6) - 929286984;
  unsigned int v110 = (v109 & a4 ^ 0x31191720) + (v109 & 0x9188620 ^ 0x88208800) - ((v109 & a4 ^ 0x31191720) & 0x9188620);
  LODWORD(STACK[0x570]) = (v110 & 0xABAC73B8 ^ 0xA84739F) + (v110 & 0x54538C40 ^ 0x40508C01) - 2;
  LODWORD(STACK[0x5B0]) = (((2 * (v118 ^ v82 ^ v94 ^ v104)) ^ 0x807C61C2)
                         - 2
                         * (((2 * (v118 ^ v82 ^ v94 ^ v104)) ^ 0x807C61C2) & 0x143D17C ^ (2 * (v118 ^ v82 ^ v94 ^ v104)) & 8)
                         - 1052520076) & a4 ^ 0x204318F2;
  BOOL v120 = v119 > 0xC9297B23;
  if (v119 < 0xC9297B22) {
    BOOL v120 = 1;
  }
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + ((1281 * !v120) ^ v70)))(580045674LL);
}

uint64_t sub_10058223C@<X0>( int a1@<W1>, uint64_t a2@<X3>, uint64_t a3@<X5>, int a4@<W6>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  uint64_t v75 = a1 ^ 0xD44592FF;
  LODWORD(STACK[0x368]) -= LODWORD(STACK[0x36C]);
  int v76 = LODWORD(STACK[0x47C]) + a72;
  LODWORD(STACK[0x47C]) = a60 - a63;
  int v77 = HIDWORD(a57) ^ LODWORD(STACK[0x580]) ^ a59 ^ a58 ^ LODWORD(STACK[0x5D0]) ^ a64 ^ a71 ^ a70 ^ v73 ^ a69 ^ a68 ^ a66 ^ (v76 - 1);
  LODWORD(STACK[0x36C]) = LODWORD(STACK[0x5D0]) ^ LODWORD(STACK[0x38C]) ^ a4 ^ LODWORD(STACK[0x39C]) ^ a67 ^ a65 ^ (LODWORD(STACK[0x5B0]) + a57 - a56);
  LODWORD(STACK[0x640]) = v77;
  LODWORD(STACK[0x5B0]) = v77 ^ 0xD608FD9;
  unint64_t v78 = (v75 + 2104641018)
      + (unint64_t)v72
  unint64_t v79 = 0xC76BB339E9ED63B1LL * (*(void *)(STACK[0xB40] + 8 * v78) ^ 0xC9C9C9C9C9C9C9C9LL)
      - ((0xED76673D3DAC762LL * (*(void *)(STACK[0xB40] + 8 * v78) ^ 0xC9C9C9C9C9C9C9C9LL)) & 0x41039E30486DB53ALL)
      - 0x5F7E30E7DBC92563LL;
  unint64_t v80 = ((2 * ((v74 ^ 0x33A93D4A7C8C0D97LL ^ v79) + v78)) & 0xB0DBFFBFBE24373ELL)
      + (((v74 ^ 0x33A93D4A7C8C0D97LL ^ v79) + v78) ^ 0xD86DFFDFDF121B9FLL);
  unint64_t v81 = v80
      + (((v80 + 0x2792002020EDE461LL) >> 32) ^ 0xE0A04480040510D8LL)
      - ((2 * ((v80 + 0x2792002020EDE461LL) >> 32)) & 0x1F7F5DE4ELL);
  unint64_t v82 = v81
      + (((v81 + 0x46F1BBA01CE8D389LL) >> 16) ^ 0x73D5FA127F762F9FLL)
      + (((v81 + 0x46F1BBA01CE8D389LL) >> 15) & 0x1F424FEEC5F3ELL);
  unint64_t v83 = v82
      + (((v82 - 0x2CE43E72628D5C16LL) >> 8) ^ 0xBF5BF0B77F969EFFLL)
      + (((v82 - 0x2CE43E72628D5C16LL) >> 7) & 0xB7E16EFF2D3DFELL)
      + 1;
  unint64_t v84 = v83 - ((2 * v83 + 0x277FA1AC3BB809D4LL) & 0xF9FB7FFA507B0BB2LL) - 0x6F426F2CB9E6753DLL;
  uint64_t v85 = 2 * (v84 ^ 0x7CFDBFFD283D85D9LL);
  int v86 = ((v83 - ((2 * v83 + 1001916884) & 0x507B0BB2) + 1176079043) ^ 0x283D85D9) - ((v85 - 1601446758) & 0x6C67D090);
  unint64_t v87 = (v84 ^ 0x7CFDBFFD283D85D9LL) - ((v85 + 0x45D043FB4117B934LL) & 0xEC5A63760FF85004LL) - 0x66EAAC475777FB64LL;
  uint64_t v88 = ((2 * ((v79 ^ 0x56ACFEA323CAF29FLL ^ v87) + v78)) & 0x7FBBBF7FBDAFFFD2LL)
      + (((v79 ^ 0x56ACFEA323CAF29FLL ^ v87) + v78) ^ 0x3FDDDFBFDED7FFE9LL);
  unint64_t v89 = v88
  unint64_t v90 = v89
      + (((v89 - 0x47E5E20FDF0903EBLL) >> 16) ^ 0x2FF30DDE7FDFBB7FLL)
      + (((v89 - 0x47E5E20FDF0903EBLL) >> 15) & 0x1BBCFFBF76FELL);
  unint64_t v91 = v90
      + (((v90 - 0x77D8EFEE5EE8BF6ALL) >> 8) ^ 0x7DCD9F3D3FDEE7FALL)
      + (((v90 - 0x77D8EFEE5EE8BF6ALL) >> 7) & 0x19B3E7A7FBDCFF4LL)
      + 1;
  unint64_t v92 = (v91 - ((2 * v91 + 0x14B2E1A8C270B136LL) & 0x8ACFF9CF88080FCELL) + 0x4FC16DBC253C6082LL) ^ 0x4567FCE7C40407E7LL;
  uint64_t v93 = v92 - ((2 * v92 + 0x45D043FB4117B934LL) & 0x496DB103CB5B2532LL) + 0x479EFA7F86396F33LL;
  unint64_t v94 = ((2 * ((v79 ^ 0x4371799C19B4804LL ^ v93) + v78)) & 0xFDFFCFBFCEEDFFDELL)
      + (((v79 ^ 0x4371799C19B4804LL ^ v93) + v78) ^ 0x7EFFE7DFE776FFEFLL);
  unint64_t v95 = v94
      + (((v94 - 0x7EFFE7DFE776FFEFLL) >> 32) ^ 0x2292210061920140LL)
      - (((v94 - 0x7EFFE7DFE776FFEFLL) >> 31) & 0x13CDBFD7ELL);
  unint64_t v96 = v95
      + (((v95 + 0x5E6DF71FB6F6FED1LL) >> 16) ^ 0xFFD79B7EB6F7FFF9LL)
      + (((v95 + 0x5E6DF71FB6F6FED1LL) >> 15) & 0x136FD6DEFFFF2LL);
  unint64_t v97 = v96
      + (((v96 + 0x5E965BA0FFFEFED8LL) >> 8) ^ 0x37FD6FCF777D9CFFLL)
      + (((v96 + 0x5E965BA0FFFEFED8LL) >> 7) & 0x1FADF9EEEFB39FELL)
      + 1;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + (int)((226 * ((a5 + (unint64_t)STACK[0x650]) >> 32)) ^ v75)))( 1135170066LL,  v75,  789099451LL,  a2,  0x5CAA002181C8157CLL,  a3,  a2 & ((v86 + 108648085) >> 1),  v97 - ((2 * (_DWORD)v97 - 1316052918) & 0x32B42BF8) - 232692191,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_100582BD0()
{
}

uint64_t sub_100582C00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v59 = v58 ^ 0x7D724828;
  LODWORD(STACK[0x364]) = LODWORD(STACK[0x360]) - LODWORD(STACK[0x364]);
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x47C]) ^ 0xE89F072A;
  int v60 = *(unsigned __int8 *)(STACK[0x658]
                           + ((*(_BYTE *)(STACK[0x658]
                                        + ((*(_BYTE *)(STACK[0x658] + ((*(_BYTE *)(STACK[0x658] + 8) + 9) & 0xF)) + 9) & 0xF))
                             + 5) & 0xF)) ^ 0x43;
  unsigned int v61 = v60 & 0xC6 ^ 0x97 ^ ((v60 & 0xFFFFFFC9 ^ 0x6C) + (v60 & 0xFFFFFFC8 ^ 0x90) - ((v60 & 0xFFFFFFC9 ^ 0x6C) & 0xF8));
  unsigned int v62 = (v61 ^ 0x7FEFF9F9) + ((2 * v61) & 0x1F2) - 1227887426;
  LODWORD(STACK[0x650]) = v59 ^ 0x490;
  int v63 = *(unsigned __int8 *)(STACK[0x658] + (v59 ^ 0x8D89BFC6) + 1920352812);
  unsigned int v64 = 1364176807 * ((v63 ^ 0x5EE731FF) + 2 * v63)
      - ((-559930546 - 1566613682 * ((v63 ^ 0x5EE731FF) + 2 * v63)) & 0xE6D83420)
      + 1656499127;
  unsigned int v65 = (v64 ^ 0x9B6CEE24) + (v59 ^ 0x8D89BFC6) + 1920352812;
  unsigned int v66 = (((((2 * v65) & 0xF6DFBFDE) + (v65 ^ 0x7B6FDFEF) - 2070929391) >> 16) ^ 0x7FBFCF2F)
      + ((2 * v65) & 0xF6DFBFDE)
      + (v65 ^ 0x7B6FDFEF)
      + ((2 * ((((2 * v65) & 0xF6DFBFDE) + (v65 ^ 0x7B6FDFEF) - 2070929391) >> 16)) & 0x19E5E);
  unsigned int v67 = (((v66 + 80761058) >> 8) ^ 0x7FD9D7FF) + v66 + (((v66 + 80761058) >> 7) & 0x1B3AFFE);
  unsigned int v68 = v67 - ((2 * v67 + 720464778) & 0x9BFF0B9E) + 1668823956;
  unsigned int v69 = (((v68 >> 1) & 0x7FFBE43E ^ 0x3D8B202A) - ((2 * ((v68 >> 1) & 0x7FFBE43E ^ 0x3D8B202A)) & 0xB293887C) - 649476802) ^ 0xDA6DF432;
  uint64_t v70 = 1284841368 - (v69 | 0x4C951F98) + (v69 | 0xB36AE067);
  unsigned int v71 = (v64 ^ 0xBE939FDF ^ v68) + (v59 ^ 0x8D89BFC6) + 1920352812;
  unsigned int v72 = (((((2 * v71) & 0xFAD5FC7E) + (v71 ^ 0x7D6AFE3F) - 2104163903) >> 16) ^ 0xB1FBDF6A)
      + ((2 * v71) & 0xFAD5FC7E)
      + (v71 ^ 0x7D6AFE3F)
      + ((2 * ((((2 * v71) & 0xFAD5FC7E) + (v71 ^ 0x7D6AFE3F) - 2104163903) >> 16)) & 0x1BED4);
  unsigned int v73 = ((v72 - 795270569) >> 7) & 0x1FCBEFA;
  unsigned int v74 = (((v72 - 795270569) >> 8) ^ 0x13FE5F7D) + v72;
  unsigned int v75 = v74 + v73;
  int v76 = v74 & 1;
  int v77 = v75 - 2 * ((v75 + 1016775386) & 0x38A930EB ^ v76) + 1967387588;
  unsigned int v78 = (v77 ^ 0xB8A930EA) - 2 * (((v77 ^ 0xB8A930EA) + 276970722) & 0x23B2341F ^ v76) + 875852032;
  unsigned int v79 = (v64 ^ 0x50DE2E0E ^ v78) + (v59 ^ 0x8D89BFC6) + 1920352812;
  unsigned int v80 = (((((2 * v79) & 0xDFF7E7F6) + (v79 ^ 0x6FFBF3FB) - 1878782971) >> 16) ^ 0xFEE617D7)
      + ((2 * v79) & 0xDFF7E7F6)
      + (v79 ^ 0x6FFBF3FB)
      + (((((2 * v79) & 0xDFF7E7F6) + (v79 ^ 0x6FFBF3FB) - 1878782971) >> 15) & 0x2FAE);
  unsigned int v81 = (((v80 - 1860307922) >> 8) ^ 0xDA7FBDFA) + v80 + (((v80 - 1860307922) >> 7) & 0xFF7BF4);
  BOOL v83 = v62 < 0x36BFE6B7 || v62 > 0x36BFE6B8;
  uint64_t v82 = (v81 - ((2 * v81 + 1832676456) & 0x9E958CF6) + 99155119) ^ 0x4F4AC67B;
  return ((uint64_t (*)(uint64_t, BOOL, void, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + ((1921 * !v83) ^ v59)))( 2980204309LL,  v83,  (((((v82 - ((2 * (_DWORD)v82 + 17070532) & 0x23EA026) + 295800053) >> 1) & 0x7FFBE43E ^ 0x57F2040A | 0xA73FD308)
           - (((v82 - ((2 * (_DWORD)v82 + 17070532) & 0x23EA026) + 295800053) >> 1) & 0x7FFBE43E ^ 0x57F2040A | 0x58C02CF7)
           + 1488989431) ^ 0xE63A4F08) & 0x2EF5767F,
           787838591LL,
           v82,
           (v77 ^ 0xB8A930EA) - ((2 * (v77 ^ 0xB8A930EA) + 276970722) & 0x7592A46A) + 1124757670,
           v70,
           (v78 >> 1) & 0x330A6418 ^ 0x12007BC9 | (v78 >> 1) & 0x4CF18026,
           a9,
           a10,
           a11,
           a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_100584218( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v61 = *(unsigned __int8 *)(STACK[0x658] + v60);
  unsigned int v62 = ((v61 << (5 * (LOBYTE(STACK[0x650]) ^ 0xB) + 84)) & 0x1E8) + (v61 ^ 0xF7DC5EF4);
  unsigned int v63 = 1364176807 * v62 - ((-1566613682 * v62 + 1376945576) & 0xECD36262) + 527627269;
  int v64 = v59 ^ 0x11F5013;
  int v65 = (v59 ^ 0x11F5013) + (v59 ^ 0x8891EDD ^ v63) + 1;
  unsigned int v66 = ((v60 + v64) ^ 0x7FFBF75D)
      - 2147220078
      + ((2 * (v60 + v64)) & 0xFFF7EEBA)
      + (v63 ^ ((v63 ^ 0x9964ECE) - ((2 * (v63 ^ 0x9964ECE) + 2) & 0xBC2D6412) - 568937974) ^ (v65
                                                                                             - ((2 * v65) & 0xC5757562)
                                                                                             - 491078991) ^ 0xCAC5B989)
      + 785;
  unsigned int v67 = (((((2 * v66) & 0xDFADFEF4) + (v66 ^ 0x6FD6FF7A) - 1876361082) >> 16) ^ 0x2CBFF6FB)
      + ((2 * v66) & 0xDFADFEF4)
      + (v66 ^ 0x6FD6FF7A)
      + ((2 * ((((2 * v66) & 0xDFADFEF4) + (v66 ^ 0x6FD6FF7A) - 1876361082) >> 16)) & 0x1EDF6);
  unsigned int v68 = (((v67 + 1667828107) >> 8) ^ 0xFBA3FBE5) + v67 + ((2 * ((v67 + 1667828107) >> 8)) & 0x147F7CA);
  int v69 = v68 - ((2 * v68 + 1334451020) & 0x5A5E1938) - 1795941822;
  unsigned int v70 = (v69 ^ 0x2D2F0C9C) - ((2 * (v69 ^ 0x2D2F0C9C) + 553941444) & 0xEB1B7EA2) - 2045772749;
  unsigned int v71 = ((2 * (v60 + (v63 ^ 0x83E40E60 ^ v70))) & 0x7AFFA7FE) + ((v60 + (v63 ^ 0x83E40E60 ^ v70)) ^ 0x3D7FD3FF);
  unsigned int v72 = (((v71 - 1031787519) >> 16) ^ 0xDE7FFFF2) + v71 + ((2 * ((v71 - 1031787519) >> 16)) & 0x1FFE4);
  unsigned int v73 = (((v72 - 469750769) >> 8) ^ 0x6FEE9FFE) + v72 + ((2 * ((v72 - 469750769) >> 8)) & 0x1DD3FFC);
  unsigned int v74 = v73 - ((2 * v73 + 153588198) & 0x9B770ED6) + 1380929630;
  unsigned int v75 = ((v74 >> 1) & 0x7FFBE43E ^ 0x46D9C1B4)
      - ((2 * ((v74 >> 1) & 0x7FFBE43E ^ 0x46D9C1B4)) & 0x88324B2C)
      + 1142767510;
  unsigned int v76 = ((1925595593 - v73 - ((-153588198 - 2 * v73) & 0xEEB41578)) ^ v74 ^ 0xE88FDF70 ^ ((v74 ^ 0x56594682 ^ v75)
                                                                                        + (v75 ^ 0x641D3E16)
                                                                                        + 1
                                                                                        - ((2
                                                                                          * ((v74 ^ 0x56594682 ^ v75)
                                                                                           + (v75 ^ 0x641D3E16)
                                                                                           + 1)) & 0xA4DCA54E)
                                                                                        - 764521817))
      + (v75 ^ 0x641D3E16);
  unsigned int v77 = ((2 * (v60 + (v63 ^ 0x3BD2365A ^ v74))) & 0xBE37D71E) + ((v60 + (v63 ^ 0x3BD2365A ^ v74)) ^ 0xDF1BEB8F);
  unsigned int v78 = (((v77 + 551818353) >> 16) ^ 0x7FFFA9BF) + v77 + ((2 * ((v77 + 551818353) >> 16)) & 0x1537E);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + ((((v60 + 1 > 0xF) << 7) | ((v60 + 1 > 0xF) << 9)) ^ (LODWORD(STACK[0x650]) - 489))))( 2147116162LL,  1732811094LL,  2765923662LL,  1172103873LL,  973319596LL,  689964042LL,  v76 - ((2 * v76) & 0x5D1D54A2),  ((((v78 - 1595643214) >> 8) ^ 0xEDDEBF6B) + v78 + (((v78 - 1595643214) >> 7) & 0x1BD7ED6)) & 2,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_100584B3C()
{
  io_object_t v1 = IOIteratorNext(STACK[0x9FC]);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((((2 * v1) & 0xEFE6DFEC) + (v1 ^ 0x77F36FF6) != 2012442614)
                                        * (((v0 + 1163125121) & 0x3AAC1E87) - 1283)) ^ v0))
                            - 12))();
}

uint64_t sub_100584BB4@<X0>(int a1@<W8>)
{
  kern_return_t v2;
  unsigned int v3;
  LODWORD(STACK[0x630]) = v1 + 1616641667;
  int v2 = IOServiceOpen(a1 - 2012442614, mach_task_self_, 0, (io_connect_t *)&STACK[0x9CC]);
  unsigned int v3 = ((((v1 + 1616641667) ^ 0x406) + 1061681500) & (2 * v2)) + (v2 ^ 0x9FA3FFEF);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
}

uint64_t sub_100584C5C()
{
  uint64_t v2 = IOObjectRelease(STACK[0x9FC]);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0
                                                    + ((726 * (dword_1009BDBAC == 485807923)) ^ (v0 - 527)))
                                          - ((4 * v0) ^ 0x1EE4u)
                                          + 1252))(v2);
}

void sub_100584D04()
{
  STACK[0x870] = v1;
  free(v0);
  STACK[0x8A0] = 0LL;
  JUMPOUT(0x1005D4230LL);
}

void sub_100584D10()
{
}

uint64_t sub_100584D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X3>, int a4@<W8>)
{
  uint64_t v5 = (a4 + 1051) | 0x8Cu;
  unint64_t v6 = ((2LL * (void)&STACK[0x6F8]) & 0x5ED6FFF4DFFEF5F8LL)
     + 0x5094800590008502LL
     + ((v5 - 0x50948005900089AELL) ^ (unint64_t)&STACK[0x6F8]);
  STACK[0x5C8] = ((v6 % 0x25) ^ 0xFFBDB7BEBBBAFFE9LL) + 0x42484144450027LL + ((2 * (v6 % 0x25)) & 0x52LL);
  unint64_t v7 = STACK[0x870];
  STACK[0x5B0] = STACK[0x870];
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4
                                                                     + 8LL
                                                                     * (int)((22
                                                                            * ((((_DWORD)v5 - 1872872645) & 0x6FA1C69A ^ 0x43F646FA) == 1140211832)) ^ v5))
                                                         - 4LL);
  STACK[0x650] = STACK[0xA18];
  STACK[0x658] = (unint64_t)&STACK[0xB80] + v7;
  STACK[0x5C0] = (unint64_t)&STACK[0xB80] + v7 + 16;
  STACK[0x5D0] = a3;
  return v8(a1, a2, 3932211280LL);
}

uint64_t sub_100584EEC@<X0>( int a1@<W2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, unsigned int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  unint64_t v11 = (_BYTE *)(a2 + v9 + a3 + ((a7 - 1448) | 0x240u));
  *unint64_t v11 = (((v8 ^ a5) >> (v7 - 88)) - (((a7 - 1) ^ 0xD2) & (2 * ((v8 ^ a5) >> (v7 - 88)))) - 65) ^ 0xDF;
  LODWORD(v11) = ((*(_DWORD *)(qword_1009C72B8 + (dword_1009C74C0 & a1)) ^ v11) & 0x7FFFFFFF) * a4;
  unint64_t v12 = (v11 ^ (v11 >> 16)) * a4;
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
                                        * ((113
                                          * (v9
}

uint64_t sub_100587AB4()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL * ((22 * (v0 + 8 == ((v1 - 1872872645) & 0x6FA1C69A ^ 0x43F646FA))) ^ v1))
                            - 4LL))();
}

uint64_t sub_100587B04()
{
  LODWORD(STACK[0x5E0]) = v1;
  STACK[0x1598] = 0x104BC93D894379E2LL;
  LODWORD(STACK[0x6F8]) = dword_1009BDBA8 - 1227344546;
  unint64_t v4 = 1856021207
     * ((((v3 - 192) | 0x4E4EC8390FF411A2LL) - (v3 - 192) + ((v3 - 192) & 0xB1B137C6F00BEE58LL)) ^ 0xA35A5FA2419DC75CLL);
  int v5 = v4 ^ (v0 + 624098329);
  uint64_t v6 = dword_1009BDBB0;
  *(_DWORD *)(v3 - 18_Block_object_dispose(va, 8) = v5 ^ 0x74;
  *(_DWORD *)(v3 - 184) = v5 ^ 0x2B;
  *(_DWORD *)(v3 - 180) = v0 + 624098329 + v4;
  *(void *)(v3 - 176) = v2 - v4;
  *(void *)(v3 - 16_Block_object_dispose(va, 8) = v6 ^ v4;
  *(_DWORD *)(v3 - 160) = v4 + v0 + 1123495911;
  *(_DWORD *)(v3 - 156) = v4;
  uint64_t v7 = sub_100686C70(v3 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + *(int *)(v3 - 192)) - 8))(v7);
}

uint64_t sub_100587C00()
{
  int v3 = 76 * (v0 ^ 0x684);
  STACK[0x650] = (unint64_t)malloc(STACK[0x5C8]);
  uint32_t v4 = arc4random();
  unsigned int v5 = v4 + 492660219 - ((v3 + 985319982) & (2 * v4));
  LODWORD(xmmword_1009BDBB4) = v5;
  *(_DWORD *)(v1 + 4) = (((v5 ^ 0x1D5D65FB ^ (v5 >> 30)) * v2) ^ 0xFF1C9FFE)
                      + (((v5 ^ 0x1D5D65FB ^ (v5 >> 30)) * (v3 ^ 0xD80F1302)) & 0xFE393FFC)
                      + 507561470
                      - ((2
                        * ((((v5 ^ 0x1D5D65FB ^ (v5 >> 30)) * v2) ^ 0xFF1C9FFE)
                         + (((v5 ^ 0x1D5D65FB ^ (v5 >> 30)) * (v3 ^ 0xD80F1302)) & 0xFE393FFC))
                        + 29802502) & 0x3ABACBF6);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + v3))(1851021285LL);
}

void sub_100587D18()
{
}

uint64_t sub_100587D3C@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v4);
  int32x4_t v7 = vdupq_n_s32(0xFD575052);
  v8.i64[0] = 0x8000000080000000LL;
  v8.i64[1] = 0x8000000080000000LL;
  uint64_t v9 = 4 * v2;
  uint64_t v10 = (float *)&v4[v2];
  uint64_t v11 = v2 + 4;
  *(float *)v5.i32 = *(const float *)((char *)v4 + (v9 | 4));
  *(float *)&v5.i32[1] = *(const float *)((char *)v4 + (v9 | 8));
  *(float *)&v5.i32[2] = *(const float *)((char *)v4 + (v9 | 0xC));
  int8x16_t v12 = vextq_s8(v6, v5, 0xCuLL);
  int8x16_t v13 = v5;
  *(float *)&v13.i32[3] = v4[v11];
  int8x16_t v14 = vandq_s8(v12, v8);
  int32x4_t v15 = (int32x4_t)veorq_s8(vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x1C6634C8u));
  int8x16_t v16 = veorq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v15, v15), (int8x16_t)vdupq_n_s32(0x18C42668u)),  v15),  vdupq_n_s32(0x739DECCAu)),  (int8x16_t)vdupq_n_s32(0xF2BCEDE8));
  int32x4_t v17 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8(v16, (int8x16_t)vdupq_n_s32(0x2A8AFADu)),  (int32x4_t)vorrq_s8(v16, (int8x16_t)v7)),  v7),  (int8x16_t)vdupq_n_s32(0x82B2FFBD));
  v18.i32[0] = *((_DWORD *)&STACK[0x1598] + ((*(_DWORD *)((_BYTE *)v4 + (v9 | 4)) & 1) == 0));
  v18.i32[1] = *((_DWORD *)&STACK[0x1598] + ((*(_DWORD *)((_BYTE *)v4 + (v9 | 8)) & 1) == 0));
  v18.i32[2] = *((_DWORD *)&STACK[0x1598] + (~*(_DWORD *)((char *)v4 + (v9 | 0xC)) & 1LL));
  v18.i32[3] = *((_DWORD *)&STACK[0x1598] + (~v13.i32[3] & 1LL));
  *(int8x16_t *)uint64_t v10 = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)(v10 + 397), v18), (int8x16_t)vdupq_n_s32(0xBE7ACBF4)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8((int8x16_t)v17, v14),  (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v17, v17),  (int8x16_t)vdupq_n_s32(0xDCE6C85A))),  vdupq_n_s32(0x6E73642Du)),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((2025 * (v11 != 224)) ^ (38 * (v3 ^ a2)))) - 8LL))();
}

uint64_t sub_100587EFC@<X0>(int a1@<W8>)
{
  int v3 = 7 * (v1 ^ 0x4F8);
  LODWORD(STACK[0x6F8]) = a1 + 1;
  gettimeofday((timeval *)STACK[0x5C0], 0LL);
  uint32_t v4 = (_DWORD *)STACK[0x658];
  int v5 = *(_DWORD *)(STACK[0x658] + 16) + 492660219 - ((2 * *(_DWORD *)(STACK[0x658] + 16)) & 0x3ABACBF6);
  v4[1] = *(_DWORD *)(STACK[0x658] + 24) + 492660219 - ((*(_DWORD *)(STACK[0x658] + 24) << (v3 + 127)) & 0x3ABACBF6);
  void v4[2] = v5;
  uint32_t v6 = arc4random();
  v4[3] = v6 + 492660219 - ((2 * v6) & 0x3ABACBF6);
  uint32_t v7 = arc4random();
  _DWORD *v4 = v7 + 492660219 - ((2 * v7) & 0x3ABACBF6);
  unint64_t v8 = 1606104089 * ((v2 - 192) ^ 0xC2BEFB347517423ELL);
  int v9 = STACK[0x660];
  LODWORD(STACK[0x648]) = 2 * (LODWORD(STACK[0x660]) ^ 0x729);
  LODWORD(STACK[0x640]) = v9 - 784817541;
  LODWORD(STACK[0x620]) = v9 + 1897003554;
  int v10 = (DWORD1(xmmword_1009BDBB4) ^ 0xC98180E1 ^ (1664525
                                                 * (xmmword_1009BDBB4 ^ 0x3F405F07 ^ ((xmmword_1009BDBB4 >> 30) | 0x221D3AFC))
                                                 - ((3329050
                                                   * (xmmword_1009BDBB4 ^ 0x3F405F07 ^ ((xmmword_1009BDBB4 >> 30) | 0x221D3AFC))) & 0xA9B9CA34)
                                                 - 723720934))
      + (*(_DWORD *)STACK[0x658] ^ 0x1D5D65FB);
  unsigned int v11 = (v10 ^ 0xFD93F2FD) + 1799588838 + ((2 * v10) & 0xFB27E5FA);
  DWORD1(xmmword_1009BDBB4) = v11 - ((2 * v11 + 777060922) & 0x3ABACBF6) - 1266292968;
  *(void *)(v2 - 192) = v8 + 16023497;
  *(_DWORD *)(v2 - 164) = -1231242048 - v8 + v3;
  *(_DWORD *)(v2 - 172) = ((v3 + 2051849892) ^ 0x4E) + v8;
  int v12 = (v3 + 2051849892) ^ v8;
  *(_DWORD *)(v2 - 16_Block_object_dispose(va, 8) = v12;
  *(_DWORD *)(v2 - 180) = v8;
  *(_DWORD *)(v2 - 176) = v12 ^ 0x4A;
  *(void *)(v2 - 160) = 16023495 - v8;
  uint64_t v13 = sub_1005E44CC(v2 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + *(int *)(v2 - 184)) - 4))(v13);
}

uint64_t sub_1005881D8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * (int)((((LODWORD(STACK[0x660]) - 107259358) ^ 0xF99B6436) * (v1 < 0xF47FC7)) ^ (LODWORD(STACK[0x660]) - 1375))))();
}

uint64_t sub_100588218()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * (int)((((LODWORD(STACK[0x620]) | 0x88896000) ^ 0xF99B6436) * (v1 > 0xF48236)) ^ (LODWORD(STACK[0x660]) - 1375))))();
}

uint64_t sub_100588268()
{
  int v5 = v0 + 107259358;
  LODWORD(xmmword_1009BDBB4) = dword_1009BE570;
  uint64_t v6 = 516615401 * ((~(v2 | 0x638DFDEE411A7CD7LL) + (v2 & 0x638DFDEE411A7CD7LL)) ^ 0x14CE8A6ACD86851ALL);
  *(void *)(v4 - 160) = v6 + 4102253406LL;
  *(_DWORD *)(v4 - 16_Block_object_dispose(va, 8) = v6 ^ (v5 - 1110517940) ^ 0x6F;
  *(void *)(v4 - 176) = (v3 - 1992302727) ^ (unint64_t)v6;
  *(_DWORD *)(v4 - 152) = (v5 - 185257467) ^ v6;
  *(_DWORD *)(v4 - 14_Block_object_dispose(va, 8) = v6 + v5 - 1110517940 - 48;
  *(_DWORD *)(v4 - 192) = v6 + 1;
  *(_DWORD *)(v4 - 18_Block_object_dispose(va, 8) = v5 - 1110517940 - v6;
  uint64_t v7 = sub_1005587BC(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v1 + 8LL * *(int *)(v4 - 184)))(v7);
}

uint64_t sub_100588348()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * ((456 * (v1 >= (((LODWORD(STACK[0x660]) ^ 0x5D4) - 657) ^ 0xF4836B9B))) ^ (LODWORD(STACK[0x660]) - 1469)))
                            - 4LL))();
}

uint64_t sub_1005883A8()
{
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * ((456 * (v1 <= 0xF4836B61)) ^ (LODWORD(STACK[0x660]) - 1469)))
                            - (STACK[0x640] & 0x2EC757C7)
                            + 193LL))();
}

uint64_t sub_10058840C@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0x393;
  uint64_t v5 = 4LL * (v2 - 1799589691 + (a1 ^ 0x393u));
  *(_DWORD *)(STACK[0x658] + v5) ^= 0x76DF22D1 ^ *(_DWORD *)(STACK[0x650] + v5);
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * ((1856 * (v3 - 1 != 238 * ((v4 + 774613833) & 0xD1D457E2 ^ 0x685) + 1808180455)) ^ v4)))();
}

void sub_1005884B8()
{
}

uint64_t sub_1005884C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  STACK[0x870] = STACK[0x5B0];
  int v6 = (v5 - 1822727854) & 0x6CA49D7B;
  STACK[0x710] = v4;
  STACK[0xA18] = STACK[0x650];
  free(a4);
  STACK[0x790] = 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
}

uint64_t sub_100588540@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v4 = (a2 - 414);
  unint64_t v5 = ((unint64_t)&STACK[0xA14] ^ 0x655EF7FFBCB7BBDFLL)
     - 0x655EF7FFBCB7BBDFLL
     + ((2LL * (void)&STACK[0xA14]) & 0xCABDEFFF796F77B8LL);
  STACK[0x5C8] = ((v5 % 0x25) ^ 0x7FFEEEFEDFBDDFFFLL) + 2 * (v5 % 0x25) + (v4 ^ 0x80011101204220B2LL);
  unint64_t v6 = STACK[0x870];
  STACK[0x650] = STACK[0x8C0];
  STACK[0x5B0] = v6;
  BOOL v7 = (((_DWORD)v4 - 891694640) & 0x35262FCD ^ 0x4E7214B8) == 1316099833;
  STACK[0x658] = (unint64_t)&STACK[0xB80] + v6;
  STACK[0x5C0] = (unint64_t)&STACK[0xB80] + v6 + 16;
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8LL * (int)(((2 * v7) | (4 * v7)) ^ v4))
  STACK[0x5D0] = v2;
  return v8(a1, 2492029045LL);
}

uint64_t sub_100588684(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8LL * (((v2 == 15) * a2) ^ v3)))();
}

uint64_t sub_1005886D4(uint64_t a1, int a2)
{
  return sub_100588684(a1, a2);
}

uint64_t sub_1005886DC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8LL
                                                                                         * ((2019
                                                                                           * (v6 == ((unsigned __int16)((a6 ^ 0x277) + 1189) ^ 0x1B95))) ^ a6)))( a1,  a2,  a3,  a4,  a5,  4294924364LL);
}

uint64_t sub_100588718()
{
  LODWORD(STACK[0x5E8]) = STACK[0x86C];
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((632 * (dword_1009BDBAC == ((v0 - 1321893924) & 0x4ECA81BB) + 485807505)) ^ (v0 + 1254)))
                            - ((v0 + 56681329) & 0xFC9F1F9D)
                            + 789LL))();
}

uint64_t sub_1005887AC()
{
  kern_return_t v1;
  uint64_t v1 = IOMainPort(0, (mach_port_t *)&STACK[0x9F8]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + (((((2 * v1) & 0x7FE7FF7A) + (v1 ^ 0x3FF3FFBD) == (((v0 - 33) | 0x20) ^ 0x3FF3FE1C))
                               * (v0 + 688)) ^ v0)))();
}

uint64_t sub_100588810()
{
  BOOL v1 = IOServiceMatching((const char *)&STACK[0x15B1]) == 0LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((v0 + 156 + 19 * (v0 ^ 0x1B7) - 988) * v1) ^ v0)))();
}

uint64_t sub_100588858(const __CFDictionary *a1)
{
  kern_return_t MatchingServices;
  MatchingServices = IOServiceGetMatchingServices(STACK[0x9F8], a1, (io_iterator_t *)&STACK[0x69C]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((1696
                               * (((((v1 - 418) | 0x270) ^ ((v1 + 119) | 0x24) ^ 0xFF62FBE6) & (2 * MatchingServices))
                                + (MatchingServices ^ 0x7FB17DD5) == 2142338517)) ^ v1)))();
}

uint64_t sub_1005888C8()
{
  io_object_t v1 = IOIteratorNext(STACK[0x69C]);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((((2 * v1) & 0xBFEDFEEE) + (v1 ^ 0x5FF6FF77) == 3 * (v0 ^ 0x365) + 1610021944)
                                        * ((833 * (v0 ^ 0x272)) ^ 0x68B)) | v0))
                            - 12))();
}

uint64_t sub_10058893C()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                                   + ((1741 * (*(_DWORD *)(v1 + 2988) != v0)) ^ (v2 - 1891529475) & 0x70BE6EBD))
                                         + -((v2 - 1891529475) & 0x70BE6EBD ^ 0x25F)
                                         + -17 * ((v2 - 1891529475) & 0x70BE6EBD ^ 0x25Fu)
                                         + 1760))(LODWORD(STACK[0x660]));
}

uint64_t sub_100588A7C()
{
  _DWORD *v1 = v2;
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((87
}

uint64_t sub_100588B30@<X0>(int a1@<W8>)
{
  v1[501] = LODWORD(STACK[0x5E8]) - 1282311541;
  STACK[0xA98] = 2008LL;
  BOOL v3 = IOConnectCallStructMethod( ((v2 + 1724226958) & 0x993A66B6 ^ 0xE30B2E4F) + a1,  0x22u,  v1,  0x7D8uLL,  v1,  &STACK[0xA98]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)((335 * v3) ^ v2)) - (v2 ^ 0x239LL)))(LODWORD(STACK[0x660]));
}

uint64_t sub_100588BC8()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (((((*(_DWORD *)(v0 + 2004) - LODWORD(STACK[0x5E8]) == v2) ^ (v1 + 93) ^ 0xBF) & 1)
                                          * (((v1 + 93) | 0x400) - 1642)) ^ v1))
                            - 4LL))();
}

uint64_t sub_100588C10@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((a1 + 1423) * (v1 != 0x74A3168E8AC5AD46LL)) ^ a1)) - 4LL))();
}

uint64_t sub_100588C80()
{
  STACK[0x870] = v1;
  return v0();
}

uint64_t sub_100588C88(int a1)
{
}

uint64_t sub_100588CD4@<X0>(int a1@<W8>)
{
  int v3 = STACK[0x6C0];
  unint64_t v4 = STACK[0x998];
  *(_BYTE *)(STACK[0x998] + (v3 - 383815302)) = 0x80;
  unint64_t v5 = (uint64_t (*)(void))(*(void *)(v2 + 8LL * a1) - 8LL);
  int v6 = 230600693 * ((((v1 - 192) | 0x39C247B7) - (v1 - 192) + ((v1 - 192) & 0xC63DB848)) ^ 0xEBFEC19C);
  *(_DWORD *)(v1 - 192) = (a1 + 656) ^ v6;
  *(void *)(v1 - 184) = v4 + (v3 - 383815301);
  *(void *)(v1 - 176) = v4;
  *(_DWORD *)(v1 - 164) = ((a1 + 1631) ^ 0x123570F8) + v3 - v6 - 186382337;
  sub_10068703C((_DWORD *)(v1 - 192));
  return v5();
}

uint64_t sub_100588D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((v6 - 120) ^ (31 * (a6 != 0)))) - 109 * (v6 ^ 0x689u) + 1191LL))();
}

uint64_t sub_100588DC8()
{
  return sub_100588684(15988LL, 13);
}

uint64_t sub_100588E08()
{
  BOOL v10 = v2 < v1;
  *(_BYTE *)(v5 + v8 - 0x150D5D2714BF6C67LL) = *(_BYTE *)(v4 + v7 - 0x4D1A37C42FD5B30BLL);
  if (v10 == v6 - 0x45C4AA6B01F987C9LL < v1) {
    BOOL v10 = v6 - 0x45C4AA6B01F987C9LL < v2;
  }
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((!v10 * v3) ^ v0)) - 12LL))();
}

uint64_t sub_100588EA0(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((a1 - 614) ^ (35 * (v1 != 0))))
                            - ((a1 + 402364625) & 0xE80461BF)
                            + 271LL))();
}

uint64_t sub_100588EE0()
{
  LODWORD(STACK[0x5E8]) = STACK[0x844];
  return sub_1005E1E24();
}

uint64_t sub_100588EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  BOOL v4 = *(unsigned __int8 *)(STACK[0x688] + 2) == 1;
  LODWORD(STACK[0x5E8]) = STACK[0x844];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3
                                                                        + 8LL
                                                                        * ((v4 * (((a3 ^ 0x111) + 1664) ^ 0x581)) ^ a3))
                                                            - 305 * (a3 ^ 0x111u)
                                                            + 602LL))( a1,  a2,  4294924392LL);
}

uint64_t sub_100588F4C()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((145
                                          * (*(_BYTE *)(v1
                                                      + ((v0 - 335) ^ 0xB3917905 ^ (v0 + 56))
                                                      + LODWORD(STACK[0x5E8])) == 0)) | v0))
                            - 8LL))();
}

uint64_t sub_100588F94()
{
  unsigned int v2 = ((v0 - 464167628) & 0x1BAAA6B3 ^ 0x8D1F913B) + LODWORD(STACK[0x5E8]);
  BOOL v3 = v2 < 0xD98E1D2E;
  BOOL v4 = v2 >= LODWORD(STACK[0x5E8]) - 1927309399;
  if (LODWORD(STACK[0x5E8]) - 1927309399 < ((v0 - 442) ^ 0xD98E1DCE) != v3) {
    BOOL v5 = v3;
  }
  else {
    BOOL v5 = v4;
  }
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((499 * !v5) ^ (v0 - 442))) - 8LL))();
}

uint64_t sub_100589028@<X0>(int a1@<W0>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
}

void sub_100589060()
{
}

uint64_t sub_10058906C@<X0>(int a1@<W8>)
{
  BOOL v9 = v2 < v1;
  *(_BYTE *)(v4 + v6 - 0xE5EB4FEF436D4EALL) = *(_BYTE *)(v3 + v7 - 0x75D36765783E2E36LL);
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((1996 * v9) ^ a1)) - 4LL))();
}

uint64_t sub_100589108(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_100589148()
{
  int v1 = malloc(0x10uLL);
  STACK[0x790] = (unint64_t)v1;
  uint64_t v2 = malloc(0x10uLL);
  STACK[0x818] = (unint64_t)v2;
  if (v1) {
    BOOL v3 = v2 == 0LL;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v4 * ((v0 - 943982026) & 0x384402DD ^ 0x29D)) ^ v0)) - 8))();
}

uint64_t sub_1005891B0(uint64_t a1)
{
  int v5 = 2 * (v3 ^ 0x5D0);
  unsigned int v6 = ((2 * *(unsigned __int8 *)(v1 + 3)) & 0xFFDF) + (*(unsigned __int8 *)(v1 + 3) ^ 0xFE6FFFEF);
  unsigned int v7 = v6 + ((v5 - 1074643427) & 0x400DC1ED ^ 0x3FF04C31);
  int v8 = v2 - v6;
  LODWORD(STACK[0x85C]) = v7;
  LODWORD(STACK[0x76C]) = v8 - 26214436;
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t))(*(void *)(v4
                                                                                 + 8LL
                                                                                 * ((931
                                                                                   * ((((_BYTE)v8 + 7) & 0xF) == 2 * (((_BYTE)v8 + 7) & 3))) ^ v5))
                                                                     - 12LL))( a1,  STACK[0x618],  4294924393LL);
}

uint64_t sub_100589258(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  STACK[0x850] = a4;
  STACK[0x760] = a1;
  STACK[0x6E8] = v7 + 510;
  STACK[0x910] = v7 + 528;
  LODWORD(STACK[0x758]) = -721523495;
  STACK[0x658] = v6 + 4;
  BOOL v10 = v6 != -4 || a5 == 1046498795;
  return (*(uint64_t (**)(void))(v8 + 8LL * (v5 ^ (575 * v10))))();
}

uint64_t sub_1005892D8()
{
  BOOL v5 = v0 != 603954228 && v1 == 0;
  return (*(uint64_t (**)(void))(v3 + 8LL * ((61 * (((((v2 ^ 0x7CD) - 1110) ^ v5) & 1) == 0)) ^ v2)))();
}

uint64_t sub_100589318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = v7 - 264;
  unint64_t v9 = ((v7 - 264) ^ 0xED617E04) + v6;
  LODWORD(STACK[0x648]) = a5;
  uint64_t v10 = qword_1009C72B8;
  unint64_t v11 = dword_1009C74C0 & 0xFFFFFFFFDC9C8948LL;
  LODWORD(STACK[0x640]) = v6;
  STACK[0x650] = (v5 - v6);
  BOOL v13 = v9 < 0x11611730 || (unint64_t)(v8 - 282) + 291574610 < v9;
  return ((uint64_t (*)(void, uint64_t, unint64_t))((char *)*(&off_10090DDE0 + ((509 * v13) ^ v8))
                                                                    - 124 * (v8 ^ 0x4F0u)
                                                                    + 980))( (v6 + a5 + 1585483946),  v10,  v11);
}

uint64_t sub_1005893FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unint64_t v11 = (((((*(_DWORD *)(a2 + a3) ^ ((_DWORD)v5 + (_DWORD)v6)) & 0x7FFFFFFFu) * v7) >> ((a4 + 34) ^ 0x10)) ^ (((*(_DWORD *)(a2 + a3) ^ ((_DWORD)v5 + (_DWORD)v6)) & 0x7FFFFFFF) * v7))
      * v7;
  int v12 = byte_10072EBC0[v11 >> 24] ^ *(unsigned __int8 *)(v5 + v6) ^ byte_1007311E0[v11 >> 24] ^ byte_1007556B0[v11 >> 24] ^ v11 ^ (17 * (v11 >> 24));
  *(_BYTE *)(v8 + v6) = *(_BYTE *)(v9 + v6) ^ (v12 - ((2 * v12) & 0xD0) - 24) ^ (((a4 + 26) ^ v10) + 58);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((a4 + 546) | ((v6 == 254) * v4))) - 12))();
}

void sub_100589610()
{
}

uint64_t sub_10058961C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * (((v6 ^ 0x678 ^ ((v6 - 1666) | 0xD1) ^ 0x5DC) * (a6 == 0)) ^ (v6 - 1457)))
                            - 8LL))();
}

uint64_t sub_10058965C()
{
  STACK[0x7C0] = 1LL;
  BOOL v1 = container_system_group_path_for_identifier(0LL, "systemgroup.com.apple.pisco.suinfo", &STACK[0x7C0]) != 0;
}

uint64_t sub_1005896BC()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
}

uint64_t sub_100589704()
{
  size_t v2 = strlen(v1);
  BOOL v3 = malloc((v2 ^ 0xAB4925FF4F3FFF2ELL ^ ((v0 - 639) | 0x51u)) + ((2 * v2) & 0x56924BFE9E7FFFFELL) + 0x54B6DA00B0C0001ELL) != 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1260 * v3) ^ v0)) - 8))();
}

uint64_t sub_100589798()
{
  LODWORD(STACK[0x660]) = umask(0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((248 * (v1 + ((v0 - 754) | 0x102u) + 0x54B6DA00E7BA032ALL != 922354744)) ^ (v0 + 363)))
                            - 8))();
}

uint64_t sub_100589830@<X0>(unint64_t a1@<X8>)
{
  *(_BYTE *)(v2 + v6 - 0x6B7039DC39A1DCB6LL) = *(_BYTE *)(((v7 + 841896245) & 0xCDD1AB6F)
                                                        + v1
                                                        + v5
                                                        - 0x37F6FD83A32A181DLL);
  BOOL v9 = v3 - 0x1CB73F243BE87EEALL < a1;
  if (a1 < v8 != v3 - 0x1CB73F243BE87EEALL < v8) {
    BOOL v9 = a1 < v8;
  }
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((248 * v9) ^ v7)) - 8LL))();
}

uint64_t sub_1005898D8()
{
  STACK[0x658] = v1;
  strcpy((char *)&v3[v4 + v5], "/Library");
  uint64_t v6 = v0;
  int v7 = mkdir(v3, 0x1EDu);
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
                                        * (int)(((((v2 ^ 0xFEF3FCF5) & (2 * v7)) + (v7 ^ 0x7F79FEFD) == 2138701564)
                                               * (((v2 + 692789776) & 0xD6B4DDEE) + 466)) ^ v2))
                            - 8LL))();
}

uint64_t sub_100589970()
{
  BOOL v1 = *__error() == (((v0 ^ 0x334) - 317) ^ (v0 - 34));
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (v1 | v0)) - 8))();
}

uint64_t sub_1005899B4()
{
  v1[v2 + 0x54B6DA00B0C00016LL] = 0;
  int v4 = mkdir(v1, 0x1EDu);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((115
                                        * (((v4 << (((v3 + 61) & 0xEA) - 97)) & ((v3 + 1979976469) & 0x89FBF3BE ^ 0x3EFD34F0))
                                         + (v4 ^ 0x9F7E9AFF) != -1619092738)) ^ v3))
                            - 8))();
}

uint64_t sub_100589A90()
{
  BOOL v1 = *__error() == 17;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v1 * (((v0 - 234) | 0xC8) ^ 0x3AB)) ^ v0)) - 8))();
}

uint64_t sub_100589AE0()
{
  *(_DWORD *)uint64_t v3 = 1668509743;
  *(_WORD *)(v3 + 4) = 26926;
  *(_BYTE *)(v3 + 6) = 100;
  *(_BYTE *)(v0 + 2_Block_object_dispose(va, 8) = 0;
  *(_BYTE *)(v2 + STACK[0x658]) = 0;
  umask(STACK[0x660]);
  free(v1);
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (int)(((((v4 ^ 0xDF45028E) - 171) | 0x90) + 185) ^ v4 ^ 0xDF45028E)))();
}

uint64_t sub_100589B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * ((v6 - 46) ^ (111 * (v5 == 0))))
                                                                                       - ((((v6 + 495525614) & 0xE276E6FF)
                                                                                         - 1504) ^ 0xF2LL)))( a1,  a2,  a3,  a4,  a5,  4294924388LL);
}

uint64_t sub_100589BA4()
{
  LODWORD(STACK[0x660]) = umask(0x12u);
  int v3 = open(v0, 289);
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((465
}

uint64_t sub_100589C34@<X0>(int a1@<W8>)
{
  uint64_t v2 = fcntl(a1 - 1845492671, 64);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0
                                           + (((v1 ^ 0x6DA) + 833) ^ v1 ^ 0x6DA ^ (29
                                                                                 * (((((v1 ^ 0x6DA) - 1) ^ ((((_DWORD)v2 - (v1 ^ 0x6DA)) | ((v1 ^ 0x6DA) - v2)) >> 31)) & 1) == 0)))))(v2);
}

uint64_t sub_100589CA4(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8LL * ((899 * (v1 != 0)) ^ (a1 - 1156))))();
}

uint64_t sub_100589CD8()
{
  int v1 = LODWORD(STACK[0x86C]) - LODWORD(STACK[0xA20]);
  LODWORD(STACK[0x8BC]) = v1;
  uint64_t v2 = malloc((v1 - 150298638));
  STACK[0x988] = (unint64_t)v2;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((964 * (v2 == 0LL)) ^ v0)) - (((v0 ^ 0x17Eu) + 358) ^ 0x61DLL)))();
}

uint64_t sub_100589D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v7
                                                                                                  + 8LL * ((73 * ((((v6 | ((unint64_t)(v6 < 0x8F5600E) << 32)) == 150298638) ^ (v5 - 102)) & 1)) ^ v5))
                                                                                      - 8LL))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_100589D94@<X0>(_BYTE *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v5 = 17 * (v3 ^ 0x677u);
  unint64_t v6 = v5 ^ (a2 - 638);
  int v7 = v5 - 1410;
  BOOL v8 = v2 < v6;
  *a1 = (*(_BYTE *)STACK[0x990] ^ 0xF7) + ((2 * *(_BYTE *)STACK[0x990]) & 0xEF) + 62;
  if (v8 == a2 > 0xD9517C82) {
    BOOL v8 = v2 > 0xD9517C82;
  }
  return (*(uint64_t (**)(void))(v4 + 8LL * ((893 * !v8) ^ v7)))();
}

void sub_100589E80()
{
}

uint64_t sub_100589E94()
{
  int v3 = LODWORD(STACK[0x648]) + LODWORD(STACK[0x640]) + 618599389;
  uint64_t v4 = (char *)&STACK[0xB80] + v0 + 383;
  STACK[0x870] = v2 + 1088;
  STACK[0x650] = (unint64_t)&STACK[0xB80] + v0 + 319;
  sub_10069334C(asc_1007546E0, (char *)&STACK[0xB80] + v0 + 319, 0x40uLL);
  STACK[0x658] = (unint64_t)v4;
  uint64_t v5 = sub_10069334C(asc_1007416D8, v4, 0x40uLL);
  return ((uint64_t (*)(char *))((char *)*(&off_10090DDE0
                                                   + ((1359 * (v3 + 2025914884 < (((v1 ^ 0x77E) - 1736) ^ 0xCDu))) ^ v1))
                                         - 8))(v5);
}

uint64_t sub_100589F3C()
{
  LODWORD(STACK[0x758]) = -721523658;
  _BYTE *v2 = *(_BYTE *)(v1 + 0u % (v0 + v3 - 1467));
  return (*(uint64_t (**)(void))(v4 + 8LL * ((v3 - 1467) ^ 0x7BF)))();
}

uint64_t sub_100589FD8()
{
  unsigned int v6 = (39651 * (unsigned __int16)(((19 * (v3 ^ 0x126)) ^ 0x52F0) + v2)) >> 16;
  int v7 = *(unsigned __int8 *)(v4 + (v2 + v0 + 142) % 0x13Fu);
  HIDWORD(__chkstk_darwin(v7, v8) = v7 ^ 5;
  LODWORD(__chkstk_darwin(v7, v8) = (v7 ^ 0x80) << 24;
  uint64_t v9 = (unsigned __int16)(((19 * (v3 ^ 0x126)) ^ 0x52F0)
                        + v2
                        - 319
                        * ((unsigned __int16)(v6
                                                             + ((unsigned __int16)((((19 * (v3 ^ 0x126)) ^ 0x52F0)
                                                                                  + v2
                                                                                  - v6) & 0xFFFE) >> 1)) >> 8));
  int v10 = *(unsigned __int8 *)(v4 + (v2 + v0 + 98) % 0x13Fu);
  int v11 = (v8 >> 29) - ((2 * (v8 >> 29)) & 0x78) - 68;
  HIDWORD(__chkstk_darwin(v7, v8) = v10 ^ 5;
  LODWORD(__chkstk_darwin(v7, v8) = (v10 ^ 0x80) << 24;
  int v12 = ((v8 >> 27) ^ 0x65) + ((2 * (v8 >> 27)) & 0xFFFFFFCA) + (*(unsigned __int8 *)(v4 + v9) ^ v11 ^ 0x39);
  int v13 = *(unsigned __int8 *)(v4 + (v2 + v0) % 0x13Fu);
  HIDWORD(__chkstk_darwin(v7, v8) = ~v13;
  LODWORD(__chkstk_darwin(v7, v8) = (v13 ^ 0x84) << 24;
  int v14 = ((v8 >> 25) ^ 0x2D)
      - ((2 * (v8 >> 25)) & 0xFFFFFFA4)
      + ((v12 - 101) ^ 0xFFFFFFFA)
      + ((2 * (v12 - 101)) & 0xFFFFFFF4)
      + 1;
  int32x4_t v15 = *(uint64_t (**)(void))(v5 + 8LL * ((117 * (v2 + 1 != v1 + 1276)) ^ v3));
  *(_BYTE *)(v4 + v9) = v14 - ((2 * v14) & 0xA) + 93;
  return v15();
}

uint64_t sub_10058A140@<X0>(char a1@<W2>, int a2@<W8>)
{
  LODWORD(STACK[0x648]) = 0;
  int v7 = (v6[109] ^ 0x85) - ((2 * (v6[109] ^ 0x85)) & 0x7A) - 231653315;
  unsigned int v8 = (v6[21] ^ 0x85)
  unsigned int v9 = ((v8 ^ 0x4096DAF5 | v7 ^ 0xF231403D) - ((2 * (v8 ^ 0x4096DAF5 | v7 ^ 0xF231403D)) & 0xFFFFFFC3) + 97) & 0x73 ^ 0x1B080261;
  unsigned int v10 = (((2 * v9) & 0x36100446) - v9 - 536524708) ^ 0xFB0D4A5C | (((v8 ^ 0x40105AF5) & (v7 ^ 0x3D))
                                                                 - ((2 * ((v8 ^ 0x40105AF5) & (v7 ^ 0x3D))) & 0x548242CC)
                                                                 + 709042534) ^ 0x2A432166;
  unsigned int v11 = (v10 - ((2 * v10) & 0x52533C46) - 383148509) ^ 0xE9299E23;
  unsigned int v12 = ((2 * v11 * v11 * v11) & 0xFD7FEBFA) + ((v11 * v11 * v11) ^ 0x7EBFF5FD);
  unint64_t v13 = STACK[0x650];
  int v14 = (*(_BYTE *)(STACK[0x650] + (v6[40] & 0x3F ^ 5LL)) & a1) ^ 0x61;
  unsigned int v15 = ((v14 | 0xFFFFFFCC) - (v14 | 0x33) + 51) ^ 0xFFFFFFEC | ((((v6[352] & 0x8A) - 111) ^ 0x17) - 127) ^ 0xD;
  unsigned int v16 = v15 + (~(2 * v15) | 0xFFFFFF9F) + 49;
  unint64_t v17 = STACK[0x658];
  int v18 = v6[355];
  int v19 = (*(unsigned __int8 *)(STACK[0x658] + (v6[52] & 0x3F ^ 5LL)) ^ 0x4B) & (v18 ^ 0x4B);
  int v20 = v19 - ((2 * v19) & 0x40) - 96;
  unsigned int v21 = ((v18 & 0xB0 ^ 0xFFFFFFEF) - (v18 & 8)) ^ 0xFFFFFFE7;
  unsigned int v22 = v20 ^ 0xFFFFFFA0 | (((2 * v21) | 0xFFFFFF98) - v21 + 52) ^ 0x74;
  unsigned int v23 = v22 - ((2 * v22) & 0xFFFFFFBA) - 35;
  unsigned int v24 = (v23 ^ 0x99999999 | v16 ^ 0x20) & 0x2B ^ 0x76;
  unsigned int v25 = (v6[94] ^ 0xFFFFFF85)
      - ((v24 - ((2 * v24) & 0x18) + 12) ^ 0x7A | (((v23 ^ 0xFFFFFFDD) & (v16 ^ 0x30))
                                                 - 8 * (((v23 ^ 0xFFFFFFDD) & (v16 ^ 0x30)) >> 2)
                                                 - 4) ^ 0xFFFFFFFC);
  v6[94] = v25 - (v2 & (2 * v25)) - 123;
  LOBYTE(v25) = (((2 * v6[139]) & 4) + (v6[139] & 0x36 ^ 0xEF) + 117) ^ 0x74;
  v6[64] ^= v2 ^ (((2 * (v25 + 93)) & 4 ^ 0xEF)
                                                  + ((((v25 + 93 - ((2 * v25) & 0xB8)) ^ 0x49 | (((18
                                                                                                 - (byte_10072FCE0[v6[85] & 0x3F ^ 5LL] | 0x3F)) ^ 0x5E)
                                                                                               + 122) & 0x40)
                                                    - 2 * ((v25 + 93 - ((2 * v25) & 0xB8)) & 0x22 ^ (v25 + 93) & 2)
                                                    + 32) & 0xF7 ^ 0x28)
                                                  + 11);
  unsigned int v26 = *(unsigned __int8 *)(v13 + (v6[157] & 0x3F ^ 5LL)) ^ 0xFFFFFFB4;
  LODWORD(STACK[0x5E0]) = v26 - ((2 * v26 - 4) & 0xFFFFFFEF);
  unsigned int v27 = v6[125] & 0xC9 ^ 0xFFFFFFE1;
  unsigned int v28 = ((v27 | 0x48) - (v27 | 0xFFFFFFB7) - 73) ^ 0x2A;
  LODWORD(STACK[0x5D8]) = v28 + (~(2 * v28) | 0x35);
  int v29 = *(unsigned __int8 *)(v13 + (v6[104] & 0x3F ^ 5LL)) ^ 0x4B;
  char v30 = v6[387];
  unsigned int v31 = (-(v30 & 0xA1 ^ 1) - 77) ^ 0xFFFFFFB3;
  unsigned int v32 = ((2 * v31) & 0xFFFFFF8A) - v31;
  unsigned int v33 = (v32 - 70) ^ 0xFFFFFFBA | v30 & 0x3E ^ 0x34;
  unsigned int v34 = (((v33 - 2 * (v33 & 7 ^ v32 & 1) + 14) ^ 6) - 8) & ((v29 * v29 - ((2 * v29 * v29) & 0xFFFFFFB2) - 39) ^ 0xFFFFFFD9);
  LODWORD(STACK[0x640]) = v34 - ((2 * v34) & 0x6C);
  LOBYTE(v34) = (v6[52] ^ 0x7A) + (v6[175] ^ 0x85) + 1;
  v6[175] = v34 - (v2 & (2 * v34)) - 123;
  unsigned int v35 = 205 * (*(unsigned __int8 *)(v17 + (v6[44] & 0x3F ^ 5LL)) ^ 0x4B);
  LODWORD(STACK[0x5D0]) = (v35 >> 10) - ((v35 >> 9) & 0x66666666);
  v6[100] = (v6[100] ^ 0x85) - ((2 * (v6[100] ^ 0x85) + 10) & v2) - 126;
  v6[327] = -73;
  LOBYTE(v35) = (v6[386] ^ 0x4B) + (*(_BYTE *)(v13 + (v6[17] & 0x3F ^ 5LL)) ^ 0x4B);
  v6[386] = v35 - ((2 * v35) & 0x96) + 75;
  LOBYTE(v35) = byte_10072FCE0[v6[57] & 0x3F ^ 5LL];
  char v36 = ~v6[415] & 0x8C ^ 0x84 | ((v35 & v5) + (v35 & 0x60 ^ 0x49) - 1) ^ 0x6A;
  unsigned __int8 v37 = (v36 + (~(2 * v36) | 9) - 4) ^ 0xFB;
  unsigned int v38 = (v6[101] ^ 0xFFFFFF85)
      + ((v37 / 3u) ^ 0xFFFFFFAA)
  v6[101] = v38 - (v2 & (2 * v38)) - 123;
  LOBYTE(v3_Block_object_dispose(va, 8) = byte_10072FCE0[v6[217] & 0x3F ^ 5LL];
  unsigned int v39 = (((v38 & 0x75 ^ 0xFFFFFFAA) - ((2 * (v38 & 0x75 ^ 0xFFFFFFAA)) & 0x60) + 48) ^ 0x30) & (v6[398] ^ 0x4B);
  unsigned int v40 = (v39 - ((2 * v39) & 0xFFFFFFA0) - 48) ^ 0xFFFFFFD0 | ((v38 & 0x8A ^ 0xFFFFFFC2 | 0xFFFFFFB5)
                                                            - (v38 & 0x8A ^ 0xFFFFFFC2 | 0x4A)
                                                            + 74) ^ 0xFFFFFFFD;
  int v41 = (v40 - ((2 * v40) & 0x44) + 34) ^ 0x22 | (v6[7] >> 1) ^ 0x42;
  LOBYTE(v41) = (v6[249] ^ 0x85) + (v41 ^ 8) - ((2 * v41) & 0xEF) - 8;
  v6[249] = v41 - (v2 & (2 * v41)) - 123;
  v6[30] ^= 0x58u;
  LOBYTE(v33) = *(_BYTE *)(v13 + (v6[241] & 0x3F ^ 5LL)) & 0xFC ^ 0x6E;
  LOBYTE(v41) = (v33 - ((2 * v33) & 0xD0) - 23) ^ 0xCF | ((v6[383] & 1) - (v6[383] | 0xFD) + 7) ^ 9;
  LOBYTE(v41) = (v41 - ((2 * v41) & 0xEC) + 118) ^ 0x76;
  v6[215] = v41 * v41 * v41 - (v2 & (2 * v41 * v41 * v41)) - 123;
  LODWORD(STACK[0x620]) = v12;
  v6[446] = *(_BYTE *)(v13 + ((61 - (_BYTE)v12) & 0x3F));
  LOBYTE(v41) = *(_BYTE *)(v13 + (v6[13] & 0x3F ^ 5LL));
  unsigned int v42 = ((((v41 & 0x2C ^ 0x20) + (v41 & 0x20) + 65 - ((v41 & 0x2C ^ 0x20) & 0x20)) ^ 0xE1)
       - ((2 * ((v41 & 0x2C ^ 0x20) + (v41 & 0x20) + 65)) & 8)
       + 21) & 0x7C ^ 0xFFFFFFBF;
  char v43 = (v6[146] ^ 0x1B) + 98 + ((2 * (v6[146] ^ v4)) & 0x3C);
  char v44 = ((v43 * v43 - ((2 * v43 * v43) & 0xE6) + 115) ^ 0x73) * v43;
  char v45 = ((2 * v44) & 0xDE) + (v44 ^ 0x6F);
  unsigned int v46 = (((v42 - ((2 * v42) & 8) - 126) ^ 0x86)
       - ((2 * (v42 - ((2 * v42) & 8) - 126)) & 0xC0)
       - 1205220000) ^ 0xB829CD60;
  v6[381] = ((v46 << ((v45 + 1) & 7)) - ((2 * (v46 << ((v45 + 1) & 7))) & 0x16) + 11) ^ ((v46 >> ((7 - v45) & 7))
                                                                                       - ((2 * (v46 >> ((7 - v45) & 7))) & 0x9A)
                                                                                       + 77) ^ 0xD;
  int v47 = v6[131] ^ 0x85;
  int v48 = (v6[393] ^ 0x4B) - ((2 * (v6[393] ^ 0x4B)) & 0x76) - 1145007301;
  unsigned int v49 = (((v48 ^ 0xBBC0933B | v47) - ((2 * (v48 ^ 0xBBC0933B | v47)) & 0xF48) + 4004) ^ 0xFA4) & (((v6[400] ^ 0x4B)
  unsigned int v50 = (v49 - ((2 * v49) & 0x65BD160C) + 1927187206) ^ 0x72DE8B06 | (((v48 ^ 0x3B) & v47)
                                                                    - ((2 * ((v48 ^ 0x3B) & v47)) & 0x58)
                                                                    - 1594200276) ^ 0xA0FA6F2C;
  LOBYTE(v4_Block_object_dispose(va, 8) = *(_BYTE *)(v17 + (v6[220] & 0x3F ^ 5LL));
  LOBYTE(v1_Block_object_dispose(va, 8) = (((2 * v48) | 0xFB) - (v48 & 3) - 62) ^ 0xBA;
  LOBYTE(v1_Block_object_dispose(va, 8) = ((2 * v18) & 0xBF) + (v18 ^ 0xDF);
  unsigned int v51 = (v50 - ((2 * v50) & 0x79E0C2BE) - 1125097121) ^ 0xBCF0615F;
  int v52 = ((v51 >> (v18 + 33)) - ((2 * (v51 >> (v18 + 33))) & 0xDC) + 238) ^ ((v51 << (-25 - v18))
                                                                          - ((2 * (v51 << (-25 - v18))) & 0x3A)
                                                                          + 157);
  LOBYTE(v52) = (v6[330] ^ 0x4B) + (v52 ^ 0xC) + ((2 * v52) ^ 0xE6) - 127;
  v6[330] = v52 - ((2 * v52) & 0x96) + 75;
  LOBYTE(v4_Block_object_dispose(va, 8) = (*(_BYTE *)(v17 + (v6[27] & 0x3F ^ 5LL)) ^ 0x31)
              - 122
              + ((2 * (*(_BYTE *)(v17 + (v6[27] & 0x3F ^ 5LL)) ^ 0x4B)) & 0xF4);
  LOBYTE(v4_Block_object_dispose(va, 8) = ((2 * v48 * v48) & 0xB4) + ((v48 * v48) ^ 0x5A);
  unsigned int v53 = (((v6[10] >> 1) ^ 0x42) - (v6[10] & 0x6A) + 1692375733) ^ 0x64DF9AB5;
  int v54 = ((v53 >> ((v48 + 6) & 7)) - ((2 * (v53 >> ((v48 + 6) & 7))) & 0xA0) + 80) ^ ((v53 << ((2 - v48) & 7))
                                                                                   - 2
                                                                                   * ((v53 << ((2 - v48) & 7)) & 0x3F)
                                                                                   + 63);
  LOBYTE(v54) = (v6[67] ^ 0x85) + (v54 ^ 0xEF) + ((2 * v54) ^ 0x21) - 127;
  v6[67] = v54 - (v2 & (2 * v54)) - 123;
  LOBYTE(v54) = (byte_10072FCE0[v6[136] & 0x3F ^ 5LL] & 0xAC ^ 0xF3) - 1;
  LOBYTE(v54) = ((v54 & 0x44) + (v54 ^ 0x67) + (v54 | 0xBB)) & 0xEC | 1;
  LOBYTE(v54) = (v6[195] ^ 0x85) + (v54 ^ 0x86) + ((2 * v54) ^ 0xF2) + 3;
  v6[195] = v54 - (v2 & (2 * v54)) - 123;
  unsigned int v55 = 171 * (byte_10072FCE0[v6[56] & 0x3F ^ 5LL] ^ 0x4C);
  int v56 = ((v55 >> 8) & 0xBE) + ((v55 >> 9) ^ 0x5F);
  LOBYTE(v47) = *(_BYTE *)(v13 + (v6[196] & 0x3F ^ 5LL)) ^ 0x4B;
  LOBYTE(v55) = *(_BYTE *)(v17 + (v6[21] & 0x3F ^ 5LL)) ^ 0x4B;
  char v57 = (v55 | v47) - ((2 * (v55 | v47)) & 0x54) + 106;
  LOBYTE(v55) = ((v57 & 0x41 ^ 0x81) + (v57 & 0x49 ^ 0x6A) - ((v57 & 0x49 ^ 0x6A) & 0xC7)) ^ 0xE1 | ((v55 & v47) + (~(2 * (v55 & v47)) | 0xF9) - 124) ^ 0x83;
  LOBYTE(v55) = (*(_BYTE *)(v17 + (v6[127] & 0x3F ^ 5LL)) ^ 0x4B) + (v55 ^ 6) - ((2 * v55) & 0xF3) - 6;
  LOBYTE(v55) = (v6[423] ^ 0x4B) + 2 * v55 + (v55 ^ 0x7F) - 127;
  v6[423] = v55 - ((2 * v55) & 0x96) + 75;
  LOBYTE(v55) = (3 - (~*(_BYTE *)(v17 + (v6[65] & 0x3F ^ 5LL)) & 2)) & 6 ^ v2;
  LOBYTE(v55) = ((v55 - ((2 * v55) & 0xF7) - 22) ^ 0xEA) & (v6[140] ^ 0x85);
  int v58 = *(unsigned __int8 *)(v13 + (v6[182] & 0x3F ^ 5LL));
  v6[369] = v55 - ((2 * v55) & 0x16) + 75;
  v6[321] = (((v6[134] & 9 ^ 0xD5) + (v6[134] & 0x80)) | 0x74u) / 5
  unsigned int v59 = 171 * (v6[339] ^ 0x4B);
  int v60 = ((v59 >> 9) - ((v59 >> 8) & 0x64) - 78) & 0x49 | ((v59 >> 9) - (BYTE1(v59) & 0x64) + 58) & 4;
  LOBYTE(v59) = (*(_BYTE *)(v13 + (v6[39] & 0x3F ^ 5LL)) ^ v2) + 50;
  LOBYTE(v60) = v60 | ((v59 & 0x32) - ((2 * v59) & 4) + 70) ^ 0x46;
  LOBYTE(v60) = (v6[330] ^ 0x4B) + (v60 ^ 0xF3) + ((2 * v60) & 0xE7) + 13;
  v6[330] = v60 - ((2 * v60) & 0x96) + 75;
  char v61 = ((v6[322] & 7 ^ 0x94) + 120) ^ 0xB3;
  LOBYTE(v32) = v61 + 68 + ((2 * (((v6[322] & 7 ^ 0x94) + 120) ^ 0xF)) & 8);
  unsigned int v62 = ((55 << v32) - ((110 << v32) & 0x7F3D781C) - 6374386) ^ ((0x37u >> ((4 - v61) & 7))
                                                               - ((0x6Eu >> ((4 - v61) & 7)) & 0x24)
                                                               + 639813586);
  unsigned int v63 = (((v62 & 0xFFFFFFD2 ^ 0xD9BC7BFD) - ((2 * (v62 & 0xFFFFFFD2 ^ 0xD9BC7BFD)) & 0x1AA) + 213) ^ 0xD5) & (((v6[401] ^ 0x4B) - ((2 * (v6[401] ^ 0x4B)) & 0x46) - 1366135261) ^ 0xAE926E23);
  int v64 = ((v63 - ((2 * v63) & 0x1D2F61A4) + 244822226) | v62 & v3 ^ 0xC) ^ 0xE97B0D2;
  unsigned int v65 = ((LODWORD(STACK[0x640]) + 54) ^ 0x7D)
      + ((v64 - ((2 * v64) & 0xC2) + 97) ^ 0x12)
      + ((2 * (v64 - ((2 * v64) & 0xC2) + 97)) & 0xFFFFFFE7 ^ 0xFFFFFFC2);
  LOBYTE(v63) = (v6[237] ^ 0x85) + (byte_10072FCE0[v6[201] & 0x3F ^ 5LL] ^ 0x55);
  v6[237] = v63 - (v2 & (2 * v63)) - 123;
  int v66 = *(unsigned __int8 *)(v17 + (v6[120] & 0x3F ^ 5LL)) ^ 0x4B;
  int v67 = (v6[400] ^ 0x4B) - ((2 * (v6[400] ^ 0x4B)) & 0x1AC) + 844288726;
  int v68 = v66 - ((2 * v66) & 0xBE) + 1490743135;
  int v69 = (((v68 ^ 0x58DAEF5F | v67 ^ 0x3252D2D6) - ((2 * (v68 ^ 0x58DAEF5F | v67 ^ 0x3252D2D6)) & 0x36) + 27) ^ 0x1B) & (v6[392] ^ 0x4B);
  unsigned int v70 = (v69 - ((2 * v69) & 0xFFFFFF83) - 1990679871) ^ 0x8958A2C1 | (((v68 ^ 0x1052835F) & (v67 ^ 0x52D6))
                                                                    - ((2 * ((v68 ^ 0x1052835F) & (v67 ^ 0x52D6))) & 0x2EAD530C)
                                                                    + 391555462) ^ 0x1756A986;
  unsigned int v71 = ((v6[436] ^ 0x4B) - ((2 * (v6[436] ^ 0x4B)) & 0x12C) - 1001780842) ^ 0xC44A0996;
  int v72 = v70 - ((2 * v70) & 0x6D4C18CC) - 1230631834;
  unsigned int v73 = ((v72 ^ 0xB6A60C66 | v71) - ((2 * (v72 ^ 0xB6A60C66 | v71)) & 0x26) + 19) & 0x4F ^ 0x43;
  unsigned int v74 = ((((v73 | 0x55EEAC2B) - (v73 | 0xAA1153D4) - 1441705004) & 0x422AB84 ^ 0x2014204)
       + (((v73 | 0x55EEAC2B) - (v73 | 0xAA1153D4) - 1441705004) ^ 0xFDEEBDAB)
       - ((((v73 | 0x55EEAC2B) - (v73 | 0xAA1153D4) - 1441705004) ^ 0xFDEEBDAB) & 0x384)) ^ 0xAE23FA44 | (((v72 ^ 0xC66) & v71) - ((2 * ((v72 ^ 0xC66) & v71)) & 0x2127A70E) - 795618425) ^ 0xD093D387;
  LODWORD(STACK[0x5C8]) = v74 - ((2 * v74) & 0x44);
  STACK[0x640] = (((v58 ^ 0x4B) + 13) ^ 0xFFFFFFDF) + ((2 * ((v58 ^ 0x4B) + 13)) & 0xFFFFFFBF) + 33;
  int v75 = v6[327];
  int v76 = ((*(unsigned __int8 *)(v13
                             + (((((v58 ^ 0x4B) + 13) ^ 0xDF)
  LOBYTE(v5_Block_object_dispose(va, 8) = ((((v6[208] ^ 0x85) + 43) ^ 0x7F) + 2 * ((v6[208] ^ 0x85) + 43) - 127) & (v75 ^ 0xB4);
  LOBYTE(v76) = (v58 - ((2 * v58) & 0x56) + 43) ^ 0x2B | (v76 - ((2 * v76) & 0x72) - 71) ^ 0xB9;
  LOBYTE(v76) = (v6[335] ^ 0x4B) + (v76 ^ 0xBB) + ((2 * v76) & 0x76) + 69;
  v6[335] = v76 - ((2 * v76) & 0x96) + 75;
  LOBYTE(v76) = *(_BYTE *)(v17 + (v6[162] & 0x3F ^ 5LL));
  LOBYTE(v4_Block_object_dispose(va, 8) = ((((v76 & 0x81 ^ 0x7F) + 116) ^ 0x8C) & (v6[323] ^ 0x4B)) - 2 * ((v6[323] ^ 0x4B) & 6 ^ v6[323] & 4);
  LOBYTE(v76) = ((v76 & 0x7E ^ 0x4E) + (v76 & 0x32 ^ 0x30) - ((v76 & 0x7E ^ 0x4E) & 0x33)) ^ 0xB2;
  LOBYTE(v76) = (((2 * v76) & 0x48) - v76 + 90) ^ 0xDE | (v48 - 126) ^ 0x82;
  v6[394] ^= (((v76 - ((2 * v76) & 0x10) - 120) & 0xFE) >> 1) ^ 0x44;
  LOBYTE(v76) = *(_BYTE *)(v13 + (v6[65] & 0x3F ^ 5LL)) ^ 0x4B;
  LOBYTE(v76) = v6[356] ^ 0x98 ^ (v76 - ((2 * v76 + 98) & 0x6C) - 25);
  LOBYTE(v4_Block_object_dispose(va, 8) = (v6[103] ^ 0x7A) + (v6[436] ^ 0x4B) + 1;
  v6[436] = v48 - ((2 * v48) & 0x96) + 75;
  LOBYTE(v4_Block_object_dispose(va, 8) = *(_BYTE *)(v17 + (v6[173] & 0x3F ^ 5LL));
  v6[356] = v76;
  LOBYTE(v76) = ((2 * v48) ^ 0x1B) + (v6[227] ^ 0x85) + ((4 * v48) & 0xE7 ^ 0xDB) + 116;
  v6[227] = v76 + (~(2 * v76) | 0xF5) - 122;
  LODWORD(STACK[0x5E8]) = v56;
  v6[383] ^= *(_BYTE *)(v17 + (((_BYTE)v56 + 33) & 0x3F)) ^ 0x4B;
  LOBYTE(v76) = (v6[26] ^ 0x85) * (v6[26] ^ 0x85);
  LOBYTE(v76) = (v6[350] ^ 0x4B) + (v76 ^ 0x14) - ((2 * v76) & 0xD6) - 20;
  v6[350] = v76 - ((2 * v76) & 0x96) + 75;
  LOBYTE(v4_Block_object_dispose(va, 8) = *(_BYTE *)(v13 + (v6[136] & 0x3F ^ 5LL)) ^ 0x4B;
  LOBYTE(v1_Block_object_dispose(va, 8) = (v6[385] ^ 0x4B) - ((2 * (v6[385] ^ 0x4B)) & 0x3A) + 29;
  LOBYTE(v4_Block_object_dispose(va, 8) = v48 - ((2 * v48) & 0x3F) - 97;
  LOBYTE(v76) = (((v48 ^ 0x9F | v18 ^ 0x1D) - ((2 * (v48 ^ 0x9F | v18 ^ 0x1D)) & 0xE6) + 115) ^ 0x73) & (((v6[378] ^ 0x4B) - ((2 * (v6[378] ^ 0x4B)) & 0xE2) + 113) ^ 0x71);
  LOBYTE(v76) = (v76 - ((2 * v76) & 0x98) + 76) ^ 0x4C | (((v48 ^ 0x9F) & (v18 ^ 0x1D))
                                                        - ((2 * ((v48 ^ 0x9F) & (v18 ^ 0x1D))) & 0xA6)
                                                        - 45) ^ 0xD3;
  LOBYTE(v76) = v76 - ((2 * v76) & 0x32) + 25;
  LOBYTE(v1_Block_object_dispose(va, 8) = (v76 & 0xBD ^ 0xB9) - ((2 * (v76 & 0xBD ^ 0xB9)) & 0x28);
  int v77 = (v6[374] >> 1) ^ 0x25;
  LOBYTE(v76) = (((v76 & 0xC2) + 12) ^ 0x31) & ((v77 - ((2 * v77) & 0x99) - 52) ^ 0xCC);
  LOBYTE(v76) = (v76 - ((2 * v76) & 0xBC) - 34) ^ 0xDE | (v18 - 106) & 0xFD ^ 0x34;
  v6[358] = (v76 - ((2 * v76) & 0x88) - 60) ^ 0x8F;
  int v78 = v6[422] ^ 0x4B;
  int v79 = (2 * v78) & 0x194;
  v78 -= 2129406262;
  int v80 = v78 - v79;
  int v81 = ((v78 & 2 | v80 & 0x88 ^ 0x52ADE2D5) - 1) ^ 0x52AFF05D;
  unsigned int v82 = (((v6[92] ^ 0x85) - ((2 * (v6[92] ^ 0x85)) & 0x42) - 1026269663) ^ 0x80105621) & (v80 ^ 0x135);
  unsigned int v83 = ((v81 | 0xD8FF620A) - (v81 | 0x27009DF5) + 654351861) ^ 0xD8FD7009 | (v82 - ((2 * v82) & 0x390585AA) + 478331605) ^ 0x1C82C2D5;
  unsigned int v84 = ((205 * (v6[155] ^ 0x85u)) >> 10) & 7;
  unsigned int v85 = (v83 - ((2 * v83) & 0x10EE7A0) - 2138606640) ^ 0x808773D0;
  int v86 = ((v85 << ((v84 ^ 0xDF) + 2 * v84 + 33)) - ((2 * (v85 << ((v84 ^ 0xDF) + 2 * v84 + 33))) & 0x56) + 171) ^ ((v85 >> ((7 - ((v84 ^ 0xDF) + 2 * v84)) & 7)) - ((2 * (v85 >> ((7 - ((v84 ^ 0xDF) + 2 * v84)) & 7))) & 0x94) + 202);
  LOBYTE(v86) = (v86 ^ 0x31) + (v6[395] ^ 0x4B) + ((2 * v86) & 0x5E ^ 0xBD);
  v6[395] = v86 - ((2 * v86 + 98) & 0x96) - 4;
  v6[345] ^= 0xFDu;
  LOBYTE(v86) = (v6[366] ^ 0x4B) * (v6[366] ^ 0x4B);
  LOBYTE(v86) = (v6[343] ^ 0x4B) + ((-90 * v86) & 0xD8) + ((-45 * v86) ^ 0xEC) + 20;
  v6[343] = v86 + (~(2 * v86) | 0x69) + 76;
  LOBYTE(v73) = *(_BYTE *)(v17 + (v6[85] & 0x3F ^ 5LL));
  v6[96] = (((2 * v73) ^ 0x96) - ((4 * v73) & 0xD0) + 104) ^ 0x12;
  int v87 = (v6[39] & 0x18) + ((v6[39] >> 1) & 0x6C ^ 0x5E) + 72;
  LODWORD(STACK[0x5C0]) = v87;
  int v88 = (v87 & 0xFE) - ((2 * v87) & 0x7C);
  unsigned int v89 = v88 - 282455234;
  LOBYTE(v8_Block_object_dispose(va, 8) = (*(_BYTE *)(v13 + ((-63 - (_BYTE)v88) & 0x3E)) ^ 0x4B) & (byte_10072FCE0[v6[33] & 0x3F ^ 5LL] ^ 0xAA);
  v6[373] ^= 0x41 ^ (v88 - ((2 * v88) & 0x83) + 65);
  uint64_t v90 = ((v6[239] & 0x3E ^ 0x77) - (~v6[239] | 0xFE) - 2) ^ 0x73LL;
  unsigned int v91 = *(unsigned __int8 *)(v17 + v90) ^ 0x4B | v6[148] ^ 0xFFFFFF85;
  unsigned int v92 = ((((v91 - ((2 * v91) & 0x12) + 9) & 0xFFFFFFC6 ^ 4) - ((2 * (v91 - ((2 * v91) & 0x12) + 9)) & 0xFFFFFF84) + 67) & 0xFFFFFFFE | ((((*(_BYTE *)(v17 + (v6[105] & 0x3F ^ 5LL)) & 0x18 ^ 0xF) + 29) ^ 7) + 29) & 0x18) ^ 0x46;
  unsigned int v93 = v92 - ((2 * v92) & 0x14);
  LOBYTE(v73) = v6[354];
  LOBYTE(v92) = (v6[221] ^ 0x85) & (v73 ^ 0x4B);
  LODWORD(STACK[0x5B0]) = (v65 - 115) ^ 0x5A;
  LODWORD(STACK[0x5A0]) = (2 * (v65 - 115)) & 0xFFFFFFB4;
  LOBYTE(v64) = (v6[339] ^ 0x4B) & (v73 ^ 0xB4);
  LOBYTE(v64) = (v64 + (~(2 * v64) | 0xCB) - 101) ^ 0x9A | (v92 - ((2 * v92) & 0x3C) - 98) ^ 0x9E;
  LOBYTE(v64) = ((v64 - 40) & 9 ^ 8) + ((v64 - 40 - ((2 * v64) & 0x30)) & 0x76 ^ 0x15) - 1;
  int v94 = *(unsigned __int8 *)(v13 + (v6[171] & 0x3F ^ 5LL));
  v6[441] = ((v64 & 0x1D ^ 0x18) + (v64 ^ 0x85) - ((v64 ^ 0x85) & 0x1D)) ^ 0x97;
  unsigned int v95 = (v6[24] ^ 0xFFFFFF85)
      + (((205 * (v94 ^ 0x4Bu)) >> 10) ^ 0x7E)
      + (((205 * (v94 ^ 0x4Bu)) >> 9) & 0x7C)
      - 126;
  v6[44] ^= (v95 - ((2 * v95) & 0x38) + 28) ^ 0x1C;
  LOBYTE(v95) = ((v6[329] & 0x52) + (v6[329] & 0x53 ^ 0x52) - ((v6[329] & 0x53 ^ 0x52) & 0xFE) + 32) ^ 0x6B;
  int v96 = v6[137] >> 1;
  LOBYTE(v65) = (((2 * v95) & 0x22) - v95 - 18) ^ 0xE6 | ((((v96 & 0x24 ^ 0x20) + (v96 & 0x20)) | 0x1A)
                                                        - ((v96 & 0x24 ^ 0x20) & 0x20)) & 0xE0 | ((v96 & 0x24 ^ 0x20)
                                                                                                + (v96 & 0x20)) & 4;
  v6[423] ^= 0xB1 ^ (v65 - ((2 * v65) & 0x62) - 79);
  v6[344] ^= 0x1D ^ (3 * (((v6[67] & 0xD0 ^ 0xAF) + (v6[67] >> 6 << 7) - 66) ^ 0xC2)
                                    - ((6 * (((v6[67] & 0xD0 ^ 0xAF) + (v6[67] >> 6 << 7) - 66) ^ 0xC2)) & 0x3E)
                                    + 29);
  v6[370] = -2;
  v6[419] ^= 0xBDu;
  LOBYTE(v95) = *(_BYTE *)(v13 + (v6[37] & 0x3F ^ 5LL));
  LOBYTE(v4_Block_object_dispose(va, 8) = ((((v95 & 6 ^ 0x7C) - (v95 & 0x58)) & 0x18 ^ 9)
               + (((v95 & 6 ^ 0x7C) - (v95 & 0x58)) ^ 0xF2)
               - ((((v95 & 6 ^ 0x7C) - (v95 & 0x58)) ^ 0xF2) & 0x98)) ^ 0x5D | (((2 * v6[400]) & 0x42)
                                                                              - (v6[400] & 0xA1)
                                                                              - 106) ^ 0x97;
  LOBYTE(v4_Block_object_dispose(va, 8) = ((v48 - ((2 * v48) & 0xDC) + 110) ^ 0x60) + (v6[188] ^ 0x85);
  LODWORD(STACK[0x590]) = byte_10072FCE0[v90];
  LOBYTE(v65) = v6[61] ^ 0x85;
  LOBYTE(v24) = byte_10072FCE0[v6[193] & 0x3F ^ 5LL] ^ 0xAA;
  char v97 = (((v24 | v65) - ((2 * (v24 | v65)) & 0xC7) - 29) ^ 0xE3) & (v6[403] ^ 0x4B);
  LOBYTE(v24) = (v97 - ((2 * v97) & 0x94) + 74) ^ 0x4A | ((v24 & v65) - ((2 * (v24 & v65)) & 0x2A) + 21) ^ 0x15;
  LOBYTE(v24) = (v6[357] ^ 0x4B) + (v24 ^ 0x84) - ((2 * v24) & 0xF7) + 124;
  v6[357] = v24 - ((2 * v24) & 0x96) + 75;
  unsigned int v98 = v93 - 118;
  LOBYTE(v93) = *(_BYTE *)(v13 + (v6[159] & 0x3F ^ 5LL)) ^ 0x4B;
  LODWORD(STACK[0x580]) = v98;
  LOBYTE(v93) = ((v93 & (v98 ^ 0x75)) - ((2 * (v93 & (v98 ^ 0x75))) & 8) - 124) & 0x9D ^ 0x89;
  LOBYTE(v93) = ((v93 | 0xFC) - (v93 | 3) + 3) & 0xDD ^ 0xF3;
  v6[371] ^= 0x5F ^ (v93 - ((2 * v93) & 0xBF) + 95);
  char v99 = (v6[116] ^ 0x85) + 72 + (~(2 * v6[116]) | 0x6F) + 1;
  LOBYTE(v90) = (v6[416] ^ 0x4B) - ((2 * (v6[416] ^ 0x4B)) & 0x9A) - 51;
  LOBYTE(v65) = (((v90 ^ 0xCD | v99 ^ 0x48) - ((2 * (v90 ^ 0xCD | v99 ^ 0x48)) & 0x92) - 55) ^ 0xC9) & (((v6[349] ^ 0x4B) - ((2 * (v6[349] ^ 0x4B)) & 0xE8) + 116) ^ 0x74);
  LOBYTE(v65) = (v65 - ((2 * v65) & 0x88) + 68) ^ 0x44 | (((v90 ^ 0xCD) & (v99 ^ 0x48))
                                                        - ((2 * ((v90 ^ 0xCD) & (v99 ^ 0x48))) & 0x5C)
                                                        - 82) ^ 0xAE;
  int v100 = (v89 >> 1) ^ 0x7795099F;
  LOBYTE(v65) = v65 - ((2 * v65) & 0xB8) + 92;
  LOBYTE(v93) = (((v65 ^ 0x5C | v100) - ((2 * (v65 ^ 0x5C | v100)) & 0x30) + 24) ^ 0x18) & (((v6[321] ^ 0x4B)
                                                                                           - ((2 * (v6[321] ^ 0x4B)) & 0xAA)
                                                                                           - 43) ^ 0xD5);
  LOBYTE(v93) = (v93 - ((2 * v93) & 0x74) - 70) ^ 0xBA | (((v65 ^ 0x5C) & v100)
                                                        - ((2 * ((v65 ^ 0x5C) & v100)) & 0xBC)
                                                        + 94) ^ 0x5E;
  v6[347] = (v93 - ((2 * v93) & 0xB8) - 36) ^ 0x97;
  LOBYTE(v64) = v48 - (v2 & (2 * v48)) - 123;
  v6[188] = v64;
  int v101 = *(unsigned __int8 *)(v17 + (v64 & 0x3F ^ 5LL));
  HIDWORD(v102) = ~v101;
  LODWORD(v102) = (v101 ^ 0x48) << 24;
  LOBYTE(v101) = (v6[381] ^ 0x4B) - ((2 * (v6[381] ^ 0x4B)) & 0x5A);
  LOBYTE(v4_Block_object_dispose(va, 8) = ((v6[4] & 7 ^ 0xB5 | 0x8B) - (v6[4] & 7 ^ 0xB5 | 0x74) + 116) ^ 0x43;
  LOBYTE(v4_Block_object_dispose(va, 8) = ((v48 | 0xB) - (v48 | 0xF4) - 12) ^ 0x73;
  LOBYTE(v4_Block_object_dispose(va, 8) = ((2 * v48) & 0xBE) + (v48 ^ 0xDF);
  unsigned int v103 = ((v6[430] ^ 0x4B) - (v2 & (2 * (v6[430] ^ 0x4B))) - 468098299) ^ 0xE4196305;
  int v104 = (v103 << (v48 + 33)) - ((2 * (v103 << (v48 + 33))) & 0x94B4D4);
  int v105 = (v103 >> ((7 - v48) & 7)) - ((2 * (v103 >> ((7 - v48) & 7))) & 0x1D9A32A) - 1058221675;
  LOBYTE(v4_Block_object_dispose(va, 8) = (v6[415] ^ 0x4B) - ((2 * (v6[415] ^ 0x4B)) & 0xCC);
  v6[151] = -123;
  LOBYTE(v17) = *(_BYTE *)(v17 + (v6[41] & 0x3F ^ 5LL)) ^ 0x4B;
  LOBYTE(v100) = (v6[247] ^ 0x85) - ((2 * (v6[247] ^ 0x85)) & 0xA4) - 46;
  LOBYTE(v17) = v17 - ((2 * v17) & 0xA2) + 81;
  LOBYTE(v4_Block_object_dispose(va, 8) = (((v17 ^ 0x51 | v100 ^ 0xD2) - ((2 * (v17 ^ 0x51 | v100 ^ 0xD2)) & 0x4A) + 37) ^ 0x25) & ((v48 + 102) ^ 0x66);
  LOBYTE(v4_Block_object_dispose(va, 8) = (v48 - ((2 * v48) & 0xF8) - 4) ^ 0xFC | (((v17 ^ 0x51) & (v100 ^ 0xD2))
                                                       - ((2 * ((v17 ^ 0x51) & (v100 ^ 0xD2))) & 0x10)
                                                       - 120) ^ 0x88;
  LOBYTE(v105) = ~(v104 + 106) ^ v105;
  LOBYTE(v4_Block_object_dispose(va, 8) = (v48 - ((2 * v48) & 0x86) - 61) ^ 0xC3;
  LOBYTE(v101) = (((v48 | v105) - ((2 * (v48 | v105)) & 0xCA) + 101) ^ 0x65) & ((v101 - 83) ^ 0xAD);
  LOBYTE(v105) = (v101 - ((2 * v101) & 0x76) + 59) ^ 0x3B | ((v48 & v105) - ((2 * (v48 & v105)) & 4) + 2) ^ 2;
  LOBYTE(v105) = (v6[354] ^ 0x4B)
               + ((v105 - ((2 * v105) & 0x94) + 74) ^ 0x95)
               + ((2 * (v105 - ((2 * v105) & 0x94) + 74)) & 0xBF ^ 0x94)
               + 33;
  v6[354] = v105 - ((2 * v105) & 0x96) + 75;
  LOBYTE(v105) = (v6[442] ^ 0x4B) - ((2 * (v6[442] ^ 0x4B)) & 0x56) + 43;
  LOBYTE(v101) = ((2 * (v105 & 0x23 ^ 2)) | 0xB2) - (v105 & 0x23 ^ 2) + 39;
  LOBYTE(v105) = (((v6[372] ^ 0x4B) - ((2 * (v6[372] ^ 0x4B)) & 0xD4) + 106) ^ 0x6A) & (v105 ^ 0xD4);
  LOBYTE(v105) = v101 ^ 0xF8 | (v105 - ((2 * v105) & 0xCA) - 27) ^ 0xE5;
  LOBYTE(v105) = (v105 - ((2 * v105) & 0x80) - 64) ^ 0xC0;
  v6[339] = (v105 * v105 - 2 * ((v105 * v105) & 3) + 3) ^ 0x48;
  LOBYTE(v105) = v6[444] & 0x25 ^ 0xC9;
  LOBYTE(vqmemcpy(v0, "/ProvenanceV2", 13) = (v6[322] ^ 0x4B)
              + (v6[361] ^ 0x4B)
              + ((v105 - ((2 * v105) & 0x83) - 45) & 0x75 ^ 0x51)
              + ((2 * (v105 - ((2 * v105) & 0x83) - 45)) & 0x6A ^ 0xDD)
              - 73;
  v6[361] = v13 - ((2 * v13) & 0x96) + 75;
  BOOL v106 = LODWORD(STACK[0x758]) != -721523674;
  LODWORD(STACK[0x5B8]) = LODWORD(STACK[0x5D0]) + 119;
  LODWORD(STACK[0x5C8]) += 57;
  LODWORD(STACK[0x5D8]) = (v102 >> 26) - ((2 * (v102 >> 26)) & 0x64) + 50;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((1473 * v106) ^ a2)))();
}

uint64_t sub_10058C57C@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ v3;
  LODWORD(STACK[0x648]) = v1 ^ v2;
  if ((v1 ^ v2) <= 1) {
    int v5 = 1;
  }
  else {
    int v5 = v1 ^ v2;
  }
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((784
                               * (((v4 + 122) ^ (v5 - 17 < ((v4 + 688047704) & 0xD6FD3EF9) - 1602)) & 1)) ^ v4)))();
}

uint64_t sub_10058C5F0()
{
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * (((((v1 ^ 0x3E3) - 71) ^ 0x6D8) * (v2 < 0x10)) ^ v1)) - 12LL))();
}

uint64_t sub_10058C624()
{
  _OWORD *v1 = xmmword_10072D930;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((615 * (((v0 - 70) ^ 0x62C) == (v2 & 0xFFFFFFF0))) ^ (v0 - 267))))();
}

uint64_t sub_10058C66C(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7)
{
  *(__n128 *)(v10 + a5) = a1;
  return (*(uint64_t (**)(void))(v7 + 8LL * (((v9 + a5 == v11) * a7) ^ v8)))();
}

uint64_t sub_10058C68C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t))(*(void *)(v1
                                                      + 8LL
                                                      * (((((a1 - 1172) | 0x244) ^ 0x681 ^ (141 * (a1 ^ 0x636)))
                                                        * (v2 != v3)) ^ a1))
                                          - 4LL))(4294967210LL);
}

uint64_t sub_10058C6EC()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((839 * (((((v0 + 183) ^ 2) - 1587) & v1) == 0)) ^ v0)) - 12))();
}

uint64_t sub_10058C724@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v7 = (a3 - 539) | 0x217;
  v9.val[0].i64[0] = v6 & 8;
  v9.val[0].i64[1] = v6 & 8 | (v7 - 1360) ^ 0xE6;
  v9.val[1].i64[0] = v9.val[0].i64[0] | 2;
  v9.val[1].i64[1] = v9.val[0].i64[0] | 3;
  v9.val[2].i64[0] = v9.val[0].i64[0] | 4;
  v9.val[2].i64[1] = v9.val[0].i64[0] | 5;
  v9.val[3].i64[0] = v9.val[0].i64[0] | 6;
  v9.val[3].i64[1] = v9.val[0].i64[0] | 7;
  *(int8x8_t *)(v3 + v6) = veor_s8( veor_s8( veor_s8( veor_s8(*(int8x8_t *)(v4 + v9.val[0].i64[0]), *(int8x8_t *)(a1 + v9.val[0].i64[0])),  *(int8x8_t *)(a2 + v9.val[0].i64[0] + 1)),  (int8x8_t)0x1818181818181818LL),  vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8(v9, (int8x16_t)xmmword_10071E3C0),  (int8x8_t)0xE1E1E1E1E1E1E1E1LL));
  return ((uint64_t (*)(__n128))((char *)*(&off_10090DDE0
                                                   + (((4 * ((v5 & 0xFFFFFFF8) - 8 != v6)) | (8
                                                                                            * ((v5 & 0xFFFFFFF8) - 8 != v6))) ^ v7))
                                         - 4))((__n128)xmmword_10071E3C0);
}

void sub_10058C80C()
{
}

uint64_t sub_10058C814()
{
  uint64_t v5 = v3 ^ 0x403u;
  STACK[0x870] = v2 - 448;
  *(void *)(v1 + 64) = 0xE8E125912DC2764BLL;
  *(void *)(v1 + 72) = 0xC5C1D9754D4951FDLL;
  *(void *)(v1 + 80) = 0x3A3E268AB2B6AE02LL;
  *(void *)(v1 + 92) = 0x2E986D5678E108A1LL;
  STACK[0x978] = v5 + *(void *)(v4 + 8LL * v3) - 1082;
  STACK[0xA70] = v1;
  LODWORD(STACK[0x864]) = -721523495;
  STACK[0x6E0] = v0;
  unsigned int v6 = (((v3 ^ 0x6B7) - 1544) ^ 0x404304EF)
     + 255
     + ((2 * *(_DWORD *)(v1 + 68)) & 0x56 ^ 2)
     + (*(_DWORD *)(v1 + 68) & 0x3F ^ 0xBFBCFB7A);
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * (int)((668
                                               * ((v6 ^ 0x43EF9BE7) - 1139776551 + ((2 * v6) & 0x87DF37CE) < 0xFFFFFFC0)) ^ v5))
                            - 4LL))();
}

uint64_t sub_10058E0D4( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_BYTE *)(v9 + (v13 - 632854094)) = *(_BYTE *)(v10 + ((v13 - 632854094) & 0xFLL)) ^ *(_BYTE *)(a7 + ((v13 - 632854094) & 0xFLL)) ^ *(_BYTE *)(((v13 - 632854094) & 0xFLL) + a8 + 1) ^ (-31 * ((v13 - 78) & 0xF)) ^ 0x18;
  BOOL v14 = ((((v13 - (v11 + v12 - 1)) | (v11 + v12 - 1 - v13)) >> (a4 - 26)) & 1) == 0;
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((v14 | (4 * v14)) ^ a4)) - 4LL))();
}

void sub_10058E148()
{
}

uint64_t sub_10058E150()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_10058E198()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((1984
}

uint64_t sub_10058E240(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_BYTE *)(a3 + v5 - 0x4A70B5C0CD2C0703LL) = (*(_BYTE *)(a2 + v4 - 0x5C43ECB90AC871FFLL) ^ 0xBD)
                                             + ((2 * *(_BYTE *)(a2 + v4 - 0x5C43ECB90AC871FFLL)) & 0x7A)
                                             + 112;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((1990 * (a4 + 1 != v6 + 48)) ^ a1)) - 4LL))();
}

uint64_t sub_10058E2D4()
{
  int8x16_t v5 = *(int8x16_t *)(v0 + v2);
  v6.i64[0] = 0xBDBDBDBDBDBDBDBDLL;
  v6.i64[1] = 0xBDBDBDBDBDBDBDBDLL;
  int8x16_t v7 = veorq_s8(v5, v6);
  v8.i64[0] = 0x7A7A7A7A7A7A7A7ALL;
  v8.i64[1] = 0x7A7A7A7A7A7A7A7ALL;
  int8x16_t v9 = vandq_s8(vaddq_s8(v5, v5), v8);
  v8.i64[0] = 0x7070707070707070LL;
  v8.i64[1] = 0x7070707070707070LL;
  *(int8x16_t *)(v1 + bzero(v1, v2) = vaddq_s8(vaddq_s8(v7, v8), v9);
  BOOL v10 = ((v2 + 16 - v3) | (v3 - (v2 + 16))) >= 0;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((2 * v10) | (4 * v10) | ((int)v3 + 857))) - 4LL))();
}

uint64_t sub_10058E334@<X0>(unsigned int a1@<W8>)
{
  if (a1 >= 0xFFFFFFC0) {
    int v5 = -42023;
  }
  else {
    int v5 = 0;
  }
  int v6 = v1 + 48;
  else {
    int v7 = v5;
  }
  if (*v3 > 1u) {
    int v5 = v7;
  }
  LODWORD(STACK[0x658]) = v5;
  int8x16_t v8 = &v3[v6 - 570702965];
  char v9 = ((*(_BYTE *)(STACK[0xA00] + 8) ^ 0x68 ^ *v8) - ((2 * (*(_BYTE *)(STACK[0xA00] + 8) ^ 0x68 ^ *v8)) & 0xDC) + 110) ^ 0x6E | v8[1] ^ *(_BYTE *)(STACK[0xA00] + 9) ^ (v2 - 26);
  char v10 = (v9 - ((2 * v9) & 0xDC) + 110) ^ 0x6E | *(_BYTE *)(STACK[0xA00] + 10) ^ 0x68 ^ v8[2];
  LOBYTE(__chkstk_darwin(v7, v8) = (v10 - ((2 * v10) & 0xDC) + 110) ^ 0x6E | *(_BYTE *)(STACK[0xA00] + 11) ^ 0x68 ^ v8[3];
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
}

uint64_t sub_10058E494(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = (a5 - 891) | 0x100;
  BOOL v12 = v5 > 0xFA;
  unsigned int v13 = (a2 + ((v11 + v7) & v8) + 72);
  int v14 = v12 ^ (v13 < 5);
  BOOL v15 = v13 < v6;
  if (!v14) {
    BOOL v12 = v15;
  }
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * ((v12 * v9) ^ v11)) - 12LL))();
}

void sub_10058E4EC()
{
}

uint64_t sub_10058E51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8LL
                              * ((118
                                * (((a5 - 120) ^ 0xF ^ ((STACK[0x860] & 0x80) == 35
                                                                                                * ((a5 + 648) ^ 0x627)
                                                                                                - 665)) & 1)) ^ (a5 + 648))))();
}

uint64_t sub_10058E578@<X0>(unsigned __int8 *a1@<X8>)
{
  LODWORD(STACK[0x6FC]) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * (((*a1 == (((v2 + 95) & 0xF7) + 111)) * (((v2 - 427) | 2) ^ 0xF6)) ^ v2)))();
}

uint64_t sub_10058E5C4()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((960
}

uint64_t sub_10058E630()
{
  int v5 = v3 - 1520;
  BOOL v6 = v1 < v2 + v0 - 1666;
  *(_BYTE *)STACK[0x920] = 0;
  if (v6 == v0 > 0xBDA7FC3E) {
    BOOL v6 = v1 > 0xBDA7FC3E;
  }
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((1590 * v6) ^ v5)) - 8LL))();
}

void sub_10058E6BC()
{
}

uint64_t sub_10058E6C4@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(void *)(v7 + 8LL * (((((v5 == 1) ^ (v6 + 120)) & 1) * (v6 - 587)) ^ v6))
                                                                                                  - 4LL))( a5 + (LODWORD(STACK[0x5E8]) - 1282311541),  a1,  a2,  a3,  a4,  &STACK[0xB80]);
}

uint64_t sub_10058E714()
{
  uint64_t v6 = ((32 * v3) ^ 0xE637ECEF)
     - 1961034185
     + ((v3 << 6) & 0x1215B7C0 ^ 0x121024D5 ^ (5 * ((v2 - 2112517058) & 0x7DEA73FD ^ 0x244)));
  unint64_t v7 = 0xFFFFFFFF00000000LL;
  return ((uint64_t (*)(uint64_t))(*(void *)(v5
                                                      + 8LL
                                                      * ((11 * (v1 + v0 + v4 + v6 - v7 - 2050480646 < 0x10)) ^ (v2 + 974)))
                                          - 4LL))(0x784C89EA6DEF2BD7LL);
}

uint64_t sub_10058E810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int8x16_t *a6)
{
  v9.i64[0] = 0x6F6F6F6F6F6F6F6FLL;
  v9.i64[1] = 0x6F6F6F6F6F6F6F6FLL;
  v10.i64[0] = 0xDEDEDEDEDEDEDEDELL;
  v10.i64[1] = 0xDEDEDEDEDEDEDEDELL;
  int8x16_t v11 = vandq_s8(vaddq_s8(*v8, *v8), v10);
  v10.i64[0] = 0xBEBEBEBEBEBEBEBELL;
  v10.i64[1] = 0xBEBEBEBEBEBEBEBELL;
  a6[3] = vaddq_s8(vaddq_s8(veorq_s8(*v8, v9), v10), v11);
  LODWORD(STACK[0x6FC]) = v7 + 64;
  BOOL v12 = (_BYTE *)STACK[0x920];
  *BOOL v12 = v8[1].i8[0];
  v12[1] = v8[1].i8[1];
  void v12[2] = v8[1].i8[2];
  v12[3] = v8[1].i8[3];
  v12[4] = v8[1].i8[4];
  v12[5] = v8[1].i8[5];
  v12[6] = v8[1].i8[6];
  v12[7] = v8[1].i8[7];
  v12[8] = v8[1].i8[8];
  v12[9] = v8[1].i8[9];
  v12[10] = v8[1].i8[10];
  v12[11] = v8[1].i8[11];
  v12[12] = v8[1].i8[12];
  v12[13] = v8[1].i8[13];
  v12[14] = v8[1].i8[14];
  v12[15] = v8[1].i8[15];
  LODWORD(STACK[0x7FC]) = v6 + 16;
  return sub_1005E2128();
}

uint64_t sub_10058EB50()
{
  *(_BYTE *)(v5 + v1 - 0x3D8E262AC220B0B7LL) = (*(_BYTE *)(v0 + v3 - 0x4A367A250EB0883ALL) ^ (v2 - 58))
                                             + ((2 * *(_BYTE *)(v0 + v3 - 0x4A367A250EB0883ALL)) & 0xFB)
                                             + 48;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((120 * (v6 + 1 != v4 + 16)) ^ v2)) - 8LL))();
}

void sub_10058EBC8()
{
}

uint64_t sub_10058EBD0()
{
  int v1 = LODWORD(STACK[0x660]) - 363;
  unsigned int v2 = (LODWORD(STACK[0x660]) + 1684951413) & 0x9B91A9CA;
  int v3 = LODWORD(STACK[0x660]) - 1116;
  unint64_t v4 = STACK[0x818];
  unint64_t v5 = STACK[0xA40] - 0x3C4F01B694108146LL;
  STACK[0xB10] = v5;
  STACK[0xB18] = v4;
  STACK[0xB08] = v5;
  STACK[0xB20] = v5;
  if (v5) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  char v7 = v6;
  return (*(uint64_t (**)(void))(v0 + 8LL
                                   * (int)((((v1 ^ v7) & 1) * (v2 ^ 0x58F)) ^ v3)))();
}

uint64_t sub_10058EC4C()
{
  STACK[0xB00] = 0LL;
  unsigned int v2 = malloc(0x408uLL);
  STACK[0xB28] = (unint64_t)v2;
  int v3 = malloc(0x404uLL);
  STACK[0xB00] = (unint64_t)v3;
  if (v2) {
    BOOL v4 = v3 == 0LL;
  }
  else {
    BOOL v4 = 1;
  }
  char v5 = !v4;
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL * ((15 * (((v0 + 16) ^ v5) & 1)) ^ v0))
                            - ((v0 - 381525348) & 0x16BD9F4F)
                            + 1791LL))();
}

uint64_t sub_10058ECBC()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((((((((v1 - 981) | 0x80) - 319) | 0x170) ^ 0x810A05B) == 135350573)
                                        * ((((v1 - 981) | 0x80) + 212902803) ^ 0xCB0A2E2)) ^ ((v1 - 981) | 0x80)))
                            - 12))();
}

void sub_10058ECC8()
{
}

uint64_t sub_10058ECD0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  HIDWORD(v65) = byte_10073CE70[v63[14] ^ 0xDELL];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  int v66 = (v65 >> 25) - 2 * ((v65 >> 25) & 1) - 127;
  HIDWORD(v65) = byte_10073CE70[v63[10] ^ 0x9CLL];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  int v68 = v67 - ((2 * v67) & 0x7A8A9600) - 1119532124;
  uint64_t v69 = v63[13] ^ 0xC8LL;
  unsigned int v70 = ((((((v65 >> 25) - ((2 * (v65 >> 25)) & 0xE8) - 12) ^ 0x5C)
  int v71 = v70 - ((2 * v70) & 0x17149600) + 1267354372;
  unsigned int v72 = byte_100733050[v69] - ((2 * byte_100733050[v69] + 126) & 0x74) - 71;
  unsigned int v73 = ((v72 >> 4) & 4 | 0xFFFFFFE0) ^ v72;
  LOBYTE(v69) = v69
              - 11
  char v74 = ((2 * v69) & 0x1C) + (v69 ^ 0x1E);
  LODWORD(v69) = ((((v73 ^ 0x5B) - ((2 * (v73 ^ 0x5B)) & 0x11A)) << 16) + 2089615360) ^ 0x7C8D0000;
  LODWORD(v69) = (v69 - ((2 * v69) & 0x27DE0000) - 739294981) ^ 0xD3EF40FB | v68 ^ 0xBD454BA4;
  int v75 = v69 - ((2 * v69) & 0x7A325046);
  HIDWORD(v65) = byte_10073CE70[v63[5] ^ 0x50LL];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  int v76 = (unsigned __int8 *)STACK[0xB18];
  unsigned int v77 = ((((((v65 >> 25) - ((2 * (v65 >> 25)) & 0x26) - 109) ^ 0xD3)
  int v78 = v77 - ((2 * v77) & 0x63820000) - 239007140;
  int v79 = byte_100752200[*v63 ^ 0x3DLL];
  int v80 = ((((v79 ^ 0xF3) - 2 * ((v79 ^ 0xF3) & 3)) << 24) + 251658240) ^ 0x3000000;
  int v81 = byte_100733050[*(unsigned __int8 *)(STACK[0xB18] + (41 - v74) + (v74 - 30)) ^ 0x12LL];
  unsigned int v82 = v81 + (~(2 * v81 + 126) | 0xFFFFFF91) + 55;
  unint64_t v83 = *(unsigned __int8 *)(STACK[0xB18] + 6);
  STACK[0x4F0] = v83;
  unsigned int v84 = byte_100733050[v83 ^ 0x22] - ((2 * byte_100733050[v83 ^ 0x22] - 2) & 0xFFFFFFCF) + 102;
  int v85 = v82 ^ 0x6E ^ ((v82 >> 4) & 4 | 0x33);
  unsigned int v86 = (v85 - ((2 * v85) & 0x1FA) - 469421059) ^ 0xE40533FD | v71 ^ 0x4B8A4B04;
  unsigned int v87 = v86 - ((2 * v86) & 0x301188D8);
  int v88 = (((((v84 >> 4) & 4 ^ v84 ^ 0xF7) - ((2 * ((v84 >> 4) & 4 ^ v84 ^ 0xF7)) & 8)) << 8) + 1446839296) ^ 0x563D0400;
  unint64_t v89 = v76[4];
  STACK[0x510] = v89;
  unsigned int v90 = (v88 - ((2 * v88) & 0x2993E400) + 348779171) ^ 0x14C9F2A3 | v78 ^ 0xF1C10A5C;
  unsigned int v91 = v90 - ((2 * v90) & 0x392C6DB4);
  unsigned int v92 = byte_100733050[v89 ^ 0xB8] - ((2 * byte_100733050[v89 ^ 0xB8] - 2) & 0xFFFFFFDF) + 110;
  unsigned int v93 = ((v92 >> 4) & 0xFB | 0xFFFFFF80) ^ (v92 >> 4);
  unsigned int v94 = ((v93 ^ 0x7B) + ((2 * v93) | 0xFFFFFF8E) + 58) ^ 0x4D;
  int v95 = v92 ^ 0x77 ^ (2 * (v94 & 0xF) - v94 + 112);
  unsigned int v96 = (((((v95 - ((2 * v95) & 0xFFFFFFC3)) << 24) - 520093696) ^ 0xE1000000)
       - ((2 * ((((v95 - ((2 * v95) & 0xFFFFFFC3)) << 24) - 520093696) ^ 0xE1000000)) & 0x4E000000)
       - 1478703801) ^ 0xA7DCC547 | (v91 - 1667877158) ^ 0x9C9636DA;
  unint64_t v97 = v76[1];
  STACK[0x4D0] = v97;
  HIDWORD(v65) = byte_10073CE70[v97 ^ 2];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  unsigned int v98 = v96 - ((2 * v96) & 0x6CC98CEE);
  unsigned int v99 = ((((((v65 >> 25) - ((2 * (v65 >> 25)) & 0x30) + 24) ^ 9)
  unint64_t v100 = v76[15];
  STACK[0x500] = v100;
  unsigned int v101 = (v99 - ((2 * v99) & 0x32E00000) + 1500547852) ^ 0x59708B0C | (v80
                                                                     - ((2 * v80 - 402653184) & 0x94000000)
                                                                     + 1056877429) ^ 0x4AFEAB75;
  unsigned int v102 = v101 - ((2 * v101) & 0x8F497594);
  unsigned int v103 = byte_100733050[v100 ^ 0x3A] - ((2 * byte_100733050[v100 ^ 0x3A] - 2) & 0xFFFFFFE7) - 14;
  unint64_t v104 = v76[9];
  STACK[0x4A0] = v104;
  HIDWORD(v65) = byte_10073CE70[v104 ^ 0x2B];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  unsigned int v105 = (((-89 - ((v103 >> 4) | 0xFFFFFFFB)) ^ 0xFFFFFFB1) - 1) ^ v103;
  unsigned int v106 = ((((((v65 >> 25) + (~(2 * (v65 >> 25)) | 0xC9) + 28) ^ 0xE5)
  int v107 = (v106 - ((2 * v106) & 0xA340000) + 85606219) ^ 0x51A3F4B | (v87 + 403227756) ^ 0x1808C46C;
  int v108 = v107 - ((2 * v107) & 0x353ED314);
  unint64_t v109 = v76[3];
  STACK[0x498] = v109;
  HIDWORD(v65) = byte_10073CE70[v109 ^ 0x5B];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  int v110 = (v102 - 945505590) ^ 0xC7A4BACA | ((((v65 >> 25) - 2 * ((v65 >> 25) & 3) + 3) ^ 0x1E)
                                          - ((2 * (((v65 >> 25) - 2 * ((v65 >> 25) & 3) + 3) ^ 0x1E)) & 0x6E)
                                          - 528475849) ^ 0xE0801937;
  int v111 = v110 - ((2 * v110) & 0xC2442DB0);
  unint64_t v112 = v76[7];
  STACK[0x4C0] = v112;
  int v113 = byte_100733050[v112 ^ 0xFB] - ((2 * byte_100733050[v112 ^ 0xFB] + 126) & 0x5C) + 45;
  int v114 = v113 ^ (((v113 & 0x40) >> 4) | 0xB) ^ 0x60;
  unsigned int v115 = (v98 + 912574071) ^ 0x3664C677 | (v114 - ((2 * v114) & 0xBE) - 1377629857) ^ 0xADE3095F;
  unsigned int v116 = v115 - ((2 * v115) & 0xC3F23AFA) - 503767683;
  LODWORD(STACK[0x5B8]) = v116;
  unint64_t v117 = v76[8];
  STACK[0x480] = v117;
  HIDWORD(v65) = byte_10073CE70[v117 ^ 5];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  int v118 = ((v65 >> 25) - ((2 * (v65 >> 25)) & 0xD8) - 20) ^ 0x88;
  unsigned int v119 = (((v118 - ((2 * v118) & 0x5E)) << 24) - 1358954496) ^ 0xAF000000;
  int v120 = (v119 - ((2 * v119) & 0x18000000) + 205848322) ^ 0xC44FF02 | (v108 + 1520396682) ^ 0x5A9F698A;
  unsigned int v121 = v120 - ((2 * v120) & 0xF0902DA8) + 2017990356;
  LODWORD(STACK[0x5D8]) = v121;
  unint64_t v122 = v76[2];
  STACK[0x4E0] = v122;
  int v123 = byte_100752200[v122 ^ 0x7D] ^ 0xEE;
  int v124 = (((v123 - ((2 * v123) & 0x1C8)) << 8) + 1572398080) ^ 0x5DB8E400;
  uint64_t v125 = v76[12] ^ 0x5ALL;
  STACK[0x3E8] = v64;
  uint64_t v126 = byte_100757360[v125];
  unsigned int v127 = ((((v126 ^ 0xE6) - ((2 * (v126 ^ 0xE6)) & 0xB6)) << 24) + 1526726656) ^ 0x5B000000;
  unsigned int v128 = (v127 - ((2 * v127) & 0x38000000) - 1663001920) ^ 0x9CE09AC0 | ((v105 ^ 0x6F)
                                                                       - ((2 * (v105 ^ 0x6F)) & 0x1F0)
                                                                       - 526472968) ^ 0xE09EA8F8;
  unsigned int v129 = (v128 - ((2 * v128) & 0x6A55213C) + 891981982) ^ 0x352A909E | (v75 - 48682973) ^ 0xFD192823;
  unsigned int v130 = (v129 - ((2 * v129) & 0x1314AC5C) - 1987422674) ^ 0xB3F26D48;
  LODWORD(STACK[0x648]) = v130;
  unsigned __int8 v131 = v105 ^ 0xB;
  unsigned int v132 = (v111 + 1629624024) ^ 0x612216D8 | (v124 - ((2 * v124) & 0x10887C00) - 935051771) ^ 0xC8443E05;
  int v133 = v132 - ((2 * v132) & 0x7B1CD8D0) - 1114739608;
  LODWORD(STACK[0x658]) = v133;
  int v134 = dword_10072FF70[v73 ^ 0x1E];
  HIDWORD(v65) = v134 ^ 0x81F9;
  LODWORD(v65) = v134 ^ 0x4A970000;
  int v135 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x2531E29C);
  int v136 = dword_10072FF70[v126 ^ 0x43];
  HIDWORD(v65) = v136 ^ 0xFFFFFFF9;
  LODWORD(v65) = v136 ^ 0x4A978100;
  int v137 = dword_100733670[v131] ^ ((v65 >> 8) - ((2 * (v65 >> 8)) & 0xFAA21AAE) + 2102463831);
  int v138 = dword_10072FF70[v66];
  HIDWORD(v65) = v138 ^ 0x9781F9;
  LODWORD(v65) = v138 ^ 0x4A000000;
  int v139 = (v135 - 1835470514) ^ v137 ^ ((v65 >> 24) - ((2 * (v65 >> 24)) & 0x9E6C0290) + 1328939336) ^ v133;
  LODWORD(STACK[0x5C8]) = v139;
  int v140 = v116 ^ v139 ^ v121;
  LODWORD(STACK[0x5E0]) = v140;
  LODWORD(v83) = v116 ^ v139;
  unsigned int v141 = v130 ^ v140 ^ 0xE862D81A;
  LODWORD(STACK[0x5C0]) = v140 ^ 0xE862D81A;
  int v142 = (((2 * (BYTE2(v141) ^ 0x28)) | 0x5710A22A) - (BYTE2(v141) ^ 0x28) - 730353941) ^ 0x3B9D5110;
  int v143 = dword_10072FF70[(v142 - ((2 * v142) & 0x29180A44) + 1418462498) ^ 0x44990502];
  HIDWORD(v65) = v143 ^ 0x81F9;
  LODWORD(v65) = v143 ^ 0x4A970000;
  int v144 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x4FE0B0A4) + 670062674;
  int v145 = dword_10073F860[HIBYTE(v141) ^ 3];
  HIDWORD(v65) = v145 ^ 0x17D;
  LODWORD(v65) = v145 ^ 0xBA404C00;
  int v146 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xC73D9576) - 476132677;
  unsigned int v147 = (((2 * v146) ^ 0xC73D9576) - 2 * (((2 * v146) ^ 0xC73D9576) & 0x19C66C98 ^ (2 * v146) & 8) + 969305232) & 0x32119686 ^ 0x730086B8;
  unsigned int v148 = ((v147 | 0x29C793C3) - (v147 | 0xD6386C3C) - 700945348) ^ v146;
  HIDWORD(v65) = v148 ^ 0xC2;
  LODWORD(v65) = v148 ^ 0x88DD4C00;
  int v149 = (v65 >> 8) - ((2 * (v65 >> 8)) & 0x7CC69954) + 1046695082;
  unsigned int v150 = (((2 * (BYTE1(v141) ^ 0x71)) & 0x7C) - (BYTE1(v141) ^ 0x71) + 249819841) ^ 0x8EC6B260;
  unsigned int v151 = (((2 * ((v130 ^ v140 ^ 0x1A) ^ 0x9F)) & 0xE8)
  int v152 = v151 - ((2 * v151 + 1896307116) & 0x710146D0) - 1255108546;
  int v153 = dword_10072FF70[(v150 - ((2 * v150) & 0x4006CE) - 2143768729) ^ 0x1DEFB2];
  HIDWORD(v65) = v153 ^ 0x9781F9;
  LODWORD(v65) = v153 ^ 0x4A000000;
  int v154 = ((v65 >> 24) - ((2 * (v65 >> 24)) & 0x87D994B6) - 1007891877) ^ v144 ^ v139 ^ v149;
  int v155 = v152 ^ dword_10073DF00[(2 * (((v130 ^ v140 ^ 0x1A) ^ 0x6C) & 7)
  unsigned int v156 = ((2 * v154) & 0xDCE7FD7E ^ 0x14C70C5A) + (v154 ^ 0xF41079D2);
  unsigned int v157 = (((v154 ^ v155 ^ 0xB9EA9E27) + 1) ^ 0x7EF6F7D5) + v156 + ((2 * ((v154 ^ v155 ^ 0xB9EA9E27) + 1)) & 0xFDEDEFAA);
  int v158 = v156
       - 1853095615
       + (v155 ^ ((v155 ^ 0x2389194A) - ((2 * (v155 ^ 0x2389194A) + 2) & 0x7FF660B2) + 1073426522) ^ 0xF10F375 ^ (v157 - 2 * ((v157 + 311757164) & 0x6C9D259B ^ v157 & 2) - 13488379));
  unsigned int v159 = v158 - ((2 * v158) & 0xF89E8364) - 61914702;
  LODWORD(STACK[0x5D0]) = v141 ^ 0x3BFE6A1C;
  LODWORD(STACK[0x550]) = v116 ^ v139;
  LODWORD(STACK[0x5B0]) = v159 ^ v116 ^ v139;
  unsigned int v160 = v159;
  LODWORD(STACK[0x530]) = v159;
  unsigned int v161 = v159 ^ v116 ^ v139 ^ v140 ^ 0xE862D81A;
  int v162 = v161 ^ v141 ^ 0x3BFE6A1C;
  LODWORD(STACK[0x560]) = v162;
  unsigned int v163 = v161;
  LODWORD(STACK[0x540]) = v161;
  int v164 = dword_100733670[((unsigned __int16)(v162 ^ 0x5FDB) >> 8) ^ 0x74];
  HIDWORD(v65) = v164 ^ 0x28A649;
  LODWORD(v65) = v164 ^ 0xC5000000;
  int v165 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0xA8DCE9DA) + 1416525037;
  unsigned int v166 = ((((v162 ^ 0x562C5FDBu) >> 24) ^ 0xA6)
        - 32372276
        + ((2 * (((v162 ^ 0x562C5FDBu) >> 24) ^ 0xA6) + 428) & 0x1EA ^ 0xFEFBE7FF)) ^ dword_10073DF00[((v162 ^ 0x562C5FDBu) >> 24) ^ 0x41];
  unsigned int v167 = (((2 * (((v162 ^ 0xDB) >> 1) ^ 0x69)) & 0xFFFFFFFB)
  unsigned int v168 = v167 - ((2 * v167) & 0x2121C576) - 1852120389;
  HIDWORD(v65) = v166 ^ 0xCCCCCCCC;
  LODWORD(v65) = v166 ^ 0x6F3C600;
  int v169 = (v65 >> 8) - ((2 * (v65 >> 8)) & 0x836F4220) - 1044930288;
  int v170 = (((2 * v168) ^ 0x98) - ((4 * (_BYTE)v168) & 0x8F) + 70) & 0xFE ^ 0x4C;
  unsigned int v171 = (v170 - ((2 * v170) & 0x4C) + 1744689447) ^ 0xAABDDB2E;
  unsigned int v172 = ((v171 | 0xB35CF75) - (v171 | 0xF4CA308A) - 188075894) ^ 0xC675CD76 | (v168 >> 7) ^ 0x12335C4;
  int v173 = ((v162 ^ 0x562C5FDBu) >> 16) ^ 0xCB;
  int v174 = dword_10073F860[(-670964434 - v173 + ((2 * v173) & 0x15E) + 34) ^ 0xD801E52E];
  HIDWORD(v65) = v174 ^ 0x17D;
  LODWORD(v65) = v174 ^ 0xBA404C00;
  int v175 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xC9BE6CA4) + 1692350034;
  unsigned int v176 = (((2 * v175) ^ 0xC9BE6CA4) - ((2 * ((2 * v175) ^ 0xC9BE6CA4)) & 0xCC928CC) + 644125799) & 0x32119686 ^ 0x10100686;
  int v177 = (v176 - ((2 * v176) & 0x20030C08) + 1485033252) ^ 0x3331D534;
  int v178 = (((2 * v177) | 0x1D9F7DAC) - v177 + 1898987818) ^ v175;
  HIDWORD(v65) = v178 ^ 0x9796;
  LODWORD(v65) = v178 ^ 0xB2360000;
  int v179 = v165 ^ dword_100733670[(v172 - ((2 * v172) & 0x6705DE6C) + 864218934) ^ 0x3382EF9B] ^ v169 ^ ((v65 >> 16) - ((2 * (v65 >> 16)) & 0xA2F09174) - 780646214);
  int v180 = v83 ^ 0xCEDF60BC ^ v179;
  unsigned int v181 = v161 ^ 0xD56DBC09 ^ v180;
  LODWORD(STACK[0x590]) = v180;
  unsigned int v182 = v181 ^ v162 ^ 0x562C5FDB;
  LODWORD(STACK[0x570]) = v181;
  int v183 = dword_100733670[HIBYTE(v182) ^ 0x6A];
  HIDWORD(v65) = v183 ^ 0x49;
  LODWORD(v65) = v183 ^ 0xC528A600;
  unsigned int v184 = ((v182 ^ 0x5D) - 2 * ((v182 ^ 0x5D) & 0x1F) - 2023752417) ^ 0xC7594C1B;
  unsigned int v185 = ((BYTE2(v182) ^ 0xA6) - ((2 * (BYTE2(v182) ^ 0xA6)) & 0x2A) - 2129165547) ^ 0x814726A5;
  int v186 = ((v65 >> 8) - ((2 * (v65 >> 8)) & 0x87F416BC) + 1140460382) ^ dword_100733670[(((2 * v184) | 0xE49F22FC)
                                                                                      - v184
                                                                                      + 229666434) ^ 0xB2492056];
  int v187 = v182 ^ 0x558EDE0;
  LODWORD(STACK[0x580]) = v182 ^ 0x558EDE0;
  LOWORD(v182) = ((2 * (BYTE1(v182) ^ 0xA5)) & 0x2E) - (BYTE1(v182) ^ 0xA5) - 4120;
  int v188 = dword_100733670[(((2 * v185) & 0x805580) - v185 - 667495105) ^ 0xD8667084];
  HIDWORD(v65) = v188 ^ 0xA649;
  LODWORD(v65) = v188 ^ 0xC5280000;
  int v189 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x10EA9EFE) - 2005577857;
  int v190 = dword_10072FF70[((v182 & 0x31BD ^ 0x80620115) + (v182 & 0xE42 ^ 0xC41) - 1) ^ 0x80622258];
  HIDWORD(v65) = v190 ^ 0x9781F9;
  LODWORD(v65) = v190 ^ 0x4A000000;
  LODWORD(STACK[0x5A0]) = v179 ^ v160;
  int v191 = v186 ^ ((v65 >> 24) - ((2 * (v65 >> 24)) & 0xE75758D4) - 206853014) ^ v189 ^ v179 ^ v160;
  LODWORD(STACK[0x520]) = v191 ^ v180;
  LODWORD(STACK[0x650]) = v191;
  unsigned int v192 = v191 ^ v180 ^ 0xAADD43E9;
  unsigned int v193 = v192 ^ v163 ^ 0xD56DBC09 ^ v180;
  unsigned int v194 = v193 ^ v187;
  int v195 = dword_10073F860[(((v193 ^ v187) & 0x1F ^ 0xC9874607) + ((v193 ^ v187) & 0xE0 ^ 0xC1) - 1) ^ 0xC98746A5];
  unint64_t v196 = v76[13];
  STACK[0x3C0] = v196;
  LODWORD(v126) = (v196 ^ 0x3F) - 12 * ((171 * (v196 ^ 0x3F)) >> 11);
  HIDWORD(v65) = v195 ^ 0x17D;
  LODWORD(v65) = v195 ^ 0xBA404C00;
  int v197 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xC7A8A138) + 1674858652;
  int v198 = ((v193 ^ v187) >> 16) ^ 0x208411B4;
  int v199 = dword_10072FF70[(v198 - ((2 * v198) & 0x344) - 1037881438) ^ 0xE2A73EAF];
  HIDWORD(v65) = v199 ^ 0x81F9;
  LODWORD(v65) = v199 ^ 0x4A970000;
  LODWORD(v83) = dword_10073F860[((BYTE1(v194) ^ 0x59)
                                + ((v194 >> 8) & 0x55 ^ 0x5FE06004)
                                - ((BYTE1(v194) ^ 0x59) & 0x55555555)) ^ 0x5FE060F3];
  int v200 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x88A5442C);
  HIDWORD(v65) = v83 ^ 0x17D;
  LODWORD(v65) = v83 ^ 0xBA404C00;
  LODWORD(v83) = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xDD1AC59C) + 1854759630;
  int v201 = (((2 * v83) ^ 0xDD1AC59C) - ((2 * ((2 * v83) ^ 0xDD1AC59C)) & 0x20261798) + 269683661) & 0x32119686 ^ 0x20000402;
  LODWORD(v83) = (((((2 * v201) & 0x4002808) - v201 - 38696278) & 0x1A2E861A ^ 0x120C0441)
                + ((((2 * v201) & 0x4002808) - v201 - 38696278) & 0xE41178A4 ^ 0xC4100825)
                - 2) ^ v83;
  LODWORD(v196) = v194 ^ 0xD3B400AB;
  LODWORD(STACK[0x430]) = v194 ^ 0xD3B400AB;
  HIDWORD(v65) = v83 ^ 0x357504;
  LODWORD(v65) = v83 ^ 0x75000000;
  LODWORD(v83) = (v65 >> 24) - ((2 * (v65 >> 24)) & 0x88F9105A) + 1149012013;
  unsigned int v202 = ((HIBYTE(v194) ^ 0xED) - 1897189607 + ((2 * (HIBYTE(v194) ^ 0xED) + 172) & 0x84 ^ 0xDFF8FFFF)) ^ dword_10073DF00[HIBYTE(v194) ^ 0xA];
  HIDWORD(v65) = v202 ^ 0x7B;
  LODWORD(v65) = v202 ^ 0x951A1800;
  int v203 = (v200 + 1146266134) ^ v197 ^ (((2 * v197) ^ 0xC7A8A138)
                                     - ((2 * ((2 * v197) ^ 0xC7A8A138)) & 0x32DC7200)
                                     + 426653952) & 0x32119686 ^ v191 ^ ((v65 >> 8)
                                                                       - ((2 * (v65 >> 8)) & 0x309DFBB4)
                                                                       + 407829978) ^ v83;
  LODWORD(STACK[0x448]) = v203;
  unsigned int v204 = v193 ^ 0xEAFC9EB2;
  LODWORD(STACK[0x47C]) = v193 ^ 0xEAFC9EB2;
  int v205 = v203 ^ 0x6CB58F4B;
  int v206 = v203 ^ 0x6CB58F4B ^ v192;
  LODWORD(STACK[0x470]) = v206;
  int v207 = v206 ^ 0x1AA1E287;
  unsigned int v208 = v206 ^ 0x1AA1E287 ^ v204;
  int v209 = v207;
  LODWORD(STACK[0x468]) = v207;
  unsigned int v210 = ((((v208 ^ v196) >> 24) ^ 0x5C)
  HIDWORD(v65) = v210 ^ 0x6D;
  LODWORD(v65) = v210 ^ 0xFC87C700;
  int v211 = (v65 >> 8) - ((2 * (v65 >> 8)) & 0x1C1E85E0);
  int v212 = ((unsigned __int16)(v208 ^ v196) >> 8);
  unsigned int v213 = v212 ^ 0x52;
  unsigned int v214 = (v212 ^ 0xF9) + (((v208 ^ v196) >> 8) & 0xB4 ^ 0xEB82BD04) - ((v212 ^ 0xF9) & 0xB4);
  unsigned int v215 = ((v214 & 0xCA0012AE ^ 0x61020E) + (v214 ^ 0xEA8EF5B0) - ((v214 ^ 0xEA8EF5B0) & 0xC42AE)) ^ 0xCB611AE6;
  int v216 = (v215 - ((2 * v215 + 1896307116) & 0x41964808) + 1498337498) ^ dword_10073DF00[v213];
  HIDWORD(v65) = v216 ^ 0xB6BE3D;
  LODWORD(v65) = v216 ^ 0xE3FFFFFF;
  int v217 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0xE3184DC4) - 242473246;
  int v218 = v208 ^ v196 ^ 0xF4A0001D;
  LODWORD(STACK[0x418]) = v218;
  unsigned int v219 = ((((v208 ^ v196) >> 16) & 0xC4 ^ 0x6AA2A905) + (((v208 ^ v196) >> 16) & 0x3B) - 1) ^ 0x972E599B;
  LODWORD(STACK[0x420]) = v208;
  unsigned int v220 = (v141 ^ 0x51A1A909)
       + (((v141 ^ 0x57B556F6) + 1) ^ 0xF7DDFF7B)
       + ((2 * ((v141 ^ 0x57B556F6) + 1)) & 0xEFBBFEF6)
       + 136446085;
  int v221 = dword_100733670[(v219 - ((2 * v219) & 0x92014010) - 888952312) ^ 0x368F5A22];
  unsigned int v222 = ((v220 ^ 0x70A7EF5F) - 1890053983 + ((2 * v220) & 0xE14FDEBE)) | v221 ^ 0xC528A649;
  HIDWORD(v65) = (v222 - ((2 * v222) & 0x52E0) + 10608) ^ 0x2970;
  LODWORD(v65) = v221 ^ 0xC5280000;
  LODWORD(v196) = dword_100733670[(((v208 ^ v196) ^ 0xA000C88C)
  int v223 = v196 ^ v209;
  int v224 = v196;
  LODWORD(STACK[0x400]) = v196;
  HIDWORD(v65) = v223 ^ 0xCDB4;
  LODWORD(v65) = v223 ^ 0x52EC0000;
  int v225 = ((v65 >> 18) - ((2 * (v65 >> 18)) & 0x59813408) + 750819844) ^ (((v208 << 14) ^ 0xEFB04000)
                                                                       - ((2 * ((v208 << 14) ^ 0xEFB04000)) & 0x23BF0000)
                                                                       - 1847610692);
  HIDWORD(v65) = v225 ^ (v208 >> 18) ^ 0x2A17;
  LODWORD(v65) = v225 ^ 0x4A3AC000;
  LODWORD(v196) = (v65 >> 14) - ((2 * (v65 >> 14)) & 0xE227217A) - 250376003;
  unsigned int v226 = v218 ^ 0xF12C5F65 ^ v196;
  int v227 = v196;
  LODWORD(STACK[0x410]) = v196;
  unsigned int v228 = ((BYTE2(v226) ^ 0x39 | 0x6DB1BB33) - (BYTE2(v226) ^ 0x39 | 0x924E44CC) - 1840364340) ^ 0xCDB32DCF;
  int v229 = dword_10073F860[(((2 * v228) & 0x9E6A9AD4) - v228 - 1328893291) ^ 0x10C82480];
  HIDWORD(v65) = v229 ^ 0x17D;
  LODWORD(v65) = v229 ^ 0xBA404C00;
  int v230 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x9EBBEE5C) + 1331558190;
  unsigned int v231 = (((2 * v230) ^ 0x9EBBEE5C) - ((2 * ((2 * v230) ^ 0x9EBBEE5C)) & 0x208B050) + 17061928) & 0x32119686 ^ 0x22110480;
  unsigned int v232 = (((2 * v231) | 0x9DF94B2A) - v231 - 1325180309) ^ 0xEFFDBD15;
  int v233 = (((2 * v232) & 0x15E10154) - v232 + 1963949908) ^ v230;
  unsigned int v234 = (v226 ^ 0x350336CB | 0x8F3E81D4)
  HIDWORD(v65) = v233 ^ 0x13F8;
  LODWORD(v65) = v233 ^ 0xB8C60000;
  int v235 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0xDE63848E) - 281951673;
  unsigned int v236 = ((BYTE1(v226) ^ 0x97) - ((2 * (BYTE1(v226) ^ 0x97)) & 0xDC) - 266105490) ^ 0xA18B9D96;
  unsigned int v237 = ((BYTE1(v226) ^ 0xC8) + 832475421 + ((2 * (BYTE1(v226) ^ 0xC8) + 172) & 0x8C ^ 0x8FFAB7FF)) ^ dword_10073DF00[(((2 * v236) | 0xEA3899B0) - v236 - 1964788952) ^ 0x24B45C98];
  unsigned int v238 = (v237 ^ ((v237 ^ 0xA63F1E64) - ((2 * (v237 ^ 0xA63F1E64) + 2) & 0xAF8C9404) + 1472612867) ^ ((v237 ^ 0xC5988180) - ((2 * (v237 ^ 0xC5988180) + 122634186) & 0xB27C4AA) - 381976006) ^ 0x8B9549CC)
       + 1671929828;
  unsigned int v239 = ((2 * v238) & 0x9B774FD6) + (v238 ^ 0x4DBBA7EB);
  HIDWORD(v65) = v239 + 4478997;
  LODWORD(v65) = v239 - 1304143851;
  int v240 = dword_10072FF70[((v234 & 0x1001AA11 ^ 0x4018810) + (v234 & 0xAA3C15EE ^ 0x2A3E55E9) - 1) ^ 0x94026A43] ^ v224 ^ ((v65 >> 24) - ((2 * (v65 >> 24)) & 0x9D3E970A) + 1319062405) ^ 0x6031C789 ^ v235;
  int v241 = ((v240 & 0x2387EEED ^ 0x1C4967D) - ((2 * (v240 & 0x2387EEED ^ 0x1C4967D)) & 0x4087D16A) + 1615063477) ^ 0x6000F9AD;
  unsigned int v242 = v241 | ((v240 & 0xDC781112 ^ 0x98DF3165) - 1) ^ 0xD4B73176;
  unsigned int v243 = v242 - 2 * (v242 & 0x770DF577 ^ v241 & 5);
  unsigned int v244 = v226;
  LODWORD(STACK[0x40C]) = v226;
  LODWORD(STACK[0x3BC]) = HIBYTE(v226);
  int v245 = dword_10072FF70[HIBYTE(v226) ^ 0x4A];
  HIDWORD(v65) = v245 ^ 0xFFFFFFF9;
  LODWORD(v65) = v245 ^ 0x4A978100;
  int v246 = (v243 + 1997403506) ^ ((v65 >> 8) - ((2 * (v65 >> 8)) & 0xD93DCB9E) + 1822352847);
  int v247 = v223;
  LODWORD(STACK[0x3F8]) = v223;
  LODWORD(v196) = v223 ^ 0x70F77D61 ^ v246;
  int v248 = v246;
  LODWORD(STACK[0x3D0]) = v246;
  LODWORD(STACK[0x4B0]) = v196;
  int v249 = v196 ^ v227;
  LODWORD(v196) = v196 ^ v227 ^ 0x81271128;
  unsigned int v250 = v196 ^ v244;
  int v251 = v196;
  LODWORD(STACK[0x3E0]) = v196;
  int v252 = (v196 ^ v244);
  unsigned int v253 = ((v252 ^ 0xCC | 0xE3AC6BBA) - (v252 ^ 0xCC | 0x1C539445) + 475239493) ^ 0xE3AC6B3D;
  LODWORD(STACK[0x3E4]) = v196 ^ v244;
  int v254 = dword_10073F860[((BYTE2(v250) ^ 0x2C)
  HIDWORD(v65) = v254 ^ 0x17D;
  LODWORD(v65) = v254 ^ 0xBA404C00;
  int v255 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xAFC3C858) - 673061844;
  unsigned int v256 = (((2 * v255) ^ 0xAFC3C858) - ((2 * ((2 * v255) ^ 0xAFC3C858)) & 0x35E402CC) + 452067687) & 0x32119686 ^ 0x2001482;
  unsigned int v257 = (((2 * v256) & 0x60222008) - v256 - 2107316542) ^ 0x864EE687;
  int v258 = (((2 * v257) | 0x623E3E8A) - v257 - 824123205) ^ v255;
  HIDWORD(v65) = v258 ^ 0x782A;
  LODWORD(v65) = v258 ^ 0xF3400000;
  int v259 = dword_10072FF70[(((2 * (BYTE1(v250) ^ 0x813085B1)) | 0xF7A7EACC) - (BYTE1(v250) ^ 0x813085B1) - 2077488486) ^ 0xFAE3708E];
  int v260 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x8A4A773C);
  HIDWORD(v65) = v259 ^ 0x9781F9;
  LODWORD(v65) = v259 ^ 0x4A000000;
  int v261 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0xE7215B4A) + 1938861477;
  int v262 = dword_100733670[HIBYTE(v250) ^ 0x62];
  HIDWORD(v65) = v262 ^ 0x49;
  LODWORD(v65) = v262 ^ 0xC528A600;
  int v263 = v261 ^ dword_10073DF00[v252 ^ 0xAC] ^ ((v65 >> 8) - ((2 * (v65 >> 8)) & 0xDBADDF9A) - 304681011) ^ (v253 - ((2 * v253 + 17258924) & 0x188E708) + 2034770010) ^ (v260 + 1160067998);
  LODWORD(v196) = v247 ^ 0x3E2F17A3 ^ v263;
  LODWORD(STACK[0x640]) = v196;
  LODWORD(v196) = v249 ^ 0x2079177F ^ v196;
  LODWORD(STACK[0x620]) = v196;
  unsigned int v264 = v196 ^ v250;
  int v265 = ((v196 ^ v250) >> 16) ^ 0x85;
  unsigned int v266 = (((v196 ^ v250) >> 16) & 0x41) + (((v196 ^ v250) >> 16) & 0xBE ^ 0x3B461B7) - 1;
  unsigned int v267 = ((v266 & 0x1042BC4 ^ 0xE0410A84) + (v266 ^ 0xF9EE173) - ((v266 ^ 0xF9EE173) & 0x8082BC4)) ^ 0xE567AB0C;
  int v268 = (v267 - ((2 * v267 + 822565292) & 0x312C23D4) + 286899904) ^ dword_10073DF00[(v265
  HIDWORD(v65) = v268 ^ 0x8BD3;
  LODWORD(v65) = v268 ^ 0x1BEB0000;
  int v269 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0xDDF6CE72) - 285513927;
  int v270 = (((2 * (((unsigned __int16)(v196 ^ v250) >> 8) ^ 0xCD)) & 0x160)
  int v271 = dword_100733670[(((2 * v270) | 0x20BECF1C) - v270 + 1872795762) ^ 0xD95F470D];
  HIDWORD(v65) = v271 ^ 0x28A649;
  LODWORD(v65) = v271 ^ 0xC5000000;
  int v272 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0xB8B638DE) - 598008721;
  int v273 = (v196 ^ v250);
  unsigned int v274 = (((2 * (v273 ^ 0x97)) & 0x156) - (v273 ^ 0x97) - 230437548) ^ 0xF243CDEF;
  int v275 = ((v273 ^ 0x60) + 2057354850 - ((2 * (v273 ^ 0x60)) & 0x192) + 103) ^ 0x7AA0BE62;
  int v276 = v196 ^ v250 ^ 0x59FF9414;
  LODWORD(STACK[0x3F0]) = v276;
  int v277 = dword_10073F860[HIBYTE(v264) ^ 0x12];
  HIDWORD(v65) = v277 ^ 0x17D;
  LODWORD(v65) = v277 ^ 0xBA404C00;
  int v278 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xA676651A) + 1396388493;
  unsigned int v279 = (((((2 * v278) ^ 0xA676651A) - ((2 * ((2 * v278) ^ 0xA676651A)) & 0x39C23CE8) + 1021386356) & 0x32119686 ^ 0x4EC320D1)
        - 1) ^ 0xFDE24594;
  unsigned int v280 = ((v279 | 0x71BC96B7) - (v279 | 0x8E436948) - 1908184760) ^ v278;
  HIDWORD(v65) = v280 ^ 0xF8;
  LODWORD(v65) = v280 ^ 0xA0234000;
  int v281 = v272 ^ dword_10073DF00[v274];
  LODWORD(STACK[0x3D4]) = v263 ^ v248;
  LODWORD(v196) = v281 ^ v263 ^ v248 ^ (v275 - ((2 * v275 + 1896307116) & 0x538102BA) + 574893619) ^ v269 ^ ((v65 >> 8) - ((2 * (v65 >> 8)) & 0x46F1A73A) - 1552362595);
  LODWORD(STACK[0x3CC]) = v196;
  LODWORD(v196) = v196 ^ v251;
  LODWORD(STACK[0x460]) = v196;
  LODWORD(v196) = v196 ^ v276;
  int v282 = dword_10073F860[BYTE3(v196) ^ 0xE5];
  HIDWORD(v65) = v282 ^ 0x17D;
  LODWORD(v65) = v282 ^ 0xBA404C00;
  int v283 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xB5AE14E8) - 623441292;
  unsigned int v284 = ((2 * v283) ^ 0xB5AE14E8) + 756908075 + (~(2 * ((2 * v283) ^ 0xB5AE14E8)) | 0xE5C4FFAB);
  unsigned int v285 = (v284 & 0x32119686 ^ 0x12100682)
       + (v284 & 0x20000482 ^ 0xEC840878)
       - ((v284 & 0x32119686 ^ 0x12100682) & 0x20000482);
  unsigned int v286 = ((v285 & 0xF211253A ^ 0x38102109) + (v285 & 0x6DAC4 ^ 0xA448C1) - 2) ^ v283;
  int v287 = ((BYTE1(v196) ^ 0xEC) - ((2 * (BYTE1(v196) ^ 0xEC)) & 0x1FC) - 1131305474) ^ 0x3891B7E2;
  HIDWORD(v65) = v286 ^ 0x44444444;
  LODWORD(v65) = v286 ^ 0x31E27E00;
  LODWORD(STACK[0x450]) = v65 >> 8;
  LODWORD(STACK[0x5E8]) = v196;
  unsigned int v288 = (v196 ^ 0xFFFFFF88) + 513418378 + ((2 * v196) | 0xC2CBB6EE);
  LODWORD(STACK[0x438]) = dword_10073F860[(v287 - ((2 * v287) & 0x80029E6) + 111000819) ^ 0x829DAE29];
  LODWORD(STACK[0x440]) = dword_10073F860[((BYTE2(v196) ^ 0x28B405 | 0xB6BE8EB8)
                                         - (BYTE2(v196) ^ 0x28B405 | 0x49417147)
                                         + 1229025607) ^ 0xB6963AAF];
  LODWORD(STACK[0x458]) = dword_10073F860[((v288 & 0x61218016 ^ 0x14900004)
                                         + (v288 ^ 0xE923CD73)
                                         - ((v288 ^ 0xE923CD73) & 0x8440016)) ^ 0x75B396AD];
  uint64_t v290 = v76[11];
  uint64_t v291 = *v76;
  uint64_t v292 = v76[10];
  uint64_t v293 = v76[14];
  uint64_t v294 = v76[5];
  uint64_t v295 = (unint64_t *)STACK[0xB08];
  STACK[0x428] = STACK[0xB08];
  unint64_t v296 = *v295;
  STACK[0x3D8] = *v295;
  unint64_t v297 = STACK[0xB20];
  STACK[0x3B0] = STACK[0xB20];
  STACK[0x380] = STACK[0xB20];
  *(void *)unint64_t v297 = v296 ^ 0x9696969696969696LL;
  LODWORD(v297) = byte_100733050[STACK[0x480] ^ 0x1D];
  LODWORD(v297) = v297 - ((2 * v297 + 126) & 0x5E) - 82;
  unsigned int v298 = ((((v297 ^ 0x57 ^ (v297 >> 4) & 4)
  HIDWORD(v65) = byte_10073CE70[STACK[0x4A0] ^ 0x15];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  int v299 = ((((((v65 >> 25) - 2 * ((v65 & 0x2000000) != 0) - 127) ^ 0x12)
  int v300 = v299 - ((2 * v299) & 0x7B2C0000) + 1033261172;
  unsigned int v301 = v298 + 871220539;
  int v302 = v298 + 871220539 - ((2 * v298) & 0x66666666);
  unsigned int v303 = (((((v300 & 0x4A0000 ^ 0xCE4D2E4F) - 1) ^ 0x3255A89) - 1) ^ 0xCD6A74C6 | ((v301 & 0x1000000 | v302 & 0xE8000000 ^ 0x2AA7B12B)
                                                                                 - 1) & 0xFF000001) ^ 0xB000000;
  int v304 = ((v302 & 0x16000000 ^ 0x6000000) - ((2 * (v302 & 0x16000000 ^ 0x6000000)) & 0x4000000) + 1664673030) ^ 0x7378BDC6;
  int v305 = ((2 * v304) & 0x30809180) - v304 - 1497983459;
  unsigned int v306 = v305 ^ 0xA2F6CEDD | ((((v300 & 0x40000) + (v300 & 0xB50000 ^ 0x150000)) | 0x1020000)
                            - ((v300 & 0xB50000 ^ 0x150000) & 0x40000)) & 0xFFFDFFFF ^ 0x1850000;
  int v307 = (v306 - 2 * (v306 & 0x2B72961E ^ v305 & 2) + 728929820) ^ 0x2B72961C | (v303
                                                                               + 1835278568
                                                                               + (~(2 * v303) | 0x25379E85)
                                                                               + 4054) ^ 0x6D6430BD;
  int v308 = byte_100752200[STACK[0x4D0] ^ 0xD8] ^ 0xF4;
  unsigned int v309 = (((v308 - ((2 * v308) & 0xD0)) << 16) - 1771569152) ^ 0x96680000;
  int v310 = byte_100757360[STACK[0x498] ^ 0x79] ^ 0x55;
  unsigned int v311 = (v309 - ((2 * v309) & 0x33E0000) - 1046515054) ^ 0xC19F7292 | (v310 - ((2 * v310) & 0x1DA) + 1187933933) ^ 0x46CE6EED;
  int v312 = byte_100733050[STACK[0x4C0] ^ 0x68];
  unsigned int v313 = v311 - ((2 * v311) & 0x22E91B38);
  unsigned int v314 = byte_100733050[v290 ^ 0x88] - ((2 * byte_100733050[v290 ^ 0x88] - 2) & 0xFFFFFFC8) - 29;
  int v315 = v314 ^ 0x2A ^ (((v314 & 0x40) >> 4) | 0x4A);
  unsigned int v316 = (v307 - ((2 * v307) & 0x9B5A2C26) + 1303189011) ^ 0x4DAD1613 | (v315
                                                                       - ((2 * v315) & 0x15C)
                                                                       + 77196974) ^ 0x499EEAE;
  HIDWORD(v65) = byte_10073CE70[STACK[0x3C0] ^ 0xBE];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  unsigned int v317 = ((((((v65 >> 25) - ((2 * (v65 >> 25)) & 0xC8) - 28) ^ 0xFE)
  int v318 = byte_100752200[STACK[0x4F0] ^ 0x16] ^ 0xA7;
  unsigned int v319 = (((v318 - ((2 * v318) & 0x12E)) << 8) - 1860069632) ^ 0x91219700;
  unsigned int v320 = v312 - ((2 * v312 + 126) & 0x6E) + 54;
  unsigned int v321 = (v319 - ((2 * v319) & 0x2A427800) - 719242184) ^ 0xD5213C38 | ((v320 ^ 0xB7 ^ (v320 >> 4) & 4)
                                                                      - ((2 * (v320 ^ 0xB7 ^ (v320 >> 4) & 4)) & 0x104)
                                                                      - 866756222) ^ 0xCC565982;
  unsigned int v322 = v321 - ((2 * v321) & 0x10782FFC);
  unsigned int v323 = byte_100733050[v291 ^ 0x13] - ((2 * byte_100733050[v291 ^ 0x13] - 2) & 0xFFFFFF92) - 56;
  unsigned int v324 = ((((v323 ^ 0xA6 ^ (v323 >> 4) & 4) - ((2 * (v323 ^ 0xA6 ^ (v323 >> 4) & 4)) & 0x58)) << 24) - 1409286144) ^ 0xAC000000;
  unsigned int v325 = (v324 - ((2 * v324) & 0x3A000000) - 1646887063) ^ 0x9DD67F69 | (v313 + 292851100) ^ 0x11748D9C;
  unsigned int v326 = v325 - ((2 * v325) & 0x4A42AD8E);
  int v327 = byte_100752200[STACK[0x510] ^ 0x3F] ^ 0x48;
  unsigned int v328 = (((v327 - ((2 * v327) & 0xFFFFFFF3)) << 24) + 2030043136) ^ 0x79000000;
  unsigned int v329 = (v322 - 2009327618) ^ 0x883C17FE | (v328 - ((2 * v328) & 0x70000000) + 955552092) ^ 0x38F4915C;
  int v330 = byte_100752200[v292 ^ 0x7B] ^ 0x9A;
  int v331 = (((v330 - ((2 * v330) & 0x20)) << 8) + 98963456) ^ 0x5E61000;
  unsigned int v332 = (v316 - ((2 * v316) & 0xD843ECA4) - 333318574) ^ 0xEC21F652 | (v331 - ((2 * v331) & 0x753EB600) - 1163961357) ^ 0xBA9F5BF3;
  int v333 = v332 - ((2 * v332) & 0x758C1DA2) - 1161425199;
  uint64_t v334 = byte_100757360[v293 ^ 0x57];
  unsigned int v335 = ((((v334 ^ 0xCF) - ((2 * (v334 ^ 0xCF)) & 0x1C)) << 8) + 173149696) ^ 0xA520E00;
  int v336 = byte_100752200[v294 ^ 0x6B] ^ 0x6D;
  unsigned int v337 = (((v336 - ((2 * v336) & 0x144)) << 16) - 123600896) ^ 0xF8A20000;
  int v338 = (v337 - ((2 * v337) & 0x1F8A0000) + 1338373342) ^ 0x4FC5F4DE | (v329 - ((2 * v329) & 0x1985C79A) + 214098893) ^ 0xCC2E3CD;
  unsigned int v339 = v338 - ((2 * v338) & 0xDCDC9286) - 294762173;
  unsigned int v340 = (v335 - ((2 * v335) & 0x68531400) + 1948879362) ^ 0x74298A02 | ((v317 + 2112572597 + (~(2 * v317) | 0x8429FFFF)) | 1) ^ 0x7DEB4CB5;
  uint64_t v341 = byte_100752200[v289 ^ 0xA4];
  unsigned int v342 = ((((v341 ^ 0x3F) - ((2 * (v341 ^ 0x3F)) & 0x55555555)) << 24) + 704643072) ^ 0x2A000000;
  HIDWORD(v65) = byte_10073CE70[STACK[0x500] ^ 0xF1];
  LODWORD(v65) = (HIDWORD(v65) ^ 0xDDDDDDDD) << 24;
  int v343 = (v65 >> 25) - ((2 * (v65 >> 25)) & 0x40) + 32;
  unsigned int v344 = (v340 - ((2 * v340) & 0xBE438A82) + 1596048705) ^ 0x5F21C541 | (v342 - ((2 * v342) & 0x56000000) - 1420238670) ^ 0xAB58E0B2;
  int v345 = (v344 - ((2 * v344) & 0x20614B24) + 271623570) ^ 0x1030A592 | ((v343 ^ 0xB5)
                                                                      - ((2 * (v343 ^ 0xB5)) & 0x4C)
                                                                      + 729219878) ^ 0x2B770326;
  int v346 = v345 - ((2 * v345) & 0x35FB58B6) - 1694651301;
  LOBYTE(v294) = -1 - (STACK[0x3BC] & 0x10 | 0x62);
  int v347 = byte_100757360[STACK[0x4E0] ^ 0x5B] ^ 0xE7;
  unsigned int v348 = (((v347 - ((2 * v347) & 0x26)) << 8) - 1429138688) ^ 0xAAD11300;
  int v349 = (v348 - ((2 * v348) & 0x37962000) + 1540034647) ^ 0x5BCB1057 | (v326 + 622941895) ^ 0x252156C7;
  LODWORD(v294) = ((((v346 ^ 0x93148F7D) >> (v294 ^ 0x9D))
                  - ((2 * ((v346 ^ 0x93148F7D) >> (v294 ^ 0x9D))) & 0x351F5AB4)
                  + 445623642) ^ 0x1A8FAD5A) >> (v294 & 0x10);
  LOBYTE(v294) = v294 - ((2 * v294) & 4) + 2;
  int v350 = ((2 * (v294 ^ 0x6B896363)) | 0x6B6DA998) - (v294 ^ 0x6B896363) - 901174476;
  LODWORD(v297) = ((v294 ^ 0xF) + (v294 & 0x15 ^ 0x1910) - ((v294 ^ 0xF) & 0x15)) ^ 0x1937;
  LODWORD(v294) = ((v350 & 0x5C088342 ^ 0x10408043) + (v350 & 0x2373CBD) - 1) ^ 0x4E7F3727;
  LODWORD(v297) = (v294 - ((2 * v294 + 822565292) & 0x2539F736) - 1960793999) ^ dword_10073DF00[v297];
  HIDWORD(v65) = v297 ^ 0x61A2;
  LODWORD(v65) = v297 ^ 0x91E10000;
  LODWORD(v297) = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x47405B0A) - 1549783675;
  LODWORD(v341) = dword_10072FF70[v341 ^ 0x9A];
  HIDWORD(v65) = v341 ^ 0xFFFFFFF9;
  LODWORD(v65) = v341 ^ 0x4A978100;
  LODWORD(v341) = (v65 >> 8) - ((2 * (v65 >> 8)) & 0xE1664242) - 256696031;
  LODWORD(v334) = dword_100733670[v334 ^ 0xAE];
  HIDWORD(v65) = v334 ^ 0x28A649;
  LODWORD(v65) = v334 ^ 0xC5000000;
  LODWORD(v294) = ((2 * (v343 ^ 0x5B)) & 0x16E) + (v343 ^ 0x6A7BBEEC);
  int v351 = v341 ^ dword_10073DF00[v343 ^ 0xBC] ^ ((v65 >> 24)
                                                               - ((2 * (v65 >> 24)) & 0x948BB654)
                                                               + 1246092074) ^ (v294
                                                                              + 1772274431
                                                                              - ((2 * v294 + 470801470) & 0x3105B9F6)
                                                                              + 2075) ^ (v349
                                                                                       - ((2 * v349) & 0xC59CFB02)
                                                                                       - 489783935) ^ v297;
  unsigned int v352 = v339 ^ 0x94C8F3FB ^ v351;
  LODWORD(STACK[0x3BC]) = v352;
  int v353 = v333 ^ 0x7501F2EB ^ v352;
  LODWORD(v297) = v353 ^ v346;
  LODWORD(STACK[0x3C0]) = v353;
  int v354 = dword_10073F860[(((v353 ^ v346) ^ 0xDE | 0x6479A898)
  HIDWORD(v65) = v354 ^ 0x17D;
  LODWORD(v65) = v354 ^ 0xBA404C00;
  int v355 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xD93D0B02) - 325155455;
  unsigned int v356 = ((2 * v355) ^ 0xD93D0B02) - ((2 * ((2 * v355) ^ 0xD93D0B02)) & 0x14509598) + 1781025485;
  LODWORD(v334) = dword_100733670[(((2 * (BYTE1(v297) ^ 0x3F)) & 0x14A) - (BYTE1(v297) ^ 0x3F) + 602) ^ 0x257];
  HIDWORD(v65) = v334 ^ 0x28A649;
  LODWORD(v65) = v334 ^ 0xC5000000;
  LODWORD(v334) = (v65 >> 24) - ((2 * (v65 >> 24)) & 0xA94E6F5A) + 1420244909;
  unsigned int v357 = ((2 * (BYTE2(v297) ^ 0x8D)) | 0x9A522210) - (BYTE2(v297) ^ 0x8D) - 1294536968;
  int v358 = dword_10073F860[((v357 & 0x40000CE6 ^ 0x30820CC7) + (v357 & 0xD291319) - 1) ^ 0x7DAB1DA1];
  HIDWORD(v65) = v358 ^ 0x17D;
  LODWORD(v65) = v358 ^ 0xBA404C00;
  int v359 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x8CA3CC88) + 1179772484;
  unsigned int v360 = (((2 * v359) ^ 0x8CA3CC88) - 2 * (((2 * v359) ^ 0x8CA3CC88) & 0x15BD8E36 ^ (2 * v359) & 4) + 901615155) & 0x32119686;
  unsigned int v361 = ((v360 ^ 0xFFFFFF7F) + 2098092370 + ((2 * v360) | 0x5E34D5E)) ^ 0xA339206D;
  unsigned int v362 = (v361 - ((2 * v361) & 0xD6405E3C) + 1797271326) ^ v359;
  HIDWORD(v65) = v362 ^ 0x5E98;
  LODWORD(v65) = v362 ^ 0x3D2C0000;
  int v363 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0xEFAE390A) - 136897403;
  LODWORD(v296) = v297 ^ 0x8109042D;
  LODWORD(v297) = dword_100733670[BYTE3(v297) ^ 0xC];
  HIDWORD(v65) = v297 ^ 0x49;
  LODWORD(v65) = v297 ^ 0xC528A600;
  int v364 = v355 ^ v334 ^ ((v65 >> 8) - ((2 * (v65 >> 8)) & 0x93A7C1AA) + 1238622421) ^ ((v356 & 0x32119686 ^ 0x10111680)
                                                                                    + (v356 & 0x11606 ^ 0x606047)
                                                                                    - ((v356 & 0x32119686 ^ 0x10111680) & 0x11606)) & 0xFE3FFFFF ^ 0xA9CBB700 ^ v363;
  LODWORD(v297) = v364 ^ v339;
  int v365 = v353 ^ v364 ^ v339;
  LODWORD(STACK[0x3A8]) = v296;
  unsigned int v366 = v296 ^ v365 ^ 0x8663B976;
  int v367 = ((2 * (BYTE2(v366) ^ 0x90)) & 0x60) - (BYTE2(v366) ^ 0x90) - 849249585;
  unsigned int v368 = ((v367 & 0x48205833 ^ 0x22928431) + (v367 ^ 0xDD287ACE) - ((v367 ^ 0xDD287ACE) & 0x10000033)) ^ 0x6AFBDC91;
  unsigned int v369 = ((HIWORD(v366) & 0x48 ^ 0xC95F7A48) - (HIWORD(v366) & 0x48) + (BYTE2(v366) ^ 0x95)) ^ 0x49DE7E4A;
  int v370 = (v368 - ((2 * v368 + 822565292) & 0x2C365B76) - 828450159) ^ dword_10073DF00[(((2 * v369) | 0x96A06376)
                                                                                     - v369
                                                                                     - 1263546811) ^ 0xCBD135F8];
  HIDWORD(v65) = v370 ^ 0xB782;
  LODWORD(v65) = v370 ^ 0x55660000;
  int v371 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0xC677E7D6) - 482610197;
  unsigned int v372 = (((v296 ^ v365) ^ 0x15 | 0xF91C30C6)
  int v373 = BYTE1(v366);
  int v374 = dword_100733670[((v296 ^ v365) >> 24) ^ 0x2C];
  LODWORD(v341) = (v373 ^ 0x3E) - ((2 * (v373 ^ 0x3E) + 1896307116) & 0x6105583A) - 365254413;
  HIDWORD(v65) = v374 ^ 0x49;
  LODWORD(v65) = v374 ^ 0xC528A600;
  int v375 = (v65 >> 8) - ((2 * (v65 >> 8)) & 0x4F5C5B8A);
  int v376 = ((2 * (v373 ^ 0x3C)) & 0x162) - (v373 ^ 0x3C) - 1050812594;
  int v377 = v341 ^ dword_10073DF00[((v376 & 0xC0406960 ^ 0xE804020) + (v376 ^ 0xC147AF48) - ((v376 ^ 0xC147AF48) & 0x1A6960)) ^ 0xCEC01983];
  HIDWORD(v65) = v377 ^ 0xCB6624;
  LODWORD(v65) = v377 ^ 0x72000000;
  int v378 = (v375 - 1481757243) ^ v364;
  int v379 = dword_10072FF70[((v372 | 0x1ABB75DB) - (v372 | 0xE5448A24) - 448493020) ^ 0x5CBB6C3D];
  LODWORD(STACK[0x370]) = v351;
  int v380 = v378 ^ v351 ^ v379 ^ ((v65 >> 24) - ((2 * (v65 >> 24)) & 0x8F853ADA) - 943547027) ^ v371;
  int v381 = v380 ^ v297;
  int v382 = v380 ^ v297 ^ 0xB97ED517;
  LODWORD(v297) = ((unsigned __int16)(v382 ^ v296) >> 8);
  unsigned int v383 = v297 ^ 0x54;
  LODWORD(v341) = (((2 * ((v382 ^ v296) >> 8)) ^ 0x8A22F6)
  LODWORD(v297) = (((v341 | 0x6CF18ECF) - (v341 | 0x930E7130) - 1827770064) ^ 0x6DF18D4D)
                + ((((2 * (v297 ^ 0x4205B)) | 0x23DCA356) - (v297 ^ 0x4205B) - 300831147) ^ 0x2969DD95);
  LODWORD(v297) = (v297 - ((2 * v297) & 0x6E2A7BC2) + 1997880801) ^ dword_10073DF00[v383];
  HIDWORD(v65) = v297 ^ 0x68A7D8;
  LODWORD(v65) = v297 ^ 0xB4000000;
  LODWORD(STACK[0x3A0]) = v380 ^ 0x8EAC9023;
  int v384 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0x38F5EE48) + 477820708;
  LODWORD(v297) = dword_10073F860[((v382 ^ v296) >> 24) ^ 0x17];
  HIDWORD(v65) = v297 ^ 0x17D;
  LODWORD(v65) = v297 ^ 0xBA404C00;
  LODWORD(v294) = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x86CFD008) + 1130883076;
  LODWORD(v297) = ((2 * v294) ^ 0x86CFD008) - 2 * (((2 * v294) ^ 0x86CFD008) & 0x18497ADE ^ (2 * v294) & 2) + 1481210589;
  LODWORD(v341) = ((v297 & 0x10101000 ^ 0x405E2811) + (v297 & 0x22018686 ^ 0x22010401) - 2) ^ 0x965E7558;
  LODWORD(v341) = (v341 - ((2 * v341) & 0x28222D90) - 1787218215) ^ v294;
  LODWORD(v294) = (((v382 ^ v296) >> 16) & 0x9E ^ 0x1040488F)
  HIDWORD(v65) = v341 ^ 0x93;
  LODWORD(v65) = v341 ^ 0x339A0200;
  LODWORD(v341) = (v65 >> 8) - ((2 * (v65 >> 8)) & 0x50943FFC) + 675946494;
  unsigned int v385 = v382 ^ v296 ^ 0xD198CE1C;
  LODWORD(v334) = ((2 * ((v382 ^ v296) ^ 0x63)) | 0x5B14E70A)
  int v386 = dword_10072FF70[((v294 & 0x10004847 ^ 0x28920501)
  HIDWORD(v65) = v386 ^ 0x81F9;
  LODWORD(v65) = v386 ^ 0x4A970000;
  LODWORD(v334) = dword_100733670[((v334 & 0x55E7190A ^ 0x44660802)
  int v387 = v365 ^ 0x13962D6D ^ v382;
  LODWORD(STACK[0x390]) = v387;
  LODWORD(STACK[0x394]) = v381 ^ 0x6EAE1B4A;
  int v388 = v387 ^ v381 ^ 0x6EAE1B4A ^ v334;
  int v389 = dword_10073F860[(((v388 ^ v385) ^ 0xEE)
  HIDWORD(v65) = v389 ^ 0x17D;
  LODWORD(v65) = v389 ^ 0xBA404C00;
  int v390 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xDA47A5D4) + 1831064298;
  unsigned int v391 = (((2 * v390) ^ 0xDA47A5D4) - 2 * (((2 * v390) ^ 0xDA47A5D4) & 0x11100566 ^ (2 * v390) & 0x20) + 823133510) & 0x32119686 ^ 0x2000402;
  int v392 = (((2 * v391) & 0x2022090C) - v391 - 473001376) ^ 0x69CEB4E9;
  LODWORD(v341) = dword_10073F860[(((2 * (((unsigned __int16)(v388 ^ v385) >> 8) ^ 0x34516386)) | 0xC743BBE6)
  HIDWORD(v65) = v341 ^ 0x17D;
  LODWORD(v65) = v341 ^ 0xBA404C00;
  LODWORD(v341) = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x9DC798A8) + 1323551828;
  LODWORD(v294) = ((2 * v341) ^ 0x9DC798A8) - ((2 * ((2 * v341) ^ 0x9DC798A8)) & 0x76B6C3C) + 1135982110;
  LODWORD(v294) = (v294 & 0x12100200 | v294 & 0x20019486 ^ 0xCCE118F5) - 1;
  LODWORD(v341) = ((v294 & 0xD0309884 ^ 0x14580009) + (v294 & 0x22010602 ^ 0x3010703) - 2) ^ v341;
  HIDWORD(v65) = v341 ^ 0xED25E;
  LODWORD(v65) = v341 ^ 0x9A000000;
  LODWORD(v341) = (v65 >> 24) - ((2 * (v65 >> 24)) & 0x15ED8A08) - 1963539196;
  LODWORD(v294) = ((((v388 ^ v385) >> 16) & 0x16 ^ 0x92848411) + (((v388 ^ v385) >> 16) & 0xE9) - 1) ^ 0x92848450;
  int v393 = ((v388 ^ v385) >> 16) ^ 0x9A;
  unsigned int v394 = (((2 * v393) & 0xFFFFFF7F) - v393 + 138327872) ^ 0x50BEB542;
  LODWORD(v294) = (v294 - ((2 * v294 + 1896307116) & 0x5A3F1FD0) - 1516028738) ^ dword_10073DF00[(v394
                                                                                                - ((2 * v394) & 0x9100330E)
                                                                                                - 809035385) ^ 0x97471BB8];
  HIDWORD(v65) = v294 ^ 0x15D1;
  LODWORD(v65) = v294 ^ 0xAE620000;
  int v395 = dword_10072FF70[((v388 ^ v385) >> 24) ^ 0xB6];
  LODWORD(v294) = (v65 >> 16) - ((2 * (v65 >> 16)) & 0xDEEB3882);
  HIDWORD(v65) = v395 ^ 0xFFFFFFF9;
  LODWORD(v65) = v395 ^ 0x4A978100;
  int v396 = v390 ^ ((v65 >> 8) - ((2 * (v65 >> 8)) & 0x9773E484) + 1270477378) ^ (v392
                                                                             - ((2 * v392) & 0x1038C93A)
                                                                             + 161244381) ^ (v294 + 1869978689) ^ 0x84B0140D ^ v341;
  unsigned int v397 = v381 ^ 0xF2E2F2F3 ^ v396;
  LODWORD(STACK[0x364]) = v385;
  unsigned int v398 = v397 ^ v385;
  LODWORD(STACK[0x36C]) = v397;
  unsigned int v399 = v397 ^ v385 ^ 0x9C733666;
  unsigned int v400 = (BYTE1(v399) ^ 0x57 | 0x69B01E12) - (BYTE1(v399) ^ 0x57 | 0x964FE1ED) - 1773149715;
  int v401 = dword_10072FF70[((v400 & 0x612000BB ^ 0xB70200AB) + (v400 & 0x8901F44 ^ 0x8981C01) - 1) ^ 0xD62A0251];
  HIDWORD(v65) = v401 ^ 0x9781F9;
  LODWORD(v65) = v401 ^ 0x4A000000;
  int v402 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0xD76C9784) - 340374590;
  unsigned int v403 = ((BYTE2(v399) ^ 0xA7) - 251503324 + ((2 * (BYTE2(v399) ^ 0xA7) + 172) & 0x9A ^ 0x8FFABFFF)) ^ dword_10073DF00[((HIWORD(v399) & 0x3F) - BYTE2(v399) + (BYTE2(v399) | 0xBE7DD1C0) - 39584000) ^ 0xBC21D080];
  unsigned int v404 = v397 ^ v385 ^ 0xB629E64A;
  HIDWORD(v65) = v403 ^ 0x2A74;
  LODWORD(v65) = v403 ^ 0x7B030000;
  int v405 = dword_100733670[HIBYTE(v398) ^ 0x17];
  int v406 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x35B5B580);
  HIDWORD(v65) = v405 ^ 0x49;
  LODWORD(v65) = v405 ^ 0xC528A600;
  int v407 = (v65 >> 8) - ((2 * (v65 >> 8)) & 0x26379758) - 1826894932;
  int v408 = dword_10073F860[(((2 * (v399 ^ 0x5C96C0E3)) | 0xE3E3AAD4)
  HIDWORD(v65) = v408 ^ 0x17D;
  LODWORD(v65) = v408 ^ 0xBA404C00;
  int v409 = (v65 >> 9) + 2130309094 - ((2 * (v65 >> 9)) & 0xFDF3E32C) + 432;
  LODWORD(v296) = v402 ^ v407 ^ v409 ^ v334 ^ v396 ^ (v406 + 450550464) ^ 0x809C2355 ^ (((((2 * v409) ^ 0xFDF3E32C)
                                                                                        - ((2 * ((2 * v409) ^ 0xFDF3E32C)) & 0x3F7E6B24)
                                                                                        + 532624787) & 0x32119686 ^ 0x7B909899)
                                                                                      - 1);
  int v410 = v296 ^ v388;
  int v411 = v296;
  LODWORD(STACK[0x328]) = v296;
  LODWORD(v296) = v296 ^ v388 ^ 0x8C948DB7;
  LODWORD(STACK[0x38C]) = v296;
  LODWORD(STACK[0x374]) = v296 ^ v404;
  unsigned int v412 = ((((v296 ^ v404) >> 24) ^ 0x3F)
  HIDWORD(v65) = v412 ^ 0xE6;
  LODWORD(v65) = v412 ^ 0xDDA78200;
  int v413 = (v65 >> 8) - ((2 * (v65 >> 8)) & 0x7AD16720) - 1117211760;
  int v414 = ((v296 ^ v404) >> 16) ^ 0x2C;
  int v415 = (v296 ^ v404);
  int v416 = dword_100733670[(((v414 - ((2 * v414) & 0x8A) + 380726085) & 0x3D5 ^ 0x4A201090)
                        + ((v414 - ((2 * v414) & 0x8A) + 380726085) & 0xC2A ^ 0x1C0809)
                        - 1) ^ 0x4A3C13C3];
  HIDWORD(v65) = v416 ^ 0xA649;
  LODWORD(v65) = v416 ^ 0xC5280000;
  int v417 = dword_10072FF70[((unsigned __int16)(v296 ^ v404) >> 8) ^ 0x11];
  int v418 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x52C21FB6);
  HIDWORD(v65) = v417 ^ 0x9781F9;
  LODWORD(v65) = v417 ^ 0x4A000000;
  int v419 = (v418 - 1453256741) ^ dword_10073DF00[(((v296 ^ v404) & 0x10)
                                              + 142465280
                                              + (v415 ^ 0x14)
                                              - ((v415 ^ 0x14) & 0x10)) ^ 0x87DD938] ^ ((v65 >> 24)
                                                                                      - ((2 * (v65 >> 24)) & 0x9928C4AC)
                                                                                      - 862690730) ^ ((v415 ^ 0xDB) + 953387391 + ((2 * (v415 ^ 0xDB) + 428) & 0x150 ^ 0xFFF8E7FF)) ^ v413;
  int v420 = v419 ^ v397 ^ 0x4B9BE17B;
  LODWORD(v294) = v419 ^ v397;
  LODWORD(v293) = v420 ^ v410;
  LODWORD(STACK[0x350]) = v420 ^ v410;
  unsigned int v421 = v420 ^ v404;
  int v422 = dword_10073F860[HIBYTE(v421) ^ 0x3D];
  HIDWORD(v65) = v422 ^ 0x17D;
  LODWORD(v65) = v422 ^ 0xBA404C00;
  int v423 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0xDA312980) + 1830327488;
  LODWORD(v297) = (((2 * v423) ^ 0xDA312980) - ((2 * ((2 * v423) ^ 0xDA312980)) & 0x32C7E2CC) + 425980262) & 0x32119686 ^ 0x22010080;
  LODWORD(v297) = ((v297 | 0xEDEDD7FD) - (v297 | 0x12122802) + 303179778) ^ 0xF7418778;
  int v424 = (v297 - ((2 * v297) & 0x68B89B88) + 878464452) ^ v423;
  LODWORD(v297) = ((v421 & 0x60 ^ 0x241) + (v421 & 0x9F) - 1) ^ 0x248;
  unsigned int v425 = ((v421 & 4) + (v421 ^ 0xFFFFFF26) + (v421 | 0x7241A7FB) + 1) ^ 0x260227FB;
  HIDWORD(v65) = v424 ^ 0x85;
  LODWORD(v65) = v424 ^ 0x706C8E00;
  int v426 = dword_10073F860[(((2 * (BYTE2(v421) ^ 0xC75790F4)) | 0x8C8DD32) - (BYTE2(v421) ^ 0xC75790F4) + 2073792871) ^ 0x4333FEAB];
  int v427 = (v65 >> 8) - ((2 * (v65 >> 8)) & 0xB120FB90);
  HIDWORD(v65) = v426 ^ 0x17D;
  LODWORD(v65) = v426 ^ 0xBA404C00;
  int v428 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x583B2558) - 1407348052;
  int v429 = (((2 * v428) ^ 0x583B2558) - ((2 * ((2 * v428) ^ 0x583B2558)) & 0x36B914E4) + 995920499) & 0x32119686 ^ 0x22100204;
  unsigned int v430 = (((((2 * v429) & 0x64000108) - v429 - 871236006) & 0xE00187B2 ^ 0x6020C1A3 | (((2 * v429) & 0x64000108)
                                                                                     - v429
                                                                                     - 871236006) & 0x1E10184C)
        - 1) ^ v428;
  int v431 = v421 ^ 0x45909902;
  LODWORD(STACK[0x348]) = v421 ^ 0x45909902;
  int v432 = BYTE1(v421);
  LOWORD(v429) = (v432 ^ 0x2D) - ((2 * (v432 ^ 0x2D)) & 0x19A) + 26061;
  int v433 = ((v429 & 0x46D ^ 0x247F6408) + (v429 & 0x392 ^ 0x10001181) - 1) ^ 0x347F708A;
  HIDWORD(v65) = v430 ^ 0xDAD0;
  LODWORD(v65) = v430 ^ 0x11A80000;
  int v434 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x4B931624) - 1513518318;
  int v435 = ((v432 ^ 0xE) - ((2 * (v432 ^ 0xE)) & 0x12) + 511721737) ^ 0x3E674001;
  int v436 = (v433 - ((2 * v433 + 1896307116) & 0x6EDC3134) + 804373872) ^ dword_10073DF00[(v435
                                                                                      - ((2 * v435) & 0x14800BC)
                                                                                      + 1186201694) ^ 0x6653015D];
  HIDWORD(v65) = v436 ^ 0x1382A3;
  LODWORD(v65) = v436 ^ 0x34000000;
  int v437 = (v427 - 661619256) ^ dword_10073DF00[(((2 * v425) | 0x34E8010A) - v425 - 443809925) ^ 0x4E3780B3];
  LODWORD(STACK[0x2F0]) = v419 ^ v411;
  LODWORD(v296) = v437 ^ v419 ^ v411 ^ (v297 - ((2 * v297 + 17258924) & 0x102536E) + 2122114701) ^ ((v65 >> 24)
                                                                                                  - ((2 * (v65 >> 24)) & 0xFAF76F1E)
                                                                                                  + 2105259919) ^ v434;
  LODWORD(STACK[0x2A8]) = v296;
  LODWORD(STACK[0x340]) = v419 ^ v397;
  LODWORD(v297) = v419 ^ v397 ^ 0x2D193AFD ^ v296;
  LODWORD(STACK[0x300]) = v297;
  LODWORD(v296) = v297 ^ v293;
  LODWORD(v297) = v297 ^ v293 ^ 0xE72A2984;
  LODWORD(STACK[0x2C8]) = v296;
  LODWORD(STACK[0x2F8]) = v297;
  LODWORD(v297) = v297 ^ v431;
  unsigned int v438 = (2 * ((v297 ^ 0xC2) & 0x1F) - (v297 ^ 0xC2) + 736) ^ 0x279;
  int v439 = dword_100733670[(((((v297 >> 8) & 0x9F ^ 0xF5290682) & 0x2B4 | (v297 >> 8) & 0x20) ^ 0x14C95131)
  HIDWORD(v65) = v439 ^ 0x28A649;
  LODWORD(v65) = v439 ^ 0xC5000000;
  int v440 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0xFF72595E) + 2142842031;
  int v441 = v297 ^ 0x7677CD86;
  LODWORD(STACK[0x2E0]) = v297 ^ 0x7677CD86;
  unsigned int v442 = BYTE3(v297) ^ 0x3A;
  LODWORD(v297) = ((WORD1(v297) & 0x18) + (BYTE2(v297) ^ 0xFFFFFFFA) + (BYTE2(v297) | 0x10A6D9E7) + 1) ^ 0x40A6DDE7;
  int v443 = dword_100733670[v442];
  HIDWORD(v65) = v443 ^ 0x49;
  LODWORD(v65) = v443 ^ 0xC528A600;
  LODWORD(v297) = dword_10073F860[((v297 | 0xA178886F) - (v297 | 0x5E877790) + 1585936272) ^ 0xF1788C9C];
  int v444 = v440 ^ dword_100733670[v438] ^ ((v65 >> 8) - 211312452 - ((2 * (v65 >> 8)) & 0xE6CF3A40) - 924);
  HIDWORD(v65) = v297 ^ 0x17D;
  LODWORD(v65) = v297 ^ 0xBA404C00;
  LODWORD(v297) = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x7B14A98) + 64529740;
  int v445 = (((2 * v297) ^ 0x7B14A98) - ((2 * ((2 * v297) ^ 0x7B14A98)) & 0x1159C5C) + 9096750) & 0x32119686 ^ 0x30008206;
  LODWORD(v297) = (((((2 * v445) | 0x4D58D15A) - v445 - 648833197) & 0xA4E09C06 ^ 0xA0E09443)
                 + ((((2 * v445) | 0x4D58D15A) - v445 - 648833197) & 0x5A1F63B8 ^ 0x2086099)
                 - 2) ^ v297;
  HIDWORD(v65) = v297 ^ 0xAAB8;
  LODWORD(v65) = v297 ^ 0xB6180000;
  int v446 = v444 ^ ((v65 >> 16) - ((2 * (v65 >> 16)) & 0xDA80FAFA) + 1832942973);
  LODWORD(STACK[0x258]) = v446;
  int v447 = v446 ^ v294 ^ 0x7188C5D4;
  LODWORD(STACK[0x2A0]) = v447;
  LODWORD(v297) = v447 ^ v296 ^ 0x86BBD359;
  LODWORD(STACK[0x2C4]) = v297;
  unsigned int v448 = v441 ^ v297;
  LODWORD(STACK[0x250]) = dword_10073F860[(((v441 ^ v297) ^ 7 | 0x7EEAEF85)
  LODWORD(STACK[0x270]) = dword_100733670[((v441 ^ v297) >> 24) ^ 0x47];
  LODWORD(STACK[0x298]) = v441 ^ v297;
  LODWORD(v297) = (((unsigned __int16)(v441 ^ v297) >> 8) ^ 0x51)
  LODWORD(STACK[0x280]) = dword_10073DF00[((HIWORD(v448) & 0xE6 ^ 0xE1877CFD) - (HIWORD(v448) & 0x19)) ^ 0xE1877C34];
  unint64_t v449 = *(void *)(STACK[0x428] + 8);
  STACK[0x378] = v449;
  LODWORD(STACK[0x23C]) = dword_10072FF70[((v297 & 0xC2231916 ^ 0x8000902)
  *(void *)(STACK[0x3B0] + _Block_object_dispose(va, 8) = v449 ^ 0x9696969696969696LL;
  HIDWORD(v65) = LODWORD(STACK[0x438]) ^ 0x17D;
  LODWORD(v65) = LODWORD(STACK[0x438]) ^ 0xBA404C00;
  int v450 = (v65 >> 9) - 772009860 + (~(2 * (v65 >> 9)) | 0x5C07DF09);
  unsigned int v451 = ((2 * v450) ^ 0xA3F820F6) - ((2 * ((2 * v450) ^ 0xA3F820F6)) & 0xE48C804) + 1730438147;
  unsigned int v452 = ((((v451 & 0x32119686 ^ 0x12109602)
          + (v451 & 0x2118606 ^ 0x4DA1686D)
          - ((v451 & 0x32119686 ^ 0x12109602) & 0x2118606)) ^ 0xCAC80B20)
        - 1) ^ v450;
  HIDWORD(v65) = v452 ^ 0x11F0B7;
  LODWORD(v65) = v452 ^ 0x65000000;
  int v453 = (v65 >> 24) - ((2 * (v65 >> 24)) & 0x181BA272) - 1945251527;
  HIDWORD(v65) = LODWORD(STACK[0x440]) ^ 0x17D;
  LODWORD(v65) = LODWORD(STACK[0x440]) ^ 0xBA404C00;
  int v454 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x271A8C58) - 1819458004;
  int v455 = ((2 * v454) ^ 0x271A8C58) - 2 * (((2 * v454) ^ 0x271A8C58) & 0x11BCF3F6 ^ (2 * v454) & 4) + 1371337714;
  int v456 = ((v455 & 0x10011682 ^ 0x104B6469 | v455 & 0x22108004) - 1) ^ v454;
  HIDWORD(v65) = v456 ^ 0x2744;
  LODWORD(v65) = v456 ^ 0x92520000;
  int v457 = (v65 >> 16) - ((2 * (v65 >> 16)) & 0x9265E3C8) + 1228075492;
  HIDWORD(v65) = LODWORD(STACK[0x458]) ^ 0x17D;
  LODWORD(v65) = LODWORD(STACK[0x458]) ^ 0xBA404C00;
  int v458 = (v65 >> 9) - ((2 * (v65 >> 9)) & 0x5CA9644E) - 1370181081;
  unsigned int v459 = (((2 * v458) ^ 0x5CA9644E) - ((2 * ((2 * v458) ^ 0x5CA9644E)) & 0x2B3C3C40) + 362683937) & 0x32119686 ^ 0x8388338E;
  LODWORD(v449) = v458 ^ ((v459 | 0x3F466484) - (v459 | 0xB99B7B) + 12163963) ^ v457 ^ (LODWORD(STACK[0x450])
                                                                                      - ((2 * LODWORD(STACK[0x450])) & 0x58C6A7DA)
                                                                                      - 1402776595);
  int v460 = STACK[0x3CC];
  unsigned int v461 = LODWORD(STACK[0x3CC]) ^ 0xF582166D;
  LODWORD(v449) = v449 ^ v461 ^ 0xAECE0E44 ^ v453;
  LODWORD(STACK[0x4F0]) = v449;
  int v462 = LODWORD(STACK[0x460]) ^ 0x11B49E4;
  LODWORD(STACK[0x4E0]) = v462;
  int v463 = STACK[0x540];
  LODWORD(STACK[0x440]) = (LODWORD(STACK[0x540]) ^ 0xF57284E2 ^ LODWORD(STACK[0x620]))
                        - ((2 * (LODWORD(STACK[0x540]) ^ 0xF57284E2 ^ LODWORD(STACK[0x620])) + 1608497226) & 0x67F6FC2C)
                        - 1544857029;
  int v464 = v460 ^ LODWORD(STACK[0x640]);
  int v465 = v460;
  int v466 = v449 ^ v464;
  int v467 = v449 ^ v464 ^ v462;
  int v468 = v467 ^ 0x107E7131;
  unsigned int v469 = v467 ^ 0xED43CF8A;
  int v470 = STACK[0x550];
  int v471 = LODWORD(STACK[0x550]) ^ 0x3CC8C702;
  unsigned int v472 = ((2 * (v469 + v471)) & 0x757A5E3E) + ((v469 + v471) ^ 0xBABD2F1F);
  LODWORD(STACK[0x460]) = v472 - ((2 * v472 + 833385132) & 0x7BD19B58) + 1455359746;
  int v473 = STACK[0x520];
  int v474 = LODWORD(STACK[0x520]) ^ 0x37BCDACA;
  LODWORD(v449) = STACK[0x560];
  LODWORD(v290) = (LODWORD(STACK[0x560]) ^ 0xAE7A65B8)
                + v474
                + 1
                - ((2 * ((LODWORD(STACK[0x560]) ^ 0xAE7A65B8) + v474 + 1)) & 0x67A3805A)
                + 869384237;
  LODWORD(v292) = STACK[0x5B8];
  LODWORD(v334) = (LODWORD(STACK[0x5B8]) ^ 0x89FBC02D) + 1299289891;
  int v475 = v334 ^ 0x7F7DEEFD;
  LODWORD(v289) = (2 * v334) & 0xFEFBDDFA;
  int v476 = STACK[0x448];
  unsigned int v477 = LODWORD(STACK[0x448]) ^ 0xD00BAB6C;
  LODWORD(v334) = ((2 * ((v463 ^ 0xC425A6AD) + v477 + 1)) & 0xEDFCFDCE)
                + (((v463 ^ 0xC425A6AD) + v477 + 1) ^ 0xF6FE7EE7);
  int v478 = STACK[0x3D0];
  LODWORD(v341) = LODWORD(STACK[0x3D0]) ^ 0x1177554A;
  int v479 = STACK[0x530];
  int v480 = ((2 * ((LODWORD(STACK[0x530]) ^ 0xE7B280A2) + v341 + 1)) & 0xEFAABFBC)
       + (((LODWORD(STACK[0x530]) ^ 0xE7B280A2) + v341 + 1) ^ 0x77D55FDE);
  LODWORD(STACK[0x428]) = v334 - ((2 * v334 - 434800294) & 0xF08CBFA2) - 347005826;
  LODWORD(v293) = STACK[0x3D4];
  LODWORD(v334) = LODWORD(STACK[0x3D4]) ^ 0xAE7525A1;
  LODWORD(STACK[0x438]) = (LODWORD(STACK[0x650]) ^ 0x8FC8B106 ^ v334)
                        - ((2 * (LODWORD(STACK[0x650]) ^ 0x8FC8B106 ^ v334) - 772342212) & 0xE25B886E)
                        + 1512653653;
  int v481 = v475 + v289 - 2138959613 + v474;
  LODWORD(STACK[0x3A4]) = v466 ^ 0x21404329;
  LODWORD(STACK[0x458]) = v480 - ((2 * v480 + 2024904346) & 0x4BECB2C8) + 575612081;
  LODWORD(STACK[0x510]) = (LODWORD(STACK[0x5E0]) ^ 0x945F5CDD ^ v466 ^ 0x21404329)
                        - ((2 * (LODWORD(STACK[0x5E0]) ^ 0x945F5CDD ^ v466 ^ 0x21404329) + 13834616) & 0x7186C2C)
                        + 1207288530;
  int v482 = v449;
  LODWORD(STACK[0x4D0]) = (v449 ^ 0xB9302A7D ^ LODWORD(STACK[0x468]))
                        - ((2 * (v449 ^ 0xB9302A7D ^ LODWORD(STACK[0x468])) + 843590444) & 0x51BFD2FA)
                        + 1107558163;
  int v483 = LODWORD(STACK[0x5E8]) ^ 0x46B31D10 ^ v468;
  LODWORD(v76) = (v464 ^ 0xA2FF332 ^ v483) - 1200248609 + (~(2 * (v464 ^ 0xA2FF332 ^ v483) - 1181361762) | 0x48AA87E1);
  int v484 = ((2 * (v341 + v477)) & 0xF83BEFEC) + ((v341 + v477) ^ 0xFC1DF7F6);
  LODWORD(v289) = ((2 * ((v465 ^ 0xFE079DA0) + (v464 ^ 0x6E12803) + 1)) & 0xF7D7EDEE)
                + (((v465 ^ 0xFE079DA0) + (v464 ^ 0x6E12803) + 1) ^ 0xFBEBF6F7);
  unsigned int v485 = v484 + 718545656 + (~(2 * v484 + 299194102) | 0xBC2D1107);
  LODWORD(STACK[0x450]) = v289 - ((2 * v289 + 587643580) & 0x95992D6A) + 1548743699;
  int v486 = ((2 * ((v293 ^ 0x280F7D66) + (LODWORD(STACK[0x5B0]) ^ 0x59EAE81B))) & 0xDFF7773A)
       + (((v293 ^ 0x280F7D66) + (LODWORD(STACK[0x5B0]) ^ 0x59EAE81B)) ^ 0xEFFBBB9D);
  LODWORD(v293) = 1595914182 - v486 - ((708260798 - 2 * v486) & 0x94083BCE);
  LODWORD(v341) = v470;
  int v487 = STACK[0x430];
  LODWORD(v449) = (v470 ^ 0xE65D7ADF ^ v487) - ((2 * (v470 ^ 0xE65D7ADF ^ v487) - 1454712364) & 0x88DC968C) - 1726760912;
  int v488 = STACK[0x470];
  unsigned int v489 = ((v471 + 813040745) ^ 0x7AFDFD73)
       + ((2 * (v471 + 813040745)) & 0xF5FBFAE6)
       - 2063465843
       + (LODWORD(STACK[0x470]) ^ 0xF21452BD);
  LODWORD(v297) = v461 ^ v292;
  int v490 = v292 ^ v449 ^ v293 ^ 0xF589E5E7;
  int v491 = v341 ^ 0x99670CF0;
  LODWORD(v289) = LODWORD(STACK[0x5B0]) ^ 0xDDC241A9;
  LODWORD(STACK[0x290]) = v485;
  LODWORD(STACK[0x28C]) = (_DWORD)v76;
  unsigned int v492 = v76 ^ v485;
  LODWORD(STACK[0x5E0]) = v482 ^ 0xD5AD33F5 ^ v492;
  LODWORD(STACK[0x550]) = v463 ^ 0xBFF2F0E0 ^ v492;
  LODWORD(STACK[0x540]) = v289 ^ v492;
  LODWORD(STACK[0x500]) = v479 ^ 0x9C65D6EF ^ v492;
  unsigned int v493 = v473 ^ 0xE3C51358;
  unsigned int v494 = v476 ^ 0xBC0E17E9;
  LODWORD(STACK[0x368]) = v478 ^ 0x1455DEE4;
  LODWORD(STACK[0x238]) = v481;
  unsigned int v495 = v481 - ((2 * v481) & 0xE659907A) + 1932314685;
  int v496 = v489 - ((2 * v489) & 0x6804B654) + 872569642;
  LODWORD(STACK[0x448]) = v496;
  int v497 = v496 ^ v495;
  LODWORD(STACK[0x398]) = v496 ^ v495 ^ 0x6DBA159A ^ v334;
  LODWORD(STACK[0x5B8]) = v465 ^ 0xB7C6184D;
  LODWORD(STACK[0x5B0]) = v464 ^ 0xB0DF5211;
  LODWORD(STACK[0x520]) = v495;
  LODWORD(STACK[0x530]) = v495 ^ v293;
  int v498 = v495 ^ v293 ^ 0xC4156B61 ^ v468;
  LODWORD(STACK[0x3D4]) = v290 ^ 0xF24754BA;
  int v499 = v498 + (v290 ^ 0xF24754BA);
  int v500 = 2 * ((v498 & (v290 ^ 0xF24754BA)) - ((2 * (v498 & (v290 ^ 0xF24754BA))) & 0x4791D214)) + 1200738836;
  unsigned int v501 = 2 * &unk_100757560;
  LODWORD(STACK[0x470]) = v501;
  unsigned int v502 = (&unk_100757560 ^ 0x7B178F59) - 2065141593 + (v501 & 0xF62F1EA0);
  unsigned int v503 = (v499 ^ 0x5FFFF8BF)
       + ((2 * v499) & 0xBFFFF17E)
       + (v500 ^ 0x4F918335)
       + ((2 * v500) & 0xEFFF5DBC ^ 0x70DCFBD7)
       + 1;
  unsigned int v504 = v503 - ((2 * v503 + 805268544) & 0xE0BE6FFE) - 2007044577;
  int v505 = LODWORD(STACK[0x3F8]) ^ v497;
  LODWORD(STACK[0x294]) = v290 ^ 0x3FD2739A;
  int v506 = v495 ^ v293 ^ v290 ^ 0x3FD2739A;
  int v507 = v483 ^ v506;
  unsigned int v508 = (v502 ^ 0x4FFF3DFF) + ((2 * v502) & 0x9FFE7BFE) - 1342127615 + (v505 ^ 0xD5B2538E ^ v507);
  unsigned int v509 = LODWORD(STACK[0x5C8]) ^ 0xCD3790A5;
  int v510 = LODWORD(STACK[0x418]) ^ 0x64EF9368;
  int v511 = LODWORD(STACK[0x4E0]) ^ 0x7088A422;
  LODWORD(v290) = ((2 * v508) & 0xE6F7ABFA)
                + (v508 ^ 0xF37BD5FD)
                - ((2 * (((2 * v508) & 0xE6F7ABFA) + (v508 ^ 0xF37BD5FD)) - 1273587382) & 0xE9C3FC06)
                - 823309656;
  int v512 = v507 ^ 0x82C1E34;
  int v513 = LODWORD(STACK[0x420]) ^ 0x66EE3EEE;
  int v514 = STACK[0x428];
  int v515 = LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x428]);
  LODWORD(STACK[0x4C0]) = v494 ^ v515;
  unsigned int v516 = v488 ^ 0x9E11EE38 ^ v515;
  int v517 = v510 ^ v515;
  int v518 = v513 ^ v515;
  int v519 = LODWORD(STACK[0x400]) ^ v497;
  int v520 = v290 ^ v519;
  unsigned int v521 = v519 ^ 0xD909CF34;
  unsigned int v522 = v497 ^ 0xA3BF0E85 ^ LODWORD(STACK[0x3F0]);
  LODWORD(v76) = LODWORD(STACK[0x5D8]) ^ v293 ^ 0x45046C00;
  unsigned int v523 = LODWORD(STACK[0x47C]) ^ 0xE5EC147A;
  int v524 = LODWORD(STACK[0x658]) ^ v293 ^ 0xFFD1C21E;
  LODWORD(STACK[0x468]) = v293;
  LODWORD(v293) = LODWORD(STACK[0x648]) ^ v293 ^ 0xBD608A55;
  int v525 = v297 ^ 0x2F28EBA7;
  LODWORD(STACK[0x288]) = v449;
  int v526 = v76 ^ v297 ^ 0x2F28EBA7 ^ v449;
  int v527 = v524 ^ v297 ^ 0x2F28EBA7 ^ v449;
  int v528 = v293 ^ v297 ^ 0x2F28EBA7 ^ v449;
  LODWORD(STACK[0x29C]) = v297;
  int v529 = v490 ^ v297;
  int v530 = (1599557377 - (v520 | 0x7FFFFFFE)) & 0x48000301;
  LODWORD(STACK[0x2D8]) = v530;
  BOOL v531 = v530 == 1207960321;
  if (v530 == 1207960321) {
    int v532 = v529;
  }
  else {
    int v532 = v526;
  }
  if (v530 == 1207960321) {
    int v533 = v527;
  }
  else {
    int v533 = v529;
  }
  LODWORD(STACK[0x4A0]) = v533;
  if (v531) {
    int v534 = v526;
  }
  else {
    int v534 = v528;
  }
  LODWORD(STACK[0x3B0]) = v534;
  if (v531) {
    int v535 = v528;
  }
  else {
    int v535 = v527;
  }
  LODWORD(STACK[0x498]) = v535;
  unsigned int v536 = LODWORD(STACK[0x5C0]) ^ 0xBAF02AFF;
  unsigned int v537 = LODWORD(STACK[0x5D0]) ^ 0xB29F58A3;
  int v538 = LODWORD(STACK[0x440]) ^ v514;
  LODWORD(STACK[0x658]) = v538;
  int v539 = v491 ^ v538;
  int v540 = v536 ^ v538;
  if (v531) {
    int v541 = v509 ^ v538;
  }
  else {
    int v541 = v539;
  }
  LODWORD(STACK[0x5D8]) = v541;
  if (v531) {
    int v542 = v539;
  }
  else {
    int v542 = v540;
  }
  LODWORD(STACK[0x480]) = v542;
  int v543 = v537 ^ v538;
  if (v531) {
    int v544 = v537 ^ v538;
  }
  else {
    int v544 = v509 ^ v538;
  }
  LODWORD(STACK[0x47C]) = v544;
  if (v531) {
    int v545 = v540;
  }
  else {
    int v545 = v543;
  }
  LODWORD(STACK[0x5D0]) = v545;
  int v546 = LODWORD(STACK[0x570]) ^ 0x32BFADAF;
  unsigned int v547 = LODWORD(STACK[0x590]) ^ 0xB546BB22;
  int v548 = LODWORD(STACK[0x5A0]) ^ 0x4B3DC053;
  int v549 = LODWORD(STACK[0x580]) ^ 0x59007605;
  LODWORD(STACK[0x284]) = v525;
  int v550 = STACK[0x4D0];
  int v551 = v525 ^ LODWORD(STACK[0x4D0]);
  LODWORD(STACK[0x648]) = v551;
  int v552 = v546 ^ v551;
  int v553 = v547 ^ v551;
  int v554 = v548 ^ v551;
  if (v531) {
    int v555 = v553;
  }
  else {
    int v555 = v552;
  }
  LODWORD(STACK[0x560]) = v555;
  if (v531) {
    int v556 = v554;
  }
  else {
    int v556 = v553;
  }
  LODWORD(STACK[0x5C8]) = v556;
  if (v531) {
    int v557 = v549 ^ v551;
  }
  else {
    int v557 = v554;
  }
  LODWORD(STACK[0x39C]) = v557;
  if (v531) {
    int v558 = v552;
  }
  else {
    int v558 = v549 ^ v551;
  }
  LODWORD(STACK[0x5A0]) = v558;
  int v559 = LODWORD(STACK[0x438]) ^ v495;
  int v560 = v493 ^ v559;
  int v561 = v523 ^ v559;
  int v562 = LODWORD(STACK[0x650]) ^ 0x2234DFAC ^ v559;
  if (v531) {
    unsigned int v563 = v523 ^ v559;
  }
  else {
    unsigned int v563 = v487 ^ 0xF1138BB0 ^ v559;
  }
  LODWORD(STACK[0x3AC]) = v563;
  if (v531) {
    unsigned int v564 = v487 ^ 0xF1138BB0 ^ v559;
  }
  else {
    unsigned int v564 = v562;
  }
  LODWORD(STACK[0x3F8]) = v564;
  if (v531) {
    int v565 = v562;
  }
  else {
    int v565 = v560;
  }
  if (v531) {
    int v566 = v560;
  }
  else {
    int v566 = v561;
  }
  LODWORD(STACK[0x3F0]) = v566;
  LODWORD(STACK[0x3D0]) = v497;
  unsigned int v567 = LODWORD(STACK[0x3E4]) ^ 0xC8125D85;
  if (v531) {
    int v568 = v521;
  }
  else {
    int v568 = v505 ^ 0x59012D1A;
  }
  if (v531) {
    int v569 = v497 ^ 0x36FE0A6 ^ LODWORD(STACK[0x40C]);
  }
  else {
    int v569 = v521;
  }
  if (v531) {
    unsigned int v570 = v497 ^ 0x9214C23A ^ LODWORD(STACK[0x410]);
  }
  else {
    unsigned int v570 = v497 ^ 0x36FE0A6 ^ LODWORD(STACK[0x40C]);
  }
  if (v531) {
    unsigned int v571 = v505 ^ 0x59012D1A;
  }
  else {
    unsigned int v571 = v497 ^ 0x9214C23A ^ LODWORD(STACK[0x410]);
  }
  int v572 = LODWORD(STACK[0x3E0]) ^ 0x2E905D8D;
  unsigned int v573 = v497 ^ 0xDA976F12 ^ LODWORD(STACK[0x620]);
  unsigned int v574 = v497 ^ 0xBD9C9CCE ^ LODWORD(STACK[0x640]);
  unsigned int v575 = STACK[0x398];
  if (v531) {
    unsigned int v576 = v522;
  }
  else {
    unsigned int v576 = STACK[0x398];
  }
  if (v531) {
    unsigned int v577 = v497 ^ 0xDA976F12 ^ LODWORD(STACK[0x620]);
  }
  else {
    unsigned int v577 = v522;
  }
  LODWORD(STACK[0x640]) = v577;
  if (v531)
  {
    unsigned int v573 = v574;
    unsigned int v578 = v575;
  }

  else
  {
    unsigned int v578 = v574;
  }

  LODWORD(STACK[0x580]) = v578;
  int v579 = LODWORD(STACK[0x5E8]) ^ 0x68A935D1;
  LODWORD(STACK[0x224]) = v506;
  int v580 = v506 ^ 0x6780A0CF ^ LODWORD(STACK[0x3A4]);
  int v581 = v506 ^ 0x29F6FCBC ^ LODWORD(STACK[0x4F0]);
  if (v531) {
    int v582 = v506 ^ 0x6780A0CF ^ LODWORD(STACK[0x3A4]);
  }
  else {
    int v582 = v504;
  }
  LODWORD(STACK[0x4F0]) = v582;
  if (v531) {
    int v583 = v581;
  }
  else {
    int v583 = v580;
  }
  LODWORD(STACK[0x398]) = v583;
  if (v531) {
    unsigned int v584 = v504;
  }
  else {
    unsigned int v584 = v512;
  }
  if (v531) {
    int v585 = v512;
  }
  else {
    int v585 = v581;
  }
  int v586 = LODWORD(STACK[0x460]) ^ LODWORD(STACK[0x450]);
  int v587 = LODWORD(STACK[0x368]) ^ v586;
  int v588 = LODWORD(STACK[0x510]) ^ v550;
  int v589 = LODWORD(STACK[0x5B8]) ^ v588;
  int v590 = LODWORD(STACK[0x5B0]) ^ v588;
  int v591 = v511 ^ v588;
  LODWORD(STACK[0x260]) = v587;
  if (v531) {
    int v587 = v567 ^ v586;
  }
  LODWORD(STACK[0x3A4]) = v587;
  LODWORD(STACK[0x25C]) = v572 ^ v586;
  if (v531) {
    int v592 = v572 ^ v586;
  }
  else {
    int v592 = v567 ^ v586;
  }
  LODWORD(STACK[0x274]) = v592;
  int v593 = v579 ^ v588;
  if (v531) {
    int v594 = STACK[0x5E0];
  }
  else {
    int v594 = STACK[0x500];
  }
  if (v531) {
    int v595 = STACK[0x540];
  }
  else {
    int v595 = STACK[0x550];
  }
  LODWORD(STACK[0x3E4]) = v516;
  LODWORD(STACK[0x35C]) = v518;
  if (v531) {
    unsigned int v596 = v516;
  }
  else {
    unsigned int v596 = v518;
  }
  LODWORD(STACK[0x3E0]) = v517;
  if (v531) {
    int v597 = v517;
  }
  else {
    int v597 = STACK[0x4C0];
  }
  LODWORD(STACK[0x254]) = v589;
  LODWORD(STACK[0x248]) = v590;
  if (v531) {
    int v598 = v589;
  }
  else {
    int v598 = v590;
  }
  LODWORD(STACK[0x244]) = v591;
  LODWORD(STACK[0x240]) = v593;
  if (v531) {
    int v599 = v591;
  }
  else {
    int v599 = v593;
  }
  LODWORD(STACK[0x5E8]) = v520;
  if ((v520 & 2) != 0) {
    unsigned int v600 = v576;
  }
  else {
    unsigned int v600 = v573;
  }
  if ((v520 & 2) != 0) {
    unsigned int v601 = v573;
  }
  else {
    unsigned int v601 = v576;
  }
  LODWORD(STACK[0x310]) = v601;
  LODWORD(STACK[0x2B8]) = v568;
  LODWORD(STACK[0x27C]) = v570;
  if ((v520 & 2) != 0) {
    unsigned int v602 = v568;
  }
  else {
    unsigned int v602 = v570;
  }
  LODWORD(STACK[0x4E0]) = v602;
  LODWORD(STACK[0x2D0]) = v602 ^ 0x74C0575F;
  unsigned int v603 = (v602 ^ 0x74C0575F) - ((2 * (v602 ^ 0x74C0575F) + 937308564) & 0xCC23074C) - 2113889168;
  LODWORD(STACK[0x318]) = v569;
  LODWORD(STACK[0x2E8]) = v571;
  if ((v520 & 2) != 0) {
    unsigned int v604 = v571;
  }
  else {
    unsigned int v604 = v569;
  }
  LODWORD(STACK[0x620]) = v604;
  LODWORD(STACK[0x430]) = v600;
  int v605 = (v600 ^ 0x531121B5) + (v604 ^ 0x12D1D4F9 ^ v603) + 1;
  int v606 = 2 * (((2 * v605) & 0x57EBF7D2) + (v605 ^ 0x6BF5FBE9)) + 672401454;
  unint64_t v607 = 0xB3D5C9433319E527LL * STACK[0x378]
       - ((0x67AB92866633CA4ELL * STACK[0x378]) & 0xD5C30D44C87E49AELL)
       - 0x151E795D9BC0DB29LL;
  unint64_t v608 = 0xB3D5C9433319E527LL * STACK[0x3D8]
       - ((0x67AB92866633CA4ELL * STACK[0x3D8]) & 0xA815AD5BC07EA816LL)
       - 0x2BF529521FC0ABF5LL;
  unint64_t v609 = ((2 * v608) & 0xDBFE3FABFB3B7DFELL ^ 0x1B3A2203212130BCLL) + (v608 ^ 0x7062EEF46D0F27A1LL);
  unint64_t v610 = (((v609 + 0x1200E02A02624101LL) >> 32) ^ 0xB33D37FBFDBFFFDBLL)
       + v609
       + (((v609 + 0x1200E02A02624101LL) >> 31) & 0x1FB7FFFB6LL);
  unint64_t v611 = (((v610 + 0x5EC3A82E04A24126LL) >> 16) ^ 0xFFEFBEEEECB9EE63LL)
       + v610
       + (((v610 + 0x5EC3A82E04A24126LL) >> 15) & 0x17DDDD973DCC6LL);
  unint64_t v612 = (((v611 + 0x5ED3E93F17E852C3LL) >> 8) ^ 0xFF77BF6D6EE6FFAFLL)
       + v611
       + (((v611 + 0x5ED3E93F17E852C3LL) >> 7) & 0xEF7EDADDCDFF5ELL);
  STACK[0x5C0] = v612;
  unint64_t v613 = v612 - ((2 * v612 - 0xD5B8AFD293EECC4LL) & 0xCAA1295F5A144546LL) + 0x5EA2CF31186AAC41LL;
  unint64_t v614 = ((2 * (v613 ^ v608)) & 0xFF7F3E5FD3BFFF3ELL ^ 0x62340404922AED10LL) + (v613 ^ v608 ^ 0xCEE5DD2DA4EA8937LL);
  unint64_t v615 = (((v614 + 0x4060D016200061LL) >> 32) ^ 0xD3F979F9FFF77FBFLL)
       + v614
       + (((v614 + 0x4060D016200061LL) >> 31) & 0x1FFEEFF7ELL);
  unint64_t v616 = (((v615 + 0x2C46E6D6162880A2LL) >> 16) ^ 0x3F679FE6CBDDFDBFLL)
       + v615
       + (((v615 + 0x2C46E6D6162880A2LL) >> 15) & 0x13FCD97BBFB7ELL);
  unint64_t v617 = (((v616 - 0x1320B910B5B57D1DLL) >> 8) ^ 0xDFF55FC9F7FAF6B5LL)
       + v616
       + (((v616 - 0x1320B910B5B57D1DLL) >> 7) & 0x1EABF93EFF5ED6ALL);
  STACK[0x590] = v617;
  uint64_t v618 = v617 - ((2 * v617 + 0x4DBFEFAA295D8570LL) & 0x7510B9AC02A85B9CLL) - 0x1E97AB54E9FD0F7ALL;
  unint64_t v619 = ((2 * (v618 ^ v608)) & 0xEFBEFFF77CBCDFACLL ^ 0xCD0414F74094D388LL) + (v618 ^ v608 ^ 0x195DF5805F351613LL);
  unint64_t v620 = (((v619 - 0x77DF7FFBBE5E6FD6LL) >> 32) ^ 0xFFFF779E66BDDFF7LL)
       + v619
       + (((v619 - 0x77DF7FFBBE5E6FD6LL) >> 31) & 0xCD7BBFEE);
  unint64_t v621 = (((v620 - 0x77DEF79A251C4FCDLL) >> 16) ^ 0xFE7DAB2FEDEF7CEFLL)
       + v620
       + (((v620 - 0x77DEF79A251C4FCDLL) >> 15) & 0x1565FDBDEF9DELL);
  unint64_t v622 = (((v621 - 0x765CA2CA130BCCBCLL) >> 8) ^ 0xFFB27F579D3FFFFFLL)
       + v621
       + (((v621 - 0x765CA2CA130BCCBCLL) >> 7) & 0x164FEAF3A7FFFFELL);
  STACK[0x3D8] = v622;
  unint64_t v623 = v622 - ((2 * v622 + 0x47CDDD1C2426D39ELL) & 0xB249947036624560LL) - 0x2F44739D2BB7381LL;
  unint64_t v624 = ((2 * ((v607 ^ 0xB3C54C9A7F0E0667LL ^ v623) + 1)) & 0x70BDBFFFFDDB5BFELL)
       + (((v607 ^ 0xB3C54C9A7F0E0667LL ^ v623) + 1) ^ 0xB85EDFFFFEEDADFFLL);
  unint64_t v625 = (((v624 + 0x47A1200001125201LL) >> 32) ^ 0x7FFEDF47DFCFCF4FLL)
       + v624
       + (((v624 + 0x47A1200001125201LL) >> 31) & 0x1BF9F9E9ELL);
  unint64_t v626 = (((v625 - 0x385DBF47DEBD7D4ELL) >> 16) ^ 0x6E0FEFF92EADEBFALL)
       + v625
       + (((v625 - 0x385DBF47DEBD7D4ELL) >> 15) & 0x1DFF25D5BD7F4LL);
  unint64_t v627 = (((v626 + 0x599250BEF29496B8LL) >> 8) ^ 0xCB775FFEB6B835F7LL)
       + v626
       + (((v626 + 0x599250BEF29496B8LL) >> 7) & 0xEEBFFD6D706BEELL);
  STACK[0x230] = v627;
  uint64_t v628 = v627 - ((2 * v627 + 0x502202DFFC772E96LL) & 0x57034E908EB60DC4LL) + 0x5392A8B845969E2DLL;
  unint64_t v629 = ((2 * ((v607 ^ 0x416021EA23642235LL ^ v628) + 1)) & 0xFFD7F2FE5FDCFEB0LL)
       + (((v607 ^ 0x416021EA23642235LL ^ v628) + 1) ^ 0xFFEBF97F2FEE7F58LL);
  unint64_t v630 = (((v629 + 0x140680D01180A8LL) >> 32) ^ 0x6BFCF1B7FF771FE5LL)
       + v629
       + (((v629 + 0x140680D01180A8LL) >> 31) & 0x1FEEE3FCALL);
  unint64_t v631 = (((v630 - 0x6BE8EB372F659F3DLL) >> 16) ^ 0xFDF37EF3D0EF6BEFLL)
       + v630
       + (((v630 - 0x6BE8EB372F659F3DLL) >> 15) & 0xFDE7A1DED7DELL);
  unint64_t v632 = (((v631 - 0x69DC6A2B00550B2CLL) >> 8) ^ 0x5D7F4BFD9F77EFC2LL)
       + v631
       + (((v631 - 0x69DC6A2B00550B2CLL) >> 7) & 0xFE97FB3EEFDF84LL);
  STACK[0x228] = v632;
  uint64_t v633 = v632 - ((2 * v632 + 0x2534B50E45247738LL) & 0x58A4B02732830A42LL) + 0x7EECB29ABBD3C0BDLL;
  unint64_t v634 = ((2 * ((v607 ^ 0xC6B3DEB1FD7EA1F6LL ^ v633) + 1)) & 0xFFFEDB3FDBFAE27CLL)
       + (((v607 ^ 0xC6B3DEB1FD7EA1F6LL ^ v633) + 1) ^ 0xFFFF6D9FEDFD713ELL);
  unint64_t v635 = (((v634 + 0x926012028EC2LL) >> 32) ^ 0xFE5F4DFFFD3BFBDFLL)
       + v634
       + (((v634 + 0x926012028EC2LL) >> 31) & 0x1FA77F7BELL);
  unint64_t v636 = (((v635 + 0x1A1446014C692E3LL) >> 16) ^ 0xAB7E5FFBBDCCF5B7LL)
       + v635
       + (((v635 + 0x1A1446014C692E3LL) >> 15) & 0xBFF77B99EB6ELL);
  unint64_t v637 = ((v636 + 0x5622E46456F99D2CLL) >> 7) & 0x1FE773F36DAFBDCLL;
  unint64_t v638 = (((v636 + 0x5622E46456F99D2CLL) >> 8) ^ 0x2DFF3B9F9B6D7DEELL) + v636;
  STACK[0x218] = v638 + v637;
  uint64_t v639 = v638
       + v637
       - 2 * ((v638 + v637 + 0x4219B9747DEB55C8LL) & 0x5924CA381B3122B2LL ^ v638 & 2)
       - 0x64C17C5366E38788LL;
  LODWORD(v63_Block_object_dispose(va, 8) = v618 ^ v613 ^ v623 ^ v628 ^ (v632 - ((2 * v632 + 1160017720) & 0x32830A42) - 1143750467);
  LOBYTE(v61_Block_object_dispose(va, 8) = (v639 & 0x12 ^ 0xD1) - (v639 & 9) + 12;
  unint64_t v640 = ((((v639 ^ 0xE4F426CD7AC3249ELL) >> (v618 ^ 0xCDu))
  unint64_t v641 = (v639 ^ 0xE4F426CD7AC3249ELL)
       + (v640 ^ 0x4022099004090020LL)
       - ((2 * v640) & 0x7FBBECDFF7EDFFBELL)
       - 0x4022099004090020LL;
  unint64_t v642 = ((2 * v641) & 0xFFEBD2FFE7FFDB1ELL)
       + (v641 ^ 0x7FF5E97FF3FFED8FLL)
       + (((((2 * v641) & 0xFFEBD2FFE7FFDB1ELL) + (v641 ^ 0x7FF5E97FF3FFED8FLL) - 0x7FF5E97FF3FFED8FLL) >> 14) ^ 0x99292383200CE215LL)
       - (((((2 * v641) & 0xFFEBD2FFE7FFDB1ELL) + (v641 ^ 0x7FF5E97FF3FFED8FLL) - 0x7FF5E97FF3FFED8FLL) >> 13) & 0x5B8F9BFE63BD4LL);
  unint64_t v643 = v642
       + (((v642 - 0x191F0D03140CCFA4LL) >> 6) ^ 0xD473044A2488D546LL)
       - (((v642 - 0x191F0D03140CCFA4LL) >> 5) & 0x719F76BB6EE5572LL)
       + 2;
  uint64_t v644 = v643 - ((2 * v643 + 0x24DBDD658ED4B628LL) & 0x304B76570792B15ALL) - 0x556C5621B4CC4C3FLL;
  STACK[0x210] = v644;
  unint64_t v645 = ((2 * ((v644 ^ 0x9825BB2B83C958ADLL) + 0x301F1AB817992D55LL)) & 0x8FE77CDD7CFD77E0LL)
       + (((v644 ^ 0x9825BB2B83C958ADLL) + 0x301F1AB817992D55LL) ^ 0x47F3BE6EBE7EBBF0LL);
  unint64_t v646 = v645
       + (((v645 - 0x47F3BE6EBE7EBBF0LL) >> 24) ^ 0xD842022000038A90LL)
       - (((v645 - 0x47F3BE6EBE7EBBF0LL) >> 23) & 0x1BFFFF8EADELL);
  unint64_t v647 = v646
       + (((v646 - 0x2035C08EBE824680LL) >> 14) ^ 0x8200020489880200LL)
       - (((v646 - 0x2035C08EBE824680LL) >> 13) & 0x7FBF6ECEFFBFELL);
  unint64_t v648 = v647
       + (((v647 + 0x5DCA3D6CB7F5B780LL) >> 6) ^ 0x7AEF5FF753DAEBADLL)
       + (((v647 + 0x5DCA3D6CB7F5B780LL) >> 5) & 0x5DEBFEEA7B5D75ALL)
       + 2;
  unint64_t v649 = v648 - ((2 * v648 - 0x3A4A451537CA685ELL) & 0xA6A4473D1E4BC21ELL) + 0x362D0113F340ACE0LL;
  STACK[0x208] = v649;
  unint64_t v650 = ((2 * ((v649 ^ 0x5352239E8F25E10FLL) - 0x5C4C23E8A21DDE13LL)) & 0xBFBDFFFEEFB1DAD4LL)
       + (((v649 ^ 0x5352239E8F25E10FLL) - 0x5C4C23E8A21DDE13LL) ^ 0xDFDEFFFF77D8ED6ALL);
  unint64_t v651 = (((v650 + 0x2021000088271296LL) >> 27) ^ 0xDB5BBFBF5CD5F7F5LL)
       + v650
       + (((v650 + 0x2021000088271296LL) >> 26) & 0x3EB9ABEFEALL);
  unint64_t v652 = (((v651 + 0x44C540412B511AA1LL) >> 12) ^ 0x547BFC7F5EAC7F1FLL)
       + v651
       + (((v651 + 0x44C540412B511AA1LL) >> 11) & 0x17F8FEBD58FE3ELL);
  unint64_t v653 = v652
       + (((v652 - 0xFB6BC3E335B647ELL) >> 2) ^ 0x6004074208860A08LL)
       - (((v652 - 0xFB6BC3E335B647ELL) >> 1) & 0x3FF7F17BEEF3EBEELL);
  LODWORD(v623) = v653 + 1 - ((2 * (v653 + 1) - 2009259278) & 0xD4C067DC) - 1367423641;
  unint64_t v654 = v653
       + 1
       + (((v653 - 0x5C363EAC7BB54238LL) >> 30) ^ 0x251C8C0980C000A9LL)
       - (((v653 - 0x5C363EAC7BB54238LL) >> 29) & 0x4FE7FFEACLL);
  unint64_t v655 = v654
       + (((v654 + 0x7EAD354A038ABD1ELL) >> 12) ^ 0x8420E28014066444LL)
       - (((v654 + 0x7EAD354A038ABD1ELL) >> 11) & 0x1E3AFFD7F33776LL);
  unint64_t v656 = v655
       + (((v655 - 0x573AD36107BA726LL) >> 7) ^ 0x104440010020C065LL)
       - (((v655 - 0x573AD36107BA726LL) >> 6) & 0x3777FFDFFBE7F34LL)
       + 3;
  unint64_t v827 = v656 - ((2 * v656 - 0x2B6FDA6E2138CF1CLL) & 0xECF1562D5CD82ADELL) - 0x1F3F42206230521FLL;
  unint64_t v657 = ((2 * ((v827 ^ 0xF678AB16AE6C156FLL) + 0x3DEAA251E4C860FCLL)) & 0x7E51FFFF57DF97FELL)
       + (((v827 ^ 0xF678AB16AE6C156FLL) + 0x3DEAA251E4C860FCLL) ^ 0x3F28FFFFABEFCBFFLL);
  unint64_t v658 = (((v657 - 0x3F28FFFFABEFCBFFLL) >> 31) ^ 0xBDEDFFBEFFFFBFDBLL)
       + v657
       + (((v657 - 0x3F28FFFFABEFCBFFLL) >> 30) & 0x1FFFF7FB6LL);
  unint64_t v659 = (((v658 + 0x2E9004154107426LL) >> 8) ^ 0x9FF7FFE564ACA9F7LL)
       + v658
       + (((v658 + 0x2E9004154107426LL) >> 7) & 0x1EFFFCAC95953EELL);
  unint64_t v660 = (((v659 + 0x62F1005BEF63CA2FLL) >> 7) ^ 0x2DBFFDB3FEFCDFD6LL)
       + v659
       + (((v659 + 0x62F1005BEF63CA2FLL) >> 6) & 0x37FFB67FDF9BFACLL);
  unint64_t v661 = v660 - ((2 * v660 + 0xA62054FE0CDD4B2LL) & 0x16A5FAD14C4DBAB2LL) - 0x3F7BFFEF6972384ELL;
  STACK[0x200] = v661;
  unint64_t v662 = (v661 ^ 0xB51E3EB64B8BA996LL)
       + ((v661 >> 30) ^ 0x88D82DA6943C72EDLL)
       + ((v661 >> 29) & 0x77F76EF96LL ^ 0xFFFFFFFAD78F1A6DLL)
       + 0x7727D25BBFBB77CDLL;
  unint64_t v663 = (((((2 * v662) & 0xDDFF57FA7B3EFE5ALL) + (v662 ^ 0xEEFFABFD3D9F7F2DLL) + 0x11005402C26080D3LL) >> 13) ^ 0x7FED03FF25ADDD53LL)
       + ((2 * v662) & 0xDDFF57FA7B3EFE5ALL)
       + (v662 ^ 0xEEFFABFD3D9F7F2DLL)
       + (((((2 * v662) & 0xDDFF57FA7B3EFE5ALL) + (v662 ^ 0xEEFFABFD3D9F7F2DLL) + 0x11005402C26080D3LL) >> 12) & 0xA07FE4B5BBAA6LL);
  unint64_t v664 = v663
       + (((v663 - 0x6EECAFFC634D5C80LL) >> 2) ^ 0xD40280220218948DLL)
       - (((v663 - 0x6EECAFFC634D5C80LL) >> 1) & 0x57FAFFBBFBCED6E4LL);
  unsigned int v665 = ((2 * v606) & 0xFFD777B4)
       + (v606 ^ 0xFFEBBBDB)
       - ((2 * (((2 * v606) & 0xFFD777B4) + (v606 ^ 0xFFEBBBDB)) + 31845198) & 0x8E94595C)
       - 935517610;
  LODWORD(STACK[0x5B0]) = v665;
  LODWORD(v63_Block_object_dispose(va, 8) = v665 ^ v638 ^ v639 ^ v623 ^ (v664 + 1 - ((2 * (v664 + 1) + 892607972) & 0x7D0C7E9E) - 652194239) ^ 0xA535949F;
  int v666 = ((v638 & 0x34EEE5CD ^ 0x34C60589)
        + (v638 & 0x104CA440 ^ 0x119B252)
        - ((v638 & 0x34EEE5CD ^ 0x34C60589) & 0x104CA440)) ^ 0x915FB656;
  LODWORD(v63_Block_object_dispose(va, 8) = ((v638 & 0xCB111A32 ^ 0x80101030)
                 + (v638 & 0x89111202 ^ 0x2929828A)
                 - ((v638 & 0xCB111A32 ^ 0x80101030) & 0x89111202)) ^ 0xC8B93B4E;
  unint64_t v667 = v664
       + 1
       + (((v664 - 0x74712FCE516EFC51LL) >> 25) ^ 0x148010264081A10CLL)
       - (((v664 - 0x74712FCE516EFC51LL) >> 24) & 0xB37EFCBDE6LL);
  LODWORD(v63_Block_object_dispose(va, 8) = (v638 - ((2 * v638) & 0x7185A660) + 952292144) ^ 0x184272F4 | (v666
                                                                               - ((2 * v666) & 0xF77CD30A)
                                                                               + 2076076437) ^ 0xCFFE4995;
  unint64_t v668 = v667
       + (((v667 + 0x770EC00B6E0F62A2LL) >> 9) ^ 0xEAFAFB3D53F5BEB4LL)
       + (((v667 + 0x770EC00B6E0F62A2LL) >> 8) & 0xF5F67AA7EB7D68LL);
  unint64_t v669 = v668
       + ((v668 - 0x73EC3B31E5E65C12LL) & 0x533F7FBFFAEFF3BALL)
       + (((v668 - 0x73EC3B31E5E65C12LL) >> 1) ^ 0xA99FBFDFFD77F9DDLL)
       + 1;
  unint64_t v826 = v669 - ((2 * v669 - 0x3B17F623C6BCABE0LL) & 0xF5E716826BF33122LL) + 0x5D67902F529B42A1LL;
  unint64_t v670 = ((2 * ((v826 ^ 0x7AF38B4135F99891LL) + 0x38FC44A9709D19CALL)) & 0xFFABF97BA6FFB9FCLL)
       + (((v826 ^ 0x7AF38B4135F99891LL) + 0x38FC44A9709D19CALL) ^ 0x7FD5FCBDD37FDCFELL);
  unint64_t v671 = v670
       + (((v670 - 0x7FD5FCBDD37FDCFELL) >> 24) ^ 0x540052C833882218LL)
       - (((v670 - 0x7FD5FCBDD37FDCFELL) >> 23) & 0x6F98EFBBCELL);
  unint64_t v672 = v671
       + (((v671 + 0x2C29B079F8F800EALL) >> 15) ^ 0xB8040AB811244082LL)
       - (((v671 + 0x2C29B079F8F800EALL) >> 14) & 0x3EA8FDDB77EFALL);
  unint64_t v673 = v672
       + (((v672 + 0x7425A5C1E7D3C068LL) >> 8) ^ 0x67AFBEFF97F7CCE9LL)
       + (((v672 + 0x7425A5C1E7D3C068LL) >> 7) & 0x15F7DFF2FEF99D2LL)
       + 2;
  uint64_t v825 = v673 - ((2 * v673 + 0x18EBCD849FB7E6FALL) & 0x5DC1E88D6CD0B418LL) - 0x44A924F6F9BBB277LL;
  unint64_t v674 = ((2 * ((v825 ^ 0xAEE0F446B6685A0CLL) + 0x627FE9C2823FDEE7LL)) & 0xDFF5EBDDCEFFF9BCLL)
       + (((v825 ^ 0xAEE0F446B6685A0CLL) + 0x627FE9C2823FDEE7LL) ^ 0x6FFAF5EEE77FFCDELL);
  unint64_t v675 = (((v674 - 0x6FFAF5EEE77FFCDELL) >> 29) ^ 0x7DF97E787EDE5ED3LL)
       + v674
       + (((v674 - 0x6FFAF5EEE77FFCDELL) >> 28) & 0xFDBCBDA6);
  unint64_t v676 = v675
       + (((v675 + 0x120B8B9899A1A44FLL) >> 9) ^ 0x811440089041402LL)
       - (((v675 + 0x120B8B9899A1A44FLL) >> 8) & 0xDD77FEEDF7D7FALL);
  LODWORD(v667) = ((v676 + 0x9FA4798109D904DLL) >> 5) - (((v676 + 0x9FA4798109D904DLL) >> 4) & 0xCB00CF7C) - 444569666;
  LODWORD(v676) = ((2 * (v676 + 278761549)) & 0x7FEFFEE6)
                + ((v676 + 278761549) ^ 0xBFF7FF73)
                + (v667 ^ 0xDAF3BA41)
                + ((2 * v667) & 0x7EE7BBFE ^ 0x4A008B7C);
  LODWORD(v649) = (v676 - ((2 * v676 + 19416348) & 0xE40239A6) - 225099935) ^ (v638
                                                                             - ((2 * v638) & 0x5E064442)
                                                                             - 1358749151);
  LODWORD(v63_Block_object_dispose(va, 8) = (v649 & 2) + (v649 & 7 ^ 6) - ((v649 & 7 ^ 6) & 2) + 1906375032;
  int v677 = (v638 & 0x100000FA ^ 0x1A0488) + (v638 ^ 0x39C4B972) - ((v638 ^ 0x39C4B972) & 0x82040FA);
  LODWORD(STACK[0x5B8]) = v649;
  int v679 = STACK[0x4A0];
  if ((v520 & 2) == 0) {
    int v679 = STACK[0x3B0];
  }
  LODWORD(STACK[0x410]) = v679;
  LODWORD(STACK[0x320]) = v532;
  int v680 = STACK[0x498];
  if ((v520 & 2) != 0) {
    int v680 = v532;
  }
  LODWORD(STACK[0x40C]) = v680;
  int v681 = STACK[0x5D8];
  if ((v520 & 2) != 0) {
    int v681 = STACK[0x5D0];
  }
  LODWORD(STACK[0x368]) = v681;
  int v682 = STACK[0x480];
  if ((v520 & 2) != 0) {
    int v682 = STACK[0x47C];
  }
  LODWORD(STACK[0x308]) = v682;
  LODWORD(STACK[0x26C]) = v594;
  LODWORD(STACK[0x268]) = v595;
  if ((v520 & 2) != 0) {
    int v683 = v595;
  }
  else {
    int v683 = v594;
  }
  int v684 = STACK[0x560];
  if ((v520 & 2) == 0) {
    int v684 = STACK[0x39C];
  }
  LODWORD(STACK[0x418]) = v684;
  int v685 = STACK[0x3F8];
  if ((v520 & 2) != 0) {
    int v685 = STACK[0x3F0];
  }
  LODWORD(STACK[0x2CC]) = v685;
  LODWORD(STACK[0x360]) = v565;
  if ((v520 & 2) != 0) {
    int v686 = STACK[0x3AC];
  }
  else {
    int v686 = v565;
  }
  LODWORD(STACK[0x2AC]) = v596;
  LODWORD(STACK[0x278]) = v597;
  if ((v520 & 2) != 0) {
    unsigned int v687 = v597;
  }
  else {
    unsigned int v687 = v596;
  }
  int v688 = STACK[0x580];
  if ((v520 & 2) != 0) {
    int v688 = STACK[0x640];
  }
  LODWORD(STACK[0x3CC]) = v688;
  LODWORD(STACK[0x2B0]) = v598;
  LODWORD(STACK[0x2A4]) = v599;
  if ((v520 & 2) != 0) {
    int v689 = v598;
  }
  else {
    int v689 = v599;
  }
  LODWORD(STACK[0x338]) = v689;
  LODWORD(STACK[0x2B4]) = v585;
  if ((v520 & 2) == 0) {
    int v585 = STACK[0x4F0];
  }
  LODWORD(STACK[0x378]) = v584;
  unsigned int v690 = STACK[0x398];
  if ((v520 & 2) == 0) {
    unsigned int v690 = v584;
  }
  LODWORD(STACK[0x358]) = v690;
  if (v677 == 1348338934) {
    int v691 = 0;
  }
  else {
    int v691 = 255;
  }
  LODWORD(STACK[0x330]) = v678;
  LODWORD(STACK[0x650]) = v678 ^ 0xBD2DEFCF;
  int v824 = (v691 << (v678 ^ 0xCF)) - ((2 * (v691 << (v678 ^ 0xCF))) & 0x6D76342A);
  LODWORD(STACK[0x570]) = LODWORD(STACK[0x4B0]) ^ 0xD84E6E31;
  HIDWORD(v692) = LODWORD(STACK[0x250]) ^ 0x17D;
  LODWORD(v692) = LODWORD(STACK[0x250]) ^ 0xBA404C00;
  int v693 = (v692 >> 9) - ((2 * (v692 >> 9)) & 0x12DAD50) - 2137598296;
  int v694 = (((2 * v693) ^ 0x12DAD50) - 2 * (((2 * v693) ^ 0x12DAD50) & 0x2C3BEA6 ^ (2 * v693) & 2) + 46382756) & 0x32119686 ^ 0x20119400;
  HIDWORD(v692) = LODWORD(STACK[0x270]) ^ 0x49;
  LODWORD(v692) = LODWORD(STACK[0x270]) ^ 0xC528A600;
  int v695 = (v692 >> 8) - ((2 * (v692 >> 8)) & 0xDB352FDE) - 308635665;
  HIDWORD(v692) = LODWORD(STACK[0x23C]) ^ 0x9781F9;
  LODWORD(v692) = LODWORD(STACK[0x23C]) ^ 0x4A000000;
  int v696 = (v692 >> 24) - ((2 * (v692 >> 24)) & 0x47FFCC32) + 603973145;
  int v697 = LODWORD(STACK[0x298]) ^ 0x478EF6E6;
  int v698 = BYTE2(LODWORD(STACK[0x298])) ^ 0xAB;
  unsigned int v699 = (((2 * v698) & 0x140) - v698 - 844694177) ^ 0x8429315F;
  unsigned int v700 = (((2 * v699) & 0x930A0614) - v699 + 876272885) ^ 0x7DB51070;
  int v701 = (v700 - ((2 * v700 + 1896307116) & 0x4FFA2736) + 545308785) ^ LODWORD(STACK[0x280]);
  HIDWORD(v692) = v701 ^ 0x89A2;
  LODWORD(v692) = v701 ^ 0x24800000;
  int v702 = v693 ^ v695 ^ v696 ^ LODWORD(STACK[0x258]) ^ LODWORD(STACK[0x2A8]) ^ 0x7639D000 ^ ((v692 >> 16)
                                                                                          - ((2 * (v692 >> 16)) & 0xA651C0A8)
                                                                                          - 752295852) ^ 0x62C0A91C ^ ((v694 | 0x63BAAC6A) - (v694 | 0x9C455395) - 1673178219);
  HIDWORD(v692) = STACK[0x238];
  LODWORD(v692) = LODWORD(STACK[0x520]) ^ 0x732CC83C;
  int v703 = (v692 >> 1) - ((2 * (v692 >> 1)) & 0xF2561C2E) - 114618857;
  HIDWORD(v692) = LODWORD(STACK[0x2A8]) ^ ~LODWORD(STACK[0x448]);
  LODWORD(v692) = LODWORD(STACK[0x2A8]) ^ LODWORD(STACK[0x448]) ^ 0x41DB108A;
  int v704 = (v692 >> 1) - ((2 * (v692 >> 1)) & 0xA40CDD04) + 1376153218;
  HIDWORD(v692) = v704 ^ v703 ^ 0x2B2D6095;
  LODWORD(v692) = v704 ^ ~v703;
  int v705 = (v692 >> 31) - ((2 * (v692 >> 31)) & 0x8BEE34E6) + 1173822067;
  unsigned int v706 = LODWORD(STACK[0x2A0]) ^ 0xBE678168 ^ v702;
  int v707 = 2 * ((v706 & STACK[0x3D4]) - ((2 * (v706 & STACK[0x3D4])) & 0x537A18A0)) - 746973024;
  unsigned int v708 = ((2 * (v706 + LODWORD(STACK[0x3D4]))) & 0xBF85FFDA)
       + ((v706 + LODWORD(STACK[0x3D4])) ^ 0xDFC2FFED)
       + (v707 ^ 0xF3BE4B35)
       + ((2 * v707) & 0xBE7758D4 ^ 0x598BEFBF);
  unsigned int v709 = v708 - ((2 * v708 - 17737474) & 0xC93726D6) - 468434966;
  unsigned int v710 = (&unk_100757560 ^ 0xFDDFBF7C) + 35668100 + (STACK[0x470] & 0xFBBF7EE0);
  int v711 = STACK[0x224];
  int v712 = LODWORD(STACK[0x2C8]) ^ LODWORD(STACK[0x224]) ^ v702;
  int v713 = LODWORD(STACK[0x3D0]) ^ LODWORD(STACK[0x36C]) ^ LODWORD(STACK[0x328]);
  int v714 = v712 ^ v697;
  unsigned int v715 = (v710 ^ 0x3AFF27FB) + ((2 * v710) & 0x75FE4FF6) - 989800443 + (v712 ^ v697 ^ v713 ^ 0xBD711757);
  unsigned int v716 = (&unk_100757560 ^ 0xB6FED663) + 1224812957 + (STACK[0x470] & 0x6DFDACC0);
  unsigned int v717 = ((2 * v716) & 0xDF5F97D0) + (v716 ^ 0xEFAFCBE8);
  unsigned int v718 = ((2 * (v714 ^ v713 ^ 0x2006DE02)) & 0xD73FFEA6 ^ 0x122F92A2) + (v714 ^ v713 ^ 0xD6EEE804);
  unsigned int v719 = (&unk_100757560 ^ 0x7AE7FDFB) - 2062024187 + (STACK[0x470] & 0xF5CFFBE0);
  int v720 = v717 + v718 - ((2 * (v717 + v718) + 611233486) & 0x37DD47A0) + 237370167;
  int v721 = LODWORD(STACK[0x328]) ^ LODWORD(STACK[0x3D0]);
  int v722 = STACK[0x3D0];
  unsigned int v723 = ((2 * v719) & 0xE76B7AFE) + (v719 ^ 0x73B5BD7F) + v718;
  LODWORD(STACK[0x2C8]) = (v723 + 1848731088) & 0x5CF4E067 ^ v723 & 2;
  LODWORD(STACK[0x250]) = v723 - 886686825;
  unsigned int v724 = (((2 * v715) & 0x7D3FE7BE)
        + (v715 ^ 0xBE9FF3DF)
        - 2123159452
        - ((2 * (((2 * v715) & 0x7D3FE7BE) + (v715 ^ 0xBE9FF3DF)) + 500063622) & 0xE5180D5A)
        + 3340) ^ v721;
  int v725 = (v724 & 2 | (2 * (v724 & 2)) ^ 0x21002184) + 1488580414;
  LODWORD(STACK[0x470]) = (v721 ^ ((v721 ^ 0x780279F8) - ((2 * (v721 ^ 0x780279F8) + 2) & 0x95FB894) - 2068849589) ^ 0x71465207 ^ ((v721 ^ 0xE3ECDA28 ^ v720) + (v720 ^ 0x9BEEA3D0) + 1 - ((2 * ((v721 ^ 0xE3ECDA28 ^ v720) + (v720 ^ 0x9BEEA3D0) + 1)) & 0xE4281094) + 1913915466))
                        + (v720 ^ 0x9BEEA3D0);
  LODWORD(STACK[0x36C]) = LODWORD(STACK[0x3BC]) ^ 0x33709ED5;
  int v726 = LODWORD(STACK[0x3A8]) ^ 0x5D1701E2;
  int v727 = LODWORD(STACK[0x3C0]) ^ 0x4F0A8AB2;
  LODWORD(STACK[0x328]) = v677;
  if (v677 == 1348338934) {
    char v728 = 56;
  }
  else {
    char v728 = (((2 * ((v824 + 21) ^ 0x55)) | 0x5C) - ((v824 + 21) ^ 0x55) + 82) ^ 0x29;
  }
  int v729 = v726 ^ LODWORD(STACK[0x658]);
  int v730 = v727 ^ LODWORD(STACK[0x658]);
  LODWORD(STACK[0x4B0]) = v724;
  BOOL v731 = (((((2 * v715) & 0xBE)
                           + (v715 ^ 0xDF)
                           + 100
                           - ((2 * (((2 * v715) & 0xBE) + (v715 ^ 0xDF)) - 122) & 0x5A)
                           + 12) ^ v721) & 1) == 0;
  if ((((((2 * v715) & 0xBE) {
                         + (v715 ^ 0xDF)
  }
                         + 100
                         - ((2 * (((2 * v715) & 0xBE) + (v715 ^ 0xDF)) - 122) & 0x5A)
  else {
    int v732 = v730;
  }
  LODWORD(STACK[0x2A8]) = v732;
  LODWORD(STACK[0x3C0]) = LODWORD(STACK[0x390]) ^ 0x98FF8526;
  if ((((((2 * v715) & 0xBE) {
                         + (v715 ^ 0xDF)
  }
                         + 100
                         - ((2 * (((2 * v715) & 0xBE) + (v715 ^ 0xDF)) - 122) & 0x5A)
  else {
    unsigned int v733 = LODWORD(STACK[0x3A0]) ^ 0x611F1273 ^ LODWORD(STACK[0x648]);
  }
  LODWORD(STACK[0x23C]) = v733;
  LODWORD(STACK[0x3BC]) = v722 ^ 0x34AFE483 ^ LODWORD(STACK[0x374]);
  unsigned int v734 = v722 ^ 0xD79A275F ^ LODWORD(STACK[0x38C]);
  int v735 = v713 ^ 0x149AF88D;
  int v736 = v586 ^ 0x48840782 ^ LODWORD(STACK[0x2F0]);
  int v737 = v586 ^ 0x72FF1D3A ^ LODWORD(STACK[0x348]);
  unsigned int v738 = v586 ^ 0x9FC1A69F ^ LODWORD(STACK[0x340]);
  int v739 = v586 ^ 0x4C8BB49C ^ LODWORD(STACK[0x350]);
  unsigned int v740 = v722 ^ 0x89D7939E ^ LODWORD(STACK[0x2E0]);
  unsigned int v741 = v705 ^ 0xBBDD2E65;
  unsigned int v742 = v722 ^ 0xD5A4EDDA ^ LODWORD(STACK[0x2F8]);
  int v743 = v722 ^ 0x26FEDE3A ^ LODWORD(STACK[0x300]);
  if (v731) {
    int v744 = v586 ^ 0x72FF1D3A ^ LODWORD(STACK[0x348]);
  }
  else {
    int v744 = v586 ^ 0x48840782 ^ LODWORD(STACK[0x2F0]);
  }
  LODWORD(STACK[0x3D4]) = v744;
  if (v731) {
    unsigned int v745 = v736;
  }
  else {
    unsigned int v745 = v738;
  }
  LODWORD(STACK[0x394]) = v745;
  if (v731) {
    unsigned int v746 = v738;
  }
  else {
    unsigned int v746 = v739;
  }
  LODWORD(STACK[0x3D0]) = v746;
  if (v731) {
    int v747 = v739;
  }
  else {
    int v747 = v737;
  }
  LODWORD(STACK[0x38C]) = v747;
  unsigned int v748 = v588 ^ 0x8E77C691 ^ LODWORD(STACK[0x2C4]);
  int v749 = LODWORD(STACK[0x530]) ^ 0x372248C8 ^ v709;
  int v750 = v712 ^ 0x2DC5B9BC;
  unsigned int v751 = v588 ^ 0xC72A04E8 ^ v697;
  int v752 = v714 ^ 0x6FAD6CCB;
  unsigned int v753 = v711 ^ 0x984FDAE3 ^ v702;
  if (v731) {
    int v754 = v749;
  }
  else {
    int v754 = v750;
  }
  if (v731) {
    int v755 = v750;
  }
  else {
    int v755 = v752;
  }
  if (v731) {
    unsigned int v756 = v711 ^ 0x984FDAE3 ^ v702;
  }
  else {
    unsigned int v756 = v749;
  }
  if (v731) {
    unsigned int v757 = v752;
  }
  else {
    unsigned int v757 = v753;
  }
  LODWORD(STACK[0x280]) = v721;
  unsigned int v758 = v721 ^ 0xD50F6866;
  LODWORD(STACK[0x238]) = v734;
  if (v731) {
    unsigned int v759 = v735;
  }
  else {
    unsigned int v759 = v734;
  }
  LODWORD(STACK[0x3A0]) = v759;
  LODWORD(STACK[0x224]) = v758;
  if (v731) {
    unsigned int v760 = v740;
  }
  else {
    unsigned int v760 = v741;
  }
  LODWORD(STACK[0x390]) = v760;
  if (v731) {
    unsigned int v761 = v741;
  }
  else {
    unsigned int v761 = v743;
  }
  if (v731) {
    unsigned int v762 = v742;
  }
  else {
    unsigned int v762 = v740;
  }
  if (v731) {
    unsigned int v763 = v748;
  }
  else {
    unsigned int v763 = v751;
  }
  LODWORD(STACK[0x3A8]) = v763;
  LODWORD(STACK[0x570]) = v725;
  BOOL v764 = v725 == 2042237120;
  if (v725 == 2042237120) {
    unsigned int v765 = v761;
  }
  else {
    unsigned int v765 = v762;
  }
  LODWORD(STACK[0x298]) = v765;
  if (v725 == 2042237120) {
    unsigned int v761 = v762;
  }
  LODWORD(STACK[0x258]) = v761;
  LODWORD(STACK[0x350]) = v585;
  LODWORD(STACK[0x420]) = v683;
  LODWORD(STACK[0x300]) = v683 ^ 0xFE6B62C1;
  unsigned int v766 = (((v585 ^ 0xF05F37FF) - ((2 * (v585 ^ 0xF05F37FF) - 1059470582) & 0xCC49D0BE) - 963524124) ^ 0x72818BFF)
       + (v683 ^ 0xFE6B62C1);
  LODWORD(STACK[0x2E0]) = v686;
  unsigned int v767 = ((v766 - ((2 * v766) & 0xB4A5055A) - 632126803) ^ 0x130BCBB) + (LODWORD(STACK[0x620]) ^ 0x74C0575F);
  LODWORD(STACK[0x400]) = v687;
  unsigned int v768 = (v767 ^ 0x7EB7FF79) - 2125987705 + ((2 * v767) & 0xFD6FFEF2);
  unsigned int v769 = ((LODWORD(STACK[0x3CC]) ^ v687 ^ ((v686 ^ 0x5678C598)
                                         - ((2 * (v686 ^ 0x5678C598) + 99801830) & 0x7F36E668)
                                         + 1117053095)) >> 1) ^ 0x63F2C8A8;
  unsigned int v770 = v769 - ((2 * v769 + 1015697154) & 0xE92552C8) - 1831350043;
  unsigned int v771 = ((v768 >> 1) ^ 0x77EEB5F2)
       + (v768 & 0xEFDD6BE4)
       - ((2 * (((v768 >> 1) ^ 0x77EEB5F2) + (v768 & 0xEFDD6BE4)) - 1617623086) & 0xEA19E8B8)
       + 1154971717;
  int v772 = ((2 * (STACK[0x218] - 1148444866)) & 0xB83FE7FE) + ((STACK[0x218] - 1148444866) ^ 0x5C1FF3FF);
  int v773 = STACK[0x5C0] - 1459530988;
  int v774 = ((2 * (STACK[0x590] + 1380944942)) & 0x6FFDFD56) + ((STACK[0x590] + 1380944942) ^ 0xB7FEFEAB);
  unsigned int v775 = (v774 - ((2 * v774 + 39926068) & 0xB9AC080) - 1359086374) ^ (((2 * v773) & 0xE4AFD3DA)
                                                                    + (v773 ^ 0x7257E9ED)
                                                                    - 2
                                                                    * ((((2 * v773) & 0xE4AFD3DA)
                                                                      + (v773 ^ 0x7257E9ED)
                                                                      + 1859629400) & 0x4DDB9ABF ^ (v773 ^ 0x7257E9ED) & 1)
                                                                    + 1018383382);
  int v776 = ((2 * (STACK[0x3D8] + 1337209669)) & 0xC3FFFFFF) + ((STACK[0x3D8] + 1337209669) ^ 0x61FFFFFF);
  unsigned int v777 = v775 ^ (v776 - ((2 * v776 - 27314548) & 0xB9C4065A) + 1544658547);
  int v778 = ((2 * (STACK[0x230] + 1004298433)) & 0x678663D6) + ((STACK[0x230] + 1004298433) ^ 0x33C331EB);
  unsigned int v779 = v777 ^ (v778 - ((2 * v778 + 1524159156) & 0xD3EFFB4C) - 1755027712);
  int v780 = ((2 * (STACK[0x228] + 1613956370)) & 0xFF3AFDFE) + ((STACK[0x228] + 1613956370) ^ 0x7F9D7EFF);
  int v781 = STACK[0x230] - ((2 * STACK[0x230] + 2008596866) & 0xB77262A2) + 395678226;
  int v782 = (STACK[0x590] - ((2 * STACK[0x590] - 1533077412) & 0xDC012C34) + 1078993480) ^ (STACK[0x5C0]
                                                                                       - ((2 * STACK[0x5C0] + 302163496) & 0x27D1EE98)
                                                                                       - 1125496224) ^ (STACK[0x3D8] - ((2 * STACK[0x3D8] - 1620547958) & 0xC07CFA9A) + 804434066) ^ v771;
  int v783 = v782 ^ 0x6BC34C63;
  int v784 = (v781 ^ 0x4F8582CD ^ v782) + (v782 ^ 0x6BC34C63) + 1;
  unsigned int v785 = (v781 ^ ((v781 ^ 0x2446CEAE) - 1532746802 - ((2 * (v781 ^ 0x2446CEAE) + 2) & 0x49485A1E) + 2370) ^ 0x836C68FA ^ (v784 - ((2 * v784) & 0xF8E2E948) - 59673436))
       + v783;
  unsigned int v786 = (STACK[0x218] - ((2 * STACK[0x218] + 119029372) & 0xC0178EA) - 1047733325) ^ (STACK[0x228]
                                                                                     - ((2 * STACK[0x228] + 6687268) & 0x3E1F880A)
                                                                                     - 12400361) ^ v827 ^ STACK[0x210] ^ v826 ^ (v785 - ((2 * v785) & 0x346E138E) + 439814599);
  int v787 = v779 ^ (v780 - ((2 * v780 - 1021036404) & 0xE7381088) - 718396278) ^ (v772
                                                                             - ((2 * v772 + 169823884) & 0x69D695C8)
                                                                             - 1174736342) ^ STACK[0x200] ^ STACK[0x208] ^ v825;
  unsigned int v788 = ((v786 & 0x7F ^ 0x10000064) - ((2 * (v786 & 0x7F ^ 0x10000064)) & 0x46) - 504607453) ^ 0xF1EC4D53;
  int v789 = (((_BYTE)v824 + 21) & 0xFD | ((_BYTE)v824 + 37) & 2) ^ 0x108052D1;
  unsigned int v790 = (((2 * v789) & 0x1000096) - v789 - 1254500684) ^ 0xA5B98470;
  LODWORD(STACK[0x228]) = (33686018 * v790) & 0xE1610AD0;
  LODWORD(STACK[0x218]) = 16843009 * v790 - 256866968;
  unsigned int v791 = v787 ^ v770;
  LODWORD(STACK[0x2C4]) = ((((v786 ^ 0x23 ^ v728) + 1) ^ 0xF7)
                                          + ((v728 ^ 0x38 | v786 ^ 0xE4) ^ 0xDF)
                                          + ((2 * ((v786 ^ 0x23 ^ v728) + 1)) & 0xEE)
                                          + ((2 * (v728 ^ 0x38 | v786 ^ 0xE4)) & 0xBE)
                                          + 42)
                        - 2
                        * (((((v786 ^ 0x23 ^ v728) + 1) ^ 0xF7)
                          + ((v728 ^ 0x38 | v786 ^ 0xE4) ^ 0xDF)
                          + ((2 * ((v786 ^ 0x23 ^ v728) + 1)) & 0xEE)
                          + ((2 * (v728 ^ 0x38 | v786 ^ 0xE4)) & 0xBE)
                          + 42) & 0x1F)
                        + 1176443167;
  LODWORD(STACK[0x5C0]) = v786;
  int v793 = 16843009 * v792 - ((33686018 * v792) & 0x1C967316) + 239810955;
  LODWORD(STACK[0x270]) = v791;
  int v794 = (((v791 ^ BYTE1(v791) ^ BYTE2(v791)) ^ 0x61)
  unsigned int v795 = 16843009 * v794 - ((33686018 * v794) & 0xF26C0C8E) - 113899961;
  v796 = (void *)STACK[0x380];
  int v797 = *(void *)(STACK[0x380]
                   + 8LL
                   * ((*(void *)(STACK[0x380]
                                 + 8LL
                                 * ((*(void *)(STACK[0x380] + 8LL * ((*(_DWORD *)STACK[0x380] & 1) == 0)) & 1) == 0)) & 1) == 0)) & 1;
  uint64_t v798 = (v797 ^ 0xAE7FFF77) + 2 * v797 + 1604359746;
  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x250]) + 2718;
  int v799 = STACK[0x470];
  LODWORD(STACK[0x230]) = (2 * LODWORD(STACK[0x470])) & 0xE653079A;
  LODWORD(STACK[0x200]) = v799 + 1932100557;
  HIDWORD(a63) = LODWORD(STACK[0x36C]) ^ LODWORD(STACK[0x658]);
  LODWORD(STACK[0x590]) = 33686018 * v788;
  LODWORD(STACK[0x470]) = v771;
  LODWORD(STACK[0x530]) = v770;
  unint64_t v800 = STACK[0x3E8];
  uint64_t v801 = STACK[0x3E8] ^ 0x54D42D7B;
  int v802 = STACK[0x3D4];
  if (v764) {
    int v802 = STACK[0x3D0];
  }
  LODWORD(STACK[0x250]) = v802;
  LODWORD(STACK[0x374]) = v754;
  LODWORD(STACK[0x36C]) = v757;
  if (v764) {
    unsigned int v803 = v754;
  }
  else {
    unsigned int v803 = v757;
  }
  LODWORD(STACK[0x2F0]) = v803;
  LODWORD(STACK[0x208]) = v755;
  if (v764) {
    unsigned int v804 = v756;
  }
  else {
    unsigned int v804 = v755;
  }
  LODWORD(STACK[0x2F8]) = v804;
  LODWORD(STACK[0x3D8]) = v788;
  LODWORD(STACK[0x348]) = v793;
  LODWORD(STACK[0x340]) = v795;
  LODWORD(STACK[0x3C0]) = v795 ^ v793;
  unint64_t v805 = 0xB3D5C9433319E527LL * (*v796 ^ 0x9696969696969696LL)
       - ((0x67AB92866633CA4ELL * (*v796 ^ 0x9696969696969696LL)) & (v801 - 0x47575AF9E44A400ELL))
       - 0x23ABAD7CC7BB0ACBLL;
  unint64_t v806 = ((2 * (v805 ^ 0x95C3750F48E93860LL)) & 0xB7DD6D4FF8D3BFFELL) + (v805 ^ 0xCE2DC3A8B480E79FLL);
  unint64_t v807 = (((v806 - 0x5BEEB6A7FC69DFFFLL) >> 32) ^ 0x1FFFE3D3E3CCDFFALL)
       + v806
       + (((v806 - 0x5BEEB6A7FC69DFFFLL) >> 31) & 0x1C799BFF4LL);
  unint64_t v808 = (((v807 - 0x7BEE9A7BE036BFF9LL) >> 16) ^ 0xBE3BE7EF6FAAEBBFLL)
       + v807
       + (((v807 - 0x7BEE9A7BE036BFF9LL) >> 15) & 0x1CFDEDF55D77ELL);
  unint64_t v809 = (((v808 - 0x3A2A826B4FE1ABB8LL) >> 8) ^ 0x5B5DDFEF5BE49FFBLL)
       + v808
       + (((v808 - 0x3A2A826B4FE1ABB8LL) >> 7) & 0xBBBFDEB7C93FF6LL);
  uint64_t v810 = v809 - ((2 * v809 + 0x8DB5CAA2D31D5AELL) & 0xF56A332DD0AC5BALL) + 0xC18FFEE851E4DB4LL;
  unint64_t v811 = ((2 * (v805 ^ 0x5BFF031A56C197E8LL ^ v810)) & 0xFC2577BD77F7DFFELL)
       + (v805 ^ 0x5BFF031A56C197E8LL ^ v810 ^ 0xFE12BBDEBBFBEFFFLL);
  unint64_t v812 = (((v811 + 0x1ED442144041001LL) >> 32) ^ 0xFE1DFFD1BFFDFE59LL)
       + v811
       + (((v811 + 0x1ED442144041001LL) >> 31) & 0x17FFBFCB2LL);
  unint64_t v813 = (((v812 + 0x3CF444F840611A8LL) >> 16) ^ 0xF77FBDF00FBDBECFLL)
       + v812
       + (((v812 + 0x3CF444F840611A8LL) >> 15) & 0x17BE01F7B7D9ELL);
  unint64_t v814 = (((v813 + 0xC4F865F744852D9LL) >> 8) ^ 0x6EFF993BFFFB89DDLL)
       + v813
       + (((v813 + 0xC4F865F744852D9LL) >> 7) & 0x1FF3277FFF713BALL);
  int v815 = ((2 * (v814 + 1951189244)) & 0xFECCFFEE) + ((v814 + 1951189244) ^ 0x7F667FF7);
  uint64_t v816 = v815 - ((2 * v815 + 59913884) & 0x2AA37C92u);
  uint64_t v817 = v814 - ((2 * v814 + 0x6E8BFBA66D57FF0CLL) & 0x61EDE541C5FA090ALL) - 0x17C30F8BE656FBF5LL;
  unint64_t v818 = ((2 * (v805 ^ 0xECA2A023DAB9F1B0LL ^ v817)) & 0xDF7FA1D3D7F7F8DCLL)
       + (v805 ^ 0xECA2A023DAB9F1B0LL ^ v817 ^ 0xEFBFD0E9EBFBFC6ELL);
  unint64_t v819 = (((v818 + 0x10402F1614040392LL) >> 32) ^ 0x7F78DD5A33BFF5F6LL)
       + v818
       + (((v818 + 0x10402F1614040392LL) >> 31) & 0x677FEBEC);
  unint64_t v820 = (((v819 - 0x6F38AE441FBBF264LL) >> 16) ^ 0x36FFF3775DEEEB71LL)
       + v819
       + (((v819 - 0x6F38AE441FBBF264LL) >> 15) & 0x1E6EEBBDDD6E2LL);
  BOOL v821 = v798 > 0xE2095BA;
  unint64_t v822 = (((v820 + 0x59C75E448255222BLL) >> 8) ^ 0xEBD7BE3E7FDABDE9LL)
       + v820
       + (((v820 + 0x59C75E448255222BLL) >> 7) & 0x1AF7C7CFFB57BD2LL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((59 * !v821) ^ v800)) - 12))( 296701324LL,  557325656LL,  0x3EF7CCC71F5F08D4LL,  v816,  1576517879LL,  64479794LL,  v798,  (((2 * ((_BYTE)v822 + 66)) & 0xDA) + ((v822 + 66) ^ 0xED)) & 2,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_100597778()
{
}

uint64_t sub_100597784( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  if (LODWORD(STACK[0x2D8]) == 1207960321) {
    int v78 = STACK[0x550];
  }
  else {
    int v78 = STACK[0x5E0];
  }
  if (LODWORD(STACK[0x2D8]) == 1207960321) {
    int v79 = STACK[0x500];
  }
  else {
    int v79 = STACK[0x540];
  }
  if (LODWORD(STACK[0x2D8]) == 1207960321) {
    int v80 = STACK[0x4C0];
  }
  else {
    int v80 = STACK[0x3E4];
  }
  if (LODWORD(STACK[0x2D8]) == 1207960321) {
    int v81 = STACK[0x35C];
  }
  else {
    int v81 = STACK[0x3E0];
  }
  int v82 = STACK[0x248];
  if (LODWORD(STACK[0x2D8]) != 1207960321) {
    int v82 = STACK[0x244];
  }
  int v83 = STACK[0x254];
  if (LODWORD(STACK[0x2D8]) == 1207960321) {
    int v83 = STACK[0x240];
  }
  int v84 = LODWORD(STACK[0x370]) ^ LODWORD(STACK[0x658]);
  int v85 = LODWORD(STACK[0x364]) ^ LODWORD(STACK[0x648]);
  int v86 = LODWORD(STACK[0x218]) - LODWORD(STACK[0x228]);
  int v87 = v77 - 1423190263;
  int v88 = STACK[0x260];
  int v89 = a68;
  if (LODWORD(STACK[0x2D8]) != 1207960321)
  {
    int v88 = a68;
    int v89 = STACK[0x25C];
  }

  BOOL v90 = (STACK[0x5E8] & 2) == 0;
  int v91 = STACK[0x320];
  if ((STACK[0x5E8] & 2) != 0) {
    int v91 = STACK[0x498];
  }
  LODWORD(STACK[0x218]) = v91;
  int v92 = STACK[0x480];
  if (v90) {
    int v92 = STACK[0x47C];
  }
  LODWORD(STACK[0x3E8]) = v92;
  int v93 = STACK[0x26C];
  if (v90) {
    int v93 = STACK[0x268];
  }
  LODWORD(STACK[0x540]) = v93;
  int v94 = STACK[0x3F8];
  if (v90) {
    int v94 = STACK[0x3F0];
  }
  LODWORD(STACK[0x3E4]) = v94;
  int v95 = STACK[0x2B8];
  if (!v90) {
    int v95 = STACK[0x27C];
  }
  LODWORD(STACK[0x244]) = v95;
  int v96 = STACK[0x274];
  if (v90) {
    int v97 = v88;
  }
  else {
    int v97 = STACK[0x274];
  }
  LODWORD(STACK[0x648]) = v97;
  if (v90) {
    int v88 = v96;
  }
  LODWORD(STACK[0x210]) = v88;
  if (v90) {
    int v98 = v83;
  }
  else {
    int v98 = v82;
  }
  LODWORD(STACK[0x480]) = v98;
  if (!v90) {
    int v82 = v83;
  }
  LODWORD(STACK[0x3E0]) = v82;
  unsigned int v99 = v84 ^ 0xFC7FA510;
  LODWORD(STACK[0x4C0]) = v78;
  LODWORD(STACK[0x498]) = v79;
  if (v90) {
    int v100 = v78;
  }
  else {
    int v100 = v79;
  }
  LODWORD(STACK[0x274]) = v100;
  int v101 = STACK[0x5C8];
  if (v90) {
    int v101 = STACK[0x5A0];
  }
  LODWORD(STACK[0x3F0]) = v101;
  LODWORD(STACK[0x370]) = v80;
  LODWORD(STACK[0x364]) = v81;
  if (v90) {
    int v102 = v80;
  }
  else {
    int v102 = v81;
  }
  LODWORD(STACK[0x35C]) = v102;
  int v103 = STACK[0x3A4];
  LODWORD(STACK[0x260]) = v89;
  if (v90) {
    int v103 = v89;
  }
  LODWORD(STACK[0x25C]) = v103;
  BOOL v104 = (STACK[0x4B0] & 1) == 0;
  if ((STACK[0x4B0] & 1) != 0) {
    unsigned int v99 = a64;
  }
  LODWORD(STACK[0x26C]) = v99;
  int v105 = v85 ^ 0x34692984;
  if (v104) {
    int v105 = a65;
  }
  else {
    a74 = a76;
  }
  if (!v104) {
    a70 = a73;
  }
  int v108 = STACK[0x3BC];
  if (v104) {
    int v108 = STACK[0x238];
  }
  int v109 = STACK[0x570];
  BOOL v110 = LODWORD(STACK[0x570]) == 2042237120;
  if (LODWORD(STACK[0x570]) == 2042237120) {
    int v105 = STACK[0x23C];
  }
  LODWORD(STACK[0x248]) = v105;
  if (v109 == 2042237120) {
    int v111 = v108;
  }
  else {
    int v111 = a71;
  }
  LODWORD(STACK[0x23C]) = v111;
  if (v109 == 2042237120) {
    int v112 = a71;
  }
  else {
    int v112 = v108;
  }
  LODWORD(STACK[0x240]) = v112;
  int v113 = STACK[0x3D4];
  if (v109 != 2042237120) {
    int v113 = STACK[0x3D0];
  }
  LODWORD(STACK[0x228]) = v113;
  int v114 = STACK[0x208];
  if (v109 != 2042237120) {
    int v114 = a75;
  }
  LODWORD(STACK[0x2D8]) = v114;
  int v115 = STACK[0x5C0];
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x5C0]) ^ 0xCC9E23DB;
  LODWORD(STACK[0x5E0]) = v115 & 0xBC404D80;
  LODWORD(STACK[0x268]) = v86;
  LODWORD(STACK[0x500]) = a66 ^ v86;
  LODWORD(STACK[0x380]) = ((v87 | 0x70) - 1735919624) ^ LODWORD(STACK[0x3C0]);
  LODWORD(STACK[0x238]) = v115 ^ 0xC02A84F7;
  STACK[0x658] = (v87 | 0x70) ^ 0x60DC9279u;
  int v116 = STACK[0x390];
  LODWORD(STACK[0x254]) = a74;
  if (!v110) {
    int v116 = a74;
  }
  LODWORD(STACK[0x208]) = v116;
  LODWORD(STACK[0x47C]) = a70;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)*(&off_10090DDE0
                                                             + ((1011 * ((v76 - 461865809) < 2)) ^ (v87 | 0x70)))
                                                   - 8))( 1300117685LL,  2311869588LL);
}

void sub_10059815C()
{
}

uint64_t sub_10059816C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x27C]) = LODWORD(STACK[0x200]) - LODWORD(STACK[0x230]);
  int v75 = a69 + LODWORD(STACK[0x5E0]);
  int v294 = v75;
  unint64_t v76 = (v73 ^ 0x22AB0A96EE5D8244LL)
      + ((v73 >> 27) ^ 0xA820320E51694C58LL)
      + ((v73 >> 26) & 0x2BF7EFC2F4LL ^ 0xFFFFFFF75D3D7F4FLL)
      + 0x57DFCDF5FBF7E17CLL;
  unint64_t v77 = ((2 * v76) & 0x9FDEDD5FB57EEFECLL)
      + (v76 ^ 0x4FEF6EAFDABF77F6LL)
      + (((((2 * v76) & 0x9FDEDD5FB57EEFECLL) + (v76 ^ 0x4FEF6EAFDABF77F6LL) - 0x4FEF6EAFDABF77F6LL) >> 14) ^ 0xE2D024528B0C0A20LL)
      - (((((2 * v76) & 0x9FDEDD5FB57EEFECLL) + (v76 ^ 0x4FEF6EAFDABF77F6LL) - 0x4FEF6EAFDABF77F6LL) >> 13) & 0x7B75AE9E7EBBELL);
  unint64_t v78 = v77
      + (((v77 - 0x32BF930265CB8216LL) >> 6) ^ 0x8A900001D47E22BBLL)
      - (((v77 - 0x32BF930265CB8216LL) >> 5) & 0x2DFFFFC5703BA88LL)
      + 2;
  unint64_t v79 = v78 - ((2 * v78 - 0x7A9F2608749349A6LL) & 0xB4F9ED3E62352F8ELL) - 0x62D29C65092F0D0CLL;
  unint64_t v80 = ((2 * v79) ^ 0xB4F9ED3E62352F8ELL)
      - ((2 * ((2 * v79) ^ 0xB4F9ED3E62352F8ELL)) & 0x6D5BA94BC5721C4LL)
      - 0x7C9522B5A1D46F1ELL;
  uint64_t v81 = (v79 ^ 0x6A63EC272683BA92LL)
      + (v80 & 0x603E35702F325AAALL ^ 0x2F93CABD71DF775DLL)
      + ((2 * v80) & 0x40702AE05E608554LL ^ 0x502A801C400144LL)
      - 0x2FB9DFFD7FFD67FFLL;
  unint64_t v82 = ((2 * v81) & 0xBFB73D87F1BBFE30LL)
      + (v81 ^ 0x5FDB9EC3F8DDFF18LL)
      + (((((2 * v81) & 0xBFB73D87F1BBFE30LL) + (v81 ^ 0x5FDB9EC3F8DDFF18LL) - 0x5FDB9EC3F8DDFF18LL) >> 24) ^ 0x1050101400280050LL)
      - (((((2 * v81) & 0xBFB73D87F1BBFE30LL) + (v81 ^ 0x5FDB9EC3F8DDFF18LL) - 0x5FDB9EC3F8DDFF18LL) >> 23) & 0x1D7FFAFFF5ELL);
  unint64_t v83 = v82
      + (((v82 - 0x702BAED7F905FF68LL) >> 14) ^ 0xE0482C41080A0008LL)
      - (((v82 - 0x702BAED7F905FF68LL) >> 13) & 0x7A77DEFEBFFEELL);
  unint64_t v84 = v83
      + (((v83 - 0x5073DB19010FFF70LL) >> 6) ^ 0x55BFFF7BBFF27FEFLL)
      + (((v83 - 0x5073DB19010FFF70LL) >> 5) & 0x37FFEF77FE4FFDELL)
      + 2;
  unint64_t v85 = v84 - ((2 * v84 - 0x4C67B5298204FEC2LL) & 0xB6A1C5FC108FDFD8LL) + 0x351D08694745708BLL;
  unint64_t v86 = ((2 * ((v85 ^ 0xDB50E2FE0847EFECLL) - 0x5C4C23E8A21DDE13LL)) & 0xFEF9575619EE7F7ALL)
      + (((v85 ^ 0xDB50E2FE0847EFECLL) - 0x5C4C23E8A21DDE13LL) ^ 0xFF7CABAB0CF73FBDLL);
  unint64_t v87 = (((v86 + 0x835454F308C043LL) >> 27) ^ 0xECF62BFD3BFB0AEDLL)
      + v86
      + (((v86 + 0x835454F308C043LL) >> 26) & 0x3A77F615DALL);
  unint64_t v88 = v87 - ((2 * v87 + 0x271A50AF6E1B6AACLL) & 0xA8493C47D83AEF48LL) - 0x184E39845CD4D306LL;
  unint64_t v89 = 2
      * ((((v88 >> 12) ^ 0xD4249E23EC1D7LL) & (v88 ^ 0xD4249E23EC1D77A4LL))
       - ((2 * (((v88 >> 12) ^ 0xD4249E23EC1D7LL) & (v88 ^ 0xD4249E23EC1D77A4LL))) & 0xF535A16BE483CLL))
      + 0x2D8F535A16BE483CLL;
  unint64_t v90 = (v88 ^ 0xD429DC6A0E23B673LL ^ (v88 >> 12))
      + (v89 ^ 0x56746AAEE121B773LL)
      - 0x7BFB39F4F79FFF4FLL
      + ((2 * v89) & 0x77F673E9EF3FFE9CLL ^ 0x531622A02D3C9018LL);
  unint64_t v91 = ((2 * v90) & 0xF77F5FCC77D56FFELL)
      + (v90 ^ 0x7BBFAFE63BEAB7FFLL)
      + (((((2 * v90) & 0xF77F5FCC77D56FFELL) + (v90 ^ 0x7BBFAFE63BEAB7FFLL) - 0x7BBFAFE63BEAB7FFLL) >> 2) ^ 0x2CC00003028A03LL)
      - (((((2 * v90) & 0xF77F5FCC77D56FFELL) + (v90 ^ 0x7BBFAFE63BEAB7FFLL) - 0x7BBFAFE63BEAB7FFLL) >> 1) & 0x7FA67FFFF9FAEBF8LL)
      + 1;
  unint64_t v92 = v91 - ((2 * v91 + 0x827203382257BFALL) & 0xBDB803C1AB050236LL) + 0x62EF91FA96953F18LL;
  unint64_t v93 = ((2 * ((v92 ^ 0xDEDC01E0D582811BLL) + 0x138484D3C02C2C4ELL)) & 0xFEB5FF9B7FBFA7F6LL)
      + (((v92 ^ 0xDEDC01E0D582811BLL) + 0x138484D3C02C2C4ELL) ^ 0x7F5AFFCDBFDFD3FBLL);
  unint64_t v94 = v93
      + (((v93 - 0x7F5AFFCDBFDFD3FBLL) >> 30) ^ 0xA285221C810A0099LL)
      - (((v93 - 0x7F5AFFCDBFDFD3FBLL) >> 29) & 0x6FDEBFECCLL);
  unint64_t v95 = v94
      + (((v94 - 0x21E021EA40E9D494LL) >> 12) ^ 0x42124229120A80LL)
      - (((v94 - 0x21E021EA40E9D494LL) >> 11) & 0x1BDB7BADDBEAFELL);
  unint64_t v96 = v95
      + (((v95 - 0x2222342C69FBDF14LL) >> 7) ^ 0x800006878400088LL)
      - (((v95 - 0x2222342C69FBDF14LL) >> 6) & 0x3FFFF2F0F7FFEEELL)
      + 3;
  uint64_t v97 = v96 - ((2 * v96 + 0x2BBB96D63B8840C2LL) & 0x3F1837394BF6FBDCLL) - 0xA9618F83C4061B1LL;
  unint64_t v98 = ((2 * ((v97 ^ 0x1F8C1B9CA5FB7DEELL) + 0x3DEAA251E4C860FCLL)) & 0xB31FF5FC7F34BBFELL)
      + (((v97 ^ 0x1F8C1B9CA5FB7DEELL) + 0x3DEAA251E4C860FCLL) ^ 0x598FFAFE3F9A5DFFLL);
  unint64_t v99 = (((v98 - 0x598FFAFE3F9A5DFFLL) >> 31) ^ 0xFE6DDF43FDC3FECFLL)
      + v98
      + (((v98 - 0x598FFAFE3F9A5DFFLL) >> 30) & 0x3FB87FD9ELL);
  unint64_t v100 = (((v99 - 0x57FDDA423D5E5CCELL) >> 8) ^ 0xBFA2D9FCBC659CF7LL)
       + v99
       + (((v99 - 0x57FDDA423D5E5CCELL) >> 7) & 0x145B3F978CB39EELL);
  unint64_t v101 = (((v100 - 0x17A0B43EF9C3F9C5LL) >> 7) ^ 0x7E6ADDFBEDFFF4FFLL)
       + v100
       + (((v100 - 0x17A0B43EF9C3F9C5LL) >> 6) & 0xD5BBF7DBFFE9FELL);
  unint64_t v102 = v101 - ((2 * v101 - 0x2C172475CF87DD88LL) & 0xCAF237933EB421C4LL) - 0x309276714869DDE2LL;
  unint64_t v103 = (v102 ^ 0x5B35D81772F7642DLL)
       + ((v102 >> 30) ^ 0x8201080974F66135LL)
       + ((v102 >> 29) & 0x7CFBDFD2ELL ^ 0xFFFFFFFD36533FD5LL)
       + 0x7DFEF7F7E7DEFE99LL;
  unint64_t v104 = (((((2 * v103) & 0xB6CFF7FFFEC99F72LL) + (v103 ^ 0x5B67FBFFFF64CFB9LL) - 0x5B67FBFFFF64CFB9LL) >> 13) ^ 0xEBDFFB7AFF2FBE3FLL)
       + ((2 * v103) & 0xB6CFF7FFFEC99F72LL)
       + (v103 ^ 0x5B67FBFFFF64CFB9LL)
       + (((((2 * v103) & 0xB6CFF7FFFEC99F72LL) + (v103 ^ 0x5B67FBFFFF64CFB9LL) - 0x5B67FBFFFF64CFB9LL) >> 12) & 0xFF6F5FE5F7C7ELL);
  unint64_t v105 = v104
       + (((v104 - 0x4747F77AFE948DF8LL) >> 2) ^ 0x2C4A001243000888LL)
       - (((v104 - 0x4747F77AFE948DF8LL) >> 1) & 0x276BFFDB79FFEEEELL)
       + 1;
  uint64_t v106 = v105 - ((2 * v105 + 0x18DC10E57CD6D2FELL) & 0x5FBCFB88C3BA7C66LL) - 0x43B379C8DFB7584ELL;
  uint64_t v107 = ((2 * ((v106 ^ 0x2FDE7DC461DD3E33LL) - 0x3181FFAFEC090B44LL)) & 0x6BBE9FDDE7FF7EEALL)
       + (((v106 ^ 0x2FDE7DC461DD3E33LL) - 0x3181FFAFEC090B44LL) ^ 0x35DF4FEEF3FFBF75LL);
  unint64_t v108 = v107
  unint64_t v109 = v108
       + (((v108 + 0x65DE8010919EBFCBLL) >> 9) ^ 0xA3F75F57D2FEACF7LL)
       + (((v108 + 0x65DE8010919EBFCBLL) >> 8) & 0xEEBEAFA5FD59EELL);
  unint64_t v110 = v109
       + ((v109 - 0x3E18DF47415FED2CLL) & 0xB41FFEBFCFFEFEF6LL)
       + (((v109 - 0x3E18DF47415FED2CLL) >> 1) ^ 0xDA0FFF5FE7FF7F7BLL)
       + 1;
  uint64_t v111 = v110 - ((2 * v110 + 0x4FAE42B1AD4126B0LL) & 0x6BED05A3C3F54FEALL) + 0x1DCDA42AB89B3B4DLL;
  unint64_t v112 = ((2 * ((v111 ^ 0x35F682D1E1FAA7F5LL) + 0x38FC44A9709D19CALL)) & 0x499DE7F5BF6FFA7ALL)
       + (((v111 ^ 0x35F682D1E1FAA7F5LL) + 0x38FC44A9709D19CALL) ^ 0xA4CEF3FADFB7FD3DLL);
  unint64_t v113 = v112
       + (((v112 + 0x5B310C05204802C3LL) >> 24) ^ 0xE50806406209E4LL)
       - (((v112 + 0x5B310C05204802C3LL) >> 23) & 0x1F37F3BEC36LL);
  unint64_t v114 = v113
       + (((v113 + 0x5A4C03FEDFE5F8DFLL) >> 15) ^ 0x1B40434004CCC840LL)
       - (((v113 + 0x5A4C03FEDFE5F8DFLL) >> 14) & 0x3797FF6666F7ELL);
  unint64_t v115 = v114
       + (((v114 + 0x3F0BC0BEDB19309FLL) >> 8) ^ 0xED9FFBFBBFEB2BFELL)
       + (((v114 + 0x3F0BC0BEDB19309FLL) >> 7) & 0x13FF7F77FD657FCLL)
       + 2;
  uint64_t v116 = v115 - ((2 * v115 + 0x22D78986365C093ELL) & 0x61999BF07E126E9ELL) - 0x7DC76D44A5C8C412LL;
  unint64_t v117 = (v116 ^ 0x30CCCDF83F09374FLL)
       - ((2 * (v116 ^ 0x30CCCDF83F09374FLL) + 0x44FFD385047FBDCELL) & 0x703090F8F7F191BCLL)
       - 0x6567CDC101C7583BLL;
  uint64_t v118 = 2
       * ((((v117 >> 29) ^ 0x1C0C243E3LL) & (v117 ^ 0x3818487C7BF8C8DELL))
        - ((2 * (((v117 >> 29) ^ 0x1C0C243E3LL) & (v117 ^ 0x3818487C7BF8C8DELL))) & 0xE8BD7A2EALL))
       - 0x3423CEF174285D16LL;
  unint64_t v119 = (v117 ^ 0x3818487DBB3A8B3DLL ^ (v117 >> 29))
       + (v118 ^ 0xBA8BFEE19C216F3FLL)
       - 0x7157CFEF17F6CDD5LL
       + ((2 * v118) & 0xE2AF9FDE2FED9BA8LL ^ 0x82A8021C07AD0180LL);
  unint64_t v120 = ((2 * v119) & 0xEFFCFF6FFF7AFDFELL)
       + (v119 ^ 0x77FE7FB7FFBD7EFFLL)
       + (((((2 * v119) & 0xEFFCFF6FFF7AFDFELL) + (v119 ^ 0x77FE7FB7FFBD7EFFLL) - 0x77FE7FB7FFBD7EFFLL) >> 9) ^ 0x3010024081000800LL)
       - (((((2 * v119) & 0xEFFCFF6FFF7AFDFELL) + (v119 ^ 0x77FE7FB7FFBD7EFFLL) - 0x77FE7FB7FFBD7EFFLL) >> 8) & 0xDFFB7EFDFFEFFELL);
  LODWORD(v120) = v120
                + (((v120 + 0x57F17E077F427901LL) >> 5) ^ 0xD77EDFF9)
                + (((v120 + 0x57F17E077F427901LL) >> 4) & 0xAEFDBFF2)
                + 1;
  int v121 = v106 ^ v92 ^ v71 ^ (v120 - ((2 * v120 + 1334260238) & 0xAA881EBE) + 2097653862);
  LODWORD(v106) = (((v121 ^ 0xC19187F4) + 1) ^ 3) + 2 * ((v121 ^ 0xC19187F4) + 1) + 5;
  unsigned int v122 = (v121 & 3) + (v121 & 7 ^ 0xFFFFFFFB) + (v121 & 3 | 0x45FC649C) + 1;
  int v123 = (v106 & 7) - ((2 * v106) & 8) + 657829404;
  LODWORD(STACK[0x230]) = v123;
  unint64_t v124 = v123 ^ 0x2735AE1Cu;
  uint64_t v125 = 255LL;
  if ((v121 & 3) + (v121 & 7 ^ 0xFFFFFFFB) + (v121 & 3 | 0x45FC649C) == 1174168730) {
    uint64_t v125 = 0LL;
  }
  uint64_t v126 = v125 << (v123 ^ 0x1Cu);
  unint64_t v127 = (v125 << v124) - ((2 * (v125 << v124)) & 0xD7A4E9D35551F6F0LL) - 0x142D8B1655570488LL;
  int v128 = 1366313899 - (((v127 >> 4) | 0xFFFFFFFC) + ((v127 >> 4) & 0xC));
  LODWORD(v126) = (((((16 * v127) ^ 0x80) - ((32 * (_BYTE)v126) & 0x40) + 39) & 0xF0 ^ 0xC822CC5F) - 1) ^ 0xC820D4F2;
  LODWORD(v126) = (((2 * v126) & 0xF0F0F0F0) - v126 - 1853750138) ^ 0x91801C0A | ((v128 & 0x1400821 ^ 0x808DB001)
                                                                                + (v128 ^ 0x51700FA8)
                                                                                - ((v128 ^ 0x51700FA8) & 0x21)) ^ 0x81CDFC21;
  LODWORD(v126) = v126 - ((2 * v126) & 0xA2) - 47;
  HIDWORD(v129) = v126 ^ 2;
  LODWORD(v129) = (v126 ^ 0xFFFFFF9F) << 24;
  int v130 = ((((v129 >> 28) - ((2 * (v129 >> 28)) & 0xC6) + 99) ^ 0xA8)
        - ((2 * (((v129 >> 28) - ((2 * (v129 >> 28)) & 0xC6) + 99) ^ 0xA8)) & 0x132)
        - 324523367) ^ 0xECA82A99;
  if ((v121 & 3) + (v121 & 7 ^ 0xFFFFFFFB) + (v121 & 3 | 0x45FC649C) == 1174168730) {
    int v131 = 0;
  }
  else {
    int v131 = v130;
  }
  BOOL v132 = (STACK[0x5E8] & 2) == 0;
  int v133 = STACK[0x5D8];
  if ((STACK[0x5E8] & 2) == 0) {
    int v133 = STACK[0x5D0];
  }
  LODWORD(STACK[0x200]) = v133;
  int v134 = STACK[0x4C0];
  if (v132) {
    int v134 = STACK[0x498];
  }
  int v295 = v134;
  int v135 = STACK[0x5C8];
  if (!v132) {
    int v135 = STACK[0x5A0];
  }
  LODWORD(STACK[0x2B8]) = v135;
  int v136 = STACK[0x2AC];
  if (v132) {
    int v136 = STACK[0x278];
  }
  LODWORD(STACK[0x3D0]) = v136;
  int v137 = STACK[0x318];
  if (v132) {
    int v137 = STACK[0x2E8];
  }
  LODWORD(STACK[0x2AC]) = v137;
  int v138 = STACK[0x640];
  if (!v132) {
    int v138 = STACK[0x580];
  }
  LODWORD(STACK[0x5C8]) = v138;
  int v139 = STACK[0x2B0];
  if (!v132) {
    int v139 = STACK[0x2A4];
  }
  LODWORD(STACK[0x3D4]) = v139;
  unsigned int v140 = v102 ^ v85 ^ v72 ^ v116;
  unsigned int v141 = STACK[0x5C0];
  unsigned int v142 = (LODWORD(STACK[0x648]) ^ 0xF206D0B7)
       + ((2092662510 * (v141 ^ 0x58E2B514)) & 0xE3F1FFFE)
       + ((1046331255 * (v141 ^ 0x58E2B514)) ^ 0xF1F8FFFF)
       + 235339777;
  int v143 = a65 - a71;
  LODWORD(STACK[0x3F8]) = a65 - a71;
  unsigned int v144 = ((a65 - a71) ^ 0xC12E21D5)
       + ((a65 - a71) & 0x87 ^ 0x24911402)
       - (((a65 - a71) ^ 0xC12E21D5) & 0xC0060087);
  LODWORD(STACK[0x3BC]) = v144 ^ 0x25B935D6;
  int v145 = v75 ^ 0x5AED3762;
  unsigned int v146 = ((2 * v142) & 0xFFBCBFF6)
       + (v142 ^ 0xFFDE5FFB)
       - 1046331255 * (((2 * ((v144 ^ 0x25B935D6) + v145)) & 0xF6CFF77E) + (((v144 ^ 0x25B935D6) + v145) ^ 0xFB67FBBF));
  LODWORD(STACK[0x640]) = (STACK[0x658] - 1625067400) | 0x7D;
  unsigned int v147 = v97 ^ v79 ^ v74 ^ v111;
  unsigned int v148 = (((2 * (v147 & 0x7F ^ 0x34)) | 0xADF64240) - (v147 & 0x7F ^ 0x34) + 688185056) ^ 0xD8FB5122;
  unsigned int v149 = ((v148 | 0x6D290961) - (v148 | 0x92D6F69E) - 1831405922) ^ 0x6329790B;
  LODWORD(STACK[0x580]) = 33686018 * v149;
  int v150 = 16843009 * v149 - ((33686018 * v149) & 0x48F82B48);
  unsigned int v151 = ((v147 & 0x39EE2800 ^ 0x30C60053) + (v147 & 0xC611D780 ^ 0xC610D401) - 2) ^ 0x35AB20CA;
  unsigned int v152 = (v151 | 0x882B943E) - (v151 | 0x77D46BC1) + 2010409921;
  unsigned int v153 = ((v127 ^ 0xA6 | 0x92FA8054) - (v127 ^ 0xA6 | 0x6D057FAB) + 1829076907) ^ 0x108A984A;
  unsigned int v154 = (v153 + 219775156 - ((2 * v153) & 0x1A331F48) + 3824) ^ 0x8F699764;
  unsigned int v155 = 16843009 * v154 - ((33686018 * v154) & 0xF6E1CF1A) + 2070996877;
  LODWORD(STACK[0x320]) = v121;
  unsigned int v156 = ((v121 & 0xFFFFFFF8 ^ 0x4D686600)
        + (v121 & 0xC8B6590 ^ 0x830192)
        - ((v121 & 0xFFFFFFF8 ^ 0x4D686600) & 0xC8B6590)) ^ 0x84020582;
  unsigned int v157 = (v131 & (v147 ^ 0xB1FD6796)) - ((2 * (v131 & (v147 ^ 0xB1FD6796))) & 0x482FA2D8) + 1679282540;
  int v158 = (v157 | (((257 * (_WORD)v154 - ((514 * (_WORD)v154) & 0xCF1A) - 6259) & 0x400 ^ 0x4B2) + 410) & 0x400) ^ 0x6417D16C;
  unsigned int v159 = (v158 - ((2 * v158) & 0x390D858E) - 595148089) ^ v155 & 0xFFFFFBFF;
  LODWORD(STACK[0x4C0]) = v159;
  int v160 = v159 ^ v157;
  int v161 = STACK[0x2E0];
  int v162 = ((v147 ^ (v147 >> 8)) & 0x11 ^ 0x4106010) + ((v147 ^ (v147 >> 8)) & 0xEE ^ 0x20E0000F) - 1;
  unsigned int v163 = (v160 ^ v161 ^ ((v161 ^ 0xA9873A67)
                       + (v160 ^ 0xC3E1F026)
                       + 1
                       - ((2 * ((v161 ^ 0xA9873A67) + (v160 ^ 0xC3E1F026) + 1)) & 0x9A3F8426)
                       - 853556717) ^ ((v160 ^ v161 ^ 0x6A66CA41)
                                     - ((2 * (v160 ^ v161 ^ 0x6A66CA41) + 2) & 0x726705E)
                                     + 59979824) ^ 0x5B15CF82)
       + (v160 ^ 0xC3E1F026);
  int v164 = v163 - ((2 * v163) & 0x2E380FF6) + 387713019;
  int v165 = ((HIWORD(v147) & 0x28 ^ 0x7BC11021) + (HIWORD(v147) & 0xD7) - 1) ^ 0x5BE0827D;
  unsigned int v166 = (((2 * v165) | 0xCFFF8038) - v165 + 402669540) ^ HIBYTE(v147) ^ ((v162 & 0x42010C2 ^ 0x10C1082)
                                                                        + (v162 ^ 0x2CB0E568)
                                                                        - ((v162 ^ 0x2CB0E568) & 0x84090C2)) ^ 0xC2F24715;
  LODWORD(STACK[0x47C]) = 16843009 * v166 - ((33686018 * v166) & 0xC36A59E2) + 1639263473;
  if ((((~(v140 & 0x10) & 0x1688993) + (v140 & 0x10 | 0x6844008)) | 0x98100240) - (v140 & 0x10 | 0x4840008) == -1686582317) {
    int v167 = 16;
  }
  else {
    int v167 = 240;
  }
  unsigned int v168 = HIWORD(v140) ^ (v140 >> 8) ^ (v167
                                     + (v140 ^ 0xF68883ED)
                                     - 2 * ((v167 + (v140 ^ 0xF68883ED)) & 0x53DF0A2E ^ (v140 ^ 0xF68883ED) & 4)
                                     + 298);
  LODWORD(STACK[0x318]) = v140 ^ 0x78424EEE;
  int v169 = HIBYTE(v140) ^ 0x804EA ^ ((v168 ^ 0x5A101142)
                                 + (v168 & 0x50 ^ 0xA6410)
                                 - ((v168 ^ 0x5A101142) & 0x1150)) & 0x807FF;
  LODWORD(STACK[0x498]) = 16843009 * v169 - ((33686018 * v169) & 0xE87EDFD6) - 197169173;
  int v170 = v122 ^ 0x45FC649B;
  LODWORD(STACK[0x658]) = 1544212497 * (v122 ^ 0x45FC649B)
                        - ((940941346 * (v122 ^ 0x45FC649B)) & 0x2C29FDE8)
                        + 370474740;
  int v171 = LODWORD(STACK[0x328]) ^ 0x505E04F6;
  LODWORD(STACK[0x3A8]) = 1544212497 * v171 - ((940941346 * v171) & 0x7B21C154) - 1114578774;
  LODWORD(STACK[0x5D8]) = v143 ^ 0xEFB23584;
  int v172 = dword_100736910[(v143 ^ 0xEFB23584) % 0x101];
  unsigned int v173 = STACK[0x650];
  unsigned int v174 = (LODWORD(STACK[0x210]) ^ 0xF206D0B7)
       + ((826806322 * LODWORD(STACK[0x650])) & 0x5FED6F6E)
       + ((-1734080487 * LODWORD(STACK[0x650])) ^ 0xAFF6B7B7)
       + 1342785609;
  unsigned int v175 = (v172 ^ 0xE34B6652 ^ (((16 * v172) ^ 0xCA58B7F0) - ((2 * ((16 * v172) ^ 0xCA58B7F0)) & 0x6B158B20) + 898287006))
       + 1;
  unsigned int v176 = (LODWORD(STACK[0x274]) ^ 0xFE6B62C1) + (v175 ^ 0xDFF1D79B) + ((2 * v175) & 0xBFE3AF36) + 537798757;
  int v177 = ((2 * v174) & 0xE75F5D7A)
       + (v174 ^ 0x73AFAEBD)
       + ((-826806322 * v124) & 0xDFD70976)
       + ((1734080487 * v124) ^ 0xEFEB84BB);
  unsigned int v178 = v177 - ((2 * v177 + 952736016) & 0xE7F05160) - 1872956104;
  unsigned int v179 = STACK[0x3C0];
  int v180 = STACK[0x3D8];
  int v181 = v150 + 612111780;
  unsigned int v182 = (v150 + 612111780) ^ 0x247C15A4;
  LODWORD(STACK[0x5D0]) = v182;
  unsigned int v183 = (dword_100731B10[v182 % 0x101] ^ 0x550B9F6) + (v176 ^ 0xBFDB0BBB) + ((2 * v176) & 0x7FB61776) + 1076163653;
  int v184 = v183 - ((2 * v183) & 0x2A88915A) + 356796589;
  LODWORD(STACK[0x2B4]) = -1650248603 * v171 - ((189163722 * v171) & 0xA3084D4) - 2062007702;
  HIDWORD(v290) = -414842303 * v180 - 1475485739;
  LODWORD(STACK[0x274]) = v149;
  LODWORD(v290) = -414842303 * v149 - 1524737157;
  LODWORD(STACK[0x224]) = -1650248603 * (v122 ^ 0x45FC649B)
                        - ((994470090 * (v122 ^ 0x45FC649B)) & 0xC58E1DBE)
                        - 490271009;
  LODWORD(a5_Block_object_dispose(va, 8) = (((v179 << 8) ^ 0x92D02300) - ((2 * ((v179 << 8) ^ 0x92D02300)) & 0xED030000) - 159285125) ^ LODWORD(STACK[0x218]);
  LODWORD(STACK[0x5A0]) = v171;
  int v185 = -2066764949 * v171 - ((161437398 * v171) & 0x54B1C472) - 1437015495;
  unsigned int v186 = -2066764949 * v170 - ((161437398 * v170) & 0xA26D5D34) - 784945510;
  int v187 = (v179 ^ 0x1892D023) + (v179 ^ 0x1495076C ^ v178) + 1;
  STACK[0x5E0] = v124;
  unsigned int v188 = (dword_100731B10[v124] ^ 0xFAAF4609) + 1;
  unsigned int v189 = (LODWORD(STACK[0x308]) ^ 0x6E12EA35) + (v188 ^ 0x57FDEAF7) + ((2 * v188) & 0xAFFBD5EE) - 1476258551;
  unsigned int v190 = (v178 ^ ((v178 ^ 0xC07D74F) - ((2 * (v178 ^ 0xC07D74F) + 2) & 0x17CC5060) - 1947850703) ^ (v187
                                                                                                  - ((2 * v187) & 0xF4EE355E)
                                                                                                  + 2054625967) ^ 0x2691A2F)
       + (v179 ^ 0x1892D023);
  LODWORD(a55) = (2 * v190) & 0x39334932;
  LODWORD(a54) = v190 - 1667652455;
  unsigned int v191 = (((v147 ^ 0x296720DC) - 257) ^ 0x79FDAE5D) - 2046668381 + ((2 * ((v147 ^ 0x296720DC) - 257)) & 0xF3FB5CBA);
  unsigned int v192 = (v189 ^ 0xFB3F7F3B)
       + (dword_100736910[v173] ^ 0x22F45B8F ^ (((16 * dword_100736910[v173]) ^ 0xCA58B7F0)
                                              - ((2 * ((16 * dword_100736910[v173]) ^ 0xCA58B7F0)) & 0x17940F60)
                                              + 197789628))
       + ((2 * v189) & 0xF67EFE76)
       + 79724741;
  unsigned int v193 = v192 - ((2 * v192) & 0xC9A2BB78);
  LODWORD(STACK[0x4F0]) = v181;
  unsigned int v194 = (v181 ^ 0x52) + (v181 & 0xEF ^ 0x9AD) - ((v181 ^ 0x52) & 0xFFFFFFEF);
  unsigned int v195 = ((v156 | 0xC0DA8509) - (v156 | 0x3F257AF6) + 1059420918) ^ 0x5C3043A1;
  int v196 = STACK[0x320];
  unsigned int v197 = (8 * LODWORD(STACK[0x320])) ^ 0xC85E05D8;
  HIDWORD(v289) = (2 * v197) & 0x2ADE46B0;
  LODWORD(v289) = v197 - 1787878561;
  unsigned int v198 = v147 ^ 0xCE935101;
  unsigned int v199 = v191 % 0x101 - ((2 * (v191 % 0x101)) & 0x3BA) - 403410467;
  if ((v147 ^ 0x296720DC) <= 0x100) {
    unsigned int v199 = v147 ^ 0xCE935101;
  }
  LODWORD(STACK[0x2E0]) = v164 ^ v199 ^ dword_100731B10[(v152 ^ 0x6231493F ^ v194) % 0x101] ^ dword_1007312F0[v199 ^ 0xE7F471DD];
  int v200 = STACK[0x5B8];
  int v201 = (LODWORD(STACK[0x480]) ^ 0x1D6DA579) + (LODWORD(STACK[0x5B8]) ^ 0x617BD0FD) + 1;
  unsigned int v202 = (LODWORD(STACK[0x5B8]) ^ 0x9E842F02) + (v201 ^ 0x7FF7D5FF) + ((2 * v201) & 0xFFEFABFE) - 2146948607;
  int v203 = v294 ^ 0x56D64527 ^ v144;
  HIDWORD(v28_Block_object_dispose(va, 8) = (2 * v146 + 1365003676) & 0xF80DFA30;
  LODWORD(v28_Block_object_dispose(va, 8) = v146 + 615850982;
  unsigned int v204 = (LODWORD(STACK[0x5B8]) ^ 0x9E842F02) % 0x101;
  int v205 = STACK[0x238];
  LODWORD(STACK[0x338]) ^= LODWORD(STACK[0x238]) ^ v203 ^ ((v203 ^ v141) >> 4);
  LODWORD(STACK[0x480]) = (v204 - ((2 * v204) & 0x42) - 2093557215) ^ LODWORD(STACK[0x200]) ^ dword_100731B10[v204] ^ dword_1007312F0[(v204 - ((2 * v204) & 0x42) - 2093557215) ^ 0x8336DA21];
  int v206 = (v194 ^ 0x919 | v152 ^ 0x62314026) - ((2 * (v194 ^ 0x919 | v152 ^ 0x62314026)) & 0x36B9D0E6) - 1688409997;
  unsigned int v207 = v196 ^ 0x590BC0BB;
  int v208 = v196;
  unsigned int v209 = -1867863333 * (v196 ^ 0x590BC0BB) - ((559240630 * (v196 ^ 0x590BC0BB)) & 0xCD2DC740) + 1721164704;
  LODWORD(STACK[0x308]) = v198 ^ v295 ^ v206 ^ ((v206 ^ v147) >> 4);
  LODWORD(STACK[0x648]) = v170;
  int v210 = 2 * (v195 | v170);
  unsigned int v211 = (v195 | v170) - (v210 & 0xDD42368A);
  unsigned int v212 = ((v195 | v170) - (v210 & 0xBD1439F6) - 561373957) ^ 0xDE8A1CFB;
  unsigned int v213 = (LODWORD(STACK[0x3BC]) | v145) - ((2 * (LODWORD(STACK[0x3BC]) | v145)) & 0xE47F8CBC) + 1916782174;
  unsigned int v214 = v211 - 291431611;
  LODWORD(STACK[0x2B0]) = v213 ^ v205 ^ ((v213 ^ v141) >> 3) ^ v184;
  unsigned int v215 = v207 % 0x101;
  int v216 = dword_100736910[((v211 - 291431611) ^ 0xEEA11B45) % 0x101];
  int v217 = LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x5C8]) ^ v198;
  int v218 = LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x47C]);
  LODWORD(STACK[0x238]) = v218 ^ 0xC8765741;
  LODWORD(STACK[0x2E8]) = v217 ^ (((v147 << 7) ^ 0xB3906E00)
                                - ((2 * ((v147 << 7) ^ 0xB3906E00)) & 0x5295AE00)
                                + 692770580) ^ v206 ^ (((v206 << 7) ^ 0xAE743980)
                                                     - ((2 * ((v206 << 7) ^ 0xAE743980)) & 0x569DD800)
                                                     + 726592586) ^ v218 ^ 0xC8765741 ^ ((v218 ^ v179) >> 4);
  unsigned int v219 = (v216 ^ 0x5344D449 ^ (((16 * v216) ^ 0xCA58B7F0) - ((2 * ((16 * v216) ^ 0xCA58B7F0)) & 0xB0AEF00) - 2054850683))
       + 1;
  unsigned int v220 = (LODWORD(STACK[0x2CC]) ^ LODWORD(STACK[0x3A8]) ^ 0xFDFCDBC6 ^ LODWORD(STACK[0x658]))
       + (v219 ^ 0xFB39F8BF)
       + ((2 * v219) & 0xF673F17E)
       + 80086849;
  unsigned int v221 = (LODWORD(STACK[0x310]) ^ 0xACEEDE4A) + 618059542;
  unsigned int v222 = (dword_1007354C0[v215] ^ 0x491201E8) + (v220 ^ 0xFEE3FF63) + ((2 * v220) & 0xFDC7FEC6);
  LODWORD(STACK[0x310]) = (2 * v222 + 37224762) & 0x78A90740;
  LODWORD(STACK[0x200]) = v222 + 1030784061;
  unsigned int v223 = STACK[0x640];
  int v224 = STACK[0x270];
  LODWORD(STACK[0x5C8]) = (LODWORD(STACK[0x640]) - 1321319213) ^ LODWORD(STACK[0x270]);
  unsigned int v225 = ((2 * v221) & 0xBFD5DBEA)
       + (v221 ^ 0xDFEAEDF5)
       + ((826091506 * (v224 ^ 0xDBBD1696 ^ LODWORD(STACK[0x318]))) & 0x4D0C7D7E)
       + ((-1734437895 * (v224 ^ 0xDBBD1696 ^ LODWORD(STACK[0x318]))) ^ 0xA6863EBF);
  HIDWORD(v291) = (2 * v225 - 216160616) & 0xBDEA0924;
  unsigned int v226 = v225 + 1485033252;
  unsigned int v227 = v200 ^ LODWORD(STACK[0x620]) ^ v185 ^ v208 ^ v209 ^ v186 ^ (-1867863333 * v212
                                                                   - ((559240630 * v212) & 0x9C4A925E)
                                                                   + 1311066415);
  unint64_t v228 = STACK[0xB20];
  unint64_t v229 = (*(void *)(STACK[0xB20] + 8LL * ((*(void *)(STACK[0xB20] + 8 * (*(void *)STACK[0xB20] & 1LL)) & 1) == 0)) ^ 0x9696969696969696LL)
       + 393514633;
  unint64_t v230 = ((2 * v229) & 0xBB8E5DE2F3FFF316LL) + (v229 ^ 0x5DC72EF179FFF98BLL);
  int v231 = (v229 & 1 ^ 0x7BFCFBAF) + 2 * (v229 & 1) - 1111491109;
  if (v230 - 0x5DC72EF179FFF98BLL < 2) {
    int v231 = v230 - 1078132737;
  }
  STACK[0x620] = v228;
  int v232 = *(void *)(v228 + 8LL * (v231 - 968685962)) & 1;
  unsigned int v233 = (v232 ^ 0xFEDFFF9B) + 2 * v232 - 653121526;
  LODWORD(STACK[0x2A4]) = LODWORD(STACK[0x340]) ^ 0x20F8F818;
  LODWORD(STACK[0x210]) = v218;
  HIDWORD(a51) = (v218 << 8) ^ 0xA46D3400;
  HIDWORD(v292) = LODWORD(STACK[0x3F8]) ^ LODWORD(STACK[0x2AC]);
  LODWORD(STACK[0x3CC]) = v193 - 456041028;
  LODWORD(STACK[0x218]) = v214;
  int v234 = (8 * v214) ^ 0x7508DA28;
  HIDWORD(v293) = (2 * v234) & 0x22966130;
  LODWORD(v293) = v234 + 290140315;
  int v235 = LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x244]);
  LODWORD(STACK[0x278]) = v147;
  int v236 = v235 ^ v147;
  LODWORD(STACK[0x244]) = v226 + 2234;
  LODWORD(STACK[0x2CC]) = v236;
  LODWORD(STACK[0x3BC]) = v236 ^ 0x718EB765;
  unsigned int v237 = LODWORD(STACK[0x5B0]) ^ 0xC2704167;
  LODWORD(STACK[0x3C0]) = v227 ^ 0x4B704A3A;
  LODWORD(STACK[0x658]) = LODWORD(STACK[0x530]) ^ 0x1D9BCD52;
  BOOL v238 = v233 < 0xD7F227A5;
  unint64_t v239 = 0xB3D5C9433319E527LL * (*(void *)STACK[0x620] ^ 0x9696969696969696LL)
       - ((0x67AB92866633CA4ELL * (*(void *)STACK[0x620] ^ 0x9696969696969696LL)) & (v223 ^ 0x526236DE107FB677LL))
       + 0x29311B6F083FD905LL;
  unint64_t v240 = ((2 * (v239 ^ 0x60A63CE378921450LL)) & 0xFFF7FB7FAF5CFEA0LL) + (v239 ^ 0x1F5DC15CAF3C6B00LL);
  unint64_t v241 = (((v240 - 0x7FFBFDBFD7AE7F50LL) >> 32) ^ 0xF97FEC6FFFBDFA7ELL)
       + v240
       + (((v240 - 0x7FFBFDBFD7AE7F50LL) >> 31) & 0x1FF7BF4FCLL);
  unint64_t v242 = (((v241 - 0x797BEA2FD76C79CELL) >> 16) ^ 0xCFBEF7FCEE7EBF79LL)
       + v241
       + (((v241 - 0x797BEA2FD76C79CELL) >> 15) & 0x1EFF9DCFD7EF2LL);
  unint64_t v243 = (((v242 - 0x493AE22CC5EB3947LL) >> 8) ^ 0xDDD93397AF36F7FBLL)
       + v242
       + (((v242 - 0x493AE22CC5EB3947LL) >> 7) & 0x1B2672F5E6DEFF6LL);
  int v244 = (2 * v243 - ((4 * v243 + 729234168) & 0x493F0920) - 1168432628) & 0xDF03F2AC ^ 0x440280A0;
  int v245 = (v243 - 1965175106) ^ 0x9903BFBD ^ ((((v244 | 0x59001C99) - (v244 | 0xA6FFE366) - 1493179546) & 0x2AB2C ^ 0x2A305)
                                           + (((v244 | 0x59001C99) - (v244 | 0xA6FFE366) - 1493179546) & 0xFFFD54D1)
                                           - 1);
  int v246 = v245 - ((2 * v245) & 0xD937F934);
  int v247 = v243 + 20200376 + ~((2 * v243 - 669330426) & 0x2A4DA368);
  unsigned int v248 = (((2 * v247) ^ 0x2A4DA368) - 2 * (((2 * v247) ^ 0x2A4DA368) & 0x1A6D543A ^ (2 * v247) & 0x10) - 1704111062) & 0xDF03F2AC ^ 0xCC0070AC;
  unsigned int v249 = (-296772801 - (v248 | 0xEE4F9B3F) + (v248 | 0x11B064C0)) ^ 0x25906C86;
  unsigned int v250 = ((2 * v249) & 0x213E775E) - v249;
  unint64_t v251 = v243 - ((2 * v243 - 0x1A3C0A296585F570LL) & 0xAE226832C36DB6A8LL) + 0x49F32F04AEF3E09CLL;
  LODWORD(v243) = (2 * (v243 - ((2 * v243 - 1703277936) & 0xC36DB6A8) - 1359748964)) ^ 0xC36DB6A8;
  LODWORD(v243) = (v243 - ((2 * v243) & 0x69DDE254) - 1259409109) & 0xDF03F2AC ^ 0x9D0342AC;
  int v252 = ((((2 * v243) | 0xE6526CB6) - v243 + 215402917) & 0x73D0F3F8 ^ 0x1D04320)
       + ((((2 * v243) | 0xE6526CB6) - v243 + 215402917) ^ 0xFA28B4DE)
       - (((((2 * v243) | 0xE6526CB6) - v243 + 215402917) ^ 0xFA28B4DE) & 0x73D0F3F9);
  unint64_t v253 = ((2 * (v239 ^ 0x7E202F7669890251LL ^ v251)) & 0x576AFAED6FFF0DD6LL)
       + (v239 ^ 0x7E202F7669890251LL ^ v251 ^ 0xABB57D76B7FF86EBLL);
  unint64_t v254 = (((v253 + 0x544A828948007915LL) >> 32) ^ 0x5B9BF39EDDFFFFFDLL)
       + v253
       + (((v253 + 0x544A828948007915LL) >> 31) & 0x1BBFFFFFALL);
  unint64_t v255 = (((v254 - 0x751711595FF86E8LL) >> 16) ^ 0x3F7FCFFBEF7ED6DFLL)
       + v254
       + (((v254 - 0x751711595FF86E8LL) >> 15) & 0x19FF7DEFDADBELL);
  unint64_t v256 = (((v255 - 0x46D14111857E5DC7LL) >> 8) ^ 0xFF4DFFF7FF7D1BF9LL)
       + v255
       + (((v255 - 0x46D14111857E5DC7LL) >> 7) & 0x9BFFEFFEFA37F2LL);
  int v257 = (2 * v256 - ((4 * v256 + 739383552) & 0x3A0E587C) - 1827653441) & 0xDF03F2AC ^ 0x95012A3E;
  int v258 = (v256 + 2063894080) ^ 0x71D20FFB ^ (((2 * v257) | 0xF3A00BD2) - v257 - 2043676137);
  int v259 = v256 - ((2 * v256 - 1201126646) & 0x1E41B906) - 346751480;
  int v260 = ((2 * v259) ^ 0x1E41B906) - ((2 * ((2 * v259) ^ 0x1E41B906)) & 0x6C8F3224) - 1236821741;
  uint64_t v261 = ((v260 & 0xDF03F2AC ^ 0xDD028220)
        + (v260 & 0x40039020 ^ 0x851453)
        - ((v260 & 0xDF03F2AC ^ 0xDD028220) & 0x40039020)) ^ v259;
  uint64_t v262 = v256 - ((2 * v256 + 0x27AD9F4C7AC77994LL) & 0x627DAB6280C9A6C2LL) + 0x515A5577DC8902BLL;
  int v263 = ((2 * v262) ^ 0x80C9A6C2) - ((2 * ((2 * v262) ^ 0x80C9A6C2)) & 0x541511D8) - 1442150164;
  unsigned int v264 = ((v263 & 0x8801B228 ^ 0xA0008273) + (v263 & 0x57024084 ^ 0x54024085) - 2) ^ 0xEA20167A;
  unsigned int v265 = v264 - ((2 * v264) & 0x24026100);
  int v266 = (v237 ^ v251 ^ 0x6D412A71 ^ v252) - ((2 * (v237 ^ v251 ^ 0x6D412A71 ^ v252)) & 0x83001426);
  unint64_t v267 = ((2 * (v239 ^ 0x180FCEDE485B0A64LL ^ v262)) & 0xBEEFFF97BF8BDDE6LL)
       + (v239 ^ 0x180FCEDE485B0A64LL ^ v262 ^ 0xDF77FFCBDFC5EEF3LL);
  unint64_t v268 = (((v267 + 0x20880034203A110DLL) >> 32) ^ 0x5FEFFC7FF5C5EFF9LL)
       + v267
       + (((v267 + 0x20880034203A110DLL) >> 31) & 0x1EB8BDFF2LL);
  unint64_t v269 = (((v268 - 0x3F67FC4BD58BDEECLL) >> 16) ^ 0xFD0D8BDDFFFFEFFELL)
       + v268
       + (((v268 - 0x3F67FC4BD58BDEECLL) >> 15) & 0x117BBFFFFDFFCLL);
  unint64_t v270 = (((v269 - 0x3C758829D58BCEEALL) >> 8) ^ 0xFFA52FEEF6AFFFFBLL)
       + v269
       + (((v269 - 0x3C758829D58BCEEALL) >> 7) & 0x14A5FDDED5FFFF6LL);
  int v271 = (2 * v270 + 1736991286) & 0x6A4B94E4;
  int v272 = v270 - 387318899;
  int v273 = v272 - v271;
  LODWORD(v251) = (((2 * v273) ^ 0x6A4B94E4) + 1329305654 - 2
                                                          * (((2 * v273) ^ 0x6A4B94E4) & 0x4F3B983E ^ (2 * v273) & 8)) & 0xDF03F2AC ^ 0x49469F20;
  int v274 = (v251 - ((2 * v251) & 0x1E0DD840) + 792652832) ^ v273;
  unsigned int v275 = v273 ^ 0xB525CA72;
  unsigned int v276 = ((2 * (v275 - 516973755)) & 0xEE5E9FFE) + ((v275 - 516973755) ^ 0x772F4FFF);
  int v277 = v246 - 325321574;
  unsigned int v278 = v258 - ((2 * v258) & 0x903445DA) + 1209672429;
  if (v233 >= 0xD7F227A5) {
    BOOL v238 = v233 > 0xD7F227A6;
  }
  uint64_t v279 = LODWORD(STACK[0x470]) ^ 0xEC0EA028 ^ v277 ^ v278 ^ 0x38DFF721 ^ v274;
  unsigned int v280 = 2 * v276 - ((4 * v276 + 591577092) & 0x84ED7564) + 1410865844;
  unsigned int v281 = (v280 & 0xDF03F2AC ^ 0x222AA224)
       + (v280 & 0x9200B00C ^ 0x90041418)
       - ((v280 & 0xDF03F2AC ^ 0x222AA224) & 0xB200B00C);
  unsigned int v282 = v276 - 1999589375;
  unsigned int v283 = ((((v276 - 1999589375) ^ 0xD22CA498 ^ v281)
         - ((2 * ((v276 - 1999589375) ^ 0xD22CA498 ^ v281)) & 0x56C18AE2)
         + 727762289) ^ 0xD49F3A8E)
       + v276;
  unsigned int v284 = (v281 ^ ((v281 ^ 0x2DD35B67) - ((2 * (v281 ^ 0x2DD35B67) + 2) & 0xC2387C84) - 518242749) ^ 0x1F14D834 ^ (v283 - ((2 * v283 + 295788548) & 0x584885DC) - 1259015440))
       + v282;
  int v285 = v275 - 192685000 - 2 * ((v275 - 1033947510) & 0x3224A5AF ^ v272 & 1);
  LODWORD(STACK[0x658]) ^= v247 ^ (v250 - 278870960) ^ v261 ^ 0x28C72856 ^ (((2 * v284) & 0xF9BFFDBE)
                                                                          + (v284 ^ 0xFCDFFEDF)
                                                                          - ((2
                                                                            * (((2 * v284) & 0xF9BFFDBE)
                                                                             + (v284 ^ 0xFCDFFEDF))
                                                                            + 104858178) & 0x680C9F40)
                                                                          - 1222225727);
  unsigned int v286 = (((2 * v285) ^ 0x64494B5C) - ((2 * ((2 * v285) ^ 0x64494B5C)) & 0x6F17A1F0) - 1215573767) & 0xDF03F2AC ^ 0x17006008;
  LODWORD(v291) = ~(2 * HIDWORD(a51)) | 0x64F623FF;
  LODWORD(a59) = v202 + 18313490;
  LODWORD(v292) = (2 * v202) & 0x22EE224;
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((237 * v238) ^ LODWORD(STACK[0x640]))) - 12))( 3000840387LL,  v262 ^ (v266 + 1098910227) ^ (v265 - 1294126909) ^ v285 ^ 0xC27643E0 ^ (((2 * v286) | 0x50DFB344)
                                                                                               - v286
                                                                                               - 678418850),
           4016096336LL,
           1745657664LL,
           v261,
           1943073784LL,
           v279,
           v262,
           a9,
           a10,
           a11,
           a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           v288,
           v289,
           a54,
           a55,
           v290,
           v291,
           a58,
           a59,
           v292,
           v293);
}

uint64_t sub_10059B270( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v75 = (STACK[0x5E8] & 2) == 0;
  int v76 = STACK[0x4A0];
  if ((STACK[0x5E8] & 2) != 0) {
    int v76 = STACK[0x3B0];
  }
  LODWORD(STACK[0x3A8]) = v76;
  int v77 = STACK[0x3AC];
  if (!v75) {
    int v77 = STACK[0x360];
  }
  LODWORD(STACK[0x2AC]) = v77;
  int v78 = STACK[0x3A4];
  if (!v75) {
    int v78 = STACK[0x260];
  }
  LODWORD(STACK[0x3AC]) = v78;
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x2A0]) - 2 * LODWORD(STACK[0x2C8]);
  LODWORD(STACK[0x260]) = HIDWORD(a51) + 1300557434;
  int v79 = (HIDWORD(a56) - a68) ^ LODWORD(STACK[0x25C]);
  LODWORD(STACK[0x620]) = LODWORD(STACK[0x5B0]) ^ 0x17280CE2;
  LODWORD(STACK[0x3A4]) = v79 ^ (a56 - a65);
  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x348]) ^ 0x7BDD4ED1;
  LODWORD(STACK[0x3B0]) = a71 ^ LODWORD(STACK[0x230]);
  LODWORD(STACK[0x640]) = a54 - a55;
  LODWORD(STACK[0x360]) = a52 - HIDWORD(a52);
  LODWORD(STACK[0x4A0]) = LODWORD(STACK[0x480]) ^ 0x128F3049;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x2B0]) ^ 0x11B401B;
  unint64_t v80 = v74 - 435505799LL + ((unint64_t)(v74 < 0x19F54A87) << 32);
  unint64_t v81 = ((v71 - 476) ^ 0xCBD10277E7AE3E7CLL)
      - 0x4C2A36BCCCE61AD9LL * (*(void *)(STACK[0xB20] + 8 * v80) ^ 0x9696969696969696LL)
      - ((0x67AB92866633CA4ELL * (*(void *)(STACK[0xB20] + 8 * v80) ^ 0x9696969696969696LL)) & 0x97A204EFCF5C7AEELL);
  unint64_t v82 = ((2 * ((v73 ^ 0x88BDC02FD58A98D9LL ^ v81) + v80)) & 0xEBDEF7FDBBFFF3FELL)
      + (((v73 ^ 0x88BDC02FD58A98D9LL ^ v81) + v80) ^ 0x75EF7BFEDDFFF9FFLL);
  unint64_t v83 = (((v82 - 0x75EF7BFEDDFFF9FFLL) >> 32) ^ 0x6BF579FFFBFFFFFBLL)
      + v82
      + (((v82 - 0x75EF7BFEDDFFF9FFLL) >> 31) & 0x1F7FFFFF6LL);
  unint64_t v84 = (((v83 + 0x1E1B0A0126000606LL) >> 16) ^ 0xD25BF77FEEFDAA8FLL)
      + v83
      + (((v83 + 0x1E1B0A0126000606LL) >> 15) & 0x1EEFFDDFB551ELL);
  unint64_t v85 = v84 - ((2 * v84 + 0x177E25026E04B6EELL) & 0x3AB5A57671AFC29ALL) - 0x16E61AC39025C33CLL;
  unint64_t v86 = (((v85 >> 8) ^ 0x9D5AD2BB38D7E1LL) & (v85 ^ 0x9D5AD2BB38D7E14DLL))
      + 0x2556B27123E929D1LL
      + (~(2 * (((v85 >> 8) ^ 0x9D5AD2BB38D7E1LL) & (v85 ^ 0x9D5AD2BB38D7E14DLL))) | 0xFF529B1DB82DAC5FLL);
  unint64_t v87 = (v85 ^ 0x9DC7886983EF36ACLL ^ (v85 >> 8))
      + ((2 * v86) ^ 0x3577DB9DB8ADACD5LL)
      + ((4 * v86) & 0x9FB57EFFFEFFFEE8LL ^ 0x951048C48EA4A640LL)
      - 0x7FDABF7FFF7FFF75LL;
  unint64_t v88 = ((2 * v87) & 0xBF6DD79F9AFEFF2ELL) + (v87 ^ 0x5FB6EBCFCD7F7F97LL);
  LODWORD(v87) = (2 * v88 - ((4 * v88 - 905838172) & 0xE06EA890) + 1429755163) & v72 ^ 0x9461F5AC;
  LODWORD(v87) = (v88 + 847282281) ^ 0xB85B32D5 ^ (((2 * v87) & 0x684C118) - v87 - 63334543);
  LODWORD(v86) = v87 - ((2 * v87) & 0x42C43E1C);
  LODWORD(v87) = v88 - ((2 * v88 + 660617052) & 0xA251D5C2) - 455539057;
  int v89 = (((2 * v87) ^ 0xA251D5C2) - ((2 * ((2 * v87) ^ 0xA251D5C2)) & 0x8083F37C) + 1078065598) & v72 ^ 0x5300D0AC;
  LODWORD(v87) = (((2 * v89) & 0xA602E140) - v89 + 210143005) & 0xFFFFFFEC ^ v87;
  uint64_t v90 = v88 - ((2 * v88 + 0x347E49BFE9BF6DE6LL) & 0x2D156FF65B96C9F2LL) - 0x2F362324DD54E414LL;
  LODWORD(v8_Block_object_dispose(va, 8) = (2 * (v88 - ((2 * v88 - 373330458) & 0x5B96C9F2) + 581639148)) ^ 0x5B96C9F2;
  LODWORD(v8_Block_object_dispose(va, 8) = (((v88 - ((2 * v88) & 0xAB0307B4) + 1434551259) & v72 ^ 0x82028080)
                + ((v88 - ((2 * v88) & 0xAB0307B4) + 1434551259) & 0xDC005204 ^ 0x5CE85254)
                - (((v88 - ((2 * v88) & 0xAB0307B4) + 1434551259) & v72 ^ 0x82028080) & 0xDC005204)) ^ 0x7E6A5456;
  unint64_t v91 = ((2 * ((v81 ^ 0xDD5BB58CCA65598ELL ^ v90) + v80)) & 0x2FFDFB77FFBF7FD6LL)
      + (((v81 ^ 0xDD5BB58CCA65598ELL ^ v90) + v80) ^ 0x17FEFDBBFFDFBFEBLL);
  unint64_t v92 = (((v91 - 0x17FEFDBBFFDFBFEBLL) >> 32) ^ 0xDBFFBF7FBFB6B3FFLL)
      + v91
      + (((v91 - 0x17FEFDBBFFDFBFEBLL) >> 31) & 0x17F6D67FELL);
  unint64_t v93 = (((v92 + 0xC0142C440698C16LL) >> 16) ^ 0x5D79AFFAEFE7FFFFLL)
      + v92
      + (((v92 + 0xC0142C440698C16LL) >> 15) & 0x15FF5DFCFFFFELL);
  unint64_t v94 = (((v93 - 0x51786D36AF7E73E9LL) >> 8) ^ 0xA23B567FDC3EB34ALL)
      + v93
      + (((v93 - 0x51786D36AF7E73E9LL) >> 7) & 0x76ACFFB87D6694LL);
  int v95 = (2 * v94 - ((4 * v94 + 1359700788) & 0x5B806610) - 1773804382) & v72 ^ 0xA03B28C;
  int v96 = (((v95 - ((2 * v95) & 0xC000418) + 643042079) & 0x8700DF44 ^ 0x8710D141 | (v95
                                                                                 - ((2 * v95) & 0xC000418)
                                                                                 + 643042079) & 0x780320B8)
       - 1) ^ (v94 + 1950537933);
  int v97 = v94 - ((2 * v94 - 1427838940) & 0x7CF2DED8) + 334226302;
  int v98 = (((2 * v97) ^ 0x7CF2DED8) + 1529994538 - 2 * (((2 * v97) ^ 0x7CF2DED8) & 0x5B31DD2E ^ (2 * v97) & 4)) & v72 ^ 0x5B03D8BA;
  int v99 = (((2 * v98) | 0x72973AA8) - v98 - 961256788) ^ v97;
  uint64_t v100 = v94 - ((2 * v94 + 0xC8499F26D441EAELL) & 0x3ECBFABF0ECA90B6LL) + 0x45A84A58BE0757B2LL;
  unint64_t v101 = v81 ^ 0xCBD10277E7AE3D77LL;
  unint64_t v102 = (v81 ^ 0xCBD10277E7AE3D77LL) + (v81 ^ 0x2B4B00D79F348AD3LL ^ v100) + 1;
  int v103 = ((2 * v100) ^ 0xECA90B6) - ((2 * ((2 * v100) ^ 0xECA90B6)) & 0x824542FC) + 1092788607;
  unsigned int v104 = (v103 & v72 ^ 0x9B001220) + (v103 & 0x8401420C ^ 0x245D4D4F) - ((v103 & v72 ^ 0x9B001220) & 0x8401420C);
  uint64_t v105 = ((v104 & 0xB83FE8E8 ^ 0x982020E3 | v104 & 0x47401614) - 1) ^ ((_DWORD)v94
                                                                     - ((2 * (_DWORD)v94 + 1833180846) & 0xECA90B6)
                                                                     - 1106815054);
  unint64_t v106 = (0xBDD827FA2550C333LL - v94 - ((0xB37B660D92BBE152LL - 2 * v94) & 0xC834E9E6B7E5A514LL)) ^ v100 ^ 0xEE32DA94DD8B604ALL ^ (v102 - ((2 * v102) & 0x2A9AA6700239F536LL) + 0x154D5338011CFA9BLL);
  unint64_t v107 = v101
       + ((v106 + v80) ^ 0x77567DFDCFF694BFLL)
       + ((2 * (v106 + v80)) & 0xEEACFBFB9FED297ELL)
       - 0x77567DFDCFF694BFLL;
  unint64_t v108 = (((((2 * v107) & 0xDADFFFFAFB5FF5BCLL) + (v107 ^ 0x6D6FFFFD7DAFFADELL) - 0x6D6FFFFD7DAFFADELL) >> 32) ^ 0xDFD77DED5EFFCFA2LL)
       + ((2 * v107) & 0xDADFFFFAFB5FF5BCLL)
       + (v107 ^ 0x6D6FFFFD7DAFFADELL)
       + (((((2 * v107) & 0xDADFFFFAFB5FF5BCLL) + (v107 ^ 0x6D6FFFFD7DAFFADELL) - 0x6D6FFFFD7DAFFADELL) >> 31) & 0xBDFF9F44);
  unint64_t v109 = (((v108 - 0x4D477DEADCAFCA80LL) >> 16) ^ 0x65ED6BEBCF99655ELL)
       + v108
       + (((v108 - 0x4D477DEADCAFCA80LL) >> 15) & 0xD7D79F32CABCLL);
  unint64_t v110 = (((v109 + 0x4CCB162953B6D022LL) >> 8) ^ 0xFFFF9EB2DFF3F3E5LL)
       + v109
       + (((v109 + 0x4CCB162953B6D022LL) >> 7) & 0x1FF3D65BFE7E7CALL);
  LODWORD(v110) = v110 - ((2 * v110 - 410666886) & 0x11B5DF4) - 196048073;
  LODWORD(v106) = (((2 * v110) ^ 0x11B5DF4) - ((2 * ((2 * v110) ^ 0x11B5DF4)) & 0x6A88E250) + 893677865) & v72 ^ 0x5FFC699B;
  LODWORD(v106) = (v106 - ((2 * v106) & 0xB02265A) + 92346157) ^ v110;
  LODWORD(v110) = v110 ^ 0x808DAEFA;
  LODWORD(v101) = v110 - ((2 * v110 - 1033947510) & 0x3DD7E0E) - 484550068;
  uint64_t v111 = a7 ^ ((_DWORD)v86 - 1587405042) ^ (((2 * ((v96 ^ 0x26135AD8) & 0x5A0F169F ^ v96 & 0x10)) ^ 0xFFFFFFDF)
                                          + (v96 ^ 0x26135AD8)
                                          - 636545392) ^ 0xB49DA9E5 ^ v106;
  uint64_t v112 = (((2 * (_DWORD)v101) ^ 0x3DD7E0E) - ((2 * ((2 * (_DWORD)v101) ^ 0x3DD7E0E)) & 0xD2B4526C) - 379967177) & v72 ^ v101;
  LODWORD(STACK[0x658]) ^= 0x81732864 ^ v87 ^ v99 ^ v112;
  int v113 = (2 * (v110 - 192685000 - ((2 * v110 - 2067895020) & 0x64494B5C))) ^ 0x64494B5C;
  unsigned int v114 = (v113 - ((2 * v113) & 0xBB34BCC8) - 577085851) & v72 ^ 0xDA03B020;
  return ((uint64_t (*)(uint64_t, void, void, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + ((607 * ((v74 & 0xFFFFFFFE) != 435505798)) ^ v71)))( v112,  a2 ^ v90 ^ (((2 * (_DWORD)v88) & 0xB4099764) - (_DWORD)v88 - 1510263732) ^ v105 ^ 0xD5E19158 ^ (((((2 * v114) | 0xD9F6254E) - v114 - 1828393639) & 0x7196A530 ^ 0x10940411 | (((2 * v114) | 0xD9F6254E) - v114 - 1828393639) & 0x8E695ACC) - 1) ^ ((_DWORD)v110 - 192685000 - ((2 * (_DWORD)v110 - 2067895020) & 0x64494B5C)),  ((2 * (_DWORD)v88) & 0xB4099764) - v88,  2171807844LL,  v105,  0x86D984B064494B5CLL,  v111,  0x5D62D307F483DC38LL,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

void sub_10059BF7C()
{
}

uint64_t sub_10059BF84( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59)
{
  BOOL v62 = (STACK[0x5E8] & 2) == 0;
  int v63 = STACK[0x560];
  if ((STACK[0x5E8] & 2) != 0) {
    int v63 = STACK[0x39C];
  }
  LODWORD(STACK[0x390]) = v63;
  int v64 = STACK[0x398];
  if (!v62) {
    int v64 = STACK[0x378];
  }
  LODWORD(STACK[0x2C8]) = v64;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x2C4]) ^ LODWORD(STACK[0x268]);
  int v65 = STACK[0x238];
  LODWORD(STACK[0x39C]) = a59 ^ LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x238]) ^ (LODWORD(STACK[0x260]) + a57);
  LODWORD(STACK[0x398]) = LODWORD(STACK[0x640]) ^ v65;
  int v66 = STACK[0x2E0];
  unsigned int v67 = LODWORD(STACK[0x2E0]) ^ 0xFAD2E77E;
  LODWORD(STACK[0x38C]) = LODWORD(STACK[0x244]) - a58;
  unint64_t v68 = (v61 ^ 0xFEBC2EAD53D6A380LL)
      + ((v61 >> 27) ^ 0x20012218E387DD80LL)
      + ((v61 >> 26) & 0x3197FBEFAALL ^ 0xFFFFFFCE78F454FFLL)
      - 0x2001220734020829LL;
  unint64_t v69 = ((2 * v68) & 0x713DFB757E9C7B7ALL)
      + (v68 ^ 0x389EFDBABF4E3DBDLL)
      + (((((2 * v68) & 0x713DFB757E9C7B7ALL) + (v68 ^ 0x389EFDBABF4E3DBDLL) - 0x389EFDBABF4E3DBDLL) >> 14) ^ 0xE695890024980000LL)
      - (((((2 * v68) & 0x713DFB757E9C7B7ALL) + (v68 ^ 0x389EFDBABF4E3DBDLL) - 0x389EFDBABF4E3DBDLL) >> 13) & 0x4EDFFB6CFFFFELL);
  unint64_t v70 = v69
      + (((v69 - 0x1F3486BAE3E63DBDLL) >> 6) ^ 0x8A0D08684102830LL)
      - (((v69 - 0x1F3486BAE3E63DBDLL) >> 5) & 0x6BE5EF2F7DFAF9ELL)
      + 2;
  uint64_t v71 = v70 - ((2 * v70 + 0x1055517D30133422LL) & 0x167D0E32CA6150F6LL) + 0x63692FD7FD3A428CLL;
  unint64_t v72 = ((2 * ((v71 ^ 0x8B3E87196530A87BLL) + 0x301F1AB817992D55LL)) & 0xCEBBE1ED92FEEDFELL)
      + (((v71 ^ 0x8B3E87196530A87BLL) + 0x301F1AB817992D55LL) ^ 0x675DF0F6C97F76FFLL);
  unint64_t v73 = v72
      + (((v72 - 0x675DF0F6C97F76FFLL) >> 24) ^ 0x10820018848006LL)
      - (((v72 - 0x675DF0F6C97F76FFLL) >> 23) & 0x1FFCEF6FFF2LL);
  unint64_t v74 = v73
      + (((v73 - 0x676E72F6E203F705LL) >> 14) ^ 0x408587C00A4A9160LL)
      - (((v73 - 0x676E72F6E203F705LL) >> 13) & 0x4F07FEB6ADD3ELL);
  unint64_t v75 = v74
      + (((v74 + 0x580C054913B1779BLL) >> 6) ^ 0xFFFFFDFEFDF93F7ELL)
      + (((v74 + 0x580C054913B1779BLL) >> 5) & 0x7FFFBFDFBF27EFCLL);
  int v76 = 2 * (v75 + 2) + 728789046;
  LODWORD(STACK[0x268]) = v75 + 2 - (v76 & 0x882ACEBA) - 640835720;
  int v77 = (((2 * (v75 + 2 - (v76 & 0x29FC5CA2)) - 714289960) ^ 0xA9FC5CA2)
       - 2
       * (((2 * (v75 + 2 - (v76 & 0x29FC5CA2)) - 714289960) ^ 0xA9FC5CA2) & 0x4D897E9C ^ (2
                                                                                        * ((_BYTE)v75 + 2 - (v76 & 0xA2))
                                                                                        - 8) & 8)
       + 1300856468) & 0xDF03F2AC ^ 0xC903C08C;
  unsigned int v78 = (v77 - ((2 * v77) & 0x98048140) - 322810384) & 0xE668D4E8 ^ 0x40485469 | (v77
                                                                                - ((2 * v77) & 0x98048140)
                                                                                - 322810384) & 0x19172B04;
  unint64_t v79 = (((v75 - 0x4401C9E8C65A5F6LL) >> 27) ^ 0x6EFBFEFE7EF72F9CLL)
      + v75
      + 2
      + (((v75 - 0x4401C9E8C65A5F6LL) >> 26) & 0x3CFDEE5F38LL);
  unint64_t v80 = (((v79 - 0x733C1B9D0B5CD594LL) >> 12) ^ 0x77FFFBDFE1FFAB9ELL)
      + v79
      + (((v79 - 0x733C1B9D0B5CD594LL) >> 11) & 0x1FF7BFC3FF573CLL);
  unint64_t v81 = v80
      + (((v80 + 0x14C3E88312A37ECELL) >> 2) ^ 0x2BDA0D1404A00032LL)
      - (((v80 + 0x14C3E88312A37ECELL) >> 1) & 0x284BE5D7F6BFFF9ALL)
      + 1;
  uint64_t v82 = v81 - ((2 * v81 + 0x11D3B6DE1C06FD36LL) & 0x1EA16AAF4F0FE1B4LL) - 0x7C56F394A74908BLL;
  LODWORD(v73) = (((2 * v82) ^ 0x4F0FE1B4) - ((2 * ((2 * v82) ^ 0x4F0FE1B4)) & 0xC6D71F08) - 479490171) & v60 ^ 0xD60242A4;
  LODWORD(v73) = (425196736 - (v73 | 0x1957FCC0) + (v73 | 0xE6A8033F)) ^ 0xD3A8C73F;
  LODWORD(STACK[0x2C4]) = (((2 * v73) | 0x86C55EF2) - v73 + 1016942727) ^ v82;
  unint64_t v83 = ((2 * ((v82 ^ 0xF50B557A787F0DALL) + 0x138484D3C02C2C4ELL)) & 0xFEAEFBF6EBEFEDFCLL)
      + (((v82 ^ 0xF50B557A787F0DALL) + 0x138484D3C02C2C4ELL) ^ 0x7F577DFB75F7F6FELL);
  unint64_t v84 = v83
      + (((v83 - 0x7F577DFB75F7F6FELL) >> 30) ^ 0x841030020C08EB60LL)
      - (((v83 - 0x7F577DFB75F7F6FELL) >> 29) & 0x3E7EE293ELL);
  unint64_t v85 = v84
      + (((v84 - 0x367ADFD8200E25ELL) >> 12) ^ 0x20240A24612A02LL)
      - (((v84 - 0x367ADFD8200E25ELL) >> 11) & 0x1FB7EBB73DABFALL);
  unint64_t v86 = v85
      + (((v85 - 0x387D207A6620C60LL) >> 7) ^ 0xA990010024018A04LL)
      - (((v85 - 0x387D207A6620C60LL) >> 6) & 0xDFFDFFB7FCEBF6LL)
      + 3;
  unint64_t v87 = v86 - ((2 * v86 - 0x5A2FA60F94C72CCELL) & 0xE523006AD3172772LL) - 0x3A8652D260D802AELL;
  LODWORD(v71) = (((2 * v87) ^ 0xD3172772) - ((2 * ((2 * v87) ^ 0xD3172772)) & 0x496B288) + 38492485) & 0xDF03F2AC ^ 0x1903D028;
  int v88 = ((v71 - ((2 * v71) & 0x3C042048) - 1636951964) & 0x833A238 ^ 0x8712233)
      + ((v71 - ((2 * v71) & 0x3C042048) - 1636951964) & 0xF70C5DC4 ^ 0xB68C1045);
  unint64_t v89 = ((2 * ((v87 ^ 0x72918035698B93B9LL) + 0x3DEAA251E4C860FCLL)) & 0xEFF7BCFDFA76E5EELL)
      + (((v87 ^ 0x72918035698B93B9LL) + 0x3DEAA251E4C860FCLL) ^ 0x77FBDE7EFD3B72F7LL);
  unint64_t v90 = (((v89 - 0x77FBDE7EFD3B72F7LL) >> 31) ^ 0x3A3FBEFF9BFF27BBLL)
      + v89
      + (((v89 - 0x77FBDE7EFD3B72F7LL) >> 30) & 0x337FE4F76LL);
  unint64_t v91 = (((v90 + 0x4DC4628166C5654ELL) >> 8) ^ 0xC7FB77ABDFE6ECBFLL)
      + v90
      + (((v90 + 0x4DC4628166C5654ELL) >> 7) & 0x1F6EF57BFCDD97ELL);
  unint64_t v92 = (((v91 - 0x7A37152A79218771LL) >> 7) ^ 0x6EDFFFBE63D3FAFFLL)
      + v91
      + (((v91 - 0x7A37152A79218771LL) >> 6) & 0x1BFFF7CC7A7F5FELL);
  unint64_t v93 = v92 - 2 * ((v92 + 0x16E8EB17230A7D90LL) & 0x57FAED386161A8FFLL ^ v92 & 0xB) - 0x111C27B07B93D97CLL;
  unint64_t v94 = (v93 ^ 0xE9B62EE68CCCDC3BLL)
      + ((v93 >> 30) ^ 0x742224BAFC933CCLL)
      + ((v93 >> 29) & 0x7EDDCEF52LL ^ 0xFFFFFFF8B26F98EFLL)
      - 0x742224809118855LL;
  STACK[0x260] = v93;
  int v95 = (((2 * v93) ^ 0xC2C351E8) - ((2 * ((2 * v93) ^ 0xC2C351E8)) & 0xBFA7BB8C) - 539763258) & 0xDF03F2AC ^ 0x8203E20C;
  unsigned int v96 = (v95 - ((2 * v95) & 0xB2046148) - 112578124) ^ 0xE9E840C3;
  LODWORD(STACK[0x25C]) = v96 - ((2 * v96) & 0x774104FE) - 1146060161;
  unint64_t v97 = (((((2 * v94) & 0xEDFF8F659DFF67EELL) + (v94 ^ 0x76FFC7B2CEFFB3F7LL) - 0x76FFC7B2CEFFB3F7LL) >> 13) ^ 0xDFDFDBC7FDDFBF72LL)
      + ((2 * v94) & 0xEDFF8F659DFF67EELL)
      + (v94 ^ 0x76FFC7B2CEFFB3F7LL)
      + (((((2 * v94) & 0xEDFF8F659DFF67EELL) + (v94 ^ 0x76FFC7B2CEFFB3F7LL) - 0x76FFC7B2CEFFB3F7LL) >> 12) & 0xFB78FFBBF7EE4LL);
  unint64_t v98 = v97
      + (((v97 - 0x56DFA37ACCDF7369LL) >> 2) ^ 0xC24A04011E0A7860LL)
      - (((v97 - 0x56DFA37ACCDF7369LL) >> 1) & 0x7B6BF7FDC3EB0F3ELL);
  unint64_t v99 = v98
      + 1
      + (((v98 - 0x4AABA72BD6F2F70DLL) >> 25) ^ 0x810008212442A260LL)
      - (((v98 - 0x4AABA72BD6F2F70DLL) >> 24) & 0xBDB77ABB3ELL);
  unint64_t v100 = v99
       + (((v99 + 0x345450B304CA6692LL) >> 9) ^ 0xF74AFFD7FEFFFFFFLL)
       + (((v99 + 0x345450B304CA6692LL) >> 8) & 0x95FFAFFDFFFFFELL);
  unint64_t v101 = v100
       + ((v100 + 0x3D0950DB05CA6693LL) & 0xBE7B4A3B9F7FDC7CLL)
       + (((v100 + 0x3D0950DB05CA6693LL) >> 1) ^ 0xDF3DA51DCFBFEE3ELL);
  HIDWORD(v150) = v101 + 1 - 2 * ((v101 + 906655829) & 0x694505ED ^ (v101 + 1) & 1) - 1622180288;
  int v102 = 2 * (v101 + 1 - ((2 * (v101 + 1) + 202698920) & 0x1779E188)) + 59691568;
  LODWORD(v150) = (v102 ^ 0x9779E188) - 2 * ((v102 ^ 0x9779E188) & 0x13040834 ^ v102 & 4) - 1828452303;
  unint64_t v103 = v101
       + 1
       + (((v101 - 0x69380F9959586DE1LL) >> 24) ^ 0x2220442002881202LL)
       - (((v101 - 0x69380F9959586DE1LL) >> 23) & 0x1BFFAEFDBFALL);
  unint64_t v104 = v103
       + (((v103 + 0x74A7AC46A41F801CLL) >> 15) ^ 0xB000002E8400810LL)
       - (((v103 + 0x74A7AC46A41F801CLL) >> 14) & 0x3FFFA2F7FEFDELL);
  unint64_t v105 = v104
       + (((v104 + 0x69A7AC43BBDF780CLL) >> 8) ^ 0x77F7E9EFCDF7DF7CLL)
       + (((v104 + 0x69A7AC43BBDF780CLL) >> 7) & 0x1EFD3DF9BEFBEF8LL)
       + 2;
  uint64_t v106 = v105 - ((2 * v105 + 0x635F84A7DBCF311CLL) & 0x7219D783E5272006LL) + 0x2ABCAE15E07B2891LL;
  LODWORD(v105) = (2 * (v105 - ((2 * v105 - 607178468) & 0xE5272006) - 528799599)) ^ 0xE5272006;
  uint64_t v107 = ((_DWORD)v105 - ((2 * (_DWORD)v105) & 0x7E8B59F4) - 1085952774) & v60 ^ 0xCD02A020LL;
  unint64_t v108 = ((v107 | 0x5D0D90380DE17029LL) - (v107 | 0xA2F26FC7F21E8FD6LL) - 0x5D0D90380DE1702ALL) ^ 0xD0FC2B02D697020LL;
  uint64_t v148 = ((2 * v108) | 0x5BBA84F8) - v108 + 3525492100u;
  uint64_t v149 = v106;
  unint64_t v109 = ((2 * ((v106 ^ 0x390CEBC1F2939003LL) + 0x627FE9C2823FDEE7LL)) & 0xF3EB779FEF95C90ELL)
       + (((v106 ^ 0x390CEBC1F2939003LL) + 0x627FE9C2823FDEE7LL) ^ 0xF9F5BBCFF7CAE487LL);
  unint64_t v110 = (((v109 + 0x60A443008351B79LL) >> 29) ^ 0x3BFEA41BBEBDFEB5LL)
       + v109
       + (((v109 + 0x60A443008351B79LL) >> 28) & 0x77D7BFD6ALL);
  unint64_t v111 = v110
       + (((v110 - 0x35F45FEBB688E33CLL) >> 9) ^ 0x214412440004006LL)
       - (((v110 - 0x35F45FEBB688E33CLL) >> 8) & 0xD77DB77FFF7FF2LL);
  LODWORD(v87) = v111
               + (((v111 - 0x3808A10FF6892342LL) >> 5) ^ 0xF743F7FD)
               + (((v111 - 0x3808A10FF6892342LL) >> 4) & 0xEE87EFFA);
  LODWORD(v111) = v87 + 1;
  HIDWORD(v147) = v87 + 1 - 2 * ((v87 + 305325249) & 0x48B9E617 ^ (v87 + 1) & 4) - 622015789;
  int v112 = STACK[0x470];
  LODWORD(v87) = LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x470]);
  LODWORD(STACK[0x394]) = v67;
  int v113 = STACK[0x540];
  LODWORD(v73) = (((2 * (v87 ^ v67)) ^ 0xD700A986) - ((2 * ((2 * (v87 ^ v67)) ^ 0xD700A986)) & 0xA8758A7C) + 1413137726) & 0xDF03F2AC ^ 0x80032004;
  LODWORD(v73) = (((2 * v73) & 0x14078008) - v73 + 1432368872) ^ 0x128FEC0;
  LODWORD(v147) = (v73 | 0x618CE1E1) - (v73 | 0x9E731E1E) - 1636622818;
  LODWORD(v73) = (((2 * v66) ^ 0x674981BC) - ((2 * ((2 * v66) ^ 0x674981BC)) & 0x8124AA0) + 67708240) & 0xDF03F2AC ^ 0x54012008;
  HIDWORD(v146) = ((((2 * v73) | 0x8C076712) - v73 - 1174647689) & 0xE0383B0D ^ 0x80380804)
                + ((((2 * v73) | 0x8C076712) - v73 - 1174647689) ^ 0x7603B399)
                - (((((2 * v73) | 0x8C076712) - v73 - 1174647689) ^ 0x7603B399) & 0xE0383B0C);
  LODWORD(v111) = (2 * (v111 - ((2 * v111 + 610650496) & 0x76E4CE9C)) - 1689610212) ^ 0x76E4CE9C;
  LODWORD(v111) = (v111 - ((2 * v111) & 0x437ADA2C) + 566062359) & 0xDF03F2AC ^ 0x4C0330A8;
  LODWORD(v73) = (v111 | 0xCA932637) - (v111 | 0x356CD9C8) + 896326088;
  int v114 = v73 & 0x3592E0B2 ^ 0x11808081;
  LODWORD(v146) = v73 & 0xCA0D1E4D;
  LODWORD(v73) = (LODWORD(STACK[0x540]) ^ LODWORD(STACK[0x530]) ^ 0xF506345A) + (LODWORD(STACK[0x530]) ^ 0xF492A964) + 1;
  LODWORD(v87) = (v113 ^ ((v113 ^ 0x1949D3E) - ((2 * (v113 ^ 0x1949D3E) + 2) & 0x635E02C0) - 1313930911) ^ (v73 - ((2 * v73) & 0xCD152D7E) + 1720358591) ^ 0x294EF51E)
               + (LODWORD(STACK[0x530]) ^ 0xF492A964);
  LODWORD(v87) = LODWORD(STACK[0x5C8]) ^ (v87 - ((2 * v87) & 0xCD23D728) + 1720839060);
  LODWORD(STACK[0x254]) = v87;
  LODWORD(v87) = (((2 * v87) ^ 0xA0862ED0) - 2 * (((2 * v87) ^ 0xA0862ED0) & 0x5C3CB45E ^ (2 * v87) & 8) + 1547482198) & 0xDF03F2AC ^ 0xC102402C;
  LODWORD(v87) = (v87 - ((2 * v87) & 0xA207A018) - 245638897) ^ 0xC81BB927;
  LODWORD(STACK[0x244]) = v87 - ((2 * v87) & 0xAC82E270) - 689866437;
  LODWORD(v87) = (((2 * v113) ^ 0xFCD6C582)
                - 2 * (((2 * v113) ^ 0xFCD6C582) & 0x497E63FE ^ (2 * v113) & 0x10)
                + 1233019887) & 0xDF03F2AC ^ 0xFC5EDE73;
  LODWORD(STACK[0x238]) = v87 - ((2 * v87) & 0x9282BDC6) - 907976989;
  LODWORD(v87) = (2 * (LODWORD(STACK[0x620]) ^ LODWORD(STACK[0x358]) ^ LODWORD(STACK[0x5B8]))) ^ 0x304D59CA;
  LODWORD(v87) = (v87 - ((2 * v87) & 0x9E2A20B0) - 820703143) & 0xDF03F2AC ^ 0xD602D20C;
  LODWORD(v87) = (((2 * v87) | 0x579FEFA4) - v87 - 735049682) ^ 0x36EF4C2;
  HIDWORD(v145) = v87 - ((2 * v87) & 0xE670B2D8) - 214410900;
  LODWORD(v87) = (((2 * LODWORD(STACK[0x358])) ^ 0xE0BE6FFE)
                - ((2 * ((2 * LODWORD(STACK[0x358])) ^ 0xE0BE6FFE)) & 0x5FD76334)
                + 803975579) & 0xDF03F2AC ^ 0xC0006204;
  LODWORD(v87) = (((2 * v87) & 0x12048418) - v87 - 155075359) ^ 0x7E4526E9;
  unint64_t v115 = (void *)STACK[0xB20];
  uint64_t v116 = *(void *)(STACK[0xB20] + 8 * (*(void *)(STACK[0xB20] + 8 * (*(void *)STACK[0xB20] & 1LL)) & 1LL));
  LODWORD(STACK[0x35C]) ^= ((2 * v87) | 0x47FA4DF6) - v87 + 1543690501;
  LODWORD(v87) = (1 - v115[v116 & 1]) & 1;
  unsigned int v117 = (v87 ^ 0x7BEB5D8B) + 2 * v87;
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x338]) ^ 0xE256D546;
  LODWORD(STACK[0x378]) = LODWORD(STACK[0x2E8]) ^ 0xCE762E19;
  LODWORD(STACK[0x230]) = v78 - 1;
  LODWORD(STACK[0x5B0]) = v88 - 2;
  LODWORD(STACK[0x640]) = v117 + 717133929;
  unsigned int v118 = v112 ^ 0xC809E91E;
  BOOL v119 = v117 < 0x7BEB5D8B;
  uint64_t v120 = (v59 + 739);
  unint64_t v121 = 0xB3D5C9433319E527LL * (*v115 ^ 0x9696969696969696LL)
       - ((0x7AB92866633CA4ELL * (*v115 ^ 0x9696969696969696LL)) & (v120 + 0xEA51224793A5D7ELL))
       - 0x78AD76EDC362CE4ALL;
  unint64_t v122 = ((2 * (v121 ^ 0xCEC5AE9E4C30FCE3LL)) & 0x5F3D5E7F0EFE7FC6LL) + (v121 ^ 0xE15B01A1CB4FC300LL);
  unint64_t v123 = (((v122 - 0x2F9EAF3F877F3FE3LL) >> 32) ^ 0x5FFAE4FF7F77EDF7LL)
       + v122
       + (((v122 - 0x2F9EAF3F877F3FE3LL) >> 31) & 0xFEEFDBEE);
  unint64_t v124 = (((v123 + 0x70666BC0F908D226LL) >> 16) ^ 0xC4EEF7FBBBF6FF6DLL)
       + v123
       + (((v123 + 0x70666BC0F908D226LL) >> 15) & 0x1EFF777EDFEDALL);
  unint64_t v125 = (((v124 - 0x54888C3AC2EE2D47LL) >> 8) ^ 0x7D447DF8FF7FFEDFLL)
       + v124
       + (((v124 - 0x54888C3AC2EE2D47LL) >> 7) & 0x88FBF1FEFFFDBELL);
  unint64_t v126 = v125 - ((2 * v125 + 0x5C65EB987B23A7B4LL) & 0xDDEB6D219B93488ALL) + 0x1D28AC5D0B5B781FLL;
  LODWORD(v125) = (((4 * v126) ^ 0x37269114) - ((2 * ((4 * v126) ^ 0x37269114)) & 0x5C223BD8) - 1374609938) & 0x9A6FB9D0 ^ 0x63EB8CF4;
  unint64_t v127 = (v126 ^ 0xEEF5B690CDC9A445LL)
       - ((2 * (v126 ^ 0xEEF5B690CDC9A445LL) + 0x33EC215F84BE6D14LL) & 0xD9D0880000AFA8C2LL)
       - 0x7921AB503D48F515LL;
  unint64_t v128 = ((2 * (v121 ^ 0xEBBACD123CCAE5D7LL ^ v127)) & 0xF4FDDDFC57F4B7FELL)
       + (v121 ^ 0xEBBACD123CCAE5D7LL ^ v127 ^ 0xFA7EEEFE2BFA5BFFLL);
  unint64_t v129 = (((v128 + 0x5811101D405A401LL) >> 32) ^ 0x27DF59CFA6FEFBF7LL)
       + v128
       + (((v128 + 0x5811101D405A401LL) >> 31) & 0x14DFDF7EELL);
  unint64_t v130 = (((v129 - 0x225E48CDD2F957F6LL) >> 16) ^ 0x3FFF774DBFF5377CLL)
       + v129
       + (((v129 - 0x225E48CDD2F957F6LL) >> 15) & 0xEE9B7FEA6EF8LL);
  unint64_t v131 = (((v130 - 0x625DC01B92EE8F72LL) >> 8) ^ 0x11BFFDA5FFFBFD6FLL)
       + v130
       + (((v130 - 0x625DC01B92EE8F72LL) >> 7) & 0x17FFB4BFFF7FADELL);
  int v132 = (4 * v131 - ((8 * v131 + 1756076280) & 0xCE292FE0) - 1687526291) & 0x9A6FB9D0 ^ 0x1A4DB010;
  int v133 = (v131 + 1830122271) ^ 0x1442F550 ^ (v132 - ((2 * v132) & 0x10172120) - 1945381741) & 0xFFFFFFF0;
  int v134 = v133 - 2 * (v133 & 0x174E07D4 ^ (v131 + 1830122271) & 4);
  unint64_t v135 = v131 - ((2 * v131 + 0x4BB0A5DC5EE95352LL) & 0xE6B9367DB2292168LL) - 0x66CB11D2F776C5A3LL;
  LODWORD(v131) = 4 * (v131 - ((2 * v131 + 1592349522) & 0xB2292168) + 143211101);
  unint64_t v136 = ((v131 ^ 0x645242D0)
        + 792287519
        - 2 * ((v131 ^ 0x645242D0) & 0x2F39593C ^ v131 & 0x20)) & 0x9A6FB9D0 ^ v135;
  unint64_t v137 = ((2 * (v121 ^ 0x740E122CE589A102LL ^ v135)) & 0xF9BF777AFBA1FE7ELL)
       + (v121 ^ 0x740E122CE589A102LL ^ v135 ^ 0xFCDFBBBD7DD0FF3FLL);
  unint64_t v138 = (((v137 + 0x3204442822F00C1LL) >> 32) ^ 0xBDAFD7FFAB473E7FLL)
       + v137
       + (((v137 + 0x3204442822F00C1LL) >> 31) & 0x1568E7CFELL);
  unint64_t v139 = (((v138 + 0x45706C42D6E7C242LL) >> 16) ^ 0x1BEB6FFFFE7E77FFLL)
       + v138
       + (((v138 + 0x45706C42D6E7C242LL) >> 15) & 0xDFFFFCFCEFFELL);
  unint64_t v140 = (((v139 + 0x2984FC42D8694A43LL) >> 8) ^ 0x16F83FBB7FBBFEBELL)
       + v139
       + (((v139 + 0x2984FC42D8694A43LL) >> 7) & 0x1F07F76FF77FD7CLL);
  uint64_t v141 = v140 - ((2 * v140 + 0x519790EB15A970ALL) & 0xFBD5CAA953C50E8LL) - 0x659495235CB48C07LL;
  LODWORD(v135) = (((4 * v141) ^ 0x2A78A1D0) - ((2 * ((4 * v141) ^ 0x2A78A1D0)) & 0x1D42EEF8) + 245462909) & 0x9A6FB9D0 ^ 0xA688980;
  LODWORD(v135) = ((((v135 | 0xFBBE8E14) - (v135 | 0x44171EB) + 71397867) & 0xEAB13A80 ^ 0x20000880)
                 + (((v135 | 0xFBBE8E14) - (v135 | 0x44171EB) + 71397867) ^ 0xDABF364C)
                 - ((((v135 | 0xFBBE8E14) - (v135 | 0x44171EB) + 71397867) ^ 0xDABF364C) & 0xEAB13A80)) ^ v141;
  unint64_t v142 = v141 ^ 0x87DEAE554A9E2874LL;
  if (v117 >= 0x7BEB5D8B) {
    BOOL v119 = LODWORD(STACK[0x640]) > 0xA6A9F5F5;
  }
  LODWORD(v145) = v114 - 1;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((35 * !v119) ^ v59)) - 12))( v142 - ((2 * v142 + 0x33EC215F84BE6D14LL) & 0xC1E1D88ECBEE1CD2LL) - 0x5190308D7A9BB0DLL,  a2,  1958766593LL,  v136,  1347071497LL,  v120,  a7,  v143,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           v145,
           v146,
           v147,
           v148,
           v149,
           v150);
}

void sub_10059DFC0()
{
}

uint64_t sub_10059DFCC( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  int v63 = STACK[0x370];
  if ((STACK[0x5E8] & 2) == 0) {
    int v63 = STACK[0x364];
  }
  LODWORD(STACK[0x370]) = v63;
  LODWORD(STACK[0x36C]) = HIDWORD(a60) ^ LODWORD(STACK[0x4F0]);
  LODWORD(STACK[0x374]) = a59 - a60;
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x200]) - LODWORD(STACK[0x310]);
  STACK[0x200] = a54 ^ a55;
  LODWORD(STACK[0x310]) = LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x368]) ^ HIDWORD(a52) ^ a53 ^ a7 ^ a58 ^ LODWORD(STACK[0x5B0]) ^ HIDWORD(a56) ^ a56 & 0xDF03F2AC;
  int v64 = LODWORD(STACK[0x35C]) ^ LODWORD(STACK[0x5B8]) ^ HIDWORD(a51) ^ a2 ^ LODWORD(STACK[0x2C4]) ^ HIDWORD(a57) ^ a57 ^ HIDWORD(a53) ^ (a51 + a52);
  LODWORD(STACK[0x2C4]) = v64;
  LODWORD(STACK[0x368]) = v64 ^ 0xB16605C9;
  unint64_t v65 = a5 - 1347071496LL + ((unint64_t)(a5 < 0x504AAE08) << 32);
  unint64_t v66 = a6 ^ 0x9696969696969378LL ^ *(void *)(STACK[0xB20] + 8 * v65);
  unint64_t v67 = 0xB3D5C9433319E527LL * v66 - ((0x67AB92866633CA4ELL * v66) & 0x629C72727F4984C4LL) + 0x314E39393FA4C262LL;
  unint64_t v68 = ((2 * ((a1 ^ 0xD1BED57E5A53CC0BLL ^ v67) + v65)) & 0x7E9FF67E54BF7F6CLL)
      + (((a1 ^ 0xD1BED57E5A53CC0BLL ^ v67) + v65) ^ 0x3F4FFB3F2A5FBFB6LL);
  unint64_t v69 = (((v68 - 0x3F4FFB3F2A5FBFB6LL) >> 32) ^ 0x5EEFB7527BF78FBELL)
      + v68
      + (((v68 - 0x3F4FFB3F2A5FBFB6LL) >> 31) & 0xF7EF1F7C);
  unint64_t v70 = (((v69 + 0x61C04D6E59A8B08CLL) >> 16) ^ 0x6FB3FBFFDF5FEF5ELL)
      + v69
      + (((v69 + 0x61C04D6E59A8B08CLL) >> 15) & 0x1F7FFBEBFDEBCLL);
  unint64_t v71 = (((v70 - 0xDF3AE9185B73ED2LL) >> 8) ^ 0x3F7FEECE77BFDF37LL)
      + v70
      + (((v70 - 0xDF3AE9185B73ED2LL) >> 7) & 0xFFDD9CEF7FBE6ELL);
  uint64_t v72 = v71 - ((2 * v71 + 0x518C5400511C3EELL) & 0x8CC2581C1DB3356LL) - 0x490D8A9F1C89845ELL;
  LODWORD(v71) = (((4 * v72) ^ 0x83B666AC) - ((2 * ((4 * v72) ^ 0x83B666AC)) & 0x15D83048) - 1964238811) & v62 ^ 0x6CFC56AF;
  unint64_t v73 = (v72 ^ 0x46612C0E0ED99ABLL)
      - ((2 * (v72 ^ 0x46612C0E0ED99ABLL) + v61) & 0x98E8E9F6DB536EB4LL)
      + 0x666A85AB3008EDE4LL;
  uint64_t v74 = ((2 * ((v67 ^ 0x7D3A4DC2520D7538LL ^ v73) + v65)) & 0x6BAF57B53A4DF7FELL)
      + (((v67 ^ 0x7D3A4DC2520D7538LL ^ v73) + v65) ^ 0x35D7ABDA9D26FBFFLL);
  unint64_t v75 = (((unint64_t)(v74 - 0x35D7ABDA9D26FBFFLL) >> 32) ^ 0x77FFD93F3EFDBFB9LL)
      + v74
      + (((unint64_t)(v74 - 0x35D7ABDA9D26FBFFLL) >> 31) & 0x7DFB7F72);
  unint64_t v76 = (((v75 + 0x52287AE623DB4448LL) >> 16) ^ 0x7FF9BBBF9BBFFF9ELL)
      + v75
      + (((v75 + 0x52287AE623DB4448LL) >> 15) & 0x1777F377FFF3CLL);
  unint64_t v77 = (((v76 - 0x2DD140D977E4BB56LL) >> 8) ^ 0x65DF7BFFFFEE739CLL)
      + v76
      + (((v76 - 0x2DD140D977E4BB56LL) >> 7) & 0x1BEF7FFFFDCE738LL);
  unint64_t v78 = v77 - ((2 * v77 - 0x276179B2EFA65DE4LL) & 0xEADDE3B7C38B0E86LL) - 0x1E41CAFD960DA7AFLL;
  int v79 = (((4 * v78) ^ 0x87161D0C) - ((2 * ((4 * v78) ^ 0x87161D0C)) & 0x42796AF0) - 1589856903) & v62 ^ v78;
  v78 ^= 0x756EF1DBE1C58743uLL;
  int v80 = v78 - ((2 * v78 - 1033947510) & 0x24CF1CD8) - 208197199;
  int v81 = ((4 * v80) ^ 0x499E39B0) - ((2 * ((4 * v80) ^ 0x499E39B0)) & 0x1F06F158) + 260274350;
  unsigned int v82 = ((v81 & 0x106110D0 ^ 0x115054B5) + (v81 & 0x8A0EA900 ^ 0x880E8101) - 2) ^ 0x93D1D155;
  uint64_t v83 = v78 - ((2 * v78 + 0x3EC215F84BE6D14LL) & 0xC9F65EFA650DA8ELL) + 0x2045C3A79587A3D1LL;
  int v84 = ((4 * v83) ^ 0x4CA1B51C) - ((2 * ((4 * v83) ^ 0x4CA1B51C)) & 0x707656D0) - 1204081815;
  uint64_t v85 = ((v84 & 0x90091000 ^ 0x35900005) + (v84 & 0xA66A9D0 ^ 0x8428091) - 2) ^ v83;
  unint64_t v86 = ((2 * ((v67 ^ 0x37018BCEEC8CAF25LL ^ v83) + v65)) & 0xD97F925FFF86DCFELL)
      + (((v67 ^ 0x37018BCEEC8CAF25LL ^ v83) + v65) ^ 0x6CBFC92FFFC36E7FLL);
  unint64_t v87 = (((v86 - 0x6CBFC92FFFC36E7FLL) >> 32) ^ 0xCE7A79E5BF6EEBFFLL)
      + v86
      + (((v86 - 0x6CBFC92FFFC36E7FLL) >> 31) & 0x17EDDD7FELL);
  unint64_t v88 = (((v87 - 0x3B3A4315BF325A7ELL) >> 16) ^ 0xF9653FFFFB7F7EDFLL)
      + v87
      + (((v87 - 0x3B3A4315BF325A7ELL) >> 15) & 0x7FFFF6FEFDBELL);
  unint64_t v89 = (((v88 - 0x349F8315BAB1D95DLL) >> 8) ^ 0xFEFBDDF2E73FF5B7LL)
      + v88
      + (((v88 - 0x349F8315BAB1D95DLL) >> 7) & 0x1F7BBE5CE7FEB6ELL);
  LODWORD(v83) = 4 * v89 - 2 * ((4 * v89 + 943244208) & 0x35370CBC ^ (4 * v89) & 8) - 1385181081;
  LODWORD(v83) = (v89 + 1577988332) ^ 0xCD00CA87 ^ ((v83 & v62 ^ 0x30070B90)
                                                  + (v83 & 0x88208980 ^ 0xCD20C007)
                                                  - ((v83 & v62 ^ 0x30070B90) & 0xA8208980));
  return ((uint64_t (*)(unint64_t, _UNKNOWN **, unint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + (int)((834 * ((a5 - 1347071495) > 1)) ^ a6)))( v89 - ((2 * v89 - 0x334AA0B1BF253114LL) & 0xC1E1D88ECBEE1CD2LL) - 0x38B46411799B8A21LL,  &off_10090DDE0,  0xC1E1D88ECBEE1CD2LL,  v85,  a5,  a6,  (v82 - ((2 * v82) & 0x111B6222) - 376573675) ^ v80,  a8 ^ v72 ^ (((((2 * (_DWORD)v71) | 0xFD1E2C5A) - (_DWORD)v71 + 24177107) & 0xA7D23DC4 ^ 0x870011C1 | (((2 * (_DWORD)v71) | 0xFD1E2C5A) - (_DWORD)v71 + 24177107) & 0x582DC238)
                                   - 1) ^ v79 ^ 0x4A605ECF ^ ((int)v83
                                                            + 1417394239
                                                            - 2 * (v83 & 0x547BB83F ^ ((_DWORD)v89 + 1577988332) & 8)
                                                            - 8),
           a9,
           a10,
           a11,
           a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_10059EB60()
{
}

uint64_t sub_10059EB70( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,uint64_t a63)
{
  unint64_t v68 = (v66 + 306656080) & 0xC8473FD8;
  int v69 = a62 ^ a65;
  STACK[0x5B0] = v68;
  unint64_t v70 = ((a1 >> 27) ^ 0x3B0448098688F740LL)
      + ((v68 + 0x5D2000B20405027FLL) ^ a1)
      + ((a1 >> 26) & 0x3BBAEE3DFELL ^ 0xFFFFFFECF7FFD37FLL)
      - 0x3B0448022288E0FFLL;
  unint64_t v71 = ((2 * v70) & 0x9F7F7BF7DFF5FBE6LL)
      + (v70 ^ 0x4FBFBDFBEFFAFDF3LL)
      + (((((2 * v70) & 0x9F7F7BF7DFF5FBE6LL) + (v70 ^ 0x4FBFBDFBEFFAFDF3LL) - 0x4FBFBDFBEFFAFDF3LL) >> 14) ^ 0x7125805C60000280LL)
      - (((((2 * v70) & 0x9F7F7BF7DFF5FBE6LL) + (v70 ^ 0x4FBFBDFBEFFAFDF3LL) - 0x4FBFBDFBEFFAFDF3LL) >> 13) & 0x4FF473FFFFAFELL);
  unint64_t v72 = v71
      + (((v71 + 0x3F1AC1A7B004FF8DLL) >> 6) ^ 0x906C800408A60D58LL)
      - (((v71 + 0x3F1AC1A7B004FF8DLL) >> 5) & 0x726FFF7EEB3E54ELL)
      + 2;
  unint64_t v73 = v72 - ((2 * v72 + 0x5D5C83474EBDE466LL) & 0x81446AF8DAC6B474LL) + 0x6F50772014C24C6DLL;
  unint64_t v74 = ((2 * ((v73 ^ 0xC0A2357C6D635A3ALL) + 0x301F1AB817992D55LL)) & 0x9F7EFA6FFF3FB97CLL)
      + (((v73 ^ 0xC0A2357C6D635A3ALL) + 0x301F1AB817992D55LL) ^ 0xCFBF7D37FF9FDCBELL);
  unint64_t v75 = v74
      + (((v74 + 0x304082C800602342LL) >> 24) ^ 0x401A87129540011LL)
      - (((v74 + 0x304082C800602342LL) >> 23) & 0x11DAD57FFDCLL);
  unint64_t v76 = v75
      + (((v75 + 0x2C3EDA56D70C2331LL) >> 14) ^ 0x18016872002346A0LL)
      - (((v75 + 0x2C3EDA56D70C2331LL) >> 13) & 0x52F1BFFB972BELL);
  unint64_t v77 = v76
      + (((v76 + 0x143D71E4D6E8DC91LL) >> 6) ^ 0xFBE9DF7BBEBFD9FFLL)
      + (((v76 + 0x143D71E4D6E8DC91LL) >> 5) & 0x7D3BEF77D7FB3FELL);
  int v78 = (4 * (v77 + 2 + (~(2 * (v77 + 2) + 810681632) | 0x17AB22AD)) - 1320303384) ^ 0x50A9BAA4;
  unsigned int v79 = (v78 - ((2 * v78) & 0x229F8528) - 1857043820) & 0x9A6FB9D0 ^ 0x804FA990;
  int v80 = ((2 * v79) | 0x31AB1E7A) - v79 + 1730834627;
  unint64_t v81 = (((v77 - 0x43F8917F89F4DB81LL) >> 27) ^ 0xFCEDD7DABFEDD67DLL)
      + v77
      + 2
      + (((v77 - 0x43F8917F89F4DB81LL) >> 26) & 0x357FDBACFALL);
  unint64_t v82 = (((v81 - 0x40E6695A49E2B200LL) >> 12) ^ 0xFEFBE96A6FFFDE36LL)
      + v81
      + (((v81 - 0x40E6695A49E2B200LL) >> 11) & 0x17D2D4DFFFBC6CLL);
  unint64_t v83 = v82
      + (((v82 - 0x3FE252C4B9E29036LL) >> 2) ^ 0x8418030E11138240LL)
      - (((v82 - 0x3FE252C4B9E29036LL) >> 1) & 0x77CFF9E3DDD8FB7ELL);
  int v84 = 2 * (v83 + 1);
  LODWORD(v6_Block_object_dispose(va, 8) = 4 * (v83 + 1 - ((v84 + 169073426) & 0x1A79ECA0));
  LODWORD(v6_Block_object_dispose(va, 8) = ((v68 - 1994682524) ^ 0xB4F3D940)
               - 2 * (((v68 - 1994682524) ^ 0xB4F3D940) & 0x49787314 ^ ((_BYTE)v68 + 108) & 4)
               - 914853103;
  LODWORD(v6_Block_object_dispose(va, 8) = ((v68 & 0x8A4BB1C0 ^ 0xCB53B085) + (v68 & 0x10240810 ^ 0x10000811) - 2) ^ 0xE67BBDC8;
  int v85 = v68 - ((2 * v68) & 0x5A516900) - 315050877;
  int v86 = v83 + 1 - ((v84 + 1779686162) & 0xF3031226) - 1366591844;
  unint64_t v87 = v83
      + 1
      + (((v83 + 0x4F8A2F00F53619D8LL) >> 30) ^ 0x8A44F84654048543LL)
      - (((v83 + 0x4F8A2F00F53619D8LL) >> 29) & 0x357F6F578LL);
  unint64_t v88 = v87
      + (((v87 - 0x3ABAC9455ECE6B6CLL) >> 12) ^ 0xA040100E00A21201LL)
      - (((v87 - 0x3ABAC9455ECE6B6CLL) >> 11) & 0x1FDFE3FEBBDBFCLL);
  unint64_t v89 = v88
      + (((v88 + 0x250526ACA08F8293LL) >> 7) ^ 0xC62828061328C0LL)
      - (((v88 + 0x250526ACA08F8293LL) >> 6) & 0x273AFAFF3D9AE7ELL);
  uint64_t v90 = v89 + 3 - 2 * ((v89 + 0x43EFE849A7C59D3LL) & 0xCE53B65237479E7LL ^ (v89 + 3) & 4) - 0x4EDBC616420F2C4DLL;
  unint64_t v91 = ((2 * ((v90 ^ 0x8CE53B65237479E3LL) + 0x3DEAA251E4C860FCLL)) & 0xDFBFFFEDBF7DBDF8LL)
      + (((v90 ^ 0x8CE53B65237479E3LL) + 0x3DEAA251E4C860FCLL) ^ 0x6FDFFFF6DFBEDEFCLL);
  unint64_t v92 = (((v91 - 0x6FDFFFF6DFBEDEFCLL) >> 31) ^ 0xFFDFBDFD67FD5C34LL)
      + v91
      + (((v91 - 0x6FDFFFF6DFBEDEFCLL) >> 30) & 0x2CFFAB868LL);
  unint64_t v93 = (((v92 - 0x6FBFBDF447BC3B30LL) >> 8) ^ 0xF7BF6C7BDBCFB9FFLL)
      + v92
      + (((v92 - 0x6FBFBDF447BC3B30LL) >> 7) & 0x17ED8F7B79F73FELL);
  unint64_t v94 = (((v93 - 0x677F2A70238BF52FLL) >> 7) ^ 0x492FAFFBEFEDDCFBLL)
      + v93
      + (((v93 - 0x677F2A70238BF52FLL) >> 6) & 0x25F5FF7DFDBB9F6LL);
  unint64_t v95 = v94 - ((2 * v94 - 0x615DB4D826F3A454LL) & 0x9B18C7214A4D839ELL) + 0x1CDD892491ACEFA5LL;
  unint64_t v96 = (v95 ^ 0xF3C0A04E488BB500LL)
      + ((v95 >> 30) ^ 0xC03088D747024938LL)
      + ((v95 >> 29) & 0x6EFFE6FFCLL ^ 0xFFFFFFF971FBFD8FLL)
      + 0x3FCF772B77FF3800LL;
  unint64_t v97 = (((((2 * v96) & 0xBEBFFE7E9F713FFELL) + (v96 ^ 0x5F5FFF3F4FB89FFFLL) - 0x5F5FFF3F4FB89FFFLL) >> 13) ^ 0xB1D7FDFBBFFDCF7ELL)
      + ((2 * v96) & 0xBEBFFE7E9F713FFELL)
      + (v96 ^ 0x5F5FFF3F4FB89FFFLL)
      + (((((2 * v96) & 0xBEBFFE7E9F713FFELL) + (v96 ^ 0x5F5FFF3F4FB89FFFLL) - 0x5F5FFF3F4FB89FFFLL) >> 12) & 0xFFBF77FFB9EFCLL);
  unint64_t v98 = v97
      + (((v97 - 0x1137FD3B0FB66F7DLL) >> 2) ^ 0xC100D20C13200000LL)
      - (((v97 - 0x1137FD3B0FB66F7DLL) >> 1) & 0x7DFE5BE7D9BFFFFELL)
      + 1;
  uint64_t v99 = v98 - ((2 * v98 + 0x1B8E6171BA532104LL) & 0x217DC884E44E8D4CLL) + 0x3E8614FB4F50D728LL;
  int v100 = ((4 * v99) ^ 0xC89D1A98) - ((2 * ((4 * v99) ^ 0xC89D1A98)) & 0x9002F810) + 1208056841;
  int v101 = ((v100 & v67 ^ 0x1DCF0D26) + (v100 & 0x2DB050 ^ 0x4030F251) - ((v100 & v67 ^ 0x1DCF0D26) & 0x12DB452)) & 0xFFFFFFF4 ^ v99;
  unint64_t v102 = ((2 * ((v99 ^ 0x10BEE442722746A6LL) - 0x3181FFAFEC090B44LL)) & 0xFF75EFE5F9BBF3EELL)
       + (((v99 ^ 0x10BEE442722746A6LL) - 0x3181FFAFEC090B44LL) ^ 0xFFBAF7F2FCDDF9F7LL);
  unint64_t v103 = v102
       + (((v102 + 0x45080D03220609LL) >> 25) ^ 0xA201246E29089198LL)
       - (((v102 + 0x45080D03220609LL) >> 24) & 0x23ADEEDCCELL);
  unint64_t v104 = v103
       + (((v103 + 0x5E43E39EDA197471LL) >> 9) ^ 0xF9EEDDFAD7FB333FLL)
       + (((v103 + 0x5E43E39EDA197471LL) >> 8) & 0xDDBBF5AFF6667ELL);
  unint64_t v105 = v104
       + ((v104 + 0x645505A4021E4132LL) & 0xF75CDFDC7977EEFELL)
       + (((v104 + 0x645505A4021E4132LL) >> 1) ^ 0xFBAE6FEE3CBBF77FLL);
  uint64_t v106 = v105 + 1 - 2 * ((v105 + 0x28A695B5C56249B3LL) & 0x23E1EE68E5533633LL ^ (v105 + 1) & 1) - 0x73777BE1554A801CLL;
  uint64_t v107 = ((2 * v106) ^ 0x47C3DCD1CAA66C64LL)
       - 2 * (((2 * v106) ^ 0x47C3DCD1CAA66C64LL) & 0x1D95F14163042E5ELL ^ (2 * v106) & 0x18)
       - 0x226A0EBE9CFBD1B9LL;
  unint64_t v108 = (v106 ^ 0x1B1DAAC195CE2FF8LL)
       + (v107 & 0x71F88952E13A3394LL ^ 0xCE74EBC9E57B7EBLL)
       + ((2 * v107) & 0xA2E112A1C2242308LL ^ 0xA2210280C2000008LL)
       - 0x5D77CFFCFF5795EFLL;
  unint64_t v109 = ((2 * v108) & 0x77EFDDDAFFDFFE7ALL)
       + (v108 ^ 0xBBF7EEED7FEFFF3DLL)
       + (((((2 * v108) & 0x77EFDDDAFFDFFE7ALL) + (v108 ^ 0xBBF7EEED7FEFFF3DLL) + 0x44081112801000C3LL) >> 24) ^ 0x4A0A343066CE000LL)
       - (((((2 * v108) & 0x77EFDDDAFFDFFE7ALL) + (v108 ^ 0xBBF7EEED7FEFFF3DLL) + 0x44081112801000C3LL) >> 23) & 0x179F3263FFELL);
  unint64_t v110 = v109
       + (((v109 + 0x3F676DCF79A320C3LL) >> 15) ^ 0x51E010081221890LL)
       - (((v109 + 0x3F676DCF79A320C3LL) >> 14) & 0x3FDFEFDBBCEDELL);
  unint64_t v111 = v110
       + (((v110 + 0x3A496CCEF8810833LL) >> 8) ^ 0x7EDB7BFD5FDFEFFELL)
       + (((v110 + 0x3A496CCEF8810833LL) >> 7) & 0x1B6F7FABFBFDFFCLL);
  int v112 = v111 + 2;
  LODWORD(v6_Block_object_dispose(va, 8) = 2 * (v111 + 2);
  unint64_t v113 = (((v111 + 0x1DEDDA941AE0F71CLL) >> 29) ^ 0x361D6C6DF6D77FFFLL)
       + v111
       + 2
       + (((v111 + 0x1DEDDA941AE0F71CLL) >> 28) & 0xBEDAEFFFELL);
  unint64_t v114 = v113
       + (((v113 - 0x182F91D9DBF688E5LL) >> 9) ^ 0x50E0010B4E060102LL)
       - (((v113 - 0x182F91D9DBF688E5LL) >> 8) & 0x3FFDE963F3FDFALL);
  LODWORD(v114) = v114
                + (((v114 - 0x690F92E529FC89E7LL) >> 5) ^ 0xF77FA6FF)
                + (((v114 - 0x690F92E529FC89E7LL) >> 4) & 0xEEFF4DFE)
                + 1;
  int v115 = v114 - ((2 * v114 - 1123574222) & 0xDB981C58) + 1280302405;
  int v116 = (4 * (v112 - ((v68 + 289550438) & 0x19C54F94)) + 370081780) ^ 0xB38A9F28;
  LODWORD(v6_Block_object_dispose(va, 8) = ((v116 - ((2 * v116) & 0xFD9B9D00) + 2127416963) & 0x9A6FB9D0 ^ 0x1A631040)
               + ((v116 - ((2 * v116) & 0xFD9B9D00) + 2127416963) & 0x98650150 ^ 0x8414071F)
               - (((v116 - ((2 * v116) & 0xFD9B9D00) + 2127416963) & 0x9A6FB9D0 ^ 0x1A631040) & 0x98650150);
  int v117 = v68 ^ 0xBC5915DF;
  HIDWORD(v152) = v68 & 0xB896BCDE ^ 0x86A800;
  LODWORD(v6_Block_object_dispose(va, 8) = (4 * (LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x550]))) ^ 0x58D890F0;
  LODWORD(v152) = (((v68 - ((2 * v68) & 0xD8107230) - 335005415) & 0x9A6FB9D0 ^ 0x82781C0)
                 + ((v68 - ((2 * v68) & 0xD8107230) - 335005415) & 0x880189C0 ^ 0x84800E09)
                 - (((v68 - ((2 * v68) & 0xD8107230) - 335005415) & 0x9A6FB9D0 ^ 0x82781C0) & 0x880189C0)) & 0xFAFFFFD0;
  LODWORD(v6_Block_object_dispose(va, 8) = (((4 * LODWORD(STACK[0x4E0])) ^ 0xD3015D7C)
                - ((2 * ((4 * LODWORD(STACK[0x4E0])) ^ 0xD3015D7C)) & 0xECD5F800)
                + 1986722816) & 0x9A6FB9D0 ^ 0x904ABBC0;
  LODWORD(v114) = (4 * (v114 - ((2 * v114 + 1023909426) & 0x2F893488)) + 1495377268) ^ 0xDF126910;
  LODWORD(v114) = (v114 - ((2 * v114) & 0xCE12C90) - 2039441848) & 0x9A6FB9D0 ^ 0x184420D0;
  LODWORD(v114) = (v114 - ((2 * v114) & 0x14CF53A0) - 361239560) ^ 0x6D36FE2;
  int v118 = (v114 | 0xDBE14A8D) - (v114 | 0x241EB572) + 605992306;
  LODWORD(a55) = (((2 * v68) | 0x9C11120C) - v68 - 1309182214) ^ LODWORD(STACK[0x2AC]);
  unsigned int v119 = (4 * (LODWORD(STACK[0x530]) ^ LODWORD(STACK[0x350]) ^ LODWORD(STACK[0x5C8]))) ^ 0xC87D899C;
  unsigned int v120 = v119 - ((2 * v119) & 0xCB4B2040) - 442134493;
  LODWORD(v6_Block_object_dispose(va, 8) = (((4 * LODWORD(STACK[0x350])) ^ 0xC17CDFFC)
                - ((2 * ((4 * LODWORD(STACK[0x350])) ^ 0xC17CDFFC)) & 0x47A48338)
                - 1546501729) & 0x9A6FB9D0 ^ 0x180B8000;
  LODWORD(a54) = LODWORD(STACK[0x360]) ^ (((2 * v68) & 0x209340A0) - v68 + 1798725540);
  LODWORD(v6_Block_object_dispose(va, 8) = LODWORD(STACK[0x5B8]) ^ LODWORD(STACK[0x620]) ^ LODWORD(STACK[0x4A0]);
  LODWORD(v106) = (v68 & 0x95B91442 ^ 0x80981040 | 0xBE1B8D49)
                - (v68 & 0x95B91442 ^ 0x80981040 | 0x41E472B6)
                + 1105490614;
  LODWORD(v106) = ((v106 & 0xAEB0E909 ^ 0x24A0E308) + (v106 ^ 0xDA1B0801) - ((v106 ^ 0xDA1B0801) & 0xAEB0EB09)) ^ 0xDEB07A03 | v68 & 0x6A46EBBD ^ 0x400629BD;
  LODWORD(v106) = v106 - ((2 * v106) & 0x8C4A38EE) + 1176837239;
  int v121 = ((4 * v106) ^ 0x189471DC) - ((2 * ((4 * v106) ^ 0x189471DC)) & 0x6AF37990) - 1250313015;
  unsigned int v122 = v121 & 0x9A6FB9D0 ^ 0xEE85E24B;
  LODWORD(v6_Block_object_dispose(va, 8) = v68 & 0x10 ^ 0xFFDF2673;
  BOOL v123 = (v121 & ((_DWORD)v68 + 2152861)) == 0;
  int v124 = (2 * v121) & 0x34D83100 ^ 0x20D03100;
  LODWORD(v106) = ((v106 & 0xFFFFFFEF ^ 0x9DE36AA | 0xC516431F)
                 - (v106 & 0xFFFFFFEF ^ 0x9DE36AA | 0x3AE9BCE0)
                 + 988396768) ^ 0xC26B78C1;
  int v125 = ((2 * v106) & 0xDC6FE2E8) - v106 + 298323595;
  int v126 = v68 + 1392368575;
  int v127 = 1388062853 - v68;
  if (v123) {
    int v127 = v126;
  }
  HIDWORD(v151) = v120 & 0x9A6FB9D0;
  unsigned int v128 = (((4 * LODWORD(STACK[0x480])) ^ 0xB9A21BB0)
        - 2 * (((4 * LODWORD(STACK[0x480])) ^ 0xB9A21BB0) & 0x6253939C ^ (4 * LODWORD(STACK[0x480])) & 8)
        + 1649644438) & 0x9A6FB9D0 ^ 0x126B0110;
  unsigned int v129 = (((2 * v128) & 0x24CE01A0) - v128 - 871843574) ^ 0x8800A98A;
  unsigned int v130 = LODWORD(STACK[0x4A0]) ^ LODWORD(STACK[0x620]) ^ LODWORD(STACK[0x640]) ^ (v129
                                                                                - ((2 * v129) & 0xEECF4780)
                                                                                + 2003280839) ^ v125 ^ (v124 + v122 + v127 - ((2 * (v124 + v122 + v127) + 476923558) & 0x31F49AF2) - 953093940);
  LODWORD(STACK[0x35C]) = LODWORD(STACK[0x308]) ^ 0x7055BBDB;
  LODWORD(STACK[0x364]) = LODWORD(STACK[0x310]) ^ 0x3BF272A0;
  LODWORD(v151) = v80 & 0xFFFFFFFC;
  HIDWORD(a52) = v117 & 0xB896BCD0;
  int v131 = v130 ^ v65 ^ v86 ^ v85 ^ v101 ^ v115 ^ v118;
  LODWORD(STACK[0x2AC]) = v131;
  LODWORD(STACK[0x360]) = v131 ^ 0xC185B9A8;
  unsigned int v132 = LODWORD(STACK[0x328]) ^ 0xFFFFFFF6;
  int v133 = LODWORD(STACK[0x210]) ^ 0x27;
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x4C0]) ^ 0xA7F6214A;
  uint64_t v134 = LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x318]) ^ 0x5BE53523u;
  LODWORD(STACK[0x5E8]) = LODWORD(STACK[0x560]) ^ 0xB6AF9C77;
  LODWORD(STACK[0x470]) = v69;
  LODWORD(STACK[0x620]) = v69 ^ 0x58C5DC61;
  unint64_t v135 = STACK[0xB28];
  unint64_t v136 = STACK[0x5B0];
  int v137 = (STACK[0x5B0] - 456) | 0x118;
  LODWORD(STACK[0x5B8]) = v137;
  int v138 = v137 ^ 0x518;
  int v139 = (2 * ((v138 & STACK[0x5D0]) - ((2 * (v138 & STACK[0x5D0])) & 0x6931B018)) + 1764864024) ^ 0x6931B018;
  unsigned int v140 = (v139 - ((2 * v139) & 0xF7E84164) + 2079596723) ^ 0xF5073499;
  unsigned int v141 = ((v140 ^ 0x8EF3142A) & STACK[0x640]) - ((2 * ((v140 ^ 0x8EF3142A) & STACK[0x640])) & 8) + 388;
  unsigned int v142 = ((v141 & 0x17 ^ 0xB7B58C17) - (v141 & 0x17) + (v141 ^ 0xA0)) ^ 0xA15DDA9E;
  unsigned int v143 = ((((2 * v142) | 0xCE93165E) - v142 - 1732873007) ^ 0x71A1DD82) >> STACK[0x5E0];
  unsigned int v144 = (((v143 - ((2 * v143) & 0xA4) - 42) ^ 3) - 4) ^ 0xFFFFFFD1 | (((v140 ^ 0x2A) << v132)
                                                                     + (~(2 * ((v140 ^ 0x2A) << v132)) | 0x11)
                                                                     - 8) ^ 0xFFFFFFF7;
  LOBYTE(v140) = v144 - ((2 * v144) & 0x26);
  unsigned int v145 = (2 * ((STACK[0x5D8] & 0x1AB4AEAE) - ((2 * (STACK[0x5D8] & 0x1AB4AEAE)) & 0x5ED12762)) - 556718238) ^ 0xDED12762;
  unsigned int v146 = (v145 - ((2 * v145) & 0x6DC362FC) - 1226722946) ^ 0xAC551FD0;
  unsigned int v147 = (((v146 & STACK[0x5E8]) - 1020981579 - ((2 * (v146 & STACK[0x5E8])) & 0x864A1D6A)) ^ 0xC3250EB5) >> LODWORD(STACK[0x650]);
  unsigned int v148 = (((v146 & STACK[0x620]) - 1461922502 - ((2 * (v146 & STACK[0x620])) & 0x51B9AA74)) ^ 0xA8DCD53A) << LODWORD(STACK[0x648]);
  uint64_t v149 = 4LL * (v133 ^ (v140 + 19));
  *(_DWORD *)(STACK[0xB00] + v149) = LODWORD(STACK[0x5C0]) ^ LODWORD(STACK[0x5C8]) ^ (v147
                                                                                    + 1307718804
                                                                                    + (~(2 * v147) | 0x641B96D9)) ^ (v148 - ((2 * v148) & 0x15B211FC) - 1965487874) ^ 0xE9C871E4;
  *(_DWORD *)(v135 + v149) = v134 ^ 0x4A972FF9;
  return ((uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + (int)((7 * (((v138 - 184077951 - ((2 * v138 + 2) & 0xEA0E6932) + 793) ^ 0xF5073400) < 0x100)) ^ v136)) - 8))( v134,  4212237198LL,  &off_10090DDE0,  v149,  164LL,  4110889345LL,  3738249058LL,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           v151,
           a54,
           a55,
           v152);
}

#error "1005A0638: too big function (funcsize=0)"
uint64_t sub_1005B4E4C(uint64_t a1, unint64_t a2)
{
  int v2;
  uint64_t v3;
  STACK[0x618] = a2;
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v3 + 8LL * v2))( 1760661928LL,  0xBFAF7BFAFFFE3FDFLL,  0x7F5EF7F5FFFC7FBELL,  0x405084050001C021LL);
}

void sub_1005B4F48()
{
}

uint64_t sub_1005B4F50(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t))(*(void *)(v4
                                                                                 + 8LL
                                                                                 * ((((48 * (v3 ^ 0xD4) - 57) == v2)
                                                                                   * (v1
                                                                                    + ((v3 + 134217362) | 0x4B0A501)
                                                                                    + 1530)) ^ v3))
                                                                     - 12LL))( a1,  STACK[0x618],  4294924393LL);
}

uint64_t sub_1005B4FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  unint64_t v5 = STACK[0x790];
  STACK[0x870] += 16LL;
  BOOL v6 = ((a3 + 11) & 0xF) != (((a3 + 11) << ((((v3 - 41) & 0xCA) - 91) ^ 0x66)) & 0x14);
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t))(*(void *)(v4 + 8LL * (v6 | (16 * v6) | v3))
                                                                     - 12LL))( a1,  a2,  v5);
}

void sub_1005B5040()
{
}

uint64_t sub_1005B5048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = (_OWORD *)((char *)&STACK[0xB80] + v4);
  STACK[0x658] = (unint64_t)v6;
  *BOOL v6 = xmmword_10072D950;
  uint64_t v7 = a3 + 116370903;
  unsigned int v8 = -1263679611
     * (((v7 + ((v3 + 1133534020) ^ 0xF9105082)) ^ *(_DWORD *)(qword_1009C72B8
                                                             + (int)(dword_1009C74C0 & ((v3 + 1133534020) ^ 0xEA60CAFB)))) & 0x7FFFFFFF);
  *((_BYTE *)&STACK[0x15D0] + STACK[0xAA0] + ((v3 + 1133534020) ^ 0xFFFFFFFFF9105082LL) + 116370903) = byte_100757960[(((v3 + 68) ^ 0x82) - 41) & 0xF | (16 * ((-1263679611 * (v8 ^ HIWORD(v8))) >> 24))] ^ *(_BYTE *)(v7 + ((v3 + 1133534020) ^ 0xFFFFFFFFF9105082LL)) ^ (-123 * (v8 ^ BYTE2(v8)));
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((v3 + 1133534020) ^ 0x1BE)) - 8LL))();
}

void sub_1005B5160()
{
}

uint64_t sub_1005B5168()
{
  STACK[0xAA0] = v2 + 32;
  STACK[0xB30] = v0;
  STACK[0xB38] = v3;
  STACK[0xB50] = v0;
  STACK[0xB40] = v0;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (v1 ^ (28 * (STACK[0x658] != v0)))) - 4LL))();
}

uint64_t sub_1005B51E4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8LL
                                                              * ((27
                                                                * (((v1 == 0) ^ (((v2 + 80) ^ 0x55) - 45)) & 1)) ^ (v2 + 80))))( a1,  STACK[0x618]);
}

uint64_t sub_1005B521C(uint64_t a1)
{
  uint64_t v5 = (char *)&STACK[0x15D0] + v2;
  char *v5 = *v1;
  v5[1] = v1[1];
  void v5[2] = v1[2];
  v5[3] = v1[3];
  v5[4] = v1[4];
  v5[5] = v1[5];
  void v5[6] = v1[6];
  v5[7] = v1[7];
  v5[8] = v1[8];
  void v5[9] = v1[9];
  v5[10] = v1[10];
  v5[11] = v1[11];
  v5[12] = v1[12];
  v5[13] = v1[13];
  v5[14] = v1[14];
  char v6 = v1[15];
  STACK[0x658] = (unint64_t)v5;
  char v5[15] = v6;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v4
                                                              + 8LL
                                                              * ((27
                                                                * (((v1 == 0LL) ^ (((119 * (v3 ^ 0xB6)) ^ 0x55)
                                                                                                  - 45)) & 1)) ^ (119 * (v3 ^ 0x5B6)))))( a1,  STACK[0x618]);
}

uint64_t sub_1005B52F0@<X0>(char a1@<W8>)
{
  unsigned int v4 = ((a1 & 0xB ^ 0xAA7DD60A) & 0x3F8 ^ 0x310309)
     + v1
     + 96
     + ((((v1 - 1101) | 0x420) + 2086) & (a1 & 0xB ^ 0xAA7DD60A | a1 & 4) ^ 0xA50ED850);
  BOOL v6 = v2 == -381926907 || v4 != -1522540010;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((56 * v6) ^ v1)) - 4LL))();
}

uint64_t sub_1005B537C()
{
  LODWORD(STACK[0x650]) = v1;
  LODWORD(STACK[0x3CC]) = v0;
  STACK[0xB48] = 0LL;
  unsigned int v4 = malloc(0x408uLL);
  STACK[0xB58] = (unint64_t)v4;
  uint64_t v5 = malloc(0x408uLL);
  STACK[0xB48] = (unint64_t)v5;
  if (v4) {
    BOOL v7 = v5 == 0LL;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  return ((uint64_t (*)(void *, uint64_t))(*(void *)(v3 + 8LL * ((527 * v8) ^ v2))
                                                  - ((v2 + 554043650) | 0x605020u)
                                                  + 560356824LL))( v5,  v6);
}

#error "1005B5400: too big function (funcsize=0)"
void sub_1005C58D8()
{
  JUMPOUT(0x1005C5298LL);
}

uint64_t sub_1005C5928(uint64_t a1, unint64_t a2, int a3)
{
  STACK[0xAA0] = v8 + ((v9 - 623) ^ 0xFFFFFFFFFFFFFE22LL);
  uint64_t v13 = (v9 + 137404431) | 0x4800115u;
  STACK[0x870] = (v13 ^ 0xFFFFFFFFF34F5AA5LL) + v6;
  if (v11 == v10) {
    unint64_t v14 = v5 + v7;
  }
  else {
    unint64_t v14 = 0LL;
  }
  LODWORD(STACK[0x5E8]) = STACK[0x76C];
  unint64_t v15 = STACK[0x790];
  STACK[0x618] = a2;
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(v12
                                     + 8LL
                                     * (int)(((v15 != 0) * (((v13 - 212902672) ^ 0x240) + 1936)) ^ (v13 - 212902672)))
                         - 55 * (((_DWORD)v13 - 212902672) ^ 0x240u)
                         + 271LL);
  LODWORD(STACK[0x5B8]) = a3;
  STACK[0x5D8] = v14;
  return v3();
}

uint64_t sub_1005C5978( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = LODWORD(STACK[0x3B0]) ^ LODWORD(STACK[0x3D8]) ^ LODWORD(STACK[0x210]) ^ 0x4528317F;
  int v76 = LODWORD(STACK[0x5D0]) ^ LODWORD(STACK[0x3D8]) ^ LODWORD(STACK[0x210]) ^ 0x62172C66;
  BOOL v77 = (STACK[0x510] & 1) == 0;
  if ((STACK[0x510] & 1) != 0) {
    int v78 = STACK[0x368];
  }
  else {
    int v78 = STACK[0x374];
  }
  int v79 = STACK[0x398];
  if ((STACK[0x510] & 1) != 0) {
    int v79 = STACK[0x35C];
  }
  LODWORD(STACK[0x5D0]) = v79;
  if (v77) {
    int v80 = STACK[0x36C];
  }
  else {
    int v80 = v75;
  }
  if (v77) {
    int v81 = v76;
  }
  else {
    int v81 = STACK[0x378];
  }
  if (v77) {
    int v82 = v75;
  }
  else {
    int v82 = v76;
  }
  if (v77) {
    int v83 = STACK[0x364];
  }
  else {
    int v83 = STACK[0x360];
  }
  if (v77) {
    int v84 = STACK[0x394];
  }
  else {
    int v84 = STACK[0x390];
  }
  BOOL v85 = LODWORD(STACK[0x640]) == -1965538105;
  int v86 = STACK[0x590];
  if (LODWORD(STACK[0x640]) == -1965538105) {
    int v86 = STACK[0x530];
  }
  LODWORD(STACK[0x374]) = v86;
  int v87 = STACK[0x430];
  if (v85) {
    int v87 = STACK[0x428];
  }
  LODWORD(STACK[0x378]) = v87;
  int v88 = STACK[0x500];
  if (v85) {
    int v88 = STACK[0x4C0];
  }
  LODWORD(STACK[0x36C]) = v88;
  int v89 = STACK[0x460];
  if (!v85) {
    int v89 = STACK[0x458];
  }
  LODWORD(STACK[0x390]) = v89;
  int v90 = STACK[0x450];
  if (!v85) {
    int v90 = STACK[0x448];
  }
  LODWORD(STACK[0x4C0]) = v90;
  int v91 = STACK[0x440];
  if (!v85) {
    int v91 = STACK[0x438];
  }
  LODWORD(STACK[0x400]) = v91;
  int v92 = STACK[0x580];
  LODWORD(STACK[0x430]) = v78;
  if (v85) {
    int v92 = v78;
  }
  LODWORD(STACK[0x2AC]) = v92;
  LODWORD(STACK[0x648]) = v80;
  LODWORD(STACK[0x440]) = v81;
  if (v85) {
    int v93 = v81;
  }
  else {
    int v93 = v80;
  }
  LODWORD(STACK[0x530]) = v93;
  int v94 = STACK[0x550];
  LODWORD(STACK[0x364]) = v82;
  if (!v85) {
    int v94 = v82;
  }
  LODWORD(STACK[0x590]) = v94;
  int v95 = STACK[0x620];
  LODWORD(STACK[0x368]) = v83;
  if (v85) {
    int v95 = v83;
  }
  LODWORD(STACK[0x398]) = v95;
  int v96 = STACK[0x560];
  LODWORD(STACK[0x3B0]) = v84;
  if (!v85) {
    int v96 = v84;
  }
  LODWORD(STACK[0x394]) = v96;
  if ((STACK[0x3D0] & 1) != 0) {
    int v97 = STACK[0x28C];
  }
  else {
    int v97 = STACK[0x288];
  }
  if ((STACK[0x3D0] & 1) != 0) {
    int v98 = STACK[0x268];
  }
  else {
    int v98 = STACK[0x260];
  }
  if ((STACK[0x3D0] & 1) != 0) {
    int v99 = STACK[0x2A8];
  }
  else {
    int v99 = STACK[0x270];
  }
  int v100 = STACK[0x248];
  if ((STACK[0x3D0] & 1) == 0) {
    int v100 = STACK[0x244];
  }
  LODWORD(STACK[0x460]) = v100;
  BOOL v101 = LODWORD(STACK[0x5E8]) == 413541838;
  int v102 = STACK[0x410];
  if (LODWORD(STACK[0x5E8]) != 413541838) {
    int v102 = STACK[0x40C];
  }
  LODWORD(STACK[0x428]) = v102;
  int v103 = STACK[0x224];
  if (!v101) {
    int v103 = a73;
  }
  LODWORD(STACK[0x448]) = v103;
  int v104 = STACK[0x218];
  if (!v101) {
    int v104 = a71;
  }
  LODWORD(STACK[0x450]) = v104;
  int v105 = STACK[0x3E0];
  if (v101) {
    int v105 = STACK[0x3D4];
  }
  LODWORD(STACK[0x438]) = v105;
  int v106 = STACK[0x3BC];
  if (!v101) {
    int v106 = STACK[0x228];
  }
  LODWORD(STACK[0x28C]) = v106;
  LODWORD(STACK[0x500]) = LODWORD(STACK[0x5B0]) ^ 0x8FC9A2DE;
  int v107 = STACK[0x3F0];
  LODWORD(STACK[0x3D4]) = v97;
  if (v101) {
    int v107 = v97;
  }
  LODWORD(STACK[0x2A8]) = v107;
  LODWORD(STACK[0x3E0]) = v98;
  LODWORD(STACK[0x3BC]) = v99;
  if (v101) {
    int v108 = v98;
  }
  else {
    int v108 = v99;
  }
  LODWORD(STACK[0x458]) = v108;
  unint64_t v109 = v74 - 1097366281LL + ((unint64_t)(v74 < 0x41687B09) << 32);
  *(void *)(STACK[0xB40] + 8 * v109) = *(void *)(STACK[0xB50] + 8 * v109) ^ 0xC9C9C9C9C9C9C9C9LL;
  BOOL v110 = v74 - 1097366280 >= STACK[0x650];
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v110 | (2 * v110)) ^ v73)) - 8))();
}

void sub_1005C6200()
{
}

uint64_t sub_1005C6234()
{
  if ((STACK[0x510] & 1) != 0) {
    int v1 = STACK[0x380];
  }
  else {
    int v1 = STACK[0x3A0];
  }
  BOOL v2 = LODWORD(STACK[0x640]) == -1965538105;
  int v3 = STACK[0x470];
  if (LODWORD(STACK[0x640]) != -1965538105) {
    int v3 = STACK[0x468];
  }
  LODWORD(STACK[0x468]) = v3;
  int v4 = STACK[0x648];
  if (!v2) {
    int v4 = STACK[0x440];
  }
  LODWORD(STACK[0x510]) = v4;
  int v5 = STACK[0x4F0];
  if (v2) {
    int v5 = STACK[0x4E0];
  }
  LODWORD(STACK[0x4E0]) = v5;
  int v6 = STACK[0x5D0];
  LODWORD(STACK[0x380]) = v1;
  if (!v2) {
    int v6 = v1;
  }
  LODWORD(STACK[0x470]) = v6;
  int v7 = STACK[0x4D0];
  if (!v2) {
    int v7 = STACK[0x4B0];
  }
  LODWORD(STACK[0x4F0]) = v7;
  int v8 = STACK[0x4A0];
  if (!v2) {
    int v8 = STACK[0x498];
  }
  LODWORD(STACK[0x40C]) = v8;
  int v9 = STACK[0x480];
  if (!v2) {
    int v9 = STACK[0x47C];
  }
  LODWORD(STACK[0x410]) = v9;
  LODWORD(STACK[0x648]) = LODWORD(STACK[0x284]) - LODWORD(STACK[0x278]);
  if ((STACK[0x3D0] & 1) != 0) {
    int v10 = STACK[0x2C4];
  }
  else {
    int v10 = STACK[0x340];
  }
  BOOL v11 = LODWORD(STACK[0x5E8]) == 413541838;
  int v12 = STACK[0x2A4];
  if (LODWORD(STACK[0x5E8]) == 413541838) {
    int v12 = STACK[0x294];
  }
  LODWORD(STACK[0x2A4]) = v12;
  int v13 = STACK[0x418];
  if (!v11) {
    int v13 = STACK[0x29C];
  }
  LODWORD(STACK[0x288]) = v13;
  int v14 = *(unsigned __int8 *)(STACK[0x658]
                           + ((*(_BYTE *)(STACK[0x658]
                                        + ((*(_BYTE *)(STACK[0x658] + ((*(_BYTE *)(STACK[0x658] + 1) + 10) & 0xF)) + 9) & 0xF))
                             + 6) & 0xF))
      + 11;
  int v15 = ((v14 & 0xF) - ((2 * v14) & 0x1A) + 109) ^ 0x6D;
  unsigned int v16 = (v15 ^ 0xDDFBDFFD) + ((2 * v15) & 0x1FA) - 917308935;
  int v17 = STACK[0x460];
  LODWORD(STACK[0x4B0]) = v10;
  if (v11) {
    int v17 = v10;
  }
  LODWORD(STACK[0x440]) = v17;
  BOOL v18 = v16 < 0xA74ED9F6;
  if (v16 >= 0xA74ED9F6) {
    BOOL v18 = v16 > 0xA74ED9F7;
  }
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((2033 * !v18) ^ v0)))();
}

uint64_t sub_1005C73B0()
{
  BOOL v2 = LODWORD(STACK[0x640]) == -1965538105;
  int v3 = STACK[0x580];
  if (LODWORD(STACK[0x640]) != -1965538105) {
    int v3 = STACK[0x430];
  }
  LODWORD(STACK[0x284]) = v3;
  int v4 = STACK[0x550];
  if (v2) {
    int v4 = STACK[0x364];
  }
  LODWORD(STACK[0x4D0]) = v4;
  int v5 = STACK[0x5C0];
  if (v2) {
    int v5 = STACK[0x5A0];
  }
  LODWORD(STACK[0x418]) = v5;
  int v6 = STACK[0x560];
  if (v2) {
    int v6 = STACK[0x3B0];
  }
  LODWORD(STACK[0x560]) = v6;
  BOOL v7 = LODWORD(STACK[0x5E8]) == 413541838;
  int v8 = STACK[0x3E0];
  if (LODWORD(STACK[0x5E8]) == 413541838) {
    int v8 = STACK[0x3BC];
  }
  LODWORD(STACK[0x248]) = v8;
  int v9 = STACK[0x3F8];
  if (!v7) {
    int v9 = STACK[0x3E8];
  }
  LODWORD(STACK[0x430]) = v9;
}

uint64_t sub_1005C7838( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v11 = (((v9 - 2084684283) >> 8) ^ 0xFDBFDE5F)
      + v9
      + (((v9 - 2084684283) >> 7) & 0x17FBCBE);
  unsigned int v12 = ((v11 - 2046926938) >> 4) & 0x2EFFF7C;
  unsigned int v13 = v11 + (((v11 - 2046926938) >> 5) ^ 0x66880041) + 1;
  int v14 = v13 - v12 - 2 * ((v13 - v12 + 527851364) & 0x5D62B23F ^ v13 & 2) - 52883039;
  unsigned int v15 = ((2 * ((v14 ^ 0xDD62B23D) - 1879573490)) & 0x5FA6BDFA) + (((v14 ^ 0xDD62B23D) - 1879573490) ^ 0x2FD35EFD);
  unsigned int v16 = (((v15 - 802381565) >> 10) ^ 0x7FB77FDF) + v15 + (((v15 - 802381565) >> 9) & 0x6EFFBE);
  unsigned int v17 = ((v16 + 1349853476) & 0xFEEF6EFC) + v16 + (((v16 + 1349853476) >> 1) ^ 0xFF77B77E);
  unsigned int v18 = v17 - ((2 * v17 - 1577397428) & 0xCD99720A) + 935994027;
  unsigned int v19 = ((2 * ((v18 ^ 0xE6CCB905) + 1287124013)) & 0x52FF7FFE) + (((v18 ^ 0xE6CCB905) + 1287124013) ^ 0x297FBFFF);
  unsigned int v20 = v19 + (((v19 - 696238079) >> 13) ^ 0x440B498) - (((v19 - 696238079) >> 12) & 0xE96CE);
  unsigned int v21 = v20 + (((v20 - 767587479) >> 6) ^ 0xA01A02E9) - (((v20 - 767587479) >> 5) & 0x7CBFA2C) + 2;
  int v22 = v21 - ((2 * v21 + 72028412) & 0x18B62862) - 1098867537;
  unsigned int v23 = ((2 * ((v22 ^ 0x8C5B1431) - 1282870125)) & 0x5FB3EFF6) + (((v22 ^ 0x8C5B1431) - 1282870125) ^ 0xAFD9F7FB);
  unsigned int v24 = (((v23 + 1344669701) >> 8) ^ 0xBD5AFDBC) + v23 + (((v23 + 1344669701) >> 7) & 0xB5FB78);
  unsigned int v25 = (((v24 - 1832187319) >> 2) ^ 0x9BF3DBFE) + v24 + (((v24 - 1832187319) >> 1) & 0x37E7B7FC);
  int v26 = v25 - ((2 * v25 + 766401686) & 0x337DC5B6) - 1869213402;
  unsigned int v27 = ((2 * ((v26 ^ 0x99BEE2DB) + 707258702)) & 0xCFED7BBC) + (((v26 ^ 0x99BEE2DB) + 707258702) ^ 0xE7F6BDDE);
  unsigned int v28 = (((v27 + 403259938) >> 13) ^ 0x7E7F8D7E) + v27 + (((v27 + 403259938) >> 12) & 0xF1AFC);
  unsigned int v29 = (((v28 - 1719028572) >> 3) ^ 0x9CFDF6FC) + v28 + (((v28 - 1719028572) >> 2) & 0x39FBEDF8);
  unsigned int v30 = v29 - ((2 * v29 + 957840208) & 0x3FD38F52) - 1670019759;
  unsigned int v31 = (v30 ^ 0x14669123) + ((v30 >> 11) ^ 0xF0A3CD93) + ((v30 >> 10) & 0x3D7D7C ^ 0xFFFAE6DB) + 257867456;
  unsigned int v32 = (((((2 * v31) & 0xD7F36FF4) + (v31 ^ 0xEBF9B7FA) + 335955974) >> 5) ^ 0xBE63FF5D)
      + ((2 * v31) & 0xD7F36FF4)
      + (v31 ^ 0xEBF9B7FA)
      + (((((2 * v31) & 0xD7F36FF4) + (v31 ^ 0xEBF9B7FA) + 335955974) >> 4) & 0xCC7FEBA);
  unsigned int v33 = v32 - ((2 * v32 + 725913938) & 0x4D963F76) + 2087544932;
  unsigned int v34 = (v33 ^ 0x1297CB43) + ((v33 >> 12) ^ 0xC6813D7C) + ((v33 >> 11) & 0x1FD7FE ^ 0xFFFDAD07) + 964684801;
  unsigned int v35 = (((((2 * v34) & 0xF17FB9F8) + (v34 ^ 0x78BFDCFC) - 2025839868) >> 7) ^ 0x7F697FFE)
      + ((2 * v34) & 0xF17FB9F8)
      + (v34 ^ 0x78BFDCFC)
      + (((((2 * v34) & 0xF17FB9F8) + (v34 ^ 0x78BFDCFC) - 2025839868) >> 6) & 0x2D2FFFC);
  int v36 = v35 - ((2 * v35 + 263013900) & 0x225F375A) - 1727643981;
  unsigned int v37 = ((2 * ((v36 ^ 0x912F9BAD) - 2045107421)) & 0xFFFAF9FE) + (((v36 ^ 0x912F9BAD) - 2045107421) ^ 0xFFFD7CFF);
  unsigned int v38 = (((v37 + 164609) >> 11) ^ 0xDFEFBB77) + v37 + (((v37 + 164609) >> 10) & 0x1F76EE);
  unsigned int v39 = v38 + (((v38 + 538101642) >> 8) ^ 0x190808C0) - (((v38 + 538101642) >> 7) & 0x1EFEE7E) + 1;
  unsigned int v40 = v39 - ((2 * v39 + 236289426) & 0x59EDD35A) + 872523894;
  unsigned int v41 = (v40 ^ 0x166667FE) + ((v40 >> 8) ^ 0x87947667) + 2021519361 + ((2 * (v40 >> 8)) & 0xFBDFFE ^ 0xFFD73331);
  unsigned int v42 = (((((2 * v41) & 0xDF7F2FFA) + (v41 ^ 0x6FBF97FD) - 1874827261) >> 8) ^ 0xFFF3DFFA)
      + ((2 * v41) & 0xDF7F2FFA)
      + (v41 ^ 0x6FBF97FD)
      + (((((2 * v41) & 0xDF7F2FFA) + (v41 ^ 0x6FBF97FD) - 1874827261) >> 7) & 0x1E7BFF4);
  unsigned int v43 = v22 ^ a4 ^ v33 ^ (v42 - ((2 * v42 + 546902034) & 0x9194C662) + 1494674234);
  int v44 = (v43 & 5 ^ 0x4C357417) - (v43 & 2);
  int v45 = (((v43 ^ 3) + 1) & 7) - ((2 * ((v43 ^ 3) + 1)) & 0xA) - 1856789971;
  LODWORD(STACK[0x3A0]) = v44;
  unsigned int v46 = v44 ^ 0xB7B51AF2;
  if (v46 == -75469087) {
    int v47 = 0;
  }
  else {
    int v47 = 255;
  }
  LODWORD(STACK[0x3E0]) = v45;
  STACK[0x3B0] = v45 ^ 0x9153A22D;
  LODWORD(STACK[0x3BC]) = v46;
  unsigned int v48 = (v47 << (v45 ^ 0x2D)) - ((2 * (v47 << (v45 ^ 0x2D))) & 0xD686994A) - 347911003;
  char v49 = v48 ^ 0x5A;
  if (v46 == -75469087) {
    char v49 = 0;
  }
  BOOL v50 = LODWORD(STACK[0x640]) == -1965538105;
  int v51 = STACK[0x5D0];
  if (LODWORD(STACK[0x640]) == -1965538105) {
    int v51 = STACK[0x380];
  }
  LODWORD(STACK[0x4A0]) = v51;
  int v52 = STACK[0x620];
  if (!v50) {
    int v52 = STACK[0x368];
  }
  LODWORD(STACK[0x480]) = v52;
  int v53 = STACK[0x460];
  if (LODWORD(STACK[0x5E8]) != 413541838) {
    int v53 = STACK[0x4B0];
  }
  LODWORD(STACK[0x244]) = v53;
  int v54 = v18 ^ v8 ^ v30;
  unsigned int v55 = v14 ^ a8 ^ v26 ^ v36;
  unsigned int v56 = v54 ^ v40;
  unsigned int v57 = ((v55 & 0xFFFFFF80 ^ 0xCA9EA880)
       + (v55 & 0xCE36E180 ^ 0x4204155)
       - ((v55 & 0xFFFFFF80 ^ 0xCA9EA880) & 0xCE36E180)) ^ 0x4F5EE1E4;
  LODWORD(STACK[0x5D0]) = v43;
  unsigned int v58 = ((v43 & 0x9AA54B28 ^ 0x1A254029 | v43 & 0x655AB4D0) - 1) ^ 0xE6EC791B;
  LODWORD(STACK[0x550]) = (v58 | 0xB2528DC5) - (v58 | 0x4DAD723A);
  unsigned int v59 = ((v48 & 0x51 ^ 0xC26C8710) + (v48 & 0xAE ^ 0x29) - 1) ^ 0x88FD53E8;
  unsigned int v60 = (v59 - ((2 * v59) & 0x8002A438) + 1413960220) ^ 0x1ED68669;
  LODWORD(STACK[0x498]) = (33686018 * v60) & 0x99582814;
  LODWORD(STACK[0x3E8]) = 16843009 * v60 - 861137910;
  unsigned int v61 = ((1593835520 * v60 - ((-1107296256 * v60) & 0xAC000000) - 693530329) ^ 0xD6A99127) & (v56 ^ 0x36BEF6FF);
  LODWORD(STACK[0x460]) = v61 - ((2 * v61) & 0x5274023E) + 691667231;
  LODWORD(STACK[0x4B0]) = v55 ^ 0x43E3A17A;
  int v62 = ((v49 & (v55 ^ 0x7A)) - ((2 * (v49 & (v55 ^ 0x7A))) & 0x12) - 119) ^ 0x5C;
  LODWORD(STACK[0x368]) = ((2 * v62) | 0x98BDF686) - v62 - 1281293123;
  unsigned int v63 = (((2 * ((v55 ^ BYTE1(v55) ^ BYTE2(v55)) ^ 0x9F)) | 0x34DE3896)
  unsigned int v64 = (((2 * v63) & 0x2EF7AE0) - v63 - 24624497) ^ HIBYTE(v55) ^ 0xFC807BEE;
  unsigned int v65 = 16843009 * v64 - ((33686018 * v64) & 0xFA316944) - 48712542;
  unsigned int v66 = 0xE668D621 % STACK[0x650];
  LODWORD(STACK[0x5A0]) = v56;
  unsigned int v67 = (((2 * ((v56 ^ BYTE1(v56) ^ BYTE2(v56)) ^ 0x42888AC)) | 0x2577CCAE)
  unint64_t v68 = (*(void *)(STACK[0xB40] + 8LL * v66) ^ 0xC9C9C9C9C9C9C9C9LL) + 2103980986;
  unint64_t v69 = (*(void *)(STACK[0xB40]
                   + 8
                   * (((v68 ^ 0xBF7E3F7BEFDBCFEFLL) + 0x4081C08410243011LL + ((2 * v68) & 0x7EFC7EF7DFB79FDELL))
                    % STACK[0x570])) ^ 0xC9C9C9C9C9C9C9C9LL)
      + 815561086;
  unint64_t v70 = (*(void *)(STACK[0xB40]
                   + 8
                   * (((v69 ^ 0xEFFE7F67FFFBE5DELL) + 0x1001809800041A22LL + ((2 * v69) & 0xDFFCFECFFFF7CBBCLL))
                    % STACK[0x570])) ^ 0xC9C9C9C9C9C9C9C9LL)
      + 925802721;
  uint64_t v71 = *(void *)(STACK[0xB40]
                  + 8
                  * (((v70 ^ 0xE4C777F5FEF8DDCBLL) + 0x1B38880A01072235LL + ((2 * v70) & 0xC98EEFEBFDF1BB96LL))
                   % STACK[0x570]));
  int v72 = 16843009 * v67 - ((33686018 * v67) & 0x6FA196FA) - 1211053187;
  uint64_t v73 = 2 * v71 - ((4 * v71) & 0x61EAF99B66EC105CLL) - 0x4F0A83324C89F7D2LL;
  LODWORD(v71) = (v71
                + (v73 & 0x9393939393939392LL ^ 0x86C520819B11A223LL)
                + ((2 * v73) & 0x307072727202324LL ^ 0xFEFDFEFCD9DFFFFBLL)
                - 0x4C8A6636101FCADBLL)
               % STACK[0x570];
  unsigned int v74 = ((v71 - ((2 * v71) & 0x41920D94) - 1597438262) ^ 0x1F627E37)
      + 1735043060
      + ((2 * (v71 - ((2 * v71) & 0x41920D94) - 1597438262)) & 0x7F56F1FA ^ 0x41120190);
  LODWORD(STACK[0x580]) = v57;
  LODWORD(STACK[0x47C]) = (2 * v57) & 0xB1589222;
  LODWORD(STACK[0x5C0]) = v55;
  int v75 = v55 & 0x7F ^ 0x70;
  LODWORD(STACK[0x2C4]) = 33686018 * v75;
  LODWORD(STACK[0x380]) = (33686018 * v75) & 0xCA58EF92;
  LODWORD(STACK[0x29C]) = v75;
  LODWORD(STACK[0x360]) = 16843009 * v75 + 1697413065;
  LODWORD(STACK[0x3F8]) = v65;
  LODWORD(STACK[0x364]) = v72;
  LODWORD(STACK[0x620]) = v72 ^ v65;
  BOOL v76 = v74 > 0x271620F2;
  if (v74 < 0x271620F1) {
    BOOL v76 = 1;
  }
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((318 * !v76) ^ v10)))();
}

uint64_t sub_1005C8BD8()
{
  LODWORD(STACK[0x278]) = LODWORD(STACK[0x3A4]) - LODWORD(STACK[0x3A8]);
  int v2 = STACK[0x3F0];
  if (LODWORD(STACK[0x5E8]) != 413541838) {
    int v2 = STACK[0x3D4];
  }
  LODWORD(STACK[0x260]) = v2;
  LODWORD(STACK[0x3F0]) = LODWORD(STACK[0x580]) - 659797667;
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x360]) - LODWORD(STACK[0x380]);
  int v3 = LODWORD(STACK[0x3E8]) - LODWORD(STACK[0x498]);
  LODWORD(STACK[0x3E8]) = v3;
  LODWORD(STACK[0x340]) = v3 ^ LODWORD(STACK[0x368]);
  LODWORD(STACK[0x268]) = LODWORD(STACK[0x364]) ^ 0xAD020C0D;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((1336 * (v1 - 1363646348 >= STACK[0x650])) ^ v0)))();
}

void sub_1005C9364()
{
}

uint64_t sub_1005C93A8(uint64_t a1)
{
  *(_DWORD *)a1 = 1711260689;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(a1 + 56) = 448329679;
  *(void *)(a1 + 64) = 0x4378B8CC4843E522LL;
  *(_DWORD *)(a1 + 72) = 678136159;
  *(_BYTE *)(a1 + _Block_object_dispose(va, 8) = HIBYTE(v4) ^ 0x37;
  *(_BYTE *)(a1 + 9) = (v4 >> (((v3 - 45) & 0xEA) - 114)) ^ (27 * (v3 ^ 0xDD) - 5);
  *(_BYTE *)(a1 + 10) = BYTE1(v4) ^ 0x10;
  *(_BYTE *)(a1 + 11) = v4 ^ 0xC4;
  *(_WORD *)(a1 + 92) = v5;
  *(_DWORD *)(a1 + 96) = v2;
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 112) = 1768032834;
  *(void *)(a1 + 136) = 0LL;
  *(_DWORD *)(a1 + 144) = 150298638;
  *(void *)(a1 + 120) = 0x57F7A3E501E5FAB3LL;
  *(_DWORD *)(a1 + 12_Block_object_dispose(va, 8) = 0;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (v3 ^ (1083 * ((v2 + 1062694304) < 8)))) - 12LL))();
}

uint64_t sub_1005C94C0()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((((0xEFu >> v1) & 1) == (((_BYTE)v0 + 75) & 0x93 ^ 0x82)) * (v0 - 572)) ^ v0))
                            - 12LL))();
}

uint64_t sub_1005C9514@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((a1 - 386) | (16 * (STACK[0xA28] == 0)))) - 4LL))();
}

uint64_t sub_1005C9538()
{
  STACK[0x650] = v4;
  STACK[0x658] = v2;
  *(_DWORD *)(v5 + 4) = dword_100755BB0[v1];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8LL * (((((((v0 - 872625005) & 0x77AF7BDB) - 1135363075) ^ 0x6BBA2F08) >= (int)(((((v0 - 872625005) & 0x77AF7BDB) - 1475453243) ^ 0xEBBAACF2) + 1807360738)) * (((((v0 - 872625005) & 0x77AF7BDB) - 1475453243) & 0x7FFF7E2C) - 1807362008)) ^ (((v0 - 872625005) & 0x77AF7BDB) - 1135363075)))
                                                                                       - 8LL))( 412LL,  824LL,  107LL,  1540LL,  223LL,  1339LL);
}

uint64_t sub_1005C961C()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_1005C9654(int a1)
{
  int v5 = v1 ^ a1;
  char v6 = arc4random();
  *(_BYTE *)(v3 + v2 + 12) = (v6 - 5 - ((v5 - 68) & (2 * v6))) ^ 0x6B;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0
                                                                                                 + (((((((v5 ^ 0x338) - 1001) | 0x20) ^ v4) + (v5 ^ 0x338) - v4 - 831) * (v2 == 15)) ^ v5 ^ 0x338))
                                                                                       - 8))( 412LL,  824LL,  107LL,  1540LL,  223LL,  1339LL);
}

void sub_1005C9744()
{
}

uint64_t sub_1005C974C()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((1131
                                          * (*(_DWORD *)(v2 + 4) == ((144 * (v0 ^ 0x230) + 104350201) ^ (v0 - 390)))) ^ v0))
                            - 4LL))();
}

uint64_t sub_1005C9798()
{
  uint64_t v2 = v0;
  STACK[0xA60] = STACK[0x658];
  STACK[0x6C8] = STACK[0x650];
  unint64_t v3 = STACK[0x870];
  STACK[0x6D8] = (unint64_t)&STACK[0xB80] + STACK[0x870];
  STACK[0x870] = v3 + 16;
  STACK[0x7C8] = 0LL;
  STACK[0x988] = 0LL;
  LODWORD(STACK[0x8BC]) = 150298638;
  STACK[0x6B8] = 1LL;
  BOOL v4 = container_system_group_path_for_identifier(0LL, "systemgroup.com.apple.pisco.suinfo", &STACK[0x6B8]) != 0;
  return (*(uint64_t (**)(void))(v2 + 8LL * ((v4 * (((v1 ^ 0x631) - 1456) ^ 0x1D6)) | v1)))();
}

uint64_t sub_1005C9824()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL * ((7 * (STACK[0x6B8] != ((v0 + 179729955) & 0xF54989DF) - 212LL)) ^ v0))
                            - ((v0 - 861430000) & 0x3358669F ^ 0x686LL)))();
}

uint64_t sub_1005C9888()
{
  size_t v2 = strlen(v0);
  BOOL v3 = malloc( (v1 + 68)
       - 0x3F61B7D60C7BB2FBLL
       + ((v2 << ((v1 - 83) ^ 0x83u)) & 0x7EC36FAC18F763FELL)
       + (v2 ^ 0x3F61B7D60C7BB1FFLL)) != 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1725 * v3) ^ v1)) - 4))();
}

uint64_t sub_1005C9914()
{
  return (*(uint64_t (**)(void))(v0 + 8LL * (((((v2 + 1295) | 0x50) - 1567) * (v1 != 0x3F61B7D60C7BB1FFLL)) ^ v2)))();
}

uint64_t sub_1005C998C@<X0>(unint64_t a1@<X8>)
{
  *(_BYTE *)(v3 + v7 - 0x1FFBDEA8F0D29ADALL) = *(_BYTE *)(v2 + v6 - 0x74E4ABEA472DD201LL);
  unint64_t v9 = v4 - 0x184B1885B45AE6C4LL;
  int v10 = (v1 < a1) ^ (v9 < a1);
  BOOL v11 = v9 < v1;
  if (v10) {
    BOOL v11 = v1 < a1;
  }
  return (*(uint64_t (**)(void))(v5 + 8LL * ((89 * v11) ^ v8)))();
}

uint64_t sub_1005C9A20()
{
  v3[((v4 - 1477) ^ (unint64_t)(v0 + 425)) + v1] = 0;
  free(v2);
  uint64_t v5 = fopen(v3, "rb");
  free(v3);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (((v5 == 0LL) * ((v4 + 10) ^ 0x63B)) ^ v4)) - 8))();
}

uint64_t sub_1005C9AF0()
{
  int v2 = ftell(v0);
  uint64_t v3 = ((v1 + 2) ^ 0x6FBD125D) + v2 - ((2 * v2) & 0xDF7A25D0);
  fseek(v0, 0LL, 0);
  int v4 = malloc(v3 ^ (((2 * v1) ^ 0x7E4u) + 1874660454LL));
  STACK[0x7C8] = (unint64_t)v4;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((2 * (v4 != 0LL)) | ((v4 != 0LL) << 10)) ^ v1)))();
}

uint64_t sub_1005C9B80(void *a1)
{
  LODWORD(STACK[0x650]) = 1282311541;
  LODWORD(STACK[0x648]) = 1132012903;
  int v5 = fread(a1, 1uLL, v3 ^ (v1 + 2199) ^ ((v4 - 176) | 0x610u), v2);
  STACK[0x658] = 0LL;
  unint64_t v6 = ((v5 - ((2 * v5) & 0x24F0BEF0) - 1837605000) & 0xD926C406 ^ 0x80471C011924C003LL)
     + ((v5 - ((2 * v5) & 0x24F0BEF0) - 1837605000) & 0x26D93BF9)
     - 1;
  STACK[0x640] = v6 ^ 0x37CEF88E14720140LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((1306 * ((v6 ^ 0x37CEF88E14720140LL ^ v3) == 0xB789E48FF0938CD2LL)) ^ v4)))();
}

uint64_t sub_1005C9C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x658] = 0LL;
  return (*(uint64_t (**)(void))(a7
                              + 8LL
                              * ((749 * (*v7 == ((((v8 + 124) | 0x80) + 99) ^ ((v8 + 75) | 0x15)))) ^ v8)))();
}

uint64_t sub_1005C9CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x658] = 0LL;
  return (*(uint64_t (**)(void))(a7
                              + 8LL
}

uint64_t sub_1005C9D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

uint64_t sub_1005C9DC4(int a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x658] = 0LL;
  uint64_t v15 = a4 + a2 + v8 + v14 + 0xAD165B6CACB88DLL;
  __int16 v16 = (((*(unsigned __int8 *)v15
  LOWORD(v15) = (v16 - ((2 * v16) & 0xB000) - 10149) ^ 0xD85B | (*(unsigned __int8 *)(v15 + 1)
                                                               - ((2 * *(_BYTE *)(v15 + 1)) & 0xAA)
                                                               - 8363) ^ 0xDF55;
  LODWORD(v15) = (unsigned __int16)(v15 - ((2 * v15) & 0x80E8) + 16500) ^ 0x4074;
  uint64_t v17 = v7 + (v15 ^ v10) + ((v12 + 2962) & (2 * (_DWORD)v15)) - 1054863316;
  return (*(uint64_t (**)(void))(a7
                              + 8LL
                              * (a1 | (4
                                     * (v13 <= v9
                                             + (v17 | ((unint64_t)(v17 < v11) << 32))
                                             + 0xB10EF9A0D079F9ELL
                                             + 181)))))();
}

uint64_t sub_1005C9ED4()
{
  STACK[0x948] = 0xA71347E016010026LL;
  uint64_t v1 = malloc(0x15uLL);
  STACK[0xA28] = (unint64_t)v1;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (int)(((((v0 - 17) ^ (v1 == 0LL)) & 1)
                                             * (((v0 + 883010214) & 0xCB5E56CB) - 1460)) ^ v0))
                            - 4))();
}

uint64_t sub_1005CA104(_BYTE *a1)
{
  *a1 = ((v1 & 0xDD) + 99) ^ 0xB1 ^ ((v2[4] & 0x7F ^ 0xBE)
                                   + ((2 * (v2[4] & 0x7F ^ 0xBE)) & 0xE3 ^ ((((v1 & 0xDD) + 100) | 0x8A) + 52))
                                   - 14);
  a1[1] = v2[12] ^ 0x90;
  a1[2] = v2[13] ^ 0x90;
  a1[3] = v2[14] ^ 0x90;
  a1[4] = v2[15] ^ 0x90;
  a1[5] = v2[16] ^ 0x90;
  a1[6] = v2[17] ^ 0x90;
  a1[7] = v2[18] ^ 0x90;
  a1[8] = v2[19] ^ 0x90;
  a1[9] = v2[20] ^ 0x90;
  a1[10] = v2[21] ^ 0x90;
  a1[11] = v2[22] ^ 0x90;
  a1[12] = v2[23] ^ 0x90;
  a1[13] = v2[24] ^ 0x90;
  a1[14] = v2[25] ^ 0x90;
  a1[15] = v2[26] ^ 0x90;
  a1[16] = v2[27] ^ 0x90;
  a1[17] = v2[8] ^ 0x68;
  a1[18] = v2[9] ^ 0x68;
  a1[19] = v2[10] ^ 0x68;
  a1[20] = v2[11] ^ 0x68;
  unint64_t v4 = STACK[0xA28] + 1;
  STACK[0xAA0] += 32LL;
  LODWORD(STACK[0xACC]) = 0;
  STACK[0xAB8] = v4;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((62 * (v4 == 0)) ^ v1 & 0x486AEFDDu)))();
}

uint64_t sub_1005CA2AC()
{
  STACK[0xAA0] = v0;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * v2) - 8LL))();
}

uint64_t sub_1005CA2DC(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((v1 - 386) | (16 * (a1 == 0)))) - 4LL))();
}

void sub_1005CA2FC(void *a1)
{
}

uint64_t sub_1005CA310()
{
  STACK[0x660] = v2;
  int v3 = (v1 - 535) | 0x206;
  int v4 = LOBYTE(STACK[0xB94]);
  int v5 = (((v1 - 23) | 6) ^ v4 ^ 0x12) - ((2 * (v3 ^ v4 ^ 0x12)) & 0x3C) + 986666782;
  unsigned int v6 = (v5 ^ 0xC530A88C) + 1;
  v5 ^= 0x3ACF571Eu;
  unsigned int v7 = v5 + (v6 ^ 0x7FFFF7BF) + ((2 * v6) & 0xFFFFEF7E) - 2147481535;
  LODWORD(STACK[0xACC]) = -1879803947;
  int v8 = byte_100753FC0[((v7 - ((2 * v7) & 0xD96620BE) + 1823674463) ^ 0x934CEFA1) + v5];
  int v9 = byte_1007353C0[LOBYTE(STACK[0xB9D]) ^ 0x9CLL];
  LOBYTE(__chkstk_darwin(v3, v4) = v4 ^ ((v4 ^ 0xD8) - ((2 * (v4 ^ 0xD8) + 54) & 0xEF) - 110) ^ ((v4 ^ 0xC2)
                                                                           - ((2 * (v4 ^ 0xC2) + 2) & 0x5C)
                                                                           - 81) ^ 0xE4;
  int v10 = (v4 - ((2 * v4 + 52) & 0xF7) + 21);
  int v11 = (v9 - ((2 * v9 + 42) & 0x28) - 55) ^ 0x58;
  unsigned int v12 = (((v11 - ((2 * v11) & 0x50)) << 16) - 1255669760) ^ 0xB5280000;
  unsigned __int8 v13 = byte_100756E60[LOBYTE(STACK[0xB92]) ^ 0x46LL];
  int v14 = byte_10073F540[LOBYTE(STACK[0xB9F]) ^ 0x32LL] ^ 0xF2;
  unsigned int v15 = (v12 - ((2 * v12) & 0x533C0000) - 1449257999) ^ 0xA99E13F1 | (v14 - 2 * (v14 & 0x3F) - 1845305281) ^ 0x9202E03F;
  unsigned int v16 = ((((v8 ^ v10 ^ 0x55) - ((2 * (v8 ^ v10 ^ 0x55)) & 0xBBBBBBBB)) << 24) + 1560281088) ^ 0x5D000000;
  int v17 = byte_1007353C0[LOBYTE(STACK[0xB95]) ^ 0x73LL];
  unsigned __int8 v18 = v13 ^ 0xCF ^ (((16 * v13) ^ 0x30) - ((2 * ((16 * v13) ^ 0x30)) & 0xC0) + 102);
  unsigned int v19 = (((v18 - 2 * (v18 & 0x7F)) << 8) - 514425088) ^ 0xE1567F00;
  int v20 = byte_10073F540[LOBYTE(STACK[0xB93]) ^ 0x95LL] ^ 0xF2;
  int v21 = (v19 - ((2 * v19) & 0x133FEA00) + 161478047) ^ 0x99FF59F | (v20 - ((2 * v20) & 0x96) + 1324882251) ^ 0x4EF8194B;
  HIDWORD(v2fseek(v0, 0LL, 2) = v17 + 1;
  LODWORD(v2fseek(v0, 0LL, 2) = (v17 << 24) - 1258291200;
  int v23 = (v22 >> 25) - ((2 * (v22 >> 25)) & 0x6A);
  HIDWORD(v2fseek(v0, 0LL, 2) = (v23 + 53) ^ 0x35;
  LODWORD(v2fseek(v0, 0LL, 2) = (74 - v23) << 24;
  unsigned int v24 = ((((((v22 >> 31) - ((2 * (v22 >> 31)) & 0x22) + 17) ^ 0x19)
  unsigned int v25 = (v24 - ((2 * v24) & 0x4D9C0000) + 1724785618) ^ 0x66CE23D2 | (v16 - ((2 * v16) & 0xF3FFFFFF) + 2030138771) ^ 0x79017593;
  unsigned int v26 = v25 - ((2 * v25) & 0x88FC819E);
  int v27 = byte_1007353C0[LOBYTE(STACK[0xB91]) ^ 0x99LL];
  int v28 = LOBYTE(STACK[0xB98]) ^ 0x6F ^ byte_100753FC0[LOBYTE(STACK[0xB98]) ^ 9LL];
  unsigned int v29 = (((v28 - ((2 * v28) & 0xFFFFFFCF)) << 24) - 419430400) ^ 0xE7000000;
  int v30 = byte_10073F540[LOBYTE(STACK[0xB97]) ^ 0xD0LL];
  int v31 = (v27 - ((2 * v27 + 106) & v0) - 23) ^ 0x3A;
  unsigned int v32 = (((v31 - ((2 * v31) & 0x10C)) << 16) - 192544768) ^ 0xF4860000;
  unsigned int v33 = (v32 - ((2 * v32) & 0x711E0000) - 124823142) ^ 0xF88F599A | (v21 - ((2 * v21) & 0x52E94E94) + 695510858) ^ 0x2974A74A;
  unsigned int v34 = v33 - ((2 * v33) & 0xD2ED7EAE);
  unsigned int v35 = (v30 ^ 0xFFFFFFF2) - 78;
  int v36 = byte_10073F540[LOBYTE(STACK[0xB9B]) ^ 0xDLL] ^ 0xF2;
  unsigned int v37 = (v29 - ((2 * v29) & 0xBFFFFFFF) + 1604727991) ^ 0x5FA634B7 | (v36 - ((2 * v36) & 0x13A) - 278421603) ^ 0xEF679F9D;
  int v38 = ((2 * v30) ^ 0x64) - ((4 * v30) & 0x14) - 54;
  int v39 = ((2 * v38) & 0x88 | v38 & 0x64) ^ 0x69;
  int v40 = byte_100756E60[LOBYTE(STACK[0xB96]) ^ 0x72LL];
  unsigned int v41 = (v26 - 998358833) ^ 0xC47E40CF | (((v35 ^ 0xFA) + ((2 * v35) & 0xF4) + v39 + 93)
                                        - ((2 * ((v35 ^ 0xFA) + ((2 * v35) & 0xF4) + v39 + 93)) & 0x14C)
                                        - 1283822426) ^ 0xB37A6CA6;
  int v42 = v40 ^ 5 ^ (((16 * v40) ^ 0x30) + ~(2 * ((16 * v40) ^ 0x30)) - 8);
  int v43 = (((v42 + 7982954 - ((2 * v42) & 0x15E)) << 8) + 673024) ^ 0x79D9AF00;
  int v44 = byte_1007353C0[LOBYTE(STACK[0xB99]) ^ 0x73LL];
  unsigned int v45 = (v41 - ((2 * v41) & 0x51392166) - 1466134349) ^ 0xA89C90B3 | (v43 - ((2 * v43) & 0x4DAFDE00) + 651685749) ^ 0x26D7EF75;
  int v46 = byte_100756E60[LOBYTE(STACK[0xB9E]) ^ 0x46LL];
  unsigned int v47 = (((((v44 - ((2 * v44 + 106) & 0x82) + 118) ^ 0xC9)
         - ((2 * ((v44 - ((2 * v44 + 106) & 0x82) + 118) ^ 0xC9)) & 0x1D6)) << 16)
       - 1410662400) ^ 0xABEB0000;
  unsigned int v48 = (v47 - ((2 * v47) & 0x12320000) - 921045874) ^ 0xC919F48E | (v37 - ((2 * v37) & 0x54F3A2B8) + 712626524) ^ 0x2A79D15C;
  int v49 = (16 * v46) ^ 0x30;
  unsigned int v50 = 2 * ((v49 & (v46 ^ 0xFFFFFFA0)) - ((2 * (v49 & (v46 ^ 0xFFFFFFA0))) & 0x40)) + 68;
  unsigned int v51 = ((v49 + (v46 ^ 0xFFFFFFA9)) ^ 0x76)
      + ((2 * (v49 + (v46 ^ 0xFFFFFFA9))) & 0xEC)
      + (v50 ^ 0x81)
      - ((2 * v50) & 0x74);
  int v52 = ((((v51 - 59) - (v0 & (2 * (v51 - 59)))) << 8) + 1307587584) ^ 0x4DF03400;
  int v53 = byte_100756E60[LOBYTE(STACK[0xB9A]) ^ 0x50LL];
  unsigned int v54 = (v52 - ((2 * v52) & 0x3F3C0E00) - 1617033240) ^ 0x9F9E07E8 | (v15 - ((2 * v15) & 0x4B3ABC06) + 631070211) ^ 0x259D5E03;
  int v55 = LOBYTE(STACK[0xB9C]) ^ byte_100753FC0[LOBYTE(STACK[0xB9C]) ^ 0xELL] ^ 0xFF;
  unsigned int v56 = (((v55 - ((2 * v55) & 0xDDDDDDDD)) << 24) - 301989888) ^ 0xEE000000;
  int v57 = ((16 * v53) ^ 0x30) - ((2 * ((16 * v53) ^ 0x30)) & 0x20);
  STACK[0xAB0] = 0LL;
  STACK[0xAE0] = 0LL;
  STACK[0xAD8] = 0LL;
  STACK[0xAA8] = 0LL;
  STACK[0xAD0] = 0LL;
  STACK[0xAE8] = 0LL;
  STACK[0xAF0] = 0LL;
  unsigned int v58 = (v54 - ((2 * v54) & 0x1450FE7C) + 1244167998) ^ 0x4A287F3E | (v56 - ((2 * v56) & 0xAAAAAAAA) - 707601190) ^ 0xD5D2DCDA;
  uint64_t v60 = LOBYTE(STACK[0xB90]);
  LODWORD(STACK[0x580]) = v58 + 1880011394 - ((2 * v58) & 0xE01D653A) + 27;
  unsigned int v61 = (v59 - ((2 * v59) & 0x3C4D4200) - 1641635535) ^ 0x9E26A131 | (v48 - ((2 * v48) & 0xB1514470) + 1487446584) ^ 0x58A8A238;
  int v62 = v60 ^ byte_100753FC0[v60 ^ 0xB0];
  LODWORD(STACK[0x648]) = (2 * v61) & 0x1EE2BF42;
  LODWORD(STACK[0x640]) = v61 - 1888395359;
  unsigned int v63 = ((((v62 ^ 6) - ((2 * (v62 ^ 6)) & 0x14)) << 24) - 1979711488) ^ 0x8A000000;
  unsigned int v64 = v63 - ((2 * v63) & 0xDA000000) - 315373508;
  LODWORD(STACK[0x5B8]) = v64;
  LODWORD(STACK[0x5A0]) = v64 ^ 0xED33C83C;
  unsigned int v65 = v64 ^ 0xED33C83C | (v34 - 378093737) ^ 0xE976BF57;
  LODWORD(STACK[0x4E0]) = (v45 - ((2 * v45) & 0x7928D6D0) - 1131123864) ^ 0xC132B701;
  LODWORD(STACK[0x658]) = (2 * v65) & 0x56DA0DB0;
  LODWORD(STACK[0x650]) = v65 - 1418918184;
  int v66 = *(unsigned __int8 *)STACK[0xAB8];
  LOBYTE(v35) = (-95 - ((((v3 + 83) ^ 0x78) + 6) & 0x42)) ^ 0xA1;
  LOBYTE(STACK[0xB80]) = v66 + ((126 * v35) & 0xBF) + ((-65 * v35) ^ 0x5F) + 12;
  unsigned int v67 = (v66 ^ 0x9DD6DDFD) + ((2 * v66) & 0xFFFFFFFB) - 777145357;
  unsigned int v68 = (-1950399707 * v67 - ((394167882 * v67 + 18710366) & 0xE0D64BF2) - 252058200) ^ 0xEE2B1163;
  unsigned int v69 = ((v68 + 1363901570) ^ 0x84519062)
      + ((v68 % 0x101) ^ 0x7EF9FDEF)
      + ((2 * (v68 % 0x101)) & 0x3DE)
      - ((2 * (v68 + 1363901570)) & 0xF75CDF3A)
      + 1;
  unsigned int v70 = v69 - ((2 * v69 - 110566564) & 0x89BC38C4) + 1100123664;
  unsigned int v71 = (v70 ^ ((v70 ^ 0xBB21E39D) - ((2 * (v70 ^ 0xBB21E39D) + 2) & 0x1F6FD016) + 263710732) ^ ((v70 ^ 0xD7F0420)
                                                                                               - 1235294274
                                                                                               - ((2
                                                                                                 * ((v70 ^ 0xD7F0420)
                                                                                                  - 1235294274)) & 0x6D233014)
                                                                                               + 915511306) ^ 0x7DF86C63)
      - 1235294275;
  unsigned int v72 = (v71 - ((2 * v71) & 0xFD062800) + 2122519552) ^ 0x96A6EDD2;
  unsigned int v73 = v72 - ((2 * v72 + 247228098) & 0xB715E14C) + 1659446279;
  int v74 = v73 ^ 0x286C2606;
  unsigned int v75 = (v73 ^ 0xA4750F59) - 400164397 - ((2 * ((v73 ^ 0xA4750F59) - 400164397)) & 0x25D9AD48);
  int v76 = v73 ^ 0x5B8AF0A6;
  HIDWORD(v2fseek(v0, 0LL, 2) = v73 ^ 0x5B8AF0A6;
  LODWORD(v2fseek(v0, 0LL, 2) = v73;
  int v77 = (((v22 >> 31) ^ 0x7EFEFFFD)
       + 1722561068
       + ((2 * (v22 >> 31)) & 0xFDFDFFFA)
       + 1
       - ((2 * (((v22 >> 31) ^ 0x7EFEFFFD) + 1722561068 + ((2 * (v22 >> 31)) & 0xFDFDFFFA) + 1) - 1043943676) & 0xC6B67B8C)
       - 1002531512) ^ v73 ^ 0x286C2606;
  unsigned int v78 = ((v76 + 1363901570) ^ 0xBB7B5BF5) + ((2 * (v76 + 1363901570)) & 0x76F6B7EA) + 1149543435 + (v77 ^ 0xDC0FB0E3);
  uint64_t v79 = (v75 - 1829972316) ^ 0x4370F23 ^ v77;
  uint64_t v80 = v77 ^ 0xEC16C7A3;
  unsigned int v81 = (((v77 ^ 0xDC0FB0E3) + (v74 ^ 0xC5B8311D)) ^ 0x7BF7BDFD)
      + ((2 * v77) ^ 0x2D29644B)
      + ((4 * v77) & 0xD593F4E4 ^ 0xAFED3F7B)
      + ((2 * ((v77 ^ 0xDC0FB0E3) + (v74 ^ 0xC5B8311D))) & 0xF7EF7BFA)
      + 1;
  return ((uint64_t (*)(void, void, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + (v3 ^ 0x6F)))( v81 - ((2 * v81 + 497318124) & 0x3C658376) - 1929052623,  (v78 ^ 0xEBDBF315) + 2128944623 + ((2 * v78) & 0xD7B7E62A),  2951561083LL,  2365914673LL,  v79,  v80);
}

void sub_1005CB0EC()
{
}

uint64_t sub_1005CB0F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v8 = LODWORD(STACK[0x640]) - LODWORD(STACK[0x648]);
  LODWORD(STACK[0x5B0]) = v8;
  LODWORD(STACK[0x540]) = v8 ^ 0x55AC71E7;
  unsigned int v9 = a1 ^ 0x9E32C1BB;
  int v10 = v9 - 1640840773 - ((2 * v9 + 2) & v6);
  int v11 = ((LOBYTE(STACK[0xB80]) - 107) - ((2 * (LOBYTE(STACK[0xB80]) + 149)) & 0x108) + 1241642628) ^ a6;
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((77 * (((v10 + 25) & 2 | v9 & 1) != 3)) | (v7 - 864))) - 8))( (v10 + 1),  a2,  1241642628LL,  2048426436LL,  a5,  (v11 ^ 0x7A1881C4) - 908156145 + ~(2 * (((v11 ^ 0x7A1881C4) + 432352206) & 0x30197741 ^ v11 & 1u)),  432352206LL,  0xFFFFFFFFLL);
}

void sub_1005CB234()
{
}

uint64_t sub_1005CB23C(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  LODWORD(STACK[0x5F0]) = LODWORD(STACK[0x650]) - LODWORD(STACK[0x658]);
  unsigned int v9 = (2 * a6) ^ 0xC146FEC1;
  unsigned int v10 = (4 * a6) & 0xBD17DF7C ^ 0x7FFA22FF;
  int v11 = (a6 ^ v6)
      - 1752068653
  int v12 = (v11 ^ 0x3FDFFDFF) + v9 + v10 + ((2 * v11) & 0x7FBFFBFE);
  int v13 = v12 + 1;
  int v14 = a5 ^ 0x4AD46964;
  int v15 = v14 - a2 - 1989344572 + v12 + 1;
  unsigned int v16 = v15 ^ 0xEABD6F9F;
  unsigned int v17 = (2 * v15) & 0xD57ADF3E;
  else {
    int v18 = -226711626;
  }
  unsigned int v19 = v17
      + v16
      + (((v13 + 741296650 + v18) % 0x101u) ^ 0x7DBE3BBD)
      + ((2 * ((v13 + 741296650 + v18) % 0x101u)) & 0x37A);
  unsigned int v20 = (v19 - ((2 * v19 + 789096776) & 0xAA2976F6) - 325513185) ^ a1;
  int v21 = v20 ^ 0x7395FA8D;
  int v22 = (v20 ^ 0x7395FA8D ^ (a2 - 1791037700))
      - 1159072271
      - ((2 * (v20 ^ 0x7395FA8D ^ (a2 - 1791037700))) & 0x75D3EBE2);
  HIDWORD(v23) = v20 ^ 0x1395FA8D;
  LODWORD(v23) = v20 ^ 0x60000000;
  int v24 = ((v14 + (v20 ^ 0x8C6A0572) + 1 - ((2 * (v14 + (v20 ^ 0x8C6A0572) + 1)) & 0x31C0F4D8) - 1730119060) ^ 0x671F8593)
      + (v22 ^ 0x7D2853D8 ^ ((v23 >> 29) - ((2 * (v23 >> 29)) & 0x8F834C52) - 943610327))
      + 1;
  unsigned int v25 = v21 + (a1 ^ 0x9E32C1BB) - 1675705382 - ((2 * (v21 + (a1 ^ 0x9E32C1BB))) & 0x383D87B4);
  unsigned int v26 = v25 ^ 0x81027323 ^ (v24 - ((2 * v24) & 0x3A3961F2) + 488419577);
  unsigned int v27 = ((v26 - ((2 * v26 + 1655225282) & 0x6032EE80) - 512895711) ^ 0xCFE688BF) + 1;
  return ((uint64_t (*)(void, void, uint64_t))((char *)*(&off_10090DDE0 + ((v8 - 1473) ^ 7)) - 8))( v27 + (v25 ^ 0x9C1EC3DA) - 1640840773 - (v7 & (2 * (v27 + (v25 ^ 0x9C1EC3DA)))),  ((v27 + (v22 ^ 0xBAE9F5F1)) ^ 0x7AC51557) - 268698707 + ((2 * (v27 + (v22 ^ 0xBAE9F5F1))) & 0xF58A2AAE),  4119472814LL);
}

void sub_1005CB5B8()
{
}

uint64_t sub_1005CB5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  unsigned int v10 = ((v7 + (a6 ^ v7) - ((2 * (a6 ^ v7) + 2) & a7) + 1) ^ v7) % 3;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((22 * ((v10 ^ v8) + 2 * v10 == v8)) | (v9 - 994))) - 8))();
}

void sub_1005CB6C4()
{
}

uint64_t sub_1005CB6D0@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W8>)
{
  LODWORD(STACK[0x640]) = v4 - 616;
  unint64_t v6 = (v4 - 159);
  STACK[0x648] = v6;
  LODWORD(STACK[0x5E8]) = v4 - 1243;
  int v7 = ((-134217728 * ((3 * ((a1 ^ (v5 - 99)) ^ v6)) & 3)
       - 1946157056 * (a1 ^ (v5 + 669) ^ v6)
       + 259787396) ^ 0xF7C0A84) & 0xFC000000 | ((844964643 * (a1 ^ (v5 + 669) ^ v6)
  unsigned int v8 = ((2 * v7) & 0xBFBEBE66 ^ 0x38C8422) + (v7 ^ 0x5E191D26);
  unsigned int v9 = ((192114608 * (a2 ^ 0xA8F90D2C) - ((384229216 * (a2 ^ 0xA8F90D2C)) & 0xAA4D14E0) - 718894468) ^ 0xD5268A7C) & 0xFFFFFFF0 | ((-524863749 * (a2 ^ 0xA8F90D2C) - ((24014326 * (a2 ^ 0xA8F90D2C)) & 0x1CCE660) - 2132380880) >> 28);
  unsigned int v10 = ((2 * v9) & 0xFF4FD7FE ^ 0x10) + (v9 ^ 0xFFA7EBF7);
  unsigned int v11 = ((-1365622360 * v3 - ((221545296 * v3) & 0xEDED780) - 2022741054) ^ 0x876F6BC2) & 0xFFFFFFF8 | ((-170702795 * v3 - ((-341405590 * v3) & 0xCBEC1DAC) + 1710624470) >> 29);
  unsigned int v12 = ((-913864192 * a3 - ((-1827728384 * a3 + 1029094400) & 0x815C3C00) + 1599700042) ^ 0xC0AE1E4A) & 0xFFFFFE00 | ((-1570454587 * a3 - ((1154058122 * a3 + 1553902430) & 0xA4496F00) - 2139878097) >> 23);
  unsigned int v13 = ((2 * v12) & 0xEFFFDEFC ^ 0x248) + (v12 ^ 0xF7FFEEDA);
  unsigned int v14 = v10 + (v11 ^ 0x5FBDFFFF) + ((2 * v11) & 0xBF7BFFF8) - v13 + v8 + 919941471;
  unsigned int v15 = ((-2123366400 * v14 - ((48234496 * v14 + 1960837120) & 0xABC00000) + 273987836) ^ 0x55E4B8FC) & 0xFFF00000 | ((741165079 * v14 - ((1482330158 * v14 - 1466157234) & 0x878A17C8) + 403908491) >> 12);
  unsigned int v16 = ((2 * v15) & 0x977AB77A ^ 0x183020) + (v15 ^ 0x4BB167ED);
  HIDWORD(v17) = v10 + 1;
  LODWORD(v17) = (-1279558367 * v10 - ((1735850562 * v10 - 1179377086) & 0x805AF8E6) + 487034260) ^ 0xC02D7C60;
  int v18 = (v17 >> 5) - ((2 * (v17 >> 5)) & 0xE0910940) - 263682912;
  unsigned int v19 = ((377029380 * v8 - ((754058760 * v8 + 43242600) & 0x3F7D77F0) + 554214958) ^ 0x9FBEBBFA) & 0xFFFFFFFC | ((-979484479 * v8 - ((188514690 * v8 + 1084552474) & 0x55B89062) - 1959869762) >> 30);
  LODWORD(v6) = ((2 * v19) & 0x7FF5FE7C ^ 4) + (v19 ^ 0x3FFAFF3C);
  unsigned int v20 = v18 ^ 0xF04884A0;
  unsigned int v21 = 1337753485 * (v18 ^ 0xF04884A0) - ((-1619460326 * (v18 ^ 0xF04884A0)) & 0xD2DE1EA0) + 1768886096;
  unsigned int v22 = 71091677 * v6 - ((142183354 * v6 - 1497505036) & 0xB777EAD4) + 790292196;
  unsigned int v23 = ((-2019103020 * v13 - ((256761256 * v13 - 479916208) & 0x9DB44860)) & 0xFFFFFFFC | ((1642707893 * v13
                                                                                           - ((1137932138 * v13
                                                                                             + 2027504596) & 0x7F74A40E)
                                                                                           - 1138297871) >> 30))
      - 1064522792;
  unsigned int v24 = ((2 * v23) & 0xFF6FB53E ^ 0x9D240024) + (v23 ^ 0xB16DFEAD) + v16;
  int v25 = (v18 ^ 0xA2D6A9CC ^ (v24 - ((2 * v24 + 1763021640) & 0xA53C5AD8) - 2027358448)) - v6;
  unsigned int v26 = ((2 * (v25 + 1073413950)) & 0xED5FC3BC) + ((v25 + 1073413950) ^ 0xF6AFE1DE);
  unsigned int v27 = -1146936625 * v26 - ((2001094046 * v26 + 1658700540) & 0xF539658A) - 1408527293;
  unsigned int v28 = (-141561440 * v20 - ((253748032 * v20) & 0x17B28200)) & 0xFFFFFFFC | ((2112093288 * v20
                                                                             - ((2076702928 * v20) & 0x5828B630)
                                                                             + 739531546) >> 30);
  unsigned int v29 = (((-774594648 * v16 - ((598294352 * v16 + 1417335280) & 0x6AD8CDB0) + 531222483) ^ 0xB56C66DB) & 0xFFFFFFF8 | ((1513788405 * v16 - ((880093162 * v16 + 445602366) & 0x5297AEB4) - 1231846279) >> 29)) ^ 1;
  unsigned int v30 = v29 - ((2 * v29) & 0xD491544A) - 364336603;
  int v31 = ((-1610612736 * v6 + 0x40000000) & 0x80000000) - 805306368 * v6 + 1670224753;
  int v32 = ((v28 + 198787356) ^ 0xBD9411C) - ((2 * ((v28 + 198787356) ^ 0xBD9411C)) & 0x4FF31B06) - 1476817505;
  LOBYTE(v6) = ((v21 >> 27) & 0x1C ^ 4) - 16 * (v21 >> 30) + 89;
  HIDWORD(v17) = v25;
  LODWORD(v17) = v27 ^ 0x7A9CB2C4;
  int v33 = (v17 >> 1) - ((2 * (v17 >> 1)) & 0xBED5F812) - 546636791;
  int v34 = (v32 ^ 0xA7F98D9F | v6 & 0x7C ^ 0x50) - ((2 * (v32 ^ 0xA7F98D9F | v6 & 0x7C ^ 0x50)) & 0x181D8A0) + 12643408;
  LODWORD(v6) = -721323363 * (v33 ^ 0xDF6AFC09) - ((-1442646726 * (v33 ^ 0xDF6AFC09)) & 0x8CB19048) - 967260124;
  HIDWORD(v17) = v32 ^ 2;
  LODWORD(v17) = v34 ^ 0x67E27364;
  unsigned int v35 = 2107421365 * (v30 ^ 0xEA48AA25) - ((-80124566 * (v30 ^ 0xEA48AA25)) & 0xD4AAA74C) + 1783976870;
  unsigned int v36 = ((v31 ^ 0xC38D9B71) & 0xF0000000 | (v22 >> 4)) ^ 0x5BBBF56;
  int v37 = v36 - ((2 * v36) & 0x55A59ED0) + 718458728;
  unsigned int v38 = -886353920 * (v30 ^ 0xEA48AA25) - ((-1772707840 * (v30 ^ 0xEA48AA25)) & 0xE0C56000) + 1885516969;
  int v39 = v37 ^ 0x2AD2CF68;
  unsigned int v40 = -1761270391 * (v37 ^ 0x2AD2CF68) - ((772426514 * (v37 ^ 0x2AD2CF68)) & 0xA21FB7A2) + 1359993809;
  int v41 = ((v17 >> 2) - ((2 * (v17 >> 2)) & 0x2F9215FE) - 1748432129) ^ v37 ^ v30 ^ 0xD1F13476 ^ v33;
  unsigned int v42 = (((-67108864 * ((v33 ^ 0xDF6AFC09) & 3) + 973078528 * (v33 ^ 0xDF6AFC09) + 129774855) ^ 0x7BC3507) & 0xFE000000 | (v6 >> 7)) ^ 0x18CB190;
  LODWORD(v6) = v42 - 2 * (v42 & 0x26DC172F ^ (v6 >> 7) & 8) - 1495525593;
  unsigned int v43 = ((v38 ^ 0x7062B4A9) & 0xFFFFF000 | (v35 >> 20)) ^ 0x6A5;
  unsigned int v44 = v43 - ((2 * v43) & 0xB70127B0) - 612330536;
  unsigned int v45 = ((1259470848 * v39 - ((371458048 * v39) & 0x46000000) + 587257158) ^ 0x2300D546) & 0xFFFE0000 | (v40 >> 15);
  unsigned int v46 = (v45 ^ 0xBFFD1FE0) + ((2 * v45) & 0x7FFB7BFE ^ 0x1403E) + 1073889793 + (v44 ^ 0xDB8093D8);
  int v47 = v6 ^ (v46 - ((2 * v46) & 0xD5297924) - 359351150);
  unsigned int v48 = (((-945815552 * v41 - ((-1891631104 * v41) & 0xC4800000) - 497633064) ^ 0xE256B8D8) & 0xFFE00000 | ((1719619133 * v41 - ((-855729030 * v41) & 0x9AA76126) + 1297330323) >> 11)) ^ 0x9AA76;
  unsigned int v49 = v48 - ((2 * v48) & 0xE52AE2CE) + 1922396519;
  int v50 = 2 * (((v47 ^ 0x4C48ABB5) & (v49 ^ 0x72957167)) - ((2 * ((v47 ^ 0x4C48ABB5) & (v49 ^ 0x72957167))) & 0x1353486A))
      - 1823258518;
  int v51 = (~(1843186062 * (v44 ^ v49 ^ v6 ^ 0x613E1B6B)) | 0x89A5B717)
      - 152148793 * (v44 ^ v49 ^ v6 ^ 0x613E1B6B)
      - 1154669451;
  unsigned int v52 = (v49 ^ 0x3EDDDAD2 ^ v47) + (v50 ^ 0x8EA8B788) - 503054389 + ((2 * v50) & 0x3BF7FFC4 ^ 0x22A690C4) + 83;
  int v53 = v52 - ((2 * v52) & 0x2C4DD26C) + 371648822;
  LODWORD(STACK[0x620]) = v53 ^ 0x1626E936;
  unsigned int v54 = 2 * (((v53 ^ 0x1626E936) & (v51 ^ 0xBB2D2474)) - ((2 * ((v53 ^ 0x1626E936) & (v51 ^ 0xBB2D2474))) & 0x7361AF48))
      - 211701944;
  unsigned int v55 = (v51 ^ 0xAD0BCD42 ^ v53) + (v54 ^ 0x40E9587) + 143705393 + ((2 * v54) & 0xEEDE759C ^ 0xE6C25490);
  unsigned int v56 = ((2 * v55) & 0xD79CD9EE) + (v55 ^ 0xEBCE6CF7);
  int v57 = 2 * v56 - 149247468;
  LODWORD(STACK[0x5D8]) = v57;
  LODWORD(STACK[0x5E0]) = v56;
  unsigned int v58 = v56 - (v57 & 0xFABF32CE) - 118690191;
  int v59 = v58 ^ v53;
  int v60 = v58 ^ 0x7D5F9967;
  LODWORD(STACK[0x4C0]) = v59;
  int v61 = v59 ^ 0x6B797051;
  int v62 = v60 + (v6 ^ 0xA6DC1727) - ((2 * (v60 + (v6 ^ 0xA6DC1727))) & 0x229B55C) + 18143918;
  LODWORD(v6) = -1909726993 * v60 - ((475513310 * v60) & 0xE8E53BC2) - 193815071;
  LODWORD(STACK[0x590]) = v62;
  int v63 = v62 ^ 0x114DAAE;
  unsigned int v64 = 1847209695 * (v62 ^ 0x114DAAE) - ((204758462 * (v62 ^ 0x114DAAE)) & 0x92C24E8) - 2070539660;
  int v65 = 2 * ((v60 & (v49 ^ 0x72957167)) - ((2 * (v60 & (v49 ^ 0x72957167))) & 0x5C18DD0E)) + 1545133326;
  unsigned int v66 = (v49 ^ 0xFCAE800 ^ v58) + (v65 ^ 0xA3C7A2F1) + 2129921 + ((2 * v65) & 0xFFBEFFFC ^ 0xB830BA1C);
  unsigned int v67 = v66 - ((2 * v66) & 0xD49B829E) - 364002993;
  unsigned int v68 = -2048885755 * v61 - ((197195786 * v61) & 0x35848D94) + 448939722;
  LODWORD(STACK[0x658]) = v67;
  unsigned int v69 = 198666509 * (v67 ^ 0xEA4DC14F) - ((397333018 * (v67 ^ 0xEA4DC14F)) & 0xE1F3C19A) + 1895424205;
  unsigned int v70 = 1571042304 * (v67 ^ 0xEA4DC14F) - ((457730048 * (v67 ^ 0xEA4DC14F)) & 0x1854F000) + 204109960;
  unsigned int v71 = HIWORD(v64);
  unsigned int v72 = ((2 * ((v70 ^ 0xC2A7888) & 0xFFFFFC00 | (v69 >> 22))) & 0xEFFF7F74 ^ 0x304)
      + (((v70 ^ 0xC2A7888) & 0xFFFFFC00 | (v69 >> 22)) ^ 0x77FFBE79);
  LODWORD(STACK[0x5C8]) = v61;
  unsigned int v73 = ((786366464 * v63 - ((1572732928 * v63) & 0xEA920000) - 179709406) ^ 0xF549DA22) & 0xFFFF0000 | HIWORD(v64);
  int v74 = ((2 * v73) & 0x7FB1F6F4 ^ 0x10024) + (v73 ^ 0x3FD87FEC);
  unsigned int v75 = (1002438656 * v60 - ((2004877312 * v60) & 0xE3FFFFFF) - 238649630) ^ 0xF1C67EE2 | (v6 >> 10);
  unsigned int v76 = (((260087808 * v61 - ((520175616 * v61) & 0x77378000) - 1147418638) ^ 0xBB9BC7F2) & 0xFFFFE000 | (v68 >> 19)) ^ 0x358;
  int v77 = v76 - 2 * (v76 & 0x301BEB1D ^ (v68 >> 19) & 1) - 1340347620;
  unsigned int v78 = ((2 * v75) & 0xF17AAEEE ^ 0x7A284E) + (v75 ^ 0xF8804BD0) - v74 + v72;
  unsigned int v79 = 943187215 * v74 - ((1886374430 * v74 + 1681802164) & 0x4181F198) - 1830806874;
  unsigned int v80 = v77 ^ 0x72907D40 ^ (v78 - ((2 * v78 - 1640511342) & 0x85172CB8) - 1851295067);
  int v81 = (v71 << 30) - (v74 << 29) - 1481660159;
  unsigned int v82 = ((-40894464 * v80 - ((-81788928 * v80) & 0x8F000000) + 1200341094) ^ 0x478BC066) & 0xFFF00000 | ((435343321 * v80 - ((870686642 * v80) & 0xC85FB382) + 1680857537) >> 12);
  int v83 = ((2 * v82) & 0x2EE7BF36 ^ 0x48532) + (v82 ^ 0x17759D66);
  unsigned int v84 = (((-1316814848 * v72 - ((1661337600 * v72 - 1817968640) & 0xC08E0000) - 1441180495) ^ 0x604754B1) & 0xFFFF0000 | ((182563203 * v72 - ((365126406 * v72 + 1009685412) & 0x37A95E02) - 1712588589) >> 16)) ^ 0x9BD4;
  int v85 = v84 - ((2 * v84) & 0x49CFCD9E) + 619177679;
  unsigned int v86 = ((2 * ((v81 ^ 0xE7AFA901) & 0xE0000000 | (v79 >> 3))) & 0xD9F3DBB2 ^ 0x8301A32)
      + (((v81 ^ 0xE7AFA901) & 0xE0000000 | (v79 >> 3)) ^ 0x68E1F2C0)
      + v83;
  int v87 = v86 - 2 * ((v86 + 999436940) & 0x283EB3DF ^ v86 & 1) + 600893034;
  unsigned int v88 = ((2019670016 * (v77 ^ 0xB01BEB1C) - ((-255627264 * (v77 ^ 0xB01BEB1C)) & 0xA7D45000) - 739628072) ^ 0xD3EA2BD8) & 0xFFFFF800 | (((~(366876782 * (v77 ^ 0xB01BEB1C)) | 0xBE8FC359) + 1257180215 * (v77 ^ 0xB01BEB1C) - 1598546348) >> 21);
  unsigned int v89 = ((2 * v88) & 0xFBFCF5AE ^ 0xA) + (v88 ^ 0xFDFE7FD2);
  unsigned int v90 = -1045817253 * v83 - ((-2091634506 * v83 - 371853362) & 0xDFA72378) + 1690209699;
  int v91 = v85 ^ 0x24E7E6CF;
  unsigned int v92 = 289091809 * (v85 ^ 0x24E7E6CF) - ((578183618 * (v85 ^ 0x24E7E6CF)) & 0x5E2ADE72) - 1357549767;
  v83 *= 204308480;
  unsigned int v93 = v90 >> 17;
  unsigned int v94 = (((v83 + 2113110016) & 0xFFFF8000 | (v90 >> 17)) ^ 0xC0CC36D9)
      + v83
      + ((2 * ((v83 + 2113110016) & 0xFFFF8000 | (v90 >> 17))) & 0x7E677D9E ^ 0xFFFF926D);
  unsigned int v95 = ((v93 ^ 0xFFFF8816) - ((2 * (v93 ^ 0xFFFF8816) + 2) & 0xC5631E66) + 1655803700) ^ v93 ^ (v94
                                                                                               - ((2 * v94 + 978222498) & 0x3C9143C2)
                                                                                               + 1534058674);
  unsigned int v96 = ((2 * ((v85 ^ 0x8CD95511 ^ v87) - v89 - 33654057)) & 0xFF8FDCAC)
      + (((v85 ^ 0x8CD95511 ^ v87) - v89 - 33654057) ^ 0xFFC7EE56);
  unsigned int v97 = (v95 ^ 0xFCF9593B)
      + v83
      + 2113110016
      - 2 * (((v95 ^ 0xFCF9593B) + v83 + 2113110016) & 0x34C69E ^ v95 & 4)
      + 3458714;
  unsigned int v98 = 1986118144 * v91 - ((-322731008 * v91) & 0x88071800) - 1006400239;
  unsigned int v99 = 1247651993 * v89 - ((347820338 * v89 + 409008898) & 0x2E9F6008) - 2088751739;
  unsigned int v100 = (-2145703632 * v96
        - 2 * ((-2145703632 * v96 + 1648724448) & 0x471592B0 ^ (-2145703632 * v96) & 0x10)
        + 693836938) ^ 0x471592AA | ((-1207848301 * v96 - ((1879270694 * v96 + 1011396924) & 0x7FA4FDC2) + 502716287) >> 28) ^ 0xB;
  unsigned int v101 = ((2 * v100) & 0xD63E7F8A) + (v100 ^ 0xEB1F3FC5);
  int v102 = v97 ^ 0x34C69A;
  unsigned int v103 = 492085891 * (v97 ^ 0x34C69A) - ((984171782 * (v97 ^ 0x34C69A)) & 0xF7A7712A) + 2077472917;
  unsigned int v104 = ((v98 ^ 0xC4038D11) & 0xFFFFFE00 | (v92 >> 23)) ^ 0x15E;
  unsigned int v105 = v104 - ((2 * v104) & 0x86597AB6) - 1020478117;
  unsigned int v106 = -1483399605 * v101 - ((1328168086 * v101 - 1486063982) & 0xFB26E5C8) + 1363783213;
  unsigned int v107 = v101 + (v105 ^ 0xC3187BC1 ^ v97) + 350273595;
  int v108 = v107 ^ 0x3EDFFAFB;
  int v109 = (2 * v107) & 0x7DBFF5F6;
  unsigned int v110 = (-1799663310 * v89 - ((695640676 * v89 + 818017796) & 0x38A18A54) + 1957806125) ^ 0x9C50C52B;
  unsigned int v111 = ((v110 & 0xFFFFFFFE | (v99 >> 31)) ^ 0xE77FDE7E) + ((2 * v110) & 0xCEFFBCFC);
  unsigned int v112 = (1968343564 * v102 - ((178590744 * v102) & 0xB9FFF78)) & 0xFFFFFFFC | (v103 >> 30);
  unsigned int v113 = v108 - v111 + v109;
  unsigned int v114 = 735663863 * v113 - ((1471327726 * v113 - 2021979446) & 0xDB44A324) + 828364535;
  int v115 = -162153024 * v113 - ((78347136 * v113 + 113422976) & 0x5A2CD80) - 231555066;
  int v116 = -224147104 * v101 - ((1699189440 * v101 + 1838076480) & 0x611A6AC0) - 1487626597;
  unsigned int v117 = ((v115 ^ 0x2D166C6) & 0xFFFFFFC0 | (v114 >> 26)) ^ 0x3B;
  int v118 = v117 - ((2 * v117) & 0x5106F3B4) + 679705050;
  unsigned int v119 = (((v116 ^ 0x308D357B) & 0xFFFFFFE0 | (v106 >> 27)) ^ 0xF)
       - ((2 * ((v116 ^ 0x308D357B) & 0xFFFFFFE0 | (v106 >> 27))) & 0x9FE35020)
       + 1341237264;
  unsigned int v120 = ((1507413208 * v111 - ((-1280140880 * v111 - 1635665056) & 0xC8442A50) + 862122718) ^ 0xE422152E) & 0xFFFFFFF8 | ((-348444261 * v111 - ((-696888522 * v111 - 741329044) & 0xF6925846) - 449755175) >> 29);
  int v121 = (v119 ^ 0x4FF1A810) + ((2 * (v112 - 2049966148)) & 0x51DFFCBC ^ 0x19FFC38) + ((v112 - 2049966148) ^ 0x2D2001E3);
  unsigned int v122 = v121 + (v120 ^ 0x3DFBD758) + ((2 * v120) & 0x7BF7AEB6 ^ 6) + 420751943;
  unsigned int v123 = ((2 * (v121 + 1460666786)) & 0xFECFE7EA) + ((v121 + 1460666786) ^ 0xFF67F3F5);
  unsigned int v124 = (v122 - ((2 * v122) & 0x9B40B68E) + 1302354759) ^ v118;
  HIDWORD(v17) = v118 ^ 0x1DA;
  LODWORD(v17) = v115 ^ 0x2D16400;
  int v125 = -1438646272 * v123 - ((343932928 * v123 + 562036736) & 0x33800000) + 1789350057;
  unsigned int v126 = (600736425 * v123 - ((1201472850 * v123 + 414126726) & 0x4BDB3F94) + 1917135117) >> 10;
  int v127 = ((((v125 ^ 0x19E750A9) & 0xFFC00000 | v126) ^ 0x297B67)
        - 2 * ((((v125 ^ 0x19E750A9) & 0xFFC00000 | v126) ^ 0x297B67) & 0x8033DB4 ^ v126 & 0x10)
        - 2013053532) ^ ((v17 >> 10) - ((2 * (v17 >> 10)) & 0xE09A6FFE) - 263374849);
  HIDWORD(v17) = v127 ^ 0x36210B;
  LODWORD(v17) = v127 ^ 0xDC400000;
  int v128 = ((v17 >> 22) - ((2 * (v17 >> 22)) & 0x7A5941EA) - 1121148683) ^ 0x5D81E265;
  int v129 = (-921885487 * v128 - ((303712674 * v128) & 0x643FC7BE) - 1306532897) ^ v124;
  unsigned int v130 = (((2 * v129) ^ 0xAE798284) - ((2 * ((2 * v129) ^ 0xAE798284)) & 0x15A0CDBC) + 181429983) & 0x38C21266;
  unsigned int v131 = (v129 ^ 0xCB5DC871) + (v130 ^ 0xF71FF939) + ((2 * v130) ^ 0x1180048C) + 2098305;
  int v132 = v131 + 1137969263 + (~(2 * v131) | 0x7857EF21) + 1;
  int v133 = v132 ^ v119;
  LODWORD(STACK[0x530]) = v132 ^ v118;
  int v134 = v132 ^ v118 ^ 0x6B5771B5;
  unsigned int v135 = (~(-815678926 * v134) | 0x52F3FA8F) - 407839463 * v134 - 695860551;
  unsigned int v136 = (v124 ^ 0x6523229D)
       + (v132 ^ 0xBC2BF790)
       + 1
       - ((2 * ((v124 ^ 0x6523229D) + (v132 ^ 0xBC2BF790) + 1)) & 0x511F2192)
       - 1466986295;
  unsigned int v137 = -939524096 * v134 - ((-1879048192 * v134) & 0xAAAAAAAA);
  unsigned int v138 = ((-1019281408 * (v133 ^ 0xC25A07F) - ((108920832 * (v133 ^ 0xC25A07F)) & 0x5CB00000) + 777584220) ^ 0x2E58FE5C) & 0xFFFF0000 | ((-932265153 * (v133 ^ 0xC25A07F) - ((-1864530306 * (v133 ^ 0xC25A07F)) & 0xFD72F26C) - 21399242) >> 16);
  unsigned int v139 = ((2 * v138) & 0xB33E75F6 ^ 0x7572) + (v138 ^ 0x599FC442);
  LODWORD(STACK[0x4D0]) = v132;
  int v140 = ((2 * ((v137 + 1413930644) ^ 0x5446DE94 | (v135 >> 5))) & 0x72BF7FB6 ^ 0x286022)
       + (((v137 + 1413930644) ^ 0x5446DE94 | (v135 >> 5)) ^ 0x3FEB8FCE);
  unsigned int v141 = ((876609536 * (v136 ^ 0xA88F90C9) - ((1753219072 * (v136 ^ 0xA88F90C9)) & 0x9A800000) + 1299097313) ^ 0x4D6EA6E1) & 0xFFC00000 | ((-1957866287 * (v136 ^ 0xA88F90C9) - ((379234722 * (v136 ^ 0xA88F90C9)) & 0x727839FC) + 960240894) >> 10);
  unsigned int v142 = ((2 * v141) & 0xFF43F4FE ^ 0x940E) + (v141 ^ 0xFFAFB578);
  unsigned int v143 = ((714735616 * (v132 ^ 0x43D4086F) - ((1429471232 * (v132 ^ 0x43D4086F)) & 0x820C0000) - 1056464228) ^ 0xC107A29C) & 0xFFFE0000 | (((~(1490234010 * (v132 ^ 0x43D4086F)) | 0xA1316EC1) + 1818858829 * (v132 ^ 0x43D4086F) - 1352185696) >> 15);
  unsigned int v144 = (v143 ^ 0x53FCE148) + ((2 * v143) & 0xA7FB7F0C ^ 0x23D0C) + v139 + v140 - v142 - 345773624;
  int v145 = -1985904479 * v140 - 943982026 - ((323158338 * v140 + 507489930) & 0x313862B8);
  unsigned int v146 = ((-1918894080 * v144 - ((457179136 * v144 + 801112064) & 0xDC400000) - 2045793306) ^ 0x6E2FABE6) & 0xFFE00000 | ((-742505363 * v144 - ((-1485010726 * v144 + 1889001854) & 0xA2743346) - 1987704222) >> 11);
  unsigned int v147 = ((2 * v146) & 0xFAFBF7FE ^ 0x304686) + (v146 ^ 0xFD67DCBC);
  unsigned int v148 = 1107296256 * v140 - ((-2080374784 * v140 + 335544320) & 0xBBBBBBBB) - 402964645;
  unsigned int v149 = (((~(-233665792 * v139 + 525580032) | 0x532FF9FF) - 116832896 * v139 - 435036449) ^ 0xD668035E) & 0xFFFFFF80 | ((-1007545717 * v139 - ((132392214 * v139 + 1681827694) & 0x4A2A9D3A) + 1463067220) >> 25);
  unsigned int v150 = v149 ^ 0xCD7D0FA8;
  unsigned int v151 = (2 * v149) & 0x9AFA1F74 ^ 0x24;
  unsigned int v153 = -597694891 * v152 - ((952093866 * v152 + 235209374) & 0x250313F0) + 1501825863;
  unsigned int v154 = ((553648128 * v142 - ((1107296256 * v142 + 1107296256) & 0xA0000000) + 1910811819) ^ 0xD0E4ACAB) & 0xFF000000 | ((1254474017 * v142 - ((-1786019262 * v142 - 384570046) & 0xBA67A77C) - 776091041) >> 8);
  unsigned int v155 = ((2 * v154) & 0xBFFDFFDE ^ 0xB86786) + (v154 ^ 0x5FA3CC3C);
  LOBYTE(v6) = ((2 * (v6 & 9 ^ 0xC3)) | 0xA2) - (v6 & 9 ^ 0xC3) - 81;
  unsigned int v156 = ((-80322113 * v147 - ((1986839422 * v147 + 1802943358) & 0x6D453E00) - 1403126593) ^ 0xB6A29F00) >> (v6 ^ 0x93);
  unsigned int v157 = ((v156 - ((2 * v156) & 0x8DAA2E2C) + 1188370198) ^ 0x46D51716) >> (v6 ^ 0x9A);
  unsigned int v158 = ((2 * v157) & 0xFF7F8E7C) + (v157 ^ 0x7FBFC73E);
  int v159 = v150 + v151 + v152 - v155 - v147 + 264816434;
  unsigned int v160 = v158 - 545259520 * v147;
  unsigned int v161 = -351613019 * v155 - ((-703226038 * v155 + 381260778) & 0xDF477554) + 2063631519;
  unsigned int v162 = (1239945263 * v159 - ((332406878 * v159 + 806917046) & 0x28A089DEu) + 207392458) >> 16;
  unsigned int v163 = 1409286144 * v152 - ((-1476395008 * v152 + 2013265920) & 0xA0000000) + 221491424;
  int v164 = 271515648 * v159 - ((543031296 * v159 + 330694656) & 0x3D360000) - 394865740;
  unsigned int v165 = v160 + 58720256;
  int v166 = 671088640 * v155 - ((1342177280 * v155 + 1342177280) & 0x70000000) + 1669407242;
  int v167 = ((2 * (v162 & 0x1ABD ^ 0x399050FD)) | 0x2A18FF1E) - (v162 & 0x1ABD ^ 0x399050FD) + 1794343025;
  unsigned int v168 = v167 ^ 0xAC9C3F62 | ((v164 & 0x9950000 ^ 0x9366FA7D) - 1345862172) ^ 0x4BBFC061;
  unsigned int v169 = (((((2 * (v162 & 0xE542 ^ 0x6540)) | 0x4BC03862) - (v162 & 0xE542 ^ 0x6540) - 635444273) ^ 0x23F378C) - 1) ^ 0x27DFCABC | ((v164 & 0xF66A0000 ^ 0x850B0090) + (v164 & 0x24080000 ^ 0x2010D12C) - ((v164 & 0xF66A0000 ^ 0x850B0090) & 0x24090090)) ^ 0x3718D12C;
  unsigned int v170 = (v169 - ((2 * v169) & 0xC73D72B2) + 1671346521) ^ 0x639EB959 | (v168
                                                                       - 2 * (v168 & 0x62ED4E5F ^ v167 & 8)
                                                                       - 487764393) ^ 0xE2ED4E57;
  unsigned int v171 = ((2 * v170) & 0xEBFAB7EC) + (v170 ^ 0x75FD5BF6);
  unsigned int v172 = (v163 ^ 0xD133B0E0) & 0xFC000000 | (v153 >> 6);
  int v173 = v172 ^ 0x5E31FB70;
  unsigned int v174 = (2 * v172) & 0xBCF7FAAE ^ 0x94080E;
  unsigned int v175 = -((-309554688 * v158 + 1148625920) & 0xD21A7000) - 154777344 * (v160 + 58720256) - 1958180109;
  LODWORD(STACK[0x5D0]) = v133;
  LODWORD(STACK[0x510]) = v136;
  int v176 = v133 ^ v118 ^ v136;
  unsigned int v177 = (-1745435063 * v165 - 2 * ((-1745435063 * v165 + 312621906) & 0x1150610F ^ (-1745435063 * v165) & 1) + 66231392) >> 24;
  LODWORD(STACK[0x560]) = v176;
  if (v176 == -1943451284) {
    int v178 = 33;
  }
  else {
    int v178 = v177 ^ 0xCF;
  }
  int v179 = (v178 & (v177 ^ 0x11)) - ((2 * (v178 & (v177 ^ 0x11))) & 0x66666666);
  unsigned int v180 = ((2 * ((v166 ^ 0xBB81220A) & 0xF8000000 | (v161 >> 5))) & 0xFCBA41F6 ^ 0xCBA01A2)
       + (((v166 ^ 0xBB81220A) & 0xF8000000 | (v161 >> 5)) ^ 0xF9203D2E);
  unsigned int v181 = ((v177 & 0xDE ^ 0x18) + (v177 & 0xC8 ^ 0xE272CFE1) - ((v177 & 0xDE ^ 0x18) & 0xC8)) ^ 0xE7720EE9;
  int v182 = -1125687931 - v181 + ((2 * v181) & 0x200C4F4);
  unsigned int v183 = (~(175802306 * v180 + 459973834) | 0xED5590F7) + 356336609 * v180 + 655002090;
  unsigned int v184 = ((v175 & 0xDD1EDE00 ^ 0xCC064000) - ((2 * (v175 & 0xDD1EDE00 ^ 0xCC064000)) & 0x9A118800) - 852966235) ^ 0xEB2895A9;
  unsigned int v185 = (v179 - 1731056333) ^ 0x98D22D33 | (((2 * v184) | 0x300EE7C4) - v184 + 1744342046) ^ 0xBB0D7AEE;
  int v186 = v173 + v174 + v180 - v165 - v171 - 288541355;
  unsigned int v187 = (v182 - 835584) ^ 0xB9DA5C8D | ((((v175 & 0x22E12100 ^ 0xF0C46EB) - 1) & 0x1C862C0 ^ 0x40801800)
                                       + (((v175 & 0x22E12100 ^ 0xF0C46EB) - 1) ^ 0xB5D66FE)
                                       - ((((v175 & 0x22E12100 ^ 0xF0C46EB) - 1) ^ 0xB5D66FE) & 0xC02014)) ^ 0x65987AC0;
  unsigned int v188 = ((2 * v185) & 0xF7FDEFBE) + (v185 ^ 0x7BFEF7DF) + (v187 ^ 0xAFDAE7FF) + ((2 * v187) & 0x5FB5CFFE);
  int v189 = v188 - ((2 * v188 + 676085828) & 0x4CB9DAAE) - 92074631;
  unsigned int v190 = 260308992 * v180 - ((520617984 * v180 - 1826095104) & 0xB9880000) + 643482839;
  unsigned int v191 = ((-585842332 * v171 - 2 * ((-585842332 * v171 + 1501273576) & 0x69C4E3F4 ^ (-585842332 * v171) & 4)) & 0xFFFFFFFC | ((-146460583 * v171 - ((-292921166 * v171 - 1396846860) & 0x92E27ACE) - 1613749023) >> 30))
       + 1128301016;
  unsigned int v192 = ((2 * v191) & 0xF57FFEF6 ^ 0xD109C6E2) + (v191 ^ 0x137B1C8A);
  unsigned int v193 = ((v190 ^ 0xDCC6C4D7) & 0xFFFC0000 | (v183 >> 14)) ^ 0x22554;
  int v194 = v193 - 2 * (v193 & 0x70269FED ^ (v183 >> 14) & 8) + 1881579493;
  unsigned int v195 = ((-1175453696 * v186 - ((1944059904 * v186 - 228589568) & 0xAF600000) - 790352540) ^ 0x57B42D64) & 0xFFF00000 | ((687160223 * v186 - ((300578622 * v186 + 400740134) & 0x18149BAEu) - 134498966) >> 12);
  unsigned int v196 = ((2 * v195) & 0x7EE8B7CE ^ 0x8148) + (v195 ^ 0xBF749B43);
  int v197 = (((v189 ^ 0x265CED57) - v192 - 177683611 + (~(2 * ((v189 ^ 0x265CED57) - v192) - 176161034) | 0xAAE782D)) ^ 0x50491431)
       - v196
       - 1082893337;
  int v198 = (v194 ^ 0x567A72B2 ^ v189)
       - (v196
        + v192)
       - ((2 * ((v194 ^ 0x567A72B2 ^ v189) - (v196 + v192)) + 73971396) & 0x5C40286)
       - 1122607963;
  unsigned int v199 = (1298035837 * (((2 * v197) & 0xF67E9EE8) + (v197 ^ 0xFB3F4F74))
        - ((-1698895622 * (((2 * v197) & 0xF67E9EE8) + (v197 ^ 0xFB3F4F74)) + 586893496) & 0x84AC8306)
        - 741087777) ^ v198;
  LODWORD(STACK[0x4A0]) = v199;
  unsigned int v200 = (v199 ^ 0x40B440C0) - ((2 * (v199 ^ 0x40B440C0) - 518696158) & 0xC3999EAE) - 766019352;
  int v201 = v198 ^ 0x2E20143;
  LODWORD(STACK[0x610]) = v200;
  int v202 = v200 ^ 0x61CCCF57;
  int v203 = (v202 & (v198 ^ 0x2E20143)) - ((2 * (v202 & (v198 ^ 0x2E20143))) & 0x25BA3688);
  unsigned int v204 = v196 + 1082893337 + v202 - ((2 * (v196 + 1082893337 + v202)) & 0xEBDFBB5C);
  unsigned int v205 = ((2 * (v192 + 88080517 + v202)) & 0xEABFDFFE) + ((v192 + 88080517 + v202) ^ 0x755FEFFF);
  unsigned int v206 = ((v202 + v201) ^ 0xE9D7E9FB)
       + ((2 * (v202 + v201)) & 0xD3AFD3F6)
       + ((2 * v203 - 1514523000) ^ 0x2DBEF60D)
       + ((2 * (2 * v203 - 1514523000)) & 0xEFF67EF4 ^ 0xB48B93EF)
       + 1;
  unsigned int v207 = v206 - ((2 * v206 + 474393344) & 0x9268413C) + 1465349662;
  LODWORD(STACK[0x500]) = v207;
  unsigned int v208 = v207 ^ 0xC934209E;
  unsigned int v209 = -835817011 * v202 - ((-1671634022 * v202) & 0xAE2232DE) + 1460738415;
  unsigned int v210 = v204 + 1978654126;
  LODWORD(STACK[0x650]) = v210;
  LODWORD(STACK[0x4F0]) = v205 - 1969221631;
  if (v205 - 1969221631 >= 0xF510DE7C) {
    int v211 = -438265827;
  }
  else {
    int v211 = -621709671;
  }
  LODWORD(STACK[0x5C0]) = v211;
  unsigned int v212 = ((-(((v205 << 28) + 0x10000000) & 0x30000000) - 2013265920 * v205 + 637031079) ^ 0x9DF852A7) & 0xF8000000 | ((-1679190127 * v205 - ((399716130 * v205 + 335892258) & 0x1DB9A3E8) - 1461749371) >> 5);
  int v213 = 1558419968 * v202 - ((969356288 * v202) & 0x454F7400);
  unsigned int v214 = ((1643700224 * (v210 ^ 0x75EFDDAE) - ((-1007566848 * (v210 ^ 0x75EFDDAE)) & 0xEAEA4000) - 176867034) ^ 0xF5753926) & 0xFFFFE000 | ((1019416519 * (v210 ^ 0x75EFDDAE) - ((2038833038 * (v210 ^ 0x75EFDDAE)) & 0x40E29A6A) - 1603187403) >> 19);
  unsigned int v215 = ((2 * v214) & 0x7DDFDED4 ^ 0x814) + (v214 ^ 0xBEEFFB64);
  int v216 = 2
       * ((v212 ^ 0x2A481364)
        + (v212 ^ 0xD70E6A3)
        + ((2 * v212) & 0x6DF3FFA6 ^ 0x771E32F9)
        + ((2 * v212) & 0x5C7DEBD6 ^ 0x86DC916))
       - 1854532652;
  unsigned int v217 = ((2 * v212) & 0xFE79F6FE ^ 0x869C41E) + (v212 ^ 0x7B4A1DF0) + (v216 ^ 0x7FFBA38F);
  unsigned int v218 = v217
       + ((2 * v216) & 0xFFF7471C)
       - 2 * ((v217 + ((2 * v216) & 0xFFF7471C) + 13066482) & 0x6181B69B ^ v217 & 1)
       - 498526324;
  unsigned int v219 = (((v213 + 581417814) ^ 0x22A7BB56) & 0xFFFFFE00 | (v209 >> 23)) ^ 0xAE;
  int v220 = v219 - 2 * (v219 & 0x6E7AF537 ^ (v209 >> 23) & 0x11) + 1853551910;
  unsigned int v221 = ((581304320 * v208 - ((1162608640 * v208) & 0xAEC40000) - 681419036) ^ 0xD7625EE4) & 0xFFFE0000 | (((~(987964070 * v208) | 0x594E6B05) - 1653501613 * v208 - 749155714) >> 15);
  unsigned int v222 = ((2 * v221) & 0x6FEDE7DA ^ 0x14542) + (v221 ^ 0xB7F7555C);
  unsigned int v223 = ((v215 + 1091571862 + (v220 ^ 0x8FFB43BC ^ v218)) ^ 0xBF95B78)
       - v222
       + ((2 * (v215 + 1091571862 + (v220 ^ 0x8FFB43BC ^ v218))) & 0x17F2B6F0);
  unsigned int v224 = v218 ^ 0xE181B69A;
  unsigned int v225 = -2019870771 * (v218 ^ 0xE181B69A) - ((255225754 * (v218 ^ 0xE181B69A)) & 0xBE74C184) + 1597661378;
  int v226 = -1067558529 * v215 - ((12366590 * v215 + 664846548) & 0x2AD325FA) + 154792807;
  unsigned int v227 = ((335544320 * v223 - ((671088640 * v223 + 1207959552) & 0xDFFFFFFF) + 312372720) ^ 0xEE9E6DF0 | ((-1797732091 * v223 - ((162632202 * v223 + 247443090) & 0xBB16B92) + 1161334034) >> 6)) ^ 0x21762D7;
  int v228 = 1501495296 * v215 - ((855506944 * v215 + 1087635456) & 0x54380000) - 1970892136;
  int v229 = 1020903016 * v224 - ((2041806032 * v224) & 0x513A30E0);
  unsigned int v230 = ((2 * ((v228 ^ 0x2A1C9298) & 0xFFFF0000 | HIWORD(v226))) & 0xFFAF6B6E ^ 0x12A42)
       + (((v228 ^ 0x2A1C9298) & 0xFFFF0000 | HIWORD(v226)) ^ 0xFFD720DE);
  unsigned int v231 = ((v229 + 681384050) ^ 0x289D1872) & 0xFFFFFFF8 | (v225 >> 29);
  int v232 = 2 * v230 + 5280914;
  unsigned int v233 = v232 ^ 0xE440C019;
  int v234 = (2 * v232) & 0x377E7FCC;
  unsigned int v235 = ((-2124698916 * v222 - ((45569464 * v222 + 253230248) & 0x181A5FB0) - 744935890) ^ 0xC0D2FDA) & 0xFFFFFFFC | ((542567095 * v222 - ((11392366 * v222 + 600178474) & 0x39306DB6) - 830785936) >> 30);
  unsigned int v236 = ((2 * v235) & 0x70FFFF6E ^ 4) + (v235 ^ 0xB87FFFB5);
  unsigned int v237 = v227 - ((2 * v227) & 0xDA3430BC) + 1830426718;
  int v238 = v237 ^ 0x6D1A185E;
  unsigned int v239 = 1896977585 * (v237 ^ 0x6D1A185E) - ((-501012126 * (v237 ^ 0x6D1A185E)) & 0x86E3B3A4) + 1131534802;
  int v240 = v230 + 2640457 + (((v231 ^ 2) - ((2 * v231) & 0x6194B558) + 818567852) ^ 0x5DD042F2 ^ v237);
  unsigned int v241 = v240 ^ 0xFFD7FBEF;
  unsigned int v242 = (2 * v240) & 0xFFAFF7DE;
  unsigned int v243 = -888650713 * v230 - ((101746766 * v230 + 105736766) & 0x63E8134) - 230296135;
  unsigned int v244 = v233 - v234 - 1547237950 - v236 + v241 + v242;
  int v245 = 123824069 * v244 - ((247648138 * v244 + 739116226) & 0x2B3F6728) + 1806087669;
  int v246 = 1634190592 * v244 - ((47155712 * v244 + 33866240) & 0x27BC400) - 2009054340;
  unsigned int v247 = (((573740576 * v238 - ((1147481152 * v238) & 0x9D26CD00) - 829200752) ^ 0xCE936690) & 0xFFFFFFE0 | (v239 >> 27)) ^ 8;
  unsigned int v248 = v247 - ((2 * v247) & 0xFBC56870);
  int v249 = 740364444 * v230 - ((1480728888 * v230 + 2033559800) & 0x56E4C788) + 1745696834;
  unsigned int v250 = ((v249 ^ 0xAB7263C6) & 0xFFFFFFFC | (v243 >> 30))
       - 2 * (((v249 ^ 0xAB7263C6) & 0x50587E18 | (v243 >> 30) & 0x50587E1B) ^ v249 & 0x10)
       + 1347976715;
  unsigned int v251 = ((2 * ((v246 ^ 0x813DE27C) & 0xFFFFFF00 | HIBYTE(v245))) & 0xCEBFB1F2 ^ 0x122)
       + (((v246 ^ 0x813DE27C) & 0xFFFFFF00 | HIBYTE(v245)) ^ 0x675FD86C);
  unsigned int v252 = 44593339 * v251 - ((89186678 * v251 + 827270202) & 0x30EAB084) + 1360849503;
  int v253 = (v248 + 2112009272) ^ 0x7DE2B438;
  int v254 = -805306368 * v253 - ((4 * v239) & 0x60000000);
  unsigned int v255 = (((457703424 * v236 - ((915406848 * v236 - 1894776832) & 0x8B500000) + 221753301) ^ 0x45AFAFD5) & 0xFFF80000 | ((1752761193 * v236 - ((-789444910 * v236 + 1006891490) & 0xBEFDFB1A) + 2105603710) >> 13)) ^ 0x6FBF7;
  LOBYTE(v247) = ((v239 >> 27) & 0x1E ^ 0xA) - ((2 * ((v239 >> 27) & 0x1E ^ 0xA)) & 0x34) - 37;
  unsigned int v256 = (v250 ^ 0x2DBACA33 ^ (v248 + 2112009272)) - 1734334713 + v251;
  unsigned int v257 = v255 - ((2 * v255) & 0xC7D06100) + 1676161152;
  int v258 = v257 ^ 0x63E83080;
  unsigned int v259 = 1287843335 * (v257 ^ 0x63E83080) - ((-1719280626 * (v257 ^ 0x63E83080)) & 0xA0EC73E8) + 1349925364;
  unsigned int v260 = v257 ^ 0xBBAE0094 ^ (v256 - ((2 * v256) & 0xB08C6028) - 666488812);
  unsigned int v261 = ((-54826807 * v260 - ((2037830034 * v260) & 0x7CA625C0) + 1045631712) ^ 0x3E5312E0) >> (v247 ^ 0xD9);
  unsigned int v262 = ((v254 + 838229640) ^ 0x31F65E88) & 0xF0000000 | ((-1510210467 * v253
                                                          - ((1274546362 * v253) & 0x48028814u)
                                                          + 604062730) >> 4);
  unsigned int v263 = ((2 * v262) & 0xF1CF7FFA ^ 0x802880) + (v262 ^ 0xFAA7ABBD);
  LOBYTE(v26fseek(v0, 0LL, 2) = v247 ^ 0xC7;
  unsigned int v264 = ((-869343120 * v258 - ((408797408 * v258) & 0x2A136AE0) + 352957818) ^ 0x1509B57A) & 0xFFFFFFF0 | (v259 >> 28);
  unsigned int v265 = ((v261 - ((2 * v261) & 0x49DE066A) + 619643701) ^ 0x24EF0335) >> v262;
  unsigned int v266 = ((1356953088 * v251 - ((566422528 * v251 + 508064768) & 0x57D24C00) - 83009308) ^ 0xABE926E4) & 0xFFFFFE00 | (v252 >> 23);
  int v267 = (v266 ^ 0x30) - 2 * ((v266 ^ 0x30) & 0x7E2E59F ^ (v252 >> 23) & 2);
  unsigned int v268 = ((2 * v264) & 0xDBB2F9D6 ^ 2) + (v264 ^ 0xEDD97CEE) - v263;
  unsigned int v269 = v268 - ((2 * v268 + 370968100) & 0x8BC1ED66) - 789628475;
  int v270 = v267 + 132310429;
  int v271 = (v267 + 132310429) ^ 0x7E2E59D;
  unsigned int v272 = 2 * ((v271 & (v269 ^ 0xC5E0F6B3)) - ((2 * (v271 & (v269 ^ 0xC5E0F6B3))) & 0x7F661A2)) + 133587362;
  unsigned int v273 = ((-219307228 * v260) ^ 0xFF56FFC3)
       + ((-438614456 * v260) & 0xFEADFF80)
       + ((-256 - -2 * v265) & 0x72)
       + ((127 - v265) ^ 0x67DB4E46);
  int v274 = v273 - 2 * ((v273 + 416133636) & 0x1855F233 ^ v273 & 2) + 824419381;
  unsigned int v275 = (v269 ^ v270 ^ 0xC202132E) + (v272 ^ 0x50C94F59) - 1463758587 + ((2 * v272) & 0xAE7E5DF4 ^ 0xE6C4144);
  unsigned int v276 = (v275 ^ 0x46FF3FEC) + ((2 * v275) & 0x8DFE7FD8) - 1191133164 + (v274 ^ 0x9855F231);
  unsigned int v277 = (v274 ^ 0x9855F231)
       + 1391156377
       * (((2 * (v263 + 119029372 + v271 + 391)) & 0xF9BBFFDC) + ((v263 + 119029372 + v271 + 391) ^ 0x7CDDFFEE))
       + 1809744578;
  int v278 = v276 - ((2 * v276) & 0x5C207A76) - 1374667461;
  unsigned int v279 = (v277 - ((2 * v277) & 0xD54423C8) + 1789006308) ^ v278;
  int v280 = (v279 ^ 0x8FA299B) + 1;
  LODWORD(STACK[0x4B0]) = v279 ^ 0xF9DFDE94;
  LODWORD(STACK[0x550]) = v274;
  unsigned int v281 = v279 ^ 0xF9DFDE94 ^ v274;
  unsigned int v282 = v280 + (v278 ^ 0xAE103D3B) - ((2 * (v280 + (v278 ^ 0xAE103D3B))) & 0x79432EFE) - 1130260609;
  LODWORD(STACK[0x570]) = v282;
  int v283 = v280 + v271 + 558302732;
  int v284 = v283 - ((2 * (v280 + v271)) & 0x428E0C18);
  LODWORD(STACK[0x600]) = v284;
  HIDWORD(v285) = v279;
  LODWORD(v285) = (1810100545 * (v279 ^ 0xF705D664) + 1790908392 - ((-674766206 * (v279 ^ 0xF705D664)) & 0xD57E2FD4) + 2) ^ 0x6ABF17E8;
  int v286 = (v285 >> 2) - ((2 * (v285 >> 2)) & 0xE6ADC320) + 1935073680;
  unsigned int v287 = ((1570816535 * (v284 ^ 0x2147060C) - ((994149422 * (v284 ^ 0x2147060C)) & 0x26CE159Eu) - 1821963569) >> 3) ^ 0x126CE159 | (((v283 << 29) ^ 0x60000000) - 142464520 + ((2 * ((v283 << 29) ^ 0x60000000) + 0x40000000) & 0x80000000)) ^ 0xD78229F8;
  LODWORD(STACK[0x520]) = v281;
  HIDWORD(v285) = v281 ^ 1;
  LODWORD(v285) = (-2094532911 * (v281 ^ 0x968FFAC1) - 1882631504 - ((105901474 * (v281 ^ 0x968FFAC1)) & 0x1F92A56C) + 6) ^ 0x8FC952B0;
  unsigned int v288 = v287 - ((2 * v287) & 0xEB75596E) + 1975168183;
  int v289 = v288 ^ 0x75BAACB7;
  int v290 = 59574554 * (v288 ^ 0x75BAACB7);
  unsigned int v291 = 29787277 * (v288 ^ 0x75BAACB7) - (v290 & 0xAA327854) + 1427717162;
  int v292 = (v285 >> 3) - ((2 * (v285 >> 3)) & 0x36CA2A06) + 459609347;
  unsigned int v293 = ((1992468288 * (v282 ^ 0xBCA1977F) - ((-310030720 * (v282 ^ 0xBCA1977F)) & 0xD4F5C380) - 361045519) ^ 0xEA7AE1F1) & 0xFFFFFFC0 | ((1037765277 * (v282 ^ 0xBCA1977F) - ((2075530554 * (v282 ^ 0xBCA1977F)) & 0x991D04B2) - 863075751) >> 26);
  unsigned int v294 = ((2 * v293) & 0xF836BBEE ^ 0x66) + (v293 ^ 0x7C1B5DC4);
  int v295 = (v288 ^ v286 ^ v292 ^ 0x1D895824) - v294 + 2082168311;
  unsigned int v296 = ((2 * v295) & 0xFFF72BEE) + (v295 ^ 0x7FFB95F7);
  unsigned int v297 = -652470813 * v296 - ((-1304941626 * v296 + 892438006) & 0xC4D495D0) - 50131485;
  unsigned int v298 = (((v290 - ((119149108 * v289) & 0xF348F1A0)) & 0xFFFFFFFE | (v291 >> 31)) - 106661680) ^ 0xF9A478D0;
  unsigned int v299 = v298 - ((2 * v298) & 0xC799DC9C) + 1674374734;
  unsigned int v300 = -2110409303 * v294 - ((74148690 * v294 + 750299618) & 0x4FBD5FC6) - 29686572;
  unsigned int v301 = (((1468792832 * v296 - ((-1357381632 * v296 + 400031744) & 0x86600000) + 1327314227) ^ 0x43313533) & 0xFFFC0000 | (v297 >> 14)) ^ 0x389A9;
  int v302 = 1800536064 * v294 - ((1453588480 * v294 + 1405353984) & 0x76440000) - 452661809;
  int v303 = v301 - 2 * (v301 & 0x2296BC33 ^ (v297 >> 14) & 0x10) + 580303907;
  unsigned int v304 = ((-1525776384 * (v292 ^ 0x1B651503) - ((1243414528 * (v292 ^ 0x1B651503)) & 0x827E0000) + 1094648425) ^ 0x413F0269) & 0xFFFF8000 | ((-826717667 * (v292 ^ 0x1B651503) - ((494048314 * (v292 ^ 0x1B651503)) & 0x572DE34Au) + 731312549) >> 17);
  unsigned int v305 = ((2 * v304) & 0x1FFBFF84 ^ 0x2B84) + (v304 ^ 0x8FFDEA09);
  unsigned int v306 = -1981558481 * v305 - ((331850334 * v305 + 789926596) & 0x2F77DE24) - 1354327948;
  unsigned int v307 = ((2 * ((v302 ^ 0x3B22EDCF) & 0xFFFE0000 | (v300 >> 15))) & 0x9DF32BAA ^ 0xB2A)
       + (((v302 ^ 0x3B22EDCF) & 0xFFFE0000 | (v300 >> 15)) ^ 0xCEF9DA68);
  int v308 = (v299 ^ 0x415A526D ^ v303) - (v307 + v305) + 1593283991;
  unsigned int v309 = ((2 * v308) & 0xBCEEDBDE) + (v308 ^ 0x5E776DEF);
  int v310 = 1327401336 * v305 - ((507319024 * v305 + 2024445472) & 0x75D7E780) - 146719018;
  HIDWORD(v285) = (v297 >> 14) ^ 1;
  LODWORD(v285) = (-1879532367 * (v303 ^ 0x2296BC23) + 376216744 - ((535902562 * (v303 ^ 0x2296BC23)) & 0x2CD93958) + 4) ^ 0x166C9CA8;
  unsigned int v311 = ((v310 ^ 0x3AEBF3C6) & 0xFFFFFFF8 | (v306 >> 29))
       - ((2 * ((v310 ^ 0x3AEBF3C6) & 0xFFFFFFF8 | (v306 >> 29))) & 0xE8187B22);
  int v312 = (v285 >> 3) - ((2 * (v285 >> 3)) & 0xA340337C) - 778036802;
  unsigned int v313 = v312 ^ 0xD1A019BE;
  unsigned int v314 = -2097495347 * (v312 ^ 0xD1A019BE) - ((99976602 * (v312 ^ 0xD1A019BE)) & 0x2A046120) - 1795018608;
  v311 -= 200524399;
  unsigned int v315 = (((-1085202432 * v309 + 849939910 - ((2124562432 * v309 + 1900429312) & 0x740BC000) + 2060) ^ 0x3A05F5D2) & 0xFFFFE000 | ((-1975125367 * v309 - ((344716562 * v309 - 1298167246) & 0xDCBD2D70) + 1202609105) >> 19)) ^ 0x1DCB;
  unsigned int v316 = v315 - ((2 * v315) & 0xCF1354DE) + 1737075311;
  unsigned int v317 = 2
       * (((v312 ^ 0xD1A019BE) & (v311 ^ 0xF40C3D91)) - ((2 * ((v312 ^ 0xD1A019BE) & (v311 ^ 0xF40C3D91))) & 0x6508F7AC))
       + 1695086508;
  unsigned int v318 = (((498728960 * v307 - ((997457920 * v307 + 75235328) & 0x40B80000) + 580565990) ^ 0x205CBBE6) & 0xFFFE0000 | ((1843957469 * v307 - 160825344 - ((466689466 * v307 + 248185406) & 0x1E0914EC) + 2965) >> 15)) ^ 0x11E09;
  unsigned int v319 = (v311 ^ 0x25AC242F ^ v312) + (v317 ^ 0x9BB7C853) + 21020673 + ((2 * v317) & 0xFD7E7FFC ^ 0xC8106F58);
  int v320 = v319 - 975663303 + (~(2 * v319) | 0x744EE18F);
  unsigned int v321 = v318 - ((2 * v318) & 0xE0669BBA) - 265073187;
  unsigned int v322 = v321 ^ 0xF0334DDD;
  unsigned int v323 = 901433759 * (v321 ^ 0xF0334DDD) - ((24482622 * (v321 ^ 0xF0334DDD)) & 0x1DC9F44) - 2131865694;
  int v324 = v321 ^ v316 ^ 0x5262688A ^ v320;
  unsigned int v325 = -1895857437 * v324 - ((503252422 * v324) & 0xB545418C) - 626876218;
  int v326 = -1049526272 * v324 - ((48431104 * v324) & 0xD330000);
  unsigned int v327 = (-1757413376 * (v316 ^ 0x6789AA6F) - ((780140544 * (v316 ^ 0x6789AA6F)) & 0xF1FFFFFF) - 121452476) ^ 0xF8C2C844 | ((-1046001059 * (v316 ^ 0x6789AA6F) - ((-2092002118 * (v316 ^ 0x6789AA6F)) & 0xA74B3F7A) + 1403363261) >> 10);
  unsigned int v328 = ((2 * v327) & 0xFFCFF4E6 ^ 0x9D0C6) + (v327 ^ 0xFFF31314);
  unsigned int v329 = (((v326 - 2036747509) ^ 0x8699B30B) & 0xFFFF8000 | (v325 >> 17)) ^ 0x6D51;
  unsigned int v330 = v329 - ((2 * v329) & 0xD55C1F3C);
  unsigned int v331 = ((-1218890784 * v322 - ((1857185728 * v322) & 0xED28DD80) - 158044474) ^ 0xF6946EC6) & 0xFFFFFFE0 | (v323 >> 27);
  unsigned int v332 = (((-175793664 * v313 - ((-351587328 * v313) & 0x84A30800) - 1034845133) ^ 0xC2518433) & 0xFFFFFE00 | (v314 >> 23)) ^ 0x12A;
  int v333 = v332 - ((2 * v332) & 0xC4E0030) - 2044264424;
  unsigned int v334 = v328 + 1574285 + (v333 ^ 0x86270018);
  unsigned int v335 = v328
       + 1574285
       + (((v331 ^ 0x10) - 2 * ((v331 ^ 0x10) & 0x6F940D9F ^ (v323 >> 27) & 0xC) + 1871973779) ^ 0xE9B30D8B ^ v333);
  int v336 = (v330 + 1789792158) ^ (v335 - ((2 * v335) & 0x241793FE) - 1844721153);
  int v337 = (v330 + 1789792158) ^ 0x6AAE0F9E;
  unsigned int v338 = (v334 ^ 0x6B5CB9FF) + ((2 * v334) & 0xD6B973FE) - 1801239039 + v337;
  unsigned int v339 = v336 ^ 0x8AAB7E05 ^ (((2 * v338) & 0x33FFFFB6)
                            + (v338 ^ 0x99FFFFDB)
                            - ((2 * (((2 * v338) & 0x33FFFFB6) + (v338 ^ 0x99FFFFDB)) + 1780832632) & 0xE41D70C8)
                            - 1490983648);
  unsigned int v340 = v339 - ((2 * v339 - 1701039570) & 0xEA4B26D2);
  LODWORD(STACK[0x5F8]) = v340 + 1114877056;
  LODWORD(STACK[0x660]) = ((v340 + 1114877056) ^ 0xF5259369)
                        + v337
                        + 234944236
                        - ((2 * (((v340 + 1114877056) ^ 0xF5259369) + v337)) & 0x1C01EDD8);
  LODWORD(STACK[0x608]) = ((v340 + 1114877056) ^ 0xADA6C96)
                        + v328
                        - ((2 * (((v340 + 1114877056) ^ 0xADA6C96) + v328) + 3148572) & 0xE1F65818)
                        - 250400358;
  uint64_t v341 = malloc(0x408uLL);
  STACK[0xAC0] = (unint64_t)v341;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((78 * (v341 != 0LL)) ^ LODWORD(STACK[0x640]))))();
}

uint64_t sub_1005CFB24(uint64_t a1)
{
  int v9 = STACK[0x5F0];
  LODWORD(STACK[0x468]) = LODWORD(STACK[0x5F0]) ^ 0x591A7AB9;
  LODWORD(STACK[0x440]) = (STACK[0x5C8] & v5) - ((2 * (STACK[0x5C8] & v5)) & 0x734E1C2A) + 967249429;
  LODWORD(STACK[0x438]) = (v5 | LODWORD(STACK[0x620])) - ((2 * (v5 | LODWORD(STACK[0x620]))) & 0xBCF5F93E) - 562365281;
  LODWORD(STACK[0x480]) = v7 >> 8;
  LODWORD(STACK[0x5C8]) = HIWORD(v7) ^ 0x3E0F9C74;
  LODWORD(STACK[0x420]) = v6 + 1114877082;
  unsigned int v10 = STACK[0x5F8];
  int v11 = LODWORD(STACK[0x5F8]) ^ v3;
  int v12 = (((2 * (v11 & 0x684CEC41 ^ 0x684CE040)) & 0x1011D880) - (v11 & 0x684CEC41 ^ 0x684CE040) + 2011562143) ^ 0x5522019F;
  int v13 = LODWORD(STACK[0x660]) ^ v1;
  LODWORD(STACK[0x430]) = (STACK[0x660] & 0xFFFFFDFF ^ 0x2602F7BC | 0xE9F3C520)
                        - (STACK[0x660] & 0xFFFFFDFF ^ 0x2602F7BC | 0x160C3ADF)
                        + 369900255;
  unsigned int v14 = (((2 * (v11 & 0x97B313BE ^ 0x17B1029A)) | 0xD398546A) - (v11 & 0x97B313BE ^ 0x17B1029A) - 1774987829) ^ 0x71AC2277;
  unsigned int v15 = (v14 & 0xA4A07C8C) - (v14 | 0xA4A07C8D);
  unsigned int v16 = LODWORD(STACK[0x608]) ^ 0xF0FB2C0C;
  LODWORD(STACK[0x428]) = v16 - 886089027 + v2 - ((2 * (v16 - 886089027 + v2)) & 0x88493E6C) - 1004232906;
  unsigned int v17 = (v12 - ((2 * v12) & 0x410DBA00) - 1601774314) ^ 0xE20E7856 | v15 ^ 0x510E98A3;
  int v18 = v17 - 2 * (v17 & 0x160E8493 ^ v12 & 1) + 370050194;
  LODWORD(STACK[0x448]) = v18;
  unsigned int v19 = (((-1933756032 * v13 - ((427455232 * v13) & 0x76B59400) + 995805790) ^ 0x3B5ACA5E) & 0xFFFFFF80 | ((119110259 * v13 - ((238220518 * v13) & 0x96394D30) + 1260168856) >> 25)) ^ 0x25;
  unsigned int v20 = v19 - ((2 * v19) & 0xD847E45C) + 1814295086;
  unsigned int v21 = ((1811939328 * v8 - ((1476395008 * v8) & 0x60000000) + 824216208) ^ 0x31208A90) & 0xFC000000 | ((-292073701 * v8 - ((1563336246 * v8) & 0x5D6B0724u) + 783647634) >> 6);
  unsigned int v22 = ((2 * v21) & 0xBBCFEB7C ^ 0x145A81C) + (v21 ^ 0x5D5D23B0);
  unsigned int v23 = ((-899678208 * (v18 ^ 0x160E8492) - ((348127232 * (v18 ^ 0x160E8492)) & 0x3B000000) - 1650778927) ^ 0x9D9B1CD1) & 0xFFE00000 | ((1892111955 * (v18 ^ 0x160E8492) - ((1636740262 * (v18 ^ 0x160E8492)) & 0x43D9389Cu) - 1578329010) >> 11);
  unsigned int v24 = ((2 * v23) & 0x176A9EBC ^ 0x281A24) + (v23 ^ 0x8BA172CD);
  unsigned int v25 = ((-228342528 * v16 - ((1690798592 * v16) & 0x6CAC2E00) - 1235871793) ^ 0xB65617CF) & 0xFFFFFF00 | ((-1259183163 * v16 - ((1776600970 * v16) & 0x7343702E) - 1180583913) >> 24);
  unsigned int v26 = ((2 * v25) & 0xEFEE1BFC ^ 0x170) + (v25 ^ 0xF7F70D47);
  int v27 = v22 - v26 + 1098279798 + ~(2 * ((v22 - v26 + 437196864) & 0x27675337 ^ (v22 - v26) & 2));
  int v28 = v20 ^ 0x6C23F22E;
  int v29 = 990449079 * (v20 ^ 0x6C23F22E) - ((907156334 * (v20 ^ 0x6C23F22E)) & 0x3FD5DF5A) + 535490477;
  unsigned int v30 = 2 * (((v27 ^ 0xA7675335) & (v20 ^ 0x6C23F22E)) - ((2 * ((v27 ^ 0xA7675335) & (v20 ^ 0x6C23F22E))) & 0xA7BD936))
      - 1971594954;
  unsigned int v31 = (v20 ^ 0xCB44A11B ^ v27) + (v30 ^ 0x54356E23) + 565266667 + ((2 * v30) & 0xBC9D6E28 ^ 0x14952228);
  HIDWORD(v3fseek(v0, 0LL, 2) = v24 + 1976430811 + (v31 ^ 0x33B99FD5);
  LODWORD(v3fseek(v0, 0LL, 2) = (1772274431 * (HIDWORD(v32) + ((2 * v31) & 0x67733FAA))
                - ((323323390 * (HIDWORD(v32) + ((2 * v31) & 0x67733FAA)) + 527199260) & 0x19C55942)
                + 1553523375) ^ 0xCE2ACA0;
  int v33 = (v32 >> 1) - ((2 * (v32 >> 1)) & 0x5CA75766) - 1370248269;
  unsigned int v34 = 1225264699 * (v33 ^ 0xAE53ABB3) + 1865223393 - ((-1844437898 * (v33 ^ 0xAE53ABB3)) & 0xDE5A058A);
  unsigned int v35 = 1757266405 * v26 - ((-780434486 * v26 - 740557932) & 0xCDB0678E) - 792317551;
  int v36 = 508559360 * v26 - ((1017118720 * v26 + 960495616) & 0x4C600000) - 2099918870;
  unsigned int v37 = ((-448640624 * v24 - ((-897281248 * v24 + 1414208064) & 0xCB50C2E0) - 1882329455) ^ 0x65A86171) & 0xFFFFFFF0 | ((-296475495 * v24 - ((-592950990 * v24 + 625258916) & 0xC546BDDE) + 1967503297) >> 28);
  unsigned int v38 = ((2 * v37) & 0xCBDE7FE6 ^ 4) + (v37 ^ 0x65EF3FFD);
  unsigned int v39 = ((151893760 * v28 - ((303787520 * v28) & 0x23D66200) + 300626340) ^ 0x11EB31A4) & 0xFFFFFF00 | HIBYTE(v29);
  unsigned int v40 = ((2 * v39) & 0x83EFBEFE ^ 0x3E) + (v39 ^ 0x41F7DF60);
  unsigned int v41 = ((v36 ^ 0xA635C7EA) & 0xFFF00000 | (v35 >> 12)) ^ 0x66D83;
  int v42 = v41 - ((2 * v41) & 0x17EA3138) + 200611996;
  unsigned int v43 = 513021603 * v38 - ((1026043206 * v38 + 761187470) & 0x941082BC) + 1622648741;
  int v44 = 189890560 * v38 - ((379781120 * v38 + 105316352) & 0x176C0000) - 1093029462;
  unsigned int v45 = 238747648 * (v33 ^ 0xAE53ABB3) - ((477495296 * (v33 ^ 0xAE53ABB3)) & 0x1C920000);
  unsigned int v46 = -1293815639 * v40 - ((1707336018 * v40 - 1435579822) & 0xB013A554) + 759248851;
  unsigned int v47 = STACK[0x610];
  LODWORD(STACK[0x640]) = HIBYTE(LODWORD(STACK[0x610])) ^ 0xF5E03B0;
  int v48 = 1895322752 * v40 - ((1643161856 * v40 + 929376512) & 0x72792200) - 722524697;
  unsigned int v49 = ((v40 - 1106763647 + (v42 ^ 0xA5A6B32F ^ v33)) ^ 0xBEBEFFFE)
      - v38
      + ((2 * (v40 - 1106763647 + (v42 ^ 0xA5A6B32F ^ v33))) & 0x7D7DFFFC);
  int v50 = 1275068416 * v49 - 1139897127;
  unsigned int v51 = -1183072685 * v49 - ((1928821926 * v49 - 1750653730) & 0x9304581A) - 1789542788;
  unsigned int v52 = (((v45 + 239677628) ^ 0xE4930BC) & 0xFFFF0000 | ((v34 - 2588) >> 16)) ^ 0x6F2D;
  int v53 = v52 - ((2 * v52) & 0x53D8792) - 2103524407;
  unsigned int v54 = v53 ^ 0x829EC3C9;
  unsigned int v55 = -1225981559 * (v53 ^ 0x829EC3C9) - ((1843004178 * (v53 ^ 0x829EC3C9)) & 0x4582A4A8) - 1564388780;
  unsigned int v56 = ((2 * (v50 & 0xFC000000 | (v51 >> 6))) & 0x5BA4597C ^ 0x2041160)
      + ((v50 & 0xFC000000 | (v51 >> 6)) ^ 0x2EF4240E);
  unsigned int v57 = ((v44 ^ 0xBB631AA) & 0xFFFF8000 | (v43 >> 17)) ^ 0x2504;
  unsigned int v58 = v57 - ((2 * v57) & 0xDC167638) - 301253860;
  unsigned int v59 = ((v48 ^ 0x393C9167) & 0xFFFFFF80 | (v46 >> 25)) ^ 0x6C;
  unsigned int v60 = ((v59 - ((2 * v59) & 0xA2C7C040) + 1365499936) ^ 0xD3FD23E9 ^ v53) - 768748734 + v56;
  int v61 = v60 - ((2 * v60) & 0x31A51CD6) - 1731031445;
  unsigned int v62 = 2 * (((v61 ^ 0x98D28E6B) & (v58 ^ 0xEE0B3B1C)) - ((2 * ((v61 ^ 0x98D28E6B) & (v58 ^ 0xEE0B3B1C))) & 0x157DF3B4))
      + 360575924;
  unsigned int v63 = (v58 ^ 0x76D9B577 ^ v61) + (v62 ^ 0x70950C53) - 1709768679 + ((2 * v62) & 0xCBD1FFCC ^ 0xAD1E748);
  unsigned int v64 = ((2 * v63) & 0x66BF7A7E) + (v63 ^ 0xB35FBD3F);
  unsigned int v65 = 1312000137 * v64 - ((-1670967022 * v64 + 2136638098) & 0xEEE933E0) + 924965689;
  LODWORD(STACK[0x5C0]) = HIWORD(v47) ^ 0x1A6A58B7;
  unsigned int v66 = (((824180736 * v54 - ((1648361472 * v54) & 0x74400000) + 976793814) ^ 0x3A38B0D6) & 0xFFE00000 | (v55 >> 11)) ^ 0x14582A;
  LODWORD(STACK[0x47C]) = v47 >> 8;
  int v67 = v66 - ((2 * v66) & 0x28FA1594) + 343739082;
  unsigned int v68 = (((-1978697760 * (v58 ^ 0xEE0B3B1C) - ((337571776 * (v58 ^ 0xEE0B3B1C)) & 0xE2544700) - 248896614) ^ 0xF12A239A) & 0xFFFFFFE0 | ((877689791 * (v58 ^ 0xEE0B3B1C) - ((1755379582 * (v58 ^ 0xEE0B3B1C)) & 0xBD3CAE3A) - 560048355) >> 27)) ^ 0x1B;
  unsigned int v69 = (1896947712 * v64 - ((1646411776 * v64 + 1347567616) & 0x60658000) + 1482418915) ^ 0xB032CAE3;
  unsigned int v70 = (((-1369833472 * v56 - ((1555300352 * v56 + 1114112000) & 0x718C0000) + 1509684129) ^ 0x38C7F3A1) & 0xFFFE0000 | ((-551430355 * v56 - ((1044622938 * v56 + 1341727028) & 0x59EC7C80) - 722284838) >> 15)) ^ 0x159EC;
  unsigned int v71 = v70 - ((2 * v70) & 0xBB66C748) + 1572037540;
  unsigned int v72 = ((2 * ((v67 ^ 0x147D0ACA) + (v71 ^ 0xA24C9C5B) + 1)) & 0xFFFE7DF2)
      + (((v67 ^ 0x147D0ACA) + (v71 ^ 0xA24C9C5B) + 1) ^ 0x7FFF3EF9);
  LODWORD(STACK[0x620]) = HIBYTE(v10) ^ 0x21312FEC;
  LODWORD(STACK[0x450]) = HIWORD(v10);
  unsigned int v73 = (v68 - ((2 * v68) & 0x412B1FE4) - 1600811022) ^ 0xB4E88538 ^ v67;
  unsigned int v74 = ((v69 & 0xFFFFE000 | (v65 >> 19)) ^ 0x1EEE)
      - 2 * (((v69 & 0xFFFFE000 | (v65 >> 19)) ^ 0x1EEE) & 0x424E12F3 ^ (v65 >> 19) & 0x10)
      - 1035070749;
  unsigned int v75 = ((2 * ((v71 ^ 0x5DB363A4) + v73)) & 0xBFC5FEFE) + (((v71 ^ 0x5DB363A4) + v73) ^ 0x5FE2FF7F) + (v74 ^ 0x3DB1ED1C);
  LODWORD(STACK[0x470]) = (v10 >> 8) ^ 0xB454549;
  int v76 = v75 - 1368703354 - ((2 * v75 + 3801348) & 0x1C9C8408) + 1024;
  int v77 = v74 ^ (v72 - ((2 * v72 + 519639732) & 0x122493C0) + 143577914) ^ v76;
  LODWORD(STACK[0x460]) = v77 ^ 0x23D9C379;
  LODWORD(STACK[0x498]) = (v74 ^ 0xC24E12E3)
                        + (v77 ^ 0x3860F46E)
                        + 1
                        - ((2 * ((v74 ^ 0xC24E12E3) + (v77 ^ 0x3860F46E) + 1)) & 0xCBDF3C24)
                        + 1710202386;
  unsigned int v78 = (v77 ^ 0xC79F0B91)
      + (v76 ^ 0xE4E4204)
      - ((2 * ((v77 ^ 0xC79F0B91) + (v76 ^ 0xE4E4204))) & 0xF7569E2C)
      + 2074824470;
  LODWORD(STACK[0x458]) = v71;
  unsigned int v79 = v71 ^ 0xEB0300A1 ^ v77;
  LODWORD(STACK[0x5D8]) = LODWORD(STACK[0x5E0]) - (STACK[0x5D8] & 0xCA46840C) - 525297904;
  int v80 = 79 * (LODWORD(STACK[0x5E8]) ^ 0x1A2);
  LODWORD(STACK[0x5E8]) = v78;
  unsigned int v81 = (((v78 ^ 0x93044117) - ((2 * (v78 ^ 0x93044117) - 2023407034) & 0xF7569E2C) - 1084362695) ^ 0x7BAB4F16)
      + (v9 ^ 0xAB6D06AC);
  unsigned int v82 = ((2 * v81) & 0xFA575FEE) + (v81 ^ v80 ^ 0x7D2BAE7C) - 2100015095;
  unsigned int v83 = ((v82 & 0xFFFFFFFE) + 612324504 + (~(2 * v82) | 0xB70156D3)) ^ 0x3FD7E5FA;
  int v84 = LODWORD(STACK[0x5D0]) ^ 0x7706C9AF ^ LODWORD(STACK[0x600]);
  LODWORD(STACK[0x5F0]) = v79;
  *(_DWORD *)(a1 + 4LL * ((-48 - -31 * v83 - ((62 * v83) & 0xA0)) ^ 0xD0u)) = v84 ^ v79 ^ dword_100751CE0[((((1816501712 - 992175073 * v83 - ((-1984350146 * v83) & 0xD88B3BA0)) ^ v47 ^ v7 ^ v10) & 0xCD ^ 0x40123744) + (((1816501712 - 992175073 * v83 - ((-1984350146 * v83) & 0xD88B3BA0)) ^ v47 ^ v7 ^ v10) & (v80 ^ 0x1B9) ^ 0x2004011) - 1) ^ 0x42127775];
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (v80 ^ 0x2C)) - 4LL))();
}

void sub_1005D0C38()
{
}

uint64_t sub_1005D0C48()
{
  LODWORD(STACK[0x5E0]) = v1;
  unint64_t v2 = (v0 ^ 0x17Au) + 458;
  int v3 = malloc(0x404uLL);
  STACK[0xAD0] = (unint64_t)v3;
  STACK[0x648] = v2;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)(((v3 != 0LL) * (v2 ^ 0x5EA)) ^ v0)) - 12))();
}

uint64_t sub_1005D0C94(uint64_t a1)
{
  LODWORD(STACK[0x5D0]) = v3;
  int v5 = LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x5B8]);
  LODWORD(STACK[0x418]) = v5;
  unsigned int v6 = ((v5 ^ 0x384DD18C) - ((2 * (v5 ^ 0x384DD18C) - 320007762) & 0xD0055332) + 1585001072) ^ 0x58932E3B;
  unsigned int v7 = ((v6 - ((2 * v6 - 320007762) & 0xD0055332) + 1585001072) ^ 0xE802A999) + (LODWORD(STACK[0x5B0]) ^ 0x8F715FB3);
  unsigned int v8 = ((((unsigned __int16)LODWORD(STACK[0x610]) >> 9) ^ 0xFFFFFFF3)
      - 1239829693
      + ((2 * ((unsigned __int16)LODWORD(STACK[0x610]) >> 9)) | 0x93CC997C)) ^ 0x8B5A6C76;
  int v9 = (((LODWORD(STACK[0x480]) << 7) ^ 0x3EAFCC80) + 589449753) ^ 0x23224A19 | (v4 >> 9) ^ 0x4C;
  int v10 = v9 - ((2 * v9) & 0xBE) + 223;
  unsigned int v11 = ((v8 | 0x66B0A973) - (v8 | 0x994F568C) - 1722853748) ^ 0xA40C89D0 | (((LODWORD(STACK[0x47C]) << 7) ^ 0x30E66780)
                                                                           + 615423741) ^ 0x24AE9EFD;
  int v12 = v11 - ((2 * v11) & 0xB2) + 217;
  unsigned int v13 = (((((2 * v7) & 0xFF77BFFC) + (v7 ^ 0xFFBBDFFE)) & 0xFFFFFFFE)
       - ((2 * (((2 * v7) & 0xFF77BFFC) + (v7 ^ 0xFFBBDFFE)) + 8929284) & 0x788EAA6C)
       - 1131711175) ^ 0x8E01B774;
  HIDWORD(v14) = v12 ^ v10 ^ 0x22;
  LODWORD(v14) = (v12 ^ ~v10) << 24;
  int v15 = LODWORD(STACK[0x470]) ^ ((((v14 >> 31) - ((2 * (v14 >> 31)) & 0x6A) - 75) ^ 0xB5)
                               - ((2 * (((v14 >> 31) - ((2 * (v14 >> 31)) & 0x6A) - 75) ^ 0xB5)) & 0x184)
                               - 1052510014);
  int v16 = 1447314827 * v13 - 1858777656;
  LODWORD(STACK[0x5B0]) = v2 ^ v1;
  int v17 = (v15 ^ (v16 - ((22 * v13) & 0x90)));
  unsigned int v18 = ((((v17 ^ 0x68AAF889) << (v2 ^ 0x18)) & 0x8141D006) - (v17 ^ 0x68AAF889) - 1206185476) ^ 0xC2E1A915;
  int v19 = dword_1007308D0[((v17 ^ 0x13840C2)
                       + ((v15 ^ (v16 - ((-1400337642 * v13) & 0x226A9B90))) & 0xA2 ^ 0x4828E20)
                       - ((v17 ^ 0x13840C2) & 0x3000A2)) ^ 0x58ACE7D];
  int v20 = ((((2 * v18) & 0x1FA6DF8C) - v18 - 1339256775) ^ 0x7698B663) + (v17 ^ 0xF3);
  *(_DWORD *)(a1 + 4LL * ((v16 - ((22 * v13) & 0x90)) ^ 0xC8u)) = LODWORD(STACK[0x658]) ^ LODWORD(STACK[0x650]) ^ LODWORD(STACK[0x660]) ^ v19 ^ 0xA4262DD0 ^ (v20 - ((2 * v20) & 0x1722021C) - 1953431282);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + v2) - 4))();
}

void sub_1005D101C()
{
}

uint64_t sub_1005D1038@<X0>(int a1@<W8>)
{
  uint64_t v2 = (v1 + a1) & 0xAD4FFCB;
  free((void *)STACK[0xAB0]);
  free((void *)STACK[0xAD8]);
  free((void *)STACK[0xAA8]);
  free((void *)STACK[0xAF0]);
  free((void *)STACK[0xAC0]);
  free((void *)STACK[0xAD0]);
  free((void *)STACK[0xAE0]);
  free((void *)STACK[0xAE8]);
  if (LODWORD(STACK[0xACC])) {
    int v3 = -42885;
  }
  else {
    int v3 = 0;
  }
  unint64_t v4 = STACK[0xA28];
  STACK[0xAA0] += v2 ^ 0xFFFFFFFFFFFFFF2BLL;
  return ((uint64_t (*)(unint64_t))((char *)*(&off_10090DDE0 + (int)((1132 * (v3 == 0)) ^ v2)) - 8))(v4);
}

_BYTE *sub_1005D10E0@<X0>(_BYTE *result@<X0>, int a2@<W8>)
{
  result[17] ^= v8 ^ 0xBD;
  result[18] ^= v9 ^ 0x7D;
  result[19] ^= v10 ^ 0x1A;
  result[20] ^= v11 ^ 0x25;
  *unsigned int v7 = 1711260690;
  void *v2 = result;
  int *v3 = (a2 + 1579) ^ v6 ^ 0x160106B1;
  void *v4 = v7;
  *(_DWORD *)(v5 + 56) = 0;
  return result;
}

uint64_t sub_1005D118C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x658] = 0LL;
  unsigned int v10 = (v8 + 1376) ^ 0xFFFFF515 ^ (((*(unsigned __int8 *)(a4 + a2 + v9 - 1812025378)
  int v11 = *(unsigned __int8 *)(a4 + a2 + v9 - 1812025377);
  unsigned int v12 = (v10 - ((2 * v10) & 0xFFFFAA00) - 10903) ^ 0xFFFFD569 | (v11 - ((2 * v11) & 0x146) - 9309) ^ 0xFFFFDBA3;
  int v13 = (v12 - ((2 * v12) & 0x6CCA) - 18843) ^ 0xB665;
  int v14 = ((unsigned __int16)v13 ^ 0x7E7FF5F5) + ((2 * v13) & 0x1EBEA) - 840003712;
  unint64_t v15 = ((v7 + 242139981) | ((unint64_t)((v7 + 242139981) < 0x1A766983) << 32))
      + v9
      - 443967875;
  int v16 = (((*(unsigned __int8 *)v15 - ((2 * *(unsigned __int8 *)v15) & 0x7A)) << 8) + 15616) ^ 0x3D00;
  LODWORD(v15) = (v16 - ((2 * v16) & 0x5600) + 11011) ^ 0x2B03 | (*(unsigned __int8 *)(v15 + 1)
  LODWORD(v15) = (v15 - ((2 * v15) & 0xDEF4) - 4230) ^ 0xEF7A;
  LODWORD(STACK[0x648]) = ((unsigned __int16)v15 ^ 0x77FF657F) + ((2 * v15) & 0xCAFE) - 881213464;
  LODWORD(STACK[0x650]) = v14;
  return (*(uint64_t (**)(void))(a7
                              + 8LL
                              * ((1140
                                * (*(unsigned __int8 *)(v9 + (v7 + 850440383 + v14 + 1960387480)) == 128)) ^ v8)))();
}

uint64_t sub_1005D13AC@<X0>(int a1@<W8>)
{
  int v6 = 519 * (v2 ^ 0xB6);
  STACK[0x658] = v4 + (v1 + v6);
  uint64_t v8 = fclose(v3);
  STACK[0x990] = v5;
  STACK[0x730] = STACK[0x658];
  LODWORD(STACK[0x86C]) = STACK[0x650];
  LODWORD(STACK[0xA20]) = STACK[0x648];
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0
                                                    + (((a1 == (((v6 - 1512) | 0x482) ^ 0x4AF)) * (v6 ^ 0x6C3)) ^ v6))
                                          - 8))(v8);
}

void sub_1005D1448()
{
}

uint64_t sub_1005D14AC()
{
  _DWORD *v2 = v2[623];
}

uint64_t sub_1005D1500()
{
  uint64_t v4 = 4LL * (v2 - 945548622);
  unsigned int v5 = *((_DWORD *)&xmmword_1009BDBB4 + (v2 - 945548623));
  int v6 = (*(_DWORD *)((char *)&xmmword_1009BDBB4 + v4) ^ 0x4D37A0C2 ^ (1566083941 * (v5 ^ 0x1D5D65FB ^ (v5 >> 30))
                                                                   - ((-1162799414 * (v5 ^ 0x1D5D65FB ^ (v5 >> 30))) & 0xA0D58A72)
                                                                   + 1349174585))
     - v2;
  *(_DWORD *)((char *)&xmmword_1009BDBB4 + __chkstk_darwin(v3, v4) = v6 - ((2 * v6 + 817355420) & 0x3ABACBF6) + 1438208841;
  unint64_t v7 = 516615401
     * ((((v3 - 192) | 0x5642CE80E520FB21LL) - (v3 - 192) + ((v3 - 192) & 0xA9BD317F1ADF04D8LL)) ^ 0xDEFE46FB9643FD13LL);
  *(void *)(v3 - 176) = (v2 - 580974362) ^ v7;
  *(_DWORD *)(v3 - 16_Block_object_dispose(va, 8) = (v0 - 655775285) ^ v7;
  *(void *)(v3 - 160) = v7 + 364574259;
  *(_DWORD *)(v3 - 19fseek(v0, 0LL, 2) = v7 | 1;
  *(_DWORD *)(v3 - 18_Block_object_dispose(va, 8) = v0 - 655775199 - v7;
  *(_DWORD *)(v3 - 15fseek(v0, 0LL, 2) = (v0 - 185257467) ^ v7;
  *(_DWORD *)(v3 - 14_Block_object_dispose(va, 8) = ((v0 - 655775199) ^ 0x83) + v7;
  uint64_t v8 = sub_1005587BC(v3 - 192);
  return ((uint64_t (*)(uint64_t))(*(void *)(v1 + 8LL * *(int *)(v3 - 184)) - 12LL))(v8);
}

uint64_t sub_1005D168C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * (((v0 >= 0x15BAF633) * ((LODWORD(STACK[0x660]) - 1982779075) & 0x762ECD7C ^ 0x501)) ^ (LODWORD(STACK[0x660]) - 557))))();
}

uint64_t sub_1005D16E0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * (((v0 <= ((LODWORD(STACK[0x660]) - 538) ^ 0x15BAFCCAu)) * (LODWORD(STACK[0x660]) ^ 0x6BF)) ^ (LODWORD(STACK[0x660]) - 557))))();
}

uint64_t sub_1005D1724()
{
  LODWORD(xmmword_1009BDBB4) = -1654823429;
  free((void *)STACK[0x650]);
  return sub_1005E0FD8(v1, v2, v3, v4, v5, v0);
}

uint64_t sub_1005D1790@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W8>)
{
  int v7 = a2 ^ 0x25F;
  uint64_t v8 = a2 ^ 0x671u;
  v9.i64[0] = 0x6060606060606060LL;
  v9.i64[1] = 0x6060606060606060LL;
  v10.i64[0] = 0x3030303030303030LL;
  v10.i64[1] = 0x3030303030303030LL;
  *(int8x16_t *)(v4 + a3 + (v8 ^ v5)) = vaddq_s8(vsubq_s8(*v3, vandq_s8(vaddq_s8(*v3, *v3), v9)), v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8LL * ((281 * (((a1 + 1) & 0x1FFFFFFF0LL) == 16)) ^ v7)))( ((a1 + 1) & 0x1FFFFFFF0LL) - 16,  (a1 + 1) & 0x1FFFFFFF0LL,  v8);
}

void sub_1005D17FC()
{
}

uint64_t sub_1005D1808(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8LL * ((((a3 - 465750595) & 0x1BC2CADF ^ ((a3 ^ 0x210) + 622)) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_1005D184C(int a1)
{
  LODWORD(STACK[0x6C4]) = v1;
  STACK[0x810] = *(void *)(v2 + 8LL * a1);
  return sub_1005E33A4();
}

uint64_t sub_1005D1860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8 = (LODWORD(STACK[0x660]) - 1318558917) & 0x4E9797FA;
  int8x16_t v9 = (int8x16_t)vld1q_dup_f32((const float *)v6);
  v10.i64[0] = 0x8000000080000000LL;
  v10.i64[1] = 0x8000000080000000LL;
  v11.i64[0] = 0x8000000080000000LL;
  v11.i64[1] = 0x8000000080000000LL;
  v12.i64[0] = -1LL;
  v12.i64[1] = -1LL;
  v7.i64[0] = *(void *)(v6 + 4);
  v7.i32[2] = *(_DWORD *)(v6 + 12);
  int8x16_t v13 = vextq_s8(v9, v7, 0xCuLL);
  int8x16_t v14 = v7;
  v14.i32[3] = *(_DWORD *)(v6 + 16);
  int32x4_t v15 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( (int32x4_t)vorrq_s8( veorq_s8( vandq_s8(v14, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)),  (int8x16_t)vdupq_n_s32(0x7EBF71D1u)),  vandq_s8( (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( (int8x16_t)vsubq_s32( vdupq_n_s32(0x4B92601Cu),  (int32x4_t)vorrq_s8(v13, v10)),  (int8x16_t)vdupq_n_s32(0x844B8FEA)),  vdupq_n_s32(0x17140B8Au)),  v11)),  v12),  (int8x16_t)vdupq_n_s32(0x63E2142Au));
  v16.i32[0] = *((_DWORD *)&STACK[0x1590] + ((*(_DWORD *)(v6 + 4) & 1) == 0));
  v16.i32[1] = *((_DWORD *)&STACK[0x1590] + ((*(_DWORD *)(v6 + 8) & 1) == 0));
  v16.i32[2] = *((_DWORD *)&STACK[0x1590] + (~*(_DWORD *)(v6 + 12) & 1LL));
  v16.i32[3] = *((_DWORD *)&STACK[0x1590] + (~v14.i32[3] & 1LL));
  *(int8x16_t *)uint64_t v6 = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)(v6 + 1588), v16), (int8x16_t)vdupq_n_s32(0xC55F6C8u)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( v15,  (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v15, v15),  (int8x16_t)vdupq_n_s32(0x7FC9A478u))),  vdupq_n_s32(0xBFE4D23D)),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * (v8 ^ 0x21Au)) - 4LL))();
}

uint64_t sub_1005D1A04@<X0>(int a1@<W3>, uint64_t a2@<X5>, unsigned int a3@<W8>)
{
  int v8 = (unsigned int *)(v5 + 4 * (v4 + v6));
  unsigned int v9 = ((1267884060 - (v3 | 0x7FFFFFFF)) ^ 0x844B8FEA) + 387189642;
  unsigned int v10 = v8[1];
  unsigned int v11 = (((v10 & 0x7FFFFFFE ^ a1) - 1) & 0x7FFFFFFE | v9 & 0x80000000) ^ 0x63E2142A;
  *int v8 = v8[397] ^ *((_DWORD *)&STACK[0x1590] + ((v10 & 1) == 0)) ^ ((v11 - ((2 * v11) & 0x7FC9A478) - 1075523011) >> 1) ^ 0xC55F6C8;
  return ((uint64_t (*)(void))(*(void *)(a2 + 8LL * ((114 * (v4 + ((a3 + 714) | 0x200) - 1665 == v7 + 3)) ^ a3)) - 4LL))();
}

uint64_t sub_1005D1ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v10 = (const float *)&v8[56].i32[3];
  int8x16_t v11 = (int8x16_t)vld1q_dup_f32(v10);
  int32x4_t v12 = vdupq_n_s32(0xAF7394DC);
  v13.i64[0] = 0x8000000080000000LL;
  v13.i64[1] = 0x8000000080000000LL;
  v9.i64[0] = v8[57].i64[0];
  v9.i32[2] = v8[57].i32[2];
  int8x16_t v14 = vextq_s8(v11, v9, 0xCuLL);
  int8x16_t v15 = v9;
  v15.i32[3] = v8[57].i32[3];
  int8x16_t v16 = (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( vandq_s8(v14, v13),  (int8x16_t)vdupq_n_s32(0xCA64FAD4)),  vdupq_n_s32(0xE5255329)),  (int8x16_t)vdupq_n_s32(0xEE0AEFDC)),  vdupq_n_s32(0x37D52921u));
  int8x16_t v17 = veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x319C6806u));
  int32x4_t v18 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8(v17, (int8x16_t)vdupq_n_s32(0x508C6B23u)),  (int32x4_t)vorrq_s8(v17, (int8x16_t)v12)),  v12),  (int8x16_t)vdupq_n_s32(0x700D67CBu));
  int32x4_t v19 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v18, v18),  (int8x16_t)vdupq_n_s32(0x645C3E22u)),  v18),  vdupq_n_s32(0xCDD1E0EE)),  (int8x16_t)vdupq_n_s32(0xC191E1FA));
  v20.i32[0] = *(_DWORD *)(v6 + 4LL * ((v8[57].i32[0] & 1) == 0));
  v20.i32[1] = *(_DWORD *)(v6 + 4LL * ((v8[57].i32[1] & 1) == 0));
  v20.i32[2] = *(_DWORD *)(v6 + 4 * (~v8[57].i32[2] & 1LL));
  v20.i32[3] = *(_DWORD *)(v6 + 4 * (~v15.i32[3] & 1LL));
  *(int8x16_t *)((char *)v8 + 4 * (v7 - 1070) - 1476) = veorq_s8( veorq_s8( veorq_s8(*v8, v20),  (int8x16_t)vdupq_n_s32(0x23121F4u)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8((int8x16_t)v19, vandq_s8(v16, v13)),  (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x465AF88Au))),  vdupq_n_s32(0xA32D7C45)),  1uLL));
  return (*(uint64_t (**)(void))(a6 + 8LL * ((v7 - 351) ^ 0xBC)))();
}

void sub_1005D1CA8()
{
}

uint64_t sub_1005D1CB4@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  unsigned int v3 = (((((2 * (a2 ^ 0x6E81706D ^ *v2 & 0x7FFFFFFE)) & 0xAFCAE6AC) - (a2 ^ 0x6E81706D ^ *v2 & 0x7FFFFFFE) + 672828584) ^ 0x61D86659)
      - 1) ^ 0x3A1EFD32;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x1590] + ((*v2 & 1) == 0)) ^ (((v3 | ((v2[623] & 0x80000000) - 1295977576) ^ 0xB2C0F398)
                                                                       - ((2 * v3) & 0xE806BB04)
                                                                       - 201106046) >> 1) ^ 0x29A63117;
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * (((4 * (LODWORD(STACK[0x9A4]) < 0x270)) | (32 * (LODWORD(STACK[0x9A4]) < 0x270))) ^ a2))
                            - 4LL))();
}

uint64_t sub_1005D1D98()
{
  int v4 = LODWORD(STACK[0x9A4])++;
  *(_DWORD *)(v1 + 2984) = v4 + 1227344547;
  uint64_t v5 = (dword_1009BDBB0 - 1197679816);
  unint64_t v6 = 516615401 * ((v2 - ((v3 - 192) | v2) + ((v3 - 192) | 0x73BE0EBFEFBDFE6DLL)) ^ 0xFB0286C49CDEF85FLL);
  *(void *)(v3 - 160) = v6 + 4147057422u;
  *(void *)(v3 - 176) = v5 ^ v6;
  *(_DWORD *)(v3 - 16_Block_object_dispose(va, 8) = v6 ^ (v0 - 2132636614) ^ 0x70;
  *(_DWORD *)(v3 - 19fseek(v0, 0LL, 2) = v6 + 1;
  *(_DWORD *)(v3 - 18_Block_object_dispose(va, 8) = v0 - 2132636614 - v6;
  *(_DWORD *)(v3 - 15fseek(v0, 0LL, 2) = (v0 - 185257467) ^ v6;
  *(_DWORD *)(v3 - 14_Block_object_dispose(va, 8) = ((v0 - 2132636614) ^ 0x44) + v6;
  uint64_t v7 = sub_1005587BC(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + *(int *)(v3 - 184)))(v7);
}

void sub_1005D1E90()
{
  if (v0 >= v1) {
    int v3 = dword_1009BDBB0 + 1;
  }
  else {
    int v3 = v2;
  }
  dword_1009BDBB0 = v3;
  JUMPOUT(0x1005D1FF8LL);
}

uint64_t sub_1005D207C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (((v1 + 8 == a1) * (((2 * v2) ^ 0x45E) + 6 * (v2 ^ 0x1AB) - 2821)) ^ v2)))();
}

uint64_t sub_1005D20B8(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x620]) = a3;
  STACK[0x1590] = 0xCAAF2F0953A79FD6LL;
  LODWORD(STACK[0x9A4]) = dword_1009BDBA8 - 1227344546;
  uint64_t v7 = dword_1009BDBB0;
  unint64_t v8 = ((((2 * (v6 - 192)) | 0x7CACD15A334DE292LL) - (v6 - 192) - 0x3E5668AD19A6F149LL) ^ 0xD342FF3657CF27B7LL) * v4;
  *(_DWORD *)(v6 - 160) = v8 + v3 + 1123495911;
  *(_DWORD *)(v6 - 156) = v8;
  *(_DWORD *)(v6 - 180) = v3 + 209787347 + v8;
  *(void *)(v6 - 176) = v7 - v8;
  *(void *)(v6 - 16_Block_object_dispose(va, 8) = v8 ^ v5;
  *(_DWORD *)(v6 - 18_Block_object_dispose(va, 8) = (v3 + 209787356) ^ v8;
  *(_DWORD *)(v6 - 184) = v8 ^ (v3 + 209787347) ^ 0x1D;
  uint64_t v9 = sub_100686C70(v6 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + *(int *)(v6 - 192)) - 4))(v9);
}

uint64_t sub_1005D21AC()
{
  int v1 = LODWORD(STACK[0x660]) - 241;
  STACK[0x650] = (unint64_t)malloc(STACK[0x5E8]);
  uint32_t v2 = arc4random();
  unsigned int v3 = v2 + (v1 ^ 0x1D5D606A) - ((2 * v2) & 0x3ABACBF6);
  LODWORD(xmmword_1009BDBB4) = v3;
  int v4 = v3 ^ 0x1D5D65FB ^ (v3 >> ((2 * v1) ^ 0x3C));
  *(_DWORD *)(v0 + 4) = ((1812433253 * v4) ^ 0x6AFFF3F9)
                      + ((-670100790 * v4) & 0xD5FFE7F2)
                      - 1302498813
                      - ((2 * (((1812433253 * v4) ^ 0x6AFFF3F9) + ((-670100790 * v4) & 0xD5FFE7F2)) - 1442834416) & 0x3ABACBF6);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + v1) - 4))(1285517069LL);
}

void sub_1005D22C8()
{
}

uint64_t sub_1005D22E4@<X0>(int a1@<W8>)
{
  int v4 = v1 ^ 0x590;
  LODWORD(STACK[0x9A4]) = a1 + 1;
  gettimeofday((timeval *)STACK[0x5E0], 0LL);
  int v5 = LODWORD(STACK[0xBB8]) + v2 - ((2 * LODWORD(STACK[0xBB8])) & 0x3ABACBF6);
  LODWORD(STACK[0xBA8]) = LODWORD(STACK[0xBB0]) + v2 - ((2 * LODWORD(STACK[0xBB0])) & 0x3ABACBF6);
  LODWORD(STACK[0xBA4]) = v5;
  uint32_t v6 = arc4random();
  LODWORD(STACK[0xBAC]) = v6 + v2 - ((v4 ^ 0x3ABACD74) & (2 * v6));
  uint32_t v7 = arc4random();
  LODWORD(STACK[0xBA0]) = v7 + v2 - ((2 * v7) & 0x3ABACBF6);
  int v8 = ((2 * STACK[0x650]) & 0x58DFEFFE) + (STACK[0x650] ^ 0xAC6FF7FF);
  LODWORD(STACK[0x648]) = v8 - 298726567 + (~(2 * v8 + 656412674) | 0xCABC7951);
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x660]) - 382857805;
  int v9 = (DWORD1(xmmword_1009BDBB4) ^ 0x2DC91DB9 ^ (1664525
                                                * (xmmword_1009BDBB4 ^ v2 ^ (xmmword_1009BDBB4 >> 30))
                                                - ((3329050
                                                  * (xmmword_1009BDBB4 ^ v2 ^ (xmmword_1009BDBB4 >> 30))) & 0x6128F084)
                                                + 815036482))
     + (*(_DWORD *)STACK[0x658] ^ v2);
  unsigned int v10 = (v9 ^ 0xD2EFFCB0) + 1875506962 + ((2 * v9) & 0xA5DFF960);
  DWORD1(xmmword_1009BDBB4) = v10 - ((2 * v10 + 982259836) & 0x3ABACBF6) - 626822599;
  unint64_t v11 = 516615401
      * ((~((v3 - 192) | 0xAFE6AC81552A45E8LL) + ((v3 - 192) & 0xAFE6AC81552A45E8LL)) ^ 0xD8A5DB05D9B6BC25LL);
  *(void *)(v3 - 160) = v11 + 636925545;
  *(_DWORD *)(v3 - 19fseek(v0, 0LL, 2) = v11 + 1;
  *(_DWORD *)(v3 - 18_Block_object_dispose(va, 8) = v4 - 1453072791 - v11;
  *(void *)(v3 - 176) = v11 ^ 0x25F6B66B;
  *(_DWORD *)(v3 - 16_Block_object_dispose(va, 8) = v11 ^ (v4 - 1453072791) ^ 6;
  *(_DWORD *)(v3 - 15fseek(v0, 0LL, 2) = (v4 - 185257467) ^ v11;
  *(_DWORD *)(v3 - 14_Block_object_dispose(va, 8) = v11 + v4 - 1453072791 - 75;
  uint64_t v12 = sub_1005587BC(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + *(int *)(v3 - 184)))(v12);
}

uint64_t sub_1005D25FC()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * ((LODWORD(STACK[0x660]) - 1429) ^ ((4 * (v1 >= 0x25F6B669)) | (16 * (v1 >= 0x25F6B669)))))
                            - 4LL))();
}

uint64_t sub_1005D2630()
{
  unint64_t v2 = (-(uint64_t)((~(unint64_t)(LODWORD(STACK[0x660]) + 636924502) + v1) ^ (~(LODWORD(STACK[0x660])
                                                                                                  + 636924502)
                                                                                                + v1)) | (~(unint64_t)(LODWORD(STACK[0x660]) + 636924502) + v1)) >> 63;
}

uint64_t sub_1005D2684()
{
  LODWORD(xmmword_1009BDBB4) = dword_1009BE570;
  *(_DWORD *)(v7 - 164) = -1231242048 - v6 + v0;
  *(void *)(v7 - 19fseek(v0, 0LL, 2) = (v5 - 2144747187) + v6;
  *(void *)(v7 - 160) = v3;
  *(_DWORD *)(v7 - 17fseek(v0, 0LL, 2) = v6 + v1 + 4;
  *(_DWORD *)(v7 - 16_Block_object_dispose(va, 8) = v1 ^ v6;
  *(_DWORD *)(v7 - 180) = v6;
  *(_DWORD *)(v7 - 176) = v4 ^ v6;
  uint64_t v8 = sub_1005E44CC(v7 - 192);
  return ((uint64_t (*)(uint64_t))(*(void *)(v2 + 8LL * *(int *)(v7 - 184)) - 4LL))(v8);
}

uint64_t sub_1005D26FC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL * (((v0 < (STACK[0x640] & 0x16D1EFCE ^ 0xEFF3BC5A)) * (v2 - 1472)) ^ (v2 - 1044))))();
}

uint64_t sub_1005D273C()
{
  int v4 = (v0 - 1317957637) & 0x4E8E6ECF;
  *(_DWORD *)(STACK[0x658] + 4LL * (v3 - 1875506961)) ^= *(_DWORD *)(STACK[0x650]
                                                                                 + 4LL * (v3 - 1875506961)) ^ (v4 - 1620499030);
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((477
}

void sub_1005D287C()
{
}

uint64_t sub_1005D2888()
{
  _DWORD *v1 = v1[623];
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((311 * (v3 - 1 == ((v0 + 1312975764) | 0x90100408) + 994728524)) ^ (v0 - 947)))
                            - 4LL))();
}

uint64_t sub_1005D28E8@<X0>(int a1@<W8>)
{
  uint64_t v4 = 4LL * (v1 - 1824818057);
  unsigned int v5 = *((_DWORD *)&xmmword_1009BDBB4 + (v1 - 1824818058));
  int v6 = (*(_DWORD *)((char *)&xmmword_1009BDBB4 + v4) ^ 0xFC768E9F ^ (1566083941
                                                                   * (v5 ^ 0x6A9ECC27 ^ ((v5 >> 30) | 0x77C3A9DC))
                                                                   - ((-1162799414
                                                                     * (v5 ^ 0x6A9ECC27 ^ ((v5 >> 30) | 0x77C3A9DC))) & 0xC257D6C8)
                                                                   - 517215388))
     - v1;
  *(_DWORD *)((char *)&xmmword_1009BDBB4 + __chkstk_darwin(v3, v4) = v6 - ((2 * v6 + 428410642) & 0x3ABACBF6) - 1977489020;
  unint64_t v7 = 1606104089 * ((v3 - 192) ^ 0xC2BEFB347517423ELL);
  *(void *)(v3 - 160) = 1168281337 - v7;
  int v8 = (a1 + 1085921235) ^ v7;
  *(_DWORD *)(v3 - 180) = v7;
  *(_DWORD *)(v3 - 176) = v8 ^ 0x5E;
  *(_DWORD *)(v3 - 16_Block_object_dispose(va, 8) = v8;
  *(_DWORD *)(v3 - 164) = -1231242048 - v7 + a1;
  *(_DWORD *)(v3 - 17fseek(v0, 0LL, 2) = ((a1 + 1085921235) ^ 0x2F) + v7;
  *(void *)(v3 - 19fseek(v0, 0LL, 2) = (v1 - 656536719) + v7;
  uint64_t v9 = sub_1005E44CC(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8LL * *(int *)(v3 - 184)))(v9);
}

uint64_t sub_1005D2A40()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((LODWORD(STACK[0x660]) - 1009) ^ (90 * (v0 < 0x45A28EF9)))) - 4LL))();
}

uint64_t sub_1005D2A70()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((LODWORD(STACK[0x660]) - 1009) ^ (90 * (v0 > 0x45A29168)))) - 4LL))();
}

void sub_1005D2AA4()
{
  LODWORD(xmmword_1009BDBB4) = -1654823429;
  free((void *)STACK[0x650]);
  JUMPOUT(0x1005D1864LL);
}

uint64_t sub_1005D2B1C()
{
  STACK[0x870] = 32LL;
  STACK[0x808] = v0;
  STACK[0x708] = STACK[0x650];
  return sub_1005DE608(-12LL);
}

uint64_t sub_1005D2B50()
{
  LODWORD(STACK[0x650]) = v2;
  unsigned int v3 = (v1 + 1846751217) & 0x91ECCFBE;
  int v4 = dword_1009C74C0;
  STACK[0x658] = qword_1009C72B8;
  unsigned int v5 = *(unsigned __int8 **)(v0 + 8);
  int v6 = *v5;
  unint64_t v7 = -1263679611
     * ((((v5 ^ *(_DWORD *)(STACK[0x658] + (int)((v3 - 593721846) & v4))) & 0x7FFFFFFF)
       * ((((v3 - 797) | 0x4D4) - 1008) ^ 0xB4ADC680)) ^ ((((v5 ^ *(_DWORD *)(STACK[0x658]
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (int)((1764
}

uint64_t sub_1005D2CB4( int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int8x16_t v15 = (char *)(v13 + (v8 ^ 0x3BFD9D3F) - 1006476607 + ((a3 + 2012952951) & a1));
  char v16 = *v15;
  unint64_t v17 = ((((v15 ^ v14) & 0x7FFFFFFF) * v9) ^ ((((v15 ^ v14) & 0x7FFFFFFF) * v9) >> 16)) * v9;
  return ((uint64_t (*)(uint64_t, void))(*(void *)(v10
                                                              + 8LL
                                                              * ((1558
                                                                * ((char)(*(_BYTE *)(a7 + (v17 >> (a3 ^ 0x1Du))) ^ v16 ^ *(_BYTE *)((v17 >> (a3 ^ 0x1Du)) + a8 + 3) ^ *(_BYTE *)((v17 >> (a3 ^ 0x1Du)) + v11 + 2) ^ v17 ^ ((v17 >> (a3 ^ 0x1Du)) * v12)) > 47)) ^ a3))
                                                  - 4LL))( 1373783571LL,  (a3 + 1405));
}

uint64_t sub_1005D2D64(uint64_t a1, uint64_t a2, int a3, unsigned __int8 a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8LL
                              * (((a4 < ((a3 ^ 0x82) - 77)) * ((a3 ^ 0x782) - 1634)) ^ a3 ^ 0x782)))();
}

uint64_t sub_1005D2DAC(int a1, uint64_t a2, int a3)
{
  uint64_t v11 = (_BYTE *)(v9 + (int)((v3 ^ v6) + a1 + 38 + ((v3 << ((a1 + 79) ^ 0xD7)) & 0xFCFFFEEC) - 2122319394));
  unint64_t v12 = ((((v11 ^ v10) & 0x7FFFFFFF) * v4) ^ ((((v11 ^ v10) & 0x7FFFFFFF) * v4) >> 16)) * v4;
  return (*(uint64_t (**)(void))(v7
                                           + 8LL
                                           * ((1957
                                             * ((char)(v12 ^ *v11 ^ *(_BYTE *)(v5 + (v12 >> 24)) ^ byte_1007311E0[v12 >> 24] ^ *(_BYTE *)(v8 + (v12 >> 24)) ^ (17 * BYTE3(v12))) > 47)) ^ (a1 - 1383))))((a3 - 637382647));
}

uint64_t sub_1005D2FB8( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((((char)(a2 ^ v12 ^ (a5 * v10) ^ *(_BYTE *)(a7 + a3) ^ *(_BYTE *)(a8 + a3 + 3) ^ *(_BYTE *)(v9 + (a2 >> 24) + 2)) < 58)
                                          * ((833 * (v11 ^ 0x6AF)) ^ 0x6EB)) ^ v11))
}

uint64_t sub_1005D302C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v6 = a4 - 397;
  BOOL v8 = a1 + 773700076 <= (int)(a4 ^ 0xFFFFF97D);
  signed int v7 = ((a4 - 1390) | 0x22A) ^ 0xFFFFFCC1;
  BOOL v8 = v8 && v4 + 1014302051 <= v7;
  int v9 = v8;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((466 * v9) ^ v6)) - 12LL))();
}

uint64_t sub_1005D3250(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v13 = ((16 * a1 - (((16 * a1 - 64) & 0xD0 ^ (16 * a1) & 0x10) << (((v5 + 115) | 0x44) ^ 0xF4)) - 114) ^ 0xCE | (a5 - 49))
      - ((2
        * ((16 * a1 - (((16 * a1 - 64) & 0xD0 ^ (16 * a1) & 0x10) << (((v5 + 115) | 0x44) ^ 0xF4)) - 114) ^ 0xCE | (a5 - 49))) & 0xD6);
  int v14 = (_BYTE *)(v10 + v9 - 995949515);
  unint64_t v15 = ((((v14 ^ v12) & 0x7FFFFFFF) * v6) ^ ((((v14 ^ v12) & 0x7FFFFFFF) * v6) >> 16)) * v6;
  *int v14 = v15 ^ (17
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (v5 ^ (176 * ((v9 - 995949514) < 0x14)))) - 12LL))();
}

void sub_1005D3350()
{
}

uint64_t sub_1005D335C(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((((5 * (a2 ^ 0x4D6) - 155) ^ (7 * (a2 ^ 0x49E)))
                                          * (LODWORD(STACK[0x650]) == 0)) ^ a2))
                            - 12LL))();
}

uint64_t sub_1005D33A0@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
}

uint64_t sub_1005D33DC(void *a1)
{
  int v5 = v2 ^ v1;
  free(a1);
  *(void *)(v3 + _Block_object_dispose(va, 8) = v4;
  *(_DWORD *)(v3 + 16) = 603954248;
  *(_DWORD *)uint64_t v3 = 65;
  STACK[0x890] = 1LL;
  BOOL v6 = container_system_group_path_for_identifier(0LL, "systemgroup.com.apple.pisco.suinfo", &STACK[0x890]) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v6 * ((v5 - 1017) ^ 0x125)) ^ (v5 - 142))) - 12))();
}

uint64_t sub_1005D3428(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = (a4 - 279);
  unint64_t v6 = STACK[0x910];
  unint64_t v7 = STACK[0x760];
  STACK[0xA08] = v5 + *(void *)(v4 + 8LL * (a4 - 1652)) - 1391;
  STACK[0x6F0] = v6;
  STACK[0x8F0] = v7;
  uint64_t v8 = *(_DWORD *)(v6 + 68) & 0x3F ^ ((a4 ^ 0x5D7u) + 503053463);
  uint64_t v9 = (2 * *(_DWORD *)(v6 + 68)) & 0x7ALL ^ 0x22;
  STACK[0x650] = v9 + v8 + 55601115;
  *(_BYTE *)(v6 + (v9 + v8 - 503054333)) = -80;
  return (*(uint64_t (**)(void))(v4 + 8LL * (int)((243 * ((v9 + v8 - 503054389) < 0xFFFFFFC8)) ^ v5)))();
}

uint64_t sub_1005D344C()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1100 * (STACK[0x820] == 0)) ^ v0)) - 12))();
}

void sub_1005D34CC()
{
  *(_DWORD *)(v1 + 11fseek(v0, 0LL, 2) = v0 + 1768031168;
  *(void *)(v1 + 64) = v7;
  *(_DWORD *)(v1 + 7fseek(v0, 0LL, 2) = ((2 * (v4 ^ 0xF484)) & 0x1FBFE) + 2054916960 + ((98 * ((v0 - 1579) ^ 0x46)) ^ v4 ^ 0xADEF0FF9);
  *(void *)(v1 + 4_Block_object_dispose(va, 8) = v5;
  *(_DWORD *)(v1 + 56) = v6;
  *(_DWORD *)uint64_t v1 = 1711260691;
  *(_DWORD *)(v1 + 4) = v3;
  *(_DWORD *)(v2 + 56) = 0;
}

uint64_t sub_1005D35E8()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * ((1008
                                          * ((*(unsigned int *)(STACK[0x9D0] + 112) ^ 0x7DFBFEB5BDDDE4B3LL)
                                           - 0x7DFBFEB58B53C1C9LL
}

uint64_t sub_1005D36C4()
{
  BOOL v9 = v3 < v0;
  *(_BYTE *)(v5 + v7 - 0x62BF4538F69DF06CLL) = *(_BYTE *)(v4 + v2 - 0x63F2731D4E224A3BLL) - 99;
  if (v9 == v6 - 0x689EBD366E12E0C4LL < v0) {
    BOOL v9 = v6 - 0x689EBD366E12E0C4LL < v3;
  }
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((1008 * !v9) ^ v1)) - 8LL))();
}

uint64_t sub_1005D3764()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * ((1443 * (dword_1009BDBAC == ((313 * ((v0 + 926) ^ 0x3A5)) ^ 0x1CF4D12E))) ^ (v0 + 926))))();
}

uint64_t sub_1005D377C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(void))(*(void *)(a4
                                        + 8LL
                                        * (((v5 - 175)
                                          * ((v4 ^ 0x69DFFBFFDDEFFF7CLL)
                                           - 0x69DFFBFF33D55005LL
}

uint64_t sub_1005D381C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, int a4@<W8>)
{
  BOOL v9 = v5 < v4;
  *(_BYTE *)(v7 + a1 - 0x52409B5A06A5D9E9LL) = ((a4 + 39) & 0x9D)
                                             + *(_BYTE *)(v6 + a3 - 0x66FA53E4F828011FLL)
                                             - ((2 * *(_BYTE *)(v6 + a3 - 0x66FA53E4F828011FLL)) & 0xBC)
                                             - 63;
  if (v9 == v8 - 0x77F25AF5BE7781B4LL < v4) {
    BOOL v9 = v8 - 0x77F25AF5BE7781B4LL < v5;
  }
  return ((uint64_t (*)(void))(*(void *)(a2 + 8LL * ((41 * v9) ^ a4)) - 8LL))();
}

uint64_t sub_1005D38D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (v6 ^ 0x66F7F7DF) - 271000075 + (STACK[0x658] & 0x1EFBE);
  unint64_t v9 = v7 + v4 - 702118376;
  BOOL v10 = v9 < 0x383DC00F;
  unint64_t v11 = (v8 & 0xFFFFFFFEFFFFFFFFLL | ((unint64_t)(v8 < 0x56D0D591) << 32)) - 512955774;
  int v12 = v10 ^ (v11 < 0x383DC00F);
  BOOL v13 = v11 <= v9;
  if (!v12) {
    BOOL v10 = v13;
  }
  return ((uint64_t (*)(void))(*(void *)(a4 + 8LL * (v5 ^ (906 * v10))) - 4LL))();
}

uint64_t sub_1005D3994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x648]) = STACK[0x860];
  return sub_1005794D8(v9 + 12, 4294942180LL, v7, a4, 144LL, v8 - 1346280485, a7, -9816);
}

uint64_t sub_1005D3A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(void))(*(void *)(a3
                                        + 8LL
                                        * ((42
                                          * ((v4 | ((unint64_t)(v4 < 0x1AB8F7CF) << 32))
                                           + 1923451596 != 67 * ((v3 - 744) ^ 0x38Bu) + 2371780136LL)) ^ (v3 - 744)))
                            - 12LL))();
}

uint64_t sub_1005D3AF8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  BOOL v10 = v4 < v3;
  *(_BYTE *)(v7 + v9 - 0x62EFD5F2C490F45FLL) = (((2 * *(_BYTE *)(v6 + a2 - 0x7604C0E48B03D296LL)) & 0x8F)
                                              + (*(_BYTE *)(v6 + a2 - 0x7604C0E48B03D296LL) ^ 0xC7)) ^ 0x80;
  if (v10 == v8 - 0xFA96043415805B4LL < v3) {
    BOOL v10 = v8 - 0xFA96043415805B4LL < v4;
  }
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((v10 * v5) ^ a3)) - 12LL))();
}

uint64_t sub_1005D3B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(STACK[0x640]) = STACK[0x860];
  LODWORD(STACK[0x648]) = *(unsigned __int16 *)(v4 + 92);
  return ((uint64_t (*)(void))(*(void *)(a3 + 8LL * ((230 * (dword_1009BDBAC == 485807923)) ^ v3))
                            - ((v3 - 1003) ^ 0x464u)
                            + 1252LL))();
}

uint64_t sub_1005D3BF4()
{
  kern_return_t v1;
  uint64_t v1 = IOMainPort(0, (mach_port_t *)&STACK[0x96C]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((1375 * ((((v0 ^ 0x60A) + 1599829496) & (2 * v1)) + (v1 ^ 0x2FADBE3D) == 799915581)) ^ v0)))();
}

uint64_t sub_1005D3C4C()
{
  BOOL v1 = IOServiceMatching((const char *)&STACK[0x15B1]) != 0LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((v1 * ((v0 + 1530) ^ 0x690)) | v0)))();
}

uint64_t sub_1005D3C84(const __CFDictionary *a1)
{
  kern_return_t MatchingServices;
  MatchingServices = IOServiceGetMatchingServices(STACK[0x96C], a1, (io_iterator_t *)&STACK[0x9FC]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((901
                               * (((((v1 - 370414089) & 0x161417F9) - 414408401) & (2 * MatchingServices))
                                + (MatchingServices ^ ((v1 ^ 0x60A) - 207205038)) == -207203372)) ^ v1)))();
}

void sub_1005D3D00()
{
}

uint64_t sub_1005D3D08()
{
  int v3 = (char *)&STACK[0xB80] + v2;
  *(_DWORD *)int v3 = LODWORD(STACK[0x640]) ^ 0x447574EF;
  *((_WORD *)v3 + fseek(v0, 0LL, 2) = LODWORD(STACK[0x648]) - 22113;
  *(_OWORD *)((char *)&STACK[0xB80] + v2 + 6) = *(_OWORD *)(v1 + 17);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + v0) - 213 * (v0 ^ 0x4EBu) + 1483))();
}

void sub_1005D3D88()
{
}

uint64_t sub_1005D3D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * ((11 * (((v8 == 738487159) ^ v7) & 1)) ^ v7)) - 4LL))();
}

uint64_t sub_1005D3DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v10 = (v9 | ((unint64_t)(v9 < v8) << 32)) != 738487159;
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * (v7 ^ ((2 * v10) | (8 * v10)))) - 4LL))();
}

uint64_t sub_1005D3E54@<X0>(_DWORD *a1@<X2>, void *a2@<X4>, uint64_t a3@<X6>, int a4@<W8>)
{
  kern_return_t v8;
  unint64_t v9;
  BOOL v10;
  a1[30] = v6 - 738487159;
  STACK[0x720] = 16LL;
  unsigned int v8 = IOConnectCallStructMethod(a4 - 485807923, 0x20u, a1, 0x7CuLL, a2, &STACK[0x720]);
  uint64_t v9 = STACK[0x720];
  BOOL v10 = v8 == ((v4 + 1737874356) & 0x986A235C ^ 0x118);
  STACK[0x870] = v5;
  if (v9 != 16) {
    BOOL v10 = 0;
  }
  return ((uint64_t (*)(void))(*(void *)(a3 + 8LL * ((1577 * v10) ^ v4)) - 4LL))();
}

uint64_t sub_1005D3EF4()
{
  return ((uint64_t (*)(void))*(&off_10090DDE0
}

uint64_t sub_1005D3F40()
{
  STACK[0x820] = 256LL;
  LOBYTE(STACK[0xBD0]) = v0[12] ^ 0x90;
  LOBYTE(STACK[0xBD1]) = v0[13] ^ 0x90;
  LOBYTE(STACK[0xBD2]) = v0[14] ^ 0x90;
  LOBYTE(STACK[0xBD3]) = v0[15] ^ 0x90;
  LOBYTE(STACK[0xBD4]) = v0[16] ^ 0x90;
  LOBYTE(STACK[0xBD5]) = v0[17] ^ 0x90;
  LOBYTE(STACK[0xBD6]) = v0[18] ^ ((v1 ^ 0x4B) + 43);
  LOBYTE(STACK[0xBD7]) = v0[19] ^ 0x90;
  LOBYTE(STACK[0xBD8]) = v0[20] ^ 0x90;
  LOBYTE(STACK[0xBD9]) = v0[21] ^ 0x90;
  LOBYTE(STACK[0xBDA]) = v0[22] ^ 0x90;
  LOBYTE(STACK[0xBDB]) = v0[23] ^ 0x90;
  LOBYTE(STACK[0xBDC]) = v0[24] ^ 0x90;
  LOBYTE(STACK[0xBDD]) = v0[25] ^ 0x90;
  LOBYTE(STACK[0xBDE]) = v0[26] ^ 0x90;
  LOBYTE(STACK[0xBDF]) = v0[27] ^ 0x90;
  LOBYTE(STACK[0xBE0]) = v0[28] ^ 0x90;
  LOBYTE(STACK[0xBE1]) = v0[29] ^ 0x90;
  LOBYTE(STACK[0xBE2]) = v0[30] ^ 0x90;
  LOBYTE(STACK[0xBE3]) = v0[31] ^ 0x90;
  LOBYTE(STACK[0xBE4]) = v0[32] ^ 0x90;
  LOBYTE(STACK[0xBE5]) = v0[33] ^ 0x90;
  LOBYTE(STACK[0xBE6]) = v0[34] ^ 0x90;
  LOBYTE(STACK[0xBE7]) = v0[35] ^ 0x90;
  LOBYTE(STACK[0xBE8]) = v0[36] ^ 0x90;
  LOBYTE(STACK[0xBE9]) = v0[37] ^ 0x90;
  LOBYTE(STACK[0xBEA]) = v0[38] ^ 0x90;
  LOBYTE(STACK[0xBEB]) = v0[39] ^ 0x90;
  LOBYTE(STACK[0xBEC]) = v0[40] ^ 0x90;
  LOBYTE(STACK[0xBED]) = v0[41] ^ 0x90;
  LOBYTE(STACK[0xBEE]) = v0[42] ^ 0x90;
  LOBYTE(STACK[0xBEF]) = v0[43] ^ 0x90;
  BOOL v2 = sub_1006937E0( 1u,  STACK[0xA90],  (LODWORD(STACK[0x7FC]) - 549456566),  (uint64_t)&STACK[0xBD0],  32LL,  (void *)STACK[0x8D0],  &STACK[0x820]) != 0;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (v1 | (16 * v2))) - 4))();
}

void sub_1005D4130()
{
  uint64_t v0 = (_DWORD *)STACK[0x928];
  _DWORD *v0 = 1711260691;
  v0[1] = STACK[0x660];
  STACK[0x650] = STACK[0xA50];
  JUMPOUT(0x1005D4224LL);
}

uint64_t sub_1005D41AC()
{
  int v1 = malloc(STACK[0x820]);
  *(void *)(STACK[0x928] + 104) = v1;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((((49 * (v0 ^ 0x447) - 1665) | 0xB6) ^ 0xA4) * (v1 != 0LL)) ^ v0)))();
}

uint64_t sub_1005D424C()
{
  uint64_t v3 = IOObjectRelease(STACK[0x704]);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0
                                           + ((13 * (*(_DWORD *)(v1 + 2988) == ((v2 - 738) ^ (v0 - 1149)) + v2 - 101)) ^ (v2 - 738))))(v3);
}

uint64_t sub_1005D429C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3
                                                                        + 8LL
                                                                        * (((*(unsigned __int8 *)STACK[0x688] == ((a3 - 1544100441) & 0xC7 ^ 0x83))
                                                                          * ((a3 - 1888067869) & 0x7089A5CD ^ 0x2CD)) ^ a3))
                                                            - 8LL))( a1,  a2,  4294924391LL);
}

uint64_t sub_1005D4310()
{
  unint64_t v3 = STACK[0x870];
  int v4 = 230600693 * (((v2 - 192) & 0xB0AAFE3F | ~((v2 - 192) | 0xB0AAFE3F)) ^ 0x9D6987EB);
  *(_DWORD *)(v2 - 164) = LODWORD(STACK[0x75C]) - v4 - 651171671;
  *(_DWORD *)(v2 - 19fseek(v0, 0LL, 2) = (v1 - 785) ^ v4;
  *(void *)(v2 - 184) = (char *)&STACK[0xB80] + v3;
  *(void *)(v2 - 176) = v0;
  sub_10068703C((_DWORD *)(v2 - 192));
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((*(_DWORD *)(v2 - 168) != 0) * ((v1 + 190) ^ 0x5BD)) ^ v1)))();
}

uint64_t sub_1005D43E4()
{
  STACK[0x870] = v0;
  return sub_1005E1E24();
}

uint64_t sub_1005D43F4()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (v1 | (2 * (v0 + 1 == v2 + 16)))))();
}

uint64_t sub_1005D4470@<X0>(unsigned int a1@<W8>)
{
  int v4 = (((v1 >> 4) ^ 0x7C83068) - (((a1 ^ 0x7E6) - 1952154055) & (2 * ((v1 >> 4) ^ 0x7C83068))) + 1171406758) ^ 0x45D23FA6 | v1 ^ v2;
  signed int v5 = v4 - ((v4 << ((a1 - 115) ^ 0x83)) & 0x8C136CF2) - 972441991;
  unsigned int v6 = ((v5 >> 2) ^ 0xF1826D9E) - ((2 * ((v5 >> 2) ^ 0xF1826D9E)) & 0x5B8626B2) + 767759193;
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((14
                                * ((v6 ^ 0x59 | v5 ^ 0x79) & 1 | ((((v6 ^ 0x2DC31359 | v5 ^ 0xC609B679) + ~(2 * (v6 ^ 0x2DC31359 | v5 ^ 0xC609B679)) + 2) & 2) != 0))) ^ a1)))();
}

uint64_t sub_1005D453C(uint64_t a1, uint64_t a2)
{
  STACK[0x870] = v3;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4
                                                                        + 8LL
                                                                        * (v2 ^ (1228
                                                                               * ((LODWORD(STACK[0x5E8]) - 1282311541) < 0x7D1))))
                                                            - 7 * (v2 ^ 0x1FDu)
                                                            + 1658LL))( a1,  a2,  4294924389LL);
}

void sub_1005D4590()
{
}

void sub_1005D45C4()
{
  LODWORD(STACK[0x9BC]) = v1 + v0;
  STACK[0x810] = ((v2 - 1829927452) ^ 0xFFFFFFFF6D1279E3LL) + *(void *)(v3 + 8LL * v2);
  JUMPOUT(0x1005D45FCLL);
}

uint64_t sub_1005D4608()
{
  STACK[0x870] = v2 + 320;
  LODWORD(STACK[0x7BC]) = *(_DWORD *)(v1 + 72);
  LODWORD(STACK[0x784]) = *(_DWORD *)(v1 + 76);
  LODWORD(STACK[0x6D0]) = *(_DWORD *)(v1 + 80);
  LODWORD(STACK[0x7D4]) = *(_DWORD *)(v1 + 84);
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((((char)(*(_BYTE *)(v1 + 96) ^ (v0 + 103)) < (char)(((2 * v0) ^ 0x12) + 91))
                                          * (((4 * v0) ^ 0x7B8) - 759)) ^ v0))
                            - 8LL))();
}

uint64_t sub_1005D4678(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (((((a2 + 782) ^ 0x6C2) + 1943) * (v2 == -52)) ^ a2)))();
}

uint64_t sub_1005D46AC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v9 = (unsigned __int8 *)(v4 + v7 - 1122550474LL);
  unsigned int v10 = ((((v9[1] ^ 0x30) - ((2 * (v9[1] ^ 0x30)) & 0x1FC)) << 8) - 266207744) ^ 0xF021FE00;
  unsigned int v11 = (v10 - 157390924 - ((2 * v10) & 0x6D3CCE00)) ^ 0xF69E67B4 | ((*v9 ^ 0x30)
                                                                   + 1459317936
                                                                   - ((((v3 - 1531836497) & 0x5B4DF8F1) + 127) & (2 * (*v9 ^ 0x30)))) ^ 0x56FB6CB0;
  int v12 = ((((v9[2] ^ 0x30) - ((2 * (v9[2] ^ 0x30)) & 0x1C8)) << 16) + 82051072) ^ 0x4E40000;
  unsigned int v13 = (v11 - 1822465400 - ((2 * v11) & 0x26BEC510)) ^ 0x935F6288 | (v12 - 1794880235 - ((2 * v12) & 0x2A080000)) ^ 0x95044D15;
  LODWORD(v9) = ((((v9[3] ^ 0x30) - ((2 * (v9[3] ^ 0x30)) & 0x33333333)) << 24) + 419430400) ^ 0x19000000;
  LODWORD(v9) = (v13 + 2103430214 - ((2 * v13) & 0x7ABF988C)) ^ 0x7D5FCC46 | ((_DWORD)v9
                                                                            - 953153844
                                                                            - ((2 * (_DWORD)v9) & 0x8E000000)) ^ 0xC73006CC;
  *(_DWORD *)(v6 + ((v7 + v8) & 0xFFFFFFFC)) = (_DWORD)v9 + a3 - ((2 * (_DWORD)v9) & 0xEFA1EBAC);
  return (*(uint64_t (**)(void))(v5
                              + 8LL
                              * (int)((1753
                                     * (((-(uint64_t)((~(unint64_t)(v7 + 4 + v8) + v3) ^ (~(v7 + 4 + v8) + v3)) | (~(unint64_t)(v7 + 4 + v8) + v3)) & 0x8000000000000000LL) == 0LL)) ^ (v3 + 570))))();
}

uint64_t sub_1005D487C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  unsigned int v17 = (((a1 ^ a6) & (a3 ^ a5)) - 1999356611 - ((2 * ((a1 ^ a6) & (a3 ^ a5))) & 0x11A87A7A)) ^ 0x88D43D3D | (((a1 ^ a5) & (v11 ^ a5)) - 1143905235 - ((((v12 - 225) | 0x20) + 2007156794) & (2 * ((a1 ^ a5) & (v11 ^ a5))))) ^ 0xBBD1642D;
  unsigned int v18 = (v8 ^ a5) + (v17 ^ 0xFFFFFFDE) + ((2 * v17) & 0xFFFFFFBC) + 34;
  uint64_t v19 = (v16 + v10);
  unsigned int v20 = (*(_DWORD *)(v7 + 4LL * (*(_BYTE *)(v15 + v19) - 101)) ^ a2)
      + (v18 ^ 0xF93AEFF7)
      + 113577993
      + ((2 * v18) & 0xF275DFEE);
  unsigned int v21 = (v20 ^ 0xE7BFFDFA) + *(_DWORD *)(v13 + 4LL * v19);
  unsigned int v22 = v21
      + ((2 * v20) & 0xCF7FFBF4)
      - 2 * ((v21 + ((2 * v20) & 0xCF7FFBF4) + 965322796) & (a5 + 2) ^ v21 & 2)
      - 476701912;
  unsigned int v23 = (((v22 ^ a5) << (*(_BYTE *)(v9 + v19) - 5))
       - 997317521
       - ((2 * ((v22 ^ a5) << (*(_BYTE *)(v9 + v19) - 5))) & 0x891C48DE)) ^ 0xC48E246F | (((v22 ^ a5) >> (v14 - *(_BYTE *)(v9 + v19)))
                                                                                        - 572739111
                                                                                        - ((2
                                                                                          * ((v22 ^ a5) >> (v14 - *(_BYTE *)(v9 + v19)))) & 0xBBB963B2)) ^ 0xDDDCB1D9;
  unsigned int v24 = (a1 ^ a5) + (v23 ^ 0xBB7FEDAF) + ((2 * v23) & 0x76FFDB5E) + 1149243985;
  return (*(uint64_t (**)(void))(v6 + 8LL * ((667 * ((v16 + 1 + v10) < 0x10)) ^ v12)))(v24 + a5 - (a4 & (2 * v24)));
}

uint64_t sub_1005D4A70@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  unsigned int v17 = ((v15 + 1637850078) & 0x9E6064BD ^ (a6 + 188) ^ a2) & (v12 ^ a5);
  unsigned int v18 = (((a1 ^ a5) & (a2 ^ a5)) - 1526676959 - ((2 * ((a1 ^ a5) & (a2 ^ a5))) & 0x4A018442)) ^ 0xA500C221 | (v17 - 1648781433 - ((2 * v17) & 0x3B732F0E)) ^ 0x9DB99787;
  unsigned int v19 = (v16 ^ a5) + (v18 ^ 0xDFF4FFE7) + ((2 * v18) & 0xBFE9FFCE) + 537591833;
  uint64_t v20 = (v6 + v10);
  unsigned int v21 = (*(_DWORD *)(v8 + 4LL * (*(_BYTE *)(v14 + v20) - 101)) ^ a3)
      + (v19 ^ 0x73F7EEFB)
      + ((2 * v19) & 0xE7EFDDF6)
      - 1945628411;
  unsigned int v22 = (v21 ^ 0xFFF7B7FB) + *(_DWORD *)(v11 + 4LL * v20) + ((2 * v21) & 0xFFEF6FF6);
  unsigned int v23 = (v22 - 883009845 - ((2 * v22 + 1118035030) & a4) + 2652) ^ a5;
  unsigned int v24 = ((v23 << (*(_BYTE *)(v9 + v20) - 5)) + 727521490 - ((2 * (v23 << (*(_BYTE *)(v9 + v20) - 5))) & 0x56BA31A4)) ^ 0x2B5D18D2 | ((v23 >> (v13 - *(_BYTE *)(v9 + v20))) - 1326741749 - ((2 * (v23 >> (v13 - *(_BYTE *)(v9 + v20)))) & 0x61D70E16)) ^ 0xB0EB870B;
  unsigned int v25 = (a1 ^ a5) + (v24 ^ 0x67BEE3FF) + ((2 * v24) & 0xCF7DC7FE) - 1740563455;
  return (*(uint64_t (**)(void))(v7
                                           + 8LL
                                           * (int)((93
                                                  * (((((v6 + 1 + v10) ^ v15) & v15) >> (__clz((v6 + 1 + v10) ^ v15 | 1) ^ 0x1F)) & 1)) ^ (v15 | 0x9C))))(v25 + a5 - (a4 & (2 * v25)));
}

uint64_t sub_1005D4CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8LL * ((1083 * ((v9 + 1 + v8) > 0x2F)) ^ a7)))();
}

uint64_t sub_1005D4E28()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * (int)(v3 ^ 0x771 ^ (126
}

uint64_t sub_1005D4FD4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  LODWORD(STACK[0x7BC]) = v7;
  LODWORD(STACK[0x6D0]) = v9;
  LODWORD(STACK[0x784]) = v8;
  LODWORD(STACK[0x7D4]) = a2;
  int v10 = (v6[18] ^ a6) + (v7 ^ a6);
  int v11 = (v6[19] ^ a6) + (v8 ^ a6);
  v6[18] = v10 + a6 - (a5 & (2 * v10));
  v6[19] = v11 + a6 - (a5 & (2 * v11));
  int v12 = v6[21];
  int v13 = (v6[20] ^ a6) + (LODWORD(STACK[0x6D0]) ^ a6);
  v6[20] = v13 + a6 - (a5 & (2 * v13));
  v6[21] = (v12 ^ a6) + (LODWORD(STACK[0x7D4]) ^ a6) + a6 - (a5 & (2 * ((v12 ^ a6) + (LODWORD(STACK[0x7D4]) ^ a6))));
  STACK[0x870] -= 320LL;
  return ((uint64_t (*)(void))STACK[0x810])();
}

uint64_t sub_1005D5988(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * ((97
                                          * ((LODWORD(STACK[0x658]) ^ (LODWORD(STACK[0x9BC])
                                                                                      - 947768835 > (LODWORD(STACK[0x864]) ^ 0xD4FE6C26))) & 1)) ^ (a4 - 68)))
                            - 12LL))();
}

uint64_t sub_1005D5BC4()
{
  uint64_t v7 = ((_BYTE)v1 - 67) & 0xF;
  *(_BYTE *)STACK[0xA70] = *(_BYTE *)(STACK[0x6E0] + (v1 - 947768899)) ^ *(_BYTE *)(v0 + v7) ^ *(_BYTE *)(v7 + v4 + 5) ^ *(_BYTE *)((v2 - 422) + v5 + v7 - 57) ^ (v7 * v3) ^ 0x30;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * v2) - 12LL))();
}

uint64_t sub_1005D5C48( int8x16_t a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  *int v10 = vaddq_s8( vaddq_s8(*(int8x16_t *)(v9 + (v11 + v12)), a2),  vmvnq_s8( vandq_s8( vaddq_s8(*(int8x16_t *)(v9 + (v11 + v12)), *(int8x16_t *)(v9 + (v11 + v12))),  a1)));
  return ((uint64_t (*)(void, void))(*(void *)(v13 + 8LL * (a9 - 724)) - 8LL))( (v11 + 64),  (a9 - 1612));
}

uint64_t sub_1005D5CA4()
{
  BOOL v3 = v1 - 1412354252 < (v0 - 2127260958);
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((585 * v3) ^ (LODWORD(STACK[0x660]) - 478))) - 8LL))();
}

uint64_t sub_1005D5CB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
                                        * ((41 * (v5 - 947768899 < (((a4 ^ 0x681) + 1550) ^ v4 ^ 0xD4FE6A37))) | (a4 - 450)))
                            - ((241 * (a4 ^ 0x681u)) ^ 0x2DBLL)))();
}

uint64_t sub_1005D5CD0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
}

uint64_t sub_1005D5D04()
{
}

uint64_t sub_1005D5D48@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (((*(_DWORD *)(a1 + 92) == 2 * (v1 ^ 0x78B) + 2028012047) * ((v1 + 440) ^ 0x686)) | v1)))();
}

uint64_t sub_1005D5D88@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = (_BYTE *)STACK[0x8F0];
  int v4 = v1 - 1153;
  int v5 = *(_DWORD *)(a1 + 72);
  _BYTE *v3 = unk_10072D9A0 ^ unk_10072FF43 ^ HIBYTE(v5) ^ unk_100733250 ^ 0x2A;
  v3[1] = unk_10072D9A1 ^ BYTE2(v5) ^ unk_10072FF44 ^ 0xC7 ^ unk_100733251 ^ 0xC;
  void v3[2] = BYTE1(v5) ^ 0x8E ^ unk_10072D9A2 ^ unk_10072FF45 ^ unk_100733252 ^ 0x72;
  v3[3] = v5 ^ 0x55 ^ unk_10072D9A3 ^ unk_10072FF46 ^ unk_100733253 ^ 0xFC;
  unsigned int v6 = *(_DWORD *)(a1 + 92) - 1990822120;
  BOOL v7 = v6 < 0x2377FA9;
  BOOL v8 = v6 > 0x2377FAD;
  if (v7) {
    BOOL v8 = v7;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 8LL * ((285 * v8) ^ v4)) - 4LL))( 4294967239LL,  42LL,  0x40641C9FFDBB20CLL,  0x40641C9FFDBB20DLL,  114LL,  0x40641C9FFDBB20ELL,  2756851422LL,  2304145176LL);
}

void sub_1005D5F70()
{
}

uint64_t sub_1005D5F78()
{
  BOOL v3 = v1 == (v0 + 85);
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((v3 | (4 * v3)) ^ v0)) - 4LL))();
}

uint64_t sub_1005D5F9C@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((((v1 - 776798750) & 0x2E4D069E) - 1604)
                                          * (*(_DWORD *)(a1 + 92) != 2028013713)) | v1))
                            - 4LL))();
}

uint64_t sub_1005D5FE4@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = (_BYTE *)STACK[0x8F0];
  int v4 = *(_DWORD *)(a1 + 72);
  _BYTE *v3 = unk_10072D9A0 ^ v4 ^ unk_10072FF43 ^ unk_100733250 ^ 0xFC;
  v3[1] = unk_10072D991 ^ BYTE1(v4) ^ unk_100756946 ^ 0xE3 ^ unk_100752E33 ^ 0x72;
  void v3[2] = BYTE2(v4) ^ 0xC6 ^ unk_10072D992 ^ unk_100756947 ^ unk_100752E34 ^ 0xC;
  v3[3] = HIBYTE(v4) ^ 0xA9 ^ unk_10072D993 ^ unk_100756948 ^ unk_100752E35 ^ 0x2A;
  unsigned int v5 = *(_DWORD *)(a1 + 92) + 1549385662;
  BOOL v6 = v5 < 0xD53AC84F;
  if (v6) {
    BOOL v7 = v6;
  }
  else {
    BOOL v7 = v5 > 0xD53AC853;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 8LL * ((464 * v7) ^ v1)) - 4LL))( 4294967239LL,  0x5B8D36BB22992F39LL,  4294967267LL,  114LL,  0x5B8D36BB22992F3ALL,  0x5B8D36BB22992F3BLL,  42LL,  2756797426LL);
}

void sub_1005D61F8()
{
}

uint64_t sub_1005D6200()
{
  return ((uint64_t (*)(void))STACK[0xA08])();
}

uint64_t sub_1005D6210(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((((((a1 + 1332948025) ^ 0x4F73378F) + 2147482300) & 0x49EB9E30) != ((a1 + 1332948025) & 0xB08CCD5F) + 1240178197) ^ (a1 - 1252)))
                            - 12LL))();
}

void sub_1005D628C(uint64_t a1, uint64_t a2, int a3)
{
  *(_BYTE *)(STACK[0x6E8] + v3 + v6 + (a3 ^ v4) * v5) ^= *(_BYTE *)(v8 + v3 + v6 + (a3 ^ v4) * v5) ^ v7;
  JUMPOUT(0x1005D6250LL);
}

uint64_t sub_1005D62BC(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((495
}

uint64_t sub_1005D6334()
{
  STACK[0x870] -= 32LL;
  return ((uint64_t (*)(void))STACK[0x750])();
}

uint64_t sub_1005D6348()
{
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8LL
                                            * ((1991
                                              * ((*(unsigned int *)(STACK[0x668] + 112) ^ 0x7BB7D8CF9E5555EDLL)
                                               - 0x7BB7D8CFDBBA85FDLL
                                               + (((unint64_t)(*(_DWORD *)(STACK[0x668] + 112) ^ 0x69620A42u) << (3 * (LOBYTE(STACK[0x660]) ^ 0x8Du) - 44)) & 0x1EE6EBF5ELL) != 461167026)) ^ (LODWORD(STACK[0x660]) - 661))))(0x6BC9DA2D825E2848LL);
}

uint64_t sub_1005D6428(uint64_t a1)
{
  BOOL v11 = v4 < v5;
  *(_BYTE *)(v8 + v9 - 0x1D0CEF7CA9A3E14ELL) = *(_BYTE *)(v7 + v3 - 0x51CC40A9AB7CA313LL) - 99;
  unint64_t v12 = a1 - 0x6BC9DA2D66E14E95LL;
  uint64_t v13 = a1 + 1;
  int v14 = v11 ^ (v12 < v1);
  BOOL v15 = v12 < v4;
  if (!v14) {
    BOOL v11 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8LL * ((v11 * v6) ^ v2)))(v13);
}

void sub_1005D64BC()
{
}

uint64_t sub_1005D651C()
{
  kern_return_t v2;
  STACK[0x658] = v1;
  int v2 = IOMainPort(0, (mach_port_t *)&STACK[0x944]);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((29
                                        * ((((v0 ^ 0x324) + 2145647450) & (2 * v2)) + (v2 ^ 0x3FF1FF7D) != ((v0 - 131) | 0x98) + 1072824036)) ^ v0))
                            - 8))();
}

uint64_t sub_1005D6590()
{
  BOOL v1 = IOServiceMatching((const char *)&STACK[0x15B1]) != 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1590 * v1) ^ v0)) - ((32 * v0) ^ 0x1328LL)))();
}

uint64_t sub_1005D65D4(const __CFDictionary *a1)
{
  kern_return_t MatchingServices;
  MatchingServices = IOServiceGetMatchingServices(STACK[0x944], a1, (io_iterator_t *)&STACK[0x704]);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((781
                                        * (((MatchingServices << (v1 + 104)) & 0xFFFABBE8)
                                         + (MatchingServices ^ 0x7FFD5DF4) == ((v1 - 1071726778) & 0x3FE1453F ^ 0x7FFD58EB))) ^ v1))
                            - 8))();
}

uint64_t sub_1005D6658()
{
  io_object_t v1 = IOIteratorNext(STACK[0x704]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((44
                               * (((v1 << ((v0 - 60) ^ 0xE2)) & 0xBFAC7AF4) + (v0 ^ 0x39D ^ v1 ^ 0x5FD63BF8) != 1607875962)) ^ v0)))();
}

uint64_t sub_1005D66C0@<X0>(int a1@<W8>)
{
  kern_return_t v3;
  task_port_t v2 = mach_task_self_;
  LODWORD(STACK[0x650]) = a1 - 1607875962;
  uint64_t v3 = IOServiceOpen(a1 - 1607875962, v2, 0, (io_connect_t *)&STACK[0x6D4]);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((1685
                                        * (((2 * v3) & 0x5EFFCDFE) + (v3 ^ 0x2F7FE6FF) == (v1 ^ 0xDFDAF769) + 1336209269)) ^ v1))
                            - 8))();
}

uint64_t sub_1005D6754()
{
  *(_DWORD *)(v1 + 298_Block_object_dispose(va, 8) = ((v0 | 2) ^ 0xDFFDFE82)
                         + (LODWORD(STACK[0x6D4]) ^ 0x3CF6DF33)
                         + ((2 * LODWORD(STACK[0x6D4])) & 0x79EDBE66);
  IOObjectRelease(STACK[0x650]);
  return sub_1005D424C();
}

uint64_t sub_1005D6790(uint64_t a1, int a2)
{
}

uint64_t sub_1005D67D0@<X0>(int a1@<W8>)
{
  unint64_t v3 = STACK[0x6E8];
  STACK[0xAF8] = v1;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v3 != 0) * (a1 - 264)) ^ a1)) - 12LL))();
}

uint64_t sub_1005D6808()
{
  int v5 = (v1 + v2 + 141) | 2;
  int v6 = byte_10073CF70[v0[9] ^ 0xD1 ^ ((v1 + v2 - 115) | 2)];
  char v7 = (32 * v6) ^ 0xC0;
  STACK[0x658] = v4;
  char v8 = v7 - 26;
  char v9 = 2 * v7;
  unsigned int v10 = (2 * v7 - (v7 - 26)) & 0x40;
  unsigned int v11 = (v10 & 0xFFFFFF7F | (((v10 >> 6) & 1) << 7)) ^ 0x6B;
  char v12 = v11 - 1;
  unsigned int v13 = -((v11 - 107) & (v6 ^ 0xFFFFFF80));
  char v14 = -43 - v11;
  if ((v13 & 0xFE) != 0) {
    char v15 = v14;
  }
  else {
    char v15 = v12;
  }
  uint64_t v16 = byte_1007358D0[v0[3] ^ 0xAELL];
  int v17 = *v0;
  int v18 = 2 * (v17 ^ 0x99);
  HIDWORD(v19) = ((~v18 + (v17 ^ 0x99)) ^ 1) + 2;
  LODWORD(v19) = ((v17 ^ 0x99) - (v18 & 0xA8) - 1896117164) ^ 0x8EFB8C54;
  int v20 = (v19 >> 2) + 2103417191 - ((2 * (v19 >> 2)) & 0xFABF4C96);
  char v21 = (((2 * v17) ^ 0x32) - 2 * (((2 * v17) ^ 0x32) & 0x1E ^ (2 * v17) & 4) + 26) & 0x2E;
  LOBYTE(v17) = (v17 ^ 0xE) + (v21 ^ 0xA4) + ((2 * v21) ^ 0x14) + 82;
  HIDWORD(v19) = (v20 + 1073745124) ^ 0x1638AB7F;
  LODWORD(v19) = -3301 - v20;
  int v22 = byte_10073CC70[((v19 >> 30) - ((2 * (v19 >> 30)) & 0x2E297BC) - 2123281442) ^ 0x2CED7FEBLL] ^ (v17 + (~(2 * v17) | 0xE7) + 13) ^ 0xAD;
  int v23 = (((v22 - ((2 * v22) & 0xC8)) << 24) + 1677721600) ^ 0x64000000;
  int v24 = (v23 - ((2 * v23) & 0xF2000000) - 113618629) ^ 0xF93A513B | ((v16 ^ 0xDC)
                                                                   - ((2 * (v16 ^ 0xDC)) & 0xCE)
                                                                   + 1901998439) ^ 0x715E3167;
  int v25 = byte_100755E30[v0[2] ^ 0x4CLL];
  int v26 = (105 * v25 - ((-46 * v25 + 100) & 0xA2) - 125) ^ 0x48;
  unsigned int v27 = (((v26 - ((2 * v26) & 0x8A)) << 8) - 1681308416) ^ 0x9BC94500;
  int v28 = byte_10073CF70[v0[1] ^ 0xA5LL];
  unsigned int v29 = (((32 * v28) ^ 0xFFFFFFC0) + (((32 * v28) ^ 0xFFFFFFC0) >> 6 << 7) + 78) ^ v28;
  LODWORD(STACK[0x650]) = v29;
  unsigned int v30 = ((((v29 ^ 0x9C) - ((2 * (v29 ^ 0x9C)) & 0xBE)) << 16) - 648085504) ^ 0xD95F0000;
  unsigned int v31 = (v24 - ((2 * v24) & 0xF3D09D2A) + 2045267605) ^ 0x79E84E95 | (v27 - ((2 * v27) & 0x7CEFD200) - 25695915) ^ 0xFE77E955;
  unsigned int v32 = (v31 - ((2 * v31) & 0xBD4E8180) - 559464256) ^ 0xDEA740C0 | (v30 - ((2 * v30) & 0x23520000) + 1370034730) ^ 0x51A9122A;
  unsigned int v33 = v32 - ((2 * v32) & 0x3A501D58) - 1658319188;
  int v34 = ((BYTE1(v33) ^ 0xCA) - ((2 * (BYTE1(v33) ^ 0xCA)) & 0x136) + 804924571) ^ 0x761219B;
  unsigned int v35 = (v34 | 0xB0810D9E) - (v34 | 0x4F7EF261) + 1333719649;
  unsigned int v36 = (v35 & 0xFFFFF7FF ^ 0xE1F5B7BA)
      + (v35 & 0xFFFFF7FF ^ 0xD99A4CF7)
      + ((2 * v35) & 0x7CFF66BE ^ 0xCFCBEF51)
      + ((2 * v35) & 0xF3DF6FDA ^ 0x3014108A);
  LOBYTE(v34) = (v8 + ~v9) & 0xA0 ^ 0x82;
  uint64_t v37 = byte_1007358D0[v0[7] ^ 0x56LL];
  unsigned __int8 v38 = ((v6 ^ 0x9E) + v15 - 106 - ((2 * ((v6 ^ 0x9E) + v15 - 106)) & 0xF4) - 6) ^ (127 - v34);
  int v39 = byte_10073CC70[v0[4] ^ 0x5BLL] ^ 0x55 ^ ((v0[4] ^ 0xBC)
                                                                - ((2 * (v0[4] ^ 0xBC) + 14) & 0x12)
                                                                - 96);
  unsigned int v40 = (((v39 - ((2 * v39) & 0x8C)) << 24) - 973078528) ^ 0xC6000000;
  int v41 = (v40 - ((2 * v40) & 0xD4000000) - 354940517) ^ 0xEAD8099B | ((v37 ^ 0xDC)
                                                                   - ((2 * (v37 ^ 0xDC)) & 0x100)
                                                                   + 1349363840) ^ 0x506DA880;
  int v42 = v41 - ((2 * v41) & 0x4AA422A);
  LOWORD(v30) = byte_100755E30[v0[10] ^ 0xCCLL];
  LOWORD(v30) = (105 * v30 - ((-46 * v30 + 100) & 0xD4) - 100) ^ 0x53;
  LOWORD(v30) = (((v30 - ((2 * (_WORD)v30) & 0x162)) << 8) - 20224) ^ 0xB100;
  int v43 = byte_100755E30[v0[6] ^ 0xBBLL];
  LOWORD(v27) = (v30 - ((2 * v30) & 0x7600) - 17430) ^ 0xBBEA;
  uint64_t v45 = byte_1007358D0[v0[15] ^ 0x2BLL];
  LOWORD(v41) = byte_1007358D0[v0[11] ^ 0xA1LL];
  int v46 = byte_100755E30[v0[14] ^ 0x8BLL];
  int v47 = (((v44 << 8) + 2004692480) ^ 0x777D2E00) - ((2 * (((v44 << 8) + 2004692480) ^ 0x777D2E00)) & 0x6011F200);
  uint64_t v48 = v0[8];
  char v49 = (v48 ^ 0xE3) - ((2 * (v48 ^ 0xE3) + 6) & 4);
  LOWORD(v41) = ((v41 ^ 0xDC) - ((2 * (v41 ^ 0xDC)) & 0x2A) + 2581) ^ 0xA15;
  LOWORD(v41) = (v27 - ((2 * v27) & 0xEE4A) + 30501) ^ 0x7725 | (v41 - ((2 * v41) & 0x366) - 25165) ^ 0x9DB3;
  __int16 v50 = v41 - ((2 * v41) & 0xD974) + 27834;
  int v51 = (((((105 * v46 - ((-46 * v46 + 100) & 0x8A) - 9) ^ 0x41)
         - ((2 * ((105 * v46 - ((-46 * v46 + 100) & 0x8A) - 9) ^ 0x41)) & 0x8A)) << 8)
       + 1781089536) ^ 0x6A294500;
  int v52 = (v51 - ((2 * v51) & 0x707C4600) + 2017338330) ^ 0x783E23DA | ((v45 ^ 0xDC)
                                                                    - ((2 * (v45 ^ 0xDC)) & 0x7C)
                                                                    - 399250626) ^ 0xE833EB3E;
  LOBYTE(v27) = byte_10073CC70[v48 ^ 4];
  unsigned int v53 = ((v0[12] ^ 0x49) - ((2 * (v0[12] ^ 0x49) + 46) & 0xBBBBBBBB) - 12) ^ byte_10073CC70[v0[12] ^ 0xAELL];
  LODWORD(v4_Block_object_dispose(va, 8) = ((((v53 ^ 0xCD) - ((2 * (v53 ^ 0xCD)) & 0x36)) << 24) - 1694498816) ^ 0x9B000000;
  int v54 = byte_10073CF70[v0[13] ^ 0x2FLL];
  unsigned int v55 = ((2 * ((2 * v54) ^ 0xFFFFFFB4)) & 0x70) - ((2 * v54) ^ 0xFFFFFFB4) + 70;
  unsigned int v56 = ((2 * ((v54 ^ 0xFFFFFFDA) + 68)) & 0x3C) + (((v54 ^ 0xFFFFFFDA) + 68) ^ 0xFFFFFF9E);
  unsigned int v57 = ((v55 & 0xFFFFFF88 | (16 * ((v55 >> 3) & 1))) ^ 0xFFFFFF91) + v56;
  int v58 = (32 * v56 - ((v54 & 1) << 6) - 10) ^ 0xE2 ^ (v57 - ((2 * v57 - 94) & 0xDC) + 63);
  unsigned int v59 = ((((~(2 * v58) | 0xFE13) + v58) << 16) - 487129088) ^ 0xE2F60000;
  int v60 = byte_10073CF70[v0[5] ^ 0xF0LL];
  int v61 = ((v59 - 823701773 + (~(2 * v59) | 0xFA31FFFF)) | 1) ^ 0xCEE74EF3 | (v48 - ((2 * v48) & 0x68000000) + 873754569) ^ 0x34146FC9;
  unsigned int v62 = (v61 - ((2 * v61) & 0xE9FA0A40) + 1962738976) ^ 0x74FD0520 | (v52 - ((2 * v52) & 0x6FB4A3B2) + 2010796505) ^ 0x77DA51D9;
  unsigned int v63 = v62 - ((2 * v62) & 0x93EF4A06);
  LODWORD(v4_Block_object_dispose(va, 8) = (((32 * v60) ^ 0x40) + (((32 * v60) ^ 0x40u) >> 6 << 7) + 76) ^ v60;
  unsigned int v64 = ((((v48 ^ 0xFE) - ((2 * (v48 ^ 0xFE)) & 0x1EC)) << 16) - 789184512) ^ 0xD0F60000;
  int v65 = (v64 - ((2 * v64) & 0x2E0E0000) + 386335522) ^ 0x17070322 | (v47 + 1879636231) ^ 0x7008F907;
  unsigned int v66 = (v65 - ((2 * v65) & 0xED1AF132) + 1988982937) ^ 0x768D7899 | (v42 - 2108350187) ^ 0x82552115;
  unsigned int v67 = v66 - ((2 * v66) & 0xE10E9F66) - 259567693;
  int v68 = ((HIBYTE(v33) & 0xA ^ 0x20181007) + (HIBYTE(v33) & 0x51) - 1) ^ 0x528540D0;
  unsigned int v69 = (((((v63 + 1240966403) ^ 0x297F12CC) >> (v50 & 0x10))
        - ((2 * (((v63 + 1240966403) ^ 0x297F12CC) >> (v50 & 0x10))) & 0x1824FE6A)
        - 1944944843) ^ 0x8C127F35) >> (v50 & 0x10 ^ 0x10);
  char v70 = v69 - ((2 * v69) & 0x8F);
  unsigned int v71 = HIBYTE(v33) ^ 0x91;
  unsigned int v72 = (((2 * (HIBYTE(v33) & 0x5B ^ 0x44F654)) & 0x896C28) - (HIBYTE(v33) & 0x5B ^ 0x44F654) - 65320885) ^ 0xAC7AF8F4 ^ ((v68 & 0x41 ^ 0x50140060) + (v68 & 0x9E ^ 0xA04C05) - 1) | (((2 * (HIBYTE(v33) & 0xA4 ^ 0x4044B8)) & 0x808058) - (HIBYTE(v33) & 0xA4 ^ 0x4044B8) - 2034325614) ^ ((HIBYTE(v33) & 0xA4 ^ 0x844EB528) - ((2 * (HIBYTE(v33) & 0xA4 ^ 0x844EB528)) & 0x102A50) + 2073632041) ^ 0xF569DBAF;
  int v73 = v72 - ((2 * v72) & 0x71C43B82) - 1193140799;
  int v74 = dword_10072E7A0[v48 ^ 0x8F];
  unsigned int v75 = (HIBYTE(v50) ^ 0x108C4 | 0x2BD206AF) - (HIBYTE(v50) ^ 0x108C4 | 0xD42DF950) - 735184560;
  int v76 = v75 ^ 0x59BD2CFC;
  int v77 = dword_100732730[v45 ^ 0xA0];
  HIDWORD(v19) = v77 ^ 0xFE;
  LODWORD(v19) = v77 ^ 0x9CA6E00;
  unsigned int v78 = v74 ^ dword_1007557B0[v71] ^ (((32 * v74) ^ 0x9C67AFE0)
                                    - ((2 * ((32 * v74) ^ 0x9C67AFE0)) & 0x38E5ACC0)
                                    - 1670195601) ^ ((v19 >> 8) - ((2 * (v19 >> 8)) & 0x3AADD2C0) + 492235104) ^ *((_DWORD *)&unk_100733F90 + (((HIBYTE(v50) ^ 0xFFFFFF4A) - ((2 * (HIBYTE(v50) ^ 0xFFFFFF4A) + 226) & 0x5E18FE5C) - 1358135393) ^ v75 ^ 0x59BD2CFC ^ 0xEDB89C6F ^ ((v75 ^ 0xD42CF151) - ((2 * (v75 ^ 0xD42CF151) + 2) & 0x61B58226) + 819642644)) + 112) ^ v73;
  int v79 = dword_10072E7A0[v38 ^ 0x17];
  int v80 = ((unsigned __int16)(v63 - 23293) >> 8);
  LODWORD(v16) = dword_100732730[v16 ^ 0x4A];
  HIDWORD(v19) = v16 ^ 0xFE;
  LODWORD(v19) = v16 ^ 0x9CA6E00;
  unsigned int v81 = v79 ^ dword_1007557B0[HIBYTE(v67) ^ 0x29] ^ (((32 * v79) ^ 0x9C67AFE0)
                                                   - ((2 * ((32 * v79) ^ 0x9C67AFE0)) & 0x8138FE40)
                                                   + 1083997997) ^ ((v19 >> 8)
                                                                  - ((2 * (v19 >> 8)) & 0x6AF4B896)
                                                                  - 1250272181) ^ *((_DWORD *)&unk_100733F90
                                                                                  + ((((2 * (v80 ^ 0x28)) | 0xADE09680)
                                                                                    - (v80 ^ 0x28)
                                                                                    - 1458588480) ^ 0x56F04B0A));
  unsigned __int8 v82 = v27 ^ (v49 + 25) ^ 0xB5;
  unsigned int v84 = v36 - 1980236838;
  if (((v36 + 1150286708) & 0xCC591789) != ((2 * (v36 + 1150286708)) & 0x18802502)) {
    unsigned int v84 = 14157042 - v36;
  }
  int v85 = dword_100732730[v37 ^ 0x21];
  HIDWORD(v86) = v85 ^ 0xFE;
  LODWORD(v86) = v85 ^ 0x9CA6E00;
  int v83 = dword_10072E7A0[(((2 * ((v70 - 57) ^ 0xB00C06DC)) & 0x6008080C)
  unsigned int v87 = dword_1007557B0[v82] ^ v83 ^ (((32 * v83) ^ 0x9C67AFE0)
                                    - ((2 * ((32 * v83) ^ 0x9C67AFE0)) & 0x844563C0)
                                    + 1109570028) ^ ((v86 >> 8) - ((2 * (v86 >> 8)) & 0x53E9BAC) - 2103489066) ^ *((_DWORD *)&unk_100733F90 + (v35 ^ 0x473BBB9C ^ (v84 - ((2 * v84 + 232926790) & 0x26F15864) - 1704344747)));
  int v88 = dword_10072E7A0[LODWORD(STACK[0x650]) ^ 0x30];
  unsigned int v89 = (v50 ^ 0x5F55579B) - ((2 * (v50 ^ 0x5F55579B)) & 0xA4A00C80) + 1392127552;
  int v90 = dword_100732730[((v89 & 0xC064A13 ^ 0x14008611) + (v89 ^ 0x4986594A) - ((v89 ^ 0x4986594A) & 0x1C00CE13)) ^ 0x582FEEB0];
  HIDWORD(v86) = v90 ^ 0xFE;
  LODWORD(v86) = v90 ^ 0x9CA6E00;
  unsigned int v91 = dword_1007557B0[v53 ^ 0x80] ^ v88 ^ (((32 * v88) ^ 0x9C67AFE0)
                                                            - ((2 * ((32 * v88) ^ 0x9C67AFE0)) & 0x38E28580)
                                                            + 477184726) ^ *((_DWORD *)&unk_100733F90
                                                                           + ((((2 * (BYTE1(v67) ^ 0xB8000C20)) | 0xB569D53E)
                                                                             - (BYTE1(v67) ^ 0xB8000C20)
                                                                             + 625677665) ^ 0x62B4E6FB)) ^ ((BYTE1(v67) ^ 0x90A0901D | 0x9A4ACB5C) - (BYTE1(v67) ^ 0x90A0901D | 0x65B534A3) + 1706374307) ^ ((v86 >> 8) - ((2 * (v86 >> 8)) & 0xE18B3B0C) + 1891999110);
  int v92 = dword_10072E7A0[(((2 * (BYTE2(v81) ^ 0x2A986081)) | 0x3941A1C) - (BYTE2(v81) ^ 0x2A986081) + 2117464818) ^ 0xAB526D32];
  unsigned int v93 = ((((unsigned __int16)(v35 ^ v87) >> 8) ^ 0x73)
       + ((((v35 ^ v87) >> 8) ^ 0xC2A435) & 0x50 ^ 0x188FA910)
       - ((((unsigned __int16)(v35 ^ v87) >> 8) ^ 0x73) & 0x50)) ^ 0xFB8EA840;
  int v94 = (((2 * (((unsigned __int16)(v35 ^ v87) >> 8) ^ 0xEA)) | 0x5F7E5DBA)
  unsigned int v95 = ((v94 | 0xF0C9381B) - (v94 | 0xF36C7E4) + 255248356) ^ 0xC6C53CEB;
  int v96 = dword_100732730[(((2 * (v91 ^ 0xA808016E)) & 0x10000382)
  HIDWORD(v86) = v96 ^ 0xFE;
  LODWORD(v86) = v96 ^ 0x9CA6E00;
  unsigned int v97 = ((BYTE2(v87) ^ 0xA7) - ((2 * (BYTE2(v87) ^ 0xA7)) & 0xEEEEEEEE) + 992454263) ^ 0xAEE3F71C;
  unsigned int v98 = (((2 * v97) | 0x5D12BA5A) - v97 + 1366729427) ^ 0x3B4D0C0A;
  BYTE1(v97) = BYTE1(v78) ^ BYTE1(v76);
  unsigned int v99 = dword_1007557B0[((v78 ^ v76) >> 24) ^ 0x9A] ^ v92 ^ (((32 * v92) ^ 0x9C67AFE0)
                                                           - ((2 * ((32 * v92) ^ 0x9C67AFE0)) & 0xADEE2980)
                                                           - 688450365) ^ ((v86 >> 8)
                                                                         - ((2 * (v86 >> 8)) & 0xF9AE8924)
                                                                         - 53001070) ^ ((v93 | 0x8E4ADA5)
                                                                                      - (v93 | 0xF71B525A)
                                                                                      - 149204390) ^ *((_DWORD *)&unk_100733F90 + v95);
  unsigned int v100 = (BYTE1(v91) ^ 0xB9 | 0x6BF0CEE9) - (BYTE1(v91) ^ 0xB9 | 0x940F3116) - 1810943722;
  int v101 = dword_10072E7A0[v98];
  unsigned int v102 = (((2 * (HIWORD(v91) & 0xFE ^ 0x56)) & 0x170) - (HIWORD(v91) & 0xFE ^ 0x56) - 807105466) ^ 0xC9E59C47;
  int v103 = ((((2 * v102) & 0x8000448) - v102 + 591773147) | HIWORD(v91) & 1) ^ 0x2544ADD9;
  int v104 = dword_100732730[(v78 ^ v76) ^ 0x7C];
  HIDWORD(v86) = v104 ^ 0xFE;
  LODWORD(v86) = v104 ^ 0x9CA6E00;
  unsigned int v105 = dword_1007557B0[HIBYTE(v81) ^ 0x9C] ^ *((_DWORD *)&unk_100733F90 + (BYTE1(v91) ^ 0xE0u)) ^ v101 ^ ((v86 >> 8) - 613681977 + (~(2 * (v86 >> 8)) | 0x49281673)) ^ ((v100 & 0x41C049C2 ^ 0x44001102) + (v100 ^ 0x8BC14EC0) - ((v100 ^ 0x8BC14EC0) & 0xC00001C2)) ^ (((32 * v101) ^ 0x38199560) - 280005496 - ((2 * ((32 * v101) ^ 0x38199560)) & 0xDE9EF940) + 2079);
  int v106 = dword_10072E7A0[(v103 - ((2 * v103) & 0x1F194150) - 812867416) ^ 0xCF8CA0B0];
  unsigned int v107 = v106 ^ ((v106 ^ 0xC63F3354) - ((2 * (v106 ^ 0xC63F3354) + 2) & 0x5E1474FA) - 1358284162) ^ ((v106 ^ 0xC31CC280) - ((2 * (v106 ^ 0xC31CC280) + 172483498) & 0x7CC54D14) + 1132894303) ^ 0xA8A8505C;
  int v108 = v107 - ((2 * v107 + 172483496) & 0x78039F08) + 1092993368;
  unsigned int v109 = ((v81 ^ v80) & 2 ^ 0xDFFEB7FF) + 2 * ((v81 ^ v80) & 2);
  int v110 = BYTE1(v97);
  unsigned int v111 = ((v110 ^ 0x2B | 0xC264FE52) - (v110 ^ 0x2B | 0x3D9B01AD) + 1033568685) ^ 0xC2607632;
  unsigned int v112 = (v110 ^ 0x35 | 0x3778E8D5) - (v110 ^ 0x35 | 0xC887172A) - 930670806;
  unsigned int v113 = ((v91 << 6) ^ 0x55641AC0) - ((2 * ((v91 << 6) ^ 0x55641AC0)) & 0xA4A84280) + 1381245256;
  unsigned int v114 = ((v113 & 0x40000000 | ~v113 & 0xC0000000 | 0xCDA68EA) - (~v113 & 0x40000000)) ^ 0x60F4E8B9;
  unsigned int v115 = ((v114 | 0xBC6FFC9C) - (v114 | 0x43900363) + 1133511523) ^ 0x10417CCF | (v91 >> 26) ^ 0x27;
  unsigned int v116 = v115 - ((2 * v115) & 0xCAEBB5F6) - 445261061;
  HIDWORD(v86) = v116 ^ 0xB525FAD;
  LODWORD(v86) = v116;
  int v117 = (v86 >> 30) - ((2 * (v86 >> 30)) & 0xA85DC8C0) - 735124384;
  int v118 = dword_100732730[(((v81 ^ v80) & 0xFD ^ 0x31508ADC)
                        - ((2 * ((v81 ^ v80) & 0xFD ^ 0x31508ADC)) & 0x402010C0)
                        + 641079648) ^ 0xA185344 ^ (-42108958 - v109 - ((1073574244 - 2 * v109) & 0x3AFD8038) + 236)];
  HIDWORD(v86) = v118 ^ 0xFE;
  LODWORD(v86) = v118 ^ 0x9CA6E00;
  unsigned int v119 = *((_DWORD *)&unk_100733F90 + (((v112 & 0x30688DF6 ^ 0x8015E1) + (v112 & 0x7106209) - 1) ^ 0x37F8FDAF)) ^ ((v86 >> 8) - ((2 * (v86 >> 8)) & 0x75A125B4) - 1160736038) ^ dword_1007557B0[HIBYTE(v87) ^ 0xEB] ^ v108 ^ (v111 - ((2 * v111) & 0x4CF9B7E2) - 428024847) ^ (((32 * v108) ^ 0x8039F080) - ((2 * ((32 * v108) ^ 0x8039F080)) & 0x7DA6AA40) - 1093446352);
  unsigned int v120 = v117 ^ 0x6CB0F116;
  unsigned int v121 = ((HIWORD(v78) & 0xC7 ^ 0x8FDA001) + (HIWORD(v78) & 0x38 ^ 0x21) - 1) ^ 0x91B1B081;
  int v122 = dword_10072E7A0[(v121 - ((2 * v121) & 0x208038C) + 1102332358) ^ 0xD8F85134];
  unsigned int v123 = (((2 * (BYTE1(v81) ^ 0xFD)) & 0x94) - (BYTE1(v81) ^ 0xFD) - 1099308363) ^ 0xFA71C7F5;
  LOBYTE(v85) = (v35 ^ v87 ^ 0x2A) + (v124 ^ 0x40) - 2 * (v124 & 0x3F) - 64;
  int v125 = ((v85 ^ 0xE3) + ((2 * v85) & 0xC7) + 29);
  unsigned int v126 = (v125 ^ 0xE5FFFBFF) + (v124 ^ 0xDBDBFFF) + 2 * (v125 + v124);
  unsigned int v127 = dword_100732730[(v126 - ((2 * v126 + 411338756) & 0x68F27A34) + 1086030108) ^ 0x34793DA9];
  unsigned int v128 = ((v127 << 25) & 0xF2000000 ^ 0xF0000000) + ((v127 << 24) ^ 0x875FFFBF);
  unsigned int v129 = v122 ^ *((_DWORD *)&unk_100733F90 + (((v123 | 0x11CF3D8A) - (v123 | 0xEE30C275) - 298794379) ^ 0x55C7187A)) ^ (((32 * v122) ^ 0x9C67AFE0) - ((2 * ((32 * v122) ^ 0x9C67AFE0)) & 0x53616680) + 699446100) ^ ((BYTE1(v81) ^ 0x49C08B5) - ((2 * (BYTE1(v81) ^ 0x49C08B5)) & 0x81010C8) - 1100337820) ^ dword_1007557B0[v120];
  unsigned int v130 = (((v128 - 2036334527) & 0xFF000000 | (v127 >> 8)) ^ 0x9CA64)
       + v128
       + ((2 * ((v128 - 2036334527) & 0xFF000000 | (v127 >> 8))) & 0xFFFFFFEA ^ 0xFFEC6B37);
  unsigned int v131 = (((v127 >> 8) ^ 0xFFF63591) - ((2 * ((v127 >> 8) ^ 0xFFF63591) + 2) & 0x414775CE) + 547601128) ^ (v127 >> 8) ^ (v130 - ((2 * v130 + 222298224) & 0x3F42941A) + 641813061);
  HIDWORD(v86) = v129 ^ 0x604;
  LODWORD(v86) = v129 ^ 0x8C152000;
  int v132 = (v86 >> 12) - ((2 * (v86 >> 12)) & 0x4DFD1466);
  HIDWORD(v86) = v131 ^ 0xA84;
  LODWORD(v86) = (((v131 ^ 0xBF0B3A84) + v128 - 2036334527) ^ 0x7CE65FE6)
               - 2095472614
               + ((2 * ((v131 ^ 0xBF0B3A84) + v128 - 2036334527)) & 0xF9CCBFCC);
  int v133 = ((v86 >> 12) - ((2 * (v86 >> 12)) & 0x9B19E1FC) + 1301082366) ^ (v132 - 1493267917);
  HIDWORD(v86) = v133 ^ 0x6C321;
  LODWORD(v86) = v133 ^ 0x16800000;
  unsigned int v134 = (v86 >> 20) - ((2 * (v86 >> 20)) & 0xE71CE00C) - 208769018;
  unsigned int v135 = ((((v134 ^ 0x1D667054) >> ((-4 - v63) & 8))
         - ((2 * ((v134 ^ 0x1D667054) >> ((-4 - v63) & 8))) & 0xA18C4344)
         + 1355162018) ^ 0x50C621A2) >> ((-4 - v63) & 8 ^ 8);
  int v136 = dword_10072E7A0[BYTE2(v105) ^ 0xD3];
  int v137 = ((v86 >> 20) - ((2 * (v86 >> 20)) & 0xC) + 6) ^ 0xC;
  int v138 = (((2 * v137) | 0x7AC45CCA) - v137 + 1117639067) ^ 0x6C932E6D;
  int v139 = dword_100732730[(v138 - ((2 * v138) & 0xDB82295E) + 1841370287) ^ 0xBC30144C];
  HIDWORD(v86) = v139 ^ 0xFE;
  LODWORD(v86) = v139 ^ 0x9CA6E00;
  unsigned int v140 = dword_1007557B0[HIBYTE(v99) ^ 0x3F] ^ v136 ^ (((32 * v136) ^ 0x9C67AFE0)
                                                     + 798249146
                                                     + (~(2 * ((32 * v136) ^ 0x9C67AFE0)) | 0xA0D75EBF)) ^ *((_DWORD *)&unk_100733F90 + ((((2 * (BYTE1(v119) ^ 0x38400497)) & 0x600001DE) - (BYTE1(v119) ^ 0x38400497) - 1988334320) ^ 0xB13C69E1)) ^ ((v86 >> 8) - ((2 * (v86 >> 8)) & 0x2BD1D6BA) - 1779897507);
  int v141 = dword_10072E7A0[BYTE2(v119) ^ 0xD0];
  unsigned __int8 v142 = v135 - ((2 * v135) & 0xAA) - 43;
  int v143 = (v142 ^ 0xF6) - 1190332552 - ((2 * (v142 ^ 0xF6)) & 0x86) + 2763;
  int v144 = dword_100732730[v99 ^ 0x5C];
  HIDWORD(v86) = v144 ^ 0xFE;
  LODWORD(v86) = v144 ^ 0x9CA6E00;
  int v145 = dword_10072E7A0[((BYTE2(v134) ^ 0xD08880F2 | 0xD28E9BEE) - (BYTE2(v134) ^ 0xD08880F2 | 0x2D716411) + 762405905) ^ 0x2061B62];
  unsigned int v146 = dword_1007557B0[HIBYTE(v105) ^ 0xDF] ^ v141 ^ (((32 * v141) ^ 0x9C67AFE0)
                                                      - ((2 * ((32 * v141) ^ 0x9C67AFE0)) & 0x7CFEBA40)
                                                      - 1098949325) ^ ((v86 >> 8)
                                                                     - ((2 * (v86 >> 8)) & 0x3E408150)
                                                                     + 522207400) ^ *((_DWORD *)&unk_100733F90
                                                                                    + (((v143 & 0x8104016A ^ 0x44903528)
                                                                                      + (v143 ^ 0x9145C242)
                                                                                      - ((v143 ^ 0x9145C242) & 0x2048016A)) ^ 0xCD94F538));
  if ((v145 & 0x1000000) != 0) {
    int v147 = 0x1000000;
  }
  else {
    int v147 = -16777216;
  }
  int v148 = v147 + (v145 ^ 0x39C0CCAB) - 2 * ((v147 + (v145 ^ 0x39C0CCAB)) & 0x1C15D97D ^ v145 & 0x10) + 471193965;
  int v149 = ((32 * v148) ^ 0x6C51720) - ((2 * ((32 * v148) ^ 0x6C51720)) & 0x2526F240) + 311654702;
  unsigned int v150 = (((2 * (BYTE1(v99) ^ 0xE0)) | 0xC612975C) - (BYTE1(v99) ^ 0xE0) - 1661553582) ^ 0x7908BB27;
  int v151 = dword_100732730[v105 ^ 0xA8];
  HIDWORD(v15fseek(v0, 0LL, 2) = v151 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v151 ^ 0x9CA6E00;
  int v153 = *((_DWORD *)&unk_100733F90 + (BYTE1(v99) ^ 0x3Du)) ^ ((v152 >> 8)
                                                             - ((2 * (v152 >> 8)) & 0x20928D3A)
                                                             - 1874245987) ^ dword_1007557B0[HIBYTE(v119) ^ 0x5E] ^ (((2 * v150) & 0x7BEE3BF2) - v150 - 1039605242) ^ v148;
  int v154 = dword_10072E7A0[(((2 * (BYTE2(v99) ^ 0xC2080B2)) | 0xD7065010) - (BYTE2(v99) ^ 0xC2080B2) + 343726072) ^ 0xE7A3A83B];
  unsigned int v155 = v153 ^ v149;
  unsigned int v156 = ((v105 >> 8) & 0xA5 ^ 0x35524324) + ((v105 >> 8) & 0x5A ^ 0x8801081B) - 1;
  int v157 = (((v105 >> 8) & 0x3D) + (BYTE1(v105) ^ 0x7F) - ((BYTE1(v105) ^ 0x7F) & 0x3D) + 1939313408) ^ 0x7787B3BD;
  int v158 = dword_100732730[v119 ^ 0x4B];
  HIDWORD(v15fseek(v0, 0LL, 2) = v158 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v158 ^ 0x9CA6E00;
  int v159 = dword_1007557B0[HIBYTE(v134) ^ 0x30] ^ v154 ^ *((_DWORD *)&unk_100733F90
                                                       + ((v157 - ((2 * v157) & 0x8006F48) - 1219577948) ^ 0xB35E97F4)) ^ (((32 * v154) ^ 0x9C67AFE0) - ((2 * ((32 * v154) ^ 0x9C67AFE0)) & 0x1189FDC0) + 147128059) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0xF90C2DAE) + 2089162455) ^ ((v156 & 0x6EA ^ 0x271C23) + (v156 & 0x115) - 1);
  char v160 = (BYTE1(v152) - ((2 * BYTE1(v152)) & 0xAE) - 41) & 0x10;
  unsigned int v161 = (v140 ^ BYTE1(v119) ^ ((1 - BYTE2(v134)) & 1 | 0x7C04C26C) ^ 0xDBD7983E) >> (v160 ^ 0x10);
  HIDWORD(v15fseek(v0, 0LL, 2) = v159 ^ 0x353;
  LODWORD(v15fseek(v0, 0LL, 2) = v159 ^ 0x6B364400;
  int v162 = (v152 >> 10) - ((2 * (v152 >> 10)) & 0x674A7D6E) + 866467511;
  unsigned int v163 = ((v161 - ((2 * v161) & 0x615662A4) - 1330957998) ^ 0xB0AB3152) >> v160;
  unsigned int v164 = v163 - ((2 * v163) & 0xE6);
  HIDWORD(v15fseek(v0, 0LL, 2) = v162 ^ 0x8217F;
  LODWORD(v15fseek(v0, 0LL, 2) = v162 ^ 0xF5C00000;
  unsigned int v165 = (v152 >> 22) - 2122159015 + (~(2 * (v152 >> 22)) | 0xFCFB274F);
  int v166 = (((2 * (BYTE2(v146) ^ 0xE2)) & 0x64) - (BYTE2(v146) ^ 0xE2) + 1231217869) ^ 0x6160E00F;
  int v167 = dword_10072E7A0[(v166 - ((2 * v166) & 0x10000764) - 569318478) ^ 0xF612E765];
  int v168 = ((v152 >> 22) + 89 + (~(2 * (v152 >> 22)) | 0x4F)) ^ 0x80C0;
  int v169 = ((BYTE1(v155) ^ 0x39) - ((2 * (BYTE1(v155) ^ 0x39)) & 0xE4) + 201916274) ^ 0x64849F56;
  unsigned int v170 = (((2 * (BYTE1(v155) ^ 0xE3)) | 0x37426B96) - (BYTE1(v155) ^ 0xE3) + 1683933749) ^ 0xDB801477;
  int v171 = dword_100732730[(v168
  HIDWORD(v15fseek(v0, 0LL, 2) = v171 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v171 ^ 0x9CA6E00;
  int v172 = dword_1007557B0[HIBYTE(v140) ^ 0x8A] ^ *((_DWORD *)&unk_100733F90
                                                + (((v170 | 0x6B396C59) - (v170 | 0x94C693A6) - 1798925402) ^ 0x2B184D6B)) ^ v167 ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0x717A2F4) - 2087988870) ^ ((v169 | 0x7337B702) - (v169 | 0x8CC848FD) - 1933031171);
  int v173 = ((HIWORD(v155) & 8) + (BYTE2(v155) ^ 0xAA) - ((BYTE2(v155) ^ 0xAA) & 8) + 1782829824) ^ 0x4856FF48;
  int v174 = dword_10072E7A0[(v173 - ((2 * v173) & 0x82FF8) + 220993532) ^ 0x2F393B96];
  unsigned int v175 = v172 ^ (((32 * v167) ^ 0x9C67AFE0) - ((2 * ((32 * v167) ^ 0x9C67AFE0)) & 0xF2A9EE00) - 111872251);
  unsigned int v176 = ((BYTE1(v165) ^ 0xBB | 0xB0B85D0A) - (BYTE1(v165) ^ 0xBB | 0x4F47A2F5) + 1330094837) ^ 0x3AA8DF0A;
  int v177 = dword_100732730[(((v140 ^ BYTE1(v119)) ^ 0x848821B3)
                        + ((v140 ^ BYTE1(v119)) & 0xAB ^ 0x4062DC08)
                        - (((v140 ^ BYTE1(v119)) ^ 0x848821B3) & 0x48821AB)) ^ 0xC062DCF8];
  HIDWORD(v15fseek(v0, 0LL, 2) = v177 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v177 ^ 0x9CA6E00;
  unsigned int v178 = dword_1007557B0[HIBYTE(v146) ^ 6] ^ *((_DWORD *)&unk_100733F90 + (BYTE1(v165) ^ 0xCEu)) ^ v174 ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0xACA17D36) - 699351397) ^ (((2 * v176) & 0xBE2226C) - v176 + 2047798985) ^ (((32 * v174) ^ 0x9C67AFE0) - ((2 * ((32 * v174) ^ 0x9C67AFE0)) & 0xDBAE5840) - 304665557);
  int v179 = dword_10072E7A0[BYTE2(v165) ^ 0x72];
  unsigned int v180 = (33 * (v179 ^ 0x3CE33D7F)) ^ 0xF375CEBF;
  unsigned int v181 = (66 * (v179 ^ 0x3CE33D7F)) & 0xE6EB9D7E;
  int v182 = ((v140 >> 8) & 0x31 ^ 0x26C020) + ((v140 >> 8) & 0xCE ^ 0x1010D05) - 1;
  unsigned int v183 = ((((v179 << 6) ^ 0x38CF5FC0) - ((2 * ((v179 << 6) ^ 0x38CF5FC0)) & 0xA6492B00) + 1394906540) ^ 0x532495AC) & ((((2 * v179) ^ 0x79C67AFE) - ((2 * ((2 * v179) ^ 0x79C67AFE)) & 0xDDCEB768) + 1860656053) ^ 0x6EE75BB5);
  unsigned int v184 = (((2 * (BYTE1(v140) ^ 0xAB)) & 0x19A) - (BYTE1(v140) ^ 0xAB) - 867044302) ^ 0xC872F003;
  int v185 = v181 + v180 + (v183 ^ 0x452A0A90) - ((2 * v183) & 0x75ABEADE) + 1;
  unsigned int v186 = (((v146 ^ v142) ^ 0x54 | 0x9632531C)
  int v187 = dword_100732730[(((2 * v186) | 0xF0BA8DBA) - v186 - 2019378909) ^ 0x78516716];
  HIDWORD(v15fseek(v0, 0LL, 2) = v187 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v187 ^ 0x9CA6E00;
  unsigned int v188 = *((_DWORD *)&unk_100733F90 + ((((2 * v184) & 0x8020526) - v184 + 2070568300) ^ 0x7F4959DC)) ^ dword_1007557B0[HIBYTE(v155) ^ 0x98] ^ ((v182 & 0x23D15 ^ 0xAC803101) + (v182 & 0x5C2EA ^ 0x410DC26B) - 1) ^ (v185 - ((2 * v185 + 247483744) & 0x6D032672) - 35538455) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0x8B809C76) + 1170230843);
  unsigned int v189 = (((v164 + 371) & 0xA9 ^ 0x5C4F9209) + ((v164 + 371) & 0x56 ^ 0x13) - 1) ^ 0xD6859329;
  int v190 = dword_10072E7A0[(v189 - ((2 * v189) & 0x59003F4) - 153327110) ^ 0x7C1668A3];
  int v191 = BYTE1(v146);
  unsigned int v192 = ((v191 ^ 0xD7) - ((2 * (v191 ^ 0xD7)) & 0x48) - 921249756) ^ 0xC91658A5;
  unsigned int v193 = v190 ^ dword_1007557B0[HIBYTE(v165) ^ 0xA6] ^ (((32 * v190) ^ 0x9C67AFE0)
                                                      - ((2 * ((32 * v190) ^ 0x9C67AFE0)) & 0x4C28F140)
                                                      + 638875812);
  int v194 = ((2 * (v191 ^ 0x23)) | 0x4D57059C) - (v191 ^ 0x23) + 1498709298;
  int v195 = *((_DWORD *)&unk_100733F90 + (((v194 & 0x21002E ^ 0x51000C27) + (v194 & 0x268A83D1) - 1) ^ 0x77AB8EE8u));
  unsigned int v196 = v195 ^ 0x92B6F22C;
  unsigned int v197 = (v195 ^ 0x92B6F22C) + (v195 ^ 0x5F5D54C5 ^ v193) + 1;
  unsigned int v198 = (v193 ^ ((v193 ^ 0xCDEBA6E9) - ((2 * (v193 ^ 0xCDEBA6E9) + 2) & 0x3DA9A1E8) - 1630220043) ^ (v197 - ((2 * v197) & 0xD9C3A8B2) - 320744359) ^ 0x40215DBB)
       + v196;
  int v199 = dword_100732730[((v155 ^ 0x19480874 | 0xC2F74160)
  HIDWORD(v15fseek(v0, 0LL, 2) = v199 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v199 ^ 0x9CA6E00;
  unsigned int v200 = (v198 - ((2 * v198) & 0x7766FA26) + 1001618707) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0x7EA01F3C) + 1062211486) ^ (((2 * v192) | 0xE189770A) - v192 + 255542395);
  int v201 = dword_10072E7A0[BYTE2(v178) ^ 0xC9];
  unsigned int v202 = ((BYTE1(v188) ^ 0xEE) - ((2 * (BYTE1(v188) ^ 0xEE)) & 0x66666666) + 13812531) ^ 0xD36E12E2;
  __int16 v203 = (v200 ^ 0xC6) + (v200 & 0xB6 ^ 0x8D30) - ((v200 ^ 0xC6) & 0xB6);
  int v204 = dword_100732730[((v203 & 0x5C0 ^ 0xDA2081) + (v203 & 0x23F) - 1) ^ 0xDA25F6];
  HIDWORD(v15fseek(v0, 0LL, 2) = v204 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v204 ^ 0x9CA6E00;
  unsigned int v205 = v201 ^ dword_1007557B0[HIBYTE(v175) ^ 0x62] ^ (((32 * v201) ^ 0x9C67AFE0)
                                                      - ((2 * ((32 * v201) ^ 0x9C67AFE0)) & 0x7368C40)
                                                      + 60507681) ^ *((_DWORD *)&unk_100733F90
                                                                    + ((((v188 >> 8) & 3)
                                                                      + ((v188 >> 8) & 0xFC ^ 0x4075)
                                                                      - 1) ^ 0x40A6)) ^ (((2 * v202) | 0x34AB9E22)
                                                                                       - v202
                                                                                       - 441831185) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0x2D061FCA) + 377688037);
  int v206 = dword_10072E7A0[BYTE2(v188) ^ 0x99];
  unsigned int v207 = dword_100732730[((v175 ^ 0xDB | 0x6E26C621)
  int v208 = ((v207 >> 8) ^ 0x161B46E1) + 1;
  int v209 = v208 ^ 0x6FFCFBFA;
  int v210 = (2 * v208) & 0xFF9F7F4;
  int v211 = (v207 >> 8) & 0x128C8F;
  int v212 = ((v207 >> 7) & 0x211818 ^ 0x13D956B8) + (v211 ^ 0x76115422) + v209 + v210;
  unsigned int v213 = ((v211 ^ 0xC0C) + ((v207 >> 8) & 0x12000F ^ 0x4B62133) - ((v211 ^ 0xC0C) & 0xFFFE007F)) ^ 0x8D389276 ^ (v212 - ((2 * v212 + 829780) & 0x131C6E96) + 2039778293);
  unsigned int v214 = ((v207 << 24) ^ 0x61EF2EEF) + (((v207 & 0x1F) << 25) ^ 0x3C000000) + 1611714833 + v213;
  int v215 = dword_10072E7A0[BYTE2(v200) ^ 0x9B];
  unsigned int v216 = dword_1007557B0[HIBYTE(v178) ^ 0x92] ^ v206 ^ (((32 * v206) ^ 0x9C67AFE0)
                                                      - ((2 * ((32 * v206) ^ 0x9C67AFE0)) & 0xF321600)
                                                      + 127470353) ^ (v214
                                                                    - 2 * (v214 & 0x7EA999D ^ v213 & 0x10)
                                                                    - 2014668403) ^ (((2 * (BYTE1(v200) ^ 0x43)) & 0xFFFFFF3F)
                                                                                   - (BYTE1(v200) ^ 0x43)
                                                                                   + 925784928) ^ *((_DWORD *)&unk_100733F90
                                                                                                  + (((BYTE1(v200) ^ 0x78) - ((2 * (BYTE1(v200) ^ 0x78)) & 0x148) + 4772) ^ 0x1210u));
  int v217 = ((BYTE1(v175) ^ 0x9A) + ((v175 >> 8) & 0xA6 ^ 0xE8B5024) - ((BYTE1(v175) ^ 0x9A) & 0xA6)) ^ 0x7CE519A;
  unsigned int v218 = ((v175 >> 8) & 0x49 ^ 0xEA300848) + ((v175 >> 8) & 0xB6 ^ 0x100D297) - 1;
  int v219 = dword_100732730[v178 ^ 0x2B];
  HIDWORD(v15fseek(v0, 0LL, 2) = v219 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v219 ^ 0x9CA6E00;
  unsigned int v220 = dword_1007557B0[HIBYTE(v188) ^ 0xE0] ^ *((_DWORD *)&unk_100733F90
                                                + (((v218 & 0x97E ^ 0x8948007) + (v218 & 0x1281) - 1) ^ 0x8949A4E)) ^ v215 ^ (((2 * v217) & 0x128219F6) - v217 + 1679569668) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0xD3DCEC90) + 1777235528) ^ (((32 * v215) ^ 0x9C67AFE0) - ((2 * ((32 * v215) ^ 0x9C67AFE0)) & 0x6D270F40) + 915638198);
  int v221 = dword_1007557B0[HIBYTE(v200) ^ 0x41];
  unsigned int v222 = (v221 ^ 0xD71CE332) + 1;
  v221 ^= 0xA4328610;
  unsigned int v223 = v221 + (v222 ^ 0x7FBF7AFD) + ((2 * v222) & 0xFF7EF5FA) - 2143255293;
  int v224 = dword_10072E7A0[BYTE2(v175) ^ 0xFB];
  int v225 = ((v223 - ((2 * v223) & 0xDE6DC38C) + 1865867718) ^ 0x90C91E38) + v221;
  int v226 = 2 * (v178 >> 8);
  int v227 = v226 & 0xD6;
  int v228 = ((v226 ^ 0x78) - ((2 * (v226 ^ 0x78)) & 0x80) + 64) & 0xE0;
  unsigned int v229 = (BYTE1(v178) ^ 0xFE7FF6D7) + (v227 ^ 0x50) + (v228 ^ 0xA6220853);
  int v230 = dword_100732730[v188 ^ 0xD9];
  HIDWORD(v15fseek(v0, 0LL, 2) = v230 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v230 ^ 0x9CA6E00;
  int v231 = dword_10072E7A0[BYTE2(v216) ^ 0xF9];
  unsigned int v232 = *((_DWORD *)&unk_100733F90 + v229 + ((2 * v228) ^ 0xFFFFFF7F) + 1532887539) ^ v224 ^ (((32 * v224) ^ 0x9C67AFE0)
                                                                                             - ((2
                                                                                               * ((32 * v224) ^ 0x9C67AFE0)) & 0x85C03EC0)
                                                                                             + 1121984356) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0x813BE192) - 1063391031) ^ (v225 - ((2 * v225) & 0x9AF98) + 317388);
  unsigned int v233 = (((2 * (BYTE1(v220) ^ 8)) | 0x9E2A33CC) - (BYTE1(v220) ^ 8) - 1326782950) ^ 0x775509F2;
  int v234 = ((BYTE1(v220) ^ 0x1A) - ((2 * (BYTE1(v220) ^ 0x1A)) & 0x94) - 610658998) ^ 0x63F1C31E;
  unsigned int v235 = (((v232 ^ BYTE1(v178)) ^ 0x1D | 0xF6BF4929)
  int v236 = dword_100732730[(((2 * v235) | 0xE6FB2614) - v235 - 1937609482) ^ 0x727551B2];
  HIDWORD(v15fseek(v0, 0LL, 2) = v236 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v236 ^ 0x9CA6E00;
  unsigned int v237 = dword_1007557B0[HIBYTE(v205) ^ 0x98] ^ v231 ^ (((32 * v231) ^ 0x9C67AFE0)
                                                      - ((2 * ((32 * v231) ^ 0x9C67AFE0)) & 0xCD5EA180)
                                                      - 424718133) ^ *((_DWORD *)&unk_100733F90
                                                                     + ((v234 - ((2 * v234) & 0x10078528) + 1326967444) ^ 0xF77C3C1E)) ^ (v233 - 875586880 - ((2 * v233) & 0x179F36FC) + 190) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0x668897A4) - 1287369774);
  int v238 = dword_10072E7A0[BYTE2(v220) ^ 0x56];
  int v239 = dword_100732730[((((v205 & 0xD9 ^ 0xBF99F491) & 0x4F4 | v205 & 0x24) ^ 0x81A5365)
                        + ((v205 & 0xD9 ^ 0xBF99F491) & 0xB | v205 & 2)
                        - 1) ^ 0x81A57AA];
  HIDWORD(v15fseek(v0, 0LL, 2) = v239 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v239 ^ 0x9CA6E00;
  unsigned int v240 = dword_1007557B0[HIBYTE(v216) ^ 0x57] ^ v238 ^ (((32 * v238) ^ 0x9C67AFE0)
                                                      - ((2 * ((32 * v238) ^ 0x9C67AFE0)) & 0x28C07C00)
                                                      + 341851677) ^ *((_DWORD *)&unk_100733F90
                                                                     + ((((2 * (BYTE1(v232) ^ 0xE0)) | 0xCAF836E)
                                                                       - (BYTE1(v232) ^ 0xE0)
                                                                       + 1772633673) & 0x1FFFFFFF ^ 0x1657C149u)) ^ (((v232 >> 8) & 0x39 ^ 0x4CA25B18) + ((v232 >> 8) & 0xC6 ^ 0x87) - 1) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0xE2DC8E02) - 244431103);
  int v241 = dword_10072E7A0[(((2 * (BYTE2(v232) ^ 0x60CB40A4)) & 0x1960044) - (BYTE2(v232) ^ 0x60CB40A4) + 1812219869) ^ 0xCCF07FC];
  unsigned int v242 = dword_1007557B0[HIBYTE(v220) ^ 0x6D] ^ ((BYTE1(v205) ^ 0x58A20096 | 0xCEC9EF69)
                                               - (BYTE1(v205) ^ 0x58A20096 | 0x31361096)
                                               + 825626774) ^ *((_DWORD *)&unk_100733F90
                                                              + ((((2 * (BYTE1(v205) ^ 0xF1)) | 0xE8D6D8FE)
                                                                - (BYTE1(v205) ^ 0xF1)
                                                                - 1953197183) ^ 0x746B6CE0)) ^ v241 ^ (((32 * v241) ^ 0x9C67AFE0) - 331340032 - ((2 * ((32 * v241) ^ 0x9C67AFE0)) & 0xD8805980) + 1491);
  HIDWORD(v15fseek(v0, 0LL, 2) = v242 ^ 0xE;
  LODWORD(v15fseek(v0, 0LL, 2) = v242 ^ 0x65787380;
  int v243 = dword_100732730[v216 ^ 3];
  int v244 = (v152 >> 6) - ((2 * (v152 >> 6)) & 0x8C9877C2) - 968082463;
  HIDWORD(v15fseek(v0, 0LL, 2) = v243 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v243 ^ 0x9CA6E00;
  int v245 = (v152 >> 8) + 1841055616 - ((2 * (v152 >> 8)) & 0xDB788F0E) + 7;
  HIDWORD(v15fseek(v0, 0LL, 2) = v245 ^ 7;
  LODWORD(v15fseek(v0, 0LL, 2) = v245 ^ 0x6DBC4780;
  int v246 = ((v152 >> 6) - ((2 * (v152 >> 6)) & 0xD27EE43C) - 381717986) ^ v244;
  HIDWORD(v15fseek(v0, 0LL, 2) = v246 ^ 0x2DC76C2;
  LODWORD(v15fseek(v0, 0LL, 2) = v246 ^ 0xDFFFFFFF;
  unsigned int v247 = (v152 >> 26) - ((2 * (v152 >> 26)) & 0x660BCE34) + 856024858;
  int v248 = dword_10072E7A0[((BYTE2(v205) ^ 9) - ((2 * (BYTE2(v205) ^ 9)) & 0x11C) + 654) ^ 0x2E5];
  unsigned int v249 = ((v220 ^ 0x4F) - ((2 * (v220 ^ 0x4F)) & 0x86) - 1599515069) ^ 0x90AB17F1;
  unsigned int v250 = (((2 * (BYTE1(v216) ^ 0x86)) & 0x44444444) - (BYTE1(v216) ^ 0x86) - 1690960675) ^ 0xCE655E89;
  int v251 = dword_100732730[((v249 | 0x5F1DAE99) - (v249 | 0xA0E25166) - 1595780762) ^ 0x6F1FEF2F];
  HIDWORD(v15fseek(v0, 0LL, 2) = v251 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v251 ^ 0x9CA6E00;
  unsigned int v252 = v248 ^ dword_1007557B0[HIBYTE(v232) ^ 0x3B] ^ *((_DWORD *)&unk_100733F90
                                                       + ((((2 * (BYTE1(v216) ^ 0x8809919A)) | 0x3EA6B1E2)
                                                         - (BYTE1(v216) ^ 0x8809919A)
                                                         + 1621927695) ^ 0x175AC9C2)) ^ ((v152 >> 8)
                                                                                       - ((2 * (v152 >> 8)) & 0xDBA6D3C4)
                                                                                       - 304911902) ^ (((2 * v250) | 0xE90BA558) - v250 - 1954927276) ^ (((32 * v248) ^ 0x9C67AFE0) - ((2 * ((32 * v248) ^ 0x9C67AFE0)) & 0x2AEC7180) - 1787414317);
  int v253 = dword_10072E7A0[BYTE2(v237) ^ 0x42];
  unsigned int v254 = v253 ^ dword_1007557B0[HIBYTE(v252) ^ 0x77] ^ 0x1B5629BF ^ (((32 * v253) ^ 0x9C67AFE0)
                                                                   - ((2 * ((32 * v253) ^ 0x9C67AFE0)) & 0xBE49D940)
                                                                   + 1596255394);
  unsigned int v255 = (v254 & 0x800029 ^ 0x8C2969) - (v254 & 0x800029) + (v254 & 0xDDE3163B ^ 0x50030410);
  int v256 = (v254 & 0x14C0C0 ^ 0x8000) - ((2 * v254) & 0x88100) + 33909438;
  unsigned int v257 = ((v254 & 0x22082904 ^ 0xC003A174) - ((2 * (v254 & 0x22082904 ^ 0xC003A174)) & 0xC41240A8) + 2077040733) ^ 0xBBCEA12D;
  unsigned int v258 = ((v257 | v256 & 0x3FFC3C0 ^ 0x2150200)
        - 2 * ((v257 | v256 & 0x3FFC3C0 ^ 0x2150200) & 0x661A9458 ^ v257 & 8)
        - 434465709) ^ 0xE61A9453 | v255 ^ 0xED2952;
  int v259 = dword_100732730[(((2 * (v247 ^ 0x88)) & 0x134) - (v247 ^ 0x88) + 2917) ^ 0xB80];
  HIDWORD(v15fseek(v0, 0LL, 2) = v259 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v259 ^ 0x9CA6E00;
  unsigned int v260 = *((_DWORD *)&unk_100733F90
         + ((((2 * (BYTE1(v240) ^ 0x20940606)) & 0x4108093C) - (BYTE1(v240) ^ 0x20940606) - 652602783) ^ 0xF98E1419)) ^ BYTE1(v240) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0xCB14EF4A) - 443910235) ^ (v258 - ((2 * v258) & 0xEC481EA6) + 1982074707);
  unsigned int v261 = (((*((_BYTE *)&unk_100733F90
                             + 4
                             * ((((2 * (BYTE1(v240) ^ 0x20940606)) & 0x4108093C) - (BYTE1(v240) ^ 0x20940606) - 652602783) ^ 0xF98E1419)) ^ BYTE1(v240) ^ (BYTE1(v152) - ((2 * BYTE1(v152)) & 0x4A) - 91) ^ (v258 - ((2 * v258) & 0xA6) + 83)) ^ 0x7FFBB4C2)
        - 2147202159
        + ((2 * v260) & 0xDE ^ 0x5A))
       % 0x72;
  int v262 = dword_10072E7A0[((BYTE2(v240) ^ 0x23) - ((2 * (BYTE2(v240) ^ 0x23)) & 0x16) + 17163) ^ 0x4361];
  BOOL v263 = ((2 * v261) & 0xE6) + (v261 ^ 0xCFEBDFF3) == -806625293;
  int v264 = dword_100732730[v252 ^ 0x45];
  HIDWORD(v15fseek(v0, 0LL, 2) = v264 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v264 ^ 0x9CA6E00;
  unsigned int v265 = v262 ^ dword_1007557B0[HIBYTE(v237) ^ 0x5B] ^ (((32 * v262) ^ 0x9C67AFE0)
                                                      - ((2 * ((32 * v262) ^ 0x9C67AFE0)) & 0xBC720700)
                                                      + 1580794782) ^ ((v152 >> 8)
                                                                     - ((2 * (v152 >> 8)) & 0x89CBB5AE)
                                                                     - 991569193) ^ *((_DWORD *)&unk_100733F90
                                                                                    + (BYTE1(v247) ^ 0xA8u));
  int v266 = dword_10072E7A0[BYTE2(v247) ^ 0x69];
  unsigned int v267 = (((32 * v266) ^ 0x9C67AFE0) - ((2 * ((32 * v266) ^ 0x9C67AFE0)) & 0xB66D6D00) + 1530312349) ^ v266;
  HIDWORD(v15fseek(v0, 0LL, 2) = v267 ^ 0x13F42BC;
  LODWORD(v15fseek(v0, 0LL, 2) = v267 ^ 0x40000000;
  int v268 = (v152 >> 25) - ((2 * (v152 >> 25)) & 0xD192EB74) + 1758033338;
  HIDWORD(v15fseek(v0, 0LL, 2) = v268 ^ 0x29;
  LODWORD(v15fseek(v0, 0LL, 2) = v268 ^ 0x1DADDA80;
  unsigned int v270 = (((v252 >> 7) & 0x62) + (BYTE1(v252) ^ 0xFFFFFF3F) + 647136719) ^ 0x56A2555E;
  unsigned int v271 = *((_DWORD *)&unk_100733F90 + ((((2 * v270) & 0xC020A542) - v270 - 1855675042) ^ 0xE154754E)) ^ dword_1007557B0[HIBYTE(v240) ^ 0x49] ^ ((BYTE1(v252) | 0xF26A8D8E) - (BYTE1(v252) | 0xE06A0100) + (BYTE1(v252) & 0x71 | 0xA0420000)) ^ (((v269 << 24) ^ 0xFE000000) - ((2 * ((v269 << 24) ^ 0xFE000000)) & 0x22222222) + 289895750) ^ ((v152 >> 7) - ((2 * (v152 >> 7)) & 0xDB7FA89C) - 306195378);
  int v272 = (((2 * (BYTE2(v252) ^ 0xA4)) & 0xE6) - (BYTE2(v252) ^ 0xA4) + 2010096012) ^ 0x724FB13E;
  int v273 = dword_10072E7A0[(((2 * v272) | 0x3E405808) - v272 + 1625281532) ^ 0x9AA03CEA];
  int v274 = ((v237 >> 8) & 0x6A ^ 0x3F33249) - ((v237 >> 8) & 0x95) + 2013269140;
  unsigned int v275 = ((BYTE1(v237) ^ 0x92) - ((2 * (BYTE1(v237) ^ 0x92)) & 0x104) - 856032126) ^ 0xCCE8EEA3;
  int v276 = dword_100732730[((v240 ^ 0x2C) - ((2 * (v240 ^ 0x2C)) & 0xE4) + 1659683186) ^ 0x62ECC1B4];
  HIDWORD(v15fseek(v0, 0LL, 2) = v276 ^ 0xFE;
  LODWORD(v15fseek(v0, 0LL, 2) = v276 ^ 0x9CA6E00;
  unsigned int v277 = v273 ^ v274 ^ dword_1007557B0[HIBYTE(v247) ^ 5] ^ *((_DWORD *)&unk_100733F90
                                                           + ((((2 * v275) | 0x1E4BD0F2) - v275 + 1893341063) ^ 0x8F34FA0D)) ^ (((32 * v273) ^ 0x9C67AFE0) - ((2 * ((32 * v273) ^ 0x9C67AFE0)) & 0x7AF9AC80) - 1115892153) ^ ((v152 >> 8) - ((2 * (v152 >> 8)) & 0x375B542C) + 464366102);
  unsigned int v278 = v271 ^ (v269 >> 8);
  unsigned int v279 = HIBYTE(v271) ^ 0x87;
  int v282 = (v261 ^ 0x2ABD3D39) - 717045049 + ((2 * v261) & 0x72);
  if (!v263) {
    int v282 = 0;
  }
  int v283 = (((v260 ^ 0x1E1FA2AD) - v282) ^ 0xED) + ((2 * ((v260 ^ 0x1E1FA2AD) - v282)) & 0xDA) + 19;
  int v284 = dword_100732730[(v283 + 1524937047 - ((2 * v283) & 0x1C8) + 141) ^ 0x5AE4B157];
  HIDWORD(v285) = v284 ^ 0xFE;
  LODWORD(v285) = v284 ^ 0x9CA6E00;
  int v286 = dword_10072E7A0[BYTE2(v277) ^ 0x64];
  unsigned int v281 = (BYTE1(v277) ^ 0xA10484B3 | 0x105AB14E) - (BYTE1(v277) ^ 0xA10484B3 | 0xEFA54EB1) - 274379087;
  int v280 = dword_10072E7A0[((BYTE2(v278) ^ 0x27 | 0x3587B564) - (BYTE2(v278) ^ 0x27 | 0xA784A9B) + 175655579) ^ 0x3587B5C2];
  unsigned int v287 = v280 ^ dword_1007557B0[HIBYTE(v265) ^ 0x72] ^ *((_DWORD *)&unk_100733F90 + (v281 ^ 0xB15E353E)) ^ v281 ^ (((32 * v280) ^ 0x9C67AFE0) + 1377971556 - ((2 * ((32 * v280) ^ 0x9C67AFE0)) & 0xA4445E00) + 429) ^ ((v285 >> 8) - ((2 * (v285 >> 8)) & 0xC97E0D9E) - 457242929);
  int v288 = dword_100732730[(v265 ^ BYTE1(v247)) ^ 0xE7];
  HIDWORD(v285) = v288 ^ 0xFE;
  LODWORD(v285) = v288 ^ 0x9CA6E00;
  int v289 = (HIWORD(v260) & 0x11) + (HIWORD(v260) & 0xEE ^ 0x3EEAF609) - 1;
  unsigned int v290 = dword_1007557B0[v279] ^ v286 ^ *((_DWORD *)&unk_100733F90
                                        + (((BYTE1(v260) ^ 0x4B | 0x3DFB02F3)
                                          - (BYTE1(v260) ^ 0x4B | 0x204FD0C)
                                          + 33881356) ^ 0x3DFB026Au)) ^ (((32 * v286) ^ 0x9C67AFE0)
                                                                       - ((2 * ((32 * v286) ^ 0x9C67AFE0)) & 0xBCCB2E40)
                                                                       + 1583716150) ^ ((v285 >> 8)
                                                                                      - ((2 * (v285 >> 8)) & 0xB0F899C0)
                                                                                      - 662942496) ^ ((BYTE1(v260) ^ 0x46780AAB) + ((v260 >> 8) & 0xFB ^ 0x8071050) - ((BYTE1(v260) ^ 0x46780AAB) & 0x404008FB));
  int v291 = dword_10072E7A0[((v289 & 0x43) + 537419775 + (v289 & 0x3BC ^ 0x9414093D)) ^ 0xB41C6B33];
  int v292 = dword_100732730[v278 ^ 0x97];
  HIDWORD(v285) = v292 ^ 0xFE;
  LODWORD(v285) = v292 ^ 0x9CA6E00;
  unsigned int v293 = dword_1007557B0[HIBYTE(v277) ^ 0x97] ^ (((v265 >> 8) & 0x2E ^ 0x25) + ((v265 >> 8) & 0xD1) - 1) ^ *((_DWORD *)&unk_100733F90 + (BYTE1(v265) ^ 0x34u)) ^ v291 ^ (((32 * v291) ^ 0x9C67AFE0) - ((2 * ((32 * v291) ^ 0x9C67AFE0)) & 0x4A9FACC0) - 1521494401) ^ ((v285 >> 8) - ((2 * (v285 >> 8)) & 0x3F39CDF2) + 530376441);
  int v294 = dword_10072E7A0[BYTE2(v265) ^ 0x8F];
  int v295 = ((2 * ((v278 >> 8) & 0xDD ^ 0x2000A950)) & 0x4000020A) - ((v278 >> 8) & 0xDD ^ 0x2000A950) + 1320484088;
  int v296 = dword_100732730[v277 ^ 0xFC];
  HIDWORD(v285) = v296 ^ 0xFE;
  LODWORD(v285) = v296 ^ 0x9CA6E00;
  unsigned int v297 = v294 ^ dword_1007557B0[HIBYTE(v260) ^ 0x1E] ^ ((v278 >> 8) & 0x22 | 0xC33AD9D0) ^ (((32 * v294) ^ 0x9C67AFE0)
                                                                                          - ((2
                                                                                            * ((32 * v294) ^ 0x9C67AFE0)) & 0xCEF24840)
                                                                                          - 411491269) ^ ((v295 & 0x400004DD ^ 0xD9E567FA) + 1304556800 + ((2 * (v295 & 0x400004DD)) ^ 0x6C7D360B)) ^ *((_DWORD *)&unk_100733F90 + ((((2 * (BYTE1(v278) ^ 0x2D9A2FB)) & 0x24578) - (BYTE1(v278) ^ 0x2D9A2FB) - 17116093) ^ 0xFC2376B8)) ^ ((v285 >> 8) - ((2 * (v285 >> 8)) & 0xDC0BAEB6) + 1845876571);
  int v298 = dword_10072E7A0[BYTE2(v290) ^ 0xEF];
  unsigned __int8 v299 = v293 ^ 0x11;
  int v300 = ((unsigned __int16)(v293 ^ 0x211) >> 8);
  unsigned int v301 = ((2 * (v300 ^ 0x2C)) | 0x9425DACE) - (v300 ^ 0x2C) - 1242754407;
  unsigned int v302 = ((v300 ^ 0x75 | 0xE0A2447A) - (v300 ^ 0x75 | 0x1F5DBB85) + 526236549) ^ 0xE726447D;
  int v303 = ((v297 ^ 0x3C) + (v297 & 0x53 ^ 0x7013F343) - ((v297 ^ 0x3C) & 0x53)) ^ 0x5189F143;
  int v304 = dword_100732730[(v303 - ((2 * v303) & 0x1243872) - 728515527) ^ 0xF509BE43];
  HIDWORD(v285) = v304 ^ 0xFE;
  LODWORD(v285) = v304 ^ 0x9CA6E00;
  unsigned int v305 = dword_1007557B0[HIBYTE(v287) ^ 0xF9] ^ v298 ^ *((_DWORD *)&unk_100733F90
                                                       + (((v302 | 0x2623D372) - (v302 | 0xD9DC2C8D) - 639882099) ^ 0x21A7D342)) ^ (((32 * v298) ^ 0x9C67AFE0) - ((2 * ((32 * v298) ^ 0x9C67AFE0)) & 0x2E4808C0) + 388236391) ^ ((v285 >> 8) - ((2 * (v285 >> 8)) & 0x6FE25900) - 1208931200) ^ ((v301 & 0x48F522ED ^ 0xE50088) + (v301 ^ 0x4812EF67) - ((v301 ^ 0x4812EF67) & 0x48F522ED));
  int v306 = dword_10072E7A0[BYTE2(v293) ^ 0x3B];
  unsigned int v307 = dword_100732730[((v287 ^ 0xD0045843 | 0x5C377B62)
  unsigned int v308 = HIBYTE(v293) ^ 0xFB;
  unsigned int v309 = dword_1007557B0[HIBYTE(v290) ^ 0x7E] ^ v306 ^ *((_DWORD *)&unk_100733F90
                                                       + ((((2 * (BYTE1(v297) ^ 0xE4C1205C)) & 0x4980404E)
                                                         - (BYTE1(v297) ^ 0xE4C1205C)
                                                         + 1242285528) ^ 0xAECAE5A9)) ^ (v307 >> 8) ^ (((32 * v306) ^ 0x9C67AFE0) - ((2 * ((32 * v306) ^ 0x9C67AFE0)) & 0x57BDD0C0) + 736028796) ^ (((2 * (BYTE1(v297) ^ 0xCF)) & 0x1FC) - (BYTE1(v297) ^ 0xCF) + 513);
  int v310 = dword_10072E7A0[((BYTE2(v297) ^ 0xF4) + (HIWORD(v297) & 0xEF ^ 0xA58CA70B) - ((BYTE2(v297) ^ 0xF4) & 0xFFFFFFEF)) ^ 0xA58CA75F];
  unsigned int v311 = (((v307 << 24) ^ 0xFE000000) - ((2 * ((v307 << 24) ^ 0xFE000000)) & 0xA000000) - 2051957248) ^ v309 ^ 0x6D55CA0;
  int v312 = (((v287 >> 8) & 0x5D ^ 0x2C757655) + ((v287 >> 8) & 0xA2 ^ 0xA1) - 1) ^ 0x397976BE;
  int v313 = ((2 * v312) & 0x281802AA) - v312 - 1448035670;
  unsigned int v314 = ((v290 ^ 0xE7 | 0xD4A6414) - (v290 ^ 0xE7 | 0xF2B59BEB) - 222979093) ^ 0x198BED14;
  unsigned int v315 = dword_100732730[((v314 | 0xE9262DC3) - (v314 | 0x16D9D23C) + 383373884) ^ 0xFDE7A488];
  int v316 = dword_10072E7A0[BYTE2(v287) ^ 0xBC];
  unsigned int v317 = v310 ^ dword_1007557B0[v308] ^ v313 ^ *((_DWORD *)&unk_100733F90
                                               + ((((2 * (BYTE1(v287) ^ 0x8C)) | 0xC50DA1EC)
                                                 - (BYTE1(v287) ^ 0x8C)
                                                 + 494481162) ^ 0xE286D04D)) ^ (v315 >> 8) ^ (((32 * v310) ^ 0x9C67AFE0)
                                                                                            - ((2
                                                                                              * ((32 * v310) ^ 0x9C67AFE0)) & 0x18453140)
                                                                                            + 203593889) ^ (((v315 << 24) ^ 0xFE000000) - ((2 * ((v315 << 24) ^ 0xFE000000)) & 0xDA000000) + 1835833541);
  unsigned int v318 = ((32 * v316) ^ 0x9C67AFE0) - ((2 * ((32 * v316) ^ 0x9C67AFE0)) & 0x6BB3E80) - 2091016372;
  int v319 = BYTE1(v290);
  int v320 = ((2 * (BYTE1(v290) ^ 0xD9)) & 0x112) - (BYTE1(v290) ^ 0xD9) + 2069670006;
  unsigned int v321 = ((v319 ^ 0x7C | 0xD968BD36) - (v319 ^ 0x7C | 0x269742C9) + 647447241) ^ 0x5B709F68;
  unsigned int v322 = (((2 * (v299 ^ 0x77)) & 0x38) - (v299 ^ 0x77) - 2060061) ^ 0xFDF0F9A1;
  int v323 = dword_100732730[(((2 * v322) | 0x915A7218) - v322 - 1219311884) ^ 0x4ABD50C1];
  HIDWORD(v285) = v323 ^ 0xFE;
  LODWORD(v285) = v323 ^ 0x9CA6E00;
  int v324 = dword_100756960[BYTE2(v309) ^ 0xAC];
  int v325 = dword_1007557B0[HIBYTE(v297) ^ 0xBB] ^ *((_DWORD *)&unk_100733F90
                                                + ((v321 - ((2 * v321) & 0x60FE3CDE) - 1333846417) ^ 0x32673C1E)) ^ v316 ^ ((v285 >> 8) - ((2 * (v285 >> 8)) & 0x53374738) - 1449417828) ^ ((v320 & 0x131003C4 ^ 0x1300) + (v320 ^ 0x3B37ACE6) - ((v320 ^ 0x3B37ACE6) & 0x6103C4));
  HIDWORD(v285) = v324 ^ 0xAB;
  LODWORD(v285) = v324 ^ 0x57C23400;
  unsigned int v326 = v325 ^ v318;
  unsigned int v327 = ((BYTE1(v317) ^ 0xE4) - ((2 * (BYTE1(v317) ^ 0xE4)) & 0x1A6) - 406818093) ^ 0xCFC923D2;
  int v328 = dword_10072E3A0[HIBYTE(v305) ^ 0x1A] ^ HIBYTE(v305) ^ dword_100754D40[(((2 * (BYTE1(v317) ^ 0xD)) & 0x50)
                                                                              - (BYTE1(v317) ^ 0xD)
                                                                              + 727) ^ 0x2FA] ^ ((v285 >> 10)
                                                                                               - ((2 * (v285 >> 10)) & 0x1E5137C)
                                                                                               - 2131588674) ^ 0x9CF725DD;
  unsigned int v329 = v328 & 0xA1A9E454 ^ 0x6E8020A9;
  int v330 = ((v328 & 0x58160189 ^ 0x292CA045) + (v328 & 0x6401A22 ^ 0xA21) - 1) & 0x5E561BBF ^ 0x246100E;
  int v331 = dword_100752A30[v326 ^ 0x3E];
  HIDWORD(v285) = v331 ^ 0x36352;
  LODWORD(v285) = v331 ^ 0x4CAC0000;
  unsigned int v332 = (v285 >> 18) - ((2 * (v285 >> 18)) & 0x91DBE52A) + 1223553685;
  unsigned int v333 = (((2 * v327) & 0x843C) - v327 + 2137601505) ^ v332 ^ (((v332 >> 2) & 0x21D899CA ^ 0x417CF200)
                                                             - ((2 * ((v332 >> 2) & 0x21D899CA ^ 0x417CF200)) & 0x3C81684)
                                                             + 165941095) ^ ((v330 | (v329 - 1) ^ 0x6E0920BC)
                                                                           - 2
                                                                           * ((v330 | (v329 - 1) ^ 0x6E0920BC) & 0x69165F8F ^ v330 & 8)
                                                                           - 384409721);
  unsigned int v334 = HIBYTE(v311) ^ 0x9FD654F2;
  int v335 = dword_10072E3A0[HIBYTE(v311) ^ 0x53];
  unsigned int v336 = ((v335 ^ 0x85145056) & v334) - ((2 * ((v335 ^ 0x85145056) & v334)) & 0xBACA840);
  unsigned int v337 = (((v335 ^ 0xC514D156) + v334) ^ 0xAFF76FFD)
       + ((2 * ((v335 ^ 0xC514D156) + v334)) & 0x5FEEDFFA)
       + ((2 * v336 - 877855680) ^ 0xD3A6E545)
       + ((2 * (2 * v336 - 877855680)) & 0xCFEBCDF4 ^ 0x78B6377F)
       + 1;
  int v338 = dword_100756960[BYTE2(v317) ^ 0xF];
  HIDWORD(v285) = v338 ^ 0xAB;
  LODWORD(v285) = v338 ^ 0x57C23400;
  int v339 = (v285 >> 10) - ((2 * (v285 >> 10)) & 0x99646B50) + 1286747560;
  int v340 = (v305 ^ 0xD7) + (v305 & 0x67 ^ 0x2F960C20) - ((v305 ^ 0xD7) & 0x67);
  int v341 = dword_100752A30[((v340 & 0x2040E6D ^ 0xC201) + (v340 ^ 0x5AAC3C7C) - ((v340 ^ 0x5AAC3C7C) & 0x511A266D)) ^ 0x2624DE29];
  int v342 = (HIBYTE(v317) ^ (v3 - 10)) - ((2 * (HIBYTE(v317) ^ (v3 - 10))) & 0x1E6) + 282005747;
  HIDWORD(v285) = v341 ^ 0x36352;
  LODWORD(v285) = v341 ^ 0x4CAC0000;
  unsigned int v343 = (v285 >> 18) - ((2 * (v285 >> 18)) & 0x1250DD0) + 9602792;
  unsigned int v344 = v339 ^ dword_100754D40[((BYTE1(v326) ^ 0x4BD009D | 0x4097476B)
                               - (BYTE1(v326) ^ 0x4BD009D | 0xBF68B894)
                               - 1083656044) ^ 0x442A4776] ^ v343 ^ (((2 * (BYTE1(v326) ^ 0x2278148)) | 0x7E6591C)
                                                                   - (BYTE1(v326) ^ 0x2278148)
                                                                   - 66268302) ^ (((v343 >> 2) & 0x21D899CA ^ 0x1000982)
                                                                                + ((v343 >> 2) & 0x21988800 ^ 0xF0B8A235)
                                                                                - (((v343 >> 2) & 0x21D899CA ^ 0x1000982) & 0x21988800)) & 0xFFFFF9CA ^ (v337 - ((2 * v337 + 1878846972) & 0x80067B40) - 134105954);
  int v345 = dword_100756960[BYTE2(v326) ^ 0x69];
  HIDWORD(v285) = v345 ^ 0xAB;
  LODWORD(v285) = v345 ^ 0x57C23400;
  int v346 = BYTE1(v305);
  unsigned int v347 = (((2 * (BYTE1(v305) ^ 0x36)) & 0xFFFFFF87) - (BYTE1(v305) ^ 0x36) + 572) ^ 0x2B8;
  LOBYTE(v341) = (((v344 & 0x12 ^ 0xFD) + 19) ^ 0x17) - ((2 * (((v344 & 0x12 ^ 0xFD) + 19) ^ 0x17)) & 0x2E) - 105;
  unsigned int v348 = (((2 * (v309 ^ 0x38)) | 0x24AE26DC) - (v309 ^ 0x38) + 1839787154) ^ 0xD7D7B1AE;
  int v349 = dword_100752A30[((v348 | 0xCDCDAB73) - (v348 | 0x3232548C) + 842159244) ^ 0x884D095E];
  unsigned int v350 = ((((v349 ^ 0x4CAF6352u) >> (v341 ^ 0x80))
         - ((2 * ((v349 ^ 0x4CAF6352u) >> (v341 ^ 0x80))) & 0xA5DA30D4)
         - 756213654) ^ 0xD2ED186A) >> (v341 ^ 0x92);
  unsigned int v351 = (v350 - ((2 * v350) & 0x91E2A504) + 1223774850) ^ 0x48F15282 | (((v349 << 14) ^ 0xD8D48000)
                                                                       + 1371685430
                                                                       + (~(2 * ((v349 << 14) ^ 0xD8D48000)) | 0x5C7B7FFF)
                                                                       + 1) ^ 0x51C24236;
  unsigned int v352 = v351 - ((2 * v351) & 0xF4C7A390) + 2053362120;
  int v353 = ((2 * (BYTE2(v305) ^ 0xD2)) & 0x1F0) - (BYTE2(v305) ^ 0xD2) + 2142117639;
  unsigned int v354 = dword_100756960[((v353 & 0x13846662 ^ 0x106060) + (v353 ^ 0xD7A51787) - ((v353 ^ 0xD7A51787) & 0x8086662)) ^ 0xB3976EC5];
  int v355 = (((v352 >> 2) & 0x1588908 ^ 0x423C2A2D) + ((v352 >> 2) & 0x208010C2 ^ 0x20801043) - 2) ^ 0x5664AF0D;
  unsigned int v356 = v342 ^ v346 ^ dword_10072E3A0[HIBYTE(v317) ^ 0x9A] ^ dword_100754D40[v347] ^ ((v285 >> 10)
                                                                                     - ((2 * (v285 >> 10)) & 0x9ED373E2)
                                                                                     + 1332328945) ^ v352 ^ (((2 * v355) | 0x137E4B4) - v355 - 10220122);
  unsigned int v357 = (((2 * (BYTE1(v311) ^ 0x34)) | 0x642A968E) - (BYTE1(v311) ^ 0x34) + 1307227321) ^ 0x906C0957;
  unsigned int v358 = (((v311 >> 7) & 0x98) + (BYTE1(v311) ^ 0xFFFFFF7C) + 1947945396) ^ 0x74B241D4;
  int v359 = dword_100754D40[(((2 * v358) | 0xEAAEBAFE) - v358 - 1968659839) ^ 0x75FE5532];
  unsigned int v360 = dword_10072E3A0[HIBYTE(v326) ^ 0xE6] ^ HIBYTE(v326) ^ (v354 >> 10) ^ (((v354 << 22) ^ 0x2AC00000)
                                                                             - ((2 * ((v354 << 22) ^ 0x2AC00000)) & 0xAC000000)
                                                                             + 1443026108);
  int v361 = v359 ^ 0x4C0C33B1;
  unsigned int v362 = (v359 ^ 0x4C0C33B1) + (v359 ^ v360 ^ 0xBF266D6E) + 1;
  unsigned int v363 = (v360 ^ ((v360 ^ 0xF32A5EDF) - ((2 * (v360 ^ 0xF32A5EDF) + 2) & 0xFE3156F2) - 15160454) ^ 0x24E84852 ^ (v362 - ((2 * v362) & 0xAE4A8416) - 685424117))
       + v361;
  unsigned int v364 = dword_100752A30[v317 ^ 0xB7];
  unsigned int v365 = (v364 << 8) ^ 0xAF635200;
  unsigned int v366 = (((v365 - ((2 * v365) & 0xB0C89800) - 664515366) & 0x48000000 ^ 0x49C718A4)
        - ((v365 - ((2 * v365) & 0xB0C89800) - 664515366) & 0x48000000)
        + ((v365 - ((2 * v365) & 0xB0C89800) - 664515366) & 0xFC000000 ^ 0xA4000000)) ^ 0x9CC4B14D;
  int v367 = (v365 - ((2 * v365) & 0x1F25C00) + 16330459) & 0x3FFFF00 ^ 0x2AD0800;
  unsigned int v368 = ((v367 | 0x5BB13EB5) - (v367 | 0xA44EC14A) - 1538342582) ^ 0x45B51C9F;
  unsigned int v369 = (v366 - 1) ^ 0xA903A9E8 | HIBYTE(v364) ^ 0x4C;
  unsigned int v370 = (v369 - ((2 * v369) & 0xCCAFC12) - 2040168951) ^ 0x86657E09 | (((2 * v368) & 0xDBB7AB4) - v368 - 1188937051) ^ 0xA572468F;
  unsigned int v371 = v370 - ((2 * v370) & 0xC1DD229C) + 1626247502;
  HIDWORD(v285) = v371 ^ 0x19D3F54;
  LODWORD(v285) = v371 ^ 0xB0000000;
  unsigned int v372 = (v285 >> 26) - ((2 * (v285 >> 26)) & 0xD4D46C8) - 2035899548;
  unsigned int v373 = (v363 - ((2 * v363) & 0xF5F81A00) + 2063338752) ^ (((2 * v357) & 0x1826EA3E) - v357 + 1944881888) ^ v372 ^ (((v372 >> 2) & 0x21D899CA ^ 0x60340950) + ((v372 >> 2) & 0x20981980 ^ 0x68B5084) - (((v372 >> 2) & 0x21D899CA ^ 0x60340950) & 0x20BC1980));
  int v374 = (_BYTE *)STACK[0xAF8];
  int v375 = (_BYTE *)STACK[0xAF8];
  v374[10] = byte_10073F740[(((2 * (BYTE1(v356) ^ 0x26000A6D)) & 0x400108C) - (BYTE1(v356) ^ 0x26000A6Du) - 54041671) ^ 0xDAC7692FLL] ^ 0x7D;
  int v376 = (BYTE1(v373) ^ 0x8D) - ((2 * (BYTE1(v373) ^ 0x8D)) & 0xA8) - 1048603820;
  v374[14] = byte_10073F740[((v376 & 0xC1071E9B ^ 0x24000C9B) + (v376 ^ 0xC1BFD244) - ((v376 ^ 0xC1BFD244) & 0x401E9B)) ^ 0xE5875F15LL] ^ 0xEE;
  v374[1] = byte_10073DE00[(((2 * (BYTE2(v333) ^ 7)) | 0xAA881DF2) - (BYTE2(v333) ^ 7) + 716960007) ^ 0xD5440E31LL] ^ 0x51;
  v374[13] = byte_10073DE00[(((2 * (BYTE2(v373) ^ 0x2800011A)) & 0x100000CC) - (BYTE2(v373) ^ 0x2800011Au) + 649839513) ^ 0xEBBC2C3LL] ^ 0x51;
  LOBYTE(v301) = ((2 * (v356 ^ 0x90)) | 8) - (v356 ^ 0x90) + 124;
  LOBYTE(v37fseek(v0, 0LL, 2) = byte_1007352C0[((v356 & 0x3A ^ 0xEFB9833) + (v356 & 0xC5) - 1) ^ 0xEFB98F9];
  LOBYTE(v301) = (v301 & 0xD0 ^ 0x41) + (v301 & 0x2F) - 1;
  LOBYTE(v326) = 2 * (((v301 ^ 0x59) & (v372 ^ 0x7D)) - ((2 * ((v301 ^ 0x59) & (v372 ^ 0x7D))) & 0x22)) - 94;
  LOBYTE(v37fseek(v0, 0LL, 2) = (v372 ^ v301 ^ 0x24) + (v326 ^ 0xD5) + ((2 * v326) & 0xEF ^ 0x44) - 119;
  v374[11] = (v372 + (~(2 * v372) | 0xC7) + 29) ^ 0x3A;
  LOBYTE(v37fseek(v0, 0LL, 2) = byte_100754720[HIBYTE(v333) ^ 0xE3LL];
  unsigned int v377 = ((2 * (BYTE2(v344) ^ 0x850022C5)) & 0x54A) - (BYTE2(v344) ^ 0x850022C5) - 1223188134;
  *int v375 = (v372 - 2 * ((v372 + 96) & 0xC3 ^ v372 & 2) + 33) ^ 0x44;
  unsigned int v378 = ((HIWORD(v344) & 7) + 788147455 + (HIWORD(v344) & 0xF8 ^ 0xD9)) ^ 0xACE62D17;
  unsigned int v379 = ((v378 | 0xC801DDCF) - (v378 | 0x37FE2230) + 939401776) ^ 0xB5E22217;
  unsigned int v380 = v377 ^ ((v377 ^ 0xCDE87CAD) - ((2 * (v377 ^ 0xCDE87CAD) + 2) & 0xB1EFE33E) + 1492644256) ^ 0x36B7F03E ^ (v379 - ((2 * v379 + 76) & 0xB8AF05E6) + 1549239065);
  v375[5] = byte_10073DE00[(v380 - 29003768 - ((2 * v380 + 74) & 0xFC8AE168) + 209) ^ 0xFE457008] ^ 0xEA;
  int v381 = ((BYTE2(v356) ^ 0x22) + (HIWORD(v356) & 0x97 ^ 0x60242895) - ((BYTE2(v356) ^ 0x22) & 0x97)) ^ 0x52362897;
  v375[2] = byte_10073F740[(((2 * (BYTE1(v333) ^ 0x210140E8)) | 0x24D9420C) - (BYTE1(v333) ^ 0x210140E8u) - 309108998) ^ 0x336DE1BBLL] ^ 0xB7;
  v375[9] = byte_10073DE00[(((2 * v381) & 0x4040FDEu) - v381 + 836515856) ^ 0x3CE3854LL] ^ 0xF7;
  LOBYTE(v376) = byte_100754720[HIBYTE(v373) ^ 0xA1LL];
  v356 >>= 24;
  v375[12] = (v376 - ((2 * v376 + 64) & 0x6E) - 105) ^ 0x5E;
  unsigned int v382 = (v356 ^ 0xFFFFFFD8) + 1;
  v356 ^= 0x94u;
  unsigned int v383 = v356 + (v382 ^ 0x7F53A7B8) + ((2 * v382) & 0xFEA74F70) - 2136188856;
  unsigned int v384 = ((v383 - ((2 * v383) & 0xE5E17052) - 219105239) ^ 0xD0F47D7) + v356;
  LOBYTE(v384) = byte_100754720[(v384 - ((2 * v384) & 0x8BAED8D2) - 975737751) ^ 0xC5D76C9A];
  v375[8] = (v384 - 2 * ((v384 + 32) & 0x3C ^ v384 & 8) + 20) ^ 0x92;
  LOBYTE(v380) = (byte_1007352C0[(((2 * (v344 ^ 0xF2)) | 0x2109D51A)
                                - (v344 ^ 0xF2u)
                                - 277146253) ^ 0x1084EA1ALL] ^ 0x7D)
               + (v344 ^ 0xA3);
  v375[7] = (v380 - ((2 * v380) & 0xA4) - 46) ^ 0x70;
  v375[6] = byte_10073F740[(((v344 >> 8) & 0x19 ^ 0x2119) - ((v344 >> 8) & 0x19) + (BYTE1(v344) ^ 0x62)) ^ 0x2155LL] ^ 0x47;
  LOBYTE(v333) = (byte_1007352C0[((v333 ^ 0x80503D0F)
                                + (v333 & 0xF2 ^ 0x482BC2F0)
  v375[3] = (v333 - ((2 * v333) & 0x33) + 25) ^ 0xD3;
  LOBYTE(v333) = byte_1007352C0[(((2 * (v373 ^ 0xA00C0026)) | 0xA2567720)
  v375[15] = ((v373 ^ 0xA3) + (v333 ^ 0x7D) - ((2 * ((v373 ^ 0xA3) + (v333 ^ 0x7D))) & 0xF3) + 121) ^ 0xA;
  char v385 = byte_100754720[HIBYTE(v344) ^ 0x88LL];
  v375[4] = (v385 - ((2 * v385) & 0x20) - 16) ^ 0x15;
  unsigned int v386 = -1263679611
       * (((STACK[0x658] - 1274224556 + ((v5 + 2079808395) & 0xCFFBBFFE)) ^ *(_DWORD *)(qword_1009C72B8
                                                                                      + (int)(dword_1009C74C0 & 0xEA60C850))) & 0x7FFFFFFF);
  *(_BYTE *)(STACK[0x658] - 1274224556 + ((v5 + 2079808395) & 0xCFFBBFFE)) ^= byte_100757960[((((_BYTE)v5 - 117) & 0xFE)
                                                                                            + 84) & 0xF | (16 * ((-1263679611 * (v386 ^ HIWORD(v386))) >> 24))] ^ (-123 * (v386 ^ BYTE2(v386)));
  return ((uint64_t (*)(uint64_t *, uint64_t *, uint64_t, _BYTE *))((char *)*(&off_10090DDE0 + v5) - 4))( &qword_1009C7000,  &qword_1009C7000,  4294967173LL,  byte_100757960);
}

void sub_1005DC25C()
{
}

uint64_t sub_1005DC264()
{
  if (v1 + (v0 & 0xF9D89010) == ((v2 - 1274224542) ^ 0x34C4CF97)) {
    int v5 = v3;
  }
  else {
    int v5 = 1183856782;
  }
  LODWORD(STACK[0x93C]) = v5;
  BOOL v7 = v5 != ((v2 - 1274222890) ^ (v3 + 1666)) || STACK[0x760] == 0;
  return ((uint64_t (*)(void))(*(void *)(v4
}

uint64_t sub_1005DC2E4@<X0>(int a1@<W8>)
{
  unint64_t v2 = STACK[0x6E8];
  unint64_t v3 = STACK[0x6E8] + 16;
  BOOL v5 = STACK[0x6E8] < (unint64_t)&unk_10072D9E0 && v3 > (unint64_t)&unk_10072D9D0;
  char v9 = v2 < (unint64_t)&unk_100733260 && v3 > (unint64_t)&unk_100733250 || v5;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((954 * ((a1 ^ v9) & 1)) ^ a1))
}

uint64_t sub_1005DC384@<X0>(int a1@<W8>)
{
  int v3 = (a1 ^ 0x24) - 1289;
  int8x16_t *v1 = veorq_s8(*v1, (int8x16_t)xmmword_10072D960);
  int v4 = v3 + 1072;
  unint64_t v5 = STACK[0x910];
  *(void *)(v5 + 64) = 0xE8E125912DC2764BLL;
  *(void *)(v5 + 7fseek(v0, 0LL, 2) = 0xC5C1D9754D4951FDLL;
  *(void *)(v5 + 80) = 0x3A3E268AB2B6AE02LL;
  *(void *)(v5 + 9fseek(v0, 0LL, 2) = 0x2E986D5678E108A1LL;
  STACK[0x978] = *(void *)(v2 + 8LL * v3);
  STACK[0xA70] = v5;
  LODWORD(STACK[0x864]) = -721523658;
  STACK[0x6E0] = (unint64_t)&unk_100734D94;
  unsigned int v6 = ((((v3 + 1072) ^ 0x2B4) - 1544) ^ 0x404304EF)
     + 16
     + ((2 * *(_DWORD *)(v5 + 68)) & 0x56 ^ 2)
     + (*(_DWORD *)(v5 + 68) & 0x3F ^ 0xBFBCFB7A);
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((668 * ((v6 ^ 0x43EF9BE7) - 1139776551 + ((2 * v6) & 0x87DF37CE) < 0xFFFFFFC0)) ^ v4))
                            - 4LL))();
}

uint64_t sub_1005DC418()
{
  *(_BYTE *)(v0 + v4 - 104863390) ^= *(_BYTE *)(v3 + v4 - 104863390) ^ 0xE6;
  BOOL v6 = (v2 ^ 0x50ELL) + v4 != v1 + 16;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (int)(((4 * v6) | (32 * v6)) ^ v2)) - 12LL))();
}

uint64_t sub_1005DC474()
{
  *(_DWORD *)((char *)&STACK[0xB80] + bzero(v1, v2) = 0;
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * (v0 ^ (49
                                               * ((unint64_t)&STACK[0xB80] + v1 - v3 + 0x3C4F01B69410812ALL < 0x10))))
                            - 277 * ((v0 - 1496564710) & 0x5933BFEB ^ 0x221u)
                            + 546LL))();
}

uint64_t sub_1005DC544()
{
  *(_BYTE *)(v3 + v5 - 0x14AB1347AD7761B7LL) = *(_BYTE *)(v2 + v6 - 0x166F68EA9A901EELL);
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL * ((1039 * (v4 + ((v1 + 92799448) & 0xFA77FEF4) - 751 != v0 + 36)) ^ v1))
                            - 8LL))();
}

uint64_t sub_1005DC5C0()
{
  *(_OWORD *)(v2 + v0) = *(_OWORD *)(v3 + v0);
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (((v0 != 16) * (v1 + 525)) ^ v1)) - 8LL))();
}

uint64_t sub_1005DC5F4()
{
  *(_DWORD *)(v2 + __chkstk_darwin(v0, v1) = *(_DWORD *)(v3 + v1);
}

uint64_t sub_1005DC628()
{
  *(_DWORD *)(v1 + 6_Block_object_dispose(va, 8) = 36;
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (int)((501
                                               * ((v2 ^ 0x5D1FDFFE840FF125LL)
                                                - 0x5D1FDFFDFE345612LL
                                                + ((2LL * (v2 ^ 0x69620A42)) & 0x1DADBF6CELL) == (v0 ^ 0xEF39A7A5LL))) ^ v0))
                            - 12LL))();
}

uint64_t sub_1005DC6E4()
{
  *(_BYTE *)(v6 + v2 - 0x60FB828EAAEB6E9DLL) = *(_BYTE *)(v8 + v5 + (v9 ^ 0xEDC2077C6EC2339ALL));
  BOOL v11 = v7 - 0x6D86C42AA0D4077ALL < v3;
  if (v3 < v1 != v7 - 0x6D86C42AA0D4077ALL < v1) {
    BOOL v11 = v3 < v1;
  }
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * ((!v11 * v4) ^ v0)) - 12LL))();
}

uint64_t sub_1005DC774@<X0>(int a1@<W8>)
{
  v2[34] = v1;
  STACK[0x830] = 140LL;
  BOOL v4 = IOConnectCallStructMethod((((v3 + 85) | 0x280) ^ 0xE30B2E4F) + a1, 0x23u, v2, 0x8CuLL, v2, &STACK[0x830]) == ((v3 - 158) ^ 0x30F);
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((1374 * v4) ^ v3)))();
}

uint64_t sub_1005DC7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * ((31 * (*(_DWORD *)(v6 + 68) == (((v5 ^ 0x58D) - 1171) ^ 0x1CB))) ^ v5))
                                                                                       - 4LL))( a1,  a2,  a3,  a4,  a5,  4294925247LL);
}

uint64_t sub_1005DC828@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((23
                                          * (v2
                                           - ((void)&STACK[0xB80]
                                            + v1)
                                           - 0x3C4F01B694108322LL
}

uint64_t sub_1005DC8B4()
{
  *(_OWORD *)(v3 + v0) = *(_OWORD *)(v2 + v0);
}

uint64_t sub_1005DC904@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned int a6@<W8>)
{
  *(_DWORD *)(v8 + v6) = *(_DWORD *)(v7 + v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                        + 8LL
                                                                                        * ((2043
                                                                                          * ((((a6 + 1) ^ (v6 == 32)) & 1) == 0)) ^ a6)))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_1005DC940@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  *(_BYTE *)(v8 + v11 - 0x6354F8B6BE879DC0LL) = *(_BYTE *)(v7 + v10 - 0x346CB0CBACB74D77LL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v12
                                                                                                  + 8LL * ((736 * (v9 + 1 == v6 + 36)) ^ a6))
                                                                                      - 4LL))( a1,  a2,  a3,  a4,  a5,  0LL);
}

uint64_t sub_1005DC9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8LL * ((1184 * (a6 == ((127 * (v6 ^ 0x687)) ^ 0x27B))) ^ (v6 - 1379))))();
}

uint64_t sub_1005DC9FC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v1 + 8LL * a1))( 4294967186LL,  ((a1 - 579) | 0xC2) ^ 0x69u,  4294967259LL);
}

void sub_1005DCABC()
{
}

uint64_t sub_1005DCAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * (((v6 ^ 0x7D3) * (a6 == 0)) ^ (v6 - 497))) - 4LL))();
}

uint64_t sub_1005DCAF0()
{
  int v1 = v0 ^ 0x2FB;
  BOOL v2 = malloc(0x20uLL) == 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (((((v1 + 7) | 0x202) ^ 0x66A) * v2) ^ v1)) - 4))();
}

uint64_t sub_1005DCB40(_BYTE *a1)
{
  *a1 = STACK[0xB80];
  a1[1] = STACK[0xB81];
  a1[2] = STACK[0xB82];
  a1[3] = STACK[0xB83];
  a1[4] = STACK[0xB84];
  a1[5] = STACK[0xB85];
  a1[6] = STACK[0xB86];
  a1[7] = STACK[0xB87];
  a1[8] = STACK[0xB88];
  a1[9] = STACK[0xB89];
  a1[10] = STACK[0xB8A];
  a1[11] = STACK[0xB8B];
  a1[12] = STACK[0xB8C];
  a1[13] = STACK[0xB8D];
  a1[14] = STACK[0xB8E];
  a1[15] = STACK[0xB8F];
  return (*(uint64_t (**)(void))(v2
                              + 8LL
}

void sub_1005DCC70(unint64_t a1)
{
  v5.i64[0] = 0x404040404040404LL;
  v5.i64[1] = 0x404040404040404LL;
  v6.i64[0] = 0x202020202020202LL;
  v6.i64[1] = 0x202020202020202LL;
  int8x16_t *v2 = vaddq_s8(vsubq_s8(*v3, vandq_s8(vaddq_s8(*v3, *v3), v5)), v6);
  STACK[0x740] = a1;
  LODWORD(STACK[0x8AC]) = -1686371828;
  STACK[0x870] = ((((v1 - 2024879406) & 0x78B136A3u) - 1075) ^ 0xFFFFFFFFFFFFFD4FLL) + v4;
  JUMPOUT(0x1005DCD58LL);
}

void sub_1005DCD98()
{
}

uint64_t sub_1005DCDA8()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * (((STACK[0xA38] == 0) * (((v0 - 1446) | 0x180) + ((v0 - 1141) ^ 0x1F))) ^ v0))
                            - 8LL))();
}

uint64_t sub_1005DCDDC()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1531 * (STACK[0x908] != 0)) ^ ((v0 + 14) | 0x41))) - 8))();
}

uint64_t sub_1005DCE28(void *a1)
{
  LODWORD(STACK[0x9F4]) = 68355794;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((STACK[0x888] != 0) * ((289 * (v1 ^ 0x1C2)) ^ 0x3CB)) ^ v1 ^ 0xFA))
                            - 8))();
}

uint64_t sub_1005DCE80(void *a1)
{
  LODWORD(STACK[0xA84]) = 89714421;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((((STACK[0x740] == 0) ^ (((v1 + 68) & 0xE3) + 32)) & 1)
                                        * (((((v1 - 1058301372) & 0x3F1467E3) + 157) | 0x282) + 298)) ^ (v1 - 1058301372) & 0x3F1467E3))
                            - 8))();
}

uint64_t sub_1005DCEF0(void *a1)
{
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((941 * (STACK[0xA48] != 0)) ^ (v1 - 1233))))();
}

uint64_t sub_1005DCF20(void *a1)
{
  return ((uint64_t (*)(unint64_t))((char *)*(&off_10090DDE0
                                                             + (int)(((v1 - 1381 + ((v1 + 648201080) & 0xD95D36FF) - 518)
                                                                    * (v2 != 0)) ^ (v1 - 1179)))
                                                   - 12))(STACK[0x9A8]);
}

uint64_t sub_1005DCF78@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((238 * (a2 ^ 0x11A) - 942) * (a1 != 0)) ^ a2)) - 4LL))();
}

void sub_1005DCFA8(void *a1)
{
  __asm { BR              X8 }

void sub_1005DD15C(void *a1)
{
  *(_DWORD *)(v2 + 56) = v1;
}

void sub_1005DD168()
{
  int v2 = v0 ^ (v1 - 1201617511) & 0xEE ^ 0x10 | ((v0 & 0xF0) >> 4) ^ 9;
  unsigned int v3 = (((v2 - ((2 * v2) & 0xC) - 122) & 0xFCu) >> 2) ^ 0x21 | (v2 - ((2 * v2) & 0xC) - 122) ^ 0xFFFFFF86;
  *(_DWORD *)(v4 + 56) = -42022 * (v3 & 1 | (((1 - v3) & 2) != 0));
}

uint64_t sub_1005DD1E4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((112 * ((~(558655502 - v1) + (unint64_t)v0) >> 32)) ^ (v0 + 1182))))();
}

uint64_t sub_1005DD228()
{
  *(void *)(v1 + (v2 + v0)) = 0x3030303030303030LL;
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * ((1819
                                          * (((((v3 + 1) | 0x212u) - 119) ^ 0x1ABLL) == ((v4 + 1) & 0x1FFFFFFF8LL))) ^ ((v3 + 1) | 0x212u)))
                            - 4LL))();
}

uint64_t sub_1005DD288()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * ((1398 * (((v1 == v2) ^ (v0 + 0x80)) & 1)) ^ v0)))();
}

uint64_t sub_1005DD2C4@<X0>(int a1@<W8>)
{
  *(_BYTE *)(v2 + v1 + v3 + ((v4 - 1120) | 0x401u) - 1571) = 48;
  return (*(uint64_t (**)(void))(v5 + 8LL * ((195 * ((a1 + v3 + 39) > 0x37)) ^ (v4 - 1314))))();
}

uint64_t sub_1005DD310@<X0>( uint64_t a1@<X5>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>, int8x16_t a5@<Q2>, int8x16_t a6@<Q3>, int8x16_t a7@<Q4>, int8x16_t a8@<Q5>, int8x16_t a9@<Q6>, int8x16_t a10@<Q7>)
{
  v19.i32[0] = *(_DWORD *)(v14 + v11);
  v19.i32[1] = *(_DWORD *)(v14 + 916);
  v19.i32[2] = *(_DWORD *)(v14 + 920);
  int8x16_t v20 = vextq_s8(a3, v19, 0xCuLL);
  int8x16_t v21 = v19;
  v21.i32[3] = *(_DWORD *)(v14 + 924);
  int8x16_t v22 = vandq_s8(v20, a4);
  int8x16_t v23 = veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v21, a5), a6), v17), a7);
  int32x4_t v24 = (int32x4_t)veorq_s8( vorrq_s8( (int8x16_t)vaddq_s32( vsubq_s32((int32x4_t)vorrq_s8(v23, a8), (int32x4_t)vorrq_s8(v23, a9)),  (int32x4_t)a9),  v22),  a10);
  v25.i32[0] = *(_DWORD *)(v10 + 4LL * ((*(_DWORD *)(v14 + v11) & 1) == 0));
  v25.i32[1] = *(_DWORD *)(v10 + 4LL * ((*(_DWORD *)(v14 + 916) & 1) == 0));
  v25.i32[2] = *(_DWORD *)(v10 + 4 * (~*(_DWORD *)(v14 + 920) & 1LL));
  v25.i32[3] = *(_DWORD *)(v10 + 4LL * ((v21.i8[12] & 1) == 0));
  *(int8x16_t *)(v14 + 90_Block_object_dispose(va, 8) = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)v14, v25), v18),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( v24,  (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v24, v24), v15)),  v16),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((v12 == 0) * v13) ^ a2)) - 12LL))();
}

uint64_t sub_1005DD3E8@<X0>( uint64_t a1@<X5>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>, int8x16_t a5@<Q2>, int8x16_t a6@<Q3>, int8x16_t a7@<Q4>, int8x16_t a8@<Q5>, int8x16_t a9@<Q6>, int8x16_t a10@<Q7>)
{
  return sub_1005DD310(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1005DD3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8 = (((v6 + 1080139470) & (2 * ((((v6 - 902) | 0x402) + 2147481980) & *v7 ^ 0x614A48EC)))
      - ((((v6 - 902) | 0x402) + 2147481980) & *v7 ^ 0x614A48EC)
      - 540070507) ^ 0x57C90D93;
  unsigned int v9 = (-392561385 - (v8 | 0xE899FD17) + (v8 | 0x176602E8)) ^ 0xE3770FF8 | ((((v7[623] | 0x7FFFFFFF) - 1711807633) ^ 0xC6001DD9)
                                                                          + 312851121) ^ 0xF29DB968;
  v7[623] = v7[396] ^ *((_DWORD *)&STACK[0x15A8] + ((*v7 & 1) == 0)) ^ ((v9 - ((2 * v9) & 0xF1FC57B6) + 2029923291) >> 1) ^ 0x3FF5B10C;
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((47 * (LODWORD(STACK[0xA24]) < 0x270)) ^ v6)) - 12LL))();
}

uint64_t sub_1005DD528()
{
  int v3 = LODWORD(STACK[0xA24])++;
  *(_DWORD *)(v1 + 2984) = v3 + 1227344547;
  unint64_t v4 = 1606104089
     * ((((v2 - 192) | 0xE47FA843712E5989LL) - (v2 - 192) + ((v2 - 192) & 0x1B8057BC8ED1A670LL)) ^ 0x26C1537704391BB7LL);
  *(void *)(v2 - 19fseek(v0, 0LL, 2) = (dword_1009BDBB0 + 745772615) + v4;
  *(_DWORD *)(v2 - 164) = -1231242048 - v4 + v0 + 124;
  *(_DWORD *)(v2 - 17fseek(v0, 0LL, 2) = v4 + v0 - 1727291232 - 91;
  *(_DWORD *)(v2 - 16_Block_object_dispose(va, 8) = (v0 - 1727291232) ^ v4;
  *(void *)(v2 - 160) = 1795542557 - v4;
  *(_DWORD *)(v2 - 180) = v4;
  *(_DWORD *)(v2 - 176) = (v0 - 1727291232) & 0xF9AFA768 ^ v4;
  uint64_t v5 = sub_1005E44CC(v2 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + *(int *)(v2 - 184)))(v5);
}

void sub_1005DD634()
{
  if (v0 >= v1) {
    int v3 = dword_1009BDBB0 + 1;
  }
  else {
    int v3 = v2;
  }
  dword_1009BDBB0 = v3;
  JUMPOUT(0x1005DD788LL);
}

uint64_t sub_1005DD808()
{
  return (*(uint64_t (**)(void))(v2 + 8LL * (((v0 + 8 == ((v1 - 195) ^ 0x6CDDFE5)) * (v1 - 498)) ^ v1)))();
}

uint64_t sub_1005DD840(uint64_t a1, int a2)
{
  LODWORD(STACK[0x640]) = a2;
  STACK[0x15A8] = 0x9A82143E038AA4E1LL;
  LODWORD(STACK[0xA24]) = dword_1009BDBA8 - 1227344546;
  uint64_t v7 = dword_1009BDBB0;
  unint64_t v8 = (((v3 | (v6 - 192)) - ((v6 - 192) & v3)) ^ 0x9A819096ECD740A2LL) * v4;
  *(_DWORD *)(v6 - 18_Block_object_dispose(va, 8) = ((v2 - 360680606) | 0x1A) ^ v8;
  *(_DWORD *)(v6 - 184) = (v2 - 360680684) ^ v8;
  *(_DWORD *)(v6 - 160) = v8 + v2 + 1123495911;
  *(_DWORD *)(v6 - 156) = v8;
  *(_DWORD *)(v6 - 180) = v2 - 360680606 + v8;
  *(void *)(v6 - 176) = v5 - v8;
  *(void *)(v6 - 16_Block_object_dispose(va, 8) = v7 ^ v8;
  uint64_t v9 = sub_100686C70(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + *(int *)(v6 - 192)))(v9);
}

uint64_t sub_1005DD910()
{
  int v1 = 53 * (LODWORD(STACK[0x660]) ^ 0x695);
  STACK[0x658] = (unint64_t)malloc(STACK[0x620]);
  uint32_t v2 = arc4random();
  unsigned int v3 = (v1 ^ 0x1D5D6138) + v2 - ((2 * v2) & 0x3ABACBF6);
  LODWORD(xmmword_1009BDBB4) = v3;
  *(_DWORD *)(v0 + 4) = ((1812433253 * (v3 ^ 0x1D5D65FB ^ (v3 >> 30))) ^ 0xBEFCFEFD)
                      + ((1477382858 * (v3 ^ 0x1D5D65FB ^ (v3 >> 30))) & 0x7DF9FDFA)
                      + 1583376127
                      - ((((((1812433253 * (v3 ^ 0x1D5D65FB ^ (v3 >> 30))) ^ 0xBEFCFEFD)
                          + ((1477382858 * (v3 ^ 0x1D5D65FB ^ (v3 >> 30))) & 0x7DF9FDFA)
                          + 945299277) << (((v1 + 57) & 0x7B) - 119))
                        + 290833262) & 0x3ABACBF6);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + v1) - 8))(945299277LL);
}

void sub_1005DDA54()
{
}

uint64_t sub_1005DDA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int8x16_t v8 = (int8x16_t)vld1q_dup_f32((const float *)v6);
  int v9 = (LODWORD(STACK[0x660]) - 1647) | 0xE8;
  v10.i64[0] = 0x8000000080000000LL;
  v10.i64[1] = 0x8000000080000000LL;
  v11.i64[0] = 0x100000001LL;
  v11.i64[1] = 0x100000001LL;
  v12.i64[0] = -1LL;
  v12.i64[1] = -1LL;
  v7.i64[0] = *(void *)(v6 + 4);
  v7.i32[2] = *(_DWORD *)(v6 + 4 * (((2 * v9) ^ 0x138u) - 203LL));
  int8x16_t v13 = vextq_s8(v8, v7, 0xCuLL);
  int8x16_t v14 = v7;
  v14.i32[3] = *(_DWORD *)(v6 + 16);
  int32x4_t v15 = (int32x4_t)veorq_s8( vorrq_s8( (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( vaddq_s32( (int32x4_t)veorq_s8( vandq_s8( v14,  (int8x16_t)vdupq_n_s32(0x2EF82728u)),  (int8x16_t)vdupq_n_s32(0x2A600701u)),  (int32x4_t)veorq_s8( vandq_s8( v14,  (int8x16_t)vdupq_n_s32(0x5107D8D6u)),  (int8x16_t)vdupq_n_s32(0x51018055u))),  v11),  (int8x16_t)vdupq_n_s32(0xB901D19u)),  v12),  vandq_s8(v13, v10)),  (int8x16_t)vdupq_n_s32(0x6DACFFB6u));
  v16.i32[0] = *((_DWORD *)&STACK[0x15A8] + ((*(_DWORD *)(v6 + 4) & 1) == 0));
  v16.i32[1] = *((_DWORD *)&STACK[0x15A8] + (~*(_DWORD *)(v6 + 8) & 1LL));
  v16.i32[2] = *((_DWORD *)&STACK[0x15A8] + (~*(_DWORD *)(v6 + 4 * (((2 * v9) ^ 0x138u) - 203LL)) & 1LL));
  v16.i32[3] = *((_DWORD *)&STACK[0x15A8] + (~v14.i32[3] & 1LL));
  *(int8x16_t *)uint64_t v6 = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)(v6 + 1588), v16), (int8x16_t)vdupq_n_s32(0x68441E91u)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( v15,  (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v15, v15),  (int8x16_t)vdupq_n_s32(0xAF3AE9C0))),  vdupq_n_s32(0xD79D74E0)),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * (v9 ^ 0x5EE)) - 4LL))();
}

uint64_t sub_1005DE464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int32x4_t v12 = (_DWORD *)(v9 + 4 * (v8 + v10));
  unsigned int v13 = (((((*v12 & 0x2EF82728 ^ 0x2A600701) + (*v12 & 0x5107D8D6 ^ 0x51018055) - 2) ^ 0xB901D19) - 1) | v7 & 0x80000000) ^ 0x6DACFFB6;
  *(_DWORD *)(v9 + 4 * ((v6 ^ 0x333u ^ (unint64_t)(v10 + 436)) + v8)) = v12[396] ^ *((_DWORD *)&STACK[0x15A8]
                                                                                          + ((*v12 & 1) == 0)) ^ ((v13 - ((2 * v13) & 0xAF3AE9C0) - 677546784) >> 1) ^ 0x68441E91;
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((53 * (v8 + 1 != v11 + 3)) ^ v6)) - 4LL))();
}

uint64_t sub_1005DE554@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  unsigned int v3 = (const float *)(v2 + 908);
  int8x16_t v4 = (int8x16_t)vld1q_dup_f32(v3);
  v5.i64[0] = 0x8000000080000000LL;
  v5.i64[1] = 0x8000000080000000LL;
  return sub_1005DD310( a1,  a2,  v4,  v5,  (int8x16_t)vdupq_n_s32(0x7FFFFFFEu),  (int8x16_t)vdupq_n_s32(0x2EEA4EB3u),  (int8x16_t)vdupq_n_s32(0x46D6979Du),  (int8x16_t)vdupq_n_s32(0x4F78E54Cu),  (int8x16_t)vdupq_n_s32(0xB0871AB3),  (int8x16_t)vdupq_n_s32(0x3A195999u));
}

uint64_t sub_1005DE5E8()
{
  STACK[0x870] = 0LL;
  STACK[0x958] = v0;
  STACK[0x9E8] = STACK[0x658];
  return sub_1005DE608();
}

uint64_t sub_1005DE608@<X0>(uint64_t a1@<X8>)
{
  int8x16_t v5 = (uint64_t (*)(void))(*(void *)(v4 + 8LL * v1) + a1);
  STACK[0x878] = (unint64_t)v5;
  if (!qword_1009C72B8)
  {
    *v3 |= ~v3[*v3 & (((((v2 + 614013678) | 0x83u) - 333) | 0x400LL) ^ 0x6BC)] << 16;
    v3[4] |= ~v3[v3[4] & 0x3ELL] << 16;
    v3[8] |= ~v3[v3[8] & 0x3ELL] << 16;
    v3[12] |= ~v3[v3[12] & 0x3ELL] << 16;
    v3[16] |= ~v3[v3[16] & 0x3ELL] << 16;
    v3[20] |= ~v3[v3[20] & 0x3ELL] << 16;
    v3[24] |= ~v3[v3[24] & 0x3ELL] << 16;
    v3[28] |= ~v3[v3[28] & 0x3ELL] << 16;
    v3[32] |= ~v3[v3[32] & 0x3ELL] << 16;
    unsigned int v6 = v3[36];
    unsigned int v7 = v3[v6 & 0x3E];
    dword_1009C74C0 = 255;
    v3[36] = v6 | (~v7 << 16);
    v3[40] |= ~v3[v3[40] & 0x3ELL] << 16;
    v3[44] |= ~v3[v3[44] & 0x3ELL] << 16;
    v3[48] |= ~v3[v3[48] & 0x3ELL] << 16;
    v3[52] |= ~v3[v3[52] & 0x3ELL] << 16;
    unsigned int v8 = v3[56];
    unsigned int v9 = v3[v8 & 0x3E];
    qword_1009C72B8 = (uint64_t)v3;
    v3[56] = v8 | (~v9 << 16);
    v3[60] |= ~v3[v3[60] & 0x3ELL] << 16;
    int8x16_t v5 = (uint64_t (*)(void))STACK[0x878];
  }

  return v5();
}

uint64_t sub_1005DE7E0@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((v1 - 1027) ^ (198 * (a1 != 0)))) - 4LL))();
}

uint64_t sub_1005DE80C()
{
  byte_1009C72B0 = 1;
  BOOL v2 = *(char *)(STACK[0x630] + 1) >= (char)(((((v0 + 126) | 0x82) + 120) ^ 0xBD) + ((v0 + 126) | 0x82) + 57);
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (((2 * v2) | (4 * v2)) ^ ((v0 - 1410) | 0x82))) - 12LL))();
}

uint64_t sub_1005DE868@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * (((a6 == ((v6 ^ 0x39) + 0x80)) * ((v6 ^ 0x5A4) - 185)) ^ v6))
                                                                                       - 4LL))( a1,  a2,  a3,  a4,  a5,  4294924380LL);
}

uint64_t sub_1005DE8A4()
{
  else {
    int v3 = -42018;
  }
  return (*(uint64_t (**)(void))(v2 + 8LL * ((1090 * (v3 == 0)) ^ v1)))();
}

uint64_t sub_1005DE8F0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  int v7 = (((*(unsigned __int8 *)(STACK[0x630] + 3)
        - (((29 * (a6 ^ 0xF9)) ^ 0x3C) & (2 * *(unsigned __int8 *)(STACK[0x630] + 3)))
        + 58) << ((a6 - 99) & 0xEA ^ 0x8A))
      - 1280) ^ 0x3500;
  unsigned int v8 = (v7 - ((2 * v7) & 0x1800) + 3135) ^ 0xC3F | (*(unsigned __int8 *)(STACK[0x630] + 4)
  int v9 = (v8 - ((2 * v8) & 0x5F00) + 12160) ^ 0x2F80;
  unsigned int v10 = ((2 * v9) & 0x1D41C) + ((unsigned __int16)v9 ^ 0x7BF7EA0E) - 561806783;
  unsigned int v11 = LODWORD(STACK[0x7EC]) + 606802899;
  int v12 = (v11 < 0x5A7B6C4F) ^ (v10 < 0x5A7B6C4F);
  BOOL v13 = v10 < v11;
  if (v12) {
    BOOL v13 = v11 < 0x5A7B6C4F;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8LL * ((850 * v13) ^ a6))
                                                                                       - 8LL))( a1,  a2,  a3,  a4,  a5,  4294925278LL);
}

uint64_t sub_1005DEA14()
{
  unint64_t v3 = STACK[0x630] + 5;
  int v4 = 1189216979 * (((v2 - 192) & 0x97A295A5 | ~((v2 - 192) | 0x97A295A5)) ^ 0x46B6669C);
  *(_DWORD *)(v2 - 19fseek(v0, 0LL, 2) = (v1 + 1560) ^ v4;
  *(_DWORD *)(v2 - 184) = v4 - 1717899440 + v0;
  *(void *)(v2 - 176) = v3;
  sub_100635330(v2 - 192);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((1384 * (*(_DWORD *)(v2 - 188) == ((v1 + 1577) | 2) - 1666)) ^ v1))
                            - 12))();
}

uint64_t sub_1005DEAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8LL * (((((v7 - 75) | 0x113) ^ 0x746) * (*(_BYTE *)(STACK[0x630] + (v6 - 2079844873)) == 2)) ^ v7))
                                                                                       - (((v7 + 1451) | 0x80u) ^ 0x68ELL)))( a1,  a2,  a3,  a4,  a5,  4294925278LL);
}

uint64_t sub_1005DEB14()
{
  unint64_t v4 = ((((v0 - 37) ^ 0x8C9C3CA5) + v2 + 0x6527777BFA9621F7LL) | ((unint64_t)(((v0 - 37) ^ 0x8C9C3CA5) + v2 < 0x8942667) << 32))
     + STACK[0x630]
     - 0x6527777C032A485ELL;
  unsigned int v5 = (((*(unsigned __int8 *)v4 - ((2 * *(unsigned __int8 *)v4) & 0x32) + 162) << (v0 - 23)) - 2304) ^ 0xFFFF9900;
  LODWORD(__chkstk_darwin(v3, v4) = (v5 - ((2 * v5) & 0x600) - 31963) ^ 0xFFFF8325 | (*(unsigned __int8 *)(v4 + 1)
  LODWORD(__chkstk_darwin(v3, v4) = (v4 - ((2 * v4) & 0x5C4C) - 20954) ^ 0xAE26;
  unsigned int v6 = ((2 * v4) & 0x3FFA) + ((unsigned __int16)v4 ^ 0x75EF1FFD);
  BOOL v7 = v6 + 748997636 < v3 + 1816368005;
  return (*(uint64_t (**)(void))(v1 + 8LL * ((1178 * v7) ^ v0)))();
}

uint64_t sub_1005DEC64@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  unint64_t v10 = STACK[0x630] + v8 + a6 + ((v6 + 23) | 0xEu);
  BOOL v12 = v9 != 1978605565 && v10 != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * ((1090 * v12) ^ v6))
                                                                                       - 8LL))( a1,  a2,  a3,  a4,  a5,  4294925273LL);
}

uint64_t sub_1005DECB8()
{
  unsigned int v2 = ((((34 * (v1 ^ 0x12E) - 1993083573) & 0x76CC06FF) - 570517760) ^ (v0 - 1978605565) & 0xFFFFFFF0)
     + ((2 * (v0 - 1978605565)) & 0xBBFD3380);
  LODWORD(STACK[0x9A0]) = v2 + 986388018;
  int v3 = malloc(v2 + 570517082);
  STACK[0x998] = (unint64_t)v3;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((171 * (v3 != 0LL)) ^ v1)))();
}

uint64_t sub_1005DED58(uint64_t a1)
{
  *(_WORD *)a1 = 513;
  __int16 v7 = v2 - ((2 * v2 - 13178) & 0xAC60) + 15488;
  *(_BYTE *)(a1 + fseek(v0, 0LL, 2) = HIBYTE(v7) ^ 0xD6;
  *(_BYTE *)(a1 + 3) = v7 ^ 0x3D;
  *(_BYTE *)(a1 + 4) = ((unsigned __int16)(v2
                                         - v1
                                         - 2 * ((v2 - v1 + ((v3 - 709) | 0x540) + 248) & 0x57FF ^ (v2 - v1) & 0xE)
                                         + 24113) >> 8) ^ 0xD7;
  *(_BYTE *)(a1 + 5) = (v2 - v1 - 2 * ((v2 - v1 + ((v3 + 59) | 0x40) - 8) ^ (v2 - v1) & 0xE) + 49) ^ 0xF1;
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
                                        * (v3 ^ (451
}

uint64_t sub_1005DEE54(uint64_t a1)
{
  BOOL v10 = v2 < v1;
  *(_BYTE *)(v5 + a1 - 0x6C0CDD421E324482LL) = *(_BYTE *)(v4 + v7 - 0x7D4446D723A3386FLL);
  if (v10 == v6 - 0x7F9D097D288CADDFLL < v1) {
    BOOL v10 = v6 - 0x7F9D097D288CADDFLL < v2;
  }
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((v10 * v3) ^ v8)) - 4LL))();
}

uint64_t sub_1005DEEFC@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x5E8]) = v3 + v2;
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * ((233
                                          * (((((v1 - 1745844672) ^ 0xBD7FF677ECF97FB2LL)
                                             + 0x42800988E912F93CLL
}

uint64_t sub_1005DEFA0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v6 = a2 ^ 0x3Au;
  uint64_t v7 = ((_DWORD)v6 - 370) | 0x148u;
  BOOL v8 = v2 < v6 + v3 - 1394;
  *(_BYTE *)(a1
  if (v8 == v3 > 0xD60C78EF) {
    BOOL v8 = v2 > 0xD60C78EF;
  }
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * (int)((v8 * (v7 - 1294)) ^ v7)) - 12LL))();
}

void sub_1005DF060()
{
}

uint64_t sub_1005DF068@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v1 - 1659) * (a1 == 0)) ^ (v1 - 680))) - 12LL))();
}

uint64_t sub_1005DF08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  byte_1009C72B0 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8LL
                                                                                         * ((729
                                                                                           * (((LODWORD(STACK[0x9B0]) == -1062694300) ^ (v5 + 1)) & 1)) ^ (v5 - 1379))))( a1,  a2,  a3,  a4,  a5,  4294925273LL);
}

uint64_t sub_1005DF0DC()
{
  int v1 = strcmp("mobactivationd", __progname);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((1125
}

uint64_t sub_1005DF158()
{
  int v2 = strcmp("mobileactivationd", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((1848
                                        * (((2 * v2) & 0xB6F4FFF6) + (v2 ^ 0xDB7A7FFB) != (((v1 ^ 0x153) + 1491) ^ 0xDB7A79AB))) ^ v1))
                            - 4))();
}

uint64_t sub_1005DF1C8()
{
  int v2 = strcmp("findmydeviced", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((241 * (((2 * v2) & 0xAC40AEDE) + ((v1 - 722) ^ 0xD6205411 ^ v2) == -702523537)) ^ v1))
                            - ((50 * (v1 ^ 0x655u)) ^ 0xF6LL)))();
}

uint64_t sub_1005DF24C()
{
  int v2 = strcmp("findmydeviced-nano-support", *v0);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((1581
                               * (((v2 << (((v1 + 125) & 0xFE) + 7)) & 0x6F8DAFD6) + (v2 ^ 0xB7C6D7EB) != -1211705365)) ^ v1)))();
}

uint64_t sub_1005DF2BC()
{
  int v2 = strcmp("identityservicesd", *v0);
  BOOL v3 = ((v2 << ((((v1 - 85) & 0xFE) + 6) ^ 0x2F)) & 0xBEF1FFDE) + (v2 ^ 0x5F78FFEF) == 1601765359;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)((2 * v3) | (4 * v3) | (v1 + 1369147307) & 0xAE6475FE)) - 4))();
}

uint64_t sub_1005DF350()
{
  int v2 = strcmp("amsaccountsd", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((704
                                        * ((((v1 - 96877103) & 0x5C639FA ^ 0xA4FAEC24) & (2 * v2)) + (v2 ^ 0xD27D766F) != ((v1 - 1450992439) & 0x567C660B) - 763530644)) ^ v1))
                            - 4))();
}

uint64_t sub_1005DF3E4()
{
  int v2 = strcmp("AppStore", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((39
                                        * (((v1 - 4) ^ (((v2 << ((2 * (v1 ^ 0x7E)) ^ 0xFB)) & 0xAD42ACFE)
                                                                       + (v2 ^ 0x56A1567F) == 1453414015)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_1005DF464()
{
  int v2 = strcmp("itunesstored", *v0);
  unsigned int v3 = (((((v1 & 0xDFFDFFEF) + 1086412392) & 0xE0C1CDAB) - 562242580) ^ v2) + ((2 * v2) & 0xBCF9BFDE);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (int)(v1 & 0xDFFDFFEF ^ 0xDE7CD94E ^ (421
                                                                            * (((v3 - (v1 & 0xDFFDFFEF)) | ((v1 & 0xDFFDFFEF) - v3)) >> 31))))
                            - 12))();
}

uint64_t sub_1005DF508()
{
  int v2 = strcmp("StoreKitUIService", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((77 * (((2 * v2) & 0x7563FDD6) + (v2 ^ 0xBAB1FEEB) != -1162739989)) ^ v1))
                            - ((v1 - 1828819465) & 0x6D018EFF)
                            + 242))();
}

uint64_t sub_1005DF578()
{
  int v2 = strcmp("appstored", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((((2 * v2) & 0x3CA1FFDE) + (v2 ^ 0x1E50FFEF) != 508624879)
                                        * (((v1 ^ 0x2A2) - 1447) ^ 0x3DF)) ^ v1))
                            - 8))();
}

uint64_t sub_1005DF5DC()
{
  int v2 = strcmp("Fitness", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((((2 * v2) & 0x34A4EFFE) + (v2 ^ 0x1A5277FF) != ((v1 - 863668647) & 0x337A83FF)
                                                                                        + 441612037)
                                        * (v1 - 1285)) ^ v1))
                            - 12))();
}

uint64_t sub_1005DF654()
{
  int v2 = strcmp("appinstallationmetricsd", *v0);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((1783
                               * (((2 * v2) & 0x6543ECF6) + (((v1 - 1543) | 0x60) ^ v2 ^ 0xB2A1F681) != -1298008453)) ^ (v1 - 803))))();
}

uint64_t sub_1005DF6B8()
{
  int v2 = strcmp("attributionkitd", *v0);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((254
                               * ((((v1 + 770) ^ (((2 * v2) & 0x2D61ECF6) + (v2 ^ 0x96B0F67B) == ((v1 + 877526141) & 0xCBB200FE ^ 0x96B0F681))) & 1) == 0)) ^ v1)))();
}

uint64_t sub_1005DF738()
{
  int v2 = strcmp("test", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((49
                                        * (((2 * v2) & 0xB472FFFE) + (v2 ^ 0x5A397FFF) == ((((v1 | 0x10) - 1510) | 0x50) ^ 0x5A397F05))) ^ (v1 | 0x10)))
                            - (((v1 | 0x10u) - 1430) ^ 0xF6LL)))();
}

uint64_t sub_1005DF7C0()
{
  int v3 = strcmp("ProvenanceCombo", *v0);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((1273 * (((2 * v3) & 0x3E9AFFF6) + (v3 ^ (v2 | 0x9F4D7F01)) == v1 - 1622311167)) ^ v1))
                            - 8))();
}

uint64_t sub_1005DF824()
{
  int v1 = malloc(0x98uLL);
  STACK[0x9E0] = (unint64_t)v1;
}

uint64_t sub_1005DF874@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * (v6 ^ (1335 * (a6 == 1))))
                                                                                       - ((v6 + 961) ^ ((v6 + 264) | 0x480u) ^ 0x231LL)))( a1,  a2,  a3,  a4,  a5,  4294924380LL);
}

void sub_1005DF8B4(int a1@<W8>)
{
  int v2 = 1189216979 * ((1484279903 - ((v1 - 192) | 0x5878505F) + ((v1 - 192) | 0xA787AFA0)) ^ 0x896CA366);
  *(void *)(v1 - 176) = v3;
  *(_DWORD *)(v1 - 184) = v2 + a1 + v5 - 549290969;
  *(_DWORD *)(v1 - 19fseek(v0, 0LL, 2) = (a1 + 436) ^ v2;
  sub_100635330(v1 - 192);
  *(_DWORD *)(v4 + 56) = *(_DWORD *)(v1 - 188);
}

void sub_1005DF938()
{
}

void sub_1005DF9BC()
{
  LODWORD(STACK[0x6C0]) = ((v0 + 1247) ^ 0x38E1F03F) + v1;
  JUMPOUT(0x100588730LL);
}

uint64_t sub_1005DF9E4()
{
  LODWORD(STACK[0x858]) = 414602358;
  return sub_1005E1ACC();
}

uint64_t sub_1005DF9F8()
{
  return (*(uint64_t (**)(void))(v1 + 8LL * (int)(((STACK[0x890] == 1) * (((v0 + 1442281574) & 0xAA0885BF) - 148)) ^ v0)))();
}

uint64_t sub_1005DFA38()
{
  size_t v2 = strlen(v0);
  BOOL v3 = malloc(((2 * v2) & 0xDFEE97AF5A7FE3DELL) + (v2 ^ 0xEFF74BD7AD3FF1EFLL) + 0x1008B42852C00E2FLL) == 0LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((1248 * ((v3 ^ (v1 + 118)) & 1)) ^ v1)))();
}

uint64_t sub_1005DFAD0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(*(void *)(a2
                                        + 8LL
}

uint64_t sub_1005DFB50()
{
  int v5 = &v3[v0 + v1];
  qmemcpy(v5 + 586, "/Library/ProvenanceV2", 21);
  *(void *)&v3[((238 * (v4 ^ 0x4D6) - 892731023) & 0x3535FDED ^ v0) + v1] = 0x6975732E6373702FLL;
  v5[615] = 0;
  free(v2);
  int v6 = fopen(v3, "rb");
  free(v3);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (((v6 == 0LL) | (4 * (v6 == 0LL))) ^ v4)) - 4))();
}

uint64_t sub_1005DFC30()
{
  int v3 = ftell(v0);
  unsigned int v4 = v3 - ((2 * v3) & 0xDF7A25D0) + ((47 * (v1 ^ 0x5E6)) ^ 0x6FBD13B4) - 21;
  unsigned int v5 = ((2 * v4) & 0xA9BE5E8E ^ 0x893A0480) + (v4 ^ 0xBB623DAF);
  unint64_t v6 = v5 + 1877669118;
  STACK[0x658] = v6;
  LODWORD(STACK[0x75C]) = v6;
  uint64_t v7 = fseek(v0, 0LL, 0);
  return ((uint64_t (*)(uint64_t))(*(void *)(v2
                                                      + 8LL
                                                      * (((v5 + 723570873 > 0x31) | (4 * (v5 + 723570873 > 0x31))) ^ v1))
                                          - 4LL))(v7);
}

uint64_t sub_1005DFD08()
{
  int v3 = malloc(v2);
  STACK[0x788] = (unint64_t)v3;
  unsigned int v4 = malloc(v2);
  STACK[0x688] = (unint64_t)v4;
  STACK[0x650] = (unint64_t)v3;
  if (v3) {
    BOOL v5 = v4 == 0LL;
  }
  else {
    BOOL v5 = 1;
  }
  char v6 = v5;
  return (*(uint64_t (**)(void))(v0
                              + 8LL
}

uint64_t sub_1005DFD70()
{
  int v6 = fread((void *)STACK[0x650], 1uLL, v5, v0);
  LODWORD(STACK[0x5E8]) = v4 + 2005882396;
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((118
                                * ((((v3 ^ (v1 - 84)) - v1) ^ ((_DWORD)v5 == ((v6
                                                                                              - ((2 * v6) & 0x24F0BEF0)
                                                                                              - 1837605000) ^ 0x92785F78))) & 1)) ^ v3)))();
}

uint64_t sub_1005DFDEC()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((759
                                          * (((v2 + 1877669127) & 0xF) == (((v2 + 1877669127) << (((v3 + v0) ^ (v0 - 114))
                                                                                                + 36)) & 0x12))) ^ v3))
                            - 4LL))();
}

uint64_t sub_1005DFE40@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * (a1 ^ (56
                                     * ((STACK[0x658] | ((unint64_t)(STACK[0x658] < 0x44CA2445) << 32)) == 1154098245)))))();
}

uint64_t sub_1005DFECC()
{
  STACK[0x788] = 0LL;
  uint64_t v1 = fclose(v0);
  LODWORD(STACK[0x844]) = STACK[0x5E8];
  return ((uint64_t (*)(uint64_t))sub_1005D429C)(v1);
}

uint64_t sub_1005DFF24()
{
  int v3 = v0;
  free(v2);
  LODWORD(STACK[0x844]) = STACK[0x5E8];
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
}

uint64_t sub_1005DFF5C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *(_BYTE *)(v5 + v8 - 0x22D319BCB4C17C07LL) = *(_BYTE *)(v4 + v7 - 0x55252C283FFEBD00LL);
  BOOL v9 = v6 - 0x45559007E7118C87LL < v3;
  if (v3 < v2 != v6 - 0x45559007E7118C87LL < v2) {
    BOOL v9 = v3 < v2;
  }
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((v9 * (a2 - 751)) ^ a2)) - 12LL))();
}

uint64_t sub_1005DFFE8@<X0>(int a1@<W8>)
{
  BOOL v8 = v2 < v3;
  *(_BYTE *)(v5 + v7 - 0x50A45DA5B0BC1840LL) = *(_BYTE *)(v4 + STACK[0x650] - 0x520FA5116C0838F0LL);
  if (v8 == v6 - 0x1792B87A967B033LL < v1) {
    BOOL v8 = v6 - 0x1792B87A967B033LL < v2;
  }
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((56 * !v8) ^ a1)))();
}

uint64_t sub_1005E0090@<X0>(int a1@<W1>, int a2@<W8>, double a3@<D0>)
{
  *(double *)(v3 + v4 + (((v5 + 421) | v7) ^ (a2 + 664))) = a3;
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (((v6 == 0) * a1) ^ v5)) - 12LL))();
}

uint64_t sub_1005E00C4@<X0>(int a1@<W1>, int a2@<W8>, double a3@<D0>)
{
  return sub_1005E0090(a1, a2, a3);
}

uint64_t sub_1005E00D0(int a1)
{
}

uint64_t sub_1005E011C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v15 = a4 + 1;
  uint64_t v16 = (a4 + v7);
  *(_BYTE *)(v13 + (a3 + v8)) = *(_BYTE *)(v9 + v16) ^ *(_BYTE *)(v10 + (v16 & 0xF)) ^ *(_BYTE *)((v16 & 0xF) + v11 + 5) ^ *(_BYTE *)(v12 + (v16 & 0xF) + ((((a6 ^ 0x14B) - 191) | 0x210u) ^ 0x613LL)) ^ (-29 * (v16 & 0xF)) ^ 0x30;
  return ((uint64_t (*)(void))(*(void *)(v14 + 8LL * ((331 * (v15 + v7 < v6)) ^ a6 ^ 0x14B)) - 8LL))();
}

void sub_1005E01A0()
{
}

uint64_t sub_1005E01AC()
{
  *(_BYTE *)(v5 + v0 - 0x26E17EE24A6B7208LL) = *(_BYTE *)(v3 + v1 - 0x75A6843E1435B213LL)
                                             - ((2 * *(_BYTE *)(v3 + v1 - 0x75A6843E1435B213LL)) & 0x20)
                                             - 112;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((25 * (v6 + 1 != v4 + 16)) ^ v2)) - 8LL))();
}

uint64_t sub_1005E0230@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_1005E0270()
{
  int v3 = *(_DWORD *)(v1 + 64);
  unsigned int v2 = *(_DWORD *)(v1 + 68);
  *(_BYTE *)(v1 + 56) = ((8 * v2) ^ 0x88) - ((16 * v2) & 0x60) + 48;
  *(_BYTE *)(v1 + 57) = (v0 - 70) ^ (v2 >> 5);
  *(_BYTE *)(v1 + 5_Block_object_dispose(va, 8) = (v2 >> 13) ^ 0x39;
  *(_BYTE *)(v1 + 59) = (v2 >> 21) ^ 0x77;
  HIDWORD(__chkstk_darwin(v3, v4) = v3 + 306022837;
  LODWORD(__chkstk_darwin(v3, v4) = ~v2;
  *(_BYTE *)(v1 + 60) = ((v4 >> 29) - ((2 * (v4 >> 29)) & 0x5A) + 45) ^ 0x1D;
  *(_BYTE *)(v1 + 61) = (((v3 - 767718987) >> 5) - (((v3 - 767718987) >> 4) & 0x1C) + 14) ^ 0x3E;
  *(_BYTE *)(v1 + 6fseek(v0, 0LL, 2) = (((v3 - 767718987) >> 13) - (((v3 - 767718987) >> 12) & 0xEE) + 119) ^ 0x47;
  return sub_1005E2A54();
}

uint64_t sub_1005E034C()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (((v1 == v0 - 277) * ((v0 + 1389) ^ 0x64C)) ^ (v0 + 1071))) - 8LL))();
}

uint64_t sub_1005E037C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((998 * (*(void *)(v1 + 8) != 0LL)) ^ (a1 + 145))) - 8LL))();
}

void sub_1005E03AC(void *a1)
{
  *(void *)(v1 + _Block_object_dispose(va, 8) = v2;
  JUMPOUT(0x1005E03E0LL);
}

uint64_t sub_1005E0440()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (int)(((8
}

uint64_t sub_1005E04C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v13 = v11 + a8 + v9 - 1;
  BOOL v16 = v13 > 0xF || (((((_BYTE)a5 - 123) & 0xFC) - (_BYTE)v10 + 14) & 0xFu) < (v13 & 0xF) || 993822815 - (int)v8 < v13;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8LL * ((189 * v16) ^ a5)))( a1,  a2,  v8,  v10);
}

uint64_t sub_1005E0530( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v16 = v9 + v7 + 43 * (a7 ^ 0x295) - 1419 + v14;
  unint64_t v17 = v16 - (v10 + a2);
  uint64_t v18 = (v8 - 59 * (a7 ^ 0xBC) - 27) & 0xF;
  unint64_t v19 = v16 - v11 - v18;
  unint64_t v20 = v16 - v12 - v18 - 5;
  unint64_t v21 = v16 - v13 - v18 - 2;
  BOOL v25 = v17 < 0x10 || v19 < 0x10 || v20 < 0x10 || v21 < 0x10;
  return ((uint64_t (*)(void))(*(void *)(v15 + 8LL * ((103 * v25) ^ a7)) - 8LL))();
}

uint64_t sub_1005E05C8@<X0>( uint64_t a1@<X5>, uint64_t a2@<X8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>, int8x16_t a5@<Q2>, int8x16_t a6@<Q3>, int32x4_t a7@<Q4>, int8x16_t a8@<Q5>, int8x16_t a9@<Q6>, int32x4_t a10@<Q7>)
{
  v19.i32[0] = *(_DWORD *)(v13 + ((4 * a2) | 4));
  v19.i32[1] = *(_DWORD *)(v13 + ((4 * a2) | 8));
  v19.i32[2] = *(_DWORD *)(v13 + ((4 * a2) | 0xC));
  int8x16_t v20 = vextq_s8(a3, v19, 0xCuLL);
  int8x16_t v21 = v19;
  v21.i32[3] = *(_DWORD *)(v13 + 4 * (a2 + v10 + 213) - 3420);
  int8x16_t v22 = vandq_s8(v20, v17);
  int32x4_t v23 = (int32x4_t)veorq_s8(vandq_s8(v21, a4), a5);
  int32x4_t v24 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32(vsubq_s32(v23, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v23, v23), a6)), a7),  a8);
  int32x4_t v25 = (int32x4_t)veorq_s8( vorrq_s8( (int8x16_t)vaddq_s32( vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v24, v24), a9), v24),  a10),  v22),  v14);
  v26.i32[0] = *(_DWORD *)(v11 + 4LL * ((*(_DWORD *)(v13 + ((4 * a2) | 4)) & 1) == 0));
  v26.i32[1] = *(_DWORD *)(v11 + 4 * (~*(_DWORD *)(v13 + ((4 * a2) | 8)) & 1LL));
  v26.i32[2] = *(_DWORD *)(v11 + 4 * (~*(_DWORD *)(v13 + ((4 * a2) | 0xC)) & 1LL));
  v26.i32[3] = *(_DWORD *)(v11 + 4LL * ((v21.i8[12] & 1) == 0));
  *(int8x16_t *)(v13 + 4 * afseek(v0, 0LL, 2) = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)(v13 + 4 * a2 + 1588), v26), v18),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( v25,  (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v25, v25), v15)),  v16),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((a2 == 220) * v12) ^ v10)) - 12LL))();
}

uint64_t sub_1005E06E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12 = (unsigned int *)(v10 + 4 * (v9 + a5));
  unsigned int v13 = v8 & 0x80000000;
  uint64_t v14 = v9 + 1;
  int v15 = *(_DWORD *)(v10 + 4 * (v14 + a5));
  unsigned int v16 = ((v15 & (((v7 - 339) | 0x134) ^ (v11 - 1031)) ^ 0x55979AC4)
       - ((2 * (v15 & (((v7 - 339) | 0x134) ^ (v11 - 1031)) ^ 0x55979AC4)) & 0x11FEB938)
       - 1996530531) ^ 0x9AD1F4C2;
  unsigned int v17 = ((((2 * v16) | 0xA57512B2) - v16 - 1387956569) | v13) ^ 0x85EDE38;
  *int v12 = v12[397] ^ *((_DWORD *)&STACK[0x15A0] + ((v15 & 1) == 0)) ^ ((v17 - ((2 * v17) & 0x411F644E) + 546288167) >> 1) ^ 0x3948A85;
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((63 * (v14 != a7 + 3)) ^ v7)) - 12LL))();
}

uint64_t sub_1005E07E0@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32(&flt_1009BDF40);
  v6.i64[0] = 0x8000000080000000LL;
  v6.i64[1] = 0x8000000080000000LL;
  v7.i64[0] = 0x8000000080000000LL;
  v7.i64[1] = 0x8000000080000000LL;
  v8.i64[0] = 0x1000000010LL;
  v8.i64[1] = 0x1000000010LL;
  v4.i64[0] = *(void *)&dword_1009BDF44;
  v4.i32[2] = dword_1009BDF4C;
  int8x16_t v9 = vextq_s8(v5, v4, 0xCuLL);
  int8x16_t v10 = v4;
  v10.i32[3] = *(_DWORD *)(v3 + 4 * ((a2 + 1168442) & 0xFFEE2EEB ^ 0x685LL));
  int8x16_t v11 = (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x5B5C1A18u)),  (int8x16_t)vdupq_n_s32(0x9041A19u)),  v7);
  int32x4_t v12 = (int32x4_t)veorq_s8( vorrq_s8( (int8x16_t)(*(_OWORD *)&v11 & __PAIR128__(0x7FFFFFFF7FFFFFFFLL, 0x7FFFFFFF7FFFFFFFLL)),  vorrq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x24A3E5E6u)), vandq_s8(v9, v6))),  (int8x16_t)vdupq_n_s32(0x14597FE2u));
  int32x4_t v13 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v12, (int8x16_t)vdupq_n_s32(0x7F485EDEu)), vandq_s8(v11, v8));
  v11.i32[0] = *(_DWORD *)(v2 + 4LL * ((dword_1009BDF44 & 1) == 0));
  v11.i32[1] = *(_DWORD *)(v2 + 4 * (~unk_1009BDF48 & 1LL));
  v11.i32[2] = *(_DWORD *)(v2 + 4 * (~dword_1009BDF4C & 1LL));
  v11.i32[3] = *(_DWORD *)(v2 + 4 * (~v10.i32[3] & 1LL));
  *(int8x16_t *)&flt_1009BDF40 = veorq_s8( veorq_s8( veorq_s8((int8x16_t)xmmword_1009BDBB4, v11),  (int8x16_t)vdupq_n_s32(0x2C777CF1u)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32(v12, vaddq_s32(v13, v13)),  vdupq_n_s32(0x7F485ECFu)),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * a2) - 8LL))();
}

void sub_1005E0948()
{
}

uint64_t sub_1005E0954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v8 = ((*v7 & 0x7FFFFFFE ^ 0x2D37856E) & 0x702179C6) - (*v7 & 0x7FFFFFFE ^ 0x2D37856E | 0xF02179C7);
  unsigned int v9 = ((v8 & 0x6632D40E ^ ((v6 ^ 0xE0) - 1073591935)) + (v8 & 0x19CD2BF0 ^ 0x9CC02B1) - 2) ^ 0xF67A341E;
  v7[623] = v7[396] ^ *((_DWORD *)&STACK[0x15A0] + ((*v7 & 1) == 0)) ^ (((v9 | ((17 * (v6 ^ 0x600)) ^ 0x80000682) & v7[623])
                                                                       - ((2 * v9) & 0x72FD25D0)
                                                                       - 1182887192) >> 1) ^ 0x4F6C1AE2;
  return (*(uint64_t (**)(void))(a6 + 8LL * ((382 * (LODWORD(STACK[0xA14]) > 0x26F)) ^ v6)))();
}

uint64_t sub_1005E0A60@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0xA14]) = 0;
  int v3 = LODWORD(STACK[0xA14])++;
  *(_DWORD *)(v1 + 2984) = v3 + 1227344547;
  uint64_t v4 = (dword_1009BDBB0 + 675253587);
  unint64_t v5 = 1606104089
     * ((((v2 - 192) ^ 0x374E2F97FAEFA969LL)
       + 0x5A6D22DEDA18CAA1LL
       - 2 * (((v2 - 192) ^ 0x374E2F97FAEFA969LL) & 0x5A6D22DEDA18CAA1LL)) ^ 0xAF9DF67D55E021F6LL);
  *(_DWORD *)(v2 - 164) = -1231242048
                        - 1606104089
                        * ((((v2 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v2 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6)
                        + a1;
  *(void *)(v2 - 19fseek(v0, 0LL, 2) = v4 + v5;
  *(_DWORD *)(v2 - 180) = 1606104089
                        * ((((v2 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v2 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6);
  *(_DWORD *)(v2 - 176) = (a1 - 1982105617) ^ (1606104089
                                             * ((((v2 - 192) ^ 0xFAEFA969)
                                               - 635909471
                                               - 2 * (((v2 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6));
  *(_DWORD *)(v2 - 17fseek(v0, 0LL, 2) = ((a1 - 1982105711) ^ 0x53)
                        + 1606104089
                        * ((((v2 - 192) ^ 0xFAEFA969) - 635909471 - 2 * (((v2 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6);
  *(_DWORD *)(v2 - 16_Block_object_dispose(va, 8) = (a1 - 1982105711) ^ (1606104089
                                             * ((((v2 - 192) ^ 0xFAEFA969)
                                               - 635909471
                                               - 2 * (((v2 - 192) ^ 0xFAEFA969) & 0xDA18CAA1)) ^ 0x55E021F6));
  *(void *)(v2 - 160) = 1725023529 - v5;
  uint64_t v6 = sub_1005E44CC(v2 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + *(int *)(v2 - 184)) - 8))(v6);
}

uint64_t sub_1005E0B74(uint64_t a1)
{
  if (v1 >= LODWORD(STACK[0x660]) + 1725021863) {
    int v3 = LODWORD(STACK[0x660]) - 1089 + dword_1009BDBB0 - 576;
  }
  else {
    int v3 = v2;
  }
  dword_1009BDBB0 = v3;
  return sub_1005E0CB8(a1, 2492029045LL, 1709269819LL);
}

uint64_t sub_1005E0CB8@<X0>(unsigned int a1@<W1>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  unsigned int v8 = (v5 ^ a1) >> (((a4 - 64) | 0x12) + v4 + 20);
  LOBYTE(__chkstk_darwin(v7, v8) = (v8 - ((2 * v8) & 0xD8) - 20) ^ 0xDB;
  *(_BYTE *)(v6 + (a3 - 1709269820)) = v8;
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * ((1269
                                          * (a3
}

uint64_t sub_1005E0D74@<X0>(int a1@<W3>, int a2@<W8>)
{
  BOOL v4 = v2 + 8 == ((a2 - 891695054) & 0x35262FCD ^ a1);
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((2 * v4) | (4 * v4)) ^ (a2 - 414)))
}

uint64_t sub_1005E0DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(STACK[0x5E0]) = a5;
  STACK[0x15A0] = 0x8ADBE34913D35396LL;
  LODWORD(STACK[0xA14]) = dword_1009BDBA8 - 1227344546;
  uint64_t v8 = dword_1009BDBB0;
  unint64_t v9 = 1856021207 * ((v7 - 192) ^ 0xED14979B4E69D6FELL);
  *(_DWORD *)(v7 - 180) = v5 - 2107019173 + v9;
  *(_DWORD *)(v7 - 18_Block_object_dispose(va, 8) = v9 ^ (v5 - 2107019173) ^ 0x1F;
  *(_DWORD *)(v7 - 184) = (v5 - 2107019231) ^ v9;
  *(_DWORD *)(v7 - 160) = v9 + v5 + 1123495911;
  *(_DWORD *)(v7 - 156) = v9;
  *(void *)(v7 - 176) = v8 - v9;
  *(void *)(v7 - 16_Block_object_dispose(va, 8) = v9 ^ v6;
  uint64_t v10 = sub_100686C70(v7 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + *(int *)(v7 - 192)))(v10);
}

uint64_t sub_1005E0E90()
{
  int v3 = (v0 - 510) | 0x58;
  STACK[0x650] = (unint64_t)malloc(STACK[0x5C8]);
  uint32_t v4 = arc4random();
  LODWORD(xmmword_1009BDBB4) = v4 + 492660219 - ((v4 << (v3 + 37)) & 0x3ABACBF6);
  int v5 = (v3 - 625611773) ^ xmmword_1009BDBB4 ^ ((xmmword_1009BDBB4 >> 30) | 0xC7E89524);
  *(_DWORD *)(v1 + 4) = ((v5 * v2) ^ 0x35FFFFD6)
                      + ((1477382858 * v5) & 0x6BFFFFAC)
                      - 413309402
                      - ((2 * (((v5 * v2) ^ 0x35FFFFD6) + ((1477382858 * v5) & 0x6BFFFFAC)) + 1409286230) & 0x3ABACBF6);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + v3) - 8))();
}

void sub_1005E0FBC()
{
}

uint64_t sub_1005E0FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32(v6);
  return sub_1005E05C8( a6,  0LL,  v7,  (int8x16_t)vdupq_n_s32(0x7FFFFFFEu),  (int8x16_t)vdupq_n_s32(0x55979AC4u),  (int8x16_t)vdupq_n_s32(0x11FEB938u),  vdupq_n_s32(0x88FF5C9D),  (int8x16_t)vdupq_n_s32(0x9AD1F4C2),  (int8x16_t)vdupq_n_s32(0xA57512B2),  vdupq_n_s32(0xAD4576A7));
}

uint64_t sub_1005E109C@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0xA14]) = a1 + 1;
  gettimeofday((timeval *)STACK[0x5C0], 0LL);
  int v3 = (_DWORD *)STACK[0x658];
  int v4 = *(_DWORD *)(STACK[0x658] + 16) + 492660219 - ((2 * *(_DWORD *)(STACK[0x658] + 16)) & 0x3ABACBF6);
  v3[1] = *(_DWORD *)(STACK[0x658] + 24) + 492660219 - ((*(_DWORD *)(STACK[0x658] + 24) << (v1 ^ 0x67)) & 0x3ABACBF6);
  void v3[2] = v4;
  uint32_t v5 = arc4random();
  v3[3] = v5 + 492660219 - ((2 * v5) & 0x3ABACBF6);
  uint32_t v6 = arc4random();
  _DWORD *v3 = v6 + 492660219 - ((2 * v6) & 0x3ABACBF6);
  uint64_t v7 = 1606104089
     * ((2 * ((v2 - 192) & 0x2806F337012D5AA0LL) - (v2 - 192) - 0x2806F337012D5AA8LL) ^ 0x1547F7FC8BC5E766LL);
  int v8 = STACK[0x660];
  LODWORD(STACK[0x648]) = LODWORD(STACK[0x660]) + 840712548;
  LODWORD(STACK[0x640]) = v8 + 1424360829;
  LODWORD(STACK[0x620]) = v8 - 620250899;
  int v9 = (DWORD1(xmmword_1009BDBB4) ^ 0x39158C1A ^ (1664525
                                                * (xmmword_1009BDBB4 ^ 0x1D5D65FB ^ (xmmword_1009BDBB4 >> 30))
                                                - ((3329050
                                                  * (xmmword_1009BDBB4 ^ 0x1D5D65FB ^ (xmmword_1009BDBB4 >> 30))) & 0x4891D3C2)
                                                + 608758241))
     + (*v3 ^ 0x1D5D65FB);
  unsigned int v10 = (v9 ^ 0xFDFEFFFC) + 1166520020 + ((2 * v9) & 0xFBFDFFF8);
  DWORD1(xmmword_1009BDBB4) = v10 - ((2 * v10 + 955425376) & 0x3ABACBF6) - 640239829;
  *(void *)(v2 - 160) = 994917323 - v7;
  *(void *)(v2 - 19fseek(v0, 0LL, 2) = v7 + 994917325;
  *(_DWORD *)(v2 - 17fseek(v0, 0LL, 2) = (((v1 ^ 0x5E4) - 710365758) | 9) + v7;
  *(_DWORD *)(v2 - 16_Block_object_dispose(va, 8) = ((v1 ^ 0x5E4) - 710365758) ^ v7;
  *(_DWORD *)(v2 - 164) = -1231242048 - v7 + (v1 ^ 0x5E4);
  *(_DWORD *)(v2 - 180) = v7;
  *(_DWORD *)(v2 - 176) = ((v1 ^ 0x5E4) - 710365795) ^ v7;
  uint64_t v11 = sub_1005E44CC(v2 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + *(int *)(v2 - 184)))(v11);
}

uint64_t sub_1005E1398()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * ((371 * (v1 < LODWORD(STACK[0x660]) + 994915657)) ^ (LODWORD(STACK[0x660]) - 1432))))();
}

uint64_t sub_1005E13CC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * (((((LODWORD(STACK[0x660]) - 1666) | 0xEA) ^ 0x199) * (v1 > 0x3B4D3E3A)) ^ (LODWORD(STACK[0x660]) - 1432))))();
}

uint64_t sub_1005E1410@<X0>(int a1@<W8>)
{
  int v4 = (a1 - 106) | 0x602;
  LODWORD(xmmword_1009BDBB4) = dword_1009BE570;
  unint64_t v5 = 516615401 * ((0xE919A3F3EA000F92LL - ((v3 - 192) | 0xE919A3F3EA000F92LL) + v2) ^ 0x9E5AD477669CF65FLL);
  *(void *)(v3 - 176) = (v1 - 821040047) ^ v5;
  *(_DWORD *)(v3 - 19fseek(v0, 0LL, 2) = v5 + 1;
  *(_DWORD *)(v3 - 18_Block_object_dispose(va, 8) = v4 - 1194255872 - v5;
  *(_DWORD *)(v3 - 15fseek(v0, 0LL, 2) = (v4 - 185257467) ^ v5;
  *(_DWORD *)(v3 - 14_Block_object_dispose(va, 8) = ((v4 - 1194255872) ^ 0x47) + v5;
  *(_DWORD *)(v3 - 16_Block_object_dispose(va, 8) = ((v4 - 1194255872) | 0x50) ^ v5;
  *(void *)(v3 - 160) = v5 + 345479972;
  uint64_t v6 = sub_1005587BC(v3 - 192);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + *(int *)(v3 - 184)) - 4))(v6);
}

uint64_t sub_1005E1500()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * (int)((((STACK[0x640] & 0xAB19F77A ^ 0xFFFFFFC5) + (STACK[0x648] & 0xCDE3BB7F))
                                               * (v1 < 0x14979B24)) ^ (LODWORD(STACK[0x660]) - 803)))
                            - 12LL))();
}

uint64_t sub_1005E1578()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * ((37
                                          * (v1 > (((STACK[0x620] & 0x24F843F6) + 345478391) ^ LODWORD(STACK[0x660]) ^ 0x5F8u))) ^ (LODWORD(STACK[0x660]) - 803)))
                            - 12LL))();
}

uint64_t sub_1005E15E4()
{
  int v5 = (v0 - 790) | 0x302;
  *(_DWORD *)(v2 + 4LL * (v4 - 1166520889 + v5)) ^= 0xEA904B04 ^ *(_DWORD *)(STACK[0x650]
                                                                                         + 4LL
                                                                                         * (v4 - 1166520889 + v5));
}

void sub_1005E167C()
{
}

uint64_t sub_1005E1688()
{
  STACK[0x870] = STACK[0x5B0];
  STACK[0x918] = v0;
  STACK[0x8C0] = STACK[0x650];
  free(v1);
  return sub_1005E1E24();
}

uint64_t sub_1005E1724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5
                                                                        + 8LL
                                                                        * (int)(((v3 + 526) * (a3 == v4 + 41)) ^ v3))
                                                            - (v3 ^ 0x3BELL)))( a1,  a2,  4294924389LL);
}

uint64_t sub_1005E1760()
{
  BOOL v1 = malloc(0x14uLL) == 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v1 * ((v0 - 22) ^ 0x39C)) ^ v0))
}

uint64_t sub_1005E17A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8LL
                                                              * ((207
                                                                * (a3 != v4 + ((34 * (v3 ^ 0x51) - 1655) | 0xA4) - 149)) ^ v3)))( a1,  a2,  4294924389LL);
}

uint64_t sub_1005E17E8()
{
  BOOL v1 = malloc(0x19uLL) == 0LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((748 * ((v1 ^ (v0 - 8)) & 1)) ^ v0)))();
}

uint64_t sub_1005E1830(_BYTE *a1)
{
  int v5 = (2 * v2 - 277) | 0x114;
  uint64_t v6 = *(char **)(v1 + 8);
  char v7 = *v6;
  int v8 = *(_DWORD *)(qword_1009C72B8 + ((v5 - 593721293) & dword_1009C74C0));
  unint64_t v9 = -1263679611
     * ((-1263679611 * ((v6 ^ v8) & 0x7FFFFFFF)) ^ ((-1263679611 * ((v6 ^ v8) & 0x7FFFFFFF)) >> 16));
  unint64_t v10 = -1263679611
      * ((-1263679611 * ((a1 ^ v8) & 0x7FFFFFFF)) ^ ((-1263679611 * ((a1 ^ v8) & 0x7FFFFFFF)) >> 16));
  *a1 = byte_10072EBC0[v9 >> 24] ^ v7 ^ byte_1007311E0[v9 >> 24] ^ byte_1007556B0[v9 >> 24] ^ byte_10072EBC0[v10 >> 24] ^ byte_1007311E0[v10 >> 24] ^ byte_1007556B0[v10 >> 24] ^ v9 ^ v10 ^ (BYTE3(v9) * (v5 - 4)) ^ (17 * BYTE3(v10));
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (v5 ^ 3)) - 8LL))();
}

void sub_1005E1948()
{
}

uint64_t sub_1005E1950(void *a1)
{
  STACK[0x688] = 0LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0
}

uint64_t sub_1005E19A0(void *a1)
{
  *(void *)(v1 + _Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(v1 + 16) = 603954228;
  STACK[0x870] -= 144LL;
  return ((uint64_t (*)(void))STACK[0x7D8])();
}

uint64_t sub_1005E19D0()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((LODWORD(STACK[0x660]) - 753) ^ (84 * (v0 != 0))))
                            - ((LODWORD(STACK[0x660]) + 97712515) | 0x2CA870u)
                            + 100640873LL))();
}

uint64_t sub_1005E1A1C()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
}

uint64_t sub_1005E1A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = STACK[0x858];
  LODWORD(STACK[0x858]) += (34 * (v5 ^ 0x12E)) ^ 0x683;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8LL
                                                                                         * ((903
                                                                                           * ((((v5 + 225) | 0x482) ^ 0x6749AD09u)
                                                                                            + v8 < 0x80000001)) ^ v5)))( a1,  a2,  a3,  a4,  a5,  v6);
}

void sub_1005E1ACC()
{
}

uint64_t sub_1005E1BAC()
{
  uint64_t v1 = off_1009BDBA0;
  LOBYTE(STACK[0xB69]) = *off_1009BDBA0 - 114;
  LOBYTE(STACK[0xB6A]) = v1[1] - 114;
  LOBYTE(STACK[0xB6B]) = v0 + 17 + v1[2] + 60;
  LOBYTE(STACK[0xB6C]) = v1[3] - 114;
  LOBYTE(STACK[0xB6D]) = v1[4] + ((v0 - 114) & 0xFE ^ 0x40);
  LOBYTE(STACK[0xB6E]) = v1[5] - 114;
  LOBYTE(STACK[0xB6F]) = v1[6] - 114;
  LOBYTE(STACK[0xB70]) = v1[7] - 114;
  LOBYTE(STACK[0xB71]) = v1[8] - 114;
  LOBYTE(STACK[0xB72]) = v1[9] - 114;
  LOBYTE(STACK[0xB73]) = v1[10] - 114;
  LOBYTE(STACK[0xB74]) = v1[11] - 114;
  LOBYTE(STACK[0xB75]) = v1[12] - 114;
  LOBYTE(STACK[0xB76]) = v1[13] - 114;
  LOBYTE(STACK[0xB77]) = v1[14] - 114;
  LOBYTE(STACK[0xB78]) = v1[15] - 114;
  LOBYTE(STACK[0xB79]) = v1[16] - 114;
  LOBYTE(STACK[0xB7A]) = v1[17] - 114;
  LOBYTE(STACK[0xB7B]) = v1[18] - 114;
  LOBYTE(STACK[0xB7C]) = v1[19] - 114;
  LOBYTE(STACK[0xB7D]) = v1[20] - 114;
  LOBYTE(STACK[0xB7E]) = v1[21] - 114;
  LOBYTE(STACK[0xB7F]) = off_1009BDBA0[22] - 114;
  CFStringEncoding SystemEncoding = CFStringGetSystemEncoding();
  BOOL v3 = CFStringCreateWithCString(0LL, (const char *)&STACK[0xB69], SystemEncoding) == 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((7 * v3) ^ v0)) - 4))();
}

uint64_t sub_1005E1D2C(uint64_t a1)
{
  BOOL v2 = MGCopyAnswer(a1, 0LL) == 0;
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((((v2 ^ (v1 + 1)) & 1) * (((v1 + 1076) | 0x44) ^ 0x651)) ^ v1)))();
}

uint64_t sub_1005E1D78()
{
  STACK[0x870] += (515 * (v0 ^ 0x1CDu)) ^ 0x649LL;
  unint64_t v2 = STACK[0x8B0];
  STACK[0x5B8] = STACK[0x8B0];
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((507 * (v2 != 0)) ^ v0 ^ 0x59E)) - 12LL))();
}

uint64_t sub_1005E1E24()
{
  if (v0) {
    int v3 = 1;
  }
  else {
    int v3 = 0;
  }
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((v3 * (v1 ^ 0x601)) ^ v1)) - 12LL))();
}

uint64_t sub_1005E1E48()
{
}

uint64_t sub_1005E1E88@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x860]) = *(unsigned __int8 *)(v1 + 1) - ((2 * *(unsigned __int8 *)(v1 + 1)) & 0xFFDF) + 1148548335;
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_1005E1EE8@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
                                        * ((((LODWORD(STACK[0x6FC]) | ((unint64_t)(LODWORD(STACK[0x6FC]) < ((a1 - 84) | 0x400u) + 738485493) << 32)) != 738487159)
                                          * (((a1 - 437) | 0x42) - 352)) ^ (a1 - 53)))
                            - 12LL))();
}

uint64_t sub_1005E1F64@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x6FC]) = v1;
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((1283
}

uint64_t sub_1005E1FC0@<X0>(int a1@<W8>)
{
  unsigned int v4 = (a1 - 1926453991) ^ 0x8D2CA72D;
  BOOL v5 = v1 < v2;
  *(_BYTE *)STACK[0x920] = 0;
  if (v5 == v2 > 0x3696122F) {
    BOOL v5 = v1 > 0x3696122F;
  }
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (int)((50 * !v5) ^ v4)) - 12LL))();
}

void sub_1005E2070()
{
}

uint64_t sub_1005E2098()
{
  BOOL v5 = v2 < v0;
  *((_BYTE *)&STACK[0xB80] + v3 - 0x1468D0B22F427749LL) = 45;
  if (v5 == v3 - 0x1468D0B14B827B3ELL < v0) {
    BOOL v5 = v3 - 0x1468D0B14B827B3ELL < v2;
  }
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((!v5 * ((v1 - 1311) ^ 0x14C)) ^ (v1 - 1012))) - 12LL))();
}

void sub_1005E211C()
{
  LODWORD(STACK[0x7FC]) = v0;
  JUMPOUT(0x1005E2124LL);
}

uint64_t sub_1005E2128()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (((STACK[0x788] == 0) * ((v0 ^ 0x425) - 656)) ^ (v0 - 1111)))
                            - (v0 ^ 0x4BEu)
                            + 564LL))();
}

uint64_t sub_1005E2164()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL
}

uint64_t sub_1005E21A4@<X0>(void *a1@<X0>, int a2@<W8>)
{
  int v2 = a2 + 107;
  free(a1);
  STACK[0x788] = 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
}

uint64_t sub_1005E21F8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
}

uint64_t sub_1005E2234@<X0>(int a1@<W8>)
{
  int v2 = *(unsigned __int8 *)STACK[0x618];
  LODWORD(STACK[0x660]) = v2 + 104351676 - ((2 * v2) & 0x17C) + 2;
  return (*(uint64_t (**)(void))(v1
                              + 8LL
}

uint64_t sub_1005E22AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * (((v5 == ((v6 + 43) ^ 0x86)) * ((v6 + 163) ^ 0x3DD)) ^ v6))
                                                                                       - 12LL))( a1,  a2,  a3,  a4,  a5,  4294925295LL);
}

uint64_t sub_1005E22E8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8LL * (int)(((((a6 ^ 0x5F3) + 1363056535) & 0xAEC16E93 ^ ((a6 ^ 0x5F3) - 1255177821) & 0x4AD07EFF ^ 0x55F) * ((v6 - 1) < 2)) ^ a6 ^ 0x5F3))
                                                                                       - 12LL))( a1,  a2,  a3,  a4,  a5,  4294925295LL);
}

uint64_t sub_1005E2350@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8LL * ((1337 * ((LODWORD(STACK[0x674]) - 1645689335) > 0x42)) ^ a6))
                                                                                       - (a6 ^ 0x6Fu)
                                                                                       + 141LL))( a1,  a2,  a3,  a4,  a5,  4294925278LL);
}

uint64_t sub_1005E23B0(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3
                                                               + 8LL
                                                               * ((322
                                                                 * (STACK[0x928]
                                                                  + ~v2
                                                                  + ((v1 - 9) ^ 0x90LL) > 0xF)) ^ v1))
                                                   - 8LL))( a1,  v2);
}

uint64_t sub_1005E2438()
{
  v2.i64[0] = 0x2020202020202020LL;
  v2.i64[1] = 0x2020202020202020LL;
  v3.i64[0] = 0x9090909090909090LL;
  v3.i64[1] = 0x9090909090909090LL;
  int8x16_t *v0 = vaddq_s8(vsubq_s8(*v1, vandq_s8(vaddq_s8(*v1, *v1), v2)), v3);
  return sub_1005E2470();
}

uint64_t sub_1005E2470@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  __int16 v4 = ((*(unsigned __int8 *)(a1 + 65) - ((2 * *(unsigned __int8 *)(a1 + 65)) & 0x52)) << 8) - 22272;
  __int16 v5 = ((v4 ^ 0xA900) - ((((a2 - 223) | 0x98) - 31960) & (2 * v4)) - 15689) ^ 0xC2B7 | (*(unsigned __int8 *)(a1 + 66)
                                                                                      - ((2
  unsigned __int16 v6 = v5 - ((2 * v5) & 0xE908) - 2940;
  LOWORD(STACK[0x842]) = v6;
  int v7 = v6 ^ 0xF484;
  LODWORD(STACK[0x658]) = 2 * v7;
  unsigned int v8 = (v6 ^ 0x7DFEAB7A) - 1758828437 + ((2 * v7) & 0xBFFC);
  BOOL v9 = v8 < 0x1528C826;
  BOOL v10 = v8 > v2 - 1290695121;
  return (*(uint64_t (**)(void))(v3 + 8LL * ((!v10 | (32 * !v10)) ^ a2)))();
}

uint64_t sub_1005E2570()
{
  int v2 = malloc(v0);
  STACK[0x650] = (unint64_t)v2 + 0x4378B8CC4843E522LL;
  STACK[0xA50] = (unint64_t)v2 + 0x4378B8CC4843E522LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (((v2 == 0LL) * (((v1 + 810) | 0x280) ^ 0x6A0)) ^ v1)) - 8))();
}

uint64_t sub_1005E25D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(v4 + 64) = *(_DWORD *)(v4 + 64) + ((v3 + 565) | 0x282) - 1665;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))STACK[0x8E8])(a1, a2, a3, LODWORD(STACK[0x660]));
}

void sub_1005E25F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5 = (a4 - 1663) | 4u;
  unint64_t v6 = STACK[0xA40];
  unint64_t v7 = STACK[0x678];
  STACK[0x750] = (v5 ^ 0xFFFFFFFFFFFFFFFBLL) + *(void *)(v4 + 8LL * (a4 - 1605));
  STACK[0x728] = v7;
  unint64_t v8 = STACK[0x870];
  STACK[0x690] = (unint64_t)&STACK[0xB80] + STACK[0x870];
  STACK[0x870] = (((_DWORD)v5 - 344791180) & 0x148D1DEF) + v8 - 1355;
  STACK[0x7A0] = v6;
  STACK[0xA08] = *(void *)(v4 + 8LL * (int)v5);
  JUMPOUT(0x1005E26B0LL);
}

uint64_t sub_1005E273C(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((1814
                                          * (v2 + a1 + 57 < (((v1 - 819) | 4) ^ 0xFFFFFD2C) + ((v1 - 335) | 0x130))) ^ v1))
                            - 4LL))();
}

uint64_t sub_1005E278C()
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL * ((1502 * (v0 - v1 - v2 + ((v3 - 603409572) & 0x23F74FEFu) > 6)) ^ v3))
                            - ((v3 - 129) ^ 0x2B9LL)))();
}

uint64_t sub_1005E27F0(unsigned int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * (v1 ^ (104 * (a1 > 0xE)))) - ((v1 - 538) ^ 0x619u) + 1654LL))();
}

uint64_t sub_1005E2828@<X0>(int a1@<W1>, int a2@<W8>)
{
  *(void *)&__int128 v6 = 0x3030303030303030LL;
  *((void *)&v6 + 1) = 0x3030303030303030LL;
  *(_OWORD *)(v2 + (a1 + a2)) = v6;
  return ((uint64_t (*)(void))(*(void *)(v5 + 8LL * ((1613 * ((v3 & 0x1FFFFFFF0LL) == 16)) ^ (v4 - 771)))
}

void sub_1005E2868()
{
}

uint64_t sub_1005E2874()
{
  return (*(uint64_t (**)(void))(v1
                              + 8LL
}

uint64_t sub_1005E28D4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
}

uint64_t sub_1005E290C@<X0>(int a1@<W8>)
{
}

void sub_1005E2964()
{
  int v2 = *(_DWORD *)(v1 + 64);
  unsigned int v3 = *(_DWORD *)(v1 + 68);
  *(_BYTE *)(v1 + 56) = (((v2 - 767718987) >> 21)
  *(_BYTE *)(v1 + 57) = (((v2 - 767718987) >> 13) - (((v2 - 767718987) >> 12) & 0x92) - 55) ^ 0xF9;
  *(_BYTE *)(v1 + 5_Block_object_dispose(va, 8) = (((v2 - 767718987) >> 5) - (((v2 - 767718987) >> 4) & 0x62) - 79) ^ 0x81;
  HIDWORD(__chkstk_darwin(v3, v4) = v2 + 306022837;
  LODWORD(__chkstk_darwin(v3, v4) = ~v3;
  *(_BYTE *)(v1 + 59) = ((v4 >> 29) + (~(2 * (v4 >> 29)) | 0xAF) - 87) ^ 0x98;
  *(_BYTE *)(v1 + 60) = (v3 >> 21) ^ 0x77;
  *(_BYTE *)(v1 + 61) = (v3 >> 13) ^ 0x39;
  *(_BYTE *)(v1 + 6fseek(v0, 0LL, 2) = (v3 >> 5) ^ 0x1C;
  JUMPOUT(0x1005E2A4CLL);
}

uint64_t sub_1005E2A54(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(_BYTE *)(v5 + 63) = v4;
  STACK[0x810] = (v6 ^ 0xFFFFFFFFFFFFFFC6LL) + *(void *)(v7 + 8LL * (int)v6);
  return sub_1005E33A4(a1, a2, a3, a4);
}

uint64_t sub_1005E2A78()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (v1 ^ ((4 * (v0 != v2)) | (8 * (v0 != v2)))))
                            - (v1 - 815)
}

uint64_t sub_1005E2AA8()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((387
}

uint64_t sub_1005E2AE4@<X0>(int a1@<W8>)
{
  return sub_1005E0090(308, a1, 1.39804329e-76);
}

uint64_t sub_1005E2B08@<X0>(int a1@<W8>)
{
  *(_BYTE *)(v2 + (v3 + a1)) = 48;
}

uint64_t sub_1005E2B4C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  STACK[0x810] = *(void *)(v5 + 8LL * v4);
  return sub_1005E33A4(a1, a2, a3, a4);
}

uint64_t sub_1005E2C10(int a1, uint64_t a2, int a3)
{
  unsigned int v6 = a1 + v4 + 17070532 + 355 * (a3 ^ 0x6FB) + 1474;
  if (v6 <= 0x40) {
    unsigned int v6 = 64;
  }
}

uint64_t sub_1005E2CAC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, unsigned int a8)
{
  unsigned int v11 = a7 + 2184;
  if (v11 <= 0x40) {
    unsigned int v11 = a8;
  }
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
}

uint64_t sub_1005E2D0C(int a1, uint64_t a2, int a3, int a4)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * ((45
}

uint64_t sub_1005E2D58@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)(v2 + (((((v7 ^ 0x8E) - 583) | 0x38u) + v3) & (v4 + a1 + 535))) = *(_BYTE *)(v6 + v1 - 567404835)
                                                                            - ((2 * *(_BYTE *)(v6 + v1 - 567404835)) & 0x60)
                                                                            + 48;
  return (*(uint64_t (**)(void))(v8 + 8LL * ((142 * ((v5 + a1 + 1) < 0x40)) ^ v7 ^ 0x8E)))();
}

void sub_1005E2DC0()
{
}

uint64_t sub_1005E2E44@<X0>(int a1@<W8>)
{
  char v8 = 51 * (v3 ^ 0x8B);
  int v9 = v3 - 923;
  int v10 = v5 + 1;
  char v11 = *(_BYTE *)(STACK[0x970] + (v5 - 567404835));
  *(_BYTE *)(v1 + (a1 - 1984514192)) = v11 - ((v8 - 107) & (2 * v11)) + 48;
  BOOL v12 = v10 + v4 < v6;
  if (v6 < v2 != v10 + v4 < v2) {
    BOOL v12 = v6 < v2;
  }
  return ((uint64_t (*)(uint64_t))(*(void *)(v7 + 8LL * ((1603 * !v12) ^ v9)) - 8LL))(2310453104LL);
}

void sub_1005E2ED4()
{
}

uint64_t sub_1005E2EE0()
{
  unsigned int v4 = v2 - 1282311541;
  unsigned int v5 = (*(_DWORD *)(v1 + 68) ^ 0xE8E12591)
     + v4
     - ((2 * ((*(_DWORD *)(v1 + 68) ^ 0xE8E12591) + v4)) & 0xD1C24B22)
     - 387897967;
  *(_DWORD *)(v1 + 6_Block_object_dispose(va, 8) = v5;
}

uint64_t sub_1005E2F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(v4 + 64) += v3 ^ 0x64E;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))STACK[0x978])(a1, a2, a3, LODWORD(STACK[0x660]));
}

void sub_1005E2F74()
{
}

uint64_t sub_1005E2F88(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6 = (a4 - 620) | 0x20u;
  unint64_t v7 = STACK[0x6E8];
  unint64_t v8 = STACK[0x910];
  STACK[0x978] = v6 + *(void *)(v5 + 8LL * (a4 - 1634)) - 1086;
  STACK[0xA70] = v8;
  LODWORD(STACK[0x864]) = v4 + 16;
  STACK[0x6E0] = v7;
  int v9 = ((v4 + 16) ^ 0xD4FE6C26)
     + (((v6 ^ 0x2B4) - 1544) ^ 0x404304EF)
     + ((2 * *(_DWORD *)(v8 + 68)) & 0x56 ^ 2)
     + (*(_DWORD *)(v8 + 68) & 0x3F ^ 0xBFBCFB7A);
  return ((uint64_t (*)(void))(*(void *)(v5
                                        + 8LL
                                        * (int)((668
                                               * ((v9 ^ 0x43EF9BE7) - 1139776551 + ((2 * v9) & 0x87DF37CE) < 0xFFFFFFC0)) ^ v6))
                            - 4LL))();
}

void sub_1005E2FB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  STACK[0x978] = *(void *)(v4 + 8LL * (a4 - 1619)) - 4LL;
  JUMPOUT(0x1005E2FECLL);
}

uint64_t sub_1005E30AC(int a1, int a2)
{
  else {
    int v7 = a2 + v3;
  }
  return (*(uint64_t (**)(void))(v6 + 8LL * ((211 * (v4 - v5 - a1 + v7 >= (((v2 - 58) | 0x421) ^ 0x46Eu))) ^ v2)))();
}

uint64_t sub_1005E310C(int a1, int a2, int a3)
{
  int v8 = a1 + v6;
  int v9 = v8 + v4;
  unsigned int v10 = a3 + v9;
  BOOL v12 = v5 - v8 < v10 || v10 > 0xF;
  return (*(uint64_t (**)(void))(v7 + 8LL * ((1180 * ((v12 ^ (v3 - 25)) & 1)) ^ v3)))();
}

uint64_t sub_1005E3154()
{
  uint64_t v6 = (v0 ^ 0x3C9u) + 174;
  uint64_t v7 = (v1 + v2 - 1) + v4;
  unint64_t v8 = v7 - (void)&unk_100752E30 - 2;
  BOOL v9 = (unint64_t)(v7 - (void)&unk_10072D990) >= 0x10
    && (unint64_t)(v7 - (void)&unk_100756940 - 5) >= 0x10;
  unint64_t StatusReg = _ReadStatusReg(ARM64_SYSREG(3, 3, 4, 2, 0));
  BOOL v11 = !v9 || v8 < 0x10;
  unint64_t v12 = v7 - v3;
  BOOL v13 = v12 >= v6 - 1105;
  char v14 = v12 < v6 - 1105 || v11;
  _WriteStatusReg(ARM64_SYSREG(3, 3, 4, 2, 0), StatusReg);
  if (!v13) {
    char v14 = 1;
  }
  if (v8 < 0x10) {
    char v14 = 1;
  }
  return (*(uint64_t (**)(void))(v5 + 8LL * ((1236 * ((v14 & 1) == 0)) ^ v0)))();
}

uint64_t sub_1005E31F0@<X0>(int a1@<W8>)
{
  int v7 = v3 ^ 0x30;
  *(int8x16_t *)(v5 + (v1 + a1)) = veorq_s8(*v4, (int8x16_t)xmmword_10072D940);
  BOOL v8 = ((v7 + 518353531) & 0xE11A8A7B) - 106LL != ((v2 + 1) & 0x1FFFFFFF0LL);
  return ((uint64_t (*)(__n128))(*(void *)(v6 + 8LL * ((16 * v8) | (32 * v8) | v7)) - 12LL))((__n128)xmmword_10072D940);
}

uint64_t sub_1005E32D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = (*(_DWORD *)(v8 + 68) ^ 0xE8E12591)
      + v7
      - ((95 * (a7 ^ 0x600) - 775797549) & (2 * ((*(_DWORD *)(v8 + 68) ^ 0xE8E12591) + v7)))
      - 387897967;
  *(_DWORD *)(v8 + 6_Block_object_dispose(va, 8) = v10;
  return (*(uint64_t (**)(void))(v9 + 8LL * ((94 * ((v10 ^ (((a7 + 654410154) & 0xD8FE7EC6) - 387899633)) >= v7)) ^ a7)))();
}

uint64_t sub_1005E3350()
{
  return (*(uint64_t (**)(void))(v3 + 8LL * (((((v2 ^ 0x41B) - 1118) ^ 0x12F) * (v0 == v1)) ^ v2)))();
}

void sub_1005E337C()
{
  LODWORD(STACK[0x700]) = v1;
  STACK[0x810] = *(void *)(v2 + 8LL * v0) + ((v0 + 1565) ^ 0xFFFFFFFFFFFFF9D4LL);
  JUMPOUT(0x1005E33A0LL);
}

uint64_t sub_1005E33A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(STACK[0x658]) = a4 + 1930992997;
  STACK[0x650] = 558655447LL;
  return sub_1005D4608();
}

uint64_t sub_1005E342C@<X0>(int a1@<W8>)
{
  *(_BYTE *)(v5 + (v1 + a1)) = *(_BYTE *)(v4 + v2 - 947768899) ^ *((_BYTE *)&unk_10072D990
                                                                               + ((v2 - 947768899) & 0xF)) ^ byte_100756940[((v2 - 947768899) & 0xF) + 5] ^ (-29 * ((v2 - 67) & 0xF)) ^ byte_100752E30[((v2 - 947768899) & 0xF) + ((v3 - 1118) ^ 1LL)] ^ 0x30;
  return (*(uint64_t (**)(uint64_t))(v6 + 8LL * ((1335 * ((a1 + v1 + 1) < 0x40)) ^ (v3 - 779))))(4294967267LL);
}

void sub_1005E34C4()
{
}

void sub_1005E34CC()
{
}

uint64_t sub_1005E3520()
{
}

uint64_t sub_1005E3578(uint64_t a1, unint64_t a2)
{
  LOBYTE(STACK[0xB90]) = LOBYTE(STACK[0xB80]) ^ 2;
  LOBYTE(STACK[0xB91]) = LOBYTE(STACK[0xB81]) ^ 2;
  LOBYTE(STACK[0xB92]) = LOBYTE(STACK[0xB82]) ^ 2;
  LOBYTE(STACK[0xB93]) = LOBYTE(STACK[0xB83]) ^ 2;
  LOBYTE(STACK[0xB94]) = LOBYTE(STACK[0xB84]) ^ 2;
  LOBYTE(STACK[0xB95]) = LOBYTE(STACK[0xB85]) ^ 2;
  LOBYTE(STACK[0xB96]) = LOBYTE(STACK[0xB86]) ^ (44 * ((v3 - 110) ^ 6) - 102);
  LOBYTE(STACK[0xB97]) = LOBYTE(STACK[0xB87]) ^ 2;
  LOBYTE(STACK[0xB98]) = LOBYTE(STACK[0xB88]) ^ 2;
  LOBYTE(STACK[0xB99]) = LOBYTE(STACK[0xB89]) ^ 2;
  LOBYTE(STACK[0xB9A]) = LOBYTE(STACK[0xB8A]) ^ 2;
  LOBYTE(STACK[0xB9B]) = LOBYTE(STACK[0xB8B]) ^ 2;
  LOBYTE(STACK[0xB9C]) = LOBYTE(STACK[0xB8C]) ^ 2;
  LOBYTE(STACK[0xB9D]) = LOBYTE(STACK[0xB8D]) ^ 2;
  LOBYTE(STACK[0xB9E]) = LOBYTE(STACK[0xB8E]) ^ 2;
  LOBYTE(STACK[0xB9F]) = LOBYTE(STACK[0xB8F]) ^ 2;
  LODWORD(STACK[0xC58]) = 781741397;
  STACK[0xC38] = 0xE8E125912DC2764BLL;
  STACK[0xC40] = 0xC5C1D9754D4951FDLL;
  STACK[0xC48] = 0x3A3E268AB2B6AE02LL;
  LODWORD(STACK[0xC50]) = -371289332;
  LODWORD(STACK[0xC54]) = 2028013733;
  unint64_t v5 = STACK[0x960];
  STACK[0x8E8] = *(void *)(v4 + 8LL * (v3 - 622)) - 4LL;
  int v6 = STACK[0x9B4];
  STACK[0x618] = a2;
  STACK[0xA68] = v5;
  LODWORD(STACK[0x8E4]) = v6;
  STACK[0x970] = a2;
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * ((208
                                          * (v6
                                           + 1028141499
                                           + ((*(_DWORD *)(v5 + 68) << ((44 * ((v3 - 110) ^ 6) + 75) & 0xCE ^ 0x83)) & 0x6A ^ (((44 * ((v3 - 622) ^ 6) + 1642128791) & 0x9E1F1EF9) - 1751))
                                           + (*(_DWORD *)(v5 + 68) & 0x3F ^ 0xFEFB7DA4)
                                           + 2001586907 < 0xFFFFFFC0)) ^ (44 * ((v3 - 622) ^ 6))))
                            - 8LL))();
}

void sub_1005E36D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 928048777 * (((a1 | 0x634B8ECF) - (a1 | 0x9CB47130) - 1665896144) ^ 0x4557FBA2);
  __asm { BR              X10 }

uint64_t sub_1005E378C@<X0>(int a1@<W8>)
{
  int v2 = a1 ^ 0x1B6;
  BOOL v3 = malloc(0x98uLL) != 0LL;
  return (*(uint64_t (**)(void))(v1 + 8LL * ((((v2 - 511351619) & 0x1E7A9ABE ^ 0x55D) * v3) ^ v2)))();
}

uint64_t sub_1005E37D4(uint64_t a1)
{
  *(_DWORD *)a1 = 1711260689;
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;
  *(_DWORD *)(a1 + 56) = 448329679;
  *(void *)(a1 + 64) = 0x4378B8CC4843E522LL;
  *(_DWORD *)(a1 + 7fseek(v0, 0LL, 2) = 678136159;
  *(_WORD *)(a1 + 9fseek(v0, 0LL, 2) = 22113;
  *(void *)(a1 + 104) = 0LL;
  *(_DWORD *)(a1 + 11fseek(v0, 0LL, 2) = 1768032834;
  *(_DWORD *)(a1 + 96) = -1062694300;
  *(void *)(a1 + 120) = 0x57F7A3E501E5FAB3LL;
  *(void *)(a1 + 136) = 0LL;
  *(_DWORD *)(a1 + 144) = 150298638;
  return (*(uint64_t (**)(void))(v2 + 8LL * (v1 + 421)))();
}

uint64_t sub_1005E38AC@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((((a1 - 553) ^ 0x7B) * (v2 != v1)) ^ (a1 + 640)))
                            - ((a1 - 553) ^ 0x339u)
                            + 895LL))();
}

uint64_t sub_1005E38E4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((*(void *)(v1 - 0x57F7A3E501E5FAABLL) == 0LL) * (89 * (a1 ^ 0x389) - 160)) ^ a1))
                            - 89 * (a1 ^ 0x389u)
                            + 174LL))();
}

uint64_t sub_1005E392C()
{
  return ((uint64_t (*)(void))(*(void *)(v1
                                        + 8LL * ((77 * (*(void *)(v0 - 0x57F7A3E501E5FA9BLL) == 0LL)) ^ (v2 + 857)))
                            - 12LL))();
}

uint64_t sub_1005E3964(void *a1)
{
  *(void *)(v1 + 120) = 0x57F7A3E501E5FAB3LL;
  BOOL v5 = malloc(0x28uLL) != 0LL;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((795 * v5) ^ (v4 + 1196)))
                            - ((v4 + 795650565) ^ 0x2F6CAF2Au)
                            + 1433LL))();
}

uint64_t sub_1005E3A20(uint64_t *a1)
{
  int v6 = *(_DWORD *)(v1 + 20) + v2;
  *a1 = *(void *)(v1 + 40) ^ v2;
  a1[1] = 0LL;
  a1[3] = 0LL;
  unsigned int v7 = malloc((v6 - 1225326789));
  a1[1] = (uint64_t)v7;
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_1005E3AB4()
{
  *(_DWORD *)(v0 + 16) = v3;
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * ((248
                                * ((v3 | ((unint64_t)(v3 < (v2 ^ 0x1BC) + 1225326593) << 32)) == 1225326789)) ^ v2)))();
}

uint64_t sub_1005E3B38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  BOOL v10 = v2 < a2;
  char v11 = *(_BYTE *)(*(void *)(v6 + 32) + v3 + (v9 ^ 0xF69CDA6AD6A7930CLL));
  *(_BYTE *)(v4 + a1 - 0x556693EDB12119E6LL) = v11 - ((2 * v11) & 0x84) + 66;
  if (v10 == v5 - 0x76249CA8FFE015DALL < a2) {
    BOOL v10 = v5 - 0x76249CA8FFE015DALL < v2;
  }
  return (*(uint64_t (**)(void))(v7 + 8LL * ((248 * !v10) ^ v8)))();
}

uint64_t sub_1005E3BDC()
{
  uint64_t v5 = malloc(*(_DWORD *)(v0 + 28) ^ v2 ^ 0x5EFC540Fu);
  *(void *)(v1 + 24) = v5;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((v5 != 0LL) * ((v4 ^ 0x622) + (v4 ^ 0x284) - 1624)) ^ v4)) - 12LL))();
}

uint64_t sub_1005E3C30()
{
  *(_DWORD *)(v0 + 3fseek(v0, 0LL, 2) = v4;
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * ((19
                                          * ((v1 ^ 0x7D5F7B5BFCFDD9D7LL)
                                           - 0x7D5F7B5B68F20C46LL
                                           + ((v1 << (((v3 - 60) | 0x32) ^ 0x37)) & 0x1F9FBB3AELL) == 2483801489LL)) ^ v3))
                            - 8LL))();
}

uint64_t sub_1005E3CF4(uint64_t a1)
{
  BOOL v10 = v2 < v1;
  *(_BYTE *)(v5 + a1 - 0x3C18DD332A85F59BLL) = *(_BYTE *)(v4 + *v7 - 0x5AECB669D340FE3ELL)
                                             - (((v9 - 10) ^ 0xB2) & (2 * *(_BYTE *)(v4 + *v7 - 0x5AECB669D340FE3ELL)))
                                             + 66;
  if (v10 == v6 - 0x29F1311610BE6E56LL < v1) {
    BOOL v10 = v6 - 0x29F1311610BE6E56LL < v2;
  }
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((!v10 * v3) ^ v9)) - 8LL))();
}

void sub_1005E3D9C(uint64_t a1@<X8>)
{
  *(void *)(v2 + 120) = a1;
  *(_DWORD *)(v2 + 96) = (*(_DWORD *)(v2 + 96) & 0xFFFFFFFB ^ 0xC0A89264)
                       - 1062694300
                       - (((*(_DWORD *)(v2 + 96) & 0xFFFFFFFB ^ 0xC0A89264) & 0x40A89262 ^ *(_DWORD *)(v2 + 96) & 2) << (v1 - 53))
                       - 4;
  *(_DWORD *)uint64_t v2 = 1711260691;
  *(_DWORD *)(v2 + 4) = 104351674;
  void *v3 = v2;
}

uint64_t sub_1005E4334(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  v7[0] = &loc_100635104;
  v7[1] = a1;
  uint64_t v9 = a2;
  int v8 = a4;
  uint64_t v7[2] = a3;
  v7[3] = a5;
  int v10 = a6;
  unint64_t v12 = v7;
  unsigned int v11 = (230600693
       * (((&vars0 - 32) & 0x8B303018 | ~((&vars0 - 32) | 0x8B303018)) ^ 0xA6F349CC)) ^ 0x54F58F50;
  sub_100634DE4((uint64_t)&v11);
  return v13;
}

uint64_t sub_1005E43F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unint64_t v5 = 444472921
     * ((((unint64_t)v7 | 0xEA735D22C64C6F32LL)
  int v10 = v5 ^ 0x68D9B3A5;
  uint64_t v8 = a4;
  uint64_t v9 = (char *)&loc_100557DD0 + v5 - 4;
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  v7[0] = v5 ^ a5;
  v7[1] = v5 ^ a3;
  sub_100557D28((uint64_t)v7);
  return v11;
}

uint64_t sub_1005E44CC(uint64_t result)
{
  unint64_t v1 = 1606104089 * ((((2 * result) | 0x3ADB71A5212363FCLL) - result - 0x1D6DB8D29091B1FELL) ^ 0xDFD343E6E586F3C0LL);
  int v2 = *(_DWORD *)(result + 24) ^ (1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0));
  unint64_t v3 = *(void *)(result + 32) + v1;
  unint64_t v4 = *(void *)result - v1;
  BOOL v5 = (uint64_t)v4 < (uint64_t)v3;
  BOOL v6 = v4 < v3;
  int v7 = v5;
  if (((*(_DWORD *)(result + 12) ^ (1606104089
                                   * ((((2 * (_DWORD)result) | 0x212363FC) - (_DWORD)result + 1869499906) ^ 0xE586F3C0))) & 1) != 0)
    BOOL v6 = v7;
  if (!v6) {
    int v2 = *(_DWORD *)(result + 20) - 1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0);
  }
  *(_DWORD *)(result + _Block_object_dispose(va, 8) = *(_DWORD *)(result + 16) ^ (1606104089
                                                      * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0)) ^ v2;
  return result;
}

void sub_1005E4568(uint64_t a1)
{
  __asm { BR              X8 }

uint64_t sub_1005E45EC(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((1011 * (*(_DWORD *)(a1 + 8) + v1 == 990191069)) ^ v2)) - 4LL))();
}

uint64_t sub_1005E4620( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (*(void *)(a1 + 56)) {
    BOOL v11 = *(void *)(a1 + 40) == 0x3BF73A4905DA790BLL;
  }
  else {
    BOOL v11 = 1;
  }
  int v12 = !v11;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8LL * ((1653 * v12) ^ v9)) - 4LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

uint64_t sub_1005E4664(uint64_t a1)
{
  int v4 = ((*(_DWORD *)(a1 + 4) - v1) ^ 0x6519D58E) == *(_DWORD *)(a1 + 48) + v1 - 969127911;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (((2 * v4) | (v4 << 7)) ^ v2)) - 4LL))();
}

uint64_t sub_1005E46B0(uint64_t a1)
{
  int v5 = v3 & 0xF;
  BOOL v7 = *(_DWORD *)(a1 + 64) - v1 == 1320091323 && v5 == ((v2 + 1002757031) & 0xC43B25B4) - 418;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * ((199 * v7) ^ v2)) - 4LL))();
}

#error "1005E4708: too big function (funcsize=0)"
void sub_100634AFC( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  int a5,  int a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10,  uint64_t a11,  uint64_t a12,  uint64_t a13,  uint64_t a14,  uint64_t a15,  uint64_t a16,  uint64_t a17,  int a18,  int a19,  int a20,  int a21,  int a22,  int a23,  uint64_t a24,  int a25,  char a26,  __int16 a27,  char a28,  uint64_t a29,  char a30,  __int16 a31,  char a32)
{
  int v32;
  int v33;
  BOOL v34;
  int v37;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v34 = LODWORD(STACK[0x45C]) == 66;
  if (LODWORD(STACK[0x45C]) == 66) {
    a21 = a6;
  }
  LODWORD(STACK[0x2C8]) = a21;
  if (v34) {
    a22 = a5;
  }
  LODWORD(STACK[0x2C4]) = a22;
  uint64_t v37 = STACK[0x28C];
  if (v34) {
    uint64_t v37 = v32;
  }
  LODWORD(STACK[0x2BC]) = v37;
  if (v34) {
    a23 = v33;
  }
  LODWORD(STACK[0x2C0]) = a23;
  int v39 = ((LODWORD(STACK[0x424]) + 1) & 3) + 438594359 - ((2 * (LODWORD(STACK[0x424]) + 1)) & 4);
  unsigned int v40 = STACK[0x418];
  int v41 = ((a30 & 3) + 157619431 - 2 * (a30 & 3)) ^ 0x96514E7 | LODWORD(STACK[0x418]);
  LODWORD(STACK[0x2B0]) = (v41 ^ 0x5FDF63BF) - 1078485400 + ((2 * v41) & 0x3FBEC77E);
  int v42 = (((LODWORD(STACK[0x278]) + 1) & 3) + 1565938346 - ((2 * (LODWORD(STACK[0x278]) + 1)) & 4)) ^ 0x5D5652AA | v40;
  int v43 = (LODWORD(STACK[0x27C]) + 1) & 3;
  int v44 = (v43 - 1932684481 - 2 * v43) ^ 0x8CCD933F | v40;
  LODWORD(STACK[0x2A0]) = (v44 ^ 0xCFFB2CFF) + 1073600504 + ((2 * v44) & 0x1FF659FE);
  uint64_t v45 = (LODWORD(STACK[0x280]) - 1) & 3;
  int v46 = (v45 + 2088003135 - 2 * v45) ^ 0x7C74663F | v40;
  LODWORD(STACK[0x290]) = (v46 ^ 0x6D79BFEF) - 71906658 + ((2 * v46) & 0x5AF37FDE);
  int v47 = v40
  uint64_t v48 = v39 + LODWORD(STACK[0x2A8]) + 711;
  char v49 = ((STACK[0x288] & 3 | v40) ^ 0xF7F9EF3F) + 2 * (STACK[0x288] & 3 | v40);
  LODWORD(STACK[0x298]) = a20 + 2006613976;
  LODWORD(STACK[0x474]) = v42 - ((2 * v42) & 0x40105828) - 1253294572;
  LODWORD(STACK[0x2A8]) = ((((a32 & 3) + 1525361411 - 2 * (a32 & 3)) | v40) ^ 0x5AEB2B03) + 1456837784;
  LODWORD(STACK[0x448]) = -(a28 & 3 | v40) - 467026497;
  LODWORD(STACK[0x440]) = v47 - 232495567;
  LODWORD(STACK[0x438]) = ((a26 - 1) & 3 | v40) - 2 * (((a26 - 1) & 3 | v40) ^ a19) + 567841531;
  LODWORD(STACK[0x284]) = v49 + 1018074874;
  LODWORD(STACK[0x430]) = (v48 ^ 0x1A246FAE | v40) - 2 * (v48 & 1) + 127541761;
  JUMPOUT(0x1005E6AF8LL);
}

_DWORD *sub_100634DC0(_DWORD *result)
{
  *uint64_t result = v1;
  return result;
}

void sub_100634DE4(uint64_t a1)
{
  __asm { BR              X10 }

void sub_100634E60(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v2 + 24);
  unsigned int v6 = 941074649 * (((v7 | 0xB3A4DD8A) - (v7 & 0xB3A4DD8A)) ^ 0xB36C12EE);
  v7[1] = *(void *)(v2 + 16);
  _DWORD v7[2] = v5;
  LODWORD(v7[0]) = v6 - 1425377486 + a1 - 543;
  uint64_t v9 = v4;
  int v8 = v1 - v6;
  sub_100686EC8(v7);
  *(_DWORD *)(v3 + 16) = HIDWORD(v7[0]);
}

uint64_t sub_100635278(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v5[0] = sub_100634E60;
  v5[1] = a1;
  void v5[2] = a2;
  v5[3] = a3;
  int v6 = a4;
  unsigned int v7 = (230600693 * ((&vars0 - 333391412 - 2 * ((&vars0 - 32) & 0xEC20D9EC)) ^ 0x3E1C5FC7)) ^ 0x54F58F50;
  int v8 = v5;
  sub_100634DE4((uint64_t)&v7);
  return v9;
}

void sub_100635330(uint64_t a1)
{
  int v1 = 1189216979 * ((2 * (a1 & 0xB5105BF) - a1 - 189859264) ^ 0xDA45F686);
  int v2 = *(_DWORD *)a1 ^ v1;
  if (*(void *)(a1 + 16)) {
    BOOL v3 = *(_DWORD *)(a1 + 8) - v1 == 361945438;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BR              X8 }

uint64_t sub_100635404()
{
  int v2 = malloc( ((((3 * (v0 ^ 0x1DC)) ^ 0xEA6D2708) + v1) & 0xFFFFFFF0 ^ 0x64DAFA7A)
       + ((((v0 + 795) | 0x205) - 910823823) & (2 * (((3 * (v0 ^ 0x1DC)) ^ 0xEA6D2708) + v1)))
       - 1692072552);
  STACK[0x468] = (unint64_t)v2;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((590 * (v2 != 0LL)) ^ v0)))();
}

uint64_t sub_100635490(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x418] = v6;
  STACK[0x410] = (unint64_t)a1;
  *a1 = 1;
  return (*(uint64_t (**)(void))(a4
                              + 8LL
                              * ((((v5 ^ 0x420) - 1344)
                                * ((v7 | ((unint64_t)(v7 < v4) << 32)) != 361945438)) ^ v5)))();
}

uint64_t sub_10063553C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_BYTE *)(v7 + v9 - 0x2FD1C989B754D2A6LL) = *(_BYTE *)(v6 + v11 - 0x59725C5A866F3379LL);
  unint64_t v12 = v8 - 0x565EDC44C61D3B0CLL;
  int v13 = (v5 < v4) ^ (v12 < v4);
  BOOL v14 = v12 < v5;
  if (v13) {
    BOOL v14 = v5 < v4;
  }
  return (*(uint64_t (**)(void))(a4 + 8LL * ((89 * v14) ^ v10)))();
}

uint64_t sub_1006355D8@<X0>(unint64_t a1@<X1>, uint64_t a2@<X3>, int a3@<W8>)
{
  STACK[0x3F8] = v6;
  LODWORD(STACK[0x40C]) = v5;
  STACK[0x400] = a1;
  *(_BYTE *)(a1 + v4 - 0x70C1187E54DE1D46LL) = 0x80;
  return ((uint64_t (*)(void))(*(void *)(a2
                                        + 8LL
}

uint64_t sub_10063564C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  *(_BYTE *)(v4 + a2 + v3 + ((v2 - 1303) | 8u)) = 0;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((43 * (a2 + v3 + 136 < v5)) ^ v2)) - 4LL))();
}

uint64_t sub_100635688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1006356CC()
{
  kern_return_t v1;
  int v1 = IOMainPort(0, (mach_port_t *)&STACK[0x484]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + (((((v1 << (((v0 + 90) | 0xD2) ^ 0xFE)) & 0xDF67FDFA) + (v1 ^ 0xEFB3FEFD) != -273416451)
                               * (((v0 + 338) | 0x44A) ^ 0x643)) ^ v0)))();
}

uint64_t sub_10063573C()
{
  BOOL v2 = IOServiceMatching((const char *)(v1 - 215)) != 0LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((v2 * (v0 + 1038)) ^ v0)))();
}

uint64_t sub_1006357C0(const __CFDictionary *a1)
{
  kern_return_t MatchingServices;
  MatchingServices = IOServiceGetMatchingServices(STACK[0x484], a1, (io_iterator_t *)&STACK[0x420]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + (((((2 * MatchingServices) & 0xA74F6BA6)
                                + ((v1 - 995277209) & 0x3B52BDFD ^ MatchingServices ^ 0xD3A7B0B7) == -743983661)
                               * (3 * (v1 ^ 0x2DA) - 227)) ^ v1)))();
}

uint64_t sub_10063583C()
{
  io_object_t v1 = IOIteratorNext(STACK[0x420]);
  return ((uint64_t (*)(void))*(&off_10090DDE0
}

uint64_t sub_1006358B8@<X0>(int a1@<W8>)
{
  kern_return_t v2;
  BOOL v3;
  BOOL v2 = IOServiceOpen(a1 - 1475884137 + v1 + 396, mach_task_self_, 0, (io_connect_t *)&STACK[0x438]);
  int v3 = ((2 * v2) & 0xB757D9FA) + (v2 ^ 0xDBABECFD) == -609489667;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (((2 * v3) | (16 * v3)) ^ v1)) - 8))();
}

uint64_t sub_10063592C()
{
  int v4 = (v0 - 2009646452) & 0x77C8C6FF;
  *(_DWORD *)(v3 + 298_Block_object_dispose(va, 8) = ((2 * LODWORD(STACK[0x438])) & 0xFFF9BEEE)
                         - 1661470788
                         + (LODWORD(STACK[0x438]) ^ 0x7FFCD918 ^ v4);
  IOObjectRelease(v2);
  uint64_t v5 = IOObjectRelease(STACK[0x420]);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0
                                                    + (((*(_DWORD *)(v3 + 2988) == v1) * (((v4 - 1573) | 0x191) ^ 0x193)) ^ (v4 - 1509)))
                                          - 8))(v5);
}

uint64_t sub_1006359D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = STACK[0x410] + 2;
  LODWORD(STACK[0x5D0]) = 0;
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t *))(a4
                                                                                  + 8LL
                                                                                  * ((925
                                                                                    * ((((v5 | ((unint64_t)(v5 < 0x40DAF872) << 32)) == 1088092274) ^ ((v4 ^ 0x19) + 1)) & 1)) ^ v4)))( a1,  v6,  &STACK[0x5D0]);
}

uint64_t sub_100635A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_BYTE *)(v11 + ((2 * v4) ^ 0xD42137DFC6947C99LL) + v9) = *(_BYTE *)(v8 + a2 - 0x666B0E82716EF3ADLL);
  BOOL v12 = v6 < v5;
  if (v12 == v10 - 0x772492E911F3CAC9LL < v5) {
    BOOL v12 = v10 - 0x772492E911F3CAC9LL < v6;
  }
  return (*(uint64_t (**)(void))(a4 + 8LL * ((v12 * v7) ^ v4)))();
}

uint64_t sub_100635B04@<X0>(unint64_t a1@<X1>, void *a2@<X2>, int a3@<W8>)
{
  STACK[0x3F0] = a1;
  LODWORD(STACK[0xDA4]) = ((v3 - 1323430103) & 0x4EE1F0DE ^ (v4 + 898)) + v5;
  STACK[0x538] = 2008LL;
  STACK[0x3E8] = (unint64_t)a2;
  BOOL v6 = IOConnectCallStructMethod(a3 - 485807923, 0x22u, a2, 0x7D8uLL, a2, &STACK[0x538]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1006 * v6) ^ v3)) - 8))();
}

uint64_t sub_100635B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(void))(*(void *)(a3
                                        + 8LL * ((1671 * (LODWORD(STACK[0xDA4]) - v4 == ((v5 - 42) | 0x31C) + v3)) ^ v5))
                            - 4LL))();
}

uint64_t sub_100635BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8LL * ((116 * (v4 - 275777130 + (v3 ^ 0xBEu) == 812315914)) ^ v3)))();
}

uint64_t sub_100635C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v12 = v6 < v5;
  *(_BYTE *)(v9 + a4 - 0x7C867F77F9134FBBLL) = *(_BYTE *)(v8 + v11 - 0x6A5E5C1DD4625A80LL);
  if (v12 == v10 - 0x55A10C1ED086245ALL < v5) {
    BOOL v12 = v10 - 0x55A10C1ED086245ALL < v6;
  }
  return (*(uint64_t (**)(void))(a3 + 8LL * ((!v12 * v7) ^ v4)))();
}

uint64_t sub_100635D10@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  STACK[0x4B0] = 0x1C5F64B704023DAELL;
  int v5 = 230600693 * ((v4 - 152) ^ 0xD23C862B);
  *(_DWORD *)(v4 - 124) = (a2 ^ 0xD662F3EB ^ (v2 - 568))
                        - v5
                        - 1073771265
                        + ((((v2 + 372763757) & 0xE9C816FF) + 321917773) ^ (2 * a2) & 0xBBF4FFFE);
  unint64_t v6 = STACK[0x410];
  *(void *)(v4 - 144) = a1 + v3;
  *(void *)(v4 - 136) = v6;
  *(_DWORD *)(v4 - 15fseek(v0, 0LL, 2) = (v2 - 79) ^ v5;
  sub_10068703C((_DWORD *)(v4 - 152));
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((1563 * (*(_DWORD *)(v4 - 128) == 0)) ^ v2)))();
}

uint64_t sub_100635DE8()
{
  STACK[0x550] = 1LL;
  BOOL v1 = container_system_group_path_for_identifier(0LL, "systemgroup.com.apple.pisco.suinfo", &STACK[0x550]) == 0;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((1210 * (((v0 ^ v1 ^ (v0 - 190)) & 1) == 0)) ^ v0)) - 4))();
}

uint64_t sub_100635E40()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * ((52
                                * (((STACK[0x550] == 1) ^ (((v1 | 0x40) - 1) ^ ((v1 | 0x40) + 28))) & 1)) ^ (v1 | 0x440))))();
}

uint64_t sub_100635E80@<X0>(int a1@<W8>)
{
  int v2 = a1 | 0x10;
  size_t v3 = strlen(v1);
  BOOL v4 = malloc(((2 * v3) & 0xFFFF73AF39F7BFDALL) + (v3 ^ 0xFFFFB9D79CFBDFEDLL) + 0x462863042031LL) == 0LL;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((323 * (((((v2 ^ 0x217) - 1598634091) ^ v4) & 1) == 0)) ^ v2)))();
}

uint64_t sub_100635F10(unint64_t a1)
{
  STACK[0x3E0] = a1;
  LODWORD(STACK[0x3D0]) = umask(0);
  return ((uint64_t (*)(unint64_t))((char *)*(&off_10090DDE0
                                                             + (int)(v2 ^ 0xA0B6CE73 ^ ((((v3 + 0x462903BAEE17LL - v2) | (v2 - (v3 + 0x462903BAEE17LL))) >= 0)
                                                                                      * (((v2 + v1 + 110) | 0xF) ^ 0xE3))))
                                                   - (((_DWORD)v2 + v1) | 5u)
                                                   + 115))(STACK[0x3E0]);
}

uint64_t sub_100635FCC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  BOOL v9 = a2 < v5;
  *(_BYTE *)(v3 + a1 - 0x28AEA36D3AF6D717LL) = *(_BYTE *)(v2 + v6 - 0x798DD766DC83B6C7LL);
  if (v9 == v4 - 0x5D683F3AA3401E79LL < v5) {
    BOOL v9 = v4 - 0x5D683F3AA3401E79LL < a2;
  }
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (((4 * !v9) | (8 * !v9)) ^ v7)) - 4LL))();
}

uint64_t sub_100636070(const char *a1)
{
  STACK[0x3D8] = v1;
  strcpy((char *)&a1[v1 + 0x462863042013LL], "/Library");
  int v4 = mkdir(a1, 0x1EDu);
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((26 * (((2 * v4) & 0x6EFFB5AA) + (v4 ^ 0x377FDAD5) == ((v2 + 965) ^ 0x377FDE60))) ^ v2)))();
}

uint64_t sub_1006360EC()
{
  BOOL v1 = *__error() != 17;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((((31 * (v0 ^ 0xFC) + 1026) ^ (7 * (v0 ^ 0x43))) * v1) ^ v0)))();
}

uint64_t sub_100636140()
{
  int v2 = (const char *)STACK[0x3E0];
  *(_BYTE *)(STACK[0x3E0] + STACK[0x3D8] + (((v0 - 692) | 0x14u) ^ 0x46286304223CLL)) = 0;
  int v3 = mkdir(v2, 0x1EDu);
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((13 * (((v0 + 2138569478) & (2 * v3)) + (v3 ^ 0xBFBBFFDD) != -1078198308)) ^ v0)))();
}

uint64_t sub_1006361EC()
{
  BOOL v1 = *__error() == 17;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((v1 * (((v0 - 187494853) & 0xB2CEF5D) + 1120)) ^ (v0 - 672))))();
}

uint64_t sub_10063623C()
{
  void *v1 = 0x6975732E6373702FLL;
  *(_BYTE *)(STACK[0x3E0] + (v0 ^ 0x462863042224LL) + STACK[0x3D8]) = 0;
  STACK[0x3E0] = 0LL;
  umask(STACK[0x3D0]);
  free(v2);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)(v0 ^ 0x40)) - ((70 * (v0 ^ 0x21F) - 762) | 0xC2) + 198))();
}

uint64_t sub_1006362D4()
{
  return (*(uint64_t (**)(void))(v1 + 8LL * (((((v0 ^ 0x56D) + 44) ^ 0x6C8) * (v2 != 0)) ^ v0)))();
}

uint64_t sub_100636304()
{
  LODWORD(STACK[0x3E0]) = umask(0x12u);
  int v3 = open(v2, 289);
  return (*(uint64_t (**)(void))(v1
                              + 8LL
                              * ((((int)(((2 * v3) & 0xFF67FFFC) + (v3 ^ 0xFFB3FFFE) - 2142502910) >= 0) * (v0 - 1648)) ^ v0)))();
}

uint64_t sub_100636388()
{
  uint64_t v2 = (uint64_t (*)(void))(*(void *)(v1
                                     + 8LL
                                     * ((246 * (*__error() == ((509 * ((v0 - 870) ^ 0x337)) ^ 0x3F8))) ^ (v0 - 870)))
                         - 12LL);
  return v2();
}

uint64_t sub_1006363D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  uint64_t v11 = open_dprotected_np(v10, 801, 4, 0);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0
                                                    + (int)((127
                                                           * ((((2 * (_DWORD)v11) & 0xFB66FE68)
                                                             + ((v9 + 197) ^ v11 ^ 0x7DB37CCE)
                                                             + 38568140) >> 31)) ^ v9))
                                          - 12))(v11);
}

void sub_100636454()
{
  *(_DWORD *)(v1 + 4) = -42908;
}

uint64_t sub_100637C58@<X0>(int a1@<W3>, unsigned int a2@<W7>, int a3@<W8>)
{
  BOOL v6 = v4 + a1 < v5;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v6 * a3) ^ v3)) - 12))();
}

uint64_t sub_100638364( uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v76 = LODWORD(STACK[0x3D8]) == -555873442;
  int v77 = STACK[0x278];
  if (LODWORD(STACK[0x3D8]) == -555873442) {
    int v77 = STACK[0x258];
  }
  LODWORD(STACK[0x278]) = v77;
  int v78 = STACK[0x3B0];
  if (v76) {
    int v78 = STACK[0x3A8];
  }
  LODWORD(STACK[0x2D0]) = v78;
  int v79 = STACK[0x400];
  if (v76) {
    int v79 = STACK[0x3E8];
  }
  LODWORD(STACK[0x2CC]) = v79;
  LODWORD(STACK[0x3B0]) = a69 ^ 0xB965EFFF;
  int v80 = STACK[0x29C];
  if ((STACK[0x390] & 2) == 0) {
    int v80 = STACK[0x218];
  }
  HIDWORD(a44) = v80;
  int v81 = STACK[0x2B0];
  if ((STACK[0x390] & 2) == 0) {
    int v81 = STACK[0x380];
  }
  HIDWORD(a4_Block_object_dispose(va, 8) = v81;
  LODWORD(STACK[0x284]) = HIDWORD(a61) ^ 0x146057A1;
  LODWORD(STACK[0x31C]) = LODWORD(STACK[0x318]) ^ 0xEFF9F165;
  LODWORD(STACK[0x410]) = a59 & 0x2DC91650;
  LODWORD(STACK[0x380]) = HIDWORD(a59) ^ a72;
  LODWORD(STACK[0x258]) = LODWORD(STACK[0x2B4]) ^ 0xAFCFAAAA;
  LODWORD(STACK[0x3E8]) = HIDWORD(a61) ^ 0x289AC646;
  unint64_t v82 = STACK[0x568];
  STACK[0x400] = (v75 + 1161619604) & 0xBAC313BF;
  unint64_t v83 = STACK[0x400] - 1853951253 + v73 + ((unint64_t)(v73 < v74) << 32);
  unint64_t v84 = *(void *)(v82 + 8 * v83) ^ 0xAEAEAEAEAEAEAEAELL;
  uint64_t v85 = 0x5F3D51B5D321F3ADLL * v84 - ((0x3E7AA36BA643E75ALL * v84) & 0x3673074E30BF6360LL) + 0x1B3983A7185FB1B0LL;
  unint64_t v86 = ((2 * ((v72 ^ 0xFC8A8E51C8DCD17ALL ^ v85) + v83)) & 0xB97B7FFF1FDED772LL)
      + (((v72 ^ 0xFC8A8E51C8DCD17ALL ^ v85) + v83) ^ 0xDCBDBFFF8FEF6BB9LL);
  unint64_t v87 = v86
      + (((v86 + 0x2342400070109447LL) >> 32) ^ 0x86060000212C8882LL)
      - (((v86 + 0x2342400070109447LL) >> 31) & 0x1BDA6EEFALL);
  unint64_t v88 = v87
      + (((v87 - 0x62C3BFFFB11BF43BLL) >> 16) ^ 0xFBFFAFFFF7F3FDE5LL)
      + (((v87 - 0x62C3BFFFB11BF43BLL) >> 15) & 0x15FFFEFE7FBCALL);
  unint64_t v89 = v88
      + (((v88 - 0x5EC36FFFA90FF220LL) >> 8) ^ 0x100C0201206024CLL)
      - (((v88 - 0x5EC36FFFA90FF220LL) >> 7) & 0x1FE7FBFDBF3FB66LL)
      + 2;
  uint64_t v90 = v89 - ((2 * (_DWORD)v89 - 1982589148) & 0xE22FAEDE);
  unint64_t v91 = v89 - ((2 * v89 - 0x88521B6048F7C1CLL) & 0xF3897E842C8CFFB2LL) - 0xA7DD198EC013E35LL;
  unint64_t v92 = ((2 * v91) ^ 0xF3897E842C8CFFB2LL)
      + 0x73768304A552B130LL
      - 2 * (((2 * v91) ^ 0xF3897E842C8CFFB2LL) & 0x73768304A552B138LL ^ (2 * v91) & 8);
  unint64_t v93 = (v91 ^ 0xA2452006AE8849B9LL)
      + (v92 & 0xB7033E89719C6CC0LL ^ 0x64FD554B9EF79F5DLL)
      + ((2 * v92) & 0x2E062C1263085880LL ^ 0x2604040042004000LL)
      - 0x57FF574BBFE7BF5DLL;
  unint64_t v94 = v93 - 2 * (v93 & 0x3EE079C6B32D6E3ELL ^ (v91 ^ 0xA2452006AE8849B9LL) & 0x3E) - 0x411F86394CD29200LL;
  unint64_t v95 = ((0x5F3D51B5D321F3ADLL * v84 - ((0xBE7AA36BA643E75ALL * v84) & 0xB9B7990593F23D48LL) + 0x5CDBCC82C9F91EA4LL) ^ 0xE23BB5447AD470A4LL ^ v94)
      + v83;
  unint64_t v96 = ((2 * v95) & 0xF3D9BFFA79EBB0D4LL)
      + (v95 ^ 0x79ECDFFD3CF5D86ALL)
      + (((((2 * v95) & 0xF3D9BFFA79EBB0D4LL) + (v95 ^ 0x79ECDFFD3CF5D86ALL) - 0x79ECDFFD3CF5D86ALL) >> 32) ^ 0x180844090A000102LL)
      - (((((2 * v95) & 0xF3D9BFFA79EBB0D4LL) + (v95 ^ 0x79ECDFFD3CF5D86ALL) - 0x79ECDFFD3CF5D86ALL) >> 31) & 0x1EBFFFDFALL);
  unint64_t v97 = v96
      + (((v96 + 0x6E0ADBF9B90A2694LL) >> 16) ^ 0x7F7BFFDFB5FFFB63LL)
      + (((v96 + 0x6E0ADBF9B90A2694LL) >> 15) & 0x1FFBF6BFFF6C6LL);
  unint64_t v98 = v97
      + (((v97 - 0x117123E5FCF5D4CFLL) >> 8) ^ 0x81306CB0B0C098CCLL)
      - (((v97 - 0x117123E5FCF5D4CFLL) >> 7) & 0x19F269E9E7ECE66LL)
      + 2;
  uint64_t v99 = v98 - ((2 * v98 + 0x48C35BE587CBFE46LL) & 0x4B24B67B8DAF8472LL) + 0x49F409308ABDC15CLL;
  unint64_t v100 = ((2 * ((v85 ^ 0x3EABD89ADE887389LL ^ v99) + v83)) & 0xFEDFEAFF3FBFF5FELL)
       + (((v85 ^ 0x3EABD89ADE887389LL ^ v99) + v83) ^ 0xFF6FF57F9FDFFAFFLL);
  unint64_t v101 = ((v100 + 0x900A8060200501LL) >> 31) & 0x64DBFCFA;
  unint64_t v102 = v100 + (((v100 + 0x900A8060200501LL) >> 32) ^ 0xC090A00CD920182LL) + 1;
  unint64_t v103 = v102 - v101 - 2 * ((v102 - v101 + 0x87007F928E037ELL) & 0x260732FE9DA1477LL ^ v102 & 1) - 0x9188C508397E80CLL;
  uint64_t v104 = 2
       * ((((v103 >> 16) ^ 0x260732FE9DALL) & (v103 ^ 0x732FE9DA1476LL))
        - ((2 * (((v103 >> 16) ^ 0x260732FE9DALL) & (v103 ^ 0x732FE9DA1476LL))) & 0x1F568BBC37A5ELL))
       + 0x723BF568BBC37A5ELL;
  unint64_t v105 = (v103 ^ 0x260714F9AF5FDACLL ^ (v103 >> 16))
       + (v104 ^ 0x2F564A91641880A1LL)
       - 0x5D6DBFF9DFDBFAFFLL
       + ((2 * v104) & 0xBADB7FF3BFB7F5FCLL ^ 0xA0536AD13786F4BCLL);
  unint64_t v106 = ((2 * v105) & 0xE7DF9F2AEFAFCFCALL)
       + (v105 ^ 0xF3EFCF9577D7E7E5LL)
       + (((((2 * v105) & 0xE7DF9F2AEFAFCFCALL) + (v105 ^ 0xF3EFCF9577D7E7E5LL) + 0xC10306A8828181BLL) >> 8) ^ 0x190E4E04028133A2LL)
       - (((((2 * v105) & 0xE7DF9F2AEFAFCFCALL) + (v105 ^ 0xF3EFCF9577D7E7E5LL) + 0xC10306A8828181BLL) >> 7) & 0x1E363F7FAFD98BALL)
       + 1;
  return ((uint64_t (*)(uint64_t, uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + (((v73 & 0xFFFFFFFE) != v74 - 1) | (2 * ((v73 & 0xFFFFFFFE) != v74 - 1)) | v75)))( 4001086759LL,  1839721112LL,  a3 ^ v94 ^ v99 ^ 0xA579CCF3 ^ ((_DWORD)v106 - ((2 * (_DWORD)v106 - 293166480) & 0xA106C194)
                                                                    - 943279614),
           v106,
           1206607342LL,
           v99,
           v90,
           0x73768304A552B130LL,
           a9,
           a10,
           a11,
           a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_100638C9C()
{
}

uint64_t sub_100638CA4( uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,uint64_t a63)
{
  int v223 = a61 - 1798531052 + a62;
  int v74 = a60 - a65;
  int v75 = LODWORD(STACK[0x410]) - LODWORD(STACK[0x288]);
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x204]) + LODWORD(STACK[0x3E8]);
  unint64_t v76 = (((unint64_t)(a4 + 0x66DA2A0BABA6D18ALL) >> 30) ^ 0xEB9FAB5B3E3FF639LL)
      + a4
      + (((unint64_t)(a4 + 0x66DA2A0BABA6D18ALL) >> 29) & 0x67C7FEC72LL);
  unint64_t v77 = (((v76 + 0x7B3A7EB06D66DB51LL) >> 12) ^ 0xFBF3F6EAEEE9EEEBLL)
      + v76
      + (((v76 + 0x7B3A7EB06D66DB51LL) >> 11) & 0x7EDD5DDD3DDD6LL);
  unint64_t v78 = v77
      + (((v77 + 0x7F4687C57E7CEC66LL) >> 7) ^ 0x4422200095CE001CLL)
      - (((v77 + 0x7F4687C57E7CEC66LL) >> 6) & 0x3BBBFFED463FFC6LL)
      + 1;
  uint64_t v79 = v78 - ((2 * v78 + 0x3648CF89D15DD892LL) & 0x30E892E6DE154A50LL) + 0x5398B13857B99171LL;
  unint64_t v80 = ((2 * ((v79 ^ 0x187449736F0AA528LL) + 0x288AB139EA2E5744LL)) & 0xFFE79D657A76D79ELL)
      + (((v79 ^ 0x187449736F0AA528LL) + 0x288AB139EA2E5744LL) ^ 0x7FF3CEB2BD3B6BCFLL);
  unint64_t v81 = v80
      + (((v80 - 0x7FF3CEB2BD3B6BCFLL) >> 24) ^ 0x405A000030210000LL)
      - (((v80 - 0x7FF3CEB2BD3B6BCFLL) >> 23) & 0x1FF9FBDFFFELL);
  unint64_t v82 = v81
      + (((v81 + 0x3FB2314D12A39431LL) >> 13) ^ 0xA01B4428023E4134LL)
      - (((v81 + 0x3FB2314D12A39431LL) >> 12) & 0x977AFFB837D96LL);
  unint64_t v83 = v82
      + (((v82 - 0x606912DAEF9AAD03LL) >> 5) ^ 0x60400186400C0208LL)
      - (((v82 - 0x606912DAEF9AAD03LL) >> 4) & 0xF7FFCF37FE7FBEELL)
      + 3;
  unint64_t v84 = v83 - ((2 * v83 + 0x7EADD73DA0B2A1E4LL) & 0x610FB80BEEADB662LL) + 0x6FDEC7A4C7B02C23LL;
  unint64_t v85 = (v84 ^ 0x1896D254F4F6CE11LL)
      + ((v84 >> 31) ^ 0x842B1008300DE827LL)
      + ((v84 >> 30) & 0x3FDBF66E2LL ^ 0xFFFFFFFF9FE4BFBDLL)
      + 0x7BD4EFF7FEDFB373LL;
  unint64_t v86 = (((((2 * v85) & 0xF5E47975EBEBFF34LL) + (v85 ^ 0x7AF23CBAF5F5FF9ALL) - 0x7AF23CBAF5F5FF9ALL) >> 11) ^ 0x95FFCFFAFFCF92EBLL)
      + ((2 * v85) & 0xF5E47975EBEBFF34LL)
      + (v85 ^ 0x7AF23CBAF5F5FF9ALL)
      + (((((2 * v85) & 0xF5E47975EBEBFF34LL) + (v85 ^ 0x7AF23CBAF5F5FF9ALL) - 0x7AF23CBAF5F5FF9ALL) >> 10) & 0x3F9FF5FF9F25D6LL);
  unint64_t v87 = (((v86 - 0x10F20CB5F5C59285LL) >> 4) ^ 0x771FDFBF7ECDFFBBLL)
      + v86
      + (((v86 - 0x10F20CB5F5C59285LL) >> 3) & 0xE3FBF7EFD9BFF76LL);
  uint64_t v88 = v87 - 2 * ((v87 + 0x77EE138A8B6C6DC0LL) & 0x588697CDE0CADA3FLL ^ v87 & 0x14) - 0x2F8B54A793C8B815LL;
  uint64_t v89 = ((2 * ((v88 ^ 0x588697CDE0CADA2BLL) + 0x1E4A8A832E7300A6LL)) & 0x7FBDD937F6D7CBD6LL)
      + (((v88 ^ 0x588697CDE0CADA2BLL) + 0x1E4A8A832E7300A6LL) ^ 0x3FDEEC9BFB6BE5EBLL);
  unint64_t v90 = v89
  unint64_t v91 = v90
      + (((v90 - 0x4623EE25FDEF6ACDLL) >> 15) ^ 0x777FE77FDF1BBCBBLL)
      + (((v90 - 0x4623EE25FDEF6ACDLL) >> 14) & 0x3CEFFBE377976LL);
  unint64_t v92 = v91
      + (((v91 + 0x425C2A5A22F4D878LL) >> 8) ^ 0x7FBFFB7DDFF0FEFFLL)
      + (((v91 + 0x425C2A5A22F4D878LL) >> 7) & 0x17FF6FBBFE1FDFELL)
      + 1;
  unint64_t v93 = v92 - ((2 * v92 - 0x7AC7A24779F84D10LL) & 0xD79C9299AF73AEBCLL) + 0x2E6A78291ABDB0D6LL;
  unint64_t v94 = ((2 * ((v93 ^ 0x6BCE494CD7B9D75ELL) + 0x2C1E97BC5C429E81LL)) & 0xD3F7F87ABFFFEFFELL)
      + (((v93 ^ 0x6BCE494CD7B9D75ELL) + 0x2C1E97BC5C429E81LL) ^ 0xE9FBFC3D5FFFF7FFLL);
  unint64_t v95 = (((v94 + 0x160403C2A0000801LL) >> 27) ^ 0xE1E9DBE90D6FFBCALL)
      + v94
      + (((v94 + 0x160403C2A0000801LL) >> 26) & 0x121ADFF794LL);
  unint64_t v96 = (((v95 + 0x341A27D992900C37LL) >> 15) ^ 0xDFCDE7FFEFB9F7D3LL)
      + v95
      + (((v95 + 0x341A27D992900C37LL) >> 14) & 0x3CFFFDF73EFA6LL);
  unint64_t v97 = (((v96 + 0x544C3FD9A2D61464LL) >> 8) ^ 0x8D7D52DBFFD7DDFELL)
      + v96
      + (((v96 + 0x544C3FD9A2D61464LL) >> 7) & 0xFAA5B7FFAFBBFCLL);
  unint64_t v98 = v97 - ((2 * v97 - 0x72622604BA039334LL) & 0x9F4C218AA5959B8ELL) + 0x1674FDC2F5C9042DLL;
  unint64_t v99 = (v98 ^ 0xD3B79562FEB51D57LL)
      + ((v98 >> 30) ^ 0x3FDCBFCCA5AB8B76LL)
      + ((v98 >> 29) & 0x7D6EBBDFALL ^ 0x694A8A912LL)
      - 0x3FDCBFCFEB75DEFDLL;
  unint64_t v100 = (((((2 * v99) & 0x8397FBD87ED9ACF6LL) + (v99 ^ 0x41CBFDEC3F6CD67BLL) - 0x41CBFDEC3F6CD67BLL) >> 8) ^ 0x6FFEFAFBEEBFFFFELL)
       + ((2 * v99) & 0x8397FBD87ED9ACF6LL)
       + (v99 ^ 0x41CBFDEC3F6CD67BLL)
       + (((((2 * v99) & 0x8397FBD87ED9ACF6LL) + (v99 ^ 0x41CBFDEC3F6CD67BLL) - 0x41CBFDEC3F6CD67BLL) >> 7) & 0x1FDF5F7DD7FFFFCLL);
  unint64_t v101 = v100
       + (((v100 + 0x4E350717D1D32987LL) >> 8) ^ 0x9211AC1340000058LL)
       - (((v100 + 0x4E350717D1D32987LL) >> 7) & 0x1DCA7D97FFFFF4ELL)
       + 1;
  uint64_t v102 = v101 - ((2 * v101 + 0x7846B60923A6525CLL) & 0x7233D52C62C54BA4LL) + 0x753D459AC335CF00LL;
  unint64_t v103 = ((2 * ((v102 ^ 0xB919EA963162A5D2LL) + 0x75D572E7727DD82LL)) & 0x7C87BEFFD7FBFBF4LL)
       + (((v102 ^ 0xB919EA963162A5D2LL) + 0x75D572E7727DD82LL) ^ 0x3E43DF7FEBFDFDFALL);
  unint64_t v104 = v103
       + (((v103 - 0x3E43DF7FEBFDFDFALL) >> 30) ^ 0xC00912410148A080LL)
       - (((v103 - 0x3E43DF7FEBFDFDFALL) >> 29) & 0x5FD6EBEFELL);
  unint64_t v105 = v104
       + (((v104 + 0x1B30E3F12B96186LL) >> 9) ^ 0xC20114113314A890LL)
       - (((v104 + 0x1B30E3F12B96186LL) >> 8) & 0xFDD7DD99D6AEDELL);
  unint64_t v106 = v105
       + (((v105 + 0x3FB1FA2DDFA4B8F6LL) >> 7) ^ 0x7F6B5F34B7FE7F7BLL)
       + (((v105 + 0x3FB1FA2DDFA4B8F6LL) >> 6) & 0x2D6BE696FFCFEF6LL)
       + 2;
  uint64_t v107 = v106 - ((2 * v106 + 0x8D35F24F4C72F2LL) & 0x2AF839AFF00E8872LL) + 0x55C2B7D11FAD7DB2LL;
  unint64_t v108 = ((2 * ((v107 ^ 0x957C1CD7F8074439LL) + 0x20226CA5EA003BB7LL)) & 0xDEEC77F5FFDF94FELL)
       + (((v107 ^ 0x957C1CD7F8074439LL) + 0x20226CA5EA003BB7LL) ^ 0xEF763BFAFFEFCA7FLL);
  unint64_t v109 = v108
       + (((v108 + 0x1089C40500103581LL) >> 27) ^ 0x208006050806053ALL)
       - (((v108 + 0x1089C40500103581LL) >> 26) & 0x35EFF3F58ALL);
  unint64_t v110 = v109
       + (((v109 - 0xFF6420007F5CFB9LL) >> 13) ^ 0x6D6E5F9DCD7BEE8FLL)
       + (((v109 - 0xFF6420007F5CFB9LL) >> 12) & 0xCBF3B9AF7DD1ELL);
  unint64_t v111 = v110
       + (((v110 - 0x7D64A19DD571BE48LL) >> 4) ^ 0x737DEBBDEBD77DEFLL)
       + (((v110 - 0x7D64A19DD571BE48LL) >> 3) & 0x6FBD77BD7AEFBDELL)
       + 1;
  unint64_t v112 = v111 - ((2 * v111 + 0x1E3AE5487D6D8790LL) & 0x43706844B4B43964LL) - 0x4F2A593966EF1F86LL;
  unint64_t v113 = (v112 ^ 0xD3DF966A25B0E3FDLL)
       + ((v112 >> 26) ^ 0xBF3FEDE308507774LL)
       + ((v112 >> 25) & 0x2FFF6BDBFALL ^ 0x29EF4B1112LL)
       + 0x40C01228004A1203LL;
  unint64_t v114 = ((2 * v113) & 0x5DF95FFFDF6DEB76LL)
       + (v113 ^ 0x2EFCAFFFEFB6F5BBLL)
       + (((((2 * v113) & 0x5DF95FFFDF6DEB76LL) + (v113 ^ 0x2EFCAFFFEFB6F5BBLL) - 0x2EFCAFFFEFB6F5BBLL) >> 15) ^ 0x94006410108083C0LL)
       - (((((2 * v113) & 0x5DF95FFFDF6DEB76LL) + (v113 ^ 0x2EFCAFFFEFB6F5BBLL) - 0x2EFCAFFFEFB6F5BBLL) >> 14) & 0x337DFDEFEF87ELL);
  LODWORD(v114) = v114
                + (((v114 + 0x3D02EBEFFFC88685LL) >> 6) ^ 0x2C030520)
                - (((v114 + 0x3D02EBEFFFC88685LL) >> 5) & 0xA7F9F5BE)
                + 1;
  int v115 = v102 ^ v88 ^ a3 ^ (v114 - ((2 * v114 - 1484062008) & 0xDB056F44) + 1095252230);
  unsigned int v116 = ((2 * (v115 & 7 | 0x2188040)) | 0x85A223B8) - (v115 & 7 | 0x2188040) - 1120997852;
  int v117 = v115;
  LODWORD(STACK[0x410]) = v115;
  LODWORD(v8_Block_object_dispose(va, 8) = (((v115 ^ 0x169B1CDA) + 1) ^ 3) + 2 * ((v115 ^ 0x169B1CDA) + 1) + 5;
  int v118 = (v88 & 7) - ((2 * v88) & 0xC) + 1282161806;
  if (((2 * (v115 & 7 | 0x2188040)) | 0x85A223B8) - (v115 & 7 | 0x2188040) == -2087017611) {
    int v119 = 0;
  }
  else {
    int v119 = 255;
  }
  int v120 = v118 ^ 0x4C6C3C8E;
  int v121 = (v119 << (v118 ^ 0x8E)) - ((2 * (v119 << (v118 ^ 0x8E))) & 0x19EDBE4A) + 217505573;
  if (((2 * (v115 & 7 | 0x2188040)) | 0x85A223B8) - (v115 & 7 | 0x2188040) == -2087017611) {
    char v122 = 0;
  }
  else {
    char v122 = v121 ^ 0xDA;
  }
  int v123 = STACK[0x3E0];
  if (LODWORD(STACK[0x3D8]) == -555873442) {
    int v123 = STACK[0x3D0];
  }
  int v222 = v123;
  int v220 = v75 + 1763407063;
  unsigned int v124 = v93 ^ v79 ^ v72 ^ v107;
  unsigned int v125 = v98 ^ v84 ^ v73 ^ v112;
  unsigned int v126 = (v124 & 0x7F ^ 0xFFFFFFDF) + 1268716562 + ((2 * (v124 & 0x7F)) | 0x68C1D7DE);
  int v127 = ((v126 & 0x20202EF4 ^ 0x3040471) + (v126 & 0x400010B) - 1) ^ 0x27242FEA;
  LODWORD(STACK[0x3A8]) = 33686018 * v127;
  unsigned int v128 = 16843009 * v127 - ((33686018 * v127) & 0xD7A5F07C);
  unsigned int v129 = ((v124 & 0xB92CCE80 ^ 0x1100C649) + (v124 & 0x46D33100 ^ 0x42821001) - 2) ^ 0xB77B90B5;
  unsigned int v130 = ((v121 ^ 0xB1) - ((2 * (v121 ^ 0xB1)) & 0x10A) - 106591611) ^ 0xF9674A85;
  unsigned int v131 = (v130 - ((2 * v130) & 0x128) - 1472456556) ^ 0xA8FED800;
  LODWORD(STACK[0x27C]) = 16843009 * v131 - ((33686018 * v131) & 0xD717ACD0) + 1804326504;
  int v132 = ((1426063360 * v131 - ((704643072 * v131) & 0x40000000) + 551155362) ^ 0x20D9F6A2) & (v125 ^ 0x38A62ADC);
  unsigned int v221 = v132 - ((2 * v132) & 0x84000000) + 1118489437;
  int v133 = ((v122 & (v124 ^ 0x46)) - ((2 * (v122 & (v124 ^ 0x46))) & 0xFB) + 125) ^ 0x2DAA8DD;
  LODWORD(STACK[0x270]) = ((2 * v133) | 0xC10363F8) - v133 - 1619112444;
  int v134 = v124 ^ (v124 >> 8);
  unsigned int v135 = ((2 * (v134 ^ 0x2F7500F)) & 0x96 ^ 0x14) + (v134 ^ 0xFEF2F6FE);
  int v137 = (HIWORD(v124) & 8 ^ 0x4BF67FFF) + 2 * (HIWORD(v124) & 8);
  int v138 = ((v137 - 1274445823) & (v134 ^ 0x449358B0)) + (~(2 * ((v137 - 1274445823) & (v134 ^ 0x449358B0))) | 0xF8FF60F);
  int v139 = v137 - 161891846;
  int v140 = -1907967496 - v137;
  if (v138 == -1) {
    int v141 = v139;
  }
  else {
    int v141 = v140;
  }
  unsigned int v142 = v135 + v141 - ((2 * (v135 + v141) + 2105122680) & 0xA817B500) - 1832342980;
  unsigned int v143 = v128 + 1808988222;
  int v144 = LODWORD(STACK[0x250]) ^ 0x594CECF0;
  LODWORD(STACK[0x3D0]) = v143 ^ 0x6BD2F83E;
  unsigned int v145 = ((v125 ^ BYTE1(v125)) ^ 0x8B | 0x26D4E272)
  unsigned int v136 = (HIWORD(v124) & 0xF7 ^ 0x10600C0 | 0xC04D37D0) - (HIWORD(v124) & 0xF7 ^ 0x10600C0 | 0x3FB2C82F) + 1068681263;
  int v146 = 16843009 * (v136 ^ HIBYTE(v124) ^ 0x1540EDA3 ^ v142)
       - ((33686018 * (v136 ^ HIBYTE(v124) ^ 0x1540EDA3 ^ v142)) & 0xE8BAAB6)
       + 122017115;
  LOWORD(v14fseek(v0, 0LL, 2) = (BYTE2(v125) ^ 0x4F) - ((2 * (BYTE2(v125) ^ 0x4F)) & 0xA0) + 18256;
  unsigned int v147 = ((v142 & 0x3D2D ^ 0x8543182D) + (v142 & 0x42D2 ^ 0x40044281) - 1) ^ HIBYTE(v125) ^ ((v145 & 0x26544046 ^ 0xC5020002)
                                                                                           + (v145 ^ 0x22F567FC)
                                                                                           - ((v145 ^ 0x22F567FC) & 0x4200446)) ^ 0x2610DC9F;
  int v148 = 16843009 * v147 - ((33686018 * v147) & 0x1DB2B934) + 249126042;
  LODWORD(STACK[0x218]) = v148;
  int v149 = STACK[0x260];
  unsigned int v150 = LODWORD(STACK[0x260]) ^ 7;
  int v151 = v116 ^ 0x40C99199;
  unsigned int v152 = (((v143 ^ 0x6BD2F83E) + v144) ^ 0xD3C9EEAB)
       + (v74 ^ 0x57AE2096)
       + ((2 * ((v143 ^ 0x6BD2F83E) + v144)) & 0xA793DD56);
  unsigned int v153 = v152 - ((2 * v152 + 1483481772) & 0xE8A1782C) - 1601778324;
  unsigned int v154 = LODWORD(STACK[0x2B4]) ^ 0xD3AA233B;
  unint64_t v155 = STACK[0x3F0];
  int v156 = (LODWORD(STACK[0x20C]) ^ 0xA170352C)
       + ((-118568230 * STACK[0x3F0]) & 0xDBFBAFBA)
       + ((-59284115 * STACK[0x3F0]) ^ 0xEDFDD7DD)
       + 302131235;
  int v157 = dword_100755140[(v148 ^ v146 ^ 0x99C89C1u) % 0x101]
       - ((2 * dword_100755140[(v148 ^ v146 ^ 0x99C89C1u) % 0x101] + 688316950) & 0x228C8E72)
       - 1513506748;
  int v158 = (dword_100730390[v150] ^ 0x4E224ABD) + 1;
  int v159 = LODWORD(STACK[0x238]) ^ 0x5A91A7D4;
  LODWORD(STACK[0x3CC]) = v74 ^ 0xA851DF69;
  unsigned int v160 = ((2 * ((v74 ^ 0xA851DF69) + v159)) & 0xC6BFFBAE)
       + (((v74 ^ 0xA851DF69) + v159) ^ 0xE35FFDD7)
       + (v143 ^ 0x942D07C1);
  LODWORD(STACK[0x29C]) = (2 * v160 + 960496724) & 0xA5FF0E90;
  LODWORD(STACK[0x288]) = v160 + 1872726386;
  int v161 = dword_100730DD0[v116 ^ 0x40C99199];
  HIDWORD(v16fseek(v0, 0LL, 2) = v161 ^ 0x66666666;
  LODWORD(v16fseek(v0, 0LL, 2) = v161 ^ 0xFC545100;
  unsigned int v163 = (v162 >> 7) - ((2 * (v162 >> 7)) & 0xFE4ACF72) + 2133157817;
  LODWORD(STACK[0x2A0]) = v118;
  LODWORD(STACK[0x2B4]) = (2
                         * ((v156 ^ 0xFBCFF99B)
                          + ((2 * v156) & 0xF79FF336)
                          + ((118568230 * v120) & 0xF7BEFF5E)
                          + ((59284115 * v120) ^ 0xFBDF7FAF)
                          + (v158 ^ 0xCEFDFD3C)
                          + ((2 * v158) & 0x9DFBFA78)
                          + (v163 ^ (v163 >> 6) ^ (v163 >> 2) ^ 0x3D2D2CD0))
                         + 1923420916) & 0x3E5CC358;
  unsigned int v164 = ((2 * (v150 + (LODWORD(STACK[0x2B8]) ^ 0x5A91A7D4))) & 0x7DED5F7C)
       + ((v150 + (LODWORD(STACK[0x2B8]) ^ 0x5A91A7D4)) ^ 0xBEF6AFBE);
  int v165 = LODWORD(STACK[0x258]) ^ LODWORD(STACK[0x23C]) ^ dword_100730390[v154 % 0x101];
  LODWORD(STACK[0x254]) = v148 ^ v146;
  LODWORD(STACK[0x23C]) = v165 ^ v148 ^ v146 ^ v157;
  LODWORD(STACK[0x2B8]) = (2 * (v164 + (v116 ^ 0xBF366E66)) + 34775174) & 0x76F27C52;
  LODWORD(STACK[0x3E8]) = v120;
  LODWORD(STACK[0x204]) = (-635137239 * v120 - ((877209170 * v120) & 0x652508F2) + 848462969) ^ (-635137239 * v155
                                                                                               - ((877209170 * v155) & 0x337FFBE0)
                                                                                               + 432012784);
  unsigned int v166 = (((2 * (v143 ^ 0xBC)) | 0xB0B21D46) - (v143 ^ 0xBC) - 1482231459) ^ 0x10134221;
  int v167 = ((2 * v166) | 0x7363A60C) - v166 + 1179528442;
  int v219 = v167;
  int v168 = LODWORD(STACK[0x2C0]) ^ v74 ^ v143;
  LODWORD(STACK[0x2C0]) = v129 - 1;
  int v169 = v167 ^ (v129 - 1);
  unsigned int v170 = (v168 ^ ((v143 ^ v74) >> 4) ^ 0xE37CAC85) + (v169 ^ 0xC987D305) + 1;
  LODWORD(STACK[0x3E0]) = v151;
  unsigned int v171 = v151 | ((v117 & 0xFFFFFFF8 ^ 0x8477A905) - 1) ^ 0xBAC693CC;
  int v172 = LODWORD(STACK[0x318]) ^ 0x6B7A08F2;
  unsigned int v173 = LODWORD(STACK[0x318]) ^ 0x94D14747;
  unsigned int v174 = (v171 - 1375947459 + (~(2 * v171) | 0xA4069585) + 1) ^ 0xADFCB53D;
  int v175 = (-771730529 * v174) ^ 0x6BDB6FCA;
  unsigned int v176 = (-1543461058 * v174) & 0xD7B6DF94;
  LODWORD(STACK[0x318]) = ((v124 ^ 0x237AF555) + (v170 ^ 0x4FDFE5FF) + ((2 * v170) & 0x9FBFCBFE) - 1340073471) ^ 0xFF35BBFF;
  unsigned int v177 = (v74 ^ 0x9ABDBE82) + 1698840853 + ((2 * v74) & 0x1D6 ^ 0xD2);
  int v178 = LODWORD(STACK[0x410]) ^ 0x3EB13ACD;
  unsigned int v179 = v220 ^ 0xC21C6C1F | v149;
  int v180 = STACK[0x2B0];
  LODWORD(v155) = dword_100730DD0[((v179 ^ 0xE7FDDDBA) + 402793027 + ((2 * v179) & 0xCFFBBB7A ^ 0xA)) % 0x101];
  HIDWORD(v16fseek(v0, 0LL, 2) = v155 ^ 0x66666666;
  LODWORD(v16fseek(v0, 0LL, 2) = v155 ^ 0xFC545100;
  LODWORD(v155) = (v162 >> 7) - ((2 * (v162 >> 7)) & 0x41C36D1A) + 551663245;
  int v181 = *((_DWORD *)&unk_100734990 + ((v173 % 0x101) ^ 0xBFFF6EDF) + ((2 * (v173 % 0x101)) & 0x1BE) + 1073778977);
  LODWORD(STACK[0x250]) = v153 ^ v124 ^ 0x31112A9 ^ v169 ^ 0x5E6209DC ^ ((v169 ^ 0x5E6209DC ^ v124) >> 1);
  LODWORD(STACK[0x238]) = v181 ^ LODWORD(STACK[0x24C]) ^ v155 ^ (v155 >> 2) ^ (v155 >> 6);
  LODWORD(v155) = (LODWORD(STACK[0x210]) ^ 0x91E139E4)
                - 123399993 * (((2 * v171) & 0xBD4DF77E) + (v171 ^ 0xDEA6FBBF))
                + 844848775;
  LODWORD(STACK[0x3B8]) = v150;
  LODWORD(v155) = ((123399993 * v178) ^ 0xBF7B759F)
                + ((246799986 * v178) & 0x7EF6EB3E)
                + (v155 ^ 0x7FD977FD)
                + ((2 * v155) & 0xFFB2EFFA);
  LODWORD(STACK[0x210]) = (2 * v155 + 22422728) & 0x1F59055A;
  LODWORD(STACK[0x20C]) = v155 - 799566575;
  LODWORD(STACK[0x24C]) = (2
                         * (a72
                          + a71
                          + LODWORD(STACK[0x3B0])
                          + LODWORD(STACK[0x274])
                          + v180
                          - (((2 * ((v223 ^ 0xE6967BA3) + v177)) & 0xFEB7EFF4)
                           + (((v223 ^ 0xE6967BA3) + v177) ^ 0xFF5BF7FA))
                          + ((1543461058 * v178) & 0xF667BBFA)
                          + ((771730529 * v178) ^ 0x7B33DDFD)
                          + v176
                          + v175)
                         + 704209566) & 0xF8BE4D68;
  LODWORD(STACK[0x2B0]) = (2
                         * (((((v179 ^ 7) - 2 * ((v220 ^ 0xC21C6C1F) & 0x2A4CFA68 ^ v220 & 0x20) - 1437795768) ^ v172) << 8) ^ 0xE7B5FD00)) & 0xCF11AE00;
  unsigned int v182 = (((v124 ^ 0x237AF555) - 257) ^ 0x3EAEB7B7) - 1051637687 + ((2 * ((v124 ^ 0x237AF555) - 257)) & 0x7D5D6F6E);
  int v183 = v182 % 0x101 - ((2 * (v182 % 0x101)) & 0x3F8) + 543942652;
  if ((v124 ^ 0x237AF555) <= 0x100) {
    int v183 = v124 ^ 0x31112A9;
  }
  LODWORD(STACK[0x318]) = *((_DWORD *)&unk_100734990
                          + ((((v219 ^ 0xF1FB9F06) + (LODWORD(STACK[0x2C0]) ^ 0xC783B3FC)) ^ 0xDAFB36FB)
                           + 621070597
                           + ((2 * ((v219 ^ 0xF1FB9F06) + (LODWORD(STACK[0x2C0]) ^ 0xC783B3FC))) & 0xB5F66DF6))
                          % 0x101) ^ v222 ^ dword_100730390[v183 ^ 0x206BE7FC];
  LODWORD(STACK[0x214]) = LODWORD(STACK[0x31C]) ^ LODWORD(STACK[0x208]) ^ LODWORD(STACK[0x410]);
  LODWORD(STACK[0x208]) = v146 ^ 0x925A44D8;
  unsigned int v184 = (void *)STACK[0x568];
  int v185 = *(void *)(STACK[0x568]
                   + 8LL
                   * ((*(void *)(STACK[0x568]
                                 + 8LL
                                 * ((*(void *)(STACK[0x568] + 8LL * ((*(_DWORD *)(STACK[0x568] + 8) & 1) == 0)) & 1) == 0)) & 1) == 0)) & 1;
  unsigned int v186 = (v185 ^ 0xAAFDEFFF) + 2 * v185 + 1725191208;
  STACK[0x3F8] = (STACK[0x400] - 400983947) & 0x17E687C3;
  LODWORD(STACK[0x3B0]) = v221 ^ LODWORD(STACK[0x27C]);
  unsigned int v187 = LODWORD(STACK[0x3C8]) ^ 0xDF307DC7;
  LODWORD(STACK[0x410]) = LODWORD(STACK[0x388]) ^ 0xE8755894;
  LODWORD(STACK[0x2C0]) = LODWORD(STACK[0x23C]) ^ 0x8B712336;
  BOOL v188 = v186 < 0x11D24427;
  unint64_t v189 = 0x5F3D51B5D321F3ADLL * (*v184 ^ 0xAEAEAEAEAEAEAEAELL)
       - ((0xBE7AA36BA643E75ALL * (*v184 ^ 0xAEAEAEAEAEAEAEAELL)) & (STACK[0x3F8] ^ 0xE0F026ED0FF56A9BLL))
       + 0x7078137687FAB4ADLL;
  unint64_t v190 = ((2 * (v189 ^ 0x96817D5FFAD436ADLL)) & 0x7B3FBAAE9D73BBDELL) + (v189 ^ 0xAB1EA008B46DEB42LL);
  unint64_t v191 = v190
       + (((v190 - 0x3D9FDD574EB9DDEFLL) >> 32) ^ 0x4300716941104D28LL)
       - (((v190 - 0x3D9FDD574EB9DDEFLL) >> 31) & 0x17DDF65AELL);
  unint64_t v192 = v191
       + (((v191 + 0x7F5FB13F7035D4E9LL) >> 16) ^ 0x4BB975B73FFFBD9DLL)
       + (((v191 + 0x7F5FB13F7035D4E9LL) >> 15) & 0xEB6E7FFF7B3ALL);
  unint64_t v193 = v192
       + (((v192 + 0x33A63B883036174CLL) >> 8) ^ 0x8070E822A3001906LL)
       - (((v192 + 0x33A63B883036174CLL) >> 7) & 0x11E2FBAB9FFCDF2LL)
       + 2;
  uint64_t v194 = v193 - ((2 * v193 + 0x666AA6CB1A6BFC88LL) & 0x5C38002619F7EA60LL) + 0x615153789A31F374LL;
  unint64_t v195 = (v194 ^ 0xA6260A84BCA3C90LL)
       + ((((2 * v194) ^ 0x5C38002619F7EA60LL)
         - ((2 * ((2 * v194) ^ 0x5C38002619F7EA60LL)) & 0x51722BE9E6B0C1A8LL)
         - 0x5746EA0B0CA79F2CLL) & 0x48FCC1768E639340LL ^ 0x4E073E82742B7FBELL)
       + ((2
         * (((2 * v194) ^ 0x5C38002619F7EA60LL)
          - ((2 * ((2 * v194) ^ 0x5C38002619F7EA60LL)) & 0x51722BE9E6B0C1A8LL)
          - 0x5746EA0B0CA79F2CLL)) & 0x817802ED0CC62680LL ^ 0x17002E904800080LL)
       - 0x46BF3FF6F66B7FFELL;
  uint64_t v196 = ((2 * v195) & 0x71FEEAFFB5FFF8FALL) + (v195 ^ 0x38FF757FDAFFFC7DLL);
  int v197 = v196 - ((2 * v196 + 758702214) & 0xD878EAF4) + 47769021;
  unsigned int v198 = (((2 * v197) ^ 0xD878EAF4) - ((2 * ((2 * v197) ^ 0xD878EAF4)) & 0x3D1C097C) + 512623807) & 0xFD6FFC6C ^ 0x9424340C;
  unsigned int v199 = (v198 - ((2 * v198) & 0xA0897010) - 799753975) ^ 0x527CB98B;
  unsigned int v200 = v199 - ((2 * v199) & 0x3193E3EC);
  unint64_t v201 = v196 - ((2 * v196 - 0x4CF52F63612AB2BALL) & 0xACC292DB7B7F05F8LL) - 0x50194E43F2D5D661LL;
  int v202 = (((2 * v201) ^ 0x7B7F05F8) - 2 * (((2 * v201) ^ 0x7B7F05F8) & 0x4A65A69C ^ (2 * v201) & 4) - 899307879) & 0xFD6FFC6C ^ 0x992EA424;
  unsigned int v203 = 1787818870 - (v202 | 0x6A8FF376) + (v202 | 0x95700C89);
  unint64_t v204 = ((2 * (v189 ^ 0xA6195A1B3A453651LL ^ v201)) & 0xEDADFEFD9EEAEFF0LL)
       + (v189 ^ 0xA6195A1B3A453651LL ^ v201 ^ 0xF6D6FF7ECF7577F8LL);
  unint64_t v205 = v204
       + (((v204 + 0x9290081308A8808LL) >> 32) ^ 0xAA84430008901000LL)
       - ((2 * ((v204 + 0x9290081308A8808LL) >> 32)) & 0x1EEDFDFFELL);
  unint64_t v206 = v205
       + (((v205 + 0x5EA4BD8127FA7808LL) >> 16) ^ 0x6FFEE9FF7F7BE5BFLL)
       + (((v205 + 0x5EA4BD8127FA7808LL) >> 15) & 0x1D3FEFEF7CB7ELL);
  unint64_t v207 = v206
       + (((v206 - 0x115A2C7E57816DB7LL) >> 8) ^ 0x80444040D620402LL)
       - (((v206 - 0x115A2C7E57816DB7LL) >> 7) & 0x1F777F7E53BF7FALL)
       + 2;
  unint64_t v208 = (v207 - ((2 * v207 + 0xD431EFB36391C8ALL) & 0x8A37B7FFC54C65ELL) + 0x6AF34D3D9946F174LL) ^ 0x8451BDBFFE2A632FLL;
  int v209 = v208 - ((2 * v208 + 1906076864) & 0x22282610) + 1239566696;
  uint64_t v210 = v208 - 2 * ((v208 + 0x7033E89719C6CC0LL) & 0x8D893AB146E8CB7LL ^ v208 & 0x14) - 0x40242DCB79F5069DLL;
  int v211 = (((2 * v210) ^ 0x28DD1946) - 2 * (((2 * v210) ^ 0x28DD1946) & 0x4849A23C ^ (2 * v210) & 0x30) - 934698484) & 0xFD6FFC6C ^ v210;
  unint64_t v212 = ((2 * (v189 ^ 0x78A080DD9394380ELL ^ v210)) & 0xFF3BEFAE8C3D63F2LL)
       + (v189 ^ 0x78A080DD9394380ELL ^ v210 ^ 0x7F9DF7D7461EB1F9LL);
  unint64_t v213 = v212
       + (((v212 - 0x7F9DF7D7461EB1F9LL) >> 32) ^ 0x1140202180008224LL)
       - (((v212 - 0x7F9DF7D7461EB1F9LL) >> 31) & 0xFFFEFBB6);
  unint64_t v214 = v213
       + (((v213 + 0x6F21E80739E0CBE3LL) >> 16) ^ 0xBFD776BDEDEFBFBELL)
       + (((v213 + 0x6F21E80739E0CBE3LL) >> 15) & 0xED7BDBDF7F7CLL);
  unint64_t v215 = v214
       + (((v214 - 0x50B58EB6B40EF3DBLL) >> 8) ^ 0x30040AE480E06ALL)
       - (((v214 - 0x50B58EB6B40EF3DBLL) >> 7) & 0x19FF7EA36FE3F2ALL)
       + 2;
  LODWORD(v215) = (v215 - ((2 * v215 - 824158350) & 0x78E24C56) - 1545514524) ^ 0x3C71262B;
  LODWORD(v194) = v215 - 2 * ((v215 - 1194445216) & 0x52E451AC ^ v215 & 8) - 1951234044;
  LODWORD(v204) = (((2 * v194) ^ 0xA5C8A348) - ((2 * ((2 * v194) ^ 0xA5C8A348)) & 0x5F4EED04) + 799504003) & 0xFD6FFC6C ^ 0xC081020;
  LODWORD(STACK[0x410]) ^= v197 ^ (v200 + 415887863) ^ (((2 * v209) ^ 0x22282610)
                                                      + 470778193
                                                      - 2 * (((2 * v209) ^ 0x22282610) & 0x1C0F815A ^ (2 * v209) & 0xA)) & 0xFD6FFC6C ^ v209 ^ 0x75C3E8C3 ^ (((((2 * v204) & 0x62CA18C8) - v204 - 871698405) & 0x55C3D9B0 ^ 0x11C20831) + ((((2 * v204) & 0x62CA18C8) - v204 - 871698405) & 0xAA3C264C ^ 0xA82C0209) - 2) ^ v194;
  int v216 = v215 - 2 * ((v215 + 1906076864) & 0xA8A35F0F ^ v215 & 2) + 440388557;
  if (v186 >= 0x11D24427) {
    BOOL v188 = v186 > 0x11D24428;
  }
  unsigned int v217 = (((2 * v216) ^ 0x5146BE1A) - ((2 * ((2 * v216) ^ 0x5146BE1A)) & 0xD4D878A0) + 1785478224) & 0xFD6FFC6C ^ 0x392F3440;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (int)((1568 * !v188) ^ STACK[0x400])))(v187 ^ v201 ^ v203 ^ v211 ^ 0xB5211D41 ^ (((2 * v217) | 0xD2C5D174) - v217 + 379393862) ^ v216);
}

uint64_t sub_10063B818( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, int a37, int a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LODWORD(STACK[0x274]) = a71 ^ 0x255AC46F;
  LODWORD(STACK[0x2B8]) = a60 - LODWORD(STACK[0x2B8]);
  LODWORD(STACK[0x2B4]) = LODWORD(STACK[0x250]) ^ 0xA603113B;
  LODWORD(STACK[0x328]) = LODWORD(STACK[0x318]) ^ 0x72AD6D20;
  LODWORD(STACK[0x324]) = a38 + a37 + 1263681952;
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x214]) ^ 0xB4B91BC9;
  unint64_t v73 = STACK[0x568];
  STACK[0x400] = STACK[0x3F8] ^ 0x264;
  unint64_t v74 = v71 - 1534719920LL + ((unint64_t)(v71 < 0x5B79F7B0) << 32);
  unint64_t v75 = 0x5F3D51B5D321F3ADLL * (*(void *)(v73 + 8 * v74) ^ 0xAEAEAEAEAEAEAEAELL)
      - (((*(void *)(v73 + 8 * v74) ^ 0xAEAEAEAEAEAEAEAELL) * (STACK[0x400] ^ 0x7AA36BA643E6FFLL)) & 0x19DAFBC6E9FC5C0LL)
      + 0xCED7DE374FE2E0LL;
  unint64_t v76 = ((2 * ((a3 ^ 0x1A5469CC9FECBDEDLL ^ v75) + v74)) & 0xF5B1DDFED7D7BDE8LL)
      + (((a3 ^ 0x1A5469CC9FECBDEDLL ^ v75) + v74) ^ 0xFAD8EEFF6BEBDEF4LL);
  unint64_t v77 = v76
      + (((v76 + 0x52711009414210CLL) >> 32) ^ 0x8D820290216969LL)
      - (((v76 + 0x52711009414210CLL) >> 31) & 0xDFBD2D2C);
  unint64_t v78 = v77
      + (((v77 + 0x4998EFE03F2B7A3LL) >> 16) ^ 0xFAD7AF23DF6FFFFELL)
      + (((v77 + 0x4998EFE03F2B7A3LL) >> 15) & 0x15E47BEDFFFFCLL);
  unint64_t v79 = v78
      + (((v78 + 0x9C1DFDA2482B7A5LL) >> 8) ^ 0x400622020A00A8LL)
      - (((v78 + 0x9C1DFDA2482B7A5LL) >> 7) & 0x17FF3BBFBEBFEAELL)
      + 2;
  unint64_t v80 = v79 - ((2 * v79 + 0x1303B37044F16DF6LL) & 0x93830E636F0EA3F6LL) - 0x2CBC9F1625FFF70ALL;
  int v81 = (v80 ^ 0xB78751FB)
      - 2 * (((v80 ^ 0xB78751FB) - 1194445216) & 0x7988C12B ^ (v80 ^ 0xB78751FB) & 0xA)
      - 1302923391;
  unsigned int v82 = ((2 * v81) ^ 0xF3118242) - 2 * (((2 * v81) ^ 0xF3118242) & 0x7B7A137C ^ (2 * v81) & 0x2C) + 2071597904;
  unsigned int v83 = (v82 & 0x3902EC40 ^ 0x18828811 | v82 & 0xC46D102C) - 1;
  unsigned int v84 = (v83 & 0x56A3460 ^ 0x4081620) + (v83 ^ 0xE972A858) - ((v83 ^ 0xE972A858) & 0x5FA3460);
  unint64_t v85 = (v80 ^ 0xC9C18731B78751FBLL)
      - 2
      * (((v80 ^ 0xC9C18731B78751FBLL) + 0x7033E89719C6CC0LL) & 0xAE073598B2B2B2FLL ^ (v80 ^ 0xC9C18731B78751FBLL) & 2)
      - 0x3E1C4E1D03386813LL;
  int v86 = (((2 * v85) ^ 0x1656565A) - ((2 * ((2 * v85) ^ 0x1656565A)) & 0xFB7F22A8) - 37777067) & v72 ^ 0x1446EC6C;
  unsigned int v87 = (((2 * v86) & 0x28480848) - v86 + 1774975305) ^ 0xC9BAC951;
  unsigned int v88 = ((2 * v87) & 0x90A08100) - v87;
  unint64_t v89 = ((2 * ((v75 ^ 0xA2EA487BC64C9CDLL ^ v85) + v74)) & 0x5DF6BF5FD6DFA9F2LL)
      + (((v75 ^ 0xA2EA487BC64C9CDLL ^ v85) + v74) ^ 0xAEFB5FAFEB6FD4F9LL);
  unint64_t v90 = v89
      + (((v89 + 0x5104A05014902B07LL) >> 32) ^ 0x9680188901748404LL)
      - (((v89 + 0x5104A05014902B07LL) >> 31) & 0x1FD16F7F6LL);
  unint64_t v91 = v90
      + (((v90 - 0x457B7838ECE458FDLL) >> 16) ^ 0x7FDEEF7F5E3FEDF7LL)
      + (((v90 - 0x457B7838ECE458FDLL) >> 15) & 0x1DEFEBC7FDBEELL);
  unint64_t v92 = v91
      + (((v91 + 0x3AA59847B4DBB90CLL) >> 8) ^ 0x8A1022EC03880202LL)
      - (((v91 + 0x3AA59847B4DBB90CLL) >> 7) & 0x1DFBA27F8EFFBFALL);
  uint64_t v93 = v92 + 2 - 2 * ((v92 + 0x3095755BB153B70ALL) & 0x40D2C23682D59AC6LL ^ (v92 + 2) & 4) + 0x71683792342951CALL;
  unint64_t v94 = v93 ^ 0xC0D2C23682D59AC2LL;
  LODWORD(v93) = (v93 ^ 0x82D59AC2) - 2 * (((v93 ^ 0x82D59AC2) - 1194445216) & 0x7850C6BF ^ v93 & 8) + 824114455;
  int v95 = (((2 * v93) ^ 0xF0A18D6E) - ((2 * ((2 * v93) ^ 0xF0A18D6E)) & 0x1507C82C) + 176415767) & v72 ^ 0xA54EB004;
  unsigned int v96 = (((2 * v95) | 0xD2DC0842) - v95 + 378665951) ^ 0xC1624520;
  LODWORD(v93) = (((2 * v96) & 0xB98ADDA8) - v96 + 591040811) ^ v93;
  uint64_t v97 = v94 - ((2 * v94 + 0xE067D12E338D980LL) & 0xBCABBF5855DE6F8LL) + 0x3CE89C84344B603CLL;
  LODWORD(v94) = (2 * (v94 - ((2 * v94 - 482813568) & 0x855DE6F8) + 877355068)) ^ 0x855DE6F8;
  LODWORD(v94) = (v94 - ((2 * v94) & 0xFFDDF04) - 2013335678) & v72 ^ 0x4D08EC4C;
  LODWORD(v94) = (((2 * v94) & 0xF8D65010) - v94 + 25483253) & 0xFFFFFFFC ^ v97;
  unint64_t v98 = ((2 * ((v75 ^ 0x852B8A24F5E1119CLL ^ v97) + v74)) & 0xFDB5FFFDFF3FAC4ELL)
      + (((v75 ^ 0x852B8A24F5E1119CLL ^ v97) + v74) ^ 0xFEDAFFFEFF9FD627LL);
  unint64_t v99 = v98
      + (((v98 + 0x1250001006029D9LL) >> 32) ^ 0x94862382430475A1LL)
      - (((v98 + 0x1250001006029D9LL) >> 31) & 0x179F714BCLL);
  unint64_t v100 = v99
       + (((v99 + 0x6C9EDC7EBD5BB438LL) >> 16) ^ 0x56D6B7AF9DFFFEFFLL)
       + (((v99 + 0x6C9EDC7EBD5BB438LL) >> 15) & 0x16F5F3BFFFDFELL);
  unint64_t v101 = v100
       + (((v100 + 0x15C824CF1F5BB539LL) >> 8) ^ 0xC565485000010830LL)
       - (((v100 + 0x15C824CF1F5BB539LL) >> 7) & 0x1356F5FFFFDEF9ELL)
       + 2;
  int v102 = v101 - ((2 * v101 - 1336817970) & 0x6B52C700) - 1915599129;
  unsigned int v103 = (((2 * v102) ^ 0x6B52C700) - 1299816423 + ~(2 * (((2 * v102) ^ 0x6B52C700) & 0x3286601A ^ (2 * v102) & 2))) & v72 ^ 0xA33C224E;
  int v104 = LODWORD(STACK[0x410]) ^ v81;
  int v105 = v101 - ((2 * v101 + 569258894) & 0x5146BE1A) + 966424788;
  LODWORD(STACK[0x410]) = v104 ^ v84 ^ v93 ^ 0xA04D1383 ^ (v103 - ((2 * v103) & 0x583B6C00) - 1407338607) ^ v102;
  LODWORD(v93) = (((2 * v105) ^ 0x5146BE1A)
                - 2 * (((2 * v105) ^ 0x5146BE1A) & 0x229BB92E ^ (2 * v105) & 0x20)
                - 1566852849) & v72 ^ 0x160CC4C;
  LODWORD(v93) = a1 ^ v85 ^ (v88 + 934264188) ^ v94 ^ 0x2DF2CDFE ^ (((2 * v93) & 0x9A9BC048) - v93 + 815930458) & 0xFFFFFFFC ^ v105;
  LODWORD(v93) = ((v93 & 0xA2FBE306 ^ 0xC660CF02) - ((2 * (v93 & 0xA2FBE306 ^ 0xC660CF02)) & 0x80650C04) - 1053653350) ^ 0x8533889A | (((2 * (v93 & 0x5D041CF9 ^ 0x4C041C08)) & 0x92081092) - (v93 & 0x5D041CF9 ^ 0x4C041C08) + 369285042) ^ 0x5606DB32;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
}

void sub_10063C5C8()
{
}

#error "10064025C: call analysis failed (funcsize=2382)"
#error "100640264: too big function (funcsize=0)"
void sub_1006542C8()
{
  JUMPOUT(0x100654270LL);
}

uint64_t sub_1006542D0@<X0>(uint64_t a1@<X1>, int a2@<W3>, int a3@<W8>, uint64_t a4)
{
  LODWORD(STACK[0x3E8]) = a2;
  uint64_t v4 = (a3 - 858);
  unint64_t v5 = ((unint64_t)&STACK[0x504] ^ 0x677FE9DBB639D6EFLL)
     - 0x677FE9DBB639D6EFLL
     + ((2LL * (void)&STACK[0x504]) & 0xCEFFD3B76C73ADD8LL);
  STACK[0x3F8] = ((v5 % (v4 ^ 0x137uLL)) ^ 0xFDDBFF7FEF3977F7LL)
               + 0x224008010C68819LL
               + ((2 * (v5 % (v4 ^ 0x137uLL))) & 0x6ELL);
  unint64_t v6 = STACK[0x4B0];
  STACK[0x3E0] = STACK[0x4B0];
  int v7 = (uint64_t (*)(void))(*(void *)(a1
                                     + 8LL
                                     * (int)((1557
                                            * ((((v4 ^ 0x11B) + 1539158674) ^ (183
  STACK[0x410] = STACK[0x4D8];
  STACK[0x3F0] = (unint64_t)&a4 + v6 - 0x1C5F64B7040237CELL;
  return v7();
}

uint64_t sub_100654424( int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int32x4_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v23 = 4 * v13;
  uint64_t v24 = v18 + 4 * v13;
  uint64_t v25 = v13 + 4;
  v22.i32[0] = *(_DWORD *)(v18 + (v23 | 4));
  v22.i32[1] = *(_DWORD *)(v18 + (v23 | 8));
  v22.i32[2] = *(_DWORD *)(v18 + (v23 | 0xC));
  int8x16_t v26 = vextq_s8(a1, v22, 0xCuLL);
  int8x16_t v27 = v22;
  v27.i32[3] = *(_DWORD *)(v18 + 4 * v25);
  int8x16_t v28 = vandq_s8(v26, a8);
  int32x4_t v29 = (int32x4_t)veorq_s8(vandq_s8(v27, a2), a3);
  int8x16_t v30 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v29, v29), a4), v29), a5);
  int32x4_t v31 = (int32x4_t)veorq_s8(vorrq_s8(v30, v28), a6);
  int32x4_t v32 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v31, a7), vandq_s8(v30, v19));
  v33.i32[0] = *(_DWORD *)(v16 + 4LL * ((*(_DWORD *)(v18 + (v23 | 4)) & 1) == 0));
  v33.i32[1] = *(_DWORD *)(v16 + 4 * (*(_DWORD *)(v18 + (v23 | 8)) & v15 ^ 1LL));
  v33.i32[2] = *(_DWORD *)(v16 + 4 * (~*(_DWORD *)(v18 + (v23 | 0xC)) & 1LL));
  v33.i32[3] = *(_DWORD *)(v16 + 4 * (~v27.i32[3] & 1LL));
  *(int8x16_t *)uint64_t v24 = veorq_s8( veorq_s8(veorq_s8(*(int8x16_t *)(v24 + 1588), v33), v21),  (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v31, vaddq_s32(v32, v32)), v20), 1uLL));
  return (*(uint64_t (**)(void))(a13 + 8LL * (((v25 != 224) * v17) ^ v14)))();
}

uint64_t sub_10065451C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>)
{
  uint64_t v8 = (_DWORD *)(v5 + 4 * (v4 + v6));
  int v9 = ((2 * (*v8 & 0x7FFFFFFE ^ 0x5EE5332E)) | 0x4BAF96A8) - (*v8 & 0x7FFFFFFE ^ 0x5EE5332E) - 634899284;
  *(_DWORD *)(v5 + 4 * (v4 + ((a3 - 1845293210) | 0x48048100u)) - 0x567995C48LL) = v8[396] ^ *(_DWORD *)(v7 - 184 + 4LL * ((*v8 & 1) == 0)) ^ ((((v9 | v3 & 0x80000000) ^ 0x666F9D80) - 2 * (((v9 | v3 & 0x80000000) ^ 0x666F9D80) & 0x1528143C ^ v9 & 0xC) - 1792535503) >> 1) ^ 0x5C69BEF3;
  return (*(uint64_t (**)(void))(a1 + 8LL * ((76 * (v4 + 1 != a2 + 3)) | a3)))();
}

uint64_t sub_100654608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  signed int v8 = 28 * (v6 ^ 0xDA079121);
  int v9 = &flt_1009BDF40;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(v9);
  int32x4_t v11 = vdupq_n_s32(0x133C166Bu);
  v12.i64[0] = 0x8000000080000000LL;
  v12.i64[1] = 0x8000000080000000LL;
  v13.i64[0] = 0x8000000080000000LL;
  v13.i64[1] = 0x8000000080000000LL;
  v7.i64[0] = *(void *)&dword_1009BDF44;
  v7.i32[2] = dword_1009BDF4C;
  int8x16_t v14 = vextq_s8(v10, v7, 0xCuLL);
  int8x16_t v15 = v7;
  v15.i32[3] = dword_1009BDF50;
  int8x16_t v16 = (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( (int8x16_t)vsubq_s32(vdupq_n_s32(0x2E313CA7u), (int32x4_t)vorrq_s8(v14, v12)),  (int8x16_t)vdupq_n_s32(0xEF21B028)),  vdupq_n_s32(0xD31C587u));
  int8x16_t v17 = veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x4D3F06C6u));
  int32x4_t v18 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8(v17, (int8x16_t)vdupq_n_s32(0xECC3E994)),  (int32x4_t)vorrq_s8(v17, (int8x16_t)v11)),  v11),  (int8x16_t)vdupq_n_s32(0xBCA18AA8));
  v19.i32[0] = *(_DWORD *)(v5 + 4LL * ((dword_1009BDF44 & 1) == 0));
  v19.i32[1] = *(_DWORD *)(v5 + 4 * (unk_1009BDF48 & ((v8 - 839629145) & 0x320BB7FC ^ 0x321u) ^ 1LL));
  v19.i32[2] = *(_DWORD *)(v5 + 4 * (~dword_1009BDF4C & 1LL));
  v19.i32[3] = *(_DWORD *)(v5 + 4LL * ((dword_1009BDF50 & 1) == 0));
  *(int8x16_t *)&flt_1009BDF40 = veorq_s8( veorq_s8( veorq_s8((int8x16_t)xmmword_1009BDBB4, v19),  (int8x16_t)vdupq_n_s32(0x381401A3u)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8((int8x16_t)v18, vandq_s8(v16, v13)),  (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v18, v18),  (int8x16_t)vdupq_n_s32(0xBBA6D520))),  vdupq_n_s32(0x5DD36A90u)),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a5 + 8LL * v8) - 4LL))();
}

void sub_1006547B8()
{
}

uint64_t sub_1006547C4@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  unsigned int v4 = (((((*v2 & 0x7FFFFFFE ^ 0xB516D703) << ((3 * (((a2 + 65) | 0xE) ^ 0x4A)) ^ 0x6E)) | 0x57A017A0)
       - (*v2 & 0x7FFFFFFE ^ 0xB516D703)) & 0xFFFFFFFE)
     - 735054800;
  v2[623] = v2[396] ^ *(_DWORD *)(v3 - 184 + 4LL * ((*v2 & 1) == 0)) ^ (((v4 ^ 0x839BB928 | v2[623] & 0x80000000)
                                                                       - 2
                                                                       * ((v4 ^ 0x839BB928) & 0x3C849DD6 ^ v4 & 0x10)
                                                                       - 1132159545) >> 1) ^ 0x48BFFA08;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((152 * (LODWORD(STACK[0x4E4]) > 0x26F)) ^ a2)) - 8LL))();
}

uint64_t sub_1006548A4()
{
  LODWORD(STACK[0x4E4]) = 0;
  int v3 = v0;
  int v4 = v0 + 1787044346;
  int v5 = LODWORD(STACK[0x4E4])++;
  *(_DWORD *)(v1 + 2984) = v5 + 1227344547;
  int v6 = dword_1009BDBB0;
  unint64_t v7 = 516615401 * (((~(v2 - 152) | 0x3E25FA4912891144LL) + ((v2 - 152) | 0xC1DA05B6ED76EEBBLL)) ^ 0x49668DCD9E15E888LL);
  *(void *)(v2 - 120) = v7 + 2218358041u;
  *(_DWORD *)(v2 - 11fseek(v0, 0LL, 2) = (v3 - 185257448) ^ v7;
  *(_DWORD *)(v2 - 10_Block_object_dispose(va, 8) = v7 + v4 - 45;
  *(_DWORD *)(v2 - 12_Block_object_dispose(va, 8) = v7 ^ v4 ^ 0xC;
  *(_DWORD *)(v2 - 15fseek(v0, 0LL, 2) = v7 + 1;
  *(_DWORD *)(v2 - 14_Block_object_dispose(va, 8) = v4 - v7;
  *(void *)(v2 - 136) = (v6 + 1168588099) ^ v7;
  uint64_t v8 = sub_1005587BC(v2 - 152);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + *(int *)(v2 - 144)) - 12))(v8);
}

void sub_1006549AC()
{
  if (v0 >= v1) {
    int v2 = dword_1009BDBB0 + 1;
  }
  else {
    int v2 = 1049769942;
  }
  dword_1009BDBB0 = v2;
  JUMPOUT(0x100654B10LL);
}

uint64_t sub_100654B94(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8LL
                              * (((v3 + 8 == a3) * (((v4 - 1992928422) & 0x76C9AEFF) + 21 * (v4 ^ 0x41D) - 1532)) ^ v4)))();
}

uint64_t sub_100654BE0(uint64_t a1)
{
  *(void *)(v3 - 184) = 0x8FF5043416FDB4EBLL;
  LODWORD(STACK[0x4E4]) = dword_1009BDBA8 - 1227344546;
  uint64_t v4 = dword_1009BDBB0;
  unint64_t v5 = 1856021207 * ((v3 - 152 + v2 - 2 * ((v3 - 152) & v2)) ^ 0xDD86721C725D88F9LL);
  *(_DWORD *)(v3 - 140) = v1 - 1229013842 + v5;
  *(void *)(v3 - 136) = v4 - v5;
  *(void *)(v3 - 12_Block_object_dispose(va, 8) = v5 ^ a1;
  *(_DWORD *)(v3 - 120) = v5 + v1 + 1123495930;
  *(_DWORD *)(v3 - 116) = v5;
  *(_DWORD *)(v3 - 14_Block_object_dispose(va, 8) = v5 ^ (v1 - 1229013842) ^ 7;
  *(_DWORD *)(v3 - 144) = (v1 - 1229013723) ^ v5;
  uint64_t v6 = sub_100686C70(v3 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_10090DDE0 + *(int *)(v3 - 152)))(v6);
}

uint64_t sub_100654CB0()
{
  LODWORD(STACK[0x398]) = v1;
  int v3 = (v2 - 1647) | 0x51E;
  STACK[0x3D8] = (unint64_t)malloc(STACK[0x388]);
  uint32_t v4 = arc4random();
  unsigned int v5 = v4 + 492660219 + v3 - ((2 * v4) & 0x3ABACBF6) - 1310;
  LODWORD(xmmword_1009BDBB4) = v5;
  int v6 = v5 ^ 0x1D5D65FB ^ (v5 >> 30);
  int v7 = (1812433253 * v6) ^ 0x3FCDF6FF;
  int v8 = (v6 * ((v3 - 2090004929) & 0x7C92EEE6 ^ 0x580F108E)) & 0x7F9BEDFE;
  *(_DWORD *)(v0 + 4) = v7 + v8 - 577802499 - ((2 * (v7 + v8) - 1067183612) & 0x3ABACBF6);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + (v3 ^ 0x5C)) - 8))(1259726204LL);
}

void sub_100654DE0()
{
}

uint64_t sub_100654DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v5);
  v7.i64[0] = 0x8000000080000000LL;
  v7.i64[1] = 0x8000000080000000LL;
  return sub_100654424( v6,  (int8x16_t)vdupq_n_s32(0x7FFFFFFEu),  (int8x16_t)vdupq_n_s32(0x5EE5332Eu),  (int8x16_t)vdupq_n_s32(0x4BAF96A8u),  vdupq_n_s32(0xDA2834AC),  (int8x16_t)vdupq_n_s32(0x666F9D80u),  (int8x16_t)vdupq_n_s32(0x1528143Du),  v7,  a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_100655740()
{
  STACK[0x508] = v0;
  STACK[0x4C0] = STACK[0x3D8];
  return ((uint64_t (*)(void))STACK[0x370])();
}

uint64_t sub_100655754()
{
  int v0 = 131 * (LODWORD(STACK[0x40C]) ^ 0x66A);
  free((void *)STACK[0x378]);
  LODWORD(STACK[0x400]) = STACK[0x43C];
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((LODWORD(STACK[0x400]) == 0) * (((v0 - 653) | 0x100) ^ 0x4DD)) ^ v0))
                            - 8))();
}

void sub_1006557F4()
{
  LODWORD(STACK[0x400]) = 0;
  LODWORD(STACK[0x5E0]) = STACK[0x44C];
  STACK[0x5D8] = STACK[0x390];
  STACK[0x4B0] = STACK[0x3A0];
  CFRelease((CFTypeRef)STACK[0x3B0]);
  JUMPOUT(0x100655858LL);
}

uint64_t sub_1006558B8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (((a1 == (v1 ^ 0x3CB ^ (v3 - 175))) * ((v1 - 491438995) & 0x1D4AC6FF ^ 0x6EF)) | v1)))();
}

uint64_t sub_100655904()
{
  BOOL v1 = malloc(0x19uLL) == 0LL;
}

uint64_t sub_100655954(_BYTE *a1)
{
  STACK[0x3A8] = v4;
  STACK[0x3C0] = v2;
  int v5 = (v1 - 1075) | 0x400;
  int v6 = *(_DWORD *)(qword_1009C72B8 + ((v5 + 532528418) & dword_1009C74C0));
  unsigned int v7 = ((STACK[0x5D8] ^ v6) & 0x7FFFFFFF) * ((v5 ^ 0x2E) - 1263680679);
  unint64_t v8 = -1263679611 * (v7 ^ HIWORD(v7));
  unint64_t v9 = -1263679611
     * ((-1263679611 * ((a1 ^ v6) & 0x7FFFFFFF)) ^ ((-1263679611 * ((a1 ^ v6) & 0x7FFFFFFF)) >> 16));
  *a1 = byte_100756D60[v8 >> 24] ^ *(_BYTE *)STACK[0x5D8] ^ byte_100752900[(v8 >> 24) + 5] ^ byte_100732B30[v8 >> 24] ^ byte_100756D60[v9 >> 24] ^ byte_100752900[(v9 >> 24) + 5] ^ byte_100732B30[v9 >> 24] ^ v8 ^ v9 ^ (53 * BYTE3(v8)) ^ (53 * BYTE3(v9));
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (v5 ^ 0x37)) - 12LL))();
}

void sub_100655A84()
{
}

uint64_t sub_100655A8C@<X0>(int a1@<W8>)
{
}

uint64_t sub_100655AC8()
{
  BOOL v1 = malloc(0x14uLL) != 0LL;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (int)((v1 * (v0 + 966)) ^ v0)) - (v0 ^ 0xCALL)))();
}

uint64_t sub_100655B0C()
{
  STACK[0x3A8] = v3;
  STACK[0x3C0] = v2;
  int v4 = (v1 + 598) | 6;
  int v5 = dword_1009C74C0;
  STACK[0x3E8] = qword_1009C72B8;
  int v6 = (v4 - 33) ^ 0x34E;
  int v7 = *(_DWORD *)(STACK[0x3E8] + ((v4 + 532528646) & v5));
  unint64_t v8 = -1263679611
     * ((-1263679611 * ((STACK[0x5D8] ^ v7) & (v6 + 2147483212))) ^ ((-1263679611
                                                                                  * ((STACK[0x5D8] ^ v7) & (v6 + 2147483212))) >> 16));
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * ((1571
}

uint64_t sub_100655C54(int a1, uint64_t a2, int a3, uint64_t a4)
{
  int8x16_t v12 = (_BYTE *)(v11 + (int)((v7 ^ 0xE55E9C9F) + 446784353 + (((v10 - 1283501566) & 0xCFE1FF0B ^ 0x49DC6D37) & a1)));
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((1181
}

uint64_t sub_100655D34(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((((char)(a2 ^ (-33 * a1) ^ *(_BYTE *)(a5 + a1) ^ *(_BYTE *)(a6 + a1) ^ *(_BYTE *)(a7 + a1)) < (char)((v7 + 125) ^ 0x55))
                                          * (149 * (v7 ^ 0x6F7) - 252)) ^ v7))
                            - 12LL))();
}

uint64_t sub_100655D94( uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int8x16_t v14 = (char *)(v12 + (int)((a8 ^ 0xFB75F77E) + 76155011 + ((2 * a8) & 0xF6EBEEFC)));
  char v15 = *v14;
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((623
                               * ((char)(*(_BYTE *)(v11 + (v16 >> 24)) ^ v15 ^ *(_BYTE *)((v16 >> 24) + v8 + 5) ^ *(_BYTE *)(a4 + (v16 >> 24)) ^ v16 ^ (BYTE3(v16) * v10)) > 47)) ^ (v13 - 1212))))();
}

uint64_t sub_100656048( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL * (((a8 >= (a1 - 9)) * ((a1 ^ 0x42C) - 334)) ^ a1)))();
}

uint64_t sub_100656090(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8LL * ((220 * ((((a2 + 1031) ^ (v3 > 0x40)) & 1) == 0)) ^ a2)))();
}

uint64_t sub_1006560BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
}

uint64_t sub_1006560F4(int a1)
{
  int v6 = v2 - 1120540872;
  char v7 = a1 ^ 0x7B;
  int v8 = a1 ^ v3;
  int v9 = a1 - 1212;
  BOOL v10 = ((v5 + 278073110) & (v6 + 1264753335)) < 0 == v1;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (((((v7 + 1) ^ v10) & 1) * (v8 * v4 + 1697)) ^ v9)))();
}

uint64_t sub_1006561EC(uint64_t a1, char a2, int a3, uint64_t a4)
{
  char v13 = ((((v7 - 21) & 0xB3 ^ 0x23) - ((32 * v12 - 64) & 0x60) + (v12 << ((v7 - 53) & 0x3E ^ 0x1A))) ^ 0x30 | (a2 - 73))
      - ((2
        * ((((v7 - 21) & 0xB3 ^ 0x23) - ((32 * v12 - 64) & 0x60) + (v12 << ((v7 - 53) & 0x3E ^ 0x1A))) ^ 0x30 | (a2 - 73))) & 0x8A);
  int8x16_t v14 = (_BYTE *)(v11 + v10 - 608584540);
  unint64_t v15 = ((((v14 ^ a3) & 0x7FFFFFFF) * v5) ^ ((((v14 ^ a3) & 0x7FFFFFFF) * v5) >> 16)) * v5;
  *int8x16_t v14 = v15 ^ (BYTE3(v15) * v6) ^ *(_BYTE *)(v8 + (v15 >> 24)) ^ *(_BYTE *)((v15 >> 24) + v4 + 5) ^ *(_BYTE *)(a4 + (v15 >> 24)) ^ 0x45 ^ (v13 + 69);
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * (int)((489
                                               * (((((~(unint64_t)(v10 - 608584539) + v7) ^ (~(v10 - 608584539) + v7))
}

uint64_t sub_100656328@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (a1 ^ (87 * (LODWORD(STACK[0x400]) != 0))))
                            - ((a1 + 1371388739) & 0xAE4246FF)
                            + 1639LL))();
}

void sub_100656368()
{
}

uint64_t sub_100656378@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_10090DDE0
                             + ((1618 * (((STACK[0x5D8] == 0) ^ (-73 * ((a1 - 101) ^ 0xCE))) & 1)) ^ (a1 - 869))))();
}

uint64_t sub_1006563BC@<X0>(void *a1@<X0>, int a2@<W8>)
{
  int v5 = a2 ^ 0x6A8;
  free(a1);
  STACK[0x5D8] = v3;
  LODWORD(STACK[0x5E0]) = v4 + 25;
  LODWORD(STACK[0x5D0]) = 65;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + (((*v2 == 1) * (((v5 - 1357601729) & 0x50EB55F1) + 361)) ^ (v5 - 1487)))
                            - 8))();
}

uint64_t sub_1006564D0()
{
  unint64_t v2 = *(unsigned __int8 *)STACK[0x3F0];
  STACK[0x3D0] = v2;
  int v3 = (((_DWORD)v2 << (v0 + 97)) & 0x1BE) + ((((v0 + 819821143) & 0xCF2285FB) - 547361812) ^ v2);
  unint64_t v4 = STACK[0x3F8];
  LODWORD(STACK[0x3E8]) = v3;
  LODWORD(__chkstk_darwin(v3, v4) = v4 - v3;
  LODWORD(STACK[0x3CC]) = v4;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((1690 * ((((_BYTE)v4 + 14) & 0xF) == 0)) ^ v0)) - 8LL))();
}

uint64_t sub_100656558()
{
  int v2 = LODWORD(STACK[0x3E8]) + 2080249850;
  unint64_t v3 = STACK[0x410] + 3;
  STACK[0x348] = STACK[0x4B0];
  LODWORD(STACK[0x534]) = 488795824;
  STACK[0x3E0] = v3;
  if (v3) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v2 == 1532888281;
  }
  int v5 = v4;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * (v0 ^ (489 * v5))) - 8LL))();
}

uint64_t sub_1006565B8@<X0>(int a1@<W8>)
{
  unint64_t v2 = (v1 - 210) | 0x64Eu;
  unint64_t v3 = STACK[0x348];
  BOOL v4 = (char *)&STACK[0x590] + STACK[0x348] + v2 - 0x1C5F64B704023D6ELL;
  STACK[0x3A0] = (unint64_t)(v4 - 1647);
  STACK[0x3F8] = (unint64_t)(v4 - 1392);
  STACK[0x350] = (unint64_t)(v4 - 1137);
  STACK[0x3F0] = (unint64_t)(v4 - 1119);
  unsigned int v5 = 79 * ((v1 + 173) ^ 0x1AB);
  LODWORD(STACK[0x400]) = v5 + 687711537;
  uint64_t v6 = dword_1009C74C0 & 0x1FBDC124;
  STACK[0x3D8] = v2;
  BOOL v7 = (v5 ^ 0x57506397LL) + (unint64_t)((316 * ((v1 + 173) ^ 0x1AB)) ^ 0xFACu) + 1431377649 < (a1 + 1260072266);
  return ((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + (int)(((2 * v7) | (16 * v7)) ^ v5)))( v6,  (char *)&STACK[0x590] + v3 + v2 - 0x1C5F64B704024742LL,  -a1 + 1636191441LL,  -869LL,  2862755298LL,  4012LL,  210LL,  1464886085LL);
}

uint64_t sub_100656718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v12 = v6 ^ v8;
  unsigned int v13 = ((*(_DWORD *)(v5 + a1) ^ (v7 + a4 + 869)) & 0x7FFFFFFF) * v4;
  unint64_t v14 = (v13 ^ HIWORD(v13)) * (v12 ^ (v4 - 352));
  int v15 = byte_100756D60[v14 >> 24] ^ *(unsigned __int8 *)(v7 + a4 + 869) ^ byte_100752900[(v14 >> 24) + 5] ^ byte_100732B30[v14 >> 24] ^ v14 ^ ((v14 >> 24) * v11);
  *(_BYTE *)(a2 + a4 + (v12 + 453) + 869) = *(_BYTE *)(v9 + (v12 + 453) + a4) ^ (v15 - (v10 & (2 * v15)) + 100) ^ (v12 + 36);
  return ((uint64_t (*)(void))*(&off_10090DDE0 + (v12 | (31 * (a4 == -615)))))();
}

void sub_10065692C()
{
}

void sub_100656938()
{
  STACK[0x4B0] = STACK[0x348];
  free(v1);
  STACK[0x5D8] = 0LL;
  LODWORD(STACK[0x5E0]) = v0;
  JUMPOUT(0x100636460LL);
}

uint64_t sub_100656948@<X0>(int a1@<W8>)
{
  int v2 = v1 - 168;
  unsigned int v3 = (v1 + 1283593610) & 0xB37DE8FD;
  int v4 = v1 - 140;
  int v5 = a1 + LODWORD(STACK[0x3E8]) + 1918438168;
  int v6 = (char *)&STACK[0x590] + STACK[0x348] - 0x1C5F64B704023D6ELL;
  STACK[0x4B0] = STACK[0x348] + 1088;
  sub_10069334C(asc_1007546E0, v6 + 959, 0x40uLL);
  STACK[0x400] = (unint64_t)(v6 + 1023);
  uint64_t v7 = sub_10069334C(asc_1007416D8, v6 + 1023, 0x40uLL);
  return ((uint64_t (*)(char *))*(&off_10090DDE0
                                          + (int)(v2 ^ 0x142 ^ (625
                                                              * (((v2 ^ (v5 + 1287699256) ^ v4 ^ (v3 - 960)) & (v5 + 1287699256 - v2) | v2 & ~(v5 + 1287699256)) >> 31)))))(v7);
}

uint64_t sub_100656A30@<X0>(int a1@<W8>)
{
  int v3 = (v1 | 0x283) - 87;
  LODWORD(STACK[0x534]) = 488795743;
  *(_BYTE *)(v2 + 640) = *(_BYTE *)(STACK[0x3A0] + 0u % (a1 + v3));
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((215 * ((((v1 | 0x283) + 373663780) & 0xE9BA577D) != 1143LL)) ^ v3))
                            - 12))();
}

uint64_t sub_100656AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __int16 v12 = (v11 - 377) | 0x37;
  unsigned int v13 = (39651 * (unsigned __int16)((v12 ^ 0xF457) + v10)) >> 16;
  int v14 = *(unsigned __int8 *)(v9 + (v10 + v7 + 142) % 0x13Fu);
  uint64_t v15 = (unsigned __int16)((v12 ^ 0xF457)
                         + v10
                         - 319
                         * ((unsigned __int16)(v13
                                                              + ((unsigned __int16)(((v12 ^ 0xF457) + v10 - v13) & 0xFFFE) >> 1)) >> 8));
  HIDWORD(v16) = v14 ^ 0x10;
  LODWORD(v16) = (v14 ^ 0x60) << 24;
  int v17 = (v16 >> 29) - 16 * ((v16 >> 29) >> 3);
  HIDWORD(v16) = *(unsigned __int8 *)(v9 + (v10 + v7 + 98) % 0x13Fu);
  LODWORD(v16) = (HIDWORD(v16) ^ 0x70) << 24;
  unsigned int v18 = ((v16 >> 27) ^ 0xFFFFFFED)
      + ((2 * (v16 >> 27)) & 0xFFFFFFDA)
  HIDWORD(v16) = *(unsigned __int8 *)(v9 + (v10 + v7) % 0x13Fu);
  LODWORD(v16) = (HIDWORD(v16) ^ 0x70) << 24;
  int v19 = ((v16 >> 25) ^ 0xFFFFFF88) - ((2 * (v16 >> 25)) & 0xFFFFFFEF) + (v18 ^ 0xFFFFFFFE) + 4 * (v18 >> 1) + 1;
  int32x4_t v20 = (uint64_t (*)(void))(*(void *)(a7 + 8LL * ((121 * (v10 + 1 != v8 + 1276)) ^ v11)) - 12LL);
  *(_BYTE *)(v9 + v15) = v19 - ((2 * v19 - 14) & 0xE0) - 23;
  return v20();
}

uint64_t sub_100656C44@<X0>(char a1@<W3>, int a2@<W8>)
{
  int v6 = 9 * (a2 ^ 0x1FC);
  LODWORD(STACK[0x3E8]) = 0;
  int v7 = v3[109] ^ 0x70;
  LODWORD(STACK[0x340]) = v6;
  int v8 = v7 - ((v7 << (a2 + 57 + v6 + 110)) & 0x8C) + 1728710214;
  int v9 = (v3[21] ^ 0x70) - ((2 * (v3[21] ^ 0x70)) & 0x1F4) - 743622918;
  LOBYTE(v6) = (v9 ^ 0xFA | v8 ^ 0x46) - 2 * ((v9 ^ 0xFA | v8 ^ 0x46) & 1) - 127;
  unsigned int v10 = ((v6 & 2) + (v6 & 0x73 ^ 0xFFFFFFCE) + (v6 & 2 | 0x7CD75379) + 1) ^ 0x78FEC359;
  int v11 = (((2 * v10) & 0x31BE46EC) - v10 + 656465033) ^ 0x23094C99 | (((v9 ^ 0x430802FA) & (v8 ^ 0x646))
                                                                   - ((2 * ((v9 ^ 0x430802FA) & (v8 ^ 0x646))) & 0x3DC7B2F2)
                                                                   + 1591990649) ^ 0x5EE3D979;
  unsigned int v12 = (v11 - ((2 * v11) & 0x6AE283A) - 1017703395) ^ 0xC357141D;
  int v13 = ((v12 * v12 - ((2 * v12 * v12) & 0xD5EF1AA) + 112163029) ^ 0x6AF78D5) * v12;
  unsigned int v14 = ((2 * v13) & 0xE7E415FE) + (v13 ^ 0xF3F20AFF);
  LOBYTE(__chkstk_darwin(v9, v10) = *(_BYTE *)(v5 + (v3[40] & 0x3F ^ 0x30LL)) & 0x75 ^ 0x10;
  LOBYTE(__chkstk_darwin(v9, v10) = (v10 - ((2 * v10) & 0xE0) + 112) ^ 0x71;
  LOBYTE(vqmemcpy(v1, "/ProvenanceV2", 13) = (((2 * v10) | 0xF8) - v10 + 4) ^ 0xAC | ((v3[352] & 0x82)
                                                       + (v3[352] & 0x8A ^ 0xF7)
                                                       + (v3[352] & 0x82 | 0x18)
                                                       + 1) ^ 0x1A;
  LOBYTE(v9) = v3[355];
  unint64_t v15 = STACK[0x400];
  char v16 = (*(_BYTE *)(STACK[0x400] + (v3[52] & 0x3F ^ 0x30LL)) ^ 0x4B) & (v9 ^ 0x4B);
  LOBYTE(v9) = (v16 - ((2 * v16) & 0xF7) + 123) ^ 0x7B | ((((v9 & 0xB8 ^ 0xB0)
                                                          + (v9 & 0xA8 ^ 0xC)
                                                          - ((v9 & 0xB8 ^ 0xB0) & 0xEF)) ^ 0x6D)
                                                        - 1) ^ 0xC0;
  LOBYTE(vqmemcpy(v1, "/ProvenanceV2", 13) = (v13 - ((2 * v13) & 0x44) + 34) ^ 0x22;
  LOBYTE(v9) = (v9 - ((2 * v9) & 0xC3) + 97) ^ 0x61;
  char v17 = ((v13 | v9) - ((2 * (v13 | v9)) & 0xFB) + 61) & 0x2B ^ 0x29;
  LOBYTE(v9) = (v3[94] ^ 0x70)
             - ((v17 - ((2 * v17) & 0xFD) - 6) ^ 0xFA | ((v13 & v9) - ((2 * (v13 & v9)) & 0x16) - 117) ^ 0x8B);
  v3[94] = v9 - ((2 * v9) & 0xE0) + 112;
  LOBYTE(v9) = (127 - ((byte_10072FCE0[v3[85] & 0x3F ^ 0x30LL] & 0x40 | v3[139] & 0x36) ^ 0x30)) & 0xF7 ^ 0x7F;
  int v18 = *(unsigned __int8 *)(v5 + (v3[157] & 0x3F ^ 0x30LL));
  v3[64] ^= 0xD0 ^ (v9 - ((2 * v9) & 0xA0) - 48);
  LODWORD(STACK[0x398]) = (v18 ^ 0xFFFFFFB4) - ((2 * (v18 ^ 0xFFFFFFB4) - 4) & 0xFFFFFFF0);
  unsigned int v19 = ~v3[125] & 0xFFFFFFC9;
  unsigned int v20 = ((((2 * v19) | 0x3C) - v19 - 30) & 0x43 ^ 0x41)
      + ((((2 * v19) | 0x3C) - v19 - 30) ^ 0xFFFFFFAE)
      - (((((2 * v19) | 0x3C) - v19 - 30) ^ 0xFFFFFFAE) & 0x43);
  LODWORD(STACK[0x390]) = (v20 & 0xFFFFFFFD ^ 0x7A) - ((2 * v20) & 8);
  int v21 = *(unsigned __int8 *)(v5 + (v3[104] & 0x3F ^ 0x30LL)) ^ 0x4B;
  int v22 = v3[387];
  unsigned int v23 = (v22 & 0xC | v22 & 0x32 ^ 0xFFFFFFA1) - 1;
  int v24 = (126 - (v22 & 0x21) - (~v22 | 0x7F)) ^ 0x7E;
  unsigned int v25 = (((v24 | v23 ^ 0xFFFFFF94) - ((2 * (v24 | v23 ^ 0xFFFFFF94)) & 0xFFFFFFAE) - 41) ^ 0xFFFFFFD7) & ((v21 * v21 - ((2 * v21 * v21) & 0xFFFFFFBF) - 33) ^ 0xFFFFFFDF);
  unsigned int v26 = v25 + (~(2 * v25) | 0x59);
  v3[327] = -73;
  LOBYTE(v25) = (v3[52] ^ 0x8F) + (v3[175] ^ 0x70) + 1;
  v3[175] = v25 - ((2 * v25) & 0xE0) + 112;
  unsigned int v27 = 205 * (*(unsigned __int8 *)(v15 + (v3[44] & 0x3F ^ 0x30LL)) ^ 0x4B);
  LODWORD(STACK[0x388]) = (v27 >> 10) - ((v27 >> 9) & 0x54);
  v3[100] = (v3[100] ^ 0x70) - ((2 * (v3[100] ^ 0x70) - 6) & 0xE0) + 109;
  LOBYTE(v27) = (v3[386] ^ 0x4B) + (*(_BYTE *)(v5 + (v3[17] & 0x3F ^ 0x30LL)) ^ 0x4B);
  unsigned __int8 v28 = byte_10072FCE0[v3[57] & 0x3F ^ 0x30LL];
  v3[386] = v27 - ((2 * v27) & 0x96) + 75;
  LOBYTE(v23) = (v3[415] & 0x8C ^ v4) - ((2 * (v3[415] & 0x8C ^ v4)) & 0x10) - 101;
  LOBYTE(v27) = ((v23 ^ 0x34) + ((2 * v23) | 0xB6) - 90) ^ 0x8B | (((2 * (v28 & 0x73 ^ 0xB4)) & 0xF9)
                                                                 - (v28 & 0x73 ^ 0xB4)
                                                                 - 125) ^ 0x15;
  unsigned int v29 = (v3[101] ^ 0x70) - ((v27 + (~(2 * v27) | 0x53) + 87) ^ 0x56u) / 3;
  v3[101] = v29 - ((2 * v29) & 0xE0) + 112;
  LOBYTE(v29) = byte_10072FCE0[v3[217] & 0x3F ^ 0x30LL];
  unsigned int v30 = (((v29 & 0x75 ^ 0xFFFFFFAA) - ((v29 & 0x75 ^ 0xFFFFFFAA) >> 5 << 6) + 96) ^ 0x60) & (v3[398] ^ 0x4B);
  unsigned int v31 = (v30 - ((2 * v30) & 0x2A) - 107) ^ 0xFFFFFF95 | ((((v29 & 0x8A ^ 0x3F) - 1) & 0xCCCCCCCC ^ 8)
                                                       + (((v29 & 0x8A ^ 0x3F) - 1) ^ 0xFFFFFF94)
                                                       - ((((v29 & 0x8A ^ 0x3F) - 1) ^ 0xFFFFFF94) & v4)) ^ 0xFFFFFFAC;
  unsigned int v32 = (v31 - ((2 * v31) & 0xFFFFFFCA) + 101) ^ 0x65 | (v3[7] >> 1) ^ 0x38;
  LOBYTE(v3fseek(v0, 0LL, 2) = v32 + (v3[249] ^ 0x70) - 2 * v32;
  v3[249] = v32 + (~(2 * v32) | 0x1F) + 113;
  v3[30] ^= 0x58u;
  LOBYTE(v29) = *(_BYTE *)(v5 + (v3[241] & 0x3F ^ 0x30LL)) & 0xFC ^ 0xB8;
  LOBYTE(v3fseek(v0, 0LL, 2) = ((v29 | 0xCF) - (v29 | 0x30) + 48) ^ 0x3F | ((v3[383] & 3 ^ 1) - ((2 * v3[383]) & 4) + 38) ^ 0x24;
  LOBYTE(v3fseek(v0, 0LL, 2) = (v32 - ((2 * v32) & 0x8C) - 58) ^ 0xC6;
  v3[215] = v32 * v32 * v32 - ((2 * v32 * v32 * v32) & 0xE0) + 112;
  LODWORD(STACK[0x3B8]) = v14;
  v3[446] = *(_BYTE *)(v5 + ((63 - (_BYTE)v14) & 0x3F));
  int v33 = (-(~*(unsigned __int8 *)(v5 + (v3[13] & 0x3F ^ 0x30LL)) & 0x2C) - 20) ^ 0x2C;
  int v34 = ((((_BYTE)v33 + 35 - ((2 * (_BYTE)v33) & 0x40)) & 0x7C ^ 0xC7) - ((2 * (v33 + 35)) & 0x70) + 55) ^ 0x39;
  char v35 = (v3[146] ^ 0x5F) - 47 + ((2 * (v3[146] ^ 0x20)) & 0x5E);
  char v36 = (((v35 * v35) ^ 0xBD) - 5 + ((2 * v35 * v35) & 0x7A) + 72) * v35;
  char v37 = ((2 * v36) & 0xC2) + (v36 ^ 0xE1);
  unsigned int v38 = (v34 - ((2 * v34) & 0x1D4) + 1325568746) ^ 0x4F0292EA;
  v3[381] = ((v38 << ((v37 - 1) & 7)) - ((2 * (v38 << ((v37 - 1) & 7))) & 0xF8) - 4) ^ ((v38 >> ((1 - v37) & 7))
                                                                                      - ((2 * (v38 >> ((1 - v37) & 7))) & 0x60)
                                                                                      - 80) ^ 7;
  int v39 = (v3[131] ^ 0x70) - ((2 * (v3[131] ^ 0x70)) & 0x1D6) + 2052354795;
  int v40 = (v3[393] ^ 0x4B) - ((2 * (v3[393] ^ 0x4B)) & 0x62) - 1066648783;
  unsigned int v41 = (((v40 ^ 0xC06C3B31 | v39 ^ 0x7A5472EB) - ((2 * (v40 ^ 0xC06C3B31 | v39 ^ 0x7A5472EB)) & 0x997C6) + 314339) ^ 0x4CBE3) & (((v3[400] ^ 0x4B) - ((2 * (v3[400] ^ 0x4B)) & 0x74) - 949452998) ^ 0xC7687F3A);
  unsigned int v42 = (v41 - ((2 * v41) & 0x5E40FE3C) + 790658846) ^ 0x2F207F1E | (((v40 ^ 0x40442331) & (v39 ^ 0x12EB))
                                                                   - ((2 * ((v40 ^ 0x40442331) & (v39 ^ 0x12EB))) & 0x121D19A4)
                                                                   - 1995535150) ^ 0x890E8CD2;
  LOBYTE(v3_Block_object_dispose(va, 8) = *(_BYTE *)(v15 + (v3[220] & 0x3F ^ 0x30LL));
  LOBYTE(v3_Block_object_dispose(va, 8) = 2 * (~(_BYTE)v38 & 3) + (v38 & 3 ^ 0xEC);
  unsigned int v43 = (v42 - ((2 * v42) & 0x1E101782) - 821556287) ^ 0xCF080BC1;
  int v44 = ((v43 >> (v38 + 21)) - ((2 * (v43 >> (v38 + 21))) & 0x70) + 56) ^ ((v43 << (-13 - v38))
                                                                         - ((2 * (v43 << (-13 - v38))) & 0x50)
                                                                         + 40);
  LOBYTE(v44) = (v3[330] ^ 0x4B) + (v44 ^ 0x6E) + ((2 * v44) & 0xFC ^ 0x20) - 126;
  v3[330] = v44 - ((2 * v44) & 0x96) + 75;
  LOBYTE(v44) = *(_BYTE *)(v15 + (v3[27] & 0x3F ^ 0x30LL));
  LOBYTE(v44) = (v44 ^ 0x15) - 94 + ((2 * (v44 ^ 0x4A)) & 0xBC);
  LOBYTE(v44) = ((2 * v44 * v44) & 0xF6) + ((v44 * v44) ^ 0xFB);
  unsigned int v45 = (-((v3[10] >> 1) ^ 0x38) - 1068180609) ^ 0xC054DB7F;
  int v46 = ((v45 >> ((v44 + 5) & 7)) - ((2 * (v45 >> ((v44 + 5) & 7))) & 0xC4) + 226) ^ ((v45 << ((3 - v44) & 7))
                                                                                    - ((2 * (v45 << ((3 - v44) & 7))) & 0x9C)
                                                                                    + 206);
  LOBYTE(v46) = (v3[67] ^ 0x70) + (v46 ^ 0xBE) + (a1 & (2 * v46) ^ 0xA7) + 111;
  v3[67] = v46 - ((2 * v46) & 0xE0) + 112;
  LOBYTE(v46) = byte_10072FCE0[v3[136] & 0x3F ^ 0x30LL];
  LOBYTE(v46) = (v46 & 0xAC ^ 0x85) + (v3[195] ^ 0x70) + ((2 * v46) & 0x58 ^ 0x74) - 63;
  v3[195] = v46 - ((2 * v46) & 0xE0) + 112;
  unsigned int v47 = (*(unsigned __int8 *)(v5 + (v3[182] & 0x3F ^ 0x30LL)) ^ 0x4B) + 13;
  int v48 = (v47 ^ 0x7E) + 4 * (v47 >> 1);
  LOBYTE(v47) = *(_BYTE *)(v5 + (v3[196] & 0x3F ^ 0x30LL)) ^ 0x4B;
  LOBYTE(v45) = *(_BYTE *)(v15 + (v3[21] & 0x3F ^ 0x30LL)) ^ 0x4B;
  char v49 = ((v45 | v47) - ((2 * (v45 | v47)) & 0xF7) + 59) & 0x49 ^ 0x48;
  char v50 = (((2 * v49) | 0xA) - v49 - 5) ^ 0x77;
  LOBYTE(v47) = (((2 * v50) & 4) - v50 - 3) ^ 0xCE | ((v45 & v47) - ((2 * (v45 & v47)) & 0x14) - 118) ^ 0x8A;
  LOBYTE(v47) = (*(_BYTE *)(v15 + (v3[127] & 0x3F ^ 0x30LL)) ^ 0x4B) + (v47 ^ 0x2C) - ((2 * v47) & 0xA6) - 44;
  LOBYTE(v47) = (v3[423] ^ 0x4B) + (v47 ^ 0x73) + ((2 * v47) & 0xE7) - 115;
  v3[423] = v47 - ((2 * v47) & 0x96) + 75;
  unsigned int v51 = 171 * (byte_10072FCE0[v3[56] & 0x3F ^ 0x30LL] ^ 0x4C);
  int v52 = ((v51 >> 8) & 0x8E) + ((v51 >> 9) ^ 0x47);
  LOBYTE(v51) = *(_BYTE *)(v15 + (v3[65] & 0x3F ^ 0x30LL)) | 0xFD;
  LOBYTE(v51) = (v51 + ((2 * v51 - 82) ^ 0xBC) - 7) & (v3[140] ^ 0x70);
  v3[369] = v51 - ((2 * v51) & 0x14) + 75;
  v3[151] = 112;
  LOBYTE(v51) = (((2 * (v3[134] & 0x89 ^ 0x6F)) | 0x5C) - (v3[134] & 0x89 ^ 0x6F) + 82) ^ 0x81;
  LOBYTE(v51) = (((2 * v51) & 0xA6) - v51 - 84) & 0x8B ^ 0xFC;
  unsigned __int8 v53 = (v51 - ((2 * v51) & 0x52) - 87) ^ 0xA9;
  v3[321] = v53 / 5u - (((205 * v53) >> 9) & 0x16) + 75;
  unsigned int v54 = 171 * (v3[339] ^ 0x4B);
  int v55 = (v54 >> 9) - ((v54 >> 8) & 0x28) - 44;
  LOBYTE(v55) = ((v55 & 0x4D ^ 8) + (v55 & 0x49 ^ 0xC1) - ((v55 & 0x4D ^ 8) & 0xFB)) ^ 0x69;
  char v56 = (*(_BYTE *)(v5 + (v3[39] & 0x3F ^ 0x30LL)) ^ 0x4B) + 50;
  LOBYTE(v55) = (((2 * v55) | 0x18) - v55 + 116) ^ 0x60 | ((v56 ^ 3) + 2 * (v56 & 3) + 61) & 0x32;
  LOBYTE(v55) = (v3[330] ^ 0x4B) + (v55 ^ 0x5B) + ((2 * v55) & 0xB6) - 91;
  v3[330] = v55 - ((2 * v55) & 0x96) + 75;
  char v57 = 2 * (~v3[322] & 3) + (v3[322] & 7);
  unsigned int v58 = ((v2 >> ((3 - v57) & 7)) - ((0x6Eu >> ((3 - v57) & 7)) & 0x2E) - 2019762281) ^ ((v2 << (v57 - 3))
                                                                                      - ((110 << (v57 - 3)) & 0x58C689DC)
                                                                                      + 744703214);
  unsigned int v59 = (((v58 & 0xFFFFFFD2 ^ 0xABFF9B7D) - ((2 * (v58 & 0xFFFFFFD2 ^ 0xABFF9B7D)) & 0x124) + 649) ^ 0x29B) & (((v3[401] ^ 0x4B) - ((2 * (v3[401] ^ 0x4B)) & 0x5E) - 825556433) ^ 0xCECB022F);
  unsigned int v60 = (v59 - ((2 * v59) & 0x7D885DF4) + 2126786298) ^ 0x7EC42EFA | (((2 * (v58 & 0x2D ^ 0x44C4C029)) & 0x8188004A)
                                                                    - (v58 & 0x2D ^ 0x44C4C029)
                                                                    - 1526605304) ^ 0xE1C51A08;
  LOBYTE(v45) = byte_10072FCE0[v3[201] & 0x3F ^ 0x30LL];
  LODWORD(STACK[0x380]) = ((v26 + 84) ^ 0x18)
                        + ((v60 - ((2 * v60) & 4) + 2) ^ 0xFFFFFFBC)
                        + ((2 * (v60 - ((2 * v60) & 4) + 2)) & 0x7C ^ 4);
  LOBYTE(v60) = (v3[237] ^ 0x70) + (v45 ^ 0x55);
  v3[237] = v60 - ((2 * v60) & 0xE0) + 112;
  int v61 = *(unsigned __int8 *)(v15 + (v3[120] & 0x3F ^ 0x30LL)) ^ 0x4B;
  int v62 = (v3[400] ^ 0x4B) - ((2 * (v3[400] ^ 0x4B)) & 0x1B6) + 1071421659;
  int v63 = v61 - ((2 * v61) & 0x4C) + 701212966;
  unsigned int v64 = (((v63 ^ 0x29CBA926 | v62 ^ 0x3FDC98DB) - ((2 * (v63 ^ 0x29CBA926 | v62 ^ 0x3FDC98DB)) & 0x2E0) + 368) ^ 0x170) & (((v3[392] ^ 0x4B) - 580314457 + (~(2 * (v3[392] ^ 0x4B)) | 0xFFFFFEB1) + 1) ^ 0xDD691AA7);
  unsigned int v65 = (v64 - ((2 * v64) & 0x606) - 1567366397) ^ 0xA293E303 | (((v63 ^ 0x29C88926) & (v62 ^ 0x18DB))
                                                               - ((2 * ((v63 ^ 0x29C88926) & (v62 ^ 0x18DB))) & 0x4C61545E)
                                                               - 1506760145) ^ 0xA630AA2F;
  unsigned int v66 = ((v3[436] ^ 0x4B) - ((2 * (v3[436] ^ 0x4B)) & 0x1A) - 1051360755) ^ 0xC155820D;
  int v67 = v65 - ((2 * v65) & 0x206621F8) - 801959684;
  unsigned int v68 = ((v67 ^ 0xD03310FC | v66) - ((2 * (v67 ^ 0xD03310FC | v66)) & 0x78) + 60) & 0x4F ^ 0x42;
  unsigned int v69 = (((2 * v68) & 0x94) - v68 - 1112210795) ^ 0xB494619B;
  unsigned int v70 = (((2 * v69) | 0xB0E9FE54) - v69 - 1484062506) ^ 0x51559C6A | (((v67 ^ 0xFC) & v66)
                                                                    - ((2 * ((v67 ^ 0xFC) & v66)) & 0x2B4F411C)
                                                                    - 1784176498) ^ 0x95A7A08E;
  LODWORD(STACK[0x370]) = v70 - ((2 * v70) & 0xFA);
  LODWORD(STACK[0x3C8]) = v48;
  int v71 = v3[327];
  int v72 = ((*(unsigned __int8 *)(v5 + (((_BYTE)v48 + 2) & 0x3F)) >> 1) ^ 0x25) & (v71 ^ 0x4B);
  LOBYTE(v71) = ((((v3[208] ^ 0x70) + 43) ^ 0xBD) + ((2 * ((v3[208] ^ 0x70) + 43)) & 0x7A) + 67) & (v71 ^ 0xB4);
  LOBYTE(v7fseek(v0, 0LL, 2) = (v71 - ((2 * v71) & 0x74) + 58) ^ 0x3A | (v72 + (~(2 * v72) | 0xB3) - 89) ^ 0xA6;
  LOBYTE(v7fseek(v0, 0LL, 2) = (v3[335] ^ 0x4B) + (v72 ^ 0x1E) + ((2 * v72) & 0x3C) - 30;
  v3[335] = v72 - ((2 * v72) & 0x96) + 75;
  LOBYTE(v7fseek(v0, 0LL, 2) = *(_BYTE *)(v15 + (v3[162] & 0x3F ^ 0x30LL));
  LOBYTE(v71) = (((v72 & 0x81 ^ 0x7F) - 2 * ((v72 & 0x81 ^ 0x7F) & 1) - 99) ^ 0x65) & (v3[323] ^ 0x4B);
  LOBYTE(v7fseek(v0, 0LL, 2) = (((2 * (v72 & 0x7E ^ 0x54)) | 0x1E) - (v72 & 0x7E ^ 0x54) + 113) ^ 0x8B;
  LOBYTE(v7fseek(v0, 0LL, 2) = (v71 - ((2 * v71) & 0x4E) - 89) ^ 0xA7 | (v72 - ((2 * v72) & 0xF7) + 123) ^ 0x61;
  v3[394] ^= (((v72 - ((2 * v72) & 0xF0) + 120) & 0xFE) >> 1) ^ 0x3C;
  LOBYTE(v7fseek(v0, 0LL, 2) = *(_BYTE *)(v5 + (v3[65] & 0x3F ^ 0x30LL)) ^ 0x4B;
  v3[356] ^= (v72 - ((2 * v72 + 34) & 0x22) - 62) ^ 0xBF;
  LOBYTE(v7fseek(v0, 0LL, 2) = (v3[103] ^ 0x8F) + (v3[436] ^ 0x4B) + 1;
  v3[436] = v72 - ((2 * v72) & 0x96) + 75;
  LOBYTE(v7fseek(v0, 0LL, 2) = (v3[366] ^ 0x4B) * (v3[366] ^ 0x4B);
  LOBYTE(v2fseek(v0, 0LL, 2) = (v3[343] ^ 0x4B) - 45 * (2 * (v72 & 0x3F) + (v72 ^ 0x3F));
  LOBYTE(v7fseek(v0, 0LL, 2) = *(_BYTE *)(v15 + (v3[173] & 0x3F ^ 0x30LL));
  LOBYTE(v7fseek(v0, 0LL, 2) = ((2 * v72) ^ 0x97) + ((4 * v72) ^ 0xD3) + (v3[227] ^ 0x70);
  v3[227] = v72 - ((2 * v72) & 0xE0) + 112;
  LODWORD(STACK[0x3B0]) = v52;
  v3[383] ^= *(_BYTE *)(v15 + (((_BYTE)v52 + 57) & 0x3F)) ^ 0x4B;
  LOBYTE(v7fseek(v0, 0LL, 2) = (v3[26] ^ 0x70) * (v3[26] ^ 0x70);
  LOBYTE(v7fseek(v0, 0LL, 2) = (v3[350] ^ 0x4B) + (v72 ^ 0xA7) - ((2 * v72) & 0xB0) + 89;
  v3[350] = v72 - ((2 * v72) & 0x96) + 75;
  char v73 = *(_BYTE *)(v5 + (v3[136] & 0x3F ^ 0x30LL)) ^ 0x4B;
  LOBYTE(v71) = (v3[385] ^ 0x4B) - ((2 * (v3[385] ^ 0x4B)) & 0x64) - 78;
  char v74 = v73 - ((2 * v73) & 0x9E) + 79;
  LOBYTE(v7fseek(v0, 0LL, 2) = (((v74 ^ 0x4F | v71 ^ 0xB2) - ((2 * (v74 ^ 0x4F | v71 ^ 0xB2)) & 0xB4) - 38) ^ 0xDA) & (((v3[378] ^ 0x4B) - ((2 * (v3[378] ^ 0x4B)) & 0x56) - 85) ^ 0xAB);
  LOBYTE(v7fseek(v0, 0LL, 2) = (v72 - ((2 * v72) & 0x76) - 69) ^ 0xBB | (((v74 ^ 0x4F) & (v71 ^ 0xB2))
                                                        - ((2 * ((v74 ^ 0x4F) & (v71 ^ 0xB2))) & 0x2A)
                                                        - 107) ^ 0x95;
  char v75 = v72 - ((2 * v72) & 0xDE) + 111;
  LOBYTE(v69) = ((v75 & 0x21 ^ 0x63) - (v75 & 0x21) + (v75 & 0xBD ^ 0x88)) ^ 0xA6;
  int v76 = (v3[374] >> 1) ^ 0x25;
  LOBYTE(v71) = (((v75 & 0xC2 ^ 0x7F) + ((2 * (v75 & 0xC2 ^ 0x7F)) & 0x80 ^ 0xE5) + 78) ^ 0x4D) & ((v76
                                                                                                  - ((2 * v76) & 0x28)
                                                                                                  + 20) ^ 0x14);
  LOBYTE(v71) = (v71 - ((2 * v71) & 0xF0) + 120) ^ 0x78 | (v69 - ((2 * v69) & 0x26) + 19) ^ 0x73;
  v3[358] = (v71 - ((2 * v71) & 0x5E) + 47) ^ 0x64;
  int v77 = (v3[422] ^ 0x4B) - ((2 * (v3[422] ^ 0x4B)) & 0x62) - 726740943;
  int v78 = ((v77 & 0x8A ^ 0x88) - ((2 * (v77 & 0x8A ^ 0x88)) & 0xFC) - 875973553) ^ 0x4B9DD28E;
  int v79 = (((v3[92] ^ 0x70) - ((2 * (v3[92] ^ 0x70)) & 0x34) + 970972698) ^ 0x108EDE1A) & (v77 ^ 0x7CE);
  int v80 = (v78 - ((2 * v78) & 0x808174) - 1175959366) ^ 0x39BC2EF3 | (v79 - ((2 * v79) & 0x774929F0) + 1000641784) ^ 0x3BA494F8;
  unsigned int v81 = 205 * (v3[155] ^ 0x70);
  LOBYTE(v81) = ((v81 >> 10) - ((v81 >> 9) & 2) + 1) & 7;
  LOBYTE(v81) = ((((v81 | 0x72) - (v81 | 0x8D) - 115) & 9 ^ 0x88)
               + (((v81 | 0x72) - (v81 | 0x8D) - 115) ^ 0x33)
               - ((((v81 | 0x72) - (v81 | 0x8D) - 115) ^ 0x33) & 9)) ^ 0xC9;
  LOBYTE(v81) = ((2 * v81) & 0xC6) + (v81 ^ 0xE3);
  unsigned int v82 = (v80 - ((2 * v80) & 0x340CF324) - 1710851694) ^ 0x9A067992;
  int v83 = ((v82 >> ((3 - v81) & 7)) - ((2 * (v82 >> ((3 - v81) & 7))) & 0x66) + 51) ^ ((v82 << (v81 + 29))
                                                                                   - ((2 * (v82 << (v81 + 29))) & 0xE8)
                                                                                   + 244);
  LOBYTE(v83) = (v3[395] ^ 0x4B) + (v83 ^ 5) + ((2 * v83) & 0x7A ^ 0xF5) + 63;
  v3[395] = v83 - ((2 * v83) & 0x96) + 75;
  v3[345] ^= 0xFDu;
  v3[343] = v22 + 19 - ((2 * (v22 + 19)) & 0x96) + 75;
  LOBYTE(v83) = (2 * *(_BYTE *)(v15 + (v3[85] & 0x3F ^ 0x30LL))) ^ 0x96;
  v3[96] = (v83 - ((2 * v83) & 0x8F) + 71) ^ 0xC8;
  int v84 = (v3[39] & 0x98 ^ 0x10) + ((v3[39] >> 1) & 0x6C ^ 0x77) + 7;
  LODWORD(STACK[0x378]) = v84;
  unsigned int v85 = (v84 & 0xFE) - ((2 * v84) & 0x104) - 835892349;
  LOBYTE(v83) = (*(_BYTE *)(v5 + (v85 & 0x3E ^ 2LL)) ^ 0x4B) & (byte_10072FCE0[v3[33] & 0x3F ^ 0x30LL] ^ 0xAA);
  v3[373] ^= 0x15 ^ (v83 + (~(2 * v83) | 0xD5) + 22);
  uint64_t v86 = ((v3[239] & 0x3F ^ 0x74) + (v3[239] & 5 ^ 1) - ((v3[239] & 0x3F ^ 0x74) & 5)) ^ 0x41LL;
  int v87 = *(unsigned __int8 *)(v15 + v86) ^ 0x4B | v3[148] ^ 0x70;
  int v88 = v87 - ((2 * v87) & 4);
  unsigned int v89 = (v88 + 2) & 0xFFFFFFC6 | ((*(_BYTE *)(v15 + (v3[105] & 0x3F ^ 0x30LL)) & 0x18 ^ 0xF1) + 5) & 0x18;
  int v90 = (v89 ^ 0x1A) - 2 * ((v89 ^ 0x1A) & 0x7C ^ ((_BYTE)v88 + 10) & 4);
  int v91 = v3[354];
  unsigned int v92 = (v3[221] ^ 0x70) & (v91 ^ 0x4B);
  unsigned int v93 = (v3[339] ^ 0x4B) & (v91 ^ 0xFFFFFFB4);
  unsigned int v94 = (v93 - ((2 * v93) & 0xFFFFFFE8) - 12) ^ 0xFFFFFFF4 | (v92 - 16 * (v92 >> 3) + 120) ^ 0x78;
  LOBYTE(v94) = (v94 - ((2 * v94) & 0x34) + 90) & 0x7F ^ 0x4A;
  v3[441] = ((v94 | 0x7C) - (v94 | 0x83) - 125) ^ 0x27;
  unsigned int v95 = (205 * (*(unsigned __int8 *)(v5 + (v3[171] & 0x3F ^ 0x30LL)) ^ 0x4Bu)) >> 10;
  LOBYTE(v95) = (v3[24] ^ 0x70) + 2 * v95 + (v95 ^ 0x7F) - 127;
  v3[44] ^= 0x46 ^ (v95 - ((2 * v95) & 0x8C) + 70);
  unsigned int v96 = ((v3[329] & 0x53 ^ 0xFFFFFFBF) + ((2 * (v3[329] & 0x53)) | 0xFFFFFFC0) + 33) ^ 0xFFFFFFE6;
  unsigned int v97 = (((2 * v96) & 0xFFFFFFF4) - v96 - 123) | (v3[137] >> 1) & 0x24 ^ 0x20;
  v3[423] ^= (v97 - ((2 * v97) & 0xFC) + 126) ^ 0xFE;
  v3[344] ^= (3 * (((v3[67] & 0xD0 ^ 0x7F) + 2 * (v3[67] & 0xD0) + 8) ^ 0xF8)
                             - ((6 * (((v3[67] & 0xD0 ^ 0x7F) + 2 * (v3[67] & 0xD0) + 8) ^ 0xF8)) & 0x38)
                             + 28) ^ 0x1C;
  v3[370] = -2;
  v3[419] ^= 0xBDu;
  int v98 = v3[400] & 0xA1 ^ 0x21;
  int v99 = *(_BYTE *)(v5 + (v3[37] & 0x3F ^ 0x30LL)) & 0x5E ^ 0x1C;
  unsigned int v100 = (v99 - ((2 * v99) & 0xAAAAAAAA) - 11) & 0xFFFFFFFE ^ 0xFFFFFFA2 | (v98 - ((2 * v98) & 0x40) - 92) ^ 0xFFFFFF84;
  unsigned int v101 = ((v100 - 2 * (v100 & 0x5B ^ v98 & 1) - 38) ^ 0xFFFFFFD4) + (v3[188] ^ 0x70);
  LODWORD(STACK[0x368]) = byte_10072FCE0[v86];
  unsigned int v102 = v101 - 32 * (v101 >> 4);
  LOBYTE(v101) = v3[61] ^ 0x70;
  LOBYTE(v100) = byte_10072FCE0[v3[193] & 0x3F ^ 0x30LL] ^ 0xAA;
  LOBYTE(v97) = (((v100 | v101) - ((2 * (v100 | v101)) & 0x4A) - 91) ^ 0xA5) & (v3[403] ^ 0x4B);
  LOBYTE(v101) = (v97 - ((2 * v97) & 0xF7) + 123) ^ 0x7B | ((v100 & v101) - ((2 * (v100 & v101)) & 0x6E) + 55) ^ v2;
  LOBYTE(v101) = (v3[357] ^ 0x4B) + (v101 ^ 0x84) - ((2 * v101) & 0xF7) + 124;
  v3[357] = v101 - ((2 * v101) & 0x96) + 75;
  LOBYTE(v101) = *(_BYTE *)(v5 + (v3[159] & 0x3F ^ 0x30LL)) ^ 0x4B;
  LODWORD(STACK[0x358]) = v90 + 88;
  LOBYTE(v101) = (v101 & ((v90 + 88) ^ 0xA7)) - ((2 * (v101 & ((v90 + 88) ^ 0xA7))) & 0xCA);
  LOBYTE(v101) = (~(v101 + 105) & 4) - ((-102 - v101) | 0x66) + 95;
  v3[371] ^= 0x47 ^ ((v101 & 0xDD ^ 0x67)
                                    + ((2 * ((v101 & 0xDD ^ 0x67) & 0xD ^ (v101 | 0x77))) ^ 0x15)
                                    + 72);
  LOBYTE(v100) = (v3[116] ^ 0x70) - ((2 * (v3[116] ^ 0x70)) & 0xCE) + 103;
  LOBYTE(v97) = (v3[416] ^ 0x4B) - ((2 * (v3[416] ^ 0x4B)) & 0xD4) - 22;
  char v103 = (((v97 ^ 0xEA | v100 ^ 0x67) - ((2 * (v97 ^ 0xEA | v100 ^ 0x67)) & 0x62) + 49) ^ 0x31) & (((v3[349] ^ 0x4B)
                                                                                                  - ((2 * (v3[349] ^ 0x4B)) & 0xF3)
                                                                                                  - 7) ^ 0xF9);
  char v104 = (v103 - ((2 * v103) & 0xE2) + 113) ^ 0x71 | (((v97 ^ 0xEA) & (v100 ^ 0x67))
                                                    - ((2 * ((v97 ^ 0xEA) & (v100 ^ 0x67))) & 8)
                                                    + 4) ^ 4;
  int v105 = (v85 >> 1) ^ 0x6716A5C1;
  char v106 = v104 - ((2 * v104) & 0xC2) - 31;
  LOBYTE(v101) = (((v106 ^ 0xE1 | v105) - ((2 * (v106 ^ 0xE1 | v105)) & 0x4A) + 37) ^ 0x25) & (((v3[321] ^ 0x4B)
                                                                                              - ((2 * (v3[321] ^ 0x4B)) & 0xC3)
                                                                                              - 31) ^ 0xE1);
  LOBYTE(v101) = (v101 - ((2 * v101) & 0x2C) - 106) ^ 0x96 | (((v106 ^ 0xE1) & v105)
                                                            - ((2 * ((v106 ^ 0xE1) & v105)) & 0xB0)
                                                            + 88) ^ 0x58;
  v3[347] = (v101 - ((2 * v101) & 0xB4) - 38) ^ 0x91;
  v3[188] = v102 + 112;
  int v107 = *(unsigned __int8 *)(v15 + (((_BYTE)v102 + 112) & 0x3F ^ 0x30LL));
  HIDWORD(v10_Block_object_dispose(va, 8) = ~v107;
  LODWORD(v10_Block_object_dispose(va, 8) = (v107 ^ 0x48) << 24;
  LOBYTE(v105) = ((v3[4] & 2) + (v3[4] & 7 ^ 0xFE) + (v3[4] & 2 | 5) + 1) ^ 4;
  LOBYTE(v105) = (v105 - ((2 * v105) & 0xCA) - 27) ^ 0xE5;
  LOBYTE(v105) = ((2 * v105) & 0xD6) + (v105 ^ 0xEB);
  unsigned int v109 = ((v3[430] ^ 0x4B) - ((2 * (v3[430] ^ 0x4B)) & 0x18) - 738527220) ^ 0xD3FAF80C;
  unsigned int v110 = (v109 << (v105 + 21)) - ((2 * (v109 << (v105 + 21))) & 0x8DEB58DA) + 1190505581;
  int v111 = (v109 >> ((3 - v105) & 7)) - ((2 * (v109 >> ((3 - v105) & 7))) & 0x2E38E6BE) - 686001313;
  LOBYTE(v85) = *(_BYTE *)(v15 + (v3[41] & 0x3F ^ 0x30LL)) ^ 0x4B;
  LOBYTE(v9fseek(v0, 0LL, 2) = (v3[247] ^ 0x70) - 2 * ((v3[247] ^ 0x70) & 0x1F) + 31;
  LOBYTE(v85) = v85 - ((2 * v85) & 0xBB) - 35;
  LOBYTE(v105) = (((v85 ^ 0xDD | v92 ^ 0x1F) - ((2 * (v85 ^ 0xDD | v92 ^ 0x1F)) & 0xC0) + 96) ^ 0x60) & (((v3[415] ^ 0x4B) - ((2 * (v3[415] ^ 0x4B)) & 0x7A) - 67) ^ 0xBD);
  LOBYTE(v105) = (v105 - ((2 * v105) & 0x84) + 66) ^ 0x42 | (((v85 ^ 0xDD) & (v92 ^ 0x1F))
                                                           - ((2 * ((v85 ^ 0xDD) & (v92 ^ 0x1F))) & 0x96)
                                                           + 75) ^ 0x4B;
  LOBYTE(v111) = v110 ^ 0x32 ^ v111;
  LOBYTE(v105) = (v105 - ((2 * v105) & 6) + 3) ^ 3;
  LOBYTE(v107) = (((v105 | v111) - ((2 * (v105 | v111)) & 0x88) + 68) ^ 0x44) & (((v3[381] ^ 0x4B)
                                                                                - ((2 * (v3[381] ^ 0x4B)) & 0x78)
                                                                                - 68) ^ 0xBC);
  LOBYTE(v107) = (v107 - ((2 * v107) & 0x48) + 36) ^ 0x24 | ((v105 & v111) - ((2 * (v105 & v111)) & 0x70) + 56) ^ 0x38;
  LOBYTE(v107) = (v3[354] ^ 0x4B)
               + ((v107 - ((2 * v107) & 0x9A) - 51) ^ 0x13)
               + ((2 * (v107 - ((2 * v107) & 0x9A) - 51)) & 0xBC ^ 0x98)
               + 34;
  v3[354] = v107 - ((2 * v107) & 0x96) + 75;
  LOBYTE(v107) = (v3[442] ^ 0x4B) - ((2 * (v3[442] ^ 0x4B)) & 0x4A) + 37;
  LOBYTE(v111) = (((2 * (v107 & 0x23)) | 0x5A) - (v107 & 0x23) - 45) ^ 0x2D;
  LOBYTE(v107) = (((v3[372] ^ 0x4B) - ((2 * (v3[372] ^ 0x4B)) & 0x64) + 50) ^ 0x32) & (v107 ^ 0xDA);
  LOBYTE(v107) = (((2 * v111) | 0xAA) - v111 + 43) ^ 0xF4 | (v107 - ((2 * v107) & 8) - 124) ^ 0x84;
  LOBYTE(v107) = (v107 - ((2 * v107) & 0x98) - 52) ^ 0xCC;
  v3[339] = (v107 * v107 - ((2 * v107 * v107) & 0xBF) + 95) ^ 0x14;
  LOBYTE(v107) = (v3[444] & 5 ^ 0x7F) - (v3[444] & 0x20);
  LOBYTE(v107) = (v3[322] ^ 0x4B) + (v107 & 0x25 ^ 0x2F) + ((2 * v107) & 0xE8) + 3;
  LOBYTE(v107) = (v3[361] ^ 0x4B) + (v107 ^ 0xF7) + ((2 * v107) & 0xEF) + 9;
  v3[361] = v107 - ((2 * v107) & 0x96) + 75;
  BOOL v112 = LODWORD(STACK[0x534]) != 488795727;
  LODWORD(STACK[0x344]) = LODWORD(STACK[0x398]) + 118;
  LODWORD(STACK[0x390]) -= 124;
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x388]) - 22;
  LODWORD(STACK[0x380]) = (2 * (LODWORD(STACK[0x380]) + 66)) & 0xFFFFFFCC;
  LODWORD(STACK[0x388]) = LODWORD(STACK[0x370]) + 22;
  LODWORD(STACK[0x398]) = (v108 >> 26) - ((2 * (v108 >> 26)) & 0xFFFFFFA2) + 81;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((987 * v112) ^ a2)))();
}

uint64_t sub_100659110(int a1)
{
  int v1 = STACK[0x340];
  int v2 = (LODWORD(STACK[0x340]) + 242) | 0x28;
  int v3 = (LODWORD(STACK[0x340]) + 110) | 0x426;
  LODWORD(STACK[0x3E8]) = a1 ^ 0x1D226E4F;
  if ((a1 ^ 0x1D226E4Fu) <= 1) {
    int v4 = 1;
  }
  else {
    int v4 = a1 ^ 0x1D226E4F;
  }
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((((v3 ^ 0xFFFFFB18) + v4 > 0xFFFFFFF6) * (v2 - 187)) ^ v1)))();
}

uint64_t sub_10065917C()
{
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((((v0 - 218) ^ 0x27A ^ (549 * (v0 ^ 0x4F4))) * (v1 < 0x10)) ^ v0))
                            - 8))();
}

uint64_t sub_1006591C4()
{
  *(_OWORD *)STACK[0x3F8] = xmmword_10072D930;
  return ((uint64_t (*)(__n128))*(&off_10090DDE0
                                          + ((216 * (((7 * (v0 ^ 0x6E9)) ^ 0x3BA) != (v1 & 0xFFFFFFF0))) ^ (v0 - 516))))((__n128)xmmword_10072D930);
}

uint64_t sub_100659224(double a1, __n128 a2, __n128 a3)
{
  int v5 = 29 * (v3 ^ 0x39);
  STACK[0x400] = v4 - 448;
  STACK[0x4B0] = v4 - 448;
  unint64_t v6 = STACK[0x3A0];
  *(void *)(v6 + 59fseek(v0, 0LL, 2) = 0x9CD9AF232C423D57LL;
  *(void *)(v6 + 600) = 0x29235881A1ABD009LL;
  *(void *)(v6 + 60_Block_object_dispose(va, 8) = 0xD6DCA77E5E542FF6LL;
  *(void *)(v6 + 620) = 0xD2C4B7FB43C7D293LL;
  STACK[0x458] = (unint64_t)*(&off_10090DDE0 + v3);
  LODWORD(v6) = STACK[0x3CC];
  LODWORD(STACK[0x3E8]) = LODWORD(STACK[0x3CC]) + 62639895;
  STACK[0x3D8] = STACK[0x3E0] + STACK[0x3D0];
  LODWORD(STACK[0x338]) = v6 - 735808176;
  LODWORD(STACK[0x344]) = (v5 ^ 0xC9CD1283) + v6;
  LODWORD(STACK[0x3B8]) = v6 - 909307090;
  a2.n128_u16[0] = -19533;
  a2.n128_u8[2] = -77;
  a2.n128_u8[3] = -77;
  a2.n128_u8[4] = -77;
  a2.n128_u8[5] = -77;
  a2.n128_u8[6] = -77;
  a2.n128_u8[7] = -77;
  a3.n128_u16[0] = -29042;
  a3.n128_u8[2] = -114;
  a3.n128_u8[3] = -114;
  a3.n128_u8[4] = -114;
  a3.n128_u8[5] = -114;
  a3.n128_u8[6] = -114;
  a3.n128_u8[7] = -114;
  v7.n128_u64[0] = 0xB3B3B3B3B3B3B3B3LL;
  v7.n128_u64[1] = 0xB3B3B3B3B3B3B3B3LL;
  v8.n128_u64[0] = 0x8E8E8E8E8E8E8E8ELL;
  v8.n128_u64[1] = 0x8E8E8E8E8E8E8E8ELL;
  LODWORD(v6) = STACK[0x40C];
  LODWORD(STACK[0x330]) = LODWORD(STACK[0x40C]) + 75959666;
  int v9 = (v6 + 1819524043) & 0x938C3DFF;
  LODWORD(STACK[0x3C8]) = v6 + 1819523922;
  LODWORD(STACK[0x3CC]) = v9;
  unsigned int v10 = (v9 + 517439937) & 0xE1287EBD;
  LODWORD(STACK[0x388]) = v10;
  LODWORD(STACK[0x3B0]) = v10 ^ 0x6D6;
  v11.n128_u64[0] = 0x1C1C1C1C1C1C1C1CLL;
  v11.n128_u64[1] = 0x1C1C1C1C1C1C1C1CLL;
  LODWORD(STACK[0x3E0]) = v6 ^ 0x64A;
  STACK[0x478] = STACK[0x3F0];
  LODWORD(STACK[0x514]) = 488795824;
  STACK[0x498] = STACK[0x3F8];
  return ((uint64_t (*)(uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))((char *)*(&off_10090DDE0 + ((1011 * (((3 * (v5 ^ 0x3C8) + 488794080) ^ 0xE5DFB93E) + 117581874 + ((2 * ((3 * (v5 ^ 0x3C8) + 488794080) ^ 0x1D226EB0)) & 0xF1FBAF1C) > 0xFFFFFFBF)) ^ v5)) - 8))( 2659040600LL,  37LL,  (__n128)xmmword_10071E3C0,  a2,  a3,  (__n128)xmmword_10071E3B0,  v7,  v8,  v11,  (__n128)xmmword_10072D960);
}

uint64_t sub_10065AB48(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0
                                                                      + ((v2 - 1183) ^ (2 * ((v2 ^ 0x6C9u) - 166 < v3))))
                                                            - 8))( a1,  a2,  1472LL);
}

uint64_t sub_10065ABB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  else {
    int v7 = 64;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0
                                                                      + (v6 ^ 0x4CC ^ (70
                                                                                     * ((-a4 - 1688353098 - a5 + v7) > 0xE))))
                                                            - (v6 ^ 0xB6u)
                                                            + 335))( a1,  a2,  4294967219LL);
}

uint64_t sub_10065AC64(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  int v9 = a5 + a4 + 1688353097;
  unsigned int v10 = v9 + (v7 ^ 0x3C0) - 346;
  if (v10 <= 0x40) {
    unsigned int v10 = 64;
  }
  unsigned int v11 = a7 + v10;
  int v12 = __CFADD__(v9, v11);
  return (*(uint64_t (**)(void))(v8 + 8LL * ((49 * ((v11 < 0x10) & ~v12)) ^ v7)))();
}

uint64_t sub_10065ACC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = (char *)&STACK[0x590] + STACK[0x348] + a4 - 0x1C5F64B704023B5ELL;
  unint64_t v10 = (unint64_t)&v9[-v6];
  BOOL v11 = (unint64_t)&v9[-v6] < 0x10;
  unint64_t v12 = (unint64_t)&v9[-v7];
  unint64_t v13 = (unint64_t)&v9[-v8];
  int v14 = (unint64_t)&v9[-STACK[0x3F8]] < 0x10 || v11;
  if (v10 < 0x10) {
    int v15 = 1;
  }
  else {
    int v15 = v14;
  }
  int v16 = v15 ^ 1;
  if (v13 <= 0xF) {
    int v16 = 0;
  }
  return (*(uint64_t (**)(void))(v5 + 8LL * ((1033 * v16) ^ v4)))();
}

uint64_t sub_10065AD84(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(int8x16_t *)(STACK[0x3F0] + v5 + ((29 * (a4 ^ 0x116)) ^ 0xECAA3BC6)) = veorq_s8(*(int8x16_t *)STACK[0x3F8], v6);
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((35 * (((v4 + 1) & 0x1FFFFFFF0LL) == 16)) ^ a4)))();
}

void sub_10065ADFC()
{
}

uint64_t sub_10065AE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8LL
                                                                   * (((((v8 - 651) | 5) + 366) * (a5 == a7)) ^ v8)))( a1,  a2,  4294967219LL);
}

uint64_t sub_10065AE7C( uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = ((v8 + v10) & v9 ^ v16) + a8;
  *(_BYTE *)(STACK[0x3F0] + (v17 + v19)) = *(_BYTE *)(STACK[0x3F8] + v20) ^ *(_BYTE *)(v13 + (v20 & 0xF)) ^ *(_BYTE *)(v14 + (v20 & 0xF)) ^ *(_BYTE *)(v15 + (v20 & 0xF)) ^ ((v20 & 0xF) * a3) ^ v12;
  return (*(uint64_t (**)(void))(v11 + 8LL * ((((v19 + v17 + 1) > 0x3F) * v18) ^ v8)))();
}

uint64_t sub_10065AEF4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6 = *(void *)(v5 + 8LL * a4);
  LODWORD(STACK[0x4A4]) = v4;
  STACK[0x4F8] = (((a4 - 19) | 0x130u) ^ 0xFFFFFFFFFFFFFEC6LL) + v6;
  unint64_t v7 = STACK[0x3F0];
  int v8 = ((((a4 - 19) | 0x130) - 274) | 0x408) - 525;
  STACK[0x4B0] = STACK[0x400] + 320;
  LODWORD(STACK[0x524]) = *(_DWORD *)(v7 + 72);
  LODWORD(STACK[0x500]) = *(_DWORD *)(v7 + 76);
  LODWORD(STACK[0x424]) = *(_DWORD *)(v7 + 80);
  LODWORD(STACK[0x464]) = *(_DWORD *)(v7 + 84);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((41
}

uint64_t sub_10065E0B0()
{
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * (((*(unsigned int *)(STACK[0x450] + 92)
                                           + ((LODWORD(STACK[0x40C]) - 1031093634) & 0x3D7537DF ^ 0x775819D8LL)
                                           + ((unint64_t)(*(_DWORD *)(STACK[0x450] + 92) < 0x43C7D283u) << 32) != 3139431320)
                                          * (((LODWORD(STACK[0x40C]) + 1224753373) | 0x10B80821) - 1505250381)) ^ (LODWORD(STACK[0x40C]) - 212)))
                            - 8LL))();
}

uint64_t sub_10065E14C@<X0>(unint64_t a1@<X8>)
{
  int v3 = v2 | 0x568;
  *(_BYTE *)(STACK[0x4E8] - 0x7CB63B6E31E8FA60LL) = unk_10072DA90 ^ *(_BYTE *)STACK[0x440] ^ unk_10072DF22 ^ unk_10072DF40;
  BOOL v4 = v1 > 0xBB1FEB99;
  if (v1 < a1 != a1 > 0xBB1FEB99) {
    BOOL v4 = v1 < a1;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))((char *)*(&off_10090DDE0
                                                                                                 + ((243 * !v4) ^ v3))
                                                                                       - 8))( (v3 - 1179) - 190LL,  4294967229LL,  0x81BE6794BD1C6847LL,  0xBDD101752E67B05ALL);
}

void sub_10065E278()
{
}

uint64_t sub_10065E288()
{
  STACK[0x4B0] = v0 + ((v1 + 309) | 1u) - 867;
  STACK[0x570] = (unint64_t)&STACK[0x5F8];
  STACK[0x578] = STACK[0x3C0];
  STACK[0x558] = (unint64_t)&STACK[0x5F8];
  int v2 = (v1 - 797673683) & 0x2F8B8CF7;
  STACK[0x370] = (unint64_t)&STACK[0x5F8];
  STACK[0x568] = (unint64_t)&STACK[0x5F8];
  STACK[0x580] = 0LL;
  int v3 = malloc(0x404uLL);
  STACK[0x580] = (unint64_t)v3;
  BOOL v4 = malloc(0x408uLL);
  STACK[0x560] = (unint64_t)v4;
  if (v3) {
    BOOL v5 = v4 == 0LL;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  LODWORD(STACK[0x3C8]) = v2;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v6 * (v2 ^ 0x4E5)) ^ v1)) - 8))();
}

#error "100665974: call analysis failed (funcsize=5999)"
#error "1006662D4: call analysis failed (funcsize=370)"
void sub_1006662D8()
{
  JUMPOUT(0x100665CB4LL);
}

uint64_t sub_1006662E0@<X0>( int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58)
{
  unint64_t v61 = (v58 - 38);
  unint64_t v62 = (((unint64_t)(v59 + 0xF0E9D32C7201F8BLL) >> 30) ^ 0xFE6E2E9FFE9BFBEFLL)
      + v59
      + (((unint64_t)(v59 + 0xF0E9D32C7201F8BLL) >> 29) & 0x7FD37F7DELL);
  STACK[0x410] = v61;
  unint64_t v63 = ((((v61 ^ 0x10A06E92C884227ALL) + v62) >> 12) ^ 0xF7EF596FEFE7DFAELL)
      + v62
      + ((((v61 ^ 0x10A06E92C884227ALL) + v62) >> 11) & 0x1EB2DFDFCFBF5CLL);
  unint64_t v64 = v63
      + (((v63 + 0x18B11522D89C43EELL) >> 7) ^ 0x180900A808801C78LL)
      - (((v63 + 0x18B11522D89C43EELL) >> 6) & 0x3EDFEAFEEFFC70ELL)
      + 1;
  uint64_t v65 = v64 - ((2 * v64 + 0x15028F5A0384EEALL) & 0x35DD63827553F78ALL) + 0x1B96C63C0AC6233ALL;
  unint64_t v66 = ((2 * ((v65 ^ 0x1AEEB1C13AA9FBC5LL) + 0x288AB139EA2E5744LL)) & 0x95DF9DFE75A55FAELL)
      + (((v65 ^ 0x1AEEB1C13AA9FBC5LL) + 0x288AB139EA2E5744LL) ^ 0x4AEFCEFF3AD2AFD7LL);
  unint64_t v67 = v66
      + (((v66 - 0x4AEFCEFF3AD2AFD7LL) >> 24) ^ 0x9821A0008010C02BLL)
      - (((v66 - 0x4AEFCEFF3AD2AFD7LL) >> 23) & 0x1FEFFDE7FA8LL);
  unint64_t v68 = v67
      + (((v67 + 0x1CEE9100451C8FFELL) >> 13) ^ 0xC2040B8000000222LL)
      - (((v67 + 0x1CEE9100451C8FFELL) >> 12) & 0x7E8FFFFFFFBBALL);
  unint64_t v69 = v68
      + (((v68 + 0x5AEA8580451C8DDCLL) >> 5) ^ 0xB00A430304400D8LL)
      - (((v68 + 0x5AEA8580451C8DDCLL) >> 4) & 0x9FEB79F9F77FE4ELL)
      + 3;
  unint64_t v70 = v69 - ((2 * v69 + 0x1FD3C2A029B11A02LL) & 0x31D7AB6CFB6B2B8ALL) + 0x68D5B706928E22C6LL;
  unint64_t v71 = (v70 ^ 0x30FADBE77E1580E5LL)
      + ((v70 >> 31) ^ 0x9280A0016DF5B88DLL)
      + ((v70 >> 30) & 0x1E7FFE178LL ^ 0xFFFFFFFF3C149EE7LL)
      + 0x6D7F5FFEF3FFF0BELL;
  unint64_t v72 = (((((2 * v71) & 0xBCDFDFFD9EFFDED0LL) + (v71 ^ 0xDE6FEFFECF7FEF68LL) + 0x2190100130801098LL) >> 11) ^ 0x75DD37779EFD7FFALL)
      + ((2 * v71) & 0xBCDFDFFD9EFFDED0LL)
      + (v71 ^ 0xDE6FEFFECF7FEF68LL)
      + (((((2 * v71) & 0xBCDFDFFD9EFFDED0LL) + (v71 ^ 0xDE6FEFFECF7FEF68LL) + 0x2190100130801098LL) >> 10) & 0x3A6EEF3DFAFFF4LL);
  unint64_t v73 = (((v72 - 0x544D27766E7D6F62LL) >> 4) ^ 0x7E7F323CFFA7F77ALL)
      + v72
      + (((v72 - 0x544D27766E7D6F62LL) >> 3) & 0x1CFE6479FF4FEEF4LL)
      - 2
      * (((((v72 - 0x544D27766E7D6F62LL) >> 4) ^ 0x7E7F323CFFA7F77ALL)
        + v72
        + (((v72 - 0x544D27766E7D6F62LL) >> 3) & 0x1CFE6479FF4FEEF4LL)
        + 0x2D33A64C91DA9924LL) & 0x66C5DAC4086A2C7BLL ^ ((((v72 - 0x544D27766E7D6F62LL) >> 4) ^ 0x7E7F323CFFA7F77ALL)
                                                        + v72) & 1)
      + 0x13F981109A44C59ELL;
  unint64_t v74 = ((2 * ((v73 ^ 0xE6C5DAC4086A2C7ALL) + 0x1E4A8A832E7300A6LL)) & 0xFABBE3FCF6FD9FF6LL)
      + (((v73 ^ 0xE6C5DAC4086A2C7ALL) + 0x1E4A8A832E7300A6LL) ^ 0xFD5DF1FE7B7ECFFBLL);
  unint64_t v75 = v74
      + (((v74 + 0x2A20E0184813005LL) >> 30) ^ 0x81280E0E1024C20CLL)
      - (((v74 + 0x2A20E0184813005LL) >> 29) & 0x3DFB67BE6LL);
  unint64_t v76 = v75
      + (((v75 - 0x7E86000C8BA39207LL) >> 15) ^ 0x55BEBFBFF94F3B58LL)
      + (((v75 - 0x7E86000C8BA39207LL) >> 14) & 0x17F7FF29E76B0LL);
  unint64_t v77 = v76
      + (((v76 + 0x2BBB40337B0D32A1LL) >> 8) ^ 0x7FF7E7FFF2F52FDDLL)
      + (((v76 + 0x2BBB40337B0D32A1LL) >> 7) & 0x1EFCFFFE5EA5FBALL)
      + 1;
  unint64_t v78 = v77 - ((2 * v77 + 0x5786B06710300586LL) & 0xD20C52C5D9B1B224LL) - 0x6B367E698B0F242BLL;
  unint64_t v79 = ((2 * ((v78 ^ 0xE9062962ECD8D912LL) + 0x2C1E97BC5C429E81LL)) & 0xDB9CD8F0F5D3FDDCLL)
      + (((v78 ^ 0xE9062962ECD8D912LL) + 0x2C1E97BC5C429E81LL) ^ 0xEDCE6C787AE9FEEELL);
  unint64_t v80 = (((v79 + 0x1231938785160112LL) >> 27) ^ 0xFFD3FEF0FFFF6BFDLL)
      + v79
      + (((v79 + 0x1231938785160112LL) >> 26) & 0x21FFFED7FALL);
  unint64_t v81 = (((v80 + 0x125D949685169515LL) >> 15) ^ 0x757F6665C9AADBDELL)
      + v80
      + (((v80 + 0x125D949685169515LL) >> 14) & 0x2CCCB9355B7BCLL);
  unint64_t v82 = (((v81 - 0x6321D1CF449446C9LL) >> 8) ^ 0x5F8DF6E6F8EB7FFFLL)
      + v81
      + (((v81 - 0x6321D1CF449446C9LL) >> 7) & 0x11BEDCDF1D6FFFELL);
  unint64_t v83 = v82 - ((2 * v82 + 0x7AA06E9385007270LL) & 0xA29A32E93F6945FELL) + 0xE9D50BE6234DC37LL;
  uint64_t v84 = (v83 ^ 0x4D5C9CD333CB726FLL)
      + ((v83 >> 30) ^ 0x7BECEEEEB8348C3FLL)
      + ((v83 >> 29) & 0x71A8DFEE6LL ^ 0x20A84E680LL)
      - 0x7BECEEEF8D46FF73LL;
  unint64_t v85 = (((((2 * v84) & 0x77EFFEEB36EBE3DELL) + (v84 ^ 0xBBF7FF759B75F1EFLL) + 0x4408008A648A0E11LL) >> 8) ^ 0x29EFFFEB9DFFFF6FLL)
      + ((2 * v84) & 0x77EFFEEB36EBE3DELL)
      + (v84 ^ 0xBBF7FF759B75F1EFLL)
      + (((((2 * v84) & 0x77EFFEEB36EBE3DELL) + (v84 ^ 0xBBF7FF759B75F1EFLL) + 0x4408008A648A0E11LL) >> 7) & 0x1DFFFD73BFFFEDELL);
  unint64_t v86 = v85
      + (((v85 + 0x1A18009EC68A0EA2LL) >> 8) ^ 0x90504C00CC8A4311LL)
      - (((v85 + 0x1A18009EC68A0EA2LL) >> 7) & 0x15F67FE66EB79DCLL)
      + 1;
  uint64_t v87 = v86 - ((2 * v86 + 0x138F693BF3FF9720LL) & 0x578D747A9FF50A8ELL) + 0x358E6EDB49FA50D7LL;
  unint64_t v88 = ((2 * ((v87 ^ 0xABC6BA3D4FFA8547LL) + 0x75D572E7727DD82LL)) & 0xBA96FFED91FFA5B2LL)
      + (((v87 ^ 0xABC6BA3D4FFA8547LL) + 0x75D572E7727DD82LL) ^ 0x5D4B7FF6C8FFD2D9LL);
  unint64_t v89 = v88
      + (((v88 - 0x5D4B7FF6C8FFD2D9LL) >> 30) ^ 0x96E087A00025AA82LL)
      - (((v88 - 0x5D4B7FF6C8FFD2D9LL) >> 29) & 0x7FFB4AAFALL);
  unint64_t v90 = v89
      + (((v89 + 0xBD3F86936DA82A5LL) >> 9) ^ 0xB0A4A2003801012ALL)
      - (((v89 + 0xBD3F86936DA82A5LL) >> 8) & 0xB6BBFF8FFDFDAALL);
  unint64_t v91 = v90
      + (((v90 + 0x5B2F5668FED9817BLL) >> 7) ^ 0xEFFFAFAE7BCFEFF9LL)
      + (((v90 + 0x5B2F5668FED9817BLL) >> 6) & 0x3FF5F5CF79FDFF2LL);
  uint64_t v92 = v91 + 2 - 2 * ((v91 + 0x6B2FA6BA83099182LL) & 0x6294E59219C768E6LL ^ (v91 + 2) & 4) + 0x4DC48C4C9CD0FA62LL;
  unint64_t v93 = ((2 * ((v92 ^ 0xE294E59219C768E2LL) + 0x20226CA5EA003BB7LL)) & 0xF3DFDBE3FE7A9D9ELL)
      + (((v92 ^ 0xE294E59219C768E2LL) + 0x20226CA5EA003BB7LL) ^ 0x79EFEDF1FF3D4ECFLL);
  unint64_t v94 = v93
      + (((v93 - 0x79EFEDF1FF3D4ECFLL) >> 27) ^ 0x6604004223B28280LL)
      - (((v93 - 0x79EFEDF1FF3D4ECFLL) >> 26) & 0x3BB89AFAFELL);
  unint64_t v95 = v94
      + (((v94 + 0x200C11CBDD102EB1LL) >> 13) ^ 0xB6F273BDF5DFBFF7LL)
      + (((v94 + 0x200C11CBDD102EB1LL) >> 12) & 0x4E77BEBBF7FEELL);
  unint64_t v96 = v95
      + (((v95 + 0x69199E0DE7306EBALL) >> 4) ^ 0xBF66D1BFAFFADEDALL)
      + (((v95 + 0x69199E0DE7306EBALL) >> 3) & 0x1ECDA37F5FF5BDB4LL)
      + 1;
  unint64_t v97 = v96 - 0x317AAC943273F5B4LL + (~(2 * v96 + 0x5365989C6E6B1FBELL) | 0xB65AF1C4D3530B27LL);
  uint64_t v98 = (v97 ^ 0x56B52555E9BC8523LL)
      + ((v97 >> 26) ^ 0x1DCFF83AC7E7FF95LL)
      + ((v97 >> 25) & 0x5ED55D55DELL ^ 0xA501000D4LL)
      - 0x1DCFF82F6AAEAAEFLL;
  unint64_t v99 = ((2 * v98) & 0xFE7BA05F9FBDFDF6LL)
      + (v98 ^ 0xFF3DD02FCFDEFEFBLL)
      + (((((2 * v98) & 0xFE7BA05F9FBDFDF6LL) + (v98 ^ 0xFF3DD02FCFDEFEFBLL) + 0xC22FD030210105LL) >> 15) ^ 0x405507010100C830LL)
      - (((((2 * v98) & 0xFE7BA05F9FBDFDF6LL) + (v98 ^ 0xFF3DD02FCFDEFEFBLL) + 0xC22FD030210105LL) >> 14) & 0x1F1FDFDFE6F9ELL);
  int v100 = ((v99 - 0x3F92D730D0DFC72BLL) >> 6) - (((v99 - 0x3F92D730D0DFC72BLL) >> 5) & 0xEAC95A52) + 1969532201;
  LODWORD(v99) = ((2 * (v99 + 790640853)) & 0xEF6FF76E)
               + ((v99 + 790640853) ^ 0xF7B7FBB7)
               + (v100 ^ 0xD3843A33)
               + ((2 * v100) & 0xB23ED1CA ^ 0x5DF7AFBD);
  int v101 = v87 ^ v73 ^ a2 ^ (v99 - 2 * ((v99 + 1634168112) & 0x7033CDFE ^ v99 & 8) + 1369127718);
  int v102 = ((v101 + 1) & 7) - ((2 * (v101 + 1)) & 8) - 1474096964;
  LODWORD(STACK[0x2A4]) = v102;
  unint64_t v103 = v102 ^ 0xA82310BC;
  int v104 = v101 & 7;
  uint64_t v105 = 255LL;
  if (v104 == 7) {
    uint64_t v105 = 0LL;
  }
  STACK[0x3F0] = v103;
  uint64_t v106 = v105 << v103;
  int v107 = (v105 << v103) + 1956350720;
  unsigned int v108 = (v107 ^ 0x1C72F5AF)
       + ((2 * v107) & 0xD1D2FD5E ^ 0xC1121400)
       - 1760132783
       + ((((2 * v107) ^ 0xE9371600) - 2 * (((2 * v107) ^ 0xE9371600) & 0xADBFCF4 ^ (2 * v107) & 4) + 182189297) ^ 0xF524030E);
  unsigned int v109 = (v108 ^ 0x6F91BBFF) - 1871821823 + ((2 * v108) & 0xDF2377FE);
  LODWORD(STACK[0x260]) = v104;
  if (v104 == 7) {
    unsigned int v110 = 0;
  }
  else {
    unsigned int v110 = v109;
  }
  BOOL v111 = LODWORD(STACK[0x3D8]) == -555873442;
  int v112 = STACK[0x3A0];
  if (LODWORD(STACK[0x3D8]) != -555873442) {
    int v112 = STACK[0x398];
  }
  LODWORD(STACK[0x248]) = v112;
  int v113 = STACK[0x380];
  if (v111) {
    int v113 = STACK[0x31C];
  }
  LODWORD(STACK[0x2DC]) = v113;
  int v114 = STACK[0x2E0];
  if (v111) {
    int v114 = STACK[0x25C];
  }
  LODWORD(STACK[0x2E0]) = v114;
  int v115 = STACK[0x318];
  if (!v111) {
    int v115 = STACK[0x2D8];
  }
  LODWORD(STACK[0x2D8]) = v115;
  int v116 = STACK[0x2D4];
  if (!v111) {
    int v116 = STACK[0x2D0];
  }
  LODWORD(STACK[0x2D4]) = v116;
  if ((STACK[0x290] & 1) != 0) {
    a58 = a57;
  }
  unsigned int v118 = v78 ^ v65 ^ v60 ^ v92;
  unsigned int v119 = v83 ^ v70 ^ a1 ^ v97;
  int v120 = ((v106 & 4) + (v106 ^ 0x67) - ((v106 ^ 0x67) & 4) - 1850687744) ^ 0x99B5B501;
  int v121 = (((2 * v120) & 0xFEA6) - v120 + 149389484) ^ 0xE28ACE;
  unsigned int v122 = 16843009 * v121 - ((33686018 * v121) & 0xEFE149F6) + 2012259579;
  LODWORD(STACK[0x318]) = v101;
  int v123 = ((v110 & (v118 ^ 0x77)) - ((2 * (v110 & (v118 ^ 0x77))) & 0xA4) - 46) ^ 0x581532D0;
  unsigned int v124 = v123
       + (((v110 & (v118 ^ 0x7A502977)) - ((2 * (v110 & (v118 ^ 0x7A502977))) & 0xA4) + 466) & 0x64 ^ 0xA1684524)
       - (v123 & 0x48113264);
  unsigned int v125 = (((2 * ((v118 ^ BYTE1(v118) ^ BYTE2(v118)) ^ 0xCD0080A2)) | 0x2AF2AC16)
  int v126 = 16843009 * v125 - ((33686018 * v125) & 0xE821BEA) + 121703925;
  int v127 = ((v119 ^ (v119 >> 8) ^ HIWORD(v119)) & 0xDA ^ 0xCB) - ((v119 ^ (v119 >> 8) ^ HIWORD(v119)) & 0x25) + 1784427812;
  int v128 = ((v127 & 0x6F7 ^ 0x10833AD2) + (v127 & 0x108 ^ 0x20004101) - 1) ^ HIBYTE(v119) ^ 0x30837E29;
  int v129 = (1
        - *(void *)(STACK[0x568]
                                     + 8LL
                                     * ((*(void *)(STACK[0x568]
                                                   + 8
                                                   * (*(void *)(STACK[0x568]
                                                                + 8LL * ((*(_DWORD *)STACK[0x568] & 1) == 0)) & 1LL)) & 1) == 0))) & 1;
  LODWORD(STACK[0x204]) = (2 * v118) & 0xFFDF6FEE ^ 0xAECA6362;
  LODWORD(STACK[0x398]) = 33686018 * (v118 & 0x7F ^ 0x31);
  LODWORD(STACK[0x3A0]) = v124 ^ v122;
  LODWORD(STACK[0x25C]) = v126;
  LODWORD(STACK[0x2B4]) = ((~(33686018 * v128) | 0x5A25AE6F) + 16843009 * v128 - 756209463) ^ v126;
  LODWORD(STACK[0x290]) = v119 ^ 0x55570C3;
  LODWORD(STACK[0x380]) = a58;
  LODWORD(STACK[0x288]) = (((2 * (v101 & 0xFFFFFFF8 ^ 0x66D24E38)) & 0x70063300)
                         - (v101 & 0xFFFFFFF8 ^ 0x66D24E38)
                         - 939727236) ^ 0x9EF8F7CC;
  return sub_100637C58(1289548841, (v129 ^ 0x7EFDDF3Bu) + 2 * v129, 1002);
}

uint64_t sub_10066758C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_BYTE *)(STACK[0x3F8] + (v9 - 223257225)) = v8 ^ 0x4D ^ *(_BYTE *)(a8 + ((v9 - 223257225) & 0xFLL)) ^ *(_BYTE *)(((v9 - 223257225) & 0xFLL) + a3 + 6) ^ *(_BYTE *)(a7 + (((_BYTE)v9 + 119) & 0xF)) ^ (75 * ((v9 + 119) & 0xF)) ^ 0x28;
  return ((uint64_t (*)(void))*(&off_10090DDE0 + ((138 * (v9 == v10 + 223257224)) ^ v8)))();
}

void sub_100667610()
{
}

uint64_t sub_100667618( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))(*(void *)(a2
                                        + 8LL
                                        * ((1557 * (v8 + 8 == (((v9 ^ 0x8D1) + 1123 + a8) ^ (183 * (v9 ^ 0x8D1))))) ^ v9 ^ 0x9CA))
                            - 4LL))();
}

uint64_t sub_100667660(uint64_t a1, uint64_t a2)
{
  LODWORD(STACK[0x400]) = v3;
  STACK[0x588] = 0x3D5E81B9A4563166LL;
  LODWORD(STACK[0x504]) = dword_1009BDBA8 - 1227344546;
  uint64_t v5 = dword_1009BDBB0;
  unint64_t v6 = 1856021207
     * ((((v4 - 152) | 0x8A6AD391298A1BEDLL) - (v4 - 152) + ((v4 - 152) & 0x75952C6ED675E410LL)) ^ 0x677E440A67E3CD13LL);
  *(_DWORD *)(v4 - 140) = v2 + 1877625409 + v6;
  *(_DWORD *)(v4 - 120) = v6 + v2 + 1123495930;
  *(_DWORD *)(v4 - 116) = v6;
  *(void *)(v4 - 136) = v5 - v6;
  *(void *)(v4 - 12_Block_object_dispose(va, 8) = v6 ^ 0x3E9237D6;
  *(_DWORD *)(v4 - 14_Block_object_dispose(va, 8) = (v2 + 1877625423) ^ v6;
  *(_DWORD *)(v4 - 144) = v6 ^ (v2 + 1877625409) ^ 0x53;
  uint64_t v8 = sub_100686C70(v4 - 152);
  return ((uint64_t (*)(uint64_t))(*(void *)(a2 + 8LL * *(int *)(v4 - 152)) - 8LL))(v8);
}

uint64_t sub_100667764()
{
  int v0 = (LODWORD(STACK[0x40C]) - 1638) | 0x202;
  STACK[0x410] = (unint64_t)malloc(STACK[0x3F8]);
  uint32_t v1 = arc4random();
  unsigned int v2 = (v0 ^ 0x1D5D67F0) + v1 - ((2 * v1) & 0x3ABACBF6);
  LODWORD(xmmword_1009BDBB4) = v2;
  DWORD1(xmmword_1009BDBB4) = ((1812433253 * (v2 ^ 0x1D5D65FB ^ (v2 >> 30))) ^ 0x3F3F5CAD)
                            + ((1477382858 * (v2 ^ 0x1D5D65FB ^ (v2 >> 30))) & 0x7E7EB95A)
                            - 568456881
                            - ((((v0 + 460442091) & 0xE48E3659 ^ 0x1D360B5E)
                              + 2
                              * (((1812433253 * (v2 ^ 0x1D5D65FB ^ (v2 >> 30))) ^ 0x3F3F5CAD)
                               + ((1477382858 * (v2 ^ 0x1D5D65FB ^ (v2 >> 30))) & 0x7E7EB95A))
                              + 608910746) & 0x3ABACBF6);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + v0) - 8))();
}

void sub_1006678AC()
{
}

uint64_t sub_1006678C8()
{
  int v1 = LODWORD(STACK[0x40C]) ^ 0x2A9;
  unsigned int v2 = (const float *)&xmmword_1009BDBB4;
  int8x16_t v3 = (int8x16_t)vld1q_dup_f32(v2);
  v4.i64[0] = 0x8000000080000000LL;
  v4.i64[1] = 0x8000000080000000LL;
  int32x4_t v5 = vdupq_n_s32(0x64DC6F31u);
  v0.i64[0] = *(void *)((char *)&xmmword_1009BDBB4 + 4);
  v0.i32[2] = HIDWORD(xmmword_1009BDBB4);
  int8x16_t v6 = vextq_s8(v3, v0, 0xCuLL);
  int8x16_t v7 = v0;
  v7.i32[3] = dword_1009BDBC4[0];
  int8x16_t v8 = vandq_s8(v6, v4);
  int32x4_t v9 = (int32x4_t)veorq_s8(vandq_s8(v7, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x1CB35CF4u));
  int8x16_t v10 = veorq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v9, v9), (int8x16_t)vdupq_n_s32(0xA321E24E)),  v9),  vdupq_n_s32(0x2E6F0ED9u)),  (int8x16_t)vdupq_n_s32(0xD070D921));
  int32x4_t v11 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8(v10, (int8x16_t)vdupq_n_s32(0x9B2390CE)),  (int32x4_t)vorrq_s8(v10, (int8x16_t)v5)),  v5),  (int8x16_t)vdupq_n_s32(0x9B2D81C6));
  v12.i32[0] = *((_DWORD *)&STACK[0x588] + (DWORD1(xmmword_1009BDBB4) & (LODWORD(STACK[0x40C]) ^ 0x66Eu) ^ 1LL));
  v12.i32[1] = *((_DWORD *)&STACK[0x588] + ((BYTE8(xmmword_1009BDBB4) & 1) == 0));
  v12.i32[2] = *((_DWORD *)&STACK[0x588] + (~HIDWORD(xmmword_1009BDBB4) & 1LL));
  v12.i32[3] = *((_DWORD *)&STACK[0x588] + ((dword_1009BDBC4[0] & 1) == 0));
  xmmword_1009BDBB4 = (__int128)veorq_s8( veorq_s8( veorq_s8((int8x16_t)xmmword_1009BE1E8, v12),  (int8x16_t)vdupq_n_s32(0x99F82E0A)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( (int32x4_t)vorrq_s8((int8x16_t)v11, v8),  (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v11, v11),  (int8x16_t)vdupq_n_s32(0xF6B87DB0))),  vdupq_n_s32(0x7B5C3ED8u)),  1uLL));
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + (v1 ^ 0x10C)) - 8))();
}

uint64_t sub_100668314( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v14 = (unsigned int *)(a7 + 4 * (v9 + v11));
  int v15 = (((v8 - 1015) | 0x36) ^ (a8 + 251)) & v10;
  uint64_t v16 = v9 + 1;
  int v17 = *(_DWORD *)(a7 + 4 * (v16 + v11));
  unsigned int v18 = (((2 * (v17 & 0x7FFFFFFE ^ 0x1CB35CF4)) | 0xA321E24E) - (v17 & 0x7FFFFFFE ^ 0x1CB35CF4) + 779030233) ^ 0xD070D921;
  unsigned int v19 = (v13 - (v18 | v13) + (v18 | 0x9B2390CE)) ^ 0x9B2D81C6;
  *uint64_t v14 = v14[397] ^ *((_DWORD *)&STACK[0x588] + ((v17 & 1) == 0)) ^ (((v19 | v15) - ((2 * v19) & 0xF6B87DB0) + 2069642968) >> 1) ^ 0x99F82E0A;
  return ((uint64_t (*)(void))(*(void *)(a6 + 8LL * ((113 * (v16 != v12 + 3)) ^ v8)) - 8LL))();
}

uint64_t sub_10066840C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int8x16_t v4 = &flt_1009BDF40;
  int v5 = (a2 - 113) | 0x58;
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v4);
  v7.i64[0] = 0x8000000080000000LL;
  v7.i64[1] = 0x8000000080000000LL;
  v8.i64[0] = -1LL;
  v8.i64[1] = -1LL;
  v9.i64[0] = 0x8000000080000000LL;
  v9.i64[1] = 0x8000000080000000LL;
  v3.i64[0] = *(void *)&dword_1009BDF44;
  v3.i32[2] = dword_1009BDF4C;
  int8x16_t v10 = vextq_s8(v6, v3, 0xCuLL);
  int8x16_t v11 = v3;
  v11.i32[3] = dword_1009BDF50;
  int8x16_t v12 = (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v10, v7), vdupq_n_s32(0x8FE54F9F)),  (int8x16_t)vdupq_n_s32(0x115E33E0u)),  vdupq_n_s32(0xF2A3D0F0));
  int32x4_t v13 = (int32x4_t)veorq_s8( (int8x16_t)vaddq_s32( (int32x4_t)veorq_s8( vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)),  (int8x16_t)vdupq_n_s32(0x2D83F385u)),  v8),  (int8x16_t)vdupq_n_s32(0x38DF967Du));
  int32x4_t v14 = (int32x4_t)veorq_s8( vorrq_s8( (int8x16_t)vaddq_s32( vsubq_s32( (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v13, v13),  (int8x16_t)vdupq_n_s32(0x1142D520u)),  v13),  vdupq_n_s32(0x775E956Fu)),  vandq_s8(v12, v9)),  (int8x16_t)vdupq_n_s32(0x7F5F956Cu));
  v15.i32[0] = *(_DWORD *)(v2 + 4LL * ((dword_1009BDF44 & 1) == 0));
  v15.i32[1] = *(_DWORD *)(v2 + 4 * (unk_1009BDF48 & ((v5 ^ 0x25u) - 247) ^ 1LL));
  v15.i32[2] = *(_DWORD *)(v2 + 4 * (~dword_1009BDF4C & 1LL));
  v15.i32[3] = *(_DWORD *)(v2 + 4LL * ((dword_1009BDF50 & 1) == 0));
  *(int8x16_t *)&flt_1009BDF40 = veorq_s8( veorq_s8( veorq_s8((int8x16_t)xmmword_1009BDBB4, v15),  (int8x16_t)vdupq_n_s32(0xF6D7371D)),  (int8x16_t)vshrq_n_u32( (uint32x4_t)vaddq_s32( vsubq_s32( v14,  (int32x4_t)vandq_s8( (int8x16_t)vaddq_s32(v14, v14),  (int8x16_t)vdupq_n_s32(0x4A0419EEu))),  vdupq_n_s32(0xA5020CF7)),  1uLL));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (v5 ^ 0x2B)) - 8LL))();
}

void sub_1006685B8()
{
}

uint64_t sub_1006685C4@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v2 = ((a2 + 489766663) & 0xE2CEC66F ^ 0x1F5637B5 ^ xmmword_1009BDBB4 & 0x7FFFFFFE | 0x7F45FCE0)
     - ((a2 + 489766663) & 0xE2CEC66F ^ 0x1F5637B5 ^ xmmword_1009BDBB4 & 0x7FFFFFFE | 0x80BA031F)
     - 2135293153;
  dword_1009BE570 = dword_1009BE1E4 ^ *((_DWORD *)&STACK[0x588] + ((xmmword_1009BDBB4 & 1) == 0)) ^ ((((v2 | dword_1009BE570 & 0x80000000) ^ 0x7D4EA8C0) - 2 * (((v2 | dword_1009BE570 & 0x80000000) ^ 0x7D4EA8C0) & 0x2D0921F3 ^ v2 & 2) - 1391910415) >> 1) ^ 0xF2D2A19E;
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((1742 * (LODWORD(STACK[0x504]) > 0x26F)) ^ a2)) - 8LL))();
}

uint64_t sub_1006686AC()
{
  LODWORD(STACK[0x504]) = 0;
  int v2 = LODWORD(STACK[0x504])++;
  dword_1009BDBA8 = v2 + 1227344547;
  uint64_t v3 = (dword_1009BDBB0 + 260423849);
  unint64_t v4 = 1606104089
     * ((~((v1 - 152) ^ 0x9AF036D0EEA70D4BLL | 0xD7C1FE4EC6377693LL)
       + (((v1 - 152) ^ 0x9AF036D0EEA70D4BLL) & 0xD7C1FE4EC6377693LL)) ^ 0x7070CC55A278C619LL);
  *(_DWORD *)(v1 - 13fseek(v0, 0LL, 2) = ((v0 + 1651105345) | 0xB) + v4;
  *(_DWORD *)(v1 - 12_Block_object_dispose(va, 8) = (v0 + 1651105345) ^ v4;
  *(_DWORD *)(v1 - 124) = -1231242029 - v4 + v0;
  *(void *)(v1 - 120) = 1310193791 - v4;
  *(void *)(v1 - 15fseek(v0, 0LL, 2) = v3 + v4;
  *(_DWORD *)(v1 - 140) = v4;
  *(_DWORD *)(v1 - 136) = ((v0 + 1651105345) | 0x43) ^ v4;
  uint64_t v5 = sub_1005E44CC(v1 - 152);
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + *(int *)(v1 - 144)) - 12))(v5);
}

uint64_t sub_1006687CC(uint64_t a1)
{
  if (v1 >= v2) {
    int v3 = dword_1009BDBB0 + 1;
  }
  else {
    int v3 = 1049769942;
  }
  dword_1009BDBB0 = v3;
  return sub_100668960(a1, &off_10090DDE0, STACK[0x3C0], &unk_10072D9F0, &unk_1007540C0, &unk_100735EE0, 2773670916LL);
}

uint64_t sub_100668960@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, int a7@<W8>)
{
  *(_BYTE *)(a2 + (v10 - 39027169)) = (((a7 ^ 0x4CC ^ a6 ^ v8) >> (v7 + 44))
                                                   + ((2 * a7) ^ 0xEA)
                                                   - ((2 * ((a7 ^ 0x4CC ^ a6 ^ v8) >> (v7 + 44))) & 0x4A)
                                                   - 13) ^ 0x98;
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * ((232
                                          * (v10
}

uint64_t sub_100668A0C(uint64_t a1, uint64_t a2)
{
  STACK[0x4B0] = STACK[0x3E0];
  STACK[0x4A8] = v2;
  STACK[0x4D8] = STACK[0x410];
  return ((uint64_t (*)(void))(*(void *)(a2
                                        + 8LL
                                        * (int)(((STACK[0x5D8] == 0)
                                               * ((((v3 + 1164289615) ^ 0x4565A080) - 98) ^ (v3 + 1164289615) & 0xBA9A5F7F)) ^ v3))
                            - 8LL))();
}

uint64_t sub_100668A98(uint64_t a1)
{
  unint64_t v1 = 941074649
     * ((((unint64_t)&v3 | 0x6B6B37162FCDE1F4LL) - ((unint64_t)&v3 & 0x6B6B37162FCDE1F4LL)) ^ 0x6AEDD0F42F052E90LL);
  int v6 = -804802556 - v1;
  unint64_t v4 = (char *)&loc_100686E30 + v1 - 4;
  uint64_t v5 = a1;
  sub_100686D0C((uint64_t)&v3);
  return v3;
}

uint64_t sub_100668B4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[0] = &loc_100634F60;
  v8[1] = a1;
  int v9 = a3;
  v8[2] = a2;
  v8[3] = a4;
  uint64_t v10 = a5;
  uint64_t v11 = a6;
  uint64_t v12 = a7;
  unsigned int v13 = (230600693
       * ((((&vars0 - 32) | 0x4099155E) - ((&vars0 - 32) & 0x4099155E)) ^ 0x92A59375)) ^ 0x54F58F50;
  int32x4_t v14 = v8;
  sub_100634DE4((uint64_t)&v13);
  return v15;
}

void sub_100668C0C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 64) + 1448877107 * (a1 ^ 0x713B1D2A);
  uint64_t v2 = *(void *)(a1 + 16);
  unsigned int v3 = (char *)malloc(0x5400uLL);
  *(void *)(v2 - 0xD8BCE74F8520811LL) = v3 + 0x657CD3A60B29129ALL;
  __asm { BR              X9 }

uint64_t sub_100668D0C@<X0>( uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned int v15 = *(_DWORD *)a13 + v13;
  unsigned int v16 = *(_DWORD *)(a13 + 4) - v13;
  uint64_t v17 = *(unsigned int *)(a13 + 80);
  uint64_t v18 = *(_DWORD *)(a13 + 32) ^ v13;
  *(_DWORD *)(*(void *)(a13 + 56) - 0x22D5632E44FD0F20LL) = 1461298233;
  BOOL v22 = (_DWORD)v17 - v13 == 41966271
     || (_DWORD)v18 == ((a7 - 1628029673) & 0x6109C2EE) + 1565069750
     || v16 == 1598548755
     || v15 == 1517882953;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8LL * ((v22 * (a7 - 612)) ^ a7)) - 8LL))( v18,  a1,  v17,  a2,  a3,  a4,  a5,  a6,  a8,  a9,  a10);
}

uint64_t sub_100668DC0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  int v14 = a7 + 859;
  uint64_t v15 = a13[9];
  uint64_t v16 = a13[5];
  BOOL v20 = v15 == 0x59E3FCAF6574EC77LL
     || a13[6] == 0x5A78D2218AD9E2ALL
     || v16 == 0x54BD9D2603AA26EDLL
     || a13[3] == 0x4378B8CC4843E522LL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8LL * ((v20 * ((v14 - 1260294922) & 0x4B1E8FB4 ^ (v14 - 1184))) ^ v14)))( a1,  v15,  a2,  v16,  a3,  a4,  a5,  a6,  a8,  a9,  a10);
}

void sub_100668E74()
{
  *(_DWORD *)(v1 + _Block_object_dispose(va, 8) = v0;
}

uint64_t sub_100668EC0( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  HIDWORD(a11) = a1;
  HIDWORD(a9) = v58;
  int v63 = v55 + v56 + 419;
  unsigned int v64 = ((((*(unsigned __int8 *)(v61 - 0x4378B8CC4843E466LL) ^ 0x5E)
  unsigned int v65 = ((((*(unsigned __int8 *)(v61 - 0x4378B8CC4843E38DLL) ^ 0x5E)
  unsigned int v66 = (v65 - ((2 * v65) & 0x46359400) + 588958270) ^ 0x231ACA3E | (v64 + 2140439020 + (~(2 * v64) | 0x80D7FFFF) + 1) ^ 0x7F9481EC;
  int v67 = (v66 - ((2 * v66) & 0x153DBB42) + 178183585) ^ 0xA9EDDA1 | (v63
                                                                  + (*(unsigned __int8 *)(v61 - 0x4378B8CC4843E3DBLL) ^ 0x5E)
                                                                  + 172389405
                                                                  - ((2
                                                                    * (*(unsigned __int8 *)(v61 - 0x4378B8CC4843E3DBLL) ^ 0x5E)) & 0x32)) ^ 0xA467719;
  unsigned int v68 = (((v67 - ((2 * v67) & 0x898A28)) << 8) - 993717248) ^ 0xC4C51400;
  uint64_t v69 = 2
      * ((v68 - ((2 * v68) & 0xA511BC00) - 762782024) ^ 0xD288DEB8 | ((*(unsigned __int8 *)(v61 - 0x4378B8CC4843E3B1LL) ^ 0x5E)
                                                                    - ((2
  LODWORD(STACK[0xF70]) = 165093223;
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 + 8LL * v63) - 8LL))( 165093216LL,  (v63 - 88),  v69,  4294442903LL,  194LL,  578325LL,  3205573259LL,  1372LL,  a9,  v57,  a11,  __PAIR64__(v60, v59),  v61,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_100669620(int a1, int a2)
{
  LODWORD(STACK[0x1570]) = 165093223;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((112 * ((a1 ^ 0x9D71F66u) > 0x19F)) ^ (a2 + 1026))) - 12LL))();
}

uint64_t sub_100669708(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v13 = v8 + v7;
  int v14 = v9 + v11;
  int v15 = v10 + a6;
  int v16 = v12 + a7;
  unsigned int v17 = ((((v14 - 876234345) % 0x190u) << (((a2 - 88) | 0x33) ^ 0x7E)) & 0x2F4)
      + (((v14 - 876234345) % 0x190u) ^ 0x77EE777A);
  unsigned int v18 = (((v16 - 656018934) * (v16 - 656018934)) ^ 0xFA37FF5F)
      + v14
      + ((2 * (v16 - 656018934) * (v16 - 656018934)) & 0xF46FFEBE);
  unsigned int v19 = ((((v18 - 779240903) % 0xFFFF) ^ 0x95B3D5FE) + 1783376386 + ((2 * ((v18 - 779240903) % 0xFFFF)) & 0x1ABFC))
      % 0x190;
  uint64_t v20 = 4LL * ((97 * v17 - 1901752974) % 0x55C);
  int v21 = *(_DWORD *)((char *)&STACK[0x8D0] + v20);
  uint64_t v22 = 4LL
      * ((((194 * ((v19 + 21704282 - ((2 * v19) & 0xB4)) ^ 0x14B2E5A)) & 0x3EDDE2)
        + ((97 * ((v19 + 21704282 - ((2 * v19) & 0xB4)) ^ 0x14B2E5A)) ^ 0x5F5F6EF1)
        - 1600035909)
       % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8D0] + v20) = *(_DWORD *)((char *)&STACK[0x8D0] + v22);
  LODWORD(v20) = (v12
                + a7
                + (((v15 - 1370540222) * (v15 - 1370540222)) ^ 0x7BEDEBCF)
                + ((2 * (v15 - 1370540222) * (v15 - 1370540222)) & 0xF7DBD79E)
                + 1559758396)
               % 0xFFFF;
  LODWORD(v20) = ((v20 ^ 0xFF2DDF75) + 13770891 + ((2 * (_DWORD)v20) & 0x1BEEA)) % 0x190;
  *(_DWORD *)((char *)&STACK[0x8D0] + v2fseek(v0, 0LL, 2) = v21;
  uint64_t v23 = 4LL
      * ((((194 * ((v16 - 656018934) % 0x190u)) & 0x18FF6)
        + ((97 * ((v16 - 656018934) % 0x190u)) ^ 0x5FE7C7FB)
        - 1608971599)
       % 0x55C);
  int v24 = *(_DWORD *)((char *)&STACK[0x8D0] + v23);
  uint64_t v25 = 4LL * ((97 * (((2 * (_DWORD)v20) & 0x3EE) + (v20 ^ 0xBFF7EBF7)) + 1125149205) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8D0] + v23) = *(_DWORD *)((char *)&STACK[0x8D0] + v25);
  LODWORD(v23) = ((((v13 - 2021496829) * (v13 - 2021496829)) ^ 0x7D677FEA)
                + v15
                + ((2 * (v13 - 2021496829) * (v13 - 2021496829)) & 0xFACEFFD4)
                + 820492121)
               % 0xFFFF;
  *(_DWORD *)((char *)&STACK[0x8D0] + v25) = v24;
  LODWORD(v25) = ((v23 ^ 0xE5EF7DF9) + 437289479 + ((2 * (_DWORD)v23) & 0xFBF2)) % 0x190;
  unsigned int v26 = ((v15 - 1370540222) % 0x190u - 1878679692 - ((2 * ((v15 - 1370540222) % 0x190u)) & 0x2E8)) ^ 0x90059F74;
  LODWORD(v23) = 97 * v26;
  unsigned int v27 = (97 * v26) ^ 0xD72FDEFB;
  v26 *= 194;
  int v28 = *((_DWORD *)&STACK[0x8D0] + ((v26 & 0x5FBDF6) + v27 + 684782513) % 0x55C);
  uint64_t v29 = 4LL * ((97 * (((2 * (_DWORD)v25) & 0x1BE) + (v25 ^ 0xFECFAEDF)) + 1934594093) % 0x55C);
  *((_DWORD *)&STACK[0x8D0] + ((v26 & 0xFDFF9E) + (v23 ^ 0x6F7EFFCF) - 1870540067) % 0x55C) = *(_DWORD *)((char *)&STACK[0x8D0] + v29);
  *(_DWORD *)((char *)&STACK[0x8D0] + v29) = v28;
  LODWORD(v29) = (v13
                - 608178214
                + (((v18 - 779240903) * (v18 - 779240903)) ^ 0x3DFE5FFD)
                + ((2 * (v18 - 779240903) * (v18 - 779240903)) & 0x7BFCBFFA)
                + 1841567789)
               % 0xFFFF;
  LODWORD(v29) = ((v29 ^ 0x7F75F5D5) - 2138437077 + ((2 * (_DWORD)v29) & 0x1EBAA)) % 0x190;
  uint64_t v30 = 4LL * ((97 * ((v29 ^ 0xDEB4FFFF) + 2 * (_DWORD)v29) - 1653878003) % 0x55C);
  uint64_t v31 = 4LL
      * ((97 * ((((v13 - 2021496829) % 0x190u) ^ 0xF6F5FBDF) + ((2 * ((v13 - 2021496829) % 0x190u)) & 0x3BE))
        + 1825334061)
       % 0x55C);
  int v32 = *(_DWORD *)((char *)&STACK[0x8D0] + v31);
  *(_DWORD *)((char *)&STACK[0x8D0] + v31) = *(_DWORD *)((char *)&STACK[0x8D0] + v30);
  *(_DWORD *)((char *)&STACK[0x8D0] + v30) = v32;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0
                                      + ((a2 + 665721834) ^ 0x27AE1F87 ^ (1565 * (((-415323 - a2) | (a2 + 415323)) >= 0))))
                            - 8))();
}

void sub_100669C70()
{
}

uint64_t sub_100669CA4@<X0>(unsigned int a1@<W0>, int a2@<W6>, int a3@<W8>)
{
  int v4 = *((_DWORD *)&STACK[0x8D0]
       + (((194 * (a3 ^ 0x9D71F67)) & 0xC9FBA73A) - 1694302449 + ((((a2 - 3) ^ 0x61D) * (a3 ^ 0x9D71F67)) ^ 0x64FDD39D))
       % 0x55C) ^ 0x9D71F67;
  *((_DWORD *)&STACK[0x8D0] + (((194 * v4) & 0xA2FD7F7C) + ((97 * v4) ^ 0x517EBFBE) - 1367168386) % 0x55C) = a3;
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((363
                                          * ((((a3 ^ 0x9D71F67)
                                             + 165093223
                                             - ((2 * (a3 ^ 0x9D71F67) + 2) & 0x13AE3ECE)
                                             + 1) ^ a1) < 0x190)) ^ a2))
                            - 8LL))();
}

uint64_t sub_100669DA4( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v14 = 4LL
      * (((127 * (v8 ^ 0x671)) ^ 0x612) * v10
       - 160627994
       - ((((((127 * (v8 ^ 0x671)) ^ 0x612u) * v10 - 160627994) * (unint64_t)v9) >> 32) >> 10) * a2);
  int v15 = dword_100736D30[(((2722 * (*(_DWORD *)(a3 + v14) ^ (a8 + 2))) & 0x7FDFDBFE)
                       + ((1361 * (*(_DWORD *)(a3 + v14) ^ (a8 + 2))) ^ 0x3FEFEDFFu)
                       - 1072338862)
                      % 0x12E0] ^ 0x4F18A365;
  unsigned int v16 = v15 * v11 - 699321525 - ((v15 * v13) & 0xACA26696);
  unsigned int v17 = (8 * ((v16 ^ 0xD651334B) * (v16 ^ 0xD651334B) + (~(2 * (v16 ^ 0xD651334B) * (v16 ^ 0xD651334B)) | 0x1397921B))
       - 1314801768) ^ 0xB1A1B790;
  int v18 = v16 ^ 0x75A52BE6 ^ (v17 - ((2 * v17) & 0x32D70830) + 426476572);
  unsigned int v19 = (uint64_t (*)(void))(*(void *)(v12 + 8LL * (((v10 != 1020051621) | (2 * (v10 != 1020051621))) ^ v8)) - 8LL);
  *(_DWORD *)(a3 + v14) = v18;
  return v19();
}

uint64_t sub_100669EF8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  unsigned int v10 = (((v5 - 2140710622) ^ 0xE) + 1567356524 - ((2 * ((v5 - 2140710622) ^ 0xE)) & 0xBAD7ECD8)) ^ 0x5D6BF66C;
  unsigned int v11 = ((v10 * v3) & 0x27CEDFF6) + ((v10 * v2) ^ 0x93E76FFB) + 1813898838;
  int v12 = *(_DWORD *)(a1 + 4LL * (v11 - (((v11 * (unint64_t)v4) >> 32) >> 10) * v6)) ^ 0x4F18A365;
  unsigned int v13 = v12 * v7 - 758978626 - ((v12 * v9) & 0xA585CF7C);
  unsigned int v14 = (8 * ((v13 ^ 0xD2C2E7BE) * (v13 ^ 0xD2C2E7BE) - ((2 * (v13 ^ 0xD2C2E7BE) * (v13 ^ 0xD2C2E7BE)) & 0x140D1C4C))
       + 1345614128) ^ 0x50347130;
  int v15 = (uint64_t (*)(void))(*(void *)(v8 + 8LL * ((15 * (v5 != 2140711037)) ^ a2)) - 8LL);
  *((_DWORD *)&STACK[0x8D0] + (97 * v5 - 1490407394) % 0x55Cu) = v13 ^ 0x92248B84 ^ (v14
                                                                                   - ((2 * v14) & 0xF4F3E110)
                                                                                   - 92671861);
  return v15();
}

uint64_t sub_10066A050@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  int v59 = (((((a1 ^ 0x7F4) + v57 + 1680986281) * (v57 + 1870891805)) ^ 0x6EE3381B)
       + 618617358
       + ((2 * ((a1 ^ 0x7F4) + v57 + 1680986281) * (v57 + 1870891805)) & 0xDDC67036))
      * (v57 + 1870891805);
  *(_DWORD *)(*a57 + 4 * v57 - 0x657CD3A84D1AE626LL) = ((2 * v59) & 0x84DDBBFA)
                                                     + (v59 ^ 0xC26EDDFD)
                                                     - ((2 * (((2 * v59) & 0x84DDBBFA) + (v59 ^ 0xC26EDDFD)) + 67514964) & 0x13AE3ECE)
                                                     - 1411762031;
  return ((uint64_t (*)(void))(*(void *)(v58 + 8LL * ((243 * (v57 == 2424080866LL)) ^ a1)) - 8LL))();
}

uint64_t sub_10066A134( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  unsigned int v66 = malloc((HIDWORD(a11) + a13 + a12 - ((2 * (HIDWORD(a11) + a13 + a12) - 2116203608) & 0x9F89AD22) - 1867285403) ^ 0x4FC4D691);
  BOOL v72 = (a12 + 1792548112) < 0xCA200823;
  v66[a62 + HIDWORD(a11) - a64 - 1607036697] = *(_BYTE *)(a60 - 0x54BD9D2603AA26EDLL);
  return ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 + 8LL * ((1250 * !v72) ^ v64)) - ((v64 + 41723254) & 0xFD835BA6) + 664LL))( v66,  a63,  v67,  v68,  HIDWORD(a11),  v69,  v70,  v71,  a9,  a10,  a11);
}

void sub_10066A270()
{
}

uint64_t sub_10066A27C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  BOOL v15 = (a13 + 229796072) < 0x1032C3A7;
  *(_BYTE *)(a1 + (a5 - 1565070426)) = *(_BYTE *)(a2 - 0x59E3FCAF6574EC77LL);
  return ((uint64_t (*)(uint64_t, BOOL, BOOL, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8LL * ((90 * !v15) ^ (v13 + 746))) - 8LL))( a1,  (a13 + 229796072) > 0x1032C3A8,  (a13 + 229796072) < 0x1032C3A7,  (v13 + 746),  a5,  a6,  a7,  a8,  a9);
}

void sub_10066A340()
{
}

uint64_t sub_10066A34C( _BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v65 = a5 + 2031328205;
  int v66 = v63 - 168;
  BOOL v67 = (a5 + 2031328205) < 0xD65CB027;
  int v68 = *(unsigned __int8 *)(a63 - 0x5A78D2218AD9E2ALL);
  *a1 = v68 - ((2 * v68) & 0x20) - 112;
  BOOL v69 = v65 > 0xD65CB028;
  if (v67) {
    BOOL v69 = v67;
  }
  uint64_t v70 = (uint64_t (*)(_BYTE *, void, BOOL, void, BOOL, uint64_t, uint64_t, uint64_t))(*(void *)(v64 + 8LL * ((1905 * !v69) ^ v66)) - 4LL);
  return v70(a1, v70, v67, (2 * v68) & 0x20, v67, a6, a7, a8);
}

void sub_10066A434()
{
}

uint64_t sub_10066A43C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3
                                                                                 + 8LL
                                                                                 * (((((v2 + ((a2 - 325) | 0x20A) - 923) ^ v4) < 0x20)
                                                                                   * (((a2 - 579) | 0x308) - 896)) ^ (a2 + 684)))
                                                                     - 4LL))( a1,  147LL,  3575395474LL,  809818951LL);
}

uint64_t sub_10066A640( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 + 8LL * ((1671 * (v42 == (_DWORD)a5 + ((v41 + 2046038485) & 0x860BEFA9) - 1098 - 192)) ^ v41)) - 12LL))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41);
}

uint64_t sub_10066A688()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((79 * (((v1 + ((v0 - 1537460748) & 0x5BA3C7A6) - 676) ^ v3) == (v0 ^ 0x509))) ^ v0)))();
}

uint64_t sub_10066A6D0@<X0>(int a1@<W8>)
{
  LOBYTE(STACK[0x398]) = 16;
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((a1 + 524) ^ 0x78)) - 8LL))();
}

uint64_t sub_10066A720@<X0>( uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,int a56,int a57,uint64_t a58,int a59)
{
  LODWORD(v84_Block_object_dispose(va, 8) = v59;
  int v63 = a2 - 715;
  HIDWORD(v851) = *(unsigned __int8 *)(a1 + (HIDWORD(a14) - 368097220));
  unsigned int v64 = (((HIDWORD(a14) ^ 0xBE ^ v63)
        - 2 * (((HIDWORD(a14) ^ 0xBE ^ v63) + 168773692) & 0xAFCF3FD ^ (HIDWORD(a14) ^ 0xBE ^ v63) & 1)
        + 1963736120) ^ 0x8AFCF3FC)
      + 2 * (BYTE4(a14) & 1);
  unsigned int v65 = ((2 * v64) & 0xD9BFFF34) + (v64 ^ 0x6CDFFF9A);
  int v858 = *(unsigned __int8 *)(a1 + v65 - 1826619289);
  int v859 = *(unsigned __int8 *)(a1 + v65 - 1826619288);
  unsigned int v66 = *(unsigned __int8 *)(a1 + v65 - 1826619287);
  LODWORD(v851) = *(unsigned __int8 *)(a1 + v65 - 1826619286);
  int v856 = *(unsigned __int8 *)(a1 + v65 - 1826619285);
  int v857 = *(unsigned __int8 *)(a1 + v65 - 1826619284);
  unsigned int v67 = *(unsigned __int8 *)(a1 + v65 - 1826619283);
  int v68 = *(unsigned __int8 *)(a1 + v65 - 1826619282);
  int v69 = *(unsigned __int8 *)(a1 + v65 - 1826619281);
  HIDWORD(v84_Block_object_dispose(va, 8) = v60 + (v62 ^ v60) - 2 * (((v62 ^ v60) + 2147483616) & (v60 + 14) ^ v62 & 0xE) - 32;
  unsigned int v70 = *(unsigned __int8 *)(a1 + v65 - 1826619280);
  int v71 = *(unsigned __int8 *)(a1 + v65 - 1826619279);
  unsigned int v72 = *(unsigned __int8 *)(a1 + v65 - 1826619278);
  HIDWORD(v850) = *(unsigned __int8 *)(a1 + v65 - 1826619277);
  LODWORD(v850) = *(unsigned __int8 *)(a1 + v65 - 1826619276);
  unsigned int v73 = *(unsigned __int8 *)(a1 + v65 - 1826619275);
  unsigned int v74 = *(unsigned __int8 *)(a1 + v65 - 1826619274);
  unsigned int v75 = *(unsigned __int8 *)(a1 + v65 - 1826619273);
  unsigned int v76 = *(unsigned __int8 *)(a1 + v65 - 1826619272);
  unsigned int v77 = *(unsigned __int8 *)(a1 + v65 - 1826619271);
  unsigned int v78 = *(unsigned __int8 *)(a1 + v65 - 1826619270);
  int v860 = *(unsigned __int8 *)(a1 + v65 - 1826619269);
  HIDWORD(v849) = *(unsigned __int8 *)(a1 + v65 - 1826619268);
  unsigned int v79 = *(unsigned __int8 *)(a1 + v65 - 1826619267);
  int v80 = *(unsigned __int8 *)(a1 + v65 - 1826619266);
  unsigned int v81 = *(unsigned __int8 *)(a1 + v65 - 1826619264);
  unsigned int v82 = *(unsigned __int8 *)(a1 + v65 - 1826619263);
  unsigned int v83 = *(unsigned __int8 *)(a1 + v65 - 1826619262);
  int v84 = *(unsigned __int8 *)(a1 + v65 - 1826619261);
  LODWORD(v849) = *(unsigned __int8 *)(a1 + v65 - 1826619290);
  unsigned int v85 = *(unsigned __int8 *)(a1 + v65 - 1826619260);
  unsigned int v86 = *(unsigned __int8 *)(a1 + v65 - 1826619265);
  HIDWORD(a14) = v65 - 1458522039;
  unint64_t v819 = __PAIR64__(v78, v79);
  HIDWORD(v846) = (v63 + 321) | 0x161;
  unint64_t v825 = __PAIR64__(v85, v82);
  int v87 = (v82 ^ v61) - ((2 * (v82 ^ v61)) & 0xAA);
  HIDWORD(v820) = v80;
  int v88 = (v80 ^ v61) - ((2 * (v80 ^ v61)) & 0x20);
  int v89 = ((((v79 ^ v61) - (((v79 ^ v61) << SBYTE4(v846)) & 0x1CC)) << 16) + 1659240448) ^ 0x62E60000;
  unsigned int v90 = (v89 + 660708061 - ((2 * v89) & 0x4EC20000)) ^ 0x27619ADD | ((((v88 << 8) - 1724706816) ^ 0x99331000)
                                                                   - 456157639
                                                                   - ((2 * (((v88 << 8) - 1724706816) ^ 0x99331000)) & 0x499F2C00)) ^ 0xE4CF9639;
  unsigned int v91 = v90 - 1854913480 - ((2 * v90) & 0x22E08870);
  unint64_t v817 = __PAIR64__(v76, v86);
  unsigned int v92 = v91 ^ 0x91704438 | ((v86 ^ v61) - 1827498561 - ((2 * (v86 ^ v61)) & 0x17E)) ^ 0x931295BF;
  LODWORD(a4_Block_object_dispose(va, 8) = v92 - ((2 * v92) & 0x5FBCE516) + 1876849291;
  unint64_t v826 = __PAIR64__(v67, v83);
  int v93 = (v83 ^ v61) - ((2 * (v83 ^ v61)) & 0x1F8);
  int v94 = (v81 ^ v61) + 1031931314 - ((2 * (v81 ^ v61)) & 0x164);
  unsigned int v95 = ((((_DWORD)a48 << 8) ^ 0xDE728B00) - 2117782769 - ((2 * (((_DWORD)a48 << 8) ^ 0xDE728B00)) & 0x38A6600)) ^ 0x81C5330F | v94 ^ 0x3D8205B2;
  unsigned int v96 = v95 - 1023017214 - ((2 * v95) & 0x860BFE04);
  unint64_t v821 = __PAIR64__(v75, v73);
  int v97 = (v73 ^ v61) - ((2 * (v73 ^ v61)) & 0xBA);
  HIDWORD(v824) = v68;
  int v98 = (v68 ^ v61) - 2 * ((v68 ^ v61) & 0x7F);
  int v99 = (v66 ^ v61) - ((2 * (v66 ^ v61)) & 0x18A);
  unsigned int v100 = ((((v67 ^ v61) - ((2 * (v67 ^ v61)) & 0x10C)) << 16) - 1652162560) ^ 0x9D860000;
  unsigned int v101 = (v100 + 38193959 - ((2 * v100) & 0x48C0000)) ^ 0x246CB27 | ((((v98 << 8) - 924090624) ^ 0xC8EB7F00)
                                                                   + 320233596
                                                                   - ((2 * (((v98 << 8) - 924090624) ^ 0xC8EB7F00)) & 0x262CC000)) ^ 0x1316607C;
  unsigned int v102 = v101 + 1397010777 - ((2 * v101) & 0xA68962B2);
  LODWORD(v820) = v71;
  int v103 = (v71 ^ v61) - ((2 * v71) & 0xA);
  unint64_t v823 = __PAIR64__(v66, v74);
  unsigned int v104 = ((((v74 ^ v61) - ((2 * (v74 ^ v61)) & 0xB6)) << 8) - 1795663104) ^ 0x94F85B00;
  int v105 = ((((v97 << 16) + 224198656) ^ 0xD5D0000)
        + 1826887594
        - ((2 * (((v97 << 16) + 224198656) ^ 0xD5D0000)) & 0x59C80000)) ^ 0x6CE417AA | (v104
                                                                                      + 64016944
                                                                                      - ((2 * v104) & 0x7A1A400)) ^ 0x3D0D230;
  unsigned int v844 = v105 - 1967880093 - ((2 * v105) & 0x156910C6);
  unsigned int v106 = v844 ^ 0x8AB48863 | ((v75 ^ v61) + 1835322907 - ((2 * (v75 ^ v61)) & 0x36)) ^ 0x6D64CE1B;
  unsigned int v107 = ((((v93 << 8) + 1065352192) ^ 0x3F7FFC00)
        - 1805771195
        - ((2 * (((v93 << 8) + 1065352192) ^ 0x3F7FFC00)) & 0x28BC3C00)) ^ 0x945E1E45 | ((((v87 << 16) - 363528192) ^ 0xEA550000)
                                                                                       - 589688653
                                                                                       - ((2
                                                                                         * (((v87 << 16) - 363528192) ^ 0xEA550000)) & 0x39B40000)) ^ 0xDCDA10B3;
  unsigned int v854 = v107 - 2098549553 - ((2 * v107) & 0x5D5599E);
  LODWORD(v827) = v84;
  unsigned int v108 = v854 ^ 0x82EAACCF | ((v84 ^ v61) - 875742792 + (~(2 * (v84 ^ v61)) | 0xFFFFFE8F) + 1) ^ 0xCBCD39B8;
  unsigned int v838 = v108 + 32166741 - ((2 * v108) & 0x3D5A6AA);
  unsigned int v109 = (((v106 - ((2 * v106) & 0x46961E)) << 8) - 1555362048) ^ 0xA34B0F00;
  int v110 = (v72 ^ v61) + 13209841 - ((2 * (v72 ^ v61)) & 0x1CC);
  int v111 = (v76 ^ v61) - 207770552 - (v61 & (2 * v76));
  unsigned int v112 = (v109 + 354814692 - ((2 * v109) & 0x2A4C1400)) ^ 0x15260AE4 | v111 ^ 0xF39DAC48;
  unsigned int v113 = v112 - 1740613362 - ((2 * v112) & 0x3080B21C);
  unint64_t v818 = __PAIR64__(v81, v77);
  int v114 = (v77 ^ v61) - ((2 * v77) & 0xC0);
  unsigned int v115 = (((v96 << 15) ^ 0xFF810000) - 992667042 - ((2 * ((v96 << 15) ^ 0xFF810000)) & 0x89AA0000)) ^ 0xC4D51A5E | (v91 >> 9) ^ 0x48B822;
  int v116 = (v78 ^ v61) - ((2 * (v78 ^ v61)) & 0x15C);
  LODWORD(v824) = v69;
  int v117 = v102 ^ 0x5344B159 | ((v69 ^ v61) + 958310844 - ((2 * (v69 ^ v61)) & 0x178)) ^ 0x391EA9BC;
  unsigned int v118 = (((v117 - ((2 * v117) & 0x10780C)) << 8) - 2009332224) ^ 0x883C0600;
  unint64_t v822 = __PAIR64__(v72, v70);
  int v119 = (v70 ^ v61) - 178472338 - ((2 * v70) & 0xDC);
  unsigned int v120 = (v118 + 558954199 - ((2 * v118) & 0x42A1EC00)) ^ 0x2150F6D7 | v119 ^ 0xF55CBA6E;
  unsigned int v121 = v120 - 1244419584 - ((2 * v120) & 0x6BA75440) + 32;
  int v122 = (BYTE4(v851) ^ v61) - ((2 * (HIDWORD(v851) ^ v61)) & 0x15C);
  int v841 = (v85 ^ v61) + 118365811 - ((2 * (v85 ^ v61)) & 0xE6);
  unsigned int v123 = (((v838 << 8) ^ 0xEAD35500) + 1059508087 - ((2 * ((v838 << 8) ^ 0xEAD35500)) & 0x7E4D9E00)) ^ 0x3F26CF77 | v841 ^ 0x70E1E73;
  unsigned int v852 = v123 - 1735214731 - ((2 * v123) & 0x312572EA);
  unsigned int v124 = ((((v103 << 16) - 1895497728) ^ 0x8F050000)
        + 1735249306
        - ((2 * (((v103 << 16) - 1895497728) ^ 0x8F050000)) & 0x4EDA0000)) ^ 0x676DCD9A | ((((v110 << 8) + 914688) ^ 0xC99EE600)
                                                                                         - 247472571
                                                                                         - ((2
                                                                                           * (((v110 << 8) + 914688) ^ 0xC99EE600)) & 0x627FBC00)) ^ 0xF13FDE45;
  unsigned int v125 = v124 - 154841205 - ((2 * v124) & 0xED8A9F16);
  unsigned int v853 = v96;
  HIDWORD(v126) = v94 ^ 0x32;
  LODWORD(v126) = v96 ^ 0xC305FF00;
  int v847 = v126 >> 7;
  unsigned int v127 = v125 ^ 0xF6C54F8B | ((BYTE4(v850) ^ v61) - 615860127 - ((2 * HIDWORD(v850)) & 0xC2)) ^ 0xDB4AB861;
  int v128 = (((v127 - ((2 * v127) & 0x333776)) << 8) + 429636352) ^ 0x199BBB00;
  int v129 = (v849 ^ v61) - ((2 * (v849 ^ v61)) & 0xE6);
  unsigned int v130 = ((((v851 ^ v61) + 342811 - ((2 * (v851 ^ v61)) & 0x112)) << 8) + 486912) ^ 0x5428900;
  unsigned int v131 = (v130 - 1997532161 - ((2 * v130) & 0x11E02600)) ^ 0x88F013FF | ((((v99 << 16) - 775618560) ^ 0xD1C50000)
                                                                       + 629560448
                                                                       - ((2 * (((v99 << 16) - 775618560) ^ 0xD1C50000)) & 0x4B0C0000)) ^ 0x25865480;
  int v132 = v131 - 1479342954 - ((2 * v131) & 0x4FA6092C);
  int v133 = (v850 ^ 0x90) - 169240789 - ((2 * v850) & 0x56);
  LODWORD(a47) = (((v96 << 14) ^ 0x7FC08000) + 1719299262 - ((2 * ((v96 << 14) ^ 0x7FC08000)) & 0xCCF48000)) ^ 0x667A6CBE | (v91 >> 10) ^ 0x245C11;
  HIDWORD(v126) = v119 ^ 0xEEEEEEEE;
  LODWORD(v126) = v121 ^ 0xB5D3AA00;
  unsigned int v134 = ((((v129 << 8) - 233737472) ^ 0xF2117300)
        + 34501695
        - ((2 * (((v129 << 8) - 233737472) ^ 0xF2117300)) & 0x41CE800)) ^ 0x20E743F | ((((v122 << 16) + 2075000832) ^ 0x7BAE0000)
                                                                                     - 1059678262
                                                                                     - ((2
                                                                                       * (((v122 << 16) + 2075000832) ^ 0x7BAE0000)) & 0x1AC0000)) ^ 0xC0D697CA;
  unsigned int v135 = (((v96 << 13) ^ 0xBFE04000) + 10294356 - ((2 * ((v96 << 13) ^ 0xBFE04000)) & 0x13A0000)) ^ 0x9D1454 | (v91 >> 11) ^ 0x122E08;
  int v136 = (BYTE4(v849) ^ 0x90) - 1954762029 - ((2 * (HIDWORD(v849) ^ 0x90)) & 0x1A6);
  unsigned int v137 = ((v128 - 404156887 - ((2 * v128) & 0xCFD21C00)) ^ 0xE7E90E29 | v133 ^ 0xF5E9972B)
       + 1344019328
       - ((2 * ((v128 - 404156887 - ((2 * v128) & 0xCFD21C00)) ^ 0xE7E90E29 | v133 ^ 0xF5E9972B)) & 0xA0383770)
       + 56;
  unsigned int v138 = v132 ^ 0xA7D30496 | ((v856 ^ 0x90) - 1034193214 - ((2 * (v856 ^ 0x90)) & 0x184)) ^ 0xC25B76C2;
  int v139 = (((v138 - ((2 * v138) & 0xDA9BD6)) << 8) + 1833822976) ^ 0x6D4DEB00;
  unsigned int v140 = ((((v860 ^ 0x90) - ((2 * v860) & 0xC0)) << 8) - 2100600832) ^ 0x82CB6000;
  unsigned int v141 = v136 ^ 0x8B7CB2D3 | (v140 - 1750972688 - ((2 * v140) & 0x2F448C00)) ^ 0x97A246F0;
  unsigned int v142 = ((((v116 << 16) - 760348672) ^ 0xD2AE0000)
        + 1931243040
        - ((2 * (((v116 << 16) - 760348672) ^ 0xD2AE0000)) & 0x66380000)) ^ 0x731C6E20 | ((((v114 << 24) - 0x20000000) ^ 0xE0000000)
                                                                                        - 1879274300
                                                                                        - ((2
                                                                                          * ((v114 << 24) - 0x20000000)) & 0x1E000000)) ^ 0x8FFC8CC4;
  unsigned int v143 = v142 + 1528886042 - ((2 * v142) & 0xB641E634);
  unsigned int v144 = (((v121 << 14) ^ 0xEA880000) + 1895501479 - ((2 * ((v121 << 14) ^ 0xEA880000)) & 0xE1F60000)) ^ 0x70FB0EA7 | (v102 >> 10) ^ 0x14D12C;
  int v145 = v143 ^ 0x5B20F31A | (v141 + 54867998 - ((2 * v141) & 0x68A703C)) ^ 0x345381E;
  unsigned int v146 = (((v852 << 13) ^ 0x572EA000) - 1617328426 - ((2 * ((v852 << 13) ^ 0x572EA000)) & 0x3F330000)) ^ 0x9F9986D6 | (v854 >> 11) ^ 0x105D55;
  LODWORD(v830) = v121;
  int v147 = ((v121 >> 3) ^ 0x14B65707)
       + ((a48 >> 2) ^ 0xE54BE169)
       + ((v121 >> 2) & 0x3BE7BB78 ^ 0xD69B55F7)
       + ((v126 >> 7) ^ 0xB7FADBBF)
       + ((2 * (v126 >> 7)) & 0x6FF5B77E)
       + ((a48 >> 1) & 0x7D78FB96 ^ 0x35683904)
       + (v144 ^ 0x6BFDFFFB)
       + ((2 * v144) & 0xD7FBFFF6)
       + (v135 ^ 0x6200A817)
       + (v115 ^ 0xF2218988)
       - ((2 * v135) & 0x3BFEAFD0)
       - ((2 * v115) & 0x1BBCECEE)
       + 2;
  unsigned int v148 = (((v852 << 15) ^ 0x5CBA8000) - 1006654541 - ((2 * ((v852 << 15) ^ 0x5CBA8000)) & 0x87FF0000)) ^ 0xC3FFABB3 | (v854 >> 9) ^ 0x417556;
  HIDWORD(v126) = v133 ^ 0x2B;
  LODWORD(v126) = v137 ^ 0x501C1B80;
  int v149 = v126 >> 7;
  unsigned int v150 = (v139 - 508764052 - ((2 * v139) & 0xC359C000)) ^ 0xE1ACE06C | ((v857 ^ 0x90)
                                                                      + 235618249
                                                                      - ((2 * (v857 ^ 0x90)) & 0x192)) ^ 0xE0B3FC9;
  int v151 = (((v113 << 14) ^ 0x16438000) + 800823147 - ((2 * ((v113 << 14) ^ 0x16438000)) & 0x5F770000)) ^ 0x2FBB976B | (v844 >> 10) ^ 0x22AD22;
  unsigned int v152 = (((v137 << 14) ^ 0x6EE0000) + 1901682615 - ((2 * ((v137 << 14) ^ 0x6EE0000)) & 0xE2B28000)) ^ 0x71595FB7 | (v125 >> 10) ^ 0x3DB153;
  HIDWORD(v126) = v111 ^ 0x48;
  LODWORD(v126) = v113 ^ 0x98405900;
  unsigned int v842 = v150 - 986272638 - ((2 * v150) & 0x8A6D5904);
  unsigned int v153 = (v842 ^ 0xCC22693F ^ (v147 - ((2 * v147 + 238593328) & 0x12298B7A) - 1875830699)) + (v842 ^ 0xC536AC82);
  unsigned int v154 = v153 - 563562880 - ((2 * v153) & 0xBCD16D44) + 34;
  int v155 = ((v126 >> 7) ^ 0x7DFE95BA)
       + ((2 * (v126 >> 7)) & 0xFBFD2B74)
       + (v151 ^ 0x4100800)
       - ((2 * v151) & 0xF7DFEFFE)
       + 1;
  HIDWORD(v126) = v154 ^ 0xB6A2;
  LODWORD(v126) = v154 ^ 0xDE680000;
  int v156 = (v126 >> 19) - ((2 * (v126 >> 19)) & 0x4D3ED2A2);
  unsigned int v157 = (v146 ^ 0xEE7EF6FF) + (v148 ^ 0xFA367A37) + ((2 * v148) & 0xF46CF46E) + ((2 * v146) & 0xDCFDEDFE);
  HIDWORD(v126) = v154 ^ 0xB6A2;
  LODWORD(v126) = v154 ^ 0xDE680000;
  unsigned int v158 = v145 + 1787715317 + (~(2 * v145) | 0x2AE354D7) - 2400;
  int v159 = (v126 >> 17) - ((2 * (v126 >> 17)) & 0xEC3CC7BC) + 1981703134;
  unsigned int v160 = ((v137 >> 3) ^ 0x1F591C4B)
       + ((v137 >> 2) & 0x2AB53E78 ^ 0x50668)
       + (v149 ^ 0xDAEFFF7A)
       + ((2 * v149) & 0xB5DFFEF4)
       + (v152 ^ 0x7E6FFDF5)
       + ((2 * v152) & 0xFCDFFBEA)
       - 1857723563
       + ((v157 - ((2 * v157 + 9772436) & 0x13768F4) - 1746517180) ^ (v838 >> 2) ^ 0x80E100AF);
  HIDWORD(v126) = v154 ^ 0xB6A2;
  LODWORD(v126) = v154 ^ 0xDE680000;
  int v161 = v126 >> 18;
  unsigned int v162 = v160 - 386152396 - ((2 * v160) & 0xD1F79068);
  HIDWORD(v126) = v158 ^ 0x25594;
  LODWORD(v126) = v143 ^ 0x5B200000;
  int v163 = v126 >> 18;
  int v164 = ((v156 + 647981393) ^ (v154 >> 10) ^ v159 ^ 0x50B690A2)
       + ((v155 - ((2 * v155 + 1004717194) & 0x3307434C) - 1753938965) ^ (v113 >> 3) ^ 0xA8BAA87);
  unsigned int v165 = (v134 - 1834529367 - ((2 * v134) & 0x254E9B52)) ^ 0x92A74DA9 | ((v858 ^ 0x90)
                                                                       - 1200224046
                                                                       - ((2 * (v858 ^ 0x90)) & 0x1A4)) ^ 0xB87608D2;
  HIDWORD(v829) = v137;
  unsigned int v166 = ((4 * v137) & 0xFB7646AC ^ 0x407046A0)
       + ((2 * v137) ^ 0xDD831426)
       + (v164 ^ 0x3CF3FF97)
       + ((2 * v164) & 0x79E7FF2E);
  unsigned int v167 = v166 - ((2 * v166 + 178371110) & 0x5004B470) + 1834170187;
  int v168 = (((v165 - ((2 * v165) & 0xB969C4)) << 8) + 1555358208) ^ 0x5CB4E200;
  int v169 = v168 + 908015201 - ((2 * v168) & 0x6C3E6C00);
  HIDWORD(v126) = v136 ^ 0x53;
  LODWORD(v126) = v158 ^ 0x6A8E5580;
  int v170 = v126 >> 7;
  HIDWORD(v126) = v154 ^ 0x22222222;
  LODWORD(v126) = v154 ^ 0xDE68B680;
  int v171 = v126 >> 7;
  HIDWORD(v126) = v841 ^ 0xFFFFFFF3;
  LODWORD(v126) = v852 ^ 0x9892B900;
  int v172 = v126 >> 7;
  int v173 = v162 ^ 0x3C834;
  unsigned int v174 = v162;
  HIDWORD(v126) = v162 ^ 0x1C834;
  LODWORD(v126) = v162 ^ 0xE8FA0000;
  int v175 = v126 >> 17;
  HIDWORD(v126) = v167 ^ 0x5A38;
  LODWORD(v126) = v167 ^ 0x28020000;
  int v176 = v126 >> 17;
  unsigned int v177 = v162 ^ 0xE8F80000;
  HIDWORD(v126) = v162 ^ 0x3C834;
  LODWORD(v126) = v162 ^ 0xE8F80000;
  int v178 = (v175 ^ 0xFBF59FF6)
       + ((v126 >> 19) ^ 0x3B73A7D5)
       + ((2 * (v126 >> 19)) & 0x76E74FAA)
       + ((2 * v175) & 0xF7EB3FEC);
  unsigned int v179 = ((v158 >> 3) ^ 0x7717755E)
       + (v163 ^ 0x5F1BCBFF)
       + ((2 * v163) & 0xBE3797FE)
       + ((v158 >> 2) & 0x348D7FD8 ^ 0x10811540)
       + 647853077
       + ((v178 - ((2 * v178 + 288190570) & 0x3004898A) - 526844678) ^ (v162 >> 10) ^ 0x18387A37);
  unsigned int v180 = (v170 ^ 0xF6EFF7FA) + ((2 * v170) & 0xEDDFEFF4) + (v179 ^ 0xC0882142) - ((2 * v179) & 0x7EEFBD7A) + 1;
  unsigned int v181 = (((v852 << 14) ^ 0xAE5D4000) + 876718379 - ((2 * ((v852 << 14) ^ 0xAE5D4000)) & 0x68830000)) ^ 0x3441A92B | (v854 >> 10) ^ 0x20BAAB;
  HIDWORD(v830) = v113 ^ 0x9840590E;
  unsigned int v182 = (v113 ^ 0xEA1BC328 ^ (v180 - 1159495690 - ((2 * v180 - 1861235322) & 0xE4B7344C) + 243)) + (v113 ^ 0x9840590E);
  unsigned int v183 = v182 - 1552598245 - ((2 * v182) & 0x46EA7636);
  unsigned int v184 = ((v167 >> 10) ^ 0xFFFCB5EF)
       + ((2 * (v167 >> 10)) & 0x6D6AF2 ^ 0x40020)
       + 608903
       + ((v176 - ((2 * v176) & 0xA4A072A2) + 1380989265) ^ (v167 >> 19) ^ (((v167 << 13) ^ 0x4B470000)
                                                                          - ((2 * ((v167 << 13) ^ 0x4B470000)) & 0x85D60000)
                                                                          - 1024780956) ^ 0x90BB2935);
  LODWORD(v831) = v158;
  unsigned int v185 = v154;
  int v186 = ((v853 >> 3) ^ 0xB0E1BEE2)
       + (v847 ^ 0xDBF737FA)
       + ((2 * v847) & 0xB7EE6FF4)
       + ((v853 >> 2) & 0x2EFDFDFA ^ 0xDF3E823F)
       + ((2 * v158) ^ 0x2A277387)
       + ((4 * v158) & 0xFE77B15C ^ 0xAA311050)
       + (a47 ^ 0xA6212000)
       - ((2 * a47) & 0xB3BDBFFE)
       + (v184 ^ 0x1202AA9)
       - ((2 * v184) & 0xFDBFAAAC)
       + 4;
  int v187 = v186 - ((2 * v186 + 706037586) & 0x4D3E0368);
  unsigned int v188 = ((v852 >> 3) ^ 0x74B77AE)
       + (v172 ^ 0xFFF96777)
       + ((2 * v172) & 0xFFF2CEEE)
       + ((v852 >> 2) & 0x174DBEFE ^ 0xF9FB51A3)
       + (v181 ^ 0x8C400A04)
       - ((2 * v181) & 0xE77FEBF6)
       + 3;
  HIDWORD(v126) = v183 ^ 0x53B1B;
  LODWORD(v126) = v183 ^ 0xA3700000;
  int v189 = (v126 >> 19) - ((2 * (v126 >> 19)) & 0xFF454814) + 2141365258;
  int v190 = v183 ^ 0x13B1B;
  unsigned int v191 = v183 ^ 0xA3740000;
  HIDWORD(v126) = v183 ^ 0x13B1B;
  LODWORD(v126) = v183 ^ 0xA3740000;
  unsigned int v192 = v183;
  unsigned int v193 = ((v183 >> 10) ^ 0x40299B8B) + ((v183 >> 9) & 0x7D7274 ^ 0xFFAECDEB);
  unsigned int v194 = v187 + 2074715485;
  int v195 = v193 - 1073825476 + (v189 ^ ((v126 >> 17) - ((2 * (v126 >> 17)) & 0x81E293B8) + 1089554908) ^ 0x3F53EDD6);
  unsigned int v196 = (v195 - ((2 * v195) & 0x1CE4C3BA) + 242377181) ^ (v188 - ((2 * v188 - 1092953082) & 0xFD06BEF0) - 571421317);
  HIDWORD(v126) = (v187 + 2074715485) ^ 0x701B4;
  LODWORD(v126) = (v187 + 2074715485) ^ 0xA6980000;
  int v197 = (v126 >> 19) + 947690007 + (~(2 * (v126 >> 19)) | 0x8F06CBD3);
  unsigned int v198 = (v171 ^ 0x3F6F837F)
       + ((v154 >> 3) ^ 0x40A878DE)
       + (v161 ^ 0xFFEF67F7)
       + ((v154 >> 2) & 0x36CADC14 ^ 0x368A0C00)
       + ((2 * v171) & 0x7EDF06FE)
       + ((2 * v161) & 0xFFDECFEE);
  int v199 = v198 - 2 * ((v198 + 1698408064) & 0x70E1145D ^ v198 & 0x18) - 702760251;
  HIDWORD(v126) = v194 ^ 0x101B4;
  LODWORD(v126) = v194 ^ 0xA69E0000;
  int v200 = (v126 >> 17) - ((2 * (v126 >> 17)) & 0xF19DA29A) + 2026819917;
  HIDWORD(v126) = v174 ^ 0x34;
  LODWORD(v126) = v174 ^ 0xE8FBC800;
  int v201 = v126 >> 7;
  unsigned int v202 = v201 ^ 0xE6FFEF7E;
  unsigned int v203 = (2 * v201) & 0xCDFFDEFC;
  HIDWORD(v126) = v167 ^ 0x25A38;
  LODWORD(v126) = v167 ^ 0x28000000;
  int v204 = (v126 >> 18) - 740834460 - ((2 * (v126 >> 18)) & 0xA7AF75F4);
  int v205 = __PAIR64__(v173, v177) >> 18;
  unsigned int v206 = ((2 * v852) ^ 0x6870AF02)
       + ((4 * v852) & 0xB2ABBBD0 ^ 0x220AA1D0)
       - 1498799592
       + (v199 ^ (v194 >> 10) ^ v197 ^ v200 ^ 0x307AF8DE);
  unsigned int v207 = v206 + 1667038076 - ((2 * v206) & 0xC6B9F6F8);
  HIDWORD(v126) = v194 ^ 0x34;
  LODWORD(v126) = v194 ^ 0xA69F0180;
  int v208 = (v126 >> 7) - ((2 * (v126 >> 7)) & 0xCC7D23B2);
  HIDWORD(v126) = v167 ^ 0x38;
  LODWORD(v126) = v167 ^ 0x28025A00;
  int v209 = (v126 >> 7) - ((2 * (v126 >> 7)) & 0x5C23AE08);
  HIDWORD(v126) = v207 ^ 0x4FB7C;
  LODWORD(v126) = v207 ^ 0x63580000;
  int v210 = v126 >> 19;
  int v211 = (v205 ^ 0x6EFF3BEF) + ((v174 >> 3) ^ 0x22AB13B9) + v202 + ((v174 >> 2) & 0x3F68D57E ^ 0x3A28D00C);
  HIDWORD(v126) = v196 ^ 0x13EA5;
  LODWORD(v126) = v196 ^ 0x70F00000;
  int v212 = v126 >> 17;
  HIDWORD(v126) = v196 ^ 0x13EA5;
  LODWORD(v126) = v196 ^ 0x70F00000;
  int v213 = v126 >> 19;
  unsigned int v214 = (v212 ^ 0xDDDFBF9C)
       + ((v196 >> 10) ^ 0x869E2817)
       + (v213 ^ 0x5CF7FF9F)
       + ((2 * (v196 >> 10)) & 0x7BD74E ^ 0xFFC7AFF1);
  unsigned int v215 = ((2 * v213) & 0xB9EFFF3E) + ((2 * v212) & 0xBBBF7F38) + v214;
  unsigned int v216 = ((2 * v185) ^ 0xBAD15D4F)
       - 100675594
       + ((4 * v185) & 0xF3FF9FE8 ^ 0x8E5D6577)
       + ((v211
         + ((2 * v205) & 0xDDFE77DE)
         + v203
         - ((2 * (v211 + ((2 * v205) & 0xDDFE77DE) + v203) - 728181848) & 0x9038FC3E)
         + 845735923) ^ 0x4FD87FB1 ^ (v215 - 2 * ((v215 + 111553646) & 0x7C401AF ^ v214 & 1) - 966119908));
  unsigned int v217 = v192;
  HIDWORD(v126) = v192 ^ 0x1B;
  LODWORD(v126) = v192 ^ 0xA3753B00;
  int v218 = (v126 >> 7) - ((2 * (v126 >> 7)) & 0xCCB91290);
  HIDWORD(v833) = v167;
  int v219 = (__PAIR64__(v190, v191) >> 18) - ((2 * (__PAIR64__(v190, v191) >> 18)) & 0x94208B48);
  unsigned int v220 = ((v167 >> 3) ^ 0xDEEEB7B8)
       + ((v167 >> 2) & 0x37DDF9FE ^ 0x200908E)
       + 605094657
       + ((v204 - 2154) ^ (v209 - 1374562556) ^ 0x7DC66DFE);
  HIDWORD(v126) = v196 ^ 0x13EA5;
  LODWORD(v126) = v196 ^ 0x70F00000;
  int v221 = v126 >> 18;
  HIDWORD(v126) = v194 ^ 0x301B4;
  LODWORD(v126) = v194 ^ 0xA69C0000;
  int v222 = (v126 >> 18) - ((2 * (v126 >> 18)) & 0xB1E0CC82);
  HIDWORD(v126) = v207 ^ 0xFB7C;
  LODWORD(v126) = v207 ^ 0x635C0000;
  unint64_t v832 = __PAIR64__(v185, v174);
  int v223 = (v174 ^ 0xE8FBC834)
       + (v210 ^ 0xFFB61EF6)
       + ((v126 >> 17) ^ 0x1E7CAA7D)
       + ((2 * v210) & 0xFF6C3DEC)
       + ((2 * (v126 >> 17)) & 0x3CF954FA);
  unsigned int v224 = (v220 ^ 0xEFFCDDFC)
       + ((2 * v220) & 0xDFF9BBF8)
       + ((v207 >> 10) ^ HIDWORD(a9))
       + ((2 * (v207 >> 10)) & 0x7BA370 ^ 0x31A270)
       + ((v223 - 506644851) ^ 0x200A1156)
       - ((2 * (v223 - 506644851)) & 0xBFEBDD52)
       + 1;
  unsigned int v225 = v216 - 1683868739 - ((2 * v216) & 0x3744677A);
  HIDWORD(v126) = v225 ^ 0x33BD;
  LODWORD(v126) = v225 ^ 0x9BA20000;
  int v226 = v126 >> 17;
  HIDWORD(v126) = v225 ^ 0x233BD;
  LODWORD(v126) = v225 ^ 0x9BA00000;
  int v227 = ((v126 >> 19) ^ 0x7FF7F8FE)
       + (v226 ^ 0xD3EFBEA7)
       + ((2 * v226) & 0xA7DF7D4E)
       + ((2 * (v126 >> 19)) & 0xFFEFF1FC);
  unsigned int v228 = (v224 - ((2 * v224 - 537494038) & 0x995CC854) + 1017750303) ^ v174;
  unsigned int v229 = (v218 + 1717340488) ^ (v192 >> 3) ^ (v219 - 904903260) ^ (v225 >> 10) ^ (v227
                                                                                - ((2 * v227 + 1479577782) & 0x863D7624)
                                                                                + 1865876333);
  HIDWORD(v126) = v228 ^ 0x5AC1E;
  LODWORD(v126) = v228 ^ 0xA4500000;
  int v230 = v126 >> 19;
  HIDWORD(v126) = v196 ^ 0x25;
  LODWORD(v126) = v196 ^ 0x70F13E80;
  int v231 = v126 >> 7;
  HIDWORD(v126) = v225 ^ 0x3D;
  LODWORD(v126) = v225 ^ 0x9BA23380;
  int v232 = (v126 >> 7) - ((2 * (v126 >> 7)) & 0x3136B3D6);
  HIDWORD(v126) = v207 ^ 0x7C;
  LODWORD(v126) = v207 ^ 0x635CFB00;
  int v233 = v126 >> 7;
  HIDWORD(v834) = v194;
  HIDWORD(v126) = v228 ^ 0x1AC1E;
  LODWORD(v126) = v228 ^ 0xA4540000;
  int v234 = ((v194 >> 3) ^ 0x9893E236)
       + ((v194 >> 2) & 0x277FFBFE ^ 0xDED83F93)
       + ((v208 + 1715376601) ^ (v222 - 655333823) ^ 0xBECEF798)
       + ((v228 >> 10) ^ 0x936B2568)
       + (v230 ^ 0x3E79FBAF)
       + ((v126 >> 17) ^ 0x994040A3)
       + ((2 * v230) & 0x7CF3F75E)
       - ((2 * (v126 >> 17)) & 0xCD7F7EB8)
       + ((2 * (v228 >> 10)) & 0x7B9FF8 ^ 0xFFADF52F)
       + 147034541;
  LODWORD(v833) = v217;
  unsigned int v235 = (v217 ^ 0xA3753B1B) + 193534 + (v234 ^ 0xFFFCFFF4) + ((2 * v234) & 0xFFF9FFE8) + 3086;
  HIDWORD(v126) = v228 ^ 0x1AC1E;
  LODWORD(v126) = v228 ^ 0xA4540000;
  int v236 = v126 >> 18;
  unsigned int v237 = v228;
  HIDWORD(v126) = v228 ^ 0x1E;
  LODWORD(v126) = v228 ^ 0xA455AC00;
  int v238 = v126 >> 7;
  unsigned int v239 = (v236 ^ 0x81A9990A) + (v238 ^ 0x74EDFFFF);
  HIDWORD(v126) = v207 ^ 0xFB7C;
  LODWORD(v126) = v207 ^ 0x635C0000;
  int v240 = v126 >> 18;
  unsigned int v241 = (v235 - ((2 * v235) & 0x1F4E63B0) + 262615512) ^ v217;
  HIDWORD(v126) = v241 ^ 0xAC3;
  LODWORD(v126) = v241 ^ 0xACD20000;
  int v242 = v126 >> 17;
  HIDWORD(v126) = v229 ^ 0x3811;
  LODWORD(v126) = v229 ^ 0x7B1A0000;
  int v243 = v126 >> 17;
  int v244 = v229 ^ 0x23811;
  int v245 = v229 ^ 0x7B180000;
  unsigned int v246 = v229;
  HIDWORD(v126) = v229 ^ 0x23811;
  LODWORD(v126) = v229 ^ 0x7B180000;
  int v247 = ((v126 >> 19) ^ 0x2FFB3B8F)
       + (v243 ^ 0xFFFBBBF7)
       + ((2 * v243) & 0xFFF777EE)
       + ((2 * (v126 >> 19)) & 0x5FF6771E);
  unsigned int v248 = (v221 ^ 0x59FD72E3)
       + ((v196 >> 3) ^ 0xF2519C7B)
       + (v231 ^ 0x7DFEFFEF)
       + ((v196 >> 2) & 0x389F775E ^ 0x181C4708)
       + ((2 * v221) & 0xB3FAE5C6)
       + ((2 * v231) & 0xFBFDFFDE)
       + ((v247 - ((2 * v247 + 538054900) & 0x5AA5E874) - 44303180) ^ (v229 >> 10) ^ 0xD2B3CD4B);
  HIDWORD(a34) = v207;
  unsigned int v249 = v241;
  HIDWORD(v126) = v241 ^ 0x20AC3;
  LODWORD(v126) = v241 ^ 0xACD00000;
  int v250 = ((v207 >> 3) ^ 0xDFB4649B)
       + (v233 ^ 0xFDFEEFFE)
       + (v240 ^ 0xD886081)
       + ((v207 >> 2) & 0x27BFF7E8 ^ 0x9736C8)
       + ((2 * v233) & 0xFBFDDFFC)
       - ((2 * v240) & 0xE4EF3EFC)
       + ((v241 >> 10) ^ 0x3E84CB3E)
       + (v242 ^ 0x7FDE3FE6)
       + ((v126 >> 19) ^ 0xF5CFFBFF)
       + ((v241 >> 9) & 0x5FFF78 ^ 0x566900)
       + ((2 * v242) & 0xFFBC7FCC)
       + ((2 * (v126 >> 19)) & 0xEB9FF7FE)
       + 1;
  LODWORD(v834) = v196 ^ 0x70F13EA5;
  unsigned int v251 = (v196 ^ 0x21C467EA ^ (v250 - ((2 * v250 - 663425066) & 0xA26AB29E) - 1116745414)) + (v196 ^ 0x70F13EA5);
  unsigned int v252 = v251 - 831303552 - ((2 * v251) & 0x9CE6A10E);
  unsigned int v253 = v248 - 2 * ((v248 + 733204864) & 0x321463B8 ^ v248 & 0x18) + 1573401888;
  HIDWORD(v126) = v253 ^ 0x463A0;
  LODWORD(v126) = v253 ^ 0x32100000;
  int v254 = v126 >> 19;
  HIDWORD(v836) = v246;
  HIDWORD(v126) = v246 ^ 0x11111111;
  LODWORD(v126) = v246 ^ 0x7B1A3800;
  int v255 = v126 >> 7;
  LODWORD(a4_Block_object_dispose(va, 8) = (v253 >> 2) & 0x2F3EEF38 ^ 0xC040828;
  HIDWORD(v126) = v241 ^ 0x20AC3;
  LODWORD(v126) = v241 ^ 0xACD00000;
  int v256 = v126 >> 18;
  int v257 = v253 ^ 0x63A0;
  int v258 = v253 ^ 0x32140000;
  unsigned int v259 = v253;
  HIDWORD(v126) = v253 ^ 0x63A0;
  LODWORD(v126) = v253 ^ 0x32140000;
  int v260 = ((v126 >> 17) ^ 0x7FECBEDB)
       + (v254 ^ 0x7D3D6AB6)
       + ((2 * v254) & 0xFA7AD56C)
       + ((2 * (v126 >> 17)) & 0xFFD97DB6);
  int v261 = v260 - ((2 * v260 + 95136990) & 0xC8C474DC);
  unsigned int v262 = v252 + 7;
  HIDWORD(v126) = (v252 + 7) ^ 0x15087;
  LODWORD(v126) = (v252 + 7) ^ 0xCE720000;
  int v263 = v126 >> 17;
  int v264 = (v252 + 7) ^ 0x35087;
  unsigned int v265 = v262 ^ 0xCE700000;
  HIDWORD(v126) = v264;
  LODWORD(v126) = v262 ^ 0xCE700000;
  int v266 = v126 >> 19;
  unsigned int v267 = ((2 * v238) & 0xE9DBFFFE) - ((2 * v236) & 0xFCACCDEA);
  int v268 = v267 + v239 + 1 - 2 * ((v267 + v239 + 1 + 157837046) & 0x4762180F ^ (v239 + 1) & 1);
  int v269 = __PAIR64__(v244, v245) >> 18;
  LODWORD(a33) = v225;
  unsigned int v270 = ((v225 >> 3) ^ 0xEE3DB188)
       + ((v225 >> 2) & 0x3A93EFFE ^ 0x22808CEE)
       + 45484033
       + ((v261 - 415756067) ^ (v259 >> 10) ^ 0xE46EBF76);
  unsigned int v271 = (2 * v270) & 0xFFF5797C;
  int v272 = (((__PAIR64__(v225 ^ 0x233BD, v225 ^ 0x9BA00000) >> 18)
         + 921924571
         + (~(2 * (__PAIR64__(v225 ^ 0x233BD, v225 ^ 0x9BA00000) >> 18)) | 0x9219184B)) ^ 0xAE682A31 ^ (v232 - 1734649365))
       + (v270 ^ 0x54341);
  HIDWORD(v126) = v249 ^ 0xFFFFFFC3;
  LODWORD(v126) = v249 ^ 0xACD20A80;
  int v273 = v126 >> 7;
  int v845 = (__PAIR64__(v257, v258) >> 18) - ((2 * (__PAIR64__(v257, v258) >> 18)) & 0xB0C3556E);
  unsigned int v274 = (v269 ^ 0x6090106C) + (v255 ^ 0xFF2D7DDB) + ((2 * v255) & 0xFE5AFBB6) - ((2 * v269) & 0x3EDFDF26) + 1;
  HIDWORD(v126) = a53 ^ 0x20;
  LODWORD(v126) = a53 ^ 0xE35EFF00;
  int v275 = v126 >> 6;
  HIDWORD(v126) = v259 ^ 0x20;
  LODWORD(v126) = v259 ^ 0x32146380;
  int v276 = (v126 >> 7) - ((2 * (v126 >> 7)) & 0x27F60E1A);
  unsigned int v277 = ((v268 + 1355448068) ^ (v237 >> 3) ^ 0x53E8AD8D) + (v225 ^ 0x9BA233BD);
  unsigned int v278 = (v277 ^ 0xFEFF76FD)
       + ((2 * v277) & 0xFDFEEDFA)
       + 16812291
       + (((v266 ^ 0xB43A0002)
         + (v263 ^ 0x7BBB2757)
         + ((2 * v263) & 0xF7764EAE)
         - ((2 * v266) & 0x978BFFFA)
         + 298769726
         - ((2 * ((v266 ^ 0xB43A0002) + (v263 ^ 0x7BBB2757) + ((2 * v263) & 0xF7764EAE) - ((2 * v266) & 0x978BFFFA) + 1)
           - 1609191092) & 0x8388092E)) ^ (v262 >> 10) ^ 0x41F79843);
  unsigned int v279 = v272 - v271 - 368269121 - ((2 * (v272 - v271 - 344897)) & 0xD423D870) + 56;
  int v280 = v279 ^ 0x1EC38;
  unsigned int v281 = v279 ^ 0xEA100000;
  HIDWORD(v126) = v279 ^ 0x1EC38;
  LODWORD(v126) = v279 ^ 0xEA100000;
  int v282 = v126 >> 19;
  HIDWORD(v126) = v279 ^ 0x1EC38;
  LODWORD(v126) = v279 ^ 0xEA100000;
  int v283 = ((v274 - ((2 * v274 + 8708976) & 0x15CE6E1C) + 724150470) ^ (v246 >> 3) ^ 0x8584700C)
       + ((v279 >> 10) ^ 0x2A189259)
       + (v282 ^ 0x410C2230)
       + ((v126 >> 17) ^ 0xE345344E)
       + ((v279 >> 9) & 0x3BD3BA ^ 0xFFCEFF4D)
       - ((2 * (v126 >> 17)) & 0x39759762)
       - ((2 * v282) & 0x7DE7BB9E)
       - 1316187295;
  unint64_t v835 = __PAIR64__(v249, v237);
  unsigned int v284 = (v237 ^ 0x18A9D063 ^ (v283 - ((2 * v283) & 0x79F8F8FA) - 1124303747)) + (v237 ^ 0xA455AC1E);
  unsigned int v285 = (v225 ^ 0x9BA233BD) + (v278 ^ 0xBDFC53FF) + ((2 * v278) & 0x7BF8A7FE) + 1107536897;
  unsigned int v286 = v285 - 352357956 - ((2 * v285) & 0xD5FEE378);
  LODWORD(a3_Block_object_dispose(va, 8) = v262;
  HIDWORD(v126) = v262 ^ 7;
  LODWORD(v126) = v262 ^ 0xCE735080;
  int v287 = v126 >> 7;
  HIDWORD(v126) = v286 ^ 0x171BC;
  LODWORD(v126) = v286 ^ 0xEAFE0000;
  int v288 = v126 >> 17;
  HIDWORD(v126) = a53 ^ 0x720;
  LODWORD(v126) = a53 ^ 0xE35EF800;
  int v289 = v126 >> 11;
  unsigned int v290 = v284 - 349332224 - ((2 * v284) & 0xD65B3A3E) + 31;
  HIDWORD(v126) = v290 ^ 0x59D1F;
  LODWORD(v126) = v290 ^ 0xEB280000;
  int v291 = v126 >> 19;
  int v292 = __PAIR64__(v264, v265) >> 18;
  HIDWORD(v126) = v286 ^ 0x771BC;
  LODWORD(v126) = v286 ^ 0xEAF80000;
  int v293 = ((v249 >> 3) ^ 0x6AE4BA26)
       + (v256 ^ 0x7FCFFEBD)
       + ((2 * v256) & 0xFF9FFD7A)
       + ((v249 >> 2) & 0x3EFDF6FC ^ 0x2A3482B0)
       + 11601349
       + (((v126 >> 19) - ((2 * (v126 >> 19)) & 0xDB969542) + 1842039457) ^ (v286 >> 10) ^ (v288
                                                                                          - ((2 * v288) & 0x9663B9A4)
                                                                                          + 1261558994) ^ 0x26C029AF);
  unsigned int v294 = (v273 ^ 0xDFBFDAEF) + ((2 * v273) & 0xBF7FB5DE) + (v293 ^ 0x2108183) - ((2 * v293) & 0xFBDEFCF8) + 1;
  HIDWORD(v126) = a53 ^ 0x15EFF20;
  LODWORD(v126) = a53 ^ 0xE3FFFFFF;
  int v295 = (__PAIR64__(v280, v281) >> 18) - ((2 * (__PAIR64__(v280, v281) >> 18)) & 0x474CEC6C);
  int v296 = ((v126 >> 25) ^ 0x40410870)
       + (v289 ^ 0x8A100081)
       + (v275 ^ 0xF547FBC3)
       + ((2 * v275) & 0xEA8FF786)
       - ((2 * (v126 >> 25)) & 0x7F7DEF1E)
       - ((2 * v289) & 0xEBDFFEFC)
       + 2;
  int v297 = v296 - ((2 * v296 - 2133985644) & 0xCCFE853A);
  unsigned int v298 = v272 - v271 - 368269121 - ((2 * (v272 - v271 - 344897)) & 0xD423D870) + 56;
  HIDWORD(v126) = v298 ^ 0x38;
  LODWORD(v126) = v298 ^ 0xEA11EC00;
  int v299 = (v126 >> 7) - ((2 * (v126 >> 7)) & 0xDF251B2E);
  HIDWORD(v126) = v286 ^ 0x3C;
  LODWORD(v126) = v286 ^ 0xEAFF7180;
  int v300 = v126 >> 7;
  HIDWORD(v126) = v290 ^ 0x19D1F;
  LODWORD(v126) = v290 ^ 0xEB2C0000;
  int v301 = v126 >> 17;
  HIDWORD(v126) = v290 ^ 0x19D1F;
  LODWORD(v126) = v290 ^ 0xEB2C0000;
  int v839 = v126 >> 18;
  int v302 = ((v259 >> 3) ^ 0xB1DDFBE8) + a48 + 1214285924 + ((v845 + 1482795703) ^ (v276 - 1812265203) ^ 0xCB9AADBA);
  unsigned int v303 = (v302 ^ 0x7FFFEFE3)
       + ((2 * v302) & 0xFFFFDFC6)
       + ((v290 >> 10) ^ 0x78C72680)
       + (v301 ^ 0x5FE74CDB)
       + (v291 ^ 0x2440840)
       + ((2 * (v290 >> 10)) & 0x7BDBCE ^ 0x7192CE)
       + ((2 * v301) & 0xBFCE99B6)
       - ((2 * v291) & 0xFB77EF7E)
       + 1;
  unsigned int v304 = (v249 ^ 0x783DD935 ^ (v303 - ((2 * v303 + 1236113972) & 0xA9DFA7EC) + 2043060496)) + (v249 ^ 0xACD20AC3);
  unsigned int v305 = v304 - 197921478 - ((2 * v304) & 0xE867EA74);
  unsigned int v306 = (v292 ^ 0x8C0168AB) + (v287 ^ 0xF7DDFAF3) + ((2 * v287) & 0xEFBBF5E6) - ((2 * v292) & 0xE7FD2EA8) + 1;
  unsigned int v307 = v306 - ((2 * v306 - 129943358) & 0xF86EB64E);
  HIDWORD(v126) = a53 ^ 0x1EFF20;
  LODWORD(v126) = a53 ^ 0xE3400000;
  int v308 = v126 >> 22;
  HIDWORD(v126) = v305 ^ 0x3F53A;
  LODWORD(v126) = v305 ^ 0xF4300000;
  int v309 = (v126 >> 19) - ((2 * (v126 >> 19)) & 0x9F5131AE);
  HIDWORD(v126) = a53 ^ 0x1F20;
  LODWORD(v126) = a53 ^ 0xE35EE000;
  int v310 = v126 >> 13;
  HIDWORD(v840) = a59 ^ 0xB287664C;
  unsigned int v855 = v298;
  unsigned int v311 = ((v298 >> 3) ^ 0x7AB1E63A)
       + ((v298 >> 2) & 0xFE7B77A ^ 0xA84330A)
       - 1744034749
       + ((v295 + 598111798) ^ (v299 - 275608169) ^ 0xCC34FBA1);
  unsigned int v312 = v311 - ((2 * v311) & 0x620AF350);
  LODWORD(a4_Block_object_dispose(va, 8) = v294 - ((2 * v294 + 1012877082) & 0x24312628) - 1337444703;
  LODWORD(v82_Block_object_dispose(va, 8) = a48 ^ 0x9314;
  HIDWORD(v126) = a48 ^ 0x9314;
  LODWORD(v126) = a48 ^ 0x92180000;
  int v313 = v126 >> 17;
  HIDWORD(v126) = a48 ^ 0x9314;
  LODWORD(v126) = a48 ^ 0x92180000;
  int v314 = ((v307 + 2019030920) ^ (a38 >> 3) ^ 0xE5F93137)
       + ((a48 >> 10) ^ 0xCDD369B3)
       + (v313 ^ 0xDDA77ABB)
       + ((v126 >> 19) ^ 0x98A98289)
       + ((2 * (a48 >> 10)) & 0x6FDF2E ^ 0x490C08)
       + ((2 * v313) & 0xBB4EF576)
       - ((2 * (v126 >> 19)) & 0xCEACFAEC)
       - 1145629915;
  HIDWORD(v126) = a53;
  LODWORD(v126) = a53 ^ 0xE35EFF20;
  HIDWORD(v827) = a53 ^ 0xE35EFF20;
  unsigned int v315 = (a59 ^ a53 ^ 0x51D9996C)
       + (((a56 ^ 0xE64661E1) + (a59 ^ 0xB287664C)) ^ 0x5FF6BFF7)
       + ((2 * ((a56 ^ 0xE64661E1) + (a59 ^ 0xB287664C))) & 0xBFED7FEE)
       - 1610006519;
  unsigned int v316 = (a57 ^ ((a53 ^ 0xE35EFF20)
               + (a56 ^ a53 ^ 0x5189EC1)
               - ((2 * ((a53 ^ 0xE35EFF20) + (a56 ^ a53 ^ 0x5189EC1))) & 0x8729DCE2)
               - 1013649807) ^ 0x45F24C3C ^ (v297 - 1494860313))
       + 694531638;
  int v317 = (((a53 ^ 0xE35EFF20) + (a56 ^ 0xE64661E1)) ^ 0xC20403)
       + (v308 ^ 0xEE9DF6FF)
       + ((v126 >> 2) ^ 0xD5D35FDE)
       + (v310 ^ 0x8C804104)
       + ((2 * v308) & 0xDD3BEDFE)
       + ((2 * (v126 >> 2)) & 0xABA6BFBC)
       - ((2 * ((a53 ^ 0xE35EFF20) + (a56 ^ 0xE64661E1))) & 0xFE7BF7F8)
       - ((2 * v310) & 0xE6FF7DF6)
       + (v315 ^ 0xBAADBD6E)
       + ((2 * v315) & 0x755B7ADC)
       + (v316 ^ 0xFFF571E1)
       + ((2 * v316) & 0xFFEAE3C2);
  int v318 = v169 ^ 0x361F3661 | ((v859 ^ 0x90) + 1690772880 - ((2 * (v859 ^ 0x90)) & 0x120)) ^ 0x64C72590;
  unsigned int v319 = v317 + (v318 ^ 0xCFD1F79F) + ((2 * v318) & 0x9FA3EF3E);
  HIDWORD(v126) = v305 ^ 0x1F53A;
  LODWORD(v126) = v305 ^ 0xF4320000;
  int v320 = (v126 >> 17) - ((2 * (v126 >> 17)) & 0x171541CA);
  LODWORD(a35) = v259;
  int v321 = (a35 ^ 0xCDEB9C5F) + (a35 ^ 0x597E3D10 ^ (v314 - ((2 * v314) & 0xD6D4BD60) + 1802133168)) + 1;
  HIDWORD(v126) = v286 ^ 0x371BC;
  LODWORD(v126) = v286 ^ 0xEAFC0000;
  int v322 = v126 >> 18;
  unsigned int v323 = v319 + 2;
  unsigned int v324 = v319 + 2 - ((2 * (v319 + 2) + 1202616920) & 0x8D254678) - 362160024;
  int v325 = (v324 << 21) ^ 0x67800000;
  unsigned int v326 = ((v325 - ((2 * v325) & 0x97400000) - 876801048) & 0xF8000000 | (v324 >> 11)) ^ 0xC818D254;
  unsigned int v327 = v326 - 2 * (v326 & 0x1012E4AF ^ (v324 >> 11) & 8);
  unsigned int v328 = ((v305 >> 10) ^ 0x803D467D)
       + 2147464577
       + ((v305 >> 9) & 0x7F6AFE ^ 0xFF85F705)
       + ((v309 + 1336449239) ^ (v320 - 1953849115) ^ 0xC4223832);
  LODWORD(a47) = v290;
  HIDWORD(v126) = v290 ^ 0x1F;
  LODWORD(v126) = v290 ^ 0xEB2D9D00;
  int v329 = v126 >> 7;
  unsigned int v330 = (v324 ^ 0xC692A33C)
       + (a53 ^ 0xE35EFF20)
       + 1844465651
       - ((2 * ((v324 ^ 0xC692A33C) + (a53 ^ 0xE35EFF20))) & 0xDBE09FE6);
  HIDWORD(v126) = (v324 >> 11) ^ 0xD254;
  LODWORD(v126) = (v327 - 1798118233) ^ 0x94D00000;
  int v331 = (v126 >> 19) + 1365315328 - ((2 * (v126 >> 19)) & 0xA2C21FB2);
  unsigned int v332 = v325 + 1982533280 - ((2 * v325) & 0xEC400000);
  unsigned int v333 = (v328 - 728355222 + (~(2 * v328) | 0x56D3A32D)) ^ (v312 - 1325041240);
  unsigned int v334 = v321 - ((2 * v321) & 0xDA0C373E) + 1829116831;
  HIDWORD(v126) = v334 ^ 0x61B9F;
  LODWORD(v126) = v334 ^ 0x6D000000;
  int v335 = v126 >> 19;
  v331 += 217;
  HIDWORD(v126) = v331 ^ 0xD9;
  LODWORD(v126) = v331 ^ 0x51610F00;
  int v336 = (v126 >> 8) - 15840601 - ((2 * (v126 >> 8)) & 0xFE1C954E);
  HIDWORD(v126) = v324 ^ 0x92A33C;
  LODWORD(v126) = v324 ^ 0xC6000000;
  int v337 = v126 >> 25;
  HIDWORD(v126) = v324 ^ 0x12A33C;
  LODWORD(v126) = v324 ^ 0xC6800000;
  int v338 = v126 >> 22;
  HIDWORD(v126) = v334 ^ 0x1B9F;
  LODWORD(v126) = v334 ^ 0x6D060000;
  unsigned int v339 = (v332 ^ 0x762B0EA0 | (v324 >> 11) ^ 0x18D254)
       - ((2 * (v332 ^ 0x762B0EA0 | (v324 >> 11) ^ 0x18D254)) & 0xFE1270C2);
  HIDWORD(v843) = a56 ^ 0xE64661E1;
  unint64_t v837 = __PAIR64__(v333, v334);
  int v340 = ((v334 >> 10) ^ 0x7FF5B6D1)
       + ((v334 >> 9) & 0x5DEEAE ^ 0x14820C)
       - 2146367319
       + (((v126 >> 17) - ((2 * (v126 >> 17)) & 0x11D1A5B2) + 149476057) ^ (v335 - ((2 * v335) & 0xADE5E388) + 1458762180) ^ 0x5E1A231D);
  HIDWORD(v126) = v333 ^ 0x157C1;
  LODWORD(v126) = v333 ^ 0x65920000;
  int v341 = (v126 >> 17) - ((2 * (v126 >> 17)) & 0x9BE28AFE);
  unsigned int v342 = v336 ^ 0xFF0E4AA7 | (((v324 << 26) ^ 0xF0000000) + 668730235 - ((2 * ((v324 << 26) ^ 0xF0000000)) & 0x48000000)) ^ 0x27DC037B;
  HIDWORD(v126) = v333 ^ 0x357C1;
  LODWORD(v126) = v333 ^ 0x65900000;
  int v343 = (v126 >> 19) - ((2 * (v126 >> 19)) & 0x274CF462);
  HIDWORD(v126) = v324 ^ 0x33C;
  LODWORD(v126) = v324 ^ 0xC692A000;
  int v344 = v126 >> 13;
  unsigned int v345 = ((v286 >> 3) ^ 0x3F1FEFB7)
       + (v300 ^ 0x7ED77D9F)
       + (v322 ^ 0x9446048)
       + ((v286 >> 2) & 0x3B7FFCFE ^ 0xC5C02391)
       + ((2 * v300) & 0xFDAEFB3E)
       - ((2 * v322) & 0xED773F6E);
  unsigned int v346 = (v298 ^ 0x15EE13C7) + (v340 ^ 0xFBEDFD74) + ((2 * v340) & 0xF7DBFAE8) + 68289165;
  unsigned int v347 = v345 + (v346 ^ 0xB7EFBBDF) + ((2 * v346) & 0x6FDF77BE) + 3;
  unsigned int v348 = v347 - ((2 * v347 + 996723056) & 0x9D8393CE);
  unsigned int v349 = ((v339 + 2131310689) ^ 0x5E76EAEB ^ (v342 - ((2 * v342) & 0x42FFA514) + 562025098))
       + (a56 ^ v330 ^ 0xC01338F9 ^ ((a56 ^ 0x19B99E1E)
                                   + (v324 ^ 0xC692A33C)
                                   + 1
                                   - ((2 * ((a56 ^ 0x19B99E1E) + (v324 ^ 0xC692A33C) + 1)) & 0x974A2DD6)
                                   + 1269110507));
  unsigned int v350 = (a59 ^ 0xB287664C) + (v337 ^ 0xB6FBFE35) + ((2 * v337) & 0x6DF7FC6A) + 1224999371;
  unsigned int v351 = (v350 ^ 0x7BC7DFF7) + ((2 * v350) & 0xF78FBFEE) + (v349 ^ 0x8028C043) - ((2 * v349) & 0xFFAE7F78) + 1;
  int v352 = ((v333 >> 10) ^ 0x7B62131A)
       + ((v333 >> 9) & 0x76EF9E ^ 0x32C98A)
       - 2071689167
       + ((v341 - 839826049) ^ (v343 - 1817806287) ^ 0x5E573F4E);
  HIDWORD(v831) = v305;
  HIDWORD(v126) = v305 ^ 0x3A;
  LODWORD(v126) = v305 ^ 0xF433F500;
  LODWORD(v846) = v126 >> 7;
  unsigned int v353 = ((a47 >> 3) ^ 0x1CA4E7E3)
       + (v329 ^ 0x7EF3BCFF)
       + (v839 ^ 0x57BFDDBE)
       + ((a47 >> 2) & 0x3C7D577E ^ 0xC7B6B8B9)
       + ((2 * v329) & 0xFDE779FE)
       + ((2 * v839) & 0xAF7FBB7C)
       + (v352 ^ 0x80D94246)
       - ((2 * v352) & 0xFE4D7B72)
       + 3;
  HIDWORD(v126) = v323;
  LODWORD(v126) = v324 ^ 0xC692A33C;
  unsigned int v354 = (a53 ^ 0x25CC5C1C ^ v324)
       + (((v324 ^ 0xC692A33C) + (a56 ^ 0xE64661E1)) ^ 0x133162)
       - ((2 * ((v324 ^ 0xC692A33C) + (a56 ^ 0xE64661E1))) & 0xFFD99D3A)
       - 1257826;
  int v355 = (((a56 ^ 0xE64661E1) + (a53 ^ 0x1CA100DF) + 1) ^ 0x5D5D7390)
       + ((2 * ((a56 ^ 0xE64661E1) + (a53 ^ 0x1CA100DF) + 1)) & 0xBABAE720)
       + (v338 ^ 0x80260F03)
       + (v344 ^ 0xF36FFEFB)
       + ((v126 >> 2) ^ 0xDAF95BEF)
       + ((2 * v344) & 0xE6DFFDF6)
       + ((2 * (v126 >> 2)) & 0xB5F2B7DE)
       - ((2 * v338) & 0xFFB3E1F8)
       + (v354 ^ 0x5DFEFDFD)
       + ((2 * v354) & 0xBBFDFBFA)
       - 166452090
       + (v842 ^ 0xFC7AB225 ^ (v351 - ((2 * v351 + 126065030) & 0x72983D4E) - 1123161238));
  unsigned int v356 = v355 + 1901593577 - ((2 * v355) & 0xE2B007D2);
  HIDWORD(v126) = v305 ^ 0x3F53A;
  LODWORD(v126) = v305 ^ 0xF4300000;
  LODWORD(v843) = v126 >> 18;
  LODWORD(v836) = v286;
  int v357 = (v286 ^ 0x15008E43) + (v286 ^ 0x664F0F5C ^ (v353 - ((2 * v353 + 224632182) & 0x1960FDC0) + 862080411)) + 1;
  unsigned int v358 = ((2 * v357) & 0x3FEDDFE6) + (v357 ^ 0x9FF6EFF3);
  HIDWORD(v126) = a48 ^ 0x14;
  LODWORD(v126) = a48 ^ 0x92189300;
  LODWORD(v829) = (v126 >> 7) - ((2 * (v126 >> 7)) & 0xB3477504);
  unsigned int v359 = ((2 * ((v356 ^ 0x715803E9) + (v324 ^ 0xC692A33C))) & 0xDAEDECBC)
       + (((v356 ^ 0x715803E9) + (v324 ^ 0xC692A33C)) ^ 0xED76F65E);
  HIDWORD(v126) = a48 ^ 0x9314;
  LODWORD(v126) = a48 ^ 0x92180000;
  HIDWORD(v82_Block_object_dispose(va, 8) = (v126 >> 18) - ((2 * (v126 >> 18)) & 0x6007F2AC);
  HIDWORD(v126) = v356 ^ 0x29;
  LODWORD(v126) = v356 ^ 0x715803C0;
  int v360 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0x4E95FB1C);
  HIDWORD(v126) = v356 ^ 0x3E9;
  LODWORD(v126) = v356 ^ 0x71580000;
  int v361 = v126 >> 11;
  HIDWORD(v126) = v356 ^ 0x3E9;
  LODWORD(v126) = v356 ^ 0x71580000;
  int v362 = v126 >> 13;
  int v363 = (v356 ^ 0x715803E9) + 1;
  HIDWORD(v126) = v356 ^ 0x15803E9;
  LODWORD(v126) = v356 ^ 0x70000000;
  int v364 = ((v126 >> 25) ^ 0xC4ECEF3B)
       + ((2 * (v126 >> 25)) & 0x89D9DE76)
       + 991105221
       + ((v361 - ((2 * v361) & 0xF732B82E) - 73835497) ^ (v360 + 659225998) ^ 0xDCD3A199);
  HIDWORD(v126) = v356 ^ 0x1803E9;
  LODWORD(v126) = v356 ^ 0x71400000;
  int v365 = v126 >> 22;
  unsigned int v366 = (v348 + 1819684511) ^ v298;
  HIDWORD(v126) = v366 ^ 0x25DF;
  LODWORD(v126) = v366 ^ 0x24D00000;
  unsigned int v367 = (v330 ^ 0x6DF04FF3)
       + ((v363 + (v324 ^ 0x396D5CC3) - ((2 * (v363 + (v324 ^ 0x396D5CC3))) & 0xD925CFC8) - 325916700) ^ ((v356 ^ 0x715803E9) + (a53 ^ 0xE35EFF20) - ((2 * ((v356 ^ 0x715803E9) + (a53 ^ 0xE35EFF20))) & 0x8BDA4476) - 974314949) ^ 0xD6803A20);
  int v368 = (v126 >> 19) - ((2 * (v126 >> 19)) & 0x9236CCBA);
  HIDWORD(v126) = v356 ^ 1;
  LODWORD(v126) = v356 ^ 0x715803E8;
  int v369 = v126 >> 2;
  unsigned int v370 = (a53 ^ 0xE35EFF20)
       + (((a53 ^ 0x9206FCC9 ^ v356) + 310970786 + v359) ^ 0x6BFCF5DD)
       + ((2 * ((a53 ^ 0x9206FCC9 ^ v356) + 310970786 + v359)) & 0xD7F9EBBA)
       - 1811740125;
  unsigned int v371 = (v370 ^ 0x71D14BAF)
       + ((2 * v370) & 0xE3A2975E)
       - 1909541807
       + (a56 ^ 0x48F3219F ^ (v364 - ((2 * v364) & 0x5D6A80FC) - 1363853186));
  HIDWORD(v126) = v366 ^ 0x25DF;
  LODWORD(v126) = v366 ^ 0x24D00000;
  int v372 = (v126 >> 17) - ((2 * (v126 >> 17)) & 0xF653F92A);
  int v373 = (v365 ^ 0x4A8004A0)
       + (v369 ^ 0x3BEEEEEA)
       + (v362 ^ 0x3F593F7)
       + ((2 * v369) & 0x77DDDDD4)
       + ((2 * v362) & 0x7EB27EE)
       - ((2 * v365) & 0x6AFFF6BE)
       + ((v367 + 1) ^ 0xC3DFBF3F)
       + ((2 * (v367 + 1)) & 0x87BF7E7E)
       - 1313097408
       + (v830 ^ 0x6F1B8400 ^ (((2 * v371) & 0xDEECDBBE)
                             + (v371 ^ 0xEF766DDF)
                             - ((2 * (((2 * v371) & 0xDEECDBBE) + (v371 ^ 0xEF766DDF)) + 565233614) & 0xB5905C40)
                             - 341798393));
  unsigned int v374 = v373 - 32169984 - ((2 * v373) & 0xFC2A524E);
  LODWORD(v840) = v358;
  unsigned int v375 = v374 + 2343;
  unsigned int v376 = (v374 + 2343) ^ 0xFE152927;
  unsigned int v377 = (v356 ^ 0x8EA7FC16) + v376 - 442637329 - ((2 * ((v356 ^ 0x8EA7FC16) + v376 + 1)) & 0xCB3BC7DC);
  HIDWORD(v126) = (v374 + 2343) ^ 0x927;
  LODWORD(v126) = (v374 + 2343) ^ 0xFE152000;
  int v378 = (v126 >> 13) - ((2 * (v126 >> 13)) & 0x6F1EE06);
  HIDWORD(v126) = (v374 + 2343) ^ 0x127;
  LODWORD(v126) = (v374 + 2343) ^ 0xFE152800;
  int v379 = (v126 >> 11) - ((2 * (v126 >> 11)) & 0x7602249E);
  unsigned int v380 = (v356 ^ 0x715803E9) + ((2 * (v374 + 2343)) ^ 0x83D18DB9) + ((4 * (v374 + 2343)) & 0xFFF7BFEC ^ 0xF854A48C);
  HIDWORD(v126) = -2352 - v374;
  LODWORD(v126) = (v374 + 2343) ^ 0xFE152924;
  int v381 = (v126 >> 2) - ((2 * (v126 >> 2)) & 0xE25818B4);
  HIDWORD(v126) = (v374 + 2343) ^ 0x152927;
  LODWORD(v126) = (v374 + 2343) ^ 0xFE000000;
  int v382 = v126 >> 22;
  LODWORD(v126) = -2344 - v374;
  int v383 = (v126 >> 25) - ((2 * (v126 >> 25)) & 0xE580F6A2);
  unsigned int v384 = (v382 ^ 0x9330) - ((2 * v382) & 0xFFFED99E) - 37680 + ((v381 - 248771494) ^ (v378 - 2089224445) ^ 0x7254FB59);
  HIDWORD(v126) = v375 ^ 0xFFFFFFE7;
  LODWORD(v126) = v375 ^ 0xFE152900;
  unsigned int v385 = (v377 ^ (v376 + (v324 ^ 0xC692A33C) - ((2 * (v376 + (v324 ^ 0xC692A33C))) & 0xA0C424BA) + 1348604509) ^ 0xB5FFF1B3)
       - v359;
  int v386 = (a53 ^ 0xE35EFF20)
       + ((v379 + 989925967) ^ ((v126 >> 6) - ((2 * (v126 >> 6)) & 0x861ED25E) - 1022400209) ^ (v383 + 1925217105) ^ 0x7531FFCE);
  unsigned int v387 = ((2 * v324) ^ 0x62C2F9C7)
       + ((4 * v324) & 0xDFCF7F7C ^ 0x1A4A0C70)
       + ((v380 - 2147213303) ^ 0x28802205)
       - ((2 * (v380 - 2147213303)) & 0xAEFFBBF4)
       + ((v386 + 1) ^ 0xFDDFDB7F)
       + ((2 * (v386 + 1)) & 0xFBBFB6FE)
       + 1;
  unsigned int v388 = (HIDWORD(v829) ^ 0xE07C119A ^ (v387 - ((2 * v387 + 1060616080) & 0x60C01444) - 805575190))
       + ((v384 - ((2 * v384) & 0x2E18BDE2) - 1760796943) ^ (v385 - ((2 * v385 + 451800252) & 0x173FADD0) + 2031537478) ^ 0x1C938819);
  unsigned int v389 = (2 * v388) & 0xD7E38BB4;
  v388 += 1811006938;
  unsigned int v390 = v388 - v389;
  HIDWORD(v126) = v388 ^ 2;
  LODWORD(v126) = (v388 - v389) ^ 0x6BF1C5D8;
  int v391 = v126 >> 2;
  unsigned int v392 = v363 + (v390 ^ 0x940E3A25);
  HIDWORD(v126) = v390 ^ 0x1A;
  LODWORD(v126) = v390 ^ 0x6BF1C5C0;
  int v393 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0xC57CC1BE);
  HIDWORD(v126) = v390 ^ 0x31C5DA;
  LODWORD(v126) = v390 ^ 0x6BC00000;
  int v394 = v126 >> 22;
  int v395 = (v375 ^ 0x1EAD6D8) + 1;
  int v396 = (((v390 ^ 0x6BF1C5DA) + v395) ^ 0x2DEFEFDB) - 770699227 + ((2 * ((v390 ^ 0x6BF1C5DA) + v395)) & 0x5BDFDFB6);
  unsigned int v397 = (v356 ^ 0x8EA7FC16)
       + (((v390 ^ 0x6BF1C5DA) + v376) ^ 0x77F777FC)
       + ((2 * ((v390 ^ 0x6BF1C5DA) + v376)) & 0xEFEEEFF8)
       - 2012706811;
  unsigned int v398 = ((2 * v392) & 0xB772BF7E) + (v392 ^ 0x5BB95FBF) + (v397 ^ 0xBBF7FAF2) + ((2 * v397) & 0x77EFF5E4);
  unsigned int v399 = (v377 ^ 0xE59DE3EE)
       + ((v396 + (v356 ^ 0x1AA9C633 ^ v390)) ^ 0xFFECACFF)
       + ((2 * (v396 + (v356 ^ 0x1AA9C633 ^ v390))) & 0xFFD959FE);
  HIDWORD(v126) = v390 ^ 0x1F1C5DA;
  LODWORD(v126) = v390 ^ 0x6A000000;
  int v400 = v126 >> 25;
  HIDWORD(v126) = v390 ^ 0x5DA;
  LODWORD(v126) = v390 ^ 0x6BF1C000;
  int v401 = v126 >> 13;
  HIDWORD(v126) = v390 ^ 0x5DA;
  LODWORD(v126) = v390 ^ 0x6BF1C000;
  int v402 = (v400 ^ 0xE1D2FFFF)
       + ((2 * v400) & 0xC3A5FFFE)
       + 506265602
       + ((v393 + 1656643807) ^ ((v126 >> 11) - ((2 * (v126 >> 11)) & 0xA727F9F2) - 745276167) ^ 0x4ED263D9);
  unsigned int v403 = (v324 ^ 0xC692A33C) + (v402 ^ 0x6F9739DA) + ((2 * v402) & 0xDF2E73B4) - 1872181722;
  unsigned int v404 = ((v398 - ((2 * v398 - 794998114) & 0xD49F313C) - 761381395) ^ 0x1B536946 ^ (v403
                                                                                   - ((2 * v403) & 0xE239E3B0)
                                                                                   - 249761320))
       + 672521749;
  unsigned int v405 = HIDWORD(v830) + (v404 ^ 0xF9FBFBF7) + ((2 * v404) & 0xF3F7F7EE) + 100926473;
  unsigned int v406 = (v391 ^ 0xEFE6FDF5)
       + (v394 ^ 0x477ABBAF)
       + (v401 ^ 0xC8090350)
       + ((2 * v391) & 0xDFCDFBEA)
       + ((2 * v394) & 0x8EF5775E)
       - ((2 * v401) & 0x6FEDF95E)
       + ((v399 + 1266433) ^ 0x890918)
       - ((2 * (v399 + 1266433)) & 0xFEEDEDCE)
       + (v405 ^ 0x6FB91FEE)
       + 2;
  unsigned int v407 = v406
       + ((2 * v405) & 0xDF723FDC)
       - ((2 * (v406 + ((2 * v405) & 0xDF723FDC)) + 547763208) & 0x4921F9F8)
       - 1260120320;
  int v408 = (v407 ^ 0x2490FCFC)
       + (v390 ^ 0x6BF1C5DA)
       + 864239852
       - ((2 * ((v407 ^ 0x2490FCFC) + (v390 ^ 0x6BF1C5DA))) & 0x670681D8);
  HIDWORD(v126) = v407 ^ 0x3C;
  LODWORD(v126) = v407 ^ 0x2490FCC0;
  int v409 = v126 >> 6;
  HIDWORD(v126) = v407 ^ 0x10FCFC;
  LODWORD(v126) = v407 ^ 0x24800000;
  int v410 = v126 >> 22;
  int v411 = ((2 * a47) ^ 0xB8AC5C8)
       + ((4 * a47) & 0xBBA3FFEC ^ 0xA8A2746C)
       + 573440010
       + ((v372 + 2066349205) ^ (v366 >> 10) ^ (v368 - 920951203) ^ 0xB23BAEC1);
  HIDWORD(v126) = v407 ^ 0xFCFCFCFC;
  LODWORD(v126) = v407 ^ 0x2490E000;
  int v412 = v126 >> 13;
  HIDWORD(v126) = v407 ^ 0xFCFCFCFC;
  LODWORD(v126) = v407 ^ 0x2490F800;
  int v413 = v126 >> 11;
  HIDWORD(v126) = v407 ^ 0x90FCFC;
  LODWORD(v126) = v407 ^ 0x24000000;
  unsigned int v414 = (((v407 ^ 0x2490FCFC) + v395 - ((2 * ((v407 ^ 0x2490FCFC) + v395)) & 0x325B56B0) - 1725060264) ^ v408 ^ 0xAAAEEBB4)
       + v396;
  int v415 = (v356 ^ 0x715803E9)
       + (v413 ^ 0x8801A881)
       + ((v126 >> 25) ^ 0xEFF3FF9D)
       + (v409 ^ 0x5DDFFF97)
       + ((2 * (v126 >> 25)) & 0xDFE7FF3A)
       + ((2 * v409) & 0xBBBFFF2E)
       - ((2 * v413) & 0xEFFCAEFC)
       + 707418187;
  unsigned int v416 = (v415 ^ 0x7BA7FFD5)
       + ((2 * v415) & 0xF74FFFAA)
       + (v375 ^ 0xA3F4FFB ^ ((v375 ^ 0x257A2A24 ^ v407)
                            + (v408 ^ 0x338340EC)
                            - 198547746
                            + (~(2 * ((v375 ^ 0x257A2A24 ^ v407) + (v408 ^ 0x338340EC) + 1)) | 0x17AB3247)));
  HIDWORD(v126) = v406;
  LODWORD(v126) = v407 ^ 0x2490FCFC;
  int v417 = (v831 ^ 0x6A8E5594) + ((v416 - 2074607573) ^ 0x73EF7F9B) + ((2 * (v416 - 2074607573)) & 0xE7DEFF36) + 19999078;
  int v418 = (v410 ^ 0x90A2E00)
       + (v412 ^ 0x92200812)
       + ((v126 >> 2) ^ 0x67F39FAF)
       + ((2 * (v126 >> 2)) & 0xCFE73F5E)
       - ((2 * v410) & 0xEDEBA3FE)
       - ((2 * v412) & 0xDBBFEFDA)
       + (v414 ^ 0x9FFF0B5E)
       + ((2 * v414) & 0x3FFE16BC)
       + (v417 ^ 0x5F7FFFEB)
       + ((2 * v417) & 0xBEFFFFD6)
       + 2;
  int v419 = v418 - ((2 * v418 - 87671320) & 0xD98124CE);
  int v420 = v419 + 1780724059;
  HIDWORD(v126) = (v419 + 1780724059) ^ 0xFFFFFFE7;
  LODWORD(v126) = (v419 + 1780724059) ^ 0x6CC09240;
  int v421 = v126 >> 6;
  HIDWORD(v126) = (v419 + 1780724059) ^ 0x1267;
  LODWORD(v126) = (v419 + 1780724059) ^ 0x6CC08000;
  int v422 = v126 >> 13;
  HIDWORD(v126) = (v419 + 1780724059) ^ 0x267;
  LODWORD(v126) = (v419 + 1780724059) ^ 0x6CC09000;
  int v423 = v126 >> 11;
  HIDWORD(v126) = (v419 + 1780724059) ^ 0xC09267;
  LODWORD(v126) = (v419 + 1780724059) ^ 0x6C000000;
  int v424 = ((v829 - 643581310) ^ (a48 >> 3) ^ (HIDWORD(v828) + 805566806) ^ 0x41CAE49)
       + (v411 ^ 0xB69DE57F)
       + ((2 * v411) & 0x6D3BCAFE);
  int v425 = (v419 + 1780724059) ^ 0x6CC09267;
  unsigned int v426 = ((2 * (v425 + (v390 ^ 0x6BF1C5DA))) & 0xE55FDB56) + ((v425 + (v390 ^ 0x6BF1C5DA)) ^ 0x72AFEDAB);
  unsigned int v427 = (v407 ^ 0xDB6F0303) + 1;
  int v428 = (v126 >> 25) - ((2 * (v126 >> 25)) & 0x764352B8);
  HIDWORD(v126) = -1780724088 - v419;
  LODWORD(v126) = (v419 + 1780724059) ^ 0x6CC09264;
  int v429 = v126 >> 2;
  unsigned int v430 = (v425 + v427 + 1551009053 - ((2 * (v425 + v427)) & 0xB8E50A3A)) ^ 0x5C72851D ^ (v426 - 1924132267);
  unsigned int v431 = (v423 ^ 0xDFB53FD7) + (v421 ^ 0xDFEFEBBD) + ((2 * v421) & 0xBFDFD77A) + ((2 * v423) & 0xBF6A7FAE);
  HIDWORD(v126) = v420 ^ 0x9267;
  LODWORD(v126) = v420 ^ 0x6CC00000;
  unsigned int v432 = (v390 ^ 0x6BF1C5DA)
       + ((v425 + (v407 ^ 0x2490FCFC)) ^ 0x7E0F6FF6)
       + ((2 * (v425 + (v407 ^ 0x2490FCFC))) & 0xFC1EDFEC)
       + v426;
  int v433 = ((v126 >> 22) ^ 0xFAE7E1DF)
       + (v429 ^ 0x5D2FFF7B)
       + (v422 ^ 0x52850006)
       + ((2 * (v126 >> 22)) & 0xF5CFC3BE)
       + ((2 * v429) & 0xBA5FFEF6)
       - ((2 * v422) & 0x5AF5FFF2)
       + 1;
  unsigned int v434 = ((v428 - 1155421860) ^ 0xAEBD57E9 ^ (v431 - ((2 * v431 + 11905240) & 0x2B39FD6A) + 1442304801)) + v376;
  int v435 = ((v430 + 876909028 - ((2 * v430) & 0x688923C8)) ^ 0x344491E4) + (v390 ^ 0x4F613926 ^ v407);
  unsigned int v436 = (v853 ^ 0xC305FF02) + ((v432 + 255894111) ^ 0xDCEEDC7F) + ((2 * (v432 + 255894111)) & 0xB9DDB8FE) + 588325761;
  unsigned int v437 = (v436 ^ 0x858F98)
       - ((2 * v436) & 0xFEF4E0CE)
       + (v434 ^ 0x31FF4F9B)
       + ((2 * v434) & 0x63FE9F36)
       + ((v433 - ((2 * v433 - 1429848770) & 0xE08891F8) - 978884709) ^ 0x8C55097 ^ (v435
                                                                                   - ((2 * v435) & 0xF10230D6)
                                                                                   + 2021726315))
       + 1752014022;
  unsigned int v438 = v437 - 49402582;
  unsigned int v439 = v437 - 49402582 - ((2 * v437) & 0xFA1C5A3C) - 12;
  unsigned int v440 = v439 ^ 0xFD0E2D1E;
  unsigned int v441 = (((v439 ^ 0xFD0E2D1E) + v427) ^ 0xBFAD83FB)
       + (((v439 ^ 0xFD0E2D1E) + v425) ^ 0x7DEDDDEC)
       + ((2 * ((v439 ^ 0xFD0E2D1E) + v425)) & 0xFBDBBBD8)
       + ((2 * ((v439 ^ 0xFD0E2D1E) + v427)) & 0x7F5B07F6);
  HIDWORD(v126) = v438 ^ 2;
  LODWORD(v126) = v439 ^ 0xFD0E2D1C;
  int v442 = v126 >> 2;
  HIDWORD(v126) = v439 ^ 0x1E;
  LODWORD(v126) = v439 ^ 0xFD0E2D00;
  int v443 = v126 >> 6;
  HIDWORD(v126) = v439 ^ 0x51E;
  LODWORD(v126) = v439 ^ 0xFD0E2800;
  int v444 = v126 >> 11;
  unsigned int v445 = (v420 ^ 0x933F6D98) + 1;
  unsigned int v446 = (v439 ^ 0xFD0E2D1E) + v445 + 1940706742 - ((2 * ((v439 ^ 0xFD0E2D1E) + v445)) & 0xE759AB6C);
  HIDWORD(v126) = v439 ^ 0xD1E;
  LODWORD(v126) = v439 ^ 0xFD0E2000;
  int v447 = v126 >> 13;
  HIDWORD(v126) = v439 ^ 0x10E2D1E;
  LODWORD(v126) = v439 ^ 0xFC000000;
  int v448 = v126 >> 25;
  HIDWORD(v126) = v439 ^ 0xE2D1E;
  LODWORD(v126) = v439 ^ 0xFD000000;
  unsigned int v449 = (v444 ^ 0x81220010)
       + 201590798
       + (v448 ^ 0xF6E3FFEB)
       + (v443 ^ 0x7BF5F7F7)
       + ((2 * v448) & 0xEDC7FFD6)
       + ((2 * v443) & 0xF7EBEFEE)
       - ((2 * v444) & 0xFDBBFFDE)
       + (v407 ^ 0x8F5395C4 ^ ((v446 ^ 0x73ACD5B6)
                             + (v407 ^ 0xD99ED1E2 ^ v439)
                             - ((2 * ((v446 ^ 0x73ACD5B6) + (v407 ^ 0xD99ED1E2 ^ v439))) & 0x5786D270)
                             - 1413256904));
  int v450 = (v390 ^ 0x6BF1C5DA) + (v449 ^ 0x43000006) - ((2 * v449) & 0x79FFFFF2) - 1124073478;
  unsigned int v451 = (v447 ^ 0x47FE796B)
       + ((2 * v447) & 0x8FFCF2D6)
       - 1207859563
       + (v407 ^ v420 ^ 0xD2A01723 ^ (v441 - ((2 * v441 + 80297010) & 0x35E0F370) + 1565857745));
  int v452 = (v442 ^ 0xBFF7B7F8)
       + ((v126 >> 22) ^ 0xFEBE4FBB)
       + ((2 * v442) & 0x7FEF6FF0)
       + ((2 * (v126 >> 22)) & 0xFD7C9F76)
       + (v451 ^ 0xDD020229)
       - ((2 * v451) & 0x45FBFBAC);
  unsigned int v453 = (v852 ^ 0x9892B975) + (v450 ^ 0xFF77EFDB) + ((2 * v450) & 0xFEEFDFB6) + 1965203138;
  int v454 = v452 + (v453 ^ 0x3ECBA3BE) + ((2 * v453) & 0x7D97477C) + 1;
  unsigned int v455 = v454 - 821435885 + (~(2 * v454 + 1257809098) | 0xACE4E0A5);
  HIDWORD(v126) = v455 ^ 1;
  LODWORD(v126) = v455 ^ 0xA98D8FAC;
  int v456 = v126 >> 2;
  HIDWORD(v126) = v455 ^ 0x2D;
  LODWORD(v126) = v455 ^ 0xA98D8F80;
  int v457 = v126 >> 6;
  HIDWORD(v126) = v455 ^ 0x7AD;
  LODWORD(v126) = v455 ^ 0xA98D8800;
  int v458 = v126 >> 11;
  HIDWORD(v126) = v455 ^ 0xFAD;
  LODWORD(v126) = v455 ^ 0xA98D8000;
  unsigned int v459 = v455 ^ 0xA98D8FAD;
  int v460 = ((v126 >> 13) ^ 0x77786FFB)
       + (v456 ^ 0x7FD3AFCB)
       + ((2 * v456) & 0xFFA75F96)
       + ((2 * (v126 >> 13)) & 0xEEF0DFF6);
  unsigned int v461 = (v458 ^ 0xA0680B1C) + (v457 ^ 0x7BEFFE99) + ((2 * v457) & 0xF7DFFD32) - ((2 * v458) & 0xBF2FE9C6) + 1;
  HIDWORD(v126) = v455 ^ 0xD8FAD;
  LODWORD(v126) = v455 ^ 0xA9800000;
  int v462 = (v126 >> 22) - ((2 * (v126 >> 22)) & 0xEFED197C);
  HIDWORD(v126) = v455 ^ 0x18D8FAD;
  LODWORD(v126) = v455 ^ 0xA8000000;
  int v463 = v439 ^ v420;
  unsigned int v464 = (v463 ^ v455 ^ 0x4CF1AAD7 ^ ((v455 ^ 0xA98D8FAD)
                                    + v445
                                    - ((2 * ((v455 ^ 0xA98D8FAD) + v445)) & 0xE9653406)
                                    + 1957861891))
       - 898248179;
  int v465 = (v464 ^ 0x9AF2FF1D)
       + ((2 * v464) & 0x35E5FE3A)
       + 1695351011
       + (v407 ^ ((v126 >> 25) - ((2 * (v126 >> 25)) & 0x78B9A226) + 1012715795) ^ 0x83A092B2 ^ (v461
                                                                                               - ((2 * v461 + 122678420) & 0x36D97EBA)
                                                                                               + 2132063655));
  unsigned int v466 = (HIDWORD(v832) ^ 0x33EA04F4 ^ (v465 - ((2 * v465) & 0xDB0564AC) - 310201770))
       + (v463 ^ v446 ^ (v462 - 134837058) ^ 0x6BA9D9E0 ^ (v460 - ((2 * v460 + 292012148) & 0xFC7A7F22) - 2031018037));
  int v467 = v466 + 104405352 - ((2 * v466) & 0xC7232D0);
  unsigned int v468 = (v455 ^ 0xA98D8FAD) + (v439 ^ 0xFD0E2D1E) - ((2 * ((v455 ^ 0xA98D8FAD) + (v439 ^ 0xFD0E2D1E))) & 0x2C23386);
  int v469 = (v439 ^ 0x2F1D2E1)
       + (v467 ^ 0x6391968)
       + 1
       - ((2 * ((v439 ^ 0x2F1D2E1) + (v467 ^ 0x6391968) + 1)) & 0x5C2944F8);
  HIDWORD(v126) = v467 ^ 0x28;
  LODWORD(v126) = v467 ^ 0x6391940;
  int v470 = v126 >> 6;
  unsigned int v471 = (v467 ^ 0x6391968)
       + (v455 ^ 0xA98D8FAD)
       - 2120570573
       - ((2 * ((v467 ^ 0x6391968) + (v455 ^ 0xA98D8FAD))) & 0x3355266);
  HIDWORD(v126) = v467 ^ 0x391968;
  LODWORD(v126) = v467 ^ 0x6000000;
  int v472 = (v126 >> 25) - ((2 * (v126 >> 25)) & 0x2A4A32D6);
  HIDWORD(v126) = v467 ^ 0x1968;
  LODWORD(v126) = v467 ^ 0x6390000;
  int v473 = v126 >> 13;
  HIDWORD(v126) = v467 ^ 0x168;
  LODWORD(v126) = v467 ^ 0x6391800;
  int v474 = ((v126 >> 11) ^ 0xA84A5814)
       + (v470 ^ 0x67D1F539)
       + ((2 * v470) & 0xCFA3EA72)
       - ((2 * (v126 >> 11)) & 0xAF6B4FD6)
       + 1;
  unsigned int v475 = (v439 ^ 0xFD0E2D1E)
       + (((v439 ^ 0xFB373476 ^ v467) + (v455 ^ 0xA98D8FAD)) ^ 0x73E4D69E)
       + ((2 * ((v439 ^ 0xFB373476 ^ v467) + (v455 ^ 0xA98D8FAD))) & 0xE7C9AD3C)
       - 1944376990;
  HIDWORD(v126) = v467 ^ 0x391968;
  LODWORD(v126) = v467 ^ 0x6000000;
  int v476 = v126 >> 22;
  int v477 = ((v472 + 354752875) ^ 0x18774CB1 ^ (v474 - ((2 * v474 + 533161316) & 0x1AA4ABB4) - 46790516)) + v425;
  unsigned int v478 = (v467 ^ 0x6391968) + (v475 ^ 0x3984102C) - ((2 * v475) & 0x8CF7DFA6) - 964956204;
  HIDWORD(v126) = v466;
  LODWORD(v126) = v467 ^ 0x6391968;
  int v479 = (v473 ^ 0x9A071041)
       + ((v126 >> 2) ^ 0xEF7F93BF)
       + (v476 ^ 0x9A400104)
       + ((2 * (v126 >> 2)) & 0xDEFF277E)
       - ((2 * v476) & 0xCB7FFDF6)
       - ((2 * v473) & 0xCBF1DF7C)
       + ((v468 - 2124342845) ^ v471 ^ 0x2EEF128C ^ (v469 + 773104252))
       - 600220932;
  int v480 = (v832 ^ 0x170437CB)
       + (v478 ^ 0xA7BC5BF7)
       + ((2 * v478) & 0x4F78B7EE)
       + (v477 ^ 0x74CFD3FF)
       + ((2 * v477) & 0xE99FA7FE)
       + 1172495912;
  unsigned int v481 = ((2 * v479) & 0xAFEBBBA4) + (v479 ^ 0x57F5DDD2) + (v480 ^ 0xDBFEBCFB) + ((2 * v480) & 0xB7FD79F6);
  int v482 = v481 - ((2 * v481 + 404146790) & 0x2F64096A) - 474125848;
  HIDWORD(v126) = v482 ^ 0x35;
  LODWORD(v126) = v482 ^ 0x17B20480;
  int v483 = v126 >> 6;
  unsigned int v484 = (((v482 ^ 0x17B204B5) + (v467 ^ 0x6391968)) ^ 0x56F3FFDF)
       + (v455 ^ 0x41C074E7 ^ v482)
       + ((2 * ((v482 ^ 0x17B204B5) + (v467 ^ 0x6391968))) & 0xADE7FFBE);
  HIDWORD(v126) = v482 ^ 1;
  LODWORD(v126) = v482 ^ 0x17B204B4;
  int v485 = v126 >> 2;
  HIDWORD(v126) = v482 ^ 0x4B5;
  LODWORD(v126) = v482 ^ 0x17B20000;
  int v486 = v126 >> 13;
  unsigned int v487 = (v482 ^ v467 ^ 0x2F8C28A4 ^ ((v482 ^ 0x17B204B5)
                                    + (v455 ^ 0xA98D8FAD)
                                    - ((2 * ((v482 ^ 0x17B204B5) + (v455 ^ 0xA98D8FAD))) & 0x7C0E6AF2)
                                    + 1040659833))
       + (v471 ^ 0x819AA933);
  HIDWORD(v126) = v482 ^ 0x4B5;
  LODWORD(v126) = v482 ^ 0x17B20000;
  int v488 = (v126 >> 11) - ((2 * (v126 >> 11)) & 0x2735D64) + 20557490;
  HIDWORD(v126) = v488 ^ 0x1AEB2;
  LODWORD(v126) = v488 ^ 0x1380000;
  int v489 = (v126 >> 19) - ((2 * (v126 >> 19)) & 0xAB39332C);
  HIDWORD(v126) = v482 ^ 0x1B204B5;
  LODWORD(v126) = v482 ^ 0x16000000;
  int v490 = v126 >> 25;
  v489 -= 711157354;
  HIDWORD(v126) = v489 ^ 0x1996;
  LODWORD(v126) = v489 ^ 0xD59C8000;
  int v491 = v126 >> 13;
  unsigned int v492 = (v486 ^ 0x21E5664) + (v485 ^ 0xDDD37FFF) + ((2 * v485) & 0xBBA6FFFE) - ((2 * v486) & 0xFBC35336) + 1;
  HIDWORD(v126) = v482 ^ 0x3204B5;
  LODWORD(v126) = v482 ^ 0x17800000;
  unsigned int v493 = v440
       + (v490 ^ 0x1141B564)
       + (v483 ^ 0xAAD44250)
       - ((2 * v483) & 0xAA577B5E)
       - ((2 * v490) & 0xDD7C9536)
       + (v491 ^ 0x5BFCFD3D)
       + ((2 * v491) & 0xB7F9FA7A)
       - 403895537;
  unsigned int v494 = (v455 ^ 0xA570BC29 ^ (v484 - ((2 * v484 + 303562820) & 0x19FA6708) - 1240910938))
       + (v493 ^ 0xF3DFDE6F)
       + ((2 * v493) & 0xE7BFBCDE)
       + 203432337;
  unsigned int v495 = (HIDWORD(v833) ^ 0xD7FDA5C7) + (v494 ^ 0x7F7FAF3D) + ((2 * v494) & 0xFEFF5E7A) + 102053581;
  int v496 = (((v126 >> 22) - ((2 * (v126 >> 22)) & 0xA080AE6A) - 801089739) ^ (v487 - ((2 * v487) & 0xE859F7E6) + 1949105139) ^ (v492 - ((2 * v492 + 1075598136) & 0xF3E7C7BA) + 436342137) ^ 0x5D9F4F1B)
       + (v495 ^ 0xDEFFFEE3)
       + ((2 * v495) & 0xBDFFFDC6)
       + 553648413;
  unsigned int v497 = v496 - 835338240 - ((2 * v496) & 0x9C6B9B66);
  unsigned int v498 = v497 + 3507;
  HIDWORD(v126) = -3524 - v497;
  LODWORD(v126) = (v497 + 3507) ^ 0xCE35CDB0;
  int v499 = (v126 >> 2) - ((2 * (v126 >> 2)) & 0x81F24FC);
  HIDWORD(v126) = v498 ^ 0xDB3;
  LODWORD(v126) = v498 ^ 0xCE35C000;
  int v500 = v126 >> 13;
  HIDWORD(v126) = v498 ^ 0x5B3;
  LODWORD(v126) = v498 ^ 0xCE35C800;
  int v501 = v126 >> 11;
  v499 -= 2079354242;
  HIDWORD(v126) = v499 ^ 0x127E;
  LODWORD(v126) = v499 ^ 0x840F8000;
  int v502 = (v126 >> 15) - ((2 * (v126 >> 15)) & 0x6C8B349E) - 1236952497;
  HIDWORD(v126) = v502 ^ 0x19A4F;
  LODWORD(v126) = v502 ^ 0xB6440000;
  int v503 = v126 >> 17;
  HIDWORD(v126) = v498 ^ 0xFFFFFFF3;
  LODWORD(v126) = v498 ^ 0xCE35CD80;
  int v504 = v126 >> 6;
  unsigned int v505 = ((2 * ((v498 ^ 0xCE35CDB3) + (v482 ^ 0x17B204B5))) & 0x1697DD2E)
       + (((v498 ^ 0xCE35CDB3) + (v482 ^ 0x17B204B5)) ^ 0x8B4BEE97);
  HIDWORD(v126) = v498 ^ 0x35CDB3;
  LODWORD(v126) = v498 ^ 0xCE000000;
  int v506 = v126 >> 22;
  HIDWORD(v126) = v498 ^ 0x35CDB3;
  LODWORD(v126) = v498 ^ 0xCE000000;
  unsigned int v507 = (v506 ^ 0x2F7FF3FF)
       + ((2 * v506) & 0x5EFFE7FE)
       - 796914687
       + ((v500 - ((2 * v500) & 0xB3E6E8B0) + 1509127256) ^ 0x144048B5 ^ (v503 - ((2 * v503) & 0x9B6679DA) + 1303592173));
  unsigned int v508 = v507 - ((2 * v507) & 0xBBB0F920);
  unsigned int v509 = v505 + 1957957993;
  unsigned int v510 = ((v467 ^ 0xF9C6E697)
        + (v498 ^ 0xCE35CDB3)
        + 908413490
        - ((2 * ((v467 ^ 0xF9C6E697) + (v498 ^ 0xCE35CDB3) + 1)) & 0x6C4A9462)) ^ 0x36254A31 ^ (v505 + 1957957993);
  unsigned int v511 = ((v510 + 1977400970 - ((2 * v510) & 0xEBB97D14)) ^ 0x75DCBE8A) + (v482 ^ v467 ^ 0x118B1DDD);
  unsigned int v512 = (v467 ^ 0x6391968)
       + (((v498 ^ 0xCE35CDB3) + (v467 ^ 0x6391968)) ^ 0xEB79E9DB)
       + ((2 * ((v498 ^ 0xCE35CDB3) + (v467 ^ 0x6391968))) & 0xD6F3D3B6)
       + v505
       - 1992677490;
  int v513 = v459
       + (v501 ^ 0x6DFBCDDF)
       + ((v126 >> 25) ^ 0x3BE29FFF)
       + ((2 * v501) & 0xDBF79BBE)
       + ((2 * (v126 >> 25)) & 0x77C53FFE)
       + 1445040674;
  unsigned int v514 = (v504 ^ 0x81080102)
       - ((2 * v504) & 0xFDEFFDFA)
       + (v512 ^ 0x40324188)
       + (v513 ^ 0xFF5BFAF9)
       - ((2 * v512) & 0x7F9B7CEE)
       + ((2 * v513) & 0xFEB7F5F2)
       + 2;
  int v515 = ((v511 - ((2 * v511) & 0x7DF6F294) + 1056667978) ^ 0xE32305DA ^ (v508 - 573014896))
       + (v833 ^ 0xE1B9C34B ^ (v514 - ((2 * v514 - 999740170) & 0x8599F0A0) - 1526624565));
  int v516 = v515 + 186130432 - ((2 * v515) & 0x16304BDE);
  int v517 = v516 + 1519;
  int v518 = (v516 + 1519) ^ 0xB1825EF;
  int v519 = v518 + (v498 ^ 0x31CA324C) + 120870010 - ((2 * (v518 + (v498 ^ 0x31CA324C) + 1)) & 0xE68A8F2);
  unsigned int v520 = (v482 ^ 0x1CAA215A ^ (v516 + 1519))
       + ((v518 + (v498 ^ 0xCE35CDB3)) ^ 0xF1B0B2F4)
       + ((2 * (v518 + (v498 ^ 0xCE35CDB3))) & 0xE36165E8);
  HIDWORD(v126) = -1536 - v516;
  LODWORD(v126) = (v516 + 1519) ^ 0xB1825EC;
  int v521 = (v126 >> 2) - ((2 * (v126 >> 2)) & 0x7D247B20) + 1049771408;
  HIDWORD(v126) = v521 ^ 0x123D90;
  LODWORD(v126) = v521 ^ 0x3E800000;
  int v522 = (v126 >> 23) - ((2 * (v126 >> 23)) & 0xEE882866) + 2000950323;
  HIDWORD(v126) = v522 ^ 0x37441433;
  LODWORD(v126) = v522 ^ 0x40000000;
  int v523 = (v126 >> 30) - 516947968 - ((2 * (v126 >> 30)) & 0xC2600664) + 818;
  HIDWORD(v126) = v523 ^ 0x332;
  LODWORD(v126) = v523 ^ 0xE1300000;
  int v524 = v126 >> 11;
  HIDWORD(v126) = v517 ^ 0xFFFFFFEF;
  LODWORD(v126) = v517 ^ 0xB1825C0;
  int v525 = v126 >> 6;
  HIDWORD(v126) = v517 ^ 0x5EF;
  LODWORD(v126) = v517 ^ 0xB182000;
  int v526 = v126 >> 11;
  HIDWORD(v126) = v517 ^ 0x5EF;
  LODWORD(v126) = v517 ^ 0xB182000;
  int v527 = v126 >> 13;
  HIDWORD(v126) = v517 ^ 0x11825EF;
  LODWORD(v126) = v517 ^ 0xA000000;
  unsigned int v528 = (v519 ^ (v518 + (v482 ^ 0x17B204B5) - ((2 * (v518 + (v482 ^ 0x17B204B5))) & 0xC084126E) - 532543177) ^ 0xE7765D4E)
       + v509;
  int v529 = (v526 ^ 0x5DF96E2E)
       + ((v126 >> 25) ^ 0x3F6EFF7F)
       + (v525 ^ 0xFCDB9FEF)
       + ((2 * (v126 >> 25)) & 0x7EDDFEFE)
       + ((2 * v526) & 0xBBF2DC5C)
       + ((2 * v525) & 0xF9B73FDE);
  HIDWORD(v126) = v517 ^ 0x1825EF;
  LODWORD(v126) = v517 ^ 0xB000000;
  unsigned int v530 = v467 ^ 0x84A5D856 ^ (v529 - ((2 * v529 + 58189000) & 0x539827C) - 396840030);
  unsigned int v531 = (v482 ^ 0x4B976E0C ^ (v520 + 240078092 - ((2 * (v520 + 240078092)) & 0xB84AD572) + 1545956025)) - 2114705756;
  int v532 = (v531 ^ 0x32C8FBF5) + ((2 * v531) & 0x6591F7EA) + v530 - 852032501;
  int v533 = ((v126 >> 22) ^ 0xFF7FFEB7)
       + (v527 ^ 0xDDA1C6EC)
       + ((2 * (v126 >> 22)) & 0xFEFFFD6E)
       + ((2 * v527) & 0xBB438DD8)
       + (v528 ^ 0x8108082)
       - ((2 * v528) & 0xEFDEFEFA)
       + (v524 ^ 0x56EA9FDE)
       + ((2 * v524) & 0xADD53FBC)
       + (HIDWORD(v834) ^ 0x13161108 ^ (v532 - ((2 * v532) & 0x6B122178) - 1249308484))
       - 1008526851;
  int v534 = v533 + 166953442;
  int v535 = v533 + 166953442 - ((2 * v533) & 0x13E703C4);
  HIDWORD(v126) = v535 ^ 0x22222222;
  LODWORD(v126) = v535 ^ 0x9F381C0;
  int v536 = v126 >> 6;
  HIDWORD(v126) = v535 ^ 0x3381E2;
  LODWORD(v126) = v535 ^ 0x9C00000;
  int v537 = (v126 >> 22) - ((2 * (v126 >> 22)) & 0x611105F4);
  HIDWORD(v126) = v535 ^ 0x1F381E2;
  LODWORD(v126) = v535 ^ 0x8000000;
  int v538 = v126 >> 25;
  HIDWORD(v126) = v535 ^ 0x1E2;
  LODWORD(v126) = v535 ^ 0x9F38000;
  int v539 = (v538 ^ 0x77FB5B2F)
       + (v536 ^ 0x6FCECDEF)
       + ((v126 >> 11) ^ 0x82960041)
       + ((2 * v538) & 0xEFF6B65E)
       + ((2 * v536) & 0xDF9D9BDE)
       - ((2 * (v126 >> 11)) & 0xFAD3FF7C);
  HIDWORD(v126) = v534 ^ 2;
  LODWORD(v126) = v535 ^ 0x9F381E0;
  int v540 = (v126 >> 2) - ((2 * (v126 >> 2)) & 0x3B439EE8);
  unsigned int v541 = (v535 ^ 0x9F381E2)
       + (v498 ^ 0xCE35CDB3)
       - ((2 * ((v535 ^ 0x9F381E2) + (v498 ^ 0xCE35CDB3))) & 0x5CC1AB4E)
       - 1369385561;
  unsigned int v542 = ((2 * ((v535 ^ 0x9F381E2) + v518)) & 0x67FEEE62)
       + (((v535 ^ 0x9F381E2) + v518) ^ 0xB3FF7731)
       + (v541 ^ 0x519F2A58);
  HIDWORD(v126) = v535 ^ 0x1E2;
  LODWORD(v126) = v535 ^ 0x9F38000;
  unsigned int v543 = (v482 ^ 0x79768F8F ^ (v539 + 1 - 2 * ((v539 + 362796705) & 0x6EC48B3E ^ (v539 + 1) & 4) + 73687514))
       + (v498 ^ 0xAAD040DC ^ (v542 - ((2 * v542 - 1744760416) & 0xC9CB1ADE) - 1327098305));
  unsigned int v544 = (v535 ^ v517 ^ 0xAC8B71AA ^ v541) + (v519 ^ 0x7345479);
  int v545 = v834 + (v543 ^ 0xE3FBF39B) + ((2 * v543) & 0xC7F7E736) + 1539337534;
  int v546 = (((v126 >> 13) - ((2 * (v126 >> 13)) & 0x6DEF974E) - 1225274457) ^ (v540 - 1650339980) ^ (v537 - 1333230854) ^ 0x56F86DE5 ^ (v544 - ((2 * v544) & 0x9A4DD798) - 853087284))
       + (v545 ^ 0xDFFBFF9F)
       + ((2 * v545) & 0xBFF7FF3E)
       + 537133153;
  unsigned int v547 = v546 - 364914184 - ((2 * v546) & 0xD47FB3F0);
  HIDWORD(v126) = v547 ^ 0x3FD9F8;
  LODWORD(v126) = v547 ^ 0xEA000000;
  int v548 = v126 >> 22;
  HIDWORD(v126) = v547 ^ 0x3FD9F8;
  LODWORD(v126) = v547 ^ 0xEA000000;
  int v549 = v126 >> 25;
  HIDWORD(v126) = v547 ^ 0x38;
  LODWORD(v126) = v547 ^ 0xEA3FD9C0;
  int v550 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0x22827D2);
  HIDWORD(v126) = v547 ^ 0x19F8;
  LODWORD(v126) = v547 ^ 0xEA3FC000;
  int v551 = (v126 >> 13) - ((2 * (v126 >> 13)) & 0x95021230);
  HIDWORD(v126) = v546;
  LODWORD(v126) = v547 ^ 0xEA3FD9F8;
  unsigned int v552 = (v517 ^ 0xE127FC17 ^ v547)
       + (((v547 ^ 0xEA3FD9F8) + (v535 ^ 0x9F381E2)) ^ 0x69FECFB3)
       + ((2 * ((v547 ^ 0xEA3FD9F8) + (v535 ^ 0x9F381E2))) & 0xD3FD9F66)
       - 1778306995;
  int v553 = (v548 ^ 0x86602030)
       - ((2 * v548) & 0xF33FBF9E)
       + 2040520656
       + (((v126 >> 2) - ((2 * (v126 >> 2)) & 0x916D47A0) + 1219929040) ^ (v551 - 897513192) ^ 0x8237AAC8);
  int v554 = (v552 - ((2 * v552) & 0x34179668) + 436980532) ^ v535 ^ v517 ^ (v553 - ((2 * v553) & 0x5886DC62) - 1404867023);
  HIDWORD(v126) = v547 ^ 0x1F8;
  LODWORD(v126) = v547 ^ 0xEA3FD800;
  int v555 = (v549 ^ 0x86880E08)
       - ((2 * v549) & 0xF2EFE3EE)
       + 2037903864
       + (((v126 >> 11) - ((2 * (v126 >> 11)) & 0xBB46B566) - 576496973) ^ (v550 + 18093033) ^ 0xDCB7495A);
  HIDWORD(v126) = v554 ^ 0xA30108;
  LODWORD(v126) = v554 ^ 0xB4000000;
  unsigned int v556 = (v535 ^ 0xF60C7E1D)
       + (v547 ^ 0xEA3FD9F8)
       - 1442379032
       + (~(2 * ((v535 ^ 0xF60C7E1D) + (v547 ^ 0xEA3FD9F8) + 1)) | 0xABF1EA31)
       + 1;
  int v557 = (v126 >> 26) + 1490923520 - ((2 * (v126 >> 26)) & 0xB1BB6896) + 1099;
  HIDWORD(v126) = v557 ^ 0x44B;
  LODWORD(v126) = v557 ^ 0x58DDB000;
  int v558 = (v126 >> 11) + 75073355 - ((2 * (v126 >> 11)) & 0x8F30E96);
  unsigned int v559 = (v517 ^ 0xF4E7DA10)
       + (v556 ^ ((v547 ^ 0xEA3FD9F8) + v518 - ((2 * ((v547 ^ 0xEA3FD9F8) + v518)) & 0xEE983120) - 146007920) ^ 0x5D4B1277)
       + 1;
  unsigned int v560 = (v559 ^ 0xE75D1FBD)
       + ((2 * v559) & 0xCEBA3F7A)
       + 413327427
       + (v498 ^ 0x1838A738 ^ (v555 - ((2 * v555) & 0xAC1AD516) - 703763829));
  HIDWORD(v126) = v558 ^ 0x479874B;
  LODWORD(v126) = v558;
  unsigned int v561 = (HIDWORD(a34) ^ 0x635CFB7C) + (v560 ^ 0xFF6FBFF1) + ((2 * v560) & 0xFEDF7FE2) + 1847689469;
  int v562 = ((2 * v561) & 0xBDD3DDFE)
       + (v561 ^ 0x5EE9EEFF)
       + ((v126 >> 27) ^ 0xFADFFED7)
       + ((2 * (v126 >> 27)) & 0xF5BFFDAE);
  int v563 = v562 + 1678583902;
  int v564 = v562 + 1678583902 - ((2 * v562 + 1282155604) & 0x7BAE2C50) - 12;
  unsigned int v565 = v564 ^ 0xBDD71628;
  int v566 = (v547 ^ 0x15C02607) + 1;
  unsigned int v567 = (v564 ^ 0xBDD71628) + v566 + 382624088 - ((2 * ((v564 ^ 0xBDD71628) + v566)) & 0x2D9CC2B0);
  HIDWORD(v126) = v564 ^ 0x28;
  LODWORD(v126) = v564 ^ 0xBDD71600;
  int v568 = v126 >> 6;
  HIDWORD(v126) = v564 ^ 0x628;
  LODWORD(v126) = v564 ^ 0xBDD71000;
  int v569 = v126 >> 11;
  HIDWORD(v126) = v564 ^ 0x1628;
  LODWORD(v126) = v564 ^ 0xBDD70000;
  int v570 = v126 >> 13;
  unsigned int v571 = (v547 ^ 0x57E8CFD0 ^ v564)
       + (((v564 ^ 0xBDD71628) + (v535 ^ 0x9F381E2)) ^ 0x7DDBFBF7)
       + ((2 * ((v564 ^ 0xBDD71628) + (v535 ^ 0x9F381E2))) & 0xFBB7F7EE)
       - 2111568887;
  HIDWORD(v126) = v564 ^ 0x1D71628;
  LODWORD(v126) = v564 ^ 0xBC000000;
  int v572 = v126 >> 25;
  HIDWORD(v126) = v563;
  LODWORD(v126) = v564 ^ 0xBDD71628;
  int v573 = ((v126 >> 2) ^ 0x75B7FFDE) + (v570 ^ 0xBB7BF27F) + ((2 * v570) & 0x76F7E4FE) + ((2 * (v126 >> 2)) & 0xEB6FFFBC);
  HIDWORD(v126) = v564 ^ 0x171628;
  LODWORD(v126) = v564 ^ 0xBDC00000;
  unsigned int v574 = v518
       + (v568 ^ 0x90108375)
       + (v569 ^ 0xF5DFFFF3)
       + (v572 ^ 0x7FDBFF88)
       + ((2 * v569) & 0xEBBFFFE6)
       + ((2 * v572) & 0xFFB7FF10)
       - ((2 * v568) & 0xDFDEF914)
       - 97288944;
  unsigned int v575 = (v535 ^ 0xF523C61D ^ (v571 - ((2 * v571) & 0xF9A08FFE) - 53458945))
       + (v574 ^ 0x36FFBFD2)
       + ((2 * v574) & 0x6DFF7FA4)
       - 922730450;
  int v576 = (v535 ^ 0x4BDB6835 ^ v564) + (v567 ^ 0x16CE6158) + 1;
  unsigned int v577 = (v556 ^ 0xAA070AE7) + (v576 ^ 0xFBECB6DF) + ((2 * v576) & 0xF7D96DBE) + 68372769;
  int v578 = (((v126 >> 22) - ((2 * (v126 >> 22)) & 0x4E4FA366) - 1490562637) ^ 0x5109F9FF ^ (v573
                                                                                        - ((2 * v573 - 1650975930) & 0xEC5C5098)
                                                                                        - 990235153))
       + (v577 ^ 0xFFAF9DE5)
       + ((2 * v577) & 0xFF5F3BCA)
       + 5267995;
  int v579 = (a33 ^ 0x645DCC42) + (v575 ^ 0xF7BF6177) + ((2 * v575) & 0xEF7EC2EE) + 1523153713;
  unsigned int v580 = ((2 * v578) & 0x5DDD7ABC) + (v578 ^ 0xAEEEBD5E) + (v579 ^ 0x2FFFD4CE) + ((2 * v579) & 0x5FFFA99C);
  int v581 = v580 - 1446588970 - ((2 * v580 + 35838888) & 0x116ABFD4) - 24;
  HIDWORD(v126) = (v580 - 1446588970) ^ 2;
  LODWORD(v126) = v581 ^ 0x88B55FE8;
  int v582 = v126 >> 2;
  HIDWORD(v126) = v581 ^ 0x7EA;
  LODWORD(v126) = v581 ^ 0x88B55800;
  int v583 = v126 >> 11;
  HIDWORD(v126) = v581 ^ 0xAAAAAAAA;
  LODWORD(v126) = v581 ^ 0x88B55FC0;
  int v584 = v126 >> 6;
  HIDWORD(v126) = v581 ^ 0x1FEA;
  LODWORD(v126) = v581 ^ 0x88B54000;
  int v585 = v126 >> 13;
  HIDWORD(v126) = v581 ^ 0xB55FEA;
  LODWORD(v126) = v581 ^ 0x88000000;
  int v586 = (v126 >> 25) - ((2 * (v126 >> 25)) & 0xE81F51C2);
  unsigned int v587 = (v585 ^ 0xBCAFFB7E) + (v582 ^ 0xEBFF6DA4) + ((2 * v582) & 0xD7FEDB48) + ((2 * v585) & 0x795FF6FC);
  unsigned int v588 = v587 - ((2 * v587 + 782314940) & 0x76FD2D5E);
  unsigned int v589 = v581 ^ 0x88B55FEA;
  unsigned int v590 = (v581 ^ 0x88B55FEA) + v566;
  int v591 = (v564 ^ 0x4228E9D7) + 1;
  unsigned int v592 = (v581 ^ 0x88B55FEA) + v591;
  unsigned int v593 = (v590 ^ 0xFEBBF78F) + (v592 ^ 0xEFABF3D1);
  unsigned int v594 = v593 + ((2 * v592) & 0xDF57E7A2) + ((2 * v590) & 0xFD77EF1E);
  unsigned int v595 = (v583 ^ 0x80498202) + (v584 ^ 0x63FAFD3B) + ((2 * v584) & 0xC7F5FA76) - ((2 * v583) & 0xFF6CFBFA) + 1;
  HIDWORD(v126) = v581 ^ 0x355FEA;
  LODWORD(v126) = v581 ^ 0x88800000;
  int v596 = ((v126 >> 22) - ((2 * (v126 >> 22)) & 0x52911E1A) + 692621069) ^ 0x923619A2 ^ (v588 + 315567501);
  int v597 = v594 - 2 * ((v594 + 295179424) & 0x7E0C6987 ^ v593 & 1) - 1885045210;
  unsigned int v598 = v535 ^ v547 ^ (v586 - 200300319) ^ v597 ^ (v595 - ((2 * v595 + 930546052) & 0xE857719C) - 1880671856) ^ 0x1DE421B3;
  int v599 = ((v596 + (v567 ^ 0x973DF721 ^ v597) + 1) ^ 0xF1DAFCF7)
       + ((2 * (v596 + (v567 ^ 0x973DF721 ^ v597) + 1)) & 0xE3B5F9EE)
       + 237306633
       + (v835 ^ 0x5410FB2F ^ (v598 - ((2 * v598 - 449840912) & 0xE08AAE62) + 1658672041));
  unsigned int v600 = v599 - 331729348 - ((2 * v599) & 0xD8746C78);
  HIDWORD(v126) = v600 ^ 0x3C;
  LODWORD(v126) = v600 ^ 0xEC3A3600;
  unsigned int v601 = v600 ^ 0xEC3A363C;
  unsigned int v602 = (v600 ^ 0xEC3A363C) + (v564 ^ 0xBDD71628) - ((2 * ((v600 ^ 0xEC3A363C) + (v564 ^ 0xBDD71628))) & 0x8DDFF0A4);
  int v603 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0x68881C2C);
  HIDWORD(v126) = v600 ^ 0x3A363C;
  LODWORD(v126) = v600 ^ 0xEC000000;
  int v604 = (v126 >> 25) - ((2 * (v126 >> 25)) & 0xD40DBD4C);
  HIDWORD(v126) = v600 ^ 0x63C;
  LODWORD(v126) = v600 ^ 0xEC3A3000;
  int v605 = v581 ^ v564;
  int v606 = (((v605 ^ 0x356249C2) + v591) ^ 0xE5EFD3F6)
       + ((2 * ((v605 ^ 0x356249C2) + v591)) & 0xCBDFA7EC)
       + 437267466
       + (v547 ^ (v603 + 876875286) ^ ((v126 >> 11) - ((2 * (v126 >> 11)) & 0xF4854C4) - 2019284382) ^ (v604 - 368648538) ^ 0xB3D9232A);
  HIDWORD(v126) = v600 ^ 0x163C;
  LODWORD(v126) = v600 ^ 0xEC3A2000;
  int v607 = v126 >> 13;
  HIDWORD(v126) = v600 ^ 0x3A363C;
  LODWORD(v126) = v600 ^ 0xEC000000;
  int v608 = v126 >> 22;
  int v609 = v600 ^ v581;
  HIDWORD(v126) = v599;
  LODWORD(v126) = v600 ^ 0xEC3A363C;
  unsigned int v610 = (v605 ^ 0xCA9DB63D) + (v600 ^ v581 ^ 0x22609184 ^ (v602 + 1190131794)) + 1;
  int v611 = (v608 ^ 0x7FEDFFF7)
       + (v607 ^ 0x47879FFF)
       + ((v126 >> 2) ^ 0xF177E7D9)
       + ((2 * v608) & 0xFFDBFFEE)
       + ((2 * v607) & 0x8F0F3FFE)
       + ((2 * (v126 >> 2)) & 0xE2EFCFB2)
       + (v610 ^ 0xFF17EF7F)
       + ((2 * v610) & 0xFE2FDEFE)
       + 1207601330
       + (HIDWORD(v836) ^ 0x68FEED28 ^ (((2 * v606) & 0xFC7AFE56)
                                      + (v606 ^ 0x7E3D7F2B)
                                      - ((2 * (((2 * v606) & 0xFC7AFE56) + (v606 ^ 0x7E3D7F2B)) + 150373798) & 0x27C9AA72)
                                      + 945821708));
  int v612 = v611 - 1972402230;
  int v613 = v611 - 1972402230 - ((2 * v611) & 0x14DF0F5C) - 28;
  unsigned int v614 = v613 ^ 0x8A6F87AE;
  HIDWORD(v126) = v613 ^ 0x2F87AE;
  LODWORD(v126) = v613 ^ 0x8A400000;
  int v615 = (v126 >> 22) - ((2 * (v126 >> 22)) & 0xCA021D84);
  HIDWORD(v126) = v613 ^ 0xEEEEEEEE;
  LODWORD(v126) = v613 ^ 0x8A6F8780;
  int v616 = v126 >> 6;
  HIDWORD(v126) = v613 ^ 0x7AE;
  LODWORD(v126) = v613 ^ 0x8A6F8000;
  int v617 = ((v126 >> 11) ^ 0x20240830)
       + (v616 ^ 0x6CBEFF5A)
       + ((2 * v616) & 0xD97DFEB4)
       - ((2 * (v126 >> 11)) & 0xBFB7EF9E)
       + 1;
  unsigned int v618 = (v581 ^ 0x2DAD844 ^ v613)
       + 872419345
       + (((v613 ^ 0x8A6F87AE) + (v600 ^ 0xEC3A363C)) ^ 0xCBFFEFEF)
       + ((2 * ((v613 ^ 0x8A6F87AE) + (v600 ^ 0xEC3A363C))) & 0x97FFDFDE);
  HIDWORD(v126) = v613 ^ 0x6F87AE;
  LODWORD(v126) = v613 ^ 0x8A000000;
  int v619 = (v126 >> 25) - ((2 * (v126 >> 25)) & 0x628CEF9E);
  HIDWORD(v126) = v612 ^ 2;
  LODWORD(v126) = v613 ^ 0x8A6F87AC;
  int v620 = v126 >> 2;
  HIDWORD(v126) = v613 ^ 0x7AE;
  LODWORD(v126) = v613 ^ 0x8A6F8000;
  unsigned int v621 = ((v619 + 826701775) ^ 0xE81558DB ^ (v617 - ((2 * v617 - 432410390) & 0xB2A65E28) + 1282418569)) + v565;
  int v622 = (v609 ^ 0x827572A4 ^ (v618 - ((2 * v618) & 0xCDF436E4) - 419816590))
       + ((v620 - ((2 * v620) & 0x41CD7F92) + 551993289) ^ ((v126 >> 13) - ((2 * (v126 >> 13)) & 0x13426E16) - 1985923317) ^ (v615 + 1694568130) ^ 0xCC468600);
  unsigned int v623 = (v600 ^ 0xFBEBC50E ^ (v621 + 399635251 + (~(2 * v621) | 0xD05C199B))) + 846739860;
  unsigned int v624 = (HIDWORD(v835) ^ 0x532DF53C) + (v623 ^ 0xE7AEBDF5) + ((2 * v623) & 0xCF5D7BEA) + 407978508;
  unsigned int v625 = ((2 * v622) & 0xBE7EF9DC) + (v622 ^ 0x5F3F7CEE) + (v624 ^ 0x469FF776) + ((2 * v624) & 0x8D3FEEEC);
  unsigned int v626 = v625 - ((2 * v625 - 1270802632) & 0xAE38318E);
  unsigned int v627 = v626 - 1321425821;
  int v628 = (v626 - 1321425821) ^ 0x571C18C7;
  HIDWORD(v126) = (v626 - 1321425821) ^ 7;
  LODWORD(v126) = (v626 - 1321425821) ^ 0x571C18C0;
  int v629 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0x6E536A4E);
  HIDWORD(v126) = (v626 - 1321425821) ^ 0x11C18C7;
  LODWORD(v126) = (v626 - 1321425821) ^ 0x56000000;
  int v630 = v126 >> 25;
  HIDWORD(v126) = (v626 - 1321425821) ^ 0xC7;
  LODWORD(v126) = (v626 - 1321425821) ^ 0x571C1800;
  int v631 = v126 >> 11;
  HIDWORD(v126) = (v626 - 1321425821) ^ 0x18C7;
  LODWORD(v126) = (v626 - 1321425821) ^ 0x571C0000;
  int v632 = v126 >> 13;
  HIDWORD(v126) = 1321425800 - v626;
  LODWORD(v126) = (v626 - 1321425821) ^ 0x571C18C4;
  unsigned int v633 = (v630 ^ 0xFBD5A6BB)
       + ((2 * v630) & 0xF7AB4D76)
       + 69884230
       + ((v631 - ((2 * v631) & 0x62D0C3DE) + 828924399) ^ (v629 - 1222003417) ^ 0x79BE2B37);
  int v634 = (v632 ^ 0x88044002) + ((v126 >> 2) ^ 0x5BFD39CD) + ((2 * (v126 >> 2)) & 0xB7FA739A) - ((2 * v632) & 0xEFF77FFA);
  HIDWORD(v126) = v627 ^ 0x1C18C7;
  LODWORD(v126) = v627 ^ 0x57000000;
  int v635 = (v613 ^ 0x75907851) + v628 + 1 - ((2 * ((v613 ^ 0x75907851) + v628 + 1)) & 0x1BADA66E) + 232182583;
  unsigned int v636 = v589 + (v633 ^ 0x6FFFFF7A) + ((2 * v633) & 0xDFFFFEF4) - 1879048058;
  int v637 = (((v126 >> 22) - ((2 * (v126 >> 22)) & 0xB005FA12) + 1476590857) ^ 0xC2C4A3D5 ^ (v634
                                                                                        + 1
                                                                                        - 2
                                                                                        * ((v634 + 469665329) & 0x1AC65EDE ^ (v634 + 1) & 2)
                                                                                        - 1228610292))
       + (v600 ^ ((v600 ^ 0x13C5C9C3)
                + (v613 ^ 0x8A6F87AE)
                + 1
                - ((2 * ((v600 ^ 0x13C5C9C3) + (v613 ^ 0x8A6F87AE) + 1)) & 0xBDA72222)
                + 1590923537) ^ v627 ^ 0xE8236CDD ^ v635);
  unsigned int v638 = ((2 * v600) ^ 0xA28B9757) + ((4 * v600) & 0xF5FFF65C ^ 0xB0E8D050) - 2063596335 + v628;
  unsigned int v639 = (v638 ^ 0xED63F6FF) + ((2 * v638) & 0xDAC7EDFE) + 312215810 + (v635 ^ 0xF2292CC8);
  int v640 = (a35 ^ 0x321463A0)
       + (v639 ^ 0x6D367CFE)
       + ((2 * v639) & 0xDA6CF9FC)
       + (v636 ^ 0x3BFDEAB4)
       + ((2 * v636) & 0x77FBD568)
       - 1827590360;
  unsigned int v641 = (v640 ^ 0x69EF83FF) + (v637 ^ 0xFEEC5D9F) + ((2 * v637) & 0xFDD8BB3E);
  unsigned int v642 = v641
       + ((2 * v640) & 0xD3DF07FE)
       - 2 * ((v641 + ((2 * v640) & 0xD3DF07FE) + 388243042) & 0x4B3E0B3B ^ v641 & 1)
       - 496883300;
  HIDWORD(v126) = v642 ^ 0xB3A;
  LODWORD(v126) = v642 ^ 0x4B3E0000;
  int v643 = v126 >> 13;
  int v644 = v642 ^ 0x4B3E0B3A;
  HIDWORD(v126) = v642 ^ 0x3E0B3A;
  LODWORD(v126) = v642 ^ 0x4B000000;
  int v645 = v126 >> 22;
  unsigned int v646 = v613 ^ 0xDD739F69 ^ v627;
  unsigned int v647 = v646 + v614 - ((2 * (v646 + v614)) & 0x870511D6);
  unsigned int v648 = v646
       + (((v642 ^ 0x4B3E0B3A) + v614) ^ 0xEC777FB7)
       + ((2 * ((v642 ^ 0x4B3E0B3A) + v614)) & 0xD8EEFF6E)
       + 327712841;
  HIDWORD(v126) = v642 ^ 0x33A;
  LODWORD(v126) = v642 ^ 0x4B3E0800;
  int v649 = v126 >> 11;
  HIDWORD(v126) = v642 ^ 0x3A;
  LODWORD(v126) = v642 ^ 0x4B3E0B00;
  int v650 = v126 >> 6;
  HIDWORD(v126) = v642 ^ 0x13E0B3A;
  LODWORD(v126) = v642 ^ 0x4A000000;
  int v651 = v126 >> 25;
  HIDWORD(v126) = v642 ^ 2;
  LODWORD(v126) = v642 ^ 0x4B3E0B38;
  unsigned int v652 = v601
       + (v651 ^ 0x2C1080C1)
       + (v649 ^ 0xC8098490)
       + (v650 ^ 0x12141040)
       - ((2 * v649) & 0x6FECF6DE)
       - ((2 * v651) & 0xA7DEFE7C)
       - ((2 * v650) & 0xDBD7DF7E)
       - 103683473;
  unsigned int v653 = (v647 + 1132628203) ^ 0x24CCA8A4 ^ (v652 - ((2 * v652) & 0xCE9C409E) + 1733173327);
  unsigned int v654 = (v627 ^ 0x1C2213FD ^ v642) + (v648 ^ 0xC020E000) - ((2 * v648) & 0x7FBE3FFE) + 1071587328;
  int v655 = (v645 ^ 0x3DBB6DE9)
       + (v643 ^ 0x7FFDBEF3)
       + ((v126 >> 2) ^ 0x26FEEFFD)
       + ((2 * v645) & 0x7B76DBD2)
       + ((2 * v643) & 0xFFFB7DE6)
       + ((2 * (v126 >> 2)) & 0x4DFDDFFA)
       + (v654 ^ 0x76FD695B)
       + ((2 * v654) & 0xEDFAD2B6)
       - 1538623028
       + (a38 ^ 0xFAFE1FBB ^ (v653 - ((2 * v653 + 1590488644) & 0x691A9E78) + 1676920414));
  int v656 = v655 - 1132079586;
  int v657 = v655 - 1132079586 - ((2 * v655) & 0x790BAC04) - 28;
  unsigned int v658 = (v627 ^ 0xA8E3E738)
       + (v657 ^ 0xBC85D602)
       - 1059445418
       - ((2 * ((v627 ^ 0xA8E3E738) + (v657 ^ 0xBC85D602) + 1)) & 0x81B44AAA);
  unsigned int v659 = (v642 ^ 0xB4C1F4C5) + 1;
  unsigned int v660 = (v657 ^ 0xBC85D602) + v659 + 839091461 - ((2 * ((v657 ^ 0xBC85D602) + v659)) & 0x64070A0A);
  HIDWORD(v126) = v657 ^ 0x1602;
  LODWORD(v126) = v657 ^ 0xBC85C000;
  int v661 = v126 >> 13;
  HIDWORD(v126) = v657 ^ 0x602;
  LODWORD(v126) = v657 ^ 0xBC85D000;
  int v662 = v126 >> 11;
  HIDWORD(v126) = v657 ^ 0x85D602;
  LODWORD(v126) = v657 ^ 0xBC000000;
  int v663 = v126 >> 25;
  unsigned int v664 = (((v642 ^ 0x4B3E0B3A) + v628) ^ 0x2911841A)
       - ((2 * ((v642 ^ 0x4B3E0B3A) + v628)) & 0xADDCF7CA)
       + (((v658 ^ 0xC0DA2555) + (v660 ^ 0x32038505)) ^ 0xEBFFCE7F)
       + ((2 * ((v658 ^ 0xC0DA2555) + (v660 ^ 0x32038505))) & 0xD7FF9CFE)
       + 1;
  HIDWORD(v126) = v657 ^ 2;
  LODWORD(v126) = v657 ^ 0xBC85D600;
  int v665 = v126 >> 6;
  HIDWORD(v126) = v656 ^ 2;
  LODWORD(v126) = v657 ^ 0xBC85D600;
  int v666 = v126 >> 2;
  unsigned int v667 = v614
       + (v663 ^ 0x6081B1C4)
       + (v665 ^ 0x8C0AC006)
       + (v662 ^ 0x57FFEF7D)
       - ((2 * v665) & 0xE7EA7FF2)
       - ((2 * v663) & 0x3EFC9C76)
       + ((2 * v662) & 0xAFFFDEFA)
       - 1150050631;
  unsigned int v668 = ((v658 ^ v660 ^ 0xF2D9A050) + v628 - ((2 * ((v658 ^ v660 ^ 0xF2D9A050) + v628)) & 0x7090602A) - 1203228651) ^ 0x96AF433B ^ (v667 - ((2 * v667) & 0x5DCEE65C) + 786920238);
  HIDWORD(v126) = v657 ^ 0x5D602;
  LODWORD(v126) = v657 ^ 0xBC800000;
  int v669 = ((v126 >> 22) ^ 0x7EFF6BFF)
       + (v666 ^ 0x6D989FFE)
       + (v661 ^ 0x8A30198A)
       + ((2 * (v126 >> 22)) & 0xFDFED7FE)
       + ((2 * v666) & 0xDB313FFC)
       - ((2 * v661) & 0xEB9FCCEA)
       + 1;
  unsigned int v670 = (v855 ^ 0xF69AA8BD ^ (v668 - ((2 * v668 + 771887906) & 0x3916890A) - 745779690))
       + ((v669 - ((2 * v669 + 309310704) & 0xBAD2C1C6) + 1721842523) ^ 0x28BBBD98 ^ (v664
                                                                                    - ((2 * v664 - 706913588) & 0xEBA5BAF6)
                                                                                    - 524186911));
  int v671 = v670 + 989624320 - ((2 * v670) & 0x75F8FAC6);
  int v672 = v671 + 1379;
  int v673 = (v671 + 1379) ^ 0x3AFC7D63;
  unsigned int v674 = v673 + (v657 ^ 0xBC85D602) - 289077565 - ((2 * (v673 + (v657 ^ 0xBC85D602))) & 0xDD8A0D86);
  HIDWORD(v126) = (v671 + 1379) ^ 0x563;
  LODWORD(v126) = (v671 + 1379) ^ 0x3AFC7800;
  int v675 = (v126 >> 11) - ((2 * (v126 >> 11)) & 0x532F0CEC);
  unsigned int v676 = ((2 * (v673 + v659)) & 0x63FF9DFC) + ((v673 + v659) ^ 0xB1FFCEFE);
  unsigned int v677 = (v657 ^ 0x8679AB61 ^ (v671 + 1379)) - 1308635394 - v676;
  HIDWORD(v126) = (v671 + 1379) ^ 0xFFFFFFE3;
  LODWORD(v126) = (v671 + 1379) ^ 0x3AFC7D40;
  int v678 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0x882898BE);
  HIDWORD(v126) = (v671 + 1379) ^ 0xFC7D63;
  LODWORD(v126) = (v671 + 1379) ^ 0x3A000000;
  int v679 = ((v126 >> 25) ^ 0x8880280)
       - ((2 * (v126 >> 25)) & 0xEEEFFAFE)
       - 143131264
       + ((v678 - 1005302689) ^ (v675 + 697796214) ^ 0xED83CA29);
  HIDWORD(v126) = (v671 + 1379) ^ 0x3C7D63;
  LODWORD(v126) = (v671 + 1379) ^ 0x3AC00000;
  int v680 = v126 >> 22;
  int v681 = v628 + (v679 ^ 0xFAFDFFF) + ((2 * v679) & 0x1F5FBFFE) - 263184383;
  unsigned int v682 = (((v671 + 1379) ^ 0x3AFC7D60u) >> 2) - (v671 << 30);
  HIDWORD(v126) = v672 ^ 0x1D63;
  LODWORD(v126) = v672 ^ 0x3AFC6000;
  unsigned int v683 = (v642 ^ 0xF7BBDD38 ^ v657)
       + ((v676 + 1308635394 + (v674 ^ 0xEEC506C3)) ^ 0x7E77DB0C)
       + ((2 * (v676 + 1308635394 + (v674 ^ 0xEEC506C3))) & 0xFCEFB618)
       - 2121784076;
  int v684 = v642 ^ (v677 + 1377290294 + (~(2 * v677) | 0x5BD06F95)) ^ 0x1225BF42 ^ (v681
                                                                               - ((2 * v681) & 0x1618F89A)
                                                                               + 185367629);
  int v685 = (v680 ^ 0x55020000)
       - ((2 * v680) & 0x55FBFFFE)
       + (((v126 >> 13) - ((2 * (v126 >> 13)) & 0x8D010EAE) + 1182828375) ^ 0x4962D063 ^ (v682
                                                                                        - ((2 * v682) & 0x1FC4AE68)
                                                                                        + 266491700))
       + (v683 ^ 0xA1172C14)
       - ((2 * v683) & 0xBDD1A7D6)
       + 166122476;
  int v686 = (v836 ^ 0xEAFF71BC)
       + ((v684 - 1298429573) ^ 0x7F3BE5DB)
       + ((2 * (v684 - 1298429573)) & 0xFE77CBB6)
       - 2134631899;
  unsigned int v687 = ((2 * v685) & 0xFA4ECA6E) + (v685 ^ 0xFD276537) + (v686 ^ 0x43ED4FFD) + ((2 * v686) & 0x87DA9FFA);
  unsigned int v688 = v687 + 1601963093 + (~(2 * v687 + 2111215000) | 0xBEDE8CEF);
  unsigned int v689 = v688 ^ 0xA090B988;
  HIDWORD(v126) = v688 ^ 0x188;
  LODWORD(v126) = v688 ^ 0xA090B800;
  int v690 = v126 >> 11;
  HIDWORD(v126) = v688;
  LODWORD(v126) = v688 ^ 0xA090B988;
  int v691 = (v126 >> 2) - ((2 * (v126 >> 2)) & 0xD6D65584);
  HIDWORD(v126) = v688 ^ 0x90B988;
  LODWORD(v126) = v688 ^ 0xA0000000;
  int v692 = v126 >> 25;
  HIDWORD(v126) = v688 ^ 0x10B988;
  LODWORD(v126) = v688 ^ 0xA0800000;
  int v693 = v126 >> 22;
  unsigned int v694 = v673
       + (((v688 ^ 0xA090B988) + (v657 ^ 0xBC85D602)) ^ 0xFCFFE9F9)
       + ((2 * ((v688 ^ 0xA090B988) + (v657 ^ 0xBC85D602))) & 0xF9FFD3F2)
       + 50337287;
  unsigned int v695 = (v688 ^ 0xA090B988) + (v694 ^ 0x9009027) - ((2 * v694) & 0xEDFEDFB0) - 151031847;
  unsigned int v696 = v695 - ((2 * v695) & 0xD6031E54);
  HIDWORD(v126) = v688 ^ 8;
  LODWORD(v126) = v688 ^ 0xA090B980;
  int v697 = v126 >> 6;
  HIDWORD(v126) = v688 ^ 0x1988;
  LODWORD(v126) = v688 ^ 0xA090A000;
  int v698 = v688 ^ v672;
  int v699 = (v693 ^ 0x808A4200)
       - ((2 * v693) & 0xFEEB7BFE)
       + 2138422784
       + ((v691 - 345298238) ^ ((v126 >> 13) - ((2 * (v126 >> 13)) & 0xF74B144C) - 73037274) ^ 0x10CEA0E4);
  unsigned int v700 = (v657 ^ 0xE3EA9075 ^ v688) + (v688 ^ v672 ^ 0x9A6CC4EB) + 1;
  unsigned int v701 = (v657 ^ 0xBC85D602) + (v700 ^ 0x7AEB5FE6) + ((2 * v700) & 0xF5D6BFCC);
  unsigned int v702 = (v699 ^ 0xF767F6BB) + ((2 * v699) & 0xEECFED76) + 144181573 + (v674 ^ 0x5C489E9 ^ (v696 - 352219350));
  unsigned int v703 = v644
       + (v692 ^ 0x42210483)
       + (v697 ^ 0x60090125)
       + (v690 ^ 0x7B9767FE)
       - ((2 * v697) & 0x3FEDFDB4)
       - ((2 * v692) & 0x7BBDF6F8)
       + ((2 * v690) & 0xF72ECFFC)
       + ((v701 - 2062245862) ^ 0x90602844)
       - ((2 * (v701 - 2062245862)) & 0xDF3FAF76)
       + 1373530646;
  int v704 = (v702 ^ 0x39DFB5E6)
       + ((2 * v702) & 0x73BF6BCC)
       - 970962406
       + (a47 ^ 0xEED13FF1 ^ (((2 * v703) & 0x7FBBF176)
                            + (v703 ^ 0xBFDDF8BB)
                            - ((2 * (((2 * v703) & 0x7FBBF176) + (v703 ^ 0xBFDDF8BB)) + 52319892) & 0xBF945DC)
                            - 812921288));
  unsigned int v705 = v704 - 989533620 - ((2 * v704) & 0x8A09D498);
  HIDWORD(v126) = v705 ^ 0x24C;
  LODWORD(v126) = v705 ^ 0xC504E800;
  int v706 = v126 >> 11;
  unsigned int v707 = v705 ^ 0xC504EA4C;
  HIDWORD(v126) = v705 ^ 0xC;
  LODWORD(v126) = v705 ^ 0xC504EA40;
  int v708 = v126 >> 6;
  int v709 = v688 ^ 0x659453C4 ^ v705;
  int v710 = (v672 ^ 0x768D0 ^ v705) + v709 + 1 - ((2 * ((v672 ^ 0x768D0 ^ v705) + v709 + 1)) & 0x1B5C3ED8);
  HIDWORD(v126) = v705 ^ 0x104EA4C;
  LODWORD(v126) = v705 ^ 0xC4000000;
  int v711 = v126 >> 25;
  unsigned int v712 = ((2 * ((v705 ^ 0xC504EA4C) + (v688 ^ 0x5F6F4677) + 1)) & 0xDFF727AE)
       + (((v705 ^ 0xC504EA4C) + (v688 ^ 0x5F6F4677) + 1) ^ 0xEFFB93D7)
       + ((v673 + (v705 ^ 0x3AFB15B3) + 1) ^ 0x5D71BFFB)
       + ((2 * (v673 + (v705 ^ 0x3AFB15B3) + 1)) & 0xBAE37FF6);
  unsigned int v713 = (v712 - ((2 * v712 + 1696946268) & 0xEB09356C) - 1474869532) ^ v672;
  HIDWORD(v126) = v705 ^ 0xA4C;
  LODWORD(v126) = v705 ^ 0xC504E000;
  int v714 = v126 >> 13;
  unsigned int v715 = (v711 ^ 0x751001)
       + (v706 ^ 0x8B2D0714)
       + (v708 ^ 0x537EEDD7)
       + ((2 * v708) & 0xA6FDDBAE)
       - ((2 * v711) & 0xFF15DFFC)
       - ((2 * v706) & 0xE9A5F1D6)
       + 2;
  HIDWORD(v126) = v705 ^ 0x4EA4C;
  LODWORD(v126) = v705 ^ 0xC5000000;
  int v716 = v126 >> 22;
  HIDWORD(v126) = v713 ^ 0x78E7D5;
  LODWORD(v126) = v713 ^ 0xCFFFFFFF;
  int v717 = (v126 >> 24) + 1484071168 - ((2 * (v126 >> 24)) & 0xB0EA43DA);
  HIDWORD(v126) = v704;
  LODWORD(v126) = v705 ^ 0xC504EA4C;
  int v718 = v126 >> 2;
  v717 += 237;
  HIDWORD(v126) = v717 ^ 0xED;
  LODWORD(v126) = v717 ^ 0x58752100;
  unsigned int v719 = (v716 ^ 0xA4004)
       + (v714 ^ 0x4417400)
       + (v718 ^ 0xFFBFFFB3)
       + ((2 * v718) & 0xFF7FFF66)
       - ((2 * v716) & 0xFFEB7FF6)
       - ((2 * v714) & 0xF77D17FE)
       + 2;
  int v720 = (v657 ^ (v715 - ((2 * v715 + 1102968356) & 0xF5689784) + 462636756) ^ 0x3D1BB7D6 ^ ((v126 >> 8)
                                                                                           - ((2 * (v126 >> 8)) & 0xF654542C)
                                                                                           + 2066360854))
       + 1088089828;
  int v721 = (a48 ^ 0x6DE76CEB) + (v720 ^ 0xB9AE7F79) + ((2 * v720) & 0x735CFEF2) + 1179746440;
  unsigned int v722 = (v698 ^ (v710 + 229515116) ^ 0xACD9C83B ^ (v719 - ((2 * v719 + 2011732110) & 0x76362778) + 923754499))
       + (v721 ^ 0x7EEBDF6B)
       + ((2 * v721) & 0xFDD7BED6)
       - 2129387371;
  unsigned int v723 = v722 - 1483231906;
  int v724 = v722 - 1483231906 - ((2 * v722) & 0x4F2F5ABC);
  unsigned int v725 = v724 ^ 0xA797AD5E;
  unsigned int v726 = (v724 ^ 0xA797AD5E) + (v705 ^ 0xC504EA4C);
  HIDWORD(v126) = v724 ^ 0x1E;
  LODWORD(v126) = v724 ^ 0xA797AD40;
  int v727 = (v126 >> 6) - ((2 * (v126 >> 6)) & 0xF55B1AAE);
  HIDWORD(v126) = v723 ^ 2;
  LODWORD(v126) = v724 ^ 0xA797AD5C;
  int v728 = (v126 >> 2) - ((2 * (v126 >> 2)) & 0xC52839A6);
  HIDWORD(v126) = v724 ^ 0x55E;
  LODWORD(v126) = v724 ^ 0xA797A800;
  int v729 = (v126 >> 11) - ((2 * (v126 >> 11)) & 0xDF759B94);
  HIDWORD(v126) = v724 ^ 0x197AD5E;
  LODWORD(v126) = v724 ^ 0xA6000000;
  int v730 = v126 >> 25;
  HIDWORD(v126) = v724 ^ 0x17AD5E;
  LODWORD(v126) = v724 ^ 0xA7800000;
  int v731 = (v126 >> 22) - ((2 * (v126 >> 22)) & 0xA0BC87EA);
  HIDWORD(v126) = v724 ^ 0xD5E;
  LODWORD(v126) = v724 ^ 0xA797A000;
  int v732 = v724 ^ v688;
  unsigned int v733 = (v730 ^ 0x77A3AEFB)
       + ((2 * v730) & 0xEF475DF6)
       - 2007215866
       + ((v729 + 1874513354) ^ (v727 - 89289385) ^ 0x6AE8BF62);
  unsigned int v734 = (v732 ^ 0xBB91DE0F ^ (v726 - ((2 * v726) & 0x792D95B2) - 1130968359)) + v689;
  unsigned int v735 = v673 + (v733 ^ 0xCB3FA5D5) + ((2 * v733) & 0x967F4BAA);
  unsigned int v736 = v732 ^ 0xEEE338F5 ^ (v726 - ((2 * v726) & 0xD3C85846) - 370922461);
  unsigned int v737 = (HIDWORD(v831) ^ 0xF433F53A)
       + (v734 ^ 0xF0FF57E4)
       + ((2 * v734) & 0xE1FEAFC8)
       + ((v735 + 885021227) ^ 0x777EE2FB)
       + ((2 * (v735 + 885021227)) & 0xEEFDC5F6)
       + 1843483196;
  int v738 = ((v736 + v709) ^ 0x39181118)
       + ((v728 - 493609773) ^ ((v126 >> 13) - ((2 * (v126 >> 13)) & 0xF755CFEA) + 2074798069) ^ (v731 + 1348355061) ^ 0xC960B8D3)
       - ((2 * (v736 + v709)) & 0x8DCFDDCE)
       - 957878552;
  unsigned int v739 = ((2 * v738) & 0x5FEFFFBE) + (v738 ^ 0xAFF7FFDF) + (v737 ^ 0xFFFE77C7) + ((2 * v737) & 0xFFFCEF8E);
  unsigned int v740 = v739 - ((2 * v739 + 1249460) & 0x393604E);
  unsigned int v741 = v740 - 774686563;
  unsigned int v742 = v740 - 774686591;
  HIDWORD(v126) = (v740 - 774686591) ^ 0x27;
  LODWORD(v126) = (v740 - 774686591) ^ 0x81C9B000;
  int v743 = v126 >> 6;
  int v744 = v126 >> 11;
  HIDWORD(v126) = v742 ^ 0x1C9B027;
  LODWORD(v126) = v741 + 2147483620;
  int v745 = (v126 >> 25) - ((2 * (v126 >> 25)) & 0xCCB6DD3A) + 1717268125;
  unsigned int v746 = (v744 ^ 0xAF6D7FFF) + (v743 ^ 0xEFBBDFD7) + ((2 * v743) & 0xDF77BFAE) + ((2 * v744) & 0x5EDAFFFE);
  HIDWORD(v126) = v742 ^ 0x1027;
  LODWORD(v126) = v742 ^ 0x81C9A000;
  int v747 = (v126 >> 13) - ((2 * (v126 >> 13)) & 0xAC0957EE) + 1443146743;
  int v748 = (v724 ^ 0x265E1D79 ^ v742) + (v705 ^ 0x44CD5A6B ^ v742);
  unsigned int v749 = v748 ^ 0x91050000;
  unsigned int v750 = (2 * v748) & 0xDDF5FFFE;
  HIDWORD(v126) = ~v741;
  LODWORD(v126) = v742 ^ 0x81C9B024;
  int v751 = v126 >> 2;
  int v752 = (v742 ^ 0x7E364FD8) + 1;
  HIDWORD(v126) = v742 ^ 0x9B027;
  LODWORD(v126) = v742 ^ 0x81FFFFFF;
  unsigned int v753 = v752 + (v724 ^ 0xA797AD5E);
  unsigned int v754 = v745 ^ 0xCB5E5859 ^ (v746 - ((2 * v746 + 1101873236) & 0x5A0A6D88) + 232511214);
  unsigned int v755 = (v724 ^ 0xA797AD5E) + ((v754 + v689) ^ 0xEC38EABE) + ((2 * (v754 + v689)) & 0xD871D57C) + 331814210;
  int v756 = (v705 ^ 0x62934712 ^ v724) + v749 - v750 + 1861943296;
  int v757 = (v756 ^ 0x158FAAE3)
       + ((2 * v756) & 0x2B1F55C6)
       + ((v751 - ((2 * v751) & 0x17EBB604) + 200661762) ^ v747 ^ ((v126 >> 22)
                                                                 - ((2 * (v126 >> 22)) & 0x67B38EEC)
                                                                 - 1277573258) ^ 0xEE28B783)
       - 361736931;
  int v758 = (v757 ^ 0x7EF5DBFF)
       + ((2 * v757) & 0xFDEBB7FE)
       - 2130041855
       + (v837 ^ 0xD2946B07 ^ (((2 * v755) & 0xFE5FFDBE)
                             + (v755 ^ 0xFF2FFEDF)
                             - ((2 * (((2 * v755) & 0xFE5FFDBE) + (v755 ^ 0xFF2FFEDF)) + 461336284) & 0x7F24E130)
                             - 1923995642));
  int v759 = v758 + 902648120 - ((2 * v758) & 0x6B9AA270);
  unsigned int v760 = v742 ^ 0x81C9B027;
  int v761 = v759 ^ 0x35CD5138;
  HIDWORD(v126) = v759 ^ 0xD5138;
  LODWORD(v126) = v759 ^ 0x35C00000;
  int v762 = v126 >> 22;
  unsigned int v763 = (v724 ^ 0x6DA50399 ^ v759)
       + (((v759 ^ 0x35CD5138) + (v742 ^ 0x81C9B027)) ^ 0xCFFEB47D)
       + ((2 * ((v759 ^ 0x35CD5138) + (v742 ^ 0x81C9B027))) & 0x9FFD68FA)
       + 805391236;
  HIDWORD(v126) = v759 ^ 0x138;
  LODWORD(v126) = v759 ^ 0x35CD5000;
  int v764 = v126 >> 11;
  unsigned int v765 = ((2 * v753) & 0xDFEFE5FC) + (v753 ^ 0x6FF7F2FE) + (v763 ^ 0xB9DEBFD7) + ((2 * v763) & 0x73BD7FAE);
  HIDWORD(v126) = v759 ^ 0x1CD5138;
  LODWORD(v126) = v759 ^ 0x34000000;
  int v766 = v126 >> 25;
  HIDWORD(v126) = v759 ^ 0x1138;
  LODWORD(v126) = v759 ^ 0x35CD4000;
  int v767 = (v126 >> 13) - ((2 * (v126 >> 13)) & 0x3B6F09E6);
  HIDWORD(v126) = v759 ^ 0x38;
  LODWORD(v126) = v759 ^ 0x35CD5100;
  int v768 = v126 >> 6;
  HIDWORD(v126) = v758;
  LODWORD(v126) = v759 ^ 0x35CD5138;
  int v769 = (v762 ^ 0x80904110)
       - ((2 * v762) & 0xFEDF7DDE)
       + 2138029808
       + ((v767 + 498566387) ^ ((v126 >> 2) - ((2 * (v126 >> 2)) & 0x43915F30) - 1580683368) ^ 0xBC7F2B6B);
  unsigned int v770 = v707
       + (v766 ^ 0x1050A48A)
       + (v764 ^ 0xEFDFFFBD)
       + (v768 ^ 0xEFAB45FB)
       + ((2 * v764) & 0xDFBFFF7A)
       + ((2 * v768) & 0xDF568BF6)
       - ((2 * v766) & 0xDF5EB6EA)
       + 270800318;
  unsigned int v771 = (v742 ^ 0x81C9B027) + (v770 ^ 0x7BEF92E3) + ((2 * v770) & 0xF7DF25C6) - 2079298275;
  unsigned int v772 = (HIDWORD(v837) ^ 0x4713DD6 ^ (((2 * v771) & 0xD7EFCB6E)
                                     + (v771 ^ 0x6BF7E5B7)
                                     - ((2 * (((2 * v771) & 0xD7EFCB6E) + (v771 ^ 0x6BF7E5B7)) - 375260140) & 0xC3C4D42E)
                                     - 692885471))
       + ((v769 - ((2 * v769) & 0xCE984708) - 414440572) ^ (v765 - ((2 * v765 + 206740054) & 0x1A742762) + 1667457244) ^ 0x6A763035);
  unsigned int v773 = v772 + 1260034048 - ((2 * v772) & 0x96353606);
  unsigned int v774 = v773 + 771;
  int v775 = (v773 + 771) ^ 0x4B1A9B03;
  unsigned int v776 = v775 + (v759 ^ 0x35CD5138) - ((2 * (v775 + (v759 ^ 0x35CD5138))) & 0xD5A40300) - 355335808;
  HIDWORD(v126) = (v773 + 771) ^ 0x1B03;
  LODWORD(v126) = (v773 + 771) ^ 0x4B1A8000;
  int v777 = (v126 >> 13) - ((2 * (v126 >> 13)) & 0x23362CB4) + 295376474;
  unsigned int v778 = ((v752 + v775 - ((2 * (v752 + v775)) & 0x60C06E0E) - 1335871737) ^ v776 ^ 0x5AB23687) + (v742 ^ 0x81C9B027);
  HIDWORD(v126) = (v773 + 771) ^ 0x11A9B03;
  LODWORD(v126) = (v773 + 771) ^ 0x4A000000;
  int v779 = v126 >> 25;
  unsigned int v780 = (v773 + 771) ^ 0x4B1A9B00;
  unsigned int v781 = (v780 >> 2) - (v773 << 30) - ((2 * ((v780 >> 2) - (v773 << 30))) & 0xCEBBA4F2);
  HIDWORD(v126) = v774 ^ 3;
  LODWORD(v126) = v780;
  int v782 = v126 >> 6;
  HIDWORD(v126) = v774 ^ 0x1A9B03;
  LODWORD(v126) = v774 ^ 0x4B000000;
  int v783 = v126 >> 22;
  HIDWORD(v126) = v774 ^ 0x3030303;
  LODWORD(v126) = v774 ^ 0x4B1A9800;
  unsigned int v784 = (v759 ^ 0x7ED7CA3B ^ v774) + (v742 ^ 0xCAD32B24 ^ v774);
  unsigned int v785 = (v742 ^ 0xB404E11F ^ v759) + (v784 ^ 0xFB5DD8F7) + ((2 * v784) & 0xF6BBB1EE) + 77735689;
  int v786 = v725
       + (v779 ^ 0x4041018)
       + (v782 ^ 0xC494DD66)
       + ((v126 >> 11) ^ 0xDBE6F4D9)
       - ((2 * v782) & 0x76D64532)
       - ((2 * v779) & 0xF7F7DFCE)
       + ((2 * (v126 >> 11)) & 0xB7CDE9B2)
       + 1535122857;
  unsigned int v787 = (v783 ^ 0x8A8C040C) - ((2 * v783) & 0xEAE7F7E6) + 1970535412 + (v777 ^ 0xF6C6C423 ^ (v781 - 413281671));
  unsigned int v788 = (v366 ^ 0x24D025DF)
       + (v778 ^ 0xF7D7B6DD)
       + (v786 ^ 0x2FBFF7C7)
       + ((2 * v778) & 0xEFAF6DBA)
       + ((2 * v786) & 0x5F7FEF8E)
       - 1906340197;
  unsigned int v789 = ((v785 - ((2 * v785) & 0xE04BEF3C) - 265947234) ^ 0x2C581370 ^ (v787 - ((2 * v787) & 0xB8FBC9DC) - 595729170))
       + (v788 ^ 0x5FAC6F8D)
       + ((2 * v788) & 0xBF58DF1A)
       - 1605136269;
  unsigned int v790 = v789 + 1293583112 - ((2 * v789) & 0x9A350610);
  int v791 = v790 ^ v774;
  unsigned int v792 = (v790 ^ v774 ^ 0x600180B)
       + (((v790 ^ 0x4D1A8308) + (v759 ^ 0x35CD5138)) ^ 0xC8001C04)
       - ((2 * ((v790 ^ 0x4D1A8308) + (v759 ^ 0x35CD5138))) & 0x6FFFC7F6)
       + 939516924;
  HIDWORD(v126) = v790 ^ 0x308;
  LODWORD(v126) = v790 ^ 0x4D1A8000;
  int v793 = v126 >> 13;
  HIDWORD(v126) = v790 ^ 8;
  LODWORD(v126) = v790 ^ 0x4D1A8300;
  int v794 = v126 >> 6;
  HIDWORD(v126) = v790 ^ 0x308;
  LODWORD(v126) = v790 ^ 0x4D1A8000;
  int v795 = v126 >> 11;
  HIDWORD(v126) = v790 ^ 0x11A8308;
  LODWORD(v126) = v790 ^ 0x4C000000;
  int v796 = v126 >> 25;
  unsigned int v797 = (v759 ^ 0x78D7D230 ^ v790)
       + (((v774 ^ 0xB4E564FC) + (v790 ^ 0x4D1A8308) + 1) ^ 0x4FFD87F6)
       + ((2 * ((v774 ^ 0xB4E564FC) + (v790 ^ 0x4D1A8308) + 1)) & 0x9FFB0FEC)
       - 1342015478;
  HIDWORD(v126) = v790 ^ 0x1A8308;
  LODWORD(v126) = v790 ^ 0x4D000000;
  int v798 = v126 >> 22;
  unsigned int v799 = v760 + (v795 ^ 0x4004844) + (v796 ^ 0xF73FBE6F) + (v794 ^ 0x14820008) + ((2 * v796) & 0xEE7F7CDE);
  HIDWORD(v126) = v789;
  LODWORD(v126) = v790 ^ 0x4D1A8308;
  unsigned int v800 = v761 + (v797 ^ 0xD97EAFDD) + ((2 * v797) & 0xB2FD5FBA) + 646008867;
  int v801 = (v793 ^ 0x30544600)
       + ((v126 >> 2) ^ 0xDD3EF7D7)
       + (v798 ^ 0x48886110)
       + ((2 * (v126 >> 2)) & 0xBA7DEFAE)
       - ((2 * v798) & 0x6EEF3DDE)
       - ((2 * v793) & 0x9F5773FE)
       - 1444650727
       + (v776 ^ 0xED8B38CD ^ (v792 - ((2 * v792) & 0xEB2729A) + 123287885));
  unsigned int v802 = ((v799 - ((2 * v795) & 0xF7FF6F76) - ((2 * v794) & 0xD6FBFFEE) - 264373947) ^ 0xBF5BFDDF)
       - v358
       + (v800 ^ 0x3F6DFFFF)
       + ((2 * (v799 - ((2 * v795) & 0xF7FF6F76) - ((2 * v794) & 0xD6FBFFEE) - 264373947)) & 0x7EB7FBBE)
       + ((2 * v800) & 0x7EDBFFFE)
       + (v801 ^ 0xFE97BB9)
       + ((2 * v801) & 0x1FD2F772);
  int v803 = v802 - ((2 * v802 + 195180658) & 0xD840722) - 1936515126;
  HIDWORD(v126) = v803 ^ 0x11111111;
  LODWORD(v126) = v803 ^ 0x86C20380;
  int v804 = v126 >> 6;
  HIDWORD(v126) = v803 ^ 0x391;
  LODWORD(v126) = v803 ^ 0x86C20000;
  int v805 = v126 >> 11;
  HIDWORD(v126) = v803 ^ 0xC20391;
  LODWORD(v126) = v803 ^ 0x86000000;
  int v806 = v126 >> 25;
  HIDWORD(v126) = v803 ^ 0x20391;
  LODWORD(v126) = v803 ^ 0x86C00000;
  int v807 = v126 >> 22;
  int v808 = v803 ^ v774;
  unsigned int v809 = v761
       + (v806 ^ 0x21E04149)
       + (v805 ^ 0xED6FFFF9)
       + (v804 ^ 0xF9D768BF)
       + ((2 * v805) & 0xDADFFFF2)
       + ((2 * v804) & 0xF3AED17E)
       - ((2 * v806) & 0xBC3F7D6C);
  HIDWORD(v126) = v803 ^ 1;
  LODWORD(v126) = v803 ^ 0x86C20390;
  int v810 = v126 >> 2;
  HIDWORD(v126) = v803 ^ 0x391;
  LODWORD(v126) = v803 ^ 0x86C20000;
  unsigned int v811 = v775
       + (((v808 ^ 0xCDD89892)
         + (((v803 ^ 0x86C20391) + (v790 ^ 0x4D1A8308)) ^ 0xB7BCF37F)
         + ((2 * ((v803 ^ 0x86C20391) + (v790 ^ 0x4D1A8308))) & 0x6F79E6FE)
         + 1212353665) ^ 0xC0003548)
       - ((2
         * ((v808 ^ 0xCDD89892)
          + (((v803 ^ 0x86C20391) + (v790 ^ 0x4D1A8308)) ^ 0xB7BCF37F)
          + ((2 * ((v803 ^ 0x86C20391) + (v790 ^ 0x4D1A8308))) & 0x6F79E6FE)
          + 1212353665)) & 0x7FFF956E);
  int v812 = (v810 ^ 0x1EA6F9B3)
       + ((v126 >> 13) ^ 0xF3FDB76F)
       + (v807 ^ 0xCE8285)
       + ((2 * v810) & 0x3D4DF366)
       + ((2 * (v126 >> 13)) & 0xE7FB6EDE)
       - ((2 * v807) & 0xFE62FAF4);
  unsigned int v813 = (v791 ^ 0xF9FFE7F4)
       + (v808 ^ 0xD93D6AF9 ^ ((v790 ^ 0xB2E57CF7)
                             + (v803 ^ 0x86C20391)
                             + 1
                             - ((2 * ((v790 ^ 0xB2E57CF7) + (v803 ^ 0x86C20391) + 1)) & 0x29CBE4D6)
                             + 350614123))
       + 1;
  unsigned int v814 = ((v424 + 1231166082) ^ 0x3F93FFDD)
       + ((2 * (v424 + 1231166082)) & 0x7F27FFBA)
       + ((v809 - 153594369) ^ 0x5A3FFFFB)
       + ((v811 + 1073728184) ^ 0xFE6BFFFF)
       + ((2 * (v811 + 1073728184)) & 0xFCD7FFFE)
       + ((2 * (v809 - 153594369)) & 0xB47FFFF6)
       + 1605325681
       + ((v813 - ((2 * v813) & 0xE274A10E) - 247836537) ^ (v812
                                                          + 1
                                                          - 2 * ((v812 + 210553945) & 0x1F2157DD ^ (v812 + 1) & 4)
                                                          + 195961905) ^ 0xEE1B075E);
  unsigned int v815 = v814 + 1568964608 - ((2 * v814) & 0xBB09063E) + 799;
  HIDWORD(v126) = v815 ^ 0x1F;
  LODWORD(v126) = v815 ^ 0x5D848300;
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + ((((167 * (((HIDWORD(v846) - 729) | 0x214) ^ 0x298)) ^ 0x29A) * ((int)v848 >= 559453140)) | HIDWORD(v846))))( (v126 >> 6),  147LL,  3575395474LL,  809818951LL,  559453139LL,  3472778395LL,  (v815 ^ 0x5D84831F)
         + (a56 ^ 0xE64661E1)
         - 431595039
         - ((2 * ((v815 ^ 0x5D84831F) + (a56 ^ 0xE64661E1))) & 0xCC8CC3C2),
           822189023LL,
           a3,
           a4,
           a5,
           a6,
           a7,
           a8,
           a9,
           a10,
           a11,
           a12,
           a13,
           a14,
           v817,
           v818,
           v819,
           v820,
           v821,
           v822,
           v823,
           v824,
           v825,
           v826,
           v827,
           v828,
           v829,
           v830,
           v831,
           v832,
           v833,
           v834,
           a33,
           a34,
           a35,
           v835,
           v836,
           a38,
           v837,
           v840,
           v843,
           v846,
           v848,
           v849,
           v850,
           v851,
           a47,
           a48);
}

uint64_t sub_100674420( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
}

void sub_100674474()
{
}

#error "10067A680: call analysis failed (funcsize=5127)"
void sub_10067A684()
{
  JUMPOUT(0x10067A28CLL);
}

uint64_t sub_10067A68C@<X0>( int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  LOBYTE(STACK[0x3A5]) = BYTE1(a3) ^ 0xA;
  LOBYTE(STACK[0x552]) = BYTE2(v61) ^ 0xFE;
  LOBYTE(STACK[0x737]) = HIBYTE(a3) ^ 0x95;
  LOBYTE(STACK[0x389]) = BYTE1(v61) ^ 0xDA;
  LOBYTE(STACK[0x56E]) = BYTE2(a3) ^ 0x4A;
  LOBYTE(STACK[0x71B]) = HIBYTE(v61) ^ 0x25;
  LOBYTE(STACK[0x76F]) = HIBYTE(v60) ^ 0xA6;
  LOBYTE(STACK[0x214]) = v60 ^ 0xB5;
  LOBYTE(STACK[0x3C1]) = BYTE1(v58) ^ 0x96;
  LOBYTE(STACK[0x58A]) = BYTE2(v58) ^ 0x78;
  LOBYTE(STACK[0x3DD]) = BYTE1(v60) ^ 0x83;
  LOBYTE(STACK[0x753]) = HIBYTE(v58) ^ 0x8E;
  LOBYTE(STACK[0x5A6]) = BYTE2(v60) ^ 0xF3;
  uint64_t v63 = (HIDWORD(a7) + 221714557);
  BOOL v64 = v63 < 0xFB7733C;
  unsigned int v65 = (a1 ^ 0xC33B093D)
  unsigned int v66 = ((2 * v65) & 0xA6FDC5FE) + (v65 ^ 0xD37EE2FF);
  unsigned int v67 = (v66 + 746659073) % 0x101;
  int v68 = v58 ^ v62;
  unsigned int v69 = v68
      + (((v59 ^ 0x6A5FECD7) + 746659073 + v66 + 1) ^ 0xBFDF3E96)
      + ((2 * ((v59 ^ 0x6A5FECD7) + 746659073 + v66 + 1)) & 0x7FBE7D2C)
      + 1075888490;
  unsigned int v70 = ((2 * v67) & 0x3A8) + (v67 ^ 0xD77F9BD4) + (v69 ^ 0x9AE9ADB7) + ((2 * v69) & 0x35D35B6E);
  unsigned int v71 = v70 - ((2 * v70 + 455961834) & 0x8C2CBB6C) - 743631829;
  int v72 = v71 ^ v60;
  int v73 = ((2 * v71) & 0x5DDFFC7A ^ 0x45F7450) + (v71 ^ 0x7DC04415);
  int v74 = (v72 ^ 0x1AB356F2) + 1;
  int v75 = v74 + v68 - ((2 * (v74 + v68)) & 0x52E442CE) - 1452138137;
  unsigned int v76 = v74 + (v59 ^ 0x95A01328) - ((2 * (v74 + (v59 ^ 0x95A01328))) & 0x6C8B83AA) - 1236942379;
  int v77 = (v76 ^ v72 ^ 0x530968D8) + 644140058;
  unsigned int v78 = v77 ^ 0xDF7FF7EE;
  unsigned int v79 = (2 * v77) & 0xBEFFEFDC;
  int v80 = (v75 ^ 0x568DDE98) + v73 + v78 + v79 - 53385476;
  unsigned int v81 = v80 - ((2 * v80 - 377666124) & 0xCF6A9398) + 1551101094;
  int v82 = v81 ^ v75;
  int v83 = v81 ^ v76;
  v81 ^= 0xE7B549CC;
  int v84 = v73 + 1360003523 + v81 - 1601367081 - ((2 * (v73 + 1360003523 + v81)) & 0x411A27AE);
  unsigned int v85 = (((v82 ^ 0x4EC768AB) + v81) ^ 0xFFE2F5FB) + (v83 ^ 0xAE0F77E6) + ((2 * ((v82 ^ 0x4EC768AB) + v81)) & 0xFFC5EBF6);
  unsigned int v86 = v84 ^ 0x557EAC77 ^ (v85 - ((2 * v85 + 3806220) & 0xEBE77F40) - 166671962);
  unsigned int v87 = v86 - 538496077 + (~(2 * v86 + 430282614) | 0xD9D73011);
  unsigned int v88 = (v87 ^ 0x931467F7) + (v84 ^ 0xA08D13D7);
  uint64_t v89 = v88 ^ 0x40E1120;
  unsigned int v90 = ((v87 ^ 0x931467F7)
       + (v87 ^ v83 ^ 0x3D1B1011)
       + 1
       - ((2 * ((v87 ^ 0x931467F7) + (v87 ^ v83 ^ 0x3D1B1011) + 1)) & 0x209FBBF4)
       + 273669626) ^ v87 ^ v82;
  int v91 = v89 - ((2 * v88) & 0xF7E3DDBE) + ((2 * v90) & 0xFBEFD31A ^ 0x9B298108) + (v90 ^ 0x306B3B2B) + 1;
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((693 * !v64) ^ a2)) - 4))( v89,  v91 - ((2 * v91 + 1359434296) & 0x8676127A) - 339824039,  a2,  746659073LL,  1359434296LL,  263680828LL,  v63,  2143190316LL,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

void sub_10067ABFC()
{
}

uint64_t sub_10067AC04( uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  LOBYTE(STACK[0x24C]) = v14 ^ 0x43;
  LOBYTE(STACK[0x415]) = BYTE1(v14) ^ 0x76;
  LOBYTE(STACK[0x78B]) = HIBYTE(a2) ^ 0x53;
  LOBYTE(STACK[0x5DE]) = BYTE2(v14) ^ 0x4F;
  LOBYTE(STACK[0x5C2]) = BYTE2(a2) ^ 0xAB;
  LOBYTE(STACK[0x230]) = a2 ^ 0xAD;
  LOBYTE(STACK[0x3F9]) = BYTE1(a2) ^ 0x99;
  LOBYTE(STACK[0x268]) = v12 ^ 0xF1;
  LOBYTE(STACK[0x5FA]) = BYTE2(v12) ^ 0x78;
  LOBYTE(STACK[0x616]) = BYTE2(v13) ^ 0xF3;
  LOBYTE(STACK[0x44D]) = BYTE1(v13) ^ 0x83;
  LOBYTE(STACK[0x7A7]) = HIBYTE(v14) ^ 0x91;
  LOBYTE(STACK[0x7C3]) = HIBYTE(v12) ^ 0x8E;
  LOBYTE(STACK[0x284]) = v13 ^ 0xB5;
  LOBYTE(STACK[0x431]) = BYTE1(v12) ^ 0x96;
  LOBYTE(STACK[0x7DF]) = HIBYTE(v13) ^ 0xA6;
  BOOL v15 = (a12 + 179648779) < 0x69FD241E || (a12 + 179648779) > 0x69FD241F;
  return ((uint64_t (*)(uint64_t))((char *)*(&off_10090DDE0 + ((397 * !v15) ^ (a3 - 1191))) - 12))(518522465LL);
}

void sub_10067B184()
{
}

uint64_t sub_10067B18C@<X0>( uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X4>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52)
{
  LOBYTE(STACK[0x469]) = BYTE1(a3) ^ 0xD1;
  LOBYTE(STACK[0x7FB]) = HIBYTE(a3) ^ 0xC7;
  LOBYTE(STACK[0x2BC]) = v53 ^ 0xB8;
  LOBYTE(STACK[0x2D8]) = v52 ^ 0xF1;
  LOBYTE(STACK[0x4A1]) = BYTE1(v52) ^ 0x96;
  LOBYTE(STACK[0x817]) = HIBYTE(v53) ^ 5;
  LOBYTE(STACK[0x485]) = BYTE1(v53) ^ 0x83;
  LOBYTE(STACK[0x64E]) = BYTE2(v53) ^ 0x30;
  LOBYTE(STACK[0x66A]) = BYTE2(v52) ^ 0x78;
  LOBYTE(STACK[0x2F4]) = a5 ^ 0xD3;
  LOBYTE(STACK[0x632]) = BYTE2(a3) ^ 0xDF;
  LOBYTE(STACK[0x686]) = BYTE2(a5) ^ 0x5E;
  LOBYTE(STACK[0x833]) = HIBYTE(v52) ^ 0x8E;
  char v55 = (((a3 & 0x35 ^ 0xEF) + ((2 * (a3 & 0x35 ^ 0xEF)) & 0x22 ^ 0xEF) - 102) ^ 0x99) & (((a3 & 0xCA ^ 0xBD)
                                                                                         + ((2 * (a3 & 0xCA)) ^ 0x8D)
                                                                                         - 4) ^ 0xFB);
  LOBYTE(STACK[0x2A0]) = v55 - ((2 * v55) & 0x20) - 112;
  LOBYTE(STACK[0x84F]) = HIBYTE(a5) ^ 0x48;
  LOBYTE(STACK[0x4BD]) = BYTE1(a5) ^ 0x6B;
  LODWORD(a51) = (a4 - 1287791080) & 0x4CC21FA9;
  BOOL v56 = (HIDWORD(a6) - 1373951054) < 0x89439FB;
  uint64_t v57 = *((_DWORD *)&STACK[0x8D0] + (639829332 * (a51 ^ 0x368) - 1933810328) % 0x55C) ^ 0x9D71F67u;
  int v58 = LOBYTE(STACK[0x478]) ^ *(unsigned __int8 *)((v57 ^ 0x2F9FFC36F6EEFB5BLL)
                                                  + a10
                                                  - 0x4378B8CC4843E522LL
                                                  + ((2 * v57) & 0x1EDDDF6B6LL)
                                                  - 0x2F9FFC36F6EEFB5BLL);
  unsigned int v59 = (a2 ^ 0x3CC4F6C2) - 36496591 * (((2 * (v58 ^ 0xCCCCCCCC)) & 0x1D2) + (v58 ^ 0xF7C7F327));
  unsigned int v60 = v59 - ((2 * v59 + 1542159056) & 0xD0A66308) - 1773605140;
  int v61 = v52 ^ a1;
  unsigned int v62 = (((v53 ^ 0x95A01328) + v61) ^ 0xC82C601)
      - ((2 * ((v53 ^ 0x95A01328) + v61)) & 0xE6FA73FC)
      - 209896961
      + (v60 ^ 0x2E86FA37 ^ ((v60 ^ 0x68533184) % 0x101 - ((2 * ((v60 ^ 0x68533184) % 0x101)) & 0x366) + 1188416435));
  int v63 = (v62 - ((2 * v62) & 0x6C41CB22) - 1239358063) ^ v54;
  unsigned int v64 = (v63 ^ 0x8043F6B4) - 2 * (((v63 ^ 0x8043F6B4) + 495567544) & 0x3FC026D5 ^ v63 & 1) + 1565125004;
  unsigned int v65 = ((2 * ((v64 ^ 0xBFC026D4) + v61)) & 0xC8B7DDBC) + (((v64 ^ 0xBFC026D4) + v61) ^ 0x645BEEDE);
  int v66 = v64 ^ v54;
  unsigned int v67 = v65 - 1683746526;
  LODWORD(v57) = (v66 ^ 0xE122D649 ^ (v67
                                    + (v53 ^ 0x95A01328)
                                    - ((2 * (v67 + (v53 ^ 0x95A01328))) & 0xD103C770)
                                    + 1753342904))
               + 1423587212;
  int v68 = ((2 * v57) & 0xFBDBDB66) + (v57 ^ 0x7DEDEDB3);
  int v69 = v68
      - 2112744883
      + (v53 ^ 0x2A6035FC ^ v64)
      - 2008863365
      - ((2 * (v68 - 2112744883 + (v53 ^ 0x2A6035FC ^ v64))) & 0x10865AF6);
  unsigned int v70 = ((v68 - 2112744883) ^ v66 ^ 0x89A335F1)
      + 680571825
      - 2 * (((v68 - 2112744883) ^ v66 ^ 0x89A335F1) & 0x2890B3B7 ^ ((v68 - 2112744883) ^ v66) & 6);
  unsigned int v71 = ((2 * ((v69 ^ 0x88432D7B) + v67)) & 0x6F1DF7C8) + (((v69 ^ 0x88432D7B) + v67) ^ 0x378EFBE4);
  int v72 = v70 ^ 0x1AA14981 ^ (1774253588 - v71 - ((1864234952 - 2 * v71) & 0x6463F460));
  int v73 = v72 - ((2 * v72 + 506164194) & 0x7F89861A) + 1322941694;
  int v74 = v73 ^ v70;
  unsigned int v75 = (((v69 ^ 0x3787EE76 ^ v73) + (v73 ^ 0xBFC4C30D)) ^ 0xE6E6FE5E)
      + ((2 * ((v69 ^ 0x3787EE76 ^ v73) + (v73 ^ 0xBFC4C30D))) & 0xCDCDFCBC)
      + 421069218
      + ((v65
        + v68
        + 498475887
        + (v73 ^ 0xBFC4C30D)
        - 1326400354
        - ((2 * (v65 + v68 + 498475887 + (v73 ^ 0xBFC4C30D))) & 0x61E1793C)) ^ 0xB0F0BC9E);
  uint64_t v76 = (v75 - ((2 * v75) & 0x16562034) - 1960112102) ^ v74;
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + (int)((30 * !v56) ^ a4)) - 12))( a1,  v76 ^ 0xFC10B6D7,  3452828860LL,  421069218LL,  a4,  v76,  2538893500LL,  4228953815LL,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

void sub_10067B7C0()
{
}

uint64_t sub_10067B7D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unsigned int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LOBYTE(STACK[0x32C]) = v66 ^ 0xB8;
  LOBYTE(STACK[0x310]) = a6 ^ 0x47;
  LOBYTE(STACK[0x887]) = HIBYTE(v66) ^ 5;
  LOBYTE(STACK[0x4D9]) = BYTE1(a6) ^ 0x26;
  LOBYTE(STACK[0x6DA]) = BYTE2(v65) ^ 0x70;
  LOBYTE(STACK[0x6BE]) = BYTE2(v66) ^ 0x30;
  LOBYTE(STACK[0x86B]) = HIBYTE(a6) ^ 0x6C;
  LOBYTE(STACK[0x364]) = v67 ^ 0xB5;
  LOBYTE(STACK[0x4F5]) = BYTE1(v66) ^ 0x83;
  LOBYTE(STACK[0x348]) = v65 ^ 0xD9;
  LOBYTE(STACK[0x8A3]) = HIBYTE(v65) ^ 0xDC;
  LOBYTE(STACK[0x6F6]) = BYTE2(v67) ^ 0xF3;
  LOBYTE(STACK[0x6A2]) = BYTE2(a6) ^ 0x80;
  LOBYTE(STACK[0x52D]) = BYTE1(v67) ^ 0x83;
  LOBYTE(STACK[0x8BF]) = HIBYTE(v67) ^ 0xA6;
  LOBYTE(STACK[0x511]) = BYTE1(v65) ^ 0x9A;
  LODWORD(a53) = -134217732;
  int v68 = -721315142 - 1487347361 * ((((a65 ^ 0x90) << (a54 - 8)) & 0xCE) + (a65 ^ 0x7E9FE7F7));
  unsigned int v69 = v68
      - 418090588
      + (((v68 - 454836432) % 0x101u) ^ 0xFE7FFFEF)
      + ((2 * ((v68 - 454836432) % 0x101u)) & 0x3DE)
      - 429670591;
  unsigned int v70 = (v69 ^ 0xFFBBE973) + 621096836 + ((2 * v69) & 0xFF77D2E6) + 4462221;
  int v71 = (v70 - ((2 * v70) & 0xF770D10) + 129730184) ^ 0x459D2926;
  unsigned int v72 = ((v71 - 1738420157) ^ 0x75F6CFBE) - 649391344 + ((2 * (v71 - 1738420157)) & 0xEBED9F7C) + 1;
  unsigned int v73 = ((v72 - 1077624051 - ((2 * v72 + 298966018) & 0x6DB7C02C) + 2826) ^ 0xE7F77DD5) - 1543265250;
  unsigned int v74 = ((v73 - ((2 * v73 - 1876498466) & 0xAC4C0298) + 507082043) ^ 0x1677462D) - 35086739;
  int v75 = (v74 - ((2 * v74) & 0x1FD60FE8) - 1880422412) ^ 0x754AC756;
  unsigned int v76 = v75 - ((2 * v75 - 597685216) & 0x9C5E8514) - 1134606182;
  unsigned int v77 = (v76 ^ 0xB1D0BD75) - 1605399210 - ((2 * ((v76 ^ 0xB1D0BD75) + 644941651)) & 0xF3BD0C06);
  unsigned int v78 = (v76 ^ 0xB1D0BD75) + 621096837;
  unsigned int v79 = v78 ^ 0xFBB0E6F9;
  unsigned int v80 = (2 * v78) & 0xF761CDF2;
  unsigned int v81 = v76 ^ 0xC96219F8;
  unsigned int v82 = (v76 ^ 0xB1D0BD75) + 595271993 - ((2 * ((v76 ^ 0xB1D0BD75) + 1117723493)) & 0xC1B80BA8);
  unsigned int v83 = ((2 * ((v76 ^ 0x4E2F428A) - 1068415135)) & 0xD733FDEE) + (((v76 ^ 0x4E2F428A) - 1068415135) ^ 0x6B99FEF7);
  int v84 = v76 ^ 0xC09ED24;
  int v85 = (v76 ^ 0xC09ED24) + (v76 ^ 0x4E2F428A);
  int v86 = v85 ^ 0x7BF972BC;
  unsigned int v87 = (2 * v85) & 0xF7F2E578;
  unsigned int v88 = v79 + 72292615 + v80;
  unsigned int v89 = v76 ^ 0xA93B332E;
  unsigned int v90 = (v77 ^ 0x79DE8603)
      + (((v76 ^ 0x8752D821) + v88) ^ 0x7FB9F1F8)
      + ((2 * ((v76 ^ 0x8752D821) + v88)) & 0xFF73E3F0)
      - 2142892536;
  unsigned int v91 = ((v89 + v86 + v87 - 2079945404) ^ 0xAF77FED3)
      + ((2 * (v89 + v86 + v87 - 2079945404)) & 0x5EEFFDA6)
      + (v90 ^ 0x8120E4C0);
  int v92 = v76 ^ 0x195A034C;
  unsigned int v93 = v76 ^ 0xADA771E9;
  unsigned int v94 = (v76 ^ 0xB1D0BD75) + 1243070047 - ((2 * ((v76 ^ 0xB1D0BD75) + 1243070047) + 128040990) & 0x5C0C31E) - 1229897314;
  int v95 = v76 ^ 0x37FC83F6;
  unsigned int v96 = (v76 ^ 0xB1D0BD75) - 1738420156 - ((2 * ((v76 ^ 0xB1D0BD75) - 1738420156)) & 0xADC62064) - 689762254;
  unsigned int v97 = v91
      - ((2 * v90) & 0xFDBE367E)
      + 1
      - ((2 * (v91 - ((2 * v90) & 0xFDBE367E) + 1) - 1630652200) & 0xA9E7899E)
      - 1537547973;
  int v98 = (v76 ^ 0x4E2F428A) + 334030835 - ((2 * ((v76 ^ 0x4E2F428A) + 334030835)) & 0x4D6A8AF6) - 1498069637;
  unsigned int v99 = (((v76 ^ 0x4E2F428A) - 179867185) ^ 0x9CECBBB5)
      + 1662207051
      + ((2 * ((v76 ^ 0x4E2F428A) - 179867185)) & 0x39D9776A);
  unsigned int v100 = (v76 ^ 0x696083A4)
       + (v82 ^ 0x9B69A094 ^ ((v96 ^ 0x210D4FD ^ v97)
                            + v99
                            - ((2 * ((v96 ^ 0x210D4FD ^ v97) + v99)) & 0xF76B4A80)
                            + 2075501888))
       + 1;
  v76 ^= 0xA5F6C87u;
  unsigned int v101 = v76 + (v100 ^ 0xB077FDAF) + ((2 * v100) & 0x60EFFB5E) + 1334313553;
  unsigned int v102 = (v93 ^ v98 ^ 0x33940509 ^ (v101 - ((2 * v101) & 0x768BFC1C) + 994442766)) - v83;
  int v103 = (v92 ^ 0x522B7E9B) + (v94 ^ 0x10A6BF4D ^ (v102 - ((2 * v102 + 389283310) & 0x248DBD84) + 2111888825)) + 1;
  unsigned int v104 = ((2 * v103) & 0xBFC2FD3C)
       + (v103 ^ 0x5FE17E9E)
       - 2 * ((((2 * v103) & 0xBFC2FD3C) + (v103 ^ 0x5FE17E9E) + 2122314840) & 0x492A180B ^ (v103 ^ 0x5FE17E9E) & 2)
       + 1202326625;
  unsigned int v105 = (v104 ^ 0xC92A1809) + v76 - ((2 * ((v104 ^ 0xC92A1809) + v76)) & 0xC6391E44) - 484667614;
  unsigned int v106 = ((2 * ((v104 ^ 0xC92A1809) + (v82 ^ 0xE0DC05D4))) & 0xFFB5C9FC)
       + (((v104 ^ 0xC92A1809) + (v82 ^ 0xE0DC05D4)) ^ 0xFFDAE4FE);
  int v107 = v104 ^ v93;
  int v108 = v104 ^ v98;
  int v109 = v104 ^ v92;
  unsigned int v110 = (v104 ^ 0xC92A1809) + v89 - ((2 * ((v104 ^ 0xC92A1809) + v89)) & 0x346D739E) + 439794127;
  unsigned int v111 = ((2 * ((v104 ^ 0xC92A1809) + (v94 ^ 0x2E0618F))) & 0xD72FF7E4)
       + (((v104 ^ 0xC92A1809) + (v94 ^ 0x2E0618F)) ^ 0xEB97FBF2);
  unsigned int v112 = ((2 * ((v104 ^ 0xC92A1809) + v99)) & 0xFC7BFEFE) + (((v104 ^ 0xC92A1809) + v99) ^ 0xFE3DFF7F);
  int v113 = v104 ^ v81;
  unsigned int v114 = v84 + (v104 ^ 0x36D5E7F6) + 2014535445 - ((2 * (v84 + (v104 ^ 0x36D5E7F6) + 1)) & 0xF026BE28);
  int v115 = v104 ^ v95;
  unsigned int v116 = (v104 ^ 0xC92A1809) + v88 + 911198219 - ((2 * ((v104 ^ 0xC92A1809) + v88)) & 0x6C9F9016);
  int v117 = (v104 ^ 0x36D5E7F6)
       + v83
       - 2 * (((v104 ^ 0x36D5E7F6) + v83 + 342229258) & 0x30267D61 ^ ((v104 ^ 0x36D5E7F6) + v83) & 1)
       + 1150058090;
  int v118 = v96 ^ 0x1FC9083B ^ v104;
  unsigned int v119 = (v104 ^ v116 ^ v110 ^ v114 ^ 0x9D4036D9) + v118;
  unsigned int v120 = v77 ^ 0xB0F49E0A ^ v104;
  unsigned int v121 = (((v113 ^ 0x871AD9D0) + v120) ^ 0x2284A2D0)
       - v106
       - ((2 * ((v113 ^ 0x871AD9D0) + v120)) & 0xBAF6BA5E)
       + v112
       + (v119 ^ 0x3FDA9EAF)
       + ((2 * v119) & 0x7FB53D5E)
       - 1573637871;
  unsigned int v122 = (v105 ^ 0x1CE370DD) + (v115 ^ 0xEDD0CB0A ^ (v121 - ((2 * v121 + 169010654) & 0xB32595C) - 2103271523)) + 1;
  unsigned int v123 = (v107 ^ 0x674EA675) + (v122 ^ 0xBBF6F536) + ((2 * v122) & 0x77EDEA6C) + 1141443274;
  int v124 = (v108 ^ v117 ^ 0x5EBFFF19 ^ (v123 - ((2 * v123) & 0x20DBE16) - 2130256117)) - 762027389;
  unsigned int v125 = (v109 ^ 0x9B016692) + (v124 ^ 0xF6FF7FF2) + ((2 * v124) & 0xEDFEFFE4) + 151027727;
  uint64_t v126 = ((2 * v125) & 0xDBEFEFFC) + (v125 ^ 0x6DF7F7FE);
  int v127 = v111 + v126 - ((2 * (v111 + v126) + 216012832) & 0xD9ED83E) - 1388349393;
  unsigned int v128 = ((2 * ((v127 ^ 0x6CF6C1F) + (v116 ^ 0x364FC80B))) & 0xEFBEFBBE)
       + (((v127 ^ 0x6CF6C1F) + (v116 ^ 0x364FC80B)) ^ 0x77DF7DDF);
  unsigned int v129 = ((2 * (v112 + 29491329 + (v127 ^ 0x6CF6C1F))) & 0x7FE7FFAE)
       + ((v112 + 29491329 + (v127 ^ 0x6CF6C1F)) ^ 0xBFF3FFD7);
  HIDWORD(v130) = v128 + 1;
  LODWORD(v130) = v128 - 2011135455;
  int v131 = (v130 >> 2) + 1515450368 - ((2 * (v130 >> 2)) & 0xB4A7F2FE) + 2431;
  HIDWORD(v130) = v131 ^ 0x97F;
  LODWORD(v130) = v131 ^ 0x5A53F000;
  unsigned int v132 = (v127 ^ 0x6CF6C1F)
       + (v117 ^ 0xB0267D60)
       + 597931584
       - ((2 * ((v127 ^ 0x6CF6C1F) + (v117 ^ 0xB0267D60))) & 0x47476C80);
  int v133 = (v130 >> 12) - ((2 * (v130 >> 12)) & 0xC2F1086) - 2045278141;
  unsigned int v134 = ((2 * ((v127 ^ 0x6CF6C1F) + (v108 ^ 0x6F9F5D72))) & 0xEE7FF3BC)
       + (((v127 ^ 0x6CF6C1F) + (v108 ^ 0x6F9F5D72)) ^ 0x773FF9DE);
  int v135 = v127 ^ v109;
  int v136 = (v127 ^ 0x6CF6C1F) + v118 + 812793684 - ((2 * ((v127 ^ 0x6CF6C1F) + v118)) & 0x60E47EA8);
  unsigned int v137 = v106 + 2431746 + (v127 ^ 0x6CF6C1F) + 2081045839 - ((2 * (v106 + 2431746 + (v127 ^ 0x6CF6C1F))) & 0xF8147A9E);
  HIDWORD(v130) = v133 ^ 0x38843;
  LODWORD(v130) = v133 ^ 0x86140000;
  int v138 = (v130 >> 18) - 1394428866 - ((2 * (v130 >> 18)) & 0x59C5687C);
  uint64_t v139 = ((2 * ((v127 ^ 0x6CF6C1F) + (v115 ^ 0x6849E7A4))) & 0x3DBE7EDA)
       + (((v127 ^ 0x6CF6C1F) + (v115 ^ 0x6849E7A4)) ^ 0x9EDF3F6D);
  unsigned int v140 = ((2 * (v127 ^ v105)) & 0xB6F6D6E4 ^ 0x82A6C660) + (v127 ^ v105 ^ 0x3EA8884F);
  unsigned int v141 = (v120 + (v127 ^ 0xF93093E0) - 907230845 - ((2 * (v120 + (v127 ^ 0xF93093E0) + 1)) & 0x93D98304)) ^ 0xC9ECC182;
  unsigned int v142 = (v113 ^ 0x81D5B5CF ^ v127)
       + (((v127 ^ 0xAA2DD821 ^ v138) + v141) ^ 0xD6EFFF9B)
       + ((2 * ((v127 ^ 0xAA2DD821 ^ v138) + v141)) & 0xADDFFF36)
       + 688914533;
  unsigned int v143 = ((2 * ((v127 ^ 0x6CF6C1F) + (v114 ^ 0x78135F14))) & 0x21A7FEFC)
       + (((v127 ^ 0x6CF6C1F) + (v114 ^ 0x78135F14)) ^ 0x10D3FF7E)
       + ((2 * (v127 ^ v110)) & 0x7FBD0EC4 ^ 0x39B10A80)
       + (v127 ^ v110 ^ 0xA32752B2)
       + (v142 ^ 0xF7FFFFFC)
       + ((2 * v142) & 0xEFFFFFF8)
       + 1069438566;
  unsigned int v144 = (v136 ^ 0x6A4175E7 ^ (v143 - ((2 * v143 - 283228804) & 0xB4669566) + 1371696497)) - v129;
  int v145 = v107 ^ 0x6181CA6A ^ v127;
  unsigned int v146 = (v137 ^ 0xC582287 ^ (v144 - ((2 * v144 + 2145910702) & 0xE0A43F90) + 809901983)) + v145;
  int v147 = (v135 ^ 0x9DCE0A8D)
       + (v132 ^ 0x6AD04B0A ^ ((v146 ^ 0x5FEEFFFF)
                             - (v134
                              + v140
                              + v139)
                             + ((2 * v146) & 0xBFDDFFFE)
                             - 2
                             * (((v146 ^ 0x5FEEFFFF) - (v134 + v140 + v139) + ((2 * v146) & 0xBFDDFFFE) - 1851022146) & 0x4973FD4B ^ ((v146 ^ 0x5FEEFFFF) - (v134 + v140 + v139)) & 1)
                             - 618683896))
       + 1;
  int v148 = (v147 ^ 0xFAB6DBFD) + v126 + ((2 * v147) & 0xF56DB7FA);
  int v149 = v148 - ((2 * v148 + 782391306) & 0x28B9A566) - 1414660424;
  unsigned int v150 = ((2 * v149) & 0x7F8B6FF2 ^ 0x9014F40) + (v149 ^ 0xBB45505D);
  return ((uint64_t (*)(void, uint64_t, void, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + a54))( v150 + (_DWORD)v139 - ((2 * (v150 + (_DWORD)v139) + 1119228212) & 0xDE997A4E),  4187141233LL,  v134 - v150,  63LL,  v150 + 1077561351 + v145 - 531894468 - ((2 * (v150 + 1077561351 + v145)) & 0xC097F9EC),  v126,  v139,  (v135 ^ 0x6231F572) - 1077561351 - v150 - ((2 * ((v135 ^ 0x6231F572) - 1077561351 - v150)) & 0xC7F787DC),  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51,
           a52,
           a53);
}

void sub_10067CA40()
{
}

uint64_t sub_10067CA64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  LOBYTE(STACK[0x368]) = LOBYTE(STACK[0x3C8]) ^ LOBYTE(STACK[0x390]) ^ *(_BYTE *)((LODWORD(STACK[0x11F0]) ^ 0x3BFD6BFF9609AC98LL)
                                                                                + a13
                                                                                + ((2LL
                                                                                  * (LODWORD(STACK[0x11F0]) ^ 0x9D71F67u)) & 0x13FBD67FELL)
                                                                                - 0x7F7624CBE8229921LL) ^ *(_BYTE *)((LODWORD(STACK[0x1E10]) ^ 0x7FFD7E77D620CDFBLL) + a13 + ((2LL * (LODWORD(STACK[0x1E10]) ^ 0x9D71F67u)) & 0x1BFEFA538LL) + 0x3C89C8BBD7C44842LL) ^ 0x90;
  LOBYTE(STACK[0x531]) = *(_BYTE *)((LODWORD(STACK[0x1374]) ^ 0x4EABEFAFD429E019LL)
                                  + a13
                                  + ((2LL * (LODWORD(STACK[0x1374]) ^ 0x9D71F67u)) & 0x1BBFDFEFCLL)
                                  + 0x6DDB5783D9BD1B60LL) ^ LOBYTE(STACK[0x559]) ^ LOBYTE(STACK[0x591]) ^ *(_BYTE *)((LODWORD(STACK[0xA24]) ^ 0xFFC97D9E3F74B09DLL) + ((2 * (LODWORD(STACK[0xA24]) ^ 0x9D71F67)) & 0x6D475FF4) + a13 - 0x4342366A7EE7951CLL) ^ 0x90;
  LOBYTE(STACK[0x6FA]) = LOBYTE(STACK[0x75A]) ^ LOBYTE(STACK[0x722]) ^ *(_BYTE *)((LODWORD(STACK[0x14F8]) ^ 0xE2BBAEBDE48A79B0LL)
                                                                                + a13
                                                                                + ((2LL
                                                                                  * (LODWORD(STACK[0x14F8]) ^ 0x9D71F67u)) & 0x1DABACDAELL)
                                                                                - 0x2634678A35A14BF9LL) ^ *(_BYTE *)((LODWORD(STACK[0xBA8]) ^ 0x78FF8675F62CC088LL) + a13 + ((2LL * (LODWORD(STACK[0xBA8]) ^ 0x9D71F67u)) & 0x1FFF7BFDELL) + 0x4387C0BDB7C03AEFLL) ^ 0x90;
  LOBYTE(STACK[0x8C3]) = a73 ^ *(_BYTE *)((LODWORD(STACK[0xD2C]) ^ 0xFBBCEFB3766E82D8LL)
                                        + ((2 * (LODWORD(STACK[0xD2C]) ^ 0x9D71F67)) & 0xFF733B7E)
                                        + a13
                                        - 0x3F35A87FC7FD82E1LL) ^ *(_BYTE *)((LODWORD(STACK[0x167C]) ^ 0x7D7C7FBB52B2C0D8LL)
                                                                           + ((2 * (LODWORD(STACK[0x167C]) ^ 0x9D71F67)) & 0xB6CBBF7E)
                                                                           + a13
                                                                           + 0x3F0AC7785C563B1FLL) ^ LOBYTE(STACK[0x21B]) ^ 0x90;
  LOBYTE(STACK[0x384]) = LOBYTE(STACK[0x3AC]) ^ LOBYTE(STACK[0x3E4]) ^ *(_BYTE *)((LODWORD(STACK[0xEB0]) ^ 0xBDD7E9BCC5E1A988LL)
                                                                                + a13
                                                                                + ((2LL
                                                                                  * (LODWORD(STACK[0xEB0]) ^ 0x9D71F67u)) & 0x1986D6DDELL)
                                                                                - 0x150A289147A9C11LL) ^ *(_BYTE *)((LODWORD(STACK[0x1800]) ^ 0x136F3FAFE42C2494LL) + a13 + ((2LL * (LODWORD(STACK[0x1800]) ^ 0x9D71F67u)) & 0x1DBF677E6LL) - 0x56E7F87C363F2115LL) ^ 0x90;
  LOBYTE(STACK[0x54D]) = LOBYTE(STACK[0x575]) ^ LOBYTE(STACK[0x5AD]) ^ *(_BYTE *)((LODWORD(STACK[0x1034]) ^ 0xB222B7E7F500C499LL)
                                                                                + a13
                                                                                + ((2LL
                                                                                  * (LODWORD(STACK[0x1034]) ^ 0x9D71F67u)) & 0x1F9AFB7FCLL)
                                                                                + 0xA648F4BBAE43EE0LL) ^ *(_BYTE *)((LODWORD(STACK[0x1984]) ^ 0x67F8D6B7F2007498LL) + a13 + ((2LL * (LODWORD(STACK[0x1984]) ^ 0x9D71F67u)) & 0x1F7AED7FELL) + 0x548E707BBBE4AEDFLL) ^ 0x90;
  LOBYTE(STACK[0x716]) = LOBYTE(STACK[0x776]) ^ *(_BYTE *)((LODWORD(STACK[0x1B08]) ^ 0x9BFFBDFEF621F990LL)
                                                         + a13
                                                         + ((2LL * (LODWORD(STACK[0x1B08]) ^ 0x9D71F67u)) & 0x1FFEDCDEELL)
                                                         + 0x20878934B7C533E7LL) ^ *(_BYTE *)((LODWORD(STACK[0x11B8]) ^ 0xBFEB97CBF679F1FALL)
                                                                                            + a13
                                                                                            + ((2LL
                                                                                              * (LODWORD(STACK[0x11B8]) ^ 0x9D71F67u)) & 0x1FF5DDD3ALL)
                                                                                            - 0x364509847F2D3BFLL) ^ LOBYTE(STACK[0x73E]) ^ 0x90;
  a70 = a74 ^ LOBYTE(STACK[0x237]) ^ *(_BYTE *)((LODWORD(STACK[0x1C8C]) ^ 0x7FBDCBE47528E49ALL)
                                              + ((2 * (LODWORD(STACK[0x1C8C]) ^ 0x9D71F67)) & 0xF9FFF7FA)
                                              + a13
                                              + 0x3CC97B4F3ABC1EE1LL) ^ *(_BYTE *)((LODWORD(STACK[0x133C]) ^ 0xCEFBF5FDB38960A4LL)
                                                                                 + a13
                                                                                 + ((2LL
                                                                                   * (LODWORD(STACK[0x133C]) ^ 0x9D71F67u)) & 0x174BCFF86LL)
                                                                                 - 0x1274AECA02A264E5LL) ^ 0x90;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x378]) = -112;
  LOBYTE(STACK[0x370]) = -112;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + a54 - 498) - 8))( 3942694827LL,  2443359173LL,  1800LL);
}

uint64_t sub_10067D1E8( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v70 = (v66 - (((v66 << ((a4 + 1) & 0xDF ^ (v65 + 1))) - 1160334000) & 0x9428E85A) + 662687445) ^ 0x4A147495;
  int v71 = *(_DWORD *)(v68 + 4LL * ((((2722 * v70) & 0xFFFFB7E6) + ((1361 * v70) ^ 0xFFFFDBF3) + 2329734) % 0x12E0)) ^ 0x4F18A365;
  unsigned int v72 = v71 - ((2 * v71 + 1448545978) & 0x43712F16) - 1931206936;
  unsigned int v73 = v72 ^ (v72 >> 7) ^ (v72 >> 3) ^ 0xFC56347B;
  unsigned int v74 = (uint64_t (*)(void))(*(void *)(v67 + 8LL * ((2026 * (v66 + 1 != v69 + 256)) ^ a4)) - 8LL);
  *(&a65 + (457 * v66 + 1151682600) % 0x708u) = byte_10073D070[(((4424 * v73) & 0x7F1FD5D8)
                                                              + ((2212 * v73) ^ 0xBF8FEAED)
                                                              + 1082850215)
                                                             % 0x97F] ^ 0x37;
  return v74();
}

uint64_t sub_10067D390(unsigned int a1, int a2, uint64_t a3)
{
  int v12 = v4 * v8;
  uint64_t v13 = v12 + 131803634 - ((((v12 + 131803634) * (unint64_t)a1) >> 32) >> 10) * a2;
  unsigned int v14 = ((((*(unsigned __int8 *)(a3 + v13) ^ 0x90) << (v5 + 35)) & 0x1F6) + (*(unsigned __int8 *)(a3 + v13) ^ 0x1F33B96B))
      * v8
      + 1286406957;
  int v15 = *(unsigned __int8 *)(a3 + v14 - (((v14 * (unint64_t)a1) >> 32) >> 10) * a2) ^ 0xDB;
  unsigned int v16 = (((2 * v15) & 0x14E) + (v15 ^ 0x7FF7FAA7)) * v6 + 1162753284;
  int v17 = *(unsigned __int8 *)(v10 + v16 - (((v16 * (unint64_t)v7) >> 32) >> 10) * v9);
  HIDWORD(v1_Block_object_dispose(va, 8) = v17 ^ 0x33;
  LODWORD(v1_Block_object_dispose(va, 8) = ~v17 << 24;
  int v19 = (v18 >> 31) - ((2 * (v18 >> 31)) & 4);
  char v20 = (v19 + 2) >> 2;
  v19 -= 126;
  char v21 = (v20 ^ 0x7F) + 2 * v20 - 127;
  char v22 = 2 * ((v21 & (v19 ^ 0x82)) - ((2 * (v21 & (v19 ^ 0x82))) & 0x6A));
  int v23 = v19 ^ (((((v21 + (v19 ^ 0x82)) ^ 0x1E)
                                + ((2 * (v21 + (v19 ^ 0x82))) & 0x3C)
                                + ((v22 - 22) ^ 0xE1)
                                + ((2 * (v22 - 22)) & 0xE8 ^ 0x3F)
                                - 40) >> 4) | 0xB0);
  unsigned int v24 = (((2 * v23) & 0x176) + (v23 ^ 0x567AFFFF)) * v6 - 1048783240;
  int v25 = *(unsigned __int8 *)(v10 + v24 - (((v24 * (unint64_t)v7) >> 32) >> 10) * v9);
  unsigned int v26 = (((2 * (v25 ^ 0x19)) & 0xFFFFFFBF) + (v25 ^ 0x57F7D7C6)) * v8 - 158329559;
  int v27 = *(unsigned __int8 *)(a3 + v26 - (((v26 * (unint64_t)a1) >> 32) >> 10) * a2);
  unsigned int v28 = (((2 * (v27 ^ 0xC3)) & 0xFFFFFFF7) + (v27 ^ 0x7FF5FF38)) * v6 + 1450242500;
  unsigned int v29 = *(unsigned __int8 *)(v10 + v28 - (((v28 * (unint64_t)v7) >> 32) >> 10) * v9) ^ 0xFFFFFFB3;
  int v30 = ((~(62 * v29) | 0x1F) - 97 * v29 - 15) ^ 0x1C;
  unsigned int v31 = (((2 * v30) & 0x13E) + (v30 ^ 0x5DF4BB9F)) * v6 + 697822417;
  unsigned int v32 = *(unsigned __int8 *)(v10 + v31 - (((v31 * (unint64_t)v7) >> 32) >> 10) * v9) ^ 0xFFFFFFB3;
  unsigned int v33 = 23 * v32 - ((46 * v32) & 0xFFFFFF88) + 68;
  LOBYTE(v33) = v33 ^ 0x1D ^ (((v33 >> 3) & 9 ^ 0xFA) - 32);
  unsigned int v34 = ((v33 ^ 0x6472EDFF) + 2 * v33) * v8 - 1361617143;
  int v35 = *(unsigned __int8 *)(a3 + v34 - (((v34 * (unint64_t)a1) >> 32) >> 10) * a2);
  unsigned int v36 = (((2 * (v35 ^ 0x80)) & 0xFFFFFFDF) + (v35 ^ 0x8CFEFF7F)) * v8 + 1288512153;
  *(_BYTE *)(a3
           + v12
           + 132363002
           - ((((v12 + 132363002) * (unint64_t)a1) >> 32) >> 10) * afseek(v0, 0LL, 2) = *(_BYTE *)(a3 + v36 - (((v36 * (unint64_t)a1) >> 32) >> 10) * a2);
  unsigned int v37 = (((2 * (*(unsigned __int8 *)(a3 + v13) ^ 0xFFFFFFF7)) & 0x130) + (*(unsigned __int8 *)(a3 + v13) ^ 0xEFE7FA08))
      * v8
      - 1159353624;
  int v38 = *(unsigned __int8 *)(a3 + v37 - (((v37 * (unint64_t)a1) >> 32) >> 10) * a2);
  unsigned int v39 = (((2 * (v38 ^ 8)) & 0x17A) + (v38 ^ 0x774DECB5)) * v6 + 581857004;
  int v40 = *(unsigned __int8 *)(v10 + v39 - (((v39 * (unint64_t)v7) >> 32) >> 10) * v9);
  HIDWORD(v1_Block_object_dispose(va, 8) = v40 ^ 0x33;
  LODWORD(v1_Block_object_dispose(va, 8) = ~v40 << 24;
  LODWORD(vqmemcpy(v1, "/ProvenanceV2", 13) = ((v18 >> 31) - ((2 * (v18 >> 31)) & 0xC8) + 100);
  unsigned int v41 = (((2
         * (((v18 >> 31) - ((2 * (v18 >> 31)) & 0xFFFFFFC8) + 100) ^ (v13 >> 6) ^ (v13 >> 4) ^ 0x99)) & 0x1B0)
       + ((((v18 >> 31) - ((2 * (v18 >> 31)) & 0xC8) + 100) ^ (v13 >> 6) ^ (v13 >> 4)) ^ 0xFAFD7F41))
      * v8
      - 243844696;
  int v42 = *(unsigned __int8 *)(a3 + v41 - (((v41 * (unint64_t)a1) >> 32) >> 10) * a2);
  unsigned int v43 = (((2 * (v42 ^ 1)) & 0x1CA) + (v42 ^ 0xFFCAD6E6)) * v6 - 879473288;
  unsigned int v44 = *(unsigned __int8 *)(v10 + v43 - (((v43 * (unint64_t)v7) >> 32) >> 10) * v9) ^ 0xFFFFFFB3;
  unsigned int v45 = 23 * v44 - ((46 * v44) & 0xFFFFFFD2) + 105;
  int v46 = v45 ^ 0x95 ^ ((v45 >> 3) & 9 | 0x94);
  unsigned int v47 = (((2 * v46) & 0xB6) + (v46 ^ 0x7FDE545B)) * v8 - 1138907955;
  int v48 = *(unsigned __int8 *)(a3 + v47 - (((v47 * (unint64_t)a1) >> 32) >> 10) * a2);
  unsigned int v49 = (((2 * (v48 ^ 0x90)) & 0xFFFFFFBF) + (v48 ^ 0xFCAFEF4F)) * v8 - 370094295;
  LODWORD(vqmemcpy(v1, "/ProvenanceV2", 13) = ((v4 + 1 - v5) | (v5 - (v4 + 1))) >> 31;
  *(_BYTE *)(a3
           + v12
           + 132041274
           - ((((v12 + 132041274) * (unint64_t)a1) >> 32) >> 10) * afseek(v0, 0LL, 2) = *(_BYTE *)(a3 + v49 - (((v49 * (unint64_t)a1) >> 32) >> 10) * a2);
  return v50();
}

uint64_t sub_10067D8B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  HIDWORD(a35) = v73 - 121888048;
  int v75 = *(unsigned __int8 *)((LODWORD(STACK[0x178C]) ^ 0xEFF4BB8BC778F539LL)
                           + a63
                           + (((v73 - 121888048) ^ 0x19D5FD512LL) & (2LL
                                                                                 * (LODWORD(STACK[0x178C]) ^ 0x9D71F67u)))
                           + 0x100B4474315015A2LL);
  int v76 = a68 ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0x1484]) ^ 0xBBDEF06CE749E4F2LL)
                                        + a63
                                        + ((2LL * (LODWORD(STACK[0x1484]) ^ 0x9D71F67u)) & 0x1DD3DF72ALL)
                                        + 0x44210F931161046BLL);
  int v77 = LOBYTE(STACK[0x39A]) ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0x1608]) ^ 0x5FBFFFFF7728F098LL)
                                                         + ((2 * (LODWORD(STACK[0x1608]) ^ 0x9D71F67)) & 0xFDFFDFFE)
                                                         + a63
                                                         - 0x5FBFFFFF7EFFEFFFLL);
  int v78 = *(unsigned __int8 *)((LODWORD(STACK[0x1300]) ^ 0xEBFFB9F7F728E820LL)
                           + a63
                           + ((2LL * (LODWORD(STACK[0x1300]) ^ 0x9D71F67u)) & 0x1FDFFEE8ELL)
                           + 0x14004608010008B9LL) ^ 0x5E;
  int v79 = ((((v75 ^ LOBYTE(STACK[0x563]) ^ 0xCE) - ((2 * (v75 ^ LOBYTE(STACK[0x563]) ^ 0xCE)) & 0xAE)) << 16) + 1985413120) ^ 0x76570000;
  unsigned int v80 = (((v77 - 2 * (v77 & 0xF)) << 8) - 1435824384) ^ 0xAA6B0F00;
  int v81 = (v80 + 874023148 - ((2 * v80) & 0x68311000)) ^ 0x341888EC | (v79 + 2000676118 - ((2 * v79) & 0x6E7E0000)) ^ 0x773FE516;
  unsigned int v82 = (v81 - 532754575 - ((2 * v81) & 0x407D9EE2)) ^ 0xE03ECF71 | (v76 + 1505620439 - ((2 * v76) & 0x1AE)) ^ 0x59BDF1D7;
  unsigned int v83 = (((v82 - ((2 * v82) & 0xFF736E)) << 8) - 4606208) ^ 0xFFB9B700;
  unsigned int v84 = (v83 - 759819967 - ((2 * v83) & 0xA56C2200)) ^ 0xD2B61141 | (v78 + 1851068524 - ((2 * v78) & 0xD8)) ^ 0x6E55106C;
  *(_DWORD *)(*a64 - 0x657CD3A60B28C15ALL) = ((LOBYTE(STACK[0x710]) ^ 0x90)
                                            - ((2 * (LOBYTE(STACK[0x710]) ^ 0x90)) & 0x34)
                                            - 588721638) ^ 0xF84FA52F ^ (v84 - ((2 * v84) & 0x5AE0D0A4) + 762341458);
  int v85 = LOBYTE(STACK[0x57F]) ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0x1D9C]) ^ 0x7FEFB7DF2E3AFCDBLL)
                                                         + ((2 * (LODWORD(STACK[0x1D9C]) ^ 0x9D71F67)) & 0x4FDBC778)
                                                         + a63
                                                         - 0x7FEFB7DF27EDE3BCLL);
  int v86 = *(unsigned __int8 *)((LODWORD(STACK[0x1C18]) ^ 0x3BFBBFB1F42B829ALL)
                           + a63
                           + ((2LL * (LODWORD(STACK[0x1C18]) ^ 0x9D71F67u)) & 0x1FBF93BFALL)
                           - 0x3BFBBFB1FDFC9DFDLL) ^ LOBYTE(STACK[0x3B6]) ^ 0xCE;
  int v87 = a73 ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0x1A94]) ^ 0x7FEDBF6EE023F35ALL)
                                        + a63
                                        + ((2LL * (LODWORD(STACK[0x1A94]) ^ 0x9D71F67u)) & 0x1D3E9D87ALL)
                                        - 0x7FEDBF6EE9F4EC3DLL);
  unsigned int v88 = (((v85 - ((2 * v85) & 0xFFFFFFC3)) << 16) + 1776353280) ^ 0x69E10000;
  unsigned int v89 = (((v86 + 16544069 - ((2 * v86) & 0x66666666)) << 8) - 4608) ^ 0xFC713300;
  int v90 = (v89 + 1190158289 - ((2 * v89) & 0xDE0BE00)) ^ 0x46F05FD1 | (v88 + 822310817 - ((2 * v88) & 0x62060000)) ^ 0x310377A1;
  int v91 = (v90 + 654819334 - ((2 * v90) & 0x4E0F800C)) ^ 0x2707C006 | (v87 + 435528172 - ((2 * v87) & 0x1D8)) ^ 0x19F5A1EC;
  int v92 = LOBYTE(STACK[0x72C]) ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0x1910]) ^ 0x77F76D69D46AE658LL)
                                                         + a63
                                                         + ((2LL * (LODWORD(STACK[0x1910]) ^ 0x9D71F67u)) & 0x1BB7BF27ELL)
                                                         - 0x77F76D69DDBDF93FLL);
  int v93 = (((v91 - ((2 * v91) & 0xE9C8E)) << 8) + 122570496) ^ 0x74E4700;
  int v94 = (v93 + 787100913 - ((2 * v93) & 0x5DD46800)) ^ 0x2EEA34F1 | (v92 + 1489033846 - ((2 * v92) & 0xEC)) ^ 0x58C0DA76;
  *(_DWORD *)(*a64 - 0x657CD3A60B28C14ALL) = v94 + 165093223 - ((2 * v94) & 0x13AE3ECE);
  int v95 = *(unsigned __int8 *)((LODWORD(STACK[0xCB8]) ^ 0xDFF697EAD618C58CLL)
                           + a63
                           + ((2LL * (LODWORD(STACK[0xCB8]) ^ 0x9D71F67u)) & 0x1BF9FB5D6LL)
                           + 0x2009681520302515LL);
  unsigned int v96 = ((2 * (v95 ^ 0x5C)) & 0xFFFFFFFB) + (v95 ^ 0xF30DEBA3);
  int v97 = *(unsigned __int8 *)((LODWORD(STACK[0x9B0]) ^ 0x7FF2F3FD622CC20FLL)
                           + ((2 * (LODWORD(STACK[0x9B0]) ^ 0x9D71F67)) & 0xD7F7BAD0)
                           + a63
                           - 0x7FF2F3FD6BFBDD68LL) ^ LOBYTE(STACK[0x748]) ^ 0xCE;
  int v98 = LOBYTE(STACK[0x59B]) ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0xE3C]) ^ 0xEFCBA9FBDC82A498LL)
                                                         + a63
                                                         + ((2LL * (LODWORD(STACK[0xE3C]) ^ 0x9D71F67u)) & 0x1AAAB77FELL)
                                                         + 0x103456042AAA4401LL);
  int v99 = (((v98 - ((2 * v98) & 0xA)) << 8) + 862520576) ^ 0x33690500;
  unsigned int v100 = ((LOBYTE(STACK[0x3D2]) ^ 0x90) - 703516164 - ((2 * (LOBYTE(STACK[0x3D2]) ^ 0x90)) & 0x1F8)) ^ 0xD61131FC;
  int v101 = (v99 + 2003722116 - ((2 * v99) & 0x6EDCBE00)) ^ 0x776E5F84 | v100;
  int v102 = (v101 ^ 0x6FEB2E) + v96 + ((2 * v101) & 0xDFD65C);
  int v103 = (((v100 & (v96 + 217191427)) - ((2 * (v100 & (v96 + 217191427))) & 0x27FA7C)) << 9) - 1476756480;
  int v104 = *(unsigned __int8 *)((LODWORD(STACK[0xB34]) ^ 0xCDD5BBF5F608F188LL)
                            + a63
                            + ((2LL * (LODWORD(STACK[0xB34]) ^ 0x9D71F67u)) & 0x1FFBFDDDELL)
                            + 0x322A440A00201111LL) ^ 0x5E;
  unsigned int v105 = ((v103 ^ 0x63F43C45)
        + ((2 * v103) & 0x77E37C00 ^ 0xB81F87FF)
        + (((v102 << 8) - 2111253248) ^ 0x6F7FF3F7)
        + ((2 * ((v102 << 8) - 2111253248)) & 0xDEFFE600)
        - 864957499) | (v104 + 1787715317 - ((2 * v104) & 0x1EA)) ^ 0x6A8E5EF5;
  unsigned int v106 = (((v105 + 1391703 - ((2 * v105) & 0x2A78AE)) ^ ((LOBYTE(STACK[0x209]) ^ 0x90)
                                                       - ((2 * (LOBYTE(STACK[0x209]) ^ 0x90)) & 0xFFFFFF8F)
                                                       + 3386311)) << 8) ^ 0x26979000;
  unsigned int v107 = (v106 - 741811193 - ((2 * v106) & 0xA791B800)) ^ 0xD3C8DC07 | (v97 - 928134120 - ((2 * v97) & 0x30)) ^ 0xC8ADCC18;
  *(_DWORD *)(*a64 - 0x657CD3A60B28C13ALL) = v107 + 165093223 - ((2 * v107) & 0x13AE3ECE);
  HIDWORD(v15fseek(v0, 0LL, 2) = (*(unsigned __int8 *)(v74 - 117) ^ 0xE6) - ((2 * (*(unsigned __int8 *)(v74 - 117) ^ 0xE6)) & 0x1D4);
  int v108 = *(unsigned __int8 *)((LODWORD(STACK[0x19FC]) ^ 0xFF3EBF7FA3C20B8LL)
                            + a63
                            + ((2LL * (LODWORD(STACK[0x19FC]) ^ 0x9D71F67u)) & 0x1E7D67FBELL)
                            - 0xFF3EBF7F3EB3FDFLL);
  HIDWORD(v156) = (*(unsigned __int8 *)(v74 - 120) ^ 0xE6)
                + 1160058212
                - ((2 * (*(unsigned __int8 *)(v74 - 120) ^ 0xE6)) & 0xC8);
  LODWORD(v15fseek(v0, 0LL, 2) = LOBYTE(STACK[0x79B]);
  HIDWORD(v151) = (*(unsigned __int8 *)(v74 - 119) ^ 0xE6)
                - 2040689701
                - ((2 * (*(unsigned __int8 *)(v74 - 119) ^ 0xE6)) & 0x1B6);
  int v109 = (LOBYTE(STACK[0x2CB]) ^ 0xCE ^ v108) - ((2 * (LOBYTE(STACK[0x2CB]) ^ 0xCE ^ v108)) & 0x1E8);
  LODWORD(v153) = 696;
  int v110 = (*(unsigned __int8 *)(v74 - 118) ^ 0xE6) - ((2 * (*(unsigned __int8 *)(v74 - 118) ^ 0xE6)) & 0x14E);
  int v111 = *(unsigned __int8 *)((LODWORD(STACK[0x1878]) ^ 0x77CC7FF7B42C7689LL)
                            + a63
                            + ((2LL * (LODWORD(STACK[0x1878]) ^ 0x9D71F67u)) & 0x17BF6D3DCLL)
                            - 0x77CC7FF7BDFB69EELL) ^ 0x5E;
  HIDWORD(v153) = v111 - ((2 * v111) & 0x11A);
  LODWORD(v151) = 44;
  unsigned int v112 = (((v109 << 8) - 1677790208) ^ 0x9BFEF400)
       + 2077768762
       - ((2 * (((v109 << 8) - 1677790208) ^ 0x9BFEF400)) & 0x77B07800);
  LODWORD(v156) = 147;
  unint64_t v155 = (LODWORD(STACK[0x194C]) ^ 0xFBEB775FFE266698LL)
       + a63
       + ((2LL * (LODWORD(STACK[0x194C]) ^ 0x9D71F67u)) & 0x1EFE2F3FELL);
  HIDWORD(a40) = 1490;
  unint64_t v154 = (LODWORD(STACK[0x1644]) ^ 0xEDFFDBDFF42DA0B8LL)
       + a63
       + ((2LL * (LODWORD(STACK[0x1644]) ^ 0x9D71F67u)) & 0x1FBF57FBELL);
  unsigned int v113 = (LOBYTE(STACK[0x80A]) ^ 0x90) - 179074851 - ((2 * (LOBYTE(STACK[0x80A]) ^ 0x90)) & 0xBBBBBBBB);
  unsigned int v114 = ((((v110 << 8) + 1343530752) ^ 0x5014A700)
        - 2060158596
        - ((2 * (((v110 << 8) + 1343530752) ^ 0x5014A700)) & 0xA68F200)) ^ 0x8534797C | ((((HIDWORD(v152) << 16)
                                                                                         + 501874688) ^ 0x1DEA0000)
                                                                                       + 190424240
                                                                                       - ((2
                                                                                         * (((HIDWORD(v152) << 16)
                                                                                           + 501874688) ^ 0x1DEA0000)) & 0x16B20000)) ^ 0xB59A4B0;
  unsigned int v115 = (v114 - 1867661272 - ((2 * v114) & 0x215B8050)) ^ 0x90ADC028 | HIDWORD(v151) ^ 0x865D8BDB;
  unint64_t v116 = (LODWORD(STACK[0x17C8]) ^ 0xFFEFFFDE7602E03DLL)
       + ((2 * (LODWORD(STACK[0x17C8]) ^ 0x9D71F67)) & 0xFFABFEB4)
       + a63;
  int v117 = (((v115 - ((2 * v115) & 0xA0821C)) << 8) + 1346440704) ^ 0x50410E00;
  unsigned int v118 = v117 + 1189952680 - ((2 * v117) & 0x8DDA7800);
  int v119 = v152 ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0xE0C]) ^ 0x277FAF7FF761B0B1LL)
                                          + a63
                                          + ((2LL * (LODWORD(STACK[0xE0C]) ^ 0x9D71F67u)) & 0x1FD6D5FACLL)
                                          - 0x277FAF7FFEB6AFD6LL);
  int v120 = v119 - ((2 * v119) & 0x18);
  unsigned int v121 = (v113 ^ 0xF55388DD | v112 ^ 0x7BD83C3A) - ((2 * (v113 ^ 0xF55388DD | v112 ^ 0x7BD83C3A)) & 0xFCC6);
  int v122 = LOBYTE(STACK[0x5D2]) ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0xC88]) ^ 0x7D5BFFFB7EE85298LL)
                                                          + ((2 * (LODWORD(STACK[0xC88]) ^ 0x9D71F67)) & 0xEE7E9BFE)
                                                          + a63
                                                          - 0x7D5BFFFB773F4DFFLL);
  int v123 = v122 - ((2 * v122) & 0x172);
  int v124 = *(unsigned __int8 *)((LODWORD(STACK[0x16F4]) ^ 0x5FFDFBCFF42AE41CLL)
                            + a63
                            + ((2LL * (LODWORD(STACK[0x16F4]) ^ 0x9D71F67u)) & 0x1FBFBF6F6LL)
                            - 0x5FFDFBCFFDFDFB7BLL);
  unsigned int v125 = (LOBYTE(STACK[0x641]) ^ 0xCE ^ v124) + 16125893 - ((2 * (LOBYTE(STACK[0x641]) ^ 0xCE ^ v124)) & 0xFFFFFF7F);
  int v126 = LOBYTE(STACK[0x478]) ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0x1570]) ^ 0x97C77FFD5608DC9ALL)
                                                          + ((2 * (LODWORD(STACK[0x1570]) ^ 0x9D71F67)) & 0xBFBF87FA)
                                                          + a63
                                                          + 0x68388002A0203C03LL);
  int v127 = LOBYTE(STACK[0x409]) ^ 0xCE ^ *(unsigned __int8 *)((LODWORD(STACK[0xB04]) ^ 0xFF7FFB7D92460099LL)
                                                          + a63
                                                          + ((2LL * (LODWORD(STACK[0xB04]) ^ 0x9D71F67u)) & 0x137223FFCLL)
                                                          + 0x800482646EE002LL);
  unsigned int v128 = ((((v123 << 8) + 603437312) ^ 0x23F7B900)
        + 1585051960
        - ((2 * (((v123 << 8) + 603437312) ^ 0x23F7B900)) & 0x3CF3F200)) ^ 0x5E79F938 | ((((v120 << 16) - 972292096) ^ 0xC60C0000)
                                                                                       - 1987809124
                                                                                       - ((2
                                                                                         * (((v120 << 16) - 972292096) ^ 0xC60C0000)) & 0x13080000)) ^ 0x8984709C;
  int v129 = *(unsigned __int8 *)((LODWORD(STACK[0x980]) ^ 0xEFF3F2DBF61A32F9LL)
                            + a63
                            + ((2LL * (LODWORD(STACK[0x980]) ^ 0x9D71F67u)) & 0x1FF9A5B3CLL)
                            + 0x100C0D240032D262LL) ^ LOBYTE(STACK[0x240]) ^ 0xCE;
  int v130 = (((v121 + 65123) ^ (HIDWORD(v153) + 59021)) << 16) ^ 0x18EE0000;
  unsigned int v131 = (v130 - 1380249918 - ((2 * v130) & 0x5B760000)) ^ 0xADBB0EC2 | ((((v125 << 8) - 1536) ^ 0xF60FBF00)
                                                                       + 1926292350
                                                                       - ((2 * (((v125 << 8) - 1536) ^ 0xF60FBF00)) & 0x65A1C600)) ^ 0x72D0E37E;
  unsigned int v132 = (v128 - 110980561 - ((2 * v128) & 0x72C5245E)) ^ 0xF962922F | (v127 - 1025097227 - ((2 * v127) & 0x1EA)) ^ 0xC2E641F5;
  int v133 = (((v132 - ((2 * v132) & 0x62C3C8)) << 8) + 828498944) ^ 0x3161E400;
  unsigned int v134 = (v131 - 857479076 - ((2 * v131) & 0x99C7D0B8)) ^ 0xCCE3E85C | (v126 - 1834125956 - ((2 * v126) & 0xF8)) ^ 0x92AD757C;
  unsigned int v135 = LODWORD(STACK[0xAF0]) ^ ((v118 ^ 0x46ED3CA8 | HIDWORD(v156) ^ 0x45251564)
                                - ((2 * (v118 ^ 0x46ED3CA8 | HIDWORD(v156) ^ 0x45251564)) & 0x9C688D06)
                                + 1312048771) ^ (v129 - ((2 * v129) & 0x164) + 207201714);
  int v136 = *(unsigned __int8 *)(v155 + 0x41488A0080E8601LL);
  int v137 = LOBYTE(STACK[0x5C9]);
  int v138 = *(unsigned __int8 *)(v154 + 0x1200242002054021LL);
  int v139 = *(unsigned __int8 *)(v116 + 0x100021802A00A6LL);
  int v140 = LOBYTE(STACK[0x792]);
  uint64_t v141 = LOBYTE(STACK[0x253]);
  int v142 = LOBYTE(STACK[0x400]);
  int v143 = *(unsigned __int8 *)((LODWORD(STACK[0x14C0]) ^ 0xF3AAADEFB6ACE0B0LL)
                            + a63
                            + ((2LL * (LODWORD(STACK[0x14C0]) ^ 0x9D71F67u)) & 0x17EF7FFAELL)
                            + 0xC55521040840029LL);
  *(_DWORD *)(*a64 - 0x657CD3A60B29129ALL) = v135 ^ (v133 - ((2 * v133) & 0x7AFF7000) - 1115703256) ^ 0xE6678966 ^ (v134 - ((2 * v134) & 0x32EBA4FE) + 427151999);
  int v144 = (v139 ^ v140 ^ 0xCE) - ((2 * (v139 ^ v140 ^ 0xCE)) & 0x34);
  unsigned int v145 = ((((v136 ^ v141 ^ 0xCE) - ((2 * (v136 ^ v141 ^ 0xCE)) & 0x8E)) << 16) - 1505296384) ^ 0xA6470000;
  unsigned int v146 = (v145 + 1665114619 - ((2 * v145) & 0x467E0000)) ^ 0x633FA1FB | ((((v144 << 8) - 392291840) ^ 0xE89E1A00)
                                                                       + 235896174
                                                                       - ((2 * (((v144 << 8) - 392291840) ^ 0xE89E1A00)) & 0x1C1EFA00)) ^ 0xE0F7D6E;
  unsigned int v147 = (v146 + 1953470971 - ((2 * v146) & 0x68DF33F6)) ^ 0x746F99FB | ((v137 ^ 0xCE ^ v138)
                                                                       - 1919966639
                                                                       - ((2 * (v137 ^ 0xCE ^ v138)) & 0xA2)) ^ 0x8D8FA251;
  unsigned int v148 = (((v147 - ((2 * v147) & 0xB403AC)) << 8) - 637413888) ^ 0xDA01D600;
  unsigned int v149 = (v148 + 766431794 - ((2 * v148) & 0x5B5DA400)) ^ 0x2DAED232 | ((v142 ^ 0xCE ^ v143)
                                                                      - 2037649827
                                                                      - ((2 * (v142 ^ 0xCE ^ v143)) & 0xBA)) ^ 0x868BEE5D;
  *(_DWORD *)(*a64 - 0x657CD3A60B28C1CALL) = v149 + 165093223 - ((2 * v149) & 0x13AE3ECE);
  return ((uint64_t (*)(uint64_t, uint64_t, void *, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + SHIDWORD(a35)) - 4))( v141,  605235757LL,  a64,  v116,  1602219577LL,  136LL,  3269870069LL,  &STACK[0x8D0],  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  v151,  v152,  v153,  v154,  a40,  v155,  v156,  0x24000000409LL,  1602219577LL,  0x3840D60C411B0CE2LL,  0x30E131271DC0394ELL);
}

void sub_10067F018()
{
}

uint64_t sub_10067F020( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v66 = (((v65 - 1745114362) >> 1) & 0x4B5DBB76) + (((v65 - 1745114362) >> 2) ^ 0x65AEDDBB);
  uint64_t v91 = v66 < 0x65AEC987;
  uint64_t v67 = &STACK[0x8D0];
  HIDWORD(a43) = (457 * v65 + 1347280169) % 0x708u;
  unsigned int v68 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 1772275838) % 0x55Cu);
  uint64_t v69 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 1772275547) % 0x55Cu) ^ 0x9D71F67u;
  uint64_t v70 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 1772275741) % 0x55Cu) ^ 0x9D71F67u;
  unsigned int v71 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 1772252364) % 0x55Cu);
  int v72 = *(unsigned __int8 *)((*((unsigned int *)v67 + (97 * v65 - 1772252267) % 0x55Cu) ^ 0x6BFFBFEFF77CC5D8LL)
                           + a63
                           + ((2LL * (*((_DWORD *)v67 + (97 * v65 - 1772252267) % 0x55Cu) ^ 0x9D71F67u)) & 0x1FD57B57ELL)
                           - 0x6BFFBFEFFEABDABFLL);
  uint64_t v73 = *(unsigned __int8 *)((v71 ^ 0x5F79AEF776B87019LL)
                           + ((2 * (v71 ^ 0x9D71F67)) & 0xFEDEDEFC)
                           + a63
                           - 0x5F79AEF77F6F6F7ELL);
  int v74 = *(&a65 + (457 * v65 + 1347169575) % 0x708u) ^ 0xCE ^ *(unsigned __int8 *)((v70 ^ 0xF4ED7CFCA38EF7FBLL)
                                                                                                 + a63
                                                                                                 + ((2 * v70) & 0x1471DEFF6LL)
                                                                                                 + 0xB1283035C710805LL);
  int v75 = *(unsigned __int8 *)((v69 ^ 0x6DFFF6DBFD8DFF37LL) + a63 + ((2 * v69) & 0x1FB1BFE6ELL) - 0x6DFFF6DBFD8DFF37LL) ^ *(&a65 + (457 * v65 + 1347170489) % 0x708u) ^ 0xCE;
  uint64_t v76 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 - 1772252461) % 0x55Cu) ^ 0x9D71F67u;
  LODWORD(v69) = *(&a65 + (457 * v65 + 1347169034 + a53 - 3) % 0x708u) ^ 0xCE ^ *(unsigned __int8 *)((*((unsigned int *)v67 + (97 * v65 - 1772275644) % 0x55Cu) ^ 0xDFFFF779562CE480LL) + ((2 * (*((_DWORD *)v67 + (97 * v65 - 1772275644) % 0x55Cu) ^ 0x9D71F67)) & 0xBFF7F7CE) + a63 + 0x20000886A0040419LL);
  int v77 = *(unsigned __int8 *)((v76 ^ 0x1ABFFE1DED37EFF9LL) + a63 + ((2 * v76) & 0x1DA6FDFF2LL) - 0x1ABFFE1DED37EFF9LL);
  int v78 = *(unsigned __int8 *)((*((unsigned int *)v67 + (97 * v65 - 1772252558) % 0x55Cu) ^ 0x7EE7FBCABF6CEEB1LL)
                           + a63
                           + ((2LL * (*((_DWORD *)v67 + (97 * v65 - 1772252558) % 0x55Cu) ^ 0x9D71F67u)) & 0x16D77E3ACLL)
                           - 0x7EE7FBCAB6BBF1D6LL);
  int v79 = *(&a65 + (457 * v65 + 1347169118) % 0x708u) ^ 0xCE ^ *(unsigned __int8 *)((v68 ^ 0x7EFF77ED3688E890LL)
                                                                                                 + ((2 * (v68 ^ 0x9D71F67)) & 0x7EBFEFEE)
                                                                                                 + a63
                                                                                                 - 0x7EFF77ED3F5FF7F7LL);
  unsigned int v80 = (((v75 - ((2 * v75) & 0x1F8)) << 16) - 470024192) ^ 0xE3FC0000;
  LODWORD(v69) = ((((_DWORD)v69 - ((2 * (_DWORD)v69) & 0x1E4)) << 8) + 655094272) ^ 0x270BF200;
  LODWORD(v69) = (v69 + 1989021589 - ((2 * v69) & 0x6D1C1E00)) ^ 0x768E0F95 | (v80
                                                                             + 1784177551
                                                                             - ((2 * v80) & 0x54B00000)) ^ 0x6A58638F;
  LODWORD(v69) = (v69 - 1537722967 - ((2 * v69) & 0x48B06B52)) ^ 0xA45835A9 | (v74 - 1761547369 - ((2 * v74) & 0x12E)) ^ 0x9700EB97;
  LODWORD(v69) = ((((_DWORD)v69 + 11666170 - ((2 * (_DWORD)v69) & 0x641E8C)) << 8) + 805888) ^ 0xB20F4600;
  int v81 = (v69 - 2039183446 - ((2 * v69) & 0xCE90E00)) ^ 0x867487AA | (v79 - 1849415857 - ((2 * v79) & 0x9E)) ^ 0x91C4274F;
  int v82 = *(&a65 + HIDWORD(a43));
  int v83 = *(&a65 + (457 * v65 + 1347278798) % 0x708u);
  LODWORD(v76) = *(&a65 + (457 * v65 + 1347279255) % 0x708u);
  LODWORD(v70) = *(&a65 + (457 * v65 + 1347279712) % 0x708u);
  *(_DWORD *)(((4LL * (v66 - 539236737)) | ((unint64_t)(v66 - 539236737 < 0x458AC43A) << 34))
            + *a64
            - 0x657CD3A721542382LL) = *((_DWORD *)&STACK[0x8D0] + (97 * (v66 - 539236737) - 1502869754) % 0x55C) ^ 0xAE64D26D ^ (v81 - 1369124243 - ((2 * v81) & 0x5CC9A4DA));
  unsigned int v84 = (v72 ^ v82 ^ 0xCE) - ((2 * (v72 ^ v82 ^ 0xCE)) & 0xFFFFFF1F);
  uint64_t v85 = v78 ^ v83 ^ 0xCEu;
  int v86 = ((((v84 << 8) - 278425856) ^ 0xEF678F00)
       + 236993262
       - ((2 * (((v84 << 8) - 278425856) ^ 0xEF678F00)) & 0x1C407400)) ^ 0xE203AEE | ((v73 ^ 0x5E)
                                                                                    + 1999253365
                                                                                    - ((2 * (v73 ^ 0x5E)) & 0xEA)) ^ 0x772A2F75;
  unsigned int v87 = ((((v70 ^ 0x90) - ((2 * (v70 ^ 0x90)) & 0x1CC) + 57830) ^ (v86
                                                                                             - ((2 * v86) & 0x9D0C)
                                                                                             + 20102)) << 16) ^ 0xAF600000;
  int v88 = (v87 - 134878521 - ((2 * v87) & 0xEFEA0000)) ^ 0xF7F5EAC7 | (v69 + 1085159065 - ((2 * v69) & 0x15C6C00)) ^ 0x40AE3699;
  int v89 = (v88 - 1539220096 - ((2 * v88) & 0x4882BB00)) ^ 0xA4415D80 | (v85 + 340687602 - ((2 * v85) & 0x1E4)) ^ 0x144E7AF2;
  *(_DWORD *)(((4LL * v66) | (v91 << 34)) + *a64 - 0x657CD3A7A1E438B6LL) = v89 + 165093223 - ((2 * v89) & 0x13AE3ECE);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + ((1199 * ((v65 - 1745114358) < 0x20)) ^ a53)))( v85,  3205573259LL,  4160088775LL,  1085159065LL,  1855863530LL,  340687602LL,  1372LL,  v73,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  v91,  a45);
}

uint64_t sub_10067F808( uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  HIDWORD(v7fseek(v0, 0LL, 2) = a5 + 18;
  LODWORD(v7fseek(v0, 0LL, 2) = a5 - 1855862542;
  int v73 = (v72 >> 5) - ((2 * (v72 >> 5)) & 0xE9A72B5A) - 53242451;
  HIDWORD(v7fseek(v0, 0LL, 2) = v73 ^ 0x15AD;
  LODWORD(v7fseek(v0, 0LL, 2) = v73 ^ 0xFCD38000;
  int v74 = (v72 >> 13) - ((2 * (v72 >> 13)) & 0xFEBAC352) + 2136826281;
  HIDWORD(v7fseek(v0, 0LL, 2) = v74 ^ 0x21A9;
  LODWORD(v7fseek(v0, 0LL, 2) = v74 ^ 0x7F5D4000;
  int v75 = ((v72 >> 14) - 720950662 - ((2 * (v72 >> 14)) & 0xAA0E54F4)) ^ 0xD5072A7A;
  uint64_t v76 = (((a5 - 1855863498) >> 2) + 1186130401 - (((a5 - 1855863498) >> 1) & 0xD65D3C2)) ^ 0x46B2E9E1;
  unsigned int v77 = ((194 * v76) & 0x683F7B56) + ((97 * v76) ^ 0xB41FBDAB) + 1273013077;
  unsigned int v78 = v77 - (((v77 * (unint64_t)a2) >> 32) >> 10) * a7;
  unsigned int v79 = ((194 * v75) & 0xF1FFF6E6) + ((97 * v75) ^ 0x78FFFB73) - 2030041971;
  uint64_t v80 = *(_DWORD *)(v68 + 4LL * (v79 - (((v79 * (unint64_t)a2) >> 32) >> 10) * a7)) ^ 0x9D71F67u;
  int v81 = *(unsigned __int8 *)(v67 + 457 * a5 - 2020544407 - (457 * a5 - 2020544407) / 0x708u * v66) ^ v69 ^ *(unsigned __int8 *)((*(unsigned int *)(v68 + 4LL * (97 * a5 + 369960149 - ((((97 * a5 + 369960149) * (unint64_t)a2) >> 32) >> 10) * a7)) ^ 0xDB77B5F27328E063LL) + ((2 * (*(_DWORD *)(v68 + 4LL * (97 * a5 + 369960149 - ((((97 * a5 + 369960149) * (unint64_t)a2) >> 32) >> 10) * a7)) ^ 0x9D71F67)) & 0xF5FFFE08) + v71 + 0x24884A0D850000FCLL);
  LODWORD(v80) = *(unsigned __int8 *)((v80 ^ 0xF7EF76CF6B9EF7F6LL)
                                    + ((2 * (_DWORD)v80) & 0xD73DEFEC)
                                    + v71
                                    + 0x81089309461080ALL) ^ v64;
  int v82 = *(unsigned __int8 *)(v67 + 457 * a5 - 2020545778 - (457 * a5 - 2020545778) / 0x708u * v66) ^ v65;
  int v83 = *(unsigned __int8 *)(v67 + 457 * a5 - 2020544864 - (457 * a5 - 2020544864) / 0x708u * v66) ^ v69 ^ *(unsigned __int8 *)((*(unsigned int *)(v68 + 4LL * (97 * a5 + 369960052 - ((((97 * a5 + 369960052) * (unint64_t)a2) >> 32) >> 10) * a7)) ^ 0x8EA99AF7F240F5D0LL) + v71 + ((2LL * (*(_DWORD *)(v68 + 4LL * (97 * a5 + 369960052 - ((((97 * a5 + 369960052) * (unint64_t)a2) >> 32) >> 10) * a7)) ^ 0x9D71F67u)) & 0x1F72FD56ELL) + 0x7156650804681549LL);
  unsigned int v84 = (((v81 - ((2 * v81) & 0xA8)) << 16) - 1839988736) ^ 0x92540000;
  unsigned int v85 = (((v83 - ((2 * v83) & 0x46)) << 8) - 263838976) ^ 0xF0462300;
  unsigned int v86 = (v85 + 2046856840 - ((2 * v85) & 0x74011C00)) ^ 0x7A008E88 | (v84 - 514200051 - ((2 * v84) & 0x42B20000)) ^ 0xE159EE0D;
  int v87 = *(unsigned __int8 *)(v67 + 457 * a5 - 2020545321 - (457 * a5 - 2020545321) / 0x708u * v66) ^ v69 ^ *(unsigned __int8 *)((*(unsigned int *)(v68 + 4LL * (97 * a5 + 369959955 - ((((97 * a5 + 369959955) * (unint64_t)a2) >> 32) >> 10) * a7)) ^ 0xFFFF6F9FF66AE088LL) + v71 + ((2LL * (*(_DWORD *)(v68 + 4LL * (97 * a5 + 369959955 - ((((97 * a5 + 369959955) * (unint64_t)a2) >> 32) >> 10) * a7)) ^ 0x9D71F67u)) & 0x1FF7BFFDELL) + 0x906000420011LL);
  unsigned int v88 = (v86 - 1023331043 - ((2 * v86) & 0x6026A3A)) ^ 0xC301351D | (v87 + 1805215296 - ((2 * (_BYTE)v87) & 0x80)) ^ 0x6B996640;
  int v89 = (((v88 - ((2 * v88) & 0x762A86)) << 8) + 991249152) ^ 0x3B154300;
  unsigned int v90 = (v89 - 1020305220 - ((2 * v89) & 0x865EC000)) ^ 0xC32F60BC | (v82 - 1286101776 - ((2 * v82) & 0x1E0)) ^ 0xB357A4F0;
  *(_DWORD *)(*a64
            + 4
            * (((((a5 - 1855863498) >> 2)
               + 1186130401
               - (((a5 - 1855863498) >> 1) & 0xD65D3C2)) ^ 0x3A1DFAFEFB0DBE1ELL)
             + ((2 * v76) & 0x17B7EAFFELL))
            - 0x4DF4BFA102267296LL) = (v80 - ((2 * v80) & 0x1AE) + 1273287639) ^ *(_DWORD *)(v68 + 4LL * v78) ^ 0xE4C59131 ^ (v90 - ((2 * v90) & 0x5E4285CC) - 1356774682);
  return (*(uint64_t (**)(void))(v70 + 8LL * ((15 * ((a5 - 1855863494) < 0x60)) ^ a54)))();
}

uint64_t sub_10067FD08( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v66 = 97 * v65;
  LODWORD(a44) = (a54 + 32) | 0x90;
  int v67 = (a44 - 717) * v65;
  unsigned int v68 = v67 + 1750564217;
  unsigned int v69 = (((v65 - 2120158951) >> 1) & 0x67FFF7FC) + (((v65 - 2120158951) >> 2) ^ 0x33FFFBFE);
  uint64_t v70 = &STACK[0x8D0];
  HIDWORD(v105) = (v67 + 1750565588) % 0x708u;
  unsigned int v71 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 + 503121765) % 0x55Cu);
  unsigned int v72 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 + 503104790) % 0x55Cu);
  LODWORD(v105) = (v67 + 1750565131) % 0x708u;
  unsigned int v73 = v67 + 1750483785;
  uint64_t v74 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 + 503122056) % 0x55Cu) ^ 0x9D71F67u;
  unsigned int v75 = (v67 + 1750484242) % 0x708u;
  unsigned int v76 = (v67 + 1750564674) % 0x708u;
  uint64_t v77 = *(unsigned __int8 *)((v71 ^ 0xDAFFF72DF608E09DLL)
                           + a63
                           + ((2LL * (v71 ^ 0x9D71F67)) & 0x1FFBFFFF4LL)
                           + 0x250008D200200006LL);
  int v78 = *(unsigned __int8 *)((v74 ^ 0x7F3FBA6EF7F7BDB7LL) + a63 + ((2 * v74) & 0x1EFEF7B6ELL) - 0x7F3FBA6EF7F7BDB7LL);
  unsigned int v79 = (v73 + 914) % 0x708;
  uint64_t v80 = *((_DWORD *)&STACK[0x8D0] + (97 * v65 + 503121959) % 0x55Cu) ^ 0x9D71F67u;
  unsigned int v81 = v73 % 0x708;
  LODWORD(v74) = (v73 + 1371) % 0x708;
  uint64_t v82 = *(unsigned __int8 *)((v80 ^ 0x67FEE5FFECBFFFFALL) + a63 + ((2 * v80) & 0x1D97FFFF4LL) - 0x67FEE5FFECBFFFFALL);
  uint64_t v83 = *(unsigned __int8 *)((*((unsigned int *)v70 + (97 * v65 + 503121862) % 0x55Cu) ^ 0x89FDD9AFB524F4D7LL)
                           + a63
                           + ((2LL * (*((_DWORD *)v70 + (97 * v65 + 503121862) % 0x55Cu) ^ 0x9D71F67u)) & 0x179E7D760LL)
                           + 0x76022650430C1450LL);
  int v84 = *(unsigned __int8 *)((*((unsigned int *)v70 + (v66 + 503104887) % 0x55Cu) ^ 0xEBFF25D7F22A54CCLL)
                           + a63
                           + ((2LL * (*((_DWORD *)v70 + (v66 + 503104887) % 0x55Cu) ^ 0x9D71F67u)) & 0x1F7FA9756LL)
                           + 0x1400DA280402B455LL) ^ *(&a65 + v79) ^ 0xCE;
  LODWORD(v74) = *(unsigned __int8 *)((*((unsigned int *)v70 + (v66 + 503104984) % 0x55Cu) ^ 0xF9FFDFBDB268E19ALL)
                                    + a63
                                    + ((2LL * (*((_DWORD *)v70 + (v66 + 503104984) % 0x55Cu) ^ 0x9D71F67u)) & 0x1777FFDFALL)
                                    + 0x600204244400103LL) ^ *(&a65 + v74) ^ 0xCE;
  int v85 = *(&a65 + v75) ^ 0xCE ^ *(unsigned __int8 *)((v72 ^ 0xBDA69CA7E788C9B8LL)
                                                                   + a63
                                                                   + ((2LL * (v72 ^ 0x9D71F67)) & 0x1DCBFADBELL)
                                                                   + 0x4259635811A02921LL);
  LODWORD(v74) = ((((_DWORD)v74 - ((2 * (_DWORD)v74) & 0x166)) << 16) + 1941110784) ^ 0x73B30000;
  unsigned int v86 = (((v84 - ((2 * v84) & 0x16C)) << 8) - 1475758592) ^ 0xA809B600;
  int v87 = (v86 + 1449350188 - ((2 * v86) & 0x2CC6A800)) ^ 0x5663542C;
  LODWORD(v74) = (v74 - 1668539182 - ((2 * v74) & 0x39180000)) ^ 0x9C8C1CD2 | v87;
  int v88 = v87 | (v85 + 1767369325 - ((2 * v85) & 0xDA)) ^ 0x6957EA6D;
  HIDWORD(v89) = (v88 - ((2 * v88) & 0x6C6) + 867) ^ 0x363;
  LODWORD(v89) = (v74 - 56225792 - ((2 * v74) & 0x794C2190) + 200) ^ 0xFCA61000;
  int v90 = *(&a65 + v81) ^ 0xCE ^ *(unsigned __int8 *)((*((unsigned int *)v70 + (v66 + 503104693) % 0x55Cu) ^ 0xD933ED7FB72172A2LL)
                                                                   + a63
                                                                   + ((2LL
                                                                     * (*((_DWORD *)v70 + (v66 + 503104693) % 0x55Cu) ^ 0x9D71F67u)) & 0x17DECDB8ALL)
                                                                   + 0x26CC12804109923BLL);
  int v91 = (v89 >> 12) - ((2 * (v89 >> 12)) & 0x9F5425F0) - 810937608;
  HIDWORD(v89) = v91 ^ 0xA12F8;
  LODWORD(v89) = v91 ^ 0xCFA00000;
  unsigned int v92 = ((((v89 >> 20) - ((2 * (v89 >> 20)) & 0xB9F750)) << 8) - 587487232) ^ 0xDCFBA800;
  unsigned int v93 = (v92 + 1555789717 - ((2 * v92) & 0xB976EE00)) ^ 0x5CBB7795 | (v90 + 1068812227 - ((2 * v90) & 0xFFFFFF87)) ^ 0x3FB4C7C3;
  int v94 = *(&a65 + HIDWORD(v105));
  int v95 = *(&a65 + v105);
  int v96 = *(&a65 + v68 % 0x708);
  int v97 = *(&a65 + v76);
  *(_DWORD *)(((4LL * (v69 - 810226054)) | ((unint64_t)(v69 - 810226054 < 0x3B4EA78) << 34))
            + *a64
            - 0x657CD3A619FCBC7ALL) = *((_DWORD *)&STACK[0x8D0] + (97 * (v69 - 810226054) - 1737258616) % 0x55C) ^ 0x52FB4000 ^ (v93 + 1392197632 - ((2 * v93) & 0xA5F68000));
  int v98 = (v94 ^ 0xCE ^ v78) - ((2 * (v94 ^ 0xCE ^ v78)) & 0xCE);
  int v100 = (v99 + 1371409745 - ((2 * v99) & 0xC1A00)) ^ 0x51BE0D51 | ((((v98 << 16) + 526843904) ^ 0x1F670000)
                                                                  + 1456984333
                                                                  - ((2 * (((v98 << 16) + 526843904) ^ 0x1F670000)) & 0x2DAE0000)) ^ 0x56D7D10D;
  unsigned int v101 = (v100 - 1146011200 - ((2 * v100) & 0x77628380)) ^ 0xBBB141C0 | ((v97 ^ 0x90)
                                                                       + 745160171
                                                                       - ((2 * (v97 ^ 0x90)) & 0x1D6)) ^ 0x2C6A3DEB;
  unsigned int v102 = (((v101 - ((2 * v101) & 0xA29FF8) + 13717500) ^ ((v83 ^ 0x5E)
  int v103 = (v102 + 982266522 - ((2 * v102) & 0x75186400)) ^ 0x3A8C329A | ((v77 ^ v96 ^ 0xCE)
                                                                      - 1296181308
                                                                      - ((2 * (v77 ^ v96 ^ 0xCE)) & 0x188)) ^ 0xB2BDD7C4;
  *(_DWORD *)(((4LL * v69) | ((unint64_t)(v69 < 0x33FFE7DA) << 34)) + *a64 - 0x657CD3A6DB28B202LL) = v103 + 165093223 - ((2 * v103) & 0x13AE3ECE);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + ((1913 * ((v65 - 2120158947) > 0xAF)) ^ a54)))( 1371409745LL,  1800LL,  1456984333LL,  v82,  v77,  a64,  &STACK[0x8D0],  v83,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  v105,  a44,  a45);
}

uint64_t sub_100680560( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v73 = (((v64 - 1197237198) >> 1) & 0x36BBF11E) + (((v64 - 1197237198) >> 2) ^ 0xDB5DF88F);
  int v74 = *(unsigned __int8 *)(v68
                           + 457 * v64
                           - 1676036484
                           - ((((457 * v64 - 1676036484) * (unint64_t)v70) >> 32) >> 10)
                           * a2) ^ v69 ^ *(unsigned __int8 *)((*(unsigned int *)(a7
                                                                               + 4LL
                                                                               * (97 * v64
                                                                                - 167798288
                                                                                - ((((97 * v64 - 167798288)
                                                                                                 * (unint64_t)v66) >> 32) >> 10)
                                                                                * v67)) ^ 0xFBFFF7B0362840D0LL)
                                                            + ((2
                                                              * (*(_DWORD *)(a7
                                                                           + 4LL
                                                                           * (97 * v64
                                                                            - 167798288
                                                                            - ((((97 * v64 - 167798288)
                                                                                             * (unint64_t)v66) >> 32) >> 10)
                                                                            * v67)) ^ 0x9D71F67)) & 0x7FFEBF6E)
                                                            + v65
                                                            + 0x400084FC000A049LL);
  int v75 = *(unsigned __int8 *)(v68
                           + 457 * v64
                           - 1676036027
                           - ((((457 * v64 - 1676036027) * (unint64_t)v70) >> 32) >> 10)
                           * a2) ^ v69 ^ *(unsigned __int8 *)((*(unsigned int *)(a7
                                                                               + 4LL
                                                                               * (97 * v64
                                                                                - 167798191
                                                                                - ((((97 * v64 - 167798191)
                                                                                                 * (unint64_t)v66) >> 32) >> 10)
                                                                                * v67)) ^ 0xF655FF3D740DF2D8LL)
                                                            + ((2
                                                              * (*(_DWORD *)(a7
                                                                           + 4LL
                                                                           * (97 * v64
                                                                            - 167798191
                                                                            - ((((97 * v64 - 167798191)
                                                                                             * (unint64_t)v66) >> 32) >> 10)
                                                                            * v67)) ^ 0x9D71F67)) & 0xFBB5DB7E)
                                                            + v65
                                                            + 0x9AA00C282251241LL);
  int v76 = *(unsigned __int8 *)((*(unsigned int *)(a7
                                              + 4LL
                                              * (97 * v64
                                               - 167798385
                                               - ((((97 * v64 - 167798385)
                                                                * (unint64_t)v66) >> 32) >> 10)
                                               * v67)) ^ 0x7BBBF7F8E608E298LL)
                           + v65
                           + ((2LL
                             * (*(_DWORD *)(a7
                                          + 4LL
                                          * (97 * v64
                                           - 167798385
                                           - ((((97 * v64 - 167798385)
                                                            * (unint64_t)v66) >> 32) >> 10)
                                           * v67)) ^ 0x9D71F67u)) & 0x1DFBFFBFELL)
                           - 0x7BBBF7F8EFDFFDFFLL);
  int v77 = *(unsigned __int8 *)(v68
                           + 457 * v64
                           - 1676036941
  int v78 = (((v75 - ((2 * v75) & 0x1BC)) << 16) + 333316096) ^ 0x13DE0000;
  int v79 = (((v74 - ((2 * v74) & 0x124)) << 8) + 1781043712) ^ 0x6A289200;
  unsigned int v80 = (v78 - 475414840 + (~(2 * v78) | 0xB8ADFFFF) + 1) ^ 0xE3A9BEC8 | (v79 + 1400737603 - ((2 * v79) & 0x26FB1E00)) ^ 0x537D8F43;
  unsigned int v81 = (v80 + 1359790086 - ((2 * v80) & 0x2219800C)) ^ 0x510CC006 | ((v77 ^ v69 ^ v76)
                                                                    - 89950627
                                                                    - ((2 * (v77 ^ v69 ^ v76)) & 0xBA)) ^ 0xFAA3765D;
  int v82 = *(unsigned __int8 *)(v68
                           + 457 * v64
                           - 1676037398
                           - ((((457 * v64 - 1676037398) * (unint64_t)v70) >> 32) >> 10)
                           * a2) ^ v69 ^ *(unsigned __int8 *)((*(unsigned int *)(a7
                                                                               + 4LL
                                                                               * (97 * v64
                                                                                - 167798482
                                                                                - ((((97 * v64 - 167798482)
                                                                                                 * (unint64_t)v66) >> 32) >> 10)
                                                                                * v67)) ^ 0x6F3FBF8FE62CE218LL)
                                                            + v65
                                                            + ((2LL
                                                              * (*(_DWORD *)(a7
                                                                           + 4LL
                                                                           * (97 * v64
                                                                            - 167798482
                                                                            - ((((97 * v64 - 167798482)
                                                                                             * (unint64_t)v66) >> 32) >> 10)
                                                                            * v67)) ^ 0x9D71F67u)) & 0x1DFF7FAFELL)
                                                            - 0x6F3FBF8FEFFBFD7FLL);
  int v83 = (((v81 + (~(2 * v81) | 0x5E93D1)) << 8) + 1354110976) ^ 0x50B61700;
  unsigned int v84 = (v83 - 444321346 - ((2 * v83) & 0xCB086200)) ^ 0xE58431BE | (v82 - 907070068 - ((2 * v82) & 0x118)) ^ 0xC9EF358C;
  int v85 = (v84 - ((2 * v84) & 0x1E6DB3EC) - 1892230666) ^ *(_DWORD *)(a7
                                                                  + 4LL
                                                                  * (97 * v73
                                                                   - 513465431
                                                                   - ((((97 * v73 - 513465431)
  HIDWORD(v86) = v85 ^ 0x691;
  LODWORD(v86) = v85 ^ 0x86E1C000;
  int v87 = (v86 >> 11) - ((2 * (v86 >> 11)) & 0xB59AADB6) - 624077093;
  HIDWORD(v86) = v87 ^ 0x1ACD56DB;
  LODWORD(v86) = v87 ^ 0xC0000000;
  int v88 = (v86 >> 29) - ((2 * (v86 >> 29)) & 0xB2C1154C) - 647984474;
  HIDWORD(v86) = v88 ^ 0x608AA6;
  LODWORD(v86) = v88 ^ 0xD9000000;
  *(_DWORD *)(((4LL * (v73 - 1605350842)) | ((unint64_t)(v73 - 1605350842 < 0x7BAE42D9) << 34))
            + *a64
            - 0x657CD3A7F9E21DFELL) = (v86 >> 24) + 165093223 - ((2 * (v86 >> 24)) & 0x13AE3ECE);
  return (*(uint64_t (**)(void))(v71
                              + 8LL
                              * (((v64 - 1197237194) < 0xE0) | (8
                                                                            * ((v64 - 1197237194) < 0xE0)) | v72)))();
}

uint64_t sub_1006809D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, int a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = (((((v68 - 1172) | 0x270) ^ 0x28D) & (a45 + 30)) - 1900568016 - ((2 * (a45 + 30)) & 0x60)) ^ 0x8EB7A230;
  int v70 = *(&a65 + (((914 * v69) & 0x6F9EE) + ((v69 * v65) ^ 0x1DD37CF7) - 500136119) % 0x708);
  int v71 = *(_DWORD *)(v66 + 4LL * ((1361 * (((2 * (v70 ^ 0xA)) & 0x17C) + (v70 ^ 0xF76F3DF4)) - 1981692578) % 0x12E0));
  int v72 = (2 * ((v71 ^ 0x7550948E) * (v71 ^ 0x7550948E) - ((2 * (v71 ^ 0x7550948E) * (v71 ^ 0x7550948E)) & 0x1AADF948))
       + 447609160) ^ 0x1AADF948;
  unsigned int v73 = (v72 - ((2 * v72) & 0x2D37E410) + 379318793) ^ v71;
  unsigned int v74 = (2012343039 - (BYTE2(v73) ^ 0xC5) + ((2 * (BYTE2(v73) ^ 0xC5)) & 0x88888888) + 1468) ^ 0x77F379CB;
  int v75 = (v74 - ((2 * v74) & 0x1376E) + 2010446775) ^ 0x77D672B6;
  int v76 = (v75 * v65) ^ 0x5B767FEC;
  unsigned int v77 = (914 * v75) & 0xB6ECFFD8;
  uint64_t v78 = (97 * a45 + 1421876830) % 0x55Cu;
  int v79 = (((2 * (v73 ^ 0xEF)) & 0x152) - (v73 ^ 0xEF) - 1830440874) ^ 0x53E5A05E;
  int v80 = *(&a65
                         + (((914 * (HIBYTE(v73) ^ 0xB0)) & 0x2FFFE)
                          + (((HIBYTE(v73) ^ 0xB0) * v65) ^ 0x7FEF7FFF)
                          - 2146257863)
                         % 0x708u);
  int v81 = BYTE1(v73);
  unsigned int v82 = v77 + v76 - 1534346412;
  int v83 = (((2 * v79) | 0x435D6F76) - v79 + 1582385221) ^ 0x60AEA778;
  uint64_t v84 = (((914 * v83) & 0xAFFFCFB6) + ((v83 * v65) ^ 0x57FFE7DB) - 1476242587) % 0x708;
  int v85 = v81 ^ 0x27;
  uint64_t v86 = ((v81 ^ 0x27) * v65) ^ 0xFFFD2FDF;
  int v87 = (((v80 ^ 0x90) - ((2 * v80) & 0x40)) << 16) - 2111832064;
  unsigned int v89 = (v88 + 1967275888 - ((2 * v88) & 0x6A847E00)) ^ 0x75423F70 | ((v87 ^ 0x82200000)
                                                                    + 1019863600
                                                                    - ((2 * v87) & 0x79920000)) ^ 0x3CC9E230;
  int v90 = *(&a65 + (((914 * v85) & 0x25FBE) + 326524 + v86 + 4069) % 0x708) ^ 0x90;
  unsigned int v91 = (v89 + 861047656 - ((2 * v89) & 0x66A516D0)) ^ 0x33528B68 | (v90 + 1814376159 - ((2 * v90) & 0xFFFFFFBF)) ^ 0x6C252EDF;
  int v92 = (((v91 - ((2 * v91) & 0xE8C4AE)) << 8) + 1952601856) ^ 0x74625700;
  int v93 = *(&a65 + v84) ^ 0x90;
  unsigned int v94 = (v92 - 436702832 - ((2 * v92) & 0xCBF0E200)) ^ 0xE5F87190 | (v93 - 1310305411 - ((2 * v93) & 0xFA)) ^ 0xB1E6537D;
  int v95 = (v94 + 795416402 - ((2 * v94) & 0x5ED22EA4)) ^ a50;
  *((_DWORD *)&STACK[0x8D0] + v7_Block_object_dispose(va, 8) = (v95 ^ 0x2F691752)
                                                 + 165093223
                                                 - 2 * ((v95 ^ 0x2F691752) & 0x9D71F6F ^ v95 & 8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 8LL * ((545 * (a45 == 1092292065)) | v68)))( v78,  144LL,  861047656LL,  v84,  1019863600LL,  v86,  4294782943LL,  (a45 + 1),  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36);
}

uint64_t sub_100680EB0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v67 - 0x657CD3A72772FA32LL) = *(_DWORD *)(v66
                                                                 + 4LL
                                                                 * (v64
                                                                  + 15
                                                                  + (_DWORD)v67 * v65
                                                                  + 301549733
                                                                  - ((((v64
                                                                                                  + 15
                                                                                                  + v67 * v65
                                                                                                  + 301549733)
  return ((uint64_t (*)(void))(*(void *)(v70 + 8LL * ((243 * (v67 == 1192397849)) ^ v64)) - 12LL))();
}

uint64_t sub_100680F24( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, int a45, unsigned int a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = ((a46 - 12) + 404918330 - ((((_BYTE)a46 - 12) & 0x3B ^ a46 & 1) << ((v66 + 97) ^ 0xE3))) ^ 0x1822903A;
  int v70 = *(&a66 + (((914 * v69) & 0x7D93FFAE) + ((457 * v69) ^ 0xBEC9FFD7) + 1094321257) % 0x708);
  unsigned int v71 = ((v70 ^ 0x90) - ((2 * v70) & 0x86) - 1795705277) ^ *(_DWORD *)(v67
                                                                     + 4LL
                                                                     * ((1361
                                                                       * (((2 * (v70 ^ 0x44)) & 0xFFFFFF9F)
                                                                        + (v70 ^ 0x6B7FBFAB))
                                                                       + 2116613535)
                                                                      % 0x12E0));
  unsigned int v72 = ((914 * (HIBYTE(v71) ^ 0xAF)) & 0x31BF6) + ((457 * (HIBYTE(v71) ^ 0xAF)) ^ 0x7BEF8DFB) - 2079150779;
  int v73 = ((BYTE1(v71) ^ 0x1544CF) - ((2 * (BYTE1(v71) ^ 0x1544CF)) & 0x2200F6) + 152666747) ^ 0x90CC67B;
  int v74 = ((BYTE2(v71) ^ 0x75) + (HIWORD(v71) & 0x9B ^ 0x26A47E8A) - ((BYTE2(v71) ^ 0x75) & 0x9B)) ^ 0x26A47EE8;
  LOWORD(v71) = ((2 * (v71 ^ 0xD3)) & 0xD8) - (v71 ^ 0xD3) - 26989;
  int v75 = ((v71 & 0x2C0 ^ 0x5046DCC1) + (v71 & 0x13F) - 1) ^ 0x5046DEB1;
  unsigned int v76 = ((914 * v75) & 0x73FEBBF6) + ((457 * v75) ^ 0xB9FF5DFB) + 1174592837;
  int v77 = *(&a66 + v72 % 0x708) ^ 0x90;
  int v78 = *(&a66 + (((914 * v74) & 0x7EE5FF84) + ((457 * v74) ^ 0x3F72FFC2u) - 1064354946) % 0x708);
  int v79 = *(&a66 + (((914 * v73) & 0xD6CFB79E) + ((457 * v73) ^ 0xEB67DBCF) + 345661297) % 0x708);
  int v80 = *(&a66 + v76 % 0x708);
  unsigned int v81 = (((v77 - ((2 * v77) & 0x77777777)) << 16) - 390397952) ^ 0xE8BB0000;
  unsigned int v82 = ((((v78 ^ 0x90) - ((2 * v78) & 0x14)) << 8) - 145749504) ^ 0xF7500A00;
  unsigned int v83 = (v82 + 1847867983 - ((2 * v82) & 0x5C487400)) ^ 0x6E243A4F | (v81 - 472013913 - ((2 * v81) & 0x47BA0000)) ^ 0xE3DDA3A7;
  unsigned int v84 = (v83 - 1393111997 - ((2 * v83) & 0x59ED9886)) ^ 0xACF6CC43 | ((v79 ^ 0x90)
                                                                    - 467100466
                                                                    - ((2 * (v79 ^ 0x90)) & 0x19C)) ^ 0xE4289CCE;
  unsigned int v85 = (((v84 + 12620069 - ((2 * v84) & 0x812242)) << 8) - 1024) ^ 0xC0912100;
  int v86 = (v85 + 66365311 - ((2 * v85) & 0x7E94E00)) ^ 0x3F4A77F | ((v80 ^ 0x90) + 849013366 - ((2 * (v80 ^ 0x90)) & 0xEC)) ^ 0x329AEA76;
  *((_DWORD *)&STACK[0x8D0] + (97 * a46 - 1351686796) % 0x55C) = a58 ^ 0x45A30229 ^ (v86
                                                                                   - ((2 * v86) & 0x3A22D266)
                                                                                   - 1659803341);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 + 8LL * ((1471 * (a46 == 943773451)) ^ v66)) - 12LL))( 66365311LL,  3827866830LL,  2901855299LL,  1847867983LL,  1346821313LL,  a46,  648314506LL,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37);
}

uint64_t sub_1006813CC@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *(_DWORD *)(*a57 + 4 * v59 - 0x657CD3A6F397DB12LL) = *(_DWORD *)(v57
                                                                 + 4LL
                                                                 * ((_DWORD)v59 * v60
                                                                  - 75800850
                                                                  - ((((v59 * v60 - 75800850)
  return ((uint64_t (*)(void))(*(void *)(v62 + 8LL * ((1861 * (v59 != 974898001)) ^ a1)) - 4LL))();
}

uint64_t sub_100681444@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, int a48, int a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  unsigned int v62 = ((v59 - 55) - 1582912446 - (((v59 + 201) << (a1 + 31)) & 0x84)) ^ 0xA1A6AC42;
  int v63 = *(&a59 + (((914 * v62) & 0x17FEEE) + ((457 * v62) ^ 0xFB8BFF77) + 74974409) % 0x708);
  unsigned int v64 = *(_DWORD *)(v60 + 4LL * ((1361 * ((v63 ^ 0x3FAFED18) + 2 * (v63 ^ 0xE7u)) + 1775796413) % 0x12E0));
  int v65 = (((2 * (BYTE2(v64) ^ 0x2B)) & 0x76) - (BYTE2(v64) ^ 0x2B) + 3012) ^ 0xB99;
  __int16 v66 = (v64 ^ 0xB1) - 2 * ((v64 ^ 0xB1) & 7) + 30215;
  int v67 = ((v66 & 0x305) + 1913188351 + (v66 & 0xFA ^ 0x11080B)) ^ 0x7219FA57;
  int v68 = (((2 * (BYTE1(v64) ^ 0xA3)) | 0x73FEC826) - (BYTE1(v64) ^ 0xA3) + 1174445037) & 0x7FFFFFFF ^ 0x39FF64A1;
  int v69 = *(&a59
                         + (((914 * (HIBYTE(v64) ^ 0xBE)) & 0xDCFA)
                          + ((457 * (HIBYTE(v64) ^ 0xBE)) ^ 0xAF2E6E7D)
                          + 1356057795)
                         % 0x708) ^ 0x90;
  int v70 = *(&a59 + (((914 * v68) & 0x3E67EBD6) + ((457 * v68) ^ 0x9F33F5EB) + 1624130901) % 0x708);
  int v71 = *(&a59 + (((914 * v65) & 0x22B9D4) + ((457 * v65) ^ 0x21F15CEAu) - 569319850) % 0x708) ^ 0x90;
  int v72 = v69 - ((2 * v69) & 0x70);
  unsigned int v73 = v71 - ((2 * v71) & 0xFFFFFF83);
  unsigned int v74 = (((v72 << 16) - 197656576) ^ 0xF4380000)
      + 1455784533
      - ((2 * (((v72 << 16) - 197656576) ^ 0xF4380000)) & 0x2D8A0000);
  unsigned int v75 = ((((((v73 << 8) - 588857088) ^ 0xDCE6C100)
         + 280585946
         - ((2 * (((v73 << 8) - 588857088) ^ 0xDCE6C100)) & 0x2172CC00)) ^ 0x10B966DA | v74 ^ 0x56C58255)
       + 2139930656
       + (~(2
          * (((((v73 << 8) - 588857088) ^ 0xDCE6C100)
            + 280585946
            - ((2 * (((v73 << 8) - 588857088) ^ 0xDCE6C100)) & 0x2172CC00)) ^ 0x10B966DA | v74 ^ 0x56C58255)) | 0x80E67FBF)
       + 1) ^ 0x7F8CC020 | ((v70 ^ 0x90) + 1358868560 - ((2 * (v70 ^ 0x90)) & 0xA0)) ^ 0x50FEB050;
  int v76 = *(&a59 + (((914 * v67) & 0xDFCFE6E) + ((457 * v67) ^ 0x56FE7F37u) - 1459373047) % 0x708);
  int v77 = (((v75 + 121835 - ((2 * v75) & 0x3B796)) << 8) - 0x2000) ^ 0x1DBCB00;
  unsigned int v78 = (v77 + 1646666228 - ((2 * v77) & 0xC44C4200)) ^ 0x622621F4 | ((v76 ^ 0x90)
                                                                    + 642897329
                                                                    - ((2 * (v76 ^ 0x90)) & 0x162)) ^ 0x2651D5B1;
  *((_DWORD *)&STACK[0x8D0] + (97 * v59 - 1552457431) % 0x55Cu) = a49 ^ 0xF3194E50 ^ (v78
                                                                                    - ((2 * v78) & 0xD204792C)
                                                                                    + 1761754262);
  return ((uint64_t (*)(void))(*(void *)(v61 + 8LL * ((v59 == 901565238) ^ a1)) - 4LL))();
}

uint64_t sub_1006818AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v70 - 0x657CD3A64EB8CA16LL) = *(_DWORD *)(v69
                                                                 + 4LL
                                                                 * ((_DWORD)v70 * v67
                                                                  - 1717732147
                                                                  - ((((v70 * v67
                                                                                                  - 1717732147)
  return ((uint64_t (*)(void))(*(void *)(v71 + 8LL * (((v70 != 283376914) * v65) ^ v64)) - 12LL))();
}

uint64_t sub_100681914( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, int a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = ((((v66 - 598291305) & 0x23A933FF ^ 0x14A) & (a46 + 178)) + 602682236 - 2 * ((a46 + 178) & 0x7D ^ a46 & 1)) ^ 0x23EC337C;
  unsigned int v70 = (((914 * v69) & 0xFE7FB6F8) + ((457 * v69) ^ 0xFF3FDB7C) + 12855492) % 0x708;
  uint64_t v71 = &a66;
  int v72 = *(_DWORD *)(v67
                  + 4LL
                  * ((1361
                    * (((2 * (v71[v70] ^ 0x80)) & 0x33333333)
                     + (v71[v70] ^ 0x4FBF2D79u))
                    + 149042127)
                   % 0x12E0));
  HIDWORD(v73) = v72 ^ 0xA365;
  LODWORD(v73) = v72 ^ 0x4F180000;
  int v74 = (v73 >> 16) - ((2 * (v73 >> 16)) & 0x71B6B38E) - 1193584185;
  unsigned int v75 = ((16 * v74) & 0xEFD3BFB0 ^ 0x8D919C30) + ((8 * v74) ^ 0x313311E5);
  unsigned int v76 = (v75 - ((2 * v75 + 367270102) & 0x22DE7970) - 597604061) ^ v74;
  int v77 = (v76 & 0x21) - 1845212417 + (v76 & 0xDE ^ 0x410101D);
  unsigned int v78 = ((v76 >> 23) & 0x1BE ^ 0x190) + (HIBYTE(v76) ^ 0xDD4D6F17);
  unsigned int v79 = ((BYTE2(v76) ^ 0x98C820F5) + (HIWORD(v76) & 0xDE ^ 0x3135A0A) - ((BYTE2(v76) ^ 0x98C820F5) & 0x88820DE)) ^ 0x93535A9E;
  int v80 = (((2 * (BYTE1(v76) ^ 7)) & 0x144) - (BYTE1(v76) ^ 7) + 1355624029) ^ 0x70DD3B5C;
  unsigned int v81 = (v78 - ((2 * v78 + 1164255938) & 0x9F89AD22) + 1920428018) ^ 0x4FC4D691;
  unsigned int v82 = ((914 * v81) & 0xAFB5B3FA) + ((457 * v81) ^ 0x57DAD9FD) - 1473960445;
  uint64_t v83 = (((914 * (v77 ^ 0x96145B25)) & 0xF0FDC) + ((457 * (v77 ^ 0x96145B25)) ^ 0xB3F787EE) + 1275769682) % 0x708;
  unsigned int v84 = (((2 * v80) | 0xD20DE54E) - v80 - 1762063015) ^ 0x4916E7AF;
  unsigned int v85 = (((914 * v84) & 0xD5EFFF5E) + ((457 * v84) ^ 0xEAF7FFAF) + 352992145) % 0x708;
  int v86 = *(&a66 + (((914 * v79) & 0xBBFC) + ((457 * v79) ^ 0x1CE85DFE) - 484844222) % 0x708) ^ 0x90;
  int v87 = *(&a66 + v82 % 0x708) ^ 0x90;
  int v88 = (((v87 - ((2 * v87) & 0x172)) << 16) + 498663424) ^ 0x1DB90000;
  unsigned int v89 = (((v86 - ((2 * v86) & 0x178)) << 8) - 1135035392) ^ 0xBC58BC00;
  unsigned int v90 = (v88 + 1185411423 - ((2 * v88) & 0xD4E0000)) ^ 0x46A7F15F | (v89 - 1216580873 - ((2 * v89) & 0x6EF8E400)) ^ 0xB77C72F7;
  unsigned int v91 = (v90 - 259587949 - ((2 * v90) & 0x610E0126)) ^ 0xF0870093 | ((v71[v85] ^ 0x90)
                                                                   - 750134681
                                                                   - ((2 * v71[v85]) & 0xCE)) ^ 0xD349DA67;
  unsigned int v92 = (((v91 - ((2 * v91) & 0x4D2158)) << 8) - 1500468224) ^ 0xA690AC00;
  LODWORD(v71) = (v92 + 1292454077 - ((2 * v92) & 0x9A129000)) ^ 0x4D0948BD | ((v71[v83] ^ 0x90)
                                                                             + 43909121
                                                                             - 2 * (v71[v83] & 1)) ^ 0x29E0001;
  *((_DWORD *)&STACK[0x8D0] + (97 * a46 - 1171633806) % 0x55Cu) = a57 ^ 0xC965CB7B ^ ((_DWORD)v71
                                                                                    - ((2 * (_DWORD)v71) & 0x4636DF00)
                                                                                    - 1558483072);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 + 8LL * ((171 * (a46 == 499137101)) ^ v66)) - 12LL))( 1292454077LL,  4035379347LL,  3544832615LL,  v83,  1185411423LL,  1226237871LL,  v82 / 0x708uLL,  987100LL,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37);
}

uint64_t sub_100681E74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v68 - 0x657CD3A7AEC2F352LL) = *(_DWORD *)(v69
                                                                 + 4LL
                                                                 * (v64
                                                                  + 194
                                                                  + (_DWORD)v68 * v65
                                                                  + 1084591719
                                                                  - ((((v64
                                                                                    + 194
                                                                                    + (_DWORD)v68 * v65
                                                                                    + 1084591719)
  return ((uint64_t (*)(void))(*(void *)(v70 + 8LL * ((962 * (v68 == 1759939425)) ^ v64)) - 12LL))();
}

uint64_t sub_100681EE8@<X0>( uint64_t a1@<X6>, uint64_t a2@<X7>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, int a41, int a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v63 = (((a42 + 217) & ((a3 ^ 0x6DD) - 939)) + 226605718 - ((2 * (a42 + 217)) & 0x12C)) ^ 0xD81BA96;
  unsigned int v64 = (((914 * v63) & 0xFBFB6) + ((457 * v63) ^ 0xDFFFDFDB) + 537142373) % 0x708;
  int v65 = *(_DWORD *)(v61
                  + 4LL
                  * ((1361
                    * (((2 * (*(&a61 + v64) ^ 0xFFFFFFC1)) & 0x9E)
                     + (*(&a61 + v64) ^ 0xBF7BF78E))
                    - 33539692)
                   % 0x12E0)) ^ 0x4F18A365;
  unsigned int v66 = v65 - ((2 * v65 + 1468112052) & 0x7C340F20) - 371534358;
  unsigned int v67 = (((v66 >> 15) & 0x18) + 1524540335 + (BYTE2(v66) ^ 0xFFFFFFDE) + 69) ^ 0x5ADEA3AF;
  int v68 = (((v66 & 0x7D ^ 0xBFFAD61) & 0x8308B5 | v66 & 0x80) ^ 0xA0)
      + ((v66 & 0x7D ^ 0xBFFAD61 | v66 & 0x82) ^ 0x258B0D5D)
      - (((v66 & 0x7D ^ 0xBFFAD61 | v66 & 0x82) ^ 0x258B0D5D) & 0x234A0B5);
  int v69 = *(&a61
                         + (((914 * (HIBYTE(v66) ^ 0x34)) & 0x3BCFE)
                          + ((457 * (HIBYTE(v66) ^ 0x34)) ^ 0xF24BDE7F)
                          + 230055105)
                         % 0x708) ^ 0x90;
  int v70 = *(&a61 + (((914 * v67) & 0xFEE92E) + ((457 * v67) ^ 0xBEFF7497) + 1090700969) % 0x708) ^ 0x90;
  int v71 = *(&a61
                         + (((914 * (BYTE1(v66) ^ 0x6B)) & 0x3D87C)
                          + ((457 * (BYTE1(v66) ^ 0x6B)) ^ 0xBF1FEC3E)
                          + 1088573186)
                         % 0x708);
  int v72 = (((v69 - ((2 * v69) & 0xA4)) << 16) + 1683095552) ^ 0x64520000;
  int v73 = (((v70 + 7170659 - ((2 * v70) & 0xB4)) << 8) - 2304) ^ 0x6D6A5A00;
  unsigned int v74 = (v73 - 591557318 - ((2 * v73) & 0x397B1A00)) ^ 0xDCBD8D3A | (v72 - 2042054806 - ((2 * v72) & 0xC900000)) ^ 0x8648B76A;
  uint64_t v75 = (97 * a42 + 2058117177) % 0x55Cu;
  unsigned int v76 = (v74 + 1188541864 - ((2 * v74) & 0x8DAF6B50)) ^ 0x46D7B5A8 | ((v71 ^ 0x90) - 1205838016 - ((2 * v71) & 0x80)) ^ 0xB8205F40;
  unsigned int v77 = (((v76 - ((2 * v76) & 0x195EA8)) << 8) - 1934666752) ^ 0x8CAF5400;
  int v78 = *(&a61
                         + (((914 * (v68 ^ 0x2CC308B3)) & 0xBDFD3E96)
                          + ((457 * (v68 ^ 0x2CC308B3)) ^ 0x5EFE9F4B)
                          - 1593598987)
                         % 0x708) ^ 0x90;
  unsigned int v79 = (v77 - 1073468580 - ((2 * v77) & 0x80085600)) ^ 0xC0042B5C | (v78 - 140998455 - ((2 * v78) & 0x192)) ^ 0xF79888C9;
  *((_DWORD *)&STACK[0x8D0] + v75) = a52 ^ (v79 - ((2 * v79) & 0x8096BBB8) + 1078681052) ^ 0x7B416609;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 + 8LL * ((1757 * (a42 == 820064806)) ^ a3)) - 12LL))( v75,  4153968841LL,  3221498716LL,  3089129280LL,  1188541864LL,  (a42 + 1),  a1,  a2,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33);
}

uint64_t sub_100682370( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v69 - 0x657CD3A611F0DEDELL) = *(_DWORD *)(v65
                                                                 + 4LL
                                                                 * (((v64 + 355) ^ 0x5B908AD6)
                                                                  + (_DWORD)v69 * v66
                                                                  - ((((((v64 + 355) ^ 0x5B908AD6)
                                                                                    + (_DWORD)v69 * v66)
  return ((uint64_t (*)(void))(*(void *)(v70 + 8LL * ((679 * (v69 == 28441156)) ^ v64)) - 12LL))();
}

uint64_t sub_1006823E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, unsigned int a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = (((((v66 - 1485) | 0x581) - 1218) & (a47 + 189)) - 761020744 - ((2 * (a47 + 189)) & 0x170)) ^ 0xD2A3BEB8;
  int v70 = *(&a66 + (((914 * v69) & 0x7397E) + ((457 * v69) ^ 0xFF139CBF) + 15755137) % 0x708);
  unsigned int v71 = ((v70 ^ 0xBE) - ((2 * (v70 ^ 0xBE)) & 0x1E8) + 1717183988) ^ *(_DWORD *)(v67
                                                                               + 4LL
                                                                               * ((1361
                                                                                 * (((2 * (v70 ^ 0x92)) & 0x1A6)
                                                                                  + (v70 ^ 0x1EDDAC41u))
                                                                                 - 409671485)
                                                                                % 0x12E0));
  unsigned int v72 = ((BYTE2(v71) ^ 0x70) - ((2 * (BYTE2(v71) ^ 0x70)) & 0xFFFFFFCF) + 1530246887) ^ 0xD95B06F;
  unsigned int v73 = 1035293029 - (BYTE1(v71) ^ 0xD5 | 0x3DB55165) + (BYTE1(v71) ^ 0xD5 | 0xC24AAE9A);
  unsigned int v74 = (-1437056867 - (v72 | 0xAA58409D) + (v72 | 0x55A7BF62)) ^ 0x307B941;
  int v75 = (((2 * (v71 ^ 0x14)) | 0x7BB13B8A) - (v71 ^ 0x14) - 1037606341) ^ 0x3DD89DD1;
  int v76 = *(&a66
                         + (((914 * (HIBYTE(v71) ^ 0xA7)) & 0x37FAE)
                          + ((457 * (HIBYTE(v71) ^ 0xA7)) ^ 0xFF75BFD7)
                          + 9206633)
                         % 0x708) ^ 0x90;
  int v77 = *(&a66 + (((914 * v74) & 0xFF7EFFE4) + 4369528 + ((457 * v74) ^ 0xFFBF7FF2) + 3798) % 0x708);
  unsigned int v78 = (((v76 - ((2 * v76) & 0xF0)) << 16) - 1904738304) ^ 0x8E780000;
  unsigned int v79 = ((((v77 ^ 0x90) + 11666170 - ((2 * v77) & 0x56)) << 8) + 405760) ^ 0xB2092B00;
  unsigned int v80 = (v78 - 2092038769 - ((2 * v78) & 0x69C0000)) ^ 0x834E058F | (v79 - 353155013 - ((2 * v79) & 0x55E69000)) ^ 0xEAF3483B;
  int v81 = *(&a66
                         + (((914 * (v73 ^ 0xC24AAEEF)) & 0x72D33CDC)
                          + ((457 * (v73 ^ 0xC24AAEEF)) ^ 0x39699E6E)
                          - 963076910)
                         % 0x708) ^ 0x90;
  unsigned int v82 = 97 * a47 + 1768273821;
  unint64_t v83 = v82 / 0x55CuLL;
  uint64_t v84 = v82 % 0x55C;
  unsigned int v85 = (((((v80 + 1547446935 - ((2 * v80) & 0xB878552E)) ^ 0x5C3C2A97 | (v81 + 1651430012 - ((2 * v81) & 0xF8)) ^ 0x626ED27C)
         - ((2
           * ((v80 + 1547446935 - ((2 * v80) & 0xB878552E)) ^ 0x5C3C2A97 | (v81 + 1651430012 - ((2 * v81) & 0xF8)) ^ 0x626ED27C)) & 0x7A35C8)) << 8)
       - 1122311168) ^ 0xBD1AE400;
  int v86 = *(&a66 + (((914 * v75) & 0xBFA8FDEE) + ((457 * v75) ^ 0x5FD47EF7) - 1607615415) % 0x708) ^ 0x90;
  unsigned int v87 = (v85 - 2029255651 - ((2 * v85) & 0xE180800)) ^ 0x870C041D | (v86 - 540451159 - ((2 * v86) & 0x152)) ^ 0xDFC95EA9;
  *((_DWORD *)&STACK[0x8D0] + v84) = a58 ^ 0xA703D29E ^ (v87 - ((2 * v87) & 0x5D969D54) - 1362407766);
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 + 8LL * ((351 * (a47 == 1088720962)) ^ v66)) - 12LL))( v84,  v83,  1651430012LL,  1547446935LL,  3259674266LL,  a47,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38);
}

uint64_t sub_100682898@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *(_DWORD *)(*a57 + 4 * v61 - 0x657CD3A76F435B72LL) = *(_DWORD *)(v57
                                                                 + 4LL
                                                                 * ((_DWORD)v61 * v60
                                                                  + 1149280470
                                                                  - ((((v61 * v60
                                                                                                  + 1149280470)
}

uint64_t sub_10068290C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, int a47, unsigned int a48, uint64_t a49, uint64_t a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v70 = (((v67 - 838) ^ 0x7C719F34) + (a48 - 125) - ((2 * (a48 + 131)) & 0x18)) ^ 0x7C719E0C;
  unsigned int v71 = (((914 * v70) & 0xB776C) + ((457 * v70) ^ 0xEAF5BBB6) + 353257610) % 0x708;
  unsigned int v72 = *(_DWORD *)(v68
                  + 4LL
                  * ((1361
                    * (((2 * (*(&a67 + v71) ^ 0xB2)) & 0xFFFFFFF7)
                     + (*(&a67 + v71) ^ 0x3FFBDE49))
                    - 702433804)
                   % 0x12E0));
  unsigned int v73 = ((BYTE2(v72) ^ 0xC5001A1D) - ((2 * (BYTE2(v72) ^ 0xC5001A1D)) & 0x80000434) - 353222118) ^ 0x2FF25812;
  uint64_t v74 = (457 * v73) ^ 0xDAEF3FFE;
  int v75 = ((BYTE1(v72) ^ 0x69) + 1921036872 - ((2 * (BYTE1(v72) ^ 0x69)) & 0x118) + 68) ^ 0x7280B248;
  int v76 = *(&a67
                         + (((914 * (HIBYTE(v72) ^ 0xBC)) & 0x3A296)
                          + ((457 * (HIBYTE(v72) ^ 0xBC)) ^ 0xCE7FD14B)
                          + 830630389)
                         % 0x708);
  int v77 = *(&a67 + (((914 * v73) & 0xB5DE7FFC) + v74 + 622000962) % 0x708);
  int v78 = *(&a67
                         + (((914 * (v72 ^ 0x49)) & 0x27AEE)
                          + ((457 * (v72 ^ 0x49)) ^ 0x7F8F3D77u)
                          - 2139947575)
                         % 0x708);
  int v79 = *(&a67 + (((914 * v75) & 0xFBFFFF16) + ((457 * v75) ^ 0xFDFFFF8B) + 33700789) % 0x708);
  int v80 = ((((v76 ^ 0x90) + (~(2 * (v76 ^ 0x90)) | 0xFF19)) << 16) + 1853095936) ^ 0x6E730000;
  int v81 = ((((v77 ^ 0x90) - ((2 * v77) & 0xC4)) << 8) + 486826496) ^ 0x1D046200;
  int v82 = (v81 + 679408758 - ((2 * v81) & 0x50FDE800)) ^ 0x287EF476 | (v80 + 250586496 - ((2 * v80) & 0x5DE0000)) ^ 0xEEFA580;
  unsigned int v83 = (v82 - 1434896106 - ((2 * v82) & 0x54F2722C)) ^ 0xAA793916 | ((v79 ^ 0x90)
                                                                    - 71690081
                                                                    - ((2 * (v79 ^ 0x90)) & 0xFFFFFF3F)) ^ 0xFBBA189F;
  int v84 = (((v83 - ((2 * v83) & 0x59326A)) << 8) + 748238080) ^ 0x2C993500;
  unsigned int v85 = (v84 - 1433091493 - ((2 * v84) & 0x55298400)) ^ 0xAA94C25B | ((v78 ^ 0x90)
                                                                    - 731599680
                                                                    - ((2 * (v78 ^ 0x90)) & 0x180)) ^ 0xD464ACC0;
  unsigned int v86 = a51 ^ 0x4F32C51D ^ (v85 + 1328727325 - ((2 * v85) & 0x9E658A3A));
  *((_DWORD *)&STACK[0x8D0] + (97 * a48 + 431063715) % 0x55C) = a57 ^ a58 ^ 0x57202332 ^ (v86
                                                                                        - ((2 * v86) & 0xFFCCEA8C)
                                                                                        - 1673914);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8LL * ((195 * (a48 == 1323896700)) ^ v67)))( 250586496LL,  622000962LL,  v74,  4261412747LL,  1921036872LL,  a48,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39);
}

uint64_t sub_100682D54@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *(_DWORD *)(*a57 + 4 * v61 - 0x657CD3A74454870ALL) = *(_DWORD *)(v60
                                                                 + 4LL
                                                                 * ((_DWORD)v61 * v57
                                                                  + 1436416432
                                                                  - ((((v61 * v57
                                                                                                  + 1436416432)
  return ((uint64_t (*)(void))(*(void *)(v62 + 8LL * ((124 * (v61 != 1313532239)) ^ a1)) - 12LL))();
}

uint64_t sub_100682DC0@<X0>( uint64_t a1@<X6>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, unsigned int a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,int a51,int a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  unsigned int v64 = ((a43 - 107) - 1151836186 - ((2 * (a43 + 149)) & 0x1CC)) ^ 0xBB585FE6;
  unsigned int v65 = (((914 * v64) & 0x1C65648) + ((v64 * (((a3 + 548) | 1) - 404)) ^ 0xEFE32B24) + 270588188) % 0x708;
  unsigned int v66 = *(_DWORD *)(v62
                  + 4LL
                  * ((1361
                    * (((2 * (*(&a62 + v65) ^ 0x47)) & 0xFFFFFFEF)
                     + (*(&a62 + v65) ^ 0xDEDFEDB0))
                    + 461365721)
                   % 0x12E0));
  unsigned int v67 = (v66 ^ 0x46 | 0xFA93D0E5) - (v66 ^ 0x46 | 0x56C2F1A) + 90976026;
  unsigned int v68 = ((BYTE2(v66) ^ 0xFA) - ((2 * (BYTE2(v66) ^ 0xFA)) & 0x1D4) - 808732438) ^ 0x8F8BB86E;
  unsigned int v69 = (-366873976 - (v68 | 0xEA21F288) + (v68 | 0x15DE0D77)) ^ 0x559E0D67;
  unsigned int v70 = ((v67 & 0x12134CB5 ^ 0x10080495) + (v67 ^ 0xAA13F962) - ((v67 ^ 0xAA13F962) & 0x121B6CB5)) ^ 0x429B45A5;
  int v71 = *(&a62 + (((914 * v69) & 0xF4EFEEFE) + ((457 * v69) ^ 0x7A77F77F) - 2054536255) % 0x708);
  int v72 = *(&a62
                         + (((914 * (HIBYTE(v66) ^ 0x12)) & 0x3FF4E)
                          + ((457 * (HIBYTE(v66) ^ 0x12)) ^ 0x5FAFFFA7)
                          - 1605223527)
                         % 0x708u);
  unsigned int v73 = ((((v72 ^ 0x90) - ((2 * (v72 ^ 0x90)) & 0x196)) << 16) - 674562048) ^ 0xD7CB0000;
  int v74 = ((((v71 ^ 0x90) + (~(2 * v71) | 0xFFFFED)) << 8) + 789056000) ^ 0x2F080900;
  int v75 = *(&a62
                         + (((914 * (BYTE1(v66) ^ 0xD2)) & 0x17EBE)
                          + ((457 * (BYTE1(v66) ^ 0xD2)) ^ 0x5FBCBF5Fu)
                          - 1606059039)
                         % 0x708);
  unsigned int v76 = (v73 + 1728913975 - ((2 * v73) & 0x4E1A0000)) ^ 0x670D2237 | (v74 - 1408138809 - ((2 * v74) & 0x30200)) ^ 0xAC1181C7;
  int v77 = (v76 + 95348266 - ((2 * v76) & 0xB5DCC54)) ^ 0x5AEE62A | ((v75 ^ 0x90) + 742912778 - ((2 * v75) & 0x14)) ^ 0x2C47F30A;
  int v78 = *(&a62 + (((914 * v70) & 0x3AEBEBB6) + ((457 * v70) ^ 0x1D75F5DB) - 494123675) % 0x708);
  int v79 = (((v77 + 136818 - ((2 * v77) & 0x42CC2)) << 8) - 4352) ^ 0x2166100;
  unsigned int v80 = (v79 + 1946254052 + (~(2 * v79) | 0x17FD0BFF) + 1) ^ 0x74017AE4 | ((v78 ^ 0x90)
                                                                         - 1341881258
                                                                         - ((2 * (v78 ^ 0x90)) & 0xAC)) ^ 0xB0048456;
  *((_DWORD *)&STACK[0x8D0] + (97 * a43 - 19112075) % 0x55C) = a52 ^ a53 ^ a54 ^ 0x81DC5D80 ^ (v80
                                                                                             - ((2 * v80) & 0x75B01CAA)
                                                                                             + 987237973);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 + 8LL * ((1052 * (a43 == 1018591594)) ^ a3)) - 12LL))( 1946254052LL,  144LL,  742912778LL,  95348266LL,  1728913975LL,  a43,  a1,  a2,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34);
}

uint64_t sub_100683284( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(((4LL * (v69 - 1583112462)) | ((unint64_t)(v69 - 1583112462 < (v64 ^ 0x918ACE2u)) << 34))
            + *a64
            - 0x657CD3A62F8BD196LL) = *(_DWORD *)(v68
                                                + 4LL
                                                * (v69 * v65
                                                 - 861804641
                                                 - ((((v69 * v65 - 861804641)
  return (*(uint64_t (**)(void))(v70 + 8LL * ((168 * ((v69 & 0xFFFFFF00) == 1735727104)) ^ v64)))();
}

uint64_t sub_10068331C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, int a48, unsigned int a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unsigned int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v70 = ((a49 + 110) - 564338074 - ((2 * (a49 + 110)) & 0xCC)) ^ 0xDE5CE266;
  unsigned int v71 = (((914 * v70) & 0xDB3F4) + 1074080326 + ((v70 * (56 * (v67 ^ 0x1D4) + 9)) ^ 0xBFFED9FA)) % 0x708;
  int v72 = *(_DWORD *)(v68
                  + 4LL
                  * ((1361
                    * (((2 * (*(&a66 + v71) ^ 0x60)) & 0xFA)
                     + (*(&a66 + v71) ^ 0x3B0FFF9Fu))
                    + 2507717)
                   % 0x12E0)) ^ 0x4F18A365;
  unsigned int v73 = v72 - ((2 * v72 - 1476488976) & 0xCA7AF108) - 1187200772;
  unsigned int v74 = ((2 * (v73 ^ 0xB3)) | 0xFB8E35AC) - (v73 ^ 0xB3) + 37283114;
  unsigned int v75 = (((v73 >> 8) & 0x1D ^ 0x14404415) + ((v73 >> 8) & 0xE2 ^ 0x80840061) - 1) ^ 0x94C444AA;
  uint64_t v76 = (457 * v75) ^ 0x7BDF7BB7;
  unsigned int v77 = (((2 * (BYTE2(v73) ^ 0x3E)) & 0x72) - (BYTE2(v73) ^ 0x3E) - 1772271418) ^ 0xB7C54857;
  unsigned int v78 = (914 * v75) & 0xF7BEF76E;
  unsigned int v79 = ((v74 & 0xEC0113F3 ^ 0x82093E2) + (v74 & 0x11C6080C ^ 0x13002C09) - 1) ^ 0xE6E7A558;
  unsigned int v80 = (901115502 - (v77 | 0x35B5EE6E) + (v77 | 0xCA4A1191)) ^ 0xEBD2119B;
  uint64_t v81 = (457 * v80) ^ 0xF6DF7FB7;
  uint64_t v82 = HIBYTE(v73);
  int v83 = *(&a66 + (((914 * v80) & 0xEDBEFF6E) + v81 + 153271177) % 0x708);
  int v84 = *(&a66
                         + (((914 * (v82 ^ 0x1C)) & 0x3533A)
                          + ((457 * (v82 ^ 0x1C)) ^ 0xD9CFA99D)
                          + 640848291)
                         % 0x708) ^ 0x90;
  unsigned int v85 = (((v84 - ((2 * v84) & 0xFFFFFF3F)) << 16) - 945881088) ^ 0xC79F0000;
  unsigned int v86 = ((((v83 ^ 0x90) - ((2 * v83) & 8)) << 8) - 2040069120) ^ 0x86670400;
  unsigned int v87 = (v86 + 1118392911 - ((2 * v86) & 0x552A400)) ^ 0x42A9524F | (v85 - 1353121302 - ((2 * v85) & 0x5EB20000)) ^ 0xAF5901EA;
  int v88 = *(&a66 + (v78 + v76 - 2078097527) % 0x708) ^ 0x90;
  unsigned int v89 = (v87 + 1122750530 - ((2 * v87) & 0x5D7A084)) ^ 0x42EBD042 | (v88 - 691405833 - ((2 * v88) & 0xFFFFFFEF)) ^ 0xD6C9FBF7;
  unsigned int v90 = (((v89 - ((2 * v89) & 0xC3E3FA)) << 8) - 504234752) ^ 0xE1F1FD00;
  int v91 = *(&a66 + (((914 * v79) & 0xFFBDFCE6) + ((457 * v79) ^ 0xFFDEFE73) + 2309325) % 0x708) ^ 0x90;
  int v92 = (v90 + 884900629 - ((2 * v90) & 0x697D0600)) ^ 0x34BE8315 | (v91 + 1923158423 - ((2 * v91) & 0x12E)) ^ 0x72A11197;
  *((_DWORD *)&STACK[0x8D0] + (97 * a49 + 1521237422) % 0x55C) = a59 ^ 0xC3C5A56D ^ (v92
                                                                                   - ((2 * v92) & 0x73D41422)
                                                                                   + 971639313);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8LL * (((a49 != 1091267729) * v66) ^ v67)))( a59,  1118392911LL,  v76,  3654265245LL,  v81,  v82,  a49,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40);
}

uint64_t sub_10068380C@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *(_DWORD *)(*a57 + 4 * v61 - 0x657CD3A625DBB9A2LL) = *(_DWORD *)(v60
                                                                 + 4LL
                                                                 * ((_DWORD)v61 * v58
                                                                  + 2022467274
                                                                  - ((((v61 * v58
                                                                                                  + 2022467274)
  return (*(uint64_t (**)(void))(v62 + 8LL * ((28 * (v61 != 111984117)) | a1)))();
}

uint64_t sub_100683874@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, int a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  int v60 = (((a42 + 180) & ((a1 ^ 7) - 200)) + 793091995 - ((2 * (a42 + 180)) & 0x136)) ^ 0x2F459F9B;
  unsigned int v61 = (((914 * v60) & 0x277694E) + ((457 * v60) ^ 0x7B3BB4A7u) - 2067247207) % 0x708;
  uint64_t v62 = &a58;
  unsigned int v63 = *(_DWORD *)(v58
                  + 4LL
                  * ((1361
                    * (((2 * (v62[v61] ^ 0x88888888)) & 0x19A)
                     + (v62[v61] ^ 0x77EFBB67))
                    + 1587059369)
                   % 0x12E0));
  int v64 = (((v63 >> 8) & 0x4F ^ 0x1C07) + ((v63 >> 8) & 0xB0 ^ 0x11) - 1) ^ 0x1C31;
  int v65 = (v63 ^ 0x2F) + (v63 & 0x5E ^ 0x55FFA750) - ((v63 ^ 0x2F) & 0x5E);
  unsigned int v66 = ((914 * (HIBYTE(v63) ^ 0x30)) & 0x1B6EE) + ((457 * (HIBYTE(v63) ^ 0x30)) ^ 0x77E4DB77) - 2011340855;
  int v67 = (318545703 - (BYTE2(v63) ^ 0x8B) + ((2 * (BYTE2(v63) ^ 0x8B)) & 0x1B0)) ^ 0x12FC9F9B;
  v65 ^= 0x55FFA7F0u;
  int v68 = (457 * v65) ^ 0x5FBDBBFF;
  int v69 = 914 * v65;
  int v70 = *(&a58 + v66 % 0x708) ^ 0x90;
  unsigned int v71 = ((v69 & 0xBF7B77FE) + v68 - 1606123711) % 0x708;
  int v72 = *(&a58 + (((914 * v67) & 0x3B3EEBE) + ((457 * v67) ^ 0x75D9F75Fu) - 1977072671) % 0x708) ^ 0x90;
  int v73 = *(&a58 + (((914 * v64) & 0xFDFDEC) + ((457 * v64) ^ 0xFDFEFEF6) + 33766474) % 0x708);
  int v74 = (((v70 - ((2 * v70) & 0x38)) << 16) + 1595670528) ^ 0x5F1C0000;
  int v75 = (((v72 - ((2 * v72) & 0x1D2)) << 8) + 624879872) ^ 0x253EE900;
  unsigned int v76 = (v75 - 1880740074 - ((2 * v75) & 0x1FCC5E00)) ^ 0x8FE62F16 | (v74 - 67538254 - ((2 * v74) & 0x77F20000)) ^ 0xFBF972B2;
  uint64_t v77 = v73 ^ 0x90u;
  int v78 = (v76 - 717092965 - ((2 * v76) & 0xAA840F36)) ^ 0xD542079B | (v77 + 175670030 - ((2 * v73) & 0x1C)) ^ 0xA78830E;
  uint64_t v79 = (a42 + 1);
  int v80 = (((v78 - ((2 * v78) & 0x934EE4)) << 8) + 1235710464) ^ 0x49A77200;
  LODWORD(v6fseek(v0, 0LL, 2) = (v80 - 820191014 - ((2 * v80) & 0x9E39C000)) ^ 0xCF1CE0DA | ((v62[v71] ^ 0x90)
                                                                            - 620762674
                                                                            - ((2 * (v62[v71] ^ 0x90)) & 0x19C)) ^ 0xDAFFE9CE;
  uint64_t v81 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8LL * ((7 * ((_DWORD)v79 == 1807238732)) ^ a1));
  *((_DWORD *)&STACK[0x8D0] + (97 * a42 + 791526964) % 0x55Cu) = a54 ^ 0xBEF3EE21 ^ ((_DWORD)v62
                                                                                   - ((2 * (_DWORD)v62) & 0xB0D098C2)
                                                                                   + 1483230305);
  return v81( 3474776282LL,  v77,  3577874331LL,  175670030LL,  2317894625LL,  v79,  1442817872LL,  318545703LL,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33);
}

uint64_t sub_100683CA8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v68 - 0x657CD3A670EE64DALL) = *(_DWORD *)(v65
                                                                 + 4LL
                                                                 * ((_DWORD)v68 * ((v64 - 56) ^ 0x1EE)
                                                                  + 1544404668
                                                                  - ((((v68
                                                                                    * ((v64 - 56) ^ 0x1EE)
                                                                                    + 1544404668)
  return (*(uint64_t (**)(void))(v69 + 8LL * ((1675 * (v68 == 426858691)) ^ v64)))();
}

uint64_t sub_100683D1C@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, int a42, int a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  unsigned int v61 = ((a43 - 107) - 1052391691 - ((2 * (a43 + 149)) & 0x1EA)) ^ 0xC145C6F5;
  int v62 = *(&a59 + (((914 * v61) & 0xDD5DE) + ((457 * v61) ^ 0xBFD6EAEF) + 1076697425) % 0x708);
  unsigned int v63 = *(_DWORD *)(v59 + 4LL * ((1361 * (((2 * (v62 ^ 0x85)) & 0xFFFFFF3F) + (v62 ^ 0x67D7E95A)) - 311600689) % 0x12E0));
  unsigned int v64 = (((2 * ~HIWORD(v63)) & 0x1F0) - ~HIWORD(v63) - 1236175609) ^ 0xB6D15586;
  int v65 = (((2 * v64) | 0x7C6C55F8) - v64 - 1043737340) ^ 0x3EB60AFA;
  unsigned int v66 = ((914 * (HIBYTE(v63) ^ 0x2B)) & 0x21736) + ((457 * (HIBYTE(v63) ^ 0x2B)) ^ 0xEFD90B9B);
  unsigned int v67 = ((2 * (BYTE1(v63) ^ 0x420004EA)) | 0xE0CDEF8E) - (BYTE1(v63) ^ 0x420004EA) - 1885796295;
  uint64_t v68 = (457 * v65) ^ 0x879BDEFB;
  int v69 = ((v63 ^ 0xE9) + (v63 & 0x84 ^ 0x16068804) - ((v63 ^ 0xE9) & 0x84)) ^ 0x36569C92;
  v67 ^= 0x3266F3E3u;
  uint64_t v70 = (457 * v67) ^ 0xBFFC6EF7;
  int v71 = (((2 * v69) & 0x800826) - v69 + 1813142508) ^ 0x4C424F6C;
  unsigned int v72 = ((914 * v71) & 0xFDD7DDFE) + ((457 * v71) ^ 0x7EEBEEFF) - 2129245119;
  int v73 = *(&a59
                         + (v66
                                        + 271134629
                                        - 1800 * ((2386093 * (unint64_t)(v66 + 271134629)) >> 32))) ^ 0x90;
  int v74 = (((v73 - ((2 * v73) & 0x1D0)) << 16) + 417857536) ^ 0x18E80000;
  int v75 = *(&a59 + (((914 * v65) & 0xF37BDF6) + v68 + 2019974213) % 0x708) ^ 0x90;
  int v76 = (((v75 - ((2 * v75) & 0x64)) << 8) + 1912549888) ^ 0x71FF3200;
  int v77 = (v76 + 339239034 - ((2 * v76) & 0x2870C000)) ^ 0x1438607A | (v74 + 893661319 - ((2 * v74) & 0x6A880000)) ^ 0x35443087;
  int v78 = *(&a59 + (((914 * v67) & 0x7FF8DDEE) + v70 + 1074121801) % 0x708);
  unsigned int v79 = (v77 - 808285096 - ((2 * v77) & 0x9FA518B0)) ^ 0xCFD28C58 | ((v78 ^ 0x90)
                                                                   - 1963683312
                                                                   - ((2 * (v78 ^ 0x90)) & 0x20)) ^ 0x8AF49210;
  int v80 = (((v79 - ((2 * v79) & 0x46544A)) << 8) + 589964544) ^ 0x232A2500;
  int v81 = *(&a59 + v72 % 0x708) ^ 0x90;
  unsigned int v82 = (v80 - 740834460 - ((2 * v80) & 0xA7AF8600)) ^ 0xD3D7C364 | (v81 + 1005442985 - ((2 * v81) & 0x152)) ^ 0x3BEDD7A9;
  *((_DWORD *)&STACK[0x8D0] + (97 * a43 - 1322022027) % 0x55Cu) = a53 ^ (v82 - ((2 * v82) & 0x7CA6847A) - 1101839811) ^ 0xFF592F8C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 8LL * ((25 * (a43 != 987745642)) ^ a1)) - 8LL))( 3486682200LL,  2331283984LL,  893661319LL,  339239034LL,  v70,  v68,  1279414124LL,  255311350LL,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34);
}

uint64_t sub_1006841BC@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *(_DWORD *)(*a57 + 4 * (v61 + ((a1 - 1124023184) & 0x42FF3F74)) - 0x657CD3A7807E663ALL) = *(_DWORD *)(v60 + 4LL * ((_DWORD)v61 * v57 - 1565782184 - ((((v61 * v57 - 1565782184) * (unint64_t)v58) >> 32) >> 10) * v59));
  return ((uint64_t (*)(void))(*(void *)(v62 + 8LL * ((1275 * (v61 == 1565872807)) ^ a1)) - 8LL))();
}

uint64_t sub_100684244( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, int a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v69 = (v66 + 1016073450 + (a51 - 70) - ((2 * (a51 + 186)) & 0xBC)) ^ 0x3C90125E;
  int v70 = *(&a66 + (((914 * v69) & 0x77DFE) + ((457 * v69) ^ 0x7FDBBEFFu) - 2144844479) % 0x708) ^ 0xCF;
  int v71 = *(_DWORD *)(v67 + 4LL * ((1361 * (((2 * v70) & 0x1CC) + (v70 ^ 0xFF6FBAE6)) - 15548561) % 0x12E0));
  HIDWORD(v7fseek(v0, 0LL, 2) = v71 ^ 0x718A365;
  LODWORD(v7fseek(v0, 0LL, 2) = v71 ^ 0x48000000;
  unsigned int v73 = (v72 >> 27) - ((2 * (v72 >> 27)) & 0x2DFD33F2) - 1761699335;
  unsigned int v74 = (((v73 >> 8) & 0xE1) + ((v73 >> 8) & 0x1E ^ 0xE4CB9703) - 1) ^ 0xEFEB1B4F;
  int v75 = ((HIWORD(v73) & 0x43) + 1476460543 + (HIWORD(v73) & 0xBC ^ 0x21D08599)) ^ 0x79D18599;
  int v76 = ((v72 >> 27) - ((2 * (v72 >> 27)) & 0xF2) - 7) ^ 0x92;
  unsigned int v77 = ((v76 - ((2 * v76) & 0x114) - 1776674934) & 0x8208117C ^ 0x28418070)
      + ((v76 - ((2 * v76) & 0x114) - 1776674934) ^ 0xD63E178F)
      - (((v76 - ((2 * v76) & 0x114) - 1776674934) ^ 0xD63E178F) & 0x20117C);
  int v78 = (v74 - ((2 * v74) & 0x601152C) + 1195936406) ^ 0x4C6806B4;
  int v79 = HIBYTE(v73) ^ 0xF1;
  uint64_t v80 = (457 * v79) ^ 0x7E36BB7Fu;
  unsigned int v81 = (((2 * ((2 * v73) & 0x80)) ^ 0x100) & 0xFFFFFF7F | (((v73 >> 6) & 1) << 7)) + (v77 ^ 0xEA4D90EC) - 128;
  int v82 = *(&a66 + (((914 * v79) & 0x176FE) + v80 - 2117369919) % 0x708) ^ 0x90;
  int v83 = *(&a66 + (((914 * v75) & 0x1F796E) + ((457 * v75) ^ 0xEFFFBCB7) + 268598921) % 0x708) ^ 0x90;
  int v84 = (((v82 - ((2 * v82) & 0x18A)) << 16) + 1304756224) ^ 0x4DC50000;
  unsigned int v85 = (((v83 - ((2 * v83) & 0x1E8)) << 8) - 1942490112) ^ 0x8C37F400;
  int v86 = *(&a66 + (((914 * v78) & 0x7FFB76A6) + ((457 * v78) ^ 0xBFFDBB53) + 1074036717) % 0x708);
  unsigned int v87 = (v85 + 1864061120 - ((2 * v85) & 0x5E36A000)) ^ 0x6F1B50C0 | (v84 - 2120525093 - ((2 * v84) & 0x3360000)) ^ 0x819B5ADB;
  unsigned int v88 = (v87 - 1539934214 - ((2 * v87) & 0x486CEFF4)) ^ 0xA43677FA | ((v86 ^ 0x90) + 1884049702 - ((2 * v86) & 0x4C)) ^ 0x704C5126;
  int v89 = (((v88 - ((2 * v88) & 0xFCB43C)) << 8) + 2119835136) ^ 0x7E5A1E00;
  int v90 = *(&a66 + (457 * (((2 * v81) & 0xFDFFFCBA) + (v81 ^ 0xFEFFFE5D)) - 922555397) % 0x708) ^ 0x90;
  unsigned int v91 = (v89 + 940077525 - ((2 * v89) & 0x7010E200)) ^ 0x380871D5 | (v90 - 1126312262 - ((2 * v90) & 0x174)) ^ 0xBCDDD6BA;
  *((_DWORD *)&STACK[0x8D0] + (97 * a51 - 496012422) % 0x55C) = a63 ^ (v91 - ((2 * v91) & 0x468174D8) + 591444588) ^ 0x57564BF;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 + 8LL * ((830 * (a51 == 1953346373)) ^ v66)) - 8LL))( 940077525LL,  2174442203LL,  1864061120LL,  v80,  3221076819LL,  a51,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42);
}

uint64_t sub_100684744@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *(_DWORD *)(*a57 + 4 * v61 - 0x657CD3A7CA8B1A92LL) = *(_DWORD *)(v60
                                                                 + 4LL
                                                                 * ((_DWORD)v61 * v58
                                                                  - 1628324338
                                                                  - ((((v61 * v58
                                                                                                  - 1628324338)
  return ((uint64_t (*)(void))(*(void *)(v62 + 8LL * ((119 * (v61 != 1876463665)) ^ a1)) - 8LL))();
}

uint64_t sub_1006847B0@<X0>( uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, unsigned int a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,int a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  unsigned int v62 = ((a45 - 39) - 1963628562 - ((2 * (a45 + 217)) & 0x1DC)) ^ 0x8AF567EE;
  int v63 = *(&a60
                         + (((914 * v62) & 0xFDF97C)
                          + ((v62 * ((a2 + 697544750) & 0xD66C4FFE ^ 0x7A3)) ^ 0x9BFEFCBE)
                          + 1678051202)
                         % 0x708);
  unsigned int v64 = (*(_DWORD *)(v60 + 4LL * ((1361 * (((2 * v63) & 0x172) + (v63 ^ 0xFD7D7DB9)) + 1479518263) % 0x12E0)) ^ 0x4F18A365)
      + (((((v63 ^ 0x90) - ((2 * (_BYTE)v63) & 0x16) + 538669323) ^ 0xC57D60A8) + 1) ^ 0x4FF7FEBD)
      + ((2 * ((((v63 ^ 0x90) - ((2 * (_BYTE)v63) & 0x16) + 538669323) ^ 0xC57D60A8) + 1)) & 0x9FEFFD7A)
      - 1341652669;
  unsigned int v65 = v64 - ((2 * v64) & 0xE1EEEFA4) + 1895266258;
  unsigned int v66 = ((v65 >> 8) & 0x88) + (BYTE1(v65) ^ 0xFFFFFF8C) + (BYTE1(v65) | 0x90C62377) + 1;
  unsigned int v67 = (-801315683 - (BYTE2(v65) ^ 0x57 | 0xD03CE49D) + (BYTE2(v65) ^ 0x57 | 0x2FC31B62)) ^ 0x2FCB0A43;
  unsigned int v68 = (v66 & 0x226A1CB6 ^ 0x222A1C80) + (v66 ^ 0xD0C40377) - ((v66 ^ 0xD0C40377) & 0x226A1CB6);
  unsigned int v69 = (v67 - ((2 * v67) & 0x1B4C633C) - 1918488162) ^ 0x8DAE201E;
  int v70 = v65 ^ 0x33;
  int v71 = *(&a60
                         + (((914 * (HIBYTE(v65) ^ 0x30)) & 0x3D5D2)
                          + ((457 * (HIBYTE(v65) ^ 0x30)) ^ 0x3EF5EAE9)
                          - 1056157609)
                         % 0x708u) ^ 0x90;
  int v72 = *(&a60 + (((914 * v69) & 0xBBDE7CD4) + ((457 * v69) ^ 0xDDEF3E6A) + 571669718) % 0x708) ^ 0x90;
  uint64_t v73 = (97 * a45 + 2002617913) % 0x55C;
  unsigned int v74 = (((v71 - ((2 * v71) & 0x152)) << 16) - 139919360) ^ 0xF7A90000;
  unsigned int v75 = (((v72 - ((2 * v72) & 0x122)) << 8) - 992571136) ^ 0xC4D69100;
  int v76 = (v74 + 747361742 - ((2 * v74) & 0x59160000)) ^ 0x2C8BD5CE | (v75 + 640077915 - ((2 * v75) & 0x4C4DA000)) ^ 0x2626D05B;
  int v77 = *(&a60
                         + (((914 * (v68 ^ 0x62683CBA)) & 0x7B8D75EC)
                          + ((457 * (v68 ^ 0x62683CBA)) ^ 0xBDC6BAF6)
                          + 1111195722)
                         % 0x708) ^ 0x90;
  uint64_t v78 = (2 * v77) & 0x17C;
  int v79 = (v76 + 983664348 - ((2 * v76) & 0x75430DB8)) ^ 0x3AA186DC | (v77 + 1161260478 - v78) ^ 0x45376DBE;
  int v80 = *(&a60 + (((914 * v70) & 0x2F3FE) + ((457 * v70) ^ 0x5FFB79FFu) - 1610170047) % 0x708);
  unsigned int v81 = (((v79 - ((2 * v79) & 0xC68C14)) << 8) - 481949184) ^ 0xE3460A00;
  unsigned int v82 = (v81 - 871606933 - ((2 * v81) & 0x9818AA00)) ^ 0xCC0C556B | ((v80 ^ 0x90) + 319543587 - ((2 * v80) & 0x46)) ^ 0x130BD923;
  *((_DWORD *)&STACK[0x8D0] + v73) = a53 ^ (v82 - 1518244982 + (~(2 * v82) | 0xB4FD28ED)) ^ 0x44483428;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 + 8LL * ((375 * (a45 == 776358950)) ^ a2)) - 8LL))( v78,  v73,  1161260478LL,  983664348LL,  640077915LL,  3183917814LL,  a45,  a1,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36);
}

uint64_t sub_100684CD0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v66 - 0x657CD3A7FA7AB9B2LL) = *(_DWORD *)(v65
                                                                 + 4LL
                                                                 * ((v64 ^ 0x1483DE2C)
                                                                  + (_DWORD)v66 * v67
                                                                  - (((((v64 ^ 0x1483DE2Cu)
                                                                                    + (_DWORD)v66 * v67)
  return (*(uint64_t (**)(void))(v70 + 8LL * ((227 * (v66 == 2077518585)) ^ v64)))();
}

uint64_t sub_100684D44@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, int a44, int a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  unsigned int v62 = ((a45 + 124) - 415974856 - 2 * ((a45 + 124) & ((a1 + 8) ^ 0xED) ^ a45 & 2)) ^ 0xE734BA38;
  unsigned int v63 = (((914 * v62) & 0x7FFFFFE8) + ((457 * v62) ^ 0xBFFFFFF4) + 1074005068) % 0x708;
  unsigned int v64 = *(_DWORD *)(v60
                  + 4LL
                  * ((1361
                    * (2 * ((*(&a60 + v63) ^ 1) & 0x7F) + (*(&a60 + v63) ^ 0xDEF6FF7E))
                    - 1590027388)
                   % 0x12E0));
  int v65 = (v64 ^ 0x70) - ((2 * (v64 ^ 0x70)) & 0x50) - 1881097688;
  unsigned int v66 = (((v64 >> 8) & 0x54 ^ 0x9ACD4305) + ((v64 >> 8) & 0xAB) - 1) ^ 0xDBCF5552;
  int v67 = v66 - ((2 * v66) & 0x20421E4) + 961720562;
  unsigned int v68 = ((2 * (BYTE2(v64) ^ 0x4F)) | 0xA14702E0) - (BYTE2(v64) ^ 0x4F);
  unsigned int v69 = ((v68 - 1352892784) & 0x946112DD ^ 0x9040100C)
      + ((v68 - 1352892784) ^ 0x4CAB83F3)
      - (((v68 - 1352892784) ^ 0x4CAB83F3) & 0x946112DD);
  unsigned int v70 = (((914 * (HIBYTE(v64) ^ 0xE5)) & 0x1F77E) + ((457 * (HIBYTE(v64) ^ 0xE5)) ^ 0x6BFAFBBF) - 1811464319) % 0x708u;
  unsigned int v71 = 97 * a45 + 1837199264;
  unsigned int v72 = ((v65 & 0x814002FD ^ 0x301A049D) + (v65 ^ 0xCF61BB62) - ((v65 ^ 0xCF61BB62) & 0x400102FD)) ^ 0xB1DA0769;
  uint64_t v73 = (914 * (v67 ^ 0x7850A6BA)) & 0x468FFBFE;
  int v74 = (457 * v72) ^ 0x6FFBDFE7;
  v69 ^= 0x886910D9;
  unsigned int v75 = (457 * v69) ^ 0xCECDFD7D;
  uint64_t v76 = (914 * v69) & 0x9D9BFAFA;
  unsigned int v77 = (914 * v72) & 0xDFF7BFCE;
  uint64_t v78 = v73 + ((457 * (v67 ^ 0x7850A6BA)) ^ 0x2347FDFF) - 591774399;
  uint64_t v79 = (v76 + v75 + 825507267) % 0x708;
  unsigned int v80 = (v77 + v74 - 1878631591) % 0x708;
  unsigned int v81 = ((v71 % 0x55C) ^ 0xF66BB77F) + 1574928272 + ((2 * (v71 % 0x55C)) & 0xEFE);
  if (v71 >= 0xFFFFFAA4) {
    unsigned int v81 = 97 * a45 - 1043551221;
  }
  int v82 = (*(&a60 + v70) ^ 0x90) - ((2 * (*(&a60 + v70) ^ 0x90)) & 0x2C);
  int v83 = *(&a60 + v79) ^ 0x90;
  unsigned int v84 = (((v83 + 13209841 - ((2 * v83) & 0x1A4)) << 8) - 7936) ^ 0xC990D200;
  unsigned int v85 = (v84 - 1789769201 - ((2 * v84) & 0x2AA49400)) ^ 0x95524A0F | ((((v82 << 16) - 2095710208) ^ 0x83160000)
                                                                    + 1439375230
                                                                    - ((2 * (((v82 << 16) - 2095710208) ^ 0x83160000)) & 0x2B960000)) ^ 0x55CB1F7E;
  int v86 = *(&a60 + v78 % 0x708) ^ 0x90;
  unsigned int v87 = (v85 + 186938250 + (~(2 * v85) | 0xE9B718EB) + 1) ^ 0xB24738A | (v86 + 1704165329 - ((2 * v86) & 0x1A2)) ^ 0x65937FD1;
  unsigned int v88 = (((v87 - ((2 * v87) & 0x211EE0)) << 8) - 1869647872) ^ 0x908F7000;
  unsigned int v89 = (v88 - 951140680 - ((2 * v88) & 0x8E9D7C00)) ^ 0xC74EBEB8 | ((*(&a60 + v80) ^ 0x90)
                                                                   - 1448433077
                                                                   - ((2 * *(&a60 + v80)) & 0x96)) ^ 0xA9AAAA4B;
  *((_DWORD *)&STACK[0x8D0] + v81 - 1414215439) = a55 ^ (v89 - ((2 * v89) & 0xFCF194E8) - 25638284) ^ 0x17E429E5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 + 8LL * (((8 * (a45 == 1176566403)) | (16 * (a45 == 1176566403))) ^ a1)) - 12LL))( 1704165329LL,  186938250LL,  1439375230LL,  v79,  v78,  v76,  v73,  3469606269LL,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36);
}

uint64_t sub_100685274( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v67 - 0x657CD3A6DD401A8ALL) = *(_DWORD *)(v66
                                                                 + 4LL
  return ((uint64_t (*)(void))(*(void *)(v68 + 8LL * ((964 * (v67 == 881184047)) ^ v64)) - 12LL))();
}

uint64_t sub_1006852F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,unsigned int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = ((a52 - 118) - 1348050978 - ((2 * (a52 + 138)) & 0x1BC)) ^ 0xAFA65FDE;
  int v70 = *(&a66
                         + (((914 * v69) & 0x19D6ED4)
                          + ((v66 - 521817896) & 0x1F1A4F3E ^ 0xAFCEB440 ^ (457 * v69))
                          + 1345670358)
                         % 0x708);
  unsigned int v71 = 1361 * (((2 * (v70 ^ 0x8D)) & 0xEC) + (v70 ^ 0x2FFFE1FB)) - 790939652;
  unsigned int v72 = ((2 * (v70 ^ 0x48)) & 0xDA) + (v70 ^ 0xC1BFFFB5);
  unsigned int v73 = (v72 - 1960693017 + ((2 * v72 + 19950636) & 0x113F9A0 ^ 0x5DFFFFFF)) ^ *(_DWORD *)(v67 + 4LL * (v71 % 0x12E0));
  int v74 = (BYTE2(v73) ^ 0x11) + (HIWORD(v73) & 7 ^ 0x5CA93F06) - ((BYTE2(v73) ^ 0x11) & 7);
  unsigned int v75 = (((2 * (BYTE1(v73) ^ 0x4001B25E)) | 0x5A9E5FE8) - (BYTE1(v73) ^ 0x4001B25E) + 1387319308) ^ 0xED4E9DFC;
  unsigned int v76 = ((v74 & 0x1409175D ^ 0x80420618) + (v74 ^ 0x553D1967) - ((v74 ^ 0x553D1967) & 0x895175D)) ^ 0x954B3144;
  int v77 = HIBYTE(v73) ^ 0xCB;
  uint64_t v78 = (457 * v77) ^ 0x76DE598Eu;
  uint64_t v79 = (457 * v76) ^ 0xEF7FE77F;
  int v80 = ((v73 ^ 0x11) - ((2 * (v73 ^ 0x11)) & 0xD6) + 1387) ^ 0x5D7;
  uint64_t v81 = (457 * v80) ^ 0x7FFD7EFEu;
  unsigned int v82 = (914 * v80) & 0xFFFAFDFC;
  int v83 = *(&a66 + (((914 * v77) & 0xB31C) + v78 - 1994137166) % 0x708) ^ 0x90;
  int v84 = *(&a66 + (((914 * v76) & 0xDEFFCEFE) + v79 + 276976577) % 0x708);
  unsigned int v85 = (((v83 - ((2 * v83) & 0x76)) << 16) - 499449856) ^ 0xE23B0000;
  int v86 = ((((v84 ^ 0x90) - ((2 * (v84 ^ 0x90)) & 0xB0)) << 8) + 657741824) ^ 0x27345800;
  unsigned int v87 = (v86 - 17054937 - ((2 * v86) & 0x7DF78600)) ^ 0xFEFBC327 | (v85 - 1288110512 - ((2 * v85) & 0x66700000)) ^ 0xB338FE50;
  int v88 = *(&a66 + (v82 + v81 - 2147173310) % 0x708);
  int v89 = *(&a66 + (((914 * v75) & 0x85FFFFFE) + ((457 * v75) ^ 0x42FFFFFF) - 1123927231) % 0x708);
  unsigned int v90 = (v87 + 1500445478 - ((2 * v87) & 0x32DDF64C)) ^ 0x596EFB26 | ((v89 ^ 0x90)
                                                                    - 1225201974
                                                                    - ((2 * (v89 ^ 0x90)) & 0x194)) ^ 0xB6F8E6CA;
  int v91 = (((v90 + 4120034 - ((2 * v90) & 0x7DC78C)) << 8) + 386048) ^ 0x3EE3C600;
  int v92 = (v91 + 414472595 - ((2 * v91) & 0x3168B200)) ^ 0x18B45993 | ((v88 ^ 0x90)
                                                                   + 934279070
                                                                   - ((2 * (v88 ^ 0x90)) & 0x13C)) ^ 0x37AFF79E;
  *((_DWORD *)&STACK[0x8D0] + (97 * a52 - 273316790) % 0x55C) = a58 ^ a59 ^ a60 ^ 0xCE31AFF8 ^ (v92
                                                                                              - ((2 * v92) & 0x29BA6528)
                                                                                              - 1797442924);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 + 8LL * ((57 * (a52 == 755544181)) ^ v66)) - 12LL))( 3006856784LL,  v79,  v81,  v78,  3741306622LL,  a52,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43);
}

uint64_t sub_1006857EC@<X0>( unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *(_DWORD *)(*a57 + 4 * v61 - 0x657CD3A6DC130A1ELL) = *(_DWORD *)(v60
                                                                 + 4LL
                                                                 * ((_DWORD)v61 * v57
                                                                  + 902859531
                                                                  - ((((v61 * v57 + 902859531)
  BOOL v63 = ((409 * (a1 ^ 0x328)) ^ 0x333LL) + v61 == 876252693;
  return ((uint64_t (*)(void))(*(void *)(v62 + 8LL * (((8 * v63) | (16 * v63)) ^ a1)) - 12LL))();
}

uint64_t sub_100685870( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,int a52,unsigned int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  unsigned int v71 = (((v68 - 736) | 0x6A8) - 1868918430 + (a53 + 62) - 2 * ((a53 + 62) & 0x5D ^ a53 & 1)) ^ 0x909A985C;
  int v72 = *(&a68 + (((914 * v71) & 0x1DA8F7FC) + ((457 * v71) ^ 0xCED47BFE) + 825198658) % 0x708);
  unsigned int v73 = (((v72 ^ 0x90) - ((2 * v72) & 0xDA) + 812372077) ^ 0xDF7D61DE)
      + (*(_DWORD *)(v69
                   + 4LL * ((1361 * (((2 * (v72 ^ 0xFFFFFFC7)) & 0x1B6) + (v72 ^ 0xDF6EBE38)) + 611947258) % 0x12E0)) ^ 0x4F18A365);
  unsigned int v74 = v73 - ((2 * v73) & 0x8BEF621E) - 973623025;
  unsigned int v75 = ((BYTE1(v74) ^ 0xDC) + ((v74 >> 8) & 0x1A ^ 0x9C23D002) - ((BYTE1(v74) ^ 0xDC) & 0x1A)) ^ 0xDD31D12F;
  int v76 = (((2 * (BYTE2(v74) ^ 0x38)) & 0x12) - (BYTE2(v74) ^ 0x38) + 758) ^ 0x228;
  unsigned int v77 = (-950994524 - (v75 | 0xC750F9A4) + (v75 | 0x38AF065B)) ^ 0x79BD0759;
  unsigned int v78 = ((914 * (HIBYTE(v74) ^ 0xBE)) & 0x3F2FE) + ((457 * (HIBYTE(v74) ^ 0xBE)) ^ 0xFBCDF97F) + 70533569;
  int v79 = v74 ^ 0x57;
  unsigned int v80 = (457 * v79) ^ 0xFF7D17F3;
  int v81 = 914 * v79;
  unsigned int v82 = (((914 * v77) & 0xB5BDF6F6) + ((457 * v77) ^ 0xDADEFB7B) + 623067077) % 0x708;
  int v83 = *(&a68 + v78 % 0x708) ^ 0x90;
  int v84 = *(&a68 + (((914 * v76) & 0x6F7F6) + ((457 * v76) ^ 0x19337BFBu) - 422658235) % 0x708) ^ 0x90;
  int v85 = (((v83 - ((2 * v83) & 0x70)) << 16) + 1329070080) ^ 0x4F380000;
  unsigned int v86 = (((v84 - ((2 * v84) & 0x1B2)) << 8) - 207824640) ^ 0xF39CD900;
  unsigned int v87 = (v86 - 930946538 - ((2 * v86) & 0x1105C400)) ^ 0xC882E216 | (v85 + 1502600281 - ((2 * v85) & 0x331E0000)) ^ 0x598FDC59;
  unsigned int v88 = (v87 + 2047389843 - ((2 * v87) & 0xF4116126)) ^ 0x7A08B093 | ((*(&a68 + v82) ^ 0x90)
                                                                    - 841086101
                                                                    - ((2 * *(&a68 + v82)) & 0xD6)) ^ 0xCDDE0B6B;
  int v89 = (((v88 - ((2 * v88) & 0x2D5E64)) << 8) + 380580352) ^ 0x16AF3200;
  int v90 = *(&a68 + ((v81 & 0x22FE6) + v80 + 8725325) % 0x708) ^ 0x90;
  unsigned int v91 = (v89 - 1952092211 - ((2 * v89) & 0x174ADE00)) ^ 0x8BA56FCD | (v90 + 1577407487 - 2 * v90) ^ 0x5E0553FF;
  *((_DWORD *)&STACK[0x8D0] + (97 * a53 + 1613214078) % 0x55C) = a65 ^ a63 ^ a62 ^ 0x5BFF1086 ^ (v91
                                                                                               - ((2 * v91) & 0xE59B1F08)
                                                                                               + 1926074244);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 + 8LL * ((1341 * (a53 == 470427329)) ^ v68)) - 12LL))( 1577407487LL,  3453881195LL,  2047389843LL,  3364020758LL,  1502600281LL,  258814LL,  a53,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44);
}

uint64_t sub_100685D0C@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  int v63 = v61 - ((2 * v61 + 175428742) & 0x7AB9955C) - 1030277903;
  *(_DWORD *)(*a57
            + 4
            * ((v63 ^ ((a1 ^ 0xDC1F4AE4) + 1631420048) ^ 0x32AF5FBE3FF5FD67LL)
             + ((2 * (v63 ^ ((a1 ^ 0xDC1F4AE4) + 1631420048))) & 0x7FEBFACE))
            - 0x303A529F0B010836LL) = *(_DWORD *)(v60
                                                + 4LL
                                                * (v61 * v57
                                                 + 2065639343
                                                 - ((((v61 * v57 + 2065639343)
  int v64 = ((2 * v63) ^ 0x7AB9955C) - ((2 * ((2 * v63) ^ 0x7AB9955C)) & 0x361EF13C) - 1693484897;
  unsigned int v65 = (v63 ^ 0xC2A33D63) + (v64 & 0xFFFFEF9A ^ 0xFCF0F645) + ((2 * v64) & 0xCFFF1D34 ^ 0x61E1134) - 1744805599;
  return ((uint64_t (*)(void))(*(void *)(v62
                                        + 8LL
                                        * ((467 * (((2 * v65) & 0xFFEF7BEE) + (v65 ^ 0xFFF7BDF7) + 541193 < 0x100)) ^ a1))
                            - 4LL))();
}

uint64_t sub_100685E74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, int a33, int a34)
{
  int v35 = v34 + 601929759;
  unsigned int v36 = ((LOBYTE(STACK[0x378]) ^ 0x90) - 1173925125 - ((2 * (LOBYTE(STACK[0x378]) ^ 0x90)) & 0xFFFFFFF7)) ^ 0xBA0752FB | (((a34 + 1216724507) & 0xFFFFFF00) - ((2 * (a34 + 1216724507)) & 0xB0170000) + (v35 ^ 0xD80B84BD)) ^ 0xD80B8080;
  LODWORD(STACK[0x8D0]) = v36 + 165093223 - ((2 * v36) & 0x13AE3ECE);
  return ((uint64_t (*)(uint64_t, unint64_t *, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + (v35 ^ 0x7A))
                                                                                - 4))( 1372LL,  &STACK[0x8D0],  122LL,  1902203041LL);
}

void sub_1006860B8()
{
}

uint64_t sub_1006860C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * a4 - 0x657CD3A7D0AE304ELL) = *((_DWORD *)&STACK[0x8D0]
                                                      + (((v64 - 942104578) & 0x38275FFF ^ 0x45A) * a4
                                                       + 169898751)
                                                      % 0x55C);
  return ((uint64_t (*)(void))(*(void *)(a7 + 8LL * ((389 * (a4 == 1902203296)) ^ v64)) - 4LL))();
}

uint64_t sub_10068615C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, int a34, int a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v68 = *(&a66
                         + (((914 * ((-1526205693 - ((1478248148 << (v66 ^ 0x3A)) & 6)) ^ 0xA507F303)) & 0x747FFE)
                          + ((457 * ((-1526205693 - ((1478248148 << (v66 ^ 0x3A)) & 6)) ^ 0xA507F303)) ^ 0x69FA3FFF)
                          - 1777744831)
                         % 0x708);
  HIDWORD(v70) = v69 ^ 0x33;
  LODWORD(v70) = ~v69 << 24;
  int v71 = (v70 >> 31) - ((2 * (v70 >> 31)) & 0xFFFFFFBA) + 93;
  int v72 = v71 ^ (((v70 >> 31) - ((2 * (v70 >> 31)) & 0xBA) + 93) >> 4) ^ ((v71 >> 6) | 0xA8) ^ 0xF1;
  unsigned int v73 = (v72 + 100774127 - ((2 * v72) & 0x1DE)) ^ 0x601B0EF | ((a35 & 0x361CB600 ^ 0x4102027)
                                                                              + (a35 & 0xC9E34900 ^ 0x49030019)
                                                                              - 2) ^ 0xB481943E;
  unsigned int *v67 = (v73 + 1392197632 - ((2 * v73) & 0xA5F69C5E) + 3631) ^ 0x5B2C51FD;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_10090DDE0 + v66))( 2768761603LL,  4294967226LL,  100774127LL);
}

void sub_100686380()
{
}

uint64_t sub_100686388( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v65 - 0x657CD3A6EE9B72BALL) = *((_DWORD *)&STACK[0x8D0]
                                                       + (97 * (int)v65 + 1952826692) % (v64 + 1023));
  return (*(uint64_t (**)(void))(v66 + 8LL * ((1520 * (v65 != 953984315)) ^ v64)))();
}

uint64_t sub_1006863FC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(&a65 + (457 * v65 + 160014708) % 0x708u) = *(&a65
                                               + (457
                                                * (((2
                                                   * (*(&a65 + (457 * v65 + 160014708) % 0x708u) ^ 0x80)) & 0x1D2)
                                                 + (*(&a65 + (457 * v65 + 160014708) % 0x708u) ^ 0x6F5FBD79u))
                                                + 773898071)
                                               % 0x708);
  int v68 = *(uint64_t (**)(void))(v67 + 8LL * ((v65 != 206410603) | v66));
  *(&a65 + (457 * v65 + 160135356) % 0x708u) = *(&a65
                                               + (457
                                                * (((2
                                                   * (*(&a65 + (457 * v65 + 160135356) % 0x708u) ^ 0x80)) & 0x1CA)
                                                 + (*(&a65 + (457 * v65 + 160135356) % 0x708u) ^ 0x7DFE6F75u))
                                                + 348945267)
                                               % 0x708);
  return v68();
}

uint64_t sub_1006864E8@<X0>(int a1@<W8>)
{
  *(_BYTE *)(v5
           + v1 * a1
           + 213021379
           - ((((v1 * a1 + 213021379) * (unint64_t)v2) >> 32) >> 10) * __chkstk_darwin(v3, v4) = *(_BYTE *)(v5 + v1 * a1 + 213259019 - ((((v1 * a1 + 213259019) * (unint64_t)v2) >> 32) >> 10) * v4);
  return (*(uint64_t (**)(void))(v6 + 8LL * ((975 * (((207 * (v3 ^ 0x15F)) ^ 0x26C) + v1 == 1465650197)) ^ v3)))();
}

uint64_t sub_100686568( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, int a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v67 = ((LOBYTE(STACK[0x378]) ^ 0x90) - 1489802038 - ((2 * (LOBYTE(STACK[0x378]) ^ 0x90)) & 0x194)) ^ 0xA7336CCA | (((785963591 - a34) & 0xFFFFFF00) - ((2 * (785963591 - a34)) & 0x871AB400) + 1133337107) ^ 0x438D5A13;
  *((_DWORD *)&STACK[0x8D0] + (1406601116 * (v65 - 524) + 998645220) % 0x55Cu) = v67
                                                                               + 165093223
                                                                               - ((2 * v67) & 0x13AE3ECE);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8LL * v65))( 2443359173LL,  1800LL,  &a65,  144LL,  404LL,  998645220LL,  3205573259LL,  1372LL);
}

void sub_100686694()
{
}

uint64_t sub_10068669C@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  int v60 = *((_DWORD *)&STACK[0x8D0] + (((v57 + 712809799) & 0xD5835DFD ^ 0x1FD) * v58 + 353603918) % 0x55C);
  HIDWORD(v61) = v58 + 57609538;
  LODWORD(v61) = v58 - 881914558;
  int v62 = a1 + (v61 >> 27) - ((2 * (v61 >> 27)) & 0xC0A7A05E) + 15;
  HIDWORD(v61) = v62 ^ 0xF;
  LODWORD(v61) = v62 ^ a1;
  int v63 = ((2 * (v61 >> 5)) & 0xA7DDDDA6) + ((v61 >> 5) ^ 0x53EEEED3);
  *(_DWORD *)(((4LL * (v63 - 1346380417)) | ((unint64_t)((v63 - 1346380417) < 0x3AECC52) << 34))
            + *a57
            - 0x657CD3A619E443E2LL) = v60;
  return (*(uint64_t (**)(void))(v59 + 8LL * ((50 * ((v63 - 1408167942) < 0x100)) ^ v57)))();
}

uint64_t sub_1006867BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, int a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v68 = v66 ^ 0x14;
  unsigned int v69 = ((LOBYTE(STACK[0x370]) ^ 0x90) - 2102334395 - ((2 * LOBYTE(STACK[0x370])) & 0x8A)) ^ 0x82B0EC45 | ((a35 & 0xFFFFFF00 ^ 0x881F7F00 | 0xA14CA8E4) - (a35 & 0xFFFFFF00 ^ 0x881F7F00 | 0x5EB3571B) + 1588811547) ^ v68 ^ 0xCAA8156C;
  *int v65 = v69 + 165093223 - ((2 * v69) & 0x13AE3ECE);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v67
                                                                                                 + 8LL * (v68 ^ 0x14)))( 2574305985LL,  1679083369LL,  2443359173LL,  1800LL,  &a65,  144LL,  138LL);
}

void sub_1006868E0()
{
}

uint64_t sub_1006868E8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a64 + 4 * v66 - 0x657CD3A7188A51A6LL) = *((_DWORD *)&STACK[0x8D0]
                                                       + (97 * (int)v66 + 2072522601) % ((v65 + 284) ^ 0x7F8u));
  return (*(uint64_t (**)(void))(v67 + 8LL * ((1957 * (v66 + 1 == v64 + 256)) ^ v65)))();
}

uint64_t sub_100686954@<X0>( __int16 a1@<W8>, uint64_t a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57)
{
  *a3 = 1461298233;
  int v61 = v58 ^ 0x480;
  unsigned int v62 = (((4424 * ((v61 - 896) ^ 0x24E)) & 0xDFF3FFF8) + ((2212 * ((v61 - 896) ^ 0x24E)) ^ 0xEFF9FFFE) + 272239578)
      % 0x97F;
  *(_DWORD *)(v57
            + 4LL
            * ((unsigned __int16)((((2 * ~*(unsigned __int8 *)(v60 + v62)) & 0x7C)
                                 + (*(unsigned __int8 *)(v60 + v62) ^ 0xFB81))
                                * a1
                                + 16174)
             % 0x55Cu)) = *(_DWORD *)(*a57 - 0x657CD3A60B29129ALL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v59
                                                     + 8LL
                                                     * ((106 * ((v61 + 1227028743) > 0x4922FE2C)) ^ v61)))( 198376LL,  2062123892LL);
}

void sub_100686B38()
{
}

uint64_t sub_100686B40@<X0>( int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, unsigned int a5@<W5>, uint64_t a6@<X6>, int a7@<W7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  int v75 = (((a63 + v71 + 106) & ((v73 + 558) ^ a4)) + v68 - (a61 & a3)) ^ v68;
  unsigned int v76 = ((v75 * v67) & a1) + ((v75 * a8) ^ a2) + v72;
  int v77 = *(_DWORD *)(v66 + 4LL * (v76 - (((v76 * (unint64_t)a5) >> 32) >> 10) * v70));
  if (__CFADD__(a63, v71)) {
    unint64_t v78 = v74;
  }
  else {
    unint64_t v78 = 0LL;
  }
  *(_DWORD *)(*a66 + 4 * ((a63 + v71) | v78) + a6) = v77;
  unsigned int v79 = v69 + a63 + 2;
  BOOL v81 = v79 > v69 && a65 - 1136187326 > v79;
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + ((v81 * a7) ^ (v73 + 273))) - 8))();
}

void sub_100686BF4()
{
}

uint64_t sub_100686C00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  return (*(uint64_t (**)(void))(v64 + 8LL * ((726 * ((((v63 - 690) | 0x84) ^ 0x95DD56D5) + a63 > 0x2FC69580)) ^ v63)))();
}

void sub_100686C48()
{
}

uint64_t sub_100686C70(uint64_t result)
{
  uint64_t v1 = 1856021207 * ((((2 * result) | 0x4840409B3328D17ELL) - result + 0x5BDFDFB2666B9741LL) ^ 0x4934B7D6D7FDBE41LL);
  int v2 = *(_DWORD *)(result + 12) - v1;
  unint64_t v3 = *(void *)(result + 24) ^ v1;
  unint64_t v4 = *(void *)(result + 16) + v1;
  int v5 = *(_DWORD *)(result + 36) ^ v1;
  int v6 = *(_DWORD *)(result + 4) ^ v1;
  int v7 = *(_DWORD *)(result + 8) ^ v1;
  BOOL v8 = v4 == v3;
  BOOL v9 = v4 > v3;
  int v10 = v8;
  if ((v5 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (!v9) {
    int v2 = v6;
  }
  *(_DWORD *)uint64_t result = v7 ^ v2;
  return result;
}

void sub_100686D0C(uint64_t a1)
{
  __asm { BR              X13 }

void sub_100686DC8(uint64_t a1@<X8>)
{
  unsigned int v6 = ((v7 & 0xBE9DF940 | ~(v7 | 0xBE9DF940)) ^ 0x52F8FAFC) * v1;
  memset(v7, 0, sizeof(v7));
  uint64_t v8 = v2;
  __int128 v9 = 0u;
  unsigned int v11 = v6 ^ 0xF60457FA;
  int v12 = (v3 + v4) ^ v6;
  uint64_t v13 = a1;
  sub_100558830((uint64_t)v7);
  _DWORD *v5 = v10;
}

void sub_100686EC8(void *a1)
{
  if (a1[4]) {
    BOOL v1 = a1[1] == 0LL;
  }
  else {
    BOOL v1 = 1;
  }
  int v3 = !v1 && a1[2] != 0LL;
  __asm { BR              X12 }

void sub_100686F70(uint64_t a1@<X8>)
{
  uint64_t v14 = 0x40AF9B25784C106DLL;
  v7[0] = 0LL;
  v7[1] = &v6;
  uint64_t v9 = v2;
  uint64_t v10 = 0LL;
  unsigned int v5 = 562267567
     * (((v7 ^ 0x5A23AF60 | 0xAF18922F)
  void v7[3] = 0LL;
  uint64_t v8 = v1;
  unsigned int v12 = v5 ^ 0x9B9D4101;
  int v13 = (v3 + 543) ^ v5;
  _DWORD v7[2] = a1;
  sub_100558830((uint64_t)v7);
  *(_DWORD *)(v4 + 4) = v11;
}

void sub_10068703C(_DWORD *a1)
{
  unsigned int v1 = 230600693 * (a1 ^ 0xD23C862B);
  int v2 = *a1 ^ v1;
  int v3 = (char *)*(&off_10090DDE0
               + ((14
                 * (((malloc( ((a1[7] + v1 - 502926590) & 0xFFFFFFF0 ^ 0x5F3FFFED)
                      + ((2 * (a1[7] + v1 - 502926590)) & 0xBE7FFFC0)
  __asm { BR              X9 }

uint64_t sub_10068710C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * ((135 * (v1 + 1317161423 == (((a1 | 0x204) + 3) | 1) + 1820087484)) ^ (a1 | 0x204))))();
}

uint64_t sub_100687180@<X0>(int a1@<W8>)
{
  BOOL v12 = v7 < v6;
  uint64_t v13 = (v1 + a1);
  *(_BYTE *)(v10 + vqmemcpy(v1, "/ProvenanceV2", 13) = *(_BYTE *)(v2 + (v13 & 0xF)) ^ *(_BYTE *)(*(void *)(v9 + 16) + v13) ^ *(_BYTE *)(v3 + (v13 & 0xF)) ^ (-39 * ((v1 + a1) & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v4 + 2);
  if (v12 == v1 + 118821484 < v6) {
    LOBYTE(v1fseek(v0, 0LL, 2) = v1 + 118821484 < v7;
  }
  return (*(uint64_t (**)(void))(v11 + 8LL * (((((v5 + 4) ^ v12) & 1) * v8) ^ v5)))();
}

uint64_t sub_10068720C@<X0>(int a1@<W8>)
{
  *(_BYTE *)(v7 + (v1 + a1)) = *(_BYTE *)(v2 + ((v1 + a1) & 0xFLL)) ^ *(_BYTE *)(v3 + ((v1 + a1) & 0xFLL)) ^ (-39 * ((v1 + a1) & 0xF)) ^ *(_BYTE *)(v4 + ((v1 + a1) & 0xFLL) + ((v5 - 1324742450) & 0x4EF5F7BF ^ 0x29DLL)) ^ 0x80;
  BOOL v9 = v1 + 396607366 < (v6 + 499844106);
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((14 * !v9) | v5)) - 8LL))();
}

uint64_t sub_1006872C0@<X0>(unsigned int a1@<W0>, int a2@<W8>)
{
  BOOL v12 = a1 < v7;
  int v13 = v2 + 1;
  *(_BYTE *)(v10 + (v13 + a2)) = *(_BYTE *)(v4 + ((v13 + a2) & 0xFLL)) ^ *(_BYTE *)(v3
                                                                                                + ((v13 + a2) & 0xFLL)) ^ *(_BYTE *)((((_BYTE)v13 + (_BYTE)a2) & 0xF) + v5 + 2) ^ (((v13 + a2) & 0xF) * v9);
  if (v12 == v13 + v8 < v7 + 61 * (v6 ^ 0x21A) - 671) {
    BOOL v12 = v13 + v8 < a1;
  }
  return ((uint64_t (*)(void))(*(void *)(v11 + 8LL * ((14 * !v12) | v6)) - 8LL))();
}

uint64_t sub_10068734C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v8
                                                                                                  + 8LL * (v5 ^ (93 * (v7 == &unk_10072FF55))))
                                                                                      - 4LL))( a1,  a2,  a3,  a4,  a5,  ((v6 << (v5 ^ 0x9E)) & 0xD5D7FBC0) + (v6 ^ 0x6AEBFDEC));
}

uint64_t sub_10068739C@<X0>(int a1@<W5>, int a2@<W8>)
{
  unsigned int v6 = (v3 + 1268886816) & 0xB45E517D;
  *(void *)(v5 - 144) = 0xCCB769911B6BC4BCLL;
  *(void *)(v5 - 136) = 0xEBFA5C68B745F81DLL;
  *(void *)(v5 - 12_Block_object_dispose(va, 8) = 0xCCB769911B6BC4BCLL;
  *(void *)(v5 - 120) = 0xEBFA5C68B745F81DLL;
  int v7 = 14 * (v6 ^ 0x160);
  *(_DWORD *)(v5 - 216) = v7;
  BOOL v9 = ((v2 + (_BYTE)v7 - 18) & 0xF) == 0 && a1 != a2;
  return ((uint64_t (*)(void))(*(void *)(v4 + 8LL * (int)((1106 * v9) ^ v6)) - 4LL))();
}

uint64_t sub_100687440( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34)
{
  *(void *)(v36 - 200) = v34;
  uint64_t v37 = v35[8];
  int v38 = byte_100733150[v37 ^ 0x17];
  LODWORD(v37) = (v37 ^ 0xFFFFFFD6) + 1;
  LODWORD(v37) = (v37 ^ 0x7C)
               + v38
               + 8 * (v37 >> 2)
  LODWORD(v37) = ((((v37 ^ 0x56) - ((2 * (v37 ^ 0x56)) & 0xFFFFFFFB)) << 24) + 2097152000) ^ 0x7D000000;
  unsigned int v39 = byte_100733150[v35[12] ^ 0xF0LL] + (((v35[12] ^ 0x31) + 1) ^ 0x79) + ((2 * ((v35[12] ^ 0x31) + 1)) & 0xFFFFFFF3);
  LODWORD(v37) = (v37 - ((2 * v37) & 0x24000000) + 316206945) ^ 0x12D8EF61 | ((byte_1007413B0[v35[11] ^ 0xFALL]
                                                                                              + 60)
                                                                            - ((2
                                                                              * (byte_1007413B0[v35[11] ^ 0xFALL] + 60)) & 0xD0)
                                                                            - 373248152) ^ 0xE9C0AF68;
  int v40 = v37 - ((2 * v37) & 0x775A33C6) + 1001200099;
  HIDWORD(v41) = byte_100734390[v35[9] ^ 0xECLL];
  LODWORD(v41) = (HIDWORD(v41) ^ 0x10) << 24;
  LODWORD(v37) = (v39 - ((2 * (_BYTE)v39 + 6) & 0x7C) - 127) ^ 0x4E;
  LODWORD(v37) = ((((_DWORD)v37 - ((2 * (_DWORD)v37) & 0xB2)) << 24) + 1493172224) ^ 0x59000000;
  LODWORD(v37) = (v37 - ((2 * v37) & 0xC7FFFFFF) - 480375683) ^ 0xE35E0C7D | ((byte_1007413B0[v35[15] ^ 0xE1LL]
                                                                                              + 60)
                                                                            - ((2
                                                                              * (byte_1007413B0[v35[15] ^ 0xE1LL] + 60)) & 0x100)
                                                                            + 1071382144) ^ 0x3FDBFE80;
  int v42 = ((v41 >> 27) - ((2 * (v41 >> 27)) & 0xF0) - 8) ^ 0x62;
  int v43 = ((((~(2 * v42) | 0xFEAB) + v42) << 16) + 1856700416) ^ 0x6EAA0000;
  int v44 = v40 ^ 0x3BAD19E3 | (v43 - ((2 * v43) & 0x2D40000) + 1567233095) ^ 0x5D6A1447;
  unsigned int v45 = v44 - ((2 * v44) & 0xC92D7042);
  unsigned int v46 = byte_100733150[*v35 ^ 0x70LL] + (*v35 ^ 0xFFFFFFB1) - 68;
  unsigned int v47 = (((2 * v46) & 0xFFFFFFEF)
       + (v46 ^ 0xFFFFFFF7)
       - ((2 * (((2 * v46) & 0xFFFFFFEF) + (v46 ^ 0xFFFFFFF7)) + 20) & 0x86)
       - 51) ^ 0x1E;
  int v48 = (((v47 - ((2 * v47) & 0xFC)) << 24) + 2113929216) ^ 0x7E000000;
  uint64_t v49 = v35[4];
  unsigned int v50 = (v48 - ((2 * v48) & 0x78000000) - 1137880178) ^ 0xBC2D538E | ((byte_1007413B0[v35[3] ^ 0xABLL]
                                                                                      + 60)
                                                                    - ((2 * (byte_1007413B0[v35[3] ^ 0xABLL] + 60)) & 0xD2)
                                                                    - 963173271) ^ 0xC6972469;
  int v51 = (v49 ^ ((v49 ^ 0x3B) - ((2 * (v49 ^ 0x3B) + 2) & 6) + 20) ^ ((v49 ^ 0x2B)
                                                                                    - ((2 * (v49 ^ 0x2B) + 2) & 0xFFFFFFE7)
                                                                                    + 116) ^ 0xFFFFFFA4)
      + 16;
  unsigned int v52 = byte_100733150[v49 ^ 0xFA] + (v51 ^ 0xD) - ((2 * v51) & 0xFFFFFFE4) + 1;
  HIDWORD(v41) = byte_100734390[v35[5] ^ 0x86LL];
  LODWORD(v41) = (HIDWORD(v41) ^ 0x10) << 24;
  unsigned int v53 = ((((((v41 >> 27) + (~(2 * (v41 >> 27)) | 0x73) + 71) ^ 0xD7)
  int v54 = (v52 - ((2 * v52 + 92) & 0x94) + 120) ^ 0x51;
  unsigned int v55 = (((v54 - ((2 * v54) & 0xBC)) << 24) - 570425344) ^ 0xDE000000;
  unsigned int v56 = (v55 - ((2 * v55) & 0xAAAAAAAA) - 716119292) ^ 0xD550E304 | (v53 - ((2 * v53) & 0x4F8E0000) + 1741106588) ^ 0x67C72D9C;
  int v57 = byte_10073CD70[v35[10] ^ 0x53LL] ^ 0xF;
  int v58 = (((v57 - ((2 * v57) & 0x1A8)) << 8) + 1844761600) ^ 0x6DF4D400;
  unsigned int v59 = (v45 - 459884511) ^ 0xE496B821 | (v58 - ((2 * v58) & 0xFEEBA00) - 940089907) ^ 0xC7F75DCD;
  int v60 = byte_1007413B0[v35[7] ^ 0x62LL];
  int v61 = (v60 - 2 * ((v60 + 28) & 0x13 ^ v60 & 1) + 78) ^ 0xE8;
  unsigned int v62 = (v56 - ((2 * v56) & 0x70AA0548) - 1202388316) ^ 0xB85502A4 | (v61
                                                                    - ((2 * v61) & 0xDA)
                                                                    - 952855699) ^ 0xC734936D;
  HIDWORD(v41) = byte_100734390[v35[13] ^ 0x77LL];
  LODWORD(v41) = (HIDWORD(v41) ^ 0x10) << 24;
  unsigned int v63 = ((((((v41 >> 27) - ((2 * (v41 >> 27)) & 0x64) - 78) ^ 0x15)
  LODWORD(v37) = (v63 - ((2 * v63) & 0x7BC60000) + 1038330183) ^ 0x3DE3A947 | (v37
                                                                             - ((2 * v37) & 0xB9AA749E)
                                                                             + 1557477967) ^ 0x5CD53A4F;
  int v64 = byte_10073CD70[v35[6] ^ 0xCDLL] ^ 0xD2;
  unsigned int v65 = (((v64 - ((2 * v64) & 0x16C)) << 8) - 1465993728) ^ 0xA89EB600;
  unsigned int v66 = (v62 - ((2 * v62) & 0x160E42BC) + 185016670) ^ 0xB07215E | (v65 - ((2 * v65) & 0x624CF400) - 1322878447) ^ 0xB1267A11;
  int v67 = byte_10073CD70[v35[2] ^ 0xD4LL] ^ 6;
  int v68 = (((v67 - ((2 * v67) & 0x16)) << 8) + 1931152128) ^ 0x731B0B00;
  int v69 = v35[1];
  unsigned int v70 = ((2 * (v69 ^ 0x55)) & 0xFFFFFFEF) + (v69 ^ 0x77F5F7AA);
  int v71 = (v69 ^ 0x10) - ((2 * v69) & 0x98) + 286421836;
  *(void *)(v36 - 20_Block_object_dispose(va, 8) = v35;
  uint64_t v72 = v35[14];
  HIDWORD(v41) = byte_100734390[(v71 ^ (912805451 - v70 - ((1877733512 - 2 * v70) & 0x7CE4AC0E)) ^ 0x753E3397 ^ ((v71 ^ 0xEEED8CB3) - ((2 * (v71 ^ 0xEEED8CB3) + 2) & 0xB4BC2DB8) - 631367971))
                              + 77];
  LODWORD(v41) = (HIDWORD(v41) ^ 0x10) << 24;
  *(_DWORD *)(v36 - 22_Block_object_dispose(va, 8) = v66 + 1381575640;
  *(_DWORD *)(v36 - 224) = (2 * v66) & 0xA4B257B0;
  unsigned int v73 = (v68 - ((2 * v68) & 0x6FEEFA00) - 134775364) ^ 0xF7F77DBC | (v50 - ((2 * v50) & 0x64154610) - 1307925752) ^ 0xB20AA308;
  unsigned int v74 = ((((((v41 >> 27) - ((2 * (v41 >> 27)) & 0x76) + 59) ^ 0xEF)
  unsigned int v75 = (v74 - ((2 * v74) & 0x1F720000) + 1337584507) ^ 0x4FB9EB7B | (v73 - ((2 * v73) & 0xB18B13E) - 2054399841) ^ 0x858C589F;
  int v76 = byte_10073CD70[v72 ^ 0x4E] ^ 0xB7;
  unsigned int v77 = (((v76 - ((2 * v76) & 0x196)) << 8) - 609563904) ^ 0xDBAACB00;
  LODWORD(a27) = (v77 - ((2 * v77) & 0x58146A00) - 334875359) ^ 0xEC0A3521;
  LODWORD(v37) = (v37 - ((2 * v37) & 0x26137436) - 1828079077) ^ 0x9309BA1B | a27;
  LODWORD(v37) = v37 - ((2 * v37) & 0xC69FE56C) + 1666183862;
  int v78 = ((2 * v37) ^ 0xDDB840F4) - ((2 * ((2 * v37) ^ 0xDDB840F4)) & 0xFBED564) + 668953267;
  *(_DWORD *)(v36 - 240) = (2 * v75) & 0xC3B76370;
  *(_DWORD *)(v36 - 24_Block_object_dispose(va, 8) = v75 - 505695816;
  *(_DWORD *)(v36 - 256) = (2
                          * ((((v37 ^ 0x6EDC207A) + 227791549) ^ 0x6A9DFAFB)
                           + ((2 * ((v37 ^ 0x6EDC207A) + 227791549)) & 0xD53BF5F6)
                           + (v78 & 0x1B27A57A ^ 0x807B1473)
                           + ((2 * v78) & 0x30070274 ^ 0xFFF9FF9B))
                          + 600547722) & 0xC93117FE;
  HIDWORD(a24) = a6;
  int v79 = *(_DWORD *)(v36 - 216);
  unsigned int v80 = *(_BYTE **)(v36 - 200);
  int v81 = *v80;
  *unsigned int v80 = v81 ^ 0xE5 ^ (-80 - ((82 * ((v79 - 99) ^ 0x6D) + 100) & 0x60));
  LODWORD(v49) = 2014341611 * ((v81 ^ 0x5B3FFE7D) + ((2 * v81) & 0xFA)) + 1205986300;
  LODWORD(v49) = (v49 ^ 0xF76DD973) + 143795853 + ((2 * v49) & 0xEEDBB2E6);
  unsigned int v82 = v49 % 0x101 - ((2 * (v49 % 0x101)) & 0x19C) - 72211762;
  LODWORD(v49) = ((v49 & 0x9C9C2391) - ((2 * v49) & 0x8284222) + 1182267705) ^ 0x5A10AC6 ^ (((2
                                                                                            * (v82 & 0x191 ^ 0x18EE1115)) | 0xB671C4D4)
                                                                                          - (v82 & 0x191 ^ 0x18EE1115)
                                                                                          - 1530454634) | ((v49 & 0x6363DC6E) - ((2 * v49) & 0x44411098) + 984386013) ^ 0x972BFEA7 ^ (((2 * (v82 & 0x6E ^ 0x5B3004F)) & 0xB060008) - (v82 & 0x6E ^ 0x5B3004F) - 1472956549);
  LODWORD(v49) = ((v49 - ((2 * v49) & 0x16ECF4E) - 2135464025) ^ 0x70542DCE) - 828153160;
  LODWORD(v49) = (v49 ^ 0xF4787DDE) + 2078559509 + ((2 * v49) & 0xE8F0FBBC) + 193430050;
  LODWORD(v49) = v49 - ((2 * v49) & 0x417BA6FE) - 1598172289;
  unsigned int v83 = (((v49 ^ 0x641C2D59) - 1711921770 - ((2 * (v49 ^ 0x641C2D59)) & 0x33EC4B2C)) ^ 0x99F62596) >> 31;
  unsigned int v84 = ((2 * v83) & 0xFFF3B99E) + (v83 ^ 0x7FF9DCCF);
  unsigned int v85 = (((2 * (v84 + 49)) & 0x1BE) + ((v84 + 49) ^ 0x897B6FDF) + 1988399137) % 0xBD;
  unsigned int v86 = v84 + (v85 ^ 0xFFFFFF0C) - ((2 * v85) & 0xE6) + 37;
  int v87 = ((2 * v85) & 0x1EC) + (v85 ^ 0x71FCE7F6) + ((2 * v86) & 0x1F8);
  int v88 = (v49 ^ 0x641C2D59) + 937923721 + (~(2 * ((v49 ^ 0x641C2D59) - 253539735)) | 0x71F76BBF) + 1;
  int v89 = (v87
       + (v86 ^ 0x6DE72FFC)
  int v90 = v88 ^ 0x47044A20;
  int v91 = 2 * (((v89 ^ 0x35141DCB) & v90) - ((2 * ((v89 ^ 0x35141DCB) & v90)) & 0xA9817B0)) + 177739696;
  unsigned int v92 = (v88 ^ 0x721057EB ^ v89) + (v91 ^ 0x41476251) - 1272935905 + ((2 * v91) & 0x97BEEBC0 ^ 0x15302B40);
  int v93 = v49 ^ 0x35FCA098 ^ ((v49 ^ 0x641C2D59) - 48892597 - ((2 * ((v49 ^ 0x641C2D59) - 828153160)) & 0x5CE52526)) ^ 0x49BE6F9 ^ (v92 - ((2 * v92) & 0x1DB697C) + 15578302);
  BOOL v95 = (a6 - 1188583344) < 0x2413A63C || (a6 - 1188583344) > 0x2413A63D;
  int v94 = v93 - ((2 * v93 + 473760050) & 0x17F9D8A2) + 1243311338;
  unsigned int v96 = ((4 * v94) & 0xBE8DCFBC ^ 0xD17E7EFB)
      + ((2 * v94) ^ 0x3740C083)
      + (((v94 ^ 0x8BFCEC51) + v90) ^ 0x7EBD0FFF)
      + ((2 * ((v94 ^ 0x8BFCEC51) + v90)) & 0xFD7A1FFE);
  LODWORD(a31) = (v59 - ((2 * v59) & 0x664ABC86) + 858086979) ^ 0x820978A6;
  return ((uint64_t (*)(_UNKNOWN **, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((78 * !v95) ^ v79)) - 12))( &off_10090DDE0,  4024484104LL,  4193770669LL,  177739696LL,  v96 - ((2 * v96 + 1091809218) & 0x56C49876) + 200025116,  (v79 - 611),  779260563LL,  605267516LL,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34);
}

void sub_1006883FC()
{
}

uint64_t sub_100688408()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((20 * (v0 ^ 0x11F)) ^ (100
                                                                * ((v2 ^ 0x7FEF6FBF) - 1475013058 + (v1 & 0xFFDEDF60) != 671385085))))
                            - 4LL))();
}

uint64_t sub_10068ED04@<X0>(int a1@<W8>)
{
  BOOL v11 = v5 < v4;
  if (v11 == v7 - 180039564 < v4) {
    BOOL v11 = v7 - 180039564 < v5;
  }
  unsigned int v13 = (((v9 + v7 - 851424650) ^ *(_DWORD *)(*(void *)(v3 + 696) + (*(_DWORD *)(v2 + 1216) & v1))) & 0x7FFFFFFF) * a1;
  BOOL v12 = (_BYTE *)(v9 + (v7 | ((unint64_t)(v7 < ((v8 + 1174419611) | 0x10A580ACu) - 602277477) << 32)) - 851424650);
  *v12 ^= byte_10073E400[(v7 - 851424650) & 0xF | (16 * (((v13 ^ HIWORD(v13)) * a1) >> 24))] ^ (-123 * (v13 ^ BYTE2(v13)));
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * ((v11 * v6) ^ v8)) - 4LL))();
}

uint64_t sub_10068EDE4()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (v0 ^ 0x56A5BAB1 ^ ((((v0 + 16) ^ (((v1 - v0) | (v0 - v1)) < 0)) & 1)
                                                            * (((v0 - 1782254588) & 0x139552BF) - 490))))
                            - 12LL))();
}

uint64_t sub_10068EE48@<X0>(int a1@<W8>)
{
  uint64_t v9 = (char *)(v7 + (v5 - 1598029805));
  char v10 = *v9;
  unint64_t v11 = (v9 ^ (v9 >> 16)) * a1;
  **(_BYTE **)(v6 + _Block_object_dispose(va, 8) = byte_100758980[v11 >> 24] ^ v10 ^ byte_100755BF0[(v11 >> 24) + 2] ^ byte_100733A70[(v11 >> 24) + 1] ^ v11 ^ (85 * BYTE3(v11));
  return ((uint64_t (*)(uint64_t))(*(void *)(v8 + 8LL * (int)((v4 & 0xBA08FAB3) - 541)) - 12LL))(-1671917635LL);
}

void sub_10068EF30()
{
}

  ;
}

uint64_t sub_10068EF74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, int a11, int a12, int a13, int a14, int a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, unsigned __int8 a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, int a37)
{
  *(void *)(v40 - 224) = a1;
  unsigned int v41 = ((a15 ^ 0xA21793F0) - 2 * (((a15 ^ 0xA21793F0) + 17998814) & 0x1F6A85F ^ a15 & 1) + 1024019516) ^ 0xA21793F0;
  int v42 = ((v41 - 2 * ((v41 + 17998814) & 0x1F6A85F ^ a15 & 1) + 1024019516) ^ 0x81F6A85E) + v39;
  int v43 = (v42 ^ 0x36F7DFCF) - 922214351 + ((2 * v42) & 0x6DEFBF9E);
  unsigned int v44 = (((v37 & 0xD8) + (v37 & 0xFC ^ 0xFFFFFFDF) + (v37 & 0xD8 | 0x616D425)) | 1) ^ 0x2E27DC2B;
  unsigned int v45 = ((v43 & 0xFFFFFFFE) - ((2 * v43) & 0x7E97E654) - 1085541590) ^ 0xD0926859;
  unsigned int v46 = (((2 * v44) | 0xDB72ED14) - v44 - 1840871050) ^ 0x45887E88 | (-2
                                                                    - (((a10 ^ a26) & 3 | 0xFCBFFDF6)
                                                                     + ((a10 ^ a26) & 3 | 0xF36F4B39))) ^ 0xFD0B6CE;
  unsigned int v47 = ((16 - a12) & 0x20000000 ^ 0xFF7B66B7) + 2 * ((16 - a12) & 0x20000000);
  *(_DWORD *)(v40 - 22_Block_object_dispose(va, 8) = (v38 + 405) ^ 0x3FB;
  int v48 = (57 * v45 - (((-123515335 * v45) << (*(_DWORD *)(v40 - 228) - 53)) & 0x26) - 109);
  unsigned int v49 = ((v48 ^ 0xEC) - ((2 * (v48 ^ 0xEC)) & 0x1A0) - 1576126512) ^ 0xEB2F5BC5;
  int v50 = dword_100734490[(v46 - ((2 * v46) & 0x3D78483E) - 1631837153) ^ 0xC9AF66B3 ^ (-506605065
                                                                                    - (v49 | 0xE1CDD1F7)
                                                                                    + (v49 | 0x1E322E08))];
  int v51 = v50 - ((2 * v50 + 707968690) & 0x7D8428F2) - 740592686;
  unsigned int v52 = a13 ^ a17 ^ v51 ^ (((8 * v51) ^ 0xF610A3C8)
                         - 2 * (((8 * v51) ^ 0xF610A3C8) & 0x16217BD8 ^ (8 * v51) & 0x10)
                         - 1776190513);
  if (((v52 ^ 0xA0000000) & (v47 + 8689993)) != 0) {
    unsigned int v53 = 2096548686 - v47;
  }
  else {
    unsigned int v53 = v47 + 2113928672;
  }
  *(_DWORD *)(*(void *)(v40 - 224) + 4LL * (v48 ^ 0x93u)) = a37 & 0xDFFFFFFF ^ 0x497A9FA8 ^ ((v52 ^ 0xA59427A1)
                                                                                             - 2105238679
                                                                                             + v53
                                                                                             - ((2
                                                                                               * ((v52 ^ 0xA59427A1)
                                                                                                - 2105238679
                                                                                                + v53)) & 0x20CF1612)
                                                                                             + 275221257);
  return ((uint64_t (*)(void))((char *)*(&off_10090DDE0 + v38 + 405) - 4))();
}

void sub_10068F2E8()
{
}

uint64_t sub_10068F2F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, __int128 a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int a29, int a30, int a31, int a32, int a33, int a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, int a44, int a45)
{
  unsigned int v46 = (*(_DWORD *)(v45 - 228) + 1715372741) & 0x99C17AB7;
  HIDWORD(v47) = a45 ^ 0xC592;
  LODWORD(v47) = a45 ^ 0xEC600000;
  *(_DWORD *)(v45 - 22_Block_object_dispose(va, 8) = v46;
  LODWORD(v36_Block_object_dispose(va, 8) = (v47 >> 20) - ((2 * (v47 >> 20)) & 0xEE37768E) + v46 + 1998305428;
  HIDWORD(v367) = DWORD1(a24) - 1793850860;
  HIDWORD(v366) = 1788739420;
  LODWORD(v367) = -1487798272;
  LODWORD(v366) = HIDWORD(a19) ^ 0x10F98664;
  HIDWORD(a1fseek(v0, 0LL, 2) = a19 + 1;
  uint64_t v48 = (*(_DWORD *)(v45 - 228) - 691) | 0x13Du;
  *(void *)(v45 - 24_Block_object_dispose(va, 8) = v48;
  unsigned int v49 = *(unsigned __int8 **)(v45 - 200);
  int v50 = (-43 - 17 * ((v48 + 1488482844) ^ 0x55) - ((-34 * ((v48 + 1488482844) ^ 0x55)) & 0xFFFFFFAA)) ^ v49[((_DWORD)v48 + 1488482844) ^ 0x58B87355];
  int v51 = (2 * v50) ^ 0x67;
  unsigned int v52 = (4 * v50) & 0xFFFFFFBF ^ 0x73;
  int v53 = byte_100733150[v50 ^ 0x1DLL] + (v50 ^ 0x23) - 68;
  unsigned int v54 = (v53 ^ 0x77) + v51 + v52 + ((2 * v53) & 0xFFFFFFEF);
  int v55 = (v54 + 1 - 2 * ((v54 + 1) & 6 ^ (v54 + 105)) + 97) ^ 0xBB;
  int v56 = ((v55 - ((2 * v55) & 0x62)) << 24) + 822083584;
  LODWORD(v4_Block_object_dispose(va, 8) = byte_10073CD70[v49[14] ^ 0xF0];
  LODWORD(v4_Block_object_dispose(va, 8) = ((((v48 ^ 0xE4) - ((2 * (v48 ^ 0xE4)) & 0x28)) << 8) - 784985088) ^ 0xD1361400;
  int v57 = byte_1007413B0[v49[15] ^ 0xFE];
  int v58 = ((v56 ^ 0x31000000) - 1943426145 - ((2 * v56) & 0x18000000)) ^ 0x8C29AB9F | (v48
                                                                                   + 1313569040
                                                                                   - ((2 * v48) & 0x1C96F200)) ^ 0x4E4B7910;
  unsigned int v59 = v58 + 1568258813 - ((2 * v58) & 0xBAF375FA);
  int v60 = byte_10073CD70[v49[2] ^ 0x52];
  unsigned int v61 = byte_100734390[v49[5] ^ 0x98];
  HIDWORD(a27) = 9;
  unsigned int v62 = v59 ^ 0x5D79BAFD | ((v57 + 60) - 136937644 - ((2 * (v57 + 60)) & 0xA8)) ^ 0xF7D67F54;
  unsigned int v63 = v62 - 288168915 - ((2 * v62) & 0xDDA5C85A);
  unsigned int v64 = ((v61 << 6) ^ 0xFFFFFF85) - (v61 << 6) + ((32 * v61) ^ 0x7E) + 1;
  int v65 = (v49[9] ^ 0x45) - ((2 * (v49[9] ^ 0xDE)) & 0xC0) + 1107019872;
  unsigned int v66 = ((((v60 ^ 0xCE) - ((2 * (v60 ^ 0xCE)) & 0x104)) << 8) - 931036672) ^ 0xC8818200;
  int v369 = v66 - 1993903010 - ((2 * v66) & 0x124EE800);
  unsigned int v67 = (v64 + ((2 * v64 - 28) & 0xFFFFFFA8 ^ 0xF7) - 52) ^ (v61 >> 3) ^ 0xDB;
  unsigned int v68 = (((v67 - ((2 * v67) & 0x116)) << 16) - 1970601984) ^ 0x8A8B0000;
  int v69 = v68 + 1531175498 - ((2 * v68) & 0x36860000);
  HIDWORD(v47) = byte_100734390[((v65 & 0x112) - ((2 * v65) & 0x204) + 1020310442) ^ 0x2B30209B ^ ((v65 & 0xED ^ 0x10422025)
                                                                                                 - ((2 * (v65 & 0xED ^ 0x10422025)) & 0x44052)
                                                                                                 + 128103225)];
  LODWORD(v47) = (HIDWORD(v47) ^ 0x10) << 24;
  uint64_t v70 = (v49[8] - ((2 * v49[8]) & 0x52) - 1249833431) ^ 0x6A1B5F7u;
  LODWORD(v70) = (((v70 ^ 0x25) + 1) ^ 0x71)
               + ((2 * ((v70 ^ 0x25) + 1)) & 0xFFFFFFE3)
               + byte_100733150[v70 ^ 0xB320BBE4LL];
  int v71 = v49;
  unsigned int v72 = ((((((v47 >> 27) - ((2 * (v47 >> 27)) & 0x30) - 104) ^ 0xC1)
  LODWORD(v70) = (v70 - ((2 * v70 - 106) & 0xC6) + 46) ^ 0xE7;
  LODWORD(v70) = (((_DWORD)v70 - ((2 * (_DWORD)v70) & 0x92)) << 24) - 922746880;
  LODWORD(v70) = ((v70 ^ 0xC9000000) + 77919931 - ((2 * v70) & 0x8000000)) ^ 0x4A4F6BB | (v72
                                                                                        - 129286495
                                                                                        - ((2 * v72) & 0x70960000)) ^ 0xF84B3EA1;
  unsigned int v73 = (((v49[4] ^ 0xEB01DD99) + 1) ^ 0xFFFFFFE7)
      + ((2 * ((v49[4] ^ 0xEB01DD99) + 1)) & 0xFFFFFFCF)
      + byte_100733150[v49[4] ^ 0x58LL];
  int v74 = (v73 - ((2 * v73 - 86) & 0xEA) + 74) ^ 0x28;
  unsigned int v75 = (((v74 - ((2 * v74) & 0x4C)) << 24) - 1509949440) ^ 0xA6000000;
  int v76 = (v75 + 181053977 - ((2 * v75) & 0x14000000)) ^ 0xACAAA19 | v69 ^ 0x5B43E24A;
  HIDWORD(a25) = 6;
  LOBYTE(v7fseek(v0, 0LL, 2) = v49[6];
  int v77 = byte_1007413B0[(v49[3] - ((2 * v49[3]) & 0x17C) + 1069429694) ^ 0x3FBE3331];
  LOBYTE(v75) = v77 + 60;
  LODWORD(v49) = v49[11];
  int v78 = v77 + 60 - ((2 * (v77 + 60)) & 0x40);
  LOBYTE(v77) = v72 ^ 0xB1;
  unsigned int v79 = ((2 * (_DWORD)v49) & 0x194) + (v49 ^ 0xE6F6FBCA);
  unsigned int v80 = (((2 * (v49 & 0x4E969245 ^ 0x40)) & 0x88888888) - (v49 & 0x4E969245 ^ 0x40) - 69) ^ 0xFB;
  int v81 = 2 * (v80 - ((2 * v80) & 0x9A)) + 201893018;
  int v82 = byte_10073CD70[v77] ^ 0xCD;
  unsigned int v83 = (((v82 - ((2 * v82) & 0x1BC)) << 8) - 445194752) ^ 0xE576DE00;
  int v84 = (v81 ^ 0x70F40311) - v79 + 1546988528 + ((2 * v81) & 0x18114F14 ^ 0x18114914);
  unsigned int v85 = (v79 + 420021302) ^ (328262367 - v79 - ((1307441044 - 2 * v79) & 0x5933CE2A)) ^ 0x799777C6 ^ (v84 - ((2 * v84 + 462049438) & 0xAA1D21A6) + 1658042658);
  unsigned int v86 = ((v85 + 1309341184 - ((2 * v85) & 0x9C15EC00)) ^ 0x4E0AF600) + 69;
  int v87 = v86 - ((2 * v86) & 0x37BA6216) - 1680002805;
  HIDWORD(v36_Block_object_dispose(va, 8) = 13;
  HIDWORD(v47) = v87 ^ 0x1D5;
  LODWORD(v47) = v87 ^ 0x97748000;
  int v88 = (v47 >> 14) - ((2 * (v47 >> 14)) & 0x9EE149B2) + 1332782297;
  HIDWORD(v47) = v88 ^ 0x967F;
  LODWORD(v47) = v88 ^ 0x8C080000;
  unsigned int v89 = (v76 - 1704039208 - ((2 * v76) & 0x34DCD9B0)) ^ 0x9A6E6CD8 | (v83 - 2052178943 - ((2 * v83) & 0xB5C7800)) ^ 0x85AE3C01;
  char v90 = ((2 * (v71[13] ^ 0x4D)) ^ 0x52) - ((2 * ((2 * (v71[13] ^ 0x4D)) ^ 0x52)) & 0x1C) - 113;
  int v91 = byte_1007413B0[((v47 >> 18) + 736558693 - ((2 * (v47 >> 18)) & 0x57CDFDD8) + 135) ^ 0x2BE6FE65]
      + 60;
  int v92 = ((v90 & 0x10 | v90 & 0x8A ^ 0xAD) - 1) ^ 0x26;
  LODWORD(v70) = (v70 - 1283042578 - ((2 * v70) & 0x670CA5DC)) ^ 0xB38652EE | (v91
                                                                             - 751504239
                                                                             - ((2 * v91) & 0x122)) ^ 0xD334F491;
  int v93 = v70 + 1035804075 - ((2 * v70) & 0x7B7A3B56);
  HIDWORD(v47) = byte_100734390[(v71[13] ^ 0x7FDEF089)
                              + ((2 * (v71[13] ^ 0xCF973CE4)) & 0xDA)
                              + v92
                              - 2 * v92
                              - 2145316896];
  LODWORD(v47) = (HIDWORD(v47) ^ 0x10) << 24;
  LODWORD(v70) = ((((((v47 >> 27) - ((2 * (v47 >> 27)) & 0x6A) + 53) ^ 0x8A)
  LODWORD(v70) = (v70 - 580516685 - ((2 * v70) & 0x3ACC0000)) ^ 0xDD6604B3 | v63 ^ 0xEED2E42D;
  HIDWORD(v47) = byte_100734390[v71[1] ^ 0xA0];
  LODWORD(v47) = (HIDWORD(v47) ^ 0x10) << 24;
  HIDWORD(a24) = 0;
  unsigned int v94 = ((((((v47 >> 27) - ((2 * (v47 >> 27)) & 0x94) + 74) ^ 0x58)
  unsigned int v95 = (v94 - 131419702 - ((2 * v94) & 0x70540000)) ^ 0xF82AB1CA | v75 & 8;
  int v96 = (*v71 ^ 0x685C904D) + byte_100733150[*v71 ^ 0x8CLL];
  *(void *)((char *)&a24 + 4) = 7LL;
  unsigned int v97 = (1190992271 - ((v78 + 32) & 0xF7 ^ 0x20B02061 | 0x46FD198F) + ((v78 + 32) & 0xF7 ^ 0x20B02061 | 0xB902E670)) ^ 0x99B2C631 | v369 ^ 0x8927745E;
  int v98 = (v96 - ((2 * (_BYTE)v96 + 2) & 6) - 64) ^ 0xB8;
  unsigned int v99 = (((v98 - ((2 * v98) & 0xCCCCCCCC)) << 24) + 1711276032) ^ 0x66000000;
  unsigned int v100 = (v95 - 355620273 - ((2 * v95) & 0xD59B549E)) ^ 0xEACDAA4F | (v97 + 1459088279 - ((2 * v97) & 0x2DEFD72E)) ^ 0x56F7EB97;
  HIDWORD(a21) = 10;
  unsigned int v101 = (v100 + 701901464 - ((2 * v100) & 0x53AC5530)) ^ 0x29D62A98 | (v99 - 1211487373 - ((2 * v99) & 0x6E000000)) ^ 0xB7CA2B73;
  int v102 = byte_1007413B0[v71[7] ^ 0xBD] + 60;
  unsigned int v103 = (v89 - 978607360 - ((2 * v89) & 0x8B574600)) ^ 0xC5ABA300 | (v102
                                                                    + 460459664
                                                                    - ((2 * v102) & 0x120)) ^ 0x1B720E90;
  int v104 = byte_10073CD70[v71[10] ^ 0x17] ^ 0x8B;
  unsigned int v105 = (((v104 - ((2 * v104) & 0xFFFFFFEF)) << 8) - 951978240) ^ 0xC741F700;
  int v106 = v93 ^ 0x3DBD1DAB | (v105 + 96092744 - ((2 * v105) & 0xB748400)) ^ 0x5BA4248;
  int v107 = v106 - ((2 * v106) & 0x3639FEEC) - 1692598410;
  int v108 = a22 ^ HIDWORD(a22) ^ HIDWORD(a10) ^ (v101 - ((2 * v101) & 0x5B0A16CC) + 763693926);
  LODWORD(v49) = HIDWORD(a22) ^ a45 ^ a22;
  unsigned int v109 = v49 ^ a30 ^ (v103 - ((2 * v103) & 0xB49B5D76) - 632443205);
  unsigned int v110 = v49 ^ a31 ^ v107;
  HIDWORD(v47) = v108 ^ 0x708C;
  LODWORD(v47) = v108 ^ 0xD8100000;
  LODWORD(v49) = v49 ^ a34 ^ (v70 - ((2 * v70) & 0xC75B3FF4) + 1672323066);
  LODWORD(v70) = ((v47 >> 20) - ((2 * (v47 >> 20)) & 0x2E62FDC0) - 1758363936) ^ v368;
  HIDWORD(v47) = v70 ^ 0x619;
  LODWORD(v47) = v70 ^ 0x3B424000;
  unsigned int v111 = (v47 >> 12) - ((2 * (v47 >> 12)) & 0x26551908) - 1825928060;
  uint64_t v112 = *(void *)(v45 - 240);
  uint64_t v113 = *(void *)(v45 - 224);
  uint64_t v114 = *(void *)(v45 - 208);
  int v115 = *(_DWORD *)(v114 + 4LL * (BYTE2(v111) ^ 0xCFu));
  unsigned int v116 = HIWORD(v109);
  int v117 = *(_DWORD *)(v114 + 4LL * (BYTE2(v49) ^ 0x66u));
  unsigned int v118 = *(_DWORD *)(v113 + 4LL * (v49 ^ 0xD8u)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v110) ^ 0x38u)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v109) ^ 3u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v111) ^ 6));
  int v119 = *(_DWORD *)(v112 + 4LL * (BYTE1(v111) ^ 0x7Au));
  int v120 = *(_DWORD *)(a13 + 4LL * ((v49 >> 24) ^ 0x1A));
  int v121 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v109) ^ 0xA2)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v110) ^ 0x6Au)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v49) ^ 0x44u));
  LODWORD(v49) = v120 & 0x2000 ^ 0x73BFFFDA;
  unsigned int v122 = *(_DWORD *)(v113 + 4LL * (((v47 >> 12) - ((2 * (v47 >> 12)) & 8) - 124) ^ 0xF6u)) ^ v121;
  int v123 = (_DWORD)v49 - 268639240;
  int v124 = v117 ^ *(_DWORD *)(v113 + 4LL * (v109 ^ 0xEDu));
  int v125 = (_DWORD)v49 - 1941954522;
  int v126 = v124 ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v110) ^ 0xDE));
  int v127 = *(_DWORD *)(v112 + 4LL * (BYTE1(v109) ^ 0x24u));
  int v128 = *(_DWORD *)(v113 + 4LL * (v110 ^ 0x1Bu));
  unsigned int v129 = v119 ^ v126;
  unsigned int v130 = ((v120 & 0xFFFFDFFF ^ 0xB2B553EC)
        + (v120 & 0x16008A3F ^ 0x4008813)
        - ((v120 & 0xFFFFDFFF ^ 0xB2B553EC) & 0x16008A3F)) ^ 0x9425BFD;
  int v131 = ((2 * v130) | 0x4A9174) - v130 - 2443450;
  int v132 = -679697492 - (_DWORD)v49;
  if ((v125 & (v115 ^ 0x10221880)) == 0) {
    int v132 = v123;
  }
  int v133 = v128 ^ v127 ^ v131 ^ ((v115 ^ 0x59235AE6)
                             - 1673315282
                             + v132
                             - ((2 * ((v115 ^ 0x59235AE6) - 1673315282 + v132)) & 0x41DFFD4C)
                             + 552599206);
  int v134 = *(_DWORD *)(v114 + 4LL * (BYTE2(v122) ^ 5u));
  unsigned int v135 = v134 & 0x40000000 | ((v134 & 0x40000000u) >> 30 << 31);
  unsigned int v136 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v118) ^ 0xDA)) ^ 0xCE2DFE11;
  int v137 = ((v135 + 0x40000000) & v136) + 1096709769 - 2 * ((v135 + 0x40000000) & v136);
  int v138 = v135 | 0x3DC3BFBF;
  unsigned int v139 = v135 - 1383878765;
  unsigned int v140 = v134 & 0xBFFFFFFF;
  unsigned int v141 = ((((v133 ^ 0x77E49D98u) >> (v116 & 0x18))
         + 1125121215
         - ((2 * ((v133 ^ 0x77E49D98u) >> (v116 & 0x18))) & 0x861FF97E)) ^ 0x430FFCBF) >> (v116 & 0x18 ^ 0x18);
  unsigned __int8 v142 = v141 - ((2 * v141) & 0xE8) - 12;
  int v143 = 1799843666 - v138;
  if (v137 != 1096709769) {
    unsigned int v139 = v143;
  }
  unsigned int v144 = *(_DWORD *)(v113 + 4LL * (v133 ^ 0x98u)) ^ v140 ^ *(_DWORD *)(v112
                                                                                      + 4LL * (BYTE1(v129) ^ 0x21u)) ^ (v136 - 1837346707 + v139 - ((2 * (v136 - 1837346707 + v139)) & 0x9EB1BE34) + 1331224346);
  int v145 = *(_DWORD *)(v113 + 4LL * (v118 ^ 0xADu));
  int v146 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v122) ^ 0x2B)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v129) ^ 0xDu));
  unsigned int v147 = *(_DWORD *)(v112 + 4LL * (BYTE1(v118) ^ 0x99u)) ^ *(_DWORD *)(v113 + 4LL * (v122 ^ 0x2Du)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v129) ^ 0x51)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v133) ^ 0xE4u));
  int v148 = *(_DWORD *)(v114 + 4LL * (BYTE2(v118) ^ 0xDEu)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v122) ^ 0xC0u)) ^ *(_DWORD *)(v113 + 4LL * (v129 ^ 0x4Du)) ^ *(_DWORD *)(a13 + 4LL * (v142 ^ 0xF4u));
  unsigned int v149 = v146 ^ v145 ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v133) ^ 0x9Du));
  int v150 = (v148 ^ 0x18A3BA6A) + 1;
  v148 ^= 0x2E18E397u;
  unsigned int v151 = v148 + (v150 ^ 0x57FEF8DF) + ((2 * v150) & 0xAFFDF1BE) - 1476327647;
  unsigned int v152 = ((v151 - ((2 * v151) & 0xFF3D2A82) + 2141099329) ^ 0x80616ABD) + v148;
  unsigned int v153 = v152 - ((2 * v152) & 0xA1FB9EAE) + 1358810967;
  int v154 = *(_DWORD *)(v114 + 4LL * (BYTE2(v153) ^ 0xFDu));
  unsigned int v155 = *(_DWORD *)(v114 + 4LL * (BYTE2(v149) ^ 0xABu)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v147) ^ 0x75u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v144) ^ 0xD1)) ^ *(_DWORD *)(v113 + 4LL * (v153 ^ 0x57u));
  int v156 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v153) ^ 0x50));
  unsigned int v157 = *(_DWORD *)(v112 + 4LL * (BYTE1(v153) ^ 0xCFu)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v147) ^ 0xBEu)) ^ *(_DWORD *)(v113 + 4LL * (v144 ^ 0x25u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v149) ^ 0x15));
  unsigned int v158 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v147) ^ 0x6A)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v144) ^ 0xB5u)) ^ *(_DWORD *)(v113 + 4LL * ((v146 ^ v145 ^ *(_BYTE *)(v112 + 4LL * (BYTE1(v133) ^ 0x9Du))) ^ 0x94u)) ^ v154;
  unsigned int v159 = *(_DWORD *)(v113 + 4LL * (v147 ^ 0x4Eu)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v144) ^ 0xC3u)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v149) ^ 0xB7u)) ^ v156;
  int v160 = *(_DWORD *)(v113 + 4LL * (v159 ^ 0x38u)) ^ 0x48F54EEE;
  int v161 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v155) ^ 0xA0)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v157) ^ 0x78u)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v158) ^ 0x75u)) ^ 0x66EDAD79;
  int v162 = v160 + v161;
  unsigned int v163 = (v161 & v160) + 1091758903 + (~(2 * (v161 & v160)) | 0xFDDA2993);
  int v164 = *(_DWORD *)(v113 + 4LL * (v155 ^ 0xE0u));
  int v165 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v157) ^ 0x9B)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v158) ^ 0xDEu)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v159) ^ 0xD3u));
  unsigned int v166 = v165 & 0xA7993134;
  unsigned int v167 = ((v165 & 0x480602C1 ^ 0x3891371) + (v165 & 0x1060CC0A ^ 0x1040880B) - 1) ^ 0xDF0F1250;
  unsigned int v168 = (32223319 - (v167 | 0x1EBB057) + (v167 | 0xFE144FA8)) ^ 0x72B64ACA | v166 ^ 0x26892130;
  unsigned int v169 = v168 - 137853446 - ((2 * v168) & 0xEF910BF4);
  unsigned int v170 = v169 ^ 0xF7C885FA;
  unsigned int v171 = (v164 ^ 0x40C234EB ^ v169) + (v169 ^ 0xF7C885FA) + 1;
  int v172 = *(_DWORD *)(v112 + 4LL * (BYTE1(v155) ^ 0xB7u));
  unsigned int v173 = v164 ^ ((v164 ^ 0xB70AB111) - ((2 * (v164 ^ 0xB70AB111) + 2) & 0xE8CCD9B6) - 194614052) ^ 0xAA8F9097 ^ (v171 - ((2 * v171) & 0x2C396544) + 370979490);
  int v174 = (2 * v163) ^ 0x1271F66D;
  unsigned int v175 = (4 * v163) & 0xDF57BFFC ^ 0xFBBC5327;
  int v176 = *(_DWORD *)(v114 + 4LL * (BYTE2(v155) ^ 0xCBu));
  unsigned int v177 = v173 + v170 - ((2 * (v173 + v170)) & 0xE11F1E9C) - 259027122;
  int v178 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v159) ^ 0x16));
  unsigned int v179 = (v162 ^ 0x7ADFB9B5) + ((2 * v162) & 0xF5BF736A) + v174 + v175 + 1;
  unsigned int v180 = v179 - ((2 * v179 - 375894892) & 0xA082A0D0) + 1158510258;
  unsigned int v181 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v158) ^ 0xDF)) ^ v172 ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v159) ^ 0x9Au)) ^ *(_DWORD *)(v113 + 4LL * (v157 ^ 0xE3u));
  unsigned int v182 = v178 ^ v176 ^ *(_DWORD *)(v113 + 4LL * (v158 ^ 0x3Au)) ^ *(_DWORD *)(v112
                                                                                             + 4LL
                                                                                             * (BYTE1(v157) ^ 0xE3u));
  int v183 = *(_DWORD *)(v114 + 4LL * (BYTE2(v182) ^ 0x87u));
  int v184 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v182) ^ 0xE4));
  unsigned int v185 = *(_DWORD *)(v114 + 4LL * (BYTE2(v177) ^ 0x54u)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v181) ^ 0x4Cu)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v180) ^ 0xE6)) ^ *(_DWORD *)(v113 + 4LL * (v182 ^ 0x31u));
  unsigned int v186 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v177) ^ 0xF3)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v181) ^ 5u)) ^ 0x970EA4F7;
  unsigned int v187 = *(_DWORD *)(v112 + 4LL * (BYTE1(v182) ^ 0x7Cu)) ^ 0xF1E3098E;
  int v188 = 2 * ((v187 & v186) - ((2 * (v187 & v186)) & 0x79ECFDC6)) - 101909050;
  unsigned int v189 = ((v187 + v186) ^ 0xFFFDDFCF)
       + ((2 * (v187 + v186)) & 0xFFFBBF9E)
       + (v188 ^ 0xF8EDF8E3)
       + ((2 * v188) & 0xFDFDF5B4 ^ 0xE260E7B);
  unsigned int v190 = (v189 + 1 - 2 * ((v189 + 520166157) & 0x1E48446F ^ (v189 + 1) & 2) - 1656135815) ^ *(_DWORD *)(v113 + 4LL * (v180 ^ 0xB8u));
  int v191 = *(_DWORD *)(v114 + 4LL * (BYTE2(v180) ^ 0xFAu));
  unsigned int v192 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v181) ^ 0xDC)) ^ v183 ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v180) ^ 0x69u)) ^ *(_DWORD *)(v113 + 4LL * ((v173 + v170 - ((2 * (v173 + v170)) & 0x9C) + 78) ^ 0xEAu));
  unsigned int v193 = *(_DWORD *)(v112 + 4LL * (BYTE1(v177) ^ 0xB6u)) ^ v184 ^ *(_DWORD *)(v113
                                                                            + 4LL * (v181 ^ 0x9Eu)) ^ v191;
  int v194 = (((2 * (v193 ^ 0x78)) & 0x15E) - (v193 ^ 0x78) - 2145140656) ^ 0x61858598;
  unsigned int v195 = *(_DWORD *)(v114 + 4LL * (BYTE2(v190) ^ 0xB7u)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v192) ^ 0xC0u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v185) ^ 0xEF)) ^ *(_DWORD *)(v113 + 4LL * ((-1327576019 - (v194 | 0xB0DECC2D) + (v194 | 0x4F2133D2)) ^ 0xAE87762B));
  int v196 = *(_DWORD *)(v114 + 4LL * (BYTE2(v185) ^ 0xC9u));
  int v197 = *(_DWORD *)(v112 + 4LL * (BYTE1(v185) ^ 0x56u));
  unsigned int v198 = *(_DWORD *)(v114 + 4LL * (BYTE2(v192) ^ 0xFu)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v193) ^ 0x5Fu)) ^ *(_DWORD *)(v113 + 4LL * (v185 ^ 0x42u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v190) ^ 0x14));
  int v199 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v192) ^ 0x1E)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v193) ^ 0x90u)) ^ v197;
  int v200 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v193) ^ 0xD4)) ^ v196;
  unsigned int v201 = (v199 & 0x6A9DFF5C ^ 0x884CA48) - ((2 * (v199 & 0x6A9DFF5C ^ 0x884CA48)) & 0x80307C28) + 1081622198;
  unsigned int v202 = (-305972043 - (v199 & 0x956200A3 ^ 0x112200A2 | 0xEDC33CB5) + (v199 & 0x956200A3 ^ 0x112200A2 | 0x123CC34A)) ^ ((v201 & 0x21AB5F58 ^ 0x218B4359) + (v201 ^ 0x701CA4) - ((v201 ^ 0x701CA4) & 0x21AB5F58)) ^ *(_DWORD *)(v113 + 4LL * (v190 ^ 0xF2u));
  unsigned int v203 = v200 ^ *(_DWORD *)(v113 + 4LL * (v192 ^ 0xEFu)) ^ *(_DWORD *)(v112
                                                                                      + 4LL * (BYTE1(v190) ^ 0x86u));
  int v204 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v203) ^ 0xEA));
  unsigned int v205 = *(_DWORD *)(v112 + 4LL * (BYTE1(v203) ^ 7u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v198) ^ 0x20)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v202) ^ 0xAFu)) ^ *(_DWORD *)(v113 + 4LL * (v195 ^ 0x9Fu));
  unsigned int v206 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v195) ^ 0xE2)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v198) ^ 0x81u)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v202) ^ 0xCFu)) ^ *(_DWORD *)(v113 + 4LL * (v203 ^ 0x48u));
  unsigned int v207 = *(_DWORD *)(v114 + 4LL * (BYTE2(v203) ^ 0x1Eu)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v202) ^ 0x7A)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v195) ^ 0x14u)) ^ *(_DWORD *)(v113 + 4LL * (v198 ^ 0xEEu));
  unsigned int v208 = *(_DWORD *)(v112 + 4LL * (BYTE1(v198) ^ 0x98u)) ^ v204 ^ *(_DWORD *)(v113
                                                                            + 4LL * (v202 ^ 0x7Du)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v195) ^ 0x8Bu));
  int v209 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v205) ^ 0x5E));
  int v210 = *(_DWORD *)(v114 + 4LL * (BYTE2(v207) ^ 0xC1u));
  int v211 = (v209 & 0x100000 ^ 0x5B7E697F) + 2 * (v209 & 0x100000);
  int v212 = *(_DWORD *)(v112 + 4LL * (BYTE1(v206) ^ 0xC2u));
  unsigned int v213 = (v209 & 0xF842B1EB ^ 0x18002083) + (v209 & 0x7AD4E14 ^ 0x5800C11);
  int v214 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v207) ^ 0x60));
  int v215 = *(_DWORD *)(v113 + 4LL * (v208 ^ 0x8Cu)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v207) ^ 0xE1u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v206) ^ 0x50));
  int v216 = *(_DWORD *)(v114 + 4LL * (BYTE2(v208) ^ 0xC7u));
  int v217 = -1546349941 - v211;
  if (((v210 ^ 0x59200000) & (v211 - 1535011199))
     + 414868980
     - ((2 * ((v210 ^ 0x59200000) & (v211 - 1535011199))) & 0x31600000) == 414868980)
    int v217 = v211 - 321405043;
  int v218 = (v210 ^ 0x59235AE6) - 1213606156 + v217 - ((2 * ((v210 ^ 0x59235AE6) - 1213606156 + v217)) & 0x2BAF890C);
  int v219 = v216 ^ v214;
  unsigned int v220 = v212 ^ 0xF1E3098E;
  unsigned int v221 = v220 + (v212 ^ 0x99125286 ^ v219) + 1 - ((2 * (v220 + (v212 ^ 0x99125286 ^ v219) + 1)) & 0x414C42CE);
  int v222 = *(_DWORD *)(v112 + 4LL * (BYTE1(v208) ^ 5u));
  int v223 = *(_DWORD *)(v113 + 4LL * (v206 ^ 0x2Bu));
  unsigned int v224 = v222 ^ v223 ^ (v213 - 1) ^ (v218 + 366462086);
  unsigned int v225 = (v219 ^ ((v219 ^ 0x68F15B08) - ((2 * (v219 ^ 0x68F15B08) + 2) & 0x1F5ADA24) + 263023891) ^ (v221 + 547758439) ^ 0xB805E882)
       + v220;
  unsigned int v226 = (v225 - ((2 * v225) & 0xF894C178) + 2085249212) ^ *(_DWORD *)(v113 + 4LL * (v205 ^ 0x52u));
  int v227 = *(_DWORD *)(v114 + 4LL * (BYTE2(v206) ^ 0xD6u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v208) ^ 0xA4));
  int v228 = 2 * v226;
  int v229 = v227 ^ *(_DWORD *)(v113 + 4LL * (v207 ^ 0x53u));
  if ((v224 & 4) != 0) {
    int v231 = 4;
  }
  else {
    int v231 = 252;
  }
  unsigned int v232 = v231 + (v224 ^ 0xA62133CF);
  int v230 = (v228 ^ 0x697E5CA4) - ((2 * (v228 ^ 0x697E5CA4)) & 0x32583A14);
  unsigned int v233 = (v226 & 0x5DCB65B7 ^ 0xE3E4D154)
       + (v228 & 0xAA96CA0C ^ 0x28164804)
       + ((v230 + 1496063243) & 0x2B00C04E ^ 0x8E20003)
       + ((2 * (v230 + 1496063243)) & 0x5401808C ^ 0xEFFFFFFB)
       + 1;
  unsigned int v234 = (v233 - ((2 * v233 + 945608112) & 0x3561D240) - 1226877960) ^ v226 & 0xA2349A48;
  unsigned int v235 = v215 ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v205) ^ 0x4Fu));
  int v236 = (v215 ^ *(_BYTE *)(v114 + 4LL * (BYTE2(v205) ^ 0x4Fu))) ^ 0x55;
  unsigned int v237 = (-585233293 - (v236 | 0xDD1E0C73) + (v236 | 0x22E1F38C)) ^ 0x2265328E;
  unsigned int v238 = v229 ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v205) ^ 0xB9u));
  int v239 = *(_DWORD *)(v114 + 4LL * (BYTE2(v234) ^ 0x90u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v224) ^ 0xA6)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v238) ^ 0x65u)) ^ *(_DWORD *)(v113 + 4LL * ((((2 * v237) & 0x2DEA790) - v237 + 2123410487) ^ 0x7E146D99));
  int v240 = (v232 ^ 0xDB) + ((2 * v232) & 0xB6) + 37;
  int v241 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v234) ^ 0x38)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v235) ^ 0xDBu)) ^ *(_DWORD *)(v113 + 4LL * ((v240 + 1370044091 - ((2 * v240) & 0x176)) ^ 0x51A936BFu)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v238) ^ 0x53u));
  HIDWORD(v24fseek(v0, 0LL, 2) = v205 ^ 0x18E397;
  LODWORD(v24fseek(v0, 0LL, 2) = v205 ^ 0x2E000000;
  int v244 = (v242 >> 22) - ((2 * (v242 >> 22)) & 0x614FB262) + 816306481;
  HIDWORD(v24fseek(v0, 0LL, 2) = v244 ^ 0x304;
  LODWORD(v24fseek(v0, 0LL, 2) = v244 ^ 0x1F9DD400;
  unsigned int v245 = (v242 >> 10) - ((2 * (v242 >> 10)) & 0xD5ED1352) + 1794541993;
  int v246 = *(_DWORD *)(v113 + 4LL * (((v242 >> 10) - ((2 * (v242 >> 10)) & 0x52) - 87) ^ 0xEFu)) ^ 0x48F54EEE;
  unsigned int v247 = v214 ^ 0xCE2DFE11;
  int v248 = (v246 & v247) - ((2 * (v246 & v247)) & 0x463990D0);
  int v249 = (v246 | v247) - ((2 * (v246 | v247)) & 0x5FBE295A);
  unsigned int v250 = v222 ^ v210 ^ v223 ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v245) ^ 0x97));
  unsigned int v251 = v215 ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v245) ^ 0xEAu));
  unsigned int v252 = (v249 + 803148973) ^ (v248 - 1558394776) ^ ((v220 & (v216 ^ 0x59235AE6))
                                                   - ((2 * (v220 & (v216 ^ 0x59235AE6))) & 0x97550BD0)
                                                   + 1269466600) ^ ((v220 | v216 ^ 0x59235AE6)
                                                                  - ((2 * (v220 | v216 ^ 0x59235AE6)) & 0x5543C9C4)
                                                                  - 1432230686);
  int v253 = v229 ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v245) ^ 0x1Du));
  unsigned int v254 = (991439928
        - ((2 * (v253 & 0x80000)) ^ 0x100000 | v253 & 0x80000)
        - ((932644826 - 2 * (((2 * (v253 & 0x80000)) ^ 0x100000 | v253 & 0x80000) + 2121792889)) & 0x3B810888)) ^ (((2 * (v253 & 0xFFF7FFFF ^ 0x2E487376)) & 0xDD01805E) - (v253 & 0xFFF7FFFF ^ 0x2E487376) - 1853931568);
  int v255 = *(_DWORD *)(v114 + 4LL * (BYTE2(v250) ^ 0x55u)) ^ 0x59235AE6;
  unsigned int v256 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v251) ^ 0x87)) ^ 0xCE2DFE11;
  int v257 = (v256 & v255) - ((2 * (v256 & v255)) & 0x31249504);
  unsigned int v258 = ((v256 + v255) ^ 0xDBE5EFBB)
       + ((2 * (v256 + v255)) & 0xB7CBDF76)
       + ((2 * v257 - 1323002620) ^ 0xA1E2F463)
       + ((2 * (2 * v257 - 1323002620)) & 0xDE733D30 ^ 0xBDBED7FF)
       + 1;
  unsigned int v259 = *(_DWORD *)(v112 + 4LL * (BYTE1(v252) ^ 0xDDu)) ^ *(_DWORD *)(v113 + 4LL * (v254 ^ 0xF5u)) ^ (v258 - ((2 * v258 + 648502716) & 0xB9AEB31E) + 1881868397);
  int v260 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v252) ^ 0xFA)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v254) ^ 0xE3u));
  int v261 = *(_DWORD *)(v113 + 4LL * (v251 ^ 0xF9u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v250) ^ 0xF7)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v252) ^ 0x5Cu)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v254) ^ 0xAu));
  unsigned int v262 = (v260 & 0xFFFFFFEF ^ 0x67F21700)
       + (v260 & 0x111F05CB ^ 0x100D00CB)
       - ((v260 & 0xFFFFFFEF ^ 0x67F21700) & 0x111F05CB);
  int v263 = *(_DWORD *)(v112 + 4LL * (BYTE1(v251) ^ 0xDBu));
  unsigned int v264 = v260 & 0x10 ^ 0xFFF7FCD7;
  BOOL v265 = ((v264 + 525113) & v263) + 1227329862 - 2 * ((v264 + 525113) & v263) == 1227329862;
  unsigned int v266 = v264 + 1124031294;
  unsigned int v267 = 1122981068 - v264;
  if (v265) {
    unsigned int v267 = v266;
  }
  unsigned int v268 = *(_DWORD *)(v113 + 4LL * (v250 ^ 0x3Cu)) ^ v262 ^ ((v263 ^ 0xF1E3098E)
                                                                           - 1123506181
                                                                           + v267
                                                                           - ((2
                                                                             * ((v263 ^ 0xF1E3098E) - 1123506181 + v267)) & 0x634D064A)
                                                                           + 832996133);
  int v269 = *(_DWORD *)(v112 + 4LL * (BYTE1(v250) ^ 0x81u)) ^ *(_DWORD *)(v113 + 4LL * (v252 ^ 0xA0u)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v251) ^ 2u)) ^ *(_DWORD *)(a13 + 4LL * (HIBYTE(v254) ^ 0x8C));
  unsigned int v271 = (((2 * v239) ^ 0x5C31C72E) - ((2 * ((2 * v239) ^ 0x5C31C72E)) & 0x5F42EE5C) + 799110958) & 0x8584F182 ^ 0x9D837902;
  HIDWORD(v27fseek(v0, 0LL, 2) = v241 ^ 0xE397;
  LODWORD(v27fseek(v0, 0LL, 2) = v241 ^ 0x2E180000;
  int v273 = (v272 >> 18) - ((2 * (v272 >> 18)) & 0x32BC7734) + 425606042;
  unsigned int v274 = ((((2 * v271) | 0x38669F2A) - v271 + 1674358891) ^ 0x80B4E697) + (v239 ^ 0x2EA1CEFF);
  unsigned int v275 = ((2 * v274) & 0xFBF9AF5E) + (v274 ^ 0x7DFCD7AF);
  unsigned int v276 = ((2 * v270) & 0x7F7B77FE) + (v270 ^ 0xBFBDBBFF) + (v259 ^ 0x108D612);
  int v277 = v276 - ((2 * v276 + 8685572) & 0x7FFDCB16) + 4270477;
  int v278 = (13798327 - (v268 | 0xFFFFFD)) & 0x800022;
  unsigned int v279 = v268 ^ 0x98B07BE7;
  if (v278 == 8388640) {
    int v280 = 2;
  }
  else {
    int v280 = -2;
  }
  unsigned int v281 = v280 + v279 - ((2 * (v280 + v279)) & 0x974AA62E) - 878357737;
  int v282 = v277 ^ 0x6E0E080F;
  unsigned int v283 = (-818646825 * v282) ^ 0xDFFDAF5A;
  HIDWORD(v284) = v273 ^ 0x368F;
  LODWORD(v284) = v273 ^ 0x90944000;
  unsigned int v285 = (-1637293650 * v282) & 0xBFFB5EB4;
  unsigned int v286 = ((2 * v281) & 0xFF9DFFFE ^ 0x3C94CDA6) + (v281 ^ 0xE184992C);
  int v287 = (((v284 >> 14) - ((2 * (v284 >> 14)) & 0x39E95890) - 1661686712) ^ 0xFD4DBEA7) - 1070568364;
  unsigned int v288 = ((2 * v287) & 0xDE77CDFA) + (v287 ^ 0x6F3BE6FD) - v286;
  unsigned int v289 = ((2 * v261) & 0xFD7F4FFE ^ 0xD8474C7C) + (v261 ^ 0x12DC11C1);
  int v290 = v275 - v289 - ((2 * (v275 - v289) + 25534624) & 0x50B1A9FE) - 1457806001;
  int v243 = *(_DWORD *)(a13 + 4LL * (HIBYTE(v238) ^ 0x33)) ^ *(_DWORD *)(v114 + 4LL * (BYTE2(v235) ^ 2u)) ^ *(_DWORD *)(v112 + 4LL * (BYTE1(v224) ^ 0x33u)) ^ *(_DWORD *)(v113 + 4LL * (v234 ^ 0x28u));
  unsigned int v291 = ((((2 * v243) ^ 0x5C31C72E) - ((2 * ((2 * v243) ^ 0x5C31C72E)) & 0x1C23B8CC) + 236051559) & 0xBA6A0020 ^ 0x9A480000)
       + (v243 ^ 0xBB895035);
  unsigned int v292 = ((1743057845 * (v290 ^ 0x4C93D5B4)) ^ 0xFCF3BCAF) + ((-808851606 * (v290 ^ 0x4C93D5B4)) & 0xF9E7795E);
  unsigned int v293 = ((2 * v291) & 0xF5BFF74E) + (v291 ^ 0xFADFFBA7) + (v269 ^ 0x9943AFDA);
  unsigned int v294 = (v293 - 2 * ((v293 + 85984346) & 0x22A0D00B ^ v293 & 1) + 666948708) ^ 0x9D21D771;
  int v295 = 292393685 * v294 + 177564357 - ((47916458 * v294) & 0x152AD58A);
  int v296 = (v288 - ((2 * v288 + 556151300) & 0x56228A64) - 1146855884) ^ 0x174C6DB5;
  unsigned int v297 = -1029760007 - 762590379 * v296 - ((-1525180758 * v296) & 0x853E37F2);
  int v298 = v285 - v292 + v283 + 485887317;
  int v299 = v298 + (v295 ^ 0xA956AC5) - ((2 * (v298 + (v295 ^ 0xA956AC5))) & 0x524AB14A) - 1457170267;
  unsigned int v300 = ((v292 + 51135313 + (v297 ^ 0xC29F1BF9)) ^ 0x77FB7B0F)
       + (v299 ^ 0x56DAA75A)
       + ((2 * (v292 + 51135313 + (v297 ^ 0xC29F1BF9))) & 0xEFF6F61E);
  unsigned int v301 = v300 - ((2 * v300 + 269027812) & 0xD42E6ECA) - 233063337;
  int v302 = v301 ^ v299;
  unsigned int v303 = v295 ^ 0xC80A713C ^ v297;
  unsigned int v304 = v298 + v303 - 387798938 - ((2 * (v298 + v303)) & 0xD1C550CC);
  unsigned int v305 = ((2 * ((v304 ^ 0xE8E2A866) + v303)) & 0xFDF7FBCA) + (((v304 ^ 0xE8E2A866) + v303) ^ 0x7EFBFDE5);
  unsigned int v306 = (v304 ^ 0xD42F3859 ^ v302) + 1;
  unsigned int v307 = ((2 * (v306 + (v301 ^ 0x6A173765))) & 0xDFDEF7EE) + ((v306 + (v301 ^ 0x6A173765)) ^ 0x6FEF7BF7);
  unsigned int v308 = v305 - v307;
  unsigned int v309 = v307 + v289 + ((2 * v307 + 539035666) ^ 0x90E0E03) - ((2 * (2 * v307 + 539035666)) & 0xEDE3E3F8);
  unsigned int v310 = ((2 * (v306 + (v259 ^ 0xFEF729ED))) & 0xB676FAB4) + ((v306 + (v259 ^ 0xFEF729ED)) ^ 0xDB3B7D5A);
  unsigned int v311 = v309 - ((2 * v309 + 616417816) & 0x3F902D26) + 1378286495;
  unsigned int v312 = (v269 ^ 0x66BC5025)
       + (((v302 ^ 0x3CCD903F) - 252477933 + v308) ^ 0xFFD33BF7)
       + ((2 * ((v302 ^ 0x3CCD903F) - 252477933 + v308)) & 0xFFA677EE)
       + 2933769;
  unsigned int v313 = ((2 * v312) & 0x6BB1ED7A) + (v312 ^ 0xB5D8F6BD);
  unsigned int v314 = v310 - ((2 * v310 + 116947534) & 0x1DDADD80) + 1382656999;
  unsigned int v315 = v286 - v308 - ((2 * (v286 - v308) + 1444766236) & 0x5C3B406A) + 422334787;
  unsigned int v316 = v313 - ((2 * v313 - 550444158) & 0xED48EDF8) - 432215875;
  uint64_t v317 = *(void *)(v45 - 256);
  uint64_t v318 = *(void *)(v45 - 216);
  int v319 = *(_DWORD *)(a39 + 4LL * (BYTE2(v311) ^ 0xC8u)) ^ a21 ^ *(_DWORD *)(v317 + 4LL * (HIBYTE(v314) ^ 0xE)) ^ *(_DWORD *)(a16 + 4LL * (BYTE1(v315) ^ 0xA0u)) ^ *(_DWORD *)(v318 + 4LL * ((v313 - ((2 * v313 - 126) & 0xF8) - 67) ^ 0xFCu));
  HIDWORD(v284) = v319 ^ 0xF2D47A;
  LODWORD(v284) = v319 ^ 0x8C000000;
  int v320 = (v284 >> 25) - ((2 * (v284 >> 25)) & 0x7985A2B6) - 1128083109;
  int v321 = a21 ^ a29 ^ *(_DWORD *)(a16 + 4LL * (BYTE1(v314) ^ 0x6Eu)) ^ *(_DWORD *)(v317 + 4LL * (HIBYTE(v315) ^ 0xAE)) ^ *(_DWORD *)(v318 + 4LL * (v311 ^ 0x93u)) ^ *(_DWORD *)(a39 + 4LL * (BYTE2(v316) ^ 0xA4u));
  HIDWORD(v284) = v320 ^ 0x1E;
  LODWORD(v284) = v320 ^ 0xB28EEA00;
  int v322 = HIDWORD(a19) ^ a29 ^ a21;
  unsigned int v323 = v322 ^ *(_DWORD *)(a39 + 4LL * (BYTE2(v315) ^ 0x1Du)) ^ *(_DWORD *)(v317 + 4LL * (HIBYTE(v311) ^ 0x1F)) ^ *(_DWORD *)(v318 + 4LL * (v314 ^ 0xC0u)) ^ *(_DWORD *)(a16 + 4LL * (BYTE1(v316) ^ 0x76u));
  unsigned int v324 = HIDWORD(a19) ^ a29 ^ ((v284 >> 7) - ((2 * (v284 >> 7)) & 0x2DD9F02) - 2123444351);
  unsigned int v325 = v322 ^ *(_DWORD *)(v318 + 4LL * (v315 ^ 0x35u)) ^ *(_DWORD *)(a39 + 4LL
                                                                                            * (BYTE2(v314) ^ 0xEDu)) ^ *(_DWORD *)(a16 + 4LL * (BYTE1(v311) ^ 0x16u)) ^ *(_DWORD *)(v317 + 4LL * (HIBYTE(v316) ^ 0x76));
  int v326 = (v321 ^ (HIDWORD(a12) + (v366 ^ v321) - ((2 * (HIDWORD(a12) + (v366 ^ v321))) & 0xF080BA9C) + 2017484110) ^ ((v321 ^ 0xF468C3D8) - ((2 * (v321 ^ 0xF468C3D8) + 2) & 0x62F08ED6) - 1317517460) ^ 0xC2AF2602)
       + a19;
  unsigned int v327 = v326 - ((2 * v326) & 0xBCAA4B98) - 564845108;
  unsigned int v328 = ((v327 & 0x7CC7D4AF ^ 0x1C849480)
        + (v327 & 0x14039429 ^ 0x822B2129)
        - ((v327 & 0x7CC7D4AF ^ 0x1C849480) & 0x14039429)) ^ 0xD6623565;
  unsigned int v329 = (((2 * v328) & 0xB1AB81B4) - v328 + 640302885) ^ ((v327 & 0x83382B50 ^ 0x7DEFDFFF)
                                                         - ((2 * (v327 & 0x83382B50 ^ 0x7DEFDFFF)) & 0xA7C411B6)
                                                         + 1407322331);
  LOBYTE(v32_Block_object_dispose(va, 8) = byte_10073C750[HIBYTE(v323) ^ 0x12LL];
  LOBYTE(v320) = (v328 & 0x2B ^ 0xDD) + ((2 * v328) & 0x52 ^ 0xED);
  LOBYTE(v311) = (v328 & 0xD4 ^ 0xC4) - ((2 * (v328 & 0xD4 ^ 0xC4)) & 0x78);
  unsigned int v330 = (((8 * v327) ^ 0xCF56FFD8)
        - 1066689688
        - ((2 * ((8 * v327) ^ 0xCF56FFD8)) & 0x80D736D0)
        + (v327 >> 5)) ^ 0xC06B9B6F;
  unsigned int v331 = v330 - ((2 * v330) & 0xBE);
  unsigned int v332 = *(_BYTE **)(v45 - 200);
  v332[4] = HIBYTE(v323) ^ (v320 - 86) ^ (v311 - 75) ^ 0x52;
  HIDWORD(v284) = (v331 - 9) ^ 6;
  LODWORD(v284) = ((v331 - 33) ^ 0xFFFFFFBF) << 24;
  int v333 = ((v327 >> 23) & 0x7E ^ 0x72) + (HIBYTE(v327) ^ 0x7EFEDB06);
  int v334 = byte_10072F5D0[((v284 >> 27) - ((2 * (v284 >> 27)) & 0x33) + 25) ^ 0xA9LL];
  HIDWORD(v284) = v334 ^ 9;
  LODWORD(v284) = (v334 ^ 0xC0) << 24;
  int v335 = (v284 >> 28) - ((2 * (v284 >> 28)) & 0xFFFFFFF7);
  unsigned int v336 = v335 - 5;
  unsigned int v337 = (v335 - 5);
  HIDWORD(v284) = (v335 - 5) ^ 0x7B;
  LODWORD(v284) = (4 - v335) << 24;
  int v338 = 127 - (v284 >> 31);
  unsigned int v339 = (2 * (((v336 >> 7) & 1 | 0x70) ^ (v337 >> 4))) ^ 0xFFFFFFFC;
  int v340 = v339 - ((2 * v339) & 0x14) - 53;
  HIDWORD(v284) = v340 ^ ~v338;
  LODWORD(v284) = (v340 ^ v338 ^ 0xFFFFFFC3) << 24;
  v332[11] = ((v284 >> 25) - ((2 * (v284 >> 25)) & 0x14) - 118) ^ 0x5B;
  int v341 = ((BYTE2(v325) ^ 0x7C) - ((2 * (BYTE2(v325) ^ 0x7C)) & 0x24) + 1687404306) ^ 0x66533B22;
  unsigned int v342 = (v341 | 0xCC143B65) - (v341 | 0x33EBC49A) + 871089306;
  char v343 = byte_100757460[v342 ^ 0xCED4BFFB];
  if ((v342 ^ 0xCED4BF80) < 0x80) {
    char v344 = -4;
  }
  else {
    char v344 = 4;
  }
  v332[13] = (v344 + (v343 ^ 0x79) - 2 * ((v344 + (v343 ^ 0x79)) & 0x7E ^ v343 & 2) - 4) ^ 0x2F;
  int v345 = byte_10073C750[HIBYTE(v325) ^ 0x86LL];
  unsigned int v346 = (BYTE1(v325) ^ 0x9B | 0x11AE414F) - (BYTE1(v325) ^ 0x9B | 0xEE51BEB0) - 296632656;
  unsigned int v347 = ((((v325 >> 8) & 0xE5 ^ 0x4A2405C0) + ((v325 >> 8) & 0x1A ^ 0x20900013) - 1) ^ 0x954BFA67) + 1;
  int v348 = ((v346 & 0x1000019C ^ 0x52000091) + (v346 & 0x1AE4263) - 1) ^ 0x43AE410C;
  int v349 = (v347 ^ 0x1FFFFF76) + ((2 * v347) & 0x3FFFFEEC) + v348 - 536870774;
  HIDWORD(v351) = v345 ^ 1;
  LODWORD(v351) = (v345 ^ 0xFFFFFFCF) << 24;
  int v350 = v351 >> 26;
  v332[12] = HIBYTE(v325) ^ (((v350 - 80 - ((2 * v350) & 0x60)) & 0xC0) >> 6) ^ (((8 * (v350 - 80)) ^ 0x7F)
                                                                                                + ((4
                                                                                                  * (v350 - 80 - ((2 * v350) & 0x60))) ^ 0xC0)
                                                                                                - 1) ^ 0xF1;
  LOBYTE(v350) = byte_10073FC80[((v349 - ((2 * v349) & 0x41E52924) + 552768658) ^ 0xDF0D6B6E) + v348];
  int v352 = ((v323 >> 8) & 0xAC ^ 0x5B41EBF7) - ((v323 >> 8) & 0x53);
  unsigned int v353 = ((v352 & 0xA5 ^ 0x8FCF3CA1) + (v352 & 0x15A ^ 0x40100011) - 1) ^ 0x3020C2BD;
  uint64_t v354 = (2 * v353 + 6) & 0x6147D3F0;
  LOBYTE(v350) = v350 ^ ((v350 ^ 0x5E) - ((2 * (v350 ^ 0x5E) + 42) & 0x32) + 14) ^ ((v350 ^ 0xAA)
                                                                                  + (~(2 * (v350 ^ 0xAA) + 2) | 0xB1)
                                                                                  - 87) ^ 0xEB;
  v332[14] = BYTE1(v325) ^ 0x1D ^ (v350 + ~(2 * ((v350 + 116) & 0x67 ^ v350 & 1)) - 37);
  unsigned int v355 = (((2 * (BYTE1(v323) ^ 0xC1)) | 0xE0F4D2A2) - (BYTE1(v323) ^ 0xC1) - 1887070545) ^ 0x3C734B51;
  v332[1] = byte_100757460[BYTE2(v324) ^ 0x18LL] ^ 0x3B;
  v332[6] = BYTE1(v323) ^ byte_10073FC80[((((2 * v355) | 0x3033C4C4) - v355 - 404349538) ^ (v353
                                                                                          - (_DWORD)v354
                                                                                          - 1331435013) ^ 0x32440ECF ^ (((((2 * v355) | 0x3033C4C4) - v355 - 404349538) ^ 0xABEF3F5A) - ((2 * ((((2 * v355) | 0x3033C4C4) - v355 - 404349538) ^ 0xABEF3F5A) + 2) & 0xADEE4F24) - 688445549))
                                       + 2] ^ 0xDD;
  unsigned int v356 = ((v324 >> 8) & 0x30) + (BYTE1(v324) ^ 0xFFFFFFBF) + (BYTE1(v324) | 0xB08B1BCF) + 1;
  v332[2] = BYTE1(v324) ^ byte_10073FC80[((v356 & 0x5E4950E7 ^ 0x4A400002)
                                        + (v356 ^ 0x34A953E5)
                                        - ((v356 ^ 0x34A953E5) & 0x5E4950E7)) ^ 0xDA6B1828LL] ^ 0x9F;
  unsigned int v357 = ((HIWORD(v329) & 0x1F ^ 0x8B90FE08) + (HIWORD(v329) & 0xE0 ^ 0xC1) - 1) ^ 0x9BD23E0B;
  v332[9] = byte_100757460[(((2 * v357) | 0xF4FD5DE) - v357 - 128445167) ^ 0x17E52A6ALL] ^ 0xBD;
  int v358 = 2 * v333 - ((4 * (_BYTE)v333 + 4) & 0xE0) + 371;
  unsigned int v359 = (v358 & 0xAE ^ 0x8A0A4385) + v333 + ((2 * v358) & 0x114 ^ 0xFFFFFEFF);
  uint64_t v360 = v359 - ((2 * v359 - 303184920) & 0xA50B61E8) - 914582808;
  v332[8] = byte_10073C750[v360 ^ 0xD285B0FFLL] ^ v360 ^ 0x62;
  unsigned int v361 = (((BYTE1(v329) ^ 0xF) + ((v329 >> 8) & 0xCB ^ 0x7F56F6C0) - ((BYTE1(v329) ^ 0xF) & 0xCB)) ^ 0x80A90960) + 1;
  LODWORD(v360) = (((v329 >> 8) & 0xD9) + ((v329 >> 8) & 0x26 ^ 0x2A111521) + 511) ^ 0x2A111703;
  int v362 = v360 + (v361 ^ 0xE6DB9B7B) + ((2 * v361) & 0xCDB736F6) + 421815429;
  LODWORD(v360) = ((v362 - ((2 * v362) & 0x13F2F916) + 167345291) ^ 0xF606837B) + v360;
  LOBYTE(v360) = (((2 * ((v360 - 71 - ((2 * v360) & 0x72)) ^ 0x39)) | 0xDC)
                - ((v360 - 71 - ((2 * v360) & 0x72)) ^ 0x39)
                + 18) ^ byte_10073FC80[((_DWORD)v360 + 817878201 - ((2 * (_DWORD)v360) & 0x617FA972)) ^ 0x30BFD4BB];
  LOBYTE(v36fseek(v0, 0LL, 2) = (v360 & 0xA ^ 0xF7) + ((2 * (v360 & 0xA)) | 0x12) - 8;
  LOBYTE(v360) = ((v360 & 0xF5 ^ 0x64 | 0xC3) - (v360 & 0xF5 ^ 0x64 | 0x3C) + 60) ^ 0xE3;
  LOBYTE(v360) = (((2 * v360) & 0xD8) - v360 + 19) ^ 0x97 | v362 ^ 9;
  unsigned int v363 = (((32 * v325) ^ 0x5F469280) - 1424714661 - ((2 * ((32 * v325) ^ 0x5F469280)) & 0x56292880)) ^ 0xAB14945B | (((v325 >> 3) & 7) + ((v325 >> 3) & 0x18 ^ 0x1F148811) - 1) ^ 0x1F148802;
  int v364 = v363 - ((2 * v363) & 0xA0) - 48;
  HIDWORD(v351) = v364 ^ 1;
  LODWORD(v351) = v364 << 24;
  v332[10] = (v360 - ((2 * v360) & 0xC0) - 32) ^ 0xE0;
  LODWORD(v360) = ((BYTE2(v323) ^ 0x2A) - ((2 * (BYTE2(v323) ^ 0x2A)) & 0xFFFFFFF7) - 1196913925) ^ 0xF8AE2ED3;
  v332[5] = byte_100757460[(((2 * (_DWORD)v360) | 0x9BAD5584) - v360 + 841569598) ^ 0x8DD00EBCLL] ^ 0x48;
  LODWORD(v360) = byte_10072F5D0[((v351 >> 29) - ((2 * (v351 >> 29)) & 0xF8) + 124) ^ 8LL];
  HIDWORD(v351) = v360 ^ 9;
  LODWORD(v351) = (v360 ^ 0xC0) << 24;
  LODWORD(v360) = (v351 >> 28) - ((2 * (v351 >> 28)) & 0xFFFFFFB6) + 91;
  v332[15] = (v360 & 0x80 | 0x3B) ^ (((v360 & 0x80) != 0) ^ (((v351 >> 28)
                                                                             - ((2 * (v351 >> 28)) & 0xB6)
                                                                             + 91) >> 4) | 0x50) ^ ((v360 & 6)
                                                                                                  + (v360 & 0x7F ^ 0x47)
                                                                                                  - ((v360 & 0x7F ^ 0x47) & 6)
                                                                                                  + 0x80) ^ 0x59;
  v332[*((void *)&a24 + 1)] = HIBYTE(v324) ^ 0x54 ^ byte_10073C750[HIBYTE(v324) ^ 0xA1LL];
  LODWORD(v360) = byte_10072F5D0[v323 ^ 0xF5LL];
  HIDWORD(v351) = v360 ^ 9;
  LODWORD(v351) = (v360 ^ 0xC0) << 24;
  LODWORD(v360) = (v351 >> 28) - ((2 * (v351 >> 28)) & 0x6A) + 53;
  v332[7] = v360 ^ (((v351 >> 28) - ((2 * (v351 >> 28)) & 0x6A) + 53) >> 4) ^ (((v360 & 0x80) != 0) | 0x1A) ^ 0x71;
  LOWORD(v360) = (v324 & 0xB8 ^ 0xDD29) + (v324 & 0x47) - 1;
  LODWORD(v360) = byte_10072F5D0[((v360 & 0x1A4 ^ 0xE3281885) + (v360 & 0x45B) - 1) ^ 0xE3281DB7];
  HIDWORD(v351) = v360 ^ 9;
  LODWORD(v351) = (v360 ^ 0xC0) << 24;
  v332[3] = ((v351 >> 28) - ((2 * (v351 >> 28)) & 0xA2) + 81) ^ (((v351 >> 28)
                                                                                 - ((2 * (v351 >> 28)) & 0xA2)
                                                                                 + 81) >> 7) ^ (((v351 >> 28) - ((2 * (v351 >> 28)) & 0xA2) + 81) >> 4) ^ 0x75;
  return ((uint64_t (*)(uint64_t, _BYTE *, uint64_t, unsigned __int8 *, uint64_t, unsigned __int8 *, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t))((char *)*(&off_10090DDE0 + ((1033 * (HIDWORD(v367) > 0x10)) ^ (*(_DWORD *)(v45 - 228) - 566))) - 12))( 193LL,  v332,  a13,  byte_10073C750,  v354,  byte_10072F5D0,  9LL,  byte_100757460,  a9,  a10,  a11,  a12,  a13,  v366,  v367,  a16,  v368,  11LL,  a19,  1LL,  a21,  a22,  4LL,  a24,  *((void *)&a24 + 1),  a25,  8LL,  a27);
}

void sub_100693304()
{
}

char *sub_10069334C(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
  }

  else
  {
    unint64_t v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v4 = *result++;
        *a2++ = v4;
LABEL_6:
        char v5 = *result++;
        *a2++ = v5;
LABEL_7:
        char v6 = *result++;
        *a2++ = v6;
LABEL_8:
        char v7 = *result++;
        *a2++ = v7;
LABEL_9:
        char v8 = *result++;
        *a2++ = v8;
LABEL_10:
        char v9 = *result++;
        *a2++ = v9;
LABEL_11:
        char v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }

    BOOL v11 = a3 >= v3;
    char v12 = a3 - v3;
    if (!v11) {
      char v12 = 0;
    }
    unint64_t v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        char v14 = *result++;
        *a2++ = v14;
LABEL_19:
        char v15 = *result++;
        *a2++ = v15;
LABEL_20:
        char v16 = *result++;
        *a2++ = v16;
LABEL_21:
        char v17 = *result++;
        *a2++ = v17;
LABEL_22:
        char v18 = *result++;
        *a2++ = v18;
LABEL_23:
        char v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        uint64_t result = (char *)((uint64_t (*)(void))((char *)&loc_10069346C + 4 * byte_10072DABF[(v13 >> 3) & 7]))();
        break;
    }
  }

  return result;
}

_BYTE *sub_10069350C(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(__chkstk_darwin(v2, v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }

  unint64_t v4 = a3 - v3;
  unint64_t v6 = v4;
  unint64_t v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *uint64_t result = a2;
      break;
    default:
      uint64_t result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_10069359C + 4 * byte_10072DAD6[(v5 >> 3) & 7]))();
      break;
  }

  return result;
}

uint64_t sub_100693600()
{
  if (qword_1009C74D0 != -1) {
    dispatch_once(&qword_1009C74D0, &stru_100911930);
  }
  dispatch_sync((dispatch_queue_t)qword_1009C74D8, &stru_1009118F0);
  uint64_t result = dword_1009C74C8;
  if (!dword_1009C74C8)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return dword_1009C74C8;
  }

  return result;
}

void sub_100693688(id a1)
{
  if (!dword_1009C74C8) {
    dword_1009C74C8 = sub_1006936EC("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
  }
}

void sub_1006936C4(id a1)
{
  qword_1009C74D8 = (uint64_t)dispatch_queue_create("aks-client-queue", 0LL);
}

uint64_t sub_1006936EC(char *path, const char *a2)
{
  kern_return_t v5;
  CFDictionaryRef v6;
  io_service_t MatchingService;
  io_object_t v8;
  uint64_t result;
  kern_return_t v10;
  io_connect_t connect;
  connect = 0;
  io_service_t v3 = IORegistryEntryFromPath(kIOMasterPortDefault, path);
  if (!v3 || (v4 = v3, unint64_t v5 = IOServiceOpen(v3, mach_task_self_, 0, &connect), IOObjectRelease(v4), v5))
  {
    unint64_t v6 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v6);
    if (MatchingService)
    {
      char v8 = MatchingService;
      IOServiceOpen(MatchingService, mach_task_self_, 0, &connect);
      IOObjectRelease(v8);
    }
  }

  uint64_t result = connect;
  if (connect)
  {
    char v10 = IOConnectCallMethod(connect, 0, 0LL, 0, 0LL, 0LL, 0LL, 0LL, 0LL, 0LL);
    uint64_t result = connect;
    if (v10)
    {
      IOServiceClose(connect);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1006937E0(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  char v21 = 0LL;
  uint64_t input = a1;
  int v20 = 0;
  uint64_t v7 = 3758097090LL;
  if (a2 && a6 && a7)
  {
    mach_port_t v11 = sub_100693600();
    if (v11)
    {
      mach_port_t v17 = v11;
      sub_1006939EC(&v21, (unsigned int *)&v20, 2, v12, v13, v14, v15, v16, a2);
      size_t v19 = *a7;
      uint64_t v7 = IOConnectCallMethod(v17, 0x51u, &input, 1u, v21, v20, 0LL, 0LL, a6, &v19);
      if (!(_DWORD)v7) {
        *a7 = (int)v19;
      }
    }

    else
    {
      fprintf( __stdoutp,  "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n",  "aks",  "",  "",  "",  "aks_absinthe_generate",  ":",  3253,  "",  0,  "",  "");
      uint64_t v7 = 3758097084LL;
    }
  }

  free(v21);
  return v7;
}

char *sub_100693968(_DWORD *a1, const void *a2, int a3)
{
  io_service_t v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    int v5 = -a3;
    size_t v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      int __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }

  else
  {
    *a1 = 0;
  }

  return v3;
}

char *sub_1006939EC( char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v21 = &a9;
  unsigned int v12 = 4;
  if (a3)
  {
    int v13 = a3;
    do
    {
      uint64_t v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }

    while (v13);
  }

  uint64_t result = (char *)calloc(1uLL, v12);
  uint64_t v16 = result;
  char v22 = (const void **)&a9;
  int v17 = 0;
  if (a3)
  {
    uint64_t v18 = 4LL;
    do
    {
      size_t v19 = v22;
      int v20 = *v22;
      v22 += 2;
      uint64_t result = sub_100693968(&v16[v18], v20, *((_DWORD *)v19 + 2));
      uint64_t v18 = result - v16;
      ++v17;
    }

    while (a3 != v17);
  }

  *(_DWORD *)uint64_t v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

void sub_100693AC8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100693B54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100693BE0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed to serialize cache -- Not saving opportunistic cache {error: %@, cache: %@}",  (uint8_t *)&v3,  0x16u);
}

void sub_100693C64()
{
}

void sub_100693CD0()
{
}

void sub_100693D3C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412546;
  uint64_t v3 = @"DeviceHeartbeat";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "%@ - UserID is empty (%@), ignoring expiry update...",  (uint8_t *)&v2,  0x16u);
  sub_100008BB4();
}

void sub_100693DC0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Missing completion across XPC for baaHeadersBySigningData",  v1,  2u);
}

void sub_100693E00(void *a1)
{
}

void sub_100693E20(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 prefixedURI]);
  int v2 = 138412546;
  uint64_t v3 = v1;
  __int16 v4 = 2080;
  uint64_t v5 = "_disasterModeTokens";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v2,  0x16u);
}

void sub_100693ECC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Query cache:", (uint8_t *)&v3, 0x16u);
}

void sub_100693F50()
{
  int v0 = 138412546;
  uint64_t v1 = @"device-time";
  __int16 v2 = 2080;
  int v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_100693FE8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Registration state changed but we've tried this too many times; not enabling phone number accounts",
    v1,
    2u);
}

void sub_100694028(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 134217984;
  uint64_t v4 = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Could not create NRDeviceMonitor object. {pointer: %p}",  (uint8_t *)&v3,  0xCu);
}

void sub_1006940A0()
{
}

void sub_100694120()
{
}

void sub_1006941A0()
{
}

void sub_100694220()
{
}

void sub_1006942A0()
{
}

void sub_100694320()
{
}

void sub_1006943A0()
{
}

void sub_100694420()
{
}

void sub_1006944A0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069452C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006945B8()
{
}

void sub_1006945E0()
{
}

void sub_100694608(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "CurrentCluster missing GroupIdentifier {currentCluster: %{public}@}",  (uint8_t *)&v2,  0xCu);
}

void sub_10069467C()
{
}

void sub_1006946A4(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Cannot force remove deviceID users. { user: %@ }",  (uint8_t *)&v2,  0xCu);
}

void sub_100694718(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[IDSKeychainWrapper shortDescriptionForDataProtectionClass:]( &OBJC_CLASS___IDSKeychainWrapper,  "shortDescriptionForDataProtectionClass:",  a1));
  sub_100032764();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Failed removing keychain data for class %{public}@ message protection identity {error: %{public}@}",  v4,  v5,  v6,  v7,  v8);

  sub_1000326CC();
}

void sub_1006947B0()
{
}

void sub_1006947DC(uint64_t a1)
{
  int v2 = 138543618;
  uint64_t v3 = a1;
  sub_10003277C();
  sub_1000326B0( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "Failed to save identity {error: %{public}@, identityIdentifier: %ld}",  (uint8_t *)&v2);
  sub_100008BB4();
}

void sub_100694850()
{
}

void sub_100694888()
{
}

void sub_1006948B4()
{
}

void sub_1006948E0()
{
}

void sub_10069490C(uint64_t a1)
{
  int v2 = 138543875;
  uint64_t v3 = a1;
  sub_10003277C();
  __int16 v4 = 2113;
  uint64_t v5 = 0LL;
  sub_1000327BC( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "Failed to purge identity or remove keychain reference {error: %{public}@, identityIdentifier: %ld, identityContainer: %{private}@}",  (uint8_t *)&v2);
}

void sub_100694990()
{
}

void sub_1006949F4()
{
}

void sub_100694A58()
{
}

void sub_100694A84()
{
}

void sub_100694AB0()
{
  sub_1000327B4();
}

void sub_100694AF0()
{
  sub_1000327B4();
}

void sub_100694B30()
{
}

void sub_100694B5C()
{
  sub_1000327B4();
}

void sub_100694B9C()
{
  sub_1000327B4();
}

void sub_100694BDC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 config]);
  sub_100032764();
  sub_10003273C((void *)&_mh_execute_header, v2, v3, "Nil full container {config: %{private}@}", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_100694C54(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 config]);
  sub_100032764();
  sub_10003273C( (void *)&_mh_execute_header,  v2,  v3,  "Nil previous full container {config: %{private}@}",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_100694CCC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 config]);
  sub_100032764();
  sub_10003273C( (void *)&_mh_execute_header,  v2,  v3,  "Nil full container -- returning nil publicIdentity to register {config: %{private}@}",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_100694D44(uint64_t a1, void *a2, os_log_s *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a2 config]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 unregisteredIdentityContainer]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 config]);
  uint8_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 registeredIdentityContainer]);
  sub_100032794();
  sub_1000327BC( (void *)&_mh_execute_header,  a3,  v9,  "Failed to get public container from full container -- returning nil publicIdentity to register {error: %{public}@, u nregisteredIdentityContainer: %{private}@, registeredIdentityContainer: %{private}@}",  v10);

  sub_1000327E0();
}

void sub_100694E18(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a2 legacyPublicIdentity]);
  sub_10003280C();
  sub_10003269C( (void *)&_mh_execute_header,  v3,  v4,  "Failed to get legacy public data to register -- returning nil {error: %{public}@, legacyPublicIdentity: %@}",  v5,  v6,  v7,  v8,  2u);

  sub_1000326CC();
}

void sub_100694EB0()
{
  id v2 = objc_msgSend((id)sub_1000327C8(v0, v1), "debugDescription");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_10003280C();
  sub_10003269C( (void *)&_mh_execute_header,  v4,  v5,  "Failed to get ticket from identity -- aborting roll {error: %{public}@, fullDeviceIdentity: %@}",  v6,  v7,  v8,  v9,  2u);

  sub_1000326CC();
}

void sub_100694F34(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138412546;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_100032750( (void *)&_mh_execute_header,  v1,  v2,  "Failed to create a new message protection identity! {error: %@, protectionClass: %ld}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_100694FA0()
{
  sub_1000326BC( (void *)&_mh_execute_header,  v0,  v1,  "No protection identity provided -- not returning public message protection data",  v2,  v3,  v4,  v5,  v6);
  sub_100032728();
}

void sub_100694FCC(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138412546;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_100032750( (void *)&_mh_execute_header,  v1,  v2,  "Failed to create public identity from full identity {error: %@, fullIdentity: %@}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_100695038(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138412546;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_100032750( (void *)&_mh_execute_header,  v1,  v2,  "Failed to serialized public message protection identity {appendError: %@, publicIdentity: %@}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_1006950A4(uint64_t a1)
{
  int v2 = 138412546;
  uint64_t v3 = a1;
  sub_10003277C();
  _os_log_debug_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEBUG,  "Returning serialized public message protection identity {publicIdentity: %@, data: %@}",  (uint8_t *)&v2,  0x16u);
  sub_100008BB4();
}

void sub_100695120()
{
  sub_1000326E8( (void *)&_mh_execute_header,  v0,  v1,  "No message protection identity present -- not returning message protection identity",  v2,  v3,  v4,  v5,  v6);
  sub_100032728();
}

void sub_10069514C()
{
  sub_1000326DC( (void *)&_mh_execute_header,  v0,  v1,  "No full message protection identity present -- not returning message protection identity {identity: %{private}@}",  v2);
  sub_100008BB4();
}

void sub_1006951B0()
{
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_error_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "No message protection identity present -- not returning message protection identity {error: %{public}@, dataProtectionClass: %d",  v2,  0x12u);
  sub_100008BB4();
}

void sub_10069522C()
{
}

void sub_100695258()
{
}

void sub_1006952BC()
{
}

void sub_100695324()
{
}

void sub_10069538C(void *a1, uint64_t a2, os_log_s *a3)
{
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1 config]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 registeredIdentityContainer]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 ngmFullDeviceIdentity]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([a1 config]);
  char v10 = (void *)objc_claimAutoreleasedReturnValue([v9 unappliedRollingTicket]);
  int v12 = 138412802;
  int v13 = v8;
  sub_10003280C();
  __int16 v14 = v11;
  uint64_t v15 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_FAULT,  "Completed registration of public identity, but we were unable to apply the rolling ticket {ngmFullDeviceIdentity: %@ , unappliedRollingTicket: %@, rollError: %@}",  (uint8_t *)&v12,  0x20u);
}

void sub_100695490()
{
  id v2 = objc_msgSend((id)sub_1000327C8(v0, v1), "config");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 unregisteredIdentityContainer]);
  sub_100032710();
  sub_10003269C( (void *)&_mh_execute_header,  v5,  v6,  "Failed to get publicUnregisteredIdentityContainer -- Not updating registered data {error: %{public}@, unregisteredId entityContainer: %{private}@}",  v7,  v8,  v9,  v10,  v11);

  sub_1000326CC();
}

void sub_10069551C()
{
}

void sub_100695584()
{
}

void sub_1006955E8()
{
}

void sub_10069564C()
{
}

void sub_1006956B0()
{
  id v2 = objc_msgSend((id)sub_1000327C8(v0, v1), "config");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 previousRegisteredIdentityContainer]);
  sub_100032710();
  sub_10003269C( (void *)&_mh_execute_header,  v5,  v6,  "Failed to remove previous identity from memory and keychain {error: %{public}@, previousIdentity: %{private}@}",  v7,  v8,  v9,  v10,  v11);

  sub_1000326CC();
}

void sub_10069573C()
{
  id v2 = objc_msgSend((id)sub_1000327C8(v0, v1), "config");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identityClassD]);
  sub_100032710();
  sub_10003269C( (void *)&_mh_execute_header,  v5,  v6,  "Failed remove class C identity -- continuing with otther identities {error: %{public}@, identity: %{private}@}",  v7,  v8,  v9,  v10,  v11);

  sub_1000326CC();
}

void sub_1006957C8()
{
  id v2 = objc_msgSend((id)sub_1000327C8(v0, v1), "config");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identityClassC]);
  sub_100032710();
  sub_10003269C( (void *)&_mh_execute_header,  v5,  v6,  "Failed remove class C identity -- continuing with otther identities {error: %{public}@, identity: %{private}@}",  v7,  v8,  v9,  v10,  v11);

  sub_1000326CC();
}

void sub_100695854()
{
  id v2 = objc_msgSend((id)sub_1000327C8(v0, v1), "config");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identityClassA]);
  sub_100032710();
  sub_10003269C( (void *)&_mh_execute_header,  v5,  v6,  "Failed remove class A identity -- continuing with otther identities {error: %{public}@, identity: %{private}@}",  v7,  v8,  v9,  v10,  v11);

  sub_1000326CC();
}

void sub_1006958E0()
{
  sub_1000326B0( (void *)&_mh_execute_header,  v0,  (uint64_t)v0,  "Missing publicLegacyData -- returning NO {error: %{public}@, publicContainer: %{private}@}",  v1);
  sub_100008BB4();
}

void sub_100695948()
{
}

void sub_1006959A8(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "NGM encryption failed {error: %@}",  (uint8_t *)&v2,  0xCu);
}

void sub_100695A1C(uint64_t a1, void *a2, os_log_s *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a2 serviceIndexToKeyConfigs]);
  sub_10003DFC4();
  sub_10003DF80((void *)&_mh_execute_header, a3, v5, "No config for key Index %u %@", v6);

  sub_1000326CC();
}

void sub_100695AA8()
{
}

void sub_100695B08(unsigned __int16 a1, os_log_s *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to get config for registered key index {keyIndex: %u}",  (uint8_t *)v2,  8u);
}

void sub_100695B80(unsigned __int16 a1, void *a2, os_log_s *a3)
{
  int v4 = a1;
  unsigned int v5 = [a2 isRegistered];
  uint64_t v7 = @"NO";
  if (v5) {
    uint64_t v7 = @"YES";
  }
  v8[0] = 67109378;
  v8[1] = v4;
  __int16 v9 = 2112;
  uint64_t v10 = v7;
  sub_10003DF80( (void *)&_mh_execute_header,  a3,  v6,  "Failed to get unregistered identity for key index {keyIndex: %u, isRegistered: %@}",  (uint8_t *)v8);
}

void sub_100695C2C()
{
}

void sub_100695C8C(unsigned __int16 a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3 = *a2;
  v4[0] = 67109635;
  v4[1] = a1;
  __int16 v5 = 2113;
  uint64_t v6 = 0LL;
  __int16 v7 = 2113;
  uint64_t v8 = v3;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Failed to get expected data for key index {keyIndex: %u, unregisteredIdentity: %{private}@, error: %{private}@",  (uint8_t *)v4,  0x1Cu);
}

void sub_100695D20()
{
}

void sub_100695D80(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138543618;
  *(void *)((char *)&v3 + 4) = a1;
  WORD6(__chkstk_darwin(v2, v3) = 1024;
  HIWORD(__chkstk_darwin(v2, v3) = a2;
  sub_10003DF6C( (void *)&_mh_execute_header,  a2,  a3,  "Failed to purge identity or remove keychain reference {error: %{public}@, keyIndex: %u}",  v3,  0);
  sub_100008BB4();
}

void sub_100695DF4(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Dealloc'ing IDSSocketPairConnection without ending the session",  v1,  2u);
}

void sub_100695E34()
{
}

void sub_100695EB4()
{
}

void sub_100695F34()
{
}

void sub_100695FB4()
{
}

void sub_100696034()
{
}

void sub_1006960B4()
{
}

void sub_100696134()
{
}

void sub_1006961B4()
{
}

void sub_100696234()
{
  int v0 = 138412546;
  uint64_t v1 = @"spam-message";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006962CC(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Error committing replay state { error: %@ }",  (uint8_t *)&v2,  0xCu);
}

void sub_100696340(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Nil parameter given to replay commiter. Calling block now.",  v1,  2u);
}

void sub_100696380(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Error committing replay state { key: %@, error: %@ }",  (uint8_t *)&v3,  0x16u);
}

void sub_100696404( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069646C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006964D4(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412546;
  uint64_t v3 = a1;
  __int16 v4 = 2048;
  uint64_t v5 = 0x4143C68000000000LL;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Non-sensical heartbeat value: %@ from server, using default: %f",  (uint8_t *)&v2,  0x16u);
}

void sub_10069655C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Priority is none for performBlock", v1, 2u);
}

void sub_10069659C()
{
}

void sub_10069661C()
{
}

void sub_10069669C()
{
}

void sub_10069671C()
{
}

void sub_10069679C(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Connection not entitled to retrieve opportunistic cache -- failing {connection: %@}",  (uint8_t *)&v4,  0xCu);
}

void sub_100696830(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, " => hit!", v1, 2u);
}

void sub_100696870(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, " => Checking %@", (uint8_t *)&v2, 0xCu);
  sub_100008BB4();
}

void sub_1006968E0(int a1, os_log_s *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "We don't support this unknown registration type { registrationType: %d }",  (uint8_t *)v2,  8u);
}

void sub_100696954(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "We don't support this unknown registration service type { serviceType: %@ }",  (uint8_t *)&v2,  0xCu);
  sub_100008BB4();
}

void sub_1006969C4(uint64_t a1, uint8_t *buf, int a3, os_log_t log)
{
  *(_DWORD *)buf = 67109378;
  *((_DWORD *)buf + 1) = a3;
  *((_WORD *)buf + 4) = 2112;
  *(void *)(buf + 10) = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Attempting to register unknown registration type (%d): %@",  buf,  0x12u);
}

void sub_100696A18(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failing Home Number registration because no authentication cert on registration: %@",  (uint8_t *)&v2,  0xCu);
  sub_100008BB4();
}

void sub_100696A88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100696B14( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100696BA0()
{
}

void sub_100696C20()
{
}

void sub_100696CA0()
{
}

void sub_100696D1C()
{
}

void sub_100696D9C()
{
}

void sub_100696E1C()
{
}

void sub_100696E9C()
{
}

void sub_100696F1C()
{
}

void sub_100696F9C()
{
}

void sub_10069701C()
{
}

void sub_10069709C()
{
}

void sub_10069711C()
{
}

void sub_10069719C()
{
}

void sub_10069721C()
{
}

void sub_10069729C()
{
}

void sub_10069731C()
{
}

void sub_10069739C()
{
}

void sub_10069741C()
{
}

void sub_10069749C()
{
}

void sub_10069751C()
{
}

void sub_10069759C()
{
}

void sub_10069761C()
{
}

void sub_10069769C()
{
}

void sub_10069771C()
{
}

void sub_10069779C()
{
}

void sub_10069781C()
{
}

void sub_10069787C()
{
}

void sub_1006978FC()
{
}

void sub_10069797C()
{
}

void sub_1006979FC()
{
}

void sub_100697A7C()
{
}

void sub_100697AFC()
{
}

void sub_100697B7C()
{
}

void sub_100697BFC()
{
}

void sub_100697C7C()
{
}

void sub_100697CFC()
{
}

void sub_100697D7C()
{
}

void sub_100697DFC()
{
}

void sub_100697E7C()
{
}

void sub_100697EFC()
{
}

void sub_100697F7C()
{
}

void sub_100697FFC()
{
}

void sub_10069807C()
{
}

void sub_1006980FC()
{
}

void sub_10069817C()
{
}

void sub_1006981FC()
{
}

void sub_10069827C()
{
}

void sub_1006982FC()
{
}

void sub_10069837C()
{
}

void sub_1006983FC()
{
}

void sub_10069847C()
{
}

void sub_1006984FC()
{
}

void sub_10069857C()
{
}

void sub_1006985FC()
{
}

void sub_100698678()
{
}

void sub_1006986F8()
{
}

void sub_100698778()
{
}

void sub_1006987F8()
{
}

void sub_100698878()
{
}

void sub_1006988A4()
{
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_fault_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, " invalid port %d", v2, 0x16u);
  sub_100008BB4();
}

void sub_100698920(uint8_t *buf, _BYTE *a2)
{
  *buf = 0;
  *a2 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_FAULT,  "COPY_INT_VALUE_AND_ADVANCE ERROR, return -1",  buf,  2u);
}

void sub_100698960()
{
}

void sub_1006989C0()
{
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_error_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "<%@> - didReceiveParticipantUpdate: unsupported messageType: %u",  v2,  0x12u);
  sub_100008BB4();
}

void sub_100698A3C()
{
}

void sub_100698ABC()
{
}

void sub_100698B3C()
{
}

void sub_100698BBC()
{
}

void sub_100698C3C()
{
}

void sub_100698CBC()
{
}

void sub_100698D3C()
{
}

void sub_100698DBC(void *a1)
{
}

void sub_100698DD8()
{
}

void sub_100698E58()
{
}

void sub_100698ED8()
{
}

void sub_100698F58()
{
}

void sub_100698F84( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100698FE8()
{
}

void sub_100699014()
{
}

void sub_100699094()
{
}

void sub_100699114()
{
}

void sub_100699194( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006991FC()
{
}

void sub_100699228()
{
}

void sub_100699288(void *a1, id *a2, os_log_s *a3)
{
  id v5 = [a1 unsignedLongLongValue];
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([*a2 sharedState]);
  __int16 v7 = (void *)objc_claimAutoreleasedReturnValue([v6 groupID]);
  int v8 = 134218242;
  id v9 = v5;
  __int16 v10 = 2112;
  uint8_t v11 = v7;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "_decryptReceivedDataBlobsUsingSKMs: no valid URI for participantID: %llu, group: %@",  (uint8_t *)&v8,  0x16u);
}

void sub_100699350()
{
}

void sub_10069937C()
{
}

void sub_1006993E8()
{
}

void sub_100699468(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "protectedData is nil, return", v1, 2u);
}

void sub_1006994A8(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "IDSServerDesiredEncryptedDataSet materialDataByID: error: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_10069951C(int *a1, os_log_s *a2, uint64_t a3)
{
  int v3 = *a1;
  v4[0] = 67109120;
  v4[1] = v3;
  sub_1000BEC30((void *)&_mh_execute_header, a2, a3, "Unhandled signal: %d", (uint8_t *)v4);
}

void sub_10069958C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "IDSAgent exception caught on main thread: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_100699600(os_log_s *a1)
{
  int v2 = *__error();
  v4[0] = 67109120;
  v4[1] = v2;
  sub_1000BEC30((void *)&_mh_execute_header, a1, v3, "Failed to set io policy: %{darwin.errno}d", (uint8_t *)v4);
  sub_1000BEC3C();
}

void sub_10069967C(os_log_s *a1)
{
  int v2 = *__error();
  v4[0] = 67109120;
  v4[1] = v2;
  sub_1000BEC30((void *)&_mh_execute_header, a1, v3, "Failed to set user dir suffix: %{darwin.errno}d", (uint8_t *)v4);
  sub_1000BEC3C();
}

void sub_1006996F8()
{
}

void sub_100699720()
{
}

void sub_100699748()
{
}

void sub_100699770()
{
}

void sub_1006997F0()
{
}

void sub_100699870(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Missing required entitlement to send cache clear request. {connection: %@}",  (uint8_t *)&v3,  0xCu);
}

void sub_1006998E8( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069994C()
{
}

void sub_1006999CC()
{
}

void sub_100699A4C()
{
}

void sub_100699ACC()
{
}

void sub_100699B4C()
{
}

void sub_100699BCC()
{
}

void sub_100699C4C()
{
}

void sub_100699CCC()
{
}

void sub_100699D4C()
{
}

void sub_100699DCC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 UUIDString]);
  sub_1000CD1E4();
  sub_1000CD204( (void *)&_mh_execute_header,  v2,  v3,  "Dropping group session participant update due to groupID mismatch { type: %lu, groupID: %@, groupUUID: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_1000CD218();
}

void sub_100699E54(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Cannot get participantsForGroupID, no groupID!",  (uint8_t *)&v3,  0x16u);
  sub_100008BB4();
}

void sub_100699ED4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 UUIDString]);
  sub_1000CD1E4();
  sub_1000CD204( (void *)&_mh_execute_header,  v2,  v3,  "processIncomingParticipantDataUpdateMessage: Dropping due to groupID mismatch { type: %lu, groupID: %@, groupUUID: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_1000CD218();
}

void sub_100699F5C()
{
}

void sub_100699FDC()
{
}

void sub_10069A05C()
{
}

void sub_10069A0DC()
{
}

void sub_10069A15C()
{
}

void sub_10069A1DC()
{
}

void sub_10069A25C()
{
}

void sub_10069A2DC()
{
}

void sub_10069A35C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 134218242;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Error creating proxy for OffGrid state manager client {self: %p, uuid: %@}",  (uint8_t *)&v3,  0x16u);
}

void sub_10069A3E0(int a1, os_log_s *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to register for family contacts change notification: %d",  (uint8_t *)v2,  8u);
  sub_100032728();
}

void sub_10069A450()
{
}

void sub_10069A47C()
{
}

void sub_10069A4A8()
{
}

void sub_10069A4D4()
{
}

void sub_10069A500()
{
}

void sub_10069A52C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Invalid Status Payload %@",  (uint8_t *)&v2,  0xCu);
}

void sub_10069A5A0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "plain: %@, encrypted: %@, decrypted: %@",  (uint8_t *)&v3,  0x16u);
}

void sub_10069A624()
{
}

void sub_10069A650()
{
}

void sub_10069A67C()
{
}

void sub_10069A6A8()
{
}

void sub_10069A6D4()
{
}

void sub_10069A734()
{
}

void sub_10069A794()
{
}

void sub_10069A7F4(uint64_t a1, uint64_t *a2, os_log_s *a3)
{
  if (a2) {
    uint64_t v3 = *a2;
  }
  else {
    uint64_t v3 = 0LL;
  }
  *(_DWORD *)uint64_t v4 = 138543618;
  *(void *)&void v4[4] = a1;
  *(_WORD *)&v4[12] = 2114;
  *(void *)&v4[14] = v3;
  sub_100032750( (void *)&_mh_execute_header,  (uint64_t)a2,  a3,  "Failed to remove item from keychain {identifier: %{public}@, error: %{public}@}",  *(void *)v4,  *(void *)&v4[8],  *(void *)&v4[16]);
  sub_100008BB4();
}

void sub_10069A874(void *a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)uint64_t v3 = 138543619;
  *(void *)&v3[4] = *a1;
  *(_WORD *)&v3[12] = 2113;
  *(void *)&v3[14] = a2;
  sub_100032750( (void *)&_mh_execute_header,  a2,  a3,  "Failed to create cluster from data {error: %{public}@, data: %{private}@}",  *(void *)v3,  *(void *)&v3[8],  *(void *)&v3[16]);
  sub_100008BB4();
}

void sub_10069A8E8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138543619;
  uint64_t v4 = a1;
  __int16 v5 = 2113;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Missing legacy identity data from -[<IDSClientDataRegistrationKeyManager> publicMessageProtectionIdentityDataToRegis terWithError:] -- {error: %{public}@, publicIdentityData: %{private}@}",  (uint8_t *)&v3,  0x16u);
}

void sub_10069A96C(uint8_t *a1, void *a2, void *a3, os_log_s *a4)
{
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 publicLegacyIdentityData]);
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a4,  OS_LOG_TYPE_DEBUG,  "Adding public key to client data: %@",  a1,  0xCu);
}

void sub_10069A9E0( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069AA14( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069AA48()
{
}

void sub_10069AAC8()
{
}

void sub_10069AB48()
{
}

void sub_10069ABC8()
{
}

void sub_10069AC48()
{
}

void sub_10069ACC8()
{
}

void sub_10069AD48()
{
}

void sub_10069ADC8()
{
}

void sub_10069ADF4()
{
}

void sub_10069AE20()
{
}

void sub_10069AE58()
{
  __assert_rtn( "-[IDSMultiplexerGroupSessionTransport routeClientConnections:]_block_invoke",  "IDSSessionMultiplexer.m",  358,  "0 == SecRandomCopyBytes(kSecRandomDefault, sizeof(self->_fanoutEncryptionSendingSSRC), &(self->_fanoutEncryptionSendingSSRC))");
}

void sub_10069AE80(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Failed to create IDSVMRegistrationResponse from dataRepresentation : %@, error : %@",  (uint8_t *)&v3,  0x16u);
}

void sub_10069AF04(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to create dataRepresentation from IDSVMRequest, error : %@",  (uint8_t *)&v2,  0xCu);
}

void sub_10069AF78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069B004( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069B090()
{
  int v0 = 138412546;
  uint64_t v1 = @"sP";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_10069B128(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Ignoring push: invalid value for {cohortSelected: %@}",  (uint8_t *)&v2,  0xCu);
}

void sub_10069B19C(uint64_t a1, os_log_s *a2, uint64_t a3)
{
  int v3 = 134217984;
  uint64_t v4 = a1;
  sub_1000326DC( (void *)&_mh_execute_header,  a2,  a3,  "Unhandled action in registration push message {action: %ld}",  (uint8_t *)&v3);
}

void sub_10069B208(void *a1, os_log_s *a2)
{
  int v3 = (void *)objc_claimAutoreleasedReturnValue([a1 responseStatus]);
  int v5 = 138412290;
  uint64_t v6 = v3;
  sub_1000326DC( (void *)&_mh_execute_header,  a2,  v4,  "Validate credentials returned an error -- taking no action {status: %@}",  (uint8_t *)&v5);
}

void sub_10069B294()
{
}

void sub_10069B2F4(void *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1 responseEngramID]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([a1 responseVersion]);
  sub_1000CD204( (void *)&_mh_execute_header,  v3,  v4,  "responseEngram %@ responseGroupID %@ error %@",  v5,  v6,  v7,  v8,  2u);

  sub_1000CD218();
}

void sub_10069B3A4()
{
  uint64_t v7 = v0;
  __int16 v8 = v1;
  uint64_t v9 = v2;
  __int16 v10 = v1;
  uint64_t v11 = v3;
  __int16 v12 = v1;
  uint64_t v13 = v4;
  _os_log_fault_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_FAULT,  "Failed to save group to groupServer {pg: %{private}@, publicGroupRepresentation: %{private}@, signature: %{private}@ , forwardingTicket: %{private}@, groupServerError: %{private}@}",  v6,  0x34u);
}

void sub_10069B43C()
{
  __int16 v3 = 2114;
  uint64_t v4 = v0;
  sub_100101770( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "Failed to get group {groupID: %{public}@, error: %{public}@}",  v2);
  sub_100008BB4();
}

void sub_10069B4B0()
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([0 applicationData]);
  sub_1000CD204( (void *)&_mh_execute_header,  v0,  v1,  "Groups returned from server don't contain expected group {groupID: %{public}@, entries: %{public}@, resultGroup.appl icationData: %{private}@}",  v2,  v3,  v4,  v5,  3u);

  sub_1000CD218();
}

void sub_10069B554()
{
}

void sub_10069B5C0(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 cypher]);
  sub_10010177C();
  sub_100101770( (void *)&_mh_execute_header,  a2,  v4,  "Failed group->groupPublicData -- unexpected cypher {group.cypher: %{public}@, group: %{private}@}",  v5);

  sub_1000326CC();
}

void sub_10069B648(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 accountIdentity]);
  sub_10010177C();
  sub_100101770( (void *)&_mh_execute_header,  a3,  v5,  "Failed group->groupPublicData -- unexpected accountIdeneity class {groupContext.accountIdentity: %{public}@, group: %{private}@}",  v6);

  sub_1000326CC();
}

void sub_10069B6D0(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  int v3 = 138543619;
  uint64_t v4 = a1;
  __int16 v5 = 2113;
  uint64_t v6 = a2;
  sub_100101770( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "Failed group->groupPublicData -- couldn't get pair from groupData {error: %{public}@, entry: %{private}@}",  (uint8_t *)&v3);
  sub_100008BB4();
}

void sub_10069B748(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 accountIdentity]);
  sub_10010177C();
  sub_100101770( (void *)&_mh_execute_header,  a3,  v5,  "Failed group->groupPublicData -- unexpected deviceIdentity class {groupContext.accountIdentity: %{public}@, data: %{private}@}",  v6);

  sub_1000326CC();
}

void sub_10069B7D0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069B838()
{
}

void sub_10069B898()
{
  uint64_t v3 = v0;
  sub_100101770( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "Failed to create GroupServerEntry from publicDataRepresentation -- failed to deserialize {error: %{public}@, data: %{private}@}",  v2);
  sub_100008BB4();
}

void sub_10069B914(uint64_t *a1, uint64_t a2, os_log_s *a3)
{
  if (a1) {
    uint64_t v3 = *a1;
  }
  else {
    uint64_t v3 = 0LL;
  }
  int v4 = 138543618;
  uint64_t v5 = v3;
  __int16 v6 = 2114;
  uint64_t v7 = a2;
  sub_100101770( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "Failed to create GroupServerEntry dataRepresentation -- Failed to serialize {error: %{public}@, dictionary: %{public}@}",  (uint8_t *)&v4);
  sub_100008BB4();
}

void sub_10069B99C()
{
}

void sub_10069BA18()
{
}

void sub_10069BA94()
{
}

void sub_10069BB10( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069BB74()
{
}

void sub_10069BBF0()
{
}

void sub_10069BC6C()
{
}

void sub_10069BCE8()
{
}

void sub_10069BD48()
{
}

void sub_10069BDC4()
{
}

void sub_10069BE24()
{
}

void sub_10069BE84()
{
}

void sub_10069BF00()
{
}

void sub_10069BF2C()
{
}

void sub_10069BF8C()
{
}

void sub_10069BFEC()
{
}

void sub_10069C068()
{
}

void sub_10069C0E4()
{
}

void sub_10069C110()
{
  v2[0] = 138412546;
  sub_100108288();
  uint64_t v3 = v0;
  _os_log_error_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "Failed CloudKit query for KT loggable data {error: %@, query: %@}",  (uint8_t *)v2,  0x16u);
  sub_100008BB4();
}

void sub_10069C18C()
{
}

void sub_10069C1B8(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Unsupported schema version: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_10069C22C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "An unnecessary paired device keychain migration was attempted.",  v1,  2u);
}

void sub_10069C26C()
{
}

void sub_10069C2CC()
{
}

void sub_10069C32C()
{
}

void sub_10069C38C()
{
}

void sub_10069C3EC()
{
}

void sub_10069C44C()
{
}

void sub_10069C4AC()
{
}

void sub_10069C50C()
{
}

void sub_10069C56C()
{
}

void sub_10069C5CC()
{
}

void sub_10069C62C()
{
}

void sub_10069C6AC()
{
}

void sub_10069C72C()
{
}

void sub_10069C7AC()
{
}

void sub_10069C82C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Failed existingFullDeviceIdentity -- keychain error getting device identity {error: %{public}@}",  (uint8_t *)&v2,  0xCu);
}

void sub_10069C8A0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138543618;
  uint64_t v4 = a1;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed getExistingFullDeviceIdentity -- missing fullAdminIdentity {error: %{public}@, cluster: %{public}@}",  (uint8_t *)&v3,  0x16u);
}

void sub_10069C924(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "ReunionSync require entitlement for non-empty service list {entitlement: com.apple.private.ids.prefer-infrawifi, ser vices: %{public}@}",  (uint8_t *)&v2,  0xCu);
}

void sub_10069C998(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "control channel _cancelConnectionAndResetDataConnections missing _connection!",  v1,  2u);
}

void sub_10069C9D8()
{
}

void sub_10069CA58()
{
}

void sub_10069CAD8()
{
}

void sub_10069CB58()
{
}

void sub_10069CBD8()
{
}

void sub_10069CC58(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Unparseable Home Number expiration: %@",  (uint8_t *)&v2,  0xCu);
  sub_100008BB4();
}

void sub_10069CCC8(uint64_t a1, void *a2, os_log_s *a3)
{
  __int16 v5 = (void *)objc_claimAutoreleasedReturnValue([a2 evictionDate]);
  int v6 = 138478083;
  uint64_t v7 = a1;
  __int16 v8 = 2114;
  uint64_t v9 = v5;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_DEBUG,  "Evicting item {key: %{private}@, evictionDate: %{public}@}",  (uint8_t *)&v6,  0x16u);
}

void sub_10069CD78(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 masterKeyMaterials]);
  sub_1001332CC();
  sub_1001332B8( (void *)&_mh_execute_header,  v2,  v3,  "Adding remote MkM set to collection to broadcast { remoteMkMSet: %@, self: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_1000326CC();
}

void sub_10069CDF8(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 nextLocalMasterKeyMaterial]);
  sub_1001332CC();
  sub_1001332B8( (void *)&_mh_execute_header,  v2,  v3,  "Adding next local MkM to collection to broadcast { nextLocalMkM: %@ self: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_1000326CC();
}

void sub_10069CE78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069CF04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069CF90()
{
}

void sub_10069CFBC()
{
}

void sub_10069CFE8()
{
}

void sub_10069D014()
{
}

void sub_10069D040(void *a1, os_log_s *a2)
{
  int v3 = 134217984;
  id v4 = [a1 state];
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Invalid state update across XPC for updateFeatureToggleState { state : %lu }",  (uint8_t *)&v3,  0xCu);
}

void sub_10069D0C8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed to initialize validation session with device UDID",  v1,  2u);
  sub_100032728();
}

void sub_10069D104()
{
}

void sub_10069D164()
{
}

void sub_10069D1C4()
{
}

void sub_10069D224()
{
}

void sub_10069D2A4()
{
}

void sub_10069D324()
{
}

void sub_10069D3A4()
{
}

void sub_10069D424()
{
}

void sub_10069D4A4(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_100032764();
  sub_10014BB9C((void *)&_mh_execute_header, a2, v4, "Account with unique ID %@ already removed, ignoring...", v5);

  sub_100032788();
}

void sub_10069D524(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_100032764();
  sub_10014BB9C((void *)&_mh_execute_header, a2, v4, "Account with unique ID %@ already added, ignoring...", v5);

  sub_100032788();
}

void sub_10069D5A4(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_100032764();
  sub_10014BB9C((void *)&_mh_execute_header, a2, v4, "Primary account with unique ID %@ already added, ignoring...", v5);

  sub_100032788();
}

void sub_10069D624()
{
}

void sub_10069D688()
{
}

void sub_10069D6EC()
{
}

void sub_10069D74C(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_100032764();
  sub_10014BB9C((void *)&_mh_execute_header, a2, v4, " * Tried to setup ad hoc account directly %@, ignoring...", v5);

  sub_100032788();
}

void sub_10069D7CC()
{
}

void sub_10069D830(uint8_t *a1, void *a2, void *a3, os_log_s *a4)
{
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 smallDescription]);
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a4,  OS_LOG_TYPE_DEBUG,  "  => Found existing adhoc account %@",  a1,  0xCu);
}

void sub_10069D8A4()
{
  __int16 v1 = 2080;
  uint64_t v2 = "prefDictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  v0,  0x16u);
  sub_100008BB4();
}

void sub_10069D92C()
{
}

void sub_10069D990()
{
}

void sub_10069D9F0()
{
  int v0 = 138412546;
  uint64_t v1 = @"attributes";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_10069DA88(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Failed to fetch selected phone number registration subscription { error: %@ }",  (uint8_t *)&v2,  0xCu);
}

void sub_10069DAFC()
{
}

void sub_10069DB5C()
{
}

void sub_10069DBBC( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069DC24()
{
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_FAULT,  "Tried to create an ad hoc account (loginID %@   service %@) with no primary account",  v2,  0x16u);
  sub_100008BB4();
}

void sub_10069DCA0()
{
}

void sub_10069DD00(void *a1, void *a2, os_log_s *a3)
{
  id v5 = objc_retainBlock(a1);
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 uniqueID]);
  int v7 = 134218242;
  id v8 = v5;
  __int16 v9 = 2112;
  __int16 v10 = v6;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_DEBUG,  "Storing setup handler %p  %@",  (uint8_t *)&v7,  0x16u);
}

void sub_10069DDBC(uint64_t a1, os_log_s *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "Broadcasting account info changes %@",  (uint8_t *)&v3,  0xCu);
  sub_100008BB4();
}

void sub_10069DE30()
{
}

void sub_10069DE9C()
{
}

void sub_10069DF08(uint64_t a1, void *a2, os_log_s *a3)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a2 uniqueIdentifier]);
  int v7 = 138412546;
  uint64_t v8 = a1;
  __int16 v9 = 2112;
  __int16 v10 = v5;
  sub_1000326B0( (void *)&_mh_execute_header,  a3,  v6,  "User previously denied PNR consent -- not sending PNR {self: %@, PNRuniqueIdentifier: %@}",  (uint8_t *)&v7);
}

void sub_10069DFB0()
{
}

void sub_10069E030()
{
}

void sub_10069E0B0()
{
}

void sub_10069E130()
{
}

void sub_10069E1B0()
{
}

void sub_10069E230()
{
}

void sub_10069E2B0()
{
}

void sub_10069E330()
{
}

void sub_10069E35C()
{
}

void sub_10069E388(int *a1, os_log_s *a2)
{
  int v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Failed to remove the has-regenerated-secured-encryption-keys flag from the keychain. CFErrorRef error = %d",  (uint8_t *)v3,  8u);
  sub_100032728();
}

void sub_10069E3FC()
{
}

void sub_10069E428()
{
}

void sub_10069E494( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069E504( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069E574()
{
}

void sub_10069E5A0(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend((id)sub_10017BB30(a1, a2), "cbuuidUUID");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  _DWORD *v3 = 138477827;
  void *v2 = v5;
  sub_10017BB1C((void *)&_mh_execute_header, v6, v7, "Failed to create IDSNRDeviceIdentifier {cbuuidUUID: %{private}@}");

  sub_10017BB58();
}

void sub_10069E5F0(uint8_t *a1, _BYTE *a2, os_log_s *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_10017BB64( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "Skipping registerDevice with NetworkRelay as !wasInitiallySetupUsingIDSPairing",  a1);
}

void sub_10069E624(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend((id)sub_10017BB30(a1, a2), "cbuuidUUID");
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  _DWORD *v3 = 138477827;
  void *v2 = v5;
  sub_10017BB1C((void *)&_mh_execute_header, v6, v7, "Paired device does not support IPsec {cbuuidUUID: %{private}@}");

  sub_10017BB58();
}

void sub_10069E674()
{
}

void sub_10069E6E0( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069E750( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069E7B4(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)uint64_t v3 = 138543619;
  *(void *)&v3[4] = a1;
  *(_WORD *)&v3[12] = 2113;
  *(void *)&v3[14] = *(void *)(a2 + 32);
  sub_10017BB08( (void *)&_mh_execute_header,  a2,  a3,  "NRDeviceManager register returned an error -- ignorning it and enabling device {error: %{public}@, cbuuid: %{private}@}",  *(void *)v3,  *(void *)&v3[8],  *(void *)&v3[16]);
  sub_100008BB4();
}

void sub_10069E828()
{
}

void sub_10069E854()
{
  uint64_t v2 = @"NO";
  __int16 v3 = 2113;
  uint64_t v4 = 0LL;
  _os_log_error_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_ERROR,  "Did not call NetworkRelay to register {cbuuidUUID: %{private}@, isPaired: %@, _BTOutOfBandKeyCopy: %{private}@}",  v1,  0x20u);
}

void sub_10069E8DC()
{
}

void sub_10069E940()
{
}

void sub_10069E96C()
{
}

void sub_10069E99C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000C5484( (void *)&_mh_execute_header,  a2,  a3,  "newDeviceIdentifierWithBluetoothUUID return nil {cbuuid: %{private}@}",  a5,  a6,  a7,  a8,  3u);
  sub_100008BB4();
}

void sub_10069EA00()
{
}

void sub_10069EA60()
{
}

void sub_10069EAC0()
{
}

void sub_10069EB20()
{
}

void sub_10069EB80()
{
}

void sub_10069EBE4()
{
}

void sub_10069EC10()
{
}

void sub_10069EC3C(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "SecMWCreateEphemeralDeviceIdentity (error: %@)",  (uint8_t *)&v3,  0xCu);
  sub_100008BB4();
}

void sub_10069ECB0()
{
}

void sub_10069ED10()
{
}

void sub_10069ED3C(void *a1, os_log_s *a2)
{
}

void sub_10069EDC0()
{
  __int16 v2 = 2080;
  uint64_t v3 = "_encryptionSequenceNumbers";
  sub_1000326B0( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v0,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  v1);
  sub_100008BB4();
}

void sub_10069EE40()
{
}

void sub_10069EEA0()
{
}

void sub_10069EF00()
{
}

void sub_10069EF60()
{
}

void sub_10069EFC0(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 134218240;
  *(void *)((char *)&v3 + 4) = a1;
  sub_100197CF4();
  sub_10017BB08((void *)&_mh_execute_header, v1, v2, "participantID changed from %llu to %llu", (void)v3, DWORD2(v3));
  sub_100008BB4();
}

void sub_10069F028()
{
}

void sub_10069F088()
{
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_error_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "createKeyMaterialForGroup: _mkmExpireDuration: %d is less than _mkmRollDuration: %d, use _mkmExpireDuration to renew MKM",  v2,  0xEu);
  sub_100008BB4();
}

void sub_10069F10C()
{
}

void sub_10069F16C()
{
}

void sub_10069F1CC()
{
}

void sub_10069F22C()
{
}

void sub_10069F290()
{
}

void sub_10069F2F0()
{
}

void sub_10069F354()
{
}

void sub_10069F38C()
{
}

void sub_10069F3EC()
{
}

void sub_10069F44C()
{
}

void sub_10069F4AC(uint64_t a1, void *a2)
{
  id v4 = sub_100197CE0(a1, a2);
  _DWORD *v3 = 134217984;
  void *v2 = v4;
  sub_100197CCC( (void *)&_mh_execute_header,  v5,  v6,  "_protectedCachedKeyMaterialsForDestination: Unknown wrap mode -- will prevent MKM delivery! (wrapMode: %llu)");
  sub_10017BB58();
}

void sub_10069F4EC(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138412546;
  *(void *)((char *)&v3 + 4) = *(void *)(a1 + 56);
  sub_100197CF4();
  sub_10017BB08( (void *)&_mh_execute_header,  v1,  v2,  "MkM message failed to send! { destination: %@, responseCode: %ld }",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_10069F558()
{
}

void sub_10069F5B8()
{
}

void sub_10069F618()
{
  v2[0] = 136315394;
  sub_10017BB44();
  sub_1000326B0( (void *)&_mh_execute_header,  v0,  v1,  "%s keyMaterialCache does not exist for group: %@ - returning",  (uint8_t *)v2);
  sub_100008BB4();
}

void sub_10069F688( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069F6F8()
{
  v3[0] = 136315650;
  sub_10017BB44();
  __int16 v4 = v0;
  uint64_t v5 = v1;
  _os_log_error_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "%s group %@ or session %@ does not exist - returning",  (uint8_t *)v3,  0x20u);
}

void sub_10069F780()
{
}

void sub_10069F7AC()
{
}

void sub_10069F80C()
{
}

void sub_10069F86C()
{
}

void sub_10069F8CC( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069F934()
{
}

void sub_10069F994()
{
}

void sub_10069FA00()
{
}

void sub_10069FA60(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed to weak link UNUserNotificationCenter",  v1,  2u);
}

void sub_10069FAA0(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Failed to weak link UN class required to post notification: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_10069FB14()
{
  int v0 = 138412546;
  uint64_t v1 = @"csr";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_10069FBAC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v3,  0x16u);
}

void sub_10069FC30(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Failed to create IDSVMRequest from dataRepresentation : %@, error : %@",  (uint8_t *)&v3,  0x16u);
}

void sub_10069FCB4()
{
}

void sub_10069FD14()
{
}

void sub_10069FD74()
{
}

void sub_10069FDD4()
{
}

void sub_10069FE00( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10069FE64()
{
}

void sub_10069FE90()
{
}

void sub_10069FEBC()
{
}

void sub_10069FF1C()
{
}

void sub_10069FF7C()
{
}

void sub_10069FFDC()
{
}

void sub_1006A003C()
{
}

void sub_1006A009C()
{
}

void sub_1006A00C8()
{
}

void sub_1006A0134()
{
  int v0 = 138412546;
  uint64_t v1 = IDSCommandKey;
  __int16 v2 = 2080;
  uint64_t v3 = "idsMessage";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006A01D0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Forcing a bag fetch to refresh EN versioning",  (uint8_t *)&v3,  0x16u);
}

void sub_1006A0254()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString *getCNContactEmailAddressesKey(void)"));
  objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v0,  @"IDSContactsUtilities.m",  22,  @"%s",  sub_1001CD40C());

  __break(1u);
}

void sub_1006A02C4()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString *getCNContactPhoneNumbersKey(void)"));
  objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v0,  @"IDSContactsUtilities.m",  23,  @"%s",  sub_1001CD40C());

  __break(1u);
}

void sub_1006A0334()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString *getCNContactTypeKey(void)"));
  objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v0,  @"IDSContactsUtilities.m",  26,  @"%s",  sub_1001CD40C());

  __break(1u);
}

void sub_1006A03A4()
{
  int v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getCNContactStoreClass(void)_block_invoke"));
  objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v1,  @"IDSContactsUtilities.m",  18,  @"Unable to find class %s",  "CNContactStore");

  __break(1u);
}

void sub_1006A041C(void *a1)
{
  __int16 v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  int v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *ContactsLibrary(void)"));
  objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"IDSContactsUtilities.m",  16,  @"%s",  *a1);

  __break(1u);
}

void sub_1006A0498()
{
  int v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getCNContactClass(void)_block_invoke"));
  objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v1,  @"IDSContactsUtilities.m",  17,  @"Unable to find class %s",  "CNContact");

  __break(1u);
}

void sub_1006A0510()
{
  int v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getCNPhoneNumberClass(void)_block_invoke"));
  objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v1,  @"IDSContactsUtilities.m",  19,  @"Unable to find class %s",  "CNPhoneNumber");

  __break(1u);
}

void sub_1006A0588()
{
  int v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getCNContactFormatterClass(void)_block_invoke"));
  objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v1,  @"IDSContactsUtilities.m",  20,  @"Unable to find class %s",  "CNContactFormatter");

  __break(1u);
}

void sub_1006A0600()
{
  int v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getCNContactFetchRequestClass(void)_block_invoke"));
  objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v1,  @"IDSContactsUtilities.m",  21,  @"Unable to find class %s",  "CNContactFetchRequest");

  __break(1u);
}

void sub_1006A0678()
{
  int v0 = 138412546;
  uint64_t v1 = @"ids-group-stable-key-material-cache-current-remote-SKM-key";
  __int16 v2 = 2080;
  int v3 = "self.pushTokenToSKMsMapping[pushToken]";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006A0710( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A0790()
{
}

void sub_1006A0810()
{
}

void sub_1006A0890()
{
}

void sub_1006A0910()
{
}

void sub_1006A0990()
{
}

void sub_1006A0A10()
{
}

void sub_1006A0A90()
{
}

void sub_1006A0B10()
{
}

void sub_1006A0B90(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Building Message delivery",  (uint8_t *)&v3,  0x16u);
  sub_100008BB4();
}

void sub_1006A0C10( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A0C44( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A0C78(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error while publishing status: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1006A0CEC( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A0D50()
{
}

void sub_1006A0D7C()
{
}

void sub_1006A0DA8()
{
}

void sub_1006A0E08()
{
}

void sub_1006A0E34()
{
}

void sub_1006A0E60(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A0EE4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A0F68()
{
}

void sub_1006A0F94()
{
}

void sub_1006A0FF8()
{
}

void sub_1006A105C()
{
}

void sub_1006A1088()
{
}

void sub_1006A10B4()
{
}

void sub_1006A10E0()
{
}

void sub_1006A110C()
{
}

void sub_1006A116C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A11F0(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_100032764();
  sub_10003273C( (void *)&_mh_execute_header,  v2,  v3,  "Registration is not active on account %@, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1268(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A12EC()
{
  *(void *)(v3 + 14) = "-[IDSDAccount(Registration) _reregisterAndReidentify:]";
  sub_1000326B0((void *)&_mh_execute_header, v4, (uint64_t)v4, "Local account %@, can't call %s, ignoring...", v5);

  sub_1000327B4();
}

void sub_1006A1338()
{
  *(_DWORD *)uint64_t v1 = 138412290;
  *(void *)(v1 + 4) = v2;
  sub_100032770( (void *)&_mh_execute_header,  v3,  (uint64_t)v3,  "Registration is not active on account %@, ignoring...",  v4);

  sub_1000327B4();
}

void sub_1006A137C()
{
}

void sub_1006A13A8(uint64_t *a1, os_log_s *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  int v4 = 138412290;
  uint64_t v5 = v3;
  sub_1000326DC( (void *)&_mh_execute_header,  a2,  a3,  "Registration info is not supported on this device, disabling: %@",  (uint8_t *)&v4);
  sub_100008BB4();
}

void sub_1006A1414()
{
}

void sub_1006A1440(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A14C4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A1548()
{
}

void sub_1006A1574(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A15F8(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A167C()
{
  *(void *)(v3 + 14) = "-[IDSDAccount(Registration) _registerAccount]";
  sub_1000326B0((void *)&_mh_execute_header, v4, (uint64_t)v4, "Local account %@, can't call %s, ignoring...", v5);

  sub_1000327B4();
}

void sub_1006A16C8(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A174C()
{
  *(void *)(v3 + 14) = "-[IDSDAccount(Registration) _unregisterAccount]";
  sub_1000326B0((void *)&_mh_execute_header, v4, (uint64_t)v4, "Ad hoc account %@, can't call %s, ignoring...", v5);

  sub_1000327B4();
}

void sub_1006A1798()
{
  *(void *)(v3 + 14) = "-[IDSDAccount(Registration) _unregisterAccount]";
  sub_1000326B0((void *)&_mh_execute_header, v4, (uint64_t)v4, "Local account %@, can't call %s, ignoring...", v5);

  sub_1000327B4();
}

void sub_1006A17E4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1868(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A18EC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1970(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A19F4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1A78(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A1AFC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1B80(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A1C04(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1C88(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A1D0C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A1D70(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1DF4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A1E78(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A1EFC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A1F80()
{
}

void sub_1006A1FE4(os_log_s *a1)
{
  int v3 = 134217984;
  double v4 = sub_100263878();
  sub_1000326DC((void *)&_mh_execute_header, a1, v2, " *** Devices query failed, retrying in %f", (uint8_t *)&v3);
  sub_100032788();
}

void sub_1006A205C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A20E0(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2164(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A21E8(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A226C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A22F0(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2374()
{
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  sub_1001F64B0((void *)&_mh_execute_header, v1, (uint64_t)v1, "Succeeded registering: %@  (newly registered: %@)", v2);
  sub_100008BB4();
}

void sub_1006A2400(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2484(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2508()
{
}

void sub_1006A2534()
{
}

void sub_1006A2560()
{
}

void sub_1006A258C()
{
}

void sub_1006A25B8()
{
}

void sub_1006A25E4(uint64_t a1)
{
  uint64_t v1 = sub_10012EB10(a1);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  sub_100032764();
  sub_10003273C((void *)&_mh_execute_header, v3, v4, "Failed, %@ => Disabling service", v5, v6, v7, v8, v9);

  sub_100032788();
}

void sub_1006A265C()
{
}

void sub_1006A26CC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2750(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A27D4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2858(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A28DC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2960(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A29E4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2A68(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2AEC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2B70(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2BF4()
{
}

void sub_1006A2C64(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2CE8(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2D6C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2DF0(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2E74(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A2EF8(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A2F7C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A3000(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A3084(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A3108(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A318C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A3210(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A3294(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A3318(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A339C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A3420(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A34A4(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A3528(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A35AC()
{
  sub_1000326E8((void *)&_mh_execute_header, v0, v1, " => Purging my message protection identity", v2, v3, v4, v5, v6);
  sub_100032728();
}

void sub_1006A35D8()
{
  sub_1000326E8((void *)&_mh_execute_header, v0, v1, " => Unregistering", v2, v3, v4, v5, v6);
  sub_100032728();
}

void sub_1006A3604()
{
}

void sub_1006A3630()
{
  uint64_t v2 = "psuedonymInfo";
  sub_1000326B0( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v0,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  v1);
  sub_100008BB4();
}

void sub_1006A36B4()
{
  uint64_t v2 = "psuedonymInfo";
  sub_1000326B0( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v0,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  v1);
  sub_100008BB4();
}

void sub_1006A3738(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C( (void *)&_mh_execute_header,  v2,  v3,  "Ad hoc account %@, can't call %s, ignoring...",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006A37BC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  sub_1001F6470();
  sub_10003269C((void *)&_mh_execute_header, v2, v3, "Local account %@, can't call %s, ignoring...", v4, v5, v6, v7, v8);

  sub_100032788();
}

void sub_1006A3840(void *a1, os_log_s *a2)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 service]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1 loginID]);
  int v8 = 138412546;
  uint8_t v9 = v5;
  __int16 v10 = 2112;
  uint64_t v11 = v6;
  sub_1001F64B0( (void *)&_mh_execute_header,  a2,  v7,  "Returning _allUserIntentInfo {service: %@, loginID: %@}",  (uint8_t *)&v8);
}

void sub_1006A3908(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Cannot force remove phone users. { user: %@ }",  (uint8_t *)&v2,  0xCu);
}

void sub_1006A397C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A39E0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Tried to set a mismatching credential for user! {credential: %@, user: %@}",  (uint8_t *)&v3,  0x16u);
  sub_100008BB4();
}

void sub_1006A3A60()
{
}

void sub_1006A3AE0()
{
}

void sub_1006A3B60()
{
}

void sub_1006A3BE0()
{
}

void sub_1006A3C60()
{
}

void sub_1006A3CE0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 134218242;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Error creating proxy for activity monitor client {self: %p, activity: %@}",  (uint8_t *)&v3,  0x16u);
}

void sub_1006A3D64( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A3DD4( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A3E44( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A3EB4( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A3F24( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A3F94( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A4004( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A4074()
{
}

void sub_1006A40F4()
{
}

void sub_1006A4174()
{
}

void sub_1006A41F4()
{
}

void sub_1006A4258()
{
}

void sub_1006A4284()
{
}

void sub_1006A42B0(int a1, os_log_s *a2)
{
  v2[0] = 67109634;
  v2[1] = a1;
  __int16 v3 = 2112;
  uint64_t v4 = @"com.apple.registration";
  __int16 v5 = 2112;
  uint8_t v6 = @"overrideProvisionResponseCode";
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Overriding response code for registration with: %d   remove %@: %@    to stop this",  (uint8_t *)v2,  0x1Cu);
}

void sub_1006A4348(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Credential for temporary registration is not temporary realm {registration: %@, credential: %@}",  (uint8_t *)&v3,  0x16u);
  sub_100008BB4();
}

void sub_1006A43C8()
{
}

void sub_1006A43F4()
{
}

void sub_1006A4420()
{
}

void sub_1006A444C()
{
}

void sub_1006A4478()
{
}

void sub_1006A44A4()
{
}

void sub_1006A44D0(int a1, os_log_s *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "SIM deactivation request failed with code: %d",  (uint8_t *)v2,  8u);
  sub_100032728();
}

void sub_1006A4540(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Received invalid message class response { responseMessage: %@ }",  (uint8_t *)&v2,  0xCu);
  sub_100008BB4();
}

void sub_1006A45B0()
{
  int v0 = 138412546;
  uint64_t v1 = @"uris";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006A4648( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A46D4()
{
}

void sub_1006A4748()
{
}

void sub_1006A47BC()
{
}

void sub_1006A4830()
{
}

void sub_1006A48A4()
{
}

void sub_1006A4918()
{
}

void sub_1006A498C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A4A0C( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A4A40( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A4A74(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to activate companionLinkClient, {Error:%@}",  (uint8_t *)&v2,  0xCu);
  sub_100008BB4();
}

void sub_1006A4AE4(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)uint64_t v3 = 138543619;
  *(void *)&v3[4] = a1;
  *(_WORD *)&v3[12] = 2113;
  *(void *)&v3[14] = *(void *)(a2 + 32);
  sub_10017BB08( (void *)&_mh_execute_header,  a2,  a3,  "Failed to find companionLinkClient {error: %{public}@, deviceIdentifier: %{private}@}",  *(void *)v3,  *(void *)&v3[8],  *(void *)&v3[16]);
  sub_100008BB4();
}

void sub_1006A4B58()
{
}

void sub_1006A4BB8()
{
}

void sub_1006A4C18(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412546;
  uint64_t v3 = a1;
  __int16 v4 = 2112;
  uint64_t v5 = 0LL;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Given a nil CTPNR! { self: %@, CTPNR: %@ }",  (uint8_t *)&v2,  0x16u);
}

void sub_1006A4C98(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed to issue phone number registration request",  v1,  2u);
  sub_100032728();
}

void sub_1006A4CD4( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
    a5,
    a6,
    a7,
    a8,
    0);
  sub_100032728();
}

void sub_1006A4D38( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
    a5,
    a6,
    a7,
    a8,
    0);
  sub_100032728();
}

void sub_1006A4D9C()
{
}

void sub_1006A4DFC()
{
}

void sub_1006A4E5C(void *a1, uint64_t a2, os_log_s *a3)
{
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1 serverMessagingEntitlements]);
  int v7 = 134218498;
  int v8 = a1;
  __int16 v9 = 2112;
  uint64_t v10 = a2;
  __int16 v11 = 2112;
  __int16 v12 = v6;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Not entitled for server messaging topic! {self: %p, topic: %@, _serverMessagingEntitlements: %@}",  (uint8_t *)&v7,  0x20u);
}

void sub_1006A4F14()
{
}

void sub_1006A4F74()
{
}

void sub_1006A4FD4()
{
}

void sub_1006A5034()
{
}

void sub_1006A5094(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "sendCertifiedDeliveryReceipt given nil certified delivery context",  v1,  2u);
}

void sub_1006A50D4()
{
}

void sub_1006A5134()
{
}

void sub_1006A5194()
{
}

void sub_1006A5200()
{
}

void sub_1006A5270()
{
}

void sub_1006A52D0()
{
}

void sub_1006A5330()
{
}

void sub_1006A5390()
{
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_FAULT,  "Handling request sysdiagnose push {userInfo: %@}",  v2,  0x16u);
  sub_100008BB4();
}

void sub_1006A540C()
{
}

void sub_1006A546C()
{
}

void sub_1006A54CC()
{
}

void sub_1006A552C()
{
}

void sub_1006A558C()
{
}

void sub_1006A55EC()
{
}

void sub_1006A564C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000BA240( (void *)&_mh_execute_header,  a2,  a3,  "clientConnection missing pairing entitlement -- returning nil pairing collaborator {xpcDaemon: %{public}@}",  a5,  a6,  a7,  a8,  2u);
  sub_100008BB4();
}

void sub_1006A56B0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000BA240( (void *)&_mh_execute_header,  a2,  a3,  "clientConnection missing local pairing entitlement -- returning nil reunion sync collaborator {xpcDaemon: %{public}@}",  a5,  a6,  a7,  a8,  2u);
  sub_100008BB4();
}

void sub_1006A5714( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000BA240( (void *)&_mh_execute_header,  a2,  a3,  "clientConnection missing test tool entitlement -- returning nil internal testing collaborator {xpcDaemon: %{public}@}",  a5,  a6,  a7,  a8,  2u);
  sub_100008BB4();
}

void sub_1006A5778(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "clientConnection missing test tool entitlement -- but is preferences, allowing",  v1,  2u);
}

void sub_1006A57B8()
{
}

void sub_1006A5838()
{
}

void sub_1006A58B8()
{
}

void sub_1006A5938()
{
}

void sub_1006A59B8(void *a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([a1 requestIDStr]);
  sub_1000BA234();
  sub_100003F00( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v2,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  v3,  v4,  v5,  v6,  2u);

  sub_100032788();
}

void sub_1006A5A54(void *a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([a1 requestIDStr]);
  sub_1000BA234();
  sub_100003F00( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v2,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  v3,  v4,  v5,  v6,  2u);

  sub_100032788();
}

void sub_1006A5AF0(void *a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([a1 requestIDStr]);
  sub_1000BA234();
  sub_100003F00( (void *)&_mh_execute_header,  (os_log_s *)&_os_log_default,  v2,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  v3,  v4,  v5,  v6,  2u);

  sub_100032788();
}

void sub_1006A5B8C()
{
}

void sub_1006A5C0C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed type check! {key: %@, class: %@}",  (uint8_t *)&v3,  0x16u);
  sub_100008BB4();
}

void sub_1006A5C8C()
{
}

void sub_1006A5D0C()
{
}

void sub_1006A5D8C()
{
}

void sub_1006A5E0C()
{
}

void sub_1006A5E88()
{
}

void sub_1006A5F08()
{
}

void sub_1006A5F88()
{
}

void sub_1006A6008()
{
}

void sub_1006A6088()
{
}

void sub_1006A6108()
{
}

void sub_1006A6188()
{
}

void sub_1006A6208()
{
}

void sub_1006A6288()
{
}

void sub_1006A6308()
{
}

void sub_1006A6388()
{
}

void sub_1006A6408()
{
}

void sub_1006A6488()
{
}

void sub_1006A6504()
{
}

void sub_1006A6584()
{
}

void sub_1006A6604()
{
}

void sub_1006A6684()
{
}

void sub_1006A6704()
{
}

void sub_1006A6784()
{
}

void sub_1006A6804()
{
}

void sub_1006A6880()
{
}

void sub_1006A6900()
{
}

void sub_1006A6980()
{
}

void sub_1006A69FC()
{
  int v0 = 138412546;
  uint64_t v1 = @"unknown-sender-info";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006A6A94(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Creating IDSNRDevicePreferencesHandler with nil deviceIdentifier",  v1,  2u);
}

void sub_1006A6AD4(uint64_t a1, os_log_s *a2)
{
  int v2 = 138477827;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to create NRDeviceIdentifier {deviceIdentifier: %{private}@}",  (uint8_t *)&v2,  0xCu);
}

void sub_1006A6B48(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138478083;
  uint64_t v4 = a1;
  __int16 v5 = 2113;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Failed to create NRDevicePreferences {deviceIdentifier: %{private}@, nrDeviceIdentifier: %{private}@}",  (uint8_t *)&v3,  0x16u);
}

void sub_1006A6BCC()
{
  int v0 = 138412546;
  uint64_t v1 = @"spam-messages";
  __int16 v2 = 2080;
  int v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006A6C64( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A6CCC( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000BA240( (void *)&_mh_execute_header,  a2,  a3,  "receiveDictionaryData: unsupported wrapMode %ld, return!",  a5,  a6,  a7,  a8,  0);
}

void sub_1006A6D34( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A6D9C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "_updateSendData invalid groupID", v1, 2u);
}

void sub_1006A6DDC()
{
  int v0 = 138412546;
  uint64_t v1 = @"hT";
  __int16 v2 = 2080;
  int v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006A6E74()
{
}

void sub_1006A6EF4()
{
}

void sub_1006A6F74()
{
}

void sub_1006A6FF4()
{
}

void sub_1006A7074()
{
  int v0 = 138412546;
  uint64_t v1 = @"user-flag";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006A710C()
{
}

void sub_1006A718C()
{
}

void sub_1006A720C()
{
}

void sub_1006A728C()
{
}

void sub_1006A730C()
{
}

void sub_1006A738C()
{
}

void sub_1006A740C()
{
}

void sub_1006A748C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "No legacy connection, bailing...",  (uint8_t *)&v3,  0x16u);
  sub_100008BB4();
}

void sub_1006A750C()
{
}

void sub_1006A7590()
{
}

void sub_1006A7610()
{
}

void sub_1006A7694(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "No output arrays specified for _splitDestinations %@",  (uint8_t *)&v3,  0x16u);
  sub_100008BB4();
}

void sub_1006A7714(void *a1, os_log_s *a2)
{
  int v3 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueID]);
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Registration is not active on account %@, ignoring...",  (uint8_t *)&v4,  0xCu);
}

void sub_1006A77AC(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 prefixedURI]);
  int v2 = 138412546;
  int v3 = v1;
  __int16 v4 = 2080;
  __int16 v5 = "_disasterModeTokens";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v2,  0x16u);
}

void sub_1006A7858(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed to remove peerIDCache v0 {error: %{public}@}",  (uint8_t *)&v3,  0x16u);
}

void sub_1006A78DC()
{
}

void sub_1006A795C()
{
}

void sub_1006A79DC()
{
}

void sub_1006A7A3C()
{
}

void sub_1006A7A9C(void *a1, uint64_t a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(void *)(buf + 14) = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Bad destinationData for outgoing message %@! Error: %@",  buf,  0x16u);
}

void sub_1006A7B00()
{
}

void sub_1006A7B60()
{
}

void sub_1006A7BE0()
{
}

void sub_1006A7C60()
{
}

void sub_1006A7CE0()
{
}

void sub_1006A7D60()
{
}

void sub_1006A7DE0()
{
}

void sub_1006A7E60()
{
}

void sub_1006A7EE0()
{
}

void sub_1006A7F60()
{
}

void sub_1006A7FE0()
{
}

void sub_1006A8060()
{
}

void sub_1006A80E0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A8144(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 validationContextQueue]);
  sub_100032764();
  sub_1000326DC((void *)&_mh_execute_header, a2, v4, "Failing validation queue: %@", v5);

  sub_100032788();
}

void sub_1006A81C4(uint64_t a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) message]);
  sub_100032764();
  sub_1000326DC( (void *)&_mh_execute_header,  a2,  v4,  "  ** UNsuccessfully signed, not sending (de)registration message: %@",  v5);

  sub_100032788();
}

void sub_1006A8248()
{
}

void sub_1006A82A8( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A830C(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "  Empty cert data - this is bogus, sending absinthe request again",  v1,  2u);
  sub_100032728();
}

void sub_1006A8348(void *a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)a2 = 138412290;
  *(void *)(a2 + 4) = a1;
  sub_1000326DC((void *)&_mh_execute_header, a3, (uint64_t)a3, "  Using fake session key!  (TTL: %@)", (uint8_t *)a2);
}

void sub_1006A8394()
{
}

void sub_1006A83F8()
{
}

void sub_1006A845C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A84C0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A8524()
{
}

void sub_1006A8588( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A85EC()
{
  __assert_rtn( "-[IDSGenericConnection initWithConnectionID:protocol:keyMaterialLength:isCloudEnabled:]",  "IDSUTunController.m",  518,  "0 == SecRandomCopyBytes(kSecRandomDefault, keyMaterialLength, _localKeyMaterial)");
}

void sub_1006A8614()
{
}

void sub_1006A8628( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A865C()
{
}

void sub_1006A8684()
{
  __assert_rtn("handleMultipleIPPayload", "IDSUTunController.m", 1866, "deviceConnectionInfo->_utunChannel == NULL");
}

void sub_1006A86AC()
{
  __assert_rtn("-[IDSUTunController handleUtunChannelRead:limit:]", "IDSUTunController.m", 2422, "slot != NULL");
}

void sub_1006A86D4()
{
  __assert_rtn( "-[IDSUTunController handleUtunChannelWrite:source:destination:upperProtocol:bytes:bytesLen:]",  "IDSUTunController.m",  2490,  "slot != NULL");
}

void sub_1006A86FC()
{
}

void sub_1006A8724()
{
  __assert_rtn("-[IDSUTunController setupUTunForDeviceConnectionInfo:]", "IDSUTunController.m", 2611, "rxRingSize != 0");
}

void sub_1006A874C( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A8780(int a1, os_log_s *a2)
{
  v2[0] = 67109634;
  v2[1] = a1;
  __int16 v3 = 2112;
  uint64_t v4 = @"com.apple.registration";
  __int16 v5 = 2112;
  uint8_t v6 = @"overrideRegistrationResponseCode";
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Overriding response code for query with: %d   remove %@: %@    to stop this",  (uint8_t *)v2,  0x1Cu);
}

void sub_1006A8818()
{
}

void sub_1006A8898( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A8900(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, " ** empty token, bailing", v1, 2u);
}

void sub_1006A8940( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A89A8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Loaded paired device state from keychain but could not decode dictionary.",  v1,  2u);
}

void sub_1006A89E8()
{
}

void sub_1006A8A5C()
{
}

void sub_1006A8AD0(unsigned __int16 a1, void *a2, os_log_s *a3)
{
  LODWORD(__chkstk_darwin(v2, v3) = 67109378;
  HIDWORD(__chkstk_darwin(v2, v3) = a1;
  LOWORD(sub_1000326DC( (void *)&_mh_execute_header,  v3,  (uint64_t)v3,  "We appear to have already generated a unregistered identity. It seems like it failed on deserialization: %@.", v4) = 2112;
  *(void *)((char *)&v4 + fseek(v0, 0LL, 2) = *a2;
  sub_10003DF6C( (void *)&_mh_execute_header,  (uint64_t)a2,  a3,  "No config for key index { keyIndex: %u, serviceIndexToKTRegConfigs:%@ }",  v3,  (void)v4,  HIWORD(*a2));
  sub_100008BB4();
}

void sub_1006A8B48()
{
}

void sub_1006A8BA8()
{
}

void sub_1006A8C08()
{
}

void sub_1006A8C68()
{
}

void sub_1006A8CC8()
{
}

void sub_1006A8D28()
{
}

void sub_1006A8D54()
{
}

void sub_1006A8DB4()
{
}

void sub_1006A8E14()
{
}

void sub_1006A8E40()
{
}

void sub_1006A8E6C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A8EF8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006A8F84()
{
}

void sub_1006A8FB0()
{
}

void sub_1006A8FDC(void *a1, os_log_s *a2)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 pushToken]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 pinnedIdentityMetadatas]);
  sub_10039DBA8();
  sub_1000326B0( (void *)&_mh_execute_header,  a2,  v6,  "Missing push token or identity metadata. { pushToken: %@, pinnedIdentityMetadata: %@ }",  v7);

  sub_1000326CC();
}

void sub_1006A9078()
{
}

void sub_1006A90D8()
{
}

void sub_1006A9104()
{
}

void sub_1006A9130()
{
}

void sub_1006A915C()
{
}

void sub_1006A9188()
{
}

void sub_1006A91E8()
{
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  sub_1000326B0( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "Found no stored identities for push token and service. { pushToken: %@, service: %@ }",  v2);
  sub_100008BB4();
}

void sub_1006A925C()
{
}

void sub_1006A92BC(void *a1, void *a2, os_log_s *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 identity]);
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 serializedNGMDeviceIdentity]);
  sub_10039DBA8();
  sub_1000326B0( (void *)&_mh_execute_header,  a3,  v7,  "Pinned identity does not match endpoint identity. { pinnedIdentity: %@, endointIdentity: %@ }",  v8);

  sub_1000326CC();
}

void sub_1006A9358()
{
  uint64_t v1 = IMTruncatedLoggingStringForString();
  uint64_t v2 = objc_claimAutoreleasedReturnValue(v1);
  uint64_t v4 = (objc_class *)sub_1003A6504(v2, v3);
  uint64_t v5 = NSStringFromClass(v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  sub_1003A64E4();
  sub_1003A64D0((void *)&_mh_execute_header, v7, v8, "  Read %@: %@  (Class: %@)", v9, v10, v11, v12, 2u);

  sub_1000CD218();
}

void sub_1006A9408()
{
  uint64_t v1 = IMTruncatedLoggingStringForString();
  uint64_t v2 = objc_claimAutoreleasedReturnValue(v1);
  uint64_t v4 = (objc_class *)sub_1003A6504(v2, v3);
  uint64_t v5 = NSStringFromClass(v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  sub_1003A64E4();
  sub_1003A64D0((void *)&_mh_execute_header, v7, v8, "  Read %@: %@  (Class: %@)", v9, v10, v11, v12, 2u);

  sub_1000CD218();
}

void sub_1006A94B8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9548()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A95D8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9668()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A96F8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9788()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9818()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A98A8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9938()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A99C8()
{
  uint64_t v1 = IMTruncatedLoggingStringForString();
  uint64_t v2 = objc_claimAutoreleasedReturnValue(v1);
  id v4 = (objc_class *)sub_1003A6504(v2, v3);
  uint64_t v5 = NSStringFromClass(v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  sub_1003A64E4();
  sub_1003A64D0((void *)&_mh_execute_header, v7, v8, "  Read %@: %@  (Class: %@)", v9, v10, v11, v12, 2u);

  sub_1000CD218();
}

void sub_1006A9A78()
{
  uint64_t v1 = IMTruncatedLoggingStringForString();
  uint64_t v2 = objc_claimAutoreleasedReturnValue(v1);
  id v4 = (objc_class *)sub_1003A6504(v2, v3);
  uint64_t v5 = NSStringFromClass(v4);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
  sub_1003A64E4();
  sub_1003A64D0((void *)&_mh_execute_header, v7, v8, "  Read %@: %@  (Class: %@)", v9, v10, v11, v12, 2u);

  sub_1000CD218();
}

void sub_1006A9B28()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9BB8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9C48()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9CD8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9D68()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9DF8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9E88()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9F18()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006A9FA8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA038()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA0C8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA158()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA1E8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA278()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA308()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA398()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA428()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA4B8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA548()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA5D8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA668()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA6F8()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA788()
{
  uint64_t v2 = (objc_class *)sub_1003A64FC(v0, v1);
  uint64_t v3 = NSStringFromClass(v2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_1003A64B4();
  sub_1003A64D0((void *)&_mh_execute_header, v5, v6, "  Read %@: %@  (Class: %@)", v7, v8, v9, v10, 2u);

  sub_1000CD218();
}

void sub_1006AA818()
{
}

void sub_1006AA898()
{
}

void sub_1006AA918()
{
}

void sub_1006AA998()
{
}

void sub_1006AAA18()
{
}

void sub_1006AAA98()
{
}

void sub_1006AAB18()
{
}

void sub_1006AAB98()
{
}

void sub_1006AAC18(uint64_t a1, os_log_s *a2)
{
  uint64_t v3 = IMTruncatedLoggingStringForString();
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  int v5 = 138412290;
  uint64_t v6 = v4;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "** Returning SMS authentication token: %@",  (uint8_t *)&v5,  0xCu);
}

void sub_1006AACB0()
{
}

void sub_1006AACDC(uint8_t *a1, _BYTE *a2, os_log_s *a3)
{
  *a1 = 0;
  *a2 = 0;
  sub_1003AADB0((void *)&_mh_execute_header, a3, (uint64_t)a3, "Skipping load of empty service dictionary", a1);
}

void sub_1006AAD10()
{
}

void sub_1006AAD3C()
{
}

void sub_1006AADA8()
{
}

void sub_1006AAE08()
{
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_FAULT,  "Sub-services - Couldn't find service %@ to load subService %@ with",  v2,  0x16u);
  sub_100008BB4();
}

void sub_1006AAE84()
{
}

void sub_1006AAEE4()
{
}

void sub_1006AAF44()
{
}

void sub_1006AAF70()
{
}

void sub_1006AAFA0()
{
}

void sub_1006AAFD8()
{
}

void sub_1006AB038()
{
}

void sub_1006AB098()
{
}

void sub_1006AB0C4()
{
}

void sub_1006AB0F0()
{
  __int16 v3 = 2113;
  uint64_t v4 = v0;
  _os_log_error_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_ERROR,  "Attempting to remove an unrecognized paired device, whose CBUUID is %@ {pairedDevices: %{private}@}",  v2,  0x16u);
  sub_100008BB4();
}

void sub_1006AB170()
{
}

void sub_1006AB19C()
{
}

void sub_1006AB1FC()
{
}

void sub_1006AB228()
{
}

void sub_1006AB288()
{
}

void sub_1006AB2B4()
{
}

void sub_1006AB314()
{
}

void sub_1006AB374()
{
}

void sub_1006AB3D4()
{
}

void sub_1006AB454()
{
}

void sub_1006AB4D4()
{
}

void sub_1006AB554(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed type check! {key: %@, class: %@}",  (uint8_t *)&v3,  0x16u);
}

void sub_1006AB5D8()
{
}

void sub_1006AB658()
{
}

void sub_1006AB6D8()
{
}

void sub_1006AB758()
{
  int v0 = 138412546;
  uint64_t v1 = @"session-info-request";
  __int16 v2 = 2080;
  uint64_t v3 = "dictionary";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006AB7F0()
{
  int v0 = 138412546;
  uint64_t v1 = @"x-ds-client-id";
  __int16 v2 = 2080;
  uint64_t v3 = "profileInfo";
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s",  (uint8_t *)&v0,  0x16u);
}

void sub_1006AB888( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006AB8F4(void *a1, uint64_t a2, os_log_s *a3)
{
  __int16 v5 = (void *)objc_claimAutoreleasedReturnValue([a1 allMembers]);
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "setMembers: %@ forGroup: %@",  (uint8_t *)&v6,  0x16u);
}

void sub_1006AB9A0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006ABA08()
{
}

void sub_1006ABA30()
{
}

void sub_1006ABA58()
{
}

void sub_1006ABA80()
{
}

void sub_1006ABAA8()
{
}

void sub_1006ABB18(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Attempted to save nil identity -- bail {identifier: %{public}@}",  (uint8_t *)&v2,  0xCu);
  sub_100008BB4();
}

void sub_1006ABB88(uint64_t a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1));
  sub_1003C7568();
  sub_1003C7554( (void *)&_mh_execute_header,  v2,  v3,  "Failed to load identity on second try -- falling back to legacy {error: %{public}@, identifier: %u}",  v4,  v5,  v6,  v7,  v8);

  sub_1000326CC();
}

void sub_1006ABC14(uint64_t a1)
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a1));
  sub_1003C7568();
  sub_1003C7554( (void *)&_mh_execute_header,  v2,  v3,  "Failed to load identity on first try -- retrying {error: %{public}@, index: %u}",  v4,  v5,  v6,  v7,  v8);

  sub_1000326CC();
}

void sub_1006ABCA0(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138543618;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_10017BB08( (void *)&_mh_execute_header,  v1,  v2,  "Failed to load identity container on second try -- falling back to legacy {error: %{public}@, identifier: %ld}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_1006ABD0C(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138543618;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_10017BB08( (void *)&_mh_execute_header,  v1,  v2,  "Failed to load identity container on first try -- retrying {error: %{public}@, identifier: %ld}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_1006ABD78(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138412546;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_10017BB08( (void *)&_mh_execute_header,  v1,  v2,  "Failed to erase ngm full device identity {ngmError: %@, ngmFullDeviceIdentity: %@}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_1006ABDE4(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138412546;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_10017BB08( (void *)&_mh_execute_header,  v1,  v2,  "Failed to remove data {blobError: %@, identifier: %@}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_1006ABE50(uint64_t a1, void *a2, os_log_s *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a2 legacyFullIdentity]);
  int v6 = 138412546;
  uint64_t v7 = a1;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Failed to purge legacy full identity {legacyError: %@, legacyFullIdentity: %@}",  (uint8_t *)&v6,  0x16u);

  sub_1000326CC();
}

void sub_1006ABEF4()
{
}

void sub_1006ABF64()
{
}

void sub_1006ABFD4()
{
}

void sub_1006AC044(uint64_t *a1)
{
  if (a1) {
    uint64_t v1 = *a1;
  }
  else {
    uint64_t v1 = 0LL;
  }
  LODWORD(sub_1000326DC( (void *)&_mh_execute_header,  v3,  (uint64_t)v3,  "We appear to have already generated a unregistered identity. It seems like it failed on deserialization: %@.", v4) = 138543619;
  *(void *)((char *)&v4 + 4) = v1;
  sub_10003277C();
  sub_100032750( (void *)&_mh_execute_header,  v2,  v3,  "Faild to get dataRepresentation to determine serializationChange -- Not updating {error: %{public}@, identity: %{private}@}",  (void)v4,  DWORD2(v4));
  sub_100008BB4();
}

void sub_1006AC0C0()
{
}

void sub_1006AC130(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)os_log_t v3 = 138543618;
  *(void *)&v3[4] = a1;
  *(_WORD *)&v3[12] = 2048;
  *(void *)&v3[14] = a2;
  sub_100032750( (void *)&_mh_execute_header,  a2,  a3,  "Failed to serialize ngmVersion {error: %{public}@, ngmVersion: %ld}",  *(void *)v3,  *(void *)&v3[8],  *(void *)&v3[16]);
  sub_100008BB4();
}

void sub_1006AC1A4(uint64_t a1)
{
  LODWORD(__chkstk_darwin(v2, v3) = 138543618;
  *(void *)((char *)&v3 + 4) = a1;
  sub_10003277C();
  sub_100032750( (void *)&_mh_execute_header,  v1,  v2,  "Failed to deserialize ngmVersion from data -- returning 0 {error: %{public}@, dataRepresentation: %{public}@}",  (void)v3,  DWORD2(v3));
  sub_100008BB4();
}

void sub_1006AC210(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Dealloc'ing IDSNWSocketPairConnection without ending the session",  v1,  2u);
}

void sub_1006AC250( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006AC2B4()
{
}

void sub_1006AC320( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006AC384(int a1, os_log_s *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "IDSNWSocketPairConnection: _dequeueNextMessageFromOutgoingQueue: removing last piece of fragmented message OutgoingF ragmentedMessageID: %u from _outgoingMessageArray.",  (uint8_t *)v2,  8u);
}

void sub_1006AC3F8(uint64_t a1, os_log_s *a2)
{
  __int128 v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  sub_1003C9568();
  sub_1003C9580( (void *)&_mh_execute_header,  a2,  v4,  "IDSNWSocketPairConnection: _sendDataViaNWConnection: %@ Wrote %u bytes.",  v5);
}

void sub_1006AC494(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Multiplexer transport packetization head room should not be 0",  v1,  2u);
}

void sub_1006AC4D4()
{
  __assert_rtn( "-[IDSMultiplexerGroupConnection writePacketBuffer:]",  "IDSMultiplexer.m",  371,  "addressFromRemoteEndpoint->sa_family == AF_INET6");
}

void sub_1006AC4FC()
{
  __assert_rtn( "-[IDSMultiplexerGroupConnection writePacketBuffer:]",  "IDSMultiplexer.m",  370,  "addressFromLocalEndpoint->sa_family == AF_INET6");
}

void sub_1006AC524( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006AC558( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1006AC58C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Cannot force remove appleID users. { user: %@ }",  (uint8_t *)&v2,  0xCu);
}

void sub_1006AC600(void *a1, os_log_s *a2)
{
  v4[0] = 67109632;
  v4[1] = [a1 uid];
  __int16 v5 = 1024;
  unsigned int v6 = [a1 gid];
  __int16 v7 = 2048;
  id v8 = [a1 userPersonaType];
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "The current thread is data separated! {persona.uid: %u, persona.gid: %u, persona.userPersonaType: %lu}",  (uint8_t *)v4,  0x18u);
}

void sub_1006AC6C8(void *a1)
{
  int v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *UserManagementLibrary(void)"));
  objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"IDSUserManagement.m",  19,  @"%s",  *a1);

  __break(1u);
}

void sub_1006AC744()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getUMUserPersonaClass(void)_block_invoke"));
  objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v1,  @"IDSUserManagement.m",  20,  @"Unable to find class %s",  "UMUserPersona");

  __break(1u);
}

void sub_1006AC7BC(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Deleting identity certificate failed { deleteError: %@ }",  (uint8_t *)&v2,  0xCu);
}

void sub_1006AC830(int a1, int a2, os_log_t log)
{
  v3[0] = 67109376;
  v3[1] = a1;
  __int16 v4 = 1024;
  int v5 = a2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_FAULT,  "Failed to copy identity certificate { lockdownResult: %d, apsResult: %d }",  (uint8_t *)v3,  0xEu);
}

void sub_1006AC8B4()
{
}

void sub_1006AC934()
{
}

void sub_1006AC9B4()
{
  __assert_rtn( "-[IDSBTLink flushBuffer:]",  "IDSBTLink.m",  418,  "direction == IDSLinkDirectionTransmit || direction == IDSLinkDirectionReceive");
}

void sub_1006AC9DC()
{
}

void sub_1006ACA40()
{
}

void sub_1006ACAA4()
{
}

void sub_1006ACAD0(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_1003E8500( (void *)&_mh_execute_header,  v2,  v3,  "Key transparency is disabled -- not requesting transparency ticket { serviceIdentifier: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006ACB48()
{
}

void sub_1006ACB74()
{
}

void sub_1006ACBD8()
{
}

void sub_1006ACC3C()
{
}

void sub_1006ACC68(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_1003E8500( (void *)&_mh_execute_header,  v2,  v3,  "Key transparency is disabled -- not requesting current peer verification results for query { serviceIdentifier: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006ACCE0()
{
}

void sub_1006ACD0C(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_1003E8500( (void *)&_mh_execute_header,  v2,  v3,  "Key transparency is disabled -- not requesting current verification results for registration { serviceIdentifier: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006ACD84(void *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_1003E8500( (void *)&_mh_execute_header,  v2,  v3,  "Key transparency is disabled -- not forcing verification results { serviceIdentifier: %@ }",  v4,  v5,  v6,  v7,  v8);

  sub_100032788();
}

void sub_1006ACDFC(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_100032770( (void *)&_mh_execute_header,  a2,  v4,  "Unable to establish KT URI prefix -- not performing KT verification of query { serviceIdentifier: %@ }",  v5);

  sub_100032788();
}

void sub_1006ACE7C(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "__imArrayByApplyingBlock:", &stru_1009045A0));
  sub_1003E8514();
  sub_1001332B8( (void *)&_mh_execute_header,  v3,  v4,  "Calling in to perform KT peer-validation { KTURI: %@, serverKTDataPushTokens: %@",  v5,  v6,  v7,  v8,  v9);

  sub_1000326CC();
}

void sub_1006ACF08(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 URI]);
  sub_10017BB70();
  uint64_t v8 = a2;
  sub_1000326B0( (void *)&_mh_execute_header,  a3,  v6,  "Unable to perform peer verification for query { index.URI: %@, ticket: %@ }",  v7);

  sub_1000326CC();
}

void sub_1006ACF94(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_100032770( (void *)&_mh_execute_header,  a2,  v4,  "Unable to establish KT URI prefix -- not requesting KT verification of query { serviceIdentifier: %@ }",  v5);

  sub_100032788();
}

void sub_1006AD014(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_100032770( (void *)&_mh_execute_header,  a2,  v4,  "Unable to establish KT URI prefix -- forcing KT validation { serviceIdentifier: %@ }",  v5);

  sub_100032788();
}

void sub_1006AD094(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 serviceIdentifier]);
  sub_100032764();
  sub_100032770( (void *)&_mh_execute_header,  a2,  v4,  "Unable to establish KT URI prefix -- not performing KT verification of registration { serviceIdentifier: %@ }",  v5);

  sub_100032788();
}

void sub_1006AD114(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a2 deviceID]);
  sub_1003E8514();
  sub_1001332B8( (void *)&_mh_execute_header,  v3,  v4,  "Calling in to perform KT enrollment verification { KTURI: %@, KTDataPushToken: %@",  v5,  v6,  v7,  v8,  v9);

  sub_1000326CC();
}

void sub_1006AD198()
{
}

void sub_1006AD1FC()
{
}

void sub_1006AD228()
{
}

void sub_1006AD254()
{
}

void sub_1006AD280()
{
}

void sub_1006AD2AC()
{
}

void sub_1006AD2D8()
{
}

void sub_1006AD304()
{
  uint64_t v3 = v0;
  sub_1000326B0( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "Error clearing Transparency cache { peerURI: %@ error: %@ }",  v2);
  sub_100008BB4();
}

void sub_1006AD370()
{
}

void sub_1006AD3D4()
{
}

void sub_1006AD400()
{
}

void sub_1006AD464()
{
}

void sub_1006AD4C8()
{
}

void sub_1006AD52C()
{
}

void sub_1006AD590(uint8_t *a1, void *a2, void *a3, os_log_s *a4)
{
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 service]);
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl( (void *)&_mh_execute_header,  a4,  OS_LOG_TYPE_ERROR,  "Received cache clear request for unsupported service. { service: %@ }",  a1,  0xCu);
}

void sub_1006AD604()
{
}

void sub_1006AD630()
{
}

void sub_1006AD65C()
{
}

void sub_1006AD6C0()
{
}

void sub_1006AD6EC()
{
}

void sub_1006AD750()
{
}

void sub_1006AD778()
{
}

void sub_1006AD7A0()
{
}

void sub_1006AD820()
{
}

void sub_1006AD8A0()
{
}

void sub_1006AD920()
{
}

void sub_1006AD9A0()
{
}

void sub_1006ADA20()
{
  __assert_rtn( "-[IDSGroupAgent generateSessionIDFromMemberArray:]",  "IDSGroupAgent.m",  500,  "sizeof(uuid) <= [hashData length]");
}

id objc_msgSend_APNSMessageDeliveryClass(void *a1, const char *a2, ...)
{
  return _[a1 APNSMessageDeliveryClass];
}

id objc_msgSend_AWDServerConnection(void *a1, const char *a2, ...)
{
  return _[a1 AWDServerConnection];
}

id objc_msgSend_BAACert(void *a1, const char *a2, ...)
{
  return _[a1 BAACert];
}

id objc_msgSend_BAAQueue(void *a1, const char *a2, ...)
{
  return _[a1 BAAQueue];
}

id objc_msgSend_BIKKeyRef(void *a1, const char *a2, ...)
{
  return _[a1 BIKKeyRef];
}

id objc_msgSend_BTLink(void *a1, const char *a2, ...)
{
  return _[a1 BTLink];
}

id objc_msgSend_BTOutOfBandKey(void *a1, const char *a2, ...)
{
  return _[a1 BTOutOfBandKey];
}

id objc_msgSend_CTPNRByConsentCompletion(void *a1, const char *a2, ...)
{
  return _[a1 CTPNRByConsentCompletion];
}

id objc_msgSend_CTPNRForSIM_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CTPNRForSIM:");
}

id objc_msgSend_ClientChannel(void *a1, const char *a2, ...)
{
  return _[a1 ClientChannel];
}

id objc_msgSend_ClientChannelAgent(void *a1, const char *a2, ...)
{
  return _[a1 ClientChannelAgent];
}

id objc_msgSend_ClientChannelManager(void *a1, const char *a2, ...)
{
  return _[a1 ClientChannelManager];
}

id objc_msgSend_ConnectivityMonitor(void *a1, const char *a2, ...)
{
  return _[a1 ConnectivityMonitor];
}

id objc_msgSend_ContactsUtilities(void *a1, const char *a2, ...)
{
  return _[a1 ContactsUtilities];
}

id objc_msgSend_CrossLayerLogging(void *a1, const char *a2, ...)
{
  return _[a1 CrossLayerLogging];
}

id objc_msgSend_DSID(void *a1, const char *a2, ...)
{
  return _[a1 DSID];
}

id objc_msgSend_ENID(void *a1, const char *a2, ...)
{
  return _[a1 ENID];
}

id objc_msgSend_FTMessageDelivery_oversized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "FTMessageDelivery_oversized");
}

id objc_msgSend_FZIDType(void *a1, const char *a2, ...)
{
  return _[a1 FZIDType];
}

id objc_msgSend_FeatureToggler(void *a1, const char *a2, ...)
{
  return _[a1 FeatureToggler];
}

id objc_msgSend_GDR(void *a1, const char *a2, ...)
{
  return _[a1 GDR];
}

id objc_msgSend_GDR_oversized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "GDR_oversized");
}

id objc_msgSend_GroupSessionKeyValueDelivery(void *a1, const char *a2, ...)
{
  return _[a1 GroupSessionKeyValueDelivery];
}

id objc_msgSend_GroupStatus_oversized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "GroupStatus_oversized");
}

id objc_msgSend_HTTPMessageDeliveryClass(void *a1, const char *a2, ...)
{
  return _[a1 HTTPMessageDeliveryClass];
}

id objc_msgSend_ID(void *a1, const char *a2, ...)
{
  return _[a1 ID];
}

id objc_msgSend_IDCertificate(void *a1, const char *a2, ...)
{
  return _[a1 IDCertificate];
}

id objc_msgSend_IDQueryCompletedWithFromURI_idStatusUpdates_service_success_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:");
}

id objc_msgSend_IDSCoreAnalyticsWiProxConnectionEvent_duration_resultCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSCoreAnalyticsWiProxConnectionEvent:duration:resultCode:");
}

id objc_msgSend_IDSCoreAnalyticsWiProxDidSendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSCoreAnalyticsWiProxDidSendData:");
}

id objc_msgSend_IDSDSession(void *a1, const char *a2, ...)
{
  return _[a1 IDSDSession];
}

id objc_msgSend_IDSDeviceConnectionForService_wasSuccessful_clientInitTime_clientOpenSocketCompletionTime_daemonOpenSocketTime_daemonOpenSocketCompletionTime_firstPacketReceiveTime_connectionInitTime_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "IDSDeviceConnectionForService:wasSuccessful:clientInitTime:clientOpenSocketCompletionTime:daemonOpenSocketTim e:daemonOpenSocketCompletionTime:firstPacketReceiveTime:connectionInitTime:");
}

id objc_msgSend_IDSFirewall(void *a1, const char *a2, ...)
{
  return _[a1 IDSFirewall];
}

id objc_msgSend_IDSGenericConnectionForLink_connectionSetupStartTime_firstPacketReceiveTime_connectionType_success_errorCode_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "IDSGenericConnectionForLink:connectionSetupStartTime:firstPacketReceiveTime:connectionType:success:errorCode:");
}

id objc_msgSend_IDSGroupSessionMessageParticipantUpdateTypeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSGroupSessionMessageParticipantUpdateTypeString:");
}

id objc_msgSend_IDSIDType(void *a1, const char *a2, ...)
{
  return _[a1 IDSIDType];
}

id objc_msgSend_IDSMagnetCorruptionDetailedEvent_correctRawBytesSinceLastCorruption_discardedRawBytes_recoveryTimeInMs_linkType_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "IDSMagnetCorruptionDetailedEvent:correctRawBytesSinceLastCorruption:discardedRawBytes:recoveryTimeInMs:linkType:");
}

id objc_msgSend_IDSMessageStore(void *a1, const char *a2, ...)
{
  return _[a1 IDSMessageStore];
}

id objc_msgSend_IDSOffGridMessenger(void *a1, const char *a2, ...)
{
  return _[a1 IDSOffGridMessenger];
}

id objc_msgSend_IDSOffGridStateManager(void *a1, const char *a2, ...)
{
  return _[a1 IDSOffGridStateManager];
}

id objc_msgSend_IDSOffGridStateManager_oversized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSOffGridStateManager_oversized");
}

id objc_msgSend_IDSPinnedIdentity(void *a1, const char *a2, ...)
{
  return _[a1 IDSPinnedIdentity];
}

id objc_msgSend_IDSQRAllocation_result_hasRecipientAccepted_payloadSize_topic_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSQRAllocation:result:hasRecipientAccepted:payloadSize:topic:service:");
}

id objc_msgSend_IDSQuickRelayEventType_eventSubType_duration_resultCode_providerType_transportType_interfaceType_skeEnabled_isInitiator_protocolVersion_retryCount_serviceName_subServiceName_participantCount_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "IDSQuickRelayEventType:eventSubType:duration:resultCode:providerType:transportType:interfaceType:skeEnabled:i sInitiator:protocolVersion:retryCount:serviceName:subServiceName:participantCount:");
}

id objc_msgSend_IDSRealTimeEncryptionServiceName_activeParticipants_firstReceivedPacketMKMtimeDelta_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSRealTimeEncryptionServiceName:activeParticipants:firstReceivedPacketMKMtimeDelta:");
}

id objc_msgSend_IDSRealTimeEncryptionServiceName_activeParticipants_membershipChangeMKMTimeDelta_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSRealTimeEncryptionServiceName:activeParticipants:membershipChangeMKMTimeDelta:");
}

id objc_msgSend_IDSSKStatusClient(void *a1, const char *a2, ...)
{
  return _[a1 IDSSKStatusClient];
}

id objc_msgSend_IDSServerMessaging(void *a1, const char *a2, ...)
{
  return _[a1 IDSServerMessaging];
}

id objc_msgSend_IDSSessionID(void *a1, const char *a2, ...)
{
  return _[a1 IDSSessionID];
}

id objc_msgSend_IDSSocketPairConnectionTCPInfoLinkType_currentRTT_bandwidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSSocketPairConnectionTCPInfoLinkType:currentRTT:bandwidth:");
}

id objc_msgSend_IDSVersion(void *a1, const char *a2, ...)
{
  return _[a1 IDSVersion];
}

id objc_msgSend_IDSWiProxDidConnectToPeer_resultCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSWiProxDidConnectToPeer:resultCode:");
}

id objc_msgSend_IDSWiProxDidDisconnectFromPeer_resultCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSWiProxDidDisconnectFromPeer:resultCode:");
}

id objc_msgSend_IDSWiProxDidSendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IDSWiProxDidSendData:");
}

id objc_msgSend_IDStatusQueryController(void *a1, const char *a2, ...)
{
  return _[a1 IDStatusQueryController];
}

id objc_msgSend_IMEI(void *a1, const char *a2, ...)
{
  return _[a1 IMEI];
}

id objc_msgSend_IMSI(void *a1, const char *a2, ...)
{
  return _[a1 IMSI];
}

id objc_msgSend_IPVersion(void *a1, const char *a2, ...)
{
  return _[a1 IPVersion];
}

id objc_msgSend_IPsecLink(void *a1, const char *a2, ...)
{
  return _[a1 IPsecLink];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_KTDeviceSignature(void *a1, const char *a2, ...)
{
  return _[a1 KTDeviceSignature];
}

id objc_msgSend_KTLoggableData(void *a1, const char *a2, ...)
{
  return _[a1 KTLoggableData];
}

id objc_msgSend_KeyTransparency(void *a1, const char *a2, ...)
{
  return _[a1 KeyTransparency];
}

id objc_msgSend_MEID(void *a1, const char *a2, ...)
{
  return _[a1 MEID];
}

id objc_msgSend_MGVeniceChangedToken(void *a1, const char *a2, ...)
{
  return _[a1 MGVeniceChangedToken];
}

id objc_msgSend_Multiplexer(void *a1, const char *a2, ...)
{
  return _[a1 Multiplexer];
}

id objc_msgSend_NGMVersion(void *a1, const char *a2, ...)
{
  return _[a1 NGMVersion];
}

id objc_msgSend_NRPairing(void *a1, const char *a2, ...)
{
  return _[a1 NRPairing];
}

id objc_msgSend_OSVersion(void *a1, const char *a2, ...)
{
  return _[a1 OSVersion];
}

id objc_msgSend_OTRController(void *a1, const char *a2, ...)
{
  return _[a1 OTRController];
}

id objc_msgSend_OTRDecryptData_OTRToken_priority_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "OTRDecryptData:OTRToken:priority:error:");
}

id objc_msgSend_OTREncryptData_OTRToken_priority_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "OTREncryptData:OTRToken:priority:error:");
}

id objc_msgSend_OTRSessionNegotiation_priority_duration_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "OTRSessionNegotiation:priority:duration:result:");
}

id objc_msgSend_OTRStore(void *a1, const char *a2, ...)
{
  return _[a1 OTRStore];
}

id objc_msgSend_OTRTestCallback_time_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "OTRTestCallback:time:error:");
}

id objc_msgSend_OTRToken(void *a1, const char *a2, ...)
{
  return _[a1 OTRToken];
}

id objc_msgSend_PLMN(void *a1, const char *a2, ...)
{
  return _[a1 PLMN];
}

id objc_msgSend_PNRInfo(void *a1, const char *a2, ...)
{
  return _[a1 PNRInfo];
}

id objc_msgSend_PNRReasonByUserID(void *a1, const char *a2, ...)
{
  return _[a1 PNRReasonByUserID];
}

id objc_msgSend_PeerLookup_DBCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "PeerLookup_DBCache");
}

id objc_msgSend_QRAllocator(void *a1, const char *a2, ...)
{
  return _[a1 QRAllocator];
}

id objc_msgSend_QRAllocator_oversized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "QRAllocator_oversized");
}

id objc_msgSend_RTCSessionPromiseWithBatchingInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "RTCSessionPromiseWithBatchingInterval:");
}

id objc_msgSend_RealTimeEncryptionController(void *a1, const char *a2, ...)
{
  return _[a1 RealTimeEncryptionController];
}

id objc_msgSend_RealTimeEncryptionController_oversize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "RealTimeEncryptionController_oversize");
}

id objc_msgSend_SHA1HexString(void *a1, const char *a2, ...)
{
  return _[a1 SHA1HexString];
}

id objc_msgSend_SHA256Data(void *a1, const char *a2, ...)
{
  return _[a1 SHA256Data];
}

id objc_msgSend_SHA256HashForKeyTransparencyTrustedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SHA256HashForKeyTransparencyTrustedDevice:");
}

id objc_msgSend_SHA256HashForKeyTransparencyTrustedService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SHA256HashForKeyTransparencyTrustedService:");
}

id objc_msgSend_SHA256HashForKeyTransparencyTrustedServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SHA256HashForKeyTransparencyTrustedServices:");
}

id objc_msgSend_SIM_didDeactivateWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SIM:didDeactivateWithInfo:");
}

id objc_msgSend_SIMForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SIMForIdentifier:");
}

id objc_msgSend_SIMIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 SIMIdentifier];
}

id objc_msgSend_SIMPhoneUserSynchronizer(void *a1, const char *a2, ...)
{
  return _[a1 SIMPhoneUserSynchronizer];
}

id objc_msgSend_SIMResponder(void *a1, const char *a2, ...)
{
  return _[a1 SIMResponder];
}

id objc_msgSend_SMSLessMechanism(void *a1, const char *a2, ...)
{
  return _[a1 SMSLessMechanism];
}

id objc_msgSend_SMSMechanismWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SMSMechanismWithContext:");
}

id objc_msgSend_SSRCRecv(void *a1, const char *a2, ...)
{
  return _[a1 SSRCRecv];
}

id objc_msgSend_SSRCSend(void *a1, const char *a2, ...)
{
  return _[a1 SSRCSend];
}

id objc_msgSend_ServerMaterialExchange(void *a1, const char *a2, ...)
{
  return _[a1 ServerMaterialExchange];
}

id objc_msgSend_SessionController(void *a1, const char *a2, ...)
{
  return _[a1 SessionController];
}

id objc_msgSend_StableEncryptionController(void *a1, const char *a2, ...)
{
  return _[a1 StableEncryptionController];
}

id objc_msgSend_TransportLevelAgent(void *a1, const char *a2, ...)
{
  return _[a1 TransportLevelAgent];
}

id objc_msgSend_UDID(void *a1, const char *a2, ...)
{
  return _[a1 UDID];
}

id objc_msgSend_URI(void *a1, const char *a2, ...)
{
  return _[a1 URI];
}

id objc_msgSend_URIByAddingOptionalPushToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIByAddingOptionalPushToken:");
}

id objc_msgSend_URIByAddingPushToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIByAddingPushToken:");
}

id objc_msgSend_URIToQueryFrom_withPreferredFromURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIToQueryFrom:withPreferredFromURI:");
}

id objc_msgSend_URIWithPrefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIWithPrefixedURI:");
}

id objc_msgSend_URIWithPrefixedURI_withServiceLoggingHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIWithPrefixedURI:withServiceLoggingHint:");
}

id objc_msgSend_URIWithUnprefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIWithUnprefixedURI:");
}

id objc_msgSend_URIWithUnprefixedURI_withServiceLoggingHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URIWithUnprefixedURI:withServiceLoggingHint:");
}

id objc_msgSend_URIs(void *a1, const char *a2, ...)
{
  return _[a1 URIs];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UTunConnection(void *a1, const char *a2, ...)
{
  return _[a1 UTunConnection];
}

id objc_msgSend_UTunPeer(void *a1, const char *a2, ...)
{
  return _[a1 UTunPeer];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_XPCAdapter(void *a1, const char *a2, ...)
{
  return _[a1 XPCAdapter];
}

id objc_msgSend__ACAccountWithTypeIdentifier_matchingCriteria_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ACAccountWithTypeIdentifier:matchingCriteria:completion:");
}

id objc_msgSend__ACAccountWithTypeIdentifier_matchingCriteria_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ACAccountWithTypeIdentifier:matchingCriteria:error:");
}

id objc_msgSend__BAACertTTLInMinutesFromServerBag(void *a1, const char *a2, ...)
{
  return _[a1 _BAACertTTLInMinutesFromServerBag];
}

id objc_msgSend__BAAFetchTimeoutFromServerBag(void *a1, const char *a2, ...)
{
  return _[a1 _BAAFetchTimeoutFromServerBag];
}

id objc_msgSend__DSAuthIDForPushToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_DSAuthIDForPushToken:");
}

id objc_msgSend__FTCopyOptionallyGzippedData(void *a1, const char *a2, ...)
{
  return _[a1 _FTCopyOptionallyGzippedData];
}

id objc_msgSend__FTDataFromBase64String(void *a1, const char *a2, ...)
{
  return _[a1 _FTDataFromBase64String];
}

id objc_msgSend__FTDataFromHexString(void *a1, const char *a2, ...)
{
  return _[a1 _FTDataFromHexString];
}

id objc_msgSend__FTOptionallyDecompressData(void *a1, const char *a2, ...)
{
  return _[a1 _FTOptionallyDecompressData];
}

id objc_msgSend__FTStringFromBaseData(void *a1, const char *a2, ...)
{
  return _[a1 _FTStringFromBaseData];
}

id objc_msgSend__FZBestGuessFZIDType(void *a1, const char *a2, ...)
{
  return _[a1 _FZBestGuessFZIDType];
}

id objc_msgSend__FZIDType(void *a1, const char *a2, ...)
{
  return _[a1 _FZIDType];
}

id objc_msgSend__IDFromFZIDType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IDFromFZIDType:");
}

id objc_msgSend__IDSDataFromBase64String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IDSDataFromBase64String:");
}

id objc_msgSend__IDSEndpointTransparencyStatesForKTLoggableDatas_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IDSEndpointTransparencyStatesForKTLoggableDatas:index:");
}

id objc_msgSend__IDSEndpointTransparencyVerificationStateForKTResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IDSEndpointTransparencyVerificationStateForKTResult:");
}

id objc_msgSend__IDSKTAccountStatusForKTAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IDSKTAccountStatusForKTAccountStatus:");
}

id objc_msgSend__IDSPowerLogDictionary_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IDSPowerLogDictionary:info:");
}

id objc_msgSend__IDStatusForURI_fromService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IDStatusForURI:fromService:");
}

id objc_msgSend__IDsFromURIs(void *a1, const char *a2, ...)
{
  return _[a1 _IDsFromURIs];
}

id objc_msgSend__IMTransferServiceController(void *a1, const char *a2, ...)
{
  return _[a1 _IMTransferServiceController];
}

id objc_msgSend__KTDataForIDSKeyTransparencyEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_KTDataForIDSKeyTransparencyEntry:");
}

id objc_msgSend__KTDatasForIDSKeyTransparencyEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_KTDatasForIDSKeyTransparencyEntries:");
}

id objc_msgSend__KTDatasForIDSProtoKeyTransparencyTrustedDevices_serviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_KTDatasForIDSProtoKeyTransparencyTrustedDevices:serviceIdentifier:");
}

id objc_msgSend__SIMSetupDidComplete(void *a1, const char *a2, ...)
{
  return _[a1 _SIMSetupDidComplete];
}

id objc_msgSend__URIFromCanonicalizedPseudonymID(void *a1, const char *a2, ...)
{
  return _[a1 _URIFromCanonicalizedPseudonymID];
}

id objc_msgSend__URIFromCanonicalizedTemporaryID(void *a1, const char *a2, ...)
{
  return _[a1 _URIFromCanonicalizedTemporaryID];
}

id objc_msgSend__URIFromFZIDType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_URIFromFZIDType:");
}

id objc_msgSend__URIsFromIDs(void *a1, const char *a2, ...)
{
  return _[a1 _URIsFromIDs];
}

id objc_msgSend__URIsToRegisterForRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_URIsToRegisterForRegistration:");
}

id objc_msgSend__UTunDeliveryController(void *a1, const char *a2, ...)
{
  return _[a1 _UTunDeliveryController];
}

id objc_msgSend___cleanupValidationInfoForSubsystemMechanism_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__cleanupValidationInfoForSubsystemMechanism:");
}

id objc_msgSend___dumpState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__dumpState");
}

id objc_msgSend___failValidationQueueForSubsystemMechanism_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__failValidationQueueForSubsystemMechanism:");
}

id objc_msgSend___failValidationQueueWithErrorResponseCode_forSubsystemMechanism_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__failValidationQueueWithErrorResponseCode:forSubsystemMechanism:");
}

id objc_msgSend___flushValidationQueueForSubsystemMechanism_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__flushValidationQueueForSubsystemMechanism:");
}

id objc_msgSend___imArrayByApplyingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imArrayByApplyingBlock:");
}

id objc_msgSend___imArrayByFilteringWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imArrayByFilteringWithBlock:");
}

id objc_msgSend___imDataWithHexString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imDataWithHexString:");
}

id objc_msgSend___imDataWithRandomBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imDataWithRandomBytes:");
}

id objc_msgSend___imDictionaryByFilteringWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imDictionaryByFilteringWithBlock:");
}

id objc_msgSend___imFirstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imFirstObject");
}

id objc_msgSend___imForEach_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imForEach:");
}

id objc_msgSend___imHexString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imHexString");
}

id objc_msgSend___imRandomizeArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imRandomizeArray");
}

id objc_msgSend___imSetByApplyingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imSetByApplyingBlock:");
}

id objc_msgSend___imSetFromArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__imSetFromArray");
}

id objc_msgSend___mainThreadPostNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__mainThreadPostNotificationName:object:");
}

id objc_msgSend___queueValidationMessage_subsystem_sendBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__queueValidationMessage:subsystem:sendBlock:");
}

id objc_msgSend___saveStoreForDataProtectionClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__saveStoreForDataProtectionClass:");
}

id objc_msgSend___saveToKeychain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__saveToKeychain");
}

id objc_msgSend___sendMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__sendMessage:");
}

id objc_msgSend__acceptIncomingPushes(void *a1, const char *a2, ...)
{
  return _[a1 _acceptIncomingPushes];
}

id objc_msgSend__acceptedDeviceToken(void *a1, const char *a2, ...)
{
  return _[a1 _acceptedDeviceToken];
}

id objc_msgSend__acceptedDeviceUniqueID(void *a1, const char *a2, ...)
{
  return _[a1 _acceptedDeviceUniqueID];
}

id objc_msgSend__accessPairedDevicesInCriticalSectionWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessPairedDevicesInCriticalSectionWithBlock:");
}

id objc_msgSend__accountToUse(void *a1, const char *a2, ...)
{
  return _[a1 _accountToUse];
}

id objc_msgSend__accountsForUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accountsForUser:");
}

id objc_msgSend__accountsWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accountsWithService:");
}

id objc_msgSend__accumulateStats_intoMessages_andBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accumulateStats:intoMessages:andBytes:");
}

id objc_msgSend__ackMessageWithSequenceNumber_forDeviceID_priority_dataProtectionClass_connectionType_guid_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_ackMessageWithSequenceNumber:forDeviceID:priority:dataProtectionClass:connectionType:guid:");
}

id objc_msgSend__activeAppleIDAccount(void *a1, const char *a2, ...)
{
  return _[a1 _activeAppleIDAccount];
}

id objc_msgSend__activePairedDeviceCBUUID(void *a1, const char *a2, ...)
{
  return _[a1 _activePairedDeviceCBUUID];
}

id objc_msgSend__addAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAccount:");
}

id objc_msgSend__addAccountDuringInitialSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAccountDuringInitialSetup:");
}

id objc_msgSend__addAliases_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAliases:");
}

id objc_msgSend__addAllocationForSession_allocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAllocationForSession:allocation:");
}

id objc_msgSend__addCompletionBlock_forURIs_fromURI_fromService_context_queryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCompletionBlock:forURIs:fromURI:fromService:context:queryIdentifier:");
}

id objc_msgSend__addConnectStatus_relaySessionID_previousTime_qrReason_previousError_previousRelayIP_previousAccessToken_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_addConnectStatus:relaySessionID:previousTime:qrReason:previousError:previousRelayIP:previousAccessToken:");
}

id objc_msgSend__addEarlyListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addEarlyListener:");
}

id objc_msgSend__addIncomingGUIDsWithGuid_isLocal_hasLock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addIncomingGUIDsWithGuid:isLocal:hasLock:");
}

id objc_msgSend__addIncomingMessageSize_forTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addIncomingMessageSize:forTopic:");
}

id objc_msgSend__addMessageSize_forTopic_direction_dataProtectionClass_isResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMessageSize:forTopic:direction:dataProtectionClass:isResource:");
}

id objc_msgSend__addMessageToStatistics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMessageToStatistics:");
}

id objc_msgSend__addOutgoingMessageSize_forTopic_dataProtectionClass_isResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOutgoingMessageSize:forTopic:dataProtectionClass:isResource:");
}

id objc_msgSend__addPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPairedDevice:");
}

id objc_msgSend__addPairedDevice_withInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPairedDevice:withInfo:completion:");
}

id objc_msgSend__addPhoneNumbersToAccount_withNonPreferredPhoneAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPhoneNumbersToAccount:withNonPreferredPhoneAccounts:");
}

id objc_msgSend__addPseudonym_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPseudonym:");
}

id objc_msgSend__addResponseToCache_sessionInfo_modifiedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addResponseToCache:sessionInfo:modifiedMessage:");
}

id objc_msgSend__addStatsFromDict_toAggregate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addStatsFromDict:toAggregate:");
}

id objc_msgSend__addUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUser:");
}

id objc_msgSend__advertiseNow(void *a1, const char *a2, ...)
{
  return _[a1 _advertiseNow];
}

id objc_msgSend__alertForHomeNumberIfNeededForSIMIdentifier_withPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alertForHomeNumberIfNeededForSIMIdentifier:withPhoneNumber:");
}

id objc_msgSend__allCloudConnectionsAreIdle(void *a1, const char *a2, ...)
{
  return _[a1 _allCloudConnectionsAreIdle];
}

id objc_msgSend__allConnectionsAreIdle(void *a1, const char *a2, ...)
{
  return _[a1 _allConnectionsAreIdle];
}

id objc_msgSend__allUserIntentWithDefaultReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allUserIntentWithDefaultReason:");
}

id objc_msgSend__allowHomeNumberForUser_simCarrierIdentifiers_userCarrierIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowHomeNumberForUser:simCarrierIdentifiers:userCarrierIdentifiers:");
}

id objc_msgSend__alreadyLocked_sendRatchetedKeyMaterials_toAVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alreadyLocked_sendRatchetedKeyMaterials:toAVC:");
}

id objc_msgSend__alreadyLocked_shouldRatchetForGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alreadyLocked_shouldRatchetForGroup:");
}

id objc_msgSend__annouceAvailabilityForCloudMessaging(void *a1, const char *a2, ...)
{
  return _[a1 _annouceAvailabilityForCloudMessaging];
}

id objc_msgSend__anyDeviceUsingSubService_superService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anyDeviceUsingSubService:superService:");
}

id objc_msgSend__appearsToBeDSID(void *a1, const char *a2, ...)
{
  return _[a1 _appearsToBeDSID];
}

id objc_msgSend__appearsToBeEmail(void *a1, const char *a2, ...)
{
  return _[a1 _appearsToBeEmail];
}

id objc_msgSend__appearsToBePhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 _appearsToBePhoneNumber];
}

id objc_msgSend__appearsToBePseudonymID(void *a1, const char *a2, ...)
{
  return _[a1 _appearsToBePseudonymID];
}

id objc_msgSend__appearsToBeTemporaryID(void *a1, const char *a2, ...)
{
  return _[a1 _appearsToBeTemporaryID];
}

id objc_msgSend__areAllPrimaryContactsIMLReachableWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_areAllPrimaryContactsIMLReachableWithCompletion:");
}

id objc_msgSend__arrayForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrayForKey:");
}

id objc_msgSend__assertPresence(void *a1, const char *a2, ...)
{
  return _[a1 _assertPresence];
}

id objc_msgSend__assertQuickRelayForCloudMessaging(void *a1, const char *a2, ...)
{
  return _[a1 _assertQuickRelayForCloudMessaging];
}

id objc_msgSend__asyncCleanupExpiredEntriesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _asyncCleanupExpiredEntriesIfNeeded];
}

id objc_msgSend__asyncRemoveExcessiveQueryEntriesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _asyncRemoveExcessiveQueryEntriesIfNeeded];
}

id objc_msgSend__attachOrphanedPhoneAliases_toRecipientAccounts_withAccountsToEnable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attachOrphanedPhoneAliases:toRecipientAccounts:withAccountsToEnable:");
}

id objc_msgSend__attemptToKickoffExpirationTimerForUser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attemptToKickoffExpirationTimerForUser:");
}

id objc_msgSend__authDSMessageForRegistration_realm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authDSMessageForRegistration:realm:");
}

id objc_msgSend__authMessageCompletionWithRegistration_withOverallSuccessBlock_overallFailure_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authMessageCompletionWithRegistration:withOverallSuccessBlock:overallFailure:");
}

id objc_msgSend__authMessageForRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authMessageForRegistration:");
}

id objc_msgSend__authSubsystemForInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authSubsystemForInfo:");
}

id objc_msgSend__authUsersMessageForRegistration_realm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authUsersMessageForRegistration:realm:");
}

id objc_msgSend__authenticateAccount(void *a1, const char *a2, ...)
{
  return _[a1 _authenticateAccount];
}

id objc_msgSend__bestGuessURI(void *a1, const char *a2, ...)
{
  return _[a1 _bestGuessURI];
}

id objc_msgSend__bestGuessURIFromCanicalizedID(void *a1, const char *a2, ...)
{
  return _[a1 _bestGuessURIFromCanicalizedID];
}

id objc_msgSend__breakDictionaryIntoMultipleChunks_chunkSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_breakDictionaryIntoMultipleChunks:chunkSize:");
}

id objc_msgSend__bringUpWiFi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bringUpWiFi:");
}

id objc_msgSend__broadcastAccountMessageBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastAccountMessageBlock:");
}

id objc_msgSend__broadcastPendingMessageUpdateForNiceMessage_fromURI_toURI_forTopic_messageContext_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastPendingMessageUpdateForNiceMessage:fromURI:toURI:forTopic:messageContext:");
}

id objc_msgSend__broadcastSessionStartWithSocket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastSessionStartWithSocket:");
}

id objc_msgSend__buildCellularNetworkInfoSessionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildCellularNetworkInfoSessionEvent:");
}

id objc_msgSend__builderAvoidMainQueue_forceEncryptionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_builderAvoidMainQueue:forceEncryptionType:");
}

id objc_msgSend__cacheSession_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheSession:token:");
}

id objc_msgSend__cachedResultsForURIs_fromURI_fromService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedResultsForURIs:fromURI:fromService:");
}

id objc_msgSend__cachedSessionForToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedSessionForToken:");
}

id objc_msgSend__calculateRandomDelayForCloudMessagingRequest(void *a1, const char *a2, ...)
{
  return _[a1 _calculateRandomDelayForCloudMessagingRequest];
}

id objc_msgSend__callBlocksWithResult_registrations_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callBlocksWithResult:registrations:error:");
}

id objc_msgSend__callDelegateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callDelegateWithBlock:");
}

id objc_msgSend__callHandlerWithMessage_resetDataConnections_shouldObliterate_decryptionFailed_shouldTriggerCorruptionRecovery_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_callHandlerWithMessage:resetDataConnections:shouldObliterate:decryptionFailed:shouldTriggerCorruptionRecovery:");
}

id objc_msgSend__callPairedDeviceDidConnectBlocksForUniqueID_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callPairedDeviceDidConnectBlocksForUniqueID:withError:");
}

id objc_msgSend__callReplayCommitBlockForIncomingMessages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callReplayCommitBlockForIncomingMessages:");
}

id objc_msgSend__calloutToDelegateWithUpdatedContacts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calloutToDelegateWithUpdatedContacts:");
}

id objc_msgSend__canBulkMessageWithPriority_adHocServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canBulkMessageWithPriority:adHocServiceType:");
}

id objc_msgSend__canDeliverSMSNow(void *a1, const char *a2, ...)
{
  return _[a1 _canDeliverSMSNow];
}

id objc_msgSend__canReportMetric_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canReportMetric:");
}

id objc_msgSend__canSendMessageLocally_toDestinations_withCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canSendMessageLocally:toDestinations:withCommand:");
}

id objc_msgSend__canSendMessageWithAccount_toDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canSendMessageWithAccount:toDestination:");
}

id objc_msgSend__canSendNonUrgentInternetMessageForTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canSendNonUrgentInternetMessageForTopic:");
}

id objc_msgSend__cancelConnectionAndResetDataConnections_shouldObliterate_encryptionFailure_shouldTriggerCorruptionRecovery_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_cancelConnectionAndResetDataConnections:shouldObliterate:encryptionFailure:shouldTriggerCorruptionRecovery:");
}

id objc_msgSend__cancelScheduledHeartbeat(void *a1, const char *a2, ...)
{
  return _[a1 _cancelScheduledHeartbeat];
}

id objc_msgSend__cancelScheduledSMSTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _cancelScheduledSMSTimeout];
}

id objc_msgSend__captureDiagnosticsForFailedRegistration_registrationError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureDiagnosticsForFailedRegistration:registrationError:");
}

id objc_msgSend__checkAndRunClientChannelTests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndRunClientChannelTests:");
}

id objc_msgSend__checkAndSendCachedDataForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndSendCachedDataForClient:");
}

id objc_msgSend__checkAndStartConnection(void *a1, const char *a2, ...)
{
  return _[a1 _checkAndStartConnection];
}

id objc_msgSend__checkAndUnassertRealTimeMode(void *a1, const char *a2, ...)
{
  return _[a1 _checkAndUnassertRealTimeMode];
}

id objc_msgSend__checkAndUpdateDBIfRequiredForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndUpdateDBIfRequiredForClass:");
}

id objc_msgSend__checkContinuityEntitlementForMessageContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkContinuityEntitlementForMessageContext:");
}

id objc_msgSend__checkEntitlement_forAccountWithID_messageContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkEntitlement:forAccountWithID:messageContext:");
}

id objc_msgSend__checkFastDormancy(void *a1, const char *a2, ...)
{
  return _[a1 _checkFastDormancy];
}

id objc_msgSend__checkForOtherRegisteredTopLevelPhoneAccountMatchingThisAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkForOtherRegisteredTopLevelPhoneAccountMatchingThisAccount:");
}

id objc_msgSend__checkIfDupeAndNoteGuid_local_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkIfDupeAndNoteGuid:local:topic:");
}

id objc_msgSend__checkIfDupeAndNoteGuid_local_topic_forceNoteGuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkIfDupeAndNoteGuid:local:topic:forceNoteGuid:");
}

id objc_msgSend__checkIfPushMessageSizeGreaterThanMaxLimit_maxLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkIfPushMessageSizeGreaterThanMaxLimit:maxLimit:");
}

id objc_msgSend__checkMessageHashForData_identifier_isRetry_delayedCommitBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkMessageHashForData:identifier:isRetry:delayedCommitBlock:");
}

id objc_msgSend__checkOverRegistrations(void *a1, const char *a2, ...)
{
  return _[a1 _checkOverRegistrations];
}

id objc_msgSend__checkRegistration(void *a1, const char *a2, ...)
{
  return _[a1 _checkRegistration];
}

id objc_msgSend__checkSendNewMessage(void *a1, const char *a2, ...)
{
  return _[a1 _checkSendNewMessage];
}

id objc_msgSend__checkTechChange(void *a1, const char *a2, ...)
{
  return _[a1 _checkTechChange];
}

id objc_msgSend__cleanUpAccountCredentialForRemovedAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpAccountCredentialForRemovedAccount:");
}

id objc_msgSend__cleanUpAccountCredentialStore(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpAccountCredentialStore];
}

id objc_msgSend__cleanUpOutgoingMessageDatabaseAndClearStatementCache(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpOutgoingMessageDatabaseAndClearStatementCache];
}

id objc_msgSend__cleanup(void *a1, const char *a2, ...)
{
  return _[a1 _cleanup];
}

id objc_msgSend__cleanupAccount(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupAccount];
}

id objc_msgSend__cleanupConnection(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupConnection];
}

id objc_msgSend__cleanupContinuityPeerMaps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupContinuityPeerMaps:");
}

id objc_msgSend__cleanupExpiredIncomingMessages(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupExpiredIncomingMessages];
}

id objc_msgSend__cleanupFailedElectionWithFullAccountIdentityCluster_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupFailedElectionWithFullAccountIdentityCluster:");
}

id objc_msgSend__cleanupFrequencyForRestrictedMessages(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupFrequencyForRestrictedMessages];
}

id objc_msgSend__cleanupIncomingFilesDirectories(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupIncomingFilesDirectories];
}

id objc_msgSend__cleanupIncomingFilesDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupIncomingFilesDirectory:");
}

id objc_msgSend__cleanupIncomingMessageDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupIncomingMessageDatabase];
}

id objc_msgSend__cleanupLegacyAccounts(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupLegacyAccounts];
}

id objc_msgSend__cleanupLegacyLocalAccounts(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupLegacyLocalAccounts];
}

id objc_msgSend__cleanupListenerWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupListenerWithPid:");
}

id objc_msgSend__cleanupLocalAccounts(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupLocalAccounts];
}

id objc_msgSend__cleanupOutgoingExpiredMessages(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupOutgoingExpiredMessages];
}

id objc_msgSend__cleanupOutgoingMessageDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupOutgoingMessageDatabase];
}

id objc_msgSend__cleanupOutgoingMessages(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupOutgoingMessages];
}

id objc_msgSend__cleanupOutgoingQWSMessages(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupOutgoingQWSMessages];
}

id objc_msgSend__cleanupQuickRelaySession(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupQuickRelaySession];
}

id objc_msgSend__cleanupRunawayClientOutgoingMessages(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupRunawayClientOutgoingMessages];
}

id objc_msgSend__cleanupSessionConnection(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupSessionConnection];
}

id objc_msgSend__cleanupSocketPairConnection(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupSocketPairConnection];
}

id objc_msgSend__cleanupUntrackedValidators(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupUntrackedValidators];
}

id objc_msgSend__clearChannel(void *a1, const char *a2, ...)
{
  return _[a1 _clearChannel];
}

id objc_msgSend__clearCloudDisableTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearCloudDisableTimer];
}

id objc_msgSend__clearConnectionTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearConnectionTimer];
}

id objc_msgSend__clearConsentDenialsForUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearConsentDenialsForUniqueIdentifier:");
}

id objc_msgSend__clearDatabaseCloseTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearDatabaseCloseTimer];
}

id objc_msgSend__clearDisableTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearDisableTimer];
}

id objc_msgSend__clearForcedGDRCount(void *a1, const char *a2, ...)
{
  return _[a1 _clearForcedGDRCount];
}

id objc_msgSend__clearForcedGDRDate(void *a1, const char *a2, ...)
{
  return _[a1 _clearForcedGDRDate];
}

id objc_msgSend__clearGDRState(void *a1, const char *a2, ...)
{
  return _[a1 _clearGDRState];
}

id objc_msgSend__clearIDSState(void *a1, const char *a2, ...)
{
  return _[a1 _clearIDSState];
}

id objc_msgSend__clearInvitationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearInvitationTimer];
}

id objc_msgSend__clearLastFallbackWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearLastFallbackWithReason:");
}

id objc_msgSend__clearOffGridResetTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearOffGridResetTimer];
}

id objc_msgSend__clearPacketLossTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearPacketLossTimer];
}

id objc_msgSend__clearPairedDeviceDidConnectBlocksForUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearPairedDeviceDidConnectBlocksForUniqueID:");
}

id objc_msgSend__clearQueueForTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearQueueForTopic:");
}

id objc_msgSend__clearSMSDeliveryTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _clearSMSDeliveryTimeout];
}

id objc_msgSend__clearSendKeyOnConnectInterval(void *a1, const char *a2, ...)
{
  return _[a1 _clearSendKeyOnConnectInterval];
}

id objc_msgSend__clearSendingPowerAssertionWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearSendingPowerAssertionWithReason:");
}

id objc_msgSend__clearTimerForTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearTimerForTopic:");
}

id objc_msgSend__clearWiFiAssociationPowerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 _clearWiFiAssociationPowerAssertion];
}

id objc_msgSend__clientErrorForKTResult_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientErrorForKTResult:underlyingError:");
}

id objc_msgSend__clientErrorWithCode_debugDescription_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientErrorWithCode:debugDescription:underlyingError:");
}

id objc_msgSend__closeSocketToDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_closeSocketToDevice:");
}

id objc_msgSend__closeSockets(void *a1, const char *a2, ...)
{
  return _[a1 _closeSockets];
}

id objc_msgSend__cloudKitRecordForDeviceRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cloudKitRecordForDeviceRecord:");
}

id objc_msgSend__combinedServicesForAllDevices(void *a1, const char *a2, ...)
{
  return _[a1 _combinedServicesForAllDevices];
}

id objc_msgSend__commandIsSessionCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commandIsSessionCommand:");
}

id objc_msgSend__commandIsSessionGroupSessionCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commandIsSessionGroupSessionCommand:");
}

id objc_msgSend__commands(void *a1, const char *a2, ...)
{
  return _[a1 _commands];
}

id objc_msgSend__compactKeyMaterialMessage_isOutgoing_groupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_compactKeyMaterialMessage:isOutgoing:groupID:");
}

id objc_msgSend__companionLinkClientForDeviceIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_companionLinkClientForDeviceIdentifier:completion:");
}

id objc_msgSend__completionBlocksForURIs_fromURI_fromService_forRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completionBlocksForURIs:fromURI:fromService:forRefresh:");
}

id objc_msgSend__configurePushHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurePushHandler:");
}

id objc_msgSend__connectNow(void *a1, const char *a2, ...)
{
  return _[a1 _connectNow];
}

id objc_msgSend__connectQRDirectlyToClientChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectQRDirectlyToClientChannel:");
}

id objc_msgSend__connectSocketDescriptor_toClientChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectSocketDescriptor:toClientChannel:");
}

id objc_msgSend__connectStewieWithContext_options_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectStewieWithContext:options:withCompletion:");
}

id objc_msgSend__connectionForPriority_messageType_dataProtectionClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionForPriority:messageType:dataProtectionClass:");
}

id objc_msgSend__connectionTypeForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionTypeForConnection:");
}

id objc_msgSend__connectivityChanged(void *a1, const char *a2, ...)
{
  return _[a1 _connectivityChanged];
}

id objc_msgSend__connectivityChangedForDefaultDevice_isCloudConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectivityChangedForDefaultDevice:isCloudConnected:");
}

id objc_msgSend__constructAccountInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constructAccountInfo:");
}

id objc_msgSend__constructDeliveryPipeline(void *a1, const char *a2, ...)
{
  return _[a1 _constructDeliveryPipeline];
}

id objc_msgSend__constructOfflineDeliveryPipeline(void *a1, const char *a2, ...)
{
  return _[a1 _constructOfflineDeliveryPipeline];
}

id objc_msgSend__contactsDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _contactsDidChange];
}

id objc_msgSend__continuityDidUpdateStateWithStateValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continuityDidUpdateStateWithStateValue:");
}

id objc_msgSend__copyDeviceRecord_toCloudKitRecordRef_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyDeviceRecord:toCloudKitRecordRef:");
}

id objc_msgSend__copyDirectMessagingMetadataForRemoteObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyDirectMessagingMetadataForRemoteObject:");
}

id objc_msgSend__copyForEnumerating(void *a1, const char *a2, ...)
{
  return _[a1 _copyForEnumerating];
}

id objc_msgSend__copyLookupSecVerificationIdentity(void *a1, const char *a2, ...)
{
  return _[a1 _copyLookupSecVerificationIdentity];
}

id objc_msgSend__copyPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 _copyPairedDevice];
}

id objc_msgSend__copyPeerWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyPeerWithID:");
}

id objc_msgSend__copyPowerlogDictionaryWithOutgoingStats_incomingStats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyPowerlogDictionaryWithOutgoingStats:incomingStats:");
}

id objc_msgSend__copyStatisticsDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyStatisticsDict:");
}

id objc_msgSend__countOfMessagesQueuedOfType_matchingCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_countOfMessagesQueuedOfType:matchingCriteria:");
}

id objc_msgSend__createAccountKeysWithFullAccountIdentity_serviceTypeNames_oldCluster_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAccountKeysWithFullAccountIdentity:serviceTypeNames:oldCluster:completion:");
}

id objc_msgSend__createAccountWithDictionary_service_uniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAccountWithDictionary:service:uniqueID:");
}

id objc_msgSend__createAndEnableExistingSystemAccounts(void *a1, const char *a2, ...)
{
  return _[a1 _createAndEnableExistingSystemAccounts];
}

id objc_msgSend__createClientDatasForServiceTypes_withAppleIDRegistrationsForServiceTypes_ktRegDataByServiceType_publicIdentityData_publicIdentityError_keyStore_isPresenceCapable_isStewieCapable_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_createClientDatasForServiceTypes:withAppleIDRegistrationsForServiceTypes:ktRegDataByServiceType:publicIdenti tyData:publicIdentityError:keyStore:isPresenceCapable:isStewieCapable:");
}

id objc_msgSend__createDispatchData(void *a1, const char *a2, ...)
{
  return _[a1 _createDispatchData];
}

id objc_msgSend__createFirewallRecordsFromSQLRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createFirewallRecordsFromSQLRecords:");
}

id objc_msgSend__createGroupSessionActiveParticipantsFromParticipants_pushTokenForParticipants_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createGroupSessionActiveParticipantsFromParticipants:pushTokenForParticipants:");
}

id objc_msgSend__createHashingDeviceIdentityEncrypter(void *a1, const char *a2, ...)
{
  return _[a1 _createHashingDeviceIdentityEncrypter];
}

id objc_msgSend__createKTTrustedDeviceForKVSisRegistered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createKTTrustedDeviceForKVSisRegistered:");
}

id objc_msgSend__createOneWayParticipantDictionaryFromMappedParticipantsDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createOneWayParticipantDictionaryFromMappedParticipantsDict:");
}

id objc_msgSend__createOutgoingMessageRecordsFromSQLRecords_includeMessagePayloads_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createOutgoingMessageRecordsFromSQLRecords:includeMessagePayloads:");
}

id objc_msgSend__createPeerFromDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPeerFromDeviceID:");
}

id objc_msgSend__createPeerFromDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPeerFromDeviceInfo:");
}

id objc_msgSend__createRegistrationProperties_maxCompatibilityVersion_BTOutOfBandKey_supportsIPsecWithSPPLink_bluetoothMACAddress_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_createRegistrationProperties:maxCompatibilityVersion:BTOutOfBandKey:supportsIPsecWithSPPLink:bluetoothMACAddress:");
}

id objc_msgSend__createSessionInfoFromResponsePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSessionInfoFromResponsePayload:");
}

id objc_msgSend__createSimpleConnectionData(void *a1, const char *a2, ...)
{
  return _[a1 _createSimpleConnectionData];
}

id objc_msgSend__createStallDetectorWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createStallDetectorWithName:");
}

id objc_msgSend__createStreamSubscriptionRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createStreamSubscriptionRequest:");
}

id objc_msgSend__createTimerForTopic_withDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createTimerForTopic:withDelay:");
}

id objc_msgSend__createWiFiAssociationPowerAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createWiFiAssociationPowerAssertion:");
}

id objc_msgSend__createWiFiManagerClient(void *a1, const char *a2, ...)
{
  return _[a1 _createWiFiManagerClient];
}

id objc_msgSend__createZoneIfNeededUsingTimeIntervalForRequest_isNonDiscretionary_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createZoneIfNeededUsingTimeIntervalForRequest:isNonDiscretionary:completion:");
}

id objc_msgSend__createiTunesAccountFromSystemIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createiTunesAccountFromSystemIfNeeded];
}

id objc_msgSend__criticalActivatePairedDeviceWithCBUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_criticalActivatePairedDeviceWithCBUUID:");
}

id objc_msgSend__criticalActivePairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 _criticalActivePairedDevice];
}

id objc_msgSend__criticalAllPairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 _criticalAllPairedDevices];
}

id objc_msgSend__criticalIsCountingDown(void *a1, const char *a2, ...)
{
  return _[a1 _criticalIsCountingDown];
}

id objc_msgSend__criticalPairedDeviceWithCBUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_criticalPairedDeviceWithCBUUID:");
}

id objc_msgSend__criticalPerformPairedDeviceActivationWithCBUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_criticalPerformPairedDeviceActivationWithCBUUID:");
}

id objc_msgSend__criticalPerformPairedDeviceDeactivation(void *a1, const char *a2, ...)
{
  return _[a1 _criticalPerformPairedDeviceDeactivation];
}

id objc_msgSend__criticalPerformTransactionWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_criticalPerformTransactionWithBlock:");
}

id objc_msgSend__criticalPersistState(void *a1, const char *a2, ...)
{
  return _[a1 _criticalPersistState];
}

id objc_msgSend__criticalPutPairedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_criticalPutPairedDevice:");
}

id objc_msgSend__criticalUpdatePairedDevice_isActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_criticalUpdatePairedDevice:isActive:");
}

id objc_msgSend__criticalUpdatePairedDeviceWithCBUUID_deviceUniqueID_buildVersion_productVersion_productName_pairingProtocolVersion_minCompatibilityVersion_maxCompatibilityVersion_serviceMinCompatibilityVersion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_criticalUpdatePairedDeviceWithCBUUID:deviceUniqueID:buildVersion:productVersion:productName:pairingProtocolV ersion:minCompatibilityVersion:maxCompatibilityVersion:serviceMinCompatibilityVersion:");
}

id objc_msgSend__currentForcedGDRCount(void *a1, const char *a2, ...)
{
  return _[a1 _currentForcedGDRCount];
}

id objc_msgSend__currentLink(void *a1, const char *a2, ...)
{
  return _[a1 _currentLink];
}

id objc_msgSend__currentLocalTime(void *a1, const char *a2, ...)
{
  return _[a1 _currentLocalTime];
}

id objc_msgSend__currentOTRTimer(void *a1, const char *a2, ...)
{
  return _[a1 _currentOTRTimer];
}

id objc_msgSend__currentPeerVerificationResultsForQueriedIndex_ticket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentPeerVerificationResultsForQueriedIndex:ticket:");
}

id objc_msgSend__currentSecondsIntoDay(void *a1, const char *a2, ...)
{
  return _[a1 _currentSecondsIntoDay];
}

id objc_msgSend__currentSubServicesForDevice_superService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentSubServicesForDevice:superService:");
}

id objc_msgSend__currentVerificationResultsForRegisteredIndex_ticket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentVerificationResultsForRegisteredIndex:ticket:");
}

id objc_msgSend__dataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataForKey:");
}

id objc_msgSend__datePassed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_datePassed:");
}

id objc_msgSend__decodeMapData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decodeMapData:");
}

id objc_msgSend__decryptAOverCMessage_topic_fromDeviceID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptAOverCMessage:topic:fromDeviceID:error:");
}

id objc_msgSend__decryptData_decryptionContext_encrypter_pkType_isRetry_priority_replayKey_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptData:decryptionContext:encrypter:pkType:isRetry:priority:replayKey:completion:");
}

id objc_msgSend__decryptData_encrypter_pkType_isRetry_priority_replayKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptData:encrypter:pkType:isRetry:priority:replayKey:completion:");
}

id objc_msgSend__decryptData_usingIdentifier_isRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptData:usingIdentifier:isRetry:");
}

id objc_msgSend__decryptData_usingIdentifier_isRetry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptData:usingIdentifier:isRetry:error:");
}

id objc_msgSend__decryptOTREncrtypedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptOTREncrtypedMessage:");
}

id objc_msgSend__decryptPublicKeyEncryptedMessage_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptPublicKeyEncryptedMessage:completionBlock:");
}

id objc_msgSend__decryptReceivedDataBlobsUsingSKMs(void *a1, const char *a2, ...)
{
  return _[a1 _decryptReceivedDataBlobsUsingSKMs];
}

id objc_msgSend__decryptionRetryIntervalForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decryptionRetryIntervalForError:");
}

id objc_msgSend__dedupBehaviorForNiceMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dedupBehaviorForNiceMessage:");
}

id objc_msgSend__defaultPeerSetPreferInfraWiFi_services_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultPeerSetPreferInfraWiFi:services:");
}

id objc_msgSend__deferToQueue_after_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deferToQueue:after:block:");
}

id objc_msgSend__deferredUpdateCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 _deferredUpdateCapabilities];
}

id objc_msgSend__delegate_DidEvictObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delegate_DidEvictObject:forKey:");
}

id objc_msgSend__delegate_didCacheObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delegate_didCacheObject:forKey:");
}

id objc_msgSend__delegate_shouldEvictObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delegate_shouldEvictObject:forKey:");
}

id objc_msgSend__delegate_shouldTTLCacheEvictExpiredItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delegate_shouldTTLCacheEvictExpiredItems");
}

id objc_msgSend__delegate_willReturnCachedObject_forKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delegate_willReturnCachedObject:forKey:completion:");
}

id objc_msgSend__deleteIdentityAtKeyIndex_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteIdentityAtKeyIndex:error:");
}

id objc_msgSend__dependentRegistrationPropertyForKey_serviceIdentifier_pushToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dependentRegistrationPropertyForKey:serviceIdentifier:pushToken:");
}

id objc_msgSend__dependentRegistrationsForDefaultPairedDevice_includingCurrentDevice_includingTinker_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dependentRegistrationsForDefaultPairedDevice:includingCurrentDevice:includingTinker:");
}

id objc_msgSend__dependentRegistrationsForDefaultPairedDevice_includingTinker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dependentRegistrationsForDefaultPairedDevice:includingTinker:");
}

id objc_msgSend__dequeueMessages(void *a1, const char *a2, ...)
{
  return _[a1 _dequeueMessages];
}

id objc_msgSend__dequeueMessagesTimerInterval(void *a1, const char *a2, ...)
{
  return _[a1 _dequeueMessagesTimerInterval];
}

id objc_msgSend__dequeueNextMessageFromOutgoingQueue(void *a1, const char *a2, ...)
{
  return _[a1 _dequeueNextMessageFromOutgoingQueue];
}

id objc_msgSend__dequeuePendingQueryIfPossible(void *a1, const char *a2, ...)
{
  return _[a1 _dequeuePendingQueryIfPossible];
}

id objc_msgSend__dequeuePendingRequestsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _dequeuePendingRequestsIfNecessary];
}

id objc_msgSend__deregisterDeviceCenterNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _deregisterDeviceCenterNotifications];
}

id objc_msgSend__destroyFairplayDeviceSession(void *a1, const char *a2, ...)
{
  return _[a1 _destroyFairplayDeviceSession];
}

id objc_msgSend__destroyFairplayHostSession(void *a1, const char *a2, ...)
{
  return _[a1 _destroyFairplayHostSession];
}

id objc_msgSend__deviceAbsintheIMEI(void *a1, const char *a2, ...)
{
  return _[a1 _deviceAbsintheIMEI];
}

id objc_msgSend__deviceAbsintheMEID(void *a1, const char *a2, ...)
{
  return _[a1 _deviceAbsintheMEID];
}

id objc_msgSend__deviceAbsintheSerialNumber(void *a1, const char *a2, ...)
{
  return _[a1 _deviceAbsintheSerialNumber];
}

id objc_msgSend__deviceAbsintheUDID(void *a1, const char *a2, ...)
{
  return _[a1 _deviceAbsintheUDID];
}

id objc_msgSend__deviceCanRegisterPresently(void *a1, const char *a2, ...)
{
  return _[a1 _deviceCanRegisterPresently];
}

id objc_msgSend__deviceIDForPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceIDForPeer:");
}

id objc_msgSend__deviceIdentifierKeychainID(void *a1, const char *a2, ...)
{
  return _[a1 _deviceIdentifierKeychainID];
}

id objc_msgSend__deviceWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceWithIdentifier:error:");
}

id objc_msgSend__dictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictionaryForKey:");
}

id objc_msgSend__disableAccountWithUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disableAccountWithUniqueID:");
}

id objc_msgSend__disableOTRForDefaultPairedPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disableOTRForDefaultPairedPeer:");
}

id objc_msgSend__disableOffGridModeViaStatusClient(void *a1, const char *a2, ...)
{
  return _[a1 _disableOffGridModeViaStatusClient];
}

id objc_msgSend__disablePrimaryAccountWithUniqueID_userAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disablePrimaryAccountWithUniqueID:userAction:");
}

id objc_msgSend__disableSecondaryRegistrationPercentage(void *a1, const char *a2, ...)
{
  return _[a1 _disableSecondaryRegistrationPercentage];
}

id objc_msgSend__disasterModeTokenForURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disasterModeTokenForURI:");
}

id objc_msgSend__discardMessage_forURIs_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discardMessage:forURIs:service:");
}

id objc_msgSend__dispatchDeferredPrekeyRequestForGroupID_previousParticipantsPushTokens_currentActiveParticipants_sessionID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_dispatchDeferredPrekeyRequestForGroupID:previousParticipantsPushTokens:currentActiveParticipants:sessionID:");
}

id objc_msgSend__dispatchDeferredPrekeyRequestForGroupID_previousParticipantsPushTokens_currentActiveParticipants_sessionID_waitingParticipantsTokens_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_dispatchDeferredPrekeyRequestForGroupID:previousParticipantsPushTokens:currentActiveParticipants:sessionID:w aitingParticipantsTokens:");
}

id objc_msgSend__dispatchIncomingAllocateResponse_isFromCache_connectReadyHandler_requestOptions_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchIncomingAllocateResponse:isFromCache:connectReadyHandler:requestOptions:");
}

id objc_msgSend__dispatchRenewPrekeyTimer(void *a1, const char *a2, ...)
{
  return _[a1 _dispatchRenewPrekeyTimer];
}

id objc_msgSend__doesNiceMessageContainValidCombination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doesNiceMessageContainValidCombination:");
}

id objc_msgSend__dropLocalCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dropLocalCache:");
}

id objc_msgSend__dropLocalCacheForGroupID_compeltion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dropLocalCacheForGroupID:compeltion:");
}

id objc_msgSend__dropQueuedBroadcastsForServices_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dropQueuedBroadcastsForServices:priority:");
}

id objc_msgSend__dumpLogs(void *a1, const char *a2, ...)
{
  return _[a1 _dumpLogs];
}

id objc_msgSend__dumpLogs_isDownstream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dumpLogs:isDownstream:");
}

id objc_msgSend__dumpServiceMap(void *a1, const char *a2, ...)
{
  return _[a1 _dumpServiceMap];
}

id objc_msgSend__emptyMessagesForURIs_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emptyMessagesForURIs:service:");
}

id objc_msgSend__enableAccountWithUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enableAccountWithUniqueID:");
}

id objc_msgSend__enableStrictSecureDecodingMode(void *a1, const char *a2, ...)
{
  return _[a1 _enableStrictSecureDecodingMode];
}

id objc_msgSend__encodeMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_encodeMap:");
}

id objc_msgSend__encryptDataWithOTR_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_encryptDataWithOTR:token:");
}

id objc_msgSend__encryptionController(void *a1, const char *a2, ...)
{
  return _[a1 _encryptionController];
}

id objc_msgSend__endSession(void *a1, const char *a2, ...)
{
  return _[a1 _endSession];
}

id objc_msgSend__endpointsForService_fromURI_toURI_ignoreExpiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointsForService:fromURI:toURI:ignoreExpiration:");
}

id objc_msgSend__endpointsForService_fromURI_toURI_ignoreExpiration_ignoreCache_hitCache_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointsForService:fromURI:toURI:ignoreExpiration:ignoreCache:hitCache:");
}

id objc_msgSend__enqueueBlock_identifier_withTimeout_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueBlock:identifier:withTimeout:forKey:");
}

id objc_msgSend__enqueueInvocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueInvocation:");
}

id objc_msgSend__enqueueInvocationWithPriority_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueInvocationWithPriority:priority:");
}

id objc_msgSend__enqueueInvocationWithSync_xpcMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueInvocationWithSync:xpcMessage:");
}

id objc_msgSend__ensureGroupStableKeyMaterialCacheForGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureGroupStableKeyMaterialCacheForGroup:");
}

id objc_msgSend__ensureIdentity_savedIndentity_protectionClass_didSaveIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureIdentity:savedIndentity:protectionClass:didSaveIdentity:");
}

id objc_msgSend__ensureProfileQueriesAreReadyForRegistratration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureProfileQueriesAreReadyForRegistratration:");
}

id objc_msgSend__entitledForActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entitledForActivity:");
}

id objc_msgSend__entitledForTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entitledForTopic:");
}

id objc_msgSend__enumeratePrimaryAccountsOfType_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumeratePrimaryAccountsOfType:block:");
}

id objc_msgSend__eraseNGMIdentityFromKeychain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eraseNGMIdentityFromKeychain:");
}

id objc_msgSend__errorCodeForRegistrationError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorCodeForRegistrationError:");
}

id objc_msgSend__errorForDeviceOffline(void *a1, const char *a2, ...)
{
  return _[a1 _errorForDeviceOffline];
}

id objc_msgSend__errorForMissingEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorForMissingEntitlement:");
}

id objc_msgSend__errorForStewieNotAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _errorForStewieNotAvailable];
}

id objc_msgSend__expirationTimeForRestrictedMessages(void *a1, const char *a2, ...)
{
  return _[a1 _expirationTimeForRestrictedMessages];
}

id objc_msgSend__expireTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expireTimer:");
}

id objc_msgSend__extractFieldBytesFromMetadata_ofSize_packetBuffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractFieldBytesFromMetadata:ofSize:packetBuffer:");
}

id objc_msgSend__failPromisesWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_failPromisesWithError:");
}

id objc_msgSend__failSavedMessageCleanly_withResponseCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_failSavedMessageCleanly:withResponseCode:");
}

id objc_msgSend__failSavedMessagesCleanly_withResponseCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_failSavedMessagesCleanly:withResponseCode:");
}

id objc_msgSend__failureReasonMessageFromSecondaryError_ECError_andLegacyError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_failureReasonMessageFromSecondaryError:ECError:andLegacyError:");
}

id objc_msgSend__fallbackTimeoutForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fallbackTimeoutForService:");
}

id objc_msgSend__fetchAccountEntitlements_listenerID_inContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAccountEntitlements:listenerID:inContext:");
}

id objc_msgSend__fetchAllLocalKnownGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAllLocalKnownGroups:");
}

id objc_msgSend__fetchCachedObjectForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchCachedObjectForKey:completion:");
}

id objc_msgSend__fetchCurrentKVS(void *a1, const char *a2, ...)
{
  return _[a1 _fetchCurrentKVS];
}

id objc_msgSend__fetchEmergencyContactsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchEmergencyContactsWithCompletion:");
}

id objc_msgSend__fetchExpiredEntriesFromKVS(void *a1, const char *a2, ...)
{
  return _[a1 _fetchExpiredEntriesFromKVS];
}

id objc_msgSend__fetchExpiryDatesIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _fetchExpiryDatesIfNecessary];
}

id objc_msgSend__fetchFamilyContactsWithPhoneNumbersOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchFamilyContactsWithPhoneNumbersOnly:");
}

id objc_msgSend__fetchKTDataSignatureForServiceTypes_publicIdentityData_keyStore_withCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchKTDataSignatureForServiceTypes:publicIdentityData:keyStore:withCompletion:");
}

id objc_msgSend__fetchPresenceCapabilityForServiceTypes_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPresenceCapabilityForServiceTypes:withCompletion:");
}

id objc_msgSend__fetchStewieCapabilityForServiceTypes_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchStewieCapabilityForServiceTypes:withCompletion:");
}

id objc_msgSend__fetchTokenForRegistrationInfo_failIfNotSilent_failureBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchTokenForRegistrationInfo:failIfNotSilent:failureBlock:");
}

id objc_msgSend__fetchVerificationInfoForService_forURIs_localURI_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchVerificationInfoForService:forURIs:localURI:withCompletion:");
}

id objc_msgSend__filterSelfAllocationsForSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filterSelfAllocationsForSessionID:");
}

id objc_msgSend__findAllocationForSessionID_requestIDStr_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findAllocationForSessionID:requestIDStr:");
}

id objc_msgSend__findAllocationListForSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findAllocationListForSessionID:");
}

id objc_msgSend__findSessionWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findSessionWithID:");
}

id objc_msgSend__firewallStore(void *a1, const char *a2, ...)
{
  return _[a1 _firewallStore];
}

id objc_msgSend__firstAccountInStore_withType_matchingCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstAccountInStore:withType:matchingCriteria:");
}

id objc_msgSend__flush(void *a1, const char *a2, ...)
{
  return _[a1 _flush];
}

id objc_msgSend__flushBroadcastQueuesForServices_existingServices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flushBroadcastQueuesForServices:existingServices:");
}

id objc_msgSend__flushTokensForRegisteredURIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flushTokensForRegisteredURIs:");
}

id objc_msgSend__forceAttachmentForMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceAttachmentForMessage:");
}

id objc_msgSend__forceDisableAccountWithUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceDisableAccountWithUniqueID:");
}

id objc_msgSend__forceDisablePrimaryAccountWithUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceDisablePrimaryAccountWithUniqueID:");
}

id objc_msgSend__forceVerificationWithIndex_ticket_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceVerificationWithIndex:ticket:completion:");
}

id objc_msgSend__forwardPacketBuffer_fromDeviceUniqueID_cbuuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forwardPacketBuffer:fromDeviceUniqueID:cbuuid:");
}

id objc_msgSend__forwardSendMessageToAccountWithSendParameters_service_threadContext_guid_dataProtectionClass_willSendBlock_progressBlock_completionBlock_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_forwardSendMessageToAccountWithSendParameters:service:threadContext:guid:dataProtectionClass:willSendBlock:p rogressBlock:completionBlock:");
}

id objc_msgSend__fromIDFromDevice_withCBUUID_uniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fromIDFromDevice:withCBUUID:uniqueID:");
}

id objc_msgSend__fulfillOrFailPromiseSeal_basedOnIndex_KTResult_ktLoggableDatas_optedIn_error_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fulfillOrFailPromiseSeal:basedOnIndex:KTResult:ktLoggableDatas:optedIn:error:");
}

id objc_msgSend__fulfillPromisesWithPhoneNumber_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fulfillPromisesWithPhoneNumber:token:");
}

id objc_msgSend__fullAccountIdentityWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fullAccountIdentityWithError:");
}

id objc_msgSend__fullClusterFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fullClusterFromData:error:");
}

id objc_msgSend__fullClusterWithAccountIdentityClusterWithAccountIdentity_fullAdminServiceIdentities_fullSigningServiceIdentities_error_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_fullClusterWithAccountIdentityClusterWithAccountIdentity:fullAdminServiceIdentities:fullSigningServiceIdentities:error:");
}

id objc_msgSend__fullServiceIdentityAdminWithAccountIdentity_type_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fullServiceIdentityAdminWithAccountIdentity:type:error:");
}

id objc_msgSend__fullServiceIdentitySigningWithAccountIdentity_type_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fullServiceIdentitySigningWithAccountIdentity:type:error:");
}

id objc_msgSend__gameCenterShouldSigninOnModify(void *a1, const char *a2, ...)
{
  return _[a1 _gameCenterShouldSigninOnModify];
}

id objc_msgSend__generateEncryptedAndSignedIDSContextBlobWithClientContextBlob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateEncryptedAndSignedIDSContextBlobWithClientContextBlob:");
}

id objc_msgSend__generateEncryptedAndSignedIDSContextBlobWithClientContextBlob_timeStamp_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateEncryptedAndSignedIDSContextBlobWithClientContextBlob:timeStamp:");
}

id objc_msgSend__generateIdentityWithExistingIdentity_identifier_dataProtectionClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateIdentityWithExistingIdentity:identifier:dataProtectionClass:");
}

id objc_msgSend__generateMKMBlobForQRFromMessage_account_destination_fromURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateMKMBlobForQRFromMessage:account:destination:fromURI:");
}

id objc_msgSend__generateUnregisteredIdentityWithExistingLegacyIdentity_existingNGMIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateUnregisteredIdentityWithExistingLegacyIdentity:existingNGMIdentity:");
}

id objc_msgSend__generationRetryDelay(void *a1, const char *a2, ...)
{
  return _[a1 _generationRetryDelay];
}

id objc_msgSend__geoRegion(void *a1, const char *a2, ...)
{
  return _[a1 _geoRegion];
}

id objc_msgSend__getAndUpdateParticipantsWaitingForKeyMaterialsForGroup_waitingParticipants_addedParticipantsDiff_currentParticipantsPushTokens_participantType_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_getAndUpdateParticipantsWaitingForKeyMaterialsForGroup:waitingParticipants:addedParticipantsDiff:currentPart icipantsPushTokens:participantType:");
}

id objc_msgSend__getCombinedSoftwareID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCombinedSoftwareID:");
}

id objc_msgSend__getCurrentAccountClusterWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCurrentAccountClusterWithCompletion:");
}

id objc_msgSend__getCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCurrentState:");
}

id objc_msgSend__getErrorCodeFromAllocationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getErrorCodeFromAllocationStatus:");
}

id objc_msgSend__getExperimentGroupThresholdForCellularSlicing(void *a1, const char *a2, ...)
{
  return _[a1 _getExperimentGroupThresholdForCellularSlicing];
}

id objc_msgSend__getGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getGroupID:");
}

id objc_msgSend__getHighestPriorityMechanism(void *a1, const char *a2, ...)
{
  return _[a1 _getHighestPriorityMechanism];
}

id objc_msgSend__getIDSAWDLoggingInstance(void *a1, const char *a2, ...)
{
  return _[a1 _getIDSAWDLoggingInstance];
}

id objc_msgSend__getIDSLinkTypeFromWRMLinkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getIDSLinkTypeFromWRMLinkType:");
}

id objc_msgSend__getKeyFromType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getKeyFromType:");
}

id objc_msgSend__getKeysForServiceTypeName_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getKeysForServiceTypeName:completion:");
}

id objc_msgSend__getMessageCompletionCurrentEntries_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getMessageCompletionCurrentEntries:withCompletion:");
}

id objc_msgSend__getNewLinkOptionsForActiveParticipantInfoRequest(void *a1, const char *a2, ...)
{
  return _[a1 _getNewLinkOptionsForActiveParticipantInfoRequest];
}

id objc_msgSend__getNextExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 _getNextExpirationDate];
}

id objc_msgSend__getPublicMessageProtectionDataForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPublicMessageProtectionDataForIdentity:");
}

id objc_msgSend__getPushTokenFromParticipantID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPushTokenFromParticipantID:");
}

id objc_msgSend__getPushTokenFromParticipantID_participantID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPushTokenFromParticipantID:participantID:");
}

id objc_msgSend__getPushTokenFromParticipantIDNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPushTokenFromParticipantIDNumber:");
}

id objc_msgSend__getPushTokensFromParticipantIDArray_useNullPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPushTokensFromParticipantIDArray:useNullPlaceholder:");
}

id objc_msgSend__getQuickRelayIPPreference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getQuickRelayIPPreference:");
}

id objc_msgSend__getRandomPortForQUIC(void *a1, const char *a2, ...)
{
  return _[a1 _getRandomPortForQUIC];
}

id objc_msgSend__getRequestReason(void *a1, const char *a2, ...)
{
  return _[a1 _getRequestReason];
}

id objc_msgSend__getResponse_relaySessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getResponse:relaySessionID:");
}

id objc_msgSend__getResponseFromQRGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getResponseFromQRGroupID:");
}

id objc_msgSend__getSelfAllocationFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSelfAllocationFromCache:");
}

id objc_msgSend__getSetofStandardParticipantsForGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSetofStandardParticipantsForGroup:");
}

id objc_msgSend__getTypeFromDataKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getTypeFromDataKey:");
}

id objc_msgSend__getURIForRecipientFromResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getURIForRecipientFromResponse:");
}

id objc_msgSend__getURIFromParticipantIDNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getURIFromParticipantIDNumber:");
}

id objc_msgSend__getWRMLinkTypeFromIDSLinkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getWRMLinkTypeFromIDSLinkType:");
}

id objc_msgSend__groupFromPublicDataRepresentation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groupFromPublicDataRepresentation:completion:");
}

id objc_msgSend__groupFromServerResponse_context_groupID_error_resultCode_resultDictionary_allEntries_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_groupFromServerResponse:context:groupID:error:resultCode:resultDictionary:allEntries:completion:");
}

id objc_msgSend__groupWithDeviceIdentity_parent_groupInfo_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_groupWithDeviceIdentity:parent:groupInfo:error:");
}

id objc_msgSend__handleAccessoryMessageForID_msg_service_fromID_fromIdentity_completionBlock_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAccessoryMessageForID:msg:service:fromID:fromIdentity:completionBlock:");
}

id objc_msgSend__handleAction_forAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAction:forAccounts:");
}

id objc_msgSend__handleAndConvertFeatureToggleError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAndConvertFeatureToggleError:");
}

id objc_msgSend__handleBecomingEmpty(void *a1, const char *a2, ...)
{
  return _[a1 _handleBecomingEmpty];
}

id objc_msgSend__handleBecomingEmptyForDataProtectionClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBecomingEmptyForDataProtectionClass:");
}

id objc_msgSend__handleBecomingEmptyOfCloudMessages(void *a1, const char *a2, ...)
{
  return _[a1 _handleBecomingEmptyOfCloudMessages];
}

id objc_msgSend__handleCBUUIDDidConnect_isDefaultPairedDevice_isAlwaysConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCBUUIDDidConnect:isDefaultPairedDevice:isAlwaysConnected:");
}

id objc_msgSend__handleCBUUIDFailToConnect_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCBUUIDFailToConnect:withReason:");
}

id objc_msgSend__handleDeliveryReceiptForSenderKeyCheck_remoteURI_remotePushToken_localURI_originalGUID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeliveryReceiptForSenderKeyCheck:remoteURI:remotePushToken:localURI:originalGUID:");
}

id objc_msgSend__handleDiscoveredDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDiscoveredDevice:");
}

id objc_msgSend__handleFairplayAuthenticationFailure(void *a1, const char *a2, ...)
{
  return _[a1 _handleFairplayAuthenticationFailure];
}

id objc_msgSend__handleForceRepairRegistrationActionForAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleForceRepairRegistrationActionForAccounts:");
}

id objc_msgSend__handleIncomingAllocateResponse_isFromCache_requestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleIncomingAllocateResponse:isFromCache:requestOptions:");
}

id objc_msgSend__handleIncomingIDSMessageEvent_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleIncomingIDSMessageEvent:options:");
}

id objc_msgSend__handleIncomingNiceAttachmentMessage_forTopic_fromURI_certifiedDeliveryContext_completionBlock_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_handleIncomingNiceAttachmentMessage:forTopic:fromURI:certifiedDeliveryContext:completionBlock:");
}

id objc_msgSend__handleIncomingPushNiceMessage_forTopic_fromURI_messageContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleIncomingPushNiceMessage:forTopic:fromURI:messageContext:");
}

id objc_msgSend__handleKTCDPStatusUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleKTCDPStatusUpdate:");
}

id objc_msgSend__handleKTOptInStatusUpdateError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleKTOptInStatusUpdateError:");
}

id objc_msgSend__handleKTOptOutActionForAllAccounts(void *a1, const char *a2, ...)
{
  return _[a1 _handleKTOptOutActionForAllAccounts];
}

id objc_msgSend__handleKVSUpdateResponseForTrustedDevices_withSuccessfulKVSSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleKVSUpdateResponseForTrustedDevices:withSuccessfulKVSSync:");
}

id objc_msgSend__handleLostDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLostDevice:");
}

id objc_msgSend__handleMessagesForURIs_originalURIs_service_fromID_fromCoalesceQueue_withQueryCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMessagesForURIs:originalURIs:service:fromID:fromCoalesceQueue:withQueryCompletion:");
}

id objc_msgSend__handlePendingFetchBlocksForIdentifier_topic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePendingFetchBlocksForIdentifier:topic:");
}

id objc_msgSend__handlePseudonymProvisionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePseudonymProvisionError:");
}

id objc_msgSend__handleReIdentifyActionForAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReIdentifyActionForAccounts:");
}

id objc_msgSend__handleReProvisionActionForAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReProvisionActionForAccounts:");
}

id objc_msgSend__handleReRegisterActionForAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReRegisterActionForAccounts:");
}

id objc_msgSend__handleSpaceBecomingAvailableForUrgentLocalMessagesWithDataProtectionClasses_withMessageTypes_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_handleSpaceBecomingAvailableForUrgentLocalMessagesWithDataProtectionClasses:withMessageTypes:");
}

id objc_msgSend__handleTransparencySignatureResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTransparencySignatureResponse:error:");
}

id objc_msgSend__handleTransparencySignatureResponseForRegistration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTransparencySignatureResponseForRegistration:error:");
}

id objc_msgSend__handleUpdate_forActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdate:forActivity:");
}

id objc_msgSend__handleValidateCredentialsActionForAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleValidateCredentialsActionForAccounts:");
}

id objc_msgSend__hasActiveAppleIDBasedAccountOnService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasActiveAppleIDBasedAccountOnService:");
}

id objc_msgSend__hasAllEncryptionKeys(void *a1, const char *a2, ...)
{
  return _[a1 _hasAllEncryptionKeys];
}

id objc_msgSend__hasBudgetForForcedGDR(void *a1, const char *a2, ...)
{
  return _[a1 _hasBudgetForForcedGDR];
}

id objc_msgSend__hasCurrentAuthenticationsOrRegistrations(void *a1, const char *a2, ...)
{
  return _[a1 _hasCurrentAuthenticationsOrRegistrations];
}

id objc_msgSend__hasGlobalLinkConnectingOrConnected(void *a1, const char *a2, ...)
{
  return _[a1 _hasGlobalLinkConnectingOrConnected];
}

id objc_msgSend__hasNonUrgentInternetSendingBudget(void *a1, const char *a2, ...)
{
  return _[a1 _hasNonUrgentInternetSendingBudget];
}

id objc_msgSend__hasOngoingAuthentications(void *a1, const char *a2, ...)
{
  return _[a1 _hasOngoingAuthentications];
}

id objc_msgSend__hasReachedMaxNumberOfRetries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasReachedMaxNumberOfRetries:");
}

id objc_msgSend__hasRegistration_inQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasRegistration:inQueue:");
}

id objc_msgSend__hasSessionInfoRequiredKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasSessionInfoRequiredKeys:");
}

id objc_msgSend__hasThresholdReachedForSMSTimeoutForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasThresholdReachedForSMSTimeoutForIdentifier:");
}

id objc_msgSend__heartBeat(void *a1, const char *a2, ...)
{
  return _[a1 _heartBeat];
}

id objc_msgSend__identifierForValidator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForValidator:");
}

id objc_msgSend__identityDataErrorPairForDataProtectionClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identityDataErrorPairForDataProtectionClass:");
}

id objc_msgSend__identityRegenerationDelay(void *a1, const char *a2, ...)
{
  return _[a1 _identityRegenerationDelay];
}

id objc_msgSend__ignoreIncomingPushes(void *a1, const char *a2, ...)
{
  return _[a1 _ignoreIncomingPushes];
}

id objc_msgSend__im_normalizedURIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_im_normalizedURIString");
}

id objc_msgSend__inUseProfileIDs(void *a1, const char *a2, ...)
{
  return _[a1 _inUseProfileIDs];
}

id objc_msgSend__inUseUsernames(void *a1, const char *a2, ...)
{
  return _[a1 _inUseUsernames];
}

id objc_msgSend__incomingMessageIdentifierForMessageUUID_messagePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incomingMessageIdentifierForMessageUUID:messagePayload:");
}

id objc_msgSend__incomingMessageStorageDictionaryForPayload_topic_deviceID_btUUID_command_messageUUID_sequenceNumber_wantsAppAck_expectsPeerResponse_peerResponseIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_incomingMessageStorageDictionaryForPayload:topic:deviceID:btUUID:command:messageUUID:sequenceNumber:wantsApp Ack:expectsPeerResponse:peerResponseIdentifier:");
}

id objc_msgSend__incrementForcedGDRCount(void *a1, const char *a2, ...)
{
  return _[a1 _incrementForcedGDRCount];
}

id objc_msgSend__incrementMessagesFromStorageForTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incrementMessagesFromStorageForTopic:");
}

id objc_msgSend__inflightMessageCount(void *a1, const char *a2, ...)
{
  return _[a1 _inflightMessageCount];
}

id objc_msgSend__inflightMessageCountForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inflightMessageCountForClass:");
}

id objc_msgSend__inflightMessageCountForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inflightMessageCountForType:");
}

id objc_msgSend__initWithLoginID_service_uniqueID_accountType_accountConfig_primaryAccount_isAdHocAccount_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithLoginID:service:uniqueID:accountType:accountConfig:primaryAccount:isAdHocAccount:");
}