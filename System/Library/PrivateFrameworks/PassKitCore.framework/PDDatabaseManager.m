@interface PDDatabaseManager
+ (BOOL)databaseExistsAtURL:(id)a3;
- (BOOL)_addHumphreysTableMigration:(id)a3 context:(id)a4;
- (BOOL)_addKeithTableMigration:(id)a3 context:(id)a4;
- (BOOL)_migrateAmountDecimalDigitsToVersion:(int64_t)a3 inDatabase:(id)a4;
- (BOOL)_migrateFrom10000To10001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10001To10002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10002To10003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10003To10004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10004To10005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10005To10006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10006To10007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10007To10008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10008To10009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10009To10010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10010To10011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10011To10012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10012To10013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10013To10014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10014To10015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10015To10016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10016To10200:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10200To10300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom10300To11000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11000To11001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11001To11002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11002To11003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11003To11004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11004To11005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11005To11006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11006To11007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11007To11008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11008To11009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11009To11010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11010To11011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11011To11012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11012To11013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11013To11014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11014To11015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11015To11016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11016To11017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11017To11018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11018To11019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11019To11020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11020To11021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11021To11022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11022To11100:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11100To11200:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11200To11201:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11201To11300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11300To11301:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11301To11302:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11302To11303:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom11303To12000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12000To12001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12001To12002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12002To12003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12003To12004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12004To12005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12005To12006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12006To12007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12007To12008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12008To12009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12009To12010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12010To12011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12011To12012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12012To12013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12013To12014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12014To12015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12015To12016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12016To12017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12017To12018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12018To12019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12019To12020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12020To12021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12021To12022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12022To12023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12023To12024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12024To12025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12025To12026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12026To12027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12027To12028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12028To12029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12029To12030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12030To12031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12031To12032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12032To12033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12033To12034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12034To12035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12035To12036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12036To12037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12037To12038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12038To12039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12039To12040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12040To12041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12041To12042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12042To12043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12043To12044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12044To12045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12045To12046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12046To12047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12047To12048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12048To12049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12049To12050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12050To12051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12051To12052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12052To12053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12053To12054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12054To12055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12055To12056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12056To12057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12057To12058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12058To12059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12059To12060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12060To12061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12061To12062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12062To12063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12063To12064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12064To12065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12065To12066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12066To12067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12067To12068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12068To12069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12069To12070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12070To12071:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12071To12072:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12072To12073:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12073To12074:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12074To12075:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12075To12076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12076To12077:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12077To12078:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12078To12079:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12079To12080:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12080To12081:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12081To12082:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12083To12084:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12084To12085:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12085To12086:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12086To12087:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12087To12088:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12088To12089:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12089To12090:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12090To12091:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12091To12092:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12092To12093:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12093To12094:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12094To12095:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12095To12096:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12097To12098:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom12XXXTo13000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13000To13001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13001To13002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13002To13003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13003To13004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13005To13006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13006To13007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13007To13008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13008To13009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13009To13010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13010To13011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13014To13015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13015To13016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13016To13017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13017To13018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13018To13019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13019To13020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13020To13021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13021To13022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13022To13023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13023To13024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13024To13025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13025To13100:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13100To13101:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13101To13102:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13102To13103:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13103To13104:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13104To13105:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13105To13106:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13106To13107:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13107To13108:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13108To13109:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13109To13110:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13110To13111:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13111To13112:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13112To13113:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13113To13114:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13114To13115:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13115To13116:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13116To13117:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13117To13118:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13118To13119:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13119To13120:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13120To13400:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13400To13401:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13401To13402:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13402To13403:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13403To13404:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13404To13405:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13405To13406:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13406To13500:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13500To13501:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom13501To14000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14000To14001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14001To14002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14002To14003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14003To14004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14004To14005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14005To14006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14006To14007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14007To14008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14008To14009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14009To14010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14010To14011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14011To14012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14012To14013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14013To14014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14014To14015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14015To14016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14016To14017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14017To14018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14018To14019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14019To14020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14020To14021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14021To14022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14022To14023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14023To14024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14024To14025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14025To14026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14026To14027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14027To14028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14028To14029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14029To14030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14030To14031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14031To14032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14032To14033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14033To14034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14034To14035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14035To14036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14036To14037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14037To14038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14038To14039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14039To14040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14040To14041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14041To14042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14042To14043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14043To14044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14044To14045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14045To14046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14046To14047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14047To14048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14048To14049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14049To14050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14050To14051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14051To14052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14052To14053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14053To14054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14054To14055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14055To14056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14056To14057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14057To14058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14058To14059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14059To14060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14060To14061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14061To14062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14062To14063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14063To14064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14064To14065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14065To14066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14066To14067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14067To14068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14068To14069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14069To14070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14070To14400:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14400To14401:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14401To14402:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14402To14403:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14403To14404:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14404To14405:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14405To14406:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14406To14407:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14407To14408:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14408To14409:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14409To14410:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14410To14411:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14411To14412:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14412To14413:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14413To14414:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14414To14415:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14415To14416:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14416To14417:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14417To14418:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14418To14419:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14419To14420:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14420To14421:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14421To14422:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14422To14423:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14423To14424:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14424To14425:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14425To14426:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14426To14427:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14427To14428:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14428To14429:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14429To14430:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14430To14431:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14431To14432:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14432To14433:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14433To14434:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14434To14435:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14435To14436:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14436To14437:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14437To14438:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14438To14439:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14439To14440:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14440To14441:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14441To14442:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14442To14443:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14443To14444:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14444To14445:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14445To14446:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14446To14447:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14447To14448:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14448To14449:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14449To14450:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14450To14451:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14451To14452:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14452To14453:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14453To14454:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14454To14455:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14455To14456:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14456To14457:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14457To14458:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14458To14459:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14459To14460:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14460To14461:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14461To14462:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14462To14463:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14463To14464:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14464To14465:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14465To14466:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14466To14467:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14467To14468:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14468To14469:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14469To14470:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14470To14471:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14471To14472:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14472To14473:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14473To14474:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14474To14475:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14475To14476:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom14476To15000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15000To15001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15001To15002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15002To15003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15003To15004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15004To15005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15005To15006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15006To15007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15007To15008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15008To15009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15009To15010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15010To15011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15011To15012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15012To15013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15013To15014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15014To15015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15015To15016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15016To15017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15017To15018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15018To15019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15019To15020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15020To15021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15021To15022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15022To15023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15023To15024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15024To15025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15025To15026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15026To15027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15027To15028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15028To15029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15029To15030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15030To15031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15031To15032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15032To15033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15033To15034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15034To15035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15035To15036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15036To15037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15037To15038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15038To15039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15039To15040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15040To15041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15041To15042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15042To15043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15043To15044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15044To15045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15045To15046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15046To15047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15047To15048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15048To15049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15049To15050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15050To15051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15051To15052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15052To15053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15053To15054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15054To15055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15055To15056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15056To15057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15057To15058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15058To15059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15059To15060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15060To15061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15061To15062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15062To15063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15063To15064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15064To15065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15065To15066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15066To15067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15067To15068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15068To15069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15069To15070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15070To15071:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15071To15072:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15072To15073:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15073To15074:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15074To15075:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15075To15076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15076To15077:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15077To15078:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15078To15079:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15079To15080:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15080To15081:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15081To15082:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15082To15083:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15083To15084:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom15084To16000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16000To16001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16001To16002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16002To16003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16003To16004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16004To16005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16005To16006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16006To16007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16007To16008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16008To16009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16009To16010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16010To16011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16011To16012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16012To16013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16013To16014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16014To16015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16015To16016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16016To16017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16017To16018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16018To16019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16019To16020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16020To16021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16021To16022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16022To16023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16023To16024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16024To16025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16025To16026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16026To16027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16027To16028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16028To16029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16029To16030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16030To16031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16031To16032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16032To16033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16033To16034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16034To16035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16035To16036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16036To16037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16037To16038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16038To16039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16039To16040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16040To16041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16041To16042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16042To16043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16043To16044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16044To16045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16045To16046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16046To16047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16047To16048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16048To16049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16049To16050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16050To16051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16051To16052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16052To16053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16053To16054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16054To16055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16055To16056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16056To16057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16057To16058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16058To16059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16059To16060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16060To16061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16061To16062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16062To16063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16063To16064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16064To16065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16065To16066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16066To16067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16067To16068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16068To16069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16069To16070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16070To16071:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16071To16072:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16072To16073:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16073To16074:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16074To16075:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16075To16076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16076To16077:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16077To16078:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16078To16079:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16079To16080:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16080To16081:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16081To16082:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16082To16083:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16083To16084:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16084To16085:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16085To16086:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16086To16087:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16087To16088:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16088To16089:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16089To16090:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16090To16091:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16091To16092:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16092To16093:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16093To16094:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16094To16095:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16095To16096:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16096To16097:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16097To16098:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16098To16099:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16099To16100:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16100To16101:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16101To16102:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16102To16103:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16103To16104:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16104To16105:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16105To16106:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16106To16107:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16107To16108:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16108To16109:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16109To16110:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16110To16111:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16111To16112:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16112To16113:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16113To16114:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16114To16115:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16115To16116:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16116To16117:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16117To16118:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom16118To17000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17000To17001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17001To17002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17002To17003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17003To17004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17004To17005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17005To17006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17006To17007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17007To17008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17008To17009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17009To17010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17010To17011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17011To17012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17012To17013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17013To17014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17014To17015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17015To17016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17016To17017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17017To17018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17018To17019:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17019To17020:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17020To17021:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17021To17022:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17022To17023:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17023To17024:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17024To17025:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17025To17026:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17026To17027:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17027To17028:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17028To17029:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17029To17030:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17030To17031:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17031To17032:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17032To17033:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17033To17034:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17034To17035:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17035To17036:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17036To17037:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17037To17038:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17038To17039:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17039To17040:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17040To17041:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17041To17042:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17042To17043:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17043To17044:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17044To17045:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17045To17046:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17046To17047:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17047To17048:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17048To17049:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17049To17050:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17050To17051:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17051To17052:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17052To17053:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17053To17054:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17054To17055:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17055To17056:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17056To17057:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17057To17058:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17058To17059:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17059To17060:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17060To17061:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17061To17062:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17062To17063:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17063To17064:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17064To17065:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17065To17066:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17066To17067:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17067To17068:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17068To17069:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom17069To17070:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8075To8076:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8076To8300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8300To8301:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8301To8302:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8302To8303:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8303To8304:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8304To8305:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom8305To9000:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9000To9001:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9001To9002:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9002To9003:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9003To9004:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9004To9005:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9005To9006:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9006To9007:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9007To9008:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9008To9009:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9009To9010:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9010To9011:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9011To9012:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9012To9013:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9013To9014:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9014To9015:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9015To9016:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9016To9017:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9017To9018:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9018To9200:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9200To9300:(id)a3 context:(id)a4;
- (BOOL)_migrateFrom9300To10000:(id)a3 context:(id)a4;
- (BOOL)_migrateNSNotFoundTo4DecimalDigits:(id)a3;
- (BOOL)_migrateTableFrom2To4DecimalDigitsPrecision:(id)a3;
- (BOOL)_migrateWhitneyFrom1To2:(id)a3 context:(id)a4;
- (BOOL)_migrateWhitneyFrom2To3:(id)a3 context:(id)a4;
- (BOOL)_migrateWhitneyFrom3To4:(id)a3 context:(id)a4;
- (BOOL)_preparePaymentTransactionAmountTableForOperations:(id)a3;
- (BOOL)_tranansaction_migrateLegacyCarKeySharesInDatabase:(id)a3;
- (BOOL)_updateCameExclusivelyFromCloudStore:(unint64_t)a3;
- (BOOL)accountEventExistsWithIdentifier:(id)a3;
- (BOOL)activeDiscoveryItemRequiringBadgeExistsForRelevantDate:(id)a3;
- (BOOL)activeExternalPassSharesExist;
- (BOOL)addDataCollectedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4;
- (BOOL)addProcessedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4;
- (BOOL)addSharingInvitation:(id)a3;
- (BOOL)canPerformAction:(id)a3 forPassWithUniqueIdentifier:(id)a4;
- (BOOL)containerDatabaseExistsForContainerDatabase:(id)a3;
- (BOOL)deleteInvitationWithIdentifier:(id)a3;
- (BOOL)deletePassCredentialShareForIdentifier:(id)a3;
- (BOOL)deletePendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4;
- (BOOL)deleteSharingEndpoint:(id)a3;
- (BOOL)deleteSharingEndpointForTransportIdentifier:(id)a3;
- (BOOL)didFinishInitialSyncForCloudStore:(id)a3 containerDatabase:(id)a4;
- (BOOL)externalPassSharesExistForPassUniqueIdentifier:(id)a3;
- (BOOL)getLastPushDate:(id *)a3 lastUpdateDate:(id *)a4 frequencyScore:(double *)a5 forPassTypeID:(id)a6;
- (BOOL)getPassTypeID:(id *)a3 teamID:(id *)a4 associatedPassTypeIdentifiers:(id *)a5 associatedApplicationIdentifiers:(id *)a6 forUniqueID:(id)a7;
- (BOOL)getRegistrationStatus:(unint64_t *)a3 date:(id *)a4 forSerialNumber:(id)a5 webService:(id)a6;
- (BOOL)getWebService:(id *)a3 updateContext:(id *)a4 forPassWithUniqueID:(id)a5;
- (BOOL)hasAccountServicingEventsWithStatus:(unint64_t)a3;
- (BOOL)hasActiveBarcodePasses;
- (BOOL)hasActiveContactlessSecureElementPasses;
- (BOOL)hasActiveSecureElementPasses;
- (BOOL)hasAnyAccount;
- (BOOL)hasAnyAccountWithType:(unint64_t)a3;
- (BOOL)hasAnyMessagesForPassWithUniqueIdentifier:(id)a3;
- (BOOL)hasAnyTransactions;
- (BOOL)hasAnyTransactionsForTransactionSourceIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsOfType:(int64_t)a3;
- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4;
- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4;
- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3;
- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4;
- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (BOOL)hasBarcodeBackgroundFetchRecordForPassUniqueIdentifier:(id)a3 nextBackgroundFetchDate:(id *)a4;
- (BOOL)hasCandidatePasses;
- (BOOL)hasFutureActionableIndexerItems;
- (BOOL)hasMatchingCloudStoreRecord:(id)a3 inCloudStoreZone:(id)a4;
- (BOOL)hasMultipleRegionsOfType:(unint64_t)a3 localeIdentifier:(id)a4;
- (BOOL)hasPassesInExpiredSection;
- (BOOL)hasPassesWithPayloadState:(unint64_t)a3;
- (BOOL)hasPaymentTransactionForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4;
- (BOOL)hasPeerPaymentAccount;
- (BOOL)hasPendingProvisioningsOfTypes:(id)a3;
- (BOOL)hasPushEnabledPassesForWebService:(id)a3;
- (BOOL)hasRegionsMissingLocalizedContentForLocaleIdentifier:(id)a3;
- (BOOL)hasSecureElementPassesOfType:(int64_t)a3;
- (BOOL)hasSecureElementPassesWithFeatureIdentifier:(unint64_t)a3;
- (BOOL)hasShareablePassEntitlementsForPassUniqueIdentifier:(id)a3;
- (BOOL)hasSharesForPassUniqueIdentifier:(id)a3;
- (BOOL)hasSharingMessage:(id)a3 transportIdentifier:(id)a4;
- (BOOL)hasTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (BOOL)hasTransactionWithTransactionIdentifier:(id)a3;
- (BOOL)hasTransactionsMissingWorldRegionEligibleForProcessing;
- (BOOL)insertBarcodeCredentials:(id)a3 forDPANIdentifier:(id)a4;
- (BOOL)insertOrUpdateAccountEvent:(id)a3;
- (BOOL)insertOrUpdateEvaluatedPolicyDomainState:(id)a3 forDPANIdentifier:(id)a4;
- (BOOL)insertPass:(id)a3 withDaemonData:(id)a4 source:(int64_t)a5;
- (BOOL)insertSharingEndpoint:(id)a3;
- (BOOL)isAuxiliaryRegistrationRequirementRegistered:(id)a3 pass:(id)a4;
- (BOOL)markAuthenticationCompleteforTransactionIdentifier:(id)a3;
- (BOOL)migratePalisadesFrom1To2:(id)a3 context:(id)a4;
- (BOOL)notificationServiceIsEnabledForAnyPasses:(id)a3;
- (BOOL)passExistsForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 paymentApplicationStates:(id)a5;
- (BOOL)passExistsForTransitNetworks:(id)a3 isTransitCard:(unint64_t)a4 expired:(unint64_t)a5;
- (BOOL)passExistsWithPassType:(unint64_t)a3;
- (BOOL)passExistsWithPassTypeID:(id)a3 serialNumber:(id)a4;
- (BOOL)passExistsWithPassTypeIdentifierHash:(id)a3;
- (BOOL)passExistsWithPaymentType:(unint64_t)a3;
- (BOOL)passExistsWithUniqueID:(id)a3;
- (BOOL)peerPaymentPassShouldNotBeAcceptedForAccount:(id)a3;
- (BOOL)removeAllBarcodeCredentialValuesForDPANIdentifier:(id)a3;
- (BOOL)removeAllBarcodeCredentialsForDPANIdentifier:(id)a3;
- (BOOL)resetTransactionAuthenticationForTransactionIdentifier:(id)a3;
- (BOOL)setBalanceReminder:(id)a3 forBalanceIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5;
- (BOOL)setCommutePlanReminder:(id)a3 forCommutePlanIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5;
- (BOOL)setNeedsSyncWithFinanceForAllTransactions;
- (BOOL)settingEnabled:(unint64_t)a3 forPass:(id)a4;
- (BOOL)settingEnabled:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4;
- (BOOL)shouldIgnoreFieldWithProperties:(id)a3;
- (BOOL)shouldSyncTransactionsToCloudStore;
- (BOOL)transactionSourceExistsWithIdentifier:(id)a3;
- (BOOL)uniqueIDIsRevoked:(id)a3;
- (BOOL)updateAppletSubcredentials:(id)a3;
- (BOOL)updateAuxiliaryRegistrationRequirement:(id)a3 pass:(id)a4 isRegistered:(BOOL)a5;
- (BOOL)updateAuxiliaryRegistrationRequirementsForPass:(id)a3 isRegistered:(BOOL)a4;
- (BOOL)updateDisplayTimestamp:(id)a3 forBarcodeIdentifier:(id)a4;
- (BOOL)updateIndexerItemWithIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5;
- (BOOL)updateNextBarcodeBackgroundFetchDate:(id)a3 withRetryLevel:(int64_t)a4 forPassUniqueIdentifier:(id)a5;
- (BOOL)updatePass:(id)a3 withDaemonData:(id)a4 oldPass:(id *)a5 fromSource:(int64_t)a6;
- (BOOL)updatePaymentPINData:(id)a3 forTransactionIdentifier:(id)a4;
- (BOOL)updateTransactionSignatureData:(id)a3 forTransactionIdentifier:(id)a4;
- (BOOL)updateUserConfirmationData:(id)a3 forTransactionIdentifier:(id)a4;
- (BOOL)verifyIntegrity;
- (PDCloudStoreNotificationCoordinator)cloudStoreCoordinator;
- (PDDatabaseManager)init;
- (PDDatabaseManager)initWithURL:(id)a3;
- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4;
- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4 report:(id *)a5;
- (PDDatabaseManagerDelegate)delegate;
- (PDDatabaseManagerNotificationServicesDelegate)notificationServicesDelegate;
- (PDDatabaseManagerPaymentServicesDelegate)paymentServicesDelegate;
- (PDDatabaseManagerWebServicesDelegate)webServicesDelegate;
- (PDObjectSettingsManager)objectSettingsManager;
- (PKSecureElement)secureElement;
- (id)_activeSecureElementPassPredicate;
- (id)_candidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4;
- (id)_databaseNotificationService:(id)a3;
- (id)_databaseWebService:(id)a3;
- (id)_datedPassPredicate;
- (id)_dbPaymentApplicationWithDPANIdentifier:(id)a3;
- (id)_deviceIdentifierForExistingServiceURL:(id)a3 registrationURL:(id)a4;
- (id)_firstGroupMatchingGroup:(id)a3 withRelevantDates:(id)a4;
- (id)_firstGroupMatchingPredicate:(id)a3;
- (id)_firstGroupMatchingProfile:(id)a3;
- (id)_groupAtOrAfterIndex:(unint64_t)a3 bestMatchingUniqueIDs:(id)a4;
- (id)_groupWithPersistentID:(id)a3;
- (id)_insertContainerDatabaseForContainerDatabase:(id)a3;
- (id)_insertOrUpdatePaymentTransaction:(id)a3 transactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9;
- (id)_locatedCandidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4;
- (id)_locatedPredicate;
- (id)_messageServiceForPass:(id)a3;
- (id)_notificationServiceForPushTopic:(id)a3 serviceType:(unint64_t)a4 serviceURL:(id)a5 registrationURL:(id)a6;
- (id)_passTypeForPass:(id)a3;
- (id)_passWithApplicationIdentifier:(id)a3 secureElementIdentifier:(id)a4;
- (id)_passWithPaymentApplication:(id)a3;
- (id)_passesFilteredByAutomaticallyPresentPassEnabled:(id)a3;
- (id)_paymentNetworkIdentifiersForPaymentNetworks:(id)a3;
- (id)_predicateForDate:(id)a3 matchExactly:(BOOL)a4 leeway:(double)a5;
- (id)_predicateForDates:(id)a3 leeway:(double)a4;
- (id)_predicateForGroupingID:(id)a3;
- (id)_predicateForPassTypes:(unint64_t)a3;
- (id)_predicateForStyle:(int64_t)a3;
- (id)_predicateForStyles:(unint64_t)a3;
- (id)_predicateForType:(unint64_t)a3;
- (id)_predicateMatchingPassesForWebService:(id)a3;
- (id)_readerIDPriorityForPasses:(id)a3 readerID:(id)a4;
- (id)_recomputedPaymentBalanceForIdentifier:(id)a3 value:(id)a4 currency:(id)a5 exponent:(int64_t)a6 unitDictionary:(id)a7;
- (id)_registeredPass:(id)a3;
- (id)_registeredPasses:(id)a3;
- (id)_startOfTimeBlockForUnit:(unint64_t)a3 inCalendar:(id)a4 fromDate:(id)a5 forward:(BOOL)a6;
- (id)_transactionServiceForPass:(id)a3;
- (id)_transitPredicate;
- (id)_unlocatedPredicate;
- (id)_validPassPredicate;
- (id)_webServiceForPass:(id)a3 passType:(id)a4;
- (id)accountBalancesForAccountIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5 type:(unint64_t)a6 limit:(unint64_t)a7;
- (id)accountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4;
- (id)accountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3;
- (id)accountEnhancedMerchantForPrivateIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountEnhancedMerchantsForAccountIdentifier:(id)a3;
- (id)accountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4;
- (id)accountEventWithIdentifier:(id)a3;
- (id)accountEventsForAccountIdentifier:(id)a3;
- (id)accountEventsForAccountIdentifier:(id)a3 altDSID:(id)a4 types:(id)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(unint64_t)a9;
- (id)accountEventsForAccountIdentifier:(id)a3 excludingTypes:(id)a4;
- (id)accountIdentifierWithPreviousAccountIdentifier:(id)a3;
- (id)accountPendingFamilyMembersForAccountIdentifier:(id)a3;
- (id)accountPendingFamilyMembersWithDisplayedNotification:(BOOL)a3;
- (id)accountPromotionBehaviorForAccountIdentifier:(id)a3;
- (id)accountPromotionCompletionStepsForProgramIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountPromotionForProgramIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountPromotionsForAccountIdentifier:(id)a3;
- (id)accountStatementMetadataForAccountIdentifier:(id)a3;
- (id)accountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)accountTaxFormsForAccountIdentifier:(id)a3;
- (id)accountUserForAccountWithIdentifier:(id)a3 handle:(id)a4;
- (id)accountUserWithAltDSID:(id)a3 accountIdentifier:(id)a4;
- (id)accountUserWithTransactionSourceIdentifier:(id)a3;
- (id)accountUsersByAccountIdentifier;
- (id)accountUsersForAccountWithIdentifier:(id)a3;
- (id)accountUsersForAccountWithIdentifier:(id)a3 accessLevel:(unint64_t)a4;
- (id)accountWithIdentifier:(id)a3;
- (id)accountWithPhysicalCardIdentifier:(id)a3;
- (id)accountWithTransactionSourceIdentifier:(id)a3;
- (id)accountWithVirtualCardIdentifier:(id)a3;
- (id)accounts;
- (id)accountsWithIdentifiers:(id)a3;
- (id)activeDiscoveryItemIdentifiersForRelevantDate:(id)a3;
- (id)activeDiscoveryItemsForRelevantDate:(id)a3;
- (id)activeDiscoveryItemsRequiringBadgeForRelevantDate:(id)a3;
- (id)allAssociatedTransactionSourceIdentifiersForPassUniqueIdentifier:(id)a3;
- (id)allIndexedItemsOfType:(unint64_t)a3;
- (id)allMessagesForPassWithUniqueIdentifier:(id)a3;
- (id)allOutstandingSharingMessages;
- (id)allPaymentApplicationUsageSummaries;
- (id)allPaymentApplications;
- (id)allPendingProvisioningReceipts;
- (id)allPendingProvisionings;
- (id)allRecordFetchTasks;
- (id)allTagsWithTitles;
- (id)ambiguousPassUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3;
- (id)ambiguousTransactionWithServiceIdentifier:(id)a3;
- (id)anyEligiblePaymentOfferRewardsCriteriaForPass:(id)a3;
- (id)appleBalancePromotionForAccountIdentifier:(id)a3;
- (id)appletSubcredentialForSharedCredentialWithIdentifier:(id)a3;
- (id)appletSubcredentialWithIdentifier:(id)a3;
- (id)approvedTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9;
- (id)associatedAccountIdentifierForPassWithUniqueIdentifier:(id)a3;
- (id)auxiliaryItemIdentifiersForPassUniqueIdentifier:(id)a3;
- (id)balanceReminderThresholdForBalanceIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4;
- (id)batchOfActionableIndexerItemsWithCount:(unint64_t)a3;
- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStartDate:(id)a4 endDate:(id)a5;
- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStatementIdentifier:(id)a4;
- (id)broadwayOrSurfPassUniqueIdentifierForAmbiguousServiceIdentifier:(id)a3;
- (id)broadwayOrSurfTransactionSourceIdentifierForAmbiguousServiceIdentifier:(id)a3 transactionAccountIdentifier:(id *)a4 transactionAccountType:(int64_t *)a5 transactionAltDSID:(id *)a6;
- (id)candidatePassesOfStyle:(int64_t)a3;
- (id)cashbackByPeriodForTransactionSourceIdentifiers:(id)a3 withStartDate:(id)a4 endDate:(id)a5 calendar:(id)a6 calendarUnit:(unint64_t)a7 type:(unint64_t)a8;
- (id)categoryVisualizationMagnitudesForPassUniqueID:(id)a3;
- (id)changeEventsWithRecordType:(int64_t)a3;
- (id)changeEventsWithRecordType:(int64_t)a3 recordUniqueID:(id)a4;
- (id)closestStartOfMonthFromDate:(id)a3;
- (id)closestStartOfYearFromDate:(id)a3;
- (id)cloudStoreContainerChangeEventWithIdentifier:(id)a3;
- (id)cloudStoreContainerChangeEventsForContainerIdentifier:(id)a3;
- (id)cloudStoreRecordWithRecordName:(id)a3 recordType:(id)a4 inCloudStoreZone:(id)a5;
- (id)cloudStoreZonesForContainerDatabase:(id)a3;
- (id)cloudStoreZonesForContainerDatabaseWithName:(id)a3 scope:(int64_t)a4;
- (id)commutePlanReminderForCommutePlanIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4;
- (id)compoundTags:(unint64_t)a3 limit:(unint64_t)a4;
- (id)contactlessAccessPaymentPassesWithTCI:(id)a3 readerId:(id)a4;
- (id)credentialIdentifiersForAid;
- (id)creditAccountStatementsForAccountIdentifier:(id)a3;
- (id)creditRecoveryPaymentPlansForAccountIdentifier:(id)a3;
- (id)creditStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)creditStatementWithIdentifier:(id)a3 accountIdentifiers:(id)a4;
- (id)databaseSubscriptionForContainerDatabase:(id)a3;
- (id)dbAccountWithIdentifier:(id)a3;
- (id)dbPeerPaymentAccount;
- (id)dbPeerPaymentPreferences;
- (id)dbTransactionWithTransactionIdentifier:(id)a3;
- (id)defaultPaymentApplicationForPassUniqueIdentifier:(id)a3;
- (id)deleteAppleBalancePromotionForAccountWithIdentifier:(id)a3;
- (id)deleteVirtualCardEncryptedDataForAccount:(id)a3;
- (id)deviceSecureElementPassUniqueIDs;
- (id)deviceSpecificPaymentApplications;
- (id)discoveryItemWithIdentifier:(id)a3;
- (id)discoveryItems;
- (id)discoveryItemsForRelevantDate:(id)a3;
- (id)discoveryItemsWaitingForTrigger;
- (id)discoveryNotificationWithIdentifier:(id)a3;
- (id)discoveryNotifications;
- (id)discoveryNotificationsRequiringInsertionForDate:(id)a3;
- (id)discoveryNotificationsThatAreNotExpiredForDate:(id)a3 active:(unint64_t)a4 delivered:(unint64_t)a5;
- (id)discoveryNotificationsToScheduleForDate:(id)a3;
- (id)dismissedDiscoveryItems;
- (id)dynamicAssociatedDomains;
- (id)effectiveCatalog;
- (id)engagementMessageWithIdentifier:(id)a3;
- (id)engagementMessages;
- (id)engagementMessagesForPassQualifier:(int64_t)a3 relevantDate:(id)a4 active:(unint64_t)a5;
- (id)engagementMessagesForRelevantDate:(id)a3;
- (id)evaluatedPolicyDomainStateForDPANIdentifier:(id)a3;
- (id)featureApplicationWithIdentifier:(id)a3;
- (id)featureApplications;
- (id)featureApplicationsWithAccountIdentifier:(id)a3;
- (id)fetchDeviceEnviromentForClient:(int64_t)a3 andCompareToCurrentEnvironment:(id)a4 didChange:(BOOL *)a5;
- (id)fetchTimestampForCloudStore:(id)a3 containerDatabase:(id)a4;
- (id)financingPlanDisputeIdentifiersWithDisputeState:(unint64_t)a3;
- (id)financingPlanIdentifiersForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7;
- (id)financingPlanIdentifiersThatContainInstallmentWithStatus:(unint64_t)a3;
- (id)financingPlanWithIdentifier:(id)a3;
- (id)financingPlansForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7;
- (id)financingPlansIdentifiersWithState:(unint64_t)a3;
- (id)financingPlansWithAccountIdentifier:(id)a3;
- (id)financingPlansWithQuery:(id)a3;
- (id)firstValidBarcodeCredentialForDPANIdentifier:(id)a3;
- (id)identifiersForAccountServicingEventsWithStatus:(unint64_t)a3;
- (id)inStoreTopUpTokenForAccountIdentifier:(id)a3;
- (id)indexerItemCountsOfType:(unint64_t)a3;
- (id)indexerItemWithUniqueIdentifier:(id)a3;
- (id)insertOrUpdateAccount:(id)a3;
- (id)insertOrUpdateAccountEndpointMetadata:(id)a3;
- (id)insertOrUpdateAccountStatementMetadata:(id)a3;
- (id)insertOrUpdateAccountUser:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateAccountUsers:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateAppleBalancePromotion:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateAppletStateDirtyForTransitAppletStateDirty:(id)a3;
- (id)insertOrUpdateDiscoveryNotification:(id)a3;
- (id)insertOrUpdateFeatureApplication:(id)a3;
- (id)insertOrUpdateFinancingPlan:(id)a3 forAccountIdentifier:(id)a4;
- (id)insertOrUpdateFinancingPlans:(id)a3 forAccountIdentifier:(id)a4;
- (id)insertOrUpdateInStoreTopUpToken:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdateLiveRenderEnabled:(BOOL)a3 forPassWithUniqueIdentifier:(id)a4;
- (id)insertOrUpdatePassEndpointMetadata:(id)a3;
- (id)insertOrUpdatePaymentFundingSources:(id)a3 accountIdentifier:(id)a4;
- (id)insertOrUpdatePaymentMessage:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 performTruncation:(BOOL)a6;
- (id)insertOrUpdatePaymentSetupFeature:(id)a3;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6 insertedTransaction:(BOOL *)a7;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 originDeviceID:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8;
- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9;
- (id)insertOrUpdatePeerPaymentAccount:(id)a3;
- (id)insertOrUpdatePeerPaymentPreferences:(id)a3;
- (id)insertOrUpdatePhysicalCard:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdatePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)insertOrUpdatePushProvisioningSharingMetadata:(id)a3;
- (id)insertOrUpdateRule:(id)a3;
- (id)insertOrUpdateSharedAccountCloudStore:(id)a3 accountIdentifier:(id)a4;
- (id)insertOrUpdateTransactionReceipt:(id)a3;
- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3;
- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3 accountIdentifier:(id)a4 redeemed:(BOOL)a5 withRedemptionType:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8;
- (id)installmentPlansWithTransactionReferenceIdentifier:(id)a3;
- (id)installmentTransactionsForInstallmentPlanIdentifier:(id)a3;
- (id)invitationWithIdentifier:(id)a3;
- (id)invitations;
- (id)issuerInstallmentCriteriaIdentifierForFpanIdentifier:(id)a3;
- (id)issuerInstallmentTransactionsForPassUniqueIdentifier:(id)a3;
- (id)issuerInstallmentTransactionsForTransactionSourceIdentifiers:(id)a3 paymentHashes:(id)a4;
- (id)lastAccountTaxFormForAccountIdentifier:(id)a3;
- (id)lastDeletionDateForWebService:(id)a3;
- (id)lastRedemptionEventToDestination:(unint64_t)a3 forAccountIdentifier:(id)a4 altDSID:(id)a5;
- (id)lastRegionErrorForTransaction:(id)a3;
- (id)lastSavingsStatementForAccountIdentifier:(id)a3;
- (id)lastUpdatedDateForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4;
- (id)lastUpdatedTagForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4;
- (id)lastUpdatedTagForWebService:(id)a3;
- (id)lastUsedBarcodeIdentifierForDPANIdentifier:(id)a3;
- (id)latestStatementIdentifierThatNeedsMetadataProcessingForAccountIdentifier:(id)a3 accountType:(unint64_t)a4 maxProcessedAttemptCount:(int64_t)a5;
- (id)locatedCandidatePassesOfStyle:(int64_t)a3;
- (id)locatedDatelessCandidatePassesOfStyle:(int64_t)a3;
- (id)locationsByUniqueIDInBoundingBoxOfRegion:(id)a3;
- (id)mapsBrandWithIdentifier:(unint64_t)a3;
- (id)mapsBrands;
- (id)mapsBrandsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5;
- (id)mapsMerchantWithIdentifier:(unint64_t)a3;
- (id)mapsMerchants;
- (id)mapsMerchantsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5;
- (id)markStatementMetadataItems:(id)a3 asProcessed:(BOOL)a4 error:(unint64_t)a5 statementIdentifier:(id)a6 accountIdentifier:(id)a7;
- (id)merchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4;
- (id)messageServiceForPaymentApplication:(id)a3;
- (id)messagesForPassWithUniqueIdentifier:(id)a3;
- (id)missingRemoteAssetsPersistentStoreItemsWithMaximumDownloadRetriesCount:(unint64_t)a3;
- (id)nextBarcodeBackgroundFetchDate;
- (id)nextPossibleCloudStoreShareOperationForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5;
- (id)nextPossibleFetchDateForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5;
- (id)nextRelevantDiscoveryNotificationForDate:(id)a3;
- (id)nextStartOfYearFromDate:(id)a3;
- (id)nonTerminalDiscoveryItemIdentifiers;
- (id)notificationServiceOfType:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4;
- (id)notificationServices;
- (id)notificationServicesForPushTopic:(id)a3;
- (id)passAnnotationsForPassUniqueIdentifier:(id)a3;
- (id)passCredentialShareForIdentifier:(id)a3 passUniqueIdentifier:(id)a4;
- (id)passEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4;
- (id)passEntitlementForIdentifier:(id)a3 passIdentifier:(id)a4;
- (id)passEntitlementsForPassUniqueIdentifier:(id)a3;
- (id)passIdentifierForPassShareIdentifier:(id)a3;
- (id)passLiveRenderForPassUniqueIdentifier:(id)a3;
- (id)passShareForCredentialShareIdentifier:(id)a3;
- (id)passShareForIdentifier:(id)a3;
- (id)passShareForPassUniqueIdentifier:(id)a3 shareIdentifier:(id)a4;
- (id)passShareForTransportIdentifier:(id)a3;
- (id)passSharesForPassUniqueIdentifier:(id)a3;
- (id)passSharesForSubcredentialIdentifier:(id)a3;
- (id)passSharesWithNoPass;
- (id)passStyles;
- (id)passUniqueIDs;
- (id)passUniqueIDsOfType:(unint64_t)a3;
- (id)passUniqueIdentifierForMostRecentVisibleTransaction;
- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3;
- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3 includingAccountUsers:(BOOL)a4;
- (id)passUniqueIdentifierForTransactionWithIdentifier:(id)a3;
- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5;
- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (id)passUniqueIdentifierFromAppletSubcredentialIdentifier:(id)a3;
- (id)passUniqueIdentifierWithAssociatedAccountIdentifier:(id)a3;
- (id)passUniqueIdentifierWithCredentialIdentifier:(id)a3;
- (id)passUniqueIdentifierWithPaymentApplication:(id)a3;
- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3;
- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3 subcredentialIdentifier:(id)a4;
- (id)passUniqueIdentifierWithPrimaryAccountIdentifier:(id)a3;
- (id)passUpdateContextForSerialNumber:(id)a3 webService:(id)a4;
- (id)passWithPassTypeID:(id)a3 serialNumber:(id)a4;
- (id)passWithPaymentApplication:(id)a3;
- (id)passWithPaymentApplicationIdentifier:(id)a3;
- (id)passWithPaymentApplicationIdentifier:(id)a3 secureElementIdentifiers:(id)a4;
- (id)passWithPrimaryAccountIdentifier:(id)a3;
- (id)passWithProvisioningCredentialHash:(id)a3;
- (id)passWithUniqueIdentifier:(id)a3;
- (id)passWithVPANIdentifier:(id)a3;
- (id)passes;
- (id)passesEnabledForValuedAddedServicesWithAutomaticSelection:(BOOL)a3;
- (id)passesForInAppPaymentOnNetworks:(id)a3 issuerCountryCodes:(id)a4 paymentApplicationStates:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8;
- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentApplicationStates:(id)a6 paymentRequestType:(id)a7 isMultiTokensRequest:(BOOL)a8 webService:(id)a9;
- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8;
- (id)passesForNotificationService:(id)a3;
- (id)passesForPaymentType:(unint64_t)a3;
- (id)passesForPaymentTypes:(id)a3;
- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 isMultiTokensRequest:(BOOL)a7;
- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 paymentApplicationStates:(id)a7 isMultiTokensRequest:(BOOL)a8;
- (id)passesForWebService:(id)a3;
- (id)passesOfStyles:(unint64_t)a3;
- (id)passesOfType:(unint64_t)a3;
- (id)passesSupportingIssuerBinding;
- (id)passesSupportingIssuerBindingWithPayloadState:(unint64_t)a3;
- (id)passesWithActiveVPAN;
- (id)passesWithISO18013Credentials;
- (id)passesWithNextBackgroundFetchDateBeforeDate:(id)a3;
- (id)passesWithPairedReaderIdentifier:(id)a3;
- (id)passesWithPassTypeID:(id)a3;
- (id)passesWithPassTypeIdentifierHash:(id)a3;
- (id)passesWithPassTypeIdentifierHash:(id)a3 andAssociatedPassTypeIdentifierHash:(id)a4;
- (id)passesWithPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4;
- (id)payLaterCardMagnitudesForAccountIdentifier:(id)a3;
- (id)payLaterFinancingPlansRequiringMerchantCleanupWithTransactionDateWithinWindow:(double)a3;
- (id)paymentApplicationForTransactionSourceIdentifier:(id)a3;
- (id)paymentApplicationIdentifierForTransactionSourceIdentifier:(id)a3;
- (id)paymentApplicationWithDPANIdentifier:(id)a3;
- (id)paymentApplicationWithPassUniqueIdentifier:(id)a3 secureElementIdentifier:(id)a4 paymentApplicationIdentifier:(id)a5;
- (id)paymentApplicationWithVPANIdentifier:(id)a3;
- (id)paymentApplicationsForNotificationService:(id)a3;
- (id)paymentApplicationsForPassUniqueIdentifier:(id)a3;
- (id)paymentBalanceWithIdentifier:(id)a3 forPassUniqueIdentifier:(id)a4;
- (id)paymentBalancesForPassUniqueIdentifier:(id)a3;
- (id)paymentFundingSourceForIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)paymentFundingSourcesForAccountIdentifier:(id)a3;
- (id)paymentOfferCatalog;
- (id)paymentPassesEligibleForDefaultCardSelection;
- (id)paymentPassesPendingActivation;
- (id)paymentPassesWithAssociatedPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4;
- (id)paymentPassesWithIssuerCountryCodes:(id)a3;
- (id)paymentRewardsBalanceWithIdentifier:(id)a3;
- (id)paymentRewardsBalancesForPassUniqueIdentifier:(id)a3;
- (id)paymentRewardsRedemptionWithPaymentHash:(id)a3;
- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 limit:(int64_t)a4;
- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 paymentHashes:(id)a4;
- (id)paymentSetupFeatureWithIdentifier:(id)a3;
- (id)paymentSetupFeatures;
- (id)paymentTransactionForIdentifier:(id)a3;
- (id)paymentTransactionWithIdentifier:(id)a3;
- (id)paymentTransactionsToDeleteFromFinanceWithLimit:(int64_t)a3;
- (id)paymentTransactionsWithFullPaymentHashes:(id)a3 transactionSourceIdentifiers:(id)a4;
- (id)paymentTransactionsWithIdentifiers:(id)a3 regions:(id *)a4 tags:(id *)a5;
- (id)peerPaymentAccount;
- (id)peerPaymentAccountForTransactionSourceIdentifier:(id)a3;
- (id)peerPaymentAccountsWithIdentifiers:(id)a3;
- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 excludingPaymentMode:(unint64_t)a4 startDate:(id)a5 endDate:(id)a6;
- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5;
- (id)peerPaymentCounterpartImageData;
- (id)peerPaymentCounterpartImageDataForTransactionWithIdentifier:(id)a3;
- (id)peerPaymentCounterpartImageDataWithIdentifier:(id)a3;
- (id)peerPaymentEncryptionCertificateForDestination:(unint64_t)a3;
- (id)peerPaymentPendingRequestsForPeerPaymentAccount;
- (id)peerPaymentPendingRequestsForRequestTokens:(id)a3;
- (id)peerPaymentPreferences;
- (id)peerPaymentRecurringPaymentWithIdentifier:(id)a3;
- (id)peerPaymentRecurringPayments;
- (id)peerPaymentRecurringPaymentsWithType:(unint64_t)a3;
- (id)peerPaymentTransactionServiceIdentifiersForTransactionSourceIdentifiers:(id)a3 withPeerPaymentSubtype:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8;
- (id)pendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4;
- (id)pendingProvisioningsOfType:(id)a3;
- (id)pendingProvisioningsOfTypes:(id)a3;
- (id)pendingProvisioningsWithStatus:(int64_t)a3;
- (id)pendingTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9;
- (id)physicalCardsForAccountWithIdentifier:(id)a3;
- (id)placedHoldsWithAccountIdentifier:(id)a3;
- (id)plansForPassUniqueIdentifier:(id)a3;
- (id)previousAccountIdentifierForAccountIdentifier:(id)a3;
- (id)primaryAccountIdentifierForAssociatedAccountIdentifier:(id)a3;
- (id)primaryAccountIdentifierForTransactionSourceIdentifier:(id)a3;
- (id)primaryPaymentApplicationForPassUniqueIdentifier:(id)a3;
- (id)primaryTransactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4;
- (id)pushEnabledPassTypeIDs;
- (id)pushProvisioningSharingMetadata;
- (id)pushProvisioningSharingMetadataWithStatus:(unint64_t)a3;
- (id)recomputePayLaterCardMagnitudesForAccountIdentifier:(id)a3;
- (id)redemptionAccountEventWithRewardsAddedIdentifier:(id)a3;
- (id)redemptionAccountEventWithTransactionIdentifier:(id)a3;
- (id)regionIdentifiersMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5 withRequest:(id)a6 limit:(unint64_t)a7;
- (id)regionsForTransaction:(id)a3 localeIdentifier:(id)a4;
- (id)regionsForTransactionPID:(int64_t)a3 localeIdentifier:(id)a4;
- (id)regionsMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5;
- (id)regionsMissingLocalizedContentForLocaleIdentifier:(id)a3;
- (id)regionsOfType:(unint64_t)a3 localeIdentifier:(id)a4;
- (id)removeMapsDataForTransactionWithIdentifier:(id)a3 forTransactionSourceIdentifier:(id)a4 issueReportIdentifier:(id)a5;
- (id)removePeerPaymentAccount;
- (id)removePeerPaymentPreferences;
- (id)replaceCreditRecoveryPaymentPlans:(id)a3 forAccountIdentifier:(id)a4;
- (id)replacePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4;
- (id)retrieveDirtyAppletStates;
- (id)retryDateForEvent:(id)a3;
- (id)rewardsTierSummaryForTransactionSourceIdentifiers:(id)a3 currencyCode:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (id)rewardsValuesForUnit:(unint64_t)a3;
- (id)rules;
- (id)rulesWithIdentifiers:(id)a3;
- (id)savingsAccountStatementsForAccountIdentifier:(id)a3;
- (id)savingsStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4;
- (id)scheduledPaymentsWithAccountIdentifier:(id)a3 includeFailedRecurringPayments:(BOOL)a4;
- (id)secureElementCardTypes;
- (id)serviceIdentifierForTransactionIdentifier:(id)a3 accountIdentifier:(id *)a4 accountType:(int64_t *)a5;
- (id)setAccounts:(id)a3;
- (id)setDefaultPaymentApplication:(id)a3 forPassUniqueIdentifier:(id)a4;
- (id)setDiscoveryItems:(id)a3;
- (id)setFeatureApplications:(id)a3;
- (id)setFeatureApplications:(id)a3 forAccountIdentifier:(id)a4;
- (id)setPaymentSetupFeatures:(id)a3;
- (id)setScheduledPayments:(id)a3 forAccount:(id)a4;
- (id)setTransfers:(id)a3 forAccount:(id)a4;
- (id)sharedAccountCloudStoreByAccountIdentifier;
- (id)sharedAccountCloudStoreForAccountIdentifier:(id)a3;
- (id)sharingEndpointForTransportIdentifier:(id)a3;
- (id)sharingEndpoints;
- (id)sharingEndpointsOfType:(unint64_t)a3;
- (id)sharingEndpointsWithOutstandingMessages;
- (id)sharingMessagesForTransportIdentifier:(id)a3;
- (id)sharingMessagesForTransportIdentifier:(id)a3 newerThanDate:(id)a4;
- (id)sortedPassUniqueIdentifiersForGroupContainingPassWithUniqueIdentifier:(id)a3;
- (id)syncablePassUniqueIDs;
- (id)tagLastUpdateDateForWebService:(id)a3;
- (id)tagsForTransactionPID:(int64_t)a3;
- (id)tagsForTransactionWithIdentifier:(id)a3;
- (id)tapToRadarPromptWithReason:(id)a3;
- (id)tokenDataForCloudStore:(id)a3 containerDatabase:(id)a4;
- (id)transactionArchiveForCounterpartImageData:(id)a3;
- (id)transactionArchiveForRecurringPayment:(id)a3;
- (id)transactionArchiveForTransactionIdentifier:(id)a3;
- (id)transactionArchiveForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (id)transactionArchivesWithCloudStoreZone:(id)a3 isArchived:(BOOL)a4;
- (id)transactionArchivesWithType:(unint64_t)a3 isArchived:(BOOL)a4;
- (id)transactionAuthenticationResultForTransactionIdentifier:(id)a3;
- (id)transactionCountByPeriodForRequest:(id)a3 calendar:(id)a4 calendarUnit:(unint64_t)a5 includePurchaseTotal:(BOOL)a6;
- (id)transactionReceiptWithUniqueID:(id)a3;
- (id)transactionServiceForPaymentApplication:(id)a3;
- (id)transactionSourceIdentifierForAccountIdentifier:(id)a3;
- (id)transactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4;
- (id)transactionSourceIdentifierForPeerPaymentAccountIdentifier:(id)a3;
- (id)transactionSourceIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5;
- (id)transactionSourceIdentifiersAssociatedWithPassUniqueIdentifier:(id)a3;
- (id)transactionSourceIdentifiersForPassUniqueIdentifier:(id)a3;
- (id)transactionWithReferenceIdentifier:(id)a3;
- (id)transactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5;
- (id)transactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4;
- (id)transactionWithTransactionIdentifier:(id)a3;
- (id)transactionsForAdjustmentType:(int64_t)a3 limit:(int64_t)a4;
- (id)transactionsForPredicate:(id)a3 limit:(int64_t)a4;
- (id)transactionsForRequest:(id)a3;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 matchingMerchant:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 merchantCategory:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 withTransactionSource:(unint64_t)a6 withBackingData:(unint64_t)a7 limit:(int64_t)a8;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9;
- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionType:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9;
- (id)transactionsMissingWorldRegionWithLimit:(unint64_t)a3 onlyEligibleForProcessing:(BOOL)a4;
- (id)transactionsOfTypes:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6;
- (id)transactionsRequiringMerchantCleanupForTransactionSourceIdentifiers:(id)a3 withLastReprocessingDateBeforeDate:(id)a4 transactionDateWithinWindow:(double)a5;
- (id)transactionsRequiringReviewForAccountWithIdentifier:(id)a3;
- (id)transactionsThatNeedSyncToFinanceWithAccountIdentifiers:(id)a3 withLimit:(int64_t)a4;
- (id)transactionsWithServiceIdentifier:(id)a3;
- (id)transactionsWithTransactionSource:(unint64_t)a3 withBackingData:(unint64_t)a4 limit:(int64_t)a5;
- (id)transactionsWithoutRegionMatchingMapsMerchant:(id)a3 limit:(unint64_t)a4;
- (id)transitNetworksForPassesMatchingTransitType:(unint64_t)a3 expired:(unint64_t)a4;
- (id)transitPasses;
- (id)transitStateWithPassUniqueIdentifier:(id)a3 paymentApplication:(id)a4;
- (id)transportIdentifierForSharingMessage:(id)a3;
- (id)unexpiredPassStyles;
- (id)unexpiredPassesOrderedByGroup;
- (id)unexpiredSecureElementCardTypes;
- (id)unlocatedCandidatePassesOfStyle:(int64_t)a3;
- (id)unregisteredAuxiliaryCapabilityRequirementsForPass:(id)a3;
- (id)unsyncedPassesInContainer:(id)a3;
- (id)updateDiscoveryItem:(id)a3;
- (id)updateDiscoveryItemsWithDialogRequestSourcedItems:(id)a3;
- (id)updateDiscoveryItemsWithRemoteItems:(id)a3;
- (id)updateDiscoveryItemsWithRuleResults:(id)a3;
- (id)updateDiscoveryNotifications:(id)a3;
- (id)updateDiscoveryNotificationsForRuleResults:(id)a3;
- (id)updateDiscoveryNotificationsWithRemoteNotifications:(id)a3;
- (id)updateEngagementMessage:(id)a3;
- (id)updateEngagementMessages:(id)a3;
- (id)updateEngagementMessagesForRuleResults:(id)a3;
- (id)updateEngagementMessagesWithRemoteMessages:(id)a3;
- (id)updateMerchant:(id)a3 forTransaction:(id)a4 passUniqueIdentifier:(id)a5;
- (id)updatePassCredentialShareIdentifier:(id)a3 updatedStatus:(unint64_t)a4 updatedIdentifier:(id)a5;
- (id)updateRedemptionType:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5;
- (id)updateRules:(id)a3;
- (id)updateStatementMetadataWithReport:(id)a3 reportDate:(id)a4;
- (id)updateSuppressBehavior:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5;
- (id)updatedPassAnnotationsForPasses:(id)a3;
- (id)validNFCBarcodePassUniqueIDs;
- (id)valueAddedMerchantWithIdentifier:(id)a3;
- (id)valueAddedServiceTransactionWithIdentifier:(id)a3;
- (id)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)a3 limit:(int64_t)a4;
- (id)valueAddedServiceTransactionsForPaymentTransaction:(id)a3;
- (id)webServiceForPass:(id)a3;
- (id)webServices;
- (id)webServicesForPassTypeID:(id)a3;
- (id)worldRegionWithIdentifier:(id)a3 localeIdentifier:(id)a4;
- (int64_t)_accountPIDForEndpointBackoffType:(unint64_t)a3 accountIdentifier:(id)a4;
- (int64_t)_migrationAmountDecimalDigitsVersion:(id)a3;
- (int64_t)barcodeBackgroundFetchRetryLevelForPassUniqueIdentifier:(id)a3;
- (int64_t)cloudStoreContainerChangeEventCount;
- (int64_t)dirtyAppletStateCount;
- (int64_t)indexingMetadataVersionForType:(unint64_t)a3;
- (int64_t)paymentTransactionAmountCountInDatabase;
- (int64_t)spotlightIndexingVersion;
- (unint64_t)countActiveSecureElementPasses;
- (unint64_t)countOfTransactionsWithAssociatedReceipts;
- (unint64_t)countPassesOfType:(unint64_t)a3;
- (unint64_t)countPassesPreventingWalletDeletion;
- (unint64_t)createSchemaInDatabase:(id)a3;
- (unint64_t)indexingMetadataStatusForType:(unint64_t)a3;
- (unint64_t)missingRemoteAssetsPersistentStoreItemsCountWithMaximumDownloadRetriesCount:(unint64_t)a3;
- (unint64_t)newAccountUserInvitationsCount;
- (unint64_t)numberOfBarcodeCredentialsDisplayedAfterDate:(id)a3 forDPANIdentifier:(id)a4;
- (unint64_t)numberOfChangeEvents;
- (unint64_t)numberOfPassesOfType:(id)a3;
- (unint64_t)numberOfRealPasses;
- (unint64_t)numberOfTransactionReceipts;
- (unint64_t)numberOfValidBarcodeCredentialsForDPANIdentifier:(id)a3;
- (unint64_t)numberOfValueAddedServiceTransactionsForMerchant:(id)a3;
- (unint64_t)rangingSuspensionReasonForAppletSubcredential:(id)a3 forPaymentApplicationID:(id)a4;
- (unint64_t)registrationStatusForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4;
- (unint64_t)settingsForPass:(id)a3;
- (unint64_t)successfulRedemptionEventsToPeerPaymentForAccountIdentifier:(id)a3;
- (unint64_t)suppressionBehaviorForTransactionSourceIdentifier:(id)a3 serviceIdentifier:(id)a4;
- (unint64_t)transactionSourceTypeForTransactionSourceIdentifier:(id)a3;
- (unint64_t)transactionsCountForRequest:(id)a3;
- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 startDate:(id)a6 endDate:(id)a7;
- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 startDate:(id)a5 endDate:(id)a6;
- (void)_addPass:(id)a3 toGroup:(id)a4 withGroupingProfile:(id)a5;
- (void)_applyCatalog:(id)a3;
- (void)_applyDemoFelicaAppletStateToPass:(id)a3;
- (void)_applyDemoPaymentApplicationToPass:(id)a3;
- (void)_applyDemoPaymentTransactionsToPass:(id)a3;
- (void)_createDatabaseAtURL:(id)a3 report:(id *)a4;
- (void)_deleteNotificationServiceIfOrphaned:(id)a3;
- (void)_deletePassTypeIfOrphaned:(id)a3;
- (void)_deleteWebServiceIfOrphaned:(id)a3;
- (void)_fixDuplicateGroupsAtIndex:(unint64_t)a3 preservingGroupPID:(int64_t)a4 maximumNumberOfGroups:(unint64_t)a5;
- (void)_insertPass:(id)a3;
- (void)_insertPass:(id)a3 groupingProfile:(id)a4;
- (void)_insertPass:(id)a3 groupingProfile:(id)a4 insertNewGroupAfter:(id)a5;
- (void)_mergeGroup:(id)a3 intoGroup:(id)a4;
- (void)_migrateObjectSettingsWithSafeHavenArchiveURL:(id)a3;
- (void)_moveGroup:(id)a3 toIndex:(unint64_t)a4;
- (void)_populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:(id)a3;
- (void)_registerPasses:(id)a3;
- (void)_removeGroup:(id)a3;
- (void)_removePass:(id)a3 fromGroup:(id)a4;
- (void)_setObjectSettingsManager:(id)a3;
- (void)_trimCatalog:(id)a3 andBuildPassPredicate:(id *)a4;
- (void)_updateCloudStoreWithTransactions:(id)a3 transactionSourceIdentifier:(id)a4;
- (void)_updatePaymentBalancesAndPlansForTransitAppletState:(id)a3 passUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5 unitDictionary:(id)a6;
- (void)_validateDefaultPaymentPassOrdering;
- (void)accessDatabaseUsingBlock:(id)a3;
- (void)addChangeEvents:(id)a3;
- (void)addCloudStoreContainerChangeEvent:(id)a3;
- (void)addPassShare:(id)a3 forPassUniqueIdentifier:(id)a4;
- (void)addPeerPaymentAccountIdentifierToDatabaseTransactions;
- (void)adjustGroupsAfterAddingPass:(id)a3;
- (void)adjustGroupsAfterUpdatingPass:(id)a3 oldGroupingProfile:(id)a4;
- (void)adjustGroupsBeforeRemovingPass:(id)a3;
- (void)allPassTransactionIdentifiersWithAccountIdentifiers:(id)a3 batchHandler:(id)a4;
- (void)allPassTransactionIdentifiersWithBatchHandler:(id)a3;
- (void)archiveMessageWithIdentifier:(id)a3;
- (void)associateTransaction:(id)a3 toRegion:(id)a4;
- (void)computeExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4;
- (void)computeTransactionReceiptExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4 removedUniqueIDs:(id *)a5;
- (void)createGroupsIfNecessary;
- (void)deleteAccountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4;
- (void)deleteAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4;
- (void)deleteAccountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3;
- (void)deleteAccountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4;
- (void)deleteAccountEventWithIdentifier:(id)a3;
- (void)deleteAccountEventsForAccountIdentifier:(id)a3;
- (void)deleteAccountPendingFamilyMember:(id)a3;
- (void)deleteAccountPendingFamilyMembersWithAccountIdentifier:(id)a3 altDSIDs:(id)a4;
- (void)deleteAccountPromotion:(id)a3 accountIdentifier:(id)a4;
- (void)deleteAccountPromotionBehaviorForAccountIdentifier:(id)a3;
- (void)deleteAccountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4;
- (void)deleteAccountTaxFormsWithoutPDFForAccount:(id)a3;
- (void)deleteAccountUserWithAltDSID:(id)a3 forAccountWithIdentifier:(id)a4;
- (void)deleteAccountWithIdentifier:(id)a3;
- (void)deleteAllAccounts;
- (void)deleteAllCloudStoreContainerChangeEventHistory;
- (void)deleteAllDiscoveryItems;
- (void)deleteAllDiscoveryNotifications;
- (void)deleteAllEngagementMessages;
- (void)deleteAllFeatureApplications;
- (void)deleteAllMessagesFromPaymentPassWithUniqueIdentifier:(id)a3;
- (void)deleteAllPassAuxiliaryItemMerchantsForPassUniqueIdentifier:(id)a3;
- (void)deleteAllPaymentBalancesForPassUniqueIdentifier:(id)a3;
- (void)deleteAllPaymentSetupFeatures;
- (void)deleteAllPaymentTransactionTags;
- (void)deleteAllPeerPaymentCounterpartImageData;
- (void)deleteAllPeerPaymentEncryptionCertificates;
- (void)deleteAllPeerPaymentRecurringPayments;
- (void)deleteAllPendingProvisioningReceipts;
- (void)deleteAllRegions;
- (void)deleteAllRules;
- (void)deleteAllTransactionsFromTransactionSourceIdentifiers:(id)a3;
- (void)deleteAndRecreateDatabase;
- (void)deleteCreditAccountStatementsForAccount:(id)a3;
- (void)deleteCreditRecoveryPaymentPlansForAccountIdentifier:(id)a3;
- (void)deleteDatabase;
- (void)deleteDirtyAppletStatesForTransitAppletStateDirty:(id)a3;
- (void)deleteDiscoveryItemWithIdentifier:(id)a3;
- (void)deleteDiscoveryNotificationWithIdentifier:(id)a3;
- (void)deleteDuplicateIndexerItems;
- (void)deleteEngagementMessageWithIdentifier:(id)a3;
- (void)deleteFeatureApplicationWithIdentifier:(id)a3;
- (void)deleteFeatureApplicationsWithAccountIdentifier:(id)a3;
- (void)deleteFinancingPlanWithIdentifier:(id)a3 forAccountIdentifier:(id)a4;
- (void)deleteFinancingPlansForAccountIdentifier:(id)a3;
- (void)deleteInStoreTopUpTokenForAccountWithIdentifier:(id)a3;
- (void)deleteIssuerInstallmentTransactionsForPassUniqueID:(id)a3;
- (void)deleteMerchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4;
- (void)deletePassEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4;
- (void)deletePassShareWithIdentifier:(id)a3;
- (void)deletePassWithUniqueIdentifier:(id)a3;
- (void)deletePaymentRewardsBalancesForPassUniqueIdentifier:(id)a3;
- (void)deletePaymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3;
- (void)deletePaymentSetupFeatureWithIdentifier:(id)a3;
- (void)deletePaymentTransactionWithIdentifier:(id)a3;
- (void)deletePaymentTransactionsToDeleteFromFinanceWithPIDs:(id)a3;
- (void)deletePaymentTransactionsWithIdentifiers:(id)a3;
- (void)deletePeerPaymentCounterpartImageDataForIdentifier:(id)a3;
- (void)deletePeerPaymentPendingRequestsForPeerPaymentAccount;
- (void)deletePeerPaymentPendingRequestsForRequestTokens:(id)a3;
- (void)deletePeerPaymentRecurringPaymentsForIdentifiers:(id)a3;
- (void)deletePushProvisioningSharingMetadata:(id)a3;
- (void)deleteRegionsWithNoMatchingTransactions;
- (void)deleteRetryBackoffForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5;
- (void)deleteRetryCloudStoreShareOperationBackoffForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5;
- (void)deleteRuleWithIdentifier:(id)a3;
- (void)deleteSavingsAccountStatementsForAccount:(id)a3;
- (void)deleteSavingsAccountStatementsWithoutPDFForAccount:(id)a3;
- (void)deleteSharingMessageForIdentifier:(id)a3;
- (void)deleteSharingMessagesForTransportIdentifier:(id)a3;
- (void)deleteSharingMessagesOlderThan:(id)a3;
- (void)deleteTransactionReceiptWithUniqueID:(id)a3;
- (void)enumerateOrganizationNamesForPassTypeID:(id)a3 withHandler:(id)a4;
- (void)enumeratePassSyncabilityPropertiesWithHandler:(id)a3;
- (void)enumeratePassUpdateContextsForWebService:(id)a3 withHandler:(id)a4;
- (void)failedToAssociateTransactionToRegion:(id)a3 error:(id)a4;
- (void)fieldMetadataForFieldWithProperties:(id)a3 withExpressPassManager:(id)a4 completion:(id)a5;
- (void)financingPlanInstallmentsDueDateRangeForAccountIdentifier:(id)a3 financingPlanStates:(id)a4 startDate:(id *)a5 endDate:(id *)a6;
- (void)generateDemoTransactionsForAllPaymentPasses;
- (void)getCatalog:(id *)a3 passes:(id *)a4 dbStates:(id *)a5 ofPassTypes:(unint64_t)a6 limitResults:(BOOL)a7;
- (void)increaseRetryBackoffLevelForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5;
- (void)increaseRetryCloudStoreShareOperationBackoffLevelForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5;
- (void)increaseRetryCountForRecordUniqueIdenifier:(id)a3 recordType:(int64_t)a4;
- (void)incrementMissingRemoteAssetsPersistentStoreItemDownloadRetriesCountWithUniqueID:(id)a3;
- (void)insertAccountBalance:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertContainerDatabaseForContainerDatabase:(id)a3;
- (void)insertDynamicAssociatedDomains:(id)a3;
- (void)insertMerchant:(id)a3 forPassUniqueIdentifier:(id)a4 auxiliaryPassInformationItemIdentifier:(id)a5;
- (void)insertOrReplaceMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3;
- (void)insertOrUpdateAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountEnhancedMerchantBehavior:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountEnhancedMerchants:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountEntityOrderings:(id)a3 accountIdentifier:(id)a4 entityType:(unint64_t)a5;
- (void)insertOrUpdateAccountPendingFamilyMembers:(id)a3;
- (void)insertOrUpdateAccountPromotion:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountPromotionBehavior:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountPromotions:(id)a3 accountIdentifier:(id)a4;
- (void)insertOrUpdateAccountTaxForms:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertOrUpdateCloudStoreRecords:(id)a3 inCloudStoreZone:(id)a4;
- (void)insertOrUpdateCloudStoreZone:(id)a3 containerDatabase:(id)a4;
- (void)insertOrUpdateCreditStatements:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertOrUpdateDeviceOriginatedNearbyPeerPaymentMemo:(id)a3 counterpartImageDataIdentifier:(id)a4 forTransactionWithServiceIdentifier:(id)a5 completion:(id)a6;
- (void)insertOrUpdateIndexerItemWithIdentifier:(id)a3 domainIdentifier:(id)a4 searchableItemData:(id)a5 type:(unint64_t)a6 status:(unint64_t)a7 error:(id)a8;
- (void)insertOrUpdatePaymentOfferCatalog:(id)a3;
- (void)insertOrUpdatePaymentRewardsBalances:(id)a3 withPassUniqueIdentifier:(id)a4;
- (void)insertOrUpdatePaymentRewardsRedemption:(id)a3 withPassUniqueIdentifier:(id)a4;
- (void)insertOrUpdatePeerPaymentCounterpartImageData:(id)a3;
- (void)insertOrUpdatePeerPaymentEncryptionCertificate:(id)a3;
- (void)insertOrUpdatePeerPaymentPendingRequests:(id)a3;
- (void)insertOrUpdatePeerPaymentRecurringPayments:(id)a3;
- (void)insertOrUpdatePendingProvisioning:(id)a3;
- (void)insertOrUpdatePendingProvisioningReceipt:(id)a3;
- (void)insertOrUpdateRegion:(id)a3;
- (void)insertOrUpdateSavingsAccountStatements:(id)a3 forAccountIdentifier:(id)a4;
- (void)insertOrUpdateSharingMessages:(id)a3 storePayloads:(BOOL)a4 transportIdentifier:(id)a5;
- (void)insertOrUpdateTransactionsForInstallmentPayments:(id)a3 installmentPlan:(id)a4 accountIdentifier:(id)a5 transactionSourceIdentifier:(id)a6 transactionProcessingBlock:(id)a7;
- (void)insertOrUpdateValueAddedMerchant:(id)a3;
- (void)insertOrUpdateValueAddedServiceTransaction:(id)a3 forPassUniqueIdentifier:(id)a4 paymentTransaction:(id)a5;
- (void)insertPaymentApplicationUsageSummary:(id)a3;
- (void)introduceDuplicateUniqueID;
- (void)introduceExtraneousUniqueID;
- (void)introduceMissingUniqueID;
- (void)markAllIndexedContentForReindexing;
- (void)markAllIndexedContentForReindexingOfType:(unint64_t)a3;
- (void)markAllIndexedContentForVerifyingOfType:(unint64_t)a3;
- (void)markAllIndexedTransactionsForIndexDeletion;
- (void)markAllPassesAsUnsyncedInContainer:(id)a3;
- (void)markAllVerifyingContentForReindexingOfType:(unint64_t)a3;
- (void)markInProgressPendingProvisionings;
- (void)markPassAsSynced:(id)a3;
- (void)migrateCarKeySharesForPass:(id)a3;
- (void)migrateObjectSettings;
- (void)noteObjectSharedWithUniqueID:(id)a3;
- (void)noteTapToRadarPromptedForReason:(id)a3 lastPromptDate:(id)a4;
- (void)performTransactionWithBlock:(id)a3;
- (void)prepareToDeletePassWithUniqueIdentifier:(id)a3;
- (void)purgeOldCloudStoreContainerChangeEventEntires;
- (void)recomputeBalancesForPaymentPass:(id)a3;
- (void)recomputeCategoryVisualizationMagnitudesForPassUniqueID:(id)a3 withStyle:(int64_t)a4;
- (void)removeAllChangeEvents;
- (void)removeChangeEvents:(id)a3;
- (void)removeCloudStoreRecordID:(id)a3 recordType:(id)a4 cloudStoreZone:(id)a5;
- (void)removeCloudStoreZone:(id)a3 containerDatabase:(id)a4;
- (void)removeContainerDatabaseForContainerDatabase:(id)a3;
- (void)removeExpiredChangeEvents;
- (void)removeMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3;
- (void)removePaymentOfferCatalog;
- (void)removeRecordFetchTasks:(id)a3;
- (void)resetAccountBalancesForAccountIdentifier:(id)a3;
- (void)resetCoordinatesForAllRegions;
- (void)resetIndexedContent;
- (void)resetIndexingItems;
- (void)resetNeedsSyncWithFinanceForTransactions:(id)a3;
- (void)resetVerifyingItems;
- (void)resolvePendingTransitTransactionAmountsWithPaymentPass:(id)a3;
- (void)setCloudStoreCoordinator:(id)a3;
- (void)setDelegate:(id)a3;
- (void)setNeedsSyncWithFinanceForTransactionsWithAccountIdentifier:(id)a3;
- (void)setNotificationServicesDelegate:(id)a3;
- (void)setObjectSettingsManager:(id)a3;
- (void)setPaymentServicesDelegate:(id)a3;
- (void)setSecureElement:(id)a3;
- (void)setShouldSyncTransactionsToCloudStore:(BOOL)a3;
- (void)setTags:(id)a3 toTransactionWithIdentifier:(id)a4;
- (void)setWebServicesDelegate:(id)a3;
- (void)syncTransactionsToCloudStoreOriginatedOnDevice:(unint64_t)a3;
- (void)totalAmount:(id *)a3 forTransactionsWithRequest:(id)a4 count:(unint64_t *)a5;
- (void)truncatePaymentBalancesForPassUniqueIdentifier:(id)a3 toMaximumEntityCount:(int64_t)a4;
- (void)updateAllPeerPaymentRecurringPayments:(id)a3;
- (void)updateAppLaunchToken:(id)a3 forNotificationService:(id)a4;
- (void)updateAppletCommutePlans:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5;
- (void)updateAuthenticationToken:(id)a3 forNotificationService:(id)a4;
- (void)updateCardholderNameFromSafari:(id)a3 forVirtualCardWithIdentifier:(id)a4;
- (void)updateChangeToken:(id)a3 fetchTimestamp:(id)a4 forCloudStoreZone:(id)a5 inContainerDatabase:(id)a6;
- (void)updateDatabaseSubscription:(id)a3 containerDatabase:(id)a4;
- (void)updateDateLastUsedBySafari:(id)a3 forVirtualCardWithIdentifier:(id)a4;
- (void)updateDeviceEnvironment:(id)a3 forClient:(int64_t)a4;
- (void)updateDidFinishInitialSync:(BOOL)a3 forCloudStoreZone:(id)a4 inContainerDatabase:(id)a5;
- (void)updateImpressionCount:(int64_t)a3 promotionProgramIdentifier:(id)a4 accountIdentifier:(id)a5;
- (void)updateImpressionCountsForPromotions:(id)a3 accountIdentifier:(id)a4;
- (void)updateIndexerItemsWithDomainIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5 error:(id)a6;
- (void)updateIndexingMetadataStatus:(unint64_t)a3 version:(int64_t)a4 forType:(unint64_t)a5;
- (void)updateIngestedDate:(id)a3 forUniqueID:(id)a4;
- (void)updateLastDeletionDate:(id)a3 forWebService:(id)a4;
- (void)updateLastModifiedTag:(id)a3 forSerialNumber:(id)a4 webService:(id)a5;
- (void)updateLastPushDate:(id)a3 frequencyScore:(double)a4 forPassTypeID:(id)a5;
- (void)updateLastUpdateDate:(id)a3 forPassTypeID:(id)a4;
- (void)updateLastUpdatedDate:(id)a3 forNotificationService:(id)a4;
- (void)updateLastUpdatedDate:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5;
- (void)updateLastUpdatedTag:(id)a3 forNotificationService:(id)a4;
- (void)updateLastUpdatedTag:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5;
- (void)updateLastUpdatedTag:(id)a3 forWebService:(id)a4;
- (void)updateMapsBrand:(id)a3;
- (void)updateMapsMerchant:(id)a3;
- (void)updateModifiedSource:(int64_t)a3 forUniqueID:(id)a4;
- (void)updateNFCPayloadState:(unint64_t)a3 forPassUniqueIdentifier:(id)a4 didChange:(BOOL *)a5;
- (void)updateNotificationService:(id)a3;
- (void)updatePassAnnotationsForPassWithUniqueIdentifier:(id)a3 withSortingState:(int64_t)a4;
- (void)updatePassSharesForPassUniqueIdentifier:(id)a3 passShares:(id)a4;
- (void)updatePassesWithSyncInformation:(id)a3;
- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4;
- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4 transactionSequenceNumber:(id)a5;
- (void)updatePaymentPlans:(id)a3 forPassUniqueIdentifier:(id)a4;
- (void)updatePeerPaymentMemo:(id)a3 forTransactionWithServiceIdentifier:(id)a4;
- (void)updatePeerPaymentMessageReceivedDate:(id)a3 forTransactionWithServiceIdentifier:(id)a4;
- (void)updateProcessedPayLaterMerchant:(id)a3 forFinancingPlanIdentifier:(id)a4;
- (void)updateRangingSuspensionReasons:(unint64_t)a3 onCredential:(id)a4 forPaymentApplicationID:(id)a5;
- (void)updateRecordFetchTask:(id)a3;
- (void)updateRegistrationStatus:(unint64_t)a3 date:(id)a4 forSerialNumber:(id)a5 webService:(id)a6;
- (void)updateRegistrationStatus:(unint64_t)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5;
- (void)updateRequiresMerchantReprocessing:(BOOL)a3 forTransactionWithIdentifier:(id)a4;
- (void)updateRevocationStatus:(BOOL)a3 forUniqueID:(id)a4;
- (void)updateSettings:(unint64_t)a3 forObjectWithUniqueIdentifier:(id)a4;
- (void)updateSettings:(unint64_t)a3 forPass:(id)a4;
- (void)updateSettings:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4;
- (void)updateSingleRegion:(id)a3;
- (void)updateSpotlightIndexingVersion:(int64_t)a3;
- (void)updateSuppressBehavior:(unint64_t)a3 forPaymentTransactions:(id)a4 sourceIdentifier:(id)a5;
- (void)updateSuppressBehavior:(unint64_t)a3 forTransactionSourceIdentifier:(id)a4 serviceIdentifier:(id)a5;
- (void)updateTransactionArchive:(id)a3 forCounterpartImageData:(id)a4;
- (void)updateTransactionArchive:(id)a3 forRecurringPayment:(id)a4;
- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 balanceLabelDictionary:(id)a8 unitDictionary:(id)a9 planLabelDictionary:(id)a10 completion:(id)a11;
- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 recoverMissingTransactions:(BOOL)a8 balanceLabelDictionary:(id)a9 unitDictionary:(id)a10 planLabelDictionary:(id)a11 completion:(id)a12;
- (void)updateTransitAppletStateWithStationNames:(id)a3 forPaymentApplication:(id)a4 withPassUniqueIdentifier:(id)a5;
- (void)updateVirtualCardWithMetadata:(id)a3;
- (void)updateWebService:(id)a3;
- (void)valueAddedMerchantWasPresented:(id)a3;
@end

@implementation PDDatabaseManager

+ (BOOL)databaseExistsAtURL:(id)a3
{
  id v3 = a3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue([v3 path]);

  LOBYTE(v3) = [v4 fileExistsAtPath:v5];
  return (char)v3;
}

- (PDDatabaseManager)init
{
  return 0LL;
}

- (PDDatabaseManager)initWithURL:(id)a3
{
  return -[PDDatabaseManager initWithURL:delegate:report:](self, "initWithURL:delegate:report:", a3, 0LL, 0LL);
}

- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4
{
  return -[PDDatabaseManager initWithURL:delegate:report:](self, "initWithURL:delegate:report:", a3, a4, 0LL);
}

- (PDDatabaseManager)initWithURL:(id)a3 delegate:(id)a4 report:(id *)a5
{
  v8 = (NSURL *)a3;
  id v9 = a4;
  v25.receiver = self;
  v25.super_class = (Class)&OBJC_CLASS___PDDatabaseManager;
  result = -[PDDatabaseManager init](&v25, "init");
  if (result)
  {
    v11 = result;
    uint64_t v12 = objc_claimAutoreleasedReturnValue(+[PKSecureElement sharedSecureElement](&OBJC_CLASS___PKSecureElement, "sharedSecureElement"));
    secureElement = v11->_secureElement;
    v11->_secureElement = (PKSecureElement *)v12;

    v14 = sub_1003AF7F4((uint64_t)&OBJC_CLASS___PDObjectSettingsManager);
    uint64_t v15 = objc_claimAutoreleasedReturnValue(v14);
    objectSettingsManager = v11->_objectSettingsManager;
    v11->_objectSettingsManager = (PDObjectSettingsManager *)v15;

    databaseURL = v11->_databaseURL;
    v11->_databaseURL = v8;
    v18 = v8;

    objc_storeWeak((id *)&v11->_delegate, v9);
    dispatch_queue_t v19 = dispatch_queue_create("com.apple.passd.databasemanager.paymenttransactions", 0LL);
    paymentTransactionUpdateQueue = v11->_paymentTransactionUpdateQueue;
    v11->_paymentTransactionUpdateQueue = (OS_dispatch_queue *)v19;

    dispatch_queue_attr_t v21 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    v22 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v21);
    dispatch_queue_t v23 = dispatch_queue_create("com.apple.passd.databasemanager.delegate", v22);
    delegateQueue = v11->_delegateQueue;
    v11->_delegateQueue = (OS_dispatch_queue *)v23;

    -[PDDatabaseManager _createDatabaseAtURL:report:](v11, "_createDatabaseAtURL:report:", v18, a5);
    return v11;
  }

  else
  {
    __break(1u);
  }

  return result;
}

- (void)_createDatabaseAtURL:(id)a3 report:(id *)a4
{
  id v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  v8 = (void *)objc_claimAutoreleasedReturnValue([v6 path]);
  unsigned int v9 = [v7 fileExistsAtPath:v8];

  if (v9)
  {
    uint64_t Object = PKLogFacilityTypeGetObject(24LL);
    v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "PDDatabaseManager: loading database...",  buf,  2u);
    }

    uint64_t v12 = sub_1002CC268((sqlite3 **)objc_alloc(&OBJC_CLASS___SQLiteDatabase), v6, &v33);
    database = self->_database;
    self->_database = (SQLiteDatabase *)v12;

    if (self->_database)
    {
      if (!v33)
      {
        unint64_t v27 = -[PDDatabaseManager createSchemaInDatabase:](self, "createSchemaInDatabase:");
        char v16 = 1;
        if (!v27)
        {
          LOBYTE(v9) = 0;
          goto LABEL_15;
        }

        if (v27 == 2) {
          char v16 = 2;
        }
        uint64_t v28 = PKLogFacilityTypeGetObject(0LL);
        v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
          sub_100441C64();
        }

        -[PDDatabaseManager deleteDatabase](self, "deleteDatabase");
        LOBYTE(v9) = v16;
        goto LABEL_14;
      }

      uint64_t v14 = PKLogFacilityTypeGetObject(0LL);
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
        sub_100441C90();
      }
    }

    else
    {
      uint64_t v17 = PKLogFacilityTypeGetObject(0LL);
      v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_100441C38();
      }

      -[PDDatabaseManager deleteDatabase](self, "deleteDatabase");
    }

    LOBYTE(v9) = 1;
LABEL_14:
    char v16 = 1;
    goto LABEL_15;
  }

  char v16 = 0;
LABEL_15:
  if (self->_database)
  {
    unsigned __int8 v19 = v33;
    if (!v33)
    {
      BOOL v20 = 0;
      if (!a4) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }
  }

  uint64_t v21 = PKLogFacilityTypeGetObject(24LL);
  v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v31 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "PDDatabaseManager: creating database...",  v31,  2u);
  }

  if (self->_database
    || (dispatch_queue_t v23 = sub_1002CC258((sqlite3 **)objc_alloc(&OBJC_CLASS___SQLiteDatabase), v6),
        v24 = self->_database,
        self->_database = (SQLiteDatabase *)v23,
        v24,
        self->_database))
  {
    if (!-[PDDatabaseManager createSchemaInDatabase:](self, "createSchemaInDatabase:"))
    {
      unsigned __int8 v19 = 0;
      goto LABEL_36;
    }

    uint64_t v25 = PKLogFacilityTypeGetObject(0LL);
    v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100441C0C();
    }
  }

  else
  {
    uint64_t v30 = PKLogFacilityTypeGetObject(0LL);
    v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100441BE0();
    }
  }

  -[PDDatabaseManager deleteDatabase](self, "deleteDatabase");
  unsigned __int8 v19 = 1;
LABEL_36:
  BOOL v20 = 1;
  if (a4)
  {
LABEL_37:
    a4->var0.var0 = v16;
    a4->var0.var1.var1.var0 = v9;
    a4->var1.var0 = v20;
    a4->var1.var1.var1.var0 = v19;
  }

- (void)accessDatabaseUsingBlock:(id)a3
{
  id v4 = a3;
  database = self->_database;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10011783C;
  v7[3] = &unk_100644CC0;
  id v8 = v4;
  id v6 = v4;
  sub_1002CC920((uint64_t)database, v7);
}

- (void)performTransactionWithBlock:(id)a3
{
}

- (BOOL)passExistsWithUniqueID:(id)a3
{
  database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForUniqueID:](&OBJC_CLASS___Pass, "predicateForUniqueID:", a3));
  BOOL v5 = +[SQLiteEntity existsInDatabase:predicate:](&OBJC_CLASS___Pass, "existsInDatabase:predicate:", database, v4);

  return v5;
}

- (BOOL)passExistsWithPassTypeID:(id)a3 serialNumber:(id)a4
{
  database = self->_database;
  id v6 = a4;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPassTypeIdentifier:](&OBJC_CLASS___Pass, "predicateForPassTypeIdentifier:", a3));
  v13[0] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForSerialNumber:](&OBJC_CLASS___Pass, "predicateForSerialNumber:", v6));

  v13[1] = v8;
  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v13, 2LL));
  v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));
  BOOL v11 = +[SQLiteEntity existsInDatabase:predicate:](&OBJC_CLASS___Pass, "existsInDatabase:predicate:", database, v10);

  return v11;
}

- (BOOL)passExistsWithPassType:(unint64_t)a3
{
  database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", a3));
  BOOL v5 = +[SQLiteEntity existsInDatabase:predicate:](&OBJC_CLASS___Pass, "existsInDatabase:predicate:", database, v4);

  return v5;
}

- (BOOL)passExistsWithPaymentType:(unint64_t)a3
{
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v15[0] = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_10068FF18, &off_10068FF30, 0LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v7));
  v15[1] = v8;
  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v5));
  v15[2] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentType:](&OBJC_CLASS___Pass, "predicateForPaymentType:", a3));
  v15[3] = v10;
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v15, 4LL));

  database = self->_database;
  v13 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v11));
  LOBYTE(database) = +[SQLiteEntity existsInDatabase:predicate:]( &OBJC_CLASS___Pass,  "existsInDatabase:predicate:",  database,  v13);

  return (char)database;
}

- (unint64_t)countPassesOfType:(unint64_t)a3
{
  database = self->_database;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:"));
  if (+[SQLiteEntity countInDatabase:predicate:](&OBJC_CLASS___Pass, "countInDatabase:predicate:", database, v6) < 1)
  {
    unint64_t v9 = 0LL;
  }

  else
  {
    v7 = self->_database;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", a3));
    unint64_t v9 = +[SQLiteEntity countInDatabase:predicate:](&OBJC_CLASS___Pass, "countInDatabase:predicate:", v7, v8);
  }

  return v9;
}

- (unint64_t)countActiveSecureElementPasses
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v17[0] = v4;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_10068FF48, &off_10068FF60, 0LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v5));
  v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate negatedPredicate:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "negatedPredicate:",  v6));
  v17[1] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v3));
  v17[2] = v8;
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  v17[3] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v17, 4LL));

  database = self->_database;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));
  if (+[SQLiteEntity countDistinctInDatabase:predicate:]( &OBJC_CLASS___Pass,  "countDistinctInDatabase:predicate:",  database,  v12) < 1)
  {
    unint64_t v15 = 0LL;
  }

  else
  {
    v13 = self->_database;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));
    unint64_t v15 = +[SQLiteEntity countDistinctInDatabase:predicate:]( &OBJC_CLASS___Pass,  "countDistinctInDatabase:predicate:",  v13,  v14);
  }

  return v15;
}

- (unint64_t)numberOfPassesOfType:(id)a3
{
  id v4 = a3;
  database = self->_database;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPassTypeIdentifier:](&OBJC_CLASS___Pass, "predicateForPassTypeIdentifier:", v4));
  if (+[SQLiteEntity countInDatabase:predicate:](&OBJC_CLASS___Pass, "countInDatabase:predicate:", database, v6) < 1)
  {
    unint64_t v9 = 0LL;
  }

  else
  {
    v7 = self->_database;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPassTypeIdentifier:](&OBJC_CLASS___Pass, "predicateForPassTypeIdentifier:", v4));
    unint64_t v9 = +[SQLiteEntity countInDatabase:predicate:](&OBJC_CLASS___Pass, "countInDatabase:predicate:", v7, v8);
  }

  return v9;
}

- (unint64_t)numberOfRealPasses
{
  database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  if (+[SQLiteEntity countInDatabase:predicate:](&OBJC_CLASS___Pass, "countInDatabase:predicate:", database, v4) < 1)
  {
    unint64_t v7 = 0LL;
  }

  else
  {
    BOOL v5 = self->_database;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
    unint64_t v7 = +[SQLiteEntity countInDatabase:predicate:](&OBJC_CLASS___Pass, "countInDatabase:predicate:", v5, v6);
  }

  return v7;
}

- (id)passesWithPassTypeID:(id)a3
{
  database = self->_database;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPassTypeIdentifier:](&OBJC_CLASS___Pass, "predicateForPassTypeIdentifier:", a3));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v5));

  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v6));
  return v7;
}

- (BOOL)passExistsWithPassTypeIdentifierHash:(id)a3
{
  id v3 = self;
  database = self->_database;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPassTypeIdentifierHash:]( &OBJC_CLASS___Pass,  "predicateForPassTypeIdentifierHash:",  a3));
  v10[0] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](v3, "_validPassPredicate"));
  v10[1] = v6;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v10, 2LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));
  LOBYTE(v3) = +[SQLiteEntity existsInDatabase:predicate:]( &OBJC_CLASS___Pass,  "existsInDatabase:predicate:",  database,  v8);

  return (char)v3;
}

- (id)passesWithPassTypeIdentifierHash:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPassTypeIdentifierHash:]( &OBJC_CLASS___Pass,  "predicateForPassTypeIdentifierHash:",  a3));
  v11[0] = v4;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](self, "_validPassPredicate"));
  v11[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 2LL));
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v6));

  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v7));
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v8));

  return v9;
}

- (id)passesWithPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4
{
  if (!a3) {
    return 0LL;
  }
  BOOL v4 = a4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "pk_arrayByApplyingBlock:", &stru_100644D00));
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateWithProperty:equalToValues:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateWithProperty:equalToValues:",  @"pass_type.identifier_hash",  v6));
  v20[0] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](self, "_validPassPredicate"));
  v20[1] = v8;
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 2LL));

  database = self->_database;
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v11));

  if (v4)
  {
    uint64_t v13 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _passesFilteredByAutomaticallyPresentPassEnabled:]( self,  "_passesFilteredByAutomaticallyPresentPassEnabled:",  v12));

    uint64_t v12 = (void *)v13;
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v12));

  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"ingestedDate",  1LL));
  unsigned __int8 v19 = v15;
  char v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v19, 1LL));
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v14 sortedArrayUsingDescriptors:v16]);

  return v17;
}

- (id)passesWithPassTypeIdentifierHash:(id)a3 andAssociatedPassTypeIdentifierHash:(id)a4
{
  id v6 = a4;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPassTypeIdentifierHash:]( &OBJC_CLASS___Pass,  "predicateForPassTypeIdentifierHash:",  a3));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForAssociatedPassTypeIdentifierHash:]( &OBJC_CLASS___Pass,  "predicateForAssociatedPassTypeIdentifierHash:",  v6,  v7));

  v16[1] = v8;
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](self, "_validPassPredicate"));
  v16[2] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v16, 3LL));

  database = self->_database;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v12));

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v13));
  return v14;
}

- (id)passesEnabledForValuedAddedServicesWithAutomaticSelection:(BOOL)a3
{
  BOOL v3 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNotNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNotNullPredicateWithProperty:",  @"pass_type.identifier_hash"));
  v17[0] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](self, "_validPassPredicate"));
  v17[1] = v6;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v17, 2LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));

  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v8));
  if (v3)
  {
    uint64_t v10 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _passesFilteredByAutomaticallyPresentPassEnabled:]( self,  "_passesFilteredByAutomaticallyPresentPassEnabled:",  v9));

    unint64_t v9 = (void *)v10;
  }

  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v9));

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"ingestedDate",  1LL));
  char v16 = v12;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v16, 1LL));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v11 sortedArrayUsingDescriptors:v13]);

  return v14;
}

- (id)transitNetworksForPassesMatchingTransitType:(unint64_t)a3 expired:(unint64_t)a4
{
  return +[PaymentTransitNetworkIdentifier transitNetworksInDatabase:forPassesMatchingTransitType:expired:]( &OBJC_CLASS___PaymentTransitNetworkIdentifier,  "transitNetworksInDatabase:forPassesMatchingTransitType:expired:",  self->_database,  a3,  a4);
}

- (BOOL)passExistsForTransitNetworks:(id)a3 isTransitCard:(unint64_t)a4 expired:(unint64_t)a5
{
  return +[PaymentTransitNetworkIdentifier passExistsInDatabase:forTransitNetworks:isTransitCard:expired:]( &OBJC_CLASS___PaymentTransitNetworkIdentifier,  "passExistsInDatabase:forTransitNetworks:isTransitCard:expired:",  self->_database,  a3,  a4,  a5);
}

- (id)_passesFilteredByAutomaticallyPresentPassEnabled:(id)a3
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10011873C;
  v4[3] = &unk_10063D148;
  v4[4] = self;
  return (id)objc_claimAutoreleasedReturnValue([a3 objectsPassingTest:v4]);
}

- (BOOL)hasCandidatePasses
{
  uint64_t v11 = 0LL;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  char v14 = 0;
  BOOL v3 = objc_autoreleasePoolPush();
  unsigned __int8 v4 = -[PDDatabaseManager passExistsWithPassType:](self, "passExistsWithPassType:", 1LL);
  *((_BYTE *)v12 + 24) = v4;
  if ((v4 & 1) == 0)
  {
    database = self->_database;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 0LL));
    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passUniqueIDsInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passUniqueIDsInDatabase:matchingPredicate:",  database,  v6));

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_100118878;
    v10[3] = &unk_100644D28;
    v10[4] = self;
    v10[5] = &v11;
    [v7 enumerateObjectsUsingBlock:v10];
  }

  objc_autoreleasePoolPop(v3);
  char v8 = *((_BYTE *)v12 + 24);
  _Block_object_dispose(&v11, 8);
  return v8;
}

- (id)candidatePassesOfStyle:(int64_t)a3
{
  return -[PDDatabaseManager _candidatePassesOfStyle:matchingFurtherPredicate:]( self,  "_candidatePassesOfStyle:matchingFurtherPredicate:",  a3,  0LL);
}

- (id)locatedCandidatePassesOfStyle:(int64_t)a3
{
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _locatedPredicate](self, "_locatedPredicate"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _candidatePassesOfStyle:matchingFurtherPredicate:]( self,  "_candidatePassesOfStyle:matchingFurtherPredicate:",  a3,  v5));

  return v6;
}

- (id)unlocatedCandidatePassesOfStyle:(int64_t)a3
{
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _unlocatedPredicate](self, "_unlocatedPredicate"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _candidatePassesOfStyle:matchingFurtherPredicate:]( self,  "_candidatePassesOfStyle:matchingFurtherPredicate:",  a3,  v5));

  return v6;
}

- (id)locatedDatelessCandidatePassesOfStyle:(int64_t)a3
{
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _datedPassPredicate](self, "_datedPassPredicate"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate negatedPredicate:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "negatedPredicate:",  v5));
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _locatedCandidatePassesOfStyle:matchingFurtherPredicate:]( self,  "_locatedCandidatePassesOfStyle:matchingFurtherPredicate:",  a3,  v6));

  return v7;
}

- (id)validNFCBarcodePassUniqueIDs
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 0LL));
  v22[0] = v3;
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  v22[1] = v4;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForHasValidNFCPayload](&OBJC_CLASS___Pass, "predicateForHasValidNFCPayload"));
  v22[2] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](self, "_validPassPredicate"));
  v22[3] = v6;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForInMainStack](&OBJC_CLASS___Pass, "predicateForInMainStack"));
  v22[4] = v7;
  char v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v22, 5LL));
  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

  uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  self->_database,  v9));
  uint64_t v21 = @"unique_id";
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v21, 1LL));
  char v16 = _NSConcreteStackBlock;
  uint64_t v17 = 3221225472LL;
  v18 = sub_100118BEC;
  unsigned __int8 v19 = &unk_10063C0D0;
  uint64_t v13 = v10;
  BOOL v20 = v13;
  [v11 enumeratePersistentIDsAndProperties:v12 usingBlock:&v16];

  if (-[NSMutableSet count](v13, "count", v16, v17, v18, v19)) {
    id v14 = -[NSMutableSet copy](v13, "copy");
  }
  else {
    id v14 = 0LL;
  }

  return v14;
}

- (BOOL)hasActiveBarcodePasses
{
  v2 = self;
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 0LL));
  v11[0] = v3;
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  v11[1] = v4;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](v2, "_validPassPredicate"));
  void v11[2] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForInMainStack](&OBJC_CLASS___Pass, "predicateForInMainStack"));
  v11[3] = v6;
  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 4LL));
  char v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));

  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  v2->_database,  v8));
  LOBYTE(v2) = (uint64_t)[v9 countOfEntities] > 0;

  return (char)v2;
}

- (BOOL)hasActiveSecureElementPasses
{
  database = self->_database;
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _activeSecureElementPassPredicate](self, "_activeSecureElementPassPredicate"));
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v3));

  LOBYTE(database) = (uint64_t)[v4 countOfEntities] > 0;
  return (char)database;
}

- (BOOL)hasActiveContactlessSecureElementPasses
{
  v2 = self;
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _activeSecureElementPassPredicate](self, "_activeSecureElementPassPredicate"));
  v9[0] = v3;
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSupportsContactlessPayment:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSupportsContactlessPayment:",  1LL));
  v9[1] = v4;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v9, 2LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v5));

  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  v2->_database,  v6));
  LOBYTE(v2) = (uint64_t)[v7 countOfEntities] > 0;

  return (char)v2;
}

- (id)locationsByUniqueIDInBoundingBoxOfRegion:(id)a3
{
  id v4 = a3;
  double v5 = PDBoundingBoxForRegion();
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  uint64_t Object = PKLogFacilityTypeGetObject(3LL);
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 138412290;
    double v17 = *(double *)&v4;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Searching for pass locations in region: %@",  (uint8_t *)&v16,  0xCu);
  }

  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 134218752;
    double v17 = v5;
    __int16 v18 = 2048;
    double v19 = v7;
    __int16 v20 = 2048;
    double v21 = v9;
    __int16 v22 = 2048;
    double v23 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Bounding box: {%f, %f, %f, %f}",  (uint8_t *)&v16,  0x2Au);
  }

  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[LocationIndex locationsByPassUniqueIDWithBoundingBox:inDatabase:]( &OBJC_CLASS___LocationIndex,  "locationsByPassUniqueIDWithBoundingBox:inDatabase:",  self->_database,  v5,  v7,  v9,  v11));
  return v14;
}

- (id)passes
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  0LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v3));

  return v4;
}

- (id)passesForWebService:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a3));
  double v5 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForWebService:](&OBJC_CLASS___Pass, "predicateForWebService:", v4));
  double v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v5));
  double v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v6));

  return v7;
}

- (id)passWithUniqueIdentifier:(id)a3
{
  if (a3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
    double v5 = (void *)objc_claimAutoreleasedReturnValue([v4 pass]);

    double v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v5));
  }

  else
  {
    double v6 = 0LL;
  }

  return v6;
}

- (id)passWithPassTypeID:(id)a3 serialNumber:(id)a4
{
  database = self->_database;
  id v7 = a4;
  double v8 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  database,  a3));
  double v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withPassType:serialNumber:]( &OBJC_CLASS___Pass,  "anyInDatabase:withPassType:serialNumber:",  self->_database,  v8,  v7));

  double v10 = (void *)objc_claimAutoreleasedReturnValue([v9 pass]);
  double v11 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v10));

  return v11;
}

- (id)passesOfType:(unint64_t)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", a3));
  double v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v4));
  double v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v5));

  return v6;
}

- (id)passesOfStyles:(unint64_t)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForStyles:](self, "_predicateForStyles:", a3));
  double v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v4));
  double v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v5));

  return v6;
}

- (id)passStyles
{
  return +[Pass passStylesInDatabase:](&OBJC_CLASS___Pass, "passStylesInDatabase:", self->_database);
}

- (id)unexpiredPassStyles
{
  return +[Pass unexpiredPassStylesInDatabase:](&OBJC_CLASS___Pass, "unexpiredPassStylesInDatabase:", self->_database);
}

- (id)secureElementCardTypes
{
  return +[Pass secureElementCardTypesInDatabase:]( &OBJC_CLASS___Pass,  "secureElementCardTypesInDatabase:",  self->_database);
}

- (id)unexpiredSecureElementCardTypes
{
  return +[Pass unexpiredSecureElementCardTypesInDatabase:]( &OBJC_CLASS___Pass,  "unexpiredSecureElementCardTypesInDatabase:",  self->_database);
}

- (id)passesForPaymentType:(unint64_t)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", a3));
  double v8 = v4;
  double v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v8, 1LL));
  double v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passesForPaymentTypes:](self, "passesForPaymentTypes:", v5));

  return v6;
}

- (id)passesForPaymentTypes:(id)a3
{
  secureElement = self->_secureElement;
  id v5 = a3;
  __int16 v18 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](secureElement, "secureElementIdentifiers"));
  double v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "pk_arrayByApplyingBlock:", &stru_100644D68));

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v19[0] = v7;
  double v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_10068FF18, &off_10068FF30, 0LL));
  double v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v8));
  v19[1] = v9;
  double v10 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v18));
  v19[2] = v10;
  double v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v6));
  v19[3] = v11;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v19, 4LL));

  database = self->_database;
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v12));
  unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v14));

  int v16 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v15));
  return v16;
}

- (id)passUniqueIDs
{
  return +[Pass passUniqueIDsInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passUniqueIDsInDatabase:matchingPredicate:",  self->_database,  0LL);
}

- (id)passUniqueIDsOfType:(unint64_t)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passUniqueIDsInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passUniqueIDsInDatabase:matchingPredicate:",  self->_database,  v4));

  return v5;
}

- (id)syncablePassUniqueIDs
{
  database = self->_database;
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteBooleanPredicate truePredicate](&OBJC_CLASS___SQLiteBooleanPredicate, "truePredicate"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v3));

  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  v15[0] = @"unique_id";
  v15[1] = @"pass_flavor";
  v15[2] = @"template";
  v15[3] = @"pass_type.identifier";
  double v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v15, 4LL));
  double v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472LL;
  uint64_t v12 = sub_1001197B0;
  uint64_t v13 = &unk_10063C0D0;
  id v14 = v5;
  id v7 = v5;
  [v4 enumeratePersistentIDsAndProperties:v6 usingBlock:&v10];

  id v8 = -[NSMutableSet copy](v7, "copy", v10, v11, v12, v13);
  return v8;
}

- (id)deviceSecureElementPassUniqueIDs
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v11[0] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v3));
  v11[1] = v5;
  double v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 2LL));

  database = self->_database;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v6));
  double v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passUniqueIDsInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passUniqueIDsInDatabase:matchingPredicate:",  database,  v8));

  return v9;
}

- (id)paymentPassesPendingActivation
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v15[0] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPrimaryPaymentApplication:]( &OBJC_CLASS___Pass,  "predicateForPrimaryPaymentApplication:",  1LL));
  v15[1] = v5;
  double v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v3));
  v15[2] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_10068FF78, &off_10068FF90, 0LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v7));
  v15[3] = v8;
  double v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v15, 4LL));

  database = self->_database;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v11));

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v12));
  return v13;
}

- (id)passWithProvisioningCredentialHash:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withProvisioningCredentialHash:]( &OBJC_CLASS___Pass,  "anyInDatabase:withProvisioningCredentialHash:",  self->_database,  a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 pass]);

  double v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v5));
  return v6;
}

- (id)contactlessAccessPaymentPassesWithTCI:(id)a3 readerId:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (v6)
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
    v28[0] = v24;
    double v23 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSupportsContactlessPayment:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSupportsContactlessPayment:",  1LL));
    v28[1] = v23;
    __int16 v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  &off_10068FF18,  &off_10068FF30,  0LL));
    double v21 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:"));
    v28[2] = v21;
    uint64_t v25 = (void *)v8;
    double v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v8));
    v28[3] = v9;
    double v10 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentCardType:](&OBJC_CLASS___Pass, "predicateForPaymentCardType:", 3LL));
    v28[4] = v10;
    id v27 = v6;
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v27, 1LL));
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForTCIs:](&OBJC_CLASS___Pass, "predicateForTCIs:", v11));
    v28[5] = v12;
    if (v7)
    {
      id v26 = v7;
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v26, 1LL));
    }

    else
    {
      uint64_t v13 = 0LL;
    }

    unint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForReaderIds:](&OBJC_CLASS___Pass, "predicateForReaderIds:", v13));
    v28[6] = v15;
    int v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v28, 7LL));

    if (v7) {
    database = self->_database;
    }
    __int16 v18 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v16));
    double v19 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v18));

    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v19));
  }

  else
  {
    id v14 = 0LL;
  }

  return v14;
}

- (id)paymentPassesEligibleForDefaultCardSelection
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  &off_10068FF18,  &off_10068FF30,  &off_10068FFA8,  0LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v16[0] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSupportsContactlessPayment:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSupportsContactlessPayment:",  1LL));
  v16[1] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v4));
  v16[2] = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v3));
  void v16[3] = v8;
  double v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForSupportsDefaultCardSelection:]( &OBJC_CLASS___Pass,  "predicateForSupportsDefaultCardSelection:",  1LL));
  v16[4] = v9;
  double v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v16, 5LL));

  database = self->_database;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v12));

  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v13));
  return v14;
}

- (BOOL)peerPaymentPassShouldNotBeAcceptedForAccount:(id)a3
{
  return a3 && (char *)[a3 state] - 3 < (char *)2;
}

- (id)passesForInAppPaymentOnNetworks:(id)a3 issuerCountryCodes:(id)a4 paymentApplicationStates:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8
{
  BOOL v67 = a7;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a8;
  uint64_t v17 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _paymentNetworkIdentifiersForPaymentNetworks:]( self,  "_paymentNetworkIdentifiersForPaymentNetworks:",  a3));
  v62 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  if (![v14 count])
  {
    uint64_t v18 = objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_10068FF18, &off_10068FF30, 0LL));

    id v14 = (id)v18;
  }

  v59 = v14;
  uint64_t v19 = objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v14));
  __int16 v20 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v62));
  double v21 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSupportsInAppPayment:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSupportsInAppPayment:",  1LL));
  v56 = (void *)v17;
  __int16 v22 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationNetworks:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationNetworks:",  v17));
  v55 = (void *)v19;
  double v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableArray arrayWithObjects:]( &OBJC_CLASS___NSMutableArray,  "arrayWithObjects:",  v19,  v20,  v21,  v22,  0LL));

  if ([v13 count])
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForIssuerCountryCodes:](&OBJC_CLASS___Pass, "predicateForIssuerCountryCodes:", v13));
    [v23 addObject:v24];
  }

  database = self->_database;
  id v26 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v23));
  id v27 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v26));

  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v27));
  v29 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  v66 = (void *)objc_claimAutoreleasedReturnValue([v29 associatedPassUniqueID]);
  v61 = v29;
  unsigned int v30 = -[PDDatabaseManager peerPaymentPassShouldNotBeAcceptedForAccount:]( self,  "peerPaymentPassShouldNotBeAcceptedForAccount:",  v29);
  v31 = (void *)objc_claimAutoreleasedReturnValue([v16 targetDevice]);
  v32 = (void *)objc_claimAutoreleasedReturnValue([v31 paymentWebService:v16 supportedRegionFeatureOfType:4]);

  v53 = v32;
  v68 = (void *)objc_claimAutoreleasedReturnValue([v32 supportedNetworks]);
  v60 = v13;
  v57 = v16;
  v58 = v15;
  v54 = v23;
  if (v15)
  {
    unsigned int v33 = [v15 intValue];
    v34 = objc_opt_new(&OBJC_CLASS___NSSet);
    v35 = v34;
    if (v33 == 10)
    {
      v36 = (void *)objc_claimAutoreleasedReturnValue( +[PKWebServiceDisbursementFeature disbursementFeatureWithWebService:]( &OBJC_CLASS___PKWebServiceDisbursementFeature,  "disbursementFeatureWithWebService:",  v16));
      uint64_t v37 = objc_claimAutoreleasedReturnValue([v36 supportedNetworks]);

      int v65 = 1;
      v63 = (NSSet *)v37;
      goto LABEL_11;
    }

    v63 = v34;
  }

  else
  {
    v63 = objc_opt_new(&OBJC_CLASS___NSSet);
  }

  int v65 = 0;
LABEL_11:
  v64 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v73 = 0u;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  id v38 = v28;
  id v39 = [v38 countByEnumeratingWithState:&v73 objects:v77 count:16];
  if (v39)
  {
    id v40 = v39;
    uint64_t v41 = *(void *)v74;
    if (v61) {
      unsigned int v42 = v30;
    }
    else {
      unsigned int v42 = 0;
    }
    if (v66) {
      unsigned int v43 = v42;
    }
    else {
      unsigned int v43 = 0;
    }
    do
    {
      for (i = 0LL; i != v40; i = (char *)i + 1)
      {
        if (*(void *)v74 != v41) {
          objc_enumerationMutation(v38);
        }
        v45 = *(void **)(*((void *)&v73 + 1) + 8LL * (void)i);
        if (v43)
        {
          v46 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v73 + 1) + 8 * (void)i) uniqueID]);
          unsigned __int8 v47 = [v46 isEqualToString:v66];

          if ((v47 & 1) != 0) {
            continue;
          }
        }

        v48 = (void *)objc_claimAutoreleasedReturnValue([v45 paymentApplications]);
        v71[0] = _NSConcreteStackBlock;
        v71[1] = 3221225472LL;
        v71[2] = sub_10011A528;
        v71[3] = &unk_100644D90;
        id v72 = v68;
        v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v48, "pk_anyObjectPassingTest:", v71));

        if (!v67 || v49)
        {
          if (!v65) {
            goto LABEL_27;
          }
          v50 = (void *)objc_claimAutoreleasedReturnValue([v45 paymentApplications]);
          v69[0] = _NSConcreteStackBlock;
          v69[1] = 3221225472LL;
          v69[2] = sub_10011A534;
          v69[3] = &unk_100644D90;
          v70 = v63;
          v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v50, "pk_anyObjectPassingTest:", v69));

          if (v51) {
LABEL_27:
          }
            -[NSMutableSet addObject:](v64, "addObject:", v45);
        }
      }

      id v40 = [v38 countByEnumeratingWithState:&v73 objects:v77 count:16];
    }

    while (v40);
  }

  return v64;
}

- (id)paymentPassesWithIssuerCountryCodes:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_10068FF18, &off_10068FF30, 0LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v6));
  v32 = (void *)v5;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v5));
  double v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSupportsInAppPayment:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSupportsInAppPayment:",  1LL));
  unsigned int v33 = v4;
  double v10 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForIssuerCountryCodes:](&OBJC_CLASS___Pass, "predicateForIssuerCountryCodes:", v4));
  uint64_t v11 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](&OBJC_CLASS___NSArray, "arrayWithObjects:", v7, v8, v9, v10, 0LL));

  database = self->_database;
  v31 = (void *)v11;
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v11));
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v13));

  id v15 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v14));
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 associatedPassUniqueID]);
  v34 = v16;
  unsigned int v18 = -[PDDatabaseManager peerPaymentPassShouldNotBeAcceptedForAccount:]( self,  "peerPaymentPassShouldNotBeAcceptedForAccount:",  v16);
  uint64_t v19 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  id v20 = v15;
  id v21 = [v20 countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = *(void *)v36;
    if (v16) {
      unsigned int v24 = v18;
    }
    else {
      unsigned int v24 = 0;
    }
    if (v17) {
      unsigned int v25 = v24;
    }
    else {
      unsigned int v25 = 0;
    }
    do
    {
      for (i = 0LL; i != v22; i = (char *)i + 1)
      {
        if (*(void *)v36 != v23) {
          objc_enumerationMutation(v20);
        }
        uint64_t v27 = *(void *)(*((void *)&v35 + 1) + 8LL * (void)i);
        if (v25)
        {
          uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v35 + 1) + 8 * (void)i) uniqueID]);
          unsigned __int8 v29 = [v28 isEqualToString:v17];

          if ((v29 & 1) != 0) {
            continue;
          }
        }

        -[NSMutableSet addObject:](v19, "addObject:", v27);
      }

      id v22 = [v20 countByEnumeratingWithState:&v35 objects:v39 count:16];
    }

    while (v22);
  }

  return v19;
}

- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentApplicationStates:(id)a6 paymentRequestType:(id)a7 isMultiTokensRequest:(BOOL)a8 webService:(id)a9
{
  BOOL v9 = a8;
  id v15 = a3;
  id v16 = a5;
  id v17 = a6;
  id v18 = a7;
  id v19 = a9;
  v49 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v20 = -[NSMutableSet initWithSet:](objc_alloc(&OBJC_CLASS___NSMutableSet), "initWithSet:", v15);
  -[NSMutableSet removeObject:](v20, "removeObject:", PKPaymentNetworkPrivateLabel);
  unsigned int v43 = v20;
  unsigned __int8 v47 = v16;
  id v21 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passesForInAppPaymentOnNetworks:issuerCountryCodes:paymentApplicationStates:paymentRequestType:isMultiTokensRequest:webService:]( self,  "passesForInAppPaymentOnNetworks:issuerCountryCodes:paymentApplicationStates:paymentRequestType:isMul tiTokensRequest:webService:",  v20,  v16,  v17,  v18,  v9,  v19));
  v48 = v15;
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v15 allObjects]);
  uint64_t v23 = PKPaymentCredentialTypesForPaymentNetworkNames();
  unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  v44 = v19;
  v45 = v18;
  LOBYTE(v42) = v9;
  v46 = v17;
  unsigned int v25 = (void *)objc_claimAutoreleasedReturnValue( +[PKPaymentRequestSupportedQuery inAppQueryWithSupportedNetworkIDs:merchantCapabilities:merchantCountryCode:paymentMode:paymentApplicationStates:paymentRequestType:isMultiTokensRequest:webService:]( &OBJC_CLASS___PKPaymentRequestSupportedQuery,  "inAppQueryWithSupportedNetworkIDs:merchantCapabilities:merchantCountryCode:paymentMode:paymentApplic ationStates:paymentRequestType:isMultiTokensRequest:webService:",  v24,  a4,  0LL,  1LL,  v17,  v18,  v42,  v19));

  __int128 v56 = 0u;
  __int128 v57 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  id v26 = v21;
  id v27 = [v26 countByEnumeratingWithState:&v54 objects:v63 count:16];
  if (v27)
  {
    id v28 = v27;
    uint64_t v29 = *(void *)v55;
    do
    {
      for (i = 0LL; i != v28; i = (char *)i + 1)
      {
        if (*(void *)v55 != v29) {
          objc_enumerationMutation(v26);
        }
        v31 = *(void **)(*((void *)&v54 + 1) + 8LL * (void)i);
        __int128 v50 = 0u;
        __int128 v51 = 0u;
        __int128 v52 = 0u;
        __int128 v53 = 0u;
        v32 = (void *)objc_claimAutoreleasedReturnValue([v31 deviceInAppPaymentApplications]);
        id v33 = [v32 countByEnumeratingWithState:&v50 objects:v62 count:16];
        if (v33)
        {
          id v34 = v33;
          uint64_t v35 = *(void *)v51;
          while (2)
          {
            for (j = 0LL; j != v34; j = (char *)j + 1)
            {
              if (*(void *)v51 != v35) {
                objc_enumerationMutation(v32);
              }
              if ([*(id *)(*((void *)&v50 + 1) + 8 * (void)j) canProcessPayment:v25])
              {
                -[NSMutableSet addObject:](v49, "addObject:", v31);
                goto LABEL_16;
              }
            }

            id v34 = [v32 countByEnumeratingWithState:&v50 objects:v62 count:16];
            if (v34) {
              continue;
            }
            break;
          }
        }

- (id)transitPasses
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _transitPredicate](self, "_transitPredicate"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v3));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v4));

  return v5;
}

- (id)passesSupportingIssuerBinding
{
  database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForSupportsIssuerBinding:]( &OBJC_CLASS___Pass,  "predicateForSupportsIssuerBinding:",  1LL));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v4));

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v5));
  return v6;
}

- (BOOL)hasPassesWithPayloadState:(unint64_t)a3
{
  database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForNFCPayloadState:](&OBJC_CLASS___Pass, "predicateForNFCPayloadState:", a3));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v4));

  LOBYTE(database) = (uint64_t)[v5 countOfEntities] > 0;
  return (char)database;
}

- (id)passesSupportingIssuerBindingWithPayloadState:(unint64_t)a3
{
  database = self->_database;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForNFCPayloadState:](&OBJC_CLASS___Pass, "predicateForNFCPayloadState:", a3));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v5));

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v6));
  return v7;
}

- (BOOL)hasSecureElementPassesOfType:(int64_t)a3
{
  if ((unint64_t)a3 > 4)
  {
    uint64_t v5 = 0LL;
  }

  else
  {
    if (a3 == 2) {
      uint64_t v4 = objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _transitPredicate](self, "_transitPredicate"));
    }
    else {
      uint64_t v4 = objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentCardType:](&OBJC_CLASS___Pass, "predicateForPaymentCardType:"));
    }
    uint64_t v5 = (void *)v4;
  }

  BOOL v6 = +[SQLiteEntity countInDatabase:predicate:](&OBJC_CLASS___Pass, "countInDatabase:predicate:", self->_database, v5) > 0;

  return v6;
}

- (BOOL)hasSecureElementPassesWithFeatureIdentifier:(unint64_t)a3
{
  uint64_t v7 = 0LL;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000LL;
  char v10 = 0;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passesOfType:](self, "passesOfType:", 1LL));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10011AED0;
  v6[3] = &unk_100644DB8;
  v6[4] = &v7;
  v6[5] = a3;
  [v4 enumerateObjectsUsingBlock:v6];
  LOBYTE(a3) = *((_BYTE *)v8 + 24);

  _Block_object_dispose(&v7, 8);
  return a3;
}

- (unint64_t)countPassesPreventingWalletDeletion
{
  uint64_t v6 = 0LL;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000LL;
  uint64_t v9 = 0LL;
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passesOfType:](self, "passesOfType:", 1LL));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10011AFFC;
  v5[3] = &unk_100644DE0;
  v5[4] = &v6;
  [v2 enumerateObjectsUsingBlock:v5];
  unint64_t v3 = v7[3];

  _Block_object_dispose(&v6, 8);
  return v3;
}

- (BOOL)passExistsForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 paymentApplicationStates:(id)a5
{
  char v5 = a4;
  id v8 = a5;
  uint64_t v9 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _paymentNetworkIdentifiersForPaymentNetworks:]( self,  "_paymentNetworkIdentifiersForPaymentNetworks:",  a3));
  uint64_t v10 = objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  if (![v8 count])
  {
    uint64_t v11 = objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_10068FF18, &off_10068FF30, 0LL));

    id v8 = (id)v11;
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[PaymentApplication predicateForStates:](&OBJC_CLASS___PaymentApplication, "predicateForStates:", v8));
  uint64_t v29 = (void *)v10;
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForSecureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "predicateForSecureElementIdentifiers:",  v10));
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForSupportsInAppPayment:]( &OBJC_CLASS___PaymentApplication,  "predicateForSupportsInAppPayment:",  1LL));
  unsigned int v30 = (void *)v9;
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForNetworks:]( &OBJC_CLASS___PaymentApplication,  "predicateForNetworks:",  v9));
  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableArray arrayWithObjects:]( &OBJC_CLASS___NSMutableArray,  "arrayWithObjects:",  v12,  v13,  v14,  v15,  0LL));

  id v17 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 associatedPassUniqueID]);
  unsigned int v19 = -[PDDatabaseManager peerPaymentPassShouldNotBeAcceptedForAccount:]( self,  "peerPaymentPassShouldNotBeAcceptedForAccount:",  v17);
  if (v17 && v19 && v18)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentApplication,  "predicateForPassWithUniqueIdentifier:",  v18));
    id v21 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate negatedPredicate:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "negatedPredicate:",  v20));
    [v16 addObject:v21];
  }

  id v22 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t v23 = v22;
  if ((v5 & 0x1C) != 0 && (v5 & 0x1C) != 0x1CLL)
  {
    if ((v5 & 4) != 0)
    {
      -[NSMutableArray addObject:](v22, "addObject:", &off_10068FFC0);
      if ((v5 & 8) == 0)
      {
LABEL_11:
        if ((v5 & 0x10) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }

    else if ((v5 & 8) == 0)
    {
      goto LABEL_11;
    }

    -[NSMutableArray addObject:](v23, "addObject:", &off_10068FFD8);
    if ((v5 & 0x10) != 0) {
LABEL_12:
    }
      -[NSMutableArray addObject:](v23, "addObject:", &off_10068FFF0);
  }

- (id)passesForNonWebInAppPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 issuerCountryCodes:(id)a5 paymentRequestType:(id)a6 isMultiTokensRequest:(BOOL)a7 webService:(id)a8
{
  return -[PDDatabaseManager passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:paymentApplicationStates:paymentRequestType:isMultiTokensRequest:webService:]( self,  "passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:paymentApplicationStates:paymentReq uestType:isMultiTokensRequest:webService:",  a3,  a4,  a5,  0LL,  a6,  a7,  a8);
}

- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 paymentApplicationStates:(id)a7 isMultiTokensRequest:(BOOL)a8
{
  BOOL v8 = a8;
  id v14 = a3;
  id v15 = a5;
  id v16 = a6;
  id v17 = a7;
  v45 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v18 = -[NSMutableSet initWithSet:](objc_alloc(&OBJC_CLASS___NSMutableSet), "initWithSet:", v14);
  -[NSMutableSet removeObject:](v18, "removeObject:", PKPaymentNetworkPrivateLabel);
  id v40 = v18;
  uint64_t v42 = v16;
  unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passesForInAppPaymentOnNetworks:issuerCountryCodes:paymentApplicationStates:paymentRequestType:isMultiTokensRequest:webService:]( self,  "passesForInAppPaymentOnNetworks:issuerCountryCodes:paymentApplicationStates:paymentRequestType:isMul tiTokensRequest:webService:",  v18,  v16,  v17,  0LL,  v8,  v15));
  v44 = v14;
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v14 allObjects]);
  uint64_t v21 = PKPaymentCredentialTypesForPaymentNetworkNames();
  id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
  unsigned int v43 = v15;
  uint64_t v41 = v17;
  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( +[PKPaymentRequestSupportedQuery webQueryWithSupportedNetworkIDs:merchantCapabilities:merchantCountryCode:paymentMode:paymentApplicationStates:isMultiTokensRequest:webService:]( &OBJC_CLASS___PKPaymentRequestSupportedQuery,  "webQueryWithSupportedNetworkIDs:merchantCapabilities:merchantCountryCode:paymentMode:paymentApplicat ionStates:isMultiTokensRequest:webService:",  v22,  a4,  0LL,  1LL,  v17,  v8,  v15));

  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  id v24 = v19;
  id v25 = [v24 countByEnumeratingWithState:&v50 objects:v59 count:16];
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = *(void *)v51;
    do
    {
      for (i = 0LL; i != v26; i = (char *)i + 1)
      {
        if (*(void *)v51 != v27) {
          objc_enumerationMutation(v24);
        }
        uint64_t v29 = *(void **)(*((void *)&v50 + 1) + 8LL * (void)i);
        __int128 v46 = 0u;
        __int128 v47 = 0u;
        __int128 v48 = 0u;
        __int128 v49 = 0u;
        unsigned int v30 = (void *)objc_claimAutoreleasedReturnValue([v29 deviceInAppPaymentApplications]);
        id v31 = [v30 countByEnumeratingWithState:&v46 objects:v58 count:16];
        if (v31)
        {
          id v32 = v31;
          uint64_t v33 = *(void *)v47;
          while (2)
          {
            for (j = 0LL; j != v32; j = (char *)j + 1)
            {
              if (*(void *)v47 != v33) {
                objc_enumerationMutation(v30);
              }
              if ([*(id *)(*((void *)&v46 + 1) + 8 * (void)j) canProcessPayment:v23])
              {
                -[NSMutableSet addObject:](v45, "addObject:", v29);
                goto LABEL_16;
              }
            }

            id v32 = [v30 countByEnumeratingWithState:&v46 objects:v58 count:16];
            if (v32) {
              continue;
            }
            break;
          }
        }

- (id)passesForWebPaymentOnNetworks:(id)a3 withCapabilities:(unint64_t)a4 webService:(id)a5 issuerCountryCodes:(id)a6 isMultiTokensRequest:(BOOL)a7
{
  return -[PDDatabaseManager passesForWebPaymentOnNetworks:withCapabilities:webService:issuerCountryCodes:paymentApplicationStates:isMultiTokensRequest:]( self,  "passesForWebPaymentOnNetworks:withCapabilities:webService:issuerCountryCodes:paymentApplicationStates:isMultiTokensRequest:",  a3,  a4,  a5,  a6,  0LL,  a7);
}

- (id)paymentPassesWithAssociatedPassTypeIdentifierHashes:(id)a3 automaticSelectionOnly:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "pk_arrayByApplyingBlock:", &stru_100644E00));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateWithProperty:equalToValues:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateWithProperty:equalToValues:",  @"associated_pass_type_identifier.identifier_hash",  v6));
  v20[0] = v7;
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v20[1] = v8;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 2LL));

  database = self->_database;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v11));

  if (v4)
  {
    uint64_t v13 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _passesFilteredByAutomaticallyPresentPassEnabled:]( self,  "_passesFilteredByAutomaticallyPresentPassEnabled:",  v12));

    uint64_t v12 = (void *)v13;
  }

  id v14 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v12));

  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"ingestedDate",  1LL));
  unsigned int v19 = v15;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v19, 1LL));
  id v17 = (void *)objc_claimAutoreleasedReturnValue([v14 sortedArrayUsingDescriptors:v16]);

  return v17;
}

- (id)_passWithPaymentApplication:(id)a3
{
  id v4 = a3;
  char v5 = (void *)objc_claimAutoreleasedReturnValue([v4 applicationIdentifier]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 secureElementIdentifier]);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _passWithApplicationIdentifier:secureElementIdentifier:]( self,  "_passWithApplicationIdentifier:secureElementIdentifier:",  v5,  v6));
  return v7;
}

- (id)_passWithApplicationIdentifier:(id)a3 secureElementIdentifier:(id)a4
{
  return +[Pass anyInDatabase:withApplicationIdentifier:secureElementIdentifier:]( &OBJC_CLASS___Pass,  "anyInDatabase:withApplicationIdentifier:secureElementIdentifier:",  self->_database,  a3,  a4);
}

- (id)passWithPaymentApplication:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _passWithPaymentApplication:](self, "_passWithPaymentApplication:", a3));
  char v5 = (void *)objc_claimAutoreleasedReturnValue([v4 pass]);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v5));
  return v6;
}

- (id)passWithPaymentApplicationIdentifier:(id)a3
{
  database = self->_database;
  secureElement = self->_secureElement;
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](secureElement, "secureElementIdentifiers"));
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___Pass,  "anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:",  database,  v6,  v7));

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 pass]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v9));

  return v10;
}

- (id)passWithPaymentApplicationIdentifier:(id)a3 secureElementIdentifiers:(id)a4
{
  char v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___Pass,  "anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:",  self->_database,  a3,  a4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 pass]);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v6));
  return v7;
}

- (id)passUniqueIdentifierWithPaymentApplication:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _passWithPaymentApplication:](self, "_passWithPaymentApplication:", a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueID]);

  return v4;
}

- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3
{
  database = self->_database;
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](secureElement, "secureElementIdentifiers"));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___Pass,  "anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:",  database,  v5,  v6));

  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue([v7 uniqueID]);
  return v8;
}

- (id)passWithPrimaryAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withPrimaryAccountIdentifier:]( &OBJC_CLASS___Pass,  "anyInDatabase:withPrimaryAccountIdentifier:",  self->_database,  a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 pass]);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v5));
  return v6;
}

- (id)passUniqueIdentifierWithPrimaryAccountIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withPrimaryAccountIdentifier:]( &OBJC_CLASS___Pass,  "anyInDatabase:withPrimaryAccountIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueID]);

  return v4;
}

- (id)passUniqueIdentifierWithCredentialIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = v4;
  if (v4)
  {
    uint64_t v12 = 0LL;
    uint64_t v13 = &v12;
    uint64_t v14 = 0x3032000000LL;
    id v15 = sub_10011BCF0;
    id v16 = sub_10011BD00;
    id v17 = 0LL;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_10011BD08;
    v8[3] = &unk_100644E28;
    id v9 = v4;
    uint64_t v10 = self;
    uint64_t v11 = &v12;
    -[PDDatabaseManager performTransactionWithBlock:](self, "performTransactionWithBlock:", v8);
    id v6 = (id)v13[5];

    _Block_object_dispose(&v12, 8);
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

- (id)passUniqueIdentifierWithAssociatedAccountIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withAssociatedAccountIdentifier:]( &OBJC_CLASS___Pass,  "anyInDatabase:withAssociatedAccountIdentifier:",  self->_database,  a3));
  id v4 = v3;
  if (v3) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueID]);
  }
  else {
    id v5 = 0LL;
  }

  return v5;
}

- (id)associatedAccountIdentifierForPassWithUniqueIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  id v4 = v3;
  if (v3) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 associatedAccountIdentifier]);
  }
  else {
    id v5 = 0LL;
  }

  return v5;
}

- (id)previousAccountIdentifierForAccountIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 previousAccountIdentifiers]);

  return v4;
}

- (id)accountIdentifierWithPreviousAccountIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withPreviousAccountIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withPreviousAccountIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 accountIdentifier]);

  return v4;
}

- (id)primaryAccountIdentifierForAssociatedAccountIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withAssociatedAccountIdentifier:]( &OBJC_CLASS___Pass,  "anyInDatabase:withAssociatedAccountIdentifier:",  self->_database,  a3));
  id v4 = v3;
  if (v3) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 primaryAccountIdentifier]);
  }
  else {
    id v5 = 0LL;
  }

  return v5;
}

- (void)syncTransactionsToCloudStoreOriginatedOnDevice:(unint64_t)a3
{
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passesOfType:](self, "passesOfType:", 1LL));
  id v4 = [obj countByEnumeratingWithState:&v25 objects:v35 count:16];
  if (v4)
  {
    id v6 = v4;
    uint64_t v7 = *(void *)v26;
    *(void *)&__int128 v5 = 134218498LL;
    __int128 v22 = v5;
    do
    {
      for (i = 0LL; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v26 != v7) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "uniqueID", v22));
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 deviceTransactionSourceIdentifiers]);
        uint64_t v12 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
        if (a3 <= 1)
        {
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction paymentTransactionsInDatabase:originatedOnDevice:forTransactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:originatedOnDevice:forTransactionSourceIdentifiers:",  self->_database,  1LL,  v11));
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 allObjects]);
          -[NSMutableSet addObjectsFromArray:](v12, "addObjectsFromArray:", v14);
        }

        if ((a3 & 0xFFFFFFFFFFFFFFFDLL) == 0)
        {
          id v15 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction paymentTransactionsInDatabase:originatedOnDevice:forTransactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:originatedOnDevice:forTransactionSourceIdentifiers:",  self->_database,  0LL,  v11));
          id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 allObjects]);
          -[NSMutableSet addObjectsFromArray:](v12, "addObjectsFromArray:", v16);
        }

        uint64_t Object = PKLogFacilityTypeGetObject(9LL);
        id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          id v19 = -[NSMutableSet count](v12, "count");
          *(_DWORD *)buf = v22;
          id v30 = v19;
          __int16 v31 = 2114;
          id v32 = v10;
          __int16 v33 = 2112;
          id v34 = v12;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Syncing %ld transactions for pass uniqueID: %{public}@. Transactions: %@",  buf,  0x20u);
        }

        if (-[NSMutableSet count](v12, "count"))
        {
          id v20 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableSet allObjects](v12, "allObjects"));
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v11 anyObject]);
          -[PDDatabaseManager _updateCloudStoreWithTransactions:transactionSourceIdentifier:]( self,  "_updateCloudStoreWithTransactions:transactionSourceIdentifier:",  v20,  v21);
        }
      }

      id v6 = [obj countByEnumeratingWithState:&v25 objects:v35 count:16];
    }

    while (v6);
  }
}

- (void)getCatalog:(id *)a3 passes:(id *)a4 dbStates:(id *)a5 ofPassTypes:(unint64_t)a6 limitResults:(BOOL)a7
{
  BOOL v7 = a7;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager effectiveCatalog](self, "effectiveCatalog"));
  id v20 = 0LL;
  if (v7)
  {
    -[PDDatabaseManager _trimCatalog:andBuildPassPredicate:](self, "_trimCatalog:andBuildPassPredicate:", v13, &v20);
    id v14 = v20;
  }

  else if (a6)
  {
    id v14 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForPassTypes:](self, "_predicateForPassTypes:", a6));
    id v20 = v14;
  }

  else
  {
    id v14 = 0LL;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:states:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:states:matchingPredicate:",  self->_database,  a5,  v14));
  id v16 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v15));
  id v17 = *a4;
  *a4 = v16;

  id v18 = *a3;
  *a3 = v13;
  id v19 = v13;
}

- (void)_trimCatalog:(id)a3 andBuildPassPredicate:(id *)a4
{
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue([a3 groups]);
  unint64_t v6 = (unint64_t)[v5 count] - 1;
  if (v6 > 3) {
    unint64_t v7 = 1LL;
  }
  else {
    unint64_t v7 = qword_1004D6A00[v6];
  }
  if ((unint64_t)[v5 count] >= 9)
  {
    do
      [v5 removeLastObject];
    while ((unint64_t)[v5 count] > 8);
  }

  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v9 = v5;
  id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v22;
    do
    {
      uint64_t v13 = 0LL;
      do
      {
        if (*(void *)v22 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)v13);
        while (1)
        {
          id v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "uniqueIDs", (void)v21));
          id v16 = [v15 count];

          id v17 = (void *)objc_claimAutoreleasedReturnValue([v14 uniqueIDs]);
          [v17 removeLastObject];
        }

        id v18 = (void *)objc_claimAutoreleasedReturnValue([v14 uniqueIDs]);
        [v8 addObjectsFromArray:v18];

        uint64_t v13 = (char *)v13 + 1;
      }

      while (v13 != v11);
      id v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }

    while (v11);
  }

  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateWithProperty:equalToValues:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateWithProperty:equalToValues:",  @"unique_id",  v8));
  id v20 = *a4;
  *a4 = v19;
}

- (BOOL)insertPass:(id)a3 withDaemonData:(id)a4 source:(int64_t)a5
{
  id v7 = a3;
  id v8 = a4;
  if (!v7)
  {
    BOOL v13 = 0;
    goto LABEL_33;
  }

  id v35 = v8;
  id v9 = [v7 passType];
  if (v9 == (id)1) {
    id v10 = v7;
  }
  else {
    id v10 = 0LL;
  }
  id v11 = v10;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v7 uniqueID]);
  if ((PKStoreDemoModeEnabled() & 1) == 0)
  {
    int v14 = PKUIOnlyDemoModeEnabled();
    if (v9 != (id)1)
    {
      int v32 = v14;
      goto LABEL_15;
    }

    if (!v14)
    {
      int v32 = 0;
      goto LABEL_14;
    }

- (BOOL)updatePass:(id)a3 withDaemonData:(id)a4 oldPass:(id *)a5 fromSource:(int64_t)a6
{
  id v9 = a3;
  id v10 = a4;
  if (v9)
  {
    location = a5;
    id v11 = [v9 passType];
    if (v11 == (id)1) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 0LL;
    }
    id v13 = v12;
    int v14 = (void *)objc_claimAutoreleasedReturnValue([v9 uniqueID]);
    if ((PKStoreDemoModeEnabled() & 1) != 0) {
      int v34 = 1;
    }
    else {
      int v34 = PKUIOnlyDemoModeEnabled();
    }
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
    __int128 v36 = v13;
    if (v11 == (id)1)
    {
      if (v34) {
        -[PDDatabaseManager _applyDemoPaymentApplicationToPass:](self, "_applyDemoPaymentApplicationToPass:", v9);
      }
      [v9 updateDevicePaymentApplicationsWithSecureElementIdentifiers:v16];
    }

    uint64_t v112 = 0LL;
    v113 = &v112;
    uint64_t v114 = 0x2020000000LL;
    char v115 = 0;
    uint64_t v106 = 0LL;
    v107 = &v106;
    uint64_t v108 = 0x3032000000LL;
    v109 = sub_10011BCF0;
    v110 = sub_10011BD00;
    id v111 = 0LL;
    uint64_t v103 = 0LL;
    v104 = &v103;
    uint64_t v105 = 0x2020000000LL;
    uint64_t v97 = 0LL;
    v98 = &v97;
    uint64_t v99 = 0x3032000000LL;
    v100 = sub_10011BCF0;
    v101 = sub_10011BD00;
    id v102 = 0LL;
    id v90 = 0LL;
    uint64_t v91 = 0LL;
    v92 = &v91;
    uint64_t v93 = 0x3032000000LL;
    v94 = sub_10011BCF0;
    v95 = sub_10011BD00;
    id v96 = 0LL;
    uint64_t v85 = 0LL;
    v86 = &v85;
    uint64_t v87 = 0x3032000000LL;
    v88 = sub_10011BCF0;
    v89 = sub_10011BD00;
    uint64_t v79 = 0LL;
    id v80 = &v79;
    uint64_t v81 = 0x3032000000LL;
    v82 = sub_10011BCF0;
    v83 = sub_10011BD00;
    id v84 = 0LL;
    uint64_t v73 = 0LL;
    id v74 = &v73;
    uint64_t v75 = 0x3032000000LL;
    __int128 v76 = sub_10011BCF0;
    uint64_t v77 = sub_10011BD00;
    id v78 = 0LL;
    uint64_t v70 = 0LL;
    uint64_t v71 = &v70;
    uint64_t v72 = 0x2020000000LL;
    uint64_t v64 = 0LL;
    uint64_t v65 = &v64;
    uint64_t v66 = 0x3032000000LL;
    BOOL v67 = sub_10011BCF0;
    id v68 = sub_10011BD00;
    id v69 = 0LL;
    uint64_t v58 = 0LL;
    uint64_t v59 = &v58;
    uint64_t v60 = 0x3032000000LL;
    id v61 = sub_10011BCF0;
    id v62 = sub_10011BD00;
    id v63 = 0LL;
    database = self->_database;
    v40[0] = _NSConcreteStackBlock;
    v40[1] = 3221225472LL;
    v40[2] = sub_10011D478;
    v40[3] = &unk_100644E78;
    v40[4] = self;
    id v18 = v14;
    id v41 = v18;
    __int128 v46 = &v106;
    id v35 = v16;
    id v42 = v35;
    id v39 = v9;
    id v43 = v39;
    int64_t v47 = &v70;
    id v37 = v36;
    id v44 = v37;
    uint64_t v48 = &v64;
    id v45 = v10;
    __int128 v49 = &v58;
    int v19 = v18;
    uint64_t v50 = &v91;
    __int128 v51 = &v85;
    __int128 v52 = &v73;
    id v20 = v11;
    id v53 = &v79;
    uint64_t v54 = &v97;
    id v55 = &v103;
    uint64_t v56 = &v112;
    int64_t v57 = a6;
    sub_1002CCC5C((uint64_t)database, v40);
    int v21 = *((unsigned __int8 *)v113 + 24);
    uint64_t Object = PKLogFacilityTypeGetObject(0LL);
    __int128 v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);
    if (v21)
    {
      if (v24)
      {
        *(_DWORD *)buf = 138412290;
        id v117 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "PDDatabaseManager: updated pass %@.",  buf,  0xCu);
      }

      if (v92[5] || v86[5])
      {
        id WeakRetained = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
        [WeakRetained handleUpdateOfPass:v107[5] toPass:v39 oldNotificationService:v92[5] newNotificationService:v86[5]];
      }

      if (v74[5] || v80[5])
      {
        id v26 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
        [v26 handleUpdateOfPass:v107[5] toPass:v39 oldNotificationService:v74[5] newNotificationService:v80[5]];
      }

      if (v98[5])
      {
        BOOL v27 = *((_BYTE *)v104 + 24) == 0;
        id v28 = objc_loadWeakRetained((id *)&self->_webServicesDelegate);
        id v29 = (void *)objc_claimAutoreleasedReturnValue([v39 serialNumber]);
        if (v27)
        {
          [v28 handleModification:v29 webService:v98[5] pushEnabled:*((unsigned __int8 *)v71 + 24) source:a6];
        }

        else
        {
          id v30 = (void *)objc_claimAutoreleasedReturnValue([v39 authenticationToken]);
          [v28 handleInsertion:v29 authToken:v30 webService:v98[5] pushEnabled:*((unsigned __int8 *)v71 + 24) source:a6];
        }
      }

      if (v20 == (id)1)
      {
        if (v34)
        {
          -[PDDatabaseManager _applyDemoPaymentTransactionsToPass:](self, "_applyDemoPaymentTransactionsToPass:", v39);
          -[PDDatabaseManager _applyDemoFelicaAppletStateToPass:](self, "_applyDemoFelicaAppletStateToPass:", v39);
        }

        id v31 = objc_loadWeakRetained((id *)&self->_delegate);
        [v31 paymentPass:v39 didUpdatePaymentApplications:v65[5] toPaymentApplications:v59[5]];
      }

      if (location) {
        objc_storeStrong(location, (id)v107[5]);
      }
      BOOL v15 = *((_BYTE *)v113 + 24) != 0;
    }

    else
    {
      if (v24)
      {
        *(_DWORD *)buf = 138412290;
        id v117 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "PDDatabaseManager: failed to update pass %@.",  buf,  0xCu);
      }

      BOOL v15 = 0;
    }

    _Block_object_dispose(&v58, 8);
    _Block_object_dispose(&v64, 8);

    _Block_object_dispose(&v70, 8);
    _Block_object_dispose(&v73, 8);

    _Block_object_dispose(&v79, 8);
    _Block_object_dispose(&v85, 8);

    _Block_object_dispose(&v91, 8);
    _Block_object_dispose(&v97, 8);

    _Block_object_dispose(&v103, 8);
    _Block_object_dispose(&v106, 8);

    _Block_object_dispose(&v112, 8);
  }

  else
  {
    BOOL v15 = 0;
  }

  return v15;
}

- (void)prepareToDeletePassWithUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v40 = 0LL;
  id v41 = &v40;
  uint64_t v42 = 0x3032000000LL;
  id v43 = sub_10011BCF0;
  id v44 = sub_10011BD00;
  id v45 = 0LL;
  uint64_t v34 = 0LL;
  id v35 = &v34;
  uint64_t v36 = 0x3032000000LL;
  id v37 = sub_10011BCF0;
  id v38 = sub_10011BD00;
  id v39 = 0LL;
  uint64_t v28 = 0LL;
  id v29 = &v28;
  uint64_t v30 = 0x3032000000LL;
  id v31 = sub_10011BCF0;
  int v32 = sub_10011BD00;
  id v33 = 0LL;
  uint64_t v22 = 0LL;
  __int128 v23 = &v22;
  uint64_t v24 = 0x3032000000LL;
  id v25 = sub_10011BCF0;
  id v26 = sub_10011BD00;
  id v27 = 0LL;
  uint64_t v19 = 0LL;
  id v20 = &v19;
  uint64_t v21 = 0x2020000000LL;
  database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10011DC14;
  v12[3] = &unk_100644EA0;
  v12[4] = self;
  id v6 = v4;
  id v13 = v6;
  int v14 = &v40;
  BOOL v15 = &v19;
  id v16 = &v34;
  id v17 = &v28;
  id v18 = &v22;
  sub_1002CCC5C((uint64_t)database, v12);
  if (v29[5])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
    [WeakRetained handleDeletionOfPass:v41[5] withNotificationService:v29[5]];
  }

  if (v23[5])
  {
    id v8 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
    [v8 handleDeletionOfPass:v41[5] withNotificationService:v23[5]];
  }

  if (v35[5])
  {
    id v9 = objc_loadWeakRetained((id *)&self->_webServicesDelegate);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([(id)v41[5] serialNumber]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([(id)v41[5] authenticationToken]);
    [v9 handleDeletion:v10 authToken:v11 webService:v35[5] pushEnabled:*((unsigned __int8 *)v20 + 24)];
  }

  _Block_object_dispose(&v19, 8);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(&v34, 8);

  _Block_object_dispose(&v40, 8);
}

- (void)deletePassWithUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v22 = 0LL;
  __int128 v23 = &v22;
  uint64_t v24 = 0x3032000000LL;
  id v25 = sub_10011BCF0;
  id v26 = sub_10011BD00;
  id v27 = 0LL;
  uint64_t v16 = 0LL;
  id v17 = &v16;
  uint64_t v18 = 0x3032000000LL;
  uint64_t v19 = sub_10011BCF0;
  id v20 = sub_10011BD00;
  id v21 = 0LL;
  database = self->_database;
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472LL;
  id v10 = sub_10011DEE0;
  id v11 = &unk_100644EC8;
  uint64_t v12 = self;
  id v6 = v4;
  id v13 = v6;
  int v14 = &v22;
  BOOL v15 = &v16;
  sub_1002CCC5C((uint64_t)database, &v8);
  if (v23[5])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_paymentServicesDelegate);
    objc_msgSend( WeakRetained,  "handleDeletionForPassTypeIdentifier:serialNumber:",  v23[5],  v17[5],  v8,  v9,  v10,  v11,  v12);
  }

  _Block_object_dispose(&v16, 8);
  _Block_object_dispose(&v22, 8);
}

- (void)deleteDatabase
{
  database = self->_database;
  if (database)
  {
    sub_1002CC714((sqlite3 *)database);
    id v4 = self->_database;
    self->_database = 0LL;
  }

  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v5 removeItemAtURL:self->_databaseURL error:0];

  uint64_t Object = PKLogFacilityTypeGetObject(0LL);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Deleted database", v8, 2u);
  }
}

- (void)deleteAndRecreateDatabase
{
  uint64_t Object = PKLogFacilityTypeGetObject(0LL);
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Recreated database", v5, 2u);
  }
}

- (void)updateModifiedSource:(int64_t)a3 forUniqueID:(id)a4
{
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", self->_database, a4));
  [v5 updateWithLastModifiedSource:a3];
}

- (id)updatedPassAnnotationsForPasses:(id)a3
{
  id v4 = a3;
  int v48 = PKExpiredPassesDisabledByUser();
  if (v48) {
    uint64_t v5 = 3LL;
  }
  else {
    uint64_t v5 = 1LL;
  }
  database = self->_database;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForInMainStack](&OBJC_CLASS___Pass, "predicateForInMainStack"));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passUniqueIDsInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passUniqueIDsInDatabase:matchingPredicate:",  database,  v7));
  id v9 = [v8 mutableCopy];

  uint64_t v51 = v5;
  uint64_t v10 = v5;
  id v11 = &OBJC_CLASS___SQLitePropertyPredicate;
  +[PassAnnotations updateAnnotationsOfExpiredIrrelevantOrVoidedPassesWithState:inDatabase:]( &OBJC_CLASS___PassAnnotations,  "updateAnnotationsOfExpiredIrrelevantOrVoidedPassesWithState:inDatabase:",  v10,  self->_database);
  uint64_t v12 = self->_database;
  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForInMainStack](&OBJC_CLASS___Pass, "predicateForInMainStack"));
  uint64_t v14 = objc_claimAutoreleasedReturnValue( +[Pass passUniqueIDsInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passUniqueIDsInDatabase:matchingPredicate:",  v12,  v13));

  __int128 v49 = (void *)v14;
  [v9 minusSet:v14];
  if ([v9 count])
  {
    delegateQueue = self->_delegateQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10011E7E8;
    block[3] = &unk_1006392B0;
    block[4] = self;
    id v65 = v9;
    dispatch_async((dispatch_queue_t)delegateQueue, block);
  }

  uint64_t v50 = v9;
  uint64_t v54 = -[NSMutableDictionary initWithCapacity:]( [NSMutableDictionary alloc],  "initWithCapacity:",  [v4 count]);
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  __int128 v62 = 0u;
  __int128 v63 = 0u;
  id obj = v4;
  id v55 = [obj countByEnumeratingWithState:&v60 objects:v68 count:16];
  if (v55)
  {
    uint64_t v53 = *(void *)v61;
    do
    {
      for (i = 0LL; i != v55; i = (char *)i + 1)
      {
        if (*(void *)v61 != v53) {
          objc_enumerationMutation(obj);
        }
        id v17 = *(void **)(*((void *)&v60 + 1) + 8LL * (void)i);
        uint64_t v18 = objc_autoreleasePoolPush();
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v17 uniqueID]);
        id v20 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passAnnotationsForPassUniqueIdentifier:]( self,  "passAnnotationsForPassUniqueIdentifier:",  v19));
        id v21 = (void *)objc_claimAutoreleasedReturnValue([v17 secureElementPass]);
        id v22 = [v21 passActivationState];
        id v23 = v22;
        if (!v20)
        {
          if (v21) {
            BOOL v31 = v22 == (id)4;
          }
          else {
            BOOL v31 = 1;
          }
          if (v31)
          {
            int v32 = (void *)objc_claimAutoreleasedReturnValue([v17 relevantDates]);
            id v33 = (void *)objc_claimAutoreleasedReturnValue( +[PKPassRelevantDate findDateFromDates:option:]( &OBJC_CLASS___PKPassRelevantDate,  "findDateFromDates:option:",  v32,  3LL));

            uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v17 expirationDate]);
            if (([v17 isVoided] & 1) != 0
              || [v17 isPastRelevancy])
            {
            }

            else
            {
              unsigned int v37 = [v17 isExpired];
              if ((v37 & 1) != 0 || v34 || v33)
              {

                if (!v37) {
                  goto LABEL_43;
                }
              }

              else if (([v17 isExpiredBasedOnSigningDate] & 1) == 0)
              {
                goto LABEL_43;
              }
            }

            uint64_t v35 = v51;
          }

          else
          {
LABEL_43:
            uint64_t v35 = 0LL;
          }

          id v41 = self->_database;
          uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([&v11[66] predicateForUniqueID:v19]);
          id v20 = (void *)objc_claimAutoreleasedReturnValue([&v11[66] queryWithDatabase:v41 predicate:v42]);

          v56[0] = _NSConcreteStackBlock;
          v56[1] = 3221225472LL;
          v56[2] = sub_10011E83C;
          v56[3] = &unk_100644EF0;
          uint64_t v59 = v35;
          v56[4] = self;
          int64_t v57 = v54;
          id v58 = v19;
          [v20 enumeratePersistentIDsUsingBlock:v56];

          goto LABEL_49;
        }

        if (v21)
        {
          if ([v20 sortingState] == (id)1)
          {
            if (v23 == (id)4) {
              goto LABEL_16;
            }
          }

          else if ([v20 sortingState] != (id)3 || v23 == (id)4)
          {
            goto LABEL_16;
          }

          uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[PassAnnotations anyInDatabase:withPassID:]( &OBJC_CLASS___PassAnnotations,  "anyInDatabase:withPassID:",  self->_database,  v19));
          [v24 updateSortingState:0];
          uint64_t v25 = objc_claimAutoreleasedReturnValue([v24 passAnnotations]);

          id v20 = (void *)v25;
        }

- (void)updatePassAnnotationsForPassWithUniqueIdentifier:(id)a3 withSortingState:(int64_t)a4
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  if (v5)
  {
    id v6 = v5;
    [v5 updateWithSortingState:a4 forSortingReason:0];
    uint64_t v5 = v6;
  }
}

- (id)passAnnotationsForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[PassAnnotations anyInDatabase:withPassID:]( &OBJC_CLASS___PassAnnotations,  "anyInDatabase:withPassID:",  self->_database,  v4));
  id v6 = v5;
  if (v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 passAnnotations]);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(0LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138412290;
      id v12 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Error: Failed to find pass annotations in database for pass with unique identifier: %@",  (uint8_t *)&v11,  0xCu);
    }

    id v7 = 0LL;
  }

  return v7;
}

- (BOOL)hasPassesInExpiredSection
{
  database = self->_database;
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForExpired](&OBJC_CLASS___Pass, "predicateForExpired"));
  BOOL v4 = +[SQLiteEntity existsInDatabase:predicate:](&OBJC_CLASS___Pass, "existsInDatabase:predicate:", database, v3);

  return v4;
}

- (id)passLiveRenderForPassUniqueIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PassLiveRender passLiveRenderInDatabase:forPassUniqueID:]( &OBJC_CLASS___PassLiveRender,  "passLiveRenderInDatabase:forPassUniqueID:",  self->_database,  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 passLiveRender]);

  return v4;
}

- (id)insertOrUpdateLiveRenderEnabled:(BOOL)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v15 = 0LL;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x3032000000LL;
  uint64_t v18 = sub_10011BCF0;
  uint64_t v19 = sub_10011BD00;
  id v20 = 0LL;
  database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10011EB90;
  v11[3] = &unk_100644F18;
  void v11[4] = self;
  id v8 = v6;
  BOOL v14 = a3;
  id v12 = v8;
  id v13 = &v15;
  sub_1002CCC5C((uint64_t)database, v11);
  id v9 = (id)v16[5];

  _Block_object_dispose(&v15, 8);
  return v9;
}

- (void)deletePaymentTransactionWithIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  v4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 transactionSourceIdentifier]);
  if (v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 paymentTransaction]);
    delegateQueue = self->_delegateQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10011EF40;
    block[3] = &unk_100639350;
    block[4] = self;
    id v9 = v6;
    id v27 = v9;
    id v10 = v7;
    id v28 = v10;
    dispatch_async((dispatch_queue_t)delegateQueue, block);
    int v11 = (void *)objc_claimAutoreleasedReturnValue([v5 serviceIdentifier]);
    if ([v5 deleteFromDatabase])
    {
      id v12 = self->_delegateQueue;
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      v23[2] = sub_10011EF80;
      v23[3] = &unk_100639350;
      v23[4] = self;
      id v13 = v9;
      id v24 = v13;
      id v25 = v4;
      dispatch_async((dispatch_queue_t)v12, v23);
      if (v11)
      {
        id WeakRetained = objc_loadWeakRetained((id *)&self->_cloudStoreCoordinator);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained applePayContainer]);
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472LL;
        v19[2] = sub_10011EFC0;
        v19[3] = &unk_10063ADE8;
        void v19[4] = self;
        id v20 = v10;
        id v21 = v11;
        id v22 = v13;
        [v15 canSyncTransactionFromCloudKitForTransactionSourceIdentifier:v22 completion:v19];
      }
    }

    else
    {
      uint64_t Object = PKLogFacilityTypeGetObject(23LL);
      uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        id v30 = v4;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Error: Could not delete transaction with identifier: %{public}@",  buf,  0xCu);
      }
    }
  }

  else
  {
    uint64_t v16 = PKLogFacilityTypeGetObject(23LL);
    id v10 = (id)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v30 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v10,  OS_LOG_TYPE_DEFAULT,  "Error: No transaction found with identifier: %{public}@",  buf,  0xCu);
    }
  }
}

- (void)deletePaymentTransactionsWithIdentifiers:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v50 objects:v57 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v51;
    do
    {
      for (i = 0LL; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v51 != v9) {
          objc_enumerationMutation(v6);
        }
        int v11 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  *(void *)(*((void *)&v50 + 1) + 8LL * (void)i)));
        if (v11) {
          -[NSMutableArray addObject:](v5, "addObject:", v11);
        }
      }

      id v8 = [v6 countByEnumeratingWithState:&v50 objects:v57 count:16];
    }

    while (v8);
  }

  uint64_t v36 = v6;

  delegateQueue = self->_delegateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10011F518;
  block[3] = &unk_1006392B0;
  id v13 = v5;
  int v48 = v13;
  __int128 v49 = self;
  uint64_t v35 = self;
  dispatch_async((dispatch_queue_t)delegateQueue, block);
  id v38 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v39 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  id obj = v13;
  id v14 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v43,  v56,  16LL);
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v44;
    do
    {
      for (j = 0LL; j != v15; j = (char *)j + 1)
      {
        if (*(void *)v44 != v16) {
          objc_enumerationMutation(obj);
        }
        uint64_t v18 = *(void **)(*((void *)&v43 + 1) + 8LL * (void)j);
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "paymentTransaction", v35, v36));
        id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 identifier]);

        id v21 = (void *)objc_claimAutoreleasedReturnValue([v18 serviceIdentifier]);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v18 paymentTransaction]);
        id v23 = (void *)objc_claimAutoreleasedReturnValue([v18 transactionSourceIdentifier]);
        if ([v18 deleteFromDatabase])
        {
          id v24 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v39, "objectForKey:", v23));
          id v25 = v24;
          if (v24) {
            id v26 = v24;
          }
          else {
            id v26 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
          }
          id v28 = v26;

          -[NSMutableSet addObject:](v28, "addObject:", v20);
          -[NSMutableDictionary setValue:forKey:](v39, "setValue:forKey:", v28, v23);
          if (v21)
          {
            id v29 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v38, "objectForKey:", v23));
            id v30 = v29;
            if (v29) {
              BOOL v31 = v29;
            }
            else {
              BOOL v31 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
            }
            int v32 = v31;

            -[NSMutableArray addObject:](v32, "addObject:", v22);
            -[NSMutableDictionary setValue:forKey:](v38, "setValue:forKey:", v32, v23);
          }
        }

        else
        {
          uint64_t Object = PKLogFacilityTypeGetObject(23LL);
          id v28 = (NSMutableSet *)objc_claimAutoreleasedReturnValue(Object);
          if (os_log_type_enabled((os_log_t)v28, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            id v55 = v20;
            _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v28,  OS_LOG_TYPE_DEFAULT,  "Error: Could not delete transaction with identifier: %{public}@",  buf,  0xCu);
          }
        }
      }

      id v15 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v43,  v56,  16LL);
    }

    while (v15);
  }

  id v33 = (dispatch_queue_s *)v35->_delegateQueue;
  v41[0] = _NSConcreteStackBlock;
  v41[1] = 3221225472LL;
  v41[2] = sub_10011F6D8;
  v41[3] = &unk_1006392B0;
  v41[4] = v35;
  uint64_t v42 = v39;
  uint64_t v34 = v39;
  dispatch_async(v33, v41);
  v40[0] = _NSConcreteStackBlock;
  v40[1] = 3221225472LL;
  v40[2] = sub_10011F718;
  v40[3] = &unk_100644F40;
  v40[4] = v35;
  -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](v38, "enumerateKeysAndObjectsUsingBlock:", v40);
}

- (void)deleteAllTransactionsFromTransactionSourceIdentifiers:(id)a3
{
  id v4 = a3;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v11;
    do
    {
      id v8 = 0LL;
      do
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  *(void *)(*((void *)&v10 + 1) + 8LL * (void)v8)));
        if (v9) {
          +[PaymentTransaction deleteEntitiesForTransactionSource:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "deleteEntitiesForTransactionSource:inDatabase:",  v9,  self->_database);
        }

        id v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }

    while (v6);
  }
}

- (void)deleteAllMessagesFromPaymentPassWithUniqueIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  if (v4)
  {
    id v5 = v4;
    +[PaymentMessage deleteEntitiesForPass:inDatabase:]( &OBJC_CLASS___PaymentMessage,  "deleteEntitiesForPass:inDatabase:",  v4,  self->_database);
    id v4 = v5;
  }
}

- (void)archiveMessageWithIdentifier:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentMessage messagesInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentMessage,  "messagesInDatabase:withIdentifier:",  self->_database,  a3));
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v9;
    do
    {
      uint64_t v7 = 0LL;
      do
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v8 + 1) + 8 * (void)v7) archive];
        uint64_t v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v5);
  }
}

- (unint64_t)settingsForPass:(id)a3
{
  return (unint64_t)sub_1003B0174(self->_objectSettingsManager, a3);
}

- (BOOL)settingEnabled:(unint64_t)a3 forPass:(id)a4
{
  return sub_1003B02F4((uint64_t)self->_objectSettingsManager, a3, a4);
}

- (BOOL)settingEnabled:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v6));
  if (v7)
  {
    BOOL v8 = sub_1003B0580(self->_objectSettingsManager, a3, v7);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(0LL);
    __int128 v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      id v13 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Error: Failed to find a pass in database with unique identifier '%@'.",  (uint8_t *)&v12,  0xCu);
    }

    BOOL v8 = 0;
  }

  return v8;
}

- (void)updateSettings:(unint64_t)a3 forPass:(id)a4
{
  id v6 = (id)objc_claimAutoreleasedReturnValue([a4 uniqueID]);
  -[PDDatabaseManager updateSettings:forPassWithUniqueIdentifier:]( self,  "updateSettings:forPassWithUniqueIdentifier:",  a3,  v6);
}

- (void)migrateObjectSettings
{
  uint64_t v3 = PKObjectSettingsManagerSafeHavenArchivePath(self, a2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v4));

  -[PDDatabaseManager _migrateObjectSettingsWithSafeHavenArchiveURL:]( self,  "_migrateObjectSettingsWithSafeHavenArchiveURL:",  v5);
}

- (void)_setObjectSettingsManager:(id)a3
{
  id v5 = (PDObjectSettingsManager *)a3;
  objectSettingsManager = self->_objectSettingsManager;
  p_objectSettingsManager = &self->_objectSettingsManager;
  if (objectSettingsManager != v5)
  {
    BOOL v8 = v5;
    objc_storeStrong((id *)p_objectSettingsManager, a3);
    id v5 = v8;
  }
}

- (void)_migrateObjectSettingsWithSafeHavenArchiveURL:(id)a3
{
  id v4 = a3;
  uint64_t Object = PKLogFacilityTypeGetObject(0LL);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v25 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Performing migration for object settings with safehaven url %@",  buf,  0xCu);
  }

  uint64_t v19 = v4;
  uint64_t v7 = sub_1003B0450((uint64_t)&OBJC_CLASS___PDObjectSettingsManager, v4);
  BOOL v8 = (os_unfair_lock_s *)objc_claimAutoreleasedReturnValue(v7);
  __int128 v9 = sub_1003AFFB0(v8);
  __int128 v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v25 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Migrating safe haven object settings for passes %@",  buf,  0xCu);
  }

  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v11 = v10;
  id v12 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v21;
    do
    {
      for (i = 0LL; i != v13; i = (char *)i + 1)
      {
        if (*(void *)v21 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)i);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passWithUniqueIdentifier:](self, "passWithUniqueIdentifier:", v16));
        if (v17)
        {
          id v18 = sub_1003B0174(v8, v17);
          if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            id v25 = v16;
            __int16 v26 = 2048;
            id v27 = v18;
            _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Updating object settings for safe haven pass %@, to value %ld",  buf,  0x16u);
          }

          -[PDDatabaseManager updateSettings:forPassWithUniqueIdentifier:]( self,  "updateSettings:forPassWithUniqueIdentifier:",  v18,  v16);
        }

        else
        {
          if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            id v25 = v16;
            _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Cannot migrate object settings for pass %@ because it doesnt exist in the database.",  buf,  0xCu);
          }
        }
      }

      id v13 = [v11 countByEnumeratingWithState:&v20 objects:v28 count:16];
    }

    while (v13);
  }

  sub_1003AFFF8();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Completed migration for object settings",  buf,  2u);
  }
}

- (void)updateSettings:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v83 = 0LL;
  id v84 = &v83;
  uint64_t v85 = 0x3032000000LL;
  v86 = sub_10011BCF0;
  uint64_t v87 = sub_10011BD00;
  id v88 = 0LL;
  uint64_t v79 = 0LL;
  id v80 = &v79;
  uint64_t v81 = 0x2020000000LL;
  uint64_t v82 = 0LL;
  uint64_t v75 = 0LL;
  __int128 v76 = &v75;
  uint64_t v77 = 0x2020000000LL;
  uint64_t v78 = 0LL;
  uint64_t v69 = 0LL;
  uint64_t v70 = &v69;
  uint64_t v71 = 0x3032000000LL;
  uint64_t v72 = sub_10011BCF0;
  uint64_t v73 = sub_10011BD00;
  id v74 = 0LL;
  uint64_t v63 = 0LL;
  uint64_t v64 = &v63;
  uint64_t v65 = 0x3032000000LL;
  uint64_t v66 = sub_10011BCF0;
  uint64_t v67 = sub_10011BD00;
  id v68 = 0LL;
  uint64_t v57 = 0LL;
  id v58 = &v57;
  uint64_t v59 = 0x3032000000LL;
  __int128 v60 = sub_10011BCF0;
  __int128 v61 = sub_10011BD00;
  id v62 = 0LL;
  database = self->_database;
  v48[0] = _NSConcreteStackBlock;
  v48[1] = 3221225472LL;
  v48[2] = sub_1001206F4;
  v48[3] = &unk_100644F68;
  v48[4] = self;
  id v8 = v6;
  id v49 = v8;
  __int128 v50 = &v83;
  __int128 v51 = &v69;
  __int128 v52 = &v63;
  __int128 v53 = &v57;
  uint64_t v54 = &v79;
  id v55 = &v75;
  unint64_t v56 = a3;
  sub_1002CCC5C((uint64_t)database, v48);
  __int128 v9 = (void *)v84[5];
  if (!v9) {
    goto LABEL_34;
  }
  if ([v9 passType] == (id)1) {
    __int128 v10 = (void *)v84[5];
  }
  else {
    __int128 v10 = 0LL;
  }
  id v11 = v10;
  unsigned int v12 = *((_DWORD *)v80 + 6);
  unsigned int v13 = *((_DWORD *)v76 + 6);
  id v41 = v11;
  unsigned __int8 v39 = [v11 shouldIgnoreTransactionUpdatesSwitch];
  unsigned int v14 = __rbit32(v12);
  unsigned int v15 = __rbit32(v13);
  int v16 = (v15 >> 30) & 1;
  if (((v14 >> 30) & 1) != v16 && v70[5])
  {
    id WeakRetained = objc_loadWeakRetained((id *)&self->_webServicesDelegate);
    id v18 = (void *)objc_claimAutoreleasedReturnValue([(id)v84[5] serialNumber]);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([(id)v84[5] authenticationToken]);
    if (v16) {
      [WeakRetained handlePushEnabled:v18 authToken:v19 webService:v70[5]];
    }
    else {
      [WeakRetained handlePushDisabled:v18 authToken:v19 webService:v70[5]];
    }
  }

  int v20 = (v12 >> 4) & 4;
  int v21 = v12 & 8;
  int v40 = (v12 >> 4) & 0x40;
  int v22 = (v12 >> 1) & 0x10 | (32 * ((v12 >> 4) & 1)) | v21 | (v14 >> 30) | v20 | v40;
  int v23 = (v13 >> 4) & 4;
  int v24 = v13 & 8;
  int v25 = (v13 >> 4) & 0x40;
  int v26 = (v13 >> 1) & 0x10 | (32 * ((v13 >> 4) & 1)) | v24 | (v15 >> 30) | v23 | v25;
  char v27 = v26 ^ v22;
  if (((v26 ^ v22) & 2) != 0)
  {
    id v28 = objc_loadWeakRetained((id *)&self->_delegate);
    [v28 noteLockScreenSettingsChangedForPassWithUniqueIdentifier:v8];
  }

  if (v21 != v24 && v64[5])
  {
    if (v24)
    {
      id v29 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
      [v29 handlePushEnabledForPass:v84[5] withNotificationService:v64[5]];
    }

    else
    {
      if ((v39 & 1) != 0)
      {
LABEL_20:
        delegateQueue = self->_delegateQueue;
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_1001208F0;
        block[3] = &unk_10063B300;
        void block[4] = self;
        id v46 = v8;
        char v47 = v26;
        dispatch_async((dispatch_queue_t)delegateQueue, block);

        goto LABEL_21;
      }

      id v29 = objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
      [v29 handlePushDisabledForPass:v84[5] withNotificationService:v64[5]];
    }

    goto LABEL_20;
  }

- (void)updateSettings:(unint64_t)a3 forObjectWithUniqueIdentifier:(id)a4
{
  id v7 = a4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", self->_database));
  if (v6) {
    -[PDDatabaseManager updateSettings:forPassWithUniqueIdentifier:]( self,  "updateSettings:forPassWithUniqueIdentifier:",  a3,  v7);
  }
}

- (void)noteObjectSharedWithUniqueID:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  if (v3)
  {
    id v7 = v3;
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForProperty:@"share_count"]);
    id v5 = (char *)[v4 integerValue];

    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v5 + 1));
    [v7 setValue:v6 forProperty:@"share_count"];

    uint64_t v3 = v7;
  }
}

- (BOOL)getRegistrationStatus:(unint64_t *)a3 date:(id *)a4 forSerialNumber:(id)a5 webService:(id)a6
{
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a6));
  unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withWebService:serialNumber:]( &OBJC_CLASS___Pass,  "anyInDatabase:withWebService:serialNumber:",  self->_database,  v11,  v10));

  if (v12) {
    [v12 getPushRegistrationStatus:a3 date:a4];
  }

  return v12 != 0LL;
}

- (void)updateRegistrationStatus:(unint64_t)a3 date:(id)a4 forSerialNumber:(id)a5 webService:(id)a6
{
  id v13 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a6));
  if (v11)
  {
    unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withWebService:serialNumber:]( &OBJC_CLASS___Pass,  "anyInDatabase:withWebService:serialNumber:",  self->_database,  v11,  v10));
    [v12 updateWithPushRegistrationStatus:a3 date:v13];
  }
}

- (void)updateLastModifiedTag:(id)a3 forSerialNumber:(id)a4 webService:(id)a5
{
  id v11 = a3;
  id v8 = a4;
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a5));
  if (v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withWebService:serialNumber:]( &OBJC_CLASS___Pass,  "anyInDatabase:withWebService:serialNumber:",  self->_database,  v9,  v8));
    [v10 updateWithLastModifiedTag:v11];
  }
}

- (void)updateWebService:(id)a3
{
  id v4 = a3;
  id v5 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", v4));
  [v5 updateWithWebService:v4];
}

- (id)lastDeletionDateForWebService:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 lastDeletionDate]);

  return v4;
}

- (id)lastUpdatedTagForWebService:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 lastUpdatedTag]);

  return v4;
}

- (id)tagLastUpdateDateForWebService:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 tagLastUpdateDate]);

  return v4;
}

- (void)updateLastDeletionDate:(id)a3 forWebService:(id)a4
{
  id v6 = a3;
  id v7 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a4));
  [v7 updateWithLastDeletionDate:v6];
}

- (void)updateLastUpdatedTag:(id)a3 forWebService:(id)a4
{
  id v6 = a3;
  id v7 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a4));
  [v7 updateWithLastUpdatedTag:v6];
}

- (id)webServices
{
  return +[WebService webServicesInDatabase:matchingPredicate:]( &OBJC_CLASS___WebService,  "webServicesInDatabase:matchingPredicate:",  self->_database,  0LL);
}

- (id)webServicesForPassTypeID:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  self->_database,  a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[WebService webServicesInDatabase:withPassType:]( &OBJC_CLASS___WebService,  "webServicesInDatabase:withPassType:",  self->_database,  v4));

  return v5;
}

- (id)pushEnabledPassTypeIDs
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___PassType,  "queryWithDatabase:predicate:",  self->_database,  0LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  unsigned int v15 = @"identifier";
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v15, 1LL));
  __int128 v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472LL;
  id v11 = sub_100120FA4;
  unsigned int v12 = &unk_100639E18;
  id v13 = self;
  id v14 = v4;
  id v6 = v4;
  [v3 enumeratePersistentIDsAndProperties:v5 usingBlock:&v9];

  id v7 = objc_msgSend(v6, "copy", v9, v10, v11, v12, v13);
  return v7;
}

- (BOOL)hasPushEnabledPassesForWebService:(id)a3
{
  id v4 = a3;
  database = self->_database;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _predicateMatchingPassesForWebService:]( self,  "_predicateMatchingPassesForWebService:",  v4));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v6));

  uint64_t v10 = 0LL;
  id v11 = &v10;
  uint64_t v12 = 0x2020000000LL;
  char v13 = 0;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_1001212FC;
  v9[3] = &unk_100644FB8;
  v9[4] = self;
  v9[5] = &v10;
  +[Pass enumeratePassUniqueIDsAndTypesForQuery:withHandler:]( &OBJC_CLASS___Pass,  "enumeratePassUniqueIDsAndTypesForQuery:withHandler:",  v7,  v9);
  LOBYTE(self) = *((_BYTE *)v11 + 24);
  _Block_object_dispose(&v10, 8);

  return (char)self;
}

- (BOOL)getWebService:(id *)a3 updateContext:(id *)a4 forPassWithUniqueID:(id)a5
{
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a5));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 webService]);
  __int128 v9 = v8;
  if (v8)
  {
    if (a3) {
      *a3 = (id)objc_claimAutoreleasedReturnValue([v8 webService]);
    }
    if (a4) {
      *a4 = (id)objc_claimAutoreleasedReturnValue([v7 updateContext]);
    }
  }

  return v9 != 0LL;
}

- (BOOL)getPassTypeID:(id *)a3 teamID:(id *)a4 associatedPassTypeIdentifiers:(id *)a5 associatedApplicationIdentifiers:(id *)a6 forUniqueID:(id)a7
{
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a7));
  uint64_t v12 = v11;
  if (v11)
  {
    char v13 = (void *)objc_claimAutoreleasedReturnValue([v11 passType]);
    *a3 = (id)objc_claimAutoreleasedReturnValue([v13 passTypeID]);
    *a4 = (id)objc_claimAutoreleasedReturnValue([v13 teamID]);
    *a5 = (id)objc_claimAutoreleasedReturnValue([v12 associatedPassTypeIdentifiers]);
    *a6 = (id)objc_claimAutoreleasedReturnValue([v12 associatedApplicationIdentifiers]);
  }

  return v12 != 0LL;
}

- (id)passUpdateContextForSerialNumber:(id)a3 webService:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a4));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withWebService:serialNumber:]( &OBJC_CLASS___Pass,  "anyInDatabase:withWebService:serialNumber:",  self->_database,  v7,  v6));

  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 updateContext]);
  return v9;
}

- (id)webServiceForPass:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _passTypeForPass:](self, "_passTypeForPass:", v4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _webServiceForPass:passType:](self, "_webServiceForPass:passType:", v4, v5));

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 webService]);
  return v7;
}

- (BOOL)getLastPushDate:(id *)a3 lastUpdateDate:(id *)a4 frequencyScore:(double *)a5 forPassTypeID:(id)a6
{
  __int128 v9 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  self->_database,  a6));
  uint64_t v10 = v9;
  if (v9)
  {
    if (a3) {
      *a3 = (id)objc_claimAutoreleasedReturnValue([v9 lastPushDate]);
    }
    if (a4) {
      *a4 = (id)objc_claimAutoreleasedReturnValue([v10 lastUpdateDate]);
    }
    if (a5)
    {
      [v10 frequencyScore];
      *(void *)a5 = v11;
    }
  }

  return v10 != 0LL;
}

- (BOOL)uniqueIDIsRevoked:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  unsigned __int8 v4 = [v3 revoked];

  return v4;
}

- (void)updateLastPushDate:(id)a3 frequencyScore:(double)a4 forPassTypeID:(id)a5
{
  id v10 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  self->_database,  a5));
  __int128 v9 = v8;
  if (v8)
  {
    [v8 updateLastPushDate:v10];
    [v9 updateFrequencyScore:a4];
  }
}

- (void)updateLastUpdateDate:(id)a3 forPassTypeID:(id)a4
{
  id v8 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  self->_database,  a4));
  id v7 = v6;
  if (v6) {
    [v6 updateLastUpdateDate:v8];
  }
}

- (void)updateRevocationStatus:(BOOL)a3 forUniqueID:(id)a4
{
  BOOL v4 = a3;
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", self->_database, a4));
  [v5 updateWithRevocationStatus:v4];
}

- (void)updateIngestedDate:(id)a3 forUniqueID:(id)a4
{
  database = self->_database;
  id v6 = a3;
  id v7 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, a4));
  [v7 updateWithIngestedDate:v6];
}

- (void)enumeratePassUpdateContextsForWebService:(id)a3 withHandler:(id)a4
{
  database = self->_database;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _predicateMatchingPassesForWebService:]( self,  "_predicateMatchingPassesForWebService:",  a3));
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v8));

  +[Pass enumerateUpdateContextsForQuery:withHandler:]( &OBJC_CLASS___Pass,  "enumerateUpdateContextsForQuery:withHandler:",  v9,  v7);
}

- (void)enumerateOrganizationNamesForPassTypeID:(id)a3 withHandler:(id)a4
{
  id v10 = a4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  self->_database,  a3));
  if (v6)
  {
    database = self->_database;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPassType:](&OBJC_CLASS___Pass, "predicateForPassType:", v6));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v8));

    +[Pass enumerateOrganizationNamesForQuery:withHandler:]( &OBJC_CLASS___Pass,  "enumerateOrganizationNamesForQuery:withHandler:",  v9,  v10);
  }
}

- (void)enumeratePassSyncabilityPropertiesWithHandler:(id)a3
{
}

- (id)passesForNotificationService:(id)a3
{
  if (a3)
  {
    BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:"));
    if (v4)
    {
      database = self->_database;
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForNotificationService:]( &OBJC_CLASS___Pass,  "predicateForNotificationService:",  v4));
      id v7 = (NSSet *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  database,  v6));
    }

    else
    {
      id v7 = objc_alloc_init(&OBJC_CLASS___NSSet);
    }
  }

  else
  {
    id v7 = objc_alloc_init(&OBJC_CLASS___NSSet);
  }

  return v7;
}

- (id)paymentApplicationsForNotificationService:(id)a3
{
  if (a3)
  {
    BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:"));
    if (v4) {
      id v5 = (NSSet *)objc_claimAutoreleasedReturnValue( +[PaymentApplication paymentApplicationsInDatabase:forNotificationService:]( &OBJC_CLASS___PaymentApplication,  "paymentApplicationsInDatabase:forNotificationService:",  self->_database,  v4));
    }
    else {
      id v5 = objc_alloc_init(&OBJC_CLASS___NSSet);
    }
    id v6 = v5;
  }

  else
  {
    id v6 = objc_alloc_init(&OBJC_CLASS___NSSet);
  }

  return v6;
}

- (id)paymentApplicationWithDPANIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _dbPaymentApplicationWithDPANIdentifier:]( self,  "_dbPaymentApplicationWithDPANIdentifier:",  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 paymentApplication]);

  return v4;
}

- (id)_dbPaymentApplicationWithDPANIdentifier:(id)a3
{
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](secureElement, "secureElementIdentifiers"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForDPANIdentifier:]( &OBJC_CLASS___PaymentApplication,  "predicateForDPANIdentifier:",  v5));

  v13[0] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForSecureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "predicateForSecureElementIdentifiers:",  v6));
  v13[1] = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v13, 2LL));

  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity anyInDatabase:predicate:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:predicate:",  self->_database,  v10));

  return v11;
}

- (id)paymentApplicationWithPassUniqueIdentifier:(id)a3 secureElementIdentifier:(id)a4 paymentApplicationIdentifier:(id)a5
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:",  self->_database,  a3,  a4,  a5));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 paymentApplication]);

  return v6;
}

- (id)paymentApplicationsForPassUniqueIdentifier:(id)a3
{
  database = self->_database;
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](secureElement, "secureElementIdentifiers"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication paymentApplicationsInDatabase:forPassUniqueIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "paymentApplicationsInDatabase:forPassUniqueIdentifier:secureElementIdentifiers:",  database,  v5,  v6));

  return v7;
}

- (id)defaultPaymentApplicationForPassUniqueIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 defaultPaymentApplication]);
  id v5 = v4;
  if (v4) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 paymentApplication]);
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (id)primaryPaymentApplicationForPassUniqueIdentifier:(id)a3
{
  secureElement = self->_secureElement;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](secureElement, "secureElementIdentifiers"));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForSecureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "predicateForSecureElementIdentifiers:",  v6));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentApplication,  "predicateForPassWithUniqueIdentifier:",  v5,  v7));

  v15[1] = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForPrimaryPaymentApplication:]( &OBJC_CLASS___PaymentApplication,  "predicateForPrimaryPaymentApplication:",  1LL));
  v15[2] = v9;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v15, 3LL));

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity anyInDatabase:predicate:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:predicate:",  self->_database,  v11));
  char v13 = (void *)objc_claimAutoreleasedReturnValue([v12 paymentApplication]);

  return v13;
}

- (void)insertPaymentApplicationUsageSummary:(id)a3
{
}

- (id)allPaymentApplicationUsageSummaries
{
  return +[PaymentApplicationUsageSummary allUsageSummariesInDatabase:]( &OBJC_CLASS___PaymentApplicationUsageSummary,  "allUsageSummariesInDatabase:",  self->_database);
}

- (id)paymentApplicationWithVPANIdentifier:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication predicateForVPANID:primaryOnly:]( &OBJC_CLASS___PaymentApplication,  "predicateForVPANID:primaryOnly:",  a3,  0LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity anyInDatabase:predicate:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:predicate:",  self->_database,  v4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 paymentApplication]);

  return v6;
}

- (id)passWithVPANIdentifier:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager paymentApplicationWithVPANIdentifier:]( self,  "paymentApplicationWithVPANIdentifier:",  a3));
  if (v4)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passWithPaymentApplication:](self, "passWithPaymentApplication:", v4));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 secureElementPass]);
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

- (id)passesWithActiveVPAN
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForHasVPANID](&OBJC_CLASS___Pass, "predicateForHasVPANID", v3));
  v11[1] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", &off_100690FB0));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v5));
  void v11[2] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 3LL));

  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v8));

  return v9;
}

- (void)updateDateLastUsedBySafari:(id)a3 forVirtualCardWithIdentifier:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[VPANVirtualCard anyInDatabase:withVirtualCardIdentifier:]( &OBJC_CLASS___VPANVirtualCard,  "anyInDatabase:withVirtualCardIdentifier:",  self->_database,  v6));
  id v8 = v7;
  if (v7) {
    [v7 updateDateLastUsedBySafari:v10];
  }
  else {
    id v9 =  +[VPANVirtualCard insertVPANVirtualCardMetadataWithIdentifier:dateLastUsedBySafari:inDatabase:]( &OBJC_CLASS___VPANVirtualCard,  "insertVPANVirtualCardMetadataWithIdentifier:dateLastUsedBySafari:inDatabase:",  v6,  v10,  self->_database);
  }
}

- (void)updateCardholderNameFromSafari:(id)a3 forVirtualCardWithIdentifier:(id)a4
{
  id v10 = a3;
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[VPANVirtualCard anyInDatabase:withVirtualCardIdentifier:]( &OBJC_CLASS___VPANVirtualCard,  "anyInDatabase:withVirtualCardIdentifier:",  self->_database,  v6));
  id v8 = v7;
  if (v7) {
    [v7 updateCardholderNameFromSafari:v10];
  }
  else {
    id v9 =  +[VPANVirtualCard insertVPANVirtualCardMetadataWithIdentifier:cardholderNameFromSafari:inDatabase:]( &OBJC_CLASS___VPANVirtualCard,  "insertVPANVirtualCardMetadataWithIdentifier:cardholderNameFromSafari:inDatabase:",  v6,  v10,  self->_database);
  }
}

- (void)updateVirtualCardWithMetadata:(id)a3
{
}

- (id)transactionServiceForPaymentApplication:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _passWithPaymentApplication:](self, "_passWithPaymentApplication:", a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionService]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 notificationService]);

  return v5;
}

- (id)messageServiceForPaymentApplication:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _passWithPaymentApplication:](self, "_passWithPaymentApplication:", a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionService]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 notificationService]);

  return v5;
}

- (id)notificationServiceOfType:(unint64_t)a3 forPassWithUniqueIdentifier:(id)a4
{
  if (a4)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database));
    id v6 = v5;
    if (a3 == 1)
    {
      uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 messageService]);
    }

    else
    {
      if (a3)
      {
        id v8 = 0LL;
        goto LABEL_9;
      }

      uint64_t v7 = objc_claimAutoreleasedReturnValue([v5 transactionService]);
    }

    id v8 = (void *)v7;
LABEL_9:

    goto LABEL_10;
  }

  id v8 = 0LL;
LABEL_10:
  id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "notificationService", a3));

  return v9;
}

- (id)allPaymentApplications
{
  return +[PaymentApplication paymentApplicationsInDatabase:]( &OBJC_CLASS___PaymentApplication,  "paymentApplicationsInDatabase:",  self->_database);
}

- (id)deviceSpecificPaymentApplications
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication paymentApplicationsInDatabase:forSecureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "paymentApplicationsInDatabase:forSecureElementIdentifiers:",  self->_database,  v3));

  return v4;
}

- (id)notificationServices
{
  return +[NotificationService notificationServicesInDatabase:]( &OBJC_CLASS___NotificationService,  "notificationServicesInDatabase:",  self->_database);
}

- (id)notificationServicesForPushTopic:(id)a3
{
  return +[NotificationService notificationServicesInDatabase:withPushTopic:]( &OBJC_CLASS___NotificationService,  "notificationServicesInDatabase:withPushTopic:",  self->_database,  a3);
}

- (BOOL)notificationServiceIsEnabledForAnyPasses:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passesForNotificationService:](self, "passesForNotificationService:", v4));
  uint64_t v11 = 0LL;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  char v14 = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1001224E0;
  v8[3] = &unk_100644FE0;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  [v5 enumerateObjectsUsingBlock:v8];
  LOBYTE(v4) = *((_BYTE *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)v4;
}

- (unint64_t)registrationStatusForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 passNotificationServiceForType:a3]);
  id v7 = [v6 registrationStatus];

  return (unint64_t)v7;
}

- (id)lastUpdatedDateForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 passNotificationServiceForType:a3]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 lastUpdatedDate]);

  return v7;
}

- (id)lastUpdatedTagForNotificationServiceType:(unint64_t)a3 passUniqueIdentifier:(id)a4
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 passNotificationServiceForType:a3]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 lastUpdatedTag]);

  return v7;
}

- (void)updateRegistrationStatus:(unint64_t)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5
{
  id v8 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", self->_database, a5));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v8 passNotificationServiceForType:a4]);
  [v7 updateWithRegistrationStatus:a3];
}

- (void)updateLastUpdatedDate:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5
{
  database = self->_database;
  id v8 = a3;
  id v10 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, a5));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v10 passNotificationServiceForType:a4]);
  [v9 updateWithLastUpdatedDate:v8];
}

- (void)updateLastUpdatedTag:(id)a3 forNotificationServiceType:(unint64_t)a4 passUniqueIdentifier:(id)a5
{
  database = self->_database;
  id v8 = a3;
  id v10 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, a5));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v10 passNotificationServiceForType:a4]);
  [v9 updateWithLastUpdatedTag:v8];
}

- (void)updateLastUpdatedDate:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:", a4));
  [v7 updateWithLastUpdatedDate:v6];
}

- (void)updateLastUpdatedTag:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:", a4));
  [v7 updateWithLastUpdatedTag:v6];
}

- (void)updateAuthenticationToken:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:", a4));
  [v7 updateWithAuthenticationToken:v6];
}

- (void)updateAppLaunchToken:(id)a3 forNotificationService:(id)a4
{
  id v6 = a3;
  id v7 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:", a4));
  [v7 updateWithAppLaunchToken:v6];
}

- (void)updateNotificationService:(id)a3
{
  id v4 = a3;
  id v5 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseNotificationService:](self, "_databaseNotificationService:", v4));
  [v5 updateWithNotificationService:v4];
}

- (void)updateTransitAppletStateWithStationNames:(id)a3 forPaymentApplication:(id)a4 withPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  uint64_t v32 = 0LL;
  uint64_t v33 = &v32;
  uint64_t v34 = 0x3032000000LL;
  uint64_t v35 = sub_10011BCF0;
  id v36 = sub_10011BD00;
  id v37 = 0LL;
  uint64_t v26 = 0LL;
  char v27 = &v26;
  uint64_t v28 = 0x3032000000LL;
  id v29 = sub_10011BCF0;
  id v30 = sub_10011BD00;
  id v31 = 0LL;
  database = self->_database;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  void v20[2] = sub_100122BC8;
  v20[3] = &unk_100645030;
  v20[4] = self;
  id v12 = v10;
  id v21 = v12;
  id v13 = v9;
  id v22 = v13;
  id v14 = v8;
  id v23 = v14;
  int v24 = &v26;
  int v25 = &v32;
  sub_1002CCC5C((uint64_t)database, v20);
  if (v33[5] && v27[5])
  {
    delegateQueue = self->_delegateQueue;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_100122F44;
    void v16[3] = &unk_10063B2B0;
    v16[4] = self;
    id v17 = v12;
    id v18 = &v26;
    uint64_t v19 = &v32;
    dispatch_async((dispatch_queue_t)delegateQueue, v16);
  }

  _Block_object_dispose(&v26, 8);
  _Block_object_dispose(&v32, 8);
}

- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 balanceLabelDictionary:(id)a8 unitDictionary:(id)a9 planLabelDictionary:(id)a10 completion:(id)a11
{
}

- (void)updateTransitAppletStateWithHistory:(id)a3 transactionDate:(id)a4 forPaymentApplication:(id)a5 withPassUniqueIdentifier:(id)a6 forceTransactionGeneration:(BOOL)a7 recoverMissingTransactions:(BOOL)a8 balanceLabelDictionary:(id)a9 unitDictionary:(id)a10 planLabelDictionary:(id)a11 completion:(id)a12
{
  BOOL v12 = a8;
  id v45 = a3;
  id v47 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a9;
  id v20 = a10;
  id v43 = a11;
  id v49 = (void (**)(id, NSMutableArray *, void))a12;
  uint64_t v107 = 0LL;
  uint64_t v108 = &v107;
  uint64_t v109 = 0x3032000000LL;
  v110 = sub_10011BCF0;
  id v111 = sub_10011BD00;
  id v112 = 0LL;
  uint64_t v101 = 0LL;
  id v102 = &v101;
  uint64_t v103 = 0x3032000000LL;
  v104 = sub_10011BCF0;
  uint64_t v105 = sub_10011BD00;
  id v106 = 0LL;
  uint64_t v95 = 0LL;
  id v96 = &v95;
  uint64_t v97 = 0x3032000000LL;
  v98 = sub_10011BCF0;
  uint64_t v99 = sub_10011BD00;
  id v100 = 0LL;
  uint64_t v89 = 0LL;
  id v90 = &v89;
  uint64_t v91 = 0x3032000000LL;
  v92 = sub_10011BCF0;
  uint64_t v93 = sub_10011BD00;
  id v94 = 0LL;
  uint64_t v83 = 0LL;
  id v84 = &v83;
  uint64_t v85 = 0x3032000000LL;
  v86 = sub_10011BCF0;
  uint64_t v87 = sub_10011BD00;
  id v88 = 0LL;
  uint64_t v77 = 0LL;
  uint64_t v78 = &v77;
  uint64_t v79 = 0x3032000000LL;
  id v80 = sub_10011BCF0;
  uint64_t v81 = sub_10011BD00;
  id v82 = 0LL;
  database = self->_database;
  v61[0] = _NSConcreteStackBlock;
  v61[1] = 3221225472LL;
  v61[2] = sub_1001235B8;
  v61[3] = &unk_100645058;
  v61[4] = self;
  id v52 = v18;
  id v62 = v52;
  id v22 = v17;
  id v63 = v22;
  id v23 = v45;
  id v64 = v23;
  uint64_t v69 = &v89;
  id v40 = v19;
  id v65 = v40;
  id v42 = v20;
  id v66 = v42;
  id v46 = v43;
  id v67 = v46;
  uint64_t v70 = &v77;
  uint64_t v71 = &v83;
  BOOL v75 = a7;
  id v48 = v47;
  id v68 = v48;
  uint64_t v72 = &v95;
  BOOL v76 = v12;
  uint64_t v73 = &v101;
  id v74 = &v107;
  sub_1002CCC5C((uint64_t)database, v61);
  char v44 = v23;
  else {
    uint64_t v24 = 2048LL;
  }
  int v25 = (void *)v102[5];
  if (v25)
  {
    objc_msgSend(v25, "addUpdateReasons:", v24, v40, v42);
    id v26 =  -[PDDatabaseManager insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:insertionMode:performTruncati on:insertedTransaction:",  v102[5],  v52,  v22,  2LL,  1LL,  0LL);
  }

  __int128 v51 = v22;
  id v27 = objc_msgSend((id)v108[5], "count", v40);
  if (!v27)
  {
LABEL_27:
    uint64_t v28 = 0LL;
    goto LABEL_28;
  }

  uint64_t v28 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", v27);
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  id v29 = (id)v108[5];
  id v30 = [v29 countByEnumeratingWithState:&v57 objects:v113 count:16];
  if (!v30) {
    goto LABEL_25;
  }
  uint64_t v31 = *(void *)v58;
  do
  {
    uint64_t v32 = 0LL;
    do
    {
      if (*(void *)v58 != v31) {
        objc_enumerationMutation(v29);
      }
      uint64_t v33 = *(void **)(*((void *)&v57 + 1) + 8LL * (void)v32);
      uint64_t v34 = (void *)v96[5];
      if (v33 == v34 || !v12)
      {
        if (v33 != v34) {
          goto LABEL_20;
        }
      }

      else
      {
        id v36 = (void *)objc_claimAutoreleasedReturnValue([(id)v108[5] lastObject]);
        BOOL v37 = v33 == v36;

        if (v37) {
LABEL_20:
        }
          [v33 addUpdateReasons:v24];
      }

      id v38 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:insertionMode:perfo rmTruncation:insertedTransaction:",  v33,  v52,  v51,  0LL,  1LL,  0LL));
      if (v38) {
        -[NSMutableArray addObject:](v28, "addObject:", v38);
      }

      uint64_t v32 = (char *)v32 + 1;
    }

    while (v30 != v32);
    id v30 = [v29 countByEnumeratingWithState:&v57 objects:v113 count:16];
  }

  while (v30);
LABEL_25:

  if (!-[NSMutableArray count](v28, "count"))
  {

    goto LABEL_27;
  }

- (id)transitStateWithPassUniqueIdentifier:(id)a3 paymentApplication:(id)a4
{
  database = self->_database;
  id v7 = a4;
  id v8 = a3;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 secureElementIdentifier]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 applicationIdentifier]);

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:",  database,  v8,  v9,  v10));
  if (v11)
  {
    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue( +[FelicaTransitAppletState anyInDatabase:withPaymentApplicationPID:]( FelicaTransitAppletState,  "anyInDatabase:withPaymentApplicationPID:",  self->_database,  [v11 persistentID]));
    if (!v12) {
      BOOL v12 = (void *)objc_claimAutoreleasedReturnValue( +[TransitAppletState anyInDatabase:withPaymentApplicationPID:]( TransitAppletState,  "anyInDatabase:withPaymentApplicationPID:",  self->_database,  [v11 persistentID]));
    }
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 transitAppletState]);
  }

  else
  {
    id v13 = 0LL;
  }

  return v13;
}

- (BOOL)canPerformAction:(id)a3 forPassWithUniqueIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passWithUniqueIdentifier:](self, "passWithUniqueIdentifier:", v7));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 paymentPass]);

  if (v9) {
    BOOL v10 = PKPaymentApplicationStateIsPersonalized([v9 effectiveContactlessPaymentApplicationState]) != 0;
  }
  else {
    BOOL v10 = 0;
  }
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 serviceProviderSupportedCountries]);
  BOOL v12 = (void *)objc_claimAutoreleasedReturnValue([v6 serviceProviderAcceptedNetworks]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v12));

  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  if ([v6 type] == (id)2)
  {
    unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v6 associatedPlanIdentifier]);
    if (v15)
    {
      int v16 = (void *)objc_claimAutoreleasedReturnValue([v6 associatedPlan]);

      if (!v16)
      {
        uint64_t v17 = PKTransitCommutePlanInPassForIdentifier(v9, v15);
        id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        [v6 setAssociatedPlan:v18];
      }
    }
  }

  id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 availableFrom]);
  id v20 = (void *)objc_claimAutoreleasedReturnValue([v6 availableUntil]);
  if (v10)
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:paymentRequestType:isMultiTokensRequest:webService:]( self,  "passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:paymentRequestType:isMul tiTokensRequest:webService:",  v13,  [v6 serviceProviderCapabilities],  v11,  0,  0,  0));

    if (v21)
    {
      if (v19)
      {
        LODWORD(v21) = [v14 compare:v19] != (id)-1;
        if (!(_DWORD)v21) {
          goto LABEL_18;
        }
      }

      else
      {
        LOBYTE(v21) = 1;
      }

      if (v20) {
        LOBYTE(v21) = [v14 compare:v20] != (id)1;
      }
    }
  }

  else
  {
    LOBYTE(v21) = 0;
  }

- (void)updatePeerPaymentMemo:(id)a3 forTransactionWithServiceIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001245F8;
  block[3] = &unk_100639350;
  void block[4] = self;
  id v12 = v7;
  id v13 = v6;
  id v9 = v6;
  id v10 = v7;
  dispatch_sync((dispatch_queue_t)paymentTransactionUpdateQueue, block);
}

- (void)updatePeerPaymentMessageReceivedDate:(id)a3 forTransactionWithServiceIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100124804;
  block[3] = &unk_100639350;
  void block[4] = self;
  id v12 = v7;
  id v13 = v6;
  id v9 = v6;
  id v10 = v7;
  dispatch_sync((dispatch_queue_t)paymentTransactionUpdateQueue, block);
}

- (void)insertOrUpdateDeviceOriginatedNearbyPeerPaymentMemo:(id)a3 counterpartImageDataIdentifier:(id)a4 forTransactionWithServiceIdentifier:(id)a5 completion:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001249DC;
  block[3] = &unk_10063CD88;
  void block[4] = self;
  id v20 = v12;
  id v21 = v10;
  id v22 = v11;
  id v23 = v13;
  id v15 = v13;
  id v16 = v11;
  id v17 = v10;
  id v18 = v12;
  dispatch_sync((dispatch_queue_t)paymentTransactionUpdateQueue, block);
}

- (id)updateMerchant:(id)a3 forTransaction:(id)a4 passUniqueIdentifier:(id)a5
{
  id v7 = a3;
  database = self->_database;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([a4 identifier]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v9));

  [v10 updateWithMerchant:v7];
  return v7;
}

- (id)insertOrUpdatePaymentMessage:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 performTruncation:(BOOL)a6
{
  BOOL v6 = a6;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = 0LL;
  if (v10 && v11)
  {
    database = self->_database;
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v10 serviceIdentifier]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentMessage anyInDatabase:withServiceIdentifier:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentMessage,  "anyInDatabase:withServiceIdentifier:forPassWithUniqueIdentifier:",  database,  v15,  v11));

    if (v16)
    {
      [v16 updateWithPaymentMessage:v10];
    }

    else
    {
      id v17 = self->_database;
      id v18 = (void *)objc_claimAutoreleasedReturnValue([v10 messageDate]);
      unint64_t v19 = +[PaymentMessage numberOfPaymentMessagesInDatabase:forPassUniqueIdentifier:newerThanDate:]( &OBJC_CLASS___PaymentMessage,  "numberOfPaymentMessagesInDatabase:forPassUniqueIdentifier:newerThanDate:",  v17,  v11,  v18);

      uint64_t v20 = PKMaxPerPassPaymentMessageHistory;
      if (v19 < PKMaxPerPassPaymentMessageHistory && [v10 isValid])
      {
        id v29 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v11));
        uint64_t v21 = objc_claimAutoreleasedReturnValue([v12 applicationIdentifier]);
        id v22 = self->_database;
        id v23 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
        uint64_t v28 = (void *)v21;
        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:",  v22,  v21,  v23));

        id v16 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentMessage insertPaymentMessage:withPaymentPass:paymentApplication:inDatabase:]( &OBJC_CLASS___PaymentMessage,  "insertPaymentMessage:withPaymentPass:paymentApplication:inDatabase:",  v10,  v29,  v24,  self->_database));
        if (v6)
        {
          +[PaymentMessage truncateEntitiesForPass:inDatabase:toCount:]( &OBJC_CLASS___PaymentMessage,  "truncateEntitiesForPass:inDatabase:toCount:",  v29,  self->_database,  v20);
          int v25 = v28;
          if (([v16 existsInDatabase] & 1) == 0)
          {

            id v16 = 0LL;
          }
        }

        else
        {
          int v25 = v28;
        }
      }

      else
      {
        id v16 = 0LL;
      }
    }

    id v13 = (void *)objc_claimAutoreleasedReturnValue([v16 paymentMessage]);
    if (v13)
    {
      delegateQueue = self->_delegateQueue;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100124E3C;
      block[3] = &unk_100639350;
      void block[4] = self;
      id v31 = v11;
      id v32 = v13;
      dispatch_async((dispatch_queue_t)delegateQueue, block);
    }
  }

  return v13;
}

- (id)insertOrUpdateAppletStateDirtyForTransitAppletStateDirty:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[AppletStateDirty insertOrUpdateAppletStateDirtyForPassUniqueIdentifier:inDatabase:]( &OBJC_CLASS___AppletStateDirty,  "insertOrUpdateAppletStateDirtyForPassUniqueIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 dirtyAppletState]);

  return v4;
}

- (void)deleteDirtyAppletStatesForTransitAppletStateDirty:(id)a3
{
  database = self->_database;
  id v5 = a3;
  +[AppletStateDirty deleteEntitiesForAppletState:inDatabase:]( &OBJC_CLASS___AppletStateDirty,  "deleteEntitiesForAppletState:inDatabase:",  v5,  database);
  id v12 = (id)objc_claimAutoreleasedReturnValue([v5 passUniqueIdentifier]);
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue([v5 applicationIdentifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 secureElementIdentifier]);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:",  self->_database,  v12,  v7,  v6));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[TransitAppletState anyInDatabase:withPaymentApplicationPID:]( TransitAppletState,  "anyInDatabase:withPaymentApplicationPID:",  self->_database,  [v8 persistentID]));
  id v10 = v9;
  if (v9)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 transitAppletState]);
    [v11 setAppletStateDirty:0];
    [v10 updateWithAppletState:v11];
  }
}

- (id)retrieveDirtyAppletStates
{
  v2 = (void *)objc_claimAutoreleasedReturnValue( +[AppletStateDirty dirtyAppletStatesInDatabase:]( &OBJC_CLASS___AppletStateDirty,  "dirtyAppletStatesInDatabase:",  self->_database));
  uint64_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v4 = v2;
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      id v8 = 0LL;
      do
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * (void)v8), "dirtyAppletState", (void)v12));
        -[NSMutableSet addObject:](v3, "addObject:", v9);

        id v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v6);
  }

  id v10 = -[NSMutableSet copy](v3, "copy");
  return v10;
}

- (int64_t)dirtyAppletStateCount
{
  return +[AppletStateDirty countInDatabase:](&OBJC_CLASS___AppletStateDirty, "countInDatabase:", self->_database);
}

- (id)_recomputedPaymentBalanceForIdentifier:(id)a3 value:(id)a4 currency:(id)a5 exponent:(int64_t)a6 unitDictionary:(id)a7
{
  id v11 = a5;
  id v12 = a4;
  __int128 v13 = (PKCurrencyAmount *)a3;
  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([a7 objectForKeyedSubscript:v13]);
  uint64_t v15 = PKLocalizedPaymentUnitKeyForType([v14 integerValue]);
  id v16 = (NSString *)objc_claimAutoreleasedReturnValue(v15);
  id v17 = v16;
  if (v14 && v16)
  {
    uint64_t v18 = PKLocalizedPaymentString(v16, @"%lu", [v12 unsignedIntegerValue]);
    unint64_t v19 = (PKCurrencyAmount *)objc_claimAutoreleasedReturnValue(v18);
    uint64_t v20 = -[PKCurrencyAmount initWithAmount:exponent:preformattedString:]( objc_alloc(&OBJC_CLASS___PKCurrencyAmount),  "initWithAmount:exponent:preformattedString:",  v12,  a6,  v19);

    uint64_t v21 = -[PKPaymentBalance initWithIdentifier:forCurrencyAmount:]( objc_alloc(&OBJC_CLASS___PKPaymentBalance),  "initWithIdentifier:forCurrencyAmount:",  v13,  v20);
    __int128 v13 = v20;
  }

  else
  {
    unint64_t v19 = -[PKCurrencyAmount initWithAmount:currency:exponent:]( objc_alloc(&OBJC_CLASS___PKCurrencyAmount),  "initWithAmount:currency:exponent:",  v12,  v11,  a6);

    uint64_t v21 = -[PKPaymentBalance initWithIdentifier:forCurrencyAmount:]( objc_alloc(&OBJC_CLASS___PKPaymentBalance),  "initWithIdentifier:forCurrencyAmount:",  v13,  v19);
  }

  id v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  -[PKPaymentBalance setLastUpdateDate:](v21, "setLastUpdateDate:", v22);

  return v21;
}

- (void)resolvePendingTransitTransactionAmountsWithPaymentPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 uniqueID]);
  id v6 = PKPaymentPassUnitDictionary(v4);
  __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(v6);
  __int128 v53 = v4;
  id v7 = PKPaymentPassBalanceLabelDictionary(v4);
  __int128 v60 = (void *)objc_claimAutoreleasedReturnValue(v7);
  __int128 v57 = self;
  uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransactionAmount pendingTransactionAmountsInDatabase:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentTransactionAmount,  "pendingTransactionAmountsInDatabase:forPassWithUniqueIdentifier:",  self->_database,  v5));
  uint64_t Object = PKLogFacilityTypeGetObject(12LL);
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    uint64_t v97 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Resolving pending transit transaction amounts for pass with unique identifier: %@",  buf,  0xCu);
  }

  oslog = v9;

  __int128 v58 = (void *)v5;
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentBalance paymentBalancesInDatabase:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentBalance,  "paymentBalancesInDatabase:forPassWithUniqueIdentifier:",  self->_database,  v5));
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v89 = 0u;
  __int128 v90 = 0u;
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  id v52 = v10;
  id obj = (id)objc_claimAutoreleasedReturnValue([v10 allObjects]);
  id v12 = [obj countByEnumeratingWithState:&v89 objects:v95 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v90;
    do
    {
      for (i = 0LL; i != v13; i = (char *)i + 1)
      {
        if (*(void *)v90 != v14) {
          objc_enumerationMutation(obj);
        }
        id v16 = *(void **)(*((void *)&v89 + 1) + 8LL * (void)i);
        __int128 v85 = 0u;
        __int128 v86 = 0u;
        __int128 v87 = 0u;
        __int128 v88 = 0u;
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 identifiers]);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 allObjects]);

        id v19 = [v18 countByEnumeratingWithState:&v85 objects:v94 count:16];
        if (v19)
        {
          id v20 = v19;
          uint64_t v21 = *(void *)v86;
          do
          {
            for (j = 0LL; j != v20; j = (char *)j + 1)
            {
              if (*(void *)v86 != v21) {
                objc_enumerationMutation(v18);
              }
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v11,  "setObject:forKeyedSubscript:",  v16,  *(void *)(*((void *)&v85 + 1) + 8LL * (void)j));
            }

            id v20 = [v18 countByEnumeratingWithState:&v85 objects:v94 count:16];
          }

          while (v20);
        }
      }

      id v13 = [obj countByEnumeratingWithState:&v89 objects:v95 count:16];
    }

    while (v13);
  }

  __int128 v83 = 0u;
  __int128 v84 = 0u;
  __int128 v81 = 0u;
  __int128 v82 = 0u;
  id v55 = v72;
  id v62 = [v55 countByEnumeratingWithState:&v81 objects:v93 count:16];
  if (v62)
  {
    uint64_t v59 = *(void *)v82;
    id v23 = (id)PKNoCurrencyCode;
    unint64_t v56 = (void *)PKNoCurrencyCode;
    do
    {
      for (k = 0LL; k != v62; k = (char *)k + 1)
      {
        if (*(void *)v82 != v59) {
          objc_enumerationMutation(v55);
        }
        int v25 = *(void **)(*((void *)&v81 + 1) + 8LL * (void)k);
        id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 transactionAmount]);
        id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 unitIdentifier]);
        uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v61 objectForKeyedSubscript:v27]);
        uint64_t v69 = objc_claimAutoreleasedReturnValue([v60 objectForKeyedSubscript:v27]);
        id v29 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v11, "objectForKeyedSubscript:", v27));
        uint64_t v71 = v28;
        uint64_t v30 = PKLocalizedPaymentUnitKeyForType([v28 integerValue]);
        id v68 = (NSString *)objc_claimAutoreleasedReturnValue(v30);
        id v31 = (void *)objc_claimAutoreleasedReturnValue([v26 amount]);
        id obja = (id)objc_claimAutoreleasedReturnValue([v31 amount]);
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 currency]);
        id v33 = [v31 exponent];
        id v34 = v32;
        id v67 = v31;
        uint64_t v73 = v34;
        if (v34 == v23)
        {
        }

        else
        {
          if (v34) {
            BOOL v35 = v23 == 0LL;
          }
          else {
            BOOL v35 = 1;
          }
          if (v35)
          {

LABEL_34:
            id v63 = v29;
            id v66 = v26;
            if (os_log_type_enabled(oslog, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              uint64_t v97 = (uint64_t)v27;
              _os_log_impl( (void *)&_mh_execute_header,  oslog,  OS_LOG_TYPE_DEFAULT,  "Encountered a pending amount for unitIdentifier %@ a currency which shouldnt be possible",  buf,  0xCu);
            }

            id v64 = v27;

LABEL_37:
            id v43 = -[PKCurrencyAmount initWithAmount:currency:exponent:]( objc_alloc(&OBJC_CLASS___PKCurrencyAmount),  "initWithAmount:currency:exponent:",  obja,  v73,  v33);
            goto LABEL_38;
          }

          id v65 = v25;
          id v36 = v33;
          BOOL v37 = v34;
          unsigned int v38 = [v34 isEqualToString:v23];

          id v33 = v36;
          int v25 = v65;
          if (!v38) {
            goto LABEL_34;
          }
        }

        unsigned __int8 v39 = (void *)v69;
        if (!v71) {
          goto LABEL_39;
        }
        id v63 = v29;
        id v64 = v27;
        id v66 = v26;
        if (!v68) {
          goto LABEL_37;
        }
        id v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obja, "pk_absoluteValue"));
        uint64_t v41 = PKLocalizedPaymentString(v68, @"%lu", [v40 unsignedLongValue]);
        id v42 = (void *)objc_claimAutoreleasedReturnValue(v41);

        id v43 = -[PKCurrencyAmount initWithAmount:exponent:preformattedString:]( objc_alloc(&OBJC_CLASS___PKCurrencyAmount),  "initWithAmount:exponent:preformattedString:",  obja,  v33,  v42);
LABEL_38:
        unsigned __int8 v39 = (void *)v69;
        uint64_t v70 = v43;
        char v44 = -[PKTransactionAmount initWithCurrencyAmount:label:]( objc_alloc(&OBJC_CLASS___PKTransactionAmount),  "initWithCurrencyAmount:label:",  v43,  v39);
        [v25 updateWithPaymentAmount:v44];
        id v45 = (void *)objc_claimAutoreleasedReturnValue([v25 paymentTransaction]);
        id v46 = (void *)objc_claimAutoreleasedReturnValue([v45 paymentApplication]);
        id v47 = (void *)objc_claimAutoreleasedReturnValue([v45 paymentTransaction]);
        id v48 = (void *)objc_claimAutoreleasedReturnValue([v46 paymentApplication]);
        delegateQueue = (dispatch_queue_s *)v57->_delegateQueue;
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10012597C;
        block[3] = &unk_10063AE10;
        void block[4] = v57;
        id v77 = v58;
        id v78 = v47;
        id v79 = v48;
        id v29 = v63;
        id v80 = v63;
        id v50 = v48;
        id v51 = v47;
        dispatch_async(delegateQueue, block);

        id v23 = v56;
        id v27 = v64;
        id v26 = v66;
LABEL_39:
      }

      id v62 = [v55 countByEnumeratingWithState:&v81 objects:v93 count:16];
    }

    while (v62);
  }
}

- (void)recomputeBalancesForPaymentPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 uniqueID]);
  id v27 = self;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentBalance paymentBalancesInDatabase:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentBalance,  "paymentBalancesInDatabase:forPassWithUniqueIdentifier:",  self->_database,  v5));
  if ([v6 count])
  {
    uint64_t Object = PKLogFacilityTypeGetObject(6LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v34 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Recomputing balances for pass with unique identifier: %@",  buf,  0xCu);
    }

    id v23 = v5;

    id v24 = v4;
    id v9 = PKPaymentPassUnitDictionary(v4);
    id v26 = (void *)objc_claimAutoreleasedReturnValue(v9);
    id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    id v22 = v6;
    id obj = (id)objc_claimAutoreleasedReturnValue([v6 allObjects]);
    id v11 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v29;
      do
      {
        for (i = 0LL; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v29 != v13) {
            objc_enumerationMutation(obj);
          }
          uint64_t v15 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
          id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 identifiers]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 anyObject]);
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v15 value]);
          id v19 = (void *)objc_claimAutoreleasedReturnValue([v15 currencyCode]);
          id v20 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:]( v27,  "_recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:",  v17,  v18,  v19,  [v15 exponent],  v26));

          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v15 localizedTitle]);
          [v20 setLocalizedTitle:v21];

          -[NSMutableArray addObject:](v10, "addObject:", v20);
        }

        id v12 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
      }

      while (v12);
    }

    uint64_t v5 = v23;
    if (-[NSMutableArray count](v10, "count")) {
      -[PDDatabaseManager updatePaymentBalances:forPassUniqueIdentifier:]( v27,  "updatePaymentBalances:forPassUniqueIdentifier:",  v10,  v23);
    }

    id v4 = v24;
    id v6 = v22;
  }
}

- (void)_updatePaymentBalancesAndPlansForTransitAppletState:(id)a3 passUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5 unitDictionary:(id)a6
{
  id v9 = a3;
  id v10 = a4;
  id v62 = a6;
  id v11 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v12 = self;
  __int128 v61 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v10));
  uint64_t v13 = objc_claimAutoreleasedReturnValue([v9 balances]);
  id v63 = v11;
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v9 balances]);
    id v16 = [v15 count];

    if (v16)
    {
      id v58 = v10;
      id v59 = v9;
      id v17 = [v61 persistentID];
      __int128 v57 = (void *)objc_claimAutoreleasedReturnValue( +[TransitAppletState anyInDatabase:withPaymentApplicationPID:]( &OBJC_CLASS___TransitAppletState,  "anyInDatabase:withPaymentApplicationPID:",  self->_database,  a5));
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[TransitAppletStateBalance transitAppletBalancesInDatabase:forPaymentPassPID:andTransitAppletStatePID:]( TransitAppletStateBalance,  "transitAppletBalancesInDatabase:forPaymentPassPID:andTransitAppletStatePID:",  self->_database,  v17,  [v57 persistentID]));
      __int128 v66 = 0u;
      __int128 v67 = 0u;
      __int128 v68 = 0u;
      __int128 v69 = 0u;
      id v19 = [v18 countByEnumeratingWithState:&v66 objects:v72 count:16];
      if (v19)
      {
        id v20 = v19;
        uint64_t v21 = *(void *)v67;
        do
        {
          for (i = 0LL; i != v20; i = (char *)i + 1)
          {
            if (*(void *)v67 != v21) {
              objc_enumerationMutation(v18);
            }
            id v23 = *(void **)(*((void *)&v66 + 1) + 8LL * (void)i);
            id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 identifier]);
            int v25 = (void *)objc_claimAutoreleasedReturnValue([v23 balance]);
            id v26 = (void *)objc_claimAutoreleasedReturnValue([v23 currency]);
            id v27 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:]( v12,  "_recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:",  v24,  v25,  v26,  [v23 exponent],  v62));

            __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v23 expirationDate]);
            [v27 setExpirationDate:v28];

            id v11 = v63;
            -[NSMutableArray addObject:](v63, "addObject:", v27);
          }

          id v20 = [v18 countByEnumeratingWithState:&v66 objects:v72 count:16];
        }

        while (v20);
      }

      uint64_t Object = PKLogFacilityTypeGetObject(6LL);
      __int128 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
      id v10 = v58;
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v71 = v58;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Updating balances for multiple balance pass with unique identifier: %@",  buf,  0xCu);
      }

      id v9 = v59;
    }
  }

  __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v9 balance]);
  if (v31)
  {
    id v32 = objc_alloc(&OBJC_CLASS___PKCurrencyAmount);
    id v33 = (void *)objc_claimAutoreleasedReturnValue([v9 balance]);
    id v34 = (void *)objc_claimAutoreleasedReturnValue([v9 currency]);
    BOOL v35 = -[PKCurrencyAmount initWithAmount:currency:exponent:](v32, "initWithAmount:currency:exponent:", v33, v34, 0LL);

    id v11 = v63;
    id v36 = objc_alloc(&OBJC_CLASS___PKPaymentBalance);
    BOOL v37 = -[PKPaymentBalance initWithIdentifier:forCurrencyAmount:]( v36,  "initWithIdentifier:forCurrencyAmount:",  PKPaymentBalanceStoredValueDefaultIdentifier,  v35);
    unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    -[PKPaymentBalance setLastUpdateDate:](v37, "setLastUpdateDate:", v38);

    -[NSMutableArray addObject:](v63, "addObject:", v37);
    uint64_t v39 = PKLogFacilityTypeGetObject(6LL);
    id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v71 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEFAULT,  "Updating balance for single balance pass with unique identifier: %@",  buf,  0xCu);
    }
  }

  uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue([v9 loyaltyBalance]);

  if (v41)
  {
    id v42 = objc_alloc(&OBJC_CLASS___PKCurrencyAmount);
    id v43 = (void *)objc_claimAutoreleasedReturnValue([v9 loyaltyBalance]);
    char v44 = v43;
    if (v43)
    {
      [v43 decimalValue];
    }

    else
    {
      v64[0] = 0LL;
      v64[1] = 0LL;
      int v65 = 0;
    }

    id v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSDecimalNumber decimalNumberWithDecimal:]( &OBJC_CLASS___NSDecimalNumber,  "decimalNumberWithDecimal:",  v64));
    id v46 = -[PKCurrencyAmount initWithAmount:currency:exponent:]( v42,  "initWithAmount:currency:exponent:",  v45,  PKNoCurrencyCode,  0LL);

    id v47 = objc_alloc(&OBJC_CLASS___PKPaymentBalance);
    id v48 = -[PKPaymentBalance initWithIdentifier:forCurrencyAmount:]( v47,  "initWithIdentifier:forCurrencyAmount:",  PKPaymentBalanceLoyaltyBalanceDefaultIdentifier,  v46);
    id v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    -[PKPaymentBalance setLastUpdateDate:](v48, "setLastUpdateDate:", v49);

    -[NSMutableArray addObject:](v11, "addObject:", v48);
    uint64_t v50 = PKLogFacilityTypeGetObject(6LL);
    id v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v71 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEFAULT,  "Updating loyalty balance for single balance pass with unique identifier: %@",  buf,  0xCu);
    }
  }

  if (-[NSMutableArray count](v11, "count"))
  {
    id v52 = v11;
    __int128 v53 = (void *)objc_claimAutoreleasedReturnValue([v9 historySequenceNumber]);
    id v54 = (void *)objc_claimAutoreleasedReturnValue([v53 stringValue]);
    -[PDDatabaseManager updatePaymentBalances:forPassUniqueIdentifier:transactionSequenceNumber:]( v12,  "updatePaymentBalances:forPassUniqueIdentifier:transactionSequenceNumber:",  v52,  v10,  v54);
  }

  id v55 = (void *)objc_claimAutoreleasedReturnValue([v9 commutePlans]);
  unint64_t v56 = v55;
  if (v55 && [v55 count]) {
    -[PDDatabaseManager updateAppletCommutePlans:forPassUniqueIdentifier:paymentApplicationPID:]( v12,  "updateAppletCommutePlans:forPassUniqueIdentifier:paymentApplicationPID:",  v56,  v10,  a5);
  }
}

- (void)updateAppletCommutePlans:(id)a3 forPassUniqueIdentifier:(id)a4 paymentApplicationPID:(int64_t)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v9));
  if (v10)
  {
    id v43 = v9;
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[TransitAppletState anyInDatabase:withPaymentApplicationPID:]( &OBJC_CLASS___TransitAppletState,  "anyInDatabase:withPaymentApplicationPID:",  self->_database,  a5));
    id v12 = [v10 persistentID];
    id v40 = v11;
    id v13 = [v11 persistentID];
    +[TransitAppletStateCommutePlan deleteEntitiesForPaymentPassPID:andTransitAppletStatePID:inDatabase:]( &OBJC_CLASS___TransitAppletStateCommutePlan,  "deleteEntitiesForPaymentPassPID:andTransitAppletStatePID:inDatabase:",  v12,  v13,  self->_database);
    id v14 =  +[TransitAppletStateCommutePlan insertTransitAppletCommutePlans:withPaymentPassPID:withTransitAppletStatePID:inDatabase:]( &OBJC_CLASS___TransitAppletStateCommutePlan,  "insertTransitAppletCommutePlans:withPaymentPassPID:withTransitAppletStatePID:inDatabase:",  v8,  v12,  v13,  self->_database);
    id v46 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v42 = v10;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v10 pass]);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v15));
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 paymentPass]);

    uint64_t v39 = v17;
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 transitCommutePlans]);
    id v19 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    __int128 v51 = 0u;
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    id v20 = v18;
    id v21 = [v20 countByEnumeratingWithState:&v51 objects:v58 count:16];
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = *(void *)v52;
      do
      {
        for (i = 0LL; i != v22; i = (char *)i + 1)
        {
          if (*(void *)v52 != v23) {
            objc_enumerationMutation(v20);
          }
          int v25 = *(void **)(*((void *)&v51 + 1) + 8LL * (void)i);
          id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 identifier]);
          -[NSMutableDictionary setObject:forKey:](v19, "setObject:forKey:", v25, v26);
        }

        id v22 = [v20 countByEnumeratingWithState:&v51 objects:v58 count:16];
      }

      while (v22);
    }

    uint64_t v41 = self;

    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v47 = 0u;
    __int128 v48 = 0u;
    id v44 = v8;
    id obj = v8;
    id v27 = [obj countByEnumeratingWithState:&v47 objects:v57 count:16];
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = *(void *)v48;
      do
      {
        for (j = 0LL; j != v28; j = (char *)j + 1)
        {
          if (*(void *)v48 != v29) {
            objc_enumerationMutation(obj);
          }
          __int128 v31 = *(void **)(*((void *)&v47 + 1) + 8LL * (void)j);
          id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 identifier]);
          id v33 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v19, "objectForKeyedSubscript:", v32));
          id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 titleText]);
          BOOL v35 = (void *)objc_claimAutoreleasedReturnValue([v33 descriptionText]);
          id v36 = -[PKPaymentCommutePlanDetail initWithAppletCommutePlan:label:value:]( objc_alloc(&OBJC_CLASS___PKPaymentCommutePlanDetail),  "initWithAppletCommutePlan:label:value:",  v31,  v34,  v35);
          -[NSMutableArray safelyAddObject:](v46, "safelyAddObject:", v36);
        }

        id v28 = [obj countByEnumeratingWithState:&v47 objects:v57 count:16];
      }

      while (v28);
    }

    BOOL v37 = (os_log_s *)-[NSMutableArray copy](v46, "copy");
    id v9 = v43;
    -[PDDatabaseManager updatePaymentPlans:forPassUniqueIdentifier:]( v41,  "updatePaymentPlans:forPassUniqueIdentifier:",  v37,  v43);

    id v8 = v44;
    id v10 = v42;
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(6LL);
    BOOL v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v56 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "Unable to set applet commute plans for a pass that doesn't exist: %@",  buf,  0xCu);
    }
  }
}

- (void)updatePaymentPlans:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v7));
  id v9 = v8;
  if (v8)
  {
    database = self->_database;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_100126794;
    v13[3] = &unk_10063E468;
    id v14 = v8;
    uint64_t v15 = self;
    id v16 = v6;
    id v17 = v7;
    sub_1002CCC5C((uint64_t)database, v13);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(6LL);
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v19 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Payment plans updated for pass that doesn't exist: %@",  buf,  0xCu);
    }
  }
}

- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4
{
}

- (void)updatePaymentBalances:(id)a3 forPassUniqueIdentifier:(id)a4 transactionSequenceNumber:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v80 = (__CFString *)a5;
  id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v88 = self;
  id v81 = v9;
  __int128 v105 = 0u;
  __int128 v106 = 0u;
  __int128 v107 = 0u;
  __int128 v108 = 0u;
  id v79 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager paymentBalancesForPassUniqueIdentifier:]( self,  "paymentBalancesForPassUniqueIdentifier:",  v9));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v79 allObjects]);
  id v12 = [v11 countByEnumeratingWithState:&v105 objects:v113 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v106;
    do
    {
      for (i = 0LL; i != v13; i = (char *)i + 1)
      {
        if (*(void *)v106 != v14) {
          objc_enumerationMutation(v11);
        }
        id v16 = *(void **)(*((void *)&v105 + 1) + 8LL * (void)i);
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 identifiers]);
        -[NSMutableDictionary setObject:forKeyedSubscript:](v10, "setObject:forKeyedSubscript:", v16, v17);
      }

      id v13 = [v11 countByEnumeratingWithState:&v105 objects:v113 count:16];
    }

    while (v13);
  }

  uint64_t v18 = v88;
  id v19 = v81;
  id v20 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  v88->_database,  v81));
  id v21 = v20;
  if (v20)
  {
    id v78 = v20;
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v20 pass]);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](v88, "_registeredPass:", v22));
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 paymentPass]);

    id v25 = PKPaymentPassUnitDictionary(v24);
    __int128 v87 = (void *)objc_claimAutoreleasedReturnValue(v25);
    __int128 v86 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v82 = v24;
    unsigned int v85 = [v24 isAutoTopEnabled];
    __int128 v101 = 0u;
    __int128 v102 = 0u;
    __int128 v103 = 0u;
    __int128 v104 = 0u;
    id obj = v8;
    id v26 = [obj countByEnumeratingWithState:&v101 objects:v110 count:16];
    if (!v26)
    {
      __int128 v83 = 0LL;
LABEL_43:

      id v19 = v81;
      goto LABEL_44;
    }

    id v27 = v26;
    id v77 = v8;
    __int128 v83 = 0LL;
    uint64_t v28 = *(void *)v102;
    do
    {
      for (j = 0LL; j != v27; j = (char *)j + 1)
      {
        __int128 v30 = v10;
        if (*(void *)v102 != v28) {
          objc_enumerationMutation(obj);
        }
        __int128 v31 = *(void **)(*((void *)&v101 + 1) + 8LL * (void)j);
        id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 identifiers]);
        id v33 = (void *)objc_claimAutoreleasedReturnValue([v32 anyObject]);
        id v34 = (void *)objc_claimAutoreleasedReturnValue([v31 value]);
        BOOL v35 = (void *)objc_claimAutoreleasedReturnValue([v31 currencyCode]);
        id v36 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:]( v88,  "_recomputedPaymentBalanceForIdentifier:value:currency:exponent:unitDictionary:",  v33,  v34,  v35,  [v31 exponent],  v87));

        BOOL v37 = (void *)objc_claimAutoreleasedReturnValue([v31 localizedTitle]);
        [v36 setLocalizedTitle:v37];

        unsigned int v38 = (void *)objc_claimAutoreleasedReturnValue([v31 localizedDescription]);
        [v36 setLocalizedDescription:v38];

        -[NSMutableArray addObject:](v86, "addObject:", v36);
        if (v85 && [v82 isAutoTopUpBalance:v36])
        {
          id v39 = v36;

          __int128 v83 = v39;
        }

        id v10 = v30;
      }

      id v27 = [obj countByEnumeratingWithState:&v101 objects:v110 count:16];
    }

    while (v27);

    if (!v83)
    {
      __int128 v83 = 0LL;
      id v8 = v77;
      id v19 = v81;
      uint64_t v18 = v88;
LABEL_44:
      id v60 = -[NSMutableArray copy](v86, "copy");
      uint64_t database = (uint64_t)v18->_database;
      v93[0] = _NSConcreteStackBlock;
      v93[1] = 3221225472LL;
      v93[2] = sub_10012717C;
      v93[3] = &unk_10063E440;
      id v94 = v78;
      uint64_t v95 = v18;
      id v62 = v60;
      id v96 = v62;
      sub_1002CCC5C(database, v93);
      delegateQueue = (dispatch_queue_s *)v18->_delegateQueue;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10012729C;
      block[3] = &unk_10063B060;
      void block[4] = v18;
      id v90 = v19;
      __int128 v91 = v10;
      id v92 = v62;
      id v64 = v62;
      int v65 = delegateQueue;
      id v21 = v78;
      dispatch_async(v65, block);

      id v55 = v80;
      __int128 v54 = (os_log_s *)v82;
      goto LABEL_45;
    }

    __int128 v99 = 0u;
    __int128 v100 = 0u;
    __int128 v98 = 0u;
    __int128 v97 = 0u;
    id v40 = (void *)objc_claimAutoreleasedReturnValue([v82 autoTopUpFields]);
    id v41 = [v40 countByEnumeratingWithState:&v97 objects:v109 count:16];
    if (v41)
    {
      id v42 = v41;
      id obj = 0LL;
      uint64_t v43 = *(void *)v98;
      uint64_t v44 = PKPassFieldKeyAutoTopUp;
      double v45 = 0.0;
      double v46 = 0.0;
      do
      {
        for (k = 0LL; k != v42; k = (char *)k + 1)
        {
          if (*(void *)v98 != v43) {
            objc_enumerationMutation(v40);
          }
          __int128 v48 = *(void **)(*((void *)&v97 + 1) + 8LL * (void)k);
          __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([v48 key]);
          if ([v49 isEqualToString:v44])
          {
            [v48 amount];
            double v46 = v50;
            [v48 threshold];
            double v45 = v51;
            uint64_t v52 = objc_claimAutoreleasedReturnValue([v48 foreignReferenceIdentifiers]);

            id obj = (id)v52;
          }
        }

        id v42 = [v40 countByEnumeratingWithState:&v97 objects:v109 count:16];
      }

      while (v42);
    }

    else
    {
      id obj = 0LL;
      double v45 = 0.0;
      double v46 = 0.0;
    }

    id v56 = (void *)objc_claimAutoreleasedReturnValue([v83 currencyValue]);
    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue([v56 amount]);

    if (v46 <= 0.0)
    {
      id v8 = v77;
      uint64_t v18 = v88;
    }

    else
    {
      id v8 = v77;
      uint64_t v18 = v88;
      if (v45 > 0.0)
      {
        id v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v45));
        if ([v57 compare:v58] == (id)-1)
        {
          id v59 = [v82 activationState];

          if (v59) {
            goto LABEL_42;
          }
          __int128 v66 = v80;
          if (!v80)
          {
            __int128 v67 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager primaryPaymentApplicationForPassUniqueIdentifier:]( v88,  "primaryPaymentApplicationForPassUniqueIdentifier:",  v81));
            __int128 v68 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transitStateWithPassUniqueIdentifier:paymentApplication:]( v88,  "transitStateWithPassUniqueIdentifier:paymentApplication:",  v81,  v67));
            __int128 v69 = (void *)objc_claimAutoreleasedReturnValue([v68 historySequenceNumber]);
            uint64_t v70 = objc_claimAutoreleasedReturnValue([v69 stringValue]);
            id v71 = (void *)v70;
            uint64_t v72 = @"0";
            if (v70) {
              uint64_t v72 = (__CFString *)v70;
            }
            __int128 v66 = v72;
          }

          uint64_t v73 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _transactionServiceForPass:](v88, "_transactionServiceForPass:", v82));
          id v58 = (void *)objc_claimAutoreleasedReturnValue([v73 notificationService]);

          id WeakRetained = objc_loadWeakRetained((id *)&v88->_notificationServicesDelegate);
          BOOL v75 = (void *)objc_claimAutoreleasedReturnValue([v82 uniqueID]);
          BOOL v76 = (void *)objc_claimAutoreleasedReturnValue([v82 partnerAccountIdentifier]);
          id v80 = v66;
          [WeakRetained handlePostBalanceTaskWithNotificationService:v58 passUniqueIdenitifer:v75 accountIdentifier:v76 transactionSequenceNumber:v66 balance:v83];

          id v8 = v77;
        }
      }
    }

- (id)paymentBalanceWithIdentifier:(id)a3 forPassUniqueIdentifier:(id)a4
{
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[PaymentBalance anyInDatabase:withIdentifier:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentBalance,  "anyInDatabase:withIdentifier:forPassWithUniqueIdentifier:",  self->_database,  a3,  a4));
  uint64_t v5 = (void *)v4;
  if (v4 && (objc_opt_respondsToSelector(v4, "paymentBalance") & 1) != 0) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 paymentBalance]);
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (id)paymentBalancesForPassUniqueIdentifier:(id)a3
{
  return +[PaymentBalance paymentBalancesInDatabase:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentBalance,  "paymentBalancesInDatabase:forPassWithUniqueIdentifier:",  self->_database,  a3);
}

- (id)plansForPassUniqueIdentifier:(id)a3
{
  return +[PaymentCommutePlanDetail paymentPlansInDatabase:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentCommutePlanDetail,  "paymentPlansInDatabase:forPassWithUniqueIdentifier:",  self->_database,  a3);
}

- (void)truncatePaymentBalancesForPassUniqueIdentifier:(id)a3 toMaximumEntityCount:(int64_t)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v6));
  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager paymentBalancesForPassUniqueIdentifier:]( self,  "paymentBalancesForPassUniqueIdentifier:",  v6));
    +[PaymentBalance truncateEntitiesForPass:inDatabase:toCount:]( &OBJC_CLASS___PaymentBalance,  "truncateEntitiesForPass:inDatabase:toCount:",  v7,  self->_database,  a4);
    id v9 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager paymentBalancesForPassUniqueIdentifier:]( self,  "paymentBalancesForPassUniqueIdentifier:",  v6));
    id v10 = [v9 count];
    if (v10 != [v8 count])
    {
      delegateQueue = self->_delegateQueue;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1001274CC;
      block[3] = &unk_100639350;
      void block[4] = self;
      id v13 = v6;
      id v14 = v9;
      dispatch_async((dispatch_queue_t)delegateQueue, block);
    }
  }
}

- (void)deleteAllPaymentBalancesForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v4));
  if (v5)
  {
    +[PaymentBalance deleteEntitiesForPass:inDatabase:]( &OBJC_CLASS___PaymentBalance,  "deleteEntitiesForPass:inDatabase:",  v5,  self->_database);
    delegateQueue = self->_delegateQueue;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_1001275EC;
    v7[3] = &unk_1006392B0;
    void v7[4] = self;
    id v8 = v4;
    dispatch_async((dispatch_queue_t)delegateQueue, v7);
  }
}

- (int64_t)paymentTransactionAmountCountInDatabase
{
  return +[SQLiteEntity countInDatabase:predicate:]( &OBJC_CLASS___PaymentTransactionAmount,  "countInDatabase:predicate:",  self->_database,  0LL);
}

- (id)balanceReminderThresholdForBalanceIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4
{
  if (a4) {
    return (id)objc_claimAutoreleasedReturnValue( +[BalanceReminder balanceReminderInDatabase:forBalanceIdentifier:passIdentifier:]( &OBJC_CLASS___BalanceReminder,  "balanceReminderInDatabase:forBalanceIdentifier:passIdentifier:",  self->_database,  a3,  a4));
  }
  else {
    return 0LL;
  }
}

- (BOOL)setBalanceReminder:(id)a3 forBalanceIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v10));
  if (v11)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[BalanceReminder insertOrUpdateBalanceReminder:forBalanceIdentifier:pass:database:]( &OBJC_CLASS___BalanceReminder,  "insertOrUpdateBalanceReminder:forBalanceIdentifier:pass:database:",  v8,  v9,  v11,  self->_database));
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 balanceReminder]);
    if (v13)
    {
      delegateQueue = self->_delegateQueue;
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472LL;
      void v17[2] = sub_1001277F4;
      v17[3] = &unk_10063B060;
      void v17[4] = self;
      id v18 = v10;
      id v19 = v13;
      id v20 = v9;
      dispatch_async((dispatch_queue_t)delegateQueue, v17);
    }

    BOOL v15 = v12 != 0LL;
  }

  else
  {
    BOOL v15 = 0;
  }

  return v15;
}

- (id)commutePlanReminderForCommutePlanIdentifier:(id)a3 withPassUniqueIdentifier:(id)a4
{
  if (a4) {
    return (id)objc_claimAutoreleasedReturnValue( +[CommutePlanReminder commutePlanReminderInDatabase:forCommutePlanIdentifier:passIdentifier:]( &OBJC_CLASS___CommutePlanReminder,  "commutePlanReminderInDatabase:forCommutePlanIdentifier:passIdentifier:",  self->_database,  a3,  a4));
  }
  else {
    return 0LL;
  }
}

- (BOOL)setCommutePlanReminder:(id)a3 forCommutePlanIdentifier:(id)a4 withPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v10));
  if (v11
    && (id v12 = (void *)objc_claimAutoreleasedReturnValue( +[CommutePlanReminder insertOrUpdateCommutePlanReminder:forCommutePlanIdentifier:pass:database:]( &OBJC_CLASS___CommutePlanReminder,  "insertOrUpdateCommutePlanReminder:forCommutePlanIdentifier:pass:database:",  v8,  v9,  v11,  self->_database)),  v12,  v12))
  {
    delegateQueue = self->_delegateQueue;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_100127984;
    void v16[3] = &unk_1006392B0;
    v16[4] = self;
    id v17 = v10;
    dispatch_async((dispatch_queue_t)delegateQueue, v16);

    BOOL v14 = 1;
  }

  else
  {
    BOOL v14 = 0;
  }

  return v14;
}

- (id)transactionArchiveForRecurringPayment:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive anyInDatabase:forRecurringPaymentIdentifier:]( &OBJC_CLASS___PaymentTransactionArchive,  "anyInDatabase:forRecurringPaymentIdentifier:",  database,  v6));

  if (!v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentRecurringPayment recurringPaymentWithIdentifier:inDatabase:]( &OBJC_CLASS___PeerPaymentRecurringPayment,  "recurringPaymentWithIdentifier:inDatabase:",  v8,  self->_database));

    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive insertArchiveForRecurringPayment:inDatabase:]( &OBJC_CLASS___PaymentTransactionArchive,  "insertArchiveForRecurringPayment:inDatabase:",  v9,  self->_database));
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 transactionArchive]);

  return v10;
}

- (void)updateTransactionArchive:(id)a3 forRecurringPayment:(id)a4
{
  uint64_t database = self->_database;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a4 identifier]);
  id v8 = (id)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive anyInDatabase:forRecurringPaymentIdentifier:]( &OBJC_CLASS___PaymentTransactionArchive,  "anyInDatabase:forRecurringPaymentIdentifier:",  database,  v7));

  [v8 updateWithTransactionArchive:v6];
}

- (id)transactionArchiveForCounterpartImageData:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive anyInDatabase:forCounterpartImageDataIdentifier:]( &OBJC_CLASS___PaymentTransactionArchive,  "anyInDatabase:forCounterpartImageDataIdentifier:",  database,  v6));

  if (!v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentCounterpartImageData counterpartImageDataWithIdentifier:inDatabase:]( &OBJC_CLASS___PeerPaymentCounterpartImageData,  "counterpartImageDataWithIdentifier:inDatabase:",  v8,  self->_database));

    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive insertArchiveForCounterpartImageData:inDatabase:]( &OBJC_CLASS___PaymentTransactionArchive,  "insertArchiveForCounterpartImageData:inDatabase:",  v9,  self->_database));
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 transactionArchive]);

  return v10;
}

- (void)updateTransactionArchive:(id)a3 forCounterpartImageData:(id)a4
{
  uint64_t database = self->_database;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a4 identifier]);
  id v8 = (id)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive anyInDatabase:forCounterpartImageDataIdentifier:]( &OBJC_CLASS___PaymentTransactionArchive,  "anyInDatabase:forCounterpartImageDataIdentifier:",  database,  v7));

  [v8 updateWithTransactionArchive:v6];
}

- (id)transactionArchiveForTransactionIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive anyInDatabase:forTransactionIdentifier:]( &OBJC_CLASS___PaymentTransactionArchive,  "anyInDatabase:forTransactionIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionArchive]);

  return v4;
}

- (id)transactionArchiveForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:",  self->_database,  a3,  a4));
  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransactionArchive anyInDatabase:forTransaction:]( &OBJC_CLASS___PaymentTransactionArchive,  "anyInDatabase:forTransaction:",  self->_database,  v5));
    else {
      id v7 = 0LL;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

- (id)transactionArchivesWithType:(unint64_t)a3 isArchived:(BOOL)a4
{
  return +[PaymentTransactionArchive transactionArchivesWithType:isArchived:inDatabase:]( &OBJC_CLASS___PaymentTransactionArchive,  "transactionArchivesWithType:isArchived:inDatabase:",  a3,  a4,  self->_database);
}

- (id)transactionArchivesWithCloudStoreZone:(id)a3 isArchived:(BOOL)a4
{
  return +[PaymentTransactionArchive transactionArchivesWithCloudStoreZone:isArchived:inDatabase:]( &OBJC_CLASS___PaymentTransactionArchive,  "transactionArchivesWithCloudStoreZone:isArchived:inDatabase:",  a3,  a4,  self->_database);
}

- (id)_insertOrUpdatePaymentTransaction:(id)a3 transactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9
{
  BOOL v148 = a8;
  id v14 = a3;
  id v15 = a4;
  id v172 = a5;
  id v16 = a6;
  if (v15)
  {
    v170 = (void *)objc_claimAutoreleasedReturnValue([v14 identifier]);
    v171 = (void *)objc_claimAutoreleasedReturnValue([v14 serviceIdentifier]);
    v163 = (void *)objc_claimAutoreleasedReturnValue([v14 paymentHash]);
    v160 = (void *)objc_claimAutoreleasedReturnValue([v14 transactionDate]);
    unsigned int v165 = [v14 hasNotificationServiceData];
    unsigned int v153 = [v14 hasTransactionSource];
    id v152 = [v14 updateReasons];
    unsigned int v158 = -[PDDatabaseManager _updateCameExclusivelyFromCloudStore:](self, "_updateCameExclusivelyFromCloudStore:");
    uint64_t v17 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passUniqueIdentifierForTransactionSourceIdentifier:]( self,  "passUniqueIdentifierForTransactionSourceIdentifier:",  v15));
    id v18 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager paymentApplicationForTransactionSourceIdentifier:]( self,  "paymentApplicationForTransactionSourceIdentifier:",  v15));

    id v159 = v16;
    v161 = (void *)v17;
    if (v18)
    {
      v162 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v15));
    }

    else
    {
      id v24 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersAssociatedWithPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersAssociatedWithPassUniqueIdentifier:",  v17));
      id v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v15));
      v162 = (void *)objc_claimAutoreleasedReturnValue([v25 setByAddingObjectsFromSet:v24]);
    }

    v164 = (void *)objc_claimAutoreleasedReturnValue([v14 accountIdentifier]);
    id v26 = [v14 accountType];
    unint64_t v27 = -[PDDatabaseManager transactionSourceTypeForTransactionSourceIdentifier:]( self,  "transactionSourceTypeForTransactionSourceIdentifier:",  v15);
    uint64_t Object = PKLogFacilityTypeGetObject(23LL);
    uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    id v20 = v170;
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218754;
      *(void *)v206 = a7;
      *(_WORD *)&v206[8] = 2114;
      *(void *)&v206[10] = v170;
      __int16 v207 = 2048;
      *(void *)v208 = v27;
      *(_WORD *)&v208[8] = 2048;
      id v209 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "will insert or update (%lu) transaction: %{public}@ source: %lu, %ld",  buf,  0x2Au);
    }

    if ([v170 length])
    {
      uint64_t v30 = objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  v170));
      BOOL v31 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
      if (v30)
      {
        id v22 = (void *)v30;
        if (v31)
        {
          *(_DWORD *)buf = 138543362;
          *(void *)v206 = v170;
          id v32 = "Matched Transaction to Transaction with Identifier: %{public}@";
LABEL_42:
          BOOL v35 = v29;
          uint32_t v36 = 12;
          goto LABEL_43;
        }

        goto LABEL_44;
      }

      if (v31)
      {
        *(_DWORD *)buf = 138543362;
        *(void *)v206 = v170;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Could Not Match Transaction on Identifier: %{public}@",  buf,  0xCu);
      }
    }

    if ([v171 length])
    {
      uint64_t v33 = objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:",  self->_database,  v171,  v15));
      BOOL v34 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
      if (v33)
      {
        id v22 = (void *)v33;
        if (v34)
        {
          *(_DWORD *)buf = 138543618;
          *(void *)v206 = v171;
          *(_WORD *)&v206[8] = 2112;
          *(void *)&v206[10] = v15;
          id v32 = "Matched Transaction to Transaction with Service Identifier: %{public}@, transactionSourceIdentifier: %@";
          BOOL v35 = v29;
          uint32_t v36 = 22;
LABEL_43:
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, v32, buf, v36);
          goto LABEL_44;
        }

        goto LABEL_44;
      }

      if (v34)
      {
        *(_DWORD *)buf = 138543618;
        *(void *)v206 = v171;
        *(_WORD *)&v206[8] = 2112;
        *(void *)&v206[10] = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Could Not Match Transaction on Service Identifier: %{public}@, transactionSourceIdentifier: %@",  buf,  0x16u);
      }
    }

    if ([v164 length] && v26)
    {
      uint64_t v37 = objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:",  self->_database,  v171,  v164,  v26));
      BOOL v38 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
      if (v37)
      {
        id v22 = (void *)v37;
        if (v38)
        {
          uint64_t v39 = PKPaymentTransactionAccountTypeToString(v26);
          id v40 = (id)objc_claimAutoreleasedReturnValue(v39);
          *(_DWORD *)buf = 138543874;
          *(void *)v206 = v171;
          *(_WORD *)&v206[8] = 2112;
          *(void *)&v206[10] = v164;
          __int16 v207 = 2114;
          *(void *)v208 = v40;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Matched Transaction to Transaction with Service Identifier: %{public}@, accountIdentifier: %@, accountType %{public}@",  buf,  0x20u);

          id v20 = v170;
        }

        goto LABEL_44;
      }

      if (v38)
      {
        uint64_t v41 = PKPaymentTransactionAccountTypeToString(v26);
        id v42 = (id)objc_claimAutoreleasedReturnValue(v41);
        *(_DWORD *)buf = 138543874;
        *(void *)v206 = v171;
        *(_WORD *)&v206[8] = 2112;
        *(void *)&v206[10] = v164;
        __int16 v207 = 2114;
        *(void *)v208 = v42;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Could Not Match Transaction on Service Identifier: %{public}@, accountIdentifier: %@, accountType %{public}@",  buf,  0x20u);

        id v20 = v170;
      }
    }

    if ([v163 length])
    {
      if (v153) {
        uint64_t v43 = 2LL;
      }
      else {
        uint64_t v43 = 1LL;
      }
      if (v165) {
        uint64_t v44 = 2LL;
      }
      else {
        uint64_t v44 = 1LL;
      }
      id v22 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withPaymentHash:withTransactionSource:withNotificationServiceData:transactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withPaymentHash:withTransactionSource:withNotificationServiceData:transactionSourceIdentifiers:",  self->_database,  v163,  v43,  v44,  v162));
      BOOL v45 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
      if (v22)
      {
        if (v45)
        {
          *(_DWORD *)buf = 138412290;
          *(void *)v206 = v163;
          id v32 = "Matched Transaction to Transaction with Payment Hash: %@";
          goto LABEL_42;
        }

- (BOOL)_updateCameExclusivelyFromCloudStore:(unint64_t)a3
{
  return (a3 & 0xFFFFFFFFFFFFFFC3LL) == 0 && (a3 & 0x3C) != 0;
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9
{
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  uint64_t v36 = 0LL;
  uint64_t v37 = &v36;
  uint64_t v38 = 0x3032000000LL;
  uint64_t v39 = sub_10011BCF0;
  id v40 = sub_10011BD00;
  id v41 = 0LL;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100129E90;
  block[3] = &unk_1006450A8;
  id v27 = v17;
  id v28 = v16;
  uint64_t v29 = self;
  id v30 = v15;
  id v31 = v18;
  id v32 = &v36;
  BOOL v35 = a8;
  unint64_t v33 = a7;
  BOOL v34 = a9;
  id v20 = v18;
  id v21 = v15;
  id v22 = v16;
  id v23 = v17;
  dispatch_sync((dispatch_queue_t)paymentTransactionUpdateQueue, block);
  id v24 = (id)v37[5];

  _Block_object_dispose(&v36, 8);
  return v24;
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8 insertedTransaction:(BOOL *)a9
{
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  uint64_t v35 = 0LL;
  uint64_t v36 = &v35;
  uint64_t v37 = 0x3032000000LL;
  uint64_t v38 = sub_10011BCF0;
  uint64_t v39 = sub_10011BD00;
  id v40 = 0LL;
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10012A330;
  block[3] = &unk_1006450D0;
  void block[4] = self;
  id v27 = v15;
  id v28 = v16;
  id v29 = v17;
  id v30 = v18;
  id v31 = &v35;
  BOOL v34 = a8;
  unint64_t v32 = a7;
  unint64_t v33 = a9;
  id v20 = v18;
  id v21 = v17;
  id v22 = v16;
  id v23 = v15;
  dispatch_sync((dispatch_queue_t)paymentTransactionUpdateQueue, block);
  id v24 = (id)v36[5];

  _Block_object_dispose(&v35, 8);
  return v24;
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 transactionArchive:(id)a5 originDeviceID:(id)a6 insertionMode:(unint64_t)a7 performTruncation:(BOOL)a8
{
  return -[PDDatabaseManager insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:transactionArchive:originDeviceID:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:transactionArchive:originDeviceID:insertionM ode:performTruncation:insertedTransaction:",  a3,  a4,  a5,  a6,  a7,  a8,  0LL);
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 originDeviceID:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8
{
  return -[PDDatabaseManager insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:transactionArchive:originDeviceID:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:transactionArchive:originDeviceID:insertionM ode:performTruncation:insertedTransaction:",  a3,  a4,  0LL,  a5,  a6,  a7,  a8);
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7 insertedTransaction:(BOOL *)a8
{
  return -[PDDatabaseManager insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:originDeviceID:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:originDeviceID:insertionMode:per formTruncation:insertedTransaction:",  a3,  a4,  a5,  0LL,  a6,  a7,  a8);
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withPassUniqueIdentifier:(id)a4 paymentApplication:(id)a5 insertionMode:(unint64_t)a6 performTruncation:(BOOL)a7
{
  return -[PDDatabaseManager insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:originDeviceID:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:originDeviceID:insertionMode:per formTruncation:insertedTransaction:",  a3,  a4,  a5,  0LL,  a6,  a7,  0LL);
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6 insertedTransaction:(BOOL *)a7
{
  return -[PDDatabaseManager insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:originDeviceID:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:originDeviceID:insertionMode:performTruncati on:insertedTransaction:",  a3,  a4,  0LL,  a5,  a6,  a7);
}

- (id)insertOrUpdatePaymentTransaction:(id)a3 withTransactionSourceIdentifier:(id)a4 insertionMode:(unint64_t)a5 performTruncation:(BOOL)a6
{
  return -[PDDatabaseManager insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:originDeviceID:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:originDeviceID:insertionMode:performTruncati on:insertedTransaction:",  a3,  a4,  0LL,  a5,  a6,  0LL);
}

- (id)updateSuppressBehavior:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  [v8 setSuppressBehavior:a3];
  uint64_t database = self->_database;
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 identifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v11));

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 paymentTransaction]);
  objc_msgSend(v13, "addUpdateReasons:", objc_msgSend(v8, "updateReasons"));
  [v12 updateSuppressBehavior:a3];
  delegateQueue = self->_delegateQueue;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  v21[2] = sub_10012A5B8;
  v21[3] = &unk_10063B060;
  v21[4] = self;
  id v22 = v9;
  id v15 = v8;
  id v23 = v15;
  id v24 = v13;
  id v16 = v13;
  id v17 = v9;
  dispatch_async((dispatch_queue_t)delegateQueue, v21);
  id v18 = v24;
  id v19 = v15;

  return v19;
}

- (void)updateSuppressBehavior:(unint64_t)a3 forTransactionSourceIdentifier:(id)a4 serviceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:",  self->_database,  a5,  v8));
  id v10 = v9;
  if (v9)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 paymentTransaction]);
    [v10 updateSuppressBehavior:a3];
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 paymentTransaction]);
    delegateQueue = self->_delegateQueue;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_10012A714;
    void v16[3] = &unk_10063B060;
    v16[4] = self;
    id v17 = v8;
    id v18 = v12;
    id v19 = v11;
    id v14 = v11;
    id v15 = v12;
    dispatch_async((dispatch_queue_t)delegateQueue, v16);
  }
}

- (void)updateSuppressBehavior:(unint64_t)a3 forPaymentTransactions:(id)a4 sourceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  if ([v8 count])
  {
    objc_initWeak(&location, self);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_10012A860;
    v10[3] = &unk_1006450F8;
    objc_copyWeak(v13, &location);
    id v11 = v8;
    v13[1] = (id)a3;
    id v12 = v9;
    -[PDDatabaseManager performTransactionWithBlock:](self, "performTransactionWithBlock:", v10);

    objc_destroyWeak(v13);
    objc_destroyWeak(&location);
  }
}

- (unint64_t)suppressionBehaviorForTransactionSourceIdentifier:(id)a3 serviceIdentifier:(id)a4
{
  return +[PaymentTransaction suppressionBehaviorForTransactionSourceIdentifier:serviceIdentifier:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "suppressionBehaviorForTransactionSourceIdentifier:serviceIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (void)updateRequiresMerchantReprocessing:(BOOL)a3 forTransactionWithIdentifier:(id)a4
{
  BOOL v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  if (v5)
  {
    id v6 = v5;
    [v5 updateRequiresMerchantReprocessing:v4];
    uint64_t v5 = v6;
  }
}

- (id)updateRedemptionType:(unint64_t)a3 forPaymentTransaction:(id)a4 sourceIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  [v8 setRedemptionType:a3];
  uint64_t database = self->_database;
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 identifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v11));

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 paymentTransaction]);
  objc_msgSend(v13, "addUpdateReasons:", objc_msgSend(v8, "updateReasons"));
  [v12 updateRedemptionType:a3];
  delegateQueue = self->_delegateQueue;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  v21[2] = sub_10012AB5C;
  v21[3] = &unk_10063B060;
  v21[4] = self;
  id v22 = v9;
  id v15 = v8;
  id v23 = v15;
  id v24 = v13;
  id v16 = v13;
  id v17 = v9;
  dispatch_async((dispatch_queue_t)delegateQueue, v21);
  id v18 = v24;
  id v19 = v15;

  return v19;
}

- (id)removeMapsDataForTransactionWithIdentifier:(id)a3 forTransactionSourceIdentifier:(id)a4 issueReportIdentifier:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 paymentTransaction]);
  if (v10) {
    [v10 removeMapsDataForIssueReportIdentifier:v9];
  }
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v10 paymentTransaction]);
  delegateQueue = self->_delegateQueue;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  void v20[2] = sub_10012ACC8;
  v20[3] = &unk_10063B060;
  v20[4] = self;
  id v21 = v8;
  id v14 = v12;
  id v22 = v14;
  id v23 = v11;
  id v15 = v11;
  id v16 = v8;
  dispatch_async((dispatch_queue_t)delegateQueue, v20);
  id v17 = v23;
  id v18 = v14;

  return v18;
}

- (id)unsyncedPassesInContainer:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)PKCloudStorePassesSyncContainerName;
  id v6 = v4;
  id v7 = v5;
  if (v7 == v6)
  {

    goto LABEL_7;
  }

  id v8 = v7;
  if (!v6 || !v7)
  {

    goto LABEL_9;
  }

  unsigned int v9 = [v6 isEqualToString:v7];

  if (v9)
  {
LABEL_7:
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForIsCloudKitArchived:](&OBJC_CLASS___Pass, "predicateForIsCloudKitArchived:", 0LL));
    v27[0] = v10;
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForIsRevoked:](&OBJC_CLASS___Pass, "predicateForIsRevoked:", 0LL));
    v27[1] = v11;
    id v12 = v27;
LABEL_16:
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v12, 2LL));
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v18));

    id v20 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v19));
    id v21 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v20));

    goto LABEL_21;
  }

- (void)updatePassesWithSyncInformation:(id)a3
{
  id v4 = a3;
  if ([v4 count])
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pk_indexDictionaryByApplyingBlock:", &stru_100645138));
    v14[0] = @"unique_id";
    v14[1] = @"is_cloud_kit_archived";
    v14[2] = @"cloud_kit_metadata";
    v14[3] = @"is_cloud_kit_securely_archived";
    v14[4] = @"cloud_kit_secure_metadata";
    v14[5] = @"ingested_date";
    v14[6] = @"modified_date";
    v14[7] = @"revoked";
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v14, 8LL));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 allKeys]);
    uint64_t database = self->_database;
    unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForUniqueIDs:](&OBJC_CLASS___Pass, "predicateForUniqueIDs:", v7));
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v9));

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_10012B158;
    v12[3] = &unk_10063C0D0;
    id v13 = v5;
    id v11 = v5;
    [v10 enumeratePersistentIDsAndProperties:v6 usingBlock:v12];
  }
}

- (void)markPassAsSynced:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 uniqueID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForUniqueID:](&OBJC_CLASS___Pass, "predicateForUniqueID:", v6));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v7));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10012B300;
  v10[3] = &unk_100645160;
  id v11 = v4;
  id v9 = v4;
  +[Pass enumeratePassesForQuery:withHandler:](&OBJC_CLASS___Pass, "enumeratePassesForQuery:withHandler:", v8, v10);
}

- (void)markAllPassesAsUnsyncedInContainer:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)PKCloudStorePassesSyncContainerName;
  id v6 = v4;
  id v7 = v5;
  if (v7 == v6)
  {

    goto LABEL_7;
  }

  id v8 = v7;
  if (!v6 || !v7)
  {

    goto LABEL_9;
  }

  unsigned int v9 = [v6 isEqualToString:v7];

  if (v9)
  {
LABEL_7:
    uint64_t v10 = objc_claimAutoreleasedReturnValue(+[Pass predicateForIsCloudKitArchived:](&OBJC_CLASS___Pass, "predicateForIsCloudKitArchived:", 1LL));
LABEL_16:
    id v16 = (void *)v10;
    goto LABEL_17;
  }

- (id)dbTransactionWithTransactionIdentifier:(id)a3
{
  return +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3);
}

- (BOOL)hasTransactionWithTransactionIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v4 = v3 != 0LL;

  return v4;
}

- (id)transactionWithTransactionIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager dbTransactionWithTransactionIdentifier:]( self,  "dbTransactionWithTransactionIdentifier:",  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 paymentTransaction]);

  return v4;
}

- (id)transactionWithReferenceIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withReferenceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withReferenceIdentifier:",  self->_database,  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 paymentTransaction]);

  return v4;
}

- (BOOL)hasTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:",  self->_database,  a3,  a4));
  BOOL v5 = v4 != 0LL;

  return v5;
}

- (id)transactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:",  self->_database,  a3,  a4));
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 paymentTransaction]);

  return v5;
}

- (id)transactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5
{
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:",  self->_database,  a3,  a4,  a5));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 paymentTransaction]);

  return v6;
}

- (id)transactionsRequiringReviewForAccountWithIdentifier:(id)a3
{
  return +[PaymentTransaction paymentTransactionsRequiringReviewInDatabase:forAccountIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsRequiringReviewInDatabase:forAccountIdentifier:",  self->_database,  a3);
}

- (id)transactionsWithServiceIdentifier:(id)a3
{
  return +[PaymentTransaction paymentTransactionsInDatabase:withServiceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withServiceIdentifier:",  self->_database,  a3);
}

- (id)ambiguousTransactionWithServiceIdentifier:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction paymentTransactionsInDatabase:withServiceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withServiceIdentifier:",  self->_database,  a3));
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  id v5 = v4;
  id v6 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v16;
    while (2)
    {
      for (i = 0LL; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v16 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v15 + 1) + 8LL * (void)i);
        id v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "transactionSourceIdentifier", (void)v15));
        unint64_t v12 = -[PDDatabaseManager transactionSourceTypeForTransactionSourceIdentifier:]( self,  "transactionSourceTypeForTransactionSourceIdentifier:",  v11);

        if (!v12)
        {
          id v13 = v10;
          goto LABEL_11;
        }
      }

      id v7 = [v5 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v7) {
        continue;
      }
      break;
    }
  }

  id v13 = 0LL;
LABEL_11:

  return v13;
}

- (id)primaryAccountIdentifierForTransactionSourceIdentifier:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passUniqueIdentifierForTransactionSourceIdentifier:]( self,  "passUniqueIdentifierForTransactionSourceIdentifier:",  a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v4));
  id v6 = v5;
  if (v5) {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 primaryAccountIdentifier]);
  }
  else {
    id v7 = 0LL;
  }

  return v7;
}

- (id)passUniqueIdentifierForTransactionWithIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 passUniqueIdentifier]);

  return v4;
}

- (id)ambiguousPassUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager ambiguousTransactionWithServiceIdentifier:]( self,  "ambiguousTransactionWithServiceIdentifier:",  a3));
  id v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 serviceIdentifier]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 transactionSourceIdentifier]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passUniqueIdentifierForTransactionWithServiceIdentifier:transactionSourceIdentifier:]( self,  "passUniqueIdentifierForTransactionWithServiceIdentifier:transactionSourceIdentifier:",  v6,  v7));
  }

  else
  {
    uint64_t v8 = 0LL;
  }

  return v8;
}

- (id)paymentTransactionsWithFullPaymentHashes:(id)a3 transactionSourceIdentifiers:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v7 count]) {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction paymentTransactionsInDatabase:withFullPaymentHashes:transactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withFullPaymentHashes:transactionSourceIdentifiers:",  self->_database,  v6,  v7));
  }
  else {
    uint64_t v8 = 0LL;
  }

  return v8;
}

- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 transactionSourceIdentifier:(id)a4
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:forTransactionSourceIdentifier:",  self->_database,  a3,  a4));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 passUniqueIdentifier]);

  return v5;
}

- (id)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:",  self->_database,  a3,  a4,  a5));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 passUniqueIdentifier]);

  return v6;
}

- (void)insertOrUpdateValueAddedServiceTransaction:(id)a3 forPassUniqueIdentifier:(id)a4 paymentTransaction:(id)a5
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v26 = (void *)objc_claimAutoreleasedReturnValue([v8 identifier]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[ValueAddedServiceTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___ValueAddedServiceTransaction,  "anyInDatabase:withIdentifier:",  self->_database));
  unint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v8 merchant]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 identifier]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 hexEncoding]);

  __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( +[ValueAddedMerchant anyInDatabase:withIdentifier:]( &OBJC_CLASS___ValueAddedMerchant,  "anyInDatabase:withIdentifier:",  self->_database,  v14));
  if (v15
    || (__int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v8 merchant]),
        -[PDDatabaseManager insertOrUpdateValueAddedMerchant:](self, "insertOrUpdateValueAddedMerchant:", v16),
        v16,
        (__int128 v15 = (void *)objc_claimAutoreleasedReturnValue( +[ValueAddedMerchant anyInDatabase:withIdentifier:]( &OBJC_CLASS___ValueAddedMerchant,  "anyInDatabase:withIdentifier:",  self->_database,  v14))) != 0LL))
  {
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v15 valueAddedMerchant]);
    [v8 setMerchant:v17];
  }

  if (v11)
  {
    [v11 updateWithValueAddedServiceTransaction:v8 paymentTransaction:v10];
  }

  else
  {
    if (v9) {
      __int128 v18 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v9));
    }
    else {
      __int128 v18 = 0LL;
    }
    id v25 = v10;
    if (v10)
    {
      uint64_t database = self->_database;
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v10 identifier]);
      id v10 = (id)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v20));
    }

    id v21 =  +[ValueAddedServiceTransaction insertValueAddedServiceTransaction:withPass:paymentTransaction:valueAddedMerchant:inDatabase:]( &OBJC_CLASS___ValueAddedServiceTransaction,  "insertValueAddedServiceTransaction:withPass:paymentTransaction:valueAddedMerchant:inDatabase:",  v8,  v18,  v10,  v15,  self->_database);
    +[ValueAddedServiceTransaction truncateEntitiesForPass:inDatabase:toCount:]( &OBJC_CLASS___ValueAddedServiceTransaction,  "truncateEntitiesForPass:inDatabase:toCount:",  v18,  self->_database,  PKMaxPerPassValueAddedServiceTransactionHistory);

    id v10 = v25;
  }

  delegateQueue = self->_delegateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10012BF80;
  block[3] = &unk_100639350;
  void block[4] = self;
  id v28 = v9;
  id v29 = v8;
  id v23 = v8;
  id v24 = v9;
  dispatch_async((dispatch_queue_t)delegateQueue, block);
}

- (id)valueAddedServiceTransactionWithIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[ValueAddedServiceTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___ValueAddedServiceTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 valueAddedServiceTransaction]);

  return v4;
}

- (id)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)a3 limit:(int64_t)a4
{
  return +[ValueAddedServiceTransaction valueAddedServiceTransactionsInDatabase:forPassUniqueIdentifier:limit:]( &OBJC_CLASS___ValueAddedServiceTransaction,  "valueAddedServiceTransactionsInDatabase:forPassUniqueIdentifier:limit:",  self->_database,  a3,  a4);
}

- (id)valueAddedServiceTransactionsForPaymentTransaction:(id)a3
{
  return +[ValueAddedServiceTransaction valueAddedServiceTransactionsInDatabase:forPaymentTransaction:]( &OBJC_CLASS___ValueAddedServiceTransaction,  "valueAddedServiceTransactionsInDatabase:forPaymentTransaction:",  self->_database,  a3);
}

- (unint64_t)numberOfValueAddedServiceTransactionsForMerchant:(id)a3
{
  return +[ValueAddedServiceTransaction numberOfValueAddedServiceTransactionsForMerchant:inDatabase:]( &OBJC_CLASS___ValueAddedServiceTransaction,  "numberOfValueAddedServiceTransactionsForMerchant:inDatabase:",  a3,  self->_database);
}

- (void)insertOrUpdateValueAddedMerchant:(id)a3
{
  id v9 = a3;
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 hexEncoding]);

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[ValueAddedMerchant anyInDatabase:withIdentifier:]( &OBJC_CLASS___ValueAddedMerchant,  "anyInDatabase:withIdentifier:",  self->_database,  v5));
  id v7 = v6;
  if (v6) {
    [v6 updateWithValueAddedMerchant:v9];
  }
  else {
    id v8 =  +[ValueAddedMerchant insertValueAddedMerchant:inDatabase:]( &OBJC_CLASS___ValueAddedMerchant,  "insertValueAddedMerchant:inDatabase:",  v9,  self->_database);
  }
}

- (id)valueAddedMerchantWithIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[ValueAddedMerchant anyInDatabase:withIdentifier:]( &OBJC_CLASS___ValueAddedMerchant,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 valueAddedMerchant]);

  return v4;
}

- (void)valueAddedMerchantWasPresented:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 hexEncoding]);
  id v7 = (id)objc_claimAutoreleasedReturnValue( +[ValueAddedMerchant anyInDatabase:withIdentifier:]( &OBJC_CLASS___ValueAddedMerchant,  "anyInDatabase:withIdentifier:",  database,  v6));

  objc_msgSend(v4, "setTimesPresented:", (char *)objc_msgSend(v4, "timesPresented") + 1);
  [v7 updateWithValueAddedMerchant:v4];
}

- (id)setDefaultPaymentApplication:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a4;
  if (v6)
  {
    uint64_t database = self->_database;
    id v8 = a3;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, v6));
    id v10 = self->_database;
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 applicationIdentifier]);

    unint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:",  v10,  v11,  v12));

    [v9 updateWithDefaultPaymentApplication:v13];
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 pass]);
    delegateQueue = self->_delegateQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10012C360;
    block[3] = &unk_100639350;
    void block[4] = self;
    id v20 = v6;
    id v21 = v13;
    id v16 = v13;
    dispatch_async((dispatch_queue_t)delegateQueue, block);
  }

  else
  {
    id v14 = 0LL;
  }

  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPass:](self, "_registeredPass:", v14));

  return v17;
}

- (BOOL)hasAnyMessagesForPassWithUniqueIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentMessage anyInDatabase:forPassWithUniqueIdentifier:]( &OBJC_CLASS___PaymentMessage,  "anyInDatabase:forPassWithUniqueIdentifier:",  self->_database,  a3));
  BOOL v4 = v3 != 0LL;

  return v4;
}

- (BOOL)hasAnyTransactionsForTransactionSourceIdentifiers:(id)a3
{
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  id v4 = a3;
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    while (2)
    {
      for (i = 0LL; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withTransactionSourceIdentifier:",  self->_database,  *(void *)(*((void *)&v12 + 1) + 8LL * (void)i),  (void)v12));

        if (v9)
        {
          BOOL v10 = 1;
          goto LABEL_11;
        }
      }

      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v6) {
        continue;
      }
      break;
    }
  }

  BOOL v10 = 0;
LABEL_11:

  return v10;
}

- (BOOL)hasAnyTransactions
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:",  self->_database);
}

- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:withMerchantIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMerchantIdentifiers:",  self->_database,  a3);
}

- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a4));
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:withMerchantIdentifiers:forTransactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMerchantIdentifiers:forTransactionSourceIdentifiers:",  self->_database,  v6,  v7);

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMerchantIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a4));
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:withMerchantIdentifiers:forTransactionSourceIdentifiers:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMerchantIdentifiers:forTransactionSourceIdentifiers:startDate:endDate:",  self->_database,  v12,  v13,  v11,  v10);

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:withMapsIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMapsIdentifiers:",  self->_database,  a3);
}

- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a4));
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:withMapsIdentifiers:forTransactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMapsIdentifiers:forTransactionSourceIdentifiers:",  self->_database,  v6,  v7);

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a4));
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:withMapsIdentifiers:forTransactionSourceIdentifiers:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMapsIdentifiers:forTransactionSourceIdentifiers:startDate:endDate:",  self->_database,  v12,  v13,  v11,  v10);

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:withMapsBrandIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMapsBrandIdentifiers:",  self->_database,  a3);
}

- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a4));
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:withMapsBrandIdentifiers:forTransactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMapsBrandIdentifiers:forTransactionSourceIdentifiers:",  self->_database,  v6,  v7);

  return (char)self;
}

- (BOOL)hasAnyTransactionsWithMapsBrandIdentifiers:(id)a3 forPassUniqueIdentifier:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  id v10 = a6;
  id v11 = a5;
  id v12 = a3;
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a4));
  LOBYTE(self) = +[PaymentTransaction hasAnyTransactionsInDatabase:withMapsBrandIdentifiers:forTransactionSourceIdentifiers:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withMapsBrandIdentifiers:forTransactionSourceIdentifiers:startDate:endDate:",  self->_database,  v12,  v13,  v11,  v10);

  return (char)self;
}

- (BOOL)hasAnyTransactionsOfType:(int64_t)a3
{
  return +[PaymentTransaction hasAnyTransactionsInDatabase:withTransactionType:]( &OBJC_CLASS___PaymentTransaction,  "hasAnyTransactionsInDatabase:withTransactionType:",  self->_database,  a3);
}

- (id)messagesForPassWithUniqueIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentMessage paymentMessagesInDatabase:forPaymentPassUniqueIdentifier:]( &OBJC_CLASS___PaymentMessage,  "paymentMessagesInDatabase:forPaymentPassUniqueIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"isValid == YES"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 filteredSetUsingPredicate:v4]);

  return v5;
}

- (id)allMessagesForPassWithUniqueIdentifier:(id)a3
{
  return +[PaymentMessage paymentMessagesInDatabase:forPaymentPassUniqueIdentifier:]( &OBJC_CLASS___PaymentMessage,  "paymentMessagesInDatabase:forPaymentPassUniqueIdentifier:",  self->_database,  a3);
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate :endDate:orderedByDate:limit:",  self->_database,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7
{
  return +[PaymentTransaction paymentTransactionsInDatabase:matchingPeerPaymentCounterpartHandles:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:matchingPeerPaymentCounterpartHandles:forTransactionSourceIdentifiers:withTrans actionSource:withBackingData:limit:",  self->_database,  a4,  a3,  a5,  a6,  a7);
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 withTransactionSource:(unint64_t)a6 withBackingData:(unint64_t)a7 limit:(int64_t)a8
{
  return +[PaymentTransaction paymentTransactionsInDatabase:matchingPeerPaymentCounterpartHandles:forPeerPaymentSubtype:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:matchingPeerPaymentCounterpartHandles:forPeerPaymentSubtype:forTransactionSourc eIdentifiers:withTransactionSource:withBackingData:limit:",  self->_database,  a4,  a5,  a3,  a6,  a7,  a8);
}

- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  return +[PaymentTransaction countInDatabase:forTransactionSourceIdentifiers:withPeerPaymentCounterpartHandles:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "countInDatabase:forTransactionSourceIdentifiers:withPeerPaymentCounterpartHandles:startDate:endDate:",  self->_database,  a3,  a4,  a5,  a6);
}

- (unint64_t)transactionsCountForTransactionSourceIdentifiers:(id)a3 withPeerPaymentCounterpartHandles:(id)a4 forPeerPaymentSubtype:(int64_t)a5 startDate:(id)a6 endDate:(id)a7
{
  return +[PaymentTransaction countInDatabase:forTransactionSourceIdentifiers:withPeerPaymentCounterpartHandles:forPeerPaymentSubtype:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "countInDatabase:forTransactionSourceIdentifiers:withPeerPaymentCounterpartHandles:forPeerPaymentSubtype:startDate:endDate:",  self->_database,  a3,  a4,  a5,  a6,  a7);
}

- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5
{
  uint64_t database = self->_database;
  id v9 = a5;
  id v10 = a4;
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  database,  a3));
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction peerPaymentCounterpartHandlesforSource:startDate:endDate:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "peerPaymentCounterpartHandlesforSource:startDate:endDate:inDatabase:",  v11,  v10,  v9,  self->_database));

  return v12;
}

- (id)peerPaymentCounterpartHandlesForTransactionSourceIdentifier:(id)a3 excludingPaymentMode:(unint64_t)a4 startDate:(id)a5 endDate:(id)a6
{
  uint64_t database = self->_database;
  id v11 = a6;
  id v12 = a5;
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  database,  a3));
  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction peerPaymentCounterpartHandlesforSource:excludingPaymentMode:startDate:endDate:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "peerPaymentCounterpartHandlesforSource:excludingPaymentMode:startDate:endDate:inDatabase:",  v13,  a4,  v12,  v11,  self->_database));

  return v14;
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 matchingMerchant:(id)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 limit:(int64_t)a7
{
  return +[PaymentTransaction paymentTransactionsInDatabase:matchingMerchant:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:matchingMerchant:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:",  self->_database,  a4,  a3,  a5,  a6,  a7);
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 merchantCategory:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction paymentTransactionsInDatabase:withMerchantCategory:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withMerchantCategory:forTransactionSourceIdentifiers:withTransactionSource:with BackingData:startDate:endDate:limit:",  self->_database,  a4,  a3,  a5,  a6,  a7,  a8,  a9);
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionType:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction paymentTransactionsInDatabase:withTransactionType:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withTransactionType:forTransactionSourceIdentifiers:withTransactionSource:withB ackingData:startDate:endDate:limit:",  self->_database,  a4,  a3,  a5,  a6,  a7,  a8,  a9);
}

- (id)approvedTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction approvedPaymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:]( &OBJC_CLASS___PaymentTransaction,  "approvedPaymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:s tartDate:endDate:orderedByDate:limit:",  self->_database,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

- (id)pendingTransactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(int64_t)a9
{
  return +[PaymentTransaction pendingPaymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:]( &OBJC_CLASS___PaymentTransaction,  "pendingPaymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:st artDate:endDate:orderedByDate:limit:",  self->_database,  a3,  a4,  a5,  a6,  a7,  a8,  a9);
}

- (id)transactionsForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6
{
  return +[PaymentTransaction paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate :endDate:orderedByDate:limit:",  self->_database,  a3,  a4,  a5,  0LL,  0LL,  1LL,  a6);
}

- (id)paymentTransactionForIdentifier:(id)a3
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 paymentTransaction]);

  return v4;
}

- (id)transactionsForRequest:(id)a3
{
  return +[PaymentTransaction paymentTransactionsInDatabase:forRequest:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:forRequest:",  self->_database,  a3);
}

- (unint64_t)transactionsCountForRequest:(id)a3
{
  return +[PaymentTransaction countInDatabase:forRequest:]( &OBJC_CLASS___PaymentTransaction,  "countInDatabase:forRequest:",  self->_database,  a3);
}

- (id)transactionsForPredicate:(id)a3 limit:(int64_t)a4
{
  return +[PaymentTransaction paymentTransactionsInDatabase:forPredicate:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:forPredicate:limit:",  self->_database,  a3,  a4);
}

- (void)totalAmount:(id *)a3 forTransactionsWithRequest:(id)a4 count:(unint64_t *)a5
{
}

- (id)transactionCountByPeriodForRequest:(id)a3 calendar:(id)a4 calendarUnit:(unint64_t)a5 includePurchaseTotal:(BOOL)a6
{
  BOOL v83 = a6;
  char v77 = a5;
  id v7 = a3;
  id v72 = a4;
  __int128 v82 = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 transactionSourceIdentifiers]);
  id v79 = (void *)objc_claimAutoreleasedReturnValue([v8 anyObject]);
  unint64_t v9 = -[PDDatabaseManager transactionSourceTypeForTransactionSourceIdentifier:]( self,  "transactionSourceTypeForTransactionSourceIdentifier:",  v79);
  __int128 v122 = 0u;
  __int128 v123 = 0u;
  __int128 v124 = 0u;
  __int128 v125 = 0u;
  id v10 = v8;
  id v11 = [v10 countByEnumeratingWithState:&v122 objects:v127 count:16];
  if (v11)
  {
    uint64_t v12 = *(void *)v123;
LABEL_3:
    uint64_t v13 = 0LL;
    while (1)
    {
      if (*(void *)v123 != v12) {
        objc_enumerationMutation(v10);
      }
      uint64_t v14 = *(void *)(*((void *)&v122 + 1) + 8 * v13);
      if (v9 == 3) {
        break;
      }
      if (!v9)
      {
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passUniqueIdentifierForTransactionSourceIdentifier:]( self,  "passUniqueIdentifierForTransactionSourceIdentifier:",  v14));
        id v16 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
        id v18 = (id)objc_claimAutoreleasedReturnValue([v16 associatedPassUniqueID]);
        id v19 = v17;
        __int128 v15 = v19;
        if (v18 == v19)
        {

          goto LABEL_23;
        }

        if (v19) {
          BOOL v20 = v18 == 0LL;
        }
        else {
          BOOL v20 = 1;
        }
        if (v20)
        {
        }

        else
        {
          unsigned int v21 = [v18 isEqualToString:v19];

          if (v21)
          {
LABEL_23:
            id v22 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
            id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 currentBalance]);
            id v80 = (void *)objc_claimAutoreleasedReturnValue([v23 currency]);
            uint64_t v73 = 1LL;
            goto LABEL_26;
          }
        }

        id v22 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager associatedAccountIdentifierForPassWithUniqueIdentifier:]( self,  "associatedAccountIdentifierForPassWithUniqueIdentifier:",  v15));
        if (v22)
        {
          id v23 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager accountWithIdentifier:](self, "accountWithIdentifier:", v22));
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 creditDetails]);
          id v80 = (void *)objc_claimAutoreleasedReturnValue([v24 currencyCode]);

          uint64_t v73 = 0LL;
LABEL_26:
        }

        else
        {
          uint64_t v73 = 0LL;
          id v80 = 0LL;
        }

        goto LABEL_28;
      }

      if (v11 == (id)++v13)
      {
        id v11 = [v10 countByEnumeratingWithState:&v122 objects:v127 count:16];
        if (v11) {
          goto LABEL_3;
        }
        goto LABEL_10;
      }
    }

    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountWithTransactionSourceIdentifier:]( self,  "accountWithTransactionSourceIdentifier:",  v14));
    if ([v15 feature] != (id)5)
    {
      uint64_t v73 = 0LL;
      id v80 = 0LL;
      goto LABEL_29;
    }

    id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 savingsDetails]);
    id v80 = (void *)objc_claimAutoreleasedReturnValue([v16 currencyCode]);
    uint64_t v73 = 3LL;
LABEL_28:

LABEL_29:
    if (v80) {
      goto LABEL_33;
    }
  }

  else
  {
LABEL_10:

    uint64_t v73 = 0LL;
  }

  id v25 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withTransactionSource:withBackingData: startDate:endDate:orderedByDate:limit:",  self->_database,  v10,  0LL,  1LL,  0LL,  0LL,  1LL,  1LL));
  id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 anyObject]);

  id v80 = (void *)objc_claimAutoreleasedReturnValue([v26 currencyCode]);
  if (v80 || !v83)
  {
LABEL_33:
    uint64_t v28 = 2LL;
    if ((v77 & 8) == 0) {
      uint64_t v28 = 3LL;
    }
    uint64_t v71 = v28;
    id v29 = @"year";
    if ((v77 & 8) != 0) {
      id v29 = @"month";
    }
    BOOL v76 = v29;
    id v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  0.0));
    id v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSince1970:",  0.0));
    [v30 timeIntervalSinceDate:v31];
    double v33 = v32;

    BOOL v75 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT STRFTIME('%%s',DATETIME(transaction_date + %ld, 'unixepoch', 'localtime', 'start of %@')) as period, COUNT(*) FROM payment_transaction",  (uint64_t)v33,  v76));
    BOOL v34 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction predicateForRequest:]( &OBJC_CLASS___PaymentTransaction,  "predicateForRequest:",  v82));
    uint64_t v35 = objc_opt_self(&OBJC_CLASS___PaymentTransaction);
    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v34 SQLJoinClausesForEntityClass:v36]);

    [v37 count];
    uint64_t v38 = objc_alloc_init(&OBJC_CLASS___NSMutableString);
    __int128 v120 = 0u;
    __int128 v121 = 0u;
    __int128 v118 = 0u;
    __int128 v119 = 0u;
    id v39 = v37;
    id v40 = [v39 countByEnumeratingWithState:&v118 objects:v126 count:16];
    if (v40)
    {
      uint64_t v41 = *(void *)v119;
      do
      {
        for (i = 0LL; i != v40; i = (char *)i + 1)
        {
          if (*(void *)v119 != v41) {
            objc_enumerationMutation(v39);
          }
          uint64_t v43 = *(void *)(*((void *)&v118 + 1) + 8LL * (void)i);
          -[NSMutableString appendString:](v38, "appendString:", @" ");
          -[NSMutableString appendString:](v38, "appendString:", v43);
        }

        id v40 = [v39 countByEnumeratingWithState:&v118 objects:v126 count:16];
      }

      while (v40);
    }

    uint64_t v44 = objc_opt_self(&OBJC_CLASS___PaymentTransaction);
    BOOL v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
    double v46 = (void *)objc_claimAutoreleasedReturnValue([v34 SQLForEntityClass:v45]);
    __int128 v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @" WHERE %@ ", v46));

    if (v83)
    {
      uint64_t v48 = objc_claimAutoreleasedReturnValue([v47 stringByAppendingString:@" AND currency_code = ? "]);

      __int128 v47 = (void *)v48;
    }

    unsigned int v70 = v47;
    id v74 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@%@%@%@",  v75,  v38,  v47,  @"GROUP BY period ORDER BY period DESC"));
    __int128 v49 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSince1970:",  1420070400.0));
    id v50 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  864000.0));
    uint64_t v114 = 0LL;
    char v115 = &v114;
    uint64_t v116 = 0x2020000000LL;
    int v117 = 1;
    double v51 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    BOOL v52 = (v77 & 8) == 0LL;
    uint64_t database = self->_database;
    v102[0] = _NSConcreteStackBlock;
    v102[1] = 3221225472LL;
    v102[2] = sub_10012D7A0;
    v102[3] = &unk_100645188;
    id v78 = v34;
    id v103 = v78;
    uint64_t v109 = &v114;
    BOOL v112 = v83;
    id v54 = v80;
    uint64_t v110 = (uint64_t)v33;
    BOOL v69 = v52;
    BOOL v113 = v52;
    id v104 = v54;
    unsigned int v105 = self;
    id v55 = v49;
    id v106 = v55;
    id v56 = v50;
    id v107 = v56;
    uint64_t v111 = v71;
    __int128 v57 = v51;
    char v108 = v57;
    sub_1002CCDBC((uint64_t)database, v74, v102);
    BOOL v58 = (void *)objc_claimAutoreleasedReturnValue([v82 transactionTypes]);
    uint64_t v59 = (uint64_t)v33;
    if ([v58 count]) {
      unsigned int v60 = [v58 containsObject:&off_100690008];
    }
    else {
      unsigned int v60 = 1;
    }
    if (v73 && v60)
    {
      __int128 v61 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT STRFTIME('%%s',DATETIME(grapes.d + %ld, 'unixepoch', 'localtime', 'start of day')) as day,STRFTIME('%%s',DATETIME(grapes.d + %ld, 'unixepoch', 'localtime', 'start of %@')) as period FROM grapes JOIN avocados ON avocados.a = grapes.pid WHERE grapes.c = 1 AND avocados.e = ? AND avocados.f = 'success'GROUP BY day, period",  (uint64_t)v33,  (uint64_t)v33,  v76));
      id v81 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"WITH groupingByDayAndYear (day, year) AS (%@) SELECT year, COUNT(*) FROM groupingByDayAndYear GROUP BY year",  v61));

      id v62 = self->_database;
      v94[0] = _NSConcreteStackBlock;
      v94[1] = 3221225472LL;
      v94[2] = sub_10012D980;
      v94[3] = &unk_1006451B0;
      BOOL v101 = v69;
      uint64_t v98 = v73;
      uint64_t v99 = (uint64_t)v33;
      v94[4] = self;
      id v95 = v55;
      id v96 = v56;
      id v97 = v57;
      uint64_t v100 = v71;
      sub_1002CCDBC((uint64_t)v62, v81, v94);

      uint64_t v59 = (uint64_t)v33;
    }

    else
    {
      id v81 = v75;
    }

    if (v83)
    {
      id v84 = v56;
      id v63 = v55;
      id v64 = v54;
      *((_DWORD *)v115 + 6) = 1;
      int v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT STRFTIME('%%s',DATETIME(transaction_date + %ld, 'unixepoch', 'localtime', 'start of %@')) as period, SUM(amount) FROM payment_transaction %@ %@ AND transaction_type = ? AND transaction_status IN (?, ?, ?) AND amount != ? AND amount != ? GROUP BY period ORDER BY period DESC",  v59,  v76,  v38,  v70));
      id v66 = self->_database;
      v86[0] = _NSConcreteStackBlock;
      v86[1] = 3221225472LL;
      v86[2] = sub_10012DB50;
      v86[3] = &unk_1006451D8;
      id v87 = v78;
      __int128 v91 = &v114;
      uint64_t v92 = v59;
      BOOL v93 = v69;
      id v88 = v64;
      unint64_t v89 = self;
      id v90 = v57;
      sub_1002CCDBC((uint64_t)v66, v65, v86);

      id v54 = v64;
      id v55 = v63;
      id v56 = v84;
    }

    __int128 v67 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary allValues](v57, "allValues"));
    id v27 = (void *)objc_claimAutoreleasedReturnValue([v67 sortedArrayUsingComparator:&stru_100645218]);

    _Block_object_dispose(&v114, 8);
  }

  else
  {
    id v27 = 0LL;
  }

  return v27;
}

- (id)closestStartOfMonthFromDate:(id)a3
{
  id v3 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSCalendar currentCalendar](&OBJC_CLASS___NSCalendar, "currentCalendar"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 components:14 fromDate:v3]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 dateFromComponents:v5]);
  uint64_t Month = PKStartOfNextMonth(v3);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(Month);
  [v3 timeIntervalSinceDate:v6];
  double v10 = fabs(v9);
  [v3 timeIntervalSinceDate:v8];
  double v12 = v11;

  if (v10 <= fabs(v12)) {
    uint64_t v13 = v6;
  }
  else {
    uint64_t v13 = v8;
  }
  id v14 = v13;

  return v14;
}

- (id)closestStartOfYearFromDate:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSCalendar currentCalendar](&OBJC_CLASS___NSCalendar, "currentCalendar"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 components:6 fromDate:v4]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 dateFromComponents:v6]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager nextStartOfYearFromDate:](self, "nextStartOfYearFromDate:", v4));
  [v4 timeIntervalSinceDate:v7];
  double v10 = fabs(v9);
  [v4 timeIntervalSinceDate:v8];
  double v12 = v11;

  if (v10 <= fabs(v12)) {
    uint64_t v13 = v7;
  }
  else {
    uint64_t v13 = v8;
  }
  id v14 = v13;

  return v14;
}

- (id)nextStartOfYearFromDate:(id)a3
{
  id v3 = a3;
  id v4 = -[NSCalendar initWithCalendarIdentifier:]( objc_alloc(&OBJC_CLASS___NSCalendar),  "initWithCalendarIdentifier:",  NSCalendarIdentifierGregorian);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( -[NSCalendar nextDateAfterDate:matchingUnit:value:options:]( v4,  "nextDateAfterDate:matchingUnit:value:options:",  v3,  8LL,  1LL,  256LL));

  return v5;
}

- (id)transactionsWithTransactionSource:(unint64_t)a3 withBackingData:(unint64_t)a4 limit:(int64_t)a5
{
  return +[PaymentTransaction paymentTransactionsInDatabase:withTransactionSource:withBackingData:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withTransactionSource:withBackingData:limit:",  self->_database,  a3,  a4,  a5);
}

- (id)transactionsOfTypes:(id)a3 withTransactionSource:(unint64_t)a4 withBackingData:(unint64_t)a5 limit:(int64_t)a6
{
  return +[PaymentTransaction paymentTransactionsInDatabase:withTransactionTypes:withTransactionSource:withBackingData:limit:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withTransactionTypes:withTransactionSource:withBackingData:limit:",  self->_database,  a3,  a4,  a5,  a6);
}

- (id)transactionsRequiringMerchantCleanupForTransactionSourceIdentifiers:(id)a3 withLastReprocessingDateBeforeDate:(id)a4 transactionDateWithinWindow:(double)a5
{
  return +[PaymentTransaction transactionsRequiringMerchantCleanupInDatabase:forTransactionSourceIdentifiers:withLastReprocessingDateBeforeDate:transactionDateWithinWindow:]( &OBJC_CLASS___PaymentTransaction,  "transactionsRequiringMerchantCleanupInDatabase:forTransactionSourceIdentifiers:withLastReprocessingDateBefore Date:transactionDateWithinWindow:",  self->_database,  a3,  a4,  a5);
}

- (id)transactionsMissingWorldRegionWithLimit:(unint64_t)a3 onlyEligibleForProcessing:(BOOL)a4
{
  return +[PaymentTransaction paymentTransactionsInDatabase:missingWorldRegionWithLimit:onlyEligibleForProcessing:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:missingWorldRegionWithLimit:onlyEligibleForProcessing:",  self->_database,  a3,  a4);
}

- (BOOL)hasTransactionsMissingWorldRegionEligibleForProcessing
{
  return +[PaymentTransaction hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:]( &OBJC_CLASS___PaymentTransaction,  "hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:",  self->_database);
}

- (id)transactionsWithoutRegionMatchingMapsMerchant:(id)a3 limit:(unint64_t)a4
{
  return +[PaymentTransaction paymentTransactionsInDatabase:matchingMapsMerchantIdentifierWithoutRegion:limit:]( PaymentTransaction,  "paymentTransactionsInDatabase:matchingMapsMerchantIdentifierWithoutRegion:limit:",  self->_database,  [a3 identifier],  a4);
}

- (id)regionIdentifiersMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5 withRequest:(id)a6 limit:(unint64_t)a7
{
  return +[PaymentTransaction regionIdentifiersInDatabase:matchingName:types:localeIdentifier:withRequest:limit:]( &OBJC_CLASS___PaymentTransaction,  "regionIdentifiersInDatabase:matchingName:types:localeIdentifier:withRequest:limit:",  self->_database,  a3,  a4,  a5,  a6,  a7);
}

- (void)associateTransaction:(id)a3 toRegion:(id)a4
{
  id v11 = a3;
  id v6 = a4;
  if (v11)
  {
    if (v6) {
      id v7 = (void *)objc_claimAutoreleasedReturnValue( +[WorldRegion insertOrUpdateRegion:inDatabase:]( &OBJC_CLASS___WorldRegion,  "insertOrUpdateRegion:inDatabase:",  v6,  self->_database));
    }
    else {
      id v7 = 0LL;
    }
    uint64_t database = self->_database;
    double v9 = (void *)objc_claimAutoreleasedReturnValue([v11 identifier]);
    double v10 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v9));
    +[WorldRegion associateTransaction:withWorldRegion:inDatabase:]( &OBJC_CLASS___WorldRegion,  "associateTransaction:withWorldRegion:inDatabase:",  v10,  v7,  self->_database);
  }
}

- (void)failedToAssociateTransactionToRegion:(id)a3 error:(id)a4
{
  if (a3)
  {
    uint64_t database = self->_database;
    id v7 = a4;
    id v9 = (id)objc_claimAutoreleasedReturnValue([a3 identifier]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v9));
    +[WorldRegion failedToAssociateTransaction:error:inDatabase:]( &OBJC_CLASS___WorldRegion,  "failedToAssociateTransaction:error:inDatabase:",  v8,  v7,  self->_database);
  }

- (id)paymentTransactionsWithIdentifiers:(id)a3 regions:(id *)a4 tags:(id *)a5
{
  return +[PaymentTransaction paymentTransactionsInDatabase:withIdentifiers:regions:tags:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:withIdentifiers:regions:tags:",  self->_database,  a3,  a4,  a5);
}

- (id)installmentTransactionsForInstallmentPlanIdentifier:(id)a3
{
  return +[PaymentTransaction transactionsInDatabase:forInstallmentPlanIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "transactionsInDatabase:forInstallmentPlanIdentifier:",  self->_database,  a3);
}

- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3
{
  return +[PaymentTransaction installmentPlanTransactionsInDatabase:forTransactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "installmentPlanTransactionsInDatabase:forTransactionSourceIdentifiers:",  self->_database,  a3);
}

- (id)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)a3 accountIdentifier:(id)a4 redeemed:(BOOL)a5 withRedemptionType:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8
{
  BOOL v66 = a5;
  id v13 = a3;
  id v14 = a4;
  id v68 = a7;
  id v67 = a8;
  int v65 = self;
  __int128 v57 = v14;
  __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  v14,  self->_database));
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 account]);

  id v56 = v16;
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 creditDetails]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 installmentPlans]);

  if (![v18 count])
  {
    id v54 = 0LL;
    goto LABEL_50;
  }

  id v62 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v83 = 0u;
  __int128 v84 = 0u;
  __int128 v85 = 0u;
  __int128 v86 = 0u;
  id obj = v18;
  id v69 = [obj countByEnumeratingWithState:&v83 objects:v89 count:16];
  if (!v69) {
    goto LABEL_48;
  }
  uint64_t v64 = *(void *)v84;
  unsigned int v60 = v18;
  unint64_t v61 = a6;
  id v58 = v13;
  do
  {
    for (i = 0LL; i != v69; i = (char *)i + 1)
    {
      if (*(void *)v84 != v64) {
        objc_enumerationMutation(obj);
      }
      BOOL v20 = *(void **)(*((void *)&v83 + 1) + 8LL * (void)i);
      unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction installmentTransactionsInDatabase:forTransactionSourceIdentifiers:installmentPlan:redeemed:withRedemptionType:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "installmentTransactionsInDatabase:forTransactionSourceIdentifiers:installmentPlan:redeemed:withR edemptionType:startDate:endDate:",  v65->_database,  v13,  v20,  v66,  a6,  v68,  v67));
      if (![v21 count]) {
        goto LABEL_46;
      }
      __int128 v81 = 0u;
      __int128 v82 = 0u;
      __int128 v79 = 0u;
      __int128 v80 = 0u;
      unsigned int v70 = v20;
      id v22 = (void *)objc_claimAutoreleasedReturnValue([v20 lineItems]);
      id v23 = [v22 countByEnumeratingWithState:&v79 objects:v88 count:16];
      uint64_t v71 = i;
      if (v23)
      {
        id v24 = v23;
        id v25 = v21;
        uint64_t v26 = *(void *)v80;
        while (2)
        {
          for (j = 0LL; j != v24; j = (char *)j + 1)
          {
            if (*(void *)v80 != v26) {
              objc_enumerationMutation(v22);
            }
            uint64_t v28 = *(void **)(*((void *)&v79 + 1) + 8LL * (void)j);
            if ([v28 type] == (id)1)
            {
              id v29 = (void *)objc_claimAutoreleasedReturnValue([v28 identifier]);
              goto LABEL_18;
            }
          }

          id v24 = [v22 countByEnumeratingWithState:&v79 objects:v88 count:16];
          if (v24) {
            continue;
          }
          break;
        }

        id v29 = 0LL;
LABEL_18:
        unsigned int v21 = v25;
      }

      else
      {
        id v29 = 0LL;
      }

      id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSDecimalNumber zero](&OBJC_CLASS___NSDecimalNumber, "zero"));
      __int128 v75 = 0u;
      __int128 v76 = 0u;
      __int128 v77 = 0u;
      __int128 v78 = 0u;
      id v31 = v21;
      id v32 = [v31 countByEnumeratingWithState:&v75 objects:v87 count:16];
      id v72 = v29;
      if (!v32)
      {

        goto LABEL_44;
      }

      id v33 = v32;
      id v63 = v21;
      id v73 = 0LL;
      uint64_t v34 = *(void *)v76;
      do
      {
        for (k = 0LL; k != v33; k = (char *)k + 1)
        {
          if (*(void *)v76 != v34) {
            objc_enumerationMutation(v31);
          }
          uint64_t v36 = *(void **)(*((void *)&v75 + 1) + 8LL * (void)k);
          uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v36 rewardsTotalAmount]);
          if (v37)
          {
            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSDecimalNumber notANumber](&OBJC_CLASS___NSDecimalNumber, "notANumber"));
            id v39 = [v37 compare:v38];

            if (v39)
            {
              id v40 = (id)objc_claimAutoreleasedReturnValue([v36 lifecycleIdentifier]);
              id v41 = v29;
              id v42 = v41;
              if (v40 != v41)
              {
                if (v29 && v40)
                {
                  unsigned int v43 = [v40 isEqualToString:v41];

                  if (!v43)
                  {
                    id v29 = v72;
LABEL_38:
                    BOOL v45 = v30;
                    id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s decimalNumberByAdding:](v30, "decimalNumberByAdding:", v37));
                    goto LABEL_39;
                  }

- (void)insertOrUpdateTransactionsForInstallmentPayments:(id)a3 installmentPlan:(id)a4 accountIdentifier:(id)a5 transactionSourceIdentifier:(id)a6 transactionProcessingBlock:(id)a7
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  objc_initWeak(&location, self);
  paymentTransactionUpdateQueue = self->_paymentTransactionUpdateQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10012EA70;
  block[3] = &unk_100645268;
  objc_copyWeak(&v29, &location);
  id v24 = v13;
  id v25 = v12;
  id v26 = v14;
  id v27 = v15;
  id v28 = v16;
  id v18 = v16;
  id v19 = v15;
  id v20 = v14;
  id v21 = v12;
  id v22 = v13;
  dispatch_sync((dispatch_queue_t)paymentTransactionUpdateQueue, block);

  objc_destroyWeak(&v29);
  objc_destroyWeak(&location);
}

- (BOOL)hasPaymentTransactionForTransactionSourceIdentifiers:(id)a3 withTransactionSource:(unint64_t)a4
{
  return +[PaymentTransaction hasPaymentTransactionInDatabase:forTransactionSourceIdentifiers:withTransactionSource:]( &OBJC_CLASS___PaymentTransaction,  "hasPaymentTransactionInDatabase:forTransactionSourceIdentifiers:withTransactionSource:",  self->_database,  a3,  a4);
}

- (void)allPassTransactionIdentifiersWithBatchHandler:(id)a3
{
}

- (void)allPassTransactionIdentifiersWithAccountIdentifiers:(id)a3 batchHandler:(id)a4
{
}

- (void)setTags:(id)a3 toTransactionWithIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a3;
  id v8 = (id)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  a4));
  +[PaymentTransactionTag insertPaymentTransactionTags:forPaymentTransactionPID:inDatabase:]( PaymentTransactionTag,  "insertPaymentTransactionTags:forPaymentTransactionPID:inDatabase:",  v7,  [v8 persistentID],  self->_database);
}

- (id)tagsForTransactionWithIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v5 = v4;
  if (v4) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager tagsForTransactionPID:]( self,  "tagsForTransactionPID:",  [v4 persistentID]));
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (id)tagsForTransactionPID:(int64_t)a3
{
  return +[PaymentTransactionTag paymentTransactionTagsForPID:inDatabase:]( &OBJC_CLASS___PaymentTransactionTag,  "paymentTransactionTagsForPID:inDatabase:",  a3,  self->_database);
}

- (id)allTagsWithTitles
{
  return +[PaymentTransactionTag allTagsWithTitlesInDatabase:]( &OBJC_CLASS___PaymentTransactionTag,  "allTagsWithTitlesInDatabase:",  self->_database);
}

- (id)compoundTags:(unint64_t)a3 limit:(unint64_t)a4
{
  return +[PaymentTransactionTag compoundTagsInDatabase:tagType:limit:]( &OBJC_CLASS___PaymentTransactionTag,  "compoundTagsInDatabase:tagType:limit:",  self->_database,  a3,  a4);
}

- (id)rewardsValuesForUnit:(unint64_t)a3
{
  return +[PaymentTransaction rewardsValuesForUnit:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "rewardsValuesForUnit:inDatabase:",  a3,  self->_database);
}

- (id)mapsMerchants
{
  return +[MapsMerchant mapsMerchantsInDatabase:]( &OBJC_CLASS___MapsMerchant,  "mapsMerchantsInDatabase:",  self->_database);
}

- (id)mapsBrands
{
  return +[MapsBrand mapsBrandsInDatabase:](&OBJC_CLASS___MapsBrand, "mapsBrandsInDatabase:", self->_database);
}

- (id)mapsBrandWithIdentifier:(unint64_t)a3
{
  uint64_t database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLongLong:", a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[MapsBrand anyInDatabase:withIdentifier:]( &OBJC_CLASS___MapsBrand,  "anyInDatabase:withIdentifier:",  database,  v4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 mapsBrand]);

  return v6;
}

- (id)mapsMerchantWithIdentifier:(unint64_t)a3
{
  uint64_t database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLongLong:", a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[MapsMerchant anyInDatabase:withIdentifier:]( &OBJC_CLASS___MapsMerchant,  "anyInDatabase:withIdentifier:",  database,  v4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 mapsMerchant]);

  return v6;
}

- (void)updateMapsMerchant:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    uint64_t database = self->_database;
    id v8 = v4;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v4 identifier]));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[MapsMerchant anyInDatabase:withIdentifier:]( &OBJC_CLASS___MapsMerchant,  "anyInDatabase:withIdentifier:",  database,  v6));

    id v4 = v8;
  }
}

- (void)updateMapsBrand:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    uint64_t database = self->_database;
    id v8 = v4;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v4 identifier]));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[MapsBrand anyInDatabase:withIdentifier:]( &OBJC_CLASS___MapsBrand,  "anyInDatabase:withIdentifier:",  database,  v6));

    id v4 = v8;
  }
}

- (id)mapsBrandsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5
{
  return +[MapsBrand mapsBrandsWithLastUpdatedDateFromStartDate:endDate:limit:inDatabase:]( &OBJC_CLASS___MapsBrand,  "mapsBrandsWithLastUpdatedDateFromStartDate:endDate:limit:inDatabase:",  a3,  a4,  a5,  self->_database);
}

- (id)mapsMerchantsWithLastUpdatedDateFromStartDate:(id)a3 endDate:(id)a4 limit:(int64_t)a5
{
  return +[MapsMerchant mapsMerchantsWithLastUpdatedDateFromStartDate:endDate:limit:inDatabase:]( &OBJC_CLASS___MapsMerchant,  "mapsMerchantsWithLastUpdatedDateFromStartDate:endDate:limit:inDatabase:",  a3,  a4,  a5,  self->_database);
}

- (id)passUniqueIdentifierForMostRecentVisibleTransaction
{
  v2 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction mostRecentActiveTransactionInDatabase:]( &OBJC_CLASS___PaymentTransaction,  "mostRecentActiveTransactionInDatabase:",  self->_database));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 passUniqueIdentifier]);

  return v3;
}

- (id)tapToRadarPromptWithReason:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TapToRadarPrompt tapToRadarPromptWithReason:inDatabase:]( &OBJC_CLASS___TapToRadarPrompt,  "tapToRadarPromptWithReason:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 tapToRadarPrompt]);

  return v4;
}

- (void)noteTapToRadarPromptedForReason:(id)a3 lastPromptDate:(id)a4
{
  id v4 =  +[TapToRadarPrompt insertOrUpdateWithReason:lastPromptDate:inDatabase:]( &OBJC_CLASS___TapToRadarPrompt,  "insertOrUpdateWithReason:lastPromptDate:inDatabase:",  a3,  a4,  self->_database);
}

- (id)dbPeerPaymentAccount
{
  return +[PeerPaymentAccount anyInDatabase:](&OBJC_CLASS___PeerPaymentAccount, "anyInDatabase:", self->_database);
}

- (id)peerPaymentAccount
{
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 peerPaymentAccount]);

  return v3;
}

- (id)peerPaymentAccountsWithIdentifiers:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v16;
    do
    {
      double v10 = 0LL;
      do
      {
        if (*(void *)v16 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentAccount anyInDatabase:withIdentifier:]( &OBJC_CLASS___PeerPaymentAccount,  "anyInDatabase:withIdentifier:",  self->_database,  *(void *)(*((void *)&v15 + 1) + 8LL * (void)v10),  (void)v15));
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 peerPaymentAccount]);
        -[NSMutableArray safelyAddObject:](v5, "safelyAddObject:", v12);

        double v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }

    while (v8);
  }

  id v13 = -[NSMutableArray copy](v5, "copy");
  return v13;
}

- (BOOL)hasPeerPaymentAccount
{
  v2 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentAccount anyInDatabase:]( &OBJC_CLASS___PeerPaymentAccount,  "anyInDatabase:",  self->_database));
  BOOL v3 = v2 != 0LL;

  return v3;
}

- (id)insertOrUpdatePeerPaymentAccount:(id)a3
{
  BOOL v3 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentAccount insertOrUpdatePeerPaymentAccount:inDatabase:]( &OBJC_CLASS___PeerPaymentAccount,  "insertOrUpdatePeerPaymentAccount:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 peerPaymentAccount]);

  return v4;
}

- (id)removePeerPaymentAccount
{
  uint64_t v6 = 0LL;
  id v7 = &v6;
  uint64_t v8 = 0x3032000000LL;
  uint64_t v9 = sub_10011BCF0;
  double v10 = sub_10011BD00;
  id v11 = 0LL;
  uint64_t database = self->_database;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10012F840;
  v5[3] = &unk_10063D438;
  v5[4] = self;
  void v5[5] = &v6;
  sub_1002CCC5C((uint64_t)database, v5);
  id v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

- (id)dbPeerPaymentPreferences
{
  uint64_t database = self->_database;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentPreferences anyInDatabase:forPeerPaymentAccount:]( &OBJC_CLASS___PeerPaymentPreferences,  "anyInDatabase:forPeerPaymentAccount:",  database,  v3));

  return v4;
}

- (id)peerPaymentPreferences
{
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentPreferences](self, "dbPeerPaymentPreferences"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 peerPaymentPreferences]);

  return v3;
}

- (id)insertOrUpdatePeerPaymentPreferences:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentPreferences](self, "dbPeerPaymentPreferences"));
  uint64_t Object = PKLogFacilityTypeGetObject(11LL);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v8)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Matched Peer Payment Preferences", buf, 2u);
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
    [v5 updatePeerPaymentPreferences:v4 forPeerPaymentAccount:v9];
  }

  else
  {
    if (v8)
    {
      *(_WORD *)id v13 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Could Not Match Peer Payment Preferences",  v13,  2u);
    }

    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v12 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Inserting New Peer Payment Preferences",  v12,  2u);
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentPreferences insertPeerPaymentPeferences:forPeerPaymentAccount:inDatabase:]( &OBJC_CLASS___PeerPaymentPreferences,  "insertPeerPaymentPeferences:forPeerPaymentAccount:inDatabase:",  v4,  v9,  self->_database));
  }

  double v10 = (void *)objc_claimAutoreleasedReturnValue([v5 peerPaymentPreferences]);
  return v10;
}

- (id)removePeerPaymentPreferences
{
  uint64_t v6 = 0LL;
  id v7 = &v6;
  uint64_t v8 = 0x3032000000LL;
  uint64_t v9 = sub_10011BCF0;
  double v10 = sub_10011BD00;
  id v11 = 0LL;
  uint64_t database = self->_database;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10012FBDC;
  v5[3] = &unk_10063D438;
  v5[4] = self;
  void v5[5] = &v6;
  sub_1002CCC5C((uint64_t)database, v5);
  id v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

- (void)addPeerPaymentAccountIdentifierToDatabaseTransactions
{
  id v10 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  uint64_t database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v10 associatedPassUniqueID]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, v4));

  id v6 = [v5 persistentID];
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v10 identifier]);
  uint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = self->_database;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10012FDB8;
    void v11[3] = &unk_1006452B8;
    id v13 = v6;
    void v11[4] = self;
    id v12 = v7;
    sub_1002CCDBC((uint64_t)v9, @"SELECT pid, account_identifier, pass_pid from payment_transaction;", v11);
  }
}

- (id)peerPaymentPendingRequestsForRequestTokens:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v5 existsInDatabase]) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentPendingRequest peerPaymentPendingRequestsForRequestTokens:inDatabase:]( &OBJC_CLASS___PeerPaymentPendingRequest,  "peerPaymentPendingRequestsForRequestTokens:inDatabase:",  v4,  self->_database));
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (id)peerPaymentPendingRequestsForPeerPaymentAccount
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v3 existsInDatabase]) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentPendingRequest peerPaymentPendingRequestsForPeerPaymentAccountPID:inDatabase:]( PeerPaymentPendingRequest,  "peerPaymentPendingRequestsForPeerPaymentAccountPID:inDatabase:",  [v3 persistentID],  self->_database));
  }
  else {
    id v4 = 0LL;
  }

  return v4;
}

- (void)insertOrUpdatePeerPaymentPendingRequests:(id)a3
{
  id v5 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v4 existsInDatabase]) {
    +[PeerPaymentPendingRequest insertOrUpdatePeerPaymentPendingRequests:forPeerPaymentAccountPID:inDatabase:]( PeerPaymentPendingRequest,  "insertOrUpdatePeerPaymentPendingRequests:forPeerPaymentAccountPID:inDatabase:",  v5,  [v4 persistentID],  self->_database);
  }
}

- (void)deletePeerPaymentPendingRequestsForRequestTokens:(id)a3
{
  id v5 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v4 existsInDatabase]) {
    +[PeerPaymentPendingRequest deleteEntitiesForRequestTokens:inDatabase:]( &OBJC_CLASS___PeerPaymentPendingRequest,  "deleteEntitiesForRequestTokens:inDatabase:",  v5,  self->_database);
  }
}

- (void)deletePeerPaymentPendingRequestsForPeerPaymentAccount
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v3 existsInDatabase]) {
    +[PeerPaymentPendingRequest deleteEntitiesForPeerPaymentAccountPID:inDatabase:]( PeerPaymentPendingRequest,  "deleteEntitiesForPeerPaymentAccountPID:inDatabase:",  [v3 persistentID],  self->_database);
  }
}

- (id)peerPaymentRecurringPayments
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v3 existsInDatabase]) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForPeerPaymentAccountPID:inDatabase:]( PeerPaymentRecurringPayment,  "peerPaymentRecurringPaymentsForPeerPaymentAccountPID:inDatabase:",  [v3 persistentID],  self->_database));
  }
  else {
    id v4 = 0LL;
  }

  return v4;
}

- (id)peerPaymentRecurringPaymentWithIdentifier:(id)a3
{
  id v9 = a3;
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v9, 1LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForIdentifiers:inDatabase:]( &OBJC_CLASS___PeerPaymentRecurringPayment,  "peerPaymentRecurringPaymentsForIdentifiers:inDatabase:",  v5,  self->_database,  v9));

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 firstObject]);
  return v7;
}

- (id)peerPaymentRecurringPaymentsWithType:(unint64_t)a3
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v5 existsInDatabase]) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForPeerPaymentType:withAccountPID:inDatabase:]( PeerPaymentRecurringPayment,  "peerPaymentRecurringPaymentsForPeerPaymentType:withAccountPID:inDatabase:",  a3,  [v5 persistentID],  self->_database));
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (void)insertOrUpdatePeerPaymentRecurringPayments:(id)a3
{
  id v5 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v4 existsInDatabase]) {
    +[PeerPaymentRecurringPayment insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:]( PeerPaymentRecurringPayment,  "insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:",  v5,  [v4 persistentID],  self->_database);
  }
}

- (void)updateAllPeerPaymentRecurringPayments:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v5 existsInDatabase])
  {
    uint64_t v34 = v5;
    +[PeerPaymentRecurringPayment insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:]( PeerPaymentRecurringPayment,  "insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:",  v4,  [v5 persistentID],  self->_database);
    id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    __int128 v44 = 0u;
    id v33 = v4;
    id v7 = v4;
    id v8 = [v7 countByEnumeratingWithState:&v41 objects:v50 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v42;
      do
      {
        for (i = 0LL; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v42 != v10) {
            objc_enumerationMutation(v7);
          }
          id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v41 + 1) + 8 * (void)i) identifier]);
          -[NSMutableSet pk_safelyAddObject:](v6, "pk_safelyAddObject:", v12);
        }

        id v9 = [v7 countByEnumeratingWithState:&v41 objects:v50 count:16];
      }

      while (v9);
    }

    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentRecurringPayment recurringPaymentIdentifiersWithMemoInDatabase:]( &OBJC_CLASS___PeerPaymentRecurringPayment,  "recurringPaymentIdentifiersWithMemoInDatabase:",  self->_database));
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    id obj = v13;
    id v14 = [v13 countByEnumeratingWithState:&v37 objects:v49 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v38;
      uint64_t v36 = self;
      do
      {
        for (j = 0LL; j != v15; j = (char *)j + 1)
        {
          if (*(void *)v38 != v16) {
            objc_enumerationMutation(obj);
          }
          __int128 v18 = *(NSMutableSet **)(*((void *)&v37 + 1) + 8LL * (void)j);
          if ((-[NSMutableSet containsObject:](v6, "containsObject:", v18) & 1) == 0)
          {
            uint64_t v48 = v18;
            id v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v48,  1LL));
            id v20 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentRecurringPayment peerPaymentRecurringPaymentsForIdentifiers:inDatabase:]( &OBJC_CLASS___PeerPaymentRecurringPayment,  "peerPaymentRecurringPaymentsForIdentifiers:inDatabase:",  v19,  self->_database));
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 firstObject]);

            id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 memo]);
            id v23 = (PKPeerPaymentRecurringPayment *)objc_claimAutoreleasedReturnValue([v22 text]);
            if (-[PKPeerPaymentRecurringPayment length](v23, "length"))
            {
              id v24 = [v21 type];

              if (!v24) {
                goto LABEL_24;
              }
LABEL_20:
              id v23 = objc_alloc_init(&OBJC_CLASS___PKPeerPaymentRecurringPayment);
              -[PKPeerPaymentRecurringPayment setIdentifier:](v23, "setIdentifier:", v18);
              id v27 = (void *)objc_claimAutoreleasedReturnValue([v21 senderAddress]);
              -[PKPeerPaymentRecurringPayment setSenderAddress:](v23, "setSenderAddress:", v27);

              id v28 = (void *)objc_claimAutoreleasedReturnValue([v21 recipientAddress]);
              -[PKPeerPaymentRecurringPayment setRecipientAddress:](v23, "setRecipientAddress:", v28);

              -[PKPeerPaymentRecurringPayment setMemo:](v23, "setMemo:", v22);
              uint64_t Object = PKLogFacilityTypeGetObject(11LL);
              id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
              if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412290;
                __int128 v47 = v18;
                _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Downgrading recurring payment to memo only for identifier %@",  buf,  0xCu);
              }

              BOOL v45 = v23;
              id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v45,  1LL));
              +[PeerPaymentRecurringPayment insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:]( PeerPaymentRecurringPayment,  "insertOrUpdatePeerPaymentRecurringPayments:forPeerPaymentAccountPID:inDatabase:",  v25,  [v34 persistentID],  v36->_database);
LABEL_23:

              self = v36;
            }

            else
            {
              id v25 = (void *)objc_claimAutoreleasedReturnValue([v22 emoji]);
              if (![v25 length]) {
                goto LABEL_23;
              }
              id v26 = [v21 type];

              self = v36;
              if (v26) {
                goto LABEL_20;
              }
            }

- (void)deletePeerPaymentRecurringPaymentsForIdentifiers:(id)a3
{
  id v5 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v4 existsInDatabase]) {
    +[PeerPaymentRecurringPayment deleteEntitiesForPeerPaymentRecurringPaymentIdentifiers:inDatabase:]( &OBJC_CLASS___PeerPaymentRecurringPayment,  "deleteEntitiesForPeerPaymentRecurringPaymentIdentifiers:inDatabase:",  v5,  self->_database);
  }
}

- (void)deleteAllPeerPaymentRecurringPayments
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v3 existsInDatabase]) {
    +[PeerPaymentRecurringPayment deleteEntitiesForPeerPaymentAccountPID:inDatabase:]( PeerPaymentRecurringPayment,  "deleteEntitiesForPeerPaymentAccountPID:inDatabase:",  [v3 persistentID],  self->_database);
  }
}

- (id)peerPaymentEncryptionCertificateForDestination:(unint64_t)a3
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v5 existsInDatabase]) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentEncryptionCertificate peerPaymentEncryptionCertificateForDestination:inDatabase:]( &OBJC_CLASS___PeerPaymentEncryptionCertificate,  "peerPaymentEncryptionCertificateForDestination:inDatabase:",  a3,  self->_database));
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (void)insertOrUpdatePeerPaymentEncryptionCertificate:(id)a3
{
  id v5 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v4 existsInDatabase]) {
    +[PeerPaymentEncryptionCertificate insertOrUpdatePeerPaymentEncryptionCertificate:forPeerPaymentAccountPID:inDatabase:]( PeerPaymentEncryptionCertificate,  "insertOrUpdatePeerPaymentEncryptionCertificate:forPeerPaymentAccountPID:inDatabase:",  v5,  [v4 persistentID],  self->_database);
  }
}

- (void)deleteAllPeerPaymentEncryptionCertificates
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v3 existsInDatabase]) {
    +[PeerPaymentEncryptionCertificate deleteEncryptionCertificatesForPeerPaymentAccountPID:inDatabase:]( PeerPaymentEncryptionCertificate,  "deleteEncryptionCertificatesForPeerPaymentAccountPID:inDatabase:",  [v3 persistentID],  self->_database);
  }
}

- (id)peerPaymentCounterpartImageData
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v3 existsInDatabase]) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentCounterpartImageData peerPaymentCounterpartImageDataForPeerPaymentAccountPID:inDatabase:]( PeerPaymentCounterpartImageData,  "peerPaymentCounterpartImageDataForPeerPaymentAccountPID:inDatabase:",  [v3 persistentID],  self->_database));
  }
  else {
    id v4 = 0LL;
  }

  return v4;
}

- (id)peerPaymentCounterpartImageDataWithIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v5 existsInDatabase]) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentCounterpartImageData peerPaymentCounterpartImageDataWithIdentifier:inDatabase:]( &OBJC_CLASS___PeerPaymentCounterpartImageData,  "peerPaymentCounterpartImageDataWithIdentifier:inDatabase:",  v4,  self->_database));
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (id)peerPaymentCounterpartImageDataForTransactionWithIdentifier:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v5 existsInDatabase])
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionWithTransactionIdentifier:]( self,  "transactionWithTransactionIdentifier:",  v4));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 peerPaymentCounterpartImageRecordIdentifier]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentCounterpartImageData peerPaymentCounterpartImageDataWithIdentifier:inDatabase:]( &OBJC_CLASS___PeerPaymentCounterpartImageData,  "peerPaymentCounterpartImageDataWithIdentifier:inDatabase:",  v7,  self->_database));
  }

  else
  {
    id v8 = 0LL;
  }

  return v8;
}

- (void)insertOrUpdatePeerPaymentCounterpartImageData:(id)a3
{
  id v5 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v4 existsInDatabase]) {
    +[PeerPaymentCounterpartImageData insertOrUpdatePeerPaymentCounterpartImageData:forPeerPaymentAccountPID:inDatabase:]( PeerPaymentCounterpartImageData,  "insertOrUpdatePeerPaymentCounterpartImageData:forPeerPaymentAccountPID:inDatabase:",  v5,  [v4 persistentID],  self->_database);
  }
}

- (void)deletePeerPaymentCounterpartImageDataForIdentifier:(id)a3
{
  id v5 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v4 existsInDatabase]) {
    +[PeerPaymentCounterpartImageData deleteEntityForCounterpartImageDataIdentifier:inDatabase:]( &OBJC_CLASS___PeerPaymentCounterpartImageData,  "deleteEntityForCounterpartImageDataIdentifier:inDatabase:",  v5,  self->_database);
  }
}

- (void)deleteAllPeerPaymentCounterpartImageData
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  if ([v3 existsInDatabase]) {
    +[PeerPaymentCounterpartImageData deleteEntitiesForPeerPaymentAccountPID:inDatabase:]( PeerPaymentCounterpartImageData,  "deleteEntitiesForPeerPaymentAccountPID:inDatabase:",  [v3 persistentID],  self->_database);
  }
}

- (BOOL)verifyIntegrity
{
  uint64_t v16 = 0LL;
  __int128 v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  uint64_t v19 = 0LL;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_100130E4C;
  void v15[3] = &unk_1006452E0;
  void v15[4] = &v16;
  [WeakRetained readTrueUniqueIDs:v15];

  uint64_t v11 = 0LL;
  id v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  uint64_t v14 = 0LL;
  id v4 = objc_loadWeakRetained((id *)&self->_delegate);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100130E7C;
  v10[3] = &unk_1006452E0;
  void v10[4] = &v11;
  [v4 readTrueTransactionReceiptUniqueiDs:v10];

  unint64_t v5 = -[PDDatabaseManager numberOfRealPasses](self, "numberOfRealPasses");
  BOOL v8 = 0;
  if (v5 == v17[3])
  {
    unint64_t v6 = -[PDDatabaseManager numberOfTransactionReceipts](self, "numberOfTransactionReceipts");
    if (v6 == v12[3])
    {
      unint64_t v7 = -[PDDatabaseManager countOfTransactionsWithAssociatedReceipts]( self,  "countOfTransactionsWithAssociatedReceipts");
      if (v7 == v12[3]) {
        BOOL v8 = 1;
      }
    }
  }

  _Block_object_dispose(&v11, 8);
  _Block_object_dispose(&v16, 8);
  return v8;
}

- (unint64_t)countOfTransactionsWithAssociatedReceipts
{
  return +[PaymentTransaction numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:]( &OBJC_CLASS___PaymentTransaction,  "numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:",  self->_database);
}

- (void)computeExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4
{
  uint64_t v20 = 0LL;
  id v21 = &v20;
  uint64_t v22 = 0x3032000000LL;
  id v23 = sub_10011BCF0;
  id v24 = sub_10011BD00;
  id v25 = 0LL;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_1001310E0;
  v19[3] = &unk_1006452E0;
  void v19[4] = &v20;
  [WeakRetained readTrueUniqueIDs:v19];

  BOOL v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t database = self->_database;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v10));

  id v26 = @"unique_id";
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v26, 1LL));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_100131114;
  void v16[3] = &unk_1006432D8;
  uint64_t v18 = &v20;
  uint64_t v13 = v8;
  __int128 v17 = v13;
  [v11 enumeratePersistentIDsAndProperties:v12 usingBlock:v16];

  if (a3) {
    objc_storeStrong(a3, v8);
  }
  if (a4)
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([(id)v21[5] allObjects]);
    id v15 = *a4;
    *a4 = v14;
  }

  _Block_object_dispose(&v20, 8);
}

- (void)computeTransactionReceiptExtraneousUniqueIDs:(id *)a3 missingUniqueIDs:(id *)a4 removedUniqueIDs:(id *)a5
{
  uint64_t v40 = 0LL;
  __int128 v41 = &v40;
  uint64_t v42 = 0x3032000000LL;
  __int128 v43 = sub_10011BCF0;
  __int128 v44 = sub_10011BD00;
  id v45 = 0LL;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v39[0] = _NSConcreteStackBlock;
  v39[1] = 3221225472LL;
  v39[2] = sub_1001314F0;
  v39[3] = &unk_1006452E0;
  v39[4] = &v40;
  [WeakRetained readTrueTransactionReceiptUniqueiDs:v39];

  uint64_t v10 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction transactionReceiptUniqueIDsInDatabase:]( &OBJC_CLASS___PaymentTransaction,  "transactionReceiptUniqueIDsInDatabase:",  self->_database));
  uint64_t v31 = a3;
  id v12 = a4;
  uint64_t v13 = a5;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  id v14 = (id)v41[5];
  id v15 = [v14 countByEnumeratingWithState:&v35 objects:v47 count:16];
  if (v15)
  {
    uint64_t v16 = *(void *)v36;
    do
    {
      for (i = 0LL; i != v15; i = (char *)i + 1)
      {
        if (*(void *)v36 != v16) {
          objc_enumerationMutation(v14);
        }
        uint64_t v18 = *(void *)(*((void *)&v35 + 1) + 8LL * (void)i);
      }

      id v15 = [v14 countByEnumeratingWithState:&v35 objects:v47 count:16];
    }

    while (v15);
  }

  [(id)v41[5] minusSet:v10];
  uint64_t v19 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t database = self->_database;
  id v21 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteBooleanPredicate truePredicate](&OBJC_CLASS___SQLiteBooleanPredicate, "truePredicate"));
  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___TransactionReceipt,  "queryWithDatabase:predicate:",  database,  v21));

  double v46 = @"unique_id";
  id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v46, 1LL));
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472LL;
  v32[2] = sub_100131524;
  v32[3] = &unk_1006432D8;
  uint64_t v34 = &v40;
  id v24 = v19;
  id v33 = v24;
  [v22 enumeratePersistentIDsAndProperties:v23 usingBlock:v32];

  if (v31)
  {
    id v25 = -[NSMutableSet copy](v24, "copy");
    id v26 = *v31;
    id *v31 = v25;
  }

  if (v12)
  {
    id v27 = [(id)v41[5] copy];
    id v28 = *v12;
    *id v12 = v27;
  }

  if (v13)
  {
    id v29 = -[NSMutableSet copy](v10, "copy");
    id v30 = *v13;
    id *v13 = v29;
  }

  _Block_object_dispose(&v40, 8);
}

- (void)introduceDuplicateUniqueID
{
  uint64_t database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  unint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteEntity anyInDatabase:predicate:](&OBJC_CLASS___Pass, "anyInDatabase:predicate:", database, v4));
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 pass]);

  if (v6)
  {
    uint64_t Object = PKLogFacilityTypeGetObject(0LL);
    BOOL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueID]);
      *(_DWORD *)buf = 138412290;
      id v14 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Introducing duplicate uniqueID: %@",  buf,  0xCu);
    }

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _passTypeForPass:](self, "_passTypeForPass:", v6));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _webServiceForPass:passType:](self, "_webServiceForPass:passType:", v6, v10));
    id v12 =  +[Pass insertPass:withPassType:webService:transactionService:messageService:daemonPassData:inDatabase:]( &OBJC_CLASS___Pass,  "insertPass:withPassType:webService:transactionService:messageService:daemonPassData:inDatabase:",  v6,  v10,  v11,  0LL,  0LL,  0LL,  self->_database);
  }
}

- (void)introduceExtraneousUniqueID
{
  uint64_t database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  unint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteEntity anyInDatabase:predicate:](&OBJC_CLASS___Pass, "anyInDatabase:predicate:", database, v4));
  unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 pass]);

  if (v6)
  {
    uint64_t v7 = PDGenerateRandomDeviceIdentifier();
    BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    [v6 setUniqueID:v8];

    uint64_t Object = PKLogFacilityTypeGetObject(0LL);
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueID]);
      *(_DWORD *)buf = 138412290;
      uint64_t v16 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Introducing extraneous uniqueID: %@",  buf,  0xCu);
    }

    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _passTypeForPass:](self, "_passTypeForPass:", v6));
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _webServiceForPass:passType:](self, "_webServiceForPass:passType:", v6, v12));
    id v14 =  +[Pass insertPass:withPassType:webService:transactionService:messageService:daemonPassData:inDatabase:]( &OBJC_CLASS___Pass,  "insertPass:withPassType:webService:transactionService:messageService:daemonPassData:inDatabase:",  v6,  v12,  v13,  0LL,  0LL,  0LL,  self->_database);
  }
}

- (void)introduceMissingUniqueID
{
  uint64_t database = self->_database;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteEntity anyInDatabase:predicate:](&OBJC_CLASS___Pass, "anyInDatabase:predicate:", database, v3));

  if (v4)
  {
    uint64_t Object = PKLogFacilityTypeGetObject(0LL);
    unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:@"unique_id"]);
      int v8 = 138412290;
      id v9 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Introducing missing uniqueID: %@",  (uint8_t *)&v8,  0xCu);
    }

    [v4 deleteFromDatabase];
  }
}

- (void)_registerPasses:(id)a3
{
  id v4 = a3;
  uint64_t v5 = PKDeviceName();
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v7)
  {
    id v9 = v7;
    uint64_t v10 = *(void *)v19;
    uint64_t v11 = PKPassLibraryMachServiceName;
    do
    {
      id v12 = 0LL;
      do
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v6);
        }
        uint64_t v13 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)v12);
        uint64_t v14 = objc_opt_class(&OBJC_CLASS___PKPass, v8);
        if ((objc_opt_isKindOfClass(v13, v14) & 1) != 0)
        {
          [v13 setPassLibraryMachServiceName:v11];
          [v13 setDeviceName:v17];
          [v13 setRemotePass:0];
          sub_1003B0400(self->_objectSettingsManager, v13);
          if ([v13 passType] == (id)1) {
            [v13 updateDevicePaymentApplicationsWithSecureElementIdentifiers:v16];
          }
          id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
          [WeakRetained registerDatabaseObject:v13];
        }

        id v12 = (char *)v12 + 1;
      }

      while (v9 != v12);
      id v9 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v9);
  }
}

- (id)_registeredPass:(id)a3
{
  if (a3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:"));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v4));
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 anyObject]);
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

- (id)_registeredPasses:(id)a3
{
  id v4 = a3;
  uint64_t v16 = 0LL;
  __int128 v17 = &v16;
  uint64_t v18 = 0x3032000000LL;
  __int128 v19 = sub_10011BCF0;
  __int128 v20 = sub_10011BD00;
  id v21 = 0LL;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_100131D64;
  v13[3] = &unk_100645308;
  id v15 = &v16;
  id v6 = v4;
  id v14 = v6;
  [WeakRetained readTrueUniqueIDs:v13];

  -[PDDatabaseManager _registerPasses:](self, "_registerPasses:", v17[5]);
  id v7 = [(id)v17[5] count];
  if (v7 < [v6 count])
  {
    id v8 = PDDefaultQueue();
    id v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100131E3C;
    block[3] = &unk_100639300;
    void block[4] = self;
    dispatch_async(v9, block);
  }

  id v10 = (id)v17[5];

  _Block_object_dispose(&v16, 8);
  return v10;
}

- (id)_passTypeForPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 passTypeIdentifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  self->_database,  v5));
  if (!v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 teamID]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PassType insertPassTypeWithPassTypeID:teamID:inDatabase:]( &OBJC_CLASS___PassType,  "insertPassTypeWithPassTypeID:teamID:inDatabase:",  v5,  v7,  self->_database));
  }

  return v6;
}

- (id)_webServiceForPass:(id)a3 passType:(id)a4
{
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a3 webServiceURL]);
  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[WebService anyInDatabase:withPassType:serviceURL:]( &OBJC_CLASS___WebService,  "anyInDatabase:withPassType:serviceURL:",  self->_database,  v6,  v7));
    if (!v8) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue( +[WebService insertWebServiceWithPassType:serviceURL:inDatabase:]( &OBJC_CLASS___WebService,  "insertWebServiceWithPassType:serviceURL:inDatabase:",  v6,  v7,  self->_database));
    }
  }

  else
  {
    id v8 = 0LL;
  }

  return v8;
}

- (id)_transactionServiceForPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 transactionServiceURL]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 transactionServiceRegistrationURL]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 transactionPushTopic]);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _notificationServiceForPushTopic:serviceType:serviceURL:registrationURL:]( self,  "_notificationServiceForPushTopic:serviceType:serviceURL:registrationURL:",  v7,  0LL,  v5,  v6));
  return v8;
}

- (id)_messageServiceForPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 messageServiceURL]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 messageServiceRegistrationURL]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 messagePushTopic]);

  id v8 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _notificationServiceForPushTopic:serviceType:serviceURL:registrationURL:]( self,  "_notificationServiceForPushTopic:serviceType:serviceURL:registrationURL:",  v7,  1LL,  v5,  v6));
  return v8;
}

- (id)_notificationServiceForPushTopic:(id)a3 serviceType:(unint64_t)a4 serviceURL:(id)a5 registrationURL:(id)a6
{
  id v10 = a3;
  id v11 = a5;
  id v12 = a6;
  uint64_t v13 = 0LL;
  if (v10)
  {
    if (v11)
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NotificationService anyInDatabase:withPushTopic:serviceType:serviceURL:registrationURL:]( &OBJC_CLASS___NotificationService,  "anyInDatabase:withPushTopic:serviceType:serviceURL:registrationURL:",  self->_database,  v10,  a4,  v11,  v12));
      if (!v13)
      {
        id v14 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _deviceIdentifierForExistingServiceURL:registrationURL:]( self,  "_deviceIdentifierForExistingServiceURL:registrationURL:",  v11,  v12));
        if (!v14)
        {
          uint64_t v15 = PDGenerateRandomDeviceIdentifier();
          id v14 = (void *)objc_claimAutoreleasedReturnValue(v15);
        }

        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NotificationService insertNotificationServiceWithPushTopic:serviceType:serviceURL:registrationURL:deviceIdentifier:inDatabase:]( &OBJC_CLASS___NotificationService,  "insertNotificationServiceWithPushTopic:serviceType:serviceURL:registrationURL:deviceIdentifier:inDatabase:",  v10,  a4,  v11,  v12,  v14,  self->_database));
      }
    }
  }

  return v13;
}

- (id)_deviceIdentifierForExistingServiceURL:(id)a3 registrationURL:(id)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NotificationService anyInDatabase:withServiceURL:registrationURL:]( &OBJC_CLASS___NotificationService,  "anyInDatabase:withServiceURL:registrationURL:",  self->_database,  a3,  a4));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 notificationService]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 deviceIdentifier]);

  return v6;
}

- (void)_deleteNotificationServiceIfOrphaned:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    id v6 = v4;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withNotificationService:]( &OBJC_CLASS___Pass,  "anyInDatabase:withNotificationService:",  self->_database,  v4));

    id v4 = v6;
    if (!v5)
    {
      [v6 deleteFromDatabase];
      id v4 = v6;
    }
  }
}

- (void)_deletePassTypeIfOrphaned:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    id v6 = v4;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withPassType:]( &OBJC_CLASS___Pass,  "anyInDatabase:withPassType:",  self->_database,  v4));

    id v4 = v6;
    if (!v5)
    {
      [v6 deleteFromDatabase];
      id v4 = v6;
    }
  }
}

- (void)_deleteWebServiceIfOrphaned:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    id v6 = v4;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withWebService:]( &OBJC_CLASS___Pass,  "anyInDatabase:withWebService:",  self->_database,  v4));

    id v4 = v6;
    if (!v5)
    {
      [v6 deleteFromDatabase];
      id v4 = v6;
    }
  }
}

- (id)_predicateForStyle:(int64_t)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"template",  v3));

  return v4;
}

- (id)_predicateForStyles:(unint64_t)a3
{
  unint64_t v3 = a3;
  if (a3)
  {
    uint8x8_t v4 = (uint8x8_t)vcnt_s8((int8x8_t)a3);
    v4.i16[0] = vaddlv_u8(v4);
    uint64_t v5 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", v4.u32[0]);
    for (uint64_t i = 0LL; i != 12; ++i)
    {
      if (((v3 >> i) & 1) != 0)
      {
        id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", i));
        -[NSMutableArray addObject:](v5, "addObject:", v7);
      }
    }

    unint64_t v3 = objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateWithProperty:equalToValues:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateWithProperty:equalToValues:",  @"template",  v5));
  }

  return (id)v3;
}

- (id)_predicateForType:(unint64_t)a3
{
  if (a3 == -1LL)
  {
    uint8x8_t v4 = 0LL;
  }

  else
  {
    unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:"));
    uint8x8_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"pass_flavor",  v3));
  }

  return v4;
}

- (id)_predicateForPassTypes:(unint64_t)a3
{
  unint64_t v3 = a3;
  if (a3)
  {
    uint8x8_t v4 = (uint8x8_t)vcnt_s8((int8x8_t)a3);
    v4.i16[0] = vaddlv_u8(v4);
    uint64_t v5 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", v4.u32[0]);
    for (uint64_t i = 0LL; i != 64; ++i)
    {
      if (((v3 >> i) & 1) != 0)
      {
        id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", i));
        -[NSMutableArray addObject:](v5, "addObject:", v7);
      }
    }

    unint64_t v3 = objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateWithProperty:equalToValues:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateWithProperty:equalToValues:",  @"pass_flavor",  v5));
  }

  return (id)v3;
}

- (id)_locatedPredicate
{
  v2 = +[SQLiteHasAssociatedEntityPredicate predicateWithAssociatedEntityClass:]( &OBJC_CLASS___SQLiteHasAssociatedEntityPredicate,  "predicateWithAssociatedEntityClass:",  objc_opt_class(&OBJC_CLASS___Location, a2));
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v5 = +[SQLiteHasAssociatedEntityPredicate predicateWithAssociatedEntityClass:]( &OBJC_CLASS___SQLiteHasAssociatedEntityPredicate,  "predicateWithAssociatedEntityClass:",  objc_opt_class(&OBJC_CLASS___Beacon, v4));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v10[0] = v3;
  v10[1] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v10, 2LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v7));

  return v8;
}

- (id)_unlocatedPredicate
{
  v2 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _locatedPredicate](self, "_locatedPredicate"));
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate negatedPredicate:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "negatedPredicate:",  v2));

  return v3;
}

- (id)_datedPassPredicate
{
  return +[SQLiteHasAssociatedEntityPredicate predicateWithAssociatedEntityClass:]( &OBJC_CLASS___SQLiteHasAssociatedEntityPredicate,  "predicateWithAssociatedEntityClass:",  objc_opt_class(&OBJC_CLASS___PassRelevancyDates, a2));
}

- (id)_validPassPredicate
{
  v2 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNullPredicateWithProperty:",  @"revoked"));
  v19[0] = v2;
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:notEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:notEqualToValue:",  @"revoked",  &__kCFBooleanTrue));
  v19[1] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v19, 2LL));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v4));

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:notEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:notEqualToValue:",  @"voided",  &__kCFBooleanTrue));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNullPredicateWithProperty:",  @"expiration_date"));
  v18[0] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  id v9 = (void *)_SQLValueForDate(v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:greaterThanValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:greaterThanValue:",  @"expiration_date",  v9));
  v18[1] = v10;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v18, 2LL));
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v11));

  v17[0] = v5;
  v17[1] = v6;
  void v17[2] = v12;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForInMainStack](&OBJC_CLASS___Pass, "predicateForInMainStack"));
  v17[3] = v13;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v17, 4LL));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v14));

  return v15;
}

- (id)_activeSecureElementPassPredicate
{
  unint64_t v3 = -[NSSet initWithObjects:]( objc_alloc(&OBJC_CLASS___NSSet),  "initWithObjects:",  &off_10068FF18,  &off_10068FF30,  &off_100690020,  &off_100690038,  &off_100690050,  &off_100690008,  0LL);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v12[0] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForValidStyle](&OBJC_CLASS___Pass, "predicateForValidStyle"));
  v12[1] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationStates:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationStates:",  v3));
  v12[2] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v4));
  v12[3] = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v12, 4LL));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));

  return v10;
}

- (id)_transitPredicate
{
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", &off_100690068));
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationNetworks:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationNetworks:",  v2));
  v17[0] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationAppletDataFormatPrefix:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationAppletDataFormatPrefix:",  PKTransitAppletDataFormatPrefix));
  v17[1] = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v17, 2LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v5));

  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentCardType:](&OBJC_CLASS___Pass, "predicateForPaymentCardType:", 0LL));
  v16[0] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentType:](&OBJC_CLASS___Pass, "predicateForPaymentType:", 1000LL));
  v16[1] = v8;
  v16[2] = v6;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v16, 3LL));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentCardType:](&OBJC_CLASS___Pass, "predicateForPaymentCardType:", 2LL));
  v15[0] = v11;
  v15[1] = v10;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v15, 2LL));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v12));

  return v13;
}

- (id)_predicateMatchingPassesForWebService:(id)a3
{
  unint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _databaseWebService:](self, "_databaseWebService:", a3));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForWebService:](&OBJC_CLASS___Pass, "predicateForWebService:", v3));

  return v4;
}

- (id)_paymentNetworkIdentifiersForPaymentNetworks:(id)a3
{
  id v3 = a3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableSet setWithCapacity:]( NSMutableSet,  "setWithCapacity:",  [v3 count]));
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v14;
    do
    {
      id v9 = 0LL;
      do
      {
        if (*(void *)v14 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = PKPaymentCredentialTypeForPaymentNetworkName(*(void *)(*((void *)&v13 + 1) + 8LL * (void)v9));
        id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v10, (void)v13));
        if (v11) {
          [v4 addObject:v11];
        }

        id v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v7);
  }

  return v4;
}

- (id)_locatedCandidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4
{
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _locatedPredicate](self, "_locatedPredicate"));
  if (v6)
  {
    uint64_t v8 = -[NSArray initWithObjects:](objc_alloc(&OBJC_CLASS___NSArray), "initWithObjects:", v7, v6, 0LL);
    uint64_t v9 = objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

    id v7 = (void *)v9;
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _candidatePassesOfStyle:matchingFurtherPredicate:]( self,  "_candidatePassesOfStyle:matchingFurtherPredicate:",  a3,  v7));

  return v10;
}

- (id)_candidatePassesOfStyle:(int64_t)a3 matchingFurtherPredicate:(id)a4
{
  id v6 = a4;
  id v7 = objc_alloc(&OBJC_CLASS___NSArray);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _validPassPredicate](self, "_validPassPredicate"));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForStyle:](self, "_predicateForStyle:", a3));
  id v28 = v6;
  uint64_t v10 = -[NSArray initWithObjects:](v7, "initWithObjects:", v8, v9, v6, 0LL);

  id v27 = v10;
  id v26 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[Pass candidatePassesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "candidatePassesInDatabase:matchingPredicate:",  self->_database));
  id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  id v13 = v11;
  id v14 = [v13 countByEnumeratingWithState:&v29 objects:v33 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v30;
    do
    {
      for (uint64_t i = 0LL; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v30 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v18 = *(void **)(*((void *)&v29 + 1) + 8LL * (void)i);
        __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 passTypeIdentifier]);
        uint64_t v20 = PKPassTypeForPassTypeIdentifier(v19);

        if (v20 != 1)
        {
          objectSettingsManager = self->_objectSettingsManager;
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v18 uniqueIdentifier]);
          BOOL v23 = sub_1003AFC74( (BOOL)objectSettingsManager,  1,  v22,  objc_msgSend( +[PKPass classForPassType:](PKPass, "classForPassType:", v20),  "defaultSettings"));

          if (!v23) {
            continue;
          }
        }

        -[NSMutableSet addObject:](v12, "addObject:", v18);
      }

      id v15 = [v13 countByEnumeratingWithState:&v29 objects:v33 count:16];
    }

    while (v15);
  }

  if (-[NSMutableSet count](v12, "count")) {
    id v24 = -[NSMutableSet copy](v12, "copy");
  }
  else {
    id v24 = 0LL;
  }

  return v24;
}

- (id)_databaseWebService:(id)a3
{
  uint64_t database = self->_database;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 passTypeIdentifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PassType anyInDatabase:withPassTypeID:]( &OBJC_CLASS___PassType,  "anyInDatabase:withPassTypeID:",  database,  v6));

  uint64_t v8 = self->_database;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 serviceURL]);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[WebService anyInDatabase:withPassType:serviceURL:]( &OBJC_CLASS___WebService,  "anyInDatabase:withPassType:serviceURL:",  v8,  v7,  v9));
  return v10;
}

- (id)_databaseNotificationService:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 pushTopic]);
  id v6 = [v4 serviceType];
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v4 serviceURL]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 registrationURL]);

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NotificationService anyInDatabase:withPushTopic:serviceType:serviceURL:registrationURL:]( &OBJC_CLASS___NotificationService,  "anyInDatabase:withPushTopic:serviceType:serviceURL:registrationURL:",  database,  v5,  v6,  v7,  v8));
  return v9;
}

- (void)generateDemoTransactionsForAllPaymentPasses
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager passesOfType:](self, "passesOfType:", 1LL));
  id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v37 objects:v43 count:16];
  if (!v6)
  {
    uint64_t v8 = 0LL;
    goto LABEL_17;
  }

  id v7 = v6;
  uint64_t v8 = 0LL;
  uint64_t v9 = *(void *)v38;
  do
  {
    for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v38 != v9) {
        objc_enumerationMutation(v5);
      }
      id v11 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
      if ([v11 hasAssociatedPeerPaymentAccount])
      {
        uint64_t v12 = objc_claimAutoreleasedReturnValue([v11 serialNumber]);
        id v13 = v8;
        uint64_t v8 = (void *)v12;
      }

      else
      {
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v11 associatedAccountServiceAccountIdentifier]);

        if (!v14) {
          continue;
        }
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 associatedAccountServiceAccountIdentifier]);
        -[NSMutableSet addObject:](v4, "addObject:", v13);
      }
    }

    id v7 = [v5 countByEnumeratingWithState:&v37 objects:v43 count:16];
  }

  while (v7);
LABEL_17:

  id v15 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  uint64_t v16 = v4;
  id v17 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v33,  v42,  16LL);
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v34;
    do
    {
      for (j = 0LL; j != v18; j = (char *)j + 1)
      {
        if (*(void *)v34 != v19) {
          objc_enumerationMutation(v16);
        }
        id v21 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountUsersForAccountWithIdentifier:]( self,  "accountUsersForAccountWithIdentifier:",  *(void *)(*((void *)&v33 + 1) + 8LL * (void)j)));
        -[NSMutableSet unionSet:](v15, "unionSet:", v21);
      }

      id v18 = -[NSMutableSet countByEnumeratingWithState:objects:count:]( v16,  "countByEnumeratingWithState:objects:count:",  &v33,  v42,  16LL);
    }

    while (v18);
  }

  uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v5 allObjects]);
  +[PKDemoTransactionGenerator generateDemoFilesForPasses:accountUsers:peerPaymentPassSerialNumber:]( &OBJC_CLASS___PKDemoTransactionGenerator,  "generateDemoFilesForPasses:accountUsers:peerPaymentPassSerialNumber:",  v22,  v15,  v8);

  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id v23 = v5;
  id v24 = [v23 countByEnumeratingWithState:&v29 objects:v41 count:16];
  if (v24)
  {
    id v25 = v24;
    uint64_t v26 = *(void *)v30;
    do
    {
      for (k = 0LL; k != v25; k = (char *)k + 1)
      {
        if (*(void *)v30 != v26) {
          objc_enumerationMutation(v23);
        }
        uint64_t v28 = *(void *)(*((void *)&v29 + 1) + 8LL * (void)k);
        -[PDDatabaseManager _applyDemoPaymentApplicationToPass:]( self,  "_applyDemoPaymentApplicationToPass:",  v28,  (void)v29);
        -[PDDatabaseManager _applyDemoPaymentTransactionsToPass:](self, "_applyDemoPaymentTransactionsToPass:", v28);
      }

      id v25 = [v23 countByEnumeratingWithState:&v29 objects:v41 count:16];
    }

    while (v25);
  }
}

- (void)_applyDemoPaymentApplicationToPass:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a3 paymentPass]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 paymentApplicationsForSecureElementIdentifiers:v5]);
  if (![v6 count])
  {
    id v7 = objc_alloc_init(&OBJC_CLASS___PKPaymentApplication);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 paymentApplications]);
    id v9 = [v8 count];

    if (v9)
    {
      __int128 v28 = 0u;
      __int128 v29 = 0u;
      __int128 v26 = 0u;
      __int128 v27 = 0u;
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v4 paymentApplications]);
      id v11 = [v10 countByEnumeratingWithState:&v26 objects:v30 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v27;
        while (2)
        {
          for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v27 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)i);
            if (([v15 isAuxiliary] & 1) == 0)
            {
              uint64_t v16 = v15;

              id v7 = v16;
              goto LABEL_13;
            }
          }

          id v12 = [v10 countByEnumeratingWithState:&v26 objects:v30 count:16];
          if (v12) {
            continue;
          }
          break;
        }
      }

- (void)_applyDemoPaymentTransactionsToPass:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 uniqueID]);
  uint64_t v6 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  v5));
  uint64_t v7 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager primaryPaymentApplicationForPassUniqueIdentifier:]( self,  "primaryPaymentApplicationForPassUniqueIdentifier:",  v5));
  id v95 = v4;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 paymentPass]);
  id v94 = (void *)objc_claimAutoreleasedReturnValue([v8 associatedAccountServiceAccountIdentifier]);

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  id v87 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
  BOOL v93 = v9;
  id v88 = (void *)objc_claimAutoreleasedReturnValue([v9 associatedPassUniqueID]);
  uint64_t v100 = (void *)v6;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:]( self,  "transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:",  v6,  0LL,  0LL,  0LL));
  __int128 v134 = 0u;
  __int128 v135 = 0u;
  __int128 v136 = 0u;
  __int128 v137 = 0u;
  id v11 = [v10 countByEnumeratingWithState:&v134 objects:v153 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v135;
    do
    {
      for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v135 != v13) {
          objc_enumerationMutation(v10);
        }
        id v15 = *(void **)(*((void *)&v134 + 1) + 8LL * (void)i);
        if ([v15 transactionType] != (id)13) {
          id v16 =  -[PDDatabaseManager insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withPassUniqueIdentifier:paymentApplication:insertionMode:performTr uncation:insertedTransaction:",  v15,  v5,  v7,  2LL,  0LL,  0LL);
        }
      }

      id v12 = [v10 countByEnumeratingWithState:&v134 objects:v153 count:16];
    }

    while (v12);
  }

  unint64_t v89 = (void *)v7;
  __int128 v91 = (void *)v5;
  __int128 v86 = v10;
  __int128 v130 = 0u;
  __int128 v131 = 0u;
  __int128 v132 = 0u;
  __int128 v133 = 0u;
  id obj = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountUsersForAccountWithIdentifier:]( self,  "accountUsersForAccountWithIdentifier:",  v94));
  id v101 = [obj countByEnumeratingWithState:&v130 objects:v152 count:16];
  if (v101)
  {
    uint64_t v98 = *(void *)v131;
    do
    {
      uint64_t v17 = 0LL;
      do
      {
        if (*(void *)v131 != v98) {
          objc_enumerationMutation(obj);
        }
        uint64_t v103 = v17;
        id v18 = *(void **)(*((void *)&v130 + 1) + 8 * v17);
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:]( self,  "transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:",  v100,  0LL,  0LL,  0LL));
        __int128 v126 = 0u;
        __int128 v127 = 0u;
        __int128 v128 = 0u;
        __int128 v129 = 0u;
        id v20 = [v19 countByEnumeratingWithState:&v126 objects:v151 count:16];
        if (v20)
        {
          id v21 = v20;
          uint64_t v22 = *(void *)v127;
          do
          {
            for (j = 0LL; j != v21; j = (char *)j + 1)
            {
              if (*(void *)v127 != v22) {
                objc_enumerationMutation(v19);
              }
              id v24 = *(void **)(*((void *)&v126 + 1) + 8LL * (void)j);
              id v25 = (void *)objc_claimAutoreleasedReturnValue([v24 transactionSourceIdentifier]);
              if (v25)
              {
                id v26 =  -[PDDatabaseManager insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:insertionMode:performTruncati on:insertedTransaction:",  v24,  v25,  2LL,  0LL,  0LL);
              }

              else
              {
                __int128 v27 = (void *)objc_claimAutoreleasedReturnValue([v18 transactionSourceIdentifiers]);
                __int128 v28 = (void *)objc_claimAutoreleasedReturnValue([v27 anyObject]);
                id v29 =  -[PDDatabaseManager insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:insertionMode:performTruncation:insertedTransaction:]( self,  "insertOrUpdatePaymentTransaction:withTransactionSourceIdentifier:insertionMode:performTruncati on:insertedTransaction:",  v24,  v28,  2LL,  0LL,  0LL);
              }
            }

            id v21 = [v19 countByEnumeratingWithState:&v126 objects:v151 count:16];
          }

          while (v21);
        }

        uint64_t v17 = v103 + 1;
      }

      while ((id)(v103 + 1) != v101);
      id v101 = [obj countByEnumeratingWithState:&v130 objects:v152 count:16];
    }

    while (v101);
  }

  __int128 v30 = v91;
  if (v94)
  {
    __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", &off_10068FF78));
    __int128 v32 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountEventsForAccountIdentifier:excludingTypes:]( self,  "accountEventsForAccountIdentifier:excludingTypes:",  v94,  v31));

    __int128 v124 = 0u;
    __int128 v125 = 0u;
    __int128 v122 = 0u;
    __int128 v123 = 0u;
    id v33 = v32;
    id v34 = [v33 countByEnumeratingWithState:&v122 objects:v150 count:16];
    if (v34)
    {
      id v35 = v34;
      uint64_t v36 = *(void *)v123;
      do
      {
        for (k = 0LL; k != v35; k = (char *)k + 1)
        {
          if (*(void *)v123 != v36) {
            objc_enumerationMutation(v33);
          }
          __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v122 + 1) + 8 * (void)k) identifier]);
          -[PDDatabaseManager deleteAccountEventWithIdentifier:](self, "deleteAccountEventWithIdentifier:", v38);
        }

        id v35 = [v33 countByEnumeratingWithState:&v122 objects:v150 count:16];
      }

      while (v35);
    }
  }

  v149 = v95;
  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v149, 1LL));
  __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v93 associatedPassSerialNumber]);
  +[PKDemoTransactionGenerator generateDemoFilesForPasses:accountUsers:peerPaymentPassSerialNumber:]( &OBJC_CLASS___PKDemoTransactionGenerator,  "generateDemoFilesForPasses:accountUsers:peerPaymentPassSerialNumber:",  v39,  obj,  v40);

  id v104 = objc_alloc_init(&OBJC_CLASS___PKDemoTransactionGeneratorConfiguration);
  __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v95 paymentPass]);
  if ([v41 hasAssociatedPeerPaymentAccount])
  {
    uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v95 uniqueID]);
    id v43 = v88;
    id v44 = v42;
    if (v43 == v44)
    {

      goto LABEL_43;
    }

    id v45 = v44;
    if (v43 && v44)
    {
      unsigned __int8 v46 = [v43 isEqualToString:v44];

      if ((v46 & 1) == 0) {
        goto LABEL_46;
      }
LABEL_43:
      uint64_t v47 = 1LL;
      uint64_t v48 = v87;
      __int128 v49 = &OBJC_CLASS___PKAccountWebServiceRequestPhysicalCardRequest_ptr;
      goto LABEL_48;
    }
  }

LABEL_46:
  id v50 = (void *)objc_claimAutoreleasedReturnValue([v95 paymentPass]);
  double v51 = (void *)objc_claimAutoreleasedReturnValue([v50 associatedAccountServiceAccountIdentifier]);

  __int128 v49 = &OBJC_CLASS___PKAccountWebServiceRequestPhysicalCardRequest_ptr;
  if (!v51) {
    goto LABEL_49;
  }
  uint64_t v47 = 2LL;
  uint64_t v48 = v94;
LABEL_48:
  [v104 setAccountIdentifier:v48];
  id v52 = [v104 setAccountType:v47];
LABEL_49:
  uint64_t v53 = PKCurrentUserAltDSID(v52);
  id v54 = (void *)objc_claimAutoreleasedReturnValue(v53);
  [v104 setAltDSID:v54];

  id v55 = (void *)objc_claimAutoreleasedReturnValue([v89 transactionSourceIdentifier]);
  [v104 setTransactionSourceIdentifier:v55];

  uint64_t v56 = objc_claimAutoreleasedReturnValue([v49[109] itemIdentifierForPass:v95]);
  __int128 v57 = v49[109];
  uint64_t v120 = 0LL;
  uint64_t v121 = 0LL;
  __int128 v85 = (void *)v56;
  objc_msgSend(v57, "demoTransactionsAndEventsForItemIdentifier:configuration:transactions:events:");
  id v58 = 0LL;
  id v59 = 0LL;
  uint64_t Object = PKLogFacilityTypeGetObject(23LL);
  unint64_t v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  log = v61;
  if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
  {
    id v62 = [v58 count];
    id v63 = [v59 count];
    uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v95 organizationName]);
    *(_DWORD *)buf = 134219010;
    id v140 = v62;
    __int16 v141 = 2048;
    id v142 = v63;
    unint64_t v61 = log;
    __int16 v143 = 2112;
    int v144 = v64;
    __int16 v145 = 2112;
    id v146 = v91;
    __int16 v147 = 2112;
    BOOL v148 = v94;
    _os_log_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEFAULT,  "Generating %ld demo transactions and %ld events for pass: %@, unqiueID: %@, accountIdentifier: %@",  buf,  0x34u);

    __int128 v30 = v91;
  }

  v115[0] = _NSConcreteStackBlock;
  v115[1] = 3221225472LL;
  v115[2] = sub_100134358;
  v115[3] = &unk_100645330;
  id v65 = v58;
  id v116 = v65;
  int v117 = self;
  id v84 = v30;
  id v118 = v84;
  id v90 = v89;
  id v119 = v90;
  __int128 v83 = v65;
  [v65 enumerateObjectsUsingBlock:v115];
  v114[0] = _NSConcreteStackBlock;
  v114[1] = 3221225472LL;
  v114[2] = sub_1001343C0;
  v114[3] = &unk_100645358;
  v114[4] = self;
  uint64_t v92 = v59;
  [v59 enumerateObjectsUsingBlock:v114];
  __int128 v112 = 0u;
  __int128 v113 = 0u;
  __int128 v110 = 0u;
  __int128 v111 = 0u;
  id v102 = obj;
  id v66 = [v102 countByEnumeratingWithState:&v110 objects:v138 count:16];
  if (v66)
  {
    id v67 = v66;
    uint64_t v68 = *(void *)v111;
    do
    {
      id v69 = 0LL;
      id v99 = v67;
      do
      {
        if (*(void *)v111 != v68) {
          objc_enumerationMutation(v102);
        }
        unsigned int v70 = *(void **)(*((void *)&v110 + 1) + 8LL * (void)v69);
        if (([v70 isCurrentUser] & 1) == 0)
        {
          uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue([v70 accountIdentifier]);
          [v104 setAccountIdentifier:v71];

          [v104 setAccountType:2];
          id v72 = (void *)objc_claimAutoreleasedReturnValue([v70 altDSID]);
          [v104 setAltDSID:v72];

          id v73 = (void *)objc_claimAutoreleasedReturnValue([v70 transactionSourceIdentifiers]);
          id v74 = (void *)objc_claimAutoreleasedReturnValue([v73 anyObject]);
          [v104 setTransactionSourceIdentifier:v74];

          __int128 v75 = (void *)objc_claimAutoreleasedReturnValue([v49[109] itemIdentifierForAccountUser:v70]);
          __int128 v76 = v49[109];
          id v108 = 0LL;
          id v109 = 0LL;
          [v76 demoTransactionsAndEventsForItemIdentifier:v75 configuration:v104 transactions:&v109 events:&v108];
          id v77 = v109;
          id v78 = v108;
          if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
          {
            id v79 = [v77 count];
            id v80 = [v78 count];
            __int128 v81 = (void *)objc_claimAutoreleasedReturnValue([v70 appleID]);
            __int128 v82 = (void *)objc_claimAutoreleasedReturnValue([v70 accountIdentifier]);
            *(_DWORD *)buf = 134218754;
            id v140 = v79;
            __int16 v141 = 2048;
            id v142 = v80;
            unint64_t v61 = log;
            __int16 v143 = 2112;
            int v144 = v81;
            __int16 v145 = 2112;
            id v146 = v82;
            _os_log_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEFAULT,  "Generating %ld demo transactions and %ld events for account user: %@, accountIdentifier: %@",  buf,  0x2Au);

            __int128 v49 = &OBJC_CLASS___PKAccountWebServiceRequestPhysicalCardRequest_ptr;
          }

          v106[0] = _NSConcreteStackBlock;
          v106[1] = 3221225472LL;
          v106[2] = sub_1001343CC;
          v106[3] = &unk_100645380;
          v106[4] = self;
          id v107 = v104;
          [v77 enumerateObjectsUsingBlock:v106];
          v105[0] = _NSConcreteStackBlock;
          v105[1] = 3221225472LL;
          v105[2] = sub_100134434;
          v105[3] = &unk_100645358;
          v105[4] = self;
          [v78 enumerateObjectsUsingBlock:v105];

          id v67 = v99;
        }

        id v69 = (char *)v69 + 1;
      }

      while (v67 != v69);
      id v67 = [v102 countByEnumeratingWithState:&v110 objects:v138 count:16];
    }

    while (v67);
  }
}

- (void)_applyDemoFelicaAppletStateToPass:(id)a3
{
  id v16 = a3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v16 uniqueID]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v16 paymentPass]);
  uint64_t v6 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager primaryPaymentApplicationForPassUniqueIdentifier:]( self,  "primaryPaymentApplicationForPassUniqueIdentifier:",  v4));
  uint64_t v7 = (void *)v6;
  if (v5 && v6)
  {
    uint64_t v8 = PKHomeDirectoryPath(v6);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 stringByAppendingPathComponent:@"FelicaAppletHistory.plist"]);

    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithContentsOfFile:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithContentsOfFile:",  v10));
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v16 serialNumber]);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKey:v12]);

    if (v13)
    {
      id v14 = [[PKFelicaAppletHistory alloc] initWithDictionary:v13 source:1];
      id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      -[PDDatabaseManager updateTransitAppletStateWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:forceTransactionGeneration:balanceLabelDictionary:unitDictionary:planLabelDictionary:completion:]( self,  "updateTransitAppletStateWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:forceTransact ionGeneration:balanceLabelDictionary:unitDictionary:planLabelDictionary:completion:",  v14,  v15,  v7,  v4,  0LL,  0LL,  0LL,  0LL,  0LL);
    }
  }
}

- (void)_updateCloudStoreWithTransactions:(id)a3 transactionSourceIdentifier:(id)a4
{
  id v6 = a3;
  id v22 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)&self->_cloudStoreCoordinator);

  if (WeakRetained)
  {
    if ([v6 count])
    {
      uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      id v9 = objc_alloc_init(&OBJC_CLASS___PKAsyncUnaryOperationComposer);
      __int128 v30 = 0u;
      __int128 v31 = 0u;
      __int128 v32 = 0u;
      __int128 v33 = 0u;
      id v21 = v6;
      id v10 = v6;
      id v11 = [v10 countByEnumeratingWithState:&v30 objects:v34 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v31;
        do
        {
          for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v31 != v13) {
              objc_enumerationMutation(v10);
            }
            id v15 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)i);
            id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 serviceIdentifier]);

            if (v16)
            {
              v27[0] = _NSConcreteStackBlock;
              v27[1] = 3221225472LL;
              void v27[2] = sub_100134870;
              v27[3] = &unk_10063BAD8;
              v27[4] = self;
              v27[5] = v15;
              id v28 = v22;
              id v29 = v8;
              [v9 addOperation:v27];
            }
          }

          id v12 = [v10 countByEnumeratingWithState:&v30 objects:v34 count:16];
        }

        while (v12);
      }

      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472LL;
      void v23[2] = sub_1001349A0;
      v23[3] = &unk_1006453F0;
      id v24 = v8;
      id v25 = self;
      id v26 = v22;
      id v18 = v8;
      id v19 = [v9 evaluateWithInput:v17 completion:v23];

      id v6 = v21;
    }

    else
    {
      uint64_t Object = PKLogFacilityTypeGetObject(9LL);
      id v9 = (id)objc_claimAutoreleasedReturnValue(Object);
      if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v36 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v9,  OS_LOG_TYPE_DEFAULT,  "Cannot update the cloud store with a nil transaction for transactionSourceIdentifier %@",  buf,  0xCu);
      }
    }
  }
}

- (id)featureApplications
{
  return +[FeatureApplication featureApplicationsInDatabase:]( &OBJC_CLASS___FeatureApplication,  "featureApplicationsInDatabase:",  self->_database);
}

- (id)featureApplicationsWithAccountIdentifier:(id)a3
{
  return +[FeatureApplication featureApplicationsForAccountIdentifier:inDatabase:]( &OBJC_CLASS___FeatureApplication,  "featureApplicationsForAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (unint64_t)newAccountUserInvitationsCount
{
  return +[FeatureApplication newAccountUserInvitationsCountInDatabase:]( &OBJC_CLASS___FeatureApplication,  "newAccountUserInvitationsCountInDatabase:",  self->_database);
}

- (id)featureApplicationWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[FeatureApplication featureApplicationWithIdentifier:inDatabase:]( &OBJC_CLASS___FeatureApplication,  "featureApplicationWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 featureApplication]);

  return v4;
}

- (id)setFeatureApplications:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v7 = v4;
  id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "applicationIdentifier", (void)v18));
        if (v13)
        {
          id v14 = (void *)objc_claimAutoreleasedReturnValue( +[FeatureApplication insertOrUpdateFeatureApplication:inDatabase:]( &OBJC_CLASS___FeatureApplication,  "insertOrUpdateFeatureApplication:inDatabase:",  v12,  self->_database));
          [v5 addObject:v13];
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 featureApplication]);
          [v6 addObject:v15];
        }
      }

      id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v9);
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 allObjects]);
  +[FeatureApplication deleteFeatureApplicationsNotIncludingIdentifiers:inDatabase:]( &OBJC_CLASS___FeatureApplication,  "deleteFeatureApplicationsNotIncludingIdentifiers:inDatabase:",  v16,  self->_database);

  return v6;
}

- (id)setFeatureApplications:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v20 = a4;
  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v8 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v9 = v6;
  id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v22;
    do
    {
      for (uint64_t i = 0LL; i != v11; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v12) {
          objc_enumerationMutation(v9);
        }
        id v14 = *(void **)(*((void *)&v21 + 1) + 8LL * (void)i);
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 applicationIdentifier]);
        if (v15)
        {
          id v16 = (void *)objc_claimAutoreleasedReturnValue( +[FeatureApplication insertOrUpdateFeatureApplication:inDatabase:]( &OBJC_CLASS___FeatureApplication,  "insertOrUpdateFeatureApplication:inDatabase:",  v14,  self->_database));
          -[NSMutableSet addObject:](v7, "addObject:", v15);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 featureApplication]);
          -[NSMutableArray addObject:](v8, "addObject:", v17);
        }
      }

      id v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }

    while (v11);
  }

  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableSet allObjects](v7, "allObjects"));
  +[FeatureApplication deleteFeatureApplicationsNotIncludingIdentifiers:forAccountIdentifier:inDatabase:]( &OBJC_CLASS___FeatureApplication,  "deleteFeatureApplicationsNotIncludingIdentifiers:forAccountIdentifier:inDatabase:",  v18,  v20,  self->_database);

  return v8;
}

- (id)insertOrUpdateFeatureApplication:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[FeatureApplication insertOrUpdateFeatureApplication:inDatabase:]( &OBJC_CLASS___FeatureApplication,  "insertOrUpdateFeatureApplication:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 featureApplication]);

  return v4;
}

- (void)deleteFeatureApplicationWithIdentifier:(id)a3
{
}

- (void)deleteAllFeatureApplications
{
}

- (void)deleteFeatureApplicationsWithAccountIdentifier:(id)a3
{
}

- (void)deleteAllPaymentTransactionTags
{
}

- (id)nextPossibleFetchDateForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5
{
  id v8 = a5;
  int64_t v9 = -[PDDatabaseManager _accountPIDForEndpointBackoffType:accountIdentifier:]( self,  "_accountPIDForEndpointBackoffType:accountIdentifier:",  a3,  v8);
  if (v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEndpointBackOff anyInDatabase:forAccountType:endpointType:accountPID:]( &OBJC_CLASS___AccountEndpointBackOff,  "anyInDatabase:forAccountType:endpointType:accountPID:",  self->_database,  a3,  a4,  v9));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 nextPossibleFetchDate]);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(14LL);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 138412290;
      id v16 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Error: could not find an account pid for account identifier %@",  (uint8_t *)&v15,  0xCu);
    }

    id v11 = 0LL;
  }

  return v11;
}

- (void)increaseRetryBackoffLevelForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5
{
  id v8 = a5;
  int64_t v9 = -[PDDatabaseManager _accountPIDForEndpointBackoffType:accountIdentifier:]( self,  "_accountPIDForEndpointBackoffType:accountIdentifier:",  a3,  v8);
  if (v9)
  {
    int64_t v10 = v9;
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEndpointBackOff anyInDatabase:forAccountType:endpointType:accountPID:]( &OBJC_CLASS___AccountEndpointBackOff,  "anyInDatabase:forAccountType:endpointType:accountPID:",  self->_database,  a3,  a4,  v9));
    uint64_t v12 = v11;
    if (v11) {
      [v11 increaseBackoffLevel];
    }
    else {
      id v15 =  +[AccountEndpointBackOff insertIfNotExistsForAccountType:endpointType:accountPID:inDatabase:]( &OBJC_CLASS___AccountEndpointBackOff,  "insertIfNotExistsForAccountType:endpointType:accountPID:inDatabase:",  a3,  a4,  v10,  self->_database);
    }
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(14LL);
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 138412290;
      id v17 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Error: could not find an account pid for account identifier %@",  (uint8_t *)&v16,  0xCu);
    }
  }
}

- (void)deleteRetryBackoffForAccountType:(unint64_t)a3 endpointType:(unint64_t)a4 accountIdentifier:(id)a5
{
  int64_t v8 = -[PDDatabaseManager _accountPIDForEndpointBackoffType:accountIdentifier:]( self,  "_accountPIDForEndpointBackoffType:accountIdentifier:",  a3,  a5);
  if (v8) {
    +[AccountEndpointBackOff deleteBackOffForAccountType:endpointType:accountPID:inDatabase:]( &OBJC_CLASS___AccountEndpointBackOff,  "deleteBackOffForAccountType:endpointType:accountPID:inDatabase:",  a3,  a4,  v8,  self->_database);
  }
}

- (int64_t)_accountPIDForEndpointBackoffType:(unint64_t)a3 accountIdentifier:(id)a4
{
  id v6 = a4;
  if (a3 - 2 >= 4)
  {
    if (a3 != 1)
    {
      id v9 = 0LL;
      goto LABEL_9;
    }

    id v7 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
    int64_t v8 = v7;
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  v6));
    int64_t v8 = v7;
    if (!v7)
    {
      id v9 = 0LL;
      goto LABEL_8;
    }
  }

  id v9 = [v7 persistentID];
LABEL_8:

LABEL_9:
  return (int64_t)v9;
}

- (id)accounts
{
  return +[Account accountsInDatabase:](&OBJC_CLASS___Account, "accountsInDatabase:", self->_database);
}

- (id)dbAccountWithIdentifier:(id)a3
{
  return +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)accountWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 account]);

  return v4;
}

- (id)accountsWithIdentifiers:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      int64_t v10 = 0LL;
      do
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountWithIdentifier:]( self,  "accountWithIdentifier:",  *(void *)(*((void *)&v14 + 1) + 8LL * (void)v10),  (void)v14));
        -[NSMutableArray safelyAddObject:](v5, "safelyAddObject:", v11);

        int64_t v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v8);
  }

  id v12 = -[NSMutableArray copy](v5, "copy");
  return v12;
}

- (id)accountWithVirtualCardIdentifier:(id)a3
{
  return +[Account accountWithVirtualCardIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithVirtualCardIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)accountWithPhysicalCardIdentifier:(id)a3
{
  return +[Account accountWithPhysicalCardIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithPhysicalCardIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)setAccounts:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v7 = v4;
  id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[Account insertOrUpdateAccount:inDatabase:]( &OBJC_CLASS___Account,  "insertOrUpdateAccount:inDatabase:",  v12,  self->_database,  (void)v18));
        __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v12 accountIdentifier]);
        [v5 addObject:v14];

        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v13 account]);
        [v6 addObject:v15];
      }

      id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v9);
  }

  __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v5 allObjects]);
  +[Account deleteAccountsNotIncludingIdentifiers:inDatabase:]( &OBJC_CLASS___Account,  "deleteAccountsNotIncludingIdentifiers:inDatabase:",  v16,  self->_database);

  return v6;
}

- (id)insertOrUpdateAccount:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[Account insertOrUpdateAccount:inDatabase:]( &OBJC_CLASS___Account,  "insertOrUpdateAccount:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 account]);

  return v4;
}

- (void)deleteAccountWithIdentifier:(id)a3
{
}

- (void)deleteAllAccounts
{
}

- (id)insertOrUpdateAccountUsers:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  id v8 = v7;
  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v7 persistentID]));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser insertOrUpdateAccountUsers:forAccountPID:inDatabase:]( &OBJC_CLASS___AccountUser,  "insertOrUpdateAccountUsers:forAccountPID:inDatabase:",  v6,  v9,  self->_database));
    id v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "pk_setByApplyingBlock:", &stru_100645430));
  }

  else
  {
    id v11 = 0LL;
  }

  return v11;
}

- (id)insertOrUpdateAccountUser:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  id v8 = v7;
  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v7 persistentID]));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser insertOrUpdateAccountUser:forAccountPID:inDatabase:]( &OBJC_CLASS___AccountUser,  "insertOrUpdateAccountUser:forAccountPID:inDatabase:",  v6,  v9,  self->_database));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 accountUser]);
  }

  else
  {
    id v11 = 0LL;
  }

  return v11;
}

- (BOOL)hasAnyAccount
{
  return +[Account hasAnyAccountInDatabase:](&OBJC_CLASS___Account, "hasAnyAccountInDatabase:", self->_database);
}

- (BOOL)hasAnyAccountWithType:(unint64_t)a3
{
  uint64_t database = self->_database;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", a3));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[Account anyInDatabase:withType:](&OBJC_CLASS___Account, "anyInDatabase:withType:", database, v4));
  BOOL v6 = v5 != 0LL;

  return v6;
}

- (void)deleteAccountUserWithAltDSID:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v9 = a3;
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  id v7 = v6;
  if (v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v6 persistentID]));
    +[AccountUser deleteAccountUserWithAltDSID:forAccountPID:inDatabase:]( &OBJC_CLASS___AccountUser,  "deleteAccountUserWithAltDSID:forAccountPID:inDatabase:",  v9,  v8,  self->_database);
  }
}

- (id)accountUsersForAccountWithIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  uint64_t v5 = v4;
  if (v4)
  {
    BOOL v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v4 persistentID]));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser accountUsersForAccountPID:inDatabase:]( &OBJC_CLASS___AccountUser,  "accountUsersForAccountPID:inDatabase:",  v6,  self->_database));
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

- (id)accountUsersForAccountWithIdentifier:(id)a3 accessLevel:(unint64_t)a4
{
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  id v7 = v6;
  if (v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v6 persistentID]));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser accountUsersForAccountPID:accessLevel:inDatabase:]( &OBJC_CLASS___AccountUser,  "accountUsersForAccountPID:accessLevel:inDatabase:",  v8,  a4,  self->_database));
  }

  else
  {
    id v9 = 0LL;
  }

  return v9;
}

- (id)accountUserForAccountWithIdentifier:(id)a3 handle:(id)a4
{
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  id v8 = v7;
  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v7 persistentID]));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser accountUserForAccountPID:handle:inDatabase:]( &OBJC_CLASS___AccountUser,  "accountUserForAccountPID:handle:inDatabase:",  v9,  v6,  self->_database));
  }

  else
  {
    uint64_t v10 = 0LL;
  }

  return v10;
}

- (id)setScheduledPayments:(id)a3 forAccount:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v19 = v7;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 accountIdentifier]);
  +[AccountPayment deleteScheduledPaymentsWithAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountPayment,  "deleteScheduledPaymentsWithAccountIdentifier:inDatabase:",  v9,  self->_database);
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v10 = v6;
  id v11 = [v10 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v21;
    do
    {
      __int128 v14 = 0LL;
      do
      {
        if (*(void *)v21 != v13) {
          objc_enumerationMutation(v10);
        }
        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPayment insertScheduledPayment:accountIdentifier:inDatabase:]( &OBJC_CLASS___AccountPayment,  "insertScheduledPayment:accountIdentifier:inDatabase:",  *(void *)(*((void *)&v20 + 1) + 8LL * (void)v14),  v9,  self->_database));
        __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v15 payment]);

        [v8 safelyAddObject:v16];
        __int128 v14 = (char *)v14 + 1;
      }

      while (v12 != v14);
      id v12 = [v10 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }

    while (v12);
  }

  id v17 = [v8 copy];
  return v17;
}

- (id)scheduledPaymentsWithAccountIdentifier:(id)a3 includeFailedRecurringPayments:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPayment scheduledPaymentsWithAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountPayment,  "scheduledPaymentsWithAccountIdentifier:inDatabase:",  v6,  self->_database));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 allObjects]);

  if (v4)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPayment failedRecurringPaymentsWithAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountPayment,  "failedRecurringPaymentsWithAccountIdentifier:inDatabase:",  v6,  self->_database));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 allObjects]);

    uint64_t v11 = objc_claimAutoreleasedReturnValue([v8 arrayByAddingObjectsFromArray:v10]);
    id v8 = (void *)v11;
  }

  return v8;
}

- (id)setTransfers:(id)a3 forAccount:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v22 = v7;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 accountIdentifier]);
  +[AccountTransfer deleteTransfersWithAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountTransfer,  "deleteTransfersWithAccountIdentifier:inDatabase:",  v9,  self->_database);
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v10 = v6;
  id v11 = [v10 countByEnumeratingWithState:&v23 objects:v28 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v24;
    do
    {
      __int128 v14 = 0LL;
      do
      {
        if (*(void *)v24 != v13) {
          objc_enumerationMutation(v10);
        }
        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( +[AccountTransfer insertTransfer:accountIdentifier:inDatabase:]( &OBJC_CLASS___AccountTransfer,  "insertTransfer:accountIdentifier:inDatabase:",  *(void *)(*((void *)&v23 + 1) + 8LL * (void)v14),  v9,  self->_database));
        __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v15 transfer]);

        [v8 safelyAddObject:v16];
        __int128 v14 = (char *)v14 + 1;
      }

      while (v12 != v14);
      id v12 = [v10 countByEnumeratingWithState:&v23 objects:v28 count:16];
    }

    while (v12);
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"transferDate",  0LL));
  __int128 v27 = v17;
  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v27, 1LL));
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v8 sortedArrayUsingDescriptors:v18]);

  id v20 = [v19 copy];
  return v20;
}

- (id)placedHoldsWithAccountIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[AccountHold placedHoldsWithAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountHold,  "placedHoldsWithAccountIdentifier:inDatabase:",  a3,  self->_database));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 allObjects]);

  return v4;
}

- (BOOL)insertOrUpdateAccountEvent:(id)a3
{
  return +[AccountEvent insertOrUpdateAccountEvent:inDatabase:]( &OBJC_CLASS___AccountEvent,  "insertOrUpdateAccountEvent:inDatabase:",  a3,  self->_database);
}

- (BOOL)accountEventExistsWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEvent accountEventWithIdentifier:inDatabase:]( &OBJC_CLASS___AccountEvent,  "accountEventWithIdentifier:inDatabase:",  a3,  self->_database));
  BOOL v4 = v3 != 0LL;

  return v4;
}

- (id)accountEventWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEvent accountEventWithIdentifier:inDatabase:]( &OBJC_CLASS___AccountEvent,  "accountEventWithIdentifier:inDatabase:",  a3,  self->_database));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 event]);

  return v4;
}

- (id)redemptionAccountEventWithRewardsAddedIdentifier:(id)a3
{
  return +[AccountEvent redemptionAccountEventWithRewardsAddedIdentifier:inDatabase:]( &OBJC_CLASS___AccountEvent,  "redemptionAccountEventWithRewardsAddedIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)redemptionAccountEventWithTransactionIdentifier:(id)a3
{
  return +[AccountEvent redemptionAccountEventWithTransactionIdentifier:inDatabase:]( &OBJC_CLASS___AccountEvent,  "redemptionAccountEventWithTransactionIdentifier:inDatabase:",  a3,  self->_database);
}

- (unint64_t)successfulRedemptionEventsToPeerPaymentForAccountIdentifier:(id)a3
{
  return +[AccountEvent successfulRedemptionEventsToPeerPaymentForAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountEvent,  "successfulRedemptionEventsToPeerPaymentForAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)accountEventsForAccountIdentifier:(id)a3 altDSID:(id)a4 types:(id)a5 startDate:(id)a6 endDate:(id)a7 orderedByDate:(int64_t)a8 limit:(unint64_t)a9
{
  return +[AccountEvent accountEventsForAccountIdentifier:altDSID:types:startDate:endDate:orderedByDate:limit:inDatabase:]( &OBJC_CLASS___AccountEvent,  "accountEventsForAccountIdentifier:altDSID:types:startDate:endDate:orderedByDate:limit:inDatabase:",  a3,  a4,  a5,  a6,  a7,  a8,  a9,  self->_database);
}

- (id)accountEventsForAccountIdentifier:(id)a3
{
  return +[AccountEvent accountEventsWithAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountEvent,  "accountEventsWithAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)accountEventsForAccountIdentifier:(id)a3 excludingTypes:(id)a4
{
  return +[AccountEvent accountEventsWithAccountIdentifier:excludingTypes:inDatabase:]( &OBJC_CLASS___AccountEvent,  "accountEventsWithAccountIdentifier:excludingTypes:inDatabase:",  a3,  a4,  self->_database);
}

- (void)deleteAccountEventWithIdentifier:(id)a3
{
}

- (void)deleteAccountEventsForAccountIdentifier:(id)a3
{
}

- (BOOL)hasAccountServicingEventsWithStatus:(unint64_t)a3
{
  return +[AccountServicingEvent hasServicingEventsWithStatus:inDatabase:]( &OBJC_CLASS___AccountServicingEvent,  "hasServicingEventsWithStatus:inDatabase:",  a3,  self->_database);
}

- (id)identifiersForAccountServicingEventsWithStatus:(unint64_t)a3
{
  return +[AccountEvent eventIdentifiersForEventsWithServicingStatus:inDatabase:]( &OBJC_CLASS___AccountEvent,  "eventIdentifiersForEventsWithServicingStatus:inDatabase:",  a3,  self->_database);
}

- (id)creditStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[CreditAccountStatement creditAccountStatementsWithIdentifier:withAccountIdentifier:inDatabase:]( &OBJC_CLASS___CreditAccountStatement,  "creditAccountStatementsWithIdentifier:withAccountIdentifier:inDatabase:",  a3,  a4,  self->_database));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 anyObject]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 creditAccountStatement]);

  return v6;
}

- (id)creditStatementWithIdentifier:(id)a3 accountIdentifiers:(id)a4
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[CreditAccountStatement creditAccountStatementsWithIdentifier:withAccountIdentifiers:inDatabase:]( &OBJC_CLASS___CreditAccountStatement,  "creditAccountStatementsWithIdentifier:withAccountIdentifiers:inDatabase:",  a3,  a4,  self->_database));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 anyObject]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 creditAccountStatement]);

  return v6;
}

- (id)savingsStatementWithIdentifier:(id)a3 accountIdentifier:(id)a4
{
  return +[SavingsAccountStatement savingsStatementWithIdentifier:accountIdentifier:inDatabase:]( &OBJC_CLASS___SavingsAccountStatement,  "savingsStatementWithIdentifier:accountIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (id)creditAccountStatementsForAccountIdentifier:(id)a3
{
  return +[CreditAccountStatement creditAccountStatementsForAccountIdentifier:inDatabase:]( &OBJC_CLASS___CreditAccountStatement,  "creditAccountStatementsForAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (void)deleteCreditAccountStatementsForAccount:(id)a3
{
}

- (id)accountStatementMetadataForAccountIdentifier:(id)a3
{
  return +[AccountStatementMetadata accountStatementMetadataForAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountStatementMetadata,  "accountStatementMetadataForAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)accountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[AccountStatementMetadata anyInDatabase:forStatementIdentifier:accountIdentifier:]( &OBJC_CLASS___AccountStatementMetadata,  "anyInDatabase:forStatementIdentifier:accountIdentifier:",  self->_database,  a3,  a4));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 accountStatementMetadata]);

  return v5;
}

- (void)deleteAccountStatementMetadataForStatementIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[AccountStatementMetadata anyInDatabase:forStatementIdentifier:accountIdentifier:]( &OBJC_CLASS___AccountStatementMetadata,  "anyInDatabase:forStatementIdentifier:accountIdentifier:",  self->_database,  a3,  a4));
  [v4 deleteFromDatabase];
}

- (id)latestStatementIdentifierThatNeedsMetadataProcessingForAccountIdentifier:(id)a3 accountType:(unint64_t)a4 maxProcessedAttemptCount:(int64_t)a5
{
  id v8 = a3;
  if (a4 == 1)
  {
    id v9 = @"pineapples.c";
    id v10 = @"pineapples.t";
    id v11 = @"pineapples.b";
    id v12 = @"pineapples";
  }

  else
  {
    if (a4 != 4)
    {
      uint64_t v13 = 0LL;
      goto LABEL_7;
    }

    id v9 = @"eggplant.d";
    id v10 = @"eggplant.n";
    id v11 = @"eggplant.b";
    id v12 = @"eggplant";
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[AccountStatementMetadata latestStatementIdentifierThatNeedsMetadataProcessingForAccountIdentifier:tableName:statementIdentifierColumn:accountIdentifierColumn:openingDateColumn:maxProcessedAttemptCount:inDatabase:]( &OBJC_CLASS___AccountStatementMetadata,  "latestStatementIdentifierThatNeedsMetadataProcessingForAccountIdentifier:tableName:statementIdentifi erColumn:accountIdentifierColumn:openingDateColumn:maxProcessedAttemptCount:inDatabase:",  v8,  v12,  v11,  v10,  v9,  a5,  self->_database));
LABEL_7:

  return v13;
}

- (id)markStatementMetadataItems:(id)a3 asProcessed:(BOOL)a4 error:(unint64_t)a5 statementIdentifier:(id)a6 accountIdentifier:(id)a7
{
  BOOL v10 = a4;
  uint64_t database = self->_database;
  id v12 = a3;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[AccountStatementMetadata anyInDatabase:forStatementIdentifier:accountIdentifier:]( &OBJC_CLASS___AccountStatementMetadata,  "anyInDatabase:forStatementIdentifier:accountIdentifier:",  database,  a6,  a7));
  [v13 markStatementMetadataItems:v12 processed:v10 error:a5];

  __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v13 accountStatementMetadata]);
  return v14;
}

- (id)updateStatementMetadataWithReport:(id)a3 reportDate:(id)a4
{
  uint64_t database = self->_database;
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 statementIdentifier]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 accountIdentifier]);
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue( +[AccountStatementMetadata anyInDatabase:forStatementIdentifier:accountIdentifier:]( &OBJC_CLASS___AccountStatementMetadata,  "anyInDatabase:forStatementIdentifier:accountIdentifier:",  database,  v8,  v9));

  [v10 updateWithReport:v7 reportDate:v6];
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 accountStatementMetadata]);

  return v11;
}

- (id)insertOrUpdateAccountStatementMetadata:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[AccountStatementMetadata insertOrUpdateAccountStatementMetadata:inDatabase:]( &OBJC_CLASS___AccountStatementMetadata,  "insertOrUpdateAccountStatementMetadata:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 accountStatementMetadata]);

  return v4;
}

- (void)insertOrUpdateCreditStatements:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id obj = v6;
  id v20 = [v6 countByEnumeratingWithState:&v25 objects:v30 count:16];
  if (v20)
  {
    uint64_t v19 = *(void *)v26;
    do
    {
      for (uint64_t i = 0LL; i != v20; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v26 != v19) {
          objc_enumerationMutation(obj);
        }
        id v9 = *(void **)(*((void *)&v25 + 1) + 8LL * (void)i);
        BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
        id v11 = (void *)objc_claimAutoreleasedReturnValue( +[CreditAccountStatement creditAccountStatementsWithIdentifier:withAccountIdentifier:inDatabase:]( &OBJC_CLASS___CreditAccountStatement,  "creditAccountStatementsWithIdentifier:withAccountIdentifier:inDatabase:",  v10,  v7,  self->_database));

        if ([v11 count])
        {
          __int128 v23 = 0u;
          __int128 v24 = 0u;
          __int128 v21 = 0u;
          __int128 v22 = 0u;
          id v12 = v11;
          id v13 = [v12 countByEnumeratingWithState:&v21 objects:v29 count:16];
          if (v13)
          {
            id v14 = v13;
            uint64_t v15 = *(void *)v22;
            do
            {
              for (j = 0LL; j != v14; j = (char *)j + 1)
              {
                if (*(void *)v22 != v15) {
                  objc_enumerationMutation(v12);
                }
                [*(id *)(*((void *)&v21 + 1) + 8 * (void)j) updateWithCreditAccountStatement:v9];
              }

              id v14 = [v12 countByEnumeratingWithState:&v21 objects:v29 count:16];
            }

            while (v14);
          }
        }

        else
        {
          id v17 =  +[CreditAccountStatement insertCreditAccountStatement:withAccountIdentifier:inDatabase:]( &OBJC_CLASS___CreditAccountStatement,  "insertCreditAccountStatement:withAccountIdentifier:inDatabase:",  v9,  v7,  self->_database);
        }
      }

      id v20 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
    }

    while (v20);
  }
}

- (id)lastSavingsStatementForAccountIdentifier:(id)a3
{
  return +[SavingsAccountStatement lastSavingsAccountStatementForAccount:inDatabase:]( &OBJC_CLASS___SavingsAccountStatement,  "lastSavingsAccountStatementForAccount:inDatabase:",  a3,  self->_database);
}

- (id)savingsAccountStatementsForAccountIdentifier:(id)a3
{
  return +[SavingsAccountStatement savingsAccountStatementsForAccount:inDatabase:]( &OBJC_CLASS___SavingsAccountStatement,  "savingsAccountStatementsForAccount:inDatabase:",  a3,  self->_database);
}

- (void)insertOrUpdateSavingsAccountStatements:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0LL;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 =  +[SavingsAccountStatement insertOrUpdateSavingsAccountStatement:forAccount:inDatabase:]( &OBJC_CLASS___SavingsAccountStatement,  "insertOrUpdateSavingsAccountStatement:forAccount:inDatabase:",  *(void *)(*((void *)&v13 + 1) + 8LL * (void)v11),  v7,  self->_database);
        id v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v9);
  }
}

- (void)deleteSavingsAccountStatementsWithoutPDFForAccount:(id)a3
{
}

- (void)deleteSavingsAccountStatementsForAccount:(id)a3
{
}

- (id)lastAccountTaxFormForAccountIdentifier:(id)a3
{
  return +[AccountTaxForm lastAccountTaxFormForAccount:inDatabase:]( &OBJC_CLASS___AccountTaxForm,  "lastAccountTaxFormForAccount:inDatabase:",  a3,  self->_database);
}

- (id)accountTaxFormsForAccountIdentifier:(id)a3
{
  return +[AccountTaxForm accountTaxFormsForAccount:inDatabase:]( &OBJC_CLASS___AccountTaxForm,  "accountTaxFormsForAccount:inDatabase:",  a3,  self->_database);
}

- (void)insertOrUpdateAccountTaxForms:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0LL;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 =  +[AccountTaxForm insertOrUpdateAccountTaxForm:forAccount:inDatabase:]( &OBJC_CLASS___AccountTaxForm,  "insertOrUpdateAccountTaxForm:forAccount:inDatabase:",  *(void *)(*((void *)&v13 + 1) + 8LL * (void)v11),  v7,  self->_database);
        id v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v9);
  }
}

- (void)deleteAccountTaxFormsWithoutPDFForAccount:(id)a3
{
}

- (id)lastRedemptionEventToDestination:(unint64_t)a3 forAccountIdentifier:(id)a4 altDSID:(id)a5
{
  return +[AccountEvent lastRedemptionEventToDestination:forAccountIdentifier:altDSID:inDatabase:]( &OBJC_CLASS___AccountEvent,  "lastRedemptionEventToDestination:forAccountIdentifier:altDSID:inDatabase:",  a3,  a4,  a5,  self->_database);
}

- (id)deleteVirtualCardEncryptedDataForAccount:(id)a3
{
  return +[Account deleteVirtualCardEncryptedDataForAccount:inDatabase:]( &OBJC_CLASS___Account,  "deleteVirtualCardEncryptedDataForAccount:inDatabase:",  a3,  self->_database);
}

- (id)categoryVisualizationMagnitudesForPassUniqueID:(id)a3
{
  return +[CategoryVisualizationMagnitude magnitudesForPassUniqueIdentifier:inDatabase:]( &OBJC_CLASS___CategoryVisualizationMagnitude,  "magnitudesForPassUniqueIdentifier:inDatabase:",  a3,  self->_database);
}

- (void)recomputeCategoryVisualizationMagnitudesForPassUniqueID:(id)a3 withStyle:(int64_t)a4
{
  id v6 = a3;
  id v7 = objc_autoreleasePoolPush();
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  v6));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 associatedAccountIdentifier]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  v9));
  if ([v10 feature] != (id)3)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 valueForProperty:@"a"]);
    if (v11)
    {
      unsigned int v12 = 1;
    }

    else
    {
      __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v8 valueForProperty:@"b"]);
      unsigned int v12 = [v13 BOOLValue];
    }

    if (v9)
    {
      if (v12)
      {
        __int128 v14 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager accountWithIdentifier:](self, "accountWithIdentifier:", v9));
        __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountUsersForAccountWithIdentifier:]( self,  "accountUsersForAccountWithIdentifier:",  v9));
        id v67 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pk_anyObjectPassingTest:", &stru_100645470));

        unsigned int v60 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager allAssociatedTransactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "allAssociatedTransactionSourceIdentifiersForPassUniqueIdentifier:",  v6));
        __int128 v16 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:]( self,  "transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:"));
        id v58 = (void *)objc_claimAutoreleasedReturnValue( +[NSSortDescriptor sortDescriptorWithKey:ascending:]( &OBJC_CLASS___NSSortDescriptor,  "sortDescriptorWithKey:ascending:",  @"transactionDate",  0LL));
        __int128 v86 = v58;
        id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v86, 1LL));
        id v59 = v16;
        id v66 = (void *)objc_claimAutoreleasedReturnValue([v16 sortedArrayUsingDescriptors:v17]);

        memset(v85, 0, sizeof(v85));
        id v18 = [v14 accessLevel];
        uint64_t v64 = v8;
        id v65 = v7;
        id v62 = v10;
        id v63 = v9;
        int64_t v57 = a4;
        unint64_t v61 = v14;
        if (!v18 || v18 == (id)2)
        {
          id obja = (id)objc_claimAutoreleasedReturnValue([v14 creditDetails]);
          id v20 = (void *)objc_claimAutoreleasedReturnValue([obja accountSummary]);
          __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v67 altDSID]);
          __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v20 accountUserActivityForAccountUserAltDSID:v22]);
          uint64_t v21 = objc_claimAutoreleasedReturnValue([v23 totalSpending]);

          uint64_t v19 = obja;
        }

        else
        {
          if (v18 != (id)1) {
            goto LABEL_40;
          }
          uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v14 creditDetails]);
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 cardBalance]);
          uint64_t v21 = objc_claimAutoreleasedReturnValue([v20 amount]);
        }

        if (v21)
        {
          uint64_t v68 = PKCurrencyDecimalToStorageInteger(v21);
          uint64_t v55 = v21;
          if (v68 >= 1)
          {
            __int128 v81 = 0u;
            __int128 v82 = 0u;
            __int128 v79 = 0u;
            __int128 v80 = 0u;
            id obj = v66;
            id v24 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v79, v84, 16, v21);
            if (v24)
            {
              id v25 = v24;
              uint64_t v26 = 0LL;
              uint64_t v27 = *(void *)v80;
              do
              {
                for (uint64_t i = 0LL; i != v25; uint64_t i = (char *)i + 1)
                {
                  if (*(void *)v80 != v27) {
                    objc_enumerationMutation(obj);
                  }
                  id v29 = *(void **)(*((void *)&v79 + 1) + 8LL * (void)i);
                  id v30 = [v29 transactionType];
                  if (v30 == (id)13 || v30 == 0LL)
                  {
                    id v32 = v30;
                    __int128 v33 = (char *)[v29 transactionStatus];
                    BOOL v34 = v32 == (id)13 || v32 == 0LL;
                    if (v34 && (unint64_t)(v33 - 8) <= 0xFFFFFFFFFFFFFFF9LL)
                    {
                      id v36 = (void *)objc_claimAutoreleasedReturnValue([v29 amount]);
                      if (v36)
                      {
                        __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v29 amount]);
                        uint64_t v38 = PKCurrencyDecimalToStorageInteger(v37);
                      }

                      else
                      {
                        uint64_t v38 = 0LL;
                      }

                      if (v38 < 0 || v26 >= v68) {
                        goto LABEL_43;
                      }
                      __int128 v39 = (void *)objc_claimAutoreleasedReturnValue([v29 merchant]);
                      id v40 = [v39 category];

                      *((void *)v85 + (void)v40) += v38;
                      v26 += v38;
                    }
                  }
                }

                id v25 = [obj countByEnumeratingWithState:&v79 objects:v84 count:16];
              }

              while (v25);
            }

            else
            {
              uint64_t v26 = 0LL;
            }

- (id)cashbackByPeriodForTransactionSourceIdentifiers:(id)a3 withStartDate:(id)a4 endDate:(id)a5 calendar:(id)a6 calendarUnit:(unint64_t)a7 type:(unint64_t)a8
{
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v175 = a6;
  id v177 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  id v185 = self;
  id v181 = v14;
  id v182 = v13;
  id v199 = (id)a8;
  v180 = v15;
  __int128 v16 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withRedemptionType:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "paymentTransactionsInDatabase:forTransactionSourceIdentifiers:withRedemptionType:startDate:endDate:",  self->_database,  v13,  a8,  v14,  v15));
  __int128 v234 = 0u;
  __int128 v235 = 0u;
  __int128 v236 = 0u;
  __int128 v237 = 0u;
  id v17 = [v16 countByEnumeratingWithState:&v234 objects:v245 count:16];
  v170 = v16;
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v235;
    uint64_t v206 = *(void *)v235;
    do
    {
      id v20 = 0LL;
      id v196 = v18;
      do
      {
        if (*(void *)v235 != v19) {
          objc_enumerationMutation(v16);
        }
        uint64_t v21 = *(void **)(*((void *)&v234 + 1) + 8LL * (void)v20);
        __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v21 rewardsTotalAmount]);
        if (v22
          && (__int128 v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSDecimalNumber notANumber](&OBJC_CLASS___NSDecimalNumber, "notANumber")),
              id v24 = [v22 compare:v23],
              v23,
              v24))
        {
          id v25 = (void *)objc_claimAutoreleasedReturnValue([v21 redemptionEvent]);
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v25 items]);
          uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v26 anyObject]);

          if (v27
            && (uint64_t v29 = objc_opt_class(&OBJC_CLASS___PKAccountRewards, v28), (objc_opt_isKindOfClass(v27, v29) & 1) != 0)
            && [v27 type] == v199)
          {
            id v30 = (void *)objc_claimAutoreleasedReturnValue([v25 date]);
            id v203 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _startOfTimeBlockForUnit:inCalendar:fromDate:forward:]( v185,  "_startOfTimeBlockForUnit:inCalendar:fromDate:forward:",  a7,  v175,  v30,  0LL));
            __int128 v31 = (PKPaymentTransactionGroup *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v177, "objectForKey:"));
            if (!v31)
            {
              __int128 v31 = objc_alloc_init(&OBJC_CLASS___PKPaymentTransactionGroup);
              -[PKPaymentTransactionGroup setStartDate:](v31, "setStartDate:", v203);
              -[PKPaymentTransactionGroup setEndDate:](v31, "setEndDate:", v30);
              -[PKPaymentTransactionGroup setType:](v31, "setType:", 5LL);
              id v32 = (NSDecimalNumber *)objc_claimAutoreleasedReturnValue(+[NSDecimalNumber zero](&OBJC_CLASS___NSDecimalNumber, "zero"));
              __int128 v33 = (NSString *)objc_claimAutoreleasedReturnValue([v21 currencyCode]);
              uint64_t v34 = PKCurrencyAmountCreate(v32, v33, 0LL);
              id v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
              -[PKPaymentTransactionGroup setTotalAmount:](v31, "setTotalAmount:", v35);

              -[PKPaymentTransactionGroup setTransactionCount:](v31, "setTransactionCount:", 0LL);
              -[PKPaymentTransactionGroup setTransactions:](v31, "setTransactions:", &__NSArray0__struct);
              -[NSMutableDictionary setObject:forKey:](v177, "setObject:forKey:", v31, v203);
            }

            id v36 = (void *)objc_claimAutoreleasedReturnValue(-[PKPaymentTransactionGroup transactions](v31, "transactions"));
            __int128 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 arrayByAddingObject:v21]);
            -[PKPaymentTransactionGroup setTransactions:](v31, "setTransactions:", v37);

            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(-[PKPaymentTransactionGroup endDate](v31, "endDate"));
            id v39 = [v30 compare:v38];

            if (v39 == (id)1) {
              -[PKPaymentTransactionGroup setEndDate:](v31, "setEndDate:", v30);
            }
            id v40 = (void *)objc_claimAutoreleasedReturnValue(-[PKPaymentTransactionGroup totalAmount](v31, "totalAmount"));
            id v200 = (void *)objc_claimAutoreleasedReturnValue([v40 amount]);
            __int128 v41 = (NSDecimalNumber *)objc_claimAutoreleasedReturnValue([v200 decimalNumberByAdding:v22]);
            uint64_t v42 = (NSString *)objc_claimAutoreleasedReturnValue([v40 currency]);
            uint64_t v43 = PKCurrencyAmountCreate(v41, v42, 0LL);
            float v44 = (void *)objc_claimAutoreleasedReturnValue(v43);

            -[PKPaymentTransactionGroup setTotalAmount:](v31, "setTotalAmount:", v44);
            __int128 v16 = v170;
            id v18 = v196;
          }

          else
          {
            uint64_t Object = PKLogFacilityTypeGetObject(23LL);
            id v30 = (void *)objc_claimAutoreleasedReturnValue(Object);
            if (os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v30,  OS_LOG_TYPE_DEFAULT,  "Transaction does not have a valid rewards event",  buf,  2u);
            }
          }

          uint64_t v19 = v206;
        }

        else
        {
          uint64_t v45 = PKLogFacilityTypeGetObject(23LL);
          id v25 = (void *)objc_claimAutoreleasedReturnValue(v45);
          if (os_log_type_enabled((os_log_t)v25, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v25,  OS_LOG_TYPE_DEFAULT,  "Transaction does not have a valid rewardsTotalAmount",  buf,  2u);
          }
        }

        id v20 = (char *)v20 + 1;
      }

      while (v18 != v20);
      id v18 = [v16 countByEnumeratingWithState:&v234 objects:v245 count:16];
    }

    while (v18);
  }

  int64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v182 anyObject]);
  uint64_t v48 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passUniqueIdentifierForTransactionSourceIdentifier:]( v185,  "passUniqueIdentifierForTransactionSourceIdentifier:",  v47));

  uint64_t v168 = (void *)v48;
  v167 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  v185->_database,  v48));
  v169 = (void *)objc_claimAutoreleasedReturnValue([v167 associatedAccountIdentifier]);
  id v49 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:"));
  id v50 = (void *)objc_claimAutoreleasedReturnValue([v49 account]);

  v166 = v50;
  uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue([v50 creditDetails]);
  id v52 = (void *)objc_claimAutoreleasedReturnValue([v51 installmentPlans]);

  id v53 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v229 = 0u;
  __int128 v230 = 0u;
  __int128 v231 = 0u;
  __int128 v232 = 0u;
  id obj = v52;
  id v179 = v53;
  p_info = &OBJC_CLASS___PDAccountManagerEnhancedMerchantsRequest.info;
  id v194 = [obj countByEnumeratingWithState:&v229 objects:v244 count:16];
  if (v194)
  {
    uint64_t v55 = *(void *)v230;
    uint64_t v186 = *(void *)v230;
    do
    {
      uint64_t v56 = 0LL;
      do
      {
        if (*(void *)v230 != v55) {
          objc_enumerationMutation(obj);
        }
        int64_t v57 = *(void **)(*((void *)&v229 + 1) + 8LL * (void)v56);
        id v58 = (void *)objc_claimAutoreleasedReturnValue( [p_info + 166 installmentTransactionsInDatabase:v185->_database forTransactionSourceIdentifiers:v182 installmentPlan:v57 redeemed:1 wit hRedemptionType:v199 startDate:v181 endDate:v180]);
        if ([v58 count])
        {
          id v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "pk_setByApplyingBlock:", &stru_1006454B0));
          -[NSMutableSet unionSet:](v53, "unionSet:", v59);

          __int128 v227 = 0u;
          __int128 v228 = 0u;
          __int128 v225 = 0u;
          __int128 v226 = 0u;
          id v188 = v57;
          unsigned int v60 = (void *)objc_claimAutoreleasedReturnValue([v57 lineItems]);
          id v61 = [v60 countByEnumeratingWithState:&v225 objects:v243 count:16];
          if (v61)
          {
            id v62 = p_info;
            uint64_t v63 = *(void *)v226;
            do
            {
              for (uint64_t i = 0LL; i != v61; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v226 != v63) {
                  objc_enumerationMutation(v60);
                }
                id v65 = *(void **)(*((void *)&v225 + 1) + 8LL * (void)i);
                if ([v65 type] == (id)1)
                {
                  id v61 = (id)objc_claimAutoreleasedReturnValue([v65 identifier]);
                  goto LABEL_39;
                }
              }

              id v61 = [v60 countByEnumeratingWithState:&v225 objects:v243 count:16];
            }

            while (v61);
LABEL_39:
            p_info = v62;
          }

          id v204 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSDecimalNumber zero](&OBJC_CLASS___NSDecimalNumber, "zero"));
          __int128 v221 = 0u;
          __int128 v222 = 0u;
          __int128 v223 = 0u;
          __int128 v224 = 0u;
          id v197 = v58;
          id v66 = v58;
          id v67 = [v66 countByEnumeratingWithState:&v221 objects:v242 count:16];
          if (!v67)
          {

            id v69 = 0LL;
            goto LABEL_77;
          }

          id v68 = v67;
          __int128 v191 = v56;
          id v69 = 0LL;
          id v207 = 0LL;
          uint64_t v70 = *(void *)v222;
          while (2)
          {
            uint64_t v71 = 0LL;
LABEL_43:
            if (*(void *)v222 != v70) {
              objc_enumerationMutation(v66);
            }
            id v72 = *(void **)(*((void *)&v221 + 1) + 8 * v71);
            id v73 = (id)objc_claimAutoreleasedReturnValue([v72 lifecycleIdentifier]);
            id v74 = v61;
            __int128 v75 = v74;
            if (v73 != v74)
            {
              if (v61 && v73)
              {
                unsigned int v76 = [v73 isEqualToString:v74];

                if (!v76) {
                  goto LABEL_54;
                }
LABEL_51:
                uint64_t v77 = objc_claimAutoreleasedReturnValue([v72 redemptionEvent]);

                id v73 = v207;
                id v69 = (void *)v77;
                id v207 = v72;
              }

              else
              {
              }

LABEL_54:
              __int128 v78 = (void *)objc_claimAutoreleasedReturnValue([v72 rewardsTotalAmount]);
              if (v78
                && (__int128 v79 = (void *)objc_claimAutoreleasedReturnValue(+[NSDecimalNumber notANumber](&OBJC_CLASS___NSDecimalNumber, "notANumber")),
                    id v80 = [v78 compare:v79],
                    v79,
                    v80))
              {
                __int128 v81 = v204;
                id v204 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[os_log_s decimalNumberByAdding:](v204, "decimalNumberByAdding:", v78));
              }

              else
              {
                uint64_t v82 = PKLogFacilityTypeGetObject(6LL);
                __int128 v81 = (os_log_s *)objc_claimAutoreleasedReturnValue(v82);
                if (os_log_type_enabled(v81, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v81,  OS_LOG_TYPE_DEFAULT,  "Installment transaction does not have a valid rewardsTotalAmount",  buf,  2u);
                }
              }

              if (v68 == (id)++v71)
              {
                id v68 = [v66 countByEnumeratingWithState:&v221 objects:v242 count:16];
                if (!v68)
                {

                  id v53 = v179;
                  p_info = (__objc2_class_ro **)(&OBJC_CLASS___PDAccountManagerEnhancedMerchantsRequest + 32);
                  uint64_t v55 = v186;
                  uint64_t v56 = v191;
                  if (v207)
                  {
                    if (v69)
                    {
LABEL_63:
                      id v201 = v69;
                      __int128 v83 = (void *)objc_claimAutoreleasedReturnValue([v69 items]);
                      id v84 = (void *)objc_claimAutoreleasedReturnValue([v83 anyObject]);

                      if (v84
                        && (uint64_t v86 = objc_opt_class(&OBJC_CLASS___PKAccountRewards, v85),
                            (objc_opt_isKindOfClass(v84, v86) & 1) != 0)
                        && [v84 type] == v199)
                      {
                        id v87 = (void *)objc_claimAutoreleasedReturnValue([v201 date]);
                        v183 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _startOfTimeBlockForUnit:inCalendar:fromDate:forward:]( v185,  "_startOfTimeBlockForUnit:inCalendar:fromDate:forward:",  a7,  v175,  v87,  0LL));
                        id v88 = (PKPaymentTransactionGroup *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v177, "objectForKey:"));
                        unint64_t v89 = v204;
                        if (!v88)
                        {
                          id v88 = objc_alloc_init(&OBJC_CLASS___PKPaymentTransactionGroup);
                          -[PKPaymentTransactionGroup setStartDate:](v88, "setStartDate:", v183);
                          -[PKPaymentTransactionGroup setEndDate:](v88, "setEndDate:", v87);
                          -[PKPaymentTransactionGroup setType:](v88, "setType:", 5LL);
                          id v90 = (NSDecimalNumber *)objc_claimAutoreleasedReturnValue(+[NSDecimalNumber zero](&OBJC_CLASS___NSDecimalNumber, "zero"));
                          __int128 v91 = (NSString *)objc_claimAutoreleasedReturnValue([v188 currencyCode]);
                          uint64_t v92 = PKCurrencyAmountCreate(v90, v91, 0LL);
                          BOOL v93 = v56;
                          id v94 = (void *)objc_claimAutoreleasedReturnValue(v92);
                          -[PKPaymentTransactionGroup setTotalAmount:](v88, "setTotalAmount:", v94);

                          uint64_t v56 = v93;
                          -[PKPaymentTransactionGroup setTransactionCount:](v88, "setTransactionCount:", 0LL);
                          -[PKPaymentTransactionGroup setTransactions:](v88, "setTransactions:", &__NSArray0__struct);
                          -[NSMutableDictionary setObject:forKey:](v177, "setObject:forKey:", v88, v183);
                        }

                        __int128 v192 = v56;
                        id v95 = (void *)objc_claimAutoreleasedReturnValue(-[PKPaymentTransactionGroup endDate](v88, "endDate"));
                        id v96 = [v87 compare:v95];

                        if (v96 == (id)1) {
                          -[PKPaymentTransactionGroup setEndDate:](v88, "setEndDate:", v87);
                        }
                        id v97 = objc_alloc_init(&OBJC_CLASS___PKPaymentTransaction);
                        -[PKPaymentTransaction setTransactionType:](v97, "setTransactionType:", 14LL);
                        -[PKPaymentTransaction setTransactionSource:](v97, "setTransactionSource:", 4LL);
                        -[PKPaymentTransaction setRedemptionType:](v97, "setRedemptionType:", v199);
                        uint64_t v98 = (void *)objc_claimAutoreleasedReturnValue([v207 transactionDate]);
                        -[PKPaymentTransaction setTransactionDate:](v97, "setTransactionDate:", v98);

                        -[PKPaymentTransaction setInstallmentPlan:](v97, "setInstallmentPlan:", v188);
                        id v99 = (void *)objc_claimAutoreleasedReturnValue([v188 totalAmount]);
                        -[PKPaymentTransaction setAmount:](v97, "setAmount:", v99);

                        uint64_t v100 = (void *)objc_claimAutoreleasedReturnValue([v188 currencyCode]);
                        -[PKPaymentTransaction setCurrencyCode:](v97, "setCurrencyCode:", v100);

                        -[PKPaymentTransaction setTransactionStatus:](v97, "setTransactionStatus:", 1LL);
                        id v101 = (void *)objc_claimAutoreleasedReturnValue([v188 identifier]);
                        -[PKPaymentTransaction setIdentifier:](v97, "setIdentifier:", v101);

                        -[PKPaymentTransaction setRewardsTotalAmount:](v97, "setRewardsTotalAmount:", v204);
                        id v102 = (void *)objc_claimAutoreleasedReturnValue(-[PKPaymentTransaction currencyCode](v97, "currencyCode"));
                        -[PKPaymentTransaction setRewardsTotalCurrencyCode:](v97, "setRewardsTotalCurrencyCode:", v102);

                        uint64_t v103 = (void *)objc_claimAutoreleasedReturnValue([v188 rewards]);
                        -[PKPaymentTransaction setRewards:](v97, "setRewards:", v103);

                        -[PKPaymentTransaction setAccountType:](v97, "setAccountType:", 2LL);
                        id v104 = (void *)objc_claimAutoreleasedReturnValue(-[PKPaymentTransactionGroup transactions](v88, "transactions"));
                        unsigned int v105 = (void *)objc_claimAutoreleasedReturnValue([v104 arrayByAddingObject:v97]);
                        -[PKPaymentTransactionGroup setTransactions:](v88, "setTransactions:", v105);

                        id v106 = (void *)objc_claimAutoreleasedReturnValue(-[PKPaymentTransactionGroup totalAmount](v88, "totalAmount"));
                        id v189 = (id)objc_claimAutoreleasedReturnValue([v106 amount]);
                        id v107 = (NSDecimalNumber *)objc_claimAutoreleasedReturnValue([v189 decimalNumberByAdding:v204]);
                        id v108 = (NSString *)objc_claimAutoreleasedReturnValue([v106 currency]);
                        uint64_t v109 = PKCurrencyAmountCreate(v107, v108, 0LL);
                        __int128 v110 = (void *)objc_claimAutoreleasedReturnValue(v109);

                        -[PKPaymentTransactionGroup setTotalAmount:](v88, "setTotalAmount:", v110);
                        id v53 = v179;
                        uint64_t v56 = v192;
                        p_info = (__objc2_class_ro **)(&OBJC_CLASS___PDAccountManagerEnhancedMerchantsRequest + 32);
                        uint64_t v55 = v186;
                      }

                      else
                      {
                        uint64_t v111 = PKLogFacilityTypeGetObject(6LL);
                        id v87 = (void *)objc_claimAutoreleasedReturnValue(v111);
                        unint64_t v89 = v204;
                        if (os_log_type_enabled((os_log_t)v87, OS_LOG_TYPE_DEFAULT))
                        {
                          *(_WORD *)buf = 0;
                          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v87,  OS_LOG_TYPE_DEFAULT,  "Transaction does not have a valid rewards event",  buf,  2u);
                        }
                      }

                      id v58 = v197;
                      goto LABEL_74;
                    }

- (id)_startOfTimeBlockForUnit:(unint64_t)a3 inCalendar:(id)a4 fromDate:(id)a5 forward:(BOOL)a6
{
  unint64_t v8 = 1LL;
  uint64_t v9 = 4096LL;
  uint64_t v10 = 16LL;
  if ((a3 & 4) == 0) {
    uint64_t v10 = 32LL;
  }
  if ((a3 & 8) == 0)
  {
    uint64_t v9 = v10;
    unint64_t v8 = (a3 & 4) >> 2;
  }

  if ((a3 & 0x1000) != 0) {
    uint64_t v11 = 512LL;
  }
  else {
    uint64_t v11 = v9;
  }
  if ((a3 & 0x1000) != 0) {
    uint64_t v12 = 1LL;
  }
  else {
    uint64_t v12 = v8;
  }
  if (a6) {
    uint64_t v13 = 256LL;
  }
  else {
    uint64_t v13 = 260LL;
  }
  return [a4 nextDateAfterDate:a5 matchingUnit:v11 value:v12 options:v13];
}

- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStatementIdentifier:(id)a4
{
  return +[AccountEvent billPaymentSelectedSuggestedAmountsWithStatementIdenfitier:accountIdentifier:inDatabase:]( &OBJC_CLASS___AccountEvent,  "billPaymentSelectedSuggestedAmountsWithStatementIdenfitier:accountIdentifier:inDatabase:",  a4,  a3,  self->_database);
}

- (id)billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:(id)a3 withStartDate:(id)a4 endDate:(id)a5
{
  return +[AccountEvent billPaymentSelectedSuggestedAmountsWithAccountIdentifier:withStartDate:endDate:inDatabase:]( &OBJC_CLASS___AccountEvent,  "billPaymentSelectedSuggestedAmountsWithAccountIdentifier:withStartDate:endDate:inDatabase:",  a3,  a4,  a5,  self->_database);
}

- (id)insertOrUpdateSharedAccountCloudStore:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[SharedAccountCloudStore insertOrUpdateSharedAccountCloudStore:forAccount:inDatabase:]( &OBJC_CLASS___SharedAccountCloudStore,  "insertOrUpdateSharedAccountCloudStore:forAccount:inDatabase:",  v6,  v7,  self->_database));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 sharedAccountCloudStore]);
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)sharedAccountCloudStoreForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[SharedAccountCloudStore sharedAccountCloudStoreForAccount:inDatabase:]( &OBJC_CLASS___SharedAccountCloudStore,  "sharedAccountCloudStoreForAccount:inDatabase:",  v4,  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (id)sharedAccountCloudStoreByAccountIdentifier
{
  return +[SharedAccountCloudStore sharedAccountCloudStoreByAccountIdentifierInDatabase:]( &OBJC_CLASS___SharedAccountCloudStore,  "sharedAccountCloudStoreByAccountIdentifierInDatabase:",  self->_database);
}

- (id)accountUsersByAccountIdentifier
{
  return +[AccountUser accountUsersByAccountIdentifierInDatabase:]( &OBJC_CLASS___AccountUser,  "accountUsersByAccountIdentifierInDatabase:",  self->_database);
}

- (id)accountUserWithAltDSID:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser anyInDatabase:withAltDSID:accountPID:]( AccountUser,  "anyInDatabase:withAltDSID:accountPID:",  self->_database,  v6,  [v7 persistentID]));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 accountUser]);
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)primaryTransactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  unint64_t v8 = v7;
  if (v7)
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser anyInDatabase:withAltDSID:accountPID:]( AccountUser,  "anyInDatabase:withAltDSID:accountPID:",  self->_database,  v6,  [v7 persistentID]));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 transactionSourceIdentifier]);
  }

  else
  {
    uint64_t v10 = 0LL;
  }

  return v10;
}

- (id)physicalCardsForAccountWithIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  uint64_t v5 = v4;
  if (v4) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PhysicalCard physicalCardsForAccountPID:inDatabase:]( PhysicalCard,  "physicalCardsForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    id v6 = 0LL;
  }

  return v6;
}

- (id)replacePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  unint64_t v8 = v7;
  if (v7) {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PhysicalCard replacePhysicalCards:forAccountPID:inDatabase:]( PhysicalCard,  "replacePhysicalCards:forAccountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
  }
  else {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)insertOrUpdatePhysicalCards:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  unint64_t v8 = v7;
  if (v7) {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PhysicalCard insertOrUpdatePhysicalCards:forAccountPID:inDatabase:]( PhysicalCard,  "insertOrUpdatePhysicalCards:forAccountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
  }
  else {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)insertOrUpdatePhysicalCard:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  unint64_t v8 = v7;
  if (v7) {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PhysicalCard insertOrUpdatePhysicalCard:forAccountPID:inDatabase:]( PhysicalCard,  "insertOrUpdatePhysicalCard:forAccountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
  }
  else {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)paymentFundingSourcesForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase])
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v4 persistentID]));
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPaymentFundingSource paymentFundingSourcesForAccountPID:inDatabase:]( &OBJC_CLASS___AccountPaymentFundingSource,  "paymentFundingSourcesForAccountPID:inDatabase:",  v5,  self->_database));
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

- (id)paymentFundingSourceForIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v7 persistentID]));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPaymentFundingSource paymentFundingSourceForAccountPID:identifier:inDatabase:]( &OBJC_CLASS___AccountPaymentFundingSource,  "paymentFundingSourceForAccountPID:identifier:inDatabase:",  v8,  v6,  self->_database));
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)insertOrUpdatePaymentFundingSources:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v7 existsInDatabase])
  {
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v7 persistentID]));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPaymentFundingSource insertOrUpdatePaymentFundingSources:forAccountPID:inDatabase:]( &OBJC_CLASS___AccountPaymentFundingSource,  "insertOrUpdatePaymentFundingSources:forAccountPID:inDatabase:",  v6,  v8,  self->_database));
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)rewardsTierSummaryForTransactionSourceIdentifiers:(id)a3 currencyCode:(id)a4 startDate:(id)a5 endDate:(id)a6
{
  return +[PaymentTransaction rewardsTierSummaryForTransactionSourceIdentifiers:currencyCode:startDate:endDate:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "rewardsTierSummaryForTransactionSourceIdentifiers:currencyCode:startDate:endDate:inDatabase:",  a3,  a4,  a5,  a6,  self->_database);
}

- (id)accountPromotionsForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPromotion accountPromotionsForAccountPID:inDatabase:]( AccountPromotion,  "accountPromotionsForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (id)accountPromotionForProgramIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v7 existsInDatabase]) {
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPromotion accountPromotionForProgramIdentifier:accountPID:inDatabase:]( AccountPromotion,  "accountPromotionForProgramIdentifier:accountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
  }
  else {
    unint64_t v8 = 0LL;
  }

  return v8;
}

- (void)insertOrUpdateAccountPromotions:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountPromotion insertOrUpdateAccountPromotions:accountPID:inDatabase:]( AccountPromotion,  "insertOrUpdateAccountPromotions:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)insertOrUpdateAccountPromotion:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountPromotion insertOrUpdateAccountPromotion:accountPID:inDatabase:]( AccountPromotion,  "insertOrUpdateAccountPromotion:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)deleteAccountPromotion:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountPromotion deleteAccountPromotion:accountPID:inDatabase:]( AccountPromotion,  "deleteAccountPromotion:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)updateImpressionCountsForPromotions:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountPromotion updateImpressionCountsForPromotions:accountPID:inDatabase:]( AccountPromotion,  "updateImpressionCountsForPromotions:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)updateImpressionCount:(int64_t)a3 promotionProgramIdentifier:(id)a4 accountIdentifier:(id)a5
{
  id v9 = a4;
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a5,  self->_database));
  if ([v8 existsInDatabase]) {
    +[AccountPromotion updateImpressionCount:promotionProgramIdentifier:accountPID:inDatabase:]( AccountPromotion,  "updateImpressionCount:promotionProgramIdentifier:accountPID:inDatabase:",  a3,  v9,  [v8 persistentID],  self->_database);
  }
}

- (id)accountPromotionCompletionStepsForProgramIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v7 existsInDatabase]) {
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPromotionCompletionStep accountPromotionCompletionStepsForProgramIdentifier:accountPID:inDatabase:]( AccountPromotionCompletionStep,  "accountPromotionCompletionStepsForProgramIdentifier:accountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
  }
  else {
    unint64_t v8 = 0LL;
  }

  return v8;
}

- (id)accountPromotionBehaviorForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AccountPromotionBehavior accountPromotionBehaviorForAccountPID:inDatabase:]( AccountPromotionBehavior,  "accountPromotionBehaviorForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (void)insertOrUpdateAccountPromotionBehavior:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountPromotionBehavior insertOrUpdateAccountPromotionBehavior:accountPID:inDatabase:]( AccountPromotionBehavior,  "insertOrUpdateAccountPromotionBehavior:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)deleteAccountPromotionBehaviorForAccountIdentifier:(id)a3
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    +[AccountPromotionBehavior deleteAccountPromotionBehaviorForAccountPID:inDatabase:]( AccountPromotionBehavior,  "deleteAccountPromotionBehaviorForAccountPID:inDatabase:",  [v4 persistentID],  self->_database);
  }
}

- (id)accountEnhancedMerchantsForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEnhancedMerchant accountEnhancedMerchantsForAccountPID:inDatabase:]( AccountEnhancedMerchant,  "accountEnhancedMerchantsForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (id)accountEnhancedMerchantForPrivateIdentifier:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v7 existsInDatabase]) {
    unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEnhancedMerchant accountEnhancedMerchantForPrivateIdentifier:accountPID:inDatabase:]( AccountEnhancedMerchant,  "accountEnhancedMerchantForPrivateIdentifier:accountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
  }
  else {
    unint64_t v8 = 0LL;
  }

  return v8;
}

- (void)insertOrUpdateAccountEnhancedMerchants:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchant insertOrUpdateAccountEnhancedMerchants:accountPID:inDatabase:]( AccountEnhancedMerchant,  "insertOrUpdateAccountEnhancedMerchants:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)insertOrUpdateAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchant insertOrUpdateAccountEnhancedMerchant:accountPID:inDatabase:]( AccountEnhancedMerchant,  "insertOrUpdateAccountEnhancedMerchant:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)deleteAccountEnhancedMerchant:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchant deleteAccountEnhancedMerchant:accountPID:inDatabase:]( AccountEnhancedMerchant,  "deleteAccountEnhancedMerchant:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (id)accountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEnhancedMerchantBehavior accountEnhancedMerchantBehaviorForAccountPID:inDatabase:]( AccountEnhancedMerchantBehavior,  "accountEnhancedMerchantBehaviorForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (void)insertOrUpdateAccountEnhancedMerchantBehavior:(id)a3 accountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountEnhancedMerchantBehavior insertOrUpdateAccountEnhancedMerchantBehavior:accountPID:inDatabase:]( AccountEnhancedMerchantBehavior,  "insertOrUpdateAccountEnhancedMerchantBehavior:accountPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)deleteAccountEnhancedMerchantBehaviorForAccountIdentifier:(id)a3
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    +[AccountEnhancedMerchantBehavior deleteAccountEnhancedMerchantBehaviorForAccountPID:inDatabase:]( AccountEnhancedMerchantBehavior,  "deleteAccountEnhancedMerchantBehaviorForAccountPID:inDatabase:",  [v4 persistentID],  self->_database);
  }
}

- (id)accountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4
{
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v6 existsInDatabase]) {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[AccountEntityOrdering accountEntityOrderingsForAccountPID:entityType:inDatabase:]( AccountEntityOrdering,  "accountEntityOrderingsForAccountPID:entityType:inDatabase:",  [v6 persistentID],  a4,  self->_database));
  }
  else {
    id v7 = 0LL;
  }

  return v7;
}

- (void)insertOrUpdateAccountEntityOrderings:(id)a3 accountIdentifier:(id)a4 entityType:(unint64_t)a5
{
  id v9 = a3;
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v8 existsInDatabase]) {
    +[AccountEntityOrdering insertOrUpdateAccountEntityOrderings:accountPID:entityType:inDatabase:]( AccountEntityOrdering,  "insertOrUpdateAccountEntityOrderings:accountPID:entityType:inDatabase:",  v9,  [v8 persistentID],  a5,  self->_database);
  }
}

- (void)deleteAccountEntityOrderingsForAccountIdentifier:(id)a3 entityType:(unint64_t)a4
{
  id v6 = (id)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v6 existsInDatabase]) {
    +[AccountEntityOrdering deleteAccountEntityOrderingsForAccountPID:entityType:inDatabase:]( AccountEntityOrdering,  "deleteAccountEntityOrderingsForAccountPID:entityType:inDatabase:",  [v6 persistentID],  a4,  self->_database);
  }
}

- (id)accountBalancesForAccountIdentifier:(id)a3 startDate:(id)a4 endDate:(id)a5 type:(unint64_t)a6 limit:(unint64_t)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v14 existsInDatabase]) {
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[AccountHistoricalBalance balancesForAccountPID:startDate:endDate:type:limit:inDatabase:]( AccountHistoricalBalance,  "balancesForAccountPID:startDate:endDate:type:limit:inDatabase:",  [v14 persistentID],  v12,  v13,  a6,  a7,  self->_database));
  }
  else {
    id v15 = 0LL;
  }

  return v15;
}

- (void)insertAccountBalance:(id)a3 forAccountIdentifier:(id)a4
{
  id v8 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a4,  self->_database));
  if ([v6 existsInDatabase]) {
    id v7 =  +[AccountHistoricalBalance insertBalance:forAccountPID:inDatabase:]( AccountHistoricalBalance,  "insertBalance:forAccountPID:inDatabase:",  v8,  [v6 persistentID],  self->_database);
  }
}

- (void)resetAccountBalancesForAccountIdentifier:(id)a3
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[Account accountWithIdentifier:inDatabase:]( &OBJC_CLASS___Account,  "accountWithIdentifier:inDatabase:",  a3,  self->_database));
  if ([v4 existsInDatabase]) {
    +[AccountHistoricalBalance deleteBalancesForAccountPID:inDatabase:]( AccountHistoricalBalance,  "deleteBalancesForAccountPID:inDatabase:",  [v4 persistentID],  self->_database);
  }
}

- (void)insertOrUpdateAccountPendingFamilyMembers:(id)a3
{
}

- (id)accountPendingFamilyMembersWithDisplayedNotification:(BOOL)a3
{
  return +[AccountPendingFamilyMember accountPendingFamilyMembersWithDisplayedNotification:inDatabase:]( &OBJC_CLASS___AccountPendingFamilyMember,  "accountPendingFamilyMembersWithDisplayedNotification:inDatabase:",  a3,  self->_database);
}

- (id)accountPendingFamilyMembersForAccountIdentifier:(id)a3
{
  return +[AccountPendingFamilyMember accountPendingFamilyMembersForAccountIdentifier:inDatabase:]( &OBJC_CLASS___AccountPendingFamilyMember,  "accountPendingFamilyMembersForAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (void)deleteAccountPendingFamilyMember:(id)a3
{
}

- (void)deleteAccountPendingFamilyMembersWithAccountIdentifier:(id)a3 altDSIDs:(id)a4
{
}

- (void)deleteAccountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  a3,  a4));
  [v4 deleteFromDatabase];
}

- (id)accountEndpointMetadataForAccountIdentifier:(id)a3 endpoint:(unint64_t)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  a3,  a4));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 endpointMetadata]);

  return v5;
}

- (id)insertOrUpdateAccountEndpointMetadata:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata insertOrUpdateinitWithAccountEndpointMetadata:inDatabase:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "insertOrUpdateinitWithAccountEndpointMetadata:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 endpointMetadata]);

  return v4;
}

- (id)creditRecoveryPaymentPlansForAccountIdentifier:(id)a3
{
  return +[CreditRecoveryPaymentPlan creditRecoveryPaymentPlansForAccountIdentifier:inDatabase:]( &OBJC_CLASS___CreditRecoveryPaymentPlan,  "creditRecoveryPaymentPlansForAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (void)deleteCreditRecoveryPaymentPlansForAccountIdentifier:(id)a3
{
}

- (id)replaceCreditRecoveryPaymentPlans:(id)a3 forAccountIdentifier:(id)a4
{
  return +[CreditRecoveryPaymentPlan replaceCreditRecoveryPaymentPlans:forAccountIdentifier:inDatabase:]( &OBJC_CLASS___CreditRecoveryPaymentPlan,  "replaceCreditRecoveryPaymentPlans:forAccountIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (id)insertOrUpdateFinancingPlan:(id)a3 forAccountIdentifier:(id)a4
{
  if (!a3) {
    return 0LL;
  }
  id v12 = a3;
  id v6 = a4;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v12, 1LL));

  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager insertOrUpdateFinancingPlans:forAccountIdentifier:]( self,  "insertOrUpdateFinancingPlans:forAccountIdentifier:",  v8,  v6,  v12));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 firstObject]);

  return v10;
}

- (id)insertOrUpdateFinancingPlans:(id)a3 forAccountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v7 length])
  {
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountEndpointMetadataForAccountIdentifier:endpoint:]( self,  "accountEndpointMetadataForAccountIdentifier:endpoint:",  v7,  1LL));
    if (!v8)
    {
      id v9 = -[PDAccountWebServiceEndpointMetadata initWithAccountIdentifier:endpoint:]( objc_alloc(&OBJC_CLASS___PDAccountWebServiceEndpointMetadata),  "initWithAccountIdentifier:endpoint:",  v7,  1LL);
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager insertOrUpdateAccountEndpointMetadata:]( self,  "insertOrUpdateAccountEndpointMetadata:",  v9));
    }

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:endpointMetadata:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:endpointMetadata:",  self->_database,  v8));
    if ([v10 existsInDatabase])
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterFinancingPlan insertOrUpdatePayLaterFinancingPlans:forEndpointMetadataPID:inDatabase:]( PayLaterFinancingPlan,  "insertOrUpdatePayLaterFinancingPlans:forEndpointMetadataPID:inDatabase:",  v6,  [v10 persistentID],  self->_database));
      id v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "pk_arrayByApplyingBlock:", &stru_100645550));
    }

    else
    {
      uint64_t Object = PKLogFacilityTypeGetObject(14LL);
      id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v17 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Error account endpoint metadata doesnt exist in database",  v17,  2u);
      }

      id v12 = 0LL;
    }
  }

  else
  {
    uint64_t v13 = PKLogFacilityTypeGetObject(14LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Error cannot insert financing plans with a nil endpoint metadata account identifier",  buf,  2u);
    }

    id v12 = 0LL;
  }

  return v12;
}

- (id)financingPlansWithAccountIdentifier:(id)a3
{
  if (a3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  a3,  1LL));
    uint64_t v5 = v4;
    if (v4) {
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterFinancingPlan financingPlansForEndpointMetadataPID:inDatabase:]( PayLaterFinancingPlan,  "financingPlansForEndpointMetadataPID:inDatabase:",  [v4 persistentID],  self->_database));
    }
    else {
      id v6 = 0LL;
    }
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

- (id)financingPlansWithQuery:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_claimAutoreleasedReturnValue([v4 accountIdentifier]);
  id v6 = (void *)v5;
  id v7 = 0LL;
  if (v4 && v5)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  v5,  1LL));
    id v9 = [v8 persistentID];
    if (!v8)
    {
      id v7 = 0LL;
      goto LABEL_14;
    }

    id v10 = v9;
    id v7 = objc_alloc_init(&OBJC_CLASS___PKAccountServicePayLaterFinancingPlanQueryResponse);
    unsigned __int8 v11 = [v4 queryItems];
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v4 transactionStartDate]);
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v4 transactionEndDate]);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v4 installmentDueOrPaidDateStart]);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v4 installmentDueOrPaidDateEnd]);
    if ((v11 & 1) != 0)
    {
      __int128 v16 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterInstallment financingPlanInstallmentsTotalDueForAccountIdentifier:fromDaysInFuture:inDatabase:]( &OBJC_CLASS___PayLaterInstallment,  "financingPlanInstallmentsTotalDueForAccountIdentifier:fromDaysInFuture:inDatabase:",  v6,  30LL,  self->_database));
      [v7 setDueNext30Days:v16];

      if ((v11 & 2) == 0)
      {
LABEL_6:
        if ((v11 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }

    else if ((v11 & 2) == 0)
    {
      goto LABEL_6;
    }

    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterFinancingPlan totalPendingAmountForFinancingPlansForEndpointMetadataPID:inDatabase:]( &OBJC_CLASS___PayLaterFinancingPlan,  "totalPendingAmountForFinancingPlansForEndpointMetadataPID:inDatabase:",  v10,  self->_database));
    [v7 setTotalPendingAmount:v17];

    if ((v11 & 4) == 0)
    {
LABEL_7:
      if ((v11 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }

- (id)financingPlanWithIdentifier:(id)a3
{
  if (a3)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterFinancingPlan anyInDatabase:withPlanIdentifier:]( &OBJC_CLASS___PayLaterFinancingPlan,  "anyInDatabase:withPlanIdentifier:",  self->_database,  a3));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 financingPlan]);
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

- (id)financingPlansForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  if (a3)
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  a3,  1LL));
    __int128 v16 = v15;
    if (v15) {
      id v17 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterFinancingPlan financingPlansForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:installmentDueOrPaidDateStart:installmentDueOrPaidDateEnd:limit:inDatabase:]( PayLaterFinancingPlan,  "financingPlansForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:installmentD ueOrPaidDateStart:installmentDueOrPaidDateEnd:limit:inDatabase:",  [v15 persistentID],  v12,  v13,  v14,  0,  0,  a7,  self->_database));
    }
    else {
      id v17 = 0LL;
    }
  }

  else
  {
    id v17 = 0LL;
  }

  return v17;
}

- (void)financingPlanInstallmentsDueDateRangeForAccountIdentifier:(id)a3 financingPlanStates:(id)a4 startDate:(id *)a5 endDate:(id *)a6
{
  if (a3) {
    +[PayLaterInstallment financingPlanInstallmentsDueDateRangeForAccountIdentifier:financingPlanStates:startDate:endDate:inDatabase:]( &OBJC_CLASS___PayLaterInstallment,  "financingPlanInstallmentsDueDateRangeForAccountIdentifier:financingPlanStates:startDate:endDate:inDatabase:");
  }
}

- (void)deleteFinancingPlansForAccountIdentifier:(id)a3
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  a3,  1LL));
  if ([v4 existsInDatabase]) {
    +[PayLaterFinancingPlan deletePayLaterFinancingPlansForAccountEndpointMetadataPID:inDatabase:]( PayLaterFinancingPlan,  "deletePayLaterFinancingPlansForAccountEndpointMetadataPID:inDatabase:",  [v4 persistentID],  self->_database);
  }
}

- (id)financingPlanIdentifiersForAccountIdentifier:(id)a3 states:(id)a4 transactionStartDate:(id)a5 transactionEndDate:(id)a6 limit:(int64_t)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  if (a3)
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  a3,  1LL));
    __int128 v16 = v15;
    if (v15) {
      id v17 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterFinancingPlan financingPlanIdentifiersForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:limit:inDatabase:]( PayLaterFinancingPlan,  "financingPlanIdentifiersForEndpointMetadataPID:states:transactionStartDate:transactionEndDate:limit:inDatabase:",  [v15 persistentID],  v12,  v13,  v14,  a7,  self->_database));
    }
    else {
      id v17 = 0LL;
    }
  }

  else
  {
    id v17 = 0LL;
  }

  return v17;
}

- (void)deleteFinancingPlanWithIdentifier:(id)a3 forAccountIdentifier:(id)a4
{
  id v7 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[AccountWebServiceEndpointMetadata anyInDatabase:accountIdentifier:endpoint:]( &OBJC_CLASS___AccountWebServiceEndpointMetadata,  "anyInDatabase:accountIdentifier:endpoint:",  self->_database,  a4,  1LL));
  if ([v6 existsInDatabase]) {
    +[PayLaterFinancingPlan deletePayLaterFinancingPlanWithIdentifier:forAccountEndpointMetadataPID:inDatabase:]( PayLaterFinancingPlan,  "deletePayLaterFinancingPlanWithIdentifier:forAccountEndpointMetadataPID:inDatabase:",  v7,  [v6 persistentID],  self->_database);
  }
}

- (void)updateProcessedPayLaterMerchant:(id)a3 forFinancingPlanIdentifier:(id)a4
{
  id v9 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterFinancingPlan anyInDatabase:withPlanIdentifier:]( &OBJC_CLASS___PayLaterFinancingPlan,  "anyInDatabase:withPlanIdentifier:",  self->_database,  a4));
  id v7 = v6;
  if (v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterMerchant anyInDatabase:forFinancingPlanPID:]( PayLaterMerchant,  "anyInDatabase:forFinancingPlanPID:",  self->_database,  [v6 persistentID]));
    if (!v8) {
      id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterMerchant insertOrUpdatePayLaterMerchant:forFinancingPlanPID:inDatabase:]( PayLaterMerchant,  "insertOrUpdatePayLaterMerchant:forFinancingPlanPID:inDatabase:",  v9,  [v7 persistentID],  self->_database));
    }
    [v8 udpdateProcessedPayLaterMerchant:v9];
  }
}

- (id)payLaterFinancingPlansRequiringMerchantCleanupWithTransactionDateWithinWindow:(double)a3
{
  return +[PayLaterMerchant payLaterFinancingPlansRequiringMerchantCleanupInDatabase:transactionDateWithinWindow:]( &OBJC_CLASS___PayLaterMerchant,  "payLaterFinancingPlansRequiringMerchantCleanupInDatabase:transactionDateWithinWindow:",  self->_database,  a3);
}

- (id)financingPlanIdentifiersThatContainInstallmentWithStatus:(unint64_t)a3
{
  return +[PayLaterInstallment financingPlanIdentifiersThatContainInstallmentWithStatus:inDatabase:]( &OBJC_CLASS___PayLaterInstallment,  "financingPlanIdentifiersThatContainInstallmentWithStatus:inDatabase:",  a3,  self->_database);
}

- (id)financingPlanDisputeIdentifiersWithDisputeState:(unint64_t)a3
{
  return +[PayLaterFinancingPlanDispute disputeIdentifiersWithState:inDatabase:]( &OBJC_CLASS___PayLaterFinancingPlanDispute,  "disputeIdentifiersWithState:inDatabase:",  a3,  self->_database);
}

- (id)financingPlansIdentifiersWithState:(unint64_t)a3
{
  return +[PayLaterFinancingPlan financingPlansIdentifiersWithState:inDatabase:]( &OBJC_CLASS___PayLaterFinancingPlan,  "financingPlansIdentifiersWithState:inDatabase:",  a3,  self->_database);
}

- (id)recomputePayLaterCardMagnitudesForAccountIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_autoreleasePoolPush();
  id v6 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager financingPlansWithAccountIdentifier:]( self,  "financingPlansWithAccountIdentifier:",  v4));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PKPayLaterCardMagnitudes magnitudesFromFinancingPlans:]( &OBJC_CLASS___PKPayLaterCardMagnitudes,  "magnitudesFromFinancingPlans:",  v6));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PayLaterCardMagnitudes insertOrUpdateMagnitudes:forAccountIdentifier:inDatabase:]( &OBJC_CLASS___PayLaterCardMagnitudes,  "insertOrUpdateMagnitudes:forAccountIdentifier:inDatabase:",  v7,  v4,  self->_database));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 magnitudes]);

  objc_autoreleasePoolPop(v5);
  return v9;
}

- (id)payLaterCardMagnitudesForAccountIdentifier:(id)a3
{
  return +[PayLaterCardMagnitudes magnitudesForAccountIdentifier:inDatabase:]( &OBJC_CLASS___PayLaterCardMagnitudes,  "magnitudesForAccountIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)appleBalancePromotionForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AppleBalancePromotionConfiguration appleBalancePromotionConfigurationForAccountPID:inDatabase:]( AppleBalancePromotionConfiguration,  "appleBalancePromotionConfigurationForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (id)insertOrUpdateAppleBalancePromotion:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  if ([v7 existsInDatabase])
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[AppleBalancePromotionConfiguration insertOrUpdateAppleBalancePromotionConfiguration:forAccountPID:inDatabase:]( AppleBalancePromotionConfiguration,  "insertOrUpdateAppleBalancePromotionConfiguration:forAccountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 appleBalancePromotionConfiguration]);
  }

  else
  {
    id v9 = 0LL;
  }

  return v9;
}

- (id)deleteAppleBalancePromotionForAccountWithIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AppleBalancePromotionConfiguration deleteAppleBalancePromotionConfigurationForAccountPID:inDatabase:]( AppleBalancePromotionConfiguration,  "deleteAppleBalancePromotionConfigurationForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (id)inStoreTopUpTokenForAccountIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  if ([v4 existsInDatabase]) {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AppleBalanceInStoreTopUpToken inStoreTopUpTokenForAccountPID:inDatabase:]( AppleBalanceInStoreTopUpToken,  "inStoreTopUpTokenForAccountPID:inDatabase:",  [v4 persistentID],  self->_database));
  }
  else {
    uint64_t v5 = 0LL;
  }

  return v5;
}

- (id)insertOrUpdateInStoreTopUpToken:(id)a3 forAccountWithIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  if ([v7 existsInDatabase])
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[AppleBalanceInStoreTopUpToken insertOrUpdateInStoreTopUpToken:forAccountPID:inDatabase:]( AppleBalanceInStoreTopUpToken,  "insertOrUpdateInStoreTopUpToken:forAccountPID:inDatabase:",  v6,  [v7 persistentID],  self->_database));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 topUpToken]);
  }

  else
  {
    id v9 = 0LL;
  }

  return v9;
}

- (void)deleteInStoreTopUpTokenForAccountWithIdentifier:(id)a3
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  if ([v4 existsInDatabase]) {
    +[AppleBalanceInStoreTopUpToken deleteInStoreTopUpTokenForAccountPID:inDatabase:]( AppleBalanceInStoreTopUpToken,  "deleteInStoreTopUpTokenForAccountPID:inDatabase:",  [v4 persistentID],  self->_database);
  }
}

- (id)discoveryItems
{
  return +[DiscoveryItem itemsInDatabase:](&OBJC_CLASS___DiscoveryItem, "itemsInDatabase:", self->_database);
}

- (id)discoveryItemsForRelevantDate:(id)a3
{
  return +[DiscoveryItem itemsWithRelevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryItem,  "itemsWithRelevantDate:inDatabase:",  a3,  self->_database);
}

- (id)activeDiscoveryItemsForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemsWithRelevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryItem,  "activeItemsWithRelevantDate:inDatabase:",  a3,  self->_database);
}

- (id)dismissedDiscoveryItems
{
  return +[DiscoveryItem dismissedDiscoveryItemsInDatabase:]( &OBJC_CLASS___DiscoveryItem,  "dismissedDiscoveryItemsInDatabase:",  self->_database);
}

- (id)activeDiscoveryItemsRequiringBadgeForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemsRequiringBadgingForRelevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryItem,  "activeItemsRequiringBadgingForRelevantDate:inDatabase:",  a3,  self->_database);
}

- (id)discoveryItemsWaitingForTrigger
{
  return +[DiscoveryItem itemsWaitingForTriggerInDatabase:]( &OBJC_CLASS___DiscoveryItem,  "itemsWaitingForTriggerInDatabase:",  self->_database);
}

- (BOOL)activeDiscoveryItemRequiringBadgeExistsForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemRequiringBadgeExistsForRelevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryItem,  "activeItemRequiringBadgeExistsForRelevantDate:inDatabase:",  a3,  self->_database);
}

- (id)activeDiscoveryItemIdentifiersForRelevantDate:(id)a3
{
  return +[DiscoveryItem activeItemIdentifiersWithRelevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryItem,  "activeItemIdentifiersWithRelevantDate:inDatabase:",  a3,  self->_database);
}

- (id)nonTerminalDiscoveryItemIdentifiers
{
  return +[DiscoveryItem nonTerminalItemIdentifiersInDatabase:]( &OBJC_CLASS___DiscoveryItem,  "nonTerminalItemIdentifiersInDatabase:",  self->_database);
}

- (id)discoveryItemWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[DiscoveryItem itemWithIdentifier:inDatabase:]( &OBJC_CLASS___DiscoveryItem,  "itemWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 item]);

  return v4;
}

- (id)setDiscoveryItems:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10013AE50;
  v12[3] = &unk_10063E440;
  id v13 = v4;
  id v14 = self;
  id v7 = v5;
  id v15 = v7;
  id v8 = v4;
  sub_1002CCC5C((uint64_t)database, v12);
  id v9 = v15;
  id v10 = v7;

  return v10;
}

- (id)updateDiscoveryItemsWithDialogRequestSourcedItems:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  id v17 = sub_10011BD00;
  id v18 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013B0C0;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  id v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryItemsWithRemoteItems:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  id v17 = sub_10011BD00;
  id v18 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013B32C;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  id v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryItemsWithRuleResults:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  uint64_t v15 = sub_10011BCF0;
  __int128 v16 = sub_10011BD00;
  id v17 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013B5C8;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (id)updateDiscoveryItem:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[DiscoveryItem updateItem:inDatabse:]( &OBJC_CLASS___DiscoveryItem,  "updateItem:inDatabse:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 item]);

  return v4;
}

- (void)deleteDiscoveryItemWithIdentifier:(id)a3
{
}

- (void)deleteAllDiscoveryItems
{
}

- (id)rules
{
  return +[Rule rulesInDatabase:](&OBJC_CLASS___Rule, "rulesInDatabase:", self->_database);
}

- (id)rulesWithIdentifiers:(id)a3
{
  return +[Rule rulesInDatabase:matchingRuleIdentifiers:]( &OBJC_CLASS___Rule,  "rulesInDatabase:matchingRuleIdentifiers:",  self->_database,  a3);
}

- (id)insertOrUpdateRule:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[Rule insertOrUpdateRule:inDatabase:]( &OBJC_CLASS___Rule,  "insertOrUpdateRule:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 rule]);

  return v4;
}

- (id)updateRules:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10013BADC;
  v12[3] = &unk_10063E440;
  id v13 = v4;
  uint64_t v14 = self;
  id v7 = v5;
  uint64_t v15 = v7;
  id v8 = v4;
  sub_1002CCC5C((uint64_t)database, v12);
  id v9 = v15;
  id v10 = v7;

  return v10;
}

- (void)deleteRuleWithIdentifier:(id)a3
{
}

- (void)deleteAllRules
{
}

- (id)engagementMessages
{
  return +[DiscoveryEngagementMessage engagementMessagesForPassQualifier:active:relevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryEngagementMessage,  "engagementMessagesForPassQualifier:active:relevantDate:inDatabase:",  3LL,  0LL,  0LL,  self->_database);
}

- (id)engagementMessagesForRelevantDate:(id)a3
{
  return +[DiscoveryEngagementMessage engagementMessagesForPassQualifier:active:relevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryEngagementMessage,  "engagementMessagesForPassQualifier:active:relevantDate:inDatabase:",  3LL,  0LL,  a3,  self->_database);
}

- (id)engagementMessagesForPassQualifier:(int64_t)a3 relevantDate:(id)a4 active:(unint64_t)a5
{
  return +[DiscoveryEngagementMessage engagementMessagesForPassQualifier:active:relevantDate:inDatabase:]( &OBJC_CLASS___DiscoveryEngagementMessage,  "engagementMessagesForPassQualifier:active:relevantDate:inDatabase:",  a3,  a5,  a4,  self->_database);
}

- (id)engagementMessageWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[DiscoveryEngagementMessage engagementMessageWithIdentifier:inDatabase:]( &OBJC_CLASS___DiscoveryEngagementMessage,  "engagementMessageWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 engagementMessage]);

  return v4;
}

- (id)updateEngagementMessages:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  id v17 = sub_10011BD00;
  id v18 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013BE3C;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateEngagementMessagesWithRemoteMessages:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  id v17 = sub_10011BD00;
  id v18 = objc_alloc_init(&OBJC_CLASS___NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013C0B4;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateEngagementMessagesForRuleResults:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  uint64_t v15 = sub_10011BCF0;
  __int128 v16 = sub_10011BD00;
  id v17 = objc_alloc_init(&OBJC_CLASS___NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013C348;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (id)updateEngagementMessage:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[DiscoveryEngagementMessage updateEngagementMessage:inDatabase:]( &OBJC_CLASS___DiscoveryEngagementMessage,  "updateEngagementMessage:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 engagementMessage]);

  return v4;
}

- (void)deleteEngagementMessageWithIdentifier:(id)a3
{
}

- (void)deleteAllEngagementMessages
{
}

- (id)discoveryNotifications
{
  return +[DiscoveryNotification notificationsInDatabase:]( &OBJC_CLASS___DiscoveryNotification,  "notificationsInDatabase:",  self->_database);
}

- (id)discoveryNotificationWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[DiscoveryNotification notificationWithIdentifier:inDatabase:]( &OBJC_CLASS___DiscoveryNotification,  "notificationWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 notification]);

  return v4;
}

- (id)insertOrUpdateDiscoveryNotification:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[DiscoveryNotification insertOrUpdateNotification:inDatabase:]( &OBJC_CLASS___DiscoveryNotification,  "insertOrUpdateNotification:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 notification]);

  return v4;
}

- (id)updateDiscoveryNotifications:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  id v17 = sub_10011BD00;
  id v18 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013C6C8;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryNotificationsWithRemoteNotifications:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  id v17 = sub_10011BD00;
  id v18 = objc_alloc_init(&OBJC_CLASS___NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013C960;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = self;
  uint64_t v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)updateDiscoveryNotificationsForRuleResults:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  uint64_t v15 = sub_10011BCF0;
  __int128 v16 = sub_10011BD00;
  id v17 = objc_alloc_init(&OBJC_CLASS___NSArray);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013CBF0;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unsigned __int8 v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (void)deleteDiscoveryNotificationWithIdentifier:(id)a3
{
}

- (void)deleteAllDiscoveryNotifications
{
}

- (id)discoveryNotificationsThatAreNotExpiredForDate:(id)a3 active:(unint64_t)a4 delivered:(unint64_t)a5
{
  return +[DiscoveryNotification notificationsThatAreNotExpiredForDate:active:delivered:inDatabase:]( &OBJC_CLASS___DiscoveryNotification,  "notificationsThatAreNotExpiredForDate:active:delivered:inDatabase:",  a3,  a4,  a5,  self->_database);
}

- (id)discoveryNotificationsToScheduleForDate:(id)a3
{
  return +[DiscoveryNotification notificationsToScheduleForDate:inDatabase:]( &OBJC_CLASS___DiscoveryNotification,  "notificationsToScheduleForDate:inDatabase:",  a3,  self->_database);
}

- (id)discoveryNotificationsRequiringInsertionForDate:(id)a3
{
  return +[DiscoveryNotification notificationsRequiringInsertionForDate:inDatabase:]( &OBJC_CLASS___DiscoveryNotification,  "notificationsRequiringInsertionForDate:inDatabase:",  a3,  self->_database);
}

- (id)nextRelevantDiscoveryNotificationForDate:(id)a3
{
  return +[DiscoveryNotification nextRelevantNotificationForDate:inDatabase:]( &OBJC_CLASS___DiscoveryNotification,  "nextRelevantNotificationForDate:inDatabase:",  a3,  self->_database);
}

- (id)paymentSetupFeatures
{
  return +[PaymentSetupFeature paymentSetupFeaturesInDatabase:]( &OBJC_CLASS___PaymentSetupFeature,  "paymentSetupFeaturesInDatabase:",  self->_database);
}

- (id)paymentSetupFeatureWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentSetupFeature paymentSetupFeatureWithIdentifier:inDatabase:]( &OBJC_CLASS___PaymentSetupFeature,  "paymentSetupFeatureWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 paymentSetupFeature]);

  return v4;
}

- (id)setPaymentSetupFeatures:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v7 = v4;
  id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v19;
    do
    {
      for (uint64_t i = 0LL; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "productIdentifier", (void)v18));
        if (v13)
        {
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentSetupFeature insertOrUpdatePaymentSetupFeature:inDatabase:]( &OBJC_CLASS___PaymentSetupFeature,  "insertOrUpdatePaymentSetupFeature:inDatabase:",  v12,  self->_database));
          -[NSMutableSet addObject:](v5, "addObject:", v13);
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 paymentSetupFeature]);
          -[NSMutableArray addObject:](v6, "addObject:", v15);
        }
      }

      id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v9);
  }

  __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableSet allObjects](v5, "allObjects"));
  +[PaymentSetupFeature deletePaymentSetupFeaturesNotIncludingIdentifiers:inDatabase:]( &OBJC_CLASS___PaymentSetupFeature,  "deletePaymentSetupFeaturesNotIncludingIdentifiers:inDatabase:",  v16,  self->_database);

  return v6;
}

- (id)insertOrUpdatePaymentSetupFeature:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentSetupFeature insertOrUpdatePaymentSetupFeature:inDatabase:]( &OBJC_CLASS___PaymentSetupFeature,  "insertOrUpdatePaymentSetupFeature:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 paymentSetupFeature]);

  return v4;
}

- (void)deletePaymentSetupFeatureWithIdentifier:(id)a3
{
}

- (void)deleteAllPaymentSetupFeatures
{
}

- (id)installmentPlansWithTransactionReferenceIdentifier:(id)a3
{
  return +[CreditInstallmentPlan installmentPlansWithTransactionReferenceIdentifier:inDatabase:]( &OBJC_CLASS___CreditInstallmentPlan,  "installmentPlansWithTransactionReferenceIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)passUniqueIdentifierWithPaymentApplicationIdentifier:(id)a3 subcredentialIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v17 = 0LL;
  __int128 v18 = &v17;
  uint64_t v19 = 0x3032000000LL;
  __int128 v20 = sub_10011BCF0;
  __int128 v21 = sub_10011BD00;
  id v22 = 0LL;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_10013D18C;
  v13[3] = &unk_1006445C0;
  void v13[4] = self;
  id v9 = v6;
  id v14 = v9;
  id v10 = v7;
  id v15 = v10;
  __int128 v16 = &v17;
  sub_1002CCC5C((uint64_t)database, v13);
  id v11 = (id)v18[5];

  _Block_object_dispose(&v17, 8);
  return v11;
}

- (id)passUniqueIdentifierFromAppletSubcredentialIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  uint64_t v17 = sub_10011BD00;
  id v18 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013D350;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  id v11 = self;
  uint64_t v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (id)passesWithPairedReaderIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  uint64_t database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10013D4FC;
  void v11[3] = &unk_10063E440;
  id v12 = v4;
  uint64_t v13 = self;
  id v14 = v5;
  id v7 = v5;
  id v8 = v4;
  sub_1002CCC5C((uint64_t)database, v11);
  id v9 = -[NSMutableSet copy](v7, "copy");

  return v9;
}

- (id)appletSubcredentialWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[AppletSubcredential appletSubcredentialWithIdentifier:inDatabase:]( &OBJC_CLASS___AppletSubcredential,  "appletSubcredentialWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 appletSubcredential]);

  return v4;
}

- (id)appletSubcredentialForSharedCredentialWithIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v13 = 0LL;
  id v14 = &v13;
  uint64_t v15 = 0x3032000000LL;
  __int128 v16 = sub_10011BCF0;
  uint64_t v17 = sub_10011BD00;
  id v18 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_10013D7FC;
  v9[3] = &unk_100644E28;
  id v6 = v4;
  id v10 = v6;
  id v11 = self;
  id v12 = &v13;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v14[5];

  _Block_object_dispose(&v13, 8);
  return v7;
}

- (BOOL)updateAppletSubcredentials:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  char v15 = 1;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10013D96C;
  v8[3] = &unk_100644E28;
  id v6 = v4;
  id v9 = v6;
  id v10 = self;
  id v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v8);
  LOBYTE(self) = *((_BYTE *)v13 + 24);

  _Block_object_dispose(&v12, 8);
  return (char)self;
}

- (void)updateRangingSuspensionReasons:(unint64_t)a3 onCredential:(id)a4 forPaymentApplicationID:(id)a5
{
  id v8 = a4;
  id v9 = a5;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_10013DC34;
  v13[3] = &unk_10063FDF8;
  void v13[4] = self;
  id v14 = v9;
  id v15 = v8;
  unint64_t v16 = a3;
  id v11 = v8;
  id v12 = v9;
  sub_1002CCC5C((uint64_t)database, v13);
}

- (unint64_t)rangingSuspensionReasonForAppletSubcredential:(id)a3 forPaymentApplicationID:(id)a4
{
  secureElement = self->_secureElement;
  id v7 = a4;
  id v8 = a3;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](secureElement, "secureElementIdentifiers"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:",  self->_database,  v7,  v9));

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 identifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[AppletSubcredential appletSubcredentialWithIdentifier:inDatabase:]( &OBJC_CLASS___AppletSubcredential,  "appletSubcredentialWithIdentifier:inDatabase:",  v11,  self->_database));
  unint64_t v13 = +[AppletSubcredentialRangingSuspensionReasons suspensionReasonsForCredential:forPaymentApplication:inDatabase:]( &OBJC_CLASS___AppletSubcredentialRangingSuspensionReasons,  "suspensionReasonsForCredential:forPaymentApplication:inDatabase:",  v12,  v10,  self->_database);

  return v13;
}

- (id)credentialIdentifiersForAid
{
  return +[AppletSubcredential credentialIdentifiersForAidInDatabase:]( &OBJC_CLASS___AppletSubcredential,  "credentialIdentifiersForAidInDatabase:",  self->_database);
}

- (id)invitations
{
  return +[AppletSubcredentialInvitation invitationsInDatabase:]( &OBJC_CLASS___AppletSubcredentialInvitation,  "invitationsInDatabase:",  self->_database);
}

- (id)invitationWithIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[AppletSubcredentialInvitation invitationWithIdentifier:inDatabase:]( &OBJC_CLASS___AppletSubcredentialInvitation,  "invitationWithIdentifier:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 invitation]);

  return v4;
}

- (BOOL)addSharingInvitation:(id)a3
{
  id v4 = a3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AppletSubcredentialInvitation addInvitation:inDatabase:]( &OBJC_CLASS___AppletSubcredentialInvitation,  "addInvitation:inDatabase:",  v4,  self->_database));

  if (v5)
  {
    delegateQueue = self->_delegateQueue;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_10013DF18;
    v8[3] = &unk_1006392B0;
    void v8[4] = self;
    id v9 = v4;
    dispatch_async((dispatch_queue_t)delegateQueue, v8);
  }

  return v5 != 0LL;
}

- (BOOL)deleteInvitationWithIdentifier:(id)a3
{
  return +[AppletSubcredentialInvitation deleteInvitationWithIdentifier:inDatabase:]( &OBJC_CLASS___AppletSubcredentialInvitation,  "deleteInvitationWithIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)passesWithISO18013Credentials
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentType:](&OBJC_CLASS___Pass, "predicateForPaymentType:", 1003LL));
  v19[0] = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentType:](&OBJC_CLASS___Pass, "predicateForPaymentType:", 1004LL));
  v19[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentType:](&OBJC_CLASS___Pass, "predicateForPaymentType:", 1002LL));
  void v19[2] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[Pass predicateForPaymentType:](&OBJC_CLASS___Pass, "predicateForPaymentType:", 1005LL));
  v19[3] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v19, 4LL));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v8));

  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForType:](self, "_predicateForType:", 1LL));
  v18[0] = v10;
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPrimaryPaymentApplication:]( &OBJC_CLASS___Pass,  "predicateForPrimaryPaymentApplication:",  1LL));
  v18[1] = v11;
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[Pass predicateForPaymentApplicationSecureElementIdentifiers:]( &OBJC_CLASS___Pass,  "predicateForPaymentApplicationSecureElementIdentifiers:",  v3));
  void v18[2] = v12;
  v18[3] = v9;
  unint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v18, 4LL));
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v13));

  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[Pass passesInDatabase:matchingPredicate:]( &OBJC_CLASS___Pass,  "passesInDatabase:matchingPredicate:",  self->_database,  v14));
  unint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _registeredPasses:](self, "_registeredPasses:", v15));

  return v16;
}

- (id)transactionReceiptWithUniqueID:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionReceipt anyInDatabase:withUniqueID:]( &OBJC_CLASS___TransactionReceipt,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionReceipt]);

  return v4;
}

- (id)insertOrUpdateTransactionReceipt:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionReceipt insertOrUpdateTransactionReceipt:inDatabase:]( &OBJC_CLASS___TransactionReceipt,  "insertOrUpdateTransactionReceipt:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionReceipt]);

  return v4;
}

- (void)deleteTransactionReceiptWithUniqueID:(id)a3
{
  id v3 = (id)objc_claimAutoreleasedReturnValue( +[TransactionReceipt anyInDatabase:withUniqueID:]( &OBJC_CLASS___TransactionReceipt,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  [v3 deleteFromDatabase];
}

- (unint64_t)numberOfTransactionReceipts
{
  uint64_t database = self->_database;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteBooleanPredicate truePredicate](&OBJC_CLASS___SQLiteBooleanPredicate, "truePredicate"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___TransactionReceipt,  "queryWithDatabase:predicate:",  database,  v3));
  id v5 = [v4 countOfEntities];

  return (unint64_t)v5;
}

- (void)insertOrReplaceMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3
{
  id v3 =  +[MissingRemoteAssetsItem insertOrReplaceMissingRemoteAssetsItemForUniqueID:inDataBase:]( &OBJC_CLASS___MissingRemoteAssetsItem,  "insertOrReplaceMissingRemoteAssetsItemForUniqueID:inDataBase:",  a3,  self->_database);
}

- (unint64_t)missingRemoteAssetsPersistentStoreItemsCountWithMaximumDownloadRetriesCount:(unint64_t)a3
{
  return +[MissingRemoteAssetsItem itemsCountInDataBase:withMaximumDownloadRetriesCount:]( &OBJC_CLASS___MissingRemoteAssetsItem,  "itemsCountInDataBase:withMaximumDownloadRetriesCount:",  self->_database,  a3);
}

- (id)missingRemoteAssetsPersistentStoreItemsWithMaximumDownloadRetriesCount:(unint64_t)a3
{
  return +[MissingRemoteAssetsItem itemsInDataBase:withMaximumDownloadRetriesCount:]( &OBJC_CLASS___MissingRemoteAssetsItem,  "itemsInDataBase:withMaximumDownloadRetriesCount:",  self->_database,  a3);
}

- (void)incrementMissingRemoteAssetsPersistentStoreItemDownloadRetriesCountWithUniqueID:(id)a3
{
}

- (void)removeMissingRemoteAssetsPersistentStoreItemWithUniqueID:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10013E394;
  v7[3] = &unk_1006455C8;
  id v8 = v4;
  id v9 = self;
  id v6 = v4;
  sub_1002CCC5C((uint64_t)database, v7);
}

- (id)issuerInstallmentTransactionsForPassUniqueIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a3));
  if ([v4 count]) {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction issuerInstallmentTransactionsInDatabase:transactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "issuerInstallmentTransactionsInDatabase:transactionSourceIdentifiers:",  self->_database,  v4));
  }
  else {
    id v5 = 0LL;
  }

  return v5;
}

- (id)issuerInstallmentTransactionsForTransactionSourceIdentifiers:(id)a3 paymentHashes:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if ([v6 count]) {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction issuerInstallmentTransactionsInDatabase:transactionSourceIdentifiers:transactionPaymentHashes:]( &OBJC_CLASS___PaymentTransaction,  "issuerInstallmentTransactionsInDatabase:transactionSourceIdentifiers:transactionPaymentHashes:",  self->_database,  v6,  v7));
  }
  else {
    id v8 = 0LL;
  }

  return v8;
}

- (void)deleteIssuerInstallmentTransactionsForPassUniqueID:(id)a3
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  a3));
  if ([v4 count]) {
    +[PaymentTransaction deleteIssuerInstallmentTransactionsInDatabase:transactionSourceIdentifiers:]( &OBJC_CLASS___PaymentTransaction,  "deleteIssuerInstallmentTransactionsInDatabase:transactionSourceIdentifiers:",  self->_database,  v4);
  }
}

- (id)cloudStoreZonesForContainerDatabaseWithName:(id)a3 scope:(int64_t)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( &OBJC_CLASS___CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  self->_database,  a3,  a4));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 cloudStoreZones]);

  return v5;
}

- (void)insertOrUpdateCloudStoreZone:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 database]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 container]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 containerIdentifier]);
  uint64_t v12 = objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v11,  [v7 scope]));

  if (v12) {
    goto LABEL_5;
  }
  uint64_t Object = PKLogFacilityTypeGetObject(9LL);
  id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v6 zoneName]);
    int v18 = 138543618;
    uint64_t v19 = v15;
    __int16 v20 = 2112;
    id v21 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Cannot insert cloud store zone %{public}@ without a container database defined. Inserting one now. %@",  (uint8_t *)&v18,  0x16u);
  }

  uint64_t v12 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _insertContainerDatabaseForContainerDatabase:]( self,  "_insertContainerDatabaseForContainerDatabase:",  v7));
  if (v12)
  {
LABEL_5:
    id v16 =  +[CloudStoreZone insertOrUpdateCloudStoreZone:forContainerDatabase:inDatabase:]( &OBJC_CLASS___CloudStoreZone,  "insertOrUpdateCloudStoreZone:forContainerDatabase:inDatabase:",  v6,  v12,  self->_database);
    id v14 = (os_log_s *)v12;
  }

  else if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v6 zoneName]);
    int v18 = 138543618;
    uint64_t v19 = v17;
    __int16 v20 = 2112;
    id v21 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Cannot insert cloud store zone %{public}@ without a container database defined %@",  (uint8_t *)&v18,  0x16u);
  }
}

- (void)updateChangeToken:(id)a3 fetchTimestamp:(id)a4 forCloudStoreZone:(id)a5 inContainerDatabase:(id)a6
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  uint64_t database = self->_database;
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v13 database]);
  id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 container]);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 containerIdentifier]);
  int v18 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v17,  [v13 scope]));

  if (v18)
  {
    +[CloudStoreZone updateChangeToken:fetchTimestamp:forCloudStoreZone:inContainerDatabase:inDatabase:]( &OBJC_CLASS___CloudStoreZone,  "updateChangeToken:fetchTimestamp:forCloudStoreZone:inContainerDatabase:inDatabase:",  v10,  v11,  v12,  v18,  self->_database);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    __int16 v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v12 zoneName]);
      int v22 = 138543618;
      __int128 v23 = v21;
      __int16 v24 = 2112;
      id v25 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Cannot update change token and fetch timestamp for zone %{public}@ without a container database defined %@",  (uint8_t *)&v22,  0x16u);
    }
  }
}

- (void)updateDidFinishInitialSync:(BOOL)a3 forCloudStoreZone:(id)a4 inContainerDatabase:(id)a5
{
  BOOL v6 = a3;
  id v8 = a4;
  id v9 = a5;
  uint64_t database = self->_database;
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 database]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 container]);
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 containerIdentifier]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v13,  [v9 scope]));

  if (v14)
  {
    +[CloudStoreZone updateDidFinishInitialSync:forCloudStoreZone:inContainerDatabase:inDatabase:]( &OBJC_CLASS___CloudStoreZone,  "updateDidFinishInitialSync:forCloudStoreZone:inContainerDatabase:inDatabase:",  v6,  v8,  v14,  self->_database);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v8 zoneName]);
      int v18 = 138543618;
      uint64_t v19 = v17;
      __int16 v20 = 2112;
      id v21 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Cannot update change token and fetch timestamp for zone %{public}@ without a container database defined %@",  (uint8_t *)&v18,  0x16u);
    }
  }
}

- (id)tokenDataForCloudStore:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 database]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 container]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 containerIdentifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v11,  [v7 scope]));

  if (v12)
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreZone tokenDataForCloudStoreZone:forContainerDatabase:inDatabase:]( &OBJC_CLASS___CloudStoreZone,  "tokenDataForCloudStoreZone:forContainerDatabase:inDatabase:",  v6,  v12,  self->_database));
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 zoneName]);
      int v18 = 138543618;
      uint64_t v19 = v16;
      __int16 v20 = 2112;
      id v21 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Cannot get change token for zone %{public}@ without a container database defined %@",  (uint8_t *)&v18,  0x16u);
    }

    id v13 = 0LL;
  }

  return v13;
}

- (BOOL)didFinishInitialSyncForCloudStore:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 database]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 container]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 containerIdentifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v11,  [v7 scope]));

  if (v12)
  {
    BOOL v13 = +[CloudStoreZone didFinishInitialSyncForCloudStoreZone:forContainerDatabase:inDatabase:]( &OBJC_CLASS___CloudStoreZone,  "didFinishInitialSyncForCloudStoreZone:forContainerDatabase:inDatabase:",  v6,  v12,  self->_database);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 zoneName]);
      int v18 = 138543618;
      uint64_t v19 = v16;
      __int16 v20 = 2112;
      id v21 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Cannot get finish flag for zone %{public}@ without a container database defined %@",  (uint8_t *)&v18,  0x16u);
    }

    BOOL v13 = 0;
  }

  return v13;
}

- (id)fetchTimestampForCloudStore:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 database]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 container]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 containerIdentifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v11,  [v7 scope]));

  if (v12)
  {
    BOOL v13 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreZone fetchTimestampForCloudStoreZone:forContainerDatabase:inDatabase:]( &OBJC_CLASS___CloudStoreZone,  "fetchTimestampForCloudStoreZone:forContainerDatabase:inDatabase:",  v6,  v12,  self->_database));
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v6 zoneName]);
      int v18 = 138543618;
      uint64_t v19 = v16;
      __int16 v20 = 2112;
      id v21 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Cannot get change token for zone %{public}@ without a container database defined %@",  (uint8_t *)&v18,  0x16u);
    }

    BOOL v13 = 0LL;
  }

  return v13;
}

- (void)removeCloudStoreZone:(id)a3 containerDatabase:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 database]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 container]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 containerIdentifier]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v11,  [v7 scope]));

  if (v12)
  {
    +[CloudStoreZone removeCloudStoreZone:forContainerDatabase:inDatabase:]( &OBJC_CLASS___CloudStoreZone,  "removeCloudStoreZone:forContainerDatabase:inDatabase:",  v6,  v12,  self->_database);
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = (void *)objc_claimAutoreleasedReturnValue([v6 zoneName]);
      int v16 = 138543618;
      uint64_t v17 = v15;
      __int16 v18 = 2112;
      id v19 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Cannot remove cloud store zone %{public}@ without a container database defined %@",  (uint8_t *)&v16,  0x16u);
    }
  }
}

- (void)removeContainerDatabaseForContainerDatabase:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 database]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 container]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 containerIdentifier]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v8,  [v4 scope]));

  if (v9)
  {
    [v9 deleteFromDatabase];
  }

  else
  {
    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 138412290;
      id v13 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Cannot remove cloud container database %@",  (uint8_t *)&v12,  0xCu);
    }
  }
}

- (id)cloudStoreZonesForContainerDatabase:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 database]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 container]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 containerIdentifier]);
  id v8 = [v4 scope];

  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( &OBJC_CLASS___CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v7,  v8));
  if (v9) {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 cloudStoreZones]);
  }
  else {
    id v10 = 0LL;
  }

  return v10;
}

- (id)databaseSubscriptionForContainerDatabase:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 database]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 container]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 containerIdentifier]);
  id v8 = [v4 scope];

  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( &OBJC_CLASS___CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v7,  v8));
  if (v9) {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 databaseSubscription]);
  }
  else {
    id v10 = 0LL;
  }

  return v10;
}

- (void)updateDatabaseSubscription:(id)a3 containerDatabase:(id)a4
{
  id v13 = a3;
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 database]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 container]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 containerIdentifier]);
  id v11 = [v7 scope];

  int v12 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( &OBJC_CLASS___CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v10,  v11));
  if (v12) {
    [v12 updateWithDatabaseSubscription:v13];
  }
}

- (BOOL)containerDatabaseExistsForContainerDatabase:(id)a3
{
  uint64_t database = self->_database;
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 database]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 container]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 containerIdentifier]);
  id v8 = [v4 scope];

  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase anyInDatabase:withContainerName:scope:]( &OBJC_CLASS___CloudStoreContainerDatabase,  "anyInDatabase:withContainerName:scope:",  database,  v7,  v8));
  return v9 != 0LL;
}

- (void)insertContainerDatabaseForContainerDatabase:(id)a3
{
  id v3 =  -[PDDatabaseManager _insertContainerDatabaseForContainerDatabase:]( self,  "_insertContainerDatabaseForContainerDatabase:",  a3);
}

- (id)_insertContainerDatabaseForContainerDatabase:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 database]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 container]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 containerIdentifier]);
  id v8 = [v4 scope];

  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerDatabase insertOrUpdateCloudStoreDatabaseWithContainerName:scope:inDatabase:]( &OBJC_CLASS___CloudStoreContainerDatabase,  "insertOrUpdateCloudStoreDatabaseWithContainerName:scope:inDatabase:",  v7,  v8,  self->_database));
  return v9;
}

- (BOOL)hasMatchingCloudStoreRecord:(id)a3 inCloudStoreZone:(id)a4
{
  BOOL v4 = 0;
  if (a3 && a4)
  {
    uint64_t database = self->_database;
    id v7 = a3;
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreRecord anyInDatabase:cloudStoreRecord:cloudStoreZone:]( &OBJC_CLASS___CloudStoreRecord,  "anyInDatabase:cloudStoreRecord:cloudStoreZone:",  database,  v7,  a4));
    id v9 = objc_msgSend(v7, "pk_hash");

    BOOL v4 = v9 == [v8 hash];
  }

  return v4;
}

- (id)cloudStoreRecordWithRecordName:(id)a3 recordType:(id)a4 inCloudStoreZone:(id)a5
{
  id v6 = 0LL;
  if (a3 && a4 && a5) {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreRecord recordInDatabase:withRecordName:recordType:cloudStoreZone:]( &OBJC_CLASS___CloudStoreRecord,  "recordInDatabase:withRecordName:recordType:cloudStoreZone:",  self->_database,  a3,  a4));
  }
  return v6;
}

- (void)insertOrUpdateCloudStoreRecords:(id)a3 inCloudStoreZone:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v14;
    do
    {
      id v11 = 0LL;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v6);
        }
        id v12 =  +[CloudStoreRecord insertOrUpdateCloudStoreRecord:forCloudStoreZone:inDatabase:]( &OBJC_CLASS___CloudStoreRecord,  "insertOrUpdateCloudStoreRecord:forCloudStoreZone:inDatabase:",  *(void *)(*((void *)&v13 + 1) + 8LL * (void)v11),  v7,  self->_database);
        id v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }

    while (v9);
  }
}

- (void)removeCloudStoreRecordID:(id)a3 recordType:(id)a4 cloudStoreZone:(id)a5
{
}

- (void)addCloudStoreContainerChangeEvent:(id)a3
{
  if (a3) {
    id v3 =  +[CloudStoreContainerChangeEvent insertContainerChangeEvent:inDatabase:]( &OBJC_CLASS___CloudStoreContainerChangeEvent,  "insertContainerChangeEvent:inDatabase:",  a3,  self->_database);
  }
}

- (id)cloudStoreContainerChangeEventWithIdentifier:(id)a3
{
  if (a3) {
    return (id)objc_claimAutoreleasedReturnValue( +[CloudStoreContainerChangeEvent changeEventWithIdentifier:inDatabase:]( &OBJC_CLASS___CloudStoreContainerChangeEvent,  "changeEventWithIdentifier:inDatabase:",  a3,  self->_database));
  }
  else {
    return 0LL;
  }
}

- (void)deleteAllCloudStoreContainerChangeEventHistory
{
}

- (void)purgeOldCloudStoreContainerChangeEventEntires
{
}

- (id)cloudStoreContainerChangeEventsForContainerIdentifier:(id)a3
{
  return +[CloudStoreContainerChangeEvent changeEventsForContainerIdentifier:inDatabase:]( &OBJC_CLASS___CloudStoreContainerChangeEvent,  "changeEventsForContainerIdentifier:inDatabase:",  a3,  self->_database);
}

- (int64_t)cloudStoreContainerChangeEventCount
{
  uint64_t database = self->_database;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteBooleanPredicate truePredicate](&OBJC_CLASS___SQLiteBooleanPredicate, "truePredicate"));
  int64_t v4 = +[SQLiteEntity countInDatabase:predicate:]( &OBJC_CLASS___CloudStoreContainerChangeEvent,  "countInDatabase:predicate:",  database,  v3);

  return v4;
}

- (id)allRecordFetchTasks
{
  return +[CloudStoreRecordFetchTask allRecordFetchTasksInDatabase:]( &OBJC_CLASS___CloudStoreRecordFetchTask,  "allRecordFetchTasksInDatabase:",  self->_database);
}

- (void)updateRecordFetchTask:(id)a3
{
  id v4 = a3;
  uint64_t Object = PKLogFacilityTypeGetObject(9LL);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    id v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Updating cloud store record fetch task %@",  (uint8_t *)&v8,  0xCu);
  }

  id v7 =  +[CloudStoreRecordFetchTask insertOrUpdateRecordFetchTask:inDatabase:]( &OBJC_CLASS___CloudStoreRecordFetchTask,  "insertOrUpdateRecordFetchTask:inDatabase:",  v4,  self->_database);
}

- (void)removeRecordFetchTasks:(id)a3
{
  id v4 = a3;
  uint64_t Object = PKLogFacilityTypeGetObject(9LL);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    id v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Removing cloud store record fetch tasks %@",  (uint8_t *)&v7,  0xCu);
  }

  +[CloudStoreRecordFetchTask removeRecordFetchTasks:inDatabase:]( &OBJC_CLASS___CloudStoreRecordFetchTask,  "removeRecordFetchTasks:inDatabase:",  v4,  self->_database);
}

- (void)insertOrUpdatePendingProvisioning:(id)a3
{
  id v3 =  +[PendingProvisioning insertPendingProvisioning:inDatabase:]( &OBJC_CLASS___PendingProvisioning,  "insertPendingProvisioning:inDatabase:",  a3,  self->_database);
}

- (id)allPendingProvisionings
{
  return +[PendingProvisioning allPendingProvisioningsInDatabase:]( &OBJC_CLASS___PendingProvisioning,  "allPendingProvisioningsInDatabase:",  self->_database);
}

- (id)pendingProvisioningsOfType:(id)a3
{
  return +[PendingProvisioning pendingProvisioningsInDatabase:ofType:]( &OBJC_CLASS___PendingProvisioning,  "pendingProvisioningsInDatabase:ofType:",  self->_database,  a3);
}

- (id)pendingProvisioningsOfTypes:(id)a3
{
  return +[PendingProvisioning pendingProvisioningsInDatabase:ofTypes:]( &OBJC_CLASS___PendingProvisioning,  "pendingProvisioningsInDatabase:ofTypes:",  self->_database,  a3);
}

- (BOOL)hasPendingProvisioningsOfTypes:(id)a3
{
  return +[PendingProvisioning hasPendingProvisioningsInDatabase:ofTypes:]( &OBJC_CLASS___PendingProvisioning,  "hasPendingProvisioningsInDatabase:ofTypes:",  self->_database,  a3);
}

- (id)pendingProvisioningsWithStatus:(int64_t)a3
{
  return +[PendingProvisioning pendingProvisioningsInDatabase:withStatus:]( &OBJC_CLASS___PendingProvisioning,  "pendingProvisioningsInDatabase:withStatus:",  self->_database,  a3);
}

- (void)markInProgressPendingProvisionings
{
}

- (id)pendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4
{
  return +[PendingProvisioning pendingProvisioningInDatabase:ofType:withUniqueIdentifier:]( &OBJC_CLASS___PendingProvisioning,  "pendingProvisioningInDatabase:ofType:withUniqueIdentifier:",  self->_database,  a3,  a4);
}

- (BOOL)deletePendingProvisioningOfType:(id)a3 withUniqueIdentifier:(id)a4
{
  return +[PendingProvisioning deletePendingProvisioningInDatabase:ofType:withUniqueIdentifier:]( &OBJC_CLASS___PendingProvisioning,  "deletePendingProvisioningInDatabase:ofType:withUniqueIdentifier:",  self->_database,  a3,  a4);
}

- (void)insertOrUpdatePendingProvisioningReceipt:(id)a3
{
}

- (id)allPendingProvisioningReceipts
{
  return +[PendingProvisioningReceipt pendingProvisioningReceiptsInDatabase:]( &OBJC_CLASS___PendingProvisioningReceipt,  "pendingProvisioningReceiptsInDatabase:",  self->_database);
}

- (void)deleteAllPendingProvisioningReceipts
{
}

- (id)pushProvisioningSharingMetadata
{
  return +[PushProvisioningSharingMetadata pushProvisioningSharingMetadataInDatabase:]( &OBJC_CLASS___PushProvisioningSharingMetadata,  "pushProvisioningSharingMetadataInDatabase:",  self->_database);
}

- (id)pushProvisioningSharingMetadataWithStatus:(unint64_t)a3
{
  return +[PushProvisioningSharingMetadata pushProvisioningSharingMetadataForStatus:inDatabase:]( &OBJC_CLASS___PushProvisioningSharingMetadata,  "pushProvisioningSharingMetadataForStatus:inDatabase:",  a3,  self->_database);
}

- (id)insertOrUpdatePushProvisioningSharingMetadata:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PushProvisioningSharingMetadata insertOrUpdateSharingMetadata:inDatabase:]( &OBJC_CLASS___PushProvisioningSharingMetadata,  "insertOrUpdateSharingMetadata:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 sharingMetaData]);

  return v4;
}

- (void)deletePushProvisioningSharingMetadata:(id)a3
{
}

- (id)nextPossibleCloudStoreShareOperationForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5
{
  uint64_t database = self->_database;
  id v9 = a5;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreZone anyInDatabase:forCloudStoreZone:]( &OBJC_CLASS___CloudStoreZone,  "anyInDatabase:forCloudStoreZone:",  database,  a4));
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreShareBackoff anyInDatabase:forBackoffType:cloudStoreZone:recipientHandle:]( &OBJC_CLASS___CloudStoreShareBackoff,  "anyInDatabase:forBackoffType:cloudStoreZone:recipientHandle:",  self->_database,  a3,  v10,  v9));

  else {
    id v12 = 0LL;
  }

  return v12;
}

- (void)increaseRetryCloudStoreShareOperationBackoffLevelForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5
{
  id v11 = a5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreZone anyInDatabase:forCloudStoreZone:]( &OBJC_CLASS___CloudStoreZone,  "anyInDatabase:forCloudStoreZone:",  self->_database,  a4));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreShareBackoff anyInDatabase:forBackoffType:cloudStoreZone:recipientHandle:]( &OBJC_CLASS___CloudStoreShareBackoff,  "anyInDatabase:forBackoffType:cloudStoreZone:recipientHandle:",  self->_database,  a3,  v8,  v11));
  else {
    id v10 =  +[CloudStoreShareBackoff insertIfNotExistsForBackoffType:cloudStoreZone:recipientHandle:inDatabase:]( &OBJC_CLASS___CloudStoreShareBackoff,  "insertIfNotExistsForBackoffType:cloudStoreZone:recipientHandle:inDatabase:",  a3,  v8,  v11,  self->_database);
  }
}

- (void)deleteRetryCloudStoreShareOperationBackoffForBackoffType:(unint64_t)a3 cloudStoreZone:(id)a4 recipientHandle:(id)a5
{
  id v9 = a5;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[CloudStoreZone anyInDatabase:forCloudStoreZone:]( &OBJC_CLASS___CloudStoreZone,  "anyInDatabase:forCloudStoreZone:",  self->_database,  a4));
  if ([v8 existsInDatabase]) {
    +[CloudStoreShareBackoff deleteEntriesForBackoffType:cloudStoreZone:recipientHandle:inDatabase:]( &OBJC_CLASS___CloudStoreShareBackoff,  "deleteEntriesForBackoffType:cloudStoreZone:recipientHandle:inDatabase:",  a3,  v8,  v9,  self->_database);
  }
}

- (id)unregisteredAuxiliaryCapabilityRequirementsForPass:(id)a3
{
  uint64_t database = self->_database;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 uniqueID]);
  int v7 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, v6));

  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PassAuxiliaryRegistrationRequirement auxiliaryRegistrationRequirementStatusForPassPID:inDatabase:]( PassAuxiliaryRegistrationRequirement,  "auxiliaryRegistrationRequirementStatusForPassPID:inDatabase:",  [v7 persistentID],  self->_database));
  id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "pk_indexDictionaryByApplyingBlock:", &stru_100645608));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 auxiliaryRegistrationRequirements]);

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 allRequirements]);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  void v17[2] = sub_10013FF3C;
  v17[3] = &unk_100645630;
  id v18 = v9;
  id v12 = v9;
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "pk_objectsPassingTest:", v17));
  if ([v13 count]) {
    __int128 v14 = v13;
  }
  else {
    __int128 v14 = 0LL;
  }
  id v15 = v14;

  return v15;
}

- (BOOL)isAuxiliaryRegistrationRequirementRegistered:(id)a3 pass:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a3;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([a4 uniqueID]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, v8));

  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[PassAuxiliaryRegistrationRequirement unregisteredAuxiliaryRegistrationRequirementIdentifiersForPassPID:inDatabase:]( PassAuxiliaryRegistrationRequirement,  "unregisteredAuxiliaryRegistrationRequirementIdentifiersForPassPID:inDatabase:",  [v9 persistentID],  self->_database));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 identifier]);

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_1001400DC;
  v14[3] = &unk_100645658;
  id v15 = v11;
  id v12 = v11;
  LODWORD(database) = objc_msgSend(v10, "pk_containsObjectPassingTest:", v14) ^ 1;

  return (char)database;
}

- (BOOL)updateAuxiliaryRegistrationRequirement:(id)a3 pass:(id)a4 isRegistered:(BOOL)a5
{
  BOOL v5 = a5;
  uint64_t database = self->_database;
  id v9 = a3;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([a4 uniqueID]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, v10));

  LOBYTE(v5) = +[PassAuxiliaryRegistrationRequirement updateAuxiliaryRegistrationRequirement:passPID:isRegistered:inDatabase:]( PassAuxiliaryRegistrationRequirement,  "updateAuxiliaryRegistrationRequirement:passPID:isRegistered:inDatabase:",  v9,  [v11 persistentID],  v5,  self->_database);
  return v5;
}

- (BOOL)updateAuxiliaryRegistrationRequirementsForPass:(id)a3 isRegistered:(BOOL)a4
{
  BOOL v4 = a4;
  uint64_t database = self->_database;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a3 uniqueID]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, v7));

  LOBYTE(v4) = +[PassAuxiliaryRegistrationRequirement updateAuxiliaryRegistrationRequirementsForPassPID:isRegistered:inDatabase:]( PassAuxiliaryRegistrationRequirement,  "updateAuxiliaryRegistrationRequirementsForPassPID:isRegistered:inDatabase:",  [v8 persistentID],  v4,  self->_database);
  return v4;
}

- (BOOL)insertBarcodeCredentials:(id)a3 forDPANIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0LL;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100140360;
  v12[3] = &unk_100645680;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_1002CCC5C((uint64_t)database, v12);
  LOBYTE(v6) = *((_BYTE *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (unint64_t)numberOfValidBarcodeCredentialsForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  uint64_t v15 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_1001404B0;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  id v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  unint64_t v7 = v13[3];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (unint64_t)numberOfBarcodeCredentialsDisplayedAfterDate:(id)a3 forDPANIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v17 = 0LL;
  uint64_t v18 = &v17;
  uint64_t v19 = 0x2020000000LL;
  uint64_t v20 = 0LL;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_100140610;
  v13[3] = &unk_100645680;
  void v13[4] = self;
  id v9 = v7;
  id v14 = v9;
  uint64_t v16 = &v17;
  id v10 = v6;
  id v15 = v10;
  sub_1002CCC5C((uint64_t)database, v13);
  unint64_t v11 = v18[3];

  _Block_object_dispose(&v17, 8);
  return v11;
}

- (id)firstValidBarcodeCredentialForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  id v15 = sub_10011BCF0;
  uint64_t v16 = sub_10011BD00;
  id v17 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_100140768;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unint64_t v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (id)lastUsedBarcodeIdentifierForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  id v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  id v15 = sub_10011BCF0;
  uint64_t v16 = sub_10011BD00;
  id v17 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_1001408E0;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  unint64_t v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (BOOL)removeAllBarcodeCredentialValuesForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0LL;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100140A1C;
  v8[3] = &unk_100644E28;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_1002CCC5C((uint64_t)database, v8);
  LOBYTE(database) = *((_BYTE *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (BOOL)removeAllBarcodeCredentialsForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0LL;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100140B58;
  v8[3] = &unk_100644E28;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_1002CCC5C((uint64_t)database, v8);
  LOBYTE(database) = *((_BYTE *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (BOOL)updateDisplayTimestamp:(id)a3 forBarcodeIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0LL;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100140CC4;
  v12[3] = &unk_100645680;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_1002CCC5C((uint64_t)database, v12);
  LOBYTE(v6) = *((_BYTE *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)updatePaymentPINData:(id)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0LL;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100140E2C;
  v12[3] = &unk_100645680;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_1002CCC5C((uint64_t)database, v12);
  LOBYTE(v6) = *((_BYTE *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)updateTransactionSignatureData:(id)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0LL;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_100140FCC;
  v12[3] = &unk_100645680;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_1002CCC5C((uint64_t)database, v12);
  LOBYTE(v6) = *((_BYTE *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)updateUserConfirmationData:(id)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0LL;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  char v19 = 0;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10014116C;
  v12[3] = &unk_100645680;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  id v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_1002CCC5C((uint64_t)database, v12);
  LOBYTE(v6) = *((_BYTE *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (BOOL)addProcessedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v14 = 0LL;
  id v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  char v17 = 0;
  uint64_t database = self->_database;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_1001412E4;
  v10[3] = &unk_10063D3E8;
  void v10[4] = self;
  id v8 = v6;
  id v11 = v8;
  uint64_t v12 = &v14;
  unint64_t v13 = a3;
  sub_1002CCC5C((uint64_t)database, v10);
  LOBYTE(a3) = *((_BYTE *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  return a3;
}

- (BOOL)addDataCollectedAuthenticationMechanisms:(unint64_t)a3 forTransactionIdentifier:(id)a4
{
  id v6 = a4;
  uint64_t v14 = 0LL;
  id v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  char v17 = 0;
  uint64_t database = self->_database;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10014145C;
  v10[3] = &unk_10063D3E8;
  void v10[4] = self;
  id v8 = v6;
  id v11 = v8;
  uint64_t v12 = &v14;
  unint64_t v13 = a3;
  sub_1002CCC5C((uint64_t)database, v10);
  LOBYTE(a3) = *((_BYTE *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  return a3;
}

- (BOOL)markAuthenticationCompleteforTransactionIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0LL;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1001415CC;
  v8[3] = &unk_100644E28;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_1002CCC5C((uint64_t)database, v8);
  LOBYTE(database) = *((_BYTE *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (BOOL)resetTransactionAuthenticationForTransactionIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v11 = 0LL;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  char v14 = 0;
  uint64_t database = self->_database;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10014173C;
  v8[3] = &unk_100644E28;
  void v8[4] = self;
  id v6 = v4;
  id v9 = v6;
  id v10 = &v11;
  sub_1002CCC5C((uint64_t)database, v8);
  LOBYTE(database) = *((_BYTE *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return (char)database;
}

- (id)transactionAuthenticationResultForTransactionIdentifier:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionAuthenticationResult]);

  return v4;
}

- (int64_t)barcodeBackgroundFetchRetryLevelForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_1001418F0;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  uint64_t v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  int64_t v7 = v13[3];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (BOOL)updateNextBarcodeBackgroundFetchDate:(id)a3 withRetryLevel:(int64_t)a4 forPassUniqueIdentifier:(id)a5
{
  id v8 = a3;
  id v9 = a5;
  uint64_t v19 = 0LL;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x2020000000LL;
  char v22 = 0;
  uint64_t database = self->_database;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_100141A74;
  v14[3] = &unk_10063E418;
  void v14[4] = self;
  id v11 = v9;
  id v15 = v11;
  char v17 = &v19;
  id v12 = v8;
  id v16 = v12;
  int64_t v18 = a4;
  sub_1002CCC5C((uint64_t)database, v14);
  LOBYTE(a4) = *((_BYTE *)v20 + 24);

  _Block_object_dispose(&v19, 8);
  return a4;
}

- (id)nextBarcodeBackgroundFetchDate
{
  return +[BarcodeFetch nextBackgroundFetchDateInDatabase:]( &OBJC_CLASS___BarcodeFetch,  "nextBackgroundFetchDateInDatabase:",  self->_database);
}

- (BOOL)hasBarcodeBackgroundFetchRecordForPassUniqueIdentifier:(id)a3 nextBackgroundFetchDate:(id *)a4
{
  id v6 = a3;
  uint64_t v21 = 0LL;
  char v22 = &v21;
  uint64_t v23 = 0x2020000000LL;
  char v24 = 0;
  uint64_t v15 = 0LL;
  id v16 = &v15;
  uint64_t v17 = 0x3032000000LL;
  int64_t v18 = sub_10011BCF0;
  uint64_t v19 = sub_10011BD00;
  id v20 = 0LL;
  uint64_t database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_100141C5C;
  void v11[3] = &unk_100644EC8;
  void v11[4] = self;
  id v8 = v6;
  id v12 = v8;
  uint64_t v13 = &v15;
  uint64_t v14 = &v21;
  sub_1002CCC5C((uint64_t)database, v11);
  if (a4) {
    *a4 = (id) v16[5];
  }
  char v9 = *((_BYTE *)v22 + 24);

  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);

  return v9;
}

- (id)passesWithNextBackgroundFetchDateBeforeDate:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[BarcodeFetch passPIDsWithNextbackgroundFetchDateBeforeDate:inDatabase:]( &OBJC_CLASS___BarcodeFetch,  "passPIDsWithNextbackgroundFetchDateBeforeDate:inDatabase:",  a3,  self->_database));
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472LL;
  id v10 = sub_100141DC4;
  id v11 = &unk_1006456A8;
  id v12 = self;
  uint64_t v13 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  BOOL v5 = v13;
  [v4 enumerateObjectsUsingBlock:&v8];
  id v6 = -[NSMutableArray copy](v5, "copy", v8, v9, v10, v11, v12);

  return v6;
}

- (id)evaluatedPolicyDomainStateForDPANIdentifier:(id)a3
{
  id v4 = a3;
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  uint64_t v15 = sub_10011BCF0;
  id v16 = sub_10011BD00;
  id v17 = 0LL;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_100141F84;
  v9[3] = &unk_100644E28;
  void v9[4] = self;
  id v6 = v4;
  id v10 = v6;
  id v11 = &v12;
  sub_1002CCC5C((uint64_t)database, v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

- (BOOL)insertOrUpdateEvaluatedPolicyDomainState:(id)a3 forDPANIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v16 = 0LL;
  id v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  char v19 = 1;
  uint64_t database = self->_database;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_1001421A4;
  v12[3] = &unk_100645680;
  void v12[4] = self;
  id v9 = v7;
  id v13 = v9;
  uint64_t v15 = &v16;
  id v10 = v6;
  id v14 = v10;
  sub_1002CCC5C((uint64_t)database, v12);
  LOBYTE(v6) = *((_BYTE *)v17 + 24);

  _Block_object_dispose(&v16, 8);
  return (char)v6;
}

- (void)addChangeEvents:(id)a3
{
}

- (void)increaseRetryCountForRecordUniqueIdenifier:(id)a3 recordType:(int64_t)a4
{
}

- (id)retryDateForEvent:(id)a3
{
  return +[ChangeHistoryEventRetryDetails retryDateForEvent:inDatabase:]( &OBJC_CLASS___ChangeHistoryEventRetryDetails,  "retryDateForEvent:inDatabase:",  a3,  self->_database);
}

- (unint64_t)numberOfChangeEvents
{
  return +[ChangeHistoryEvent numberOfChangeEventsInDatabase:]( &OBJC_CLASS___ChangeHistoryEvent,  "numberOfChangeEventsInDatabase:",  self->_database);
}

- (id)changeEventsWithRecordType:(int64_t)a3
{
  return +[ChangeHistoryEvent eventsWithRecordType:inDatabase:]( &OBJC_CLASS___ChangeHistoryEvent,  "eventsWithRecordType:inDatabase:",  a3,  self->_database);
}

- (id)changeEventsWithRecordType:(int64_t)a3 recordUniqueID:(id)a4
{
  return +[ChangeHistoryEvent eventsWithRecordType:recodUniqueID:inDatabase:]( &OBJC_CLASS___ChangeHistoryEvent,  "eventsWithRecordType:recodUniqueID:inDatabase:",  a3,  a4,  self->_database);
}

- (void)removeChangeEvents:(id)a3
{
}

- (void)removeExpiredChangeEvents
{
}

- (void)removeAllChangeEvents
{
}

- (int64_t)spotlightIndexingVersion
{
  uint64_t v6 = 0LL;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000LL;
  uint64_t v9 = 0LL;
  uint64_t database = self->_database;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1001424F8;
  v5[3] = &unk_1006456F8;
  v5[4] = &v6;
  sub_1002CCDBC((uint64_t)database, @"SELECT version FROM index_metadata LIMIT 1", v5);
  int64_t v3 = v7[3];
  _Block_object_dispose(&v6, 8);
  return v3;
}

- (void)updateSpotlightIndexingVersion:(int64_t)a3
{
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1001425E0;
  v6[3] = &unk_100645718;
  v6[4] = a3;
  sub_1002CCDBC((uint64_t)database, @"INSERT INTO index_metadata (version) VALUES (?)", v6);
}

- (int64_t)indexingMetadataVersionForType:(unint64_t)a3
{
  uint64_t v7 = 0LL;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000LL;
  uint64_t v10 = 0LL;
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1001426C4;
  v6[3] = &unk_100645740;
  v6[4] = &v7;
  void v6[5] = a3;
  sub_1002CCDBC((uint64_t)database, @"SELECT version FROM index_fetched_metadata WHERE type = ? LIMIT 1", v6);
  int64_t v4 = v8[3];
  _Block_object_dispose(&v7, 8);
  return v4;
}

- (unint64_t)indexingMetadataStatusForType:(unint64_t)a3
{
  uint64_t v7 = 0LL;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x2020000000LL;
  uint64_t v10 = 0LL;
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1001427F0;
  v6[3] = &unk_100645740;
  v6[4] = &v7;
  void v6[5] = a3;
  sub_1002CCDBC((uint64_t)database, @"SELECT status FROM index_fetched_metadata WHERE type = ? LIMIT 1", v6);
  unint64_t v4 = v8[3];
  _Block_object_dispose(&v7, 8);
  return v4;
}

- (void)updateIndexingMetadataStatus:(unint64_t)a3 version:(int64_t)a4 forType:(unint64_t)a5
{
  uint64_t database = self->_database;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1001428D0;
  v6[3] = &unk_100645760;
  v6[4] = a5;
  void v6[5] = a3;
  void v6[6] = a4;
  sub_1002CCDBC( (uint64_t)database,  @"INSERT OR REPLACE INTO index_fetched_metadata (type, status, version) VALUES (?, ?, ?)",  v6);
}

- (void)markAllIndexedTransactionsForIndexDeletion
{
  sub_1002CCDBC( (uint64_t)self->_database,  @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 WHERE type = ?",  &stru_1006457A0);
}

- (void)resetIndexingItems
{
  sub_1002CCDBC( (uint64_t)self->_database,  @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 WHERE status = ?",  &stru_1006457C0);
}

- (void)resetVerifyingItems
{
  sub_1002CCDBC( (uint64_t)self->_database,  @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 WHERE status = ?",  &stru_1006457E0);
}

- (void)markAllIndexedContentForVerifyingOfType:(unint64_t)a3
{
  uint64_t database = self->_database;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100142AA8;
  v4[3] = &unk_100645718;
  v4[4] = a3;
  sub_1002CCDBC( (uint64_t)database,  @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=? and type=?",  v4);
}

- (void)markAllVerifyingContentForReindexingOfType:(unint64_t)a3
{
  uint64_t database = self->_database;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100142B60;
  v4[3] = &unk_100645718;
  v4[4] = a3;
  sub_1002CCDBC( (uint64_t)database,  @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=? and type=?",  v4);
}

- (void)markAllIndexedContentForReindexingOfType:(unint64_t)a3
{
  uint64_t database = self->_database;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100142C18;
  v4[3] = &unk_100645718;
  v4[4] = a3;
  sub_1002CCDBC( (uint64_t)database,  @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=? and type=?",  v4);
}

- (void)markAllIndexedContentForReindexing
{
  sub_1002CCDBC( (uint64_t)self->_database,  @"UPDATE index_item set status=?, last_modified_date=date('now'), last_error_domain=NULL, last_error_code=NULL, action_try_count=0 where status=?",  &stru_100645800);
}

- (void)resetIndexedContent
{
  uint64_t database = self->_database;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100142D2C;
  v3[3] = &unk_100645828;
  v3[4] = self;
  sub_1002CCC5C((uint64_t)database, v3);
}

- (BOOL)updateIndexerItemWithIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5
{
  return +[SpotlightIndexerItem updateWithIdentifier:type:status:inDatabase:]( &OBJC_CLASS___SpotlightIndexerItem,  "updateWithIdentifier:type:status:inDatabase:",  a3,  a4,  a5,  self->_database);
}

- (void)insertOrUpdateIndexerItemWithIdentifier:(id)a3 domainIdentifier:(id)a4 searchableItemData:(id)a5 type:(unint64_t)a6 status:(unint64_t)a7 error:(id)a8
{
}

- (void)deleteDuplicateIndexerItems
{
}

- (id)indexerItemWithUniqueIdentifier:(id)a3
{
  return +[SpotlightIndexerItem itemWithUniqueIdentifier:inDatabase:]( &OBJC_CLASS___SpotlightIndexerItem,  "itemWithUniqueIdentifier:inDatabase:",  a3,  self->_database);
}

- (void)updateIndexerItemsWithDomainIdentifier:(id)a3 type:(unint64_t)a4 status:(unint64_t)a5 error:(id)a6
{
}

- (id)batchOfActionableIndexerItemsWithCount:(unint64_t)a3
{
  return +[SpotlightIndexerItem batchOfActionableItemsInDatabase:withCount:]( &OBJC_CLASS___SpotlightIndexerItem,  "batchOfActionableItemsInDatabase:withCount:",  self->_database,  a3);
}

- (id)indexerItemCountsOfType:(unint64_t)a3
{
  return +[SpotlightIndexerItem itemCountsOfType:inDatabase:]( &OBJC_CLASS___SpotlightIndexerItem,  "itemCountsOfType:inDatabase:",  a3,  self->_database);
}

- (id)allIndexedItemsOfType:(unint64_t)a3
{
  return +[SpotlightIndexerItem allIndexedItemsOfType:inDatabase:]( &OBJC_CLASS___SpotlightIndexerItem,  "allIndexedItemsOfType:inDatabase:",  a3,  self->_database);
}

- (BOOL)hasFutureActionableIndexerItems
{
  return +[SpotlightIndexerItem hasFutureActionableItemsInDatabase:]( &OBJC_CLASS___SpotlightIndexerItem,  "hasFutureActionableItemsInDatabase:",  self->_database);
}

- (id)transactionSourceIdentifiersForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  if (v4)
  {
    uint64_t database = self->_database;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](self->_secureElement, "secureElementIdentifiers"));
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication paymentApplicationsInDatabase:forPassUniqueIdentifier:secureElementIdentifiers:]( &OBJC_CLASS___PaymentApplication,  "paymentApplicationsInDatabase:forPassUniqueIdentifier:secureElementIdentifiers:",  database,  v4,  v6));

    uint64_t v8 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    id v9 = v7;
    id v10 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v18;
      do
      {
        for (uint64_t i = 0LL; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(*((void *)&v17 + 1) + 8 * (void)i),  "transactionSourceIdentifier",  (void)v17));
          if (v14) {
            -[NSMutableSet addObject:](v8, "addObject:", v14);
          }
        }

        id v11 = [v9 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }

      while (v11);
    }

    id v15 = -[NSMutableSet copy](v8, "copy");
  }

  else
  {
    id v15 = 0LL;
  }

  return v15;
}

- (id)allAssociatedTransactionSourceIdentifiersForPassUniqueIdentifier:(id)a3
{
  id v4 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  v4));
  id v6 = [v5 mutableCopy];

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager associatedAccountIdentifierForPassWithUniqueIdentifier:]( self,  "associatedAccountIdentifierForPassWithUniqueIdentifier:",  v4));
  if (v7)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager accountUsersForAccountWithIdentifier:]( self,  "accountUsersForAccountWithIdentifier:",  v7));
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    id v9 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v18;
      do
      {
        uint64_t v12 = 0LL;
        do
        {
          if (*(void *)v18 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v17 + 1) + 8 * (void)v12) altDSID]);
          id v14 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifierForAccountUserAltDSID:accountIdentifier:]( self,  "transactionSourceIdentifierForAccountUserAltDSID:accountIdentifier:",  v13,  v7));

          if (v14) {
            [v6 addObject:v14];
          }

          uint64_t v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
      }

      while (v10);
    }
  }

  id v15 = [v6 copy];

  return v15;
}

- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3
{
  return -[PDDatabaseManager passUniqueIdentifierForTransactionSourceIdentifier:includingAccountUsers:]( self,  "passUniqueIdentifierForTransactionSourceIdentifier:includingAccountUsers:",  a3,  0LL);
}

- (id)transactionSourceIdentifiersAssociatedWithPassUniqueIdentifier:(id)a3
{
  __int128 v17 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication paymentApplicationsInDatabase:forPass:]( &OBJC_CLASS___PaymentApplication,  "paymentApplicationsInDatabase:forPass:",  self->_database));
  BOOL v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v19;
    do
    {
      id v10 = 0LL;
      do
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t database = self->_database;
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v18 + 1) + 8 * (void)v10) transactionSourceIdentifier]);
        id v13 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  database,  v12));

        id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 identifier]);
        -[NSMutableSet addObject:](v5, "addObject:", v14);

        id v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v8);
  }

  id v15 = -[NSMutableSet copy](v5, "copy");
  return v15;
}

- (id)passUniqueIdentifierForTransactionSourceIdentifier:(id)a3 includingAccountUsers:(BOOL)a4
{
  BOOL v4 = a4;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  v6));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withTransactionSourcePID:]( PaymentApplication,  "anyInDatabase:withTransactionSourcePID:",  self->_database,  [v7 persistentID]));
  uint64_t v9 = v8;
  uint64_t database = self->_database;
  if (v8) {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withPersistentID:]( Pass,  "anyInDatabase:withPersistentID:",  database,  [v8 passPID]));
  }
  else {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withTransactionSourcePID:]( Pass,  "anyInDatabase:withTransactionSourcePID:",  database,  [v7 persistentID]));
  }
  uint64_t v12 = v11;
  id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 uniqueID]);
  if (v13) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = !v4;
  }
  if (!v14)
  {
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withTransactionSourceIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withTransactionSourceIdentifier:",  self->_database,  v6));
    if ([v15 accountType] == (id)2
      && (uint64_t v16 = self->_database,
          __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v15 transactionSourceIdentifier]),
          v18 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( TransactionSource,  "anyInDatabase:withIdentifier:",  v16,  v17)),  id v19 = [v18 type],  v18,  v17,  v19 == (id)2))
    {
      __int128 v20 = self->_database;
      __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v15 accountIdentifier]);
      char v22 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withAssociatedAccountIdentifier:]( &OBJC_CLASS___Pass,  "anyInDatabase:withAssociatedAccountIdentifier:",  v20,  v21));

      id v13 = (void *)objc_claimAutoreleasedReturnValue([v22 uniqueID]);
    }

    else
    {
      id v13 = 0LL;
    }
  }

  return v13;
}

- (id)transactionsForAdjustmentType:(int64_t)a3 limit:(int64_t)a4
{
  return +[PaymentTransaction transactionsForAdjustmentType:limit:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "transactionsForAdjustmentType:limit:inDatabase:",  a3,  a4,  self->_database);
}

- (id)paymentApplicationIdentifierForTransactionSourceIdentifier:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withTransactionSourcePID:]( PaymentApplication,  "anyInDatabase:withTransactionSourcePID:",  self->_database,  [v4 persistentID]));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 applicationIdentifier]);

  return v6;
}

- (id)paymentApplicationForTransactionSourceIdentifier:(id)a3
{
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentApplication anyInDatabase:withTransactionSourcePID:]( PaymentApplication,  "anyInDatabase:withTransactionSourcePID:",  self->_database,  [v4 persistentID]));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 paymentApplication]);

  return v6;
}

- (id)paymentTransactionWithIdentifier:(id)a3
{
  int64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([v3 paymentTransaction]);

  return v4;
}

- (BOOL)transactionSourceExistsWithIdentifier:(id)a3
{
  int64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  unsigned __int8 v4 = [v3 existsInDatabase];

  return v4;
}

- (id)transactionSourceIdentifierForTransactionWithServiceIdentifier:(id)a3 accountIdentifier:(id)a4 accountType:(int64_t)a5
{
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withServiceIdentifier:accountIdentifier:accountType:",  self->_database,  a3,  a4,  a5));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 transactionSourceIdentifier]);

  return v6;
}

- (unint64_t)transactionSourceTypeForTransactionSourceIdentifier:(id)a3
{
  int64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v4 = [v3 type];

  return (unint64_t)v4;
}

- (id)peerPaymentAccountForTransactionSourceIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentAccount anyInDatabase:withTransactionSourcePID:]( PeerPaymentAccount,  "anyInDatabase:withTransactionSourcePID:",  self->_database,  [v4 persistentID]));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 peerPaymentAccount]);

  return v6;
}

- (id)accountUserWithTransactionSourceIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser anyInDatabase:withTransactionSourcePID:]( AccountUser,  "anyInDatabase:withTransactionSourcePID:",  self->_database,  [v4 persistentID]));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 accountUser]);

  return v6;
}

- (id)transactionSourceIdentifierForAccountUserAltDSID:(id)a3 accountIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a4));
  if ([v7 existsInDatabase])
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[AccountUser anyInDatabase:withAltDSID:accountPID:]( AccountUser,  "anyInDatabase:withAltDSID:accountPID:",  self->_database,  v6,  [v7 persistentID]));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 transactionSourceIdentifier]);
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)accountWithTransactionSourceIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[TransactionSource anyInDatabase:withIdentifier:]( &OBJC_CLASS___TransactionSource,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withTransactionSourcePID:]( Account,  "anyInDatabase:withTransactionSourcePID:",  self->_database,  [v4 persistentID]));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 account]);

  return v6;
}

- (id)transactionSourceIdentifierForAccountIdentifier:(id)a3
{
  int64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[Account anyInDatabase:withIdentifier:]( &OBJC_CLASS___Account,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionSourceIdentifier]);

  return v4;
}

- (id)transactionSourceIdentifierForPeerPaymentAccountIdentifier:(id)a3
{
  int64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[PeerPaymentAccount anyInDatabase:withIdentifier:]( &OBJC_CLASS___PeerPaymentAccount,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 transactionSourceIdentifier]);

  return v4;
}

- (id)serviceIdentifierForTransactionIdentifier:(id)a3 accountIdentifier:(id *)a4 accountType:(int64_t *)a5
{
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  self->_database,  a3));
  id v8 = v7;
  if (v7)
  {
    if (a4) {
      *a4 = (id)objc_claimAutoreleasedReturnValue([v7 accountIdentifier]);
    }
    if (a5) {
      *a5 = (int64_t)[v8 accountType];
    }
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 serviceIdentifier]);
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

- (id)broadwayOrSurfTransactionSourceIdentifierForAmbiguousServiceIdentifier:(id)a3 transactionAccountIdentifier:(id *)a4 transactionAccountType:(int64_t *)a5 transactionAltDSID:(id *)a6
{
  id v8 = a3;
  uint64_t v60 = 0LL;
  id v61 = &v60;
  uint64_t v62 = 0x3032000000LL;
  uint64_t v63 = sub_10011BCF0;
  uint64_t v64 = sub_10011BD00;
  id v65 = 0LL;
  uint64_t v56 = 0LL;
  int64_t v57 = &v56;
  uint64_t v58 = 0x2020000000LL;
  uint64_t v59 = 0LL;
  uint64_t v50 = 0LL;
  uint64_t v51 = &v50;
  uint64_t v52 = 0x3032000000LL;
  id v53 = sub_10011BCF0;
  id v54 = sub_10011BD00;
  id v55 = 0LL;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 associatedPassUniqueID]);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  v10));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 anyObject]);

  id v13 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionWithServiceIdentifier:transactionSourceIdentifier:]( self,  "transactionWithServiceIdentifier:transactionSourceIdentifier:",  v8,  v12));
  BOOL v14 = v13;
  if (v13)
  {
    uint64_t v15 = objc_claimAutoreleasedReturnValue([v13 transactionSourceIdentifier]);
    uint64_t v16 = (void *)v61[5];
    void v61[5] = v15;
  }

  if (v61[5])
  {
    id v17 = 0LL;
  }

  else
  {
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager accounts](self, "accounts"));
    id v17 = [v18 countByEnumeratingWithState:&v46 objects:v68 count:16];
    if (v17)
    {
      uint64_t v19 = *(void *)v47;
      while (2)
      {
        for (uint64_t i = 0LL; i != v17; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v47 != v19) {
            objc_enumerationMutation(v18);
          }
          __int128 v21 = *(void **)(*((void *)&v46 + 1) + 8LL * (void)i);
          if ([v21 feature] == (id)2)
          {
            char v22 = (void *)objc_claimAutoreleasedReturnValue([v21 associatedPassUniqueID]);
            uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  v22));
            uint64_t v24 = objc_claimAutoreleasedReturnValue([v23 anyObject]);

            id v25 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionWithServiceIdentifier:transactionSourceIdentifier:]( self,  "transactionWithServiceIdentifier:transactionSourceIdentifier:",  v8,  v24));
            uint64_t v26 = v25;
            if (v25)
            {
              uint64_t v27 = objc_claimAutoreleasedReturnValue([v25 transactionSourceIdentifier]);
              uint64_t v28 = (void *)v61[5];
              void v61[5] = v27;

              uint64_t v29 = objc_claimAutoreleasedReturnValue([v26 accountIdentifier]);
              id v30 = (void *)v51[5];
              v51[5] = v29;

              id v31 = [v26 accountType];
              v57[3] = (uint64_t)v31;
              id v17 = (id)objc_claimAutoreleasedReturnValue([v26 altDSID]);
            }

            else
            {
              id v17 = 0LL;
            }

            uint64_t v12 = (void *)v24;
            goto LABEL_18;
          }
        }

        id v17 = [v18 countByEnumeratingWithState:&v46 objects:v68 count:16];
        if (v17) {
          continue;
        }
        break;
      }
    }

- (id)broadwayOrSurfPassUniqueIdentifierForAmbiguousServiceIdentifier:(id)a3
{
  id v4 = a3;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 associatedPassUniqueID]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  v6));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 anyObject]);

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionWithServiceIdentifier:transactionSourceIdentifier:]( self,  "transactionWithServiceIdentifier:transactionSourceIdentifier:",  v4,  v8));
  if (v9 && (id v10 = v6) != 0LL)
  {
    id v11 = v10;
    id v6 = v10;
    uint64_t v12 = v8;
  }

  else
  {
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    id v13 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager accounts](self, "accounts", 0LL));
    id v14 = [v13 countByEnumeratingWithState:&v27 objects:v33 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v28;
LABEL_6:
      uint64_t v17 = 0LL;
      while (1)
      {
        if (*(void *)v28 != v16) {
          objc_enumerationMutation(v13);
        }
        __int128 v18 = *(void **)(*((void *)&v27 + 1) + 8 * v17);
        if ([v18 feature] == (id)2) {
          break;
        }
        if (v15 == (id)++v17)
        {
          id v15 = [v13 countByEnumeratingWithState:&v27 objects:v33 count:16];
          if (v15) {
            goto LABEL_6;
          }
          goto LABEL_17;
        }
      }

      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 associatedPassUniqueID]);

      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionSourceIdentifiersForPassUniqueIdentifier:]( self,  "transactionSourceIdentifiersForPassUniqueIdentifier:",  v19));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v20 anyObject]);

      uint64_t v21 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager transactionWithServiceIdentifier:transactionSourceIdentifier:]( self,  "transactionWithServiceIdentifier:transactionSourceIdentifier:",  v4,  v12));
      if (!v21)
      {
        id v6 = v19;
        id v8 = v12;
        goto LABEL_17;
      }

      char v22 = (void *)v21;
      id v11 = v19;

      if (v11)
      {
        id v6 = v11;
        goto LABEL_21;
      }

      id v6 = 0LL;
    }

    else
    {
LABEL_17:

      uint64_t v12 = v8;
    }

    uint64_t Object = PKLogFacilityTypeGetObject(9LL);
    uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v32 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Error: could not find the pass unique identifier for the card or peer payment transaction with service identifier %{public}@",  buf,  0xCu);
    }

    id v11 = 0LL;
  }

- (id)peerPaymentTransactionServiceIdentifiersForTransactionSourceIdentifiers:(id)a3 withPeerPaymentSubtype:(int64_t)a4 withTransactionSource:(unint64_t)a5 withBackingData:(unint64_t)a6 startDate:(id)a7 endDate:(id)a8
{
  return +[PaymentTransaction transactionServiceIdentifiersInDatabase:withTransactionType:withPeerPaymentSubtype:forTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:]( &OBJC_CLASS___PaymentTransaction,  "transactionServiceIdentifiersInDatabase:withTransactionType:withPeerPaymentSubtype:forTransactionSourceIdenti fiers:withTransactionSource:withBackingData:startDate:endDate:",  self->_database,  3LL,  a4,  a3,  a5,  a6,  a7,  a8);
}

- (void)insertOrUpdateRegion:(id)a3
{
  id v3 =  +[WorldRegion insertOrUpdateRegion:inDatabase:]( &OBJC_CLASS___WorldRegion,  "insertOrUpdateRegion:inDatabase:",  a3,  self->_database);
}

- (void)updateSingleRegion:(id)a3
{
  id v3 =  +[WorldRegion updateSingleRegion:inDatabase:]( &OBJC_CLASS___WorldRegion,  "updateSingleRegion:inDatabase:",  a3,  self->_database);
}

- (id)worldRegionWithIdentifier:(id)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion regionWithIdentifier:localeIdentifier:inDatabase:]( &OBJC_CLASS___WorldRegion,  "regionWithIdentifier:localeIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (id)regionsMatchingName:(id)a3 types:(id)a4 localeIdentifier:(id)a5
{
  return +[WorldRegion regionsMatchingName:types:localeIdentifier:inDatabase:]( &OBJC_CLASS___WorldRegion,  "regionsMatchingName:types:localeIdentifier:inDatabase:",  a3,  a4,  a5,  self->_database);
}

- (id)regionsOfType:(unint64_t)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion regionsOfType:localeIdentifier:inDatabase:]( &OBJC_CLASS___WorldRegion,  "regionsOfType:localeIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (BOOL)hasMultipleRegionsOfType:(unint64_t)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion hasMultipleRegionsOfType:localeIdentifier:inDatabase:]( &OBJC_CLASS___WorldRegion,  "hasMultipleRegionsOfType:localeIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (id)regionsForTransaction:(id)a3 localeIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([a3 identifier]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v8));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[WorldRegion regionsForTransactionPID:localeIdentifier:inDatabase:]( WorldRegion,  "regionsForTransactionPID:localeIdentifier:inDatabase:",  [v9 persistentID],  v7,  self->_database));

  return v10;
}

- (id)regionsForTransactionPID:(int64_t)a3 localeIdentifier:(id)a4
{
  return +[WorldRegion regionsForTransactionPID:localeIdentifier:inDatabase:]( &OBJC_CLASS___WorldRegion,  "regionsForTransactionPID:localeIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (id)regionsMissingLocalizedContentForLocaleIdentifier:(id)a3
{
  return +[WorldRegion regionsMissingLocalizedContentForLocaleIdentifier:inDatabase:]( &OBJC_CLASS___WorldRegion,  "regionsMissingLocalizedContentForLocaleIdentifier:inDatabase:",  a3,  self->_database);
}

- (BOOL)hasRegionsMissingLocalizedContentForLocaleIdentifier:(id)a3
{
  return +[WorldRegion hasRegionsMissingLocalizedContentForLocaleIdentifier:inDatabase:]( &OBJC_CLASS___WorldRegion,  "hasRegionsMissingLocalizedContentForLocaleIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)lastRegionErrorForTransaction:(id)a3
{
  uint64_t database = self->_database;
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([a3 identifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentTransaction anyInDatabase:withIdentifier:]( &OBJC_CLASS___PaymentTransaction,  "anyInDatabase:withIdentifier:",  database,  v5));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[WorldRegion lastRegionErrorForTransaction:inDatabase:]( &OBJC_CLASS___WorldRegion,  "lastRegionErrorForTransaction:inDatabase:",  v6,  self->_database));

  return v7;
}

- (void)resetCoordinatesForAllRegions
{
}

- (void)deleteAllRegions
{
}

- (void)deleteRegionsWithNoMatchingTransactions
{
}

- (id)dynamicAssociatedDomains
{
  return +[DynamicAssociatedDomain associatedDomainsInDatabase:]( &OBJC_CLASS___DynamicAssociatedDomain,  "associatedDomainsInDatabase:",  self->_database);
}

- (void)insertDynamicAssociatedDomains:(id)a3
{
  uint64_t database = self->_database;
  id v5 = a3;
  +[DynamicAssociatedDomain deleteAssociatedDomainsInDatabase:]( &OBJC_CLASS___DynamicAssociatedDomain,  "deleteAssociatedDomainsInDatabase:",  database);
  +[DynamicAssociatedDomain insertAssociatedDomains:inDatabase:]( &OBJC_CLASS___DynamicAssociatedDomain,  "insertAssociatedDomains:inDatabase:",  v5,  self->_database);
}

- (id)merchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, a3));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[PassAuxiliaryItemMerchant merchantForPassAuxiliaryItemIdentifier:passPersistentID:inDatabase:]( PassAuxiliaryItemMerchant,  "merchantForPassAuxiliaryItemIdentifier:passPersistentID:inDatabase:",  v7,  [v8 persistentID],  self->_database));

  return v9;
}

- (id)auxiliaryItemIdentifiersForPassUniqueIdentifier:(id)a3
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[PassAuxiliaryItemMerchant itemIdentifiersForPassPersisentID:inDatabase:]( PassAuxiliaryItemMerchant,  "itemIdentifiersForPassPersisentID:inDatabase:",  [v4 persistentID],  self->_database));

  return v5;
}

- (void)insertMerchant:(id)a3 forPassUniqueIdentifier:(id)a4 auxiliaryPassInformationItemIdentifier:(id)a5
{
  id v16 = a5;
  uint64_t database = self->_database;
  id v9 = a3;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, a4));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 mapsBrand]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v9 mapsMerchant]);

  if (!v11)
  {
    id v13 = 0LL;
    if (v12) {
      goto LABEL_3;
    }
LABEL_5:
    id v14 = 0LL;
    goto LABEL_6;
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[MapsBrand insertMapsBrand:inDatabase:]( &OBJC_CLASS___MapsBrand,  "insertMapsBrand:inDatabase:",  v11,  self->_database));
  if (!v12) {
    goto LABEL_5;
  }
LABEL_3:
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[MapsMerchant insertMapsMerchant:inDatabase:]( &OBJC_CLASS___MapsMerchant,  "insertMapsMerchant:inDatabase:",  v12,  self->_database));
LABEL_6:
  id v15 =  +[PassAuxiliaryItemMerchant insertPassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:mapsBrandPersistentID:mapsMerchantPersistentID:inDatabase:]( PassAuxiliaryItemMerchant,  "insertPassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:mapsBrandPersistentID:mapsMerchantPersiste ntID:inDatabase:",  v16,  [v10 persistentID],  objc_msgSend(v13, "persistentID"),  objc_msgSend(v14, "persistentID"),  self->_database);
}

- (void)deleteMerchantForPassUniqueIdentifier:(id)a3 auxiliaryPassInformationItemIdentifier:(id)a4
{
  uint64_t database = self->_database;
  id v7 = a4;
  id v8 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", database, a3));
  +[PassAuxiliaryItemMerchant deletePassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:inDatabase:]( PassAuxiliaryItemMerchant,  "deletePassAuxiliaryItemMerchantForItemIdentifier:passPersistentID:inDatabase:",  v7,  [v8 persistentID],  self->_database);
}

- (void)deleteAllPassAuxiliaryItemMerchantsForPassUniqueIdentifier:(id)a3
{
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[Pass anyInDatabase:withUniqueID:](&OBJC_CLASS___Pass, "anyInDatabase:withUniqueID:", self->_database, a3));
  +[PassAuxiliaryItemMerchant deleteAllPassAuxiliaryItemMerchantsForPassPersisentID:inDatabase:]( PassAuxiliaryItemMerchant,  "deleteAllPassAuxiliaryItemMerchantsForPassPersisentID:inDatabase:",  [v4 persistentID],  self->_database);
}

- (id)fetchDeviceEnviromentForClient:(int64_t)a3 andCompareToCurrentEnvironment:(id)a4 didChange:(BOOL *)a5
{
  id v8 = a4;
  uint64_t v18 = 0LL;
  uint64_t v19 = &v18;
  uint64_t v20 = 0x3032000000LL;
  uint64_t v21 = sub_10011BCF0;
  char v22 = sub_10011BD00;
  id v23 = 0LL;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_1001449E4;
  v13[3] = &unk_100645878;
  id v15 = &v18;
  int64_t v16 = a3;
  void v13[4] = self;
  uint64_t v17 = a5;
  id v10 = v8;
  id v14 = v10;
  sub_1002CCC5C((uint64_t)database, v13);
  id v11 = (id)v19[5];

  _Block_object_dispose(&v18, 8);
  return v11;
}

- (void)updateDeviceEnvironment:(id)a3 forClient:(int64_t)a4
{
  id v4 =  +[DeviceEnvironment insertOrUpdateEnvironment:forClient:inDatabase:]( &OBJC_CLASS___DeviceEnvironment,  "insertOrUpdateEnvironment:forClient:inDatabase:",  a3,  a4,  self->_database);
}

- (void)updateNFCPayloadState:(unint64_t)a3 forPassUniqueIdentifier:(id)a4 didChange:(BOOL *)a5
{
  id v8 = a4;
  uint64_t database = self->_database;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_100144B20;
  void v11[3] = &unk_100642030;
  void v11[4] = self;
  id v12 = v8;
  unint64_t v13 = a3;
  id v14 = a5;
  id v10 = v8;
  sub_1002CCC5C((uint64_t)database, v11);
}

- (id)paymentOfferCatalog
{
  return +[PaymentOfferCatalog catalogInDatabase:]( &OBJC_CLASS___PaymentOfferCatalog,  "catalogInDatabase:",  self->_database);
}

- (void)insertOrUpdatePaymentOfferCatalog:(id)a3
{
}

- (void)removePaymentOfferCatalog
{
}

- (id)issuerInstallmentCriteriaIdentifierForFpanIdentifier:(id)a3
{
  return +[PaymentOfferInstallmentCriteria criteriaIdentifierForFpanIdentifier:inDatabase:]( &OBJC_CLASS___PaymentOfferInstallmentCriteria,  "criteriaIdentifierForFpanIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)passEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[PassEndpointMetadata anyInDatabase:passUniqueID:type:]( &OBJC_CLASS___PassEndpointMetadata,  "anyInDatabase:passUniqueID:type:",  self->_database,  a3,  a4));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 endpointMetadata]);

  return v5;
}

- (id)insertOrUpdatePassEndpointMetadata:(id)a3
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[PassEndpointMetadata insertOrUpdateWithEndpointMetadata:inDatabase:]( &OBJC_CLASS___PassEndpointMetadata,  "insertOrUpdateWithEndpointMetadata:inDatabase:",  a3,  self->_database));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 endpointMetadata]);

  return v4;
}

- (void)deletePassEndpointMetadataForPassUniqueID:(id)a3 type:(unint64_t)a4
{
}

- (id)anyEligiblePaymentOfferRewardsCriteriaForPass:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 passTypeIdentifier]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 serialNumber]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PaymentOfferRewardsCriteria anyEligiblePaymentOfferRewardsCriteriaInDatabase:withPassTypeIdentifier:passSerialNumber:]( &OBJC_CLASS___PaymentOfferRewardsCriteria,  "anyEligiblePaymentOfferRewardsCriteriaInDatabase:withPassTypeIdentifier:passSerialNumber:",  self->_database,  v5,  v6));
  return v7;
}

- (id)paymentRewardsBalanceWithIdentifier:(id)a3
{
  return +[PaymentRewardsBalance rewardsBalancesWithIdentifier:inDatabase:]( &OBJC_CLASS___PaymentRewardsBalance,  "rewardsBalancesWithIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)paymentRewardsBalancesForPassUniqueIdentifier:(id)a3
{
  return +[PaymentRewardsBalance rewardsBalancesForPassUniqueIdentifier:inDatabase:]( &OBJC_CLASS___PaymentRewardsBalance,  "rewardsBalancesForPassUniqueIdentifier:inDatabase:",  a3,  self->_database);
}

- (void)insertOrUpdatePaymentRewardsBalances:(id)a3 withPassUniqueIdentifier:(id)a4
{
  id v4 =  +[PaymentRewardsBalance insertOrUpdateRewardsBalances:withPassUniqueIdentifier:inDatabase:]( &OBJC_CLASS___PaymentRewardsBalance,  "insertOrUpdateRewardsBalances:withPassUniqueIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (void)deletePaymentRewardsBalancesForPassUniqueIdentifier:(id)a3
{
}

- (void)insertOrUpdatePaymentRewardsRedemption:(id)a3 withPassUniqueIdentifier:(id)a4
{
  id v4 =  +[PaymentRewardsRedemption insertOrUpdateRewardsRedemption:withPassUniqueIdentifier:inDatabase:]( &OBJC_CLASS___PaymentRewardsRedemption,  "insertOrUpdateRewardsRedemption:withPassUniqueIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (void)deletePaymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3
{
}

- (id)paymentRewardsRedemptionWithPaymentHash:(id)a3
{
  return +[PaymentRewardsRedemption rewardsRedemptionWithPaymentHash:inDatabase:]( &OBJC_CLASS___PaymentRewardsRedemption,  "rewardsRedemptionWithPaymentHash:inDatabase:",  a3,  self->_database);
}

- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 limit:(int64_t)a4
{
  return +[PaymentRewardsRedemption rewardsRedemptionsForPassUniqueIdentifier:limit:inDatabase:]( &OBJC_CLASS___PaymentRewardsRedemption,  "rewardsRedemptionsForPassUniqueIdentifier:limit:inDatabase:",  a3,  a4,  self->_database);
}

- (id)paymentRewardsRedemptionsForPassUniqueIdentifier:(id)a3 paymentHashes:(id)a4
{
  return +[PaymentRewardsRedemption rewardsRedemptionsForPassUniqueIdentifier:paymentHashes:inDatabase:]( &OBJC_CLASS___PaymentRewardsRedemption,  "rewardsRedemptionsForPassUniqueIdentifier:paymentHashes:inDatabase:",  a3,  a4,  self->_database);
}

- (PDDatabaseManagerDelegate)delegate
{
  return (PDDatabaseManagerDelegate *)objc_loadWeakRetained((id *)&self->_delegate);
}

- (void)setDelegate:(id)a3
{
}

- (PDDatabaseManagerWebServicesDelegate)webServicesDelegate
{
  return (PDDatabaseManagerWebServicesDelegate *)objc_loadWeakRetained((id *)&self->_webServicesDelegate);
}

- (void)setWebServicesDelegate:(id)a3
{
}

- (PKSecureElement)secureElement
{
  return self->_secureElement;
}

- (void)setSecureElement:(id)a3
{
}

- (PDCloudStoreNotificationCoordinator)cloudStoreCoordinator
{
  return (PDCloudStoreNotificationCoordinator *)objc_loadWeakRetained((id *)&self->_cloudStoreCoordinator);
}

- (void)setCloudStoreCoordinator:(id)a3
{
}

- (PDObjectSettingsManager)objectSettingsManager
{
  return self->_objectSettingsManager;
}

- (void)setObjectSettingsManager:(id)a3
{
}

- (PDDatabaseManagerPaymentServicesDelegate)paymentServicesDelegate
{
  return (PDDatabaseManagerPaymentServicesDelegate *)objc_loadWeakRetained((id *)&self->_paymentServicesDelegate);
}

- (void)setPaymentServicesDelegate:(id)a3
{
}

- (PDDatabaseManagerNotificationServicesDelegate)notificationServicesDelegate
{
  return (PDDatabaseManagerNotificationServicesDelegate *)objc_loadWeakRetained((id *)&self->_notificationServicesDelegate);
}

- (void)setNotificationServicesDelegate:(id)a3
{
}

- (BOOL)shouldSyncTransactionsToCloudStore
{
  return self->_shouldSyncTransactionsToCloudStore;
}

- (void)setShouldSyncTransactionsToCloudStore:(BOOL)a3
{
  self->_shouldSyncTransactionsToCloudStore = a3;
}

- (void).cxx_destruct
{
}

- (void)fieldMetadataForFieldWithProperties:(id)a3 withExpressPassManager:(id)a4 completion:(id)a5
{
  id v7 = a3;
  id v115 = a4;
  id v8 = a5;
  id v118 = v7;
  if (v8)
  {
    id v114 = v8;
    id v9 = [v7 terminalType];
    uint64_t v189 = 0LL;
    id v190 = &v189;
    uint64_t v191 = 0x3032000000LL;
    __int128 v192 = sub_100169B54;
    __int128 v193 = sub_100169B64;
    id v194 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v185 = 0LL;
    uint64_t v186 = &v185;
    uint64_t v187 = 0x2020000000LL;
    char v188 = 0;
    uint64_t v181 = 0LL;
    id v182 = &v181;
    uint64_t v183 = 0x2020000000LL;
    char v184 = 0;
    uint64_t v10 = PDDefaultPaymentPassUniqueIdentifier();
    uint64_t v111 = (void *)objc_claimAutoreleasedReturnValue(v10);
    id v117 = objc_alloc_init(&OBJC_CLASS___PKAsyncUnaryOperationComposer);
    unsigned __int8 v112 = -[PDDatabaseManager shouldIgnoreFieldWithProperties:](self, "shouldIgnoreFieldWithProperties:", v7);
    if (v9 == (id)4)
    {
      __int128 v157 = 0u;
      __int128 v158 = 0u;
      __int128 v155 = 0u;
      __int128 v156 = 0u;
      id v12 = (id)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager passesForPaymentTypes:]( self,  "passesForPaymentTypes:",  &off_100690FE0));
      id v13 = [v12 countByEnumeratingWithState:&v155 objects:v203 count:16];
      if (v13)
      {
        uint64_t v14 = *(void *)v156;
        do
        {
          for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v156 != v14) {
              objc_enumerationMutation(v12);
            }
            int64_t v16 = *(void **)(*((void *)&v155 + 1) + 8LL * (void)i);
            if ([v16 cardType] == (id)4)
            {
              uint64_t v17 = (void *)v190[5];
              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v16 uniqueID]);
              [v17 addObject:v18];
            }
          }

          id v13 = [v12 countByEnumeratingWithState:&v155 objects:v203 count:16];
        }

        while (v13);
      }

- (BOOL)shouldIgnoreFieldWithProperties:(id)a3
{
  id v3 = a3;
  if (([v3 technology] & 8) == 0
    || (unint64_t v5 = (unint64_t)[v3 terminalType], v5 > 5)
    || ((1LL << v5) & 0x16) != 0)
  {
LABEL_6:
    BOOL v4 = 0;
    goto LABEL_7;
  }

  if (((1LL << v5) & 0x21) == 0)
  {
    if ([v3 accessTerminalSubtype] == (id)2)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 credentialIdentifier]);
      BOOL v4 = v7 == 0LL;

      goto LABEL_7;
    }

    goto LABEL_6;
  }

- (id)_readerIDPriorityForPasses:(id)a3 readerID:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (!v6)
  {
    id v26 = 0LL;
    goto LABEL_41;
  }

  __int128 v28 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  id obj = v5;
  id v33 = [obj countByEnumeratingWithState:&v54 objects:v61 count:16];
  if (!v33) {
    goto LABEL_39;
  }
  uint64_t v30 = *(void *)v55;
  id v31 = v5;
  do
  {
    uint64_t v7 = 0LL;
    do
    {
      if (*(void *)v55 != v30) {
        objc_enumerationMutation(obj);
      }
      uint64_t v34 = v7;
      id v8 = *(void **)(*((void *)&v54 + 1) + 8 * v7);
      __int128 v50 = 0u;
      __int128 v51 = 0u;
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "deviceContactlessPaymentApplications", v28));
      id v37 = [v9 countByEnumeratingWithState:&v50 objects:v60 count:16];
      if (!v37) {
        goto LABEL_36;
      }
      id v32 = v8;
      id v35 = v9;
      uint64_t v36 = *(void *)v51;
      unint64_t v10 = -1LL;
      do
      {
        uint64_t v11 = 0LL;
        do
        {
          if (*(void *)v51 != v36) {
            objc_enumerationMutation(v35);
          }
          uint64_t v38 = v11;
          id v12 = *(void **)(*((void *)&v50 + 1) + 8 * v11);
          __int128 v46 = 0u;
          __int128 v47 = 0u;
          __int128 v48 = 0u;
          __int128 v49 = 0u;
          id v39 = (id)objc_claimAutoreleasedReturnValue([v12 automaticSelectionCriteria]);
          id v41 = [v39 countByEnumeratingWithState:&v46 objects:v59 count:16];
          if (v41)
          {
            uint64_t v40 = *(void *)v47;
            while (2)
            {
              for (uint64_t i = 0LL; i != v41; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v47 != v40) {
                  objc_enumerationMutation(v39);
                }
                uint64_t v14 = *(void **)(*((void *)&v46 + 1) + 8LL * (void)i);
                id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 readerIDs]);
                unsigned __int8 v16 = [v15 containsObject:v6];

                if ((v16 & 1) != 0)
                {
                  unint64_t v10 = 0LL;
                  goto LABEL_32;
                }

                __int128 v44 = 0u;
                __int128 v45 = 0u;
                __int128 v42 = 0u;
                __int128 v43 = 0u;
                uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v14 associatedReaderIDs]);
                id v18 = [v17 countByEnumeratingWithState:&v42 objects:v58 count:16];
                if (v18)
                {
                  id v19 = v18;
                  uint64_t v20 = *(void *)v43;
                  do
                  {
                    for (uint64_t j = 0LL; j != v19; uint64_t j = (char *)j + 1)
                    {
                      if (*(void *)v43 != v20) {
                        objc_enumerationMutation(v17);
                      }
                      char v22 = *(void **)(*((void *)&v42 + 1) + 8LL * (void)j);
                      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 readerID]);
                      int v24 = PKEqualObjects(v23, v6);
                    }

                    id v19 = [v17 countByEnumeratingWithState:&v42 objects:v58 count:16];
                  }

                  while (v19);
                }
              }

              id v41 = [v39 countByEnumeratingWithState:&v46 objects:v59 count:16];
              if (v41) {
                continue;
              }
              break;
            }
          }

- (BOOL)insertSharingEndpoint:(id)a3
{
  return +[SharingChannelEndpoint insert:inDatabase:]( &OBJC_CLASS___SharingChannelEndpoint,  "insert:inDatabase:",  a3,  self->_database);
}

- (id)sharingEndpoints
{
  return +[SharingChannelEndpoint endpointsInDatabase:]( &OBJC_CLASS___SharingChannelEndpoint,  "endpointsInDatabase:",  self->_database);
}

- (id)sharingEndpointsOfType:(unint64_t)a3
{
  return +[SharingChannelEndpoint endpointsInDatabase:ofType:]( &OBJC_CLASS___SharingChannelEndpoint,  "endpointsInDatabase:ofType:",  self->_database,  a3);
}

- (id)sharingEndpointsWithOutstandingMessages
{
  return +[SharingChannelEndpoint endpointsWithOutstandingMessagesInDatabase:]( &OBJC_CLASS___SharingChannelEndpoint,  "endpointsWithOutstandingMessagesInDatabase:",  self->_database);
}

- (id)sharingEndpointForTransportIdentifier:(id)a3
{
  return +[SharingChannelEndpoint sharingEndpointForTransportIdentifier:inDatabase:]( &OBJC_CLASS___SharingChannelEndpoint,  "sharingEndpointForTransportIdentifier:inDatabase:",  a3,  self->_database);
}

- (BOOL)deleteSharingEndpoint:(id)a3
{
  return +[SharingChannelEndpoint deleteEndpoint:inDatabase:]( &OBJC_CLASS___SharingChannelEndpoint,  "deleteEndpoint:inDatabase:",  a3,  self->_database);
}

- (BOOL)deleteSharingEndpointForTransportIdentifier:(id)a3
{
  return +[SharingChannelEndpoint deleteEndpointForTransportIdentifier:inDatabase:]( &OBJC_CLASS___SharingChannelEndpoint,  "deleteEndpointForTransportIdentifier:inDatabase:",  a3,  self->_database);
}

- (BOOL)activeExternalPassSharesExist
{
  return +[PassShare activeExternalPassSharesInDatabase:]( &OBJC_CLASS___PassShare,  "activeExternalPassSharesInDatabase:",  self->_database);
}

- (BOOL)externalPassSharesExistForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1001CA320((uint64_t)self, a3);
  return +[PassShare externalPassSharesForPassPID:inDatabase:]( &OBJC_CLASS___PassShare,  "externalPassSharesForPassPID:inDatabase:",  v4,  self->_database);
}

- (id)passSharesForPassUniqueIdentifier:(id)a3
{
  return +[PassShare passSharesForPassPID:inDatabase:]( &OBJC_CLASS___PassShare,  "passSharesForPassPID:inDatabase:",  sub_1001CA320((uint64_t)self, a3),  self->_database);
}

- (BOOL)hasSharesForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1001CA320((uint64_t)self, a3);
  return +[PassShare passSharesExistForPassPID:inDatabase:]( &OBJC_CLASS___PassShare,  "passSharesExistForPassPID:inDatabase:",  v4,  self->_database);
}

- (id)passSharesForSubcredentialIdentifier:(id)a3
{
  return +[PassShare passSharesForSubcredentialIdentifier:inDatabase:]( &OBJC_CLASS___PassShare,  "passSharesForSubcredentialIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)passSharesWithNoPass
{
  return +[PassShare passSharesForPassPID:inDatabase:]( &OBJC_CLASS___PassShare,  "passSharesForPassPID:inDatabase:",  0LL,  self->_database);
}

- (id)passShareForPassUniqueIdentifier:(id)a3 shareIdentifier:(id)a4
{
  id v6 = a4;
  id v7 = +[PassShare passShareForForPassPID:shareIdentifier:inDatabase:]( &OBJC_CLASS___PassShare,  "passShareForForPassPID:shareIdentifier:inDatabase:",  sub_1001CA320((uint64_t)self, a3),  v6,  self->_database);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  return v8;
}

- (id)passShareForCredentialShareIdentifier:(id)a3
{
  return +[PassShare passShareForCredentialShareIdentifier:inDatabase:]( &OBJC_CLASS___PassShare,  "passShareForCredentialShareIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)passShareForTransportIdentifier:(id)a3
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[PassCredentialShare passCredentialShareForTransportIdentifier:inDatabase:]( &OBJC_CLASS___PassCredentialShare,  "passCredentialShareForTransportIdentifier:inDatabase:",  a3,  self->_database));
  id v5 = v4;
  if (v4)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 identifier]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[PassShare passShareForCredentialShareIdentifier:inDatabase:]( &OBJC_CLASS___PassShare,  "passShareForCredentialShareIdentifier:inDatabase:",  v6,  self->_database));
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

- (id)passShareForIdentifier:(id)a3
{
  return +[PassShare passShareForIdentifier:inDatabase:]( &OBJC_CLASS___PassShare,  "passShareForIdentifier:inDatabase:",  a3,  self->_database);
}

- (void)updatePassSharesForPassUniqueIdentifier:(id)a3 passShares:(id)a4
{
  id v6 = a4;
  +[PassShare insertOrUpdatePassShares:forPassPID:inDatabase:]( &OBJC_CLASS___PassShare,  "insertOrUpdatePassShares:forPassPID:inDatabase:",  v6,  sub_1001CA320((uint64_t)self, a3),  self->_database);
}

- (void)deletePassShareWithIdentifier:(id)a3
{
}

- (void)addPassShare:(id)a3 forPassUniqueIdentifier:(id)a4
{
  id v6 = a3;
  +[PassShare addPassShare:forPassPID:inDatabase:]( &OBJC_CLASS___PassShare,  "addPassShare:forPassPID:inDatabase:",  v6,  sub_1001CA320((uint64_t)self, a4),  self->_database);
}

- (BOOL)deletePassCredentialShareForIdentifier:(id)a3
{
  return +[PassCredentialShare deletePassCredentialShareForIdentifier:inDatabase:]( &OBJC_CLASS___PassCredentialShare,  "deletePassCredentialShareForIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)passCredentialShareForIdentifier:(id)a3 passUniqueIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[PassShare passSharesPIDsForPassPID:inDatabase:]( &OBJC_CLASS___PassShare,  "passSharesPIDsForPassPID:inDatabase:",  sub_1001CA320((uint64_t)self, a4),  self->_database);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  if (v8) {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PassCredentialShare passCredentialShareForIdentifier:sharePIDs:inDatabase:]( &OBJC_CLASS___PassCredentialShare,  "passCredentialShareForIdentifier:sharePIDs:inDatabase:",  v6,  v8,  self->_database));
  }
  else {
    id v9 = 0LL;
  }

  return v9;
}

- (id)updatePassCredentialShareIdentifier:(id)a3 updatedStatus:(unint64_t)a4 updatedIdentifier:(id)a5
{
  id v8 = a5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[PassCredentialShare dbPassCredentialShareForCredentialShareIdentifier:inDatabase:]( &OBJC_CLASS___PassCredentialShare,  "dbPassCredentialShareForCredentialShareIdentifier:inDatabase:",  a3,  self->_database));
  unint64_t v10 = v9;
  if (v9)
  {
    [v9 setIdentifier:v8];
    [v10 setStatus:a4];
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 passCredentialShare]);
  }

  else
  {
    uint64_t v11 = 0LL;
  }

  return v11;
}

- (id)passIdentifierForPassShareIdentifier:(id)a3
{
  id v3 = -[SQLiteEntity initWithPersistentID:inDatabase:]( objc_alloc(&OBJC_CLASS___Pass),  "initWithPersistentID:inDatabase:",  +[PassShare passPIDForShareIdentifier:inDatabase:]( &OBJC_CLASS___PassShare,  "passPIDForShareIdentifier:inDatabase:",  a3,  self->_database),  self->_database);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v3, "valueForProperty:", @"unique_id"));

  return v4;
}

- (void)migrateCarKeySharesForPass:(id)a3
{
  id v3 = PDSharesFromLegacyCarKeyTables(a3, self->_database);
}

- (id)passEntitlementsForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1001CA320((uint64_t)self, a3);
  return +[PassEntitlement passEntitlementsForPassPID:inDatabase:]( &OBJC_CLASS___PassEntitlement,  "passEntitlementsForPassPID:inDatabase:",  v4,  self->_database);
}

- (id)passEntitlementForIdentifier:(id)a3 passIdentifier:(id)a4
{
  id v6 = a3;
  id v7 = +[PassEntitlement passEntitlementForIdentifier:passPID:inDatabase:]( &OBJC_CLASS___PassEntitlement,  "passEntitlementForIdentifier:passPID:inDatabase:",  v6,  sub_1001CA320((uint64_t)self, a4),  self->_database);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  return v8;
}

- (BOOL)hasShareablePassEntitlementsForPassUniqueIdentifier:(id)a3
{
  uint64_t v4 = sub_1001CA320((uint64_t)self, a3);
  return +[PassEntitlement hasShareablePassEntitlementsForPassPID:inDatabase:]( &OBJC_CLASS___PassEntitlement,  "hasShareablePassEntitlementsForPassPID:inDatabase:",  v4,  self->_database);
}

- (id)allOutstandingSharingMessages
{
  return +[SharingMessage allOutstandingSharingMessagesInDatabase:]( &OBJC_CLASS___SharingMessage,  "allOutstandingSharingMessagesInDatabase:",  self->_database);
}

- (BOOL)hasSharingMessage:(id)a3 transportIdentifier:(id)a4
{
  return +[SharingMessage hasSharingMessage:transportIdentifier:inDatabase:]( &OBJC_CLASS___SharingMessage,  "hasSharingMessage:transportIdentifier:inDatabase:",  a3,  a4,  self->_database);
}

- (id)sharingMessagesForTransportIdentifier:(id)a3
{
  return +[SharingMessage sharingMessagesForTransportIdentifier:inDatabase:]( &OBJC_CLASS___SharingMessage,  "sharingMessagesForTransportIdentifier:inDatabase:",  a3,  self->_database);
}

- (id)sharingMessagesForTransportIdentifier:(id)a3 newerThanDate:(id)a4
{
  return +[SharingMessage sharingMessagesForTransportIdentifier:newerThanDate:inDatabase:]( &OBJC_CLASS___SharingMessage,  "sharingMessagesForTransportIdentifier:newerThanDate:inDatabase:",  a3,  a4,  self->_database);
}

- (void)deleteSharingMessageForIdentifier:(id)a3
{
}

- (void)deleteSharingMessagesForTransportIdentifier:(id)a3
{
}

- (void)deleteSharingMessagesOlderThan:(id)a3
{
}

- (void)insertOrUpdateSharingMessages:(id)a3 storePayloads:(BOOL)a4 transportIdentifier:(id)a5
{
}

- (id)transportIdentifierForSharingMessage:(id)a3
{
  return +[SharingMessage transportIdentifierForSharingMessage:inDatabase:]( &OBJC_CLASS___SharingMessage,  "transportIdentifierForSharingMessage:inDatabase:",  a3,  self->_database);
}

- (unint64_t)createSchemaInDatabase:(id)a3
{
  id v4 = a3;
  sub_1002CCA50((BOOL)v4, @"PRAGMA foreign_keys = ON;");
  uint64_t v5 = sub_1002CD134((uint64_t)v4);
  if (v5 < 1)
  {
    if (sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass (pid INTEGER, unique_id TEXT NOT NULL, pass_type_pid INTEGER NOT NULL, serial_number TEXT NOT NULL, sequence_counter INTEGER, organization_name TEXT, provisioning_credential_hash TEXT, relevant_date INTEGER, expiration_date INTEGER, signing_date INTEGER, voided INTEGER, user_info BLOB, template INTEGER, background_color TEXT, secondary_background_color TEXT, foreground_color TEXT, label_color TEXT, strip_color TEXT, tall_code INTEGER, has_background_image INTEGER, has_strip_image INTEGER, manifest_hash BLOB, web_service_pid INTEGER, push_registration_status INTEGER, push_registration_date INTEGER, authentication_token TEXT, last_modified_tag TEXT, ingested_date INTEGER, modified_date INTEGER, modified_source INTEGER, grouping_id TEXT, group_pid INTEGER, revoked INTEGER, share_count INTEGER, pass_transaction_service_pid INTEGER, pass_message_service_pid INTEGER, pass_flavor INTEGER, card_type INTEGER, primary_account_identifier TEXT, primary_account_suffix TEXT, sanitized_pan TEXT, sharing_method INTEGER, sharing_url TEXT, sharing_text TEXT, supports_dpan_notifications INTEGER, supports_fpan_notifications INTEGER, supports_default_card_selection INTEGER, is_shell_pass INTEGER, supports_serial_number_based_provisioning INTEGER, requires_transfer_serial_number_based_provisioning INTEGER, has_stored_value INTEGER, contactless_activation_grouping_type INTEGER, pass_default_payment_application_pid INTEGER, cobranded INTEGER, low_balance_reminder_amount INTEGER, low_balance_reminder_currency TEXT, commute_plan_renewal_reminder_time_interval INTEGER, issuer_country_code TEXT, has_associated_peer_payment_account INTEGER, is_cloud_kit_archived INTEGER,cloud_kit_metadata BLOB,is_cloud_kit_securely_archived INTEGER,cloud_kit_secure_metadata BLOB,a TEXT,b INTEGER, c TEXT, transaction_source_pid INTEGER, d TEXT, e TEXT, mute_ready_for_use_notification INTEGER DEFAULT 0, live_render_background_type TEXT, f TEXT, g TEXT, shipping_address_seed TEXT, supports_issuer_binding INTEGER DEFAULT 0, original_provisioning_date INTEGER, live_rendering_requires_enablement INTEGER, transfer_url TEXT, sell_url TEXT, bag_policy_url TEXT, order_food_url TEXT, transit_information_url TEXT, parking_information_url TEXT, directions_information_url TEXT, merchandise_url TEXT, accessibility_url TEXT, purchase_parking_url TEXT, add_on_url TEXT, contact_venue_phone_number TEXT, contact_venue_email TEXT, contact_venue_website TEXT, supports_automatic_foreground_vibrancy INTEGER, supports_automatic_label_vibrancy INTEGER, footer_background_color TEXT, suppress_header_darkening INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_flavor_index ON pass (pass_flavor);")
      && sub_1002CCA50((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_unique_id_index ON pass (unique_id);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS location_source (pid INTEGER, url TEXT NOT NULL, type INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_location_source (pid INTEGER, pass_pid INTEGER, location_source_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS pass_location_source_index ON pass_location_source (location_source_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS location (pid INTEGER, latitude REAL, longitude REAL, max_distance REAL, altitude REAL, name TEXT, relevant_text TEXT, location_source_pid INTEGER NOT NULL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS location_source_index ON location (location_source_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE VIRTUAL TABLE location_index USING rtree(location_pid INTEGER, min_lat REAL, max_lat REAL, min_long REAL, max_long REAL);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS beacon (pid INTEGER, proximity_uuid TEXT, major REAL, minor REAL, name TEXT, relevant_text TEXT, pass_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS web_service (pid INTEGER, pass_type_pid INTEGER NOT NULL, service_url TEXT NOT NULL, push_token TEXT, device_identifier TEXT, last_updated_tag TEXT, tag_last_update_date INTEGER, last_deletion_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_type (pid INTEGER, identifier TEXT NOT NULL, identifier_hash TEXT, team_identifier TEXT NOT NULL, last_push_date INTEGER, last_update_date INTEGER, push_frequency_score REAL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS pass_type_identifier_hash_index ON pass_type (identifier_hash);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_group (pid INTEGER, group_order INTEGER, pass_type_id TEXT, pass_style INTEGER, grouping_id TEXT, minimum_date INTEGER, maximum_date INTEGER, ingested_date INTEGER, nfc_enabled INTEGER, internal_group_order BLOB,PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_application (pid INTEGER, transaction_source_pid INTEGER, seid TEXT, aid TEXT, dpan_id TEXT, dpan_suffix TEXT, sanitized_dpan TEXT, fpan_id TEXT, fpan_suffix TEXT, state INTEGER, suspended_reason TEXT, supports_contactless_payment INTEGER, supports_service_mode INTEGER, supports_in_app_payment INTEGER, supports_optional_authentication INTEGER, applet_data_format TEXT, applet_currency_code TEXT, payment_network_identifier INTEGER, pass_pid INTEGER, in_app_pin_required_amount INTEGER, in_app_pin_required_currency TEXT, display_name TEXT, auxiliary_application INTEGER,payment_type INTEGER, auxiliary_payment_type INTEGER, requires_deferred_authorization INTEGER, contactless_priority INTEGER, in_app_priority INTEGER, supports_instant_funds_in INTEGER, funding_source_payment_type INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i TEXT, j INTEGER, k BOOL DEFAULT 0, l TEXT, m INTEGER, n INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_application_merchant_support (pid INTEGER, payment_application_pid INTEGER NOT NULL, merchant_country_code TEXT, supported INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_express_mode (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE, express_mode TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion (pid INTEGER, payment_application_pid INTEGER, type TEXT, mask BLOB, supports_express INTEGER, supports_in_session_express INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_tci (pid INTEGER, is_primary INTEGER, payment_automatic_selection_criterion_pid INTEGER, tci BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_reader_id (pid INTEGER, payment_automatic_selection_criterion_pid INTEGER, reader_id BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction (pid INTEGER, source_pid INTEGER, archive_pid INTEGER, identifier TEXT, service_identifier TEXT, payment_hash TEXT, payment_hash_component_1 TEXT, payment_hash_component_2 TEXT, currency_code TEXT, amount INTEGER, subtotal_amount INTEGER, locality TEXT, administrative_area TEXT, transaction_date INTEGER  NOT NULL, transaction_status_changed_date INTEGER, location_date INTEGER, location_latitude REAL, location_longitude REAL, location_altitude REAL, location_horizontal_accuracy REAL, location_vertical_accuracy REAL, start_station_code BLOB, start_station TEXT, start_station_latitude REAL, start_station_longitude REAL, end_station_code BLOB, end_station TEXT, end_station_latitude REAL, end_station_longitude REAL, transaction_status INTEGER, transaction_type INTEGER, transit_type INTEGER, transit_modifiers INTEGER, en_route INTEGER, station_code_provider TEXT, city_code INTEGER, technology_type INTEGER, transaction_source INTEGER, requires_location INTEGER, has_notification_service_data INTEGER, processed_for_location INTEGER, processed_for_merchant_cleanup INTEGER, requires_merchant_reprocessing INTEGER, last_merchant_reprocessing_date INTEGER, processed_for_stations INTEGER, merchant_name TEXT, merchant_raw_name TEXT, merchant_industry_category TEXT, merchant_industry_code INTEGER, peer_payment_type INTEGER,peer_payment_counterpart_handle TEXT,peer_payment_memo TEXT,peer_payment_message_received_date INTEGER,account_type INTEGER,foreign_exchange_information_destination_currency_code TEXT,foreign_exchange_information_destination_amount INTEGER,foreign_exchange_information_exchange_rate TEXT,primary_funding_source_amount INTEGER,primary_funding_source_currency_code TEXT,secondary_funding_source_amount INTEGER,secondary_funding_source_currency_code TEXT,secondary_funding_source_network INTEGER,secondary_funding_source_dpan_suffix TEXT,secondary_funding_source_fpan_identifier TEXT,secondary_funding_source_description TEXT,secondary_funding_source_type INTEGER,request_device_score_identifier TEXT,send_device_score_identifier TEXT,device_score_identifiers_required INTEGER,device_score_identifiers_submitted INTEGER,merchant_provided_description TEXT,merchant_provided_title TEXT,metadata TEXT,expiration_date INTEGER,adjustment_type INTEGER,transaction_declined_reason INTEGER, a INTEGER, account_identifier TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, m INTEGER, n INTEGER, o TEXT, should_suppress_date INTEGER, p TEXT, q INTEGER, r TEXT, s TEXT, t TEXT, maps_merchant_pid INTEGER, u INTEGER, v TEXT, w INTEGER, x INTEGER, y TEXT, ab TEXT, ac INTEGER, ad INTEGER, ae TEXT, af TEXT, ag TEXT, ah TEXT, use_raw_merchant_data INTEGER, issue_report_identifier TEXT, suppress_notifications INTEGER, fuzzy_matched INTEGER, receipt_provider_identifier TEXT, receipt_provider_url TEXT, receipt_identifier TEXT, barcode_identifier TEXT, payment_pin_format INTEGER, nonce BLOB, signing_key_material BLOB, partial_signature BLOB, requested_auth_mechanisms INTEGER, primary_funding_source_description TEXT, nominal_amount INTEGER, has_additional_offers BOOL, dpan_identifier TEXT, zm TEXT, eligible_eligible_rewards_percent_aggregate INTEGER, eligible_rewards_cash_aggregate INTEGER, is_coarse_location INTEGER, amount_added_to_auth INTEGER, afi INTEGER, is_merchant_token_transaction INTEGER, recurring BOOL, merchant_fallback_logo_image_url TEXT, interest_reassessment BOOL, associated_statement_identifiers TEXT, payment_network_identifier INTEGER, update_sequence_number INTEGER NOT NULL, needs_sync_to_finance INTEGER NOT NULL, ca INTEGER, iit INTEGER, iimu TEXT, cb TEXT, top_up_type INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_balance (pid INTEGER, pass_pid INTEGER NOT NULL, identifier TEXT, localized_title TEXT, localized_description TEXT, currency_code TEXT, exponent INTEGER, value INTEGER, is_primary_balance INTEGER, last_updated_date INTEGER NOT NULL, preformatted_string TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, history_sequence_number INTEGER, balance INTEGER, loyalty_balance INTEGER, currency TEXT, blacklisted INTEGER, needs_station_processing INTEGER, expiration_date INTEGER, last_refresh_sequence_number INTEGER, applet_state_dirty INTEGER, en_route_flags BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS felica_transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, shinkansen_ticket_active INTEGER, balance_allowed_for_commute INTEGER, low_balance_notification_enabled INTEGER, green_car_ticket_used INTEGER, history_sequence_number INTEGER, balance INTEGER, blacklisted INTEGER, shinkansen_validity_start_date INTEGER, shinkansen_validity_term INTEGER, shinkansen_origin_station_code BLOB, shinkansen_destination_station_code BLOB, shinkansen_departure_time INTEGER, shinkansen_arrival_time INTEGER, shinkansen_train_name TEXT, shinkansen_car_number INTEGER, shinkansen_seat_row INTEGER, shinkansen_seat_number INTEGER, shinkansen_secondary_origin_station_code BLOB, shinkansen_secondary_destination_station_code BLOB, shinkansen_secondary_departure_time INTEGER, shinkansen_secondary_arrival_time INTEGER, shinkansen_secondary_train_name TEXT, shinkansen_secondary_car_number INTEGER, shinkansen_secondary_seat_row INTEGER, shinkansen_secondary_seat_number INTEGER, green_car_origin_station_code BLOB, green_car_destination_station_code BLOB, shinkansen_origin_station_string TEXT, shinkansen_destination_station_string TEXT, shinkansen_secondary_origin_station_string TEXT, shinkansen_secondary_destination_station_string TEXT, green_car_origin_station_string TEXT, green_car_destination_station_string TEXT, green_car_validity_start_date INTEGER, has_green_car_ticket INTEGER, has_shinkansen_ticket INTEGER, needs_station_processing INTEGER, en_route_flags BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS felica_transit_applet_state_payment_application_pid_index ON felica_transit_applet_state (payment_application_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_message (pid INTEGER, pass_pid INTEGER NOT NULL, payment_application_pid INTEGER, identifier TEXT, service_identifier TEXT, message_date INTEGER, expiration_date INTEGER, message_type INTEGER, archived INTEGER, content TEXT, allow_deep_link INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS notification_service (pid INTEGER, push_token TEXT, push_topic TEXT NOT NULL, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, device_identifier TEXT NOT NULL, authentication_token TEXT, app_launch_token TEXT, service_type INTEGER,service_url TEXT NOT NULL, registration_url TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_notification_service (pid INTEGER, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, registration_status INTEGER, notification_service_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS associated_app_identifier (pass_pid INTEGER, application_id TEXT, PRIMARY KEY (pass_pid, application_id));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS associated_pass_type_identifier (pass_pid INTEGER, identifier TEXT, identifier_hash TEXT, PRIMARY KEY (pass_pid, identifier));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS nfc (pid INTEGER, pass_pid INTEGER, message TEXT, encryption_public_key TEXT, requires_authentication INTEGER, a INTEGER DEFAULT 0, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, merchant_pid INTEGER, identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS value_added_merchant (pid INTEGER, identifier TEXT, times_presented INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account (pid INTEGER, pass_pid INTEGER, transaction_source_pid INTEGER, identifier TEXT, created_date INTEGER, identified_date INTEGER, role INTEGER, state INTEGER, state_reason INTEGER, person_to_person_restriction_type INTEGER, stage INTEGER, country_code TEXT, current_balance_currency TEXT, current_balance_amount INTEGER, maximum_balance_amount INTEGER, amount_remaining_until_identity_verification INTEGER, identity_verification_required INTEGER, account_state_dirty INTEGER, last_updated_date INTEGER, proactive_fetch_period INTEGER, account_fetch_after_transaction_wait_period INTEGER, account_fetch_after_transaction_wait_tolerance INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, associated_pass_url TEXT, associated_pass_serial_number TEXT, associated_pass_type_identifier TEXT, pending_payment_count INTEGER, identity_verification_for_disbursements_required INTEGER,associated_account_pid INTEGER, alt_dsid TEXT, cloud_store_zone_names TEXT, associated_account_proactive_fetch_period INTEGER, associated_account_last_updated_date INTEGER, associated_account_state_dirty INTEGER, displayed_associated_account_active_notification INTEGER, device_score_encrypted_payload_version INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account_feature_descriptor (pid INTEGER, identifier TEXT, peer_payment_account_pid INTEGER, minimum_amount INTEGER, maximum_amount INTEGER, supported_networks TEXT, merchant_identifier TEXT, merchant_capabilities INTEGER, fee_percentage INTEGER, minimum_fee INTEGER, maximum_fee INTEGER, os_version_requirement_range BLOB, a BLOB, b BLOB, c BLOB, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_fee (pid INTEGER, identifier TEXT, payment_transaction_pid INTEGER, type INTEGER, amount INTEGER, currency TEXT, localized_display_name TEXT,PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS apples (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, m TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pears (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h TEXT, i INTEGER, j INTEGER, cloud_store_zone_names TEXT, k TEXT, l INTEGER, m TEXT, n TEXT, o TEXT, p INTEGER, transaction_source_pid INTEGER, block_all_account_access INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS strawberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, m TEXT, n INTEGER, o INTEGER, os_version_requirement_range BLOB, p INTEGER, q INTEGER, r TEXT, s INTEGER, savings_interest_rate INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS feijoa (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS clementines (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, m TEXT, n INTEGER, o INTEGER, p INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cucumbers (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS oranges (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t INTEGER, u INTEGER, recovery_payment_plans_supported INTEGER, remaining_statement_balance_for_interest_calculation INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS bananas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pineapples (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t TEXT, u INTEGER, v INTEGER, total_balance INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS blackberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, activation_code_hash TEXT, expiration_month INTEGER, expiration_year INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS grapes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, alt_dsid TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS avocados (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tomatoes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, h TEXT, i INTEGER, j INTEGER, k TEXT, l TEXT, m TEXT, n INTEGER, o INTEGER, p TEXT, q TEXT, r INTEGER, s INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mangos (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS lychees (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, p TEXT, q INTEGER, r INTEGER, s TEXT, t TEXT, u INTEGER, v TEXT, cancellable BOOL, cancellation_expiry_date INTEGER, w INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rambutans (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS watermelons (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS raspberries (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k INTEGER,l INTEGER,m INTEGER,n TEXT, o INTEGER, p INTEGER,PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS nectarines (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS passionfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pitayas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS maps_merchant (pid INTEGER, identifier INTEGER, result_provider_identifier INTEGER, name TEXT, phone_number TEXT, url TEXT, location_latitude REAL, location_longitude REAL, postal_address TEXT, a TEXT, c INTEGER, d TEXT, g BLOB, h TEXT, i TEXT, last_processed_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transit_network_identifier (pid INTEGER, payment_application_pid INTEGER, identifier TEXT, network_order INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS blueberries (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS plantains (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, g INTEGER, h TEXT, i TEXT, l BLOB, m TEXT, n TEXT, o TEXT, last_processed_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cantaloupes (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS jackfruits (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS guavas (pid INTEGER, a TEXT, b INTEGER, c REAL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS balance_reminder (pid INTEGER, pass_pid INTEGER, balance_identifier TEXT, threshold TEXT, enabled INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS discovery_item (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, type INTEGER, rule_identifier TEXT, trigger_rule_identifier TEXT, layout_url TEXT, supported_localizations BLOB, os_version_requirement_range BLOB, hardware_version_range BLOB, relevant_date_range_start_date INTEGER, relevant_date_range_end_date INTEGER, item_order INTEGER, view_count INTEGER, max_view_count INTEGER, should_badge INTEGER, priority INTEGER, entitled_to_force_large_card INTEGER, max_view_count_large_card INTEGER, clientData BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS discovery_notification (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, rule_identifier TEXT, os_version_requirement_range BLOB, hardware_version_range BLOB, relevant_date_range_start_date INTEGER, relevant_date_range_end_date INTEGER, action_type INTEGER, title_key TEXT, message_key TEXT, action_title_key TEXT, action_info BLOB, scheduled_delivery_date INTEGER, delivered INTEGER,PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rule (pid INTEGER, identifier TEXT, predicate_format TEXT, os_version_requirement_range BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS durian (pid INTEGER, a TEXT, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, m INTEGER DEFAULT 1, o TEXT, p TEXT, q TEXT, r INTEGER, feature_product INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS fig (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g TEXT, h INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS prune (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS starfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS papaya (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e BLOB, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k BLOB, l BLOB, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS coconuts (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peaches (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g TEXT, pu TEXT, physical_cards TEXT, servicing_token TEXT, funding_sources TEXT, virtual_cards TEXT, recovery_payment_plans TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS whitney (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT,f TEXT,g TEXT,h INTEGER,i BLOB,j TEXT,k INTEGER, l INTEGER, m TEXT, n INTEGER, o TEXT, p TEXT, q INTEGER, r TEXT, s TEXT, t TEXT, u TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS whitney_agrk (pid INTEGER, applet_subcredential_pid INTEGER, data BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS palisades (pid INTEGER, a TEXT NOT NULL UNIQUE, b TEXT NOT NULL, c TEXT, d TEXT, e BLOB, f INT, g INT, h TEXT,i TEXT,j TEXT,k INT, l TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g TEXT, pu TEXT, physical_cards TEXT, servicing_token TEXT, funding_sources TEXT, virtual_cards TEXT, recovery_payment_plans TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS missing_remote_assets (pid INTEGER, unique_id TEXT NOT NULL UNIQUE, download_retries_count INTEGER DEFAULT 0, PRIMARY KEY (pid, download_retries_count));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS kiwi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m TEXT, n TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS currant (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h TEXT, i INTEGER, order_index INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS raisin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS gojiberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peanut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, i TEXT, l BLOB, m BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS acorn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS squash (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_token (pid INTEGER, zone_name TEXT, token_data BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tap_to_radar_prompt (pid INTEGER, reason TEXT, last_prompt_date INTEGER, prompt_count INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rainier (pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER,h TEXT, i TEXT, j INTEGER, k TEXT,PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rincon (pid INTEGER, a TEXT, b INTEGER, c TEXT, e INTEGER, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_zone (pid INTEGER, container_database_pid INTEGER, zone_name TEXT, zone_owner TEXT, token_data BLOB, subscription_id TEXT, fetch_timestamp INTEGER, did_finish_initial_sync INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transit_applet_state_balance (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, currency TEXT, exponent INTEGER, balance INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_amount (pid INTEGER, payment_transaction_pid INTEGER, label TEXT, currency TEXT, exponent INTEGER, amount INTEGER, preformatted_string TEXT, pending INTEGER DEFAULT 0, unit_identifier TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS applet_state_dirty (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transaction_receipt (pid INTEGER, unique_id TEXT, receipt_provider_identifier TEXT, receipt_identifier TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS index_item (pid INTEGER, identifier TEXT, domain_identifier TEXT, type INTEGER, status INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, action_try_count INTEGER, searchable_item BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_status ON index_item (status);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS index_item_identifier ON index_item (identifier);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS index_item_domain_identifier ON index_item (domain_identifier);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS index_metadata (version INTEGER, PRIMARY KEY (version));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS index_fetched_metadata (type INTEGER, status INTEGER, version INTEGER, PRIMARY KEY (type));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS commute_plan_reminder (pid INTEGER, pass_pid INTEGER, commute_plan_identifier TEXT, time_interval REAL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS e_mei_shan (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d BLOB, e INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account_additional_push_topics (pid INTEGER, peer_payment_account_pid INTEGER, preferences TEXT, associated_accounts TEXT, requests TEXT, endpoint TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_preferences (pid INTEGER, peer_payment_account_pid INTEGER, requires_confirmation BOOL, can_receive_formal_payment_requests BOOL, dirty BOOL, last_updated_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_restriction (pid INTEGER, peer_payment_preferences_pid INTEGER, alt_dsid TEXT, restriction_type INTEGER, a INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_notification (pid INTEGER, peer_payment_preferences_pid INTEGER, alt_dsid TEXT, notification_type INTEGER, value BOOL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transaction_source (pid INTEGER, identifier TEXT, type INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS world_region (pid INTEGER, parent_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, type INTEGER, latitude REAL, longitude REAL, latitude_delta REAL, longitude_delta REAL, identifier TEXT, muid INTEGER, result_provider_identifier INTEGER, abbreviation_code TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS world_region_localized_content (pid INTEGER, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, name TEXT, locale_identifier TEXT, status INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS world_region_mapping (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, match_try_count INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS world_region_transaction ON world_region_mapping(payment_transaction_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS world_region_localized_content_name ON world_region_localized_content(name COLLATE NOCASE);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_database (pid INTEGER, container_name TEXT, scope INTEGER, subscription_id TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_record (pid INTEGER, record_name TEXT, record_type TEXT, zone_pid INTEGER, hash INTEGER, record_data BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_share_backoff (pid INTEGER, cloud_store_zone_pid INTEGER, recipient_handle TEXT, backoff_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_container_change_event (pid INTEGER, identifier TEXT, change_type INTEGER, event_type INTEGER, timestamp INTEGER, container_identifier TEXT, begin_interval_event_identifier TEXT, begin_interval_event_pid INTEGER, operation_group_name TEXT, operation_group_name_suffix TEXT, error_description TEXT, change_token BLOB, state_name TEXT, object_names TEXT, time_interval INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_record_fetch_task (pid INTEGER, type INTEGER, status INTEGER, transaction_source_pid INTEGER, cloud_store_zone_pid INTEGER, start_date INTEGER, end_date INTEGER, backoff_level INTEGER, next_possible_fetch_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, last_error_description TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_zone_share_participant (pid INTEGER, cloud_store_zone_pid INTEGER, participant_handle TEXT, lookup_info BLOB, invitation_token BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account_invitation (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, status INTEGER, registration_result INTEGER, remote_registration_request_level INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_authentication (pid INTEGER, processed_auth_mechanisms INTEGER, data_collected_auth_mechanisms INTEGER, complete INTEGER, auth_data_payment_pin BLOB, auth_data_transaction_signature BLOB, auth_data_user_confirmation BLOB, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_tag (pid INTEGER, payment_transaction_pid INTEGER, type INTEGER, localized_title TEXT, locale_identifier TEXT, rank INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_tag_index ON payment_transaction_tag(payment_transaction_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_authentication_index ON payment_transaction_authentication(payment_transaction_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_amount_modifiers (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, modifier_type TEXT, modifier_description TEXT, modifier_order INTEGER, amount INTEGER, currency TEXT, exponent INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_amount_modifiers_index ON payment_transaction_amount_modifiers(payment_transaction_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_awards (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, award_identifier TEXT, award_type TEXT, award_subtype TEXT, award_description TEXT, award_order INTEGER, relevant_account_name TEXT, amount INTEGER, currency TEXT, exponent INTEGER, localized_amount TEXT, has_deep_link BOOL, claim_expiry_date INTEGER, claim_expired BOOL, redeem_expiry_date INTEGER, redeem_expired BOOL, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_awards_index ON payment_transaction_awards(payment_transaction_pid);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS barcode_fetch (pid INTEGER, next_background_fetch_date INTEGER, background_fetch_retry_level INTEGER, pass_pid INTEGER REFERENCES pass(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS next_background_fetch_date_index ON barcode_fetch(next_background_fetch_date);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_associated_account_removal_record (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, reason INTEGER, date INTEGER, has_presented_notification INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_application_barcode_service_metadata (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, evaluated_policy_domain_state BLOB, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS gooseberry (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, transaction_source_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peanuts (pid INTEGER, account_pid INTEGER, last_updated_date INTEGER, dirty INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS almonds (pid INTEGER, peanuts_pid INTEGER, zone_name TEXT, account_identifier TEXT, account_type INTEGER, access INTEGER, mode INTEGER, a TEXT, b TEXT, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_archive (pid INTEGER, payment_transaction_pid INTEGER, bokchoy_pid INTEGER, cumin_pid INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_archive_location (pid INTEGER, archive_pid INTEGER, type INTEGER, cloud_store_zone_pid INTEGER, archived INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS prickly_pear (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mulberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_fetch_periods (pid INTEGER, blocked_endpoints TEXT, account_pid INTEGER, account_fetch_period INTEGER, extended_account_fetch_period INTEGER, a INTEGER, b INTEGER, c INTEGER, funding_sources_fetch_period INTEGER, recovery_payment_plans_fetch_period INTEGER, physical_cards_fetch_period INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_endpoint_backoff (pid INTEGER, account_pid INTEGER, account_type INTEGER, endpoint_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS breadfruit (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS persimmon (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g TEXT, h INTEGER, i TEXT, j INTEGER, k INTEGER, l TEXT, m TEXT, n TEXT, o TEXT, p TEXT, q INTEGER, r TEXT, s INTEGER, t INTEGER, u INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cucamelon (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS lucuma (pid INTEGER, a INTEGER, d TEXT, f INTEGER, g TEXT, l INTEGER, m TEXT, n INTEGER, o TEXT, p INTEGER, q TEXT, r INTEGER, s TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS quinoa (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS wasabi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j TEXT, k INTEGER, l TEXT, m INTEGER, n TEXT, o INTEGER, p TEXT, q INTEGER, r TEXT, s INTEGER, t TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS atemoya (pid INTEGER, a INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS okra (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS splitpea (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS huckleberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS marionberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, g INTEGER, gc TEXT, i INTEGER, ic TEXT, j INTEGER, jc TEXT, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s TEXT, t INTEGER, u TEXT, w INTEGER, x TEXT, v TEXT, y INTEGER, yc TEXT, z INTEGER, zc TEXT, aa INTEGER, aac TEXT, bb INTEGER, cc INTEGER, ccc INTEGER, dd INTEGER, cr INTEGER, ee INTEGER,eec TEXT,ff INTEGER,ffc TEXT,PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS chickpeas (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, h TEXT, i INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS parsnip (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS asparagus (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS oregano (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS boysenberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, m TEXT, n TEXT, o INTEGER, p INTEGER, q INTEGER, r TEXT, s TEXT, t TEXT, u INTEGER, v INTEGER, w INTEGER, x INTEGER, y INTEGER, z TEXT, aa TEXT, bb TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS chestnut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS jostaberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, cc TEXT, d INTEGER, dc TEXT, f INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS guanabana (pid INTEGER, a INTEGER, b INTEGER, bc TEXT, c INTEGER, cc TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pineberry (pid INTEGER, a INTEGER, b TEXT, d INTEGER, f INTEGER, g INTEGER, gc TEXT, h INTEGER, hc TEXT, i INTEGER, ic TEXT, l TEXT, subtype INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tamarillo (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, ec TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS chikoo (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS akebi (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS honey (pid INTEGER, a INTEGER, b TEXT, c BLOB, d TEXT, document_type TEXT NOT NULL, e TEXT, f TEXT, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS water (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS ice_cream_banana (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS carambola (pid INTEGER, a INTEGER NOT NULL, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_annotations (pass_pid INTEGER, sorting_state INTEGER, archived_timestamp INTEGER, PRIMARY KEY (pass_pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_pending_family_member (pid INTEGER, account_pid INTEGER, invite_email TEXT, invite_date INTEGER, displayed_notification INTEGER, alt_dsid TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS change_history_event (pid INTEGER, identifier TEXT, type INTEGER, record_type INTEGER, record_uniqueID TEXT, timestamp INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS change_history_event_retry_details (pid INTEGER, event_unique_identifier TEXT, event_record_type INTEGER, retry_date INTEGER, retry_interval INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS salmonberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor (pid INTEGER, default_state_identifier TEXT, default_state_enabled INTEGER, pass_pid INTEGER, metadata_pid INTEGER, state_pid INTEGER, internal_tile_order INTEGER, group_descriptor_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata (pid INTEGER, identifier TEXT, type TEXT, style TEXT, selectable INTEGER, show_in_prearm INTEGER DEFAULT 1, context_identifier TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_rke (pid INTEGER, metadata_pid INTEGER, vehicle_functions BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_horizontal_flow_group (pid INTEGER, metadata_pid INTEGER, columns INTEGER, maximumRows INTEGER, width_class TEXT, height_class TEXT, group_style TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_vertical_flow_group (pid INTEGER, metadata_pid INTEGER, rows INTEGER, width_class TEXT, height_class TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_group (pid INTEGER, state_pid INTEGER, header TEXT, footer TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state (pid INTEGER, action_state_pid INTEGER, state_metadata_pid INTEGER, image_pid INTEGER, type TEXT, enabled INTEGER, selected INTEGER, action BLOB, actions BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tile_descriptor_tile_state_collection (pid INTEGER, descriptor_pid INTEGER, state_pid INTEGER, state_identifier TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_default (pid INTEGER, state_pid INTEGER, title TEXT, body TEXT, accessory_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_default_v2 (pid INTEGER, state_pid INTEGER, title_value_pid INTEGER, body_value_pid INTEGER, body_image_pid INTEGER, footer_value_pid INTEGER, preferred_style TEXT, accessory_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_check_in (pid INTEGER, state_pid INTEGER, available_from INTEGER, available_from_utc_offset INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory (pid INTEGER, type TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_button (pid INTEGER, accessory_pid INTEGER, title TEXT, spinner_enabled INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_spinner (pid INTEGER, accessory_pid INTEGER, spinner_enabled INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_image (pid INTEGER, accessory_pid INTEGER, image_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value (pid INTEGER, type TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_date (pid INTEGER, value_pid INTEGER, content TEXT, date_style INTEGER, time_style INTEGER, ignores_time_zone INTEGER, is_relative INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_number (pid INTEGER, value_pid INTEGER, currency_content INTEGER, decimal_content DECIMAL, number_style INTEGER, currency_code TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_foreign_reference (pid INTEGER, value_pid INTEGER, content TEXT, foreign_reference_type TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_text (pid INTEGER, content TEXT, value_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata(pid INTEGER, type TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata_rke (pid INTEGER, state_metadata_pid INTEGER, vehicle_function_states BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_image (pid INTEGER,iconName TEXT,tint TEXT, symbol TEXT, hasColorContent BOOL DEFAULT 0, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state (pid INTEGER, supported INTEGER, enabled INTEGER, state_identifier TEXT, state_override_pid INTEGER, in_progress INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state_participant (pid INTEGER, participant_identifier TEXT, pass_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary (pid INTEGER, credit_account_summary_pid INTEGER, merge_date INTEGER, total_balance INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary_account_details (pid INTEGER, credit_account_merge_summary_pid INTEGER, account_identifier TEXT, owner_alt_dsid TEXT, statement_balance INTEGER, current_balance INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50((BOOL)v4, @"CREATE TABLE IF NOT EXISTS apricots (a INTEGER); ")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS ranging_suspension_reason (pid INTEGER, applet_subcredential_pid INTEGER, payment_application_pid INTEGER, ranging_suspension_reasons INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS secure_element_pass_field (pid INTEGER, key TEXT, unit_type TEXT, source INTEGER, field_order INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS secure_element_pass_field_foreign_identifier (pid INTEGER, foreign_reference_identifier TEXT, field_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_payment_funding_source (pid INTEGER, account_pid INTEGER, identifier TEXT, type INTEGER, account_suffix TEXT,PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS jabuticaba (pid INTEGER, identifier TEXT, a TEXT, b INTEGER, c TEXT, d INTEGER,e INTEGER,PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mangosteen (pid INTEGER, ra TEXT, rb TEXT, rc TEXT,rd BOOL, re BOOL, rf TEXT, rg INTEGER, rh BOOL, ri INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cherimoya (pid INTEGER, a TEXT, b TEXT, c TEXT,d TEXT,f TEXT,g INTEGER,h TEXT, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS kiwano (pid INTEGER, a INTEGER, b TEXT, e TEXT,f TEXT,g TEXT,h INTEGER, i INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS loquat (pid INTEGER, a INTEGER, b TEXT, e TEXT,f BOOL,g INTEGER,h TEXT,i TEXT,j TEXT,k BLOB,l TEXT,m INTEGER,n TEXT,o TEXT,p TEXT,q INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS romanesco (pid INTEGER, a TEXT, b TEXT, c BLOB, d TEXT, e INTEGER, f TEXT, g TEXT, h TEXT, i TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS kohlrabi (pid INTEGER, a TEXT, b INTEGER, c TEXT, d TEXT, e TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS broccoli (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS carrot (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50((BOOL)v4, @"CREATE TABLE IF NOT EXISTS bacon (pid INTEGER, a TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS egg (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS waffle (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e BOOL, f INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cardiff (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS corn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS melomakarono (pid INTEGER, a TEXT, b TEXT, c TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_setup_features (pid INTEGER, identifiers BLOB, localized_display_name TEXT, feature_type INTEGER, feature_state INTEGER, supported_options INTEGER, supported_devices INTEGER, product_identifier TEXT, partner_identifier TEXT, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, product_type INTEGER, product_state INTEGER, notification_title TEXT, notification_message TEXT, discovery_card_identitifer TEXT, expiry_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pomegranate (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, k TEXT, l TEXT, m TEXT, n TEXT, o TEXT, p TEXT, fcc_step_up_required INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cranberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS eggplant (pid INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, n TEXT, o INTEGER, p INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rhubarb (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j TEXT, k TEXT, l TEXT, m INTEGER, n BOOL, q BOOL, r BOOL, s BOOL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS application_message_registration (pid INTEGER, created_date INTEGER, priority INTEGER, source TEXT, identifier TEXT, badge BOOL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS zucchini (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, p TEXT, q INTEGER, r INTEGER, s TEXT, t TEXT, u INTEGER, v TEXT, w BOOL, x INTEGER, y INTEGER, z INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS muffin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS avocado_toast (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS eggs_benedict (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_requests (pid INTEGER, request_token TEXT, peer_payment_account_pid INTEGER, requester_address TEXT, requestee_address TEXT, amount INTEGER, currency TEXT, memo TEXT, session_id TEXT, expiry_date INTEGER, actions TEXT, request_date INTEGER, last_dismissed_date INTEGER, status TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS yuzu (pid INTEGER, a TEXT, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g TEXT, h TEXT, i BLOB, j INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tomatillo (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e INTEGER, f INTEGER, g BOOL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS quince (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, ea TEXT, eb TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, ma TEXT, mb TEXT, n TEXT, o TEXT, p INTEGER, q TEXT, r INTEGER, s INTEGER, t TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transit_applet_state_commute_plan (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, unique_identifier TEXT, status TEXT, start_date INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS associated_reader_id (pid INTEGER, automatic_selection_criterion_pid INTEGER, reader_id BLOB, priority INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS associated_reader_id_reader_ca (pid INTEGER, associated_reader_id_pid INTEGER, public_key BLOB, attestation BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS potato (pid INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_historical_balance (pid INTEGER, account_pid INTEGER, balance INTEGER, date INTEGER, type INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE UNIQUE INDEX IF NOT EXISTS history_index ON account_historical_balance (account_pid, date, type);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tamarind (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, PRIMARY KEY(pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS radish (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS nashi (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS ume (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS daikon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS device_environment (pid INTEGER, client_identifier TEXT, country_code TEXT, device_language TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS lemon (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mirabelle (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS celery (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS bokchoy (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, m INTEGER, n TEXT, o INTEGER, p INTEGER, r INTEGER, s INTEGER, t BLOB,u INTEGER,v TEXT,w TEXT,x TEXT,y TEXT,z INTEGER, aa TEXT, ab INTEGER, ac INTEGER, ad INTEGER, ae INTEGER, af INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS onion (pid INTEGER, type TEXT, uniqueIdentifier TEXT,status TEXT, created_at INTEGER, should_auto_provision INTEGER, provisioning_state BLOB, provisioning_attempt_counter INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS leek (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_statement_metadata (pid INTEGER, statement_identifier TEXT, account_identifier TEXT, opening_date INTEGER, closing_date INTEGER, has_been_processed INTEGER, last_report_date INTEGER, report_count INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_statement_metadata_item (pid INTEGER, account_statement_metadata_pid INTEGER, identifier TEXT, type INTEGER, account_event_type INTEGER, originator_altdsid TEXT, zone_name TEXT, has_been_processed INTEGER, processed_attempt_count INTENGER, last_processed_date INTEGER, last_report_date INTEGER, report_count INTEGER, error INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_application_usage_summary (pid INTEGER, pass_unique_identifier TEXT, payment_application_identifier TEXT, last_used INTEGER, last_used_transaction INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_remote_credential (pid INTEGER, base_pid INTEGER, a TEXT, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, i TEXT, j INTEGER, k INTEGER, l TEXT, m TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_shareable_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_account_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS garlic (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f INTEGER, g TEXT, h BLOB, i BLOB, j BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS apple_balance_dtu_promotion_configuration (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, l INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_receipt (pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, e BLOB, f INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_provisioning_metadata (pid INTEGER, a INTEGER, b TEXT, c TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_live_render (pid INTEGER, pass_pid INTEGER, enabled INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS credit_recovery_payment_plan (pid INTEGER, identifier TEXT, account_identifier TEXT, enrolled INTEGER, display_name TEXT, enrollment_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS savings_account_step_up_details (pid INTEGER, details_pid INTEGER, threshold_exceeded INTEGER, needed_by INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS relevant_pass_dates (pid INTEGER,pass_pid INTEGER, start_date INTEGER, end_date INTEGER, relevant_date INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transactions_to_delete_from_finance (pid INTEGER, transaction_identifier TEXT NOT NULL, account_identifier TEXT NOT NULL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_needs_sync_to_finance_daemon ON payment_transaction (needs_sync_to_finance);")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_details_bank_account (pid INTEGER, account_funding_source_pid INTEGER, account_identifier TEXT, account_number TEXT, routing_number TEXT, name TEXT, status INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_source_verification (pid INTEGER, account_funding_details_pid INTEGER, status INTEGER, options TEXT, pending_attempt_pid INTEGER, failed_attempt_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_attempt (pid INTEGER, type INTEGER, sent_date INTEGER, expiry_date INTEGER, failure_reason INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_action (pid INTEGER, account_funding_source_verification_pid INTEGER, type INTEGER, verification_options TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS nutmeg (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS elephant (pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cow (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, h TEXT, j TEXT, k INTEGER, l INTEGER, m TEXT, r TEXT, s TEXT, t TEXT, u TEXT, v TEXT, w INTEGER, x TEXT, y BOOL, z TEXT, aa TEXT, ab TEXT, localized_pay_in_full_subtitle_override TEXT, has_preconfigured_offers TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pig (pid INTEGER, i_pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS giraffe (pid INTEGER, i_pid INTEGER, default_variant INTEGER, light_variant INTEGER, dark_variant INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_offer_dynamic_content_icon_variant (pid INTEGER, two_x TEXT, three_x TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS dog (pid INTEGER, i_pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cat (pid INTEGER, i_pid INTEGER, a TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS footer_content (pid INTEGER, type INTEGER, footer_text TEXT, installment_criteria_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS footer_content_link (pid INTEGER, footer_content_pid INTEGER, link_text TEXT, link_url TEXT, terms_identifier TEXT, analytics_identifier TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_endpoint_metadata (pid INTEGER, pass_pid INTEGER, last_updated INTEGER, is_dirty INTEGER, type INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS breakfast_burrito (pid INTEGER, ia TEXT, ib TEXT, ic TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_stateful_transfer (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_precursor_pass (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cinnamon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS allspice (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cowboy (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, h TEXT, i TEXT, ma BOOL, mb BOOL, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS coffeebeans (pid INTEGER, pass_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, order_index INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS paprika (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS dark_chocolate (pid INTEGER, pass_pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS granola_bar (pid INTEGER, rp INTEGER, it INTEGER, a INTEGER, b INTEGER, c TEXT, rt INTEGER, d INTEGER, e INTEGER, f TEXT, g TEXT, h INTEGER, i TEXT, j INTEGER, k TEXT, m INTEGER, n TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS green_eggs_ham (pid INTEGER, la TEXT, lb TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_identity_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e BLOB, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cumin (pid INTEGER, a INTEGER, b TEXT, c BLOB, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_relevancy_model (pid INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));"))
    {
      if (sub_1002CD0D0((BOOL)v4, 17070LL)) {
        unint64_t v6 = 0LL;
      }
      else {
        unint64_t v6 = 4LL;
      }
    }

    else
    {
      unint64_t v6 = 4LL;
    }
  }

  else
  {
    unint64_t v6 = -[PDDatabaseManager _migrateDatabase:fromUserVersion:](self, "_migrateDatabase:fromUserVersion:", v4, v5);
  }

  return v6;
}

- (BOOL)_migrateFrom8075To8076:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom8076To8300:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_application",  (uint64_t)@"in_app_pin_required_amount INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_application",  (uint64_t)@"in_app_pin_required_currency TEXT")
    && sub_1002CD0D0((BOOL)v4, 8300LL);

  return v5;
}

- (BOOL)_migrateFrom8300To8301:(id)a3 context:(id)a4
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100352C80;
  v7[3] = &unk_100658148;
  id v8 = a3;
  id v5 = v8;
  [a4 addDatabasePopulationOperation:v7];

  return 1;
}

- (BOOL)_migrateFrom8301To8302:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"merchant", (uint64_t)@"raw_name TEXT")
    && sub_1002CD898((BOOL)v4, @"merchant", @"name", @"maps_name")
    && sub_1002CD898((BOOL)v4, @"merchant", @"short_name", @"name")
    && sub_1002CD0D0((BOOL)v4, 8302LL);

  return v5;
}

- (BOOL)_migrateFrom8302To8303:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_application", (uint64_t)@"sanitized_dpan TEXT")

  return v5;
}

- (BOOL)_migrateFrom8303To8304:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"merchant_name TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"merchant_maps_name TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"merchant_raw_name TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_industry_category TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_industry_code INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"merchant_phone_number TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_maps_identifier INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"merchant_url TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_location_latitude REAL")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_location_longitude REAL")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE payment_transaction SET merchant_name                  = (select merchant.name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_name             = (select merchant.maps_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_raw_name              = (select merchant.raw_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_category     = (select merchant.industry_category from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_code         = (select merchant.industry_code from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_phone_number          = (select merchant.phone_number from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_identifier       = (select merchant.maps_identifier from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_url                   = (select merchant.url from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_latitude     = (select merchant.location_latitude from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_longitude    = (select merchant.location_longitude from merchant where merchant.pid = payment_transaction.merchant_pid) WHERE payment_transaction.merchant_pid != 0;")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_pid")

  return v5;
}

- (BOOL)_migrateFrom8304To8305:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom8305To9000:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS nfc (pid INTEGER, pass_pid INTEGER, message TEXT, requires_certificate INTEGER, encryption_public_key TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS associated_pass_type_identifier (pass_pid INTEGER, identifier TEXT, identifier_hash TEXT, PRIMARY KEY (pass_pid, identifier));")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"pass_type", (uint64_t)@"identifier_hash TEXT")
    && sub_1002CD0D0((BOOL)v5, 9000LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1003531EC;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9000To9001:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"supports_dpan_notifications INTEGER")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"supports_fpan_notifications INTEGER")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"supports_default_card_selection INTEGER")
    && sub_1002CD0D0((BOOL)v5, 9001LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1003533E8;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9001To9002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_result_provider_identifier INTEGER")
    && sub_1002CD0D0((BOOL)v4, 9002LL);

  return v5;
}

- (BOOL)_migrateFrom9002To9003:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"display_name TEXT")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"auxiliary_application INTEGER")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"payment_type TEXT")
    && sub_1002CD0D0((BOOL)v5, 9003LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9003To9004:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom9004To9005:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom9005To9006:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 1;
  if (sub_1002CD898((BOOL)v5, @"payment_message", @"identifier", @"service_identifier")
    && sub_1002CD898((BOOL)v5, @"payment_transaction", @"identifier", @"service_identifier")
    && sub_1002CD898((BOOL)v5, @"payment_transaction", @"transaction_id", @"transaction_identifier")
    && sub_1002CD898( (BOOL)v5,  @"payment_transaction",  @"transaction_id_component_1",  @"transaction_identifier_component_1")
    && sub_1002CD898( (BOOL)v5,  @"payment_transaction",  @"transaction_id_component_2",  @"transaction_identifier_component_2")
    && sub_1002CD314( (BOOL)v5,  (uint64_t)@"payment_transaction",  (uint64_t)@"processed_for_location INTEGER")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"payment_transaction", (uint64_t)@"identifier TEXT"))
  {
    BOOL v7 = sub_1002CD0D0((BOOL)v5, 9006LL);
    *((_BYTE *)v14 + 24) = v7;
    if (v7)
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      void v10[2] = sub_1003539E8;
      v10[3] = &unk_10063D460;
      id v11 = v5;
      id v12 = &v13;
      sub_1002CCDBC((uint64_t)v11, @"SELECT pid FROM payment_transaction", v10);

      BOOL v8 = *((_BYTE *)v14 + 24) != 0;
    }

    else
    {
      BOOL v8 = 0;
    }
  }

  else
  {
    BOOL v8 = 0;
    *((_BYTE *)v14 + 24) = 0;
  }

  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9006To9007:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 1;
  BOOL v7 = sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"temp_payment_type INTEGER");
  *((_BYTE *)v14 + 24) = v7;
  if (v7)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_100353C1C;
    v10[3] = &unk_10063D460;
    id v11 = v5;
    id v12 = &v13;
    sub_1002CCDBC((uint64_t)v11, @"SELECT pid, payment_type FROM payment_application", v10);

    BOOL v8 = *((_BYTE *)v14 + 24) != 0;
  }

  else
  {
    BOOL v8 = 0;
  }

  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9007To9008:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (sub_1002CD314((BOOL)v6, (uint64_t)@"pass_group", (uint64_t)@"nfc_enabled INTEGER")
    && sub_1002CD0D0((BOOL)v6, 9008LL))
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_100353E50;
    v10[3] = &unk_100658170;
    id v11 = v6;
    id v12 = self;
    [v7 addDatabasePopulationOperation:v10];

    BOOL v8 = 1;
  }

  else
  {
    BOOL v8 = 0;
  }

  return v8;
}

- (BOOL)_migrateFrom9008To9009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, identifier TEXT, merchant_identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 9009LL);

  return v5;
}

- (BOOL)_migrateFrom9009To9010:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDDE0(v4, @"nfc");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned __int8 v7 = [v6 containsObject:@"encryption_public_key"];

  return v8;
}

- (BOOL)_migrateFrom9010To9011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS pass_location_source_index ON pass_location_source (location_source_pid);")
    && sub_1002CD0D0((BOOL)v4, 9011LL);

  return v5;
}

- (BOOL)_migrateFrom9011To9012:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 1;
  BOOL v7 = sub_1002CD0D0((BOOL)v5, 9012LL);
  *((_BYTE *)v14 + 24) = v7;
  if (v7)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_100354128;
    v10[3] = &unk_10063D460;
    id v11 = v5;
    id v12 = &v13;
    sub_1002CCDBC((uint64_t)v11, @"SELECT pid FROM payment_transaction", v10);

    BOOL v8 = *((_BYTE *)v14 + 24) != 0;
  }

  else
  {
    BOOL v8 = 0;
  }

  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9012To9013:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 1;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_message", (uint64_t)@"identifier TEXT"))
  {
    BOOL v7 = sub_1002CD0D0((BOOL)v5, 9013LL);
    *((_BYTE *)v14 + 24) = v7;
    if (v7)
    {
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      void v10[2] = sub_10035437C;
      v10[3] = &unk_10063D460;
      id v11 = v5;
      id v12 = &v13;
      sub_1002CCDBC((uint64_t)v11, @"SELECT pid FROM payment_message", v10);

      BOOL v8 = *((_BYTE *)v14 + 24) != 0;
    }

    else
    {
      BOOL v8 = 0;
    }
  }

  else
  {
    BOOL v8 = 0;
    *((_BYTE *)v14 + 24) = 0;
  }

  _Block_object_dispose(&v13, 8);

  return v8;
}

- (BOOL)_migrateFrom9013To9014:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"suspended_reason TEXT")
    && sub_1002CD0D0((BOOL)v5, 9014LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100354564;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9014To9015:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"has_stored_value INTEGER")
    && sub_1002CD0D0((BOOL)v5, 9015LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1003549CC;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9015To9016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"value_added_service_transaction",  (uint64_t)@"merchant_pid INTEGER")
    && sub_1002CD364((BOOL)v4, @"value_added_service_transaction", @"merchant_identifier")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS value_added_merchant (pid INTEGER, identifier TEXT, times_presented INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 9016LL);

  return v5;
}

- (BOOL)_migrateFrom9016To9017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_flavor_index ON pass (pass_flavor);")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS pass_type_identifier_hash_index ON pass_type (identifier_hash);")
    && sub_1002CD0D0((BOOL)v4, 9017LL);

  return v5;
}

- (BOOL)_migrateFrom9017To9018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"cobranded INTEGER")
    && sub_1002CD0D0((BOOL)v5, 9018LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100354C30;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9018To9200:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314( (BOOL)v5,  (uint64_t)@"pass",  (uint64_t)@"supports_serial_number_based_provisioning INTEGER")
    && sub_1002CD0D0((BOOL)v5, 9200LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100354DC8;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom9200To9300:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  BOOL v16 = sub_1002CD0D0((BOOL)v5, 9300LL);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100354F84;
  v10[3] = &unk_100658198;
  id v12 = &v13;
  id v7 = v5;
  id v11 = v7;
  sub_1002CCDBC((uint64_t)v7, @"SELECT pid FROM pass;", v10);
  char v8 = *((_BYTE *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom9300To10000:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v14 = 0LL;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  BOOL v7 = sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"has_background_image INTEGER");
  if (v7)
  {
    BOOL v7 = sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"has_strip_image INTEGER");
    if (v7) {
      LOBYTE(v7) = sub_1002CD0D0((BOOL)v5, 10000LL);
    }
  }

  BOOL v17 = v7;
  if (!*((_BYTE *)v15 + 24)) {
    goto LABEL_12;
  }
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10035528C;
  void v11[3] = &unk_100658198;
  uint64_t v13 = &v14;
  id v8 = v5;
  id v12 = v8;
  sub_1002CCDBC((uint64_t)v8, @"SELECT pid, background_hash, strip_hash FROM pass", v11);

  if (*((_BYTE *)v15 + 24))
  {
    BOOL v9 = sub_1002CD364((BOOL)v8, @"pass", @"icon_hash")
      && sub_1002CD364((BOOL)v8, @"pass", @"logo_hash")
      && sub_1002CD364((BOOL)v8, @"pass", @"thumbnail_hash")
      && sub_1002CD364((BOOL)v8, @"pass", @"background_hash")
      && sub_1002CD364((BOOL)v8, @"pass", @"strip_hash")
      && sub_1002CD364((BOOL)v8, @"pass", @"payment_assets_hash");
    *((_BYTE *)v15 + 24) = v9;
  }

  else
  {
LABEL_12:
    BOOL v9 = 0;
  }

  _Block_object_dispose(&v14, 8);

  return v9;
}

- (BOOL)_migrateFrom10000To10001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));")
    && sub_1002CD0D0((BOOL)v4, 10001LL);

  return v5;
}

- (BOOL)_migrateFrom10001To10002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_properties (pid INTEGER, payment_application_pid INTEGER, property_type INTEGER, perito_moreno TEXT, franz_josef INTEGER, biafo TEXT, pasterze TEXT, lambert INTEGER, jostedal INTEGER, fox INTEGER, hubbard INTEGER, mendenhall TEXT, canada INTEGER, siachen INTEGER, portage TEXT, PRIMARY KEY (pid))")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_properties (pid INTEGER, payment_application_pid INTEGER, property_type INTEGER, perito_moreno TEXT, franz_josef INTEGER, biafo TEXT, pasterze TEXT, lambert INTEGER, jostedal INTEGER, fox INTEGER, hubbard INTEGER, mendenhall TEXT, canada INTEGER, siachen INTEGER, portage TEXT, PRIMARY KEY (pid))")
    && sub_1002CD0D0((BOOL)v4, 10002LL);

  return v5;
}

- (BOOL)_migrateFrom10002To10003:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom10003To10004:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom10004To10005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"pass", @"order_within_group")
    && sub_1002CCA50((BOOL)v4, @"CREATE INDEX IF NOT EXISTS pass_unique_id_index ON pass (unique_id);")
    && sub_1002CD0D0((BOOL)v4, 10005LL);

  return v5;
}

- (BOOL)_migrateFrom10005To10006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"transaction_source INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"has_notification_service_data INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE payment_transaction SET has_notification_service_data = 1 WHERE (transaction_sources & 2)")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE payment_transaction SET transaction_source = 1            WHERE (transaction_sources & 1)")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE payment_transaction SET transaction_source = 2            WHERE (transaction_sources & 4)")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"transaction_sources")
    && sub_1002CD0D0((BOOL)v4, 10006LL);

  return v5;
}

- (BOOL)_migrateFrom10006To10007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS _01 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS _01_payment_application_pid_index ON _01 (payment_application_pid);")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"a INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"b INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"c TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"d INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"e INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"f TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"g INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"h INTEGER")

  return v5;
}

- (BOOL)_migrateFrom10007To10008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"payment_transaction", @"e")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"h")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"d")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"d BLOB")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"g")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"g BLOB")

  return v5;
}

- (BOOL)_migrateFrom10008To10009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_application", (uint64_t)@"supports_A INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_application", (uint64_t)@"a TEXT")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS _02 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE, a TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 10009LL);

  return v5;
}

- (BOOL)_migrateFrom10009To10010:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom10010To10011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CDB74((BOOL)v4, (uint64_t)@"pass_properties")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"f INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"g BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"h BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"i INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"j INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"l TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"m INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"n INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"o BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"p BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"q TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"r TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"s TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"t TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"v INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"w INTEGER")

  return v5;
}

- (BOOL)_migrateFrom10011To10012:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom10012To10013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"k INTEGER")

  return v5;
}

- (BOOL)_migrateFrom10013To10014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD898((BOOL)v4, @"payment_message", @"expired", @"archived")
    && sub_1002CD898( (BOOL)v4,  @"payment_message",  @"expires_on_next_transaction",  @"archive_on_next_transaction")
    && sub_1002CD0D0((BOOL)v4, 10014LL);

  return v5;
}

- (BOOL)_migrateFrom10014To10015:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom10015To10016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"aa INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"y INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"z INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"ab BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"ac BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"af INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"ag INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"ah TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"ai INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"aj INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"ak INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"ad TEXT")

  return v5;
}

- (BOOL)_migrateFrom10016To10200:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD898((BOOL)v4, @"payment_message", @"archive_on_next_transaction", @"message_type")
    && sub_1002CD0D0((BOOL)v4, 10200LL);

  return v5;
}

- (BOOL)_migrateFrom10200To10300:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"pass", @"iad_reporting_identifier") && sub_1002CD0D0((BOOL)v4, 10300LL);

  return v5;
}

- (BOOL)_migrateFrom10300To11000:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"low_balance_reminder_amount INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"low_balance_reminder_currency TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass",  (uint64_t)@"commute_plan_renewal_reminder_time_interval INTEGER");

  return v5;
}

- (BOOL)_migrateFrom11000To11001:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"issuer_country_code TEXT")
    && sub_1002CD0D0((BOOL)v5, 11001LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100356124;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom11001To11002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"ocean INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"wave TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"board TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"beach TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"metadata TEXT")

  return v5;
}

- (BOOL)_migrateFrom11002To11003:(id)a3 context:(id)a4
{
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100356A8C;
  v8[3] = &unk_1006581C0;
  id v4 = a3;
  id v9 = v4;
  BOOL v5 = objc_retainBlock(v8);
  BOOL v6 = sub_1002CCA50((BOOL)v4, @"DROP INDEX IF EXISTS _01_payment_application_pid_index;")
    && sub_1002CDBD4((BOOL)v4, (uint64_t)@"_01", (uint64_t)@"felica_transit_applet_state")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"a",  @"in_station")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"b",  @"in_shinkansen_station")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"aa",  @"shinkansen_ticket_active")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"c",  @"green_car_ticket_used")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"d",  @"history_sequence_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"e",  @"balance")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"f",  @"blacklisted")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"k",  @"shinkansen_validity_start_date")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"y",  @"shinkansen_validity_term")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"g",  @"shinkansen_origin_station_code")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"h",  @"shinkansen_destination_station_code")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"i",  @"shinkansen_departure_time")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"j",  @"shinkansen_arrival_time")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"l",  @"shinkansen_train_name")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"m",  @"shinkansen_car_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"z",  @"shinkansen_seat_row")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"n",  @"shinkansen_seat_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ab",  @"shinkansen_secondary_origin_station_code")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ac",  @"shinkansen_secondary_destination_station_code")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"af",  @"shinkansen_secondary_departure_time")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ag",  @"shinkansen_secondary_arrival_time")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ah",  @"shinkansen_secondary_train_name")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ai",  @"shinkansen_secondary_car_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"aj",  @"shinkansen_secondary_seat_row")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ak",  @"shinkansen_secondary_seat_number")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"o",  @"green_car_origin_station_code")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"p",  @"green_car_destination_station_code")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"q",  @"shinkansen_origin_station_string")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"r",  @"shinkansen_destination_station_string")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ad",  @"shinkansen_secondary_origin_station_string")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"ae",  @"shinkansen_secondary_destination_station_string")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"s",  @"green_car_origin_station_string")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"t",  @"green_car_destination_station_string")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"u",  @"green_car_validity_start_date")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"v",  @"has_green_car_ticket")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"w",  @"has_shinkansen_ticket")
    && ((unsigned int (*)(void *, const __CFString *, const __CFString *))v5[2])( v5,  @"x",  @"needs_station_processing")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS felica_transit_applet_state_payment_application_pid_index ON felica_transit_applet_state (payment_application_pid);")
    && sub_1002CDBD4((BOOL)v4, (uint64_t)@"_02", (uint64_t)@"payment_express_mode")
    && sub_1002CD898((BOOL)v4, @"payment_express_mode", @"a", @"express_mode")
    && sub_1002CD898( (BOOL)v4,  @"payment_application",  @"supports_A",  @"supports_optional_authentication")
    && sub_1002CD898((BOOL)v4, @"payment_application", @"a", @"applet_data_format")
    && sub_1002CD898((BOOL)v4, @"payment_application", @"b", @"applet_currency_code")
    && sub_1002CD898( (BOOL)v4,  @"payment_transaction",  @"processed_for_A",  @"processed_for_stations")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"d", @"start_station_code")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"f", @"start_station")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"g", @"end_station_code")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"i", @"end_station")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"a", @"transit_type")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"j", @"transit_modifiers")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"b", @"en_route")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"c", @"station_code_provider")
    && sub_1002CD0D0((BOOL)v4, 11003LL);

  return v6;
}

- (BOOL)_migrateFrom11003To11004:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11004To11005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"nfc", @"requires_certificate") && sub_1002CD0D0((BOOL)v4, 11005LL);

  return v5;
}

- (BOOL)_migrateFrom11005To11006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account (pid INTEGER, identifier TEXT, pass_pid INTEGER, state INTEGER, current_balance_currency TEXT, current_balance_amount INTEGER, identity_verification_required INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, pass_serial_number TEXT, pass_type_id TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 11006LL);

  return v5;
}

- (BOOL)_migrateFrom11006To11007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_fee (pid INTEGER, identifier TEXT, payment_transaction_pid INTEGER, type INTEGER, amount INTEGER, currency TEXT, localized_display_name TEXT,PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"subtotal_amount INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"foreign_exchange_information_destination_currency_code TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"foreign_exchange_information_destination_amount INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"foreign_exchange_information_exchange_rate TEXT")
    && sub_1002CD0D0((BOOL)v4, 11007LL);

  return v5;
}

- (BOOL)_migrateFrom11007To11008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD898((BOOL)v4, @"payment_transaction", @"transaction_identifier", @"payment_hash")
    && sub_1002CD898( (BOOL)v4,  @"payment_transaction",  @"transaction_identifier_component_1",  @"payment_hash_component_1")
    && sub_1002CD898( (BOOL)v4,  @"payment_transaction",  @"transaction_identifier_component_2",  @"payment_hash_component_2")
    && sub_1002CD0D0((BOOL)v4, 11008LL);

  return v5;
}

- (BOOL)_migrateFrom11008To11009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account_feature_descriptor (pid INTEGER, identifier TEXT, peer_payment_account_pid INTEGER, minimum_amount INTEGER, maximum_amount INTEGER, supported_networks TEXT, merchant_identifier TEXT, merchant_capabilities INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account", (uint64_t)@"country_code TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account", (uint64_t)@"associated_pass_url TEXT")
    && sub_1002CD898( (BOOL)v4,  @"peer_payment_account",  @"pass_serial_number",  @"associated_pass_serial_number")
    && sub_1002CD898( (BOOL)v4,  @"peer_payment_account",  @"pass_type_id",  @"associated_pass_type_identifier")
    && sub_1002CD0D0((BOOL)v4, 11009LL);

  return v5;
}

- (BOOL)_migrateFrom11009To11010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"peer_payment_account", @"identifier")
    && sub_1002CD0D0((BOOL)v4, 11010LL);

  return v5;
}

- (BOOL)_migrateFrom11010To11011:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11011To11012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_application",  (uint64_t)@"requires_deferred_authorization INTEGER")
    && sub_1002CD0D0((BOOL)v4, 11012LL);

  return v5;
}

- (BOOL)_migrateFrom11012To11013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"primary_funding_source_amount INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"primary_funding_source_currency_code TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"secondary_funding_source_amount INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"secondary_funding_source_currency_code TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"secondary_funding_source_network INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"secondary_funding_source_dpan_suffix TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"secondary_funding_source_fpan_identifier TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"secondary_funding_source_description TEXT")
    && sub_1002CD898((BOOL)v4, @"pass", @"supports_S", @"has_associated_peer_payment_account")
    && sub_1002CD0D0((BOOL)v4, 11013LL);

  return v5;
}

- (BOOL)_migrateFrom11013To11014:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11014To11015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"payment_transaction", @"wave") && sub_1002CD0D0((BOOL)v4, 11015LL);

  return v5;
}

- (BOOL)_migrateFrom11015To11016:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11016To11017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"transaction_status_changed_date INTEGER")
    && sub_1002CD0D0((BOOL)v4, 11017LL);

  return v5;
}

- (BOOL)_migrateFrom11017To11018:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11018To11019:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD898( (BOOL)v4,  @"pass",  @"requires_a_cup_of_tea",  @"requires_transfer_serial_number_based_provisioning")
    && sub_1002CD0D0((BOOL)v4, 11019LL);

  return v5;
}

- (BOOL)_migrateFrom11019To11020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"maximum_balance_amount INTEGER")
    && sub_1002CD0D0((BOOL)v4, 11020LL);

  return v5;
}

- (BOOL)_migrateFrom11020To11021:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11021To11022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"request_device_score_identifier TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"send_device_score_identifier TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"device_score_identifiers_required INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"device_score_identifiers_submitted INTEGER")
    && sub_1002CD0D0((BOOL)v4, 11022LL);

  return v5;
}

- (BOOL)_migrateFrom11022To11100:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11100To11200:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom11200To11201:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"proactive_fetch_period INTEGER")
    && sub_1002CD0D0((BOOL)v4, 11201LL);

  return v5;
}

- (BOOL)_migrateFrom11201To11300:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, in_station INTEGER, history_sequence_number INTEGER, balance INTEGER, loyalty_balance INTEGER, currency TEXT, blacklisted INTEGER, needs_station_processing INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 11300LL);

  return v5;
}

- (BOOL)_migrateFrom11300To11301:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"transaction_declined_reason INTEGER")
    && sub_1002CD0D0((BOOL)v4, 11301LL);

  return v5;
}

- (BOOL)_migrateFrom11301To11302:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"felica_transit_applet_state",  (uint64_t)@"balance_allowed_for_commute INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"felica_transit_applet_state",  (uint64_t)@"low_balance_notification_enabled INTEGER")
    && sub_1002CD0D0((BOOL)v4, 11302LL);

  return v5;
}

- (BOOL)_migrateFrom11302To11303:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"peer_payment_message_received_date INTEGER")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"ocean", @"peer_payment_type")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"board", @"peer_payment_counterpart_handle")
    && sub_1002CD898((BOOL)v4, @"payment_transaction", @"beach", @"peer_payment_memo")
    && sub_1002CD0D0((BOOL)v4, 11303LL);

  return v5;
}

- (BOOL)_migrateFrom11303To12000:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS apples (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"a INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"b TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"c INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"d TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"e TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"f TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"g TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"h TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"i TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"j TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"k TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"l TEXT")

  return v5;
}

- (BOOL)_migrateFrom12000To12001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pears (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS strawberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS clementines (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cucumbers (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS oranges (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS bananas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pineapples (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12001LL);

  return v5;
}

- (BOOL)_migrateFrom12001To12002:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12002To12003:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"card_type INTEGER")
    && sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion (pid INTEGER, payment_application_pid INTEGER, type TEXT, supports_express INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_tci (pid INTEGER, payment_automatic_selection_criterion_pid INTEGER, tci BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 12003LL))
  {
    [v6 addAutomaticSelectionCriteriaRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom12003To12004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_balance (pid INTEGER, pass_pid INTEGER NOT NULL, identifier TEXT, localized_title TEXT, localized_description TEXT, currency_code TEXT, exponent INTEGER, value INTEGER, is_primary_balance INTEGER, last_updated_date INTEGER NOT NULL, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12004LL);

  return v5;
}

- (BOOL)_migrateFrom12004To12005:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12005To12006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"pending_payment_count INTEGER")
    && sub_1002CD0D0((BOOL)v4, 12006LL);

  return v5;
}

- (BOOL)_migrateFrom12006To12007:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12007To12008:(id)a3 context:(id)a4
{
  return sub_1002CD0D0((BOOL)a3, 12008LL);
}

- (BOOL)_migrateFrom12008To12009:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12009To12010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_provided_description TEXT")
    && sub_1002CD0D0((BOOL)v4, 12010LL);

  return v5;
}

- (BOOL)_migrateFrom12010To12011:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100357CF0;
  v10[3] = &unk_10063BB78;
  id v12 = &v13;
  id v7 = v5;
  id v11 = v7;
  sub_1002CCC5C((uint64_t)v7, v10);
  char v8 = *((_BYTE *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom12011To12012:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"a TEXT") && sub_1002CD0D0((BOOL)v5, 12012LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100357EA4;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom12012To12013:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12013To12014:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12014To12015:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12015To12016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"p TEXT")

  return v5;
}

- (BOOL)_migrateFrom12016To12017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS blackberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD364((BOOL)v4, @"clementines", @"e")
    && sub_1002CD0D0((BOOL)v4, 12017LL);

  return v5;
}

- (BOOL)_migrateFrom12017To12018:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"j INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"k INTEGER")
    && sub_1002CD364((BOOL)v4, @"pineapples", @"b")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"b TEXT")
    && sub_1002CD364((BOOL)v4, @"pineapples", @"f")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"f TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"h INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"i INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"j INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"k INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"l INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"m INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"n INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"o INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"p INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"q INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12018To12019:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_1002CD0D0((BOOL)a3, 12019LL);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom12019To12020:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100358494;
  v10[3] = &unk_10063BB78;
  id v12 = &v13;
  id v7 = v5;
  id v11 = v7;
  sub_1002CCC5C((uint64_t)v7, v10);
  char v8 = *((_BYTE *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom12020To12021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_application", (uint64_t)@"contactless_priority INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12021To12022:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12022To12023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS grapes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS avocados (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom12023To12024:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"r TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"s TEXT")

  return v5;
}

- (BOOL)_migrateFrom12024To12025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tomatoes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, h TEXT, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12025LL);

  return v5;
}

- (BOOL)_migrateFrom12025To12026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mangos (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12026LL);

  return v5;
}

- (BOOL)_migrateFrom12026To12027:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS lychees (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, o TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rambutans (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12027LL);

  return v5;
}

- (BOOL)_migrateFrom12027To12028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS watermelons (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g TEXT, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom12028To12029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS raspberries (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f INTEGER, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12029LL);

  return v5;
}

- (BOOL)_migrateFrom12029To12030:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS nectarines (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom12030To12031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pitayas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom12031To12032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"p TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"q INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"r INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"s TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"t INTEGER")
    && sub_1002CD364((BOOL)v4, @"lychees", @"g")
    && sub_1002CD364((BOOL)v4, @"lychees", @"o")

  return v5;
}

- (BOOL)_migrateFrom12032To12033:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"raspberries", (uint64_t)@"i TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"raspberries", (uint64_t)@"j INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12033To12034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"lychees", @"t") && sub_1002CD0D0((BOOL)v4, 12034LL);

  return v5;
}

- (BOOL)_migrateFrom12034To12035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"secondary_funding_source_type INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE payment_transaction SET secondary_funding_source_type = 1 WHERE payment_transaction.transaction_type=5;")
    && sub_1002CD0D0((BOOL)v4, 12035LL);

  return v5;
}

- (BOOL)_migrateFrom12035To12036:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12036To12037:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS maps_merchant (pid INTEGER, identifier INTEGER, result_provider_identifier INTEGER, name TEXT, phone_number TEXT, url TEXT, location_latitude REAL, location_longitude REAL, postal_address TEXT, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"maps_merchant_pid INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"INSERT INTO    maps_merchant(   identifier, result_provider_identifier, name, phone_number, url, location_latitude, location_longitude, postal_address) SELECT    * FROM(   SELECT        pt.merchant_maps_identifier,       pt.merchant_result_provider_identifier,       pt.merchant_maps_name,       pt.merchant_phone_number,       pt.merchant_url,       pt.merchant_location_latitude,       pt.merchant_location_longitude,       pt.merchant_postal_address    FROM        payment_transaction AS pt    WHERE        (pt.merchant_maps_identifier IS NOT null AND pt.merchant_maps_identifier IS NOT 0)    ORDER BY        pt.transaction_date DESC) AS sorted_merchants GROUP BY    sorted_merchants.merchant_maps_identifier")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE    payment_transaction SET    maps_merchant_pid = (SELECT m.pid FROM maps_merchant AS m WHERE m.identifier = payment_transaction.merchant_maps_identifier) WHERE    payment_transaction.merchant_maps_identifier != 0")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_maps_name")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_phone_number")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_maps_identifier")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_result_provider_identifier")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_url")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_postal_address")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_location_latitude")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"merchant_location_longitude"))
  {
    sub_1002CD0D0((BOOL)v4, 12037LL);
    BOOL v5 = 1;
  }

  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

- (BOOL)_migrateFrom12037To12038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transit_network_identifier (pid INTEGER, payment_application_pid INTEGER, identifier TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12038LL);

  return v5;
}

- (BOOL)_migrateFrom12038To12039:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12039To12040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS blueberries (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD364((BOOL)v4, @"raspberries", @"k")

  return v5;
}

- (BOOL)_migrateFrom12040To12041:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS plantains (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom12041To12042:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12042To12043:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS jackfruits (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cantaloupes (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"apples", (uint64_t)@"i INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"v TEXT")

  return v5;
}

- (BOOL)_migrateFrom12043To12044:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12044To12045:(id)a3 context:(id)a4
{
  id v5 = a3;
  [a4 addAutomaticSelectionCriteriaRegeneration];
  BOOL v6 = sub_1002CD314((BOOL)v5, (uint64_t)@"payment_automatic_selection_criterion", (uint64_t)@"mask BLOB")
    && sub_1002CD314( (BOOL)v5,  (uint64_t)@"payment_automatic_selection_criterion_tci",  (uint64_t)@"is_primary INTEGER")
    && sub_1002CD0D0((BOOL)v5, 12045LL);

  return v6;
}

- (BOOL)_migrateFrom12045To12046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"b BLOB")

  return v5;
}

- (BOOL)_migrateFrom12046To12047:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"x INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"y TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"z INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"aa INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"c INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"d TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"e INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"f INTEGER")
    && sub_1002CD364((BOOL)v4, @"maps_merchant", @"b")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plantains", (uint64_t)@"g INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plantains", (uint64_t)@"h TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plantains", (uint64_t)@"i TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plantains", (uint64_t)@"j INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plantains", (uint64_t)@"k INTEGER")
    && sub_1002CD364((BOOL)v4, @"plantains", @"f")
    && sub_1002CD0D0((BOOL)v4, 12047LL);

  return v5;
}

- (BOOL)_migrateFrom12047To12048:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_application",  (uint64_t)@"supports_instant_funds_in INTEGER")
    && sub_1002CD0D0((BOOL)v4, 12048LL);

  return v5;
}

- (BOOL)_migrateFrom12048To12049:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS guavas (pid INTEGER, a TEXT, b INTEGER, c REAL, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12049LL);

  return v5;
}

- (BOOL)_migrateFrom12049To12050:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS balance_reminder (pid INTEGER, pass_pid INTEGER, balance_identifier TEXT, threshold TEXT, enabled INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 12050LL))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[PKPassPreferencesManager sharedInstance](&OBJC_CLASS___PKPassPreferencesManager, "sharedInstance"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_100359560;
    void v11[3] = &unk_100658170;
    id v12 = v5;
    id v13 = v7;
    id v8 = v7;
    [v6 addDatabasePopulationOperation:v11];

    BOOL v9 = 1;
  }

  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

- (BOOL)_migrateFrom12050To12051:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"ab TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"ac INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12051To12052:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transit_network_identifier",  (uint64_t)@"network_order INTEGER")
    && sub_1002CD0D0((BOOL)v4, 12052LL);

  return v5;
}

- (BOOL)_migrateFrom12052To12053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS discovery_item (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, type INTEGER, rule_identifier TEXT, triggers BLOB, layout_url TEXT, supported_localizations BLOB, os_version_requirement_range BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12053LL);

  return v5;
}

- (BOOL)_migrateFrom12053To12054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"identity_verification_for_disbursements_required INTEGER")
    && sub_1002CD0D0((BOOL)v4, 12054LL);

  return v5;
}

- (BOOL)_migrateFrom12054To12055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rule (pid INTEGER, identifier TEXT, predicate_format TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12055LL);

  return v5;
}

- (BOOL)_migrateFrom12055To12056:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_feature_descriptor",  (uint64_t)@"fee_percentage INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_feature_descriptor",  (uint64_t)@"minimum_fee INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_feature_descriptor",  (uint64_t)@"maximum_fee INTEGER")
    && sub_1002CD0D0((BOOL)v4, 12056LL);

  return v5;
}

- (BOOL)_migrateFrom12056To12057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS durian (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS fig (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS prune (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12057LL);

  return v5;
}

- (BOOL)_migrateFrom12057To12058:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12058To12059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS starfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12059LL);

  return v5;
}

- (BOOL)_migrateFrom12059To12060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"payment_transaction", @"z")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"aa")
    && sub_1002CD364((BOOL)v4, @"maps_merchant", @"e")
    && sub_1002CD364((BOOL)v4, @"maps_merchant", @"f")
    && sub_1002CD364((BOOL)v4, @"plantains", @"j")
    && sub_1002CD364((BOOL)v4, @"plantains", @"k")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"g BLOB")

  return v5;
}

- (BOOL)_migrateFrom12060To12061:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"m INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12061To12062:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"requires_clearing_merchant_cleanup INTEGER")
    && sub_1002CD0D0((BOOL)v4, 12062LL);

  return v5;
}

- (BOOL)_migrateFrom12062To12063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS papaya (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e BLOB, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k BLOB, l BLOB, m INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12063LL);

  return v5;
}

- (BOOL)_migrateFrom12063To12064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pears", (uint64_t)@"i INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12064To12065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS coconuts (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peaches (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom12065To12066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS whitney (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS williamson (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12066LL);

  return v5;
}

- (BOOL)_migrateFrom12066To12067:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12067To12068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS passionfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12068LL);

  return v5;
}

- (BOOL)_migrateFrom12068To12069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50((BOOL)v4, @"DELETE FROM durian;")
    && sub_1002CCA50((BOOL)v4, @"DELETE FROM fig;")
    && sub_1002CCA50((BOOL)v4, @"DELETE FROM prune;")
    && sub_1002CD364((BOOL)v4, @"durian", @"b")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"durian", (uint64_t)@"b TEXT")
    && sub_1002CD364((BOOL)v4, @"fig", @"d")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"fig", (uint64_t)@"d TEXT")
    && sub_1002CD364((BOOL)v4, @"fig", @"e")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"fig", (uint64_t)@"e TEXT")
    && sub_1002CD364((BOOL)v4, @"fig", @"f")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"fig", (uint64_t)@"f TEXT")

  return v5;
}

- (BOOL)_migrateFrom12069To12070:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12070To12071:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_1002CD0D0((BOOL)v6, 12071LL);
  if (os_variant_has_internal_ui(PKOSVariantSubsystem))
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_10035A0B0;
    v10[3] = &unk_100658170;
    id v11 = v6;
    id v12 = self;
    [v7 addDatabasePopulationOperation:v10];
  }

  return v8;
}

- (BOOL)_migrateFrom12071To12072:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12072To12073:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"ag TEXT")

  return v5;
}

- (BOOL)_migrateFrom12073To12074:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12074To12075:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12075To12076:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12076To12077:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"p INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12077To12078:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"q INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12078To12079:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"requires_merchant_reprocessing INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"last_merchant_reprocessing_date INTEGER")
    && sub_1002CD364((BOOL)v4, @"payment_transaction", @"requires_clearing_merchant_cleanup")
    && sub_1002CD364((BOOL)v4, @"pineapples", @"t")

  return v5;
}

- (BOOL)_migrateFrom12079To12080:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12080To12081:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS palisades (pid INTEGER, a TEXT NOT NULL UNIQUE, b TEXT NOT NULL, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS shasta (pid INTEGER, a TEXT NOT NULL UNIQUE, b INTEGER REFERENCES whitney(pid) ON DELETE CASCADE, c INTEGER DEFAULT 0, d TEXT NOT NULL, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12081LL);

  return v5;
}

- (BOOL)_migrateFrom12081To12082:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12082LL);

  return v5;
}

- (BOOL)_migrateWhitneyFrom1To2:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12083To12084:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12084To12085:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"i TEXT")

  return v5;
}

- (BOOL)_migrateFrom12085To12086:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 12086LL);

  return v5;
}

- (BOOL)_migrateFrom12086To12087:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"discovery_item",  (uint64_t)@"relevant_date_range_start_date INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"discovery_item",  (uint64_t)@"relevant_date_range_end_date INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"papaya", (uint64_t)@"n INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12087To12088:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"discovery_item", (uint64_t)@"item_order INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"discovery_item", (uint64_t)@"view_count INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"discovery_item", (uint64_t)@"max_view_count INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"papaya", (uint64_t)@"p INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"papaya", (uint64_t)@"q INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12088To12089:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"blackberries", (uint64_t)@"i TEXT")

  return v5;
}

- (BOOL)_migrateFrom12089To12090:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"u INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12090To12091:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12091To12092:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12092To12093:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12093To12094:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"bananas", (uint64_t)@"l INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bananas", (uint64_t)@"m INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineapples", (uint64_t)@"u INTEGER")

  return v5;
}

- (BOOL)_migrateFrom12094To12095:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_1002CD0D0((BOOL)a3, 12095LL);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom12095To12096:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateWhitneyFrom2To3:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom12097To12098:(id)a3 context:(id)a4
{
  return sub_1002CD0D0((BOOL)a3, 12098LL);
}

- (BOOL)_migrateFrom12XXXTo13000:(id)a3 context:(id)a4
{
  return sub_1002CD0D0((BOOL)a3, 13000LL);
}

- (BOOL)_migrateFrom13000To13001:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13001To13002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"suppress_notifications INTEGER")
    && sub_1002CD0D0((BOOL)v4, 13002LL);

  return v5;
}

- (BOOL)_migrateFrom13002To13003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_setup_product_configurations (pid INTEGER, identifier TEXT, partner_identifier TEXT, type INTEGER, state INTEGER, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 13003LL);

  return v5;
}

- (BOOL)_migrateFrom13003To13004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"passionfruits", @"h")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"passionfruits", (uint64_t)@"i INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"passionfruits", (uint64_t)@"j INTEGER")

  return v5;
}

- (BOOL)_migrateWhitneyFrom3To4:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13005To13006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v8 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS missing_remote_assets (pid INTEGER, unique_id TEXT NOT NULL UNIQUE, download_retries_count INTEGER DEFAULT 0, PRIMARY KEY (pid, download_retries_count));")
    && ((id v5 = sub_1002CDDE0(v4, @"notification_service"),
         BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(v5),
         unsigned __int8 v7 = [v6 containsObject:@"registration_url"],
         v6,
         (v7 & 1) != 0)

  return v8;
}

- (BOOL)_migrateFrom13006To13007:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_1002CD0D0((BOOL)v6, 13007LL);
  if (v8)
  {
    objc_initWeak(&location, self);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_10035B5D0;
    v10[3] = &unk_100653028;
    objc_copyWeak(&v11, &location);
    [v7 addPostMigrationOperation:v10];
    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }

  return v8;
}

- (BOOL)_migrateFrom13007To13008:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13008To13009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS kiwi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS currant (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS raisin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS gojiberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peanut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS acorn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS squash (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 13009LL);

  return v5;
}

- (BOOL)_migrateFrom13009To13010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"plantains", (uint64_t)@"n TEXT")

  return v5;
}

- (BOOL)_migrateFrom13010To13011:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)migratePalisadesFrom1To2:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"palisades", (uint64_t)@"c TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"palisades", (uint64_t)@"d TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"palisades", (uint64_t)@"e BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"palisades", (uint64_t)@"f INT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"palisades", (uint64_t)@"g INT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"shasta", (uint64_t)@"e BLOB")

  return v5;
}

- (BOOL)_addHumphreysTableMigration:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS humphreys (pid INTEGER, a NULLABLE INTEGER REFERENCES williamson(pid) ON DELETE CASCADE, b NULLABLE INTEGER REFERENCES shasta(pid) ON DELETE CASCADE, c INTEGER, d TEXT,e TEXT,PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 13013LL);

  return v5;
}

- (BOOL)_addKeithTableMigration:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS keith (pid INTEGER, a NULLABLE INTEGER REFERENCES whitney(pid) ON DELETE CASCADE, b NULLABLE INTEGER REFERENCES williamson(pid) ON DELETE CASCADE, c INTEGER, d INTEGER, e TEXT, f TEXT, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom13014To13015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"apples", (uint64_t)@"j INTEGER")

  return v5;
}

- (BOOL)_migrateFrom13015To13016:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13016To13017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"humphreys", (uint64_t)@"f BOOL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"humphreys", (uint64_t)@"g INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"humphreys", (uint64_t)@"h BLOB")
    && sub_1002CD364((BOOL)v4, @"keith", @"b")

  return v5;
}

- (BOOL)_migrateFrom13017To13018:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13018To13019:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"peanut", @"j")
    && sub_1002CD364((BOOL)v4, @"peanut", @"k")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peanut", (uint64_t)@"l BLOB")

  return v5;
}

- (BOOL)_migrateFrom13019To13020:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDDE0(v4, @"payment_transaction");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = ([v6 containsObject:@"fuzzy_mached"] & 1) == 0
    && sub_1002CD0D0((BOOL)v4, 13020LL);

  return v7;
}

- (BOOL)_migrateFrom13020To13021:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"s INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"t INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"u INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"currant", (uint64_t)@"h TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"currant", (uint64_t)@"i INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"kiwi", (uint64_t)@"m TEXT")

  return v5;
}

- (BOOL)_migrateFrom13021To13022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"strawberries", @"m")

  return v5;
}

- (BOOL)_migrateFrom13022To13023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"raisin", (uint64_t)@"i INTEGER")

  return v5;
}

- (BOOL)_migrateFrom13023To13024:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS cloud_store_token (pid INTEGER, zone_name TEXT, token_data BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 13024LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_10035BF5C;
    v9[3] = &unk_100639300;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13024To13025:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13025To13100:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tap_to_radar_prompt (pid INTEGER, reason TEXT, last_prompt_date INTEGER, prompt_count INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 13100LL);

  return v5;
}

- (BOOL)_migrateFrom13100To13101:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rainier (pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER,h TEXT, i TEXT, j INTEGER, k TEXT,PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 13101LL);

  return v5;
}

- (BOOL)_migrateFrom13101To13102:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS cloud_store_zone (pid INTEGER, zone_name TEXT, container_name TEXT, token_data BLOB, subscription_id TEXT, fetch_timestamp INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 13102LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_10035C23C;
    v9[3] = &unk_100639300;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13102To13103:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"associated_account_pid INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account", (uint64_t)@"identifier TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account", (uint64_t)@"role INTEGER")

  return v5;
}

- (BOOL)_migrateFrom13103To13104:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rincon (pid INTEGER, a TEXT, b INTEGER, c INTEGER, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 13104LL);

  return v5;
}

- (BOOL)_migrateFrom13104To13105:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS transit_applet_state_balance (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, currency TEXT, exponent INTEGER, balance INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS payment_transaction_amount (pid INTEGER, payment_transaction_pid, currency TEXT, exponent INTEGER, amount INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 13105LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_10035CD68;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13105To13106:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13106To13107:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS applet_state_dirty (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 13107LL);

  return v5;
}

- (BOOL)_migrateFrom13107To13108:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account", (uint64_t)@"cloud_store_zone_names TEXT")

  return v5;
}

- (BOOL)_migrateFrom13108To13109:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transaction_receipt (pid INTEGER, unique_id TEXT, receipt_provider_identifier TEXT, receipt_identifier TEXT, PRIMARY KEY (pid));")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"receipt_provider_identifier TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"receipt_provider_url TEXT")

  return v5;
}

- (BOOL)_migrateFrom13109To13110:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_application", (uint64_t)@"b INTEGER")

  return v5;
}

- (BOOL)_migrateFrom13110To13111:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"discovery_item", (uint64_t)@"hardware_version_range BLOB")

  return v5;
}

- (BOOL)_migrateFrom13111To13112:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS index_item (pid INTEGER, identifier TEXT, domain_identifier TEXT, type INTEGER, status INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, action_try_count INTEGER, searchable_item BLOB, PRIMARY KEY (pid));")
    && sub_1002CCA50((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_identifier ON index_item (identifier);")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS index_item_domain_identifier ON index_item (domain_identifier);")
    && sub_1002CCA50((BOOL)v4, @"CREATE INDEX IF NOT EXISTS index_item_status ON index_item (status);")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS index_fetched_metadata (type INTEGER, status INTEGER, PRIMARY KEY (type));")
    && sub_1002CD0D0((BOOL)v4, 13112LL);

  return v5;
}

- (BOOL)_migrateFrom13112To13113:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"whitney", (uint64_t)@"i BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"whitney", (uint64_t)@"j TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"humphreys", (uint64_t)@"i TEXT")

  return v5;
}

- (BOOL)_migrateFrom13113To13114:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS commute_plan_reminder (pid INTEGER, pass_pid INTEGER, commute_plan_identifier TEXT, time_interval REAL, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 13114LL))
  {
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue(+[PKPassPreferencesManager sharedInstance](&OBJC_CLASS___PKPassPreferencesManager, "sharedInstance"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10035D604;
    void v11[3] = &unk_100658170;
    id v12 = v5;
    id v13 = v7;
    id v8 = v7;
    [v6 addDatabasePopulationOperation:v11];

    BOOL v9 = 1;
  }

  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

- (BOOL)_migrateFrom13114To13115:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS e_mei_shan (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d BLOB, e INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 13115LL);

  return v5;
}

- (BOOL)_migrateFrom13115To13116:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account_additional_push_topics (pid INTEGER, peer_payment_account_pid INTEGER, preferences TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_preferences (pid INTEGER, peer_payment_account_pid INTEGER, requires_confirmation BOOL, can_receive_formal_payment_requests BOOL, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_restriction (pid INTEGER, peer_payment_preferences_pid INTEGER, account_identifier TEXT, restriction_type INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_preferences_notification (pid INTEGER, peer_payment_preferences_pid INTEGER, account_identifier TEXT, notification_type INTEGER, value BOOL, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 13116LL);

  return v5;
}

- (BOOL)_migrateFrom13116To13117:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS discovery_notification (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, rule_identifier TEXT, os_version_requirement_range BLOB, hardware_version_range BLOB, relevant_date_range_start_date INTEGER, relevant_date_range_end_date INTEGER, action_type INTEGER, title_key TEXT, message_key TEXT, action_title_key TEXT, action_info BLOB, scheduled_delivery_date INTEGER, delivered INTEGER,PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 13117LL);

  return v5;
}

- (BOOL)_migrateFrom13117To13118:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"palisades", (uint64_t)@"i TEXT")

  return v5;
}

- (BOOL)_migrateFrom13118To13119:(id)a3 context:(id)a4
{
  return sub_1002CD0D0((BOOL)a3, 13119LL);
}

- (BOOL)_migrateFrom13119To13120:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"expiration_date", @"transit_applet_state_balance");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  if (v6) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"transit_applet_state_balance",  (uint64_t)@"expiration_date INTEGER");
  }
  id v8 = sub_1002CE088(v4, @"last_refresh_sequence_number", @"transit_applet_state");
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (v9)
  {
    if (!v7) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v7) = sub_1002CD0D0((BOOL)v4, 13120LL);
    goto LABEL_11;
  }

  if (v7)
  {
    if (!sub_1002CD314( (BOOL)v4,  (uint64_t)@"transit_applet_state",  (uint64_t)@"last_refresh_sequence_number INTEGER"))
    {
      LOBYTE(v7) = 0;
      goto LABEL_11;
    }

    goto LABEL_9;
  }

- (BOOL)_migrateFrom13120To13400:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13400To13401:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"supports_service_mode INTEGER")
    && sub_1002CD0D0((BOOL)v5, 13401LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_10035DA78;
    v9[3] = &unk_100639300;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom13401To13402:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10035DC54;
  v10[3] = &unk_100658148;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom13402To13403:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13403To13404:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom13404To13405:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"top_left_background_title TEXT")

  return v5;
}

- (BOOL)_migrateFrom13405To13406:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_setup_product_configurations",  (uint64_t)@"notification_title TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_setup_product_configurations",  (uint64_t)@"notification_message TEXT")
    && sub_1002CD0D0((BOOL)v4, 13406LL);

  return v5;
}

- (BOOL)_migrateFrom13406To13500:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction_amount",  (uint64_t)@"preformatted_string TEXT")
    && sub_1002CD0D0((BOOL)v4, 13500LL);

  return v5;
}

- (BOOL)_migrateFrom13500To13501:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_preparePaymentTransactionAmountTableForOperations:(id)a3
{
  id v3 = a3;
  if (sub_1002CCA50( (BOOL)v3,  @"CREATE TABLE IF NOT EXISTS payment_transaction_amount_copy (pid INTEGER, payment_transaction_pid INTEGER, label TEXT, currency TEXT, exponent INTEGER, amount INTEGER, preformatted_string TEXT, PRIMARY KEY (pid));"))
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteMetaEntity anyInDatabase:withType:name:]( &OBJC_CLASS___SQLiteMetaEntity,  "anyInDatabase:withType:name:",  v3,  @"table",  @"payment_transaction_amount"));
    BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 SQL]);

    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[SQLiteTable tableWithSQL:](&OBJC_CLASS___SQLiteTable, "tableWithSQL:", v5));
    BOOL v7 = v6;
    if (v6)
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 columnNames]);
      BOOL v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteTable SQLToInsertColumnNames:fromTableNamed:intoTableNamed:]( &OBJC_CLASS___SQLiteTable,  "SQLToInsertColumnNames:fromTableNamed:intoTableNamed:",  v8,  @"payment_transaction_amount",  @"payment_transaction_amount_copy"));
      BOOL v10 = sub_1002CCA50((BOOL)v3, v9)
         && sub_1002CDB74((BOOL)v3, (uint64_t)@"payment_transaction_amount")
         && sub_1002CDBD4( (BOOL)v3,  (uint64_t)@"payment_transaction_amount_copy",  (uint64_t)@"payment_transaction_amount");
    }

    else
    {
      BOOL v10 = 0;
    }
  }

  else
  {
    BOOL v10 = 0;
  }

  return v10;
}

- (BOOL)_migrateFrom13501To14000:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v32 = a4;
  uint64_t Object = PKLogFacilityTypeGetObject(0LL);
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Starting _migrateFrom13501To14000", buf, 2u);
  }

  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Altering payment_transaction_amount to remove cascaded delete",  buf,  2u);
  }

  -[PDDatabaseManager _preparePaymentTransactionAmountTableForOperations:]( self,  "_preparePaymentTransactionAmountTableForOperations:",  v6);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Finished altering payment_transaction_amount",  buf,  2u);
  }

  id v9 = sub_1002CDDE0(v6, @"payment_transaction");
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = sub_1002CDDE0(v6, @"payment_application");
  id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  id v13 = sub_1002CDDE0(v6, @"pass");
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  *(void *)buf = 0LL;
  __int128 v48 = buf;
  uint64_t v49 = 0x2020000000LL;
  BOOL v50 = sub_1002CCA50( (BOOL)v6,  @"CREATE TABLE IF NOT EXISTS transaction_source (pid INTEGER, identifier  TEXT, type INTEGER, PRIMARY KEY (pid));");
  if (([v10 containsObject:@"source_pid"] & 1) == 0)
  {
    uint64_t v15 = v48;
    if (v48[24])
    {
      BOOL v16 = sub_1002CD314((BOOL)v6, (uint64_t)@"payment_transaction", (uint64_t)@"source_pid INTEGER");
      uint64_t v15 = v48;
    }

    else
    {
      BOOL v16 = 0;
    }

    v15[24] = v16;
  }

  if ((objc_msgSend(v14, "containsObject:", @"transaction_source_pid", v32) & 1) == 0)
  {
    BOOL v17 = v48;
    if (v48[24])
    {
      BOOL v18 = sub_1002CD314((BOOL)v6, (uint64_t)@"pass", (uint64_t)@"transaction_source_pid INTEGER");
      BOOL v17 = v48;
    }

    else
    {
      BOOL v18 = 0;
    }

    v17[24] = v18;
  }

  if (([v12 containsObject:@"transaction_source_pid"] & 1) == 0)
  {
    id v19 = v48;
    if (v48[24])
    {
      BOOL v20 = sub_1002CD314( (BOOL)v6,  (uint64_t)@"payment_application",  (uint64_t)@"transaction_source_pid INTEGER");
      id v19 = v48;
    }

    else
    {
      BOOL v20 = 0;
    }

    v19[24] = v20;
  }

  v45[0] = _NSConcreteStackBlock;
  v45[1] = 3221225472LL;
  v45[2] = sub_10035E798;
  v45[3] = &unk_100658288;
  id v21 = v6;
  id v46 = v21;
  char v22 = objc_retainBlock(v45);
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 3221225472LL;
  v43[2] = sub_10035E9CC;
  v43[3] = &unk_1006582B0;
  id v23 = v21;
  id v44 = v23;
  int v24 = objc_retainBlock(v43);
  if (!v48[24]) {
    goto LABEL_29;
  }
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472LL;
  v37[2] = sub_10035EBC8;
  v37[3] = &unk_1006582D8;
  id v25 = v23;
  id v38 = v25;
  uint64_t v40 = v24;
  id v26 = v22;
  id v41 = v26;
  id v39 = v10;
  __int128 v42 = buf;
  sub_1002CCDBC((uint64_t)v25, @"SELECT pid, payment_application_pid, pass_pid FROM payment_transaction", v37);
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  v34[2] = sub_10035F0EC;
  v34[3] = &unk_100658300;
  id v27 = v25;
  id v35 = v27;
  uint64_t v36 = v26;
  [v33 addDatabasePopulationOperation:v34];

  if (v48[24])
  {
    BOOL v28 = sub_1002CD0D0((BOOL)v27, 14000LL);
    v48[24] = v28;
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v29 = @"NO";
      if (v28) {
        __int128 v29 = @"YES";
      }
      *(_DWORD *)__int128 v51 = 138412290;
      __int128 v52 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Finished _migrateFrom13501To14000 with success %@",  v51,  0xCu);
    }

    BOOL v30 = v48[24] != 0;
  }

  else
  {
LABEL_29:
    BOOL v30 = 0;
  }

  _Block_object_dispose(buf, 8);
  return v30;
}

- (BOOL)_migrateFrom14000To14001:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (sub_1002CD314( (BOOL)v6,  (uint64_t)@"payment_transaction",  (uint64_t)@"peer_payment_account_identifier TEXT")
    && sub_1002CD314( (BOOL)v6,  (uint64_t)@"peer_payment_account",  (uint64_t)@"transaction_source_pid INTEGER")
    && sub_1002CD0D0((BOOL)v6, 14001LL))
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    id v13[2] = sub_10035F4D4;
    v13[3] = &unk_100653140;
    id v14 = v6;
    sub_1002CCDBC((uint64_t)v14, @"SELECT pid, associated_account_pid FROM peer_payment_account", v13);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10035F630;
    void v11[3] = &unk_1006392B0;
    void v11[4] = self;
    id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v8 = v12;
    [v7 addPostMigrationOperation:v11];

    BOOL v9 = 1;
  }

  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

- (BOOL)_migrateFrom14001To14002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"c TEXT") && sub_1002CD0D0((BOOL)v4, 14002LL);

  return v5;
}

- (BOOL)_migrateFrom14002To14003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS world_region (pid INTEGER, parent_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, type INTEGER, latitude REAL, longitude REAL, latitude_region REAL, longitude_region REAL, radius REAL, identifier TEXT, muid INTEGER, result_provider_identifier INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS world_region_localized_content (pid INTEGER, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, name TEXT, locale_identifier TEXT, status INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS world_region_mapping (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid), world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, match_try_count INTEGER, last_modified_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14003LL);

  return v5;
}

- (BOOL)_migrateFrom14003To14004:(id)a3 context:(id)a4
{
  id v4 = a3;
  LODWORD(v5) = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_database (pid INTEGER, container_name TEXT, scope INTEGER, subscription_id TEXT, PRIMARY KEY (pid));")
             && sub_1002CD314( (BOOL)v4,  (uint64_t)@"cloud_store_zone",  (uint64_t)@"container_database_pid INTEGER")
             && sub_1002CD314((BOOL)v4, (uint64_t)@"cloud_store_zone", (uint64_t)@"zone_owner TEXT");
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_10035FA78;
  v13[3] = &unk_100658328;
  id v6 = v4;
  id v14 = v6;
  id v7 = objc_retainBlock(v13);
  if ((_DWORD)v5)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_10035FBD0;
    v10[3] = &unk_100658350;
    id v5 = v6;
    id v11 = v5;
    id v12 = v7;
    sub_1002CCDBC((uint64_t)v5, @"SELECT pid FROM cloud_store_zone", v10);
    BOOL v8 = sub_1002CD364((BOOL)v5, @"cloud_store_zone", @"container_name");

    LOBYTE(v5) = v8 && sub_1002CD0D0((BOOL)v5, 14004LL);
  }

  return (char)v5;
}

- (BOOL)_migrateFrom14004To14005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_zone_share_participant (pid INTEGER, cloud_store_zone_pid INTEGER, participant_handle TEXT, lookup_info BLOB, invitation_token BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14005LL);

  return v5;
}

- (BOOL)_migrateFrom14005To14006:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD898( (BOOL)v4,  @"peer_payment_preferences_notification",  @"account_identifier",  @"alt_dsid")
    && sub_1002CD898( (BOOL)v4,  @"peer_payment_preferences_restriction",  @"account_identifier",  @"alt_dsid")
    && sub_1002CD0D0((BOOL)v4, 14006LL);

  return v5;
}

- (BOOL)_migrateFrom14006To14007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"index_fetched_metadata", (uint64_t)@"version INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS index_metadata (version INTEGER, PRIMARY KEY (version));")
    && sub_1002CD0D0((BOOL)v4, 14007LL);

  return v5;
}

- (BOOL)_migrateFrom14007To14008:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"rincon", (uint64_t)@"d TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"rincon", (uint64_t)@"e TEXT")

  return v5;
}

- (BOOL)_migrateFrom14008To14009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_account_invitation (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, status INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14009LL);

  return v5;
}

- (BOOL)_migrateFrom14009To14010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS world_region_transaction ON world_region_mapping(payment_transaction_pid);")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS world_region_localized_content_name ON world_region_localized_content(name COLLATE NOCASE);")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"world_region_mapping", (uint64_t)@"last_error_domain TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"world_region_mapping", (uint64_t)@"last_error_code INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"world_region", (uint64_t)@"latitude_delta REAL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"world_region", (uint64_t)@"longitude_delta REAL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"world_region", (uint64_t)@"abbreviation_code TEXT")
    && sub_1002CD364((BOOL)v4, @"world_region", @"latitude_region")
    && sub_1002CD364((BOOL)v4, @"world_region", @"longitude_region")
    && sub_1002CD364((BOOL)v4, @"world_region", @"radius")
    && sub_1002CCA50((BOOL)v4, @"DELETE FROM world_region;")
    && sub_1002CCA50((BOOL)v4, @"DELETE FROM world_region_mapping;")
    && sub_1002CCA50((BOOL)v4, @"DELETE FROM world_region_localized_content;")
    && sub_1002CD0D0((BOOL)v4, 14010LL);

  return v5;
}

- (BOOL)_migrateFrom14010To14011:(id)a3 context:(id)a4
{
  id v5 = a3;
  [a4 addAutomaticSelectionCriteriaRegeneration];
  BOOL v6 = sub_1002CD314( (BOOL)v5,  (uint64_t)@"payment_automatic_selection_criterion",  (uint64_t)@"supports_in_session_express INTEGER")
    && sub_1002CD0D0((BOOL)v5, 14011LL);

  return v6;
}

- (BOOL)_migrateFrom14011To14012:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14012To14013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"barcode_identifier TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"payment_pin_format INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"requested_auth_mechanisms INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_authentication (pid INTEGER, processed_auth_mechanisms INTEGER, complete INTEGER, auth_data_payment_pin BLOB, auth_data_transaction_signature BLOB, auth_data_user_confirmation BLOB, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 14013LL);

  return v5;
}

- (BOOL)_migrateFrom14013To14014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"primary_funding_source_description TEXT")
    && sub_1002CD0D0((BOOL)v4, 14014LL);

  return v5;
}

- (BOOL)_migrateFrom14014To14015:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (!sub_1002CDB74((BOOL)v4, (uint64_t)@"world_region_mapping"))
  {
    sub_1002CCA50( (BOOL)v4,  @"DELETE FROM payment_transaction WHERE pid IN (SELECT pt.pid FROM payment_transaction pt LEFT JOIN transaction_source tr ON tr.pid = pt.source_pid WHERE tr.pid IS NULL);");
    goto LABEL_6;
  }

  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS world_region_mapping (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, world_region_pid INTEGER REFERENCES world_region(pid) ON DELETE CASCADE, match_try_count INTEGER, last_modified_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, PRIMARY KEY (pid));");
  sub_1002CCA50( (BOOL)v4,  @"DELETE FROM payment_transaction WHERE pid IN (SELECT pt.pid FROM payment_transaction pt LEFT JOIN transaction_source tr ON tr.pid = pt.source_pid WHERE tr.pid IS NULL);");
  if (v5)
  {
    if (sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS world_region_transaction ON world_region_mapping(payment_transaction_pid);"))
    {
      LOBYTE(v5) = sub_1002CD0D0((BOOL)v4, 14015LL);
      goto LABEL_7;
    }

- (BOOL)_migrateFrom14015To14016:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"h", @"keith");
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return v7;
}

- (BOOL)_migrateFrom14016To14017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_tag (payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, tag INTEGER);")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_tag_index ON payment_transaction_tag(payment_transaction_pid);")
    && sub_1002CD0D0((BOOL)v4, 14017LL);

  return v5;
}

- (BOOL)_migrateFrom14017To14018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_1002CE088(v5, @"supports_service_mode", @"payment_application");
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  if (!v8)
  {
    if (!sub_1002CD314( (BOOL)v5,  (uint64_t)@"payment_application",  (uint64_t)@"supports_service_mode INTEGER"))
    {
      BOOL v9 = 0;
      goto LABEL_6;
    }

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_100360470;
    void v11[3] = &unk_100639300;
    id v12 = v5;
    [v6 addPostMigrationOperation:v11];
  }

  BOOL v9 = sub_1002CD0D0((BOOL)v5, 14018LL);
LABEL_6:

  return v9;
}

- (BOOL)_migrateFrom14018To14019:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_1002CE088(v5, @"k", @"whitney");
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  if (v8) {
    goto LABEL_3;
  }
  BOOL v9 = sub_1002CD314((BOOL)v5, (uint64_t)@"whitney", (uint64_t)@"k INTEGER");
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10036066C;
  void v11[3] = &unk_100658148;
  id v12 = v5;
  [v6 addDatabasePopulationOperation:v11];

  if (v9) {
LABEL_3:
  }
    LOBYTE(v9) = sub_1002CD0D0((BOOL)v5, 14019LL);

  return v9;
}

- (BOOL)_migrateFrom14019To14020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"nominal_amount INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"has_additional_offers BOOL")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_amount_modifiers (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, modifier_type TEXT, modifier_description TEXT, modifier_order INTEGER, amount INTEGER, currency TEXT, exponent INTEGER, PRIMARY KEY(pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_awards (pid INTEGER, payment_transaction_pid INTEGER REFERENCES payment_transaction(pid) ON DELETE CASCADE, award_type TEXT, award_description TEXT, award_order INTEGER, relevant_account_name TEXT, amount INTEGER, currency TEXT, exponent INTEGER, PRIMARY KEY(pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_authentication_index ON payment_transaction_authentication(payment_transaction_pid);")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_amount_modifiers_index ON payment_transaction_amount_modifiers(payment_transaction_pid);")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_awards_index ON payment_transaction_awards(payment_transaction_pid);")
    && sub_1002CD0D0((BOOL)v4, 14020LL);

  return v5;
}

- (BOOL)_migrateFrom14020To14021:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14021To14022:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"label", @"payment_transaction_amount");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return v7;
}

- (BOOL)_migrateFrom14022To14023:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"applet_state_dirty", @"transit_applet_state");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  BOOL v7 = (v6
  return v7;
}

- (BOOL)_migrateFrom14023To14024:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"top_left_background_title", @"pass");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  if (v6) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"top_left_background_title TEXT");
  }
  id v8 = sub_1002CE088(v4, @"top_right_background_title", @"pass");
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (v9)
  {
    if (!v7) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v7) = sub_1002CD0D0((BOOL)v4, 14024LL);
    goto LABEL_11;
  }

  if (v7)
  {
    if (!sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"top_right_background_title TEXT"))
    {
      LOBYTE(v7) = 0;
      goto LABEL_11;
    }

    goto LABEL_9;
  }

- (BOOL)_migrateFrom14024To14025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"person_to_person_restriction_type INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14025LL);

  return v5;
}

- (BOOL)_migrateFrom14025To14026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"associated_account_last_updated_date INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"associated_account_proactive_fetch_period INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14026LL);

  return v5;
}

- (BOOL)_migrateFrom14026To14027:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_additional_push_topics",  (uint64_t)@"associated_accounts TEXT")
    && sub_1002CD0D0((BOOL)v4, 14027LL);

  return v5;
}

- (BOOL)_migrateFrom14027To14028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS barcode_fetch (pid INTEGER, next_background_fetch_date INTEGER, background_fetch_retry_level INTEGER, pass_pid INTEGER REFERENCES pass(pid) ON DELETE CASCADE, PRIMARY KEY(pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS next_background_fetch_date_index ON barcode_fetch(next_background_fetch_date);")
    && sub_1002CD0D0((BOOL)v4, 14028LL);

  return v5;
}

- (BOOL)_migrateFrom14028To14029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_associated_account_removal_record (pid INTEGER, peer_payment_account_pid INTEGER, alt_dsid TEXT, reason INTEGER, date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14029LL);

  return v5;
}

- (BOOL)_migrateFrom14029To14030:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"notification_title", @"payment_setup_product_configurations");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  if (v6) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_setup_product_configurations",  (uint64_t)@"notification_title TEXT");
  }
  id v8 = sub_1002CE088(v4, @"notification_message", @"payment_setup_product_configurations");
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (v9)
  {
    if (!v7) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v7) = sub_1002CD0D0((BOOL)v4, 14030LL);
    goto LABEL_11;
  }

  if (v7)
  {
    if (!sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_setup_product_configurations",  (uint64_t)@"notification_message TEXT"))
    {
      LOBYTE(v7) = 0;
      goto LABEL_11;
    }

    goto LABEL_9;
  }

- (BOOL)_migrateFrom14030To14031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD420((BOOL)v4, @"rincon", &off_1006911A8, 0LL)

  return v5;
}

- (BOOL)_migrateFrom14031To14032:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14032To14033:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314( (BOOL)v5,  (uint64_t)@"payment_transaction",  (uint64_t)@"eligible_eligible_rewards_percent_aggregate INTEGER")
    && sub_1002CD314( (BOOL)v5,  (uint64_t)@"payment_transaction",  (uint64_t)@"eligible_rewards_cash_aggregate INTEGER")
    && sub_1002CD0D0((BOOL)v5, 14033LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1003610B4;
    v9[3] = &unk_100639300;
    id v10 = v5;
    [v6 addPostMigrationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom14033To14034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_associated_account_removal_record",  (uint64_t)@"has_presented_notification INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14034LL);

  return v5;
}

- (BOOL)_migrateFrom14034To14035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction_awards", (uint64_t)@"award_identifier TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction_awards", (uint64_t)@"award_subtype TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction_awards", (uint64_t)@"localized_amount TEXT")

  return v5;
}

- (BOOL)_migrateFrom14035To14036:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (!sub_1002CD898((BOOL)v4, @"payment_transaction", @"b", @"account_identifier")) {
    goto LABEL_5;
  }
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_1003614B0;
  v9[3] = &unk_100653140;
  id v5 = v4;
  id v10 = v5;
  sub_1002CCDBC((uint64_t)v5, @"SELECT pid, peer_payment_account_identifier from payment_transaction;", v9);
  BOOL v6 = sub_1002CD364((BOOL)v5, @"payment_transaction", @"peer_payment_account_identifier");

  if (v6) {
    BOOL v7 = sub_1002CD0D0((BOOL)v5, 14036LL);
  }
  else {
LABEL_5:
  }
    BOOL v7 = 0;

  return v7;
}

- (BOOL)_migrateFrom14036To14037:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD898((BOOL)v4, @"payment_transaction", @"feature", @"account_type")
    && sub_1002CD0D0((BOOL)v4, 14037LL);

  return v5;
}

- (BOOL)_migrateFrom14037To14038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_application_barcode_service_metadata (pid INTEGER, payment_application_pid INTEGER REFERENCES payment_application(pid) ON DELETE CASCADE, evaluated_policy_domain_state BLOB, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 14038LL);

  return v5;
}

- (BOOL)_migrateFrom14038To14039:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"nonce BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"signing_key_material BLOB")

  return v5;
}

- (BOOL)_migrateFrom14039To14040:(id)a3 context:(id)a4
{
  id v5 = a3;
  -[PDDatabaseManager _populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:]( self,  "_populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:",  v5);
  LOBYTE(self) = sub_1002CD0D0((BOOL)v5, 14040LL);

  return (char)self;
}

- (void)_populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:(id)a3
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager dbPeerPaymentAccount](self, "dbPeerPaymentAccount"));
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue([v5 associatedPassUniqueID]);
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"SELECT transaction_source.identifier from payment_application, transaction_source, pass WHERE pass.unique_id = %@ AND payment_application.pass_pid = pass.pid AND transaction_source.pid = payment_application.transaction_source_pid;",
                   v6));

  uint64_t v19 = 0LL;
  BOOL v20 = &v19;
  uint64_t v21 = 0x3032000000LL;
  char v22 = sub_10035C810;
  id v23 = sub_10035C820;
  int v24 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  void v18[2] = sub_100361984;
  v18[3] = &unk_1006456F8;
  void v18[4] = &v19;
  sub_1002CCDBC((uint64_t)v4, v7, v18);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([(id)v20[5] anyObject]);
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_1003619F8;
  v13[3] = &unk_100658378;
  id v10 = v4;
  id v14 = v10;
  id v11 = v8;
  id v15 = v11;
  id v12 = v9;
  id v16 = v12;
  BOOL v17 = self;
  sub_1002CCDBC( (uint64_t)v10,  @"SELECT pid, account_identifier, account_type, source_pid from payment_transaction;",
    v13);

  _Block_object_dispose(&v19, 8);
}

- (BOOL)_migrateFrom14040To14041:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"preformatted_string", @"payment_transaction_amount");
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  BOOL v7 = (v6
     || sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction_amount",  (uint64_t)@"preformatted_string TEXT"))
    && sub_1002CD0D0((BOOL)v4, 14041LL);

  return v7;
}

- (BOOL)_migrateFrom14041To14042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"pass", @"top_left_background_title")
    && sub_1002CD364((BOOL)v4, @"pass", @"top_right_background_title")
    && sub_1002CD0D0((BOOL)v4, 14042LL);

  return v5;
}

- (BOOL)_migrateFrom14042To14043:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"preformatted_string", @"payment_balance");
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return v7;
}

- (BOOL)_migrateFrom14043To14044:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14044To14045:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14045To14046:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14046To14047:(id)a3 context:(id)a4
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100361FEC;
  v7[3] = &unk_100639300;
  id v8 = a3;
  id v5 = v8;
  [a4 addPostMigrationOperation:v7];
  LOBYTE(a4) = sub_1002CD0D0((BOOL)v5, 14047LL);

  return (char)a4;
}

- (BOOL)_migrateFrom14047To14048:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14048To14049:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"associated_account_next_possible_fetch_date INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"associated_account_backoff_level INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"account_next_possible_fetch_date INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"account_backoff_level INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"associated_account_state_dirty INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14049LL);

  return v5;
}

- (BOOL)_migrateFrom14049To14050:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction_awards",  (uint64_t)@"claim_expiry_date INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction_awards",  (uint64_t)@"redeem_expiry_date INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction_awards", (uint64_t)@"claim_expired BOOL")

  return v5;
}

- (BOOL)_migrateFrom14050To14051:(id)a3 context:(id)a4
{
  id v5 = a3;
  -[PDDatabaseManager _populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:]( self,  "_populateAccountTypeForPeerPaymentAndBroadwayTransactionsForDatabase:",  v5);
  LOBYTE(self) = sub_1002CD0D0((BOOL)v5, 14051LL);

  return (char)self;
}

- (BOOL)_migrateFrom14051To14052:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"durian", (uint64_t)@"m INTEGER DEFAULT 1")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"durian", (uint64_t)@"n TEXT")

  return v5;
}

- (BOOL)_migrateFrom14052To14053:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"transaction_source_pid", @"pass");
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return v7;
}

- (BOOL)_migrateFrom14053To14054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_feature_descriptor",  (uint64_t)@"os_version_requirement_range BLOB")
    && sub_1002CD0D0((BOOL)v4, 14054LL);

  return v5;
}

- (BOOL)_migrateFrom14054To14055:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14055To14056:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14056To14057:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14057To14058:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"displayed_associated_account_active_notification INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE peer_payment_account SET displayed_associated_account_active_notification = 1 WHERE associated_account_pid IS NOT NULL")
    && sub_1002CD0D0((BOOL)v4, 14058LL);

  return v5;
}

- (BOOL)_migrateFrom14058To14059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_invitation",  (uint64_t)@"registration_result INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_invitation",  (uint64_t)@"remote_registration_request_level INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14059LL);

  return v5;
}

- (BOOL)_migrateFrom14059To14060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS gooseberry (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plum", (uint64_t)@"e TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pears", (uint64_t)@"l INTEGER")

  return v5;
}

- (BOOL)_migrateFrom14060To14061:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"cancellable BOOL")

  return v5;
}

- (BOOL)_migrateFrom14061To14062:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peanuts (pid INTEGER, account_pid INTEGER, last_updated_date INTEGER, dirty INTEGER, PRIMARY KEY(pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS almonds (pid INTEGER, peanuts_pid INTEGER, zone_name TEXT, account_identifier TEXT, account_type INTEGER, access INTEGER, mode INTEGER, a TEXT, b TEXT, PRIMARY KEY(pid));")

  return v5;
}

- (BOOL)_migrateFrom14062To14063:(id)a3 context:(id)a4
{
  id v5 = a3;
  if (-[PDDatabaseManager _preparePaymentTransactionAmountTableForOperations:]( self,  "_preparePaymentTransactionAmountTableForOperations:",  v5))
  {
    BOOL v6 = sub_1002CD0D0((BOOL)v5, 14063LL);
  }

  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

- (BOOL)_migrateFrom14063To14064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"strawberries", (uint64_t)@"n INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"strawberries", (uint64_t)@"o INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pears", (uint64_t)@"n TEXT")

  return v5;
}

- (BOOL)_migrateFrom14064To14065:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14065To14066:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14066To14067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"gooseberry", (uint64_t)@"i TEXT")

  return v5;
}

- (BOOL)_migrateFrom14067To14068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"durian", (uint64_t)@"q TEXT")

  return v5;
}

- (BOOL)_migrateFrom14068To14069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction_authentication",  (uint64_t)@"data_collected_auth_mechanisms INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14069LL);

  return v5;
}

- (BOOL)_migrateFrom14069To14070:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"maps_merchant", (uint64_t)@"last_processed_date INTEGER")

  return v5;
}

- (BOOL)_migrateFrom14070To14400:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t Object = PKLogFacilityTypeGetObject(24LL);
  BOOL v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Starting _migrateFrom14069To14400...", buf, 2u);
  }

  *(void *)buf = 0LL;
  uint64_t v19 = buf;
  uint64_t v20 = 0x2020000000LL;
  BOOL v10 = sub_1002CCA50( (BOOL)v6,  @"CREATE TABLE IF NOT EXISTS payment_transaction_archive (pid INTEGER, payment_transaction_pid INTEGER, PRIMARY KEY(pid));");
  if (v10) {
    LOBYTE(v10) = sub_1002CCA50( (BOOL)v6,  @"CREATE TABLE IF NOT EXISTS payment_transaction_archive_location (pid INTEGER, archive_pid INTEGER, type INTEGER, cloud_store_zone_pid INTEGER, archived INTEGER, PRIMARY KEY(pid));");
  }
  BOOL v21 = v10;
  if (!v19[24]) {
    goto LABEL_9;
  }
  BOOL v11 = sub_1002CD314((BOOL)v6, (uint64_t)@"payment_transaction", (uint64_t)@"archive_pid INTEGER");
  v19[24] = v11;
  if (!v11) {
    goto LABEL_9;
  }
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  void v15[2] = sub_100362D6C;
  void v15[3] = &unk_1006456D0;
  void v15[4] = self;
  id v12 = v6;
  id v16 = v12;
  BOOL v17 = buf;
  sub_1002CCDBC((uint64_t)v12, @"SELECT pid FROM payment_transaction", v15);

  if (v19[24])
  {
    BOOL v13 = sub_1002CD0D0((BOOL)v12, 14400LL);
    v19[24] = v13;
  }

  else
  {
LABEL_9:
    BOOL v13 = 0;
  }

  _Block_object_dispose(buf, 8);

  return v13;
}

- (BOOL)_migrateFrom14400To14401:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS prickly_pear (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14401LL);

  return v5;
}

- (BOOL)_migrateFrom14401To14402:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14402To14403:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_fetch_periods (pid INTEGER, account_pid INTEGER, account_fetch_period INTEGER, extended_account_fetch_period INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14403LL);

  return v5;
}

- (BOOL)_migrateFrom14403To14404:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_endpoint_backoff (pid INTEGER, account_pid INTEGER, account_type INTEGER, endpoint_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 14404LL);

  return v5;
}

- (BOOL)_migrateFrom14404To14405:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS breadfruit (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 14405LL);

  return v5;
}

- (BOOL)_migrateFrom14405To14406:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14406To14407:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100363A0C;
  v10[3] = &unk_10063D460;
  id v7 = v5;
  id v11 = v7;
  id v12 = &v13;
  sub_1002CCDBC( (uint64_t)v7,  @"SELECT pid, associated_account_next_possible_fetch_date, associated_account_backoff_level, account_next_possible_fetch_date, account_backoff_level from peer_payment_account;",
    v10);
  char v8 = *((_BYTE *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom14407To14408:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14408To14409:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"account_fetch_periods", (uint64_t)@"c INTEGER")

  return v5;
}

- (BOOL)_migrateFrom14409To14410:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"payment_application", (uint64_t)@"c INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_application", (uint64_t)@"d TEXT")

  return v5;
}

- (BOOL)_migrateFrom14410To14411:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314( (BOOL)v5,  (uint64_t)@"payment_application",  (uint64_t)@"auxiliary_payment_type INTEGER")
    && sub_1002CD0D0((BOOL)v5, 14411LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom14411To14412:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50((BOOL)v4, @"DROP INDEX payment_transaction_tag_index")
    && sub_1002CCA50((BOOL)v4, @"DROP TABLE payment_transaction_tag")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_transaction_tag (pid INTEGER, payment_transaction_pid INTEGER, type INTEGER, localized_title TEXT, locale_identifier TEXT, rank INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_tag_index ON payment_transaction_tag(payment_transaction_pid);")
    && sub_1002CD0D0((BOOL)v4, 14412LL);

  return v5;
}

- (BOOL)_migrateFrom14412To14413:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS persimmon (pid INTEGER, account_pid INTEGER, last_updated_date INTEGER, created_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cucamelon (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS lucuma (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS atemoya (pid INTEGER, a INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14413LL);

  return v5;
}

- (BOOL)_migrateFrom14413To14414:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS huckleberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14414LL);

  return v5;
}

- (BOOL)_migrateFrom14414To14415:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"f INTEGER")
    && sub_1002CD0D0((BOOL)v5, 14415LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom14415To14416:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS marionberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS boysenberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, m TEXT, n TEXT, o INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS loganberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14416LL);

  return v5;
}

- (BOOL)_migrateFrom14416To14417:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"durian", @"n")
    && sub_1002CD364((BOOL)v4, @"durian", @"q")
    && sub_1002CD364((BOOL)v4, @"durian", @"r")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS chestnut (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 14417LL);

  return v5;
}

- (BOOL)_migrateFrom14417To14418:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14418To14419:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14419To14420:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"strawberries", (uint64_t)@"p INTEGER")

  return v5;
}

- (BOOL)_migrateFrom14420To14421:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14421To14422:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14422To14423:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14423To14424:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_application_merchant_support (pid INTEGER, payment_application_pid INTEGER NOT NULL, merchant_country_code TEXT, supported INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14424LL);

  return v5;
}

- (BOOL)_migrateFrom14424To14425:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14425To14426:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"d TEXT") && sub_1002CD0D0((BOOL)v4, 14426LL);

  return v5;
}

- (BOOL)_migrateFrom14426To14427:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14427To14428:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS jostaberry (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pineberry (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h TEXT, i TEXT, j INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14428LL);

  return v5;
}

- (BOOL)_migrateFrom14428To14429:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50((BOOL)v4, @"CREATE TABLE IF NOT EXISTS honey (pid INTEGER, a INTEGER, PRIMARY KEY(pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS water (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 14429LL);

  return v5;
}

- (BOOL)_migrateFrom14429To14430:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14430To14431:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14431To14432:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mulberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14432LL);

  return v5;
}

- (BOOL)_migrateFrom14432To14433:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"chestnut", (uint64_t)@"g TEXT")

  return v5;
}

- (BOOL)_migrateFrom14433To14434:(id)a3 context:(id)a4
{
  return sub_1002CD0D0((BOOL)a3, 14434LL);
}

- (BOOL)_migrateFrom14434To14435:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDC28(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned int v7 = [v6 containsObject:@"pass_annotations"];

  if (v7) {
    sub_1002CDBD4((BOOL)v4, (uint64_t)@"pass_annotations", (uint64_t)@"cherries");
  }
  else {
    sub_1002CCA50((BOOL)v4, @"CREATE TABLE IF NOT EXISTS cherries (a INTEGER, b INTEGER, PRIMARY KEY (a));");
  }
  BOOL v8 = sub_1002CD364((BOOL)v4, @"pass", @"sorting_state") && sub_1002CD0D0((BOOL)v4, 14435LL);

  return v8;
}

- (BOOL)_migrateFrom14435To14436:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS ice_cream_banana (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS carambola (pid INTEGER, a INTEGER NOT NULL, b TEXT, c TEXT, d TEXT, e INTEGER, f INTEGER NOT NULL, g INTEGER NOT NULL, h INTEGER NOT NULL, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14436LL);

  return v5;
}

- (BOOL)_migrateFrom14436To14437:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_1002CDC28(v5);
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  unsigned int v9 = [v8 containsObject:@"cherries"];

  if (v9)
  {
    if (!sub_1002CDB74((BOOL)v5, (uint64_t)@"cherries")
      || !sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS pass_annotations (pass_pid INTEGER, sorting_state INTEGER, archived_timestamp INTEGER, PRIMARY KEY (pass_pid));")
      || !sub_1002CD0D0((BOOL)v5, 14437LL))
    {
LABEL_9:
      BOOL v10 = 0;
      goto LABEL_10;
    }
  }

  else if (!sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS pass_annotations (pass_pid INTEGER, sorting_state INTEGER, archived_timestamp INTEGER, PRIMARY KEY (pass_pid));") {
         || !sub_1002CD0D0((BOOL)v5, 14437LL))
  }
  {
    goto LABEL_9;
  }

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_1003648F4;
  v12[3] = &unk_100658148;
  id v13 = v5;
  [v6 addDatabasePopulationOperation:v12];

  BOOL v10 = 1;
LABEL_10:

  return v10;
}

- (BOOL)_migrateFrom14437To14438:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"raspberries", (uint64_t)@"n TEXT")

  return v5;
}

- (BOOL)_migrateFrom14438To14439:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_1002CE088(v5, @"l", @"whitney");
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  if (v8) {
    goto LABEL_3;
  }
  BOOL v9 = sub_1002CD314((BOOL)v5, (uint64_t)@"whitney", (uint64_t)@"l INTEGER");
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_100364C8C;
  void v11[3] = &unk_100658148;
  id v12 = v5;
  [v6 addDatabasePopulationOperation:v11];

  if (v9) {
LABEL_3:
  }
    LOBYTE(v9) = sub_1002CD0D0((BOOL)v5, 14439LL);

  return v9;
}

- (BOOL)_migrateFrom14439To14440:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14440To14441:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"f", @"whitney");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return v7;
}

- (BOOL)_migrateFrom14441To14442:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"kiwi", (uint64_t)@"n TEXT") && sub_1002CD0D0((BOOL)v4, 14442LL);

  return v5;
}

- (BOOL)_migrateFrom14442To14443:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14443To14444:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14444To14445:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_pending_family_member (pid INTEGER, account_pid INTEGER, invite_email TEXT, invite_date INTEGER, displayed_notification INTEGER, alt_dsid TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14445LL);

  return v5;
}

- (BOOL)_migrateFrom14445To14446:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14446To14447:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"e TEXT") && sub_1002CD0D0((BOOL)v4, 14447LL);

  return v5;
}

- (BOOL)_migrateFrom14447To14448:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14448To14449:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14449To14450:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14450To14451:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass",  (uint64_t)@"mute_ready_for_use_notification INTEGER DEFAULT 0")
    && sub_1002CD0D0((BOOL)v4, 14451LL);

  return v5;
}

- (BOOL)_migrateFrom14451To14452:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14452To14453:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14453To14454:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"discovery_item",  (uint64_t)@"entitled_to_force_large_card INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14454LL);

  return v5;
}

- (BOOL)_migrateFrom14454To14455:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS change_history_event (pid INTEGER, identifier TEXT, type INTEGER, record_type INTEGER, record_uniqueID TEXT, timestamp INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14455LL);

  return v5;
}

- (BOOL)_migrateFrom14455To14456:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14456To14457:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD898((BOOL)v4, @"persimmon", @"account_pid", @"a")
    && sub_1002CD898((BOOL)v4, @"persimmon", @"last_updated_date", @"b")
    && sub_1002CD898((BOOL)v4, @"persimmon", @"created_date", @"c")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"d INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"e TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"f INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"g TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"h INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"i TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"j INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"k INTEGER")

  return v5;
}

- (BOOL)_migrateFrom14457To14458:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14458To14459:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CDB74((BOOL)v4, (uint64_t)@"lucuma")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS lucuma (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g TEXT, h INTEGER, i TEXT, j INTEGER, k TEXT, l INTEGER, m TEXT, n INTEGER, o TEXT, p INTEGER, q TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14459LL);

  return v5;
}

- (BOOL)_migrateFrom14459To14460:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14460To14461:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS salmonberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14461LL);

  return v5;
}

- (int64_t)_migrationAmountDecimalDigitsVersion:(id)a3
{
  id v3 = a3;
  id v4 = sub_1002CDC28(v3);
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v5));

  if ([v6 containsObject:@"apricots"])
  {
    uint64_t v10 = 0LL;
    id v11 = &v10;
    uint64_t v12 = 0x2020000000LL;
    uint64_t v13 = 0LL;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100365A80;
    v9[3] = &unk_1006456F8;
    void v9[4] = &v10;
    sub_1002CCDBC((uint64_t)v3, @"SELECT COALESCE(MAX(a),0) from apricots;", v9);
    int64_t v7 = v11[3];
    _Block_object_dispose(&v10, 8);
  }

  else
  {
    int64_t v7 = 0LL;
  }

  return v7;
}

- (BOOL)_migrateAmountDecimalDigitsToVersion:(int64_t)a3 inDatabase:(id)a4
{
  id v5 = a4;
  id v6 = sub_1002CDC28(v5);
  int64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v7));

  BOOL v9 = ([v8 containsObject:@"apricots"] & 1) != 0
    || sub_1002CCA50((BOOL)v5, @"CREATE TABLE IF NOT EXISTS apricots (a INTEGER); ");
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"INSERT INTO apricots VALUES (%ld)",  a3));
  if (v9) {
    LOBYTE(v9) = sub_1002CCA50((BOOL)v5, v10);
  }

  return v9;
}

- (BOOL)_migrateTableFrom2To4DecimalDigitsPrecision:(id)a3
{
  id v3 = a3;
  id v4 = sub_1002CDC28(v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v5));

  if ([v6 containsObject:@"apples"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE apples SET e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END ")
    || [v6 containsObject:@"avocados"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE avocados SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END ")
    || [v6 containsObject:@"bananas"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE bananas SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END, l = CASE WHEN l == 9223372036854775807 THEN l ELSE l * 100 END, m = CASE WHEN m == 9223372036854775807 THEN m ELSE m * 100 END ")
    || [v6 containsObject:@"breadfruit"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE breadfruit SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END ")
    || [v6 containsObject:@"coconuts"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE coconuts SET b = CASE WHEN b == 9223372036854775807 THEN b ELSE b * 100 END, c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")
    || [v6 containsObject:@"credit_account_merge_summary"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE credit_account_merge_summary SET total_balance = CASE WHEN total_balance == 9223372036854775807 THEN total_balance ELSE total_balance * 100 END ")
    || [v6 containsObject:@"credit_account_merge_summary_account_details"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE credit_account_merge_summary_account_details SET current_balance = CASE WHEN current_balance == 9223372036854775807 THEN current_balance ELSE current_balance * 100 END, statement_balance = CASE WHEN statement_balance == 9223372036854775807 THEN statement_balance ELSE statement_balance * 100 END ")
    || [v6 containsObject:@"currant"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE currant SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END ")
    || [v6 containsObject:@"fig"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE fig SET h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END ")
    || [v6 containsObject:@"gojiberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE gojiberry SET f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END ")
    || [v6 containsObject:@"ice_cream_banana"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE ice_cream_banana SET e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END ")
    || [v6 containsObject:@"jostaberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE jostaberry SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END ")
    || [v6 containsObject:@"kiwi"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE kiwi SET h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END ")
    || [v6 containsObject:@"lucuma"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE lucuma SET f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, l = CASE WHEN l == 9223372036854775807 THEN l ELSE l * 100 END, n = CASE WHEN n == 9223372036854775807 THEN n ELSE n * 100 END, p = CASE WHEN p == 9223372036854775807 THEN p ELSE p * 100 END ")
    || [v6 containsObject:@"lychees"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE lychees SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END ")
    || [v6 containsObject:@"marionberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE marionberry SET g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END ")
    || [v6 containsObject:@"mulberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE mulberry SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")
    || [v6 containsObject:@"oranges"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE oranges SET b = CASE WHEN b == 9223372036854775807 THEN b ELSE b * 100 END, c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, uint64_t j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END, m = CASE WHEN m == 9223372036854775807 THEN m ELSE m * 100 END, p = CASE WHEN p == 9223372036854775807 THEN p ELSE p * 100 END, r = CASE WHEN r == 9223372036854775807 THEN r ELSE r * 100 END, s = CASE WHEN s == 9223372036854775807 THEN s ELSE s * 100 END, t = CASE WHEN t == 9223372036854775807 THEN t ELSE t * 100 END, u = CASE WHEN u == 9223372036854775807 THEN u ELSE u * 100 END ")
    || [v6 containsObject:@"payment_application"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_application SET in_app_pin_required_amount = CASE WHEN in_app_pin_required_amount == 9223372036854775807 THEN in_app_pin_required_amount ELSE in_app_pin_required_amount * 100 END ")
    || [v6 containsObject:@"payment_balance"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_balance SET value = CASE WHEN value == 9223372036854775807 THEN value ELSE value * 100 END WHERE currency_code <> 'XXX'")
    || [v6 containsObject:@"payment_transaction"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END, c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, eligible_eligible_rewards_percent_aggregate = CASE WHEN eligible_eligible_rewards_percent_aggregate == 9223372036854775807 THEN eligible_eligible_rewards_percent_aggregate ELSE eligible_eligible_rewards_percent_aggregate * 100 END, eligible_rewards_cash_aggregate = CASE WHEN eligible_rewards_cash_aggregate == 9223372036854775807 THEN eligible_rewards_cash_aggregate ELSE eligible_rewards_cash_aggregate * 100 END, foreign_exchange_information_destination_amount = CASE WHEN foreign_exchange_information_destination_amount == 9223372036854775807 THEN foreign_exchange_information_destination_amount ELSE foreign_exchange_information_destination_amount * 100 END, nominal_amount = CASE WHEN nominal_amount == 9223372036854775807 THEN nominal_amount ELSE nominal_amount * 100 END, primary_funding_source_amount = CASE WHEN primary_funding_source_amount == 9223372036854775807 THEN primary_funding_source_amount ELSE primary_funding_source_amount * 100 END, secondary_funding_source_amount = CASE WHEN secondary_funding_source_amount == 9223372036854775807 THEN secondary_funding_source_amount ELSE secondary_funding_source_amount * 100 END, subtotal_amount = CASE WHEN subtotal_amount == 9223372036854775807 THEN subtotal_amount ELSE subtotal_amount * 100 END ")
    || [v6 containsObject:@"payment_transaction_amount"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_amount SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END WHERE currency <> 'XXX' OR currency IS NULL")
    || [v6 containsObject:@"payment_transaction_amount_modifiers"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_amount_modifiers SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END WHERE currency <> 'XXX' OR currency IS NULL")
    || [v6 containsObject:@"payment_transaction_awards"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_awards SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END WHERE currency <> 'XXX' OR currency IS NULL")
    || [v6 containsObject:@"payment_transaction_fee"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_fee SET amount = CASE WHEN amount == 9223372036854775807 THEN amount ELSE amount * 100 END ")
    || [v6 containsObject:@"payment_transaction_tag"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_tag SET rank = CASE WHEN rank == 9223372036854775807 THEN rank ELSE rank * 100 END ")
    || [v6 containsObject:@"peer_payment_account"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE peer_payment_account SET current_balance_amount = CASE WHEN current_balance_amount == 9223372036854775807 THEN current_balance_amount ELSE current_balance_amount * 100 END, maximum_balance_amount = CASE WHEN maximum_balance_amount == 9223372036854775807 THEN maximum_balance_amount ELSE maximum_balance_amount * 100 END ")
    || [v6 containsObject:@"peer_payment_account_feature_descriptor"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE peer_payment_account_feature_descriptor SET fee_percentage = CASE WHEN fee_percentage == 9223372036854775807 THEN fee_percentage ELSE fee_percentage * 100 END, maximum_amount = CASE WHEN maximum_amount == 9223372036854775807 THEN maximum_amount ELSE maximum_amount * 100 END, maximum_fee = CASE WHEN maximum_fee == 9223372036854775807 THEN maximum_fee ELSE maximum_fee * 100 END, minimum_amount = CASE WHEN minimum_amount == 9223372036854775807 THEN minimum_amount ELSE minimum_amount * 100 END, minimum_fee = CASE WHEN minimum_fee == 9223372036854775807 THEN minimum_fee ELSE minimum_fee * 100 END ")
    || [v6 containsObject:@"persimmon"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE persimmon SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END ")
    || [v6 containsObject:@"pineapples"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE pineapples SET g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END, uint64_t i = CASE WHEN i == 9223372036854775807 THEN i ELSE i * 100 END, j = CASE WHEN j == 9223372036854775807 THEN j ELSE j * 100 END, k = CASE WHEN k == 9223372036854775807 THEN k ELSE k * 100 END, l = CASE WHEN l == 9223372036854775807 THEN l ELSE l * 100 END, m = CASE WHEN m == 9223372036854775807 THEN m ELSE m * 100 END, n = CASE WHEN n == 9223372036854775807 THEN n ELSE n * 100 END, o = CASE WHEN o == 9223372036854775807 THEN o ELSE o * 100 END, p = CASE WHEN p == 9223372036854775807 THEN p ELSE p * 100 END, q = CASE WHEN q == 9223372036854775807 THEN q ELSE q * 100 END, r = CASE WHEN r == 9223372036854775807 THEN r ELSE r * 100 END, total_balance = CASE WHEN total_balance == 9223372036854775807 THEN total_balance ELSE total_balance * 100 END, u = CASE WHEN u == 9223372036854775807 THEN u ELSE u * 100 END, v = CASE WHEN v == 9223372036854775807 THEN v ELSE v * 100 END ")
    || [v6 containsObject:@"pineberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE pineberry SET g = CASE WHEN g == 9223372036854775807 THEN g ELSE g * 100 END ")
    || [v6 containsObject:@"prickly_pear"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE prickly_pear SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END ")
    || [v6 containsObject:@"raisin"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE raisin SET e = CASE WHEN e == 9223372036854775807 THEN e ELSE e * 100 END, f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END, h = CASE WHEN h == 9223372036854775807 THEN h ELSE h * 100 END ")
    || [v6 containsObject:@"rambutans"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE rambutans SET b = CASE WHEN b == 9223372036854775807 THEN b ELSE b * 100 END ")
    || [v6 containsObject:@"starfruits"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE starfruits SET d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")
    || [v6 containsObject:@"strawberries"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE strawberries SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END, d = CASE WHEN d == 9223372036854775807 THEN d ELSE d * 100 END ")
    || [v6 containsObject:@"tomatoes"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE tomatoes SET c = CASE WHEN c == 9223372036854775807 THEN c ELSE c * 100 END ")
    || [v6 containsObject:@"transit_applet_state"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE transit_applet_state SET balance = CASE WHEN balance == 9223372036854775807 THEN balance ELSE balance * 100 END ")
    || [v6 containsObject:@"transit_applet_state_balance"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE transit_applet_state_balance SET balance = CASE WHEN balance == 9223372036854775807 THEN balance ELSE balance * 100 END WHERE currency <> 'XXX' OR currency IS NULL"))
  {
    BOOL v7 = 0;
  }

  else if ([v6 containsObject:@"watermelons"])
  {
    BOOL v7 = sub_1002CCA50( (BOOL)v3,  @"UPDATE watermelons SET f = CASE WHEN f == 9223372036854775807 THEN f ELSE f * 100 END ");
  }

  else
  {
    BOOL v7 = 1;
  }

  return v7;
}

- (BOOL)_migrateFrom14461To14462:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v13 = 0LL;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100366350;
  v10[3] = &unk_1006583A0;
  uint64_t v12 = &v13;
  void v10[4] = self;
  id v8 = v6;
  id v11 = v8;
  sub_1002CCC5C((uint64_t)v8, v10);
  LOBYTE(v6) = *((_BYTE *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return (char)v6;
}

- (BOOL)_migrateFrom14462To14463:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14463To14464:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14464To14465:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"p INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"q INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"r TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"s TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"t TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"u INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"v INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"w INTEGER")

  return v5;
}

- (BOOL)_migrateFrom14465To14466:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"discovery_item", @"triggers")

  return v5;
}

- (BOOL)_migrateFrom14466To14467:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor (pid INTEGER, default_state_identifier TEXT, default_state_enabled INTEGER, pass_pid INTEGER, metadata_pid INTEGER, state_pid INTEGER, internal_tile_order INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata (pid INTEGER, identifier TEXT, type TEXT, style TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_rke (pid INTEGER, metadata_pid INTEGER, vehicle_functions BLOB, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state (pid INTEGER, action_state_pid INTEGER, state_metadata_pid INTEGER, accessory_pid INTEGER, image_pid INTEGER, type TEXT, enabled INTEGER, selected INTEGER, action BLOB, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tile_descriptor_tile_state_collection (pid INTEGER, descriptor_pid INTEGER, state_pid INTEGER, state_identifier TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_default (pid INTEGER, state_pid INTEGER, title TEXT, body TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory (pid INTEGER, type TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_button (pid INTEGER, accessory_pid INTEGER, title TEXT, spinner_enabled INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_spinner (pid INTEGER, accessory_pid INTEGER, spinner_enabled INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata(pid INTEGER, type TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_metadata_rke (pid INTEGER, state_metadata_pid INTEGER, vehicle_function_states BLOB, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_image (pid INTEGER,iconName TEXT,tint TEXT, symbol TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state (pid INTEGER, supported INTEGER, enabled INTEGER, state_identifier TEXT, state_override_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14467LL);

  return v5;
}

- (BOOL)_migrateFrom14467To14468:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"marionberry", @"h")
    && sub_1002CD364((BOOL)v4, @"marionberry", @"k")
    && sub_1002CD364((BOOL)v4, @"marionberry", @"l")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"h")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"i")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"j")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"h INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"gc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"ic TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"jc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"p INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"q INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"jostaberry", (uint64_t)@"cc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"jostaberry", (uint64_t)@"dc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"jostaberry", (uint64_t)@"ec TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"jostaberry", (uint64_t)@"gc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"jostaberry", (uint64_t)@"h INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"gc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"m TEXT")
    && sub_1002CD364((BOOL)v4, @"lucuma", @"e")
    && sub_1002CDB74((BOOL)v4, (uint64_t)@"loganberry")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tamarillo (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, j TEXT, k TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14468LL);

  return v5;
}

- (BOOL)_migrateFrom14468To14469:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14469To14470:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CDB74((BOOL)v4, (uint64_t)@"tamarillo")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tamarillo (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS chikoo (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, PRIMARY KEY (pid));")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"h")
    && sub_1002CD0D0((BOOL)v4, 14470LL);

  return v5;
}

- (BOOL)_migrateFrom14470To14471:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS akebi (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14471LL);

  return v5;
}

- (BOOL)_migrateFrom14471To14472:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"cucamelon", @"f") && sub_1002CD0D0((BOOL)v4, 14472LL);

  return v5;
}

- (BOOL)_migrateFrom14472To14473:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom14473To14474:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"account_fetch_after_transaction_wait_period INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"account_fetch_after_transaction_wait_tolerance INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14474LL);

  return v5;
}

- (BOOL)_migrateFrom14474To14475:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary (pid INTEGER, credit_account_summary_pid INTEGER, merge_date INTEGER, total_balance INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS credit_account_merge_summary_account_details (pid INTEGER, credit_account_merge_summary_pid INTEGER, account_identifier TEXT, owner_alt_dsid TEXT, statement_balance INTEGER, current_balance INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 14475LL);

  return v5;
}

- (BOOL)_migrateFrom14475To14476:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"oranges",  (uint64_t)@"remaining_statement_balance_for_interest_calculation INTEGER")
    && sub_1002CD0D0((BOOL)v4, 14476LL);

  return v5;
}

- (BOOL)_migrateFrom14476To15000:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDDE0(v4, @"discovery_item");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned int v7 = [v6 containsObject:@"triggers"];

  BOOL v8 = (!v7
     || sub_1002CD364((BOOL)v4, @"discovery_item", @"triggers")

  return v8;
}

- (BOOL)_migrateFrom15000To15001:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_1002CDC28(v5);
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v8));

  if ([v9 containsObject:@"elderberry"]
    || [v9 containsObject:@"apricots"])
  {
    BOOL v10 = sub_1002CD0D0((BOOL)v5, 15001LL);
  }

  else
  {
    uint64_t v17 = 0LL;
    BOOL v18 = &v17;
    uint64_t v19 = 0x2020000000LL;
    char v20 = 0;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_100366F28;
    v12[3] = &unk_1006583C8;
    char v16 = &v17;
    id v13 = v9;
    id v14 = v5;
    uint64_t v15 = @"UPDATE pineapples SET g = g / 100 ";
    sub_1002CCC5C((uint64_t)v14, v12);
    BOOL v10 = *((_BYTE *)v18 + 24) != 0;

    _Block_object_dispose(&v17, 8);
  }

  return v10;
}

- (BOOL)_migrateFrom15001To15002:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = sub_1002CDC28(v6);
  BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v9));

  if ([v10 containsObject:@"elderberry"])
  {
    uint64_t v24 = 0LL;
    id v25 = &v24;
    uint64_t v26 = 0x2020000000LL;
    char v27 = 0;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_100367224;
    v14[3] = &unk_1006583A0;
    char v16 = &v24;
    void v14[4] = self;
    id v15 = v6;
    sub_1002CCC5C((uint64_t)v15, v14);
    BOOL v11 = *((_BYTE *)v25 + 24) != 0;
    id v12 = v15;
LABEL_6:

    _Block_object_dispose(&v24, 8);
    goto LABEL_7;
  }

  if (-[PDDatabaseManager _migrationAmountDecimalDigitsVersion:](self, "_migrationAmountDecimalDigitsVersion:", v6) < 1)
  {
    uint64_t v24 = 0LL;
    id v25 = &v24;
    uint64_t v26 = 0x2020000000LL;
    char v27 = 0;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    void v17[2] = sub_10036718C;
    v17[3] = &unk_100653168;
    id v23 = &v24;
    id v18 = v10;
    id v19 = v6;
    char v20 = @"UPDATE pineapples SET e = e / 100 ";
    BOOL v21 = @"UPDATE oranges SET p = p / 100 ";
    char v22 = self;
    sub_1002CCC5C((uint64_t)v19, v17);
    BOOL v11 = *((_BYTE *)v25 + 24) != 0;

    id v12 = v18;
    goto LABEL_6;
  }

  BOOL v11 = sub_1002CD0D0((BOOL)v6, 15002LL);
LABEL_7:

  return v11;
}

- (BOOL)_migrateFrom15002To15003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"live_render_background_type TEXT")

  return v5;
}

- (BOOL)_migrateFrom15003To15004:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15004To15005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"atemoya", @"terms_url") && sub_1002CD0D0((BOOL)v4, 15005LL);

  return v5;
}

- (BOOL)_migrateFrom15005To15006:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDDE0(v4, @"oranges");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (![v6 containsObject:@"remaining_statement_balance_for_interest_calculation"])
  {
    if (!sub_1002CD314( (BOOL)v4,  (uint64_t)@"oranges",  (uint64_t)@"remaining_statement_balance_for_interest_calculation INTEGER")) {
      goto LABEL_3;
    }
LABEL_5:
    BOOL v7 = sub_1002CD0D0((BOOL)v4, 15006LL);
    goto LABEL_6;
  }

  if (sub_1002CCA50( (BOOL)v4,  @"UPDATE oranges SET remaining_statement_balance_for_interest_calculation = remaining_statement_balance_for_interest_calculation * 100 "))
  {
    goto LABEL_5;
  }

- (BOOL)_migrateFrom15006To15007:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_1002CCA50( (BOOL)v6,  @"CREATE TABLE IF NOT EXISTS ranging_suspension_reason (pid INTEGER, applet_subcredential_pid INTEGER, payment_application_pid INTEGER, ranging_suspension_reasons INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v6, 15007LL);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10036750C;
  void v11[3] = &unk_100658170;
  void v11[4] = self;
  id v12 = v6;
  id v9 = v6;
  [v7 addDatabasePopulationOperation:v11];

  return v8;
}

- (BOOL)_migrateNSNotFoundTo4DecimalDigits:(id)a3
{
  id v3 = a3;
  id v4 = sub_1002CDC28(v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v5));

  if ([v6 containsObject:@"apples"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE apples SET e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END ")
    || [v6 containsObject:@"avocados"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE avocados SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END ")
    || [v6 containsObject:@"bananas"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE bananas SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 922337203685477580700 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 922337203685477580700 THEN 9223372036854775807 ELSE m END ")
    || [v6 containsObject:@"breadfruit"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE breadfruit SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END ")
    || [v6 containsObject:@"coconuts"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE coconuts SET b = CASE WHEN b == 922337203685477580700 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")
    || [v6 containsObject:@"credit_account_merge_summary"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE credit_account_merge_summary SET total_balance = CASE WHEN total_balance == 922337203685477580700 THEN 9223372036854775807 ELSE total_balance END ")
    || [v6 containsObject:@"credit_account_merge_summary_account_details"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE credit_account_merge_summary_account_details SET current_balance = CASE WHEN current_balance == 922337203685477580700 THEN 9223372036854775807 ELSE current_balance END, statement_balance = CASE WHEN statement_balance == 922337203685477580700 THEN 9223372036854775807 ELSE statement_balance END ")
    || [v6 containsObject:@"currant"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE currant SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END ")
    || [v6 containsObject:@"fig"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE fig SET h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END ")
    || [v6 containsObject:@"gojiberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE gojiberry SET f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END ")
    || [v6 containsObject:@"ice_cream_banana"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE ice_cream_banana SET e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END ")
    || [v6 containsObject:@"jostaberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE jostaberry SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END ")
    || [v6 containsObject:@"kiwi"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE kiwi SET h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END ")
    || [v6 containsObject:@"lucuma"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE lucuma SET f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, l = CASE WHEN l == 922337203685477580700 THEN 9223372036854775807 ELSE l END, n = CASE WHEN n == 922337203685477580700 THEN 9223372036854775807 ELSE n END, p = CASE WHEN p == 922337203685477580700 THEN 9223372036854775807 ELSE p END ")
    || [v6 containsObject:@"lychees"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE lychees SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END ")
    || [v6 containsObject:@"marionberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE marionberry SET g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END ")
    || [v6 containsObject:@"mulberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE mulberry SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")
    || [v6 containsObject:@"oranges"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE oranges SET b = CASE WHEN b == 922337203685477580700 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, uint64_t j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END, m = CASE WHEN m == 922337203685477580700 THEN 9223372036854775807 ELSE m END, p = CASE WHEN p == 922337203685477580700 THEN 9223372036854775807 ELSE p END, r = CASE WHEN r == 922337203685477580700 THEN 9223372036854775807 ELSE r END, s = CASE WHEN s == 922337203685477580700 THEN 9223372036854775807 ELSE s END, t = CASE WHEN t == 922337203685477580700 THEN 9223372036854775807 ELSE t END, u = CASE WHEN u == 922337203685477580700 THEN 9223372036854775807 ELSE u END ")
    || [v6 containsObject:@"payment_application"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_application SET in_app_pin_required_amount = CASE WHEN in_app_pin_required_amount == 922337203685477580700 THEN 9223372036854775807 ELSE in_app_pin_required_amount END ")
    || [v6 containsObject:@"payment_balance"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_balance SET value = CASE WHEN value == 922337203685477580700 THEN 9223372036854775807 ELSE value END WHERE currency_code <> 'XXX'")
    || [v6 containsObject:@"payment_transaction"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END, c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, eligible_eligible_rewards_percent_aggregate = CASE WHEN eligible_eligible_rewards_percent_aggregate == 922337203685477580700 THEN 9223372036854775807 ELSE eligible_eligible_rewards_percent_aggregate END, eligible_rewards_cash_aggregate = CASE WHEN eligible_rewards_cash_aggregate == 922337203685477580700 THEN 9223372036854775807 ELSE eligible_rewards_cash_aggregate END, foreign_exchange_information_destination_amount = CASE WHEN foreign_exchange_information_destination_amount == 922337203685477580700 THEN 9223372036854775807 ELSE foreign_exchange_information_destination_amount END, nominal_amount = CASE WHEN nominal_amount == 922337203685477580700 THEN 9223372036854775807 ELSE nominal_amount END, primary_funding_source_amount = CASE WHEN primary_funding_source_amount == 922337203685477580700 THEN 9223372036854775807 ELSE primary_funding_source_amount END, secondary_funding_source_amount = CASE WHEN secondary_funding_source_amount == 922337203685477580700 THEN 9223372036854775807 ELSE secondary_funding_source_amount END, subtotal_amount = CASE WHEN subtotal_amount == 922337203685477580700 THEN 9223372036854775807 ELSE subtotal_amount END ")
    || [v6 containsObject:@"payment_transaction_amount"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_amount SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END WHERE currency <> 'XXX' OR currency IS NULL")
    || [v6 containsObject:@"payment_transaction_amount_modifiers"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_amount_modifiers SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END WHERE currency <> 'XXX' OR currency IS NULL")
    || [v6 containsObject:@"payment_transaction_awards"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_awards SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END WHERE currency <> 'XXX' OR currency IS NULL")
    || [v6 containsObject:@"payment_transaction_fee"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_fee SET amount = CASE WHEN amount == 922337203685477580700 THEN 9223372036854775807 ELSE amount END ")
    || [v6 containsObject:@"payment_transaction_tag"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE payment_transaction_tag SET rank = CASE WHEN rank == 922337203685477580700 THEN 9223372036854775807 ELSE rank END ")
    || [v6 containsObject:@"peer_payment_account"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE peer_payment_account SET current_balance_amount = CASE WHEN current_balance_amount == 922337203685477580700 THEN 9223372036854775807 ELSE current_balance_amount END, maximum_balance_amount = CASE WHEN maximum_balance_amount == 922337203685477580700 THEN 9223372036854775807 ELSE maximum_balance_amount END ")
    || [v6 containsObject:@"peer_payment_account_feature_descriptor"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE peer_payment_account_feature_descriptor SET fee_percentage = CASE WHEN fee_percentage == 922337203685477580700 THEN 9223372036854775807 ELSE fee_percentage END, maximum_amount = CASE WHEN maximum_amount == 922337203685477580700 THEN 9223372036854775807 ELSE maximum_amount END, maximum_fee = CASE WHEN maximum_fee == 922337203685477580700 THEN 9223372036854775807 ELSE maximum_fee END, minimum_amount = CASE WHEN minimum_amount == 922337203685477580700 THEN 9223372036854775807 ELSE minimum_amount END, minimum_fee = CASE WHEN minimum_fee == 922337203685477580700 THEN 9223372036854775807 ELSE minimum_fee END ")
    || [v6 containsObject:@"persimmon"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE persimmon SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END ")
    || [v6 containsObject:@"pineapples"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE pineapples SET g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END, uint64_t i = CASE WHEN i == 922337203685477580700 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 922337203685477580700 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 922337203685477580700 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 922337203685477580700 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 922337203685477580700 THEN 9223372036854775807 ELSE m END, n = CASE WHEN n == 922337203685477580700 THEN 9223372036854775807 ELSE n END, o = CASE WHEN o == 922337203685477580700 THEN 9223372036854775807 ELSE o END, p = CASE WHEN p == 922337203685477580700 THEN 9223372036854775807 ELSE p END, q = CASE WHEN q == 922337203685477580700 THEN 9223372036854775807 ELSE q END, r = CASE WHEN r == 922337203685477580700 THEN 9223372036854775807 ELSE r END, total_balance = CASE WHEN total_balance == 922337203685477580700 THEN 9223372036854775807 ELSE total_balance END, u = CASE WHEN u == 922337203685477580700 THEN 9223372036854775807 ELSE u END, v = CASE WHEN v == 922337203685477580700 THEN 9223372036854775807 ELSE v END ")
    || [v6 containsObject:@"pineberry"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE pineberry SET g = CASE WHEN g == 922337203685477580700 THEN 9223372036854775807 ELSE g END ")
    || [v6 containsObject:@"prickly_pear"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE prickly_pear SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END ")
    || [v6 containsObject:@"raisin"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE raisin SET e = CASE WHEN e == 922337203685477580700 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 922337203685477580700 THEN 9223372036854775807 ELSE h END ")
    || [v6 containsObject:@"rambutans"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE rambutans SET b = CASE WHEN b == 922337203685477580700 THEN 9223372036854775807 ELSE b END ")
    || [v6 containsObject:@"starfruits"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE starfruits SET d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")
    || [v6 containsObject:@"strawberries"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE strawberries SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 922337203685477580700 THEN 9223372036854775807 ELSE d END ")
    || [v6 containsObject:@"tomatoes"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE tomatoes SET c = CASE WHEN c == 922337203685477580700 THEN 9223372036854775807 ELSE c END ")
    || [v6 containsObject:@"transit_applet_state"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE transit_applet_state SET balance = CASE WHEN balance == 922337203685477580700 THEN 9223372036854775807 ELSE balance END ")
    || [v6 containsObject:@"transit_applet_state_balance"]
    && !sub_1002CCA50( (BOOL)v3,  @"UPDATE transit_applet_state_balance SET balance = CASE WHEN balance == 922337203685477580700 THEN 9223372036854775807 ELSE balance END WHERE currency <> 'XXX' OR currency IS NULL"))
  {
    BOOL v7 = 0;
  }

  else if ([v6 containsObject:@"watermelons"])
  {
    BOOL v7 = sub_1002CCA50( (BOOL)v3,  @"UPDATE watermelons SET f = CASE WHEN f == 922337203685477580700 THEN 9223372036854775807 ELSE f END ");
  }

  else
  {
    BOOL v7 = 1;
  }

  return v7;
}

- (BOOL)_migrateFrom15007To15008:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  if (-[PDDatabaseManager _migrationAmountDecimalDigitsVersion:](self, "_migrationAmountDecimalDigitsVersion:", v6) < 3)
  {
    uint64_t v13 = 0LL;
    id v14 = &v13;
    uint64_t v15 = 0x2020000000LL;
    char v16 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_100367FE4;
    v10[3] = &unk_1006583A0;
    id v12 = &v13;
    void v10[4] = self;
    id v11 = v6;
    sub_1002CCC5C((uint64_t)v11, v10);
    BOOL v8 = *((_BYTE *)v14 + 24) != 0;

    _Block_object_dispose(&v13, 8);
  }

  else
  {
    BOOL v8 = sub_1002CD0D0((BOOL)v6, 15008LL);
  }

  return v8;
}

- (BOOL)_migrateFrom15008To15009:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15009To15010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"UPDATE pass SET live_render_background_type = 'appleCash' WHERE has_live_rendered_background != 0 AND live_render_background_type IS NULL;")
    && sub_1002CD364((BOOL)v4, @"pass", @"has_live_rendered_background")
    && sub_1002CD0D0((BOOL)v4, 15010LL);

  return v5;
}

- (BOOL)_migrateFrom15010To15011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"n TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"o TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"persimmon", (uint64_t)@"p TEXT")

  return v5;
}

- (BOOL)_migrateFrom15011To15012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS feijoa (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15012LL);

  return v5;
}

- (BOOL)_migrateFrom15012To15013:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_reader_id (pid INTEGER, payment_automatic_selection_criterion_pid INTEGER, reader_id BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 15013LL))
  {
    [v6 addAutomaticSelectionCriteriaRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15013To15014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50((BOOL)v4, @"DELETE FROM discovery_item WHERE identifier IS NULL OR identifier = '';")
    && sub_1002CCA50( (BOOL)v4,  @"DELETE FROM discovery_notification WHERE identifier IS NULL OR identifier = '';")
    && sub_1002CCA50((BOOL)v4, @"DELETE FROM papaya WHERE a IS NULL OR a = '';")
    && sub_1002CD0D0((BOOL)v4, 15014LL);

  return v5;
}

- (BOOL)_migrateFrom15014To15015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"discovery_item", (uint64_t)@"max_view_count_large_card INTEGER")

  return v5;
}

- (BOOL)_migrateFrom15015To15016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50((BOOL)v4, @"DELETE FROM rule WHERE identifier IS NULL OR identifier = '';")
    && sub_1002CD0D0((BOOL)v4, 15016LL);

  return v5;
}

- (BOOL)_migrateFrom15016To15017:(id)a3 context:(id)a4
{
  id v4 = a3;
  uint64_t v5 = PKCurrentUserAltDSID(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"UPDATE grapes SET alt_dsid = %@ WHERE alt_dsid IS NULL",  v6));

  BOOL v8 = sub_1002CCA50((BOOL)v4, v7) && sub_1002CD0D0((BOOL)v4, 15017LL);
  return v8;
}

- (BOOL)_migrateFrom15017To15018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS secure_element_pass_field (pid INTEGER, key TEXT, unit_type TEXT, source INTEGER, field_order INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS secure_element_pass_field_foreign_identifier (pid INTEGER, foreign_reference_identifier TEXT, field_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 15018LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100368524;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15018To15019:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_payment_funding_source (pid INTEGER, account_pid INTEGER, identifier TEXT, type INTEGER, account_suffix TEXT,bank_name TEXT,PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plum", (uint64_t)@"funding_sources TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"account_fetch_periods",  (uint64_t)@"funding_sources_fetch_period INTEGER")
    && sub_1002CD0D0((BOOL)v4, 15019LL);

  return v5;
}

- (BOOL)_migrateFrom15019To15020:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15020To15021:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"signing_date INTEGER")
    && sub_1002CD0D0((BOOL)v5, 15021LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100368828;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15021To15022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_record (pid INTEGER, record_name TEXT, record_type TEXT, zone_pid INTEGER, hash INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15022LL);

  return v5;
}

- (BOOL)_migrateFrom15022To15023:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15023To15024:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15024To15025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"cucamelon", @"d")
    && sub_1002CD364((BOOL)v4, @"cucamelon", @"e")
    && sub_1002CD0D0((BOOL)v4, 15025LL);

  return v5;
}

- (BOOL)_migrateFrom15025To15026:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS jabuticaba (pid INTEGER, identifier TEXT, a TEXT, b INTEGER, c TEXT, d TEXT,PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mangosteen (pid INTEGER, ra TEXT, rb TEXT, rc TEXT,PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15026LL);

  return v5;
}

- (BOOL)_migrateFrom15026To15027:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"pass", (uint64_t)@"shipping_address_seed TEXT")
    && sub_1002CD0D0((BOOL)v5, 15027LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100368B60;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15027To15028:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"i TEXT")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"j INTEGER")
    && sub_1002CD0D0((BOOL)v5, 15028LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15028To15029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cherimoya (pid INTEGER, a TEXT, b TEXT, c TEXT,d TEXT,e BOOL,f TEXT,g INTEGER,h TEXT,PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS kiwano (pid INTEGER, a INTEGER, b TEXT, c TEXT,d TEXT,e TEXT,f TEXT,g TEXT,PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS loquat (pid INTEGER, a INTEGER, b TEXT, c TEXT,d TEXT,e TEXT,f BOOL,g INTEGER,h TEXT,i TEXT,j TEXT,k BLOB,PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15029LL);

  return v5;
}

- (BOOL)_migrateFrom15029To15030:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_1002CD0D0((BOOL)v6, 15030LL);
  objc_initWeak(&location, self);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_100368E24;
  void v11[3] = &unk_1006583F0;
  objc_copyWeak(&v13, &location);
  id v9 = v6;
  id v12 = v9;
  [v7 addDatabasePopulationOperation:v11];

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);

  return v8;
}

- (BOOL)_migrateFrom15030To15031:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15031To15032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS broccoli (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS carrot (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15032LL);

  return v5;
}

- (BOOL)_migrateFrom15032To15033:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15033To15034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"y INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"z TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"boysenberry", (uint64_t)@"aa TEXT")

  return v5;
}

- (BOOL)_migrateFrom15034To15035:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"k BOOL DEFAULT 0")
    && sub_1002CD0D0((BOOL)v5, 15035LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15035To15036:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS romanesco (pid INTEGER, a TEXT, b TEXT, c BLOB, d TEXT, e INTEGER, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom15036To15037:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v14 = 0LL;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  char v17 = 0;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100369334;
  v10[3] = &unk_1006583A0;
  id v13 = &v14;
  id v8 = v6;
  id v11 = v8;
  id v12 = self;
  -[PDDatabaseManager performTransactionWithBlock:](self, "performTransactionWithBlock:", v10);
  [v7 addPassDaemonDataRegeneration];
  LOBYTE(self) = *((_BYTE *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  return (char)self;
}

- (BOOL)_migrateFrom15037To15038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"UPDATE blackberries SET a = (SELECT pears.pid FROM pears JOIN clementines ON clementines.a = pears.pid WHERE clementines.pid = blackberries.a) WHERE blackberries.a != 0;")
    && sub_1002CD0D0((BOOL)v4, 15038LL);

  return v5;
}

- (BOOL)_migrateFrom15038To15039:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_1002CD0D0((BOOL)v5, 15039LL);
  if (v7)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_10036952C;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }

  return v7;
}

- (BOOL)_migrateFrom15039To15040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"lucuma", @"b")
    && sub_1002CD364((BOOL)v4, @"lucuma", @"c")
    && sub_1002CD364((BOOL)v4, @"lucuma", @"h")
    && sub_1002CD364((BOOL)v4, @"lucuma", @"i")
    && sub_1002CD364((BOOL)v4, @"lucuma", @"j")
    && sub_1002CD364((BOOL)v4, @"lucuma", @"k")
    && sub_1002CD364((BOOL)v4, @"cucamelon", @"c")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS quinoa (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS wasabi (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j TEXT, k INTEGER, l TEXT, m INTEGER, n TEXT, o INTEGER, p TEXT, q INTEGER, r TEXT, s INTEGER, t TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15040LL);

  return v5;
}

- (BOOL)_migrateFrom15040To15041:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"l TEXT")
    && sub_1002CD0D0((BOOL)v5, 15041LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15041To15042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS chickpeas (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g TEXT, h TEXT, i INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"r INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"s TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"t INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"u TEXT")

  return v5;
}

- (BOOL)_migrateFrom15042To15043:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS asparagus (pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS oregano (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e TEXT, PRIMARY KEY (pid));")
    && sub_1002CD364((BOOL)v4, @"jostaberry", @"g")
    && sub_1002CD364((BOOL)v4, @"jostaberry", @"gc")
    && sub_1002CD364((BOOL)v4, @"jostaberry", @"e")
    && sub_1002CD364((BOOL)v4, @"jostaberry", @"ec")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"c")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"e")
    && sub_1002CD364((BOOL)v4, @"chickpeas", @"g")
    && sub_1002CD0D0((BOOL)v4, 15043LL);

  return v5;
}

- (BOOL)_tranansaction_migrateLegacyCarKeySharesInDatabase:(id)a3
{
  id v19 = a3;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager delegate](self, "delegate"));
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([v4 storedPasses]);

  id v6 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v21;
    do
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)i);
        if ([v10 passType] == (id)1)
        {
          id v11 = v10;
          id v12 = objc_alloc_init(&OBJC_CLASS___PKSecureElement);
          id v13 = (void *)objc_claimAutoreleasedReturnValue(-[PKSecureElement secureElementIdentifiers](v12, "secureElementIdentifiers"));
          [v11 updateDevicePaymentApplicationsWithSecureElementIdentifiers:v13];

          if ([v11 isCarKeyPass])
          {
            uint64_t v14 = PDSharesFromLegacyCarKeyTables(v11, self->_database);
            uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
            uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v11 uniqueID]);
            -[PDDatabaseManager updatePassSharesForPassUniqueIdentifier:passShares:]( self,  "updatePassSharesForPassUniqueIdentifier:passShares:",  v16,  v15);
          }
        }
      }

      id v7 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }

    while (v7);
  }

  BOOL v17 = sub_1002CDB74((BOOL)v19, (uint64_t)@"shasta")
     && sub_1002CDB74((BOOL)v19, (uint64_t)@"humphreys")

  return v17;
}

- (BOOL)_migrateFrom15043To15044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS waffle (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e BOOL, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"mangosteen", (uint64_t)@"re BOOL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"mangosteen", (uint64_t)@"rf TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"mangosteen", (uint64_t)@"rg INTEGER")
    && sub_1002CD364((BOOL)v4, @"pass", @"auxiliary_capability_registered")
    && sub_1002CD0D0((BOOL)v4, 15044LL);

  return v5;
}

- (BOOL)_migrateFrom15044To15045:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15045To15046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"w INTEGER")

  return v5;
}

- (BOOL)_migrateFrom15046To15047:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15047To15048:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS okra (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS splitpea (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15048LL);

  return v5;
}

- (BOOL)_migrateFrom15048To15049:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15049To15050:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"y INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"yc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"z INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"zc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"aa INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"aac TEXT")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS parsnip (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15050LL);

  return v5;
}

- (BOOL)_migrateFrom15050To15051:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15051To15052:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD364((BOOL)v5, @"payment_application", @"h")
    && sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"h INTEGER")
    && sub_1002CD0D0((BOOL)v5, 15052LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15052To15053:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15053To15054:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15054To15055:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15055To15056:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pears", (uint64_t)@"transaction_source_pid INTEGER")

  return v5;
}

- (BOOL)_migrateFrom15056To15057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS corn (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15057LL);

  return v5;
}

- (BOOL)_migrateFrom15057To15058:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS melomakarono (pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15058LL);

  return v5;
}

- (BOOL)_migrateFrom15058To15059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cardiff (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15059LL);

  return v5;
}

- (BOOL)_migrateFrom15059To15060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"is_cloud_kit_securely_archived INTEGER")

  return v5;
}

- (BOOL)_migrateFrom15060To15061:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDC28(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned int v7 = [v6 containsObject:@"payment_setup_product_configurations"];

  if (v7)
  {
    if (!sub_1002CDB74((BOOL)v4, (uint64_t)@"payment_setup_product_configurations")
      || !sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_setup_features (pid INTEGER, identifiers BLOB, localized_display_name TEXT, feature_type INTEGER, feature_state INTEGER, supported_options INTEGER, supported_devices INTEGER, product_identifier TEXT, partner_identifier TEXT, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, product_type INTEGER, product_state INTEGER, notification_title TEXT, notification_message TEXT, PRIMARY KEY (pid));"))
    {
      goto LABEL_4;
    }

- (BOOL)_migrateFrom15061To15062:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15062To15063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"cc INTEGER")

  return v5;
}

- (BOOL)_migrateFrom15063To15064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pomegranate (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, i TEXT, j TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cranberry (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS eggplant (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rhubarb (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j TEXT, k TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15064LL);

  return v5;
}

- (BOOL)_migrateFrom15064To15065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"lucuma", (uint64_t)@"r INTEGER")

  return v5;
}

- (BOOL)_migrateFrom15065To15066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS application_message_registration (pid INTEGER, created_date INTEGER, priority INTEGER, source TEXT, identifier TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15066LL);

  return v5;
}

- (BOOL)_migrateFrom15066To15067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS zucchini (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, p TEXT, q INTEGER, r INTEGER, s TEXT, t TEXT, u INTEGER, v TEXT, w BOOL, x INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15067LL);

  return v5;
}

- (BOOL)_migrateFrom15067To15068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS muffin (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS avocado_toast (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS eggs_benedict (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e INTEGER, f TEXT, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"mangosteen", (uint64_t)@"rh BOOL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"mangosteen", (uint64_t)@"ri BOOL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"jabuticaba", (uint64_t)@"e INTEGER")
    && sub_1002CD364((BOOL)v4, @"jabuticaba", @"d")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"jabuticaba", (uint64_t)@"d INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"romanesco", (uint64_t)@"f TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"romanesco", (uint64_t)@"g TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"romanesco", (uint64_t)@"h TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"whitney", (uint64_t)@"o TEXT")
    && sub_1002CD364((BOOL)v4, @"kiwano", @"c")
    && sub_1002CD364((BOOL)v4, @"kiwano", @"d")
    && sub_1002CD364((BOOL)v4, @"loquat", @"c")
    && sub_1002CD364((BOOL)v4, @"loquat", @"d")

  return v5;
}

- (BOOL)_migrateFrom15068To15069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"rincon", (uint64_t)@"f TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"rincon", (uint64_t)@"g INTEGER")
    && sub_1002CD364((BOOL)v4, @"mangosteen", @"ri")

  return v5;
}

- (BOOL)_migrateFrom15069To15070:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS peer_payment_requests (pid INTEGER, request_token TEXT, peer_payment_account_pid INTEGER, requester_address TEXT, amount INTEGER, currency TEXT, memo TEXT, session_id TEXT, expiry_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15070LL);

  return v5;
}

- (BOOL)_migrateFrom15070To15071:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS yuzu (pid INTEGER, a TEXT, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tomatillo (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e INTEGER, f INTEGER, g BOOL, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"apples", (uint64_t)@"k TEXT")

  return v5;
}

- (BOOL)_migrateFrom15071To15072:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"h INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"hc TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"i INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"ic TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"j INTEGER")

  return v5;
}

- (BOOL)_migrateFrom15072To15073:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS quince (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, ea TEXT, eb TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15073LL);

  return v5;
}

- (BOOL)_migrateFrom15073To15074:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = sub_1002CDC28(v6);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  unsigned __int8 v10 = [v9 containsObject:@"waffle"];

  BOOL v11 = ((v10 & 1) != 0
      || -[PDDatabaseManager _migrateFrom15043To15044:context:](self, "_migrateFrom15043To15044:context:", v6, v7))

  return v11;
}

- (BOOL)_migrateFrom15074To15075:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transit_applet_state_commute_plan (pid INTEGER, transit_applet_state_pid INTEGER REFERENCES transit_applet_state(pid) ON DELETE CASCADE, pass_pid INTEGER NOT NULL REFERENCES pass(pid) ON DELETE CASCADE, identifier TEXT, status TEXT, start_date INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15075LL);

  return v5;
}

- (BOOL)_migrateFrom15075To15076:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS associated_reader_id (pid INTEGER, automatic_selection_criterion_pid INTEGER, reader_id BLOB, priority INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS associated_reader_id_reader_ca (pid INTEGER, associated_reader_id_pid INTEGER, public_key BLOB, attestation BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 15076LL))
  {
    [v6 addAutomaticSelectionCriteriaRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom15076To15077:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"yuzu", (uint64_t)@"g TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"yuzu", (uint64_t)@"h TEXT")

  return v5;
}

- (BOOL)_migrateFrom15077To15078:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom15078To15079:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"cranberry", @"h") && sub_1002CD0D0((BOOL)v4, 15079LL);

  return v5;
}

- (BOOL)_migrateFrom15079To15080:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS potato (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 15080LL);

  return v5;
}

- (BOOL)_migrateFrom15080To15081:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"eggplant", @"a")
    && sub_1002CD364((BOOL)v4, @"eggplant", @"g")

  return v5;
}

- (BOOL)_migrateFrom15081To15082:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_requests", (uint64_t)@"requestee_address TEXT")

  return v5;
}

- (BOOL)_migrateFrom15082To15083:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_historical_balance (pid INTEGER, account_pid INTEGER, balance INTEGER, date INTEGER, type INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE UNIQUE INDEX IF NOT EXISTS history_index ON account_historical_balance (account_pid, date, type);")
    && sub_1002CD0D0((BOOL)v4, 15083LL);

  return v5;
}

- (BOOL)_migrateFrom15083To15084:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"water", (uint64_t)@"e INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS tamarind (pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY(pid));")
    && sub_1002CD0D0((BOOL)v4, 15084LL);

  return v5;
}

- (BOOL)_migrateFrom15084To16000:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_1002CD0D0((BOOL)a3, 16000LL);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom16000To16001:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16001To16002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pomegranate", (uint64_t)@"k TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pomegranate", (uint64_t)@"l TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pomegranate", (uint64_t)@"m TEXT")

  return v5;
}

- (BOOL)_migrateFrom16002To16003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pineberry", (uint64_t)@"l TEXT")

  return v5;
}

- (BOOL)_migrateFrom16003To16004:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_1002CD314((BOOL)v5, (uint64_t)@"cherimoya", (uint64_t)@"k TEXT")
    && sub_1002CD364((BOOL)v5, @"cherimoya", @"e")
    && sub_1002CD0D0((BOOL)v5, 16004LL);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10036B29C;
  v10[3] = &unk_100658148;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom16004To16005:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16005To16006:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = sub_1002CDC28(self->_database);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  unsigned int v10 = [v9 containsObject:@"shasta"];

  if (v10)
  {
    uint64_t Object = PKLogFacilityTypeGetObject(27LL);
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(Object);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "CarKeyDatabaseMigration: Legacy table found, migrating.",  buf,  2u);
    }

    *(void *)buf = 0LL;
    BOOL v17 = buf;
    uint64_t v18 = 0x2020000000LL;
    char v19 = 0;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    void v15[2] = sub_10036B60C;
    void v15[3] = &unk_10063BB78;
    void v15[4] = self;
    void v15[5] = buf;
    -[PDDatabaseManager performTransactionWithBlock:](self, "performTransactionWithBlock:", v15);
    if (v17[24]) {
      [v7 addPassDaemonDataRegeneration];
    }
    _Block_object_dispose(buf, 8);
  }

  BOOL v13 = sub_1002CD0D0((BOOL)v6, 16006LL);

  return v13;
}

- (BOOL)_migrateFrom16006To16007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS radish (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16007LL);

  return v5;
}

- (BOOL)_migrateFrom16007To16008:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16008To16009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_requests", (uint64_t)@"request_date INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16009To16010:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_1002CD0D0((BOOL)a3, 16010LL);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom16010To16011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"device_score_encrypted_payload_version INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16011LL);

  return v5;
}

- (BOOL)_migrateFrom16011To16012:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS nashi (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS ume (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16012LL);

  return v5;
}

- (BOOL)_migrateFrom16012To16013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_setup_features",  (uint64_t)@"discovery_card_identitifer TEXT")
    && sub_1002CD0D0((BOOL)v4, 16013LL);

  return v5;
}

- (BOOL)_migrateFrom16013To16014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"eggplant", @"m")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"eggplant", (uint64_t)@"n TEXT")
    && sub_1002CD364((BOOL)v4, @"potato", @"a")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"potato", (uint64_t)@"f TEXT")
    && sub_1002CD364((BOOL)v4, @"pomegranate", @"j")
    && sub_1002CD0D0((BOOL)v4, 16014LL);

  return v5;
}

- (BOOL)_migrateFrom16014To16015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS daikon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"quince", (uint64_t)@"ma TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"quince", (uint64_t)@"mb TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"quince", (uint64_t)@"n TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"quince", (uint64_t)@"o TEXT")

  return v5;
}

- (BOOL)_migrateFrom16015To16016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"quince", @"p")

  return v5;
}

- (BOOL)_migrateFrom16016To16017:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16017To16018:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_1002CD0D0((BOOL)v5, 16018LL);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10036BBE4;
  v10[3] = &unk_100658148;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom16018To16019:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16019To16020:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CD314((BOOL)v5, (uint64_t)@"payment_application", (uint64_t)@"m INTEGER")
    && sub_1002CD0D0((BOOL)v5, 16020LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom16020To16021:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16021To16022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_additional_push_topics",  (uint64_t)@"requests TEXT")

  return v5;
}

- (BOOL)_migrateFrom16022To16023:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16023To16024:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_1002CD0D0((BOOL)a3, 16024LL);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom16024To16025:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16025To16026:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16026To16027:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16027To16028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"is_merchant_token_transaction INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16028LL);

  return v5;
}

- (BOOL)_migrateFrom16028To16029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"zucchini", (uint64_t)@"y INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16029To16030:(id)a3 context:(id)a4
{
  id v5 = a3;
  [a4 addPassDaemonDataRegeneration];

  return v6;
}

- (BOOL)_migrateFrom16030To16031:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16031To16032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"eggplant", (uint64_t)@"o INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16032To16033:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16033To16034:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16034To16035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS device_environment (pid INTEGER, client_identifier TEXT, country_code TEXT, device_language TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16035LL);

  return v5;
}

- (BOOL)_migrateFrom16035To16036:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"quince", (uint64_t)@"q TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"quince", (uint64_t)@"r INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16036To16037:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"cloud_store_zone", (uint64_t)@"did_finish_initial_sync INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE cloud_store_zone SET did_finish_initial_sync = 1 WHERE token_data IS NOT NULL")
    && sub_1002CD0D0((BOOL)v4, 16037LL);

  return v5;
}

- (BOOL)_migrateFrom16037To16038:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16038To16039:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS lemon (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16039LL);

  return v5;
}

- (BOOL)_migrateFrom16039To16040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS mirabelle (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom16040To16041:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16041To16042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"discovery_item", @"hit_max_large_view_count")
    && sub_1002CD0D0((BOOL)v4, 16042LL);

  return v5;
}

- (BOOL)_migrateFrom16042To16043:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16043To16044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"marionberry", @"f")

  return v5;
}

- (BOOL)_migrateFrom16044To16045:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16045To16046:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16046To16047:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction_amount",  (uint64_t)@"pending INTEGER DEFAULT 0")

  return v5;
}

- (BOOL)_migrateFrom16047To16048:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16048To16049:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16049To16050:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"jostaberry", (uint64_t)@"i INTEGER")
    && sub_1002CD364((BOOL)v4, @"jostaberry", @"display_name")
    && sub_1002CD0D0((BOOL)v4, 16050LL);

  return v5;
}

- (BOOL)_migrateFrom16050To16051:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pomegranate", (uint64_t)@"o TEXT")

  return v5;
}

- (BOOL)_migrateFrom16051To16052:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_share_backoff (pid INTEGER, cloud_store_zone_pid INTEGER, recipient_handle TEXT, backoff_type INTEGER, backoff_level INTEGER, next_fetch INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16052LL);

  return v5;
}

- (BOOL)_migrateFrom16052To16053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"carambola", @"f")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"carambola", (uint64_t)@"f INTEGER")
    && sub_1002CD364((BOOL)v4, @"carambola", @"g")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"carambola", (uint64_t)@"g INTEGER")
    && sub_1002CD364((BOOL)v4, @"carambola", @"h")

  return v5;
}

- (BOOL)_migrateFrom16053To16054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS celery (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16054LL);

  return v5;
}

- (BOOL)_migrateFrom16054To16055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS guanabana (pid INTEGER, a INTEGER, b INTEGER, bc TEXT, c INTEGER, cc TEXT, d INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16055LL);

  return v5;
}

- (BOOL)_migrateFrom16055To16056:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16056To16057:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16057To16058:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS bokchoy (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, m INTEGER, n TEXT, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t BLOB,PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16058LL);

  return v5;
}

- (BOOL)_migrateFrom16058To16059:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_additional_push_topics",  (uint64_t)@"endpoint TEXT")
    && sub_1002CD0D0((BOOL)v4, 16059LL);

  return v5;
}

- (BOOL)_migrateFrom16059To16060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS onion (pid INTEGER, type TEXT, uniqueIdentifier TEXT,status TEXT, created_at INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS leek (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16060LL);

  return v5;
}

- (BOOL)_migrateFrom16060To16061:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10036CDB4;
  v10[3] = &unk_100658148;
  id v11 = v5;
  id v8 = v5;
  [v6 addDatabasePopulationOperation:v10];

  return v7;
}

- (BOOL)_migrateFrom16061To16062:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16062To16063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_statement_metadata (pid INTEGER, statement_identifier TEXT, account_identifier TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_statement_transaction_metadata (pid INTEGER, account_statement_metadata_pid INTEGER, transaction_identifier TEXT, originator_altdsid TEXT, zone_name TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16063LL);

  return v5;
}

- (BOOL)_migrateFrom16063To16064:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"account_statement_metadata",  (uint64_t)@"has_been_processed INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"account_statement_metadata",  (uint64_t)@"processed_attempt_count INTENGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"account_statement_metadata",  (uint64_t)@"last_processed_date INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16064LL);

  return v5;
}

- (BOOL)_migrateFrom16064To16065:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16065To16066:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account_feature_descriptor", (uint64_t)@"a BLOB")

  return v5;
}

- (BOOL)_migrateFrom16066To16067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"merchant_fallback_logo_image_url TEXT")
    && sub_1002CD0D0((BOOL)v4, 16067LL);

  return v5;
}

- (BOOL)_migrateFrom16067To16068:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_application_usage_summary (pid INTEGER, pass_unique_identifier TEXT, payment_application_identifier TEXT, last_used INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_remote_credential (pid INTEGER, base_pid INTEGER, a TEXT, b INTEGER, c TEXT, d INTEGER, e TEXT, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_shareable_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_account_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom16068To16069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS basil (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cilantro (pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16069LL);

  return v5;
}

- (BOOL)_migrateFrom16069To16070:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS rosemary (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16070LL);

  return v5;
}

- (BOOL)_migrateFrom16070To16071:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16071To16072:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"v TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"w TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"x TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"y TEXT")
    && sub_1002CD364((BOOL)v4, @"bokchoy", @"q")
    && sub_1002CD0D0((BOOL)v4, 16072LL);

  return v5;
}

- (BOOL)_migrateFrom16072To16073:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16073To16074:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"honey", (uint64_t)@"b TEXT")

  return v5;
}

- (BOOL)_migrateFrom16074To16075:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CE088(v4, @"accessory_pid", @"pass_tile_state_default");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  if (v6) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_state_default", (uint64_t)@"accessory_pid INTEGER")
  }
      && sub_1002CCA50( (BOOL)v4,  @"UPDATE pass_tile_state_default SET accessory_pid = (SELECT accessory_pid FROM pass_tile_state                  WHERE pass_tile_state_default.state_pid = pid);")
      && sub_1002CD364((BOOL)v4, @"pass_tile_state", @"accessory_pid");
  id v8 = sub_1002CE088(v4, @"secondary_accessory_pid", @"pass_tile_state_default");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (v9)
  {
    if (!v7) {
      goto LABEL_16;
    }
LABEL_12:
    if (sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_accessory_image (pid INTEGER, accessory_pid INTEGER, image_pid INTEGER, PRIMARY KEY (pid));")
      && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_check_in (pid INTEGER, state_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));"))
    {
      LOBYTE(v7) = sub_1002CD0D0((BOOL)v4, 16075LL);
      goto LABEL_16;
    }

- (BOOL)_migrateFrom16075To16076:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS garlic (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16076LL);

  return v5;
}

- (BOOL)_migrateFrom16076To16077:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16077To16078:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS change_history_event_retry_details (pid INTEGER, event_unique_identifier TEXT, event_record_type INTEGER, retry_date INTEGER, retry_interval INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16078LL);

  return v5;
}

- (BOOL)_migrateFrom16078To16079:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account", (uint64_t)@"a INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account_feature_descriptor", (uint64_t)@"c BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account_feature_descriptor", (uint64_t)@"d TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"z INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"aa TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"ab INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"ac INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16079To16080:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (sub_1002CD314((BOOL)v4, (uint64_t)@"jostaberry", (uint64_t)@"j INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16080LL))
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_10036D7F8;
    v7[3] = &unk_100653140;
    id v8 = v4;
    sub_1002CCDBC((uint64_t)v8, @"SELECT pid FROM jostaberry", v7);

    BOOL v5 = 1;
  }

  else
  {
    BOOL v5 = 0;
  }

  return v5;
}

- (BOOL)_migrateFrom16080To16081:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDC28(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned int v7 = [v6 containsObject:@"basil"];

  if (v7) {
    BOOL v8 = sub_1002CDB74((BOOL)v4, (uint64_t)@"basil");
  }
  else {
    BOOL v8 = 1;
  }
  id v9 = sub_1002CDC28(v4);
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  unsigned int v11 = [v10 containsObject:@"cilantro"];

  int v12 = (v11 ^ 1) & v8;
  if (((v11 ^ 1) & 1) == 0 && v8) {
    int v12 = sub_1002CDB74((BOOL)v4, (uint64_t)@"cilantro");
  }
  id v13 = sub_1002CDC28(v4);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  unsigned int v15 = [v14 containsObject:@"rosemary"];

  if (!v15)
  {
    if (!v12) {
      goto LABEL_15;
    }
    if (!sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS apple_balance_dtu_promotion_configuration (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, l INTEGER, PRIMARY KEY (pid));")) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }

  if (v12)
  {
    if (!sub_1002CDB74((BOOL)v4, (uint64_t)@"rosemary")
      || !sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS apple_balance_dtu_promotion_configuration (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, l INTEGER, PRIMARY KEY (pid));"))
    {
LABEL_11:
      LOBYTE(v12) = 0;
      goto LABEL_15;
    }

- (BOOL)_migrateFrom16081To16082:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDDE0(v4, @"peer_payment_account_additional_push_topics");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned __int8 v7 = [v6 containsObject:@"endpoint"];

  BOOL v8 = (v7 & 1) != 0
    || sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account_additional_push_topics",  (uint64_t)@"endpoint TEXT");
  id v9 = sub_1002CDDE0(v4, @"payment_transaction");
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  unsigned __int8 v11 = [v10 containsObject:@"recurring"];

  if ((v11 & 1) != 0)
  {
    if (!v8) {
      goto LABEL_11;
    }
LABEL_9:
    LOBYTE(v8) = sub_1002CD0D0((BOOL)v4, 16082LL);
    goto LABEL_11;
  }

  if (v8)
  {
    if (!sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"recurring BOOL"))
    {
      LOBYTE(v8) = 0;
      goto LABEL_11;
    }

    goto LABEL_9;
  }

- (BOOL)_migrateFrom16082To16083:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16083To16084:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CDB74((BOOL)v4, (uint64_t)@"account_statement_metadata")
    && sub_1002CDB74((BOOL)v4, (uint64_t)@"account_statement_transaction_metadata")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_statement_metadata (pid INTEGER, statement_identifier TEXT, account_identifier TEXT, opening_date INTEGER, closing_date INTEGER, has_been_processed INTEGER, last_report_date INTEGER, report_count INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_statement_metadata_item (pid INTEGER, account_statement_metadata_pid INTEGER, identifier TEXT, type INTEGER, account_event_type INTEGER, originator_altdsid TEXT, zone_name TEXT, has_been_processed INTEGER, processed_attempt_count INTENGER, last_processed_date INTEGER, last_report_date INTEGER, report_count INTEGER, error INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16084LL);

  return v5;
}

- (BOOL)_migrateFrom16084To16085:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pending_provisioning_remote_credential", (uint64_t)@"i TEXT")

  return v5;
}

- (BOOL)_migrateFrom16085To16086:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16086To16087:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_application_usage_summary",  (uint64_t)@"last_used_transaction INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pending_provisioning_account_credential", (uint64_t)@"c TEXT")

  return v5;
}

- (BOOL)_migrateFrom16087To16088:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"lychees", (uint64_t)@"w INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"interest_reassessment BOOL")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"associated_statement_identifiers TEXT")
    && sub_1002CD0D0((BOOL)v4, 16088LL);

  return v5;
}

- (BOOL)_migrateFrom16088To16089:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16089To16090:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account_feature_descriptor", (uint64_t)@"e INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account_feature_descriptor", (uint64_t)@"f INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"bokchoy", (uint64_t)@"af INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16090To16091:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_container_change_event (pid INTEGER, identifier TEXT, change_type INTEGER, event_type INTEGER, timestamp INTEGER, container_identifier TEXT, begin_interval_event_identifier TEXT, begin_interval_event_pid INTEGER, operation_group_name TEXT, operation_group_name_suffix TEXT, error_description TEXT, change_token BLOB, state_name TEXT, object_names TEXT, time_interval INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16091LL);

  return v5;
}

- (BOOL)_migrateFrom16091To16092:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"k TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"l TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"m TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"n INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"o INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"p TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"q TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tomatoes", (uint64_t)@"r INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16092To16093:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16093To16094:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"peer_payment_account", @"b")

  return v5;
}

- (BOOL)_migrateFrom16094To16095:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"original_provisioning_date INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pending_provisioning_remote_credential", (uint64_t)@"k INTEGER")
    && sub_1002CD364((BOOL)v4, @"pending_provisioning_remote_credential", @"h")
    && sub_1002CD0D0((BOOL)v4, 16095LL);

  return v5;
}

- (BOOL)_migrateFrom16095To16096:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_state", (uint64_t)@"actions BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_state_check_in", (uint64_t)@"available_from INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass_tile_state_check_in",  (uint64_t)@"available_from_utc_offset INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16096LL);

  return v5;
}

- (BOOL)_migrateFrom16096To16097:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16097To16098:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_receipt (pid INTEGER, a TEXT, b TEXT, c INTEGER, d TEXT, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pending_provisioning_remote_credential", (uint64_t)@"l TEXT")

  return v5;
}

- (BOOL)_migrateFrom16098To16099:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_provisioning_metadata (pid INTEGER, a INTEGER, b TEXT, c TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16099LL);

  return v5;
}

- (BOOL)_migrateFrom16099To16100:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"garlic", (uint64_t)@"h BLOB")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"garlic", (uint64_t)@"i BLOB")

  return v5;
}

- (BOOL)_migrateFrom16100To16101:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  uint64_t v13 = 0LL;
  uint64_t v14 = &v13;
  uint64_t v15 = 0x2020000000LL;
  char v16 = 1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10036E484;
  v10[3] = &unk_10063D438;
  id v7 = v5;
  id v11 = v7;
  int v12 = &v13;
  sub_1002CCC5C((uint64_t)v7, v10);
  char v8 = *((_BYTE *)v14 + 24);

  _Block_object_dispose(&v13, 8);
  return v8;
}

- (BOOL)_migrateFrom16101To16102:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_live_render (pid INTEGER, pass_pid INTEGER, enabled INTEGER, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom16102To16103:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS credit_recovery_payment_plan (pid INTEGER, identifier TEXT, account_identifier TEXT, enrolled INTEGER, display_name TEXT, enrollment_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"oranges", (uint64_t)@"recovery_payment_plans_supported INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"plum", (uint64_t)@"recovery_payment_plans TEXT")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"account_fetch_periods",  (uint64_t)@"recovery_payment_plans_fetch_period INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16103LL);

  return v5;
}

- (BOOL)_migrateFrom16103To16104:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  id v7 = sub_1002CDC28(v5);
  char v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v8));

  uint64_t v74 = 0LL;
  uint64_t v75 = &v74;
  uint64_t v76 = 0x2020000000LL;
  char v77 = 0;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_10036ECD4;
  v13[3] = &unk_100658418;
  id v73 = &v74;
  id v10 = v9;
  id v14 = v10;
  id v11 = v5;
  id v15 = v11;
  char v16 = @"UPDATE ice_cream_banana SET e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END ";
  BOOL v17 = @"UPDATE payment_transaction_amount_modifiers SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END ";
  uint64_t v18 = @"UPDATE starfruits SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  char v19 = @"UPDATE strawberries SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  __int128 v20 = @"UPDATE peer_payment_account SET current_balance_amount = CASE WHEN current_balance_amount == 9223372036854775807 THEN 9223372036854775807 ELSE current_balance_amount END, maximum_balance_amount = CASE WHEN maximum_balance_amount == 9223372036854775807 THEN 9223372036854775807 ELSE maximum_balance_amount END";
  __int128 v21 = @"UPDATE payment_application SET in_app_pin_required_amount = CASE WHEN in_app_pin_required_amount == 9223372036854775807 THEN 9223372036854775807 ELSE in_app_pin_required_amount END";
  __int128 v22 = @"UPDATE persimmon SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END";
  __int128 v23 = @"UPDATE mulberry SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END";
  uint64_t v24 = @"UPDATE payment_transaction_fee SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END";
  id v25 = @"UPDATE payment_balance SET value = CASE WHEN value == 9223372036854775807 THEN 9223372036854775807 ELSE value END WHERE currency_code <> 'XXX'";
  uint64_t v26 = @"UPDATE transit_applet_state_balance SET balance = CASE WHEN balance == 9223372036854775807 THEN 9223372036854775807 ELSE balance END WHERE currency <> 'XXX' OR currency IS NULL";
  char v27 = @"UPDATE avocados SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END";
  BOOL v28 = @"UPDATE apples SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END";
  __int128 v29 = @"UPDATE lucuma SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END, n = CASE WHEN n == 9223372036854775807 THEN 9223372036854775807 ELSE n END, p = CASE WHEN p == 9223372036854775807 THEN 9223372036854775807 ELSE p END ";
  BOOL v30 = @"UPDATE watermelons SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END ";
  id v31 = @"UPDATE fig SET h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  id v32 = @"UPDATE payment_transaction_tag SET rank = CASE WHEN rank == 9223372036854775807 THEN 9223372036854775807 ELSE rank END ";
  id v33 = @"UPDATE jostaberry SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  uint64_t v34 = @"UPDATE tomatoes SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END ";
  id v35 = @"UPDATE oranges SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, t = CASE WHEN t == 9223372036854775807 THEN 9223372036854775807 ELSE t END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END, remaining_statement_balance_for_interest_calculation = CASE WHEN remaining_statement_balance_for_interest_calculation == 9223372036854775807 THEN 9223372036854775807 ELSE remaining_statement_balance_for_interest_calculation END, s = CASE WHEN s == 9223372036854775807 THEN 9223372036854775807 ELSE s END, p = CASE WHEN p == 9223372036854775807 THEN 9223372036854775807 ELSE p END, u = CASE WHEN u == 9223372036854775807 THEN 9223372036854775807 ELSE u END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END ";
  uint64_t v36 = @"UPDATE bananas SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END ";
  id v37 = @"UPDATE kiwi SET h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END ";
  id v38 = @"UPDATE peer_payment_account_feature_descriptor SET minimum_amount = CASE WHEN minimum_amount == 9223372036854775807 THEN 9223372036854775807 ELSE minimum_amount END, maximum_amount = CASE WHEN maximum_amount == 9223372036854775807 THEN 9223372036854775807 ELSE maximum_amount END, fee_percentage = CASE WHEN fee_percentage == 9223372036854775807 THEN 9223372036854775807 ELSE fee_percentage END, minimum_fee = CASE WHEN minimum_fee == 9223372036854775807 THEN 9223372036854775807 ELSE minimum_fee END, maximum_fee = CASE WHEN maximum_fee == 9223372036854775807 THEN 9223372036854775807 ELSE maximum_fee END ";
  id v39 = @"UPDATE breadfruit SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  uint64_t v40 = @"UPDATE coconuts SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v41 = @"UPDATE raisin SET e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  __int128 v42 = @"UPDATE lychees SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END ";
  __int128 v43 = @"UPDATE payment_transaction_amount SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END WHERE preformatted_string IS NULL";
  id v44 = @"UPDATE payment_transaction SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END, subtotal_amount = CASE WHEN subtotal_amount == 9223372036854775807 THEN 9223372036854775807 ELSE subtotal_amount END, foreign_exchange_information_destination_amount = CASE WHEN foreign_exchange_information_destination_amount == 9223372036854775807 THEN 9223372036854775807 ELSE foreign_exchange_information_destination_amount END, primary_funding_source_amount = CASE WHEN primary_funding_source_amount == 9223372036854775807 THEN 9223372036854775807 ELSE primary_funding_source_amount END, secondary_funding_source_amount = CASE WHEN secondary_funding_source_amount == 9223372036854775807 THEN 9223372036854775807 ELSE secondary_funding_source_amount END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, nominal_amount = CASE WHEN nominal_amount == 9223372036854775807 THEN 9223372036854775807 ELSE nominal_amount END, eligible_eligible_rewards_percent_aggregate = CASE WHEN eligible_eligible_rewards_percent_aggregate == 9223372036854775807 THEN 9223372036854775807 ELSE eligible_eligible_rewards_percent_aggregate END, eligible_rewards_cash_aggregate = CASE WHEN eligible_rewards_cash_aggregate == 9223372036854775807 THEN 9223372036854775807 ELSE eligible_rewards_cash_aggregate END, amount_added_to_auth = CASE WHEN amount_added_to_auth == 9223372036854775807 THEN 9223372036854775807 ELSE amount_added_to_auth END ";
  __int128 v45 = @"UPDATE transit_applet_state SET balance = CASE WHEN balance == 9223372036854775807 THEN 9223372036854775807 ELSE balance END ";
  id v46 = @"UPDATE prickly_pear SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END ";
  __int128 v47 = @"UPDATE payment_transaction_awards SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END, exponent = CASE WHEN exponent == 9223372036854775807 THEN 9223372036854775807 ELSE exponent END WHERE currency <> 'XXX' OR currency IS NULL";
  __int128 v48 = @"UPDATE pineapples SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, total_balance = CASE WHEN total_balance == 9223372036854775807 THEN 9223372036854775807 ELSE total_balance END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END, u = CASE WHEN u == 9223372036854775807 THEN 9223372036854775807 ELSE u END, v = CASE WHEN v == 9223372036854775807 THEN 9223372036854775807 ELSE v END, n = CASE WHEN n == 9223372036854775807 THEN 9223372036854775807 ELSE n END, o = CASE WHEN o == 9223372036854775807 THEN 9223372036854775807 ELSE o END, p = CASE WHEN p == 9223372036854775807 THEN 9223372036854775807 ELSE p END, q = CASE WHEN q == 9223372036854775807 THEN 9223372036854775807 ELSE q END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END ";
  uint64_t v49 = @"UPDATE gojiberry SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END ";
  BOOL v50 = @"UPDATE rambutans SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END ";
  __int128 v51 = @"UPDATE currant SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END ";
  __int128 v52 = @"UPDATE account_historical_balance SET balance = CASE WHEN balance == 9223372036854775807 THEN 9223372036854775807 ELSE balance END ";
  __int128 v53 = @"UPDATE lemon SET f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END ";
  __int128 v54 = @"UPDATE tomatillo SET e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END ";
  __int128 v55 = @"UPDATE carrot SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  __int128 v56 = @"UPDATE celery SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END ";
  __int128 v57 = @"UPDATE apple_balance_dtu_promotion_configuration SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END ";
  uint64_t v58 = @"UPDATE credit_account_merge_summary SET total_balance = CASE WHEN total_balance == 9223372036854775807 THEN 9223372036854775807 ELSE total_balance END ";
  uint64_t v59 = @"UPDATE credit_account_merge_summary_account_details SET statement_balance = CASE WHEN statement_balance == 9223372036854775807 THEN 9223372036854775807 ELSE statement_balance END, current_balance = CASE WHEN current_balance == 9223372036854775807 THEN 9223372036854775807 ELSE current_balance END ";
  uint64_t v60 = @"UPDATE feijoa SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v61 = @"UPDATE quinoa SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END ";
  uint64_t v62 = @"UPDATE okra SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  id v63 = @"UPDATE oregano SET d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  uint64_t v64 = @"UPDATE wasabi SET j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, m = CASE WHEN m == 9223372036854775807 THEN 9223372036854775807 ELSE m END, o = CASE WHEN o == 9223372036854775807 THEN 9223372036854775807 ELSE o END, q = CASE WHEN q == 9223372036854775807 THEN 9223372036854775807 ELSE q END, s = CASE WHEN s == 9223372036854775807 THEN 9223372036854775807 ELSE s END ";
  id v65 = @"UPDATE guanabana SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END ";
  id v66 = @"UPDATE marionberry SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, y = CASE WHEN y == 9223372036854775807 THEN 9223372036854775807 ELSE y END, z = CASE WHEN z == 9223372036854775807 THEN 9223372036854775807 ELSE z END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, r = CASE WHEN r == 9223372036854775807 THEN 9223372036854775807 ELSE r END, t = CASE WHEN t == 9223372036854775807 THEN 9223372036854775807 ELSE t END, aa = CASE WHEN aa == 9223372036854775807 THEN 9223372036854775807 ELSE aa END, w = CASE WHEN w == 9223372036854775807 THEN 9223372036854775807 ELSE w END, cc = CASE WHEN cc == 9223372036854775807 THEN 9223372036854775807 ELSE cc END ";
  uint64_t v67 = @"UPDATE pineberry SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END ";
  id v68 = @"UPDATE peer_payment_requests SET amount = CASE WHEN amount == 9223372036854775807 THEN 9223372036854775807 ELSE amount END ";
  id v69 = @"UPDATE bokchoy SET g = CASE WHEN g == 9223372036854775807 THEN 9223372036854775807 ELSE g END, u = CASE WHEN u == 9223372036854775807 THEN 9223372036854775807 ELSE u END ";
  uint64_t v70 = @"UPDATE rhubarb SET c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END ";
  uint64_t v71 = @"UPDATE eggplant SET o = CASE WHEN o == 9223372036854775807 THEN 9223372036854775807 ELSE o END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END, h = CASE WHEN h == 9223372036854775807 THEN 9223372036854775807 ELSE h END, i = CASE WHEN i == 9223372036854775807 THEN 9223372036854775807 ELSE i END, j = CASE WHEN j == 9223372036854775807 THEN 9223372036854775807 ELSE j END, k = CASE WHEN k == 9223372036854775807 THEN 9223372036854775807 ELSE k END, l = CASE WHEN l == 9223372036854775807 THEN 9223372036854775807 ELSE l END ";
  id v72 = @"UPDATE cranberry SET b = CASE WHEN b == 9223372036854775807 THEN 9223372036854775807 ELSE b END, c = CASE WHEN c == 9223372036854775807 THEN 9223372036854775807 ELSE c END, d = CASE WHEN d == 9223372036854775807 THEN 9223372036854775807 ELSE d END, e = CASE WHEN e == 9223372036854775807 THEN 9223372036854775807 ELSE e END, f = CASE WHEN f == 9223372036854775807 THEN 9223372036854775807 ELSE f END  ";
  sub_1002CCC5C((uint64_t)v11, v13);
  LOBYTE(v8) = *((_BYTE *)v75 + 24);

  _Block_object_dispose(&v74, 8);
  return (char)v8;
}

- (BOOL)_migrateFrom16104To16105:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"payment_network_identifier INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16105LL);

  return v5;
}

- (BOOL)_migrateFrom16105To16106:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS savings_account_step_up_details (pid INTEGER, details_pid INTEGER, threshold_exceeded INTEGER, needed_by INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16106LL);

  return v5;
}

- (BOOL)_migrateFrom16106To16107:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"tamarillo", (uint64_t)@"e INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"tamarillo", (uint64_t)@"ec TEXT")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE tamarillo SET e = (SELECT j FROM pineberry WHERE pineberry.pid = tamarillo.a), ec = (SELECT jc FROM pineberry WHERE pineberry.pid = tamarillo.a)")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"j")
    && sub_1002CD364((BOOL)v4, @"pineberry", @"jc")
    && sub_1002CD0D0((BOOL)v4, 16107LL);

  return v5;
}

- (BOOL)_migrateFrom16107To16108:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS relevant_pass_dates (pid INTEGER,pass_pid INTEGER, start_date INTEGER, end_date INTEGER, relevant_date INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 16108LL))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_10036F784;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];

    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom16108To16109:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"blackberries", (uint64_t)@"expiration_month INTEGER")

  return v5;
}

- (BOOL)_migrateFrom16109To16110:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cloud_store_record_fetch_task (pid INTEGER, type INTEGER, status INTEGER, transaction_source_pid INTEGER, cloud_store_zone_pid INTEGER, start_date INTEGER, end_date INTEGER, backoff_level INTEGER, next_possible_fetch_date INTEGER, last_error_domain TEXT, last_error_code INTEGER, last_error_description TEXT, PRIMARY KEY (pid));")

  return v5;
}

- (BOOL)_migrateFrom16110To16111:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"account_fetch_periods",  (uint64_t)@"physical_cards_fetch_period INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16111LL);

  return v5;
}

- (BOOL)_migrateFrom16111To16112:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS transactions_to_delete_from_finance (pid INTEGER, transaction_identifier TEXT NOT NULL, account_identifier TEXT NOT NULL, PRIMARY KEY (pid));")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"update_sequence_number INTEGER NOT NULL DEFAULT 0")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_transaction",  (uint64_t)@"needs_sync_to_finance INTEGER NOT NULL DEFAULT 1")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE INDEX IF NOT EXISTS payment_transaction_needs_sync_to_finance_daemon ON payment_transaction (needs_sync_to_finance);")
    && sub_1002CD0D0((BOOL)v4, 16112LL);

  return v5;
}

- (BOOL)_migrateFrom16112To16113:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"g TEXT") && sub_1002CD0D0((BOOL)v4, 16113LL);

  return v5;
}

- (BOOL)_migrateFrom16113To16114:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_details_bank_account (pid INTEGER, account_funding_source_pid INTEGER, account_identifier TEXT, account_number TEXT, routing_number TEXT, name TEXT, status INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_source_verification (pid INTEGER, account_funding_details_pid INTEGER, status INTEGER, options TEXT, pending_attempt_pid INTEGER, failed_attempt_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_attempt (pid INTEGER, type INTEGER, sent_date INTEGER, expiry_date INTEGER, failure_reason INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS account_funding_source_verification_action (pid INTEGER, account_funding_source_verification_pid INTEGER, type INTEGER, verification_options TEXT, PRIMARY KEY (pid));")
    && sub_1002CD364((BOOL)v4, @"account_payment_funding_source", @"bank_name")
    && sub_1002CD0D0((BOOL)v4, 16114LL);

  return v5;
}

- (BOOL)_migrateFrom16114To16115:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS nutmeg (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16114LL);

  return v5;
}

- (BOOL)_migrateFrom16115To16116:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom16116To16117:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS elephant (pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cow (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, k INTEGER, l INTEGER, m TEXT, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r TEXT, s TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pig (pid INTEGER, i_pid INTEGER, a INTEGER, b INTEGER, c TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS giraffe (pid INTEGER, i_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS dog (pid INTEGER, i_pid INTEGER, a INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cat (pid INTEGER, i_pid INTEGER, a TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 16117LL);

  return v5;
}

- (BOOL)_migrateFrom16117To16118:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"payment_application",  (uint64_t)@"funding_source_payment_type INTEGER")
    && sub_1002CD0D0((BOOL)v4, 16118LL);

  return v5;
}

- (BOOL)_migrateFrom16118To17000:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_descriptor", (uint64_t)@"group_descriptor_pid INTEGER")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass_tile_metadata",  (uint64_t)@"show_in_prearm INTEGER DEFAULT 1")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_metadata", (uint64_t)@"context_identifier TEXT")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_horizontal_flow_group (pid INTEGER, metadata_pid INTEGER, columns INTEGER, width_class TEXT, height_class TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_metadata_vertical_flow_group (pid INTEGER, metadata_pid INTEGER, rows INTEGER, width_class TEXT, height_class TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_group (pid INTEGER, state_pid INTEGER, header TEXT, footer TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_state_default_v2 (pid INTEGER, state_pid INTEGER, title_value_pid INTEGER, body_value_pid INTEGER, footer_value_pid INTEGER, preferred_style TEXT, accessory_pid INTEGER, secondary_accessory_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value (pid INTEGER, type TEXT, content BLOB, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_date (pid INTEGER, value_pid INTEGER, date_style INTEGER, time_style INTEGER, ignores_time_zone INTEGER, is_relative INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_number (pid INTEGER, value_pid INTEGER, number_style INTEGER, currency_code TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_foreign_reference (pid INTEGER, value_pid INTEGER, foreign_reference_type TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17000LL);

  return v5;
}

- (BOOL)_migrateFrom17000To17001:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS breakfast_burrito (pid INTEGER, ia TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_stateful_transfer (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17001LL);

  return v5;
}

- (BOOL)_migrateFrom17001To17002:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"cow", @"f")
    && sub_1002CD364((BOOL)v4, @"cow", @"g")
    && sub_1002CD364((BOOL)v4, @"cow", @"n")
    && sub_1002CD0D0((BOOL)v4, 17002LL);

  return v5;
}

- (BOOL)_migrateFrom17002To17003:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cinnamon (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17003LL);

  return v5;
}

- (BOOL)_migrateFrom17003To17004:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS allspice (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17004LL);

  return v5;
}

- (BOOL)_migrateFrom17004To17005:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"cloud_store_record_fetch_task", @"last_error_description")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"cloud_store_record_fetch_task",  (uint64_t)@"last_error_description TEXT")
    && sub_1002CD0D0((BOOL)v4, 17005LL);

  return v5;
}

- (BOOL)_migrateFrom17005To17006:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17006To17007:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cowboy (pid INTEGER, c_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17007LL);

  return v5;
}

- (BOOL)_migrateFrom17007To17008:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_1002CD0D0((BOOL)a3, 17008LL);
  if (v6) {
    [v5 addPaymentApplicationRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom17008To17009:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS duck (pid INTEGER, a INTEGER, b TEXT, c INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS hedgehog (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS owl (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h TEXT, i INTEGER, j TEXT, k INTEGER, l INTEGER, m INTEGER, n TEXT, o INTEGER, p INTEGER, q TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS reindeer (pid INTEGER, a INTEGER, b TEXT, c TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17009LL);

  return v5;
}

- (BOOL)_migrateFrom17009To17010:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS coffeebeans (pid INTEGER, pass_pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e TEXT, f INTEGER, g INTEGER, h INTEGER, i TEXT, j TEXT, k INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17010LL);

  return v5;
}

- (BOOL)_migrateFrom17010To17011:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"ee INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"eec TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"marionberry", (uint64_t)@"ff INTEGER")

  return v5;
}

- (BOOL)_migrateFrom17011To17012:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17012To17013:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_preferences", (uint64_t)@"dirty BOOL")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_preferences",  (uint64_t)@"last_updated_date INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_preferences_restriction", (uint64_t)@"a INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"peer_payment_account", (uint64_t)@"b INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS paprika (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17013LL);

  return v5;
}

- (BOOL)_migrateFrom17013To17014:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_descriptor_state_participant (pid INTEGER, participant_identifier TEXT, pass_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17014LL);

  return v5;
}

- (BOOL)_migrateFrom17014To17015:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS dark_chocolate (pid INTEGER, pass_pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f TEXT, g INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17015LL);

  return v5;
}

- (BOOL)_migrateFrom17015To17016:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS seaside (pid INTEGER, a INTEGER, b REAL, c REAL, d TEXT, e INTEGER, f TEXT, g BLOB, h BLOB, i TEXT, j INTEGER, k TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17016LL);

  return v5;
}

- (BOOL)_migrateFrom17016To17017:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_precursor_pass (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17017LL);

  return v5;
}

- (BOOL)_migrateFrom17017To17018:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_tile_value_text (pid INTEGER, content TEXT, value_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD364((BOOL)v4, @"pass_tile_value", @"content")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass_tile_metadata_horizontal_flow_group",  (uint64_t)@"maximumRows INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_value_date", (uint64_t)@"content TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_value_number", (uint64_t)@"currency_content INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_value_number", (uint64_t)@"decimal_content DECIMAL")

  return v5;
}

- (BOOL)_migrateFrom17018To17019:(id)a3 context:(id)a4
{
  id v4 = a3;
  +[PassAuxiliaryRegistrationRequirement updateRegistrationStatusTo:role:type:inDatabase:]( &OBJC_CLASS___PassAuxiliaryRegistrationRequirement,  "updateRegistrationStatusTo:role:type:inDatabase:",  1LL,  2LL,  3LL,  v4);
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"whitney", (uint64_t)@"r TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"whitney", (uint64_t)@"s TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"whitney", (uint64_t)@"t TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"whitney", (uint64_t)@"u TEXT")

  return v5;
}

- (BOOL)_migrateFrom17019To17020:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"cowboy", (uint64_t)@"i TEXT")

  return v5;
}

- (BOOL)_migrateFrom17020To17021:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17021To17022:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_endpoint_metadata (pid INTEGER, pass_pid INTEGER, last_updated INTEGER, is_dirty INTEGER, type INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17022LL);

  return v5;
}

- (BOOL)_migrateFrom17022To17023:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS granola_bar (pid INTEGER, rp INTEGER, it INTEGER, a INTEGER, b INTEGER, c TEXT, rt INTEGER, d INTEGER, e INTEGER, f TEXT, g TEXT, h INTEGER, i TEXT, j INTEGER, k TEXT, m INTEGER, n TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17023LL);

  return v5;
}

- (BOOL)_migrateFrom17023To17024:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"cow", @"o")
    && sub_1002CD364((BOOL)v4, @"cow", @"p")
    && sub_1002CD364((BOOL)v4, @"cow", @"q")
    && sub_1002CD0D0((BOOL)v4, 17024LL);

  return v5;
}

- (BOOL)_migrateFrom17024To17025:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"transit_applet_state_commute_plan",  (uint64_t)@"unique_identifier TEXT")

  return v5;
}

- (BOOL)_migrateFrom17025To17026:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17026To17027:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"cow", @"i")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"cow", (uint64_t)@"u TEXT")

  return v5;
}

- (BOOL)_migrateFrom17027To17028:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"coffeebeans", (uint64_t)@"order_index INTEGER")
    && sub_1002CD364((BOOL)v4, @"cowboy", @"g")

  return v5;
}

- (BOOL)_migrateFrom17028To17029:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS green_eggs_ham (pid INTEGER, la TEXT, lb TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17029LL);

  return v5;
}

- (BOOL)_migrateFrom17029To17030:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17030To17031:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"cow", (uint64_t)@"x TEXT") && sub_1002CD0D0((BOOL)v4, 17031LL);

  return v5;
}

- (BOOL)_migrateFrom17031To17032:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"transfer_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"sell_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"bag_policy_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"order_food_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"transit_information_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"parking_information_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"directions_information_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"merchandise_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"accessibility_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"purchase_parking_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"add_on_url TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"contact_venue_phone_number TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"contact_venue_email TEXT")

  return v5;
}

- (BOOL)_migrateFrom17032To17033:(id)a3 context:(id)a4
{
  id v4 = a3;
  if (sub_1002CD314((BOOL)v4, (uint64_t)@"pass", (uint64_t)@"contactless_activation_grouping_type INTEGER"))
  {
    BOOL v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"UPDATE pass SET contactless_activation_grouping_type = CASE WHEN payment_option_selectable > 0 THEN 1 ELSE 0 END"));
    BOOL v6 = sub_1002CCA50((BOOL)v4, v5)
      && sub_1002CD364((BOOL)v4, @"pass", @"payment_option_selectable")
      && sub_1002CD0D0((BOOL)v4, 17033LL);
  }

  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

- (BOOL)_migrateFrom17033To17034:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"loquat", (uint64_t)@"n TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"loquat", (uint64_t)@"o TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"loquat", (uint64_t)@"p TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"loquat", (uint64_t)@"q INTEGER")

  return v5;
}

- (BOOL)_migrateFrom17034To17035:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pending_provisioning_identity_credential (pid INTEGER, base_pid INTEGER, a TEXT, b TEXT, c TEXT, d TEXT, e BLOB, f TEXT, g TEXT, h TEXT, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"pending_provisioning_receipt", (uint64_t)@"e BLOB")

  return v5;
}

- (BOOL)_migrateFrom17035To17036:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass",  (uint64_t)@"supports_automatic_foreground_vibrancy INTEGER")

  return v5;
}

- (BOOL)_migrateFrom17036To17037:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = sub_1002CD0D0((BOOL)v6, 17037LL);
  if (v8)
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_10037110C;
    v10[3] = &unk_100658170;
    void v10[4] = self;
    id v11 = v6;
    [v7 addDatabasePopulationOperation:v10];
  }

  return v8;
}

- (BOOL)_migrateFrom17037To17038:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CDB74((BOOL)v4, (uint64_t)@"duck")
    && sub_1002CDB74((BOOL)v4, (uint64_t)@"hedgehog")
    && sub_1002CDB74((BOOL)v4, (uint64_t)@"owl")
    && sub_1002CDB74((BOOL)v4, (uint64_t)@"reindeer")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"iit INTEGER")

  return v5;
}

- (BOOL)_migrateFrom17038To17039:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pending_provisioning_stateful_transfer", (uint64_t)@"d TEXT")

  return v5;
}

- (BOOL)_migrateFrom17039To17040:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS cumin (pid INTEGER, a INTEGER, b TEXT, c BLOB, PRIMARY KEY (pid));")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"payment_transaction", (uint64_t)@"cb TEXT")

  return v5;
}

- (BOOL)_migrateFrom17040To17041:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass_tile_metadata_horizontal_flow_group",  (uint64_t)@"action_group INTEGER")
    && sub_1002CD0D0((BOOL)v4, 17041LL);

  return v5;
}

- (BOOL)_migrateFrom17041To17042:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"pass_tile_image", (uint64_t)@"hasColorContent BOOL DEFAULT 0")

  return v5;
}

- (BOOL)_migrateFrom17042To17043:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  if (sub_1002CCA50( (BOOL)v5,  @"CREATE TABLE IF NOT EXISTS whitney_agrk (pid INTEGER, applet_subcredential_pid INTEGER, data BLOB, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v5, 17043LL))
  {
    [v6 addPaymentApplicationRegeneration];
    BOOL v7 = 1;
  }

  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

- (BOOL)_migrateFrom17043To17044:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS pass_relevancy_model (pid INTEGER, pass_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17044LL);

  return v5;
}

- (BOOL)_migrateFrom17044To17045:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CDB74((BOOL)v4, (uint64_t)@"seaside") && sub_1002CD0D0((BOOL)v4, 17045LL);

  return v5;
}

- (BOOL)_migrateFrom17045To17046:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD364((BOOL)v4, @"pass_tile_metadata_horizontal_flow_group", @"action_group")
    && sub_1002CD314( (BOOL)v4,  (uint64_t)@"pass_tile_metadata_horizontal_flow_group",  (uint64_t)@"group_style TEXT")
    && sub_1002CD0D0((BOOL)v4, 17046LL);

  return v5;
}

- (BOOL)_migrateFrom17046To17047:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17047To17048:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17048To17049:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_1002CD0D0((BOOL)v5, 17049LL);
  if (v7)
  {
    [v6 addPassStyleRegeneration];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_1003716D0;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }

  return v7;
}

- (BOOL)_migrateFrom17049To17050:(id)a3 context:(id)a4
{
  id v4 = a3;
  id v5 = sub_1002CDDE0(v4, @"pass_annotations");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned __int8 v7 = [v6 containsObject:@"archived_timestamp"];

  BOOL v8 = ((v7 & 1) != 0
  return v8;
}

- (BOOL)_migrateFrom17050To17051:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_1002CD0D0((BOOL)v5, 17051LL);
  if (v7)
  {
    PDSetDatabaseManagerHasPerformedContactlessActivationGroupingTypeRepair(0LL);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100371A34;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }

  return v7;
}

- (BOOL)_migrateFrom17051To17052:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17052To17053:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"peer_payment_account",  (uint64_t)@"amount_remaining_until_identity_verification INTEGER")
    && sub_1002CD0D0((BOOL)v4, 17053LL);

  return v5;
}

- (BOOL)_migrateFrom17053To17054:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"kiwi", (uint64_t)@"temp_a TEXT")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE kiwi SET temp_a=(SELECT pears.a FROM pears INNER JOIN clementines ON clementines.a=pears.pid INNER JOIN kiwi ON kiwi.a=clementines.pid)")
    && sub_1002CD364((BOOL)v4, @"kiwi", @"a")
    && sub_1002CD898((BOOL)v4, @"kiwi", @"temp_a", @"a")
    && sub_1002CD0D0((BOOL)v4, 17054LL);

  return v5;
}

- (BOOL)_migrateFrom17054To17055:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"cow", (uint64_t)@"y BOOL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"cow", (uint64_t)@"z TEXT")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"cow", (uint64_t)@"aa TEXT")

  return v5;
}

- (BOOL)_migrateFrom17055To17056:(id)a3 context:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager secureElement](self, "secureElement"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 secureElementIdentifiers]);

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_100371DE8;
  v14[3] = &unk_10063C8B0;
  id v15 = v9;
  id v16 = v6;
  id v17 = (id)objc_claimAutoreleasedReturnValue(+[NSMapTable strongToStrongObjectsMapTable](&OBJC_CLASS___NSMapTable, "strongToStrongObjectsMapTable"));
  id v10 = v17;
  id v11 = v6;
  id v12 = v9;
  [v7 addDatabasePopulationOperation:v14];

  LOBYTE(v7) = sub_1002CD0D0((BOOL)v11, 17056LL);
  return (char)v7;
}

- (BOOL)_migrateFrom17056To17057:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"cowboy", (uint64_t)@"ma BOOL")

  return v5;
}

- (BOOL)_migrateFrom17057To17058:(id)a3 context:(id)a4
{
  id v5 = a4;
  BOOL v6 = sub_1002CD0D0((BOOL)a3, 17058LL);
  if (v6) {
    [v5 addPassStyleRegeneration];
  }

  return v6;
}

- (BOOL)_migrateFrom17058To17059:(id)a3 context:(id)a4
{
  id v6 = a4;
  BOOL v7 = sub_1002CD0D0((BOOL)a3, 17059LL);
  if (v7)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100372284;
    v9[3] = &unk_100639300;
    void v9[4] = self;
    [v6 addPostMigrationOperation:v9];
  }

  return v7;
}

- (BOOL)_migrateFrom17059To17060:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS payment_offer_dynamic_content_icon_variant (pid INTEGER, two_x TEXT, three_x TEXT, PRIMARY KEY (pid));")
    && sub_1002CCA50((BOOL)v4, @"DELETE from giraffe")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"giraffe", (uint64_t)@"default_variant INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"giraffe", (uint64_t)@"light_variant INTEGER")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"giraffe", (uint64_t)@"dark_variant INTEGER")
    && sub_1002CD364((BOOL)v4, @"giraffe", @"a")
    && sub_1002CD364((BOOL)v4, @"giraffe", @"b")
    && sub_1002CD0D0((BOOL)v4, 17060LL);

  return v5;
}

- (BOOL)_migrateFrom17060To17061:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"kiwi", (uint64_t)@"temp_a INTEGER")
    && sub_1002CCA50( (BOOL)v4,  @"UPDATE kiwi SET temp_a=(SELECT clementines.pid FROM clementines INNER JOIN pears ON pears.pid=clementines.a INNER JOIN kiwi ON kiwi.a=pears.a)")
    && sub_1002CD364((BOOL)v4, @"kiwi", @"a")
    && sub_1002CD898((BOOL)v4, @"kiwi", @"temp_a", @"a")
    && sub_1002CD0D0((BOOL)v4, 17061LL);

  return v5;
}

- (BOOL)_migrateFrom17061To17062:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17062To17063:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"rhubarb", (uint64_t)@"n BOOL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"rhubarb", (uint64_t)@"q BOOL")
    && sub_1002CD314((BOOL)v4, (uint64_t)@"rhubarb", (uint64_t)@"r BOOL")

  return v5;
}

- (BOOL)_migrateFrom17063To17064:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17064To17065:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314( (BOOL)v4,  (uint64_t)@"honey",  (uint64_t)@"document_type TEXT NOT NULL DEFAULT 'org.iso.18013.5.1.mDL'")
    && sub_1002CD0D0((BOOL)v4, 17065LL);

  return v5;
}

- (BOOL)_migrateFrom17065To17066:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17066To17067:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS footer_content (pid INTEGER, type INTEGER, footer_text TEXT, installment_criteria_pid INTEGER, PRIMARY KEY (pid));")
    && sub_1002CCA50( (BOOL)v4,  @"CREATE TABLE IF NOT EXISTS footer_content_link (pid INTEGER, footer_content_pid INTEGER, link_text TEXT, link_url TEXT, terms_identifier TEXT, analytics_identifier TEXT, PRIMARY KEY (pid));")
    && sub_1002CD0D0((BOOL)v4, 17067LL);

  return v5;
}

- (BOOL)_migrateFrom17067To17068:(id)a3 context:(id)a4
{
  id v4 = a3;

  return v5;
}

- (BOOL)_migrateFrom17068To17069:(id)a3 context:(id)a4
{
  id v4 = a3;
  BOOL v5 = sub_1002CD314((BOOL)v4, (uint64_t)@"honey", (uint64_t)@"e TEXT")

  return v5;
}

- (BOOL)_migrateFrom17069To17070:(id)a3 context:(id)a4
{
  id v5 = a3;
  id v6 = a4;
  BOOL v7 = sub_1002CD0D0((BOOL)v5, 17070LL);
  if (v7)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    void v9[2] = sub_100372944;
    v9[3] = &unk_100658148;
    id v10 = v5;
    [v6 addDatabasePopulationOperation:v9];
  }

  return v7;
}

- (void)adjustGroupsAfterAddingPass:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_100374B08;
  v9[3] = &unk_1006455C8;
  void v9[4] = self;
  id v10 = v4;
  id v8 = v4;
  sub_1002CCC5C((uint64_t)database, v9);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager delegate](self, "delegate"));
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v6 catalogOfRecord]);
  -[PDDatabaseManager _applyCatalog:](self, "_applyCatalog:", v7);
}

- (void)adjustGroupsBeforeRemovingPass:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_100374BE8;
  v9[3] = &unk_1006455C8;
  id v10 = v4;
  id v11 = self;
  id v8 = v4;
  sub_1002CCC5C((uint64_t)database, v9);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager delegate](self, "delegate"));
  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v6 catalogOfRecord]);
  -[PDDatabaseManager _applyCatalog:](self, "_applyCatalog:", v7);
}

- (void)adjustGroupsAfterUpdatingPass:(id)a3 oldGroupingProfile:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  uint64_t database = self->_database;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  id v13[2] = sub_100374D54;
  v13[3] = &unk_10063E440;
  id v14 = v6;
  id v15 = v7;
  id v16 = self;
  id v9 = v7;
  id v12 = v6;
  sub_1002CCC5C((uint64_t)database, v13);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager delegate](self, "delegate"));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 catalogOfRecord]);
  -[PDDatabaseManager _applyCatalog:](self, "_applyCatalog:", v11);
}

- (id)unexpiredPassesOrderedByGroup
{
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  uint64_t database = self->_database;
  id v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472LL;
  id v10 = sub_100374EE4;
  id v11 = &unk_1006455C8;
  id v12 = self;
  uint64_t v13 = v3;
  id v5 = v3;
  sub_1002CCC5C((uint64_t)database, &v8);
  id v6 = -[NSMutableArray copy](v5, "copy", v8, v9, v10, v11, v12);

  return v6;
}

- (id)effectiveCatalog
{
  id v3 = objc_alloc_init(&OBJC_CLASS___PKCatalog);
  uint64_t database = self->_database;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_1003751C4;
  v9[3] = &unk_1006455C8;
  void v9[4] = self;
  id v5 = v3;
  id v10 = v5;
  sub_1002CCC5C((uint64_t)database, v9);
  id v6 = v10;
  id v7 = v5;

  return v7;
}

- (id)sortedPassUniqueIdentifiersForGroupContainingPassWithUniqueIdentifier:(id)a3
{
  if (a3)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[Pass anyInDatabase:withUniqueID:]( &OBJC_CLASS___Pass,  "anyInDatabase:withUniqueID:",  self->_database,  a3));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 group]);

    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 sortedPassUniqueIdentifiers]);
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

- (void)createGroupsIfNecessary
{
  uint64_t database = self->_database;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100375A78;
  v3[3] = &unk_100645828;
  v3[4] = self;
  sub_1002CCC5C((uint64_t)database, v3);
}

- (void)_validateDefaultPaymentPassOrdering
{
  uint64_t v3 = PDDefaultPaymentPassUniqueIdentifier(self, a2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v4)
  {
    uint64_t database = self->_database;
    v7[1] = 3221225472LL;
    v7[2] = sub_100375DBC;
    v7[3] = &unk_1006455C8;
    id v6 = v4;
    v7[0] = _NSConcreteStackBlock;
    id v8 = v4;
    uint64_t v9 = self;
    sub_1002CCC5C((uint64_t)database, v7);

    id v4 = v6;
  }
}

- (void)_applyCatalog:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10037625C;
  v7[3] = &unk_1006455C8;
  id v8 = v4;
  uint64_t v9 = self;
  id v6 = v4;
  sub_1002CCC5C((uint64_t)database, v7);
}

- (void)_insertPass:(id)a3
{
  id v4 = a3;
  id v5 = (id)objc_claimAutoreleasedReturnValue([v4 groupingProfile]);
  -[PDDatabaseManager _insertPass:groupingProfile:](self, "_insertPass:groupingProfile:", v4, v5);
}

- (void)_insertPass:(id)a3 groupingProfile:(id)a4
{
}

- (void)_insertPass:(id)a3 groupingProfile:(id)a4 insertNewGroupAfter:(id)a5
{
  id v13 = a3;
  id v8 = a5;
  id v9 = a4;
  uint64_t v10 = objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _firstGroupMatchingProfile:](self, "_firstGroupMatchingProfile:", v9));
  if (v10)
  {
    id v11 = (void *)v10;
    -[PDDatabaseManager _addPass:toGroup:withGroupingProfile:]( self,  "_addPass:toGroup:withGroupingProfile:",  v13,  v10,  v9);
  }

  else
  {
    id v12 = +[PDAutomaticGroup createAutomaticGroupForPass:withGroupingProfile:]( &OBJC_CLASS___PDAutomaticGroup,  "createAutomaticGroupForPass:withGroupingProfile:",  v13,  v9);

    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[Group insertAutomaticGroup:inDatabase:]( &OBJC_CLASS___Group,  "insertAutomaticGroup:inDatabase:",  v12,  self->_database));
    [v13 updateWithGroup:v11];
    if (v8) {
      -[PDDatabaseManager _moveGroup:toIndex:](self, "_moveGroup:toIndex:", v11, (char *)[v8 order] + 1);
    }
    id v9 = v12;
  }
}

- (id)_firstGroupMatchingProfile:(id)a3
{
  id v4 = a3;
  id v5 = [v4 passType];
  uint64_t v6 = objc_claimAutoreleasedReturnValue([v4 groupingID]);
  id v7 = (void *)v6;
  if (v5 != (id)1 || v6)
  {
    id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v4 passTypeID]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"pass_type_id",  v10));
    -[NSMutableArray addObject:](v9, "addObject:", v11);

    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v4 passStyle]));
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"pass_style",  v12));
    -[NSMutableArray addObject:](v9, "addObject:", v13);

    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForGroupingID:](self, "_predicateForGroupingID:", v7));
    -[NSMutableArray addObject:](v9, "addObject:", v14);

    if (v5 == (id)1)
    {
LABEL_13:
      __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));
      id v8 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _firstGroupMatchingPredicate:](self, "_firstGroupMatchingPredicate:", v21));

      goto LABEL_14;
    }

    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v4 isNFCEnabled]));
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"nfc_enabled",  v15));
    -[NSMutableArray addObject:](v9, "addObject:", v16);

    id v17 = v4;
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 groupingID]);
    if (!v18)
    {
      id v19 = [v17 passStyle];
      if (v19 == (id)9) {
        goto LABEL_9;
      }
      if (v19 == (id)4)
      {
        double v20 = 86400.0;
        goto LABEL_11;
      }

      if (v19 == (id)2)
      {
LABEL_9:
        double v20 = 3600.0;
LABEL_11:

        id v17 = (id)objc_claimAutoreleasedReturnValue([v17 relevantDates]);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForDates:leeway:](self, "_predicateForDates:leeway:", v17, v20));
        -[NSMutableArray addObject:](v9, "addObject:", v18);
      }
    }

    goto LABEL_13;
  }

  id v8 = 0LL;
LABEL_14:

  return v8;
}

- (id)_firstGroupMatchingGroup:(id)a3 withRelevantDates:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 automaticGroup]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 passTypeID]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 groupingID]);
  uint64_t v11 = PKPassTypeForPassTypeIdentifier(v9);
  if (v11 != 1 || v10 != 0LL)
  {
    uint64_t v13 = v11;
    __int128 v47 = v7;
    id v14 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v44 = v6;
    id v46 = self;
    id v16 = (void *)_SQLValueForEntity(v6, v15);
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:notEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:notEqualToValue:",  @"pid",  v16));
    -[NSMutableArray addObject:](v14, "addObject:", v17);

    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"pass_type_id",  v9));
    -[NSMutableArray addObject:](v14, "addObject:", v18);

    id v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v8 passStyle]));
    double v20 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"pass_style",  v19));
    -[NSMutableArray addObject:](v14, "addObject:", v20);

    __int128 v21 = v46;
    __int128 v22 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _predicateForGroupingID:](v46, "_predicateForGroupingID:", v10));
    -[NSMutableArray addObject:](v14, "addObject:", v22);

    __int128 v23 = &OBJC_CLASS___SQLitePropertyPredicate;
    if (v13 == 1)
    {
LABEL_19:
      __int128 v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&v23[10], "predicateMatchingAllPredicates:", v14, v44));
      BOOL v28 = (void *)objc_claimAutoreleasedReturnValue(-[PDDatabaseManager _firstGroupMatchingPredicate:](v21, "_firstGroupMatchingPredicate:", v42));

      id v6 = v45;
      id v7 = v47;
      goto LABEL_20;
    }

    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v8 isNFCEnabled]));
    id v25 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"nfc_enabled",  v24));
    -[NSMutableArray addObject:](v14, "addObject:", v25);

    id v26 = v8;
    char v27 = (void *)objc_claimAutoreleasedReturnValue([v26 groupingID]);
    if (v27)
    {
LABEL_7:

      __int128 v23 = &OBJC_CLASS___SQLitePropertyPredicate;
      goto LABEL_19;
    }

    id v29 = [v26 passStyle];
    if (v29 != (id)9)
    {
      if (v29 == (id)4)
      {
        double v30 = 86400.0;
LABEL_14:

        if ([v47 count]
          && (id v31 = (void *)objc_claimAutoreleasedReturnValue([v47 firstObject]),
              id v32 = (void *)objc_claimAutoreleasedReturnValue([v31 date]),
              v32,
              v31,
              v32))
        {
          id v33 = (void *)objc_claimAutoreleasedReturnValue([v26 minDate]);
          uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _predicateForDate:matchExactly:leeway:]( v46,  "_predicateForDate:matchExactly:leeway:",  v33,  0LL,  v30));

          id v35 = (void *)objc_claimAutoreleasedReturnValue([v26 maxDate]);
          uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _predicateForDate:matchExactly:leeway:]( v46,  "_predicateForDate:matchExactly:leeway:",  v35,  0LL,  v30));

          v49[0] = v34;
          v49[1] = v36;
          id v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v49, 2LL));
          uint64_t v38 = objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v37));
        }

        else
        {
          id v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "minDate", v6));
          uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _predicateForDate:matchExactly:leeway:]( v46,  "_predicateForDate:matchExactly:leeway:",  v39,  1LL,  0.0));

          uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v26 maxDate]);
          uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _predicateForDate:matchExactly:leeway:]( v46,  "_predicateForDate:matchExactly:leeway:",  v40,  1LL,  0.0));

          v48[0] = v34;
          v48[1] = v36;
          id v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v48, 2LL));
          uint64_t v38 = objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v37));
        }

        id v41 = (void *)v38;

        __int128 v21 = v46;
        -[NSMutableArray addObject:](v14, "addObject:", v41);

        __int128 v23 = &OBJC_CLASS___SQLitePropertyPredicate;
        goto LABEL_19;
      }

      if (v29 != (id)2) {
        goto LABEL_7;
      }
    }

    double v30 = 3600.0;
    goto LABEL_14;
  }

  BOOL v28 = 0LL;
LABEL_20:

  return v28;
}

- (id)_firstGroupMatchingPredicate:(id)a3
{
  id v4 = a3;
  uint64_t database = self->_database;
  id v17 = @"group_order";
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v17, 1LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:orderingProperties:]( &OBJC_CLASS___Group,  "queryWithDatabase:predicate:orderingProperties:",  database,  v4,  v6));

  uint64_t v11 = 0LL;
  id v12 = &v11;
  uint64_t v13 = 0x3032000000LL;
  id v14 = sub_1003757B8;
  uint64_t v15 = sub_1003757C8;
  id v16 = 0LL;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100377494;
  v10[3] = &unk_100658628;
  void v10[4] = self;
  void v10[5] = &v11;
  [v7 enumeratePersistentIDsUsingBlock:v10];
  id v8 = (id)v12[5];
  _Block_object_dispose(&v11, 8);

  return v8;
}

- (id)_groupAtOrAfterIndex:(unint64_t)a3 bestMatchingUniqueIDs:(id)a4
{
  id v6 = a4;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateWithProperty:equalToValues:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateWithProperty:equalToValues:",  @"unique_id",  v6));
  v31[0] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", a3));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:greaterThanOrEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:greaterThanOrEqualToValue:",  @"pass_group.group_order",  v8));
  v31[1] = v9;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v31, 2LL));

  uint64_t database = self->_database;
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v12));

  uint64_t v24 = 0LL;
  id v25 = &v24;
  uint64_t v26 = 0x3032000000LL;
  char v27 = sub_1003757B8;
  BOOL v28 = sub_1003757C8;
  id v29 = 0LL;
  v23[0] = 0LL;
  v23[1] = v23;
  void v23[2] = 0x2020000000LL;
  v23[3] = 0LL;
  id v14 = objc_alloc_init(&OBJC_CLASS___NSCountedSet);
  double v30 = @"group_pid";
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v30, 1LL));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  void v19[2] = sub_1003777B4;
  v19[3] = &unk_100658650;
  void v19[4] = self;
  id v16 = v14;
  double v20 = v16;
  __int128 v21 = v23;
  __int128 v22 = &v24;
  [v13 enumeratePersistentIDsAndProperties:v15 usingBlock:v19];

  id v17 = (id)v25[5];
  _Block_object_dispose(v23, 8);
  _Block_object_dispose(&v24, 8);

  return v17;
}

- (void)_fixDuplicateGroupsAtIndex:(unint64_t)a3 preservingGroupPID:(int64_t)a4 maximumNumberOfGroups:(unint64_t)a5
{
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a4));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:notEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:notEqualToValue:",  @"group_pid",  v8));
  v32[0] = v9;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", a3));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"pass_group.group_order",  v10));
  v32[1] = v11;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v32, 2LL));

  uint64_t database = self->_database;
  id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v12));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:]( &OBJC_CLASS___Pass,  "queryWithDatabase:predicate:",  database,  v14));

  id v16 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v31 = @"group_pid";
  id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v31, 1LL));
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  v28[2] = sub_100377B08;
  v28[3] = &unk_100639E18;
  v28[4] = self;
  uint64_t v18 = v16;
  id v29 = v18;
  [v15 enumeratePersistentIDsAndProperties:v17 usingBlock:v28];

  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  id v19 = v18;
  id v20 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v24,  v30,  16LL);
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v25;
    do
    {
      __int128 v23 = 0LL;
      do
      {
        if (*(void *)v25 != v22) {
          objc_enumerationMutation(v19);
        }
        objc_msgSend(*(id *)(*((void *)&v24 + 1) + 8 * (void)v23), "updateWithOrder:", a5, (void)v24);
        __int128 v23 = (char *)v23 + 1;
      }

      while (v21 != v23);
      id v21 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v19,  "countByEnumeratingWithState:objects:count:",  &v24,  v30,  16LL);
    }

    while (v21);
  }
}

- (void)_moveGroup:(id)a3 toIndex:(unint64_t)a4
{
  id v6 = a3;
  id v7 = [v6 order];
  if (v7 != (id)a4)
  {
    unint64_t v8 = (unint64_t)v7;
    __int128 v24 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    if (v8 < a4) {
      unint64_t v9 = v8 + 1;
    }
    else {
      unint64_t v9 = a4;
    }
    if (v8 >= a4) {
      unint64_t v10 = v8 - 1;
    }
    else {
      unint64_t v10 = a4;
    }
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v9));
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:greaterThanOrEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:greaterThanOrEqualToValue:",  @"group_order",  v11));

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v10));
    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:lessThanOrEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:lessThanOrEqualToValue:",  @"group_order",  v13));

    v32[0] = v12;
    v32[1] = v14;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v32, 2LL));
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v15));

    uint64_t database = self->_database;
    id v31 = @"group_order";
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v31, 1LL));
    id v19 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:orderingProperties:]( &OBJC_CLASS___Group,  "queryWithDatabase:predicate:orderingProperties:",  database,  v16,  v18));

    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472LL;
    v29[2] = sub_100377E20;
    v29[3] = &unk_10063BCB0;
    v29[4] = self;
    id v20 = v24;
    double v30 = v20;
    [v19 enumeratePersistentIDsUsingBlock:v29];
    if (v8 >= a4) {
      id v21 = 0LL;
    }
    else {
      id v21 = -[NSMutableArray count](v20, "count");
    }
    -[NSMutableArray insertObject:atIndex:](v20, "insertObject:atIndex:", v6, v21);
    uint64_t v22 = self->_database;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_100377E84;
    v25[3] = &unk_10063E308;
    unint64_t v27 = v8;
    unint64_t v28 = a4;
    __int128 v26 = v20;
    __int128 v23 = v20;
    sub_1002CCC5C((uint64_t)v22, v25);
  }
}

- (void)_removeGroup:(id)a3
{
  id v4 = a3;
  id v5 = (char *)[v4 order];
  [v4 deleteFromDatabase];
  id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v5));
  unint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:greaterThanValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:greaterThanValue:",  @"group_order",  v7));

  uint64_t database = self->_database;
  __int128 v25 = @"group_order";
  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v25, 1LL));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity queryWithDatabase:predicate:orderingProperties:]( &OBJC_CLASS___Group,  "queryWithDatabase:predicate:orderingProperties:",  database,  v8,  v10));

  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  v22[2] = sub_1003781B0;
  v22[3] = &unk_10063BCB0;
  v22[4] = self;
  id v12 = v6;
  __int128 v23 = v12;
  [v11 enumeratePersistentIDsUsingBlock:v22];
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  uint64_t v13 = v12;
  id v14 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v13,  "countByEnumeratingWithState:objects:count:",  &v18,  v24,  16LL);
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v19;
    do
    {
      id v17 = 0LL;
      do
      {
        if (*(void *)v19 != v16) {
          objc_enumerationMutation(v13);
        }
        objc_msgSend( *(id *)(*((void *)&v18 + 1) + 8 * (void)v17),  "updateWithOrder:",  (char *)v17 + (void)v5,  (void)v18);
        id v17 = (char *)v17 + 1;
      }

      while (v15 != v17);
      id v15 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v13,  "countByEnumeratingWithState:objects:count:",  &v18,  v24,  16LL);
      id v5 = (char *)v17 + (void)v5;
    }

    while (v15);
  }
}

- (void)_addPass:(id)a3 toGroup:(id)a4 withGroupingProfile:(id)a5
{
  id v16 = a3;
  id v8 = a4;
  id v9 = a5;
  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 automaticGroup]);
  [v16 updateWithGroup:v8];
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 relevantDates]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _firstGroupMatchingGroup:withRelevantDates:]( self,  "_firstGroupMatchingGroup:withRelevantDates:",  v8,  v11));

  if (v12)
  {
    do
    {
      uint64_t v13 = objc_autoreleasePoolPush();
      -[PDDatabaseManager _mergeGroup:intoGroup:](self, "_mergeGroup:intoGroup:", v12, v8);
      objc_autoreleasePoolPop(v13);
      id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 relevantDates]);
      uint64_t v15 = objc_claimAutoreleasedReturnValue( -[PDDatabaseManager _firstGroupMatchingGroup:withRelevantDates:]( self,  "_firstGroupMatchingGroup:withRelevantDates:",  v8,  v14));

      id v12 = (void *)v15;
    }

    while (v15);
  }
}

- (void)_mergeGroup:(id)a3 intoGroup:(id)a4
{
  id v6 = a3;
  id v7 = a4;
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 automaticGroup]);
  id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[Pass queryWithDatabase:group:](&OBJC_CLASS___Pass, "queryWithDatabase:group:", self->_database, v6));
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  v22[2] = sub_100378528;
  v22[3] = &unk_1006585B0;
  uint64_t v11 = v9;
  __int128 v23 = v11;
  id v12 = v8;
  id v24 = v12;
  +[Pass enumeratePassesAndGroupingProfilesForQuery:withHandler:]( &OBJC_CLASS___Pass,  "enumeratePassesAndGroupingProfilesForQuery:withHandler:",  v10,  v22);
  [v7 updateWithAutomaticGroup:v12];
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  uint64_t v13 = v11;
  id v14 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v13,  "countByEnumeratingWithState:objects:count:",  &v18,  v25,  16LL);
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v19;
    do
    {
      id v17 = 0LL;
      do
      {
        if (*(void *)v19 != v16) {
          objc_enumerationMutation(v13);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * (void)v17), "updateWithGroup:", v7, (void)v18);
        id v17 = (char *)v17 + 1;
      }

      while (v15 != v17);
      id v15 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v13,  "countByEnumeratingWithState:objects:count:",  &v18,  v25,  16LL);
    }

    while (v15);
  }

  -[PDDatabaseManager _removeGroup:](self, "_removeGroup:", v6);
}

- (void)_removePass:(id)a3 fromGroup:(id)a4
{
  id v7 = a3;
  id v5 = a4;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 automaticGroup]);
  [v7 updateWithGroup:0];
}

- (id)_groupWithPersistentID:(id)a3
{
  id v4 = a3;
  id v5 = objc_alloc(&OBJC_CLASS___Group);
  id v6 = [v4 longLongValue];

  id v7 = -[SQLiteEntity initWithPersistentID:inDatabase:](v5, "initWithPersistentID:inDatabase:", v6, self->_database);
  if (-[SQLiteEntity existsInDatabase](v7, "existsInDatabase")) {
    id v8 = v7;
  }
  else {
    id v8 = 0LL;
  }
  id v9 = v8;

  return v9;
}

- (id)_predicateForGroupingID:(id)a3
{
  if (a3) {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"grouping_id"));
  }
  else {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNullPredicateWithProperty:",  @"grouping_id"));
  }
  return v3;
}

- (id)_predicateForDates:(id)a3 leeway:(double)a4
{
  id v5 = a3;
  id v6 = v5;
  if (v5)
  {
    if ([v5 count] == (id)1)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 firstObject]);
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 date]);
      BOOL v9 = v8 != 0LL;
    }

    else
    {
      BOOL v9 = 0;
    }

    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[PKPassRelevantDate findDateFromDates:option:]( &OBJC_CLASS___PKPassRelevantDate,  "findDateFromDates:option:",  v6,  0LL));
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[PKPassRelevantDate findDateFromDates:option:]( &OBJC_CLASS___PKPassRelevantDate,  "findDateFromDates:option:",  v6,  3LL));
    id v14 = v13;
    if (v9)
    {
      uint64_t v15 = objc_claimAutoreleasedReturnValue([v13 dateByAddingTimeInterval:a4]);

      uint64_t v16 = objc_claimAutoreleasedReturnValue([v12 dateByAddingTimeInterval:-a4]);
      id v17 = (void *)_SQLValueForDate(v15);
      unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:lessThanOrEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:lessThanOrEqualToValue:",  @"minimum_date",  v17));

      __int128 v18 = (void *)_SQLValueForDate(v16);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:greaterThanOrEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:greaterThanOrEqualToValue:",  @"maximum_date",  v18));
      id v12 = (void *)v16;
      id v14 = (void *)v15;
    }

    else
    {
      __int128 v19 = (void *)_SQLValueForDate(v13);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"maximum_date",  v19));

      __int128 v18 = (void *)_SQLValueForDate(v12);
      unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"minimum_date",  v18));
    }
  }

  else
  {
    unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNullPredicateWithProperty:",  @"minimum_date"));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNullPredicateWithProperty:",  @"maximum_date"));
  }

  v23[0] = v10;
  v23[1] = v11;
  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v23, 2LL));
  __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v20));

  return v21;
}

- (id)_predicateForDate:(id)a3 matchExactly:(BOOL)a4 leeway:(double)a5
{
  id v7 = a3;
  id v8 = v7;
  if (v7)
  {
    BOOL v9 = (void *)objc_claimAutoreleasedReturnValue([v7 dateByAddingTimeInterval:a5]);
    unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 dateByAddingTimeInterval:-a5]);
    uint64_t v11 = (void *)_SQLValueForDate(v9);
    if (a4)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"maximum_date",  v11));

      uint64_t v13 = (void *)_SQLValueForDate(v10);
      id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"minimum_date",  v13));
    }

    else
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:lessThanOrEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:lessThanOrEqualToValue:",  @"minimum_date",  v11));

      uint64_t v13 = (void *)_SQLValueForDate(v10);
      id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:greaterThanOrEqualToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:greaterThanOrEqualToValue:",  @"maximum_date",  v13));
    }
  }

  else
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNullPredicateWithProperty:",  @"minimum_date"));
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNullPredicateWithProperty:",  @"maximum_date"));
  }

  v18[0] = v14;
  v18[1] = v12;
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v18, 2LL));
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v15));

  return v16;
}

- (id)paymentTransactionsToDeleteFromFinanceWithLimit:(int64_t)a3
{
  return +[PaymentTransactionToDeleteFromFinance transactionsToDeleteFromFinanceWithLimit:inDatabase:]( &OBJC_CLASS___PaymentTransactionToDeleteFromFinance,  "transactionsToDeleteFromFinanceWithLimit:inDatabase:",  a3,  self->_database);
}

- (void)deletePaymentTransactionsToDeleteFromFinanceWithPIDs:(id)a3
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1003802E4;
  v5[3] = &unk_1006455C8;
  id v6 = a3;
  id v7 = self;
  id v4 = v6;
  -[PDDatabaseManager performTransactionWithBlock:](self, "performTransactionWithBlock:", v5);
}

- (void)resetNeedsSyncWithFinanceForTransactions:(id)a3
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100380484;
  v5[3] = &unk_1006455C8;
  id v6 = a3;
  id v7 = self;
  id v4 = v6;
  -[PDDatabaseManager performTransactionWithBlock:](self, "performTransactionWithBlock:", v5);
}

- (BOOL)setNeedsSyncWithFinanceForAllTransactions
{
  return +[PaymentTransaction setNeedsSyncWithFinanceForAllTransactionsInDatabase:]( &OBJC_CLASS___PaymentTransaction,  "setNeedsSyncWithFinanceForAllTransactionsInDatabase:",  self->_database);
}

- (void)setNeedsSyncWithFinanceForTransactionsWithAccountIdentifier:(id)a3
{
}

- (id)transactionsThatNeedSyncToFinanceWithAccountIdentifiers:(id)a3 withLimit:(int64_t)a4
{
  return +[PaymentTransaction transactionsThatNeedSyncToFinanceWithAccountIdentifiers:withLimit:inDatabase:]( &OBJC_CLASS___PaymentTransaction,  "transactionsThatNeedSyncToFinanceWithAccountIdentifiers:withLimit:inDatabase:",  a3,  a4,  self->_database);
}

@end