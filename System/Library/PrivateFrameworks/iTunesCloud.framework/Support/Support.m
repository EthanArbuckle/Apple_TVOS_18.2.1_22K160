LABEL_14:
        goto LABEL_15;
      }

      *(void *)buf = 0LL;
      *(void *)&buf[8] = buf;
      *(void *)&buf[16] = 0x2020000000LL;
      v9 = off_1001DB588;
      v18 = off_1001DB588;
      if (!off_1001DB588)
      {
        v10 = sub_100004198();
        v9 = dlsym(v10, "PLLogRegisteredEvent");
        *(void *)(*(void *)&buf[8] + 24LL) = v9;
        off_1001DB588 = v9;
      }

      _Block_object_dispose(buf, 8);
      if (v9)
      {
        ((void (*)(uint64_t, id, id, void))v9)(15LL, v5, v6, 0LL);
        v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543618;
          *(void *)&buf[4] = v5;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v6;
          v12 = "Logged Power Event -- %{public}@ -- %{public}@";
LABEL_13:
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v12, buf, 0x16u);
          goto LABEL_14;
        }

        goto LABEL_14;
      }

      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
      v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Boolean soft_PLLogRegisteredEvent(PLClientID, CFStringRef, CFDictionaryRef, CFArrayRef)"));
      objc_msgSend( v15,  "handleFailureInFunction:file:lineNumber:description:",  v16,  @"ICDPowerEventLogger.m",  17,  @"%s",  dlerror());
    }

    else
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
      v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Boolean soft_PLShouldLogRegisteredEvent(PLClientID, CFStringRef)"));
      objc_msgSend( v13,  "handleFailureInFunction:file:lineNumber:description:",  v14,  @"ICDPowerEventLogger.m",  16,  @"%s",  dlerror());
    }

    __break(1u);
  }

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&v38, 8);
}

  _Block_object_dispose(buf, 8);
  os_unfair_lock_unlock(&self->_lock);
  if (v7)
  {
    v14 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543874;
      *(void *)&buf[4] = self;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v6;
      *(_WORD *)&buf[22] = 2114;
      v25 = (uint64_t)v7;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Found capabilities request operation for severed client connection %{public}@: %{public}@. Cancellin g that operation.",  buf,  0x20u);
    }

    [v7 cancel];
  }

  if (v9)
  {
    v15 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543874;
      *(void *)&buf[4] = self;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v6;
      *(_WORD *)&buf[22] = 2114;
      v25 = (uint64_t)v9;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Found observation token for severed client connection %{public}@: %{public}@. Forcibly ending observ ing cloud service status for this observation token.",  buf,  0x20u);
    }

    -[ICDCloudServiceStatusMonitor endObservingCloudServiceStatusWithToken:completionHandler:]( self,  "endObservingCloudServiceStatusWithToken:completionHandler:",  v9,  &stru_1001A25A8);
  }
}

        goto LABEL_15;
      }

      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        goto LABEL_14;
      }
      v23 = self->_adamID;
      error = self->super._error;
      v25 = 138543874;
      v26 = self;
      v27 = 2114;
      v28 = v23;
      v29 = 2048;
      v30 = (int64_t)error;
      v14 = "%{public}@ Failed to delete playlist with global id: %{public}@, persistentID=%lld";
      v15 = v12;
      v16 = OS_LOG_TYPE_ERROR;
    }

    else
    {
      v12 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_14;
      }
      v21 = self->_adamID;
      v22 = self->super._error;
      v25 = 138543874;
      v26 = self;
      v27 = 2114;
      v28 = v21;
      v29 = 2048;
      v30 = (int64_t)v22;
      v14 = "%{public}@ Could not find a pending playlist to delete with global id: %{public}@, persistentID=%lld";
      v15 = v12;
      v16 = OS_LOG_TYPE_DEFAULT;
    }

    v17 = 32;
    goto LABEL_13;
  }

  v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    v18 = NSStringFromICFavoriteMediaEntityType(self->_artistCloudLibraryID);
    v9 = (void *)objc_claimAutoreleasedReturnValue(v18);
    status = self->super._status;
    v20 = self->_adamID;
    v25 = 138544130;
    v26 = self;
    v27 = 2114;
    v28 = (int64_t)v9;
    v29 = 2048;
    v30 = status;
    v31 = 2114;
    v32 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Invalid identifier to revert favoriting entityType=%{public}@, adamID=%lld, gobalPlaylistID=%{public}@",  (uint8_t *)&v25,  0x2Au);
LABEL_15:
  }
}

    v22 = 2LL;
    goto LABEL_15;
  }

  v22 = 3LL;
  if (v21 != 400 && v21 != 404) {
    goto LABEL_14;
  }
LABEL_15:
  if (v6)
  {
    v23 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      v24 = 138543362;
      v25 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "SagaPublishPlaylistOperation failed with error: %{public}@",  (uint8_t *)&v24,  0xCu);
    }
  }

  [*(id *)(a1 + 32) setStatus:v22];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

LABEL_19:
}

  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](&OBJC_CLASS___NSMutableURLRequest, "requestWithURL:", v9));
  [v21 setHTTPMethod:@"POST"];
  if (a5 > 0.0) {
    [v21 setTimeoutInterval:a5];
  }
  v22 = v11;
  if (!v22) {
    v22 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  }
  [v22 setObject:&off_1001B3F70 forKey:@"protocol-version"];
  [v22 setObject:&off_1001B3F70 forKey:@"min-compatible-version"];
  *(void *)buf = 0LL;
  v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v22,  100LL,  0LL,  buf));
  v24 = *(id *)buf;
  if (!v23)
  {
    v25 = os_log_create("com.apple.amp.itunescloudd", "Genius");
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
      LODWORD(v41) = 138543362;
      *(void *)((char *)&v41 + 4) = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "Failed to serialize body dictionary to plist with error: %{public}@",  (uint8_t *)&v41,  0xCu);
    }

    v23 = 0LL;
  }

  if (v23)
  {
    [v21 setValue:@"application/x-apple-plist" forHTTPHeaderField:@"Content-Type"];
    [v21 setHTTPBody:v23];
  }

  v26 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v21,  v14);
  -[ICStoreURLRequest setMaxRetryCount:](v26, "setMaxRetryCount:", a3);
  -[ICStoreURLRequest setShouldUseMescalSigning:](v26, "setShouldUseMescalSigning:", 1LL);

LABEL_25:
  _Block_object_dispose(&v34, 8);

  return v26;
}
}

LABEL_15:
    goto LABEL_16;
  }

  *((void *)v4 + 2) = self->_canonicalId;
  *((_BYTE *)v4 + 48) |= 2u;
  has = (char)self->_has;
  if ((has & 4) != 0) {
    goto LABEL_15;
  }
LABEL_5:
  if ((has & 0x10) != 0)
  {
LABEL_6:
    *((_BYTE *)v4 + 44) = self->_isExplicit;
    *((_BYTE *)v4 + 48) |= 0x10u;
  }
}
}
}

LABEL_15:
}

  os_unfair_lock_unlock(&self->_lock);
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  v24 = v14;
  v25 = [v24 countByEnumeratingWithState:&v44 objects:v56 count:16];
  if (v25)
  {
    v26 = v25;
    v27 = *(void *)v45;
    do
    {
      for (i = 0LL; i != v26; i = (char *)i + 1)
      {
        if (*(void *)v45 != v27) {
          objc_enumerationMutation(v24);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v44 + 1) + 8LL * (void)i) + 16LL))();
      }

      v26 = [v24 countByEnumeratingWithState:&v44 objects:v56 count:16];
    }

    while (v26);
  }

  if ((v11 & 1) == 0)
  {
    v33 = os_log_create("com.apple.amp.itunescloudd", "Default");
    v29 = v41;
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543874;
      v49 = self;
      v50 = 2114;
      v51 = (NSString *)v41;
      v52 = 2114;
      v53 = v10;
      v34 = "%{public}@: Could not find storefront country code from bag %{public}@; error: %{public}@.";
      v35 = v33;
      v36 = OS_LOG_TYPE_ERROR;
      v37 = 32;
LABEL_34:
      _os_log_impl((void *)&_mh_execute_header, v35, v36, v34, buf, v37);
    }
  }
}

        v18 = (void *)objc_claimAutoreleasedReturnValue(-[CloudArtworkImportOperation artworkToken](self, "artworkToken"));
        v19 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary artworkRelativePathFromToken:]( &OBJC_CLASS___ML3MusicLibrary,  "artworkRelativePathFromToken:",  v18));

        v20 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
        v21 = [v20 hasOriginalArtworkForRelativePath:v19];

        if (v21)
        {
          v22 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            v79 = self;
            _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Already have original on disk, attempting to import into database...",  buf,  0xCu);
          }

          v23 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
          v24 = (void *)objc_claimAutoreleasedReturnValue(-[CloudArtworkImportOperation artworkToken](self, "artworkToken"));
          v25 = objc_msgSend( v23,  "importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:",  v24,  -[CloudArtworkImportOperation artworkType](self, "artworkType"),  -[CloudArtworkImportOperation sourceType](self, "sourceType"),  -[CloudArtworkImportOperation mediaType](self, "mediaType"));

          if ((v25 & 1) == 0)
          {
            v76 = NSLocalizedDescriptionKey;
            v77 = @"Original artwork found, but failed to import.";
            v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v77,  &v76,  1LL));
            v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2002LL,  v26));
            -[CloudLibraryOperation setError:](self, "setError:", v27);
          }
        }

        else
        {
          v31 = -[CloudArtworkImportOperation isCancelled](self, "isCancelled");
          v32 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
          v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);
          if (!v31)
          {
            if (v33)
            {
              v37 = (void *)objc_claimAutoreleasedReturnValue(-[CloudArtworkImportOperation assetURL](self, "assetURL"));
              *(_DWORD *)buf = 138543618;
              v79 = self;
              v80 = 2114;
              *(void *)v81 = v37;
              _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Downloading artwork from '%{public}@'",  buf,  0x16u);
            }

            v38 = (void *)objc_claimAutoreleasedReturnValue(-[CloudArtworkImportOperation assetURL](self, "assetURL"));
            v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableURLRequest requestWithURL:]( &OBJC_CLASS___NSMutableURLRequest,  "requestWithURL:",  v38));

            objc_msgSend( v39,  "setAllowsCellularAccess:",  -[CloudArtworkImportOperation allowsCellularData](self, "allowsCellularData"));
            v40 = objc_alloc(&OBJC_CLASS___ICRequestContext);
            v41 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
            v52 = -[ICRequestContext initWithClientInfo:](v40, "initWithClientInfo:", v41);

            v42 = -[ICURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICURLRequest),  "initWithURLRequest:requestContext:",  v39,  v52);
            v43 = *(NSError **)((char *)&self->super.super._error + 2);
            *(NSError **)((char *)&self->super.super._error + 2) = v42;

            v44 = sub_1000C1020();
            v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
            v75[0] = v45;
            v46 = MSVNanoIDCreateTaggedPointer();
            v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
            v75[1] = v47;
            v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v75,  2LL));
            v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPathComponents:](&OBJC_CLASS___NSURL, "fileURLWithPathComponents:", v48));

            v50 = *(NSMutableArray **)((char *)&self->_completionHandlers + 2);
            v51 = *(uint64_t *)((char *)&self->super.super._error + 2);
            v53[0] = _NSConcreteStackBlock;
            v53[1] = 3221225472LL;
            v53[2] = sub_1000B4DE8;
            v53[3] = &unk_1001A56E8;
            v53[4] = self;
            v54 = v7;
            v55 = v8;
            [v50 enqueueDownloadRequest:v51 toDestination:v49 withCompletionHandler:v53];

            goto LABEL_41;
          }

          if (v33)
          {
            *(_DWORD *)buf = 134217984;
            v79 = self;
            _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Not running CloudArtworkImportOperation (%p) as it's is cancelled",  buf,  0xCu);
          }
        }

        -[CloudLibraryConcurrentOperation finish](self, "finish");
LABEL_41:

        return;
      }
    }

    goto LABEL_15;
  }

  if (v5)
  {
    *(_DWORD *)buf = 138543362;
    v79 = self;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Not running CloudArtworkImportOperation as it's is cancelled",  buf,  0xCu);
  }

  -[CloudLibraryConcurrentOperation finish](self, "finish");
}
}

void sub_100004174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_100004198()
{
  v4 = 0LL;
  if (!qword_1001DB580)
  {
    __int128 v5 = off_1001A19C8;
    uint64_t v6 = 0LL;
    qword_1001DB580 = _sl_dlopen(&v5, &v4);
  }

  v0 = (void *)qword_1001DB580;
  if (!qword_1001DB580)
  {
    v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *PowerLogLibrary(void)"));
    objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDPowerEventLogger.m",  15,  @"%s",  v4);

    __break(1u);
    goto LABEL_7;
  }

  v1 = v4;
  if (v4) {
LABEL_7:
  }
    free(v1);
  return v0;
}

id sub_1000049E0(uint64_t a1)
{
  v2 = *(dispatch_source_t **)(a1 + 32);
  if (v2[2])
  {
    dispatch_source_cancel(v2[2]);
    uint64_t v3 = *(void *)(a1 + 32);
    v4 = *(void **)(v3 + 16);
    *(void *)(v3 + 16) = 0LL;

    v2 = *(dispatch_source_t **)(a1 + 32);
  }

  return -[dispatch_source_t _onQueue_flushSyncBlocks](v2, "_onQueue_flushSyncBlocks");
}

void sub_100004A30(uint64_t a1)
{
  v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) library]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 libraryUID]);
  v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) playbackPositionDomain]);
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@-%@", v3, v4));

  uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_100004B30;
  v9[3] = &unk_1001A5F78;
  v7 = *(void **)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v11 = v5;
  id v12 = v7;
  id v8 = v5;
  objc_msgSend(v10, "_onQueue_scheduleBlockWithIdentifier:isCheckpoint:block:", v8, v6, v9);
}

void sub_100004B30(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 32) containsObject:*(void *)(a1 + 40)])
  {
    v2 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      uint64_t v4 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      uint64_t v16 = v3;
      __int16 v17 = 2114;
      uint64_t v18 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Sync in-progress for identifier=%{public}@. Scheduling follow-up sync.",  buf,  0x16u);
    }

    [*(id *)(a1 + 32) scheduleSyncForContext:*(void *)(a1 + 48) isCheckpoint:1];
  }

  else
  {
    [*(id *)(*(void *)(a1 + 32) + 32) addObject:*(void *)(a1 + 40)];
    __int128 v5 = objc_alloc(&OBJC_CLASS___ICDPlaybackPositionRequestOperationSynchronize);
    v9 = _NSConcreteStackBlock;
    uint64_t v10 = 3221225472LL;
    id v11 = sub_100004CB0;
    id v12 = &unk_1001A5590;
    uint64_t v6 = *(void **)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v13 = *(void *)(a1 + 32);
    id v14 = v6;
    id v8 = -[ICDPlaybackPositionRequestOperationSynchronize initWithContext:completionHandler:]( v5,  "initWithContext:completionHandler:",  v7,  &v9);
    objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "addOperation:", v8, v9, v10, v11, v12, v13);
  }
}

void sub_100004CB0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  uint64_t v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "msv_description"));
      *(_DWORD *)buf = 138544130;
      uint64_t v19 = v8;
      __int16 v20 = 2114;
      uint64_t v21 = v9;
      __int16 v22 = 1024;
      int v23 = a2;
      __int16 v24 = 2114;
      v25 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Sync finished for library %{public}@ success=%{BOOL}u error=%{public}@",  buf,  0x26u);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543874;
    uint64_t v19 = v11;
    __int16 v20 = 2114;
    uint64_t v21 = v12;
    __int16 v22 = 1024;
    int v23 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Sync finished for library %{public}@ success=%{BOOL}u",  buf,  0x1Cu);
  }

  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(a1 + 40);
  v15 = *(dispatch_queue_s **)(v13 + 8);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_100004E74;
  v16[3] = &unk_1001A6C30;
  v16[4] = v13;
  id v17 = v14;
  dispatch_async(v15, v16);
}

id sub_100004E74(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) removeObject:*(void *)(a1 + 40)];
}

void sub_10000512C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 writeUInt32:*(unsigned int *)(*(void *)(a1 + 32) + 104) withCode:1835624804];
  [v3 writeUInt32:*(unsigned int *)(*(void *)(a1 + 32) + 112) withCode:1836413810];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000051EC;
  v5[3] = &unk_1001A61D0;
  v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  ICDAAPUtilitiesWriteContainer(v4, 1835164524LL, v5);
}

void sub_1000051EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(*(void *)(a1 + 32) + 120) count])
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1000052D0;
    v10[3] = &unk_1001A70B8;
    uint64_t v4 = *(void *)(a1 + 40);
    v10[4] = *(void *)(a1 + 32);
    ICDAAPUtilitiesWriteContainer(v4, 1634356565LL, v10);
  }

  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 128);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10000538C;
  v8[3] = &unk_1001A1A10;
  v8[4] = v5;
  id v9 = v3;
  id v7 = v3;
  [v6 enumerateObjectsUsingBlock:v8];
}

void sub_1000052D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[ICDAAPPropertyInfo sharedContainerPropertyInfo]( &OBJC_CLASS___ICDAAPPropertyInfo,  "sharedContainerPropertyInfo"));
  uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 120LL);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_100005B70;
  v8[3] = &unk_1001A5A48;
  id v9 = v4;
  id v10 = v3;
  id v6 = v3;
  id v7 = v4;
  [v5 enumerateKeysAndObjectsUsingBlock:v8];
}

void sub_10000538C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 itemAdamID];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 itemUUID]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 itemPositionUUID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 referencePositionUUID]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 reactionString]);
  switch((unint64_t)[v3 type])
  {
    case 0uLL:
      id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_31;
      }
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v40 = v10;
      __int16 v41 = 2114;
      id v42 = v3;
      uint64_t v11 = "%{public}@ ignoring track edit of unknown type: %{public}@";
      goto LABEL_30;
    case 1uLL:
      if (v4 && v5 && v6)
      {
        uint64_t v12 = *(void *)(a1 + 40);
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472LL;
        v33[2] = sub_100005924;
        v33[3] = &unk_1001A6F90;
        id v38 = v4;
        id v34 = v5;
        id v35 = v6;
        id v36 = v7;
        id v37 = v3;
        ICDAAPUtilitiesWriteContainer(v12, 1634354017LL, v33);

        uint64_t v13 = v34;
        goto LABEL_19;
      }

      id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      goto LABEL_31;
    case 2uLL:
      if (v5)
      {
        uint64_t v14 = *(void *)(a1 + 40);
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 3221225472LL;
        v31[2] = sub_1000059C0;
        v31[3] = &unk_1001A70B8;
        id v32 = v5;
        ICDAAPUtilitiesWriteContainer(v14, 1634354034LL, v31);
        uint64_t v13 = v32;
        goto LABEL_19;
      }

      id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      goto LABEL_31;
    case 3uLL:
      if (v5 && v6)
      {
        uint64_t v15 = *(void *)(a1 + 40);
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472LL;
        v26[2] = sub_1000059D4;
        v26[3] = &unk_1001A19E8;
        id v27 = v5;
        id v28 = v6;
        id v29 = v7;
        id v30 = v3;
        ICDAAPUtilitiesWriteContainer(v15, 1634354029LL, v26);

        uint64_t v13 = v27;
        goto LABEL_19;
      }

      id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      goto LABEL_31;
    case 4uLL:
      if (v5 && v8)
      {
        uint64_t v16 = *(void *)(a1 + 40);
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472LL;
        v22[2] = sub_100005A5C;
        v22[3] = &unk_1001A3A08;
        id v23 = v5;
        id v24 = v8;
        id v25 = v3;
        ICDAAPUtilitiesWriteContainer(v16, 1634357875LL, v22);

        uint64_t v13 = v23;
        goto LABEL_19;
      }

      id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      goto LABEL_31;
    case 5uLL:
      if (v5 && v8)
      {
        uint64_t v17 = *(void *)(a1 + 40);
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472LL;
        v19[2] = sub_100005B0C;
        v19[3] = &unk_1001A61D0;
        id v20 = v5;
        id v21 = v8;
        ICDAAPUtilitiesWriteContainer(v17, 1634357877LL, v19);

        uint64_t v13 = v20;
LABEL_19:
      }

      else
      {
        id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
LABEL_29:
          uint64_t v18 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543618;
          uint64_t v40 = v18;
          __int16 v41 = 2114;
          id v42 = v3;
          uint64_t v11 = "%{public}@ ignoring track edit with incomplete params: %{public}@";
LABEL_30:
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, v11, buf, 0x16u);
        }

LABEL_31:
      }
}

LABEL_32:
      return;
    default:
      goto LABEL_32;
  }

          [v18 becomeActive];
          goto LABEL_33;
        }

        if (v18) {
          id v24 = v17 == 0LL;
        }
        else {
          id v24 = 0;
        }
        if (v24)
        {
          id v23 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_31;
          }
          goto LABEL_32;
        }

        if (v17)
        {
          id v25 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            v26 = (void *)objc_claimAutoreleasedReturnValue([(id)v9 userIdentity]);
            id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 accountDSID]);
            *(_DWORD *)buf = 138544130;
            v46 = self;
            v47 = 2048;
            v48 = v17;
            v49 = 2114;
            v50 = v16;
            v51 = 2114;
            v52 = v27;
            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Deactivating handler %p - class=%{public}@ dsid=%{public}@",  buf,  0x2Au);

            uint64_t v11 = v33;
            id v9 = v34;
          }

          v37[0] = _NSConcreteStackBlock;
          v37[1] = 3221225472LL;
          v37[2] = sub_1000D2558;
          v37[3] = &unk_1001A5788;
          v37[4] = self;
          v37[5] = v16;
          id v38 = (id)v9;
          v39 = v18;
          uint64_t v40 = (id)v11;
          [v17 becomeInactiveWithDeauthentication:1 completion:v37];
        }

void sub_100005924(uint64_t a1, void *a2)
{
  id v4 = a2;
  [v4 writeUInt64:*(unsigned int *)(a1 + 64) withCode:1634025833];
  [v4 writeString:*(void *)(a1 + 32) withCode:1634354005];
  [v4 writeString:*(void *)(a1 + 40) withCode:1634357365];
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    [v4 writeString:v3 withCode:1634357865];
  }
  else {
    objc_msgSend(v4, "writeUInt32:withCode:", objc_msgSend(*(id *)(a1 + 56), "positionType"), 1634357364);
  }
}

id sub_1000059C0(uint64_t a1, void *a2)
{
  return [a2 writeString:*(void *)(a1 + 32) withCode:1634354005];
}

void sub_1000059D4(uint64_t a1, void *a2)
{
  id v4 = a2;
  [v4 writeString:*(void *)(a1 + 32) withCode:1634354005];
  [v4 writeString:*(void *)(a1 + 40) withCode:1634357365];
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
    [v4 writeString:v3 withCode:1634357865];
  }
  else {
    objc_msgSend(v4, "writeUInt32:withCode:", objc_msgSend(*(id *)(a1 + 56), "positionType"), 1634357364);
  }
}

void sub_100005A5C(uint64_t a1, void *a2)
{
  id v8 = a2;
  [v8 writeString:*(void *)(a1 + 32) withCode:1634354005];
  [v8 writeString:*(void *)(a1 + 40) withCode:1634357845];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) timestamp]);
  id v4 = v3;
  if (v3) {
    id v5 = v3;
  }
  else {
    id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
  }
  id v6 = v5;

  [v6 timeIntervalSince1970];
  [v8 writeUInt64:(unint64_t)v7 withCode:1634357828];
}

void sub_100005B0C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 writeString:v3 withCode:1634354005];
  [v4 writeString:*(void *)(a1 + 40) withCode:1634357845];
}

void sub_100005B70(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) hasInfoForProperty:v5])
  {
    ICDAAPUtilitiesWriteProperty( *(void *)(a1 + 40),  [*(id *)(a1 + 32) elementCodeForProperty:v5],  objc_msgSend(*(id *)(a1 + 32), "valueTypeForProperty:", v5),  v6);
  }

  else
  {
    double v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "No DAAP code found for container property: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }
}

void sub_100006D3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

LABEL_17:
}

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}
}

  v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObjects:](&OBJC_CLASS___NSMutableSet, "setWithObjects:", v12, v36, v37, 0LL));
  if (CFPreferencesGetAppBooleanValue(@"UserRequestedSubscriptionHidden", @"com.apple.mobileipod", 0LL))
  {
    [v39 removeObject:v37];
  }

  else
  {
    uint64_t v14 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
    uint64_t v16 = -[ICStoreRequestContext initWithIdentity:](v14, "initWithIdentity:", v15);

    uint64_t v17 = [[ICMusicSubscriptionStatusRequest alloc] initWithStoreRequestContext:v16];
    [v17 setShouldReturnLastKnownStatusOnly:1];
    v47 = 0LL;
    v48 = &v47;
    v49 = 0x3032000000LL;
    v50 = sub_10005822C;
    v51 = sub_10005823C;
    v52 = 0LL;
    uint64_t v18 = dispatch_semaphore_create(0LL);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionStatusController sharedStatusController]( &OBJC_CLASS___ICMusicSubscriptionStatusController,  "sharedStatusController"));
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472LL;
    v44[2] = sub_100058244;
    v44[3] = &unk_1001A3528;
    v46 = &v47;
    id v20 = v18;
    v45 = v20;
    [v19 performSubscriptionStatusRequest:v17 withCompletionHandler:v44];

    dispatch_semaphore_wait(v20, 0xFFFFFFFFFFFFFFFFLL);
    if ([(id)v48[5] statusType] == (id)1) {
      id v21 = v12;
    }
    else {
      id v21 = v36;
    }
    [v39 removeObject:v21];

    _Block_object_dispose(&v47, 8);
  }

  __int16 v22 = objc_opt_class(&OBJC_CLASS___NSArray, v13);
  if ((objc_opt_isKindOfClass(obj, v22) & 1) != 0)
  {
    id v23 = [obj mutableCopy];
    id v42 = 0u;
    v43 = 0u;
    uint64_t v40 = 0u;
    __int16 v41 = 0u;
    id v24 = obj;
    v26 = [v24 countByEnumeratingWithState:&v40 objects:v57 count:16];
    if (v26)
    {
      id v27 = *(void *)v41;
      do
      {
        for (j = 0LL; j != v26; j = (char *)j + 1)
        {
          if (*(void *)v41 != v27) {
            objc_enumerationMutation(v24);
          }
          id v29 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)j);
          id v30 = objc_opt_class(&OBJC_CLASS___NSDictionary, v25);
          if ((objc_opt_isKindOfClass(v29, v30) & 1) != 0)
          {
            v31 = (void *)objc_claimAutoreleasedReturnValue([v29 objectForKey:@"p2-url-section-name"]);
            v33 = objc_opt_class(&OBJC_CLASS___NSString, v32);
          }
        }

        v26 = [v24 countByEnumeratingWithState:&v40 objects:v57 count:16];
      }

      while (v26);
    }

    id v34 = [v23 count];
    if (v34 != [v24 count]) {
      [v35 setObject:v23 forKey:@"p2-url-resolution"];
    }
  }
}

    goto LABEL_18;
  }

  if (v5)
  {
    double v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"AutoEnableCloudLibraryFailureReasonKey"]);
    int v8 = -[os_log_s intValue](v7, "intValue");
    id v9 = -[os_log_s intValue](v7, "intValue");
    uint64_t v10 = v9;
    if (v8 == -101 || v9 == -102)
    {
      uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v17 = 67109376;
        *(_DWORD *)uint64_t v18 = v8 == -101;
        *(_WORD *)&v18[4] = 1024;
        *(_DWORD *)&v18[6] = v10 == -102;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Not allowing automatic enabling of iCML notEnabledInBackup=%{BOOL}u, unsupportedDisposition=%{BOOL}u",  (uint8_t *)&v17,  0xEu);
      }
    }

    else
    {
      [*(id *)(a1 + 32) setSupportsAutomaticEnablingiCloudMusicLibrary:1];
    }

    uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = sub_1000C3790(*(void **)(a1 + 40));
      uint64_t v16 = [*(id *)(a1 + 32) supportsAutomaticEnablingiCloudMusicLibrary];
      uint64_t v17 = 67109634;
      *(_DWORD *)uint64_t v18 = v15;
      *(_WORD *)&v18[4] = 2114;
      *(void *)&v18[6] = v5;
      uint64_t v19 = 1024;
      id v20 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "isEnablingICMLDestructive=%{BOOL}u, cloudLibraryStateReason=%{public}@, supportsAutomaticEnablingiCloudMusicLibrary=%d",  (uint8_t *)&v17,  0x18u);
    }

    goto LABEL_17;
  }

  uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = sub_1000C3790(*(void **)(a1 + 40));
    uint64_t v17 = 67109120;
    *(_DWORD *)uint64_t v18 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Allowing automatic enabling of iCML, isEnablingICMLDestructive=%{BOOL}u",  (uint8_t *)&v17,  8u);
  }

  [*(id *)(a1 + 32) setSupportsAutomaticEnablingiCloudMusicLibrary:1];
LABEL_18:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

    if (!v8)
    {
      uint64_t v18 = 0LL;
      id v20 = 0LL;
      goto LABEL_22;
    }

    v26 = dispatch_get_global_queue(0LL, 0LL);
    id v24 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v26);
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472LL;
    v41[2] = sub_1000C2D48;
    v41[3] = &unk_1001A6BE0;
    id v23 = &v42;
    id v42 = v8;
    dispatch_async(v24, v41);
    uint64_t v18 = 0LL;
    id v20 = 0LL;
    goto LABEL_20;
  }

  if (v8)
  {
    uint64_t v15 = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v15);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000C2D38;
    block[3] = &unk_1001A6BB8;
    v51 = v8;
    v50 = v12;
    dispatch_async(v16, block);
  }

  return v10;
}
}

  PBDataWriterWriteInt64Field(v5, self->_canonicalId, 3LL);
  has = (char)self->_has;
  if ((has & 4) == 0)
  {
LABEL_5:
    if ((has & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  *((void *)v5 + 2) = self->_canonicalId;
  *((_BYTE *)v5 + 48) |= 2u;
  has = (char)self->_has;
  if ((has & 4) == 0)
  {
LABEL_5:
    if ((has & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  self->_canonicalId = *((void *)v4 + 2);
  *(_BYTE *)&self->_has |= 2u;
  id v6 = *((_BYTE *)v4 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  uint64_t v19 = a1 + 48;
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL)) {
    goto LABEL_5;
  }
  if (v13)
  {
    id v21 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v22 = *(void **)(a1 + 32);
      v26 = 138543618;
      id v27 = v22;
      id v28 = 2048;
      id v29 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Retrying loading %{public}@ URL in %ld milliseconds",  (uint8_t *)&v26,  0x16u);
    }

    usleep(((double)(unint64_t)v13 * 1000.0));
    goto LABEL_5;
  }

  id v27 = objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _contentTasteUpdateResponseWithServerResponse:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) expirationDate:v64 revisionID:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) isCachedResponse:0]);
  id v28 = *(void **)(*(void *)(a1 + 32) + 56LL);
  *(void *)(*(void *)(a1 + 32) + 56LL) = v27;

  id v29 = *(void **)(a1 + 32);
  v143 = 0LL;
  v142 = 0LL;
  v141 = 0LL;
  [v29 _getStoreAdamIDLikedState:&v143 playlistGlobalIDLikedState:&v142 artistStoreAdamIDLikedState:&v141];
  id v30 = v143;
  v31 = v142;
  id v32 = v141;
  *(void *)buf = 0LL;
  *(void *)&buf[8] = buf;
  *(void *)&buf[16] = 0x3032000000LL;
  v151 = sub_100102E4C;
  *(void *)&v152 = sub_100102E5C;
  *((void *)&v152 + 1) = 0LL;
  v135 = 0LL;
  v136 = &v135;
  v137 = 0x3032000000LL;
  v138 = sub_100102E4C;
  v139 = sub_100102E5C;
  v140 = 0LL;
  v133[0] = 0LL;
  v133[1] = v133;
  v133[2] = 0x3032000000LL;
  v133[3] = sub_100102E4C;
  v133[4] = sub_100102E5C;
  v134 = 0LL;
  v127 = 0LL;
  v128 = &v127;
  v129 = 0x3032000000LL;
  v130 = sub_100102E4C;
  v131 = sub_100102E5C;
  v132 = 0LL;
  v125[0] = 0LL;
  v125[1] = v125;
  v125[2] = 0x3032000000LL;
  v125[3] = sub_100102E4C;
  v125[4] = sub_100102E5C;
  v126 = 0LL;
  v119 = 0LL;
  v120 = &v119;
  v121 = 0x3032000000LL;
  v122 = sub_100102E4C;
  v123 = sub_100102E5C;
  v124 = 0LL;
  v117[0] = 0LL;
  v117[1] = v117;
  v117[2] = 0x3032000000LL;
  v117[3] = sub_100102E4C;
  v117[4] = sub_100102E5C;
  v118 = 0LL;
  v111 = 0LL;
  v112 = &v111;
  v113 = 0x3032000000LL;
  v114 = sub_100102E4C;
  v115 = sub_100102E5C;
  v116 = 0LL;
  v105 = 0LL;
  v106 = &v105;
  v107 = 0x3032000000LL;
  v108 = sub_100102E4C;
  v109 = sub_100102E5C;
  v110 = 0LL;
  v99 = 0LL;
  v100 = &v99;
  v101 = 0x3032000000LL;
  v102 = sub_100102E4C;
  v103 = sub_100102E5C;
  v104 = 0LL;
  v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) userIdentity]);
  id v34 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v33));

  v146 = 0LL;
  v147 = &v146;
  v148 = 0x2050000000LL;
  id v35 = (void *)qword_1001DB870;
  v149 = qword_1001DB870;
  if (!qword_1001DB870)
  {
    *(void *)v155 = _NSConcreteStackBlock;
    *(void *)&v155[8] = 3221225472LL;
    *(void *)&v155[16] = sub_100106028;
    v156 = &unk_1001A6978;
    v157 = &v146;
    sub_100106028((uint64_t)v155);
    id v35 = (void *)v147[3];
  }

  id v36 = v35;
  _Block_object_dispose(&v146, 8);
  id v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) userIdentity]);
  id v38 = (void *)objc_claimAutoreleasedReturnValue([v36 deviceMediaLibraryWithUserIdentity:v37]);

  v39 = objc_alloc(&OBJC_CLASS___ICAsyncBlockOperation);
  v92[0] = _NSConcreteStackBlock;
  v92[1] = 3221225472LL;
  v92[2] = sub_1001060EC;
  v92[3] = &unk_1001A6690;
  v92[4] = *(void *)(a1 + 32);
  uint64_t v40 = v32;
  v93 = v40;
  __int16 v41 = v34;
  v94 = v41;
  id v42 = v38;
  v95 = v42;
  v96 = buf;
  v97 = &v135;
  v98 = &v99;
  v43 = [v39 initWithStartHandler:v92];
  v61 = v40;
  v44 = objc_alloc(&OBJC_CLASS___ICAsyncBlockOperation);
  v83[0] = _NSConcreteStackBlock;
  v83[1] = 3221225472LL;
  v83[2] = sub_100106198;
  v83[3] = &unk_1001A66E0;
  v83[4] = *(void *)(a1 + 32);
  v60 = v30;
  v84 = v60;
  v45 = v41;
  v85 = v45;
  v46 = v42;
  v86 = v46;
  v87 = v133;
  v88 = &v127;
  v89 = v125;
  v90 = &v119;
  v91 = &v105;
  v47 = [v44 initWithStartHandler:v83];
  v48 = objc_alloc(&OBJC_CLASS___ICAsyncBlockOperation);
  v77[0] = _NSConcreteStackBlock;
  v77[1] = 3221225472LL;
  v77[2] = sub_100106248;
  v77[3] = &unk_1001A6730;
  v77[4] = *(void *)(a1 + 32);
  v59 = v31;
  v78 = v59;
  v49 = v45;
  v79 = v49;
  v50 = v46;
  v80 = v50;
  v81 = v117;
  v82 = &v111;
  v51 = [v48 initWithStartHandler:v77];
  [*(id *)(*(void *)(a1 + 32) + 48) addOperation:v43];
  [*(id *)(*(void *)(a1 + 32) + 48) addOperation:v47];
  [*(id *)(*(void *)(a1 + 32) + 48) addOperation:v51];
  [*(id *)(*(void *)(a1 + 32) + 48) waitUntilAllOperationsAreFinished];
  v52 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
  {
    v53 = *(void **)(a1 + 32);
    v54 = [v53 isCancelled];
    *(_DWORD *)v155 = 138543618;
    *(void *)&v155[4] = v53;
    *(_WORD *)&v155[12] = 1024;
    *(_DWORD *)&v155[14] = v54;
    _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished loading all content taste changes - isCancelled=%{BOOL}u",  v155,  0x12u);
  }

  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0
    && ([(id)v136[5] count]
     || [(id)v128[5] count]
     || [(id)v120[5] count]
     || [(id)v112[5] count]
     || v106[5]
     || v100[5]))
  {
    v65[0] = _NSConcreteStackBlock;
    v65[1] = 3221225472LL;
    v65[2] = sub_1001062EC;
    v65[3] = &unk_1001A6758;
    v65[4] = *(void *)(a1 + 32);
    v67 = &v135;
    v68 = buf;
    v66 = v49;
    v69 = &v111;
    v70 = v117;
    v71 = &v127;
    v72 = v133;
    v73 = &v119;
    v74 = v125;
    v75 = &v105;
    v76 = &v99;
    [v66 databaseConnectionAllowingWrites:1 withBlock:v65];
  }

  v55 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
  {
    v56 = *(void *)(a1 + 32);
    +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate");
    v58 = v57 - *(double *)(a1 + 96);
    *(_DWORD *)v155 = 138543618;
    *(void *)&v155[4] = v56;
    *(_WORD *)&v155[12] = 2048;
    *(double *)&v155[14] = v58;
    _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished updating content taste for media entities in %3f seconds",  v155,  0x16u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
  _Block_object_dispose(&v99, 8);

  _Block_object_dispose(&v105, 8);
  _Block_object_dispose(&v111, 8);

  _Block_object_dispose(v117, 8);
  _Block_object_dispose(&v119, 8);

  _Block_object_dispose(v125, 8);
  _Block_object_dispose(&v127, 8);

  _Block_object_dispose(v133, 8);
  _Block_object_dispose(&v135, 8);

  _Block_object_dispose(buf, 8);
LABEL_32:
}

void sub_10000ABB4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

LABEL_8:
    return 1;
  }

  return ICSystemApplicationIsInstalled(0LL);
}

  uint64_t v12 = (dispatch_group_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connectionGroup]);
  uint64_t v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connectionQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100070A54;
  block[3] = &unk_1001A6BE0;
  uint64_t v15 = *(id *)(a1 + 40);
  dispatch_group_notify(v12, v13, block);
}

    uint64_t v13 = (NSData *)os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_DEFAULT))
    {
      v18[0] = 67109888;
      v18[1] = v7;
      uint64_t v19 = 1024;
      id v20 = HIWORD(v8);
      id v21 = 1024;
      __int16 v22 = v10 >> 8;
      id v23 = 1024;
      id v24 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v13,  OS_LOG_TYPE_DEFAULT,  "Unhandled code in authorized account token response: %c%c%c%c",  (uint8_t *)v18,  0x1Au);
    }
}
}

void sub_10000C374( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

void sub_10000C7F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

LABEL_43:
}

  v44 = 0;
LABEL_114:

  _Block_object_dispose(&v140, 8);
  _Block_object_dispose(&v146, 8);
  _Block_object_dispose(v150, 8);
  _Block_object_dispose(v152, 8);
  _Block_object_dispose(&v154, 8);
  _Block_object_dispose(&v158, 8);
  _Block_object_dispose(&v162, 8);
  _Block_object_dispose(&v166, 8);
  _Block_object_dispose(&v170, 8);
  _Block_object_dispose(&v174, 8);

  return v44;
}

LABEL_13:
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler configuration](self, "configuration"));
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v15 daemonOptionsForConfiguration:v16]);

    if (([v17 prohibitLibraryUpload] & 1) == 0)
    {
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler musicLibrary](self, "musicLibrary"));
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 sagaCloudLibraryCUID]);

      id v20 = (void *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler musicLibrary](self, "musicLibrary"));
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 sagaCloudLibraryTroveID]);

      if ([v19 length] && objc_msgSend(v21, "length"))
      {
        __int16 v22 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543362;
          v44 = self;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Device is already registered with CUID and TroveID",  buf,  0xCu);
        }
      }

      else
      {

        id v23 = (void *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler configuration](self, "configuration"));
        uint64_t v40 = 0LL;
        id v24 = sub_1000C1558(v23, 0, &v40);

        if (!v24)
        {
          id v35 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            v44 = self;
            _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Enqueuing SagaDeauth as device registration failed.",  buf,  0xCu);
          }

          id v32 = (void *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler configuration](self, "configuration"));
          v33 = (void *)objc_claimAutoreleasedReturnValue([v32 clientIdentity]);
          v36[0] = _NSConcreteStackBlock;
          v36[1] = 3221225472LL;
          v36[2] = sub_100012A04;
          v36[3] = &unk_1001A1F50;
          v36[4] = self;
          v37[1] = a4;
          id v34 = (id *)v37;
          v37[0] = v9;
          -[ICDCloudMusicLibraryRequestHandler _removeCloudSourcesForReason:withClientIdentity:byDisablingActiveLockerAccount:completionHandler:]( self,  "_removeCloudSourcesForReason:withClientIdentity:byDisablingActiveLockerAccount:completionHandler:",  -3LL,  v33,  1LL,  v36);
          goto LABEL_27;
        }
      }
    }

    sagaRequestHandler = self->_sagaRequestHandler;
    v26 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    id v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);
    if (sagaRequestHandler)
    {
      if (v27)
      {
        id v28 = self->_sagaRequestHandler;
        *(_DWORD *)buf = 138543618;
        v44 = self;
        v45 = 2048;
        v46 = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - We have a valid SagaRequestHander (%p)....",  buf,  0x16u);
      }
    }

    else
    {
      if (v27)
      {
        *(_DWORD *)buf = 138543362;
        v44 = self;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Initializing SagaRequestHander ....",  buf,  0xCu);
      }

      id v29 = objc_alloc(&OBJC_CLASS___SagaRequestHandler);
      v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler configuration](self, "configuration"));
      id v30 = -[SagaRequestHandler initWithConfiguration:progressObserver:]( v29,  "initWithConfiguration:progressObserver:",  v26,  self);
      v31 = self->_sagaRequestHandler;
      self->_sagaRequestHandler = v30;
    }

    self->_havePendingSagaUpdate = 1;
    id v32 = (void *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler configuration](self, "configuration"));
    v33 = (void *)objc_claimAutoreleasedReturnValue([v32 clientIdentity]);
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472LL;
    v38[2] = sub_1000128C8;
    v38[3] = &unk_1001A1EB0;
    v38[4] = self;
    v39[1] = a4;
    id v34 = (id *)v39;
    v39[0] = v9;
    -[ICDCloudMusicLibraryRequestHandler _performInitialJaliscoImportWithClientIdentity:completion:]( self,  "_performInitialJaliscoImportWithClientIdentity:completion:",  v33,  v38);
LABEL_27:

    goto LABEL_28;
  }

  uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    v44 = self;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Locker bit set, but the account is not active. Enqueuing a SagaDeauth",  buf,  0xCu);
  }

  accessQueue = (dispatch_queue_s *)self->_accessQueue;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100012818;
  block[3] = &unk_1001A6BB8;
  block[4] = self;
  id v42 = v9;
  dispatch_async(accessQueue, block);

LABEL_28:
}
}

  if (!(_DWORD)v9)
  {
    goto LABEL_18;
  }

  if ((sub_100056964(ICStoreHTTPCookieNameITRV) & 1) != 0) {
LABEL_18:
  }
    [v16 setLastKnownMusicVideosAllowed:v9];
LABEL_19:
  if (v14) {
    uint64_t v17 = 2LL;
  }
  else {
    uint64_t v17 = AppBooleanValue != 0;
  }
  if ((id)v17 == [v16 lastKnownMusicSubscriptionType]) {
    goto LABEL_26;
  }
  uint64_t v18 = (void *)ICStoreHTTPCookieNameITST;
  if (v17)
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%ld", v17));
    id v20 = sub_100056B04(v18, v19);

    if (!v20) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

  if ((sub_100056964(ICStoreHTTPCookieNameITST) & 1) != 0) {
LABEL_25:
  }
    [v16 setLastKnownMusicSubscriptionType:v17];
LABEL_26:
  id v21 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[Updating HTTP Cookies] Finished updating cookie store for content restrictions",  buf,  2u);
  }
}

    goto LABEL_14;
  }

  return v6;
}

    goto LABEL_14;
  }

  return v4;
}

LABEL_26:
        uint64_t v19 = 0;
LABEL_27:

LABEL_28:
        id v21 = (void *)objc_claimAutoreleasedReturnValue(-[BaseRequestHandler configuration](self, "configuration"));
        __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([v21 clientIdentity]);
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 3221225472LL;
        v23[2] = sub_10001258C;
        v23[3] = &unk_1001A1FC8;
        v23[4] = self;
        id v25 = a4;
        id v24 = v9;
        v26 = v19;
        -[ICDCloudMusicLibraryRequestHandler _performInitialJaliscoImportWithClientIdentity:completion:]( self,  "_performInitialJaliscoImportWithClientIdentity:completion:",  v22,  v23);

        uint64_t v14 = v24;
        break;
      case 3LL:
        uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138543618;
          id v30 = self;
          v31 = 1024;
          id v32 = 3;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Will schedule a retry to enable ICML (status = %d)",  buf,  0x12u);
        }

        uint64_t v19 = 1;
        goto LABEL_27;
      default:
        uint64_t v19 = 0;
        goto LABEL_28;
    }

    goto LABEL_29;
  }

  uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543618;
    id v30 = self;
    v31 = 1024;
    id v32 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - No pending changes to handle. Ignoring reason=%d",  buf,  0x12u);
  }

  if (v9)
  {
    calloutQueue = (dispatch_queue_s *)self->_calloutQueue;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10001257C;
    block[3] = &unk_1001A6BE0;
    id v28 = v9;
    dispatch_async(calloutQueue, block);
    uint64_t v14 = v28;
LABEL_29:
  }

  return v9;
}

              -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
              v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2014LL,  0LL));
              -[CloudLibraryOperation setError:](self, "setError:", v52);

LABEL_27:
              v53 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary", *(_OWORD *)v70));
              v55 = MSVTCCIdentityForCurrentProcess(v53, v54);
              v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
              [v53 setClientIdentity:v56];

LABEL_28:
              goto LABEL_29;
            }
          }

          else
          {
          }

          v58 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation configuration](self, "configuration"));
          v59 = sub_1000C1558(v58, 0, 0LL);

          if (v59)
          {
            v60 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
            v61 = (void *)objc_claimAutoreleasedReturnValue([v60 sagaCloudLibraryCUID]);
            -[SagaUploadPlaylistArtworkOperation setCuid:](self, "setCuid:", v61);

            v62 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
            v63 = (void *)objc_claimAutoreleasedReturnValue([v62 sagaCloudLibraryTroveID]);
            -[SagaUploadPlaylistArtworkOperation setTroveID:](self, "setTroveID:", v63);
          }

          goto LABEL_35;
        }

        v51 = sub_1000DD86C();
        v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
        if (!os_log_type_enabled(v47, OS_LOG_TYPE_FAULT)) {
          goto LABEL_26;
        }
        v48 = (void *)objc_claimAutoreleasedReturnValue(-[SagaUploadPlaylistArtworkOperation assetURL](self, "assetURL"));
        v49 = (void *)objc_claimAutoreleasedReturnValue([v48 path]);
        *(_DWORD *)v70 = 138543362;
        *(void *)&v70[4] = v49;
        v50 = "SagaUploadPlaylistArtworkOperation failed -- Artwork is zero bytes at: %{public}@";
      }

      else
      {
        v47 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (!os_log_type_enabled(v47, OS_LOG_TYPE_FAULT)) {
          goto LABEL_26;
        }
        v48 = (void *)objc_claimAutoreleasedReturnValue(-[SagaUploadPlaylistArtworkOperation assetURL](self, "assetURL"));
        v49 = (void *)objc_claimAutoreleasedReturnValue([v48 path]);
        *(_DWORD *)v70 = 138543362;
        *(void *)&v70[4] = v49;
        v50 = "SagaUploadPlaylistArtworkOperation failed -- No artwork exists at: %{public}@";
      }

      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_FAULT, v50, v70, 0xCu);

      goto LABEL_26;
    }

    id v37 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v40 = self->super._status;
      *(_DWORD *)v70 = 134217984;
      *(void *)&v70[4] = v40;
      v39 = "Playlist with pid = %lld does not have a cloud_id in the database, skipping upload of playlist artwork to cloud library.";
      goto LABEL_16;
    }
  }

  else
  {
    id v37 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
    {
      id v38 = self->super._status;
      *(_DWORD *)v70 = 134217984;
      *(void *)&v70[4] = v38;
      v39 = "Playlist with pid = %lld is not in the database, skipping upload of playlist artwork to cloud library.";
LABEL_16:
      _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, v39, v70, 0xCu);
    }
  }

  -[CloudLibraryOperation setStatus:](self, "setStatus:", 1LL);
  uint64_t v11 = (id)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
  id v42 = MSVTCCIdentityForCurrentProcess(v11, v41);
  uint64_t v17 = (id)objc_claimAutoreleasedReturnValue(v42);
  [v11 setClientIdentity:v17];
LABEL_29:
}

        if ((id)-[CloudLibraryOperation status](self, "status") == (id)1)
        {
          v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)&buf[8] + 40) addedItems]);
          -[SagaCloudAddOperation processAddedItems:](self, "processAddedItems:", v31);
          LOBYTE(self->super._status) = [*(id *)(*(void *)&buf[8] + 40) updateRequired];
        }

        _Block_object_dispose(&v46, 8);
        _Block_object_dispose(buf, 8);

        goto LABEL_29;
      }
    }

    id v24 = 2LL;
    goto LABEL_18;
  }

  id v25 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "Unable to create cloud-add request, skipping...",  buf,  2u);
  }

  -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
LABEL_29:
  if ((id)-[CloudLibraryOperation status](self, "status") == (id)3)
  {
    id v32 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Operation permanently failed, attempting to remove pending library content...",  buf,  2u);
    }

    -[SagaCloudAddOperation removePendingAddedItemsForPermanentlyFailedOperation]( self,  "removePendingAddedItemsForPermanentlyFailedOperation");
  }

  v33 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
  id v35 = MSVTCCIdentityForCurrentProcess(v33, v34);
  id v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
  [v33 setClientIdentity:v36];

  [v5 endTransaction];
  objc_autoreleasePoolPop(context);
}
}

LABEL_30:
}

      *(_DWORD *)(*(void *)(a1 + 32) + 124LL) = 0;
      id v37 = *(void *)(*(void *)(a1 + 32) + 80LL);
      id v38 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      v39 = os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT);
      if (v9 != v37)
      {
        if (v39)
        {
          v44 = *(void *)(a1 + 32);
          v45 = *(void *)(v44 + 80);
          *(_DWORD *)buf = 138543874;
          v73 = v44;
          v74 = 1024;
          v75 = v9;
          v76 = 1024;
          v77 = v45;
          _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - subscription status has changed (old=%d, new=%d)",  buf,  0x18u);
        }

        v46 = *(void **)(a1 + 32);
        v60[0] = _NSConcreteStackBlock;
        v60[1] = 3221225472LL;
        v60[2] = sub_10001405C;
        v60[3] = &unk_1001A7220;
        v47 = *(void *)(a1 + 56);
        v48 = *(id *)(a1 + 48);
        v60[4] = *(void *)(a1 + 32);
        v61 = v48;
        [v46 _tryEnablingCloudMusicLibraryForReason:v47 completionHandler:v60];
        uint64_t v18 = v61;
        goto LABEL_38;
      }

      if (v39)
      {
        uint64_t v40 = *(void *)(a1 + 32);
        __int16 v41 = *(void *)(v40 + 80);
        *(_DWORD *)buf = 138543618;
        v73 = v40;
        v74 = 1024;
        v75 = v41;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - subscription status has not changed (status=%d)",  buf,  0x12u);
      }

      id v42 = *(void **)(a1 + 48);
      if (v42)
      {
        v43 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
        v58[0] = _NSConcreteStackBlock;
        v58[1] = 3221225472LL;
        v58[2] = sub_1000140DC;
        v58[3] = &unk_1001A6BE0;
        v59 = v42;
        dispatch_async(v43, v58);
        uint64_t v18 = v59;
        goto LABEL_38;
      }

      return;
    }

    id v28 = *(void *)(a1 + 32);
    if (!*(void *)(a1 + 40))
    {
      *(void *)(v28 + 80) = 3LL;
      goto LABEL_30;
    }

    id v29 = *(_DWORD *)(v28 + 124);
    *(_DWORD *)(v28 + 124) = v29 + 1;
    id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) domain]);
    if ([v30 isEqualToString:ICErrorDomain])
    {
      v31 = [*(id *)(a1 + 40) code];

      if (v31 == (id)-7007LL) {
        goto LABEL_42;
      }
    }

    else
    {
    }

    if (!v29)
    {
      v51 = *(void **)(a1 + 32);
      v52 = (void *)objc_claimAutoreleasedReturnValue([v51 configuration]);
      v53 = (void *)objc_claimAutoreleasedReturnValue([v52 clientIdentity]);
      v64[0] = _NSConcreteStackBlock;
      v64[1] = 3221225472LL;
      v64[2] = sub_100013F04;
      v64[3] = &unk_1001A1EB0;
      v55 = *(void **)(a1 + 48);
      v54 = *(void *)(a1 + 56);
      v64[4] = *(void *)(a1 + 32);
      v66 = v54;
      v65 = v55;
      [v51 _performInitialJaliscoImportWithClientIdentity:v53 completion:v64];

      uint64_t v18 = v65;
      goto LABEL_38;
    }

    id v20 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109888;
      id v36 = v9;
      id v37 = 1024;
      id v38 = HIWORD(v10);
      v39 = 1024;
      uint64_t v40 = v12 >> 8;
      __int16 v41 = 1024;
      id v42 = v11;
      __int16 v22 = v20;
      id v23 = "Unhandled code in items response: %c%c%c%c";
      id v24 = 26;
      goto LABEL_37;
    }

    goto LABEL_38;
  }

void sub_10000DE18( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, id location)
{
}

void sub_10000E3AC(_Unwind_Exception *a1)
{
}

LABEL_19:
  _Block_object_dispose(&v31, 8);
}
    }
  }

  else
  {
    uint64_t v18 = *(void **)(a1 + 56);
    if (v18)
    {
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) badgeIdentifier]);
      [v18 clearBadgeActionMetricsEventForIdentifier:v13];
      goto LABEL_19;
    }
  }
}

        *a5 = v21;
        goto LABEL_20;
      }

      __int16 v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        v33 = v41[5];
        *(_DWORD *)buf = 138543618;
        v53 = self;
        v54 = 2114;
        v55 = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "%{public}@ - Failed to determine result URLs with unknown error: %{public}@",  buf,  0x16u);
      }
    }

    else
    {
      id v27 = v47[5];
      id v28 = objc_opt_class(&OBJC_CLASS___NSDictionary, v15);
      if ((objc_opt_isKindOfClass(v27, v28) & 1) == 0)
      {
        id v24 = 0LL;
        id v21 = -1LL;
        if (!a5) {
          goto LABEL_20;
        }
        goto LABEL_19;
      }

      id v29 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        id v30 = v47[5];
        *(_DWORD *)buf = 138543618;
        v53 = self;
        v54 = 2114;
        v55 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Determine result URLs response: %{public}@",  buf,  0x16u);
      }

      __int16 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue([(id)v47[5] objectForKey:@"additional-fields-url"]);
      id v32 = objc_opt_class(&OBJC_CLASS___NSString, v31);
      if ((objc_opt_isKindOfClass(v22, v32) & 1) != 0)
      {
        id v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v22));
        id v21 = 0LL;
        goto LABEL_18;
      }
    }

    id v24 = 0LL;
    id v21 = -1LL;
    goto LABEL_18;
  }

  id v25 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
  {
    LODWORD(v5_Block_object_dispose(va, 8) = 138543362;
    *(void *)((char *)&v58 + 4) = self;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "%{public}@ - Could not create determineResultsURLRequest",  (uint8_t *)&v58,  0xCu);
  }

  v26 = 0LL;
LABEL_21:

  return v26;
}

void sub_10000E924( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

void sub_10000F310(_Unwind_Exception *a1)
{
}

LABEL_7:
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", &off_1001B39A0));
    return v4;
  }

  uint64_t v3 = +[NSSet setWithObjects:](&OBJC_CLASS___NSSet, "setWithObjects:", &off_1001B39A0, &off_1001B39D0, 0LL, v6);
LABEL_4:
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  return v4;
}

    id v5 = 0LL;
  }

  return v5;
}
}
}

  uint64_t v10 = v4;
  if (-[AMPMusicCatalogContent contentFeaturesCount](self, "contentFeaturesCount"))
  {
    [v10 clearContentFeatures];
    id v6 = -[AMPMusicCatalogContent contentFeaturesCount](self, "contentFeaturesCount");
    if (v6)
    {
      double v7 = v6;
      for (i = 0LL; i != v7; ++i)
      {
        id v9 = (void *)objc_claimAutoreleasedReturnValue(-[AMPMusicCatalogContent contentFeaturesAtIndex:](self, "contentFeaturesAtIndex:", i));
        [v10 addContentFeatures:v9];
      }
    }
  }
}

  uint64_t v17 = 0u;
  uint64_t v18 = 0u;
  uint64_t v15 = 0u;
  uint64_t v16 = 0u;
  int v8 = self->_contentFeatures;
  id v9 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v15,  v19,  16LL);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v16;
    do
    {
      for (i = 0LL; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v16 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = objc_msgSend(*(id *)(*((void *)&v15 + 1) + 8 * (void)i), "copyWithZone:", a3, (void)v15);
        [v6 addContentFeatures:v13];
      }

      uint64_t v10 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v8,  "countByEnumeratingWithState:objects:count:",  &v15,  v19,  16LL);
    }

    while (v10);
  }

  return v6;
}

  uint64_t v14 = 0u;
  uint64_t v15 = 0u;
  uint64_t v12 = 0u;
  uint64_t v13 = 0u;
  double v7 = *((id *)v4 + 4);
  int v8 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        -[AMPMusicCatalogContent addContentFeatures:]( self,  "addContentFeatures:",  *(void *)(*((void *)&v12 + 1) + 8LL * (void)i),  (void)v12);
      }

      id v9 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v9);
  }
}

void sub_10000F4A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v2, 0LL);
}

uint64_t sub_10000F504(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10000F514(uint64_t a1)
{
}

void sub_10000F51C(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(_BYTE *)(*(void *)(a1 + 32) + 145LL) = 0;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 56);
    int v7 = *(unsigned __int8 *)(v5 + 145);
    *(_DWORD *)buf = 138544386;
    uint64_t v16 = v5;
    __int16 v17 = 1024;
    int v18 = 1;
    __int16 v19 = 1024;
    int v20 = v6;
    __int16 v21 = 2114;
    id v22 = v3;
    __int16 v23 = 1024;
    int v24 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history by adding kind=%d for reason=%d with error=%{public}@, _did ManuallyReloadCloudLibrary=%{BOOL}u",  buf,  0x28u);
  }

  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v3;
  id v10 = v3;

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[CloudContentTasteUpdateRequestListener sharedContentTasteRequestListener]( &OBJC_CLASS___CloudContentTasteUpdateRequestListener,  "sharedContentTasteRequestListener"));
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10000FDA4;
  v13[3] = &unk_1001A6398;
  id v14 = *(id *)(a1 + 40);
  [v11 updateContentTasteForConnectionConfiguration:v12 invalidateLocalCache:1 withCompletionHandler:v13];
}

void sub_10000F6C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 56);
    *(_DWORD *)buf = 138543874;
    uint64_t v15 = v5;
    __int16 v16 = 1024;
    int v17 = v6;
    __int16 v18 = 2114;
    id v19 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v3;
  id v9 = v3;

  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[CloudContentTasteUpdateRequestListener sharedContentTasteRequestListener]( &OBJC_CLASS___CloudContentTasteUpdateRequestListener,  "sharedContentTasteRequestListener"));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  v12[2] = sub_10000FD9C;
  v12[3] = &unk_1001A6398;
  id v13 = *(id *)(a1 + 40);
  [v10 updateContentTasteForConnectionConfiguration:v11 invalidateLocalCache:1 withCompletionHandler:v12];
}

void sub_10000F83C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  if (v2 == 3)
  {
    id v9 = *(void **)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = *(void *)(a1 + 96);
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_10000FBE4;
    v23[3] = &unk_1001A7220;
    id v12 = *(id *)(a1 + 56);
    v23[4] = *(void *)(a1 + 32);
    id v24 = v12;
    [v9 disableCloudLibraryWithClientIdentity:v10 reason:v11 completionHandler:v23];
    uint64_t v8 = v24;
    goto LABEL_9;
  }

  if (v2 == 1)
  {
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472LL;
    v25[2] = sub_10000FA80;
    v25[3] = &unk_1001A2130;
    uint64_t v5 = *(void *)(a1 + 88);
    v25[4] = v3;
    uint64_t v28 = v5;
    __int128 v19 = *(_OWORD *)(a1 + 56);
    uint64_t v6 = *(unsigned __int8 *)(a1 + 104);
    id v7 = (id)v19;
    __int128 v26 = v19;
    uint64_t v27 = *(void *)(a1 + 72);
    [v3 _performInitialSagaImportWithClientIdentity:v4 allowingNoisyAuthPrompt:v6 completionHandler:v25];
    uint64_t v8 = (void *)v26;
LABEL_9:

    return;
  }

  id v13 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 80);
    uint64_t v16 = *(void *)(a1 + 96);
    *(_DWORD *)buf = 138543874;
    uint64_t v30 = v14;
    __int16 v31 = 1024;
    int v32 = v15;
    __int16 v33 = 1024;
    int v34 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Will schedule a retry for status=%d, failureCode=%d",  buf,  0x18u);
  }

  int v17 = *(void **)(a1 + 56);
  if (v17)
  {
    __int16 v18 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10000FC84;
    block[3] = &unk_1001A6BB8;
    id v22 = v17;
    id v21 = *(id *)(a1 + 48);
    dispatch_async(v18, block);

    uint64_t v8 = v22;
    goto LABEL_9;
  }

void sub_10000FA80(int8x16_t *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[2].i64[0];
    uint64_t v6 = a1[4].i64[0];
    *(_DWORD *)buf = 138543874;
    uint64_t v17 = v5;
    __int16 v18 = 1024;
    int v19 = v6;
    __int16 v20 = 2114;
    id v21 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading saga library for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  uint64_t v7 = *(void *)(a1[3].i64[0] + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v3;
  id v9 = v3;

  uint64_t v10 = (void *)a1[2].i64[1];
  uint64_t v11 = *(dispatch_queue_s **)(a1[2].i64[0] + 88);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10000FCAC;
  v13[3] = &unk_1001A2108;
  id v12 = v10;
  void v13[4] = a1[2].i64[0];
  id v14 = v12;
  int8x16_t v15 = vextq_s8(a1[3], a1[3], 8uLL);
  dispatch_async(v11, v13);
}

void sub_10000FBE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_10000FC98;
    v6[3] = &unk_1001A6BB8;
    id v8 = v4;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_10000FC84(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32),  1LL);
}

uint64_t sub_10000FC98(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32),  0LL);
}

void sub_10000FCAC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  if (v1)
  {
    id v3 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_10000FD3C;
    v5[3] = &unk_1001A2108;
    id v4 = v1;
    v5[4] = *(void *)(a1 + 32);
    id v6 = v4;
    __int128 v7 = *(_OWORD *)(a1 + 48);
    dispatch_async(v3, v5);
  }

void sub_10000FD3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = (id)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _prepareLibraryLoadErrorWithJaliscoError:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) sagaError:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)]);
  (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v2, 0LL);
}

void sub_10000FD9C(uint64_t a1)
{
}

void sub_10000FDA4(uint64_t a1)
{
}

void sub_10000FDAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || ([v5 isActiveLocker] & 1) == 0)
  {
    notify_post("com.apple.itunescloudd.jaliscoUpdateInProgressChanged");
    id v12 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = *(void *)(a1 + 40);
      int8x16_t v15 = @"Unknown";
      if (v14 == 1) {
        int8x16_t v15 = @"Saga";
      }
      if (v14) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = @"Jalisco";
      }
      int v17 = 138543618;
      uint64_t v18 = v13;
      __int16 v19 = 2114;
      __int16 v20 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Posting JALISCO_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@",  (uint8_t *)&v17,  0x16u);
    }
  }

  else
  {
    __int128 v7 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = @"Unknown";
      if (v9 == 1) {
        uint64_t v10 = @"Saga";
      }
      if (v9) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = @"Jalisco";
      }
      int v17 = 138543618;
      uint64_t v18 = v8;
      __int16 v19 = 2114;
      __int16 v20 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Posting SAGA_UPDATE_IN_PROGRESS_CHANGED for libraryType=%{public}@",  (uint8_t *)&v17,  0x16u);
    }

    notify_post("com.apple.itunescloudd.sagaUpdateInProgressChanged");
  }
}

uint64_t sub_10000FF74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10000FF84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_10000FF94(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result = [a2 longLongValue];
  if (a4)
  {
    if (result == (id)1)
    {
      *a4 = 1;
      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 0;
    }
  }

  return result;
}

void sub_10000FFDC(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    ICSiriPostDynamiteClientStateChangedNotification();
  }
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[CloudContentTasteUpdateRequestListener sharedContentTasteRequestListener]( &OBJC_CLASS___CloudContentTasteUpdateRequestListener,  "sharedContentTasteRequestListener"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10001020C;
  v6[3] = &unk_1001A7220;
  id v5 = *(id *)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  [v3 updateContentTasteForConnectionConfiguration:v4 invalidateLocalCache:1 withCompletionHandler:v6];
}

void sub_100010094(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    ICSiriPostDynamiteClientStateChangedNotification();
  }
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[CloudContentTasteUpdateRequestListener sharedContentTasteRequestListener]( &OBJC_CLASS___CloudContentTasteUpdateRequestListener,  "sharedContentTasteRequestListener"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10001015C;
  v6[3] = &unk_1001A7220;
  id v5 = *(id *)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  [v3 updateContentTasteForConnectionConfiguration:v4 invalidateLocalCache:1 withCompletionHandler:v6];
}

uint64_t sub_10001014C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10001015C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 40);
  if (v4)
  {
    id v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1000101FC;
    v6[3] = &unk_1001A6BB8;
    id v8 = v4;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_1000101FC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10001020C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 40);
  if (v4)
  {
    id v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1000102AC;
    v6[3] = &unk_1001A6BB8;
    id v8 = v4;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_1000102AC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000102BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 56LL);
  if (*(_BYTE *)(a1 + 40))
  {
    if (v2) {
      return;
    }
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v13 = 138543362;
      uint64_t v14 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - locker bit is set on the account, creating SagaRequestHandler",  (uint8_t *)&v13,  0xCu);
    }

    id v5 = objc_alloc(&OBJC_CLASS___SagaRequestHandler);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    id v7 = -[SagaRequestHandler initWithConfiguration:progressObserver:]( v5,  "initWithConfiguration:progressObserver:",  v6,  *(void *)(a1 + 32));
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = *(void **)(v8 + 56);
    *(void *)(v8 + 56) = v7;
  }

  else
  {
    if (!v2) {
      return;
    }
    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v13 = 138543362;
      uint64_t v14 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - locker bit is not set on the account and we have a valid SagaRequestHandler. Removing it now ....",  (uint8_t *)&v13,  0xCu);
    }

    uint64_t v12 = *(void *)(a1 + 32);
    id v6 = *(void **)(v12 + 56);
    *(void *)(v12 + 56) = 0LL;
  }
}

void sub_100010448(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
    (*(void (**)(uint64_t, uint64_t, id))(v1 + 16))(v1, 2LL, v2);
  }

void sub_1000104C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  id v6 = _NSConcreteStackBlock;
  uint64_t v7 = 3221225472LL;
  uint64_t v8 = sub_100010700;
  uint64_t v9 = &unk_1001A4D70;
  objc_copyWeak(&v12, &location);
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 40);
  id v11 = v4;
  [*(id *)(a1 + 32) setCompletionBlock:&v6];
  objc_msgSend( *(id *)(a1 + 32),  "setName:",  @"com.apple.itunescloudd.ICDCloudMusicLibraryRequestHandler.sagaDeauthenticateOperation",  v6,  v7,  v8,  v9,  v10);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
  [v5 addOperation:*(void *)(a1 + 32) priority:2];

  objc_destroyWeak(&v12);
  objc_destroyWeak(&location);
}

void sub_1000105AC(_Unwind_Exception *a1)
{
}

void sub_1000105CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = *(dispatch_queue_s **)(v3 + 88);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10001066C;
  block[3] = &unk_1001A6C08;
  void block[4] = v3;
  id v8 = WeakRetained;
  id v9 = v4;
  id v6 = WeakRetained;
  dispatch_async(v5, block);
}

void sub_10001066C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  if (v1)
  {
    id v3 = [*(id *)(a1 + 40) status];
    id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) error]);
    (*(void (**)(uint64_t, id, id))(v1 + 16))(v1, v3, v4);
  }

void sub_100010700(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  id v5 = *(dispatch_queue_s **)(v3 + 88);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000107A0;
  block[3] = &unk_1001A6C08;
  void block[4] = v3;
  id v8 = WeakRetained;
  id v9 = v4;
  id v6 = WeakRetained;
  dispatch_async(v5, block);
}

void sub_1000107A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  if (v1)
  {
    id v3 = [*(id *)(a1 + 40) status];
    id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) error]);
    (*(void (**)(uint64_t, id, id))(v1 + 16))(v1, v3, v4);
  }

void sub_100010834(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unint64_t v3 = (unint64_t)[WeakRetained status];
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 configuration]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 userIdentity]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    unsigned int v9 = [WeakRetained status];
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained authenticateFailureCode]);
    *(_DWORD *)buf = 138544386;
    uint64_t v28 = (unsigned __int8 *)v5;
    __int16 v29 = 2114;
    uint64_t v30 = v7;
    __int16 v31 = 2114;
    int v32 = v8;
    __int16 v33 = 1024;
    unsigned int v34 = v9;
    __int16 v35 = 2114;
    id v36 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Authentication finished for %{public}@ with error=%{public}@, status=%d, authFailureCode=%{public}@",  buf,  0x30u);
  }

  if ((v3 & 0xFFFFFFFFFFFFFFFDLL) == 1)
  {
    if (WeakRetained) {
      goto LABEL_8;
    }
  }

  else
  {
    __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    [v20 handleFailureInMethod:*(void *)(a1 + 56) object:*(void *)(a1 + 32) file:@"ICDCloudMusicLibraryRequestHandler.m" lineNumber:2912 description:@"SagaAuthenticateOperation can only return CloudLibraryOperationStatusSuccess OR CloudLibraryOperationStatusPermanentlyFailed"];

    if (WeakRetained) {
      goto LABEL_8;
    }
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 146LL) = 0;
  id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    id v12 = *(unsigned __int8 **)(a1 + 32);
    int v13 = v12[146];
    *(_DWORD *)buf = 138543618;
    uint64_t v28 = v12;
    __int16 v29 = 1024;
    LODWORD(v30) = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ - CloudAuthenticateOperation is nil. Resetting _isPendingAuthentication=%{BOOL}u",  buf,  0x12u);
  }

LABEL_8:
  uint64_t v14 = *(void *)(a1 + 32);
  int8x16_t v15 = *(void **)(a1 + 40);
  uint64_t v16 = *(dispatch_queue_s **)(v14 + 88);
  v21[0] = _NSConcreteStackBlock;
  v21[2] = sub_100010AF4;
  v21[3] = &unk_1001A1CF8;
  v21[1] = 3221225472LL;
  v21[4] = v14;
  id v22 = WeakRetained;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  unint64_t v24 = v3;
  uint64_t v25 = v17;
  uint64_t v26 = v18;
  id v23 = v15;
  id v19 = WeakRetained;
  dispatch_async(v16, v21);
}

uint64_t sub_100010AE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100010AF4(uint64_t a1)
{
  if (*(void *)(a1 + 56) == 1LL)
  {
    if (*(void *)(*(void *)(a1 + 32) + 56LL))
    {
      dispatch_semaphore_t v2 = dispatch_semaphore_create(0LL);
      uint64_t v3 = MSVAutoBugCaptureDomainiTunesCloud;
      uint64_t v4 = *(void *)(a1 + 40);
      v25[1] = @"enableReason";
      v26[0] = v4;
      v25[0] = @"strongAuthenticateOperation";
      id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 64)));
      v26[1] = v5;
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v26,  v25,  2LL));
      uint64_t v27 = v6;
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v27, 1LL));
      uint64_t v18 = _NSConcreteStackBlock;
      uint64_t v19 = 3221225472LL;
      __int16 v20 = sub_100010DA8;
      id v21 = &unk_1001A6B90;
      dispatch_semaphore_t v22 = v2;
      id v8 = v2;
      +[MSVAutoBugCapture snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:]( &OBJC_CLASS___MSVAutoBugCapture,  "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:",  v3,  @"Bug",  @"SagaAuthenticationBug",  @"DuplicateSagaAuthentication",  0LL,  v7,  &v18);

      dispatch_semaphore_wait(v8, 0xFFFFFFFFFFFFFFFFLL);
      if (*(void *)(*(void *)(a1 + 32) + 56LL))
      {
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
        objc_msgSend( v17,  "handleFailureInMethod:object:file:lineNumber:description:",  *(void *)(a1 + 72),  *(void *)(a1 + 32),  @"ICDCloudMusicLibraryRequestHandler.m",  2927,  @"Invalid State - We already have a valid SagaRequestHandler (enableReason=%d)",  *(void *)(a1 + 64),  v18,  v19,  v20,  v21);
      }
    }

    unsigned int v9 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v24 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Initializing SagaRequestHander ....",  buf,  0xCu);
    }

    id v11 = objc_alloc(&OBJC_CLASS___SagaRequestHandler);
    id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    int v13 = -[SagaRequestHandler initWithConfiguration:progressObserver:]( v11,  "initWithConfiguration:progressObserver:",  v12,  *(void *)(a1 + 32));
    uint64_t v14 = *(void *)(a1 + 32);
    int8x16_t v15 = *(void **)(v14 + 56);
    *(void *)(v14 + 56) = v13;
  }

  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 40));
  }
  return result;
}

uint64_t sub_100010DA8(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100010DB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  id v146 = 0LL;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 getPropertiesForUserIdentity:v5 error:&v146]);
  id v7 = v146;

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
  unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 daemonOptionsForConfiguration:v9]);

  unsigned int v11 = [v10 supportsAutomaticEnablingiCloudMusicLibrary];
  id v12 = [*(id *)(a1 + 32) _getCurrentSubscriptionStatusForReason:*(void *)(a1 + 48)];
  int v13 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138544130;
    uint64_t v148 = v14;
    __int16 v149 = 1024;
    *(_DWORD *)v150 = v15;
    *(_WORD *)&v150[4] = 1024;
    *(_DWORD *)&v150[6] = v11;
    __int16 v151 = 1024;
    int v152 = (int)v12;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Trying to enable cloud library for reason=%d, supportsAutoEnablingLibrary=%{BOOL}u, subscriptionStatus=%d",  buf,  0x1Eu);
  }

  if (!v6)
  {
    uint64_t v24 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v148 = v25;
      __int16 v149 = 2114;
      *(void *)v150 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Error %{public}@ loading user identity properties.",  buf,  0x16u);
    }

    if (v11) {
      [*(id *)(a1 + 32) _retryEnablingCloudMusicLibraryForReason:*(void *)(a1 + 48)];
    }
    uint64_t v26 = *(void **)(a1 + 40);
    uint64_t v27 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100012430;
    block[3] = &unk_1001A6BB8;
    id v96 = v26;
    id v95 = v7;
    dispatch_async(v27, block);
    [v3 finish];

    id v23 = v96;
    goto LABEL_28;
  }

  unsigned int v16 = [v6 isActiveLocker];
  if (([*(id *)(a1 + 32) _isNativeMusicAppInstalled] & 1) == 0)
  {
    uint64_t v28 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v29 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v148 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Native music app is NOT installed. Not enabling Cloud Music Library",  buf,  0xCu);
    }

    uint64_t v30 = *(void **)(a1 + 32);
    __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v30 configuration]);
    int v32 = (void *)objc_claimAutoreleasedReturnValue([v31 clientIdentity]);
    if (v16)
    {
      v143[0] = _NSConcreteStackBlock;
      v143[1] = 3221225472LL;
      v143[2] = sub_100011B24;
      v143[3] = &unk_1001A2068;
      __int16 v33 = *(void **)(a1 + 40);
      v143[4] = *(void *)(a1 + 32);
      id v145 = v33;
      id v144 = v3;
      [v30 disableCloudLibraryWithClientIdentity:v32 reason:-5 completionHandler:v143];

      id v23 = v145;
    }

    else
    {
      v139[0] = _NSConcreteStackBlock;
      v139[1] = 3221225472LL;
      v139[2] = sub_100011BD0;
      v139[3] = &unk_1001A3DA0;
      id v37 = *(void **)(a1 + 40);
      uint64_t v36 = *(void *)(a1 + 48);
      v139[4] = *(void *)(a1 + 32);
      uint64_t v142 = v36;
      id v141 = v37;
      id v140 = v3;
      [v30 _performInitialJaliscoImportWithClientIdentity:v32 completion:v139];

      id v23 = v141;
    }

    goto LABEL_28;
  }

  if (v16)
  {
    if (v12 == (id)3)
    {
      uint64_t v17 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v18 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543874;
        uint64_t v148 = v18;
        __int16 v149 = 1024;
        *(_DWORD *)v150 = 1;
        *(_WORD *)&v150[4] = 1024;
        *(_DWORD *)&v150[6] = 3;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - isActiveLockerAccount=%{BOOL}u, subscriptionStatus=%d. Disabling CloudLibrary as the user is no l onger a subscriber",  buf,  0x18u);
      }

      uint64_t v19 = *(void **)(a1 + 32);
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([v19 configuration]);
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 clientIdentity]);
      v136[0] = _NSConcreteStackBlock;
      v136[1] = 3221225472LL;
      v136[2] = sub_100011D24;
      v136[3] = &unk_1001A2068;
      dispatch_semaphore_t v22 = *(void **)(a1 + 40);
      v136[4] = *(void *)(a1 + 32);
      id v138 = v22;
      id v137 = v3;
      [v19 disableCloudLibraryWithClientIdentity:v21 reason:-4 completionHandler:v136];

      id v23 = v138;
    }

    else
    {
      v132[0] = _NSConcreteStackBlock;
      v132[1] = 3221225472LL;
      v132[2] = sub_100011DD0;
      v132[3] = &unk_1001A6C08;
      v43 = *(void **)(a1 + 40);
      uint64_t v44 = *(void *)(a1 + 48);
      id v133 = *(id *)(a1 + 32);
      id v135 = v43;
      id v134 = v3;
      [v133 _registerDeviceAndPerformInitialImportWithUserIdentityProperties:v6 cloudLibraryEnableReason:v44 completionHandler:v132];

      id v23 = v135;
    }

    goto LABEL_28;
  }

  if (!v12 || v12 == (id)3 || ([v10 supportsAutomaticEnablingiCloudMusicLibrary] & 1) == 0)
  {
    id v38 = *(void **)(a1 + 32);
    v39 = (void *)objc_claimAutoreleasedReturnValue([v38 configuration]);
    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v39 clientIdentity]);
    v128[0] = _NSConcreteStackBlock;
    v128[1] = 3221225472LL;
    v128[2] = sub_100011E58;
    v128[3] = &unk_1001A3DA0;
    id v42 = *(void **)(a1 + 40);
    uint64_t v41 = *(void *)(a1 + 48);
    v128[4] = *(void *)(a1 + 32);
    uint64_t v131 = v41;
    id v130 = v42;
    id v129 = v3;
    [v38 _performInitialJaliscoImportWithClientIdentity:v40 completion:v128];

    id v23 = v130;
LABEL_28:

    goto LABEL_29;
  }

  if (v12 != (id)2)
  {
    if (v12 == (id)1)
    {
      v125[0] = _NSConcreteStackBlock;
      v125[1] = 3221225472LL;
      v125[2] = sub_100011FAC;
      v125[3] = &unk_1001A6BB8;
      unsigned int v34 = *(void **)(a1 + 40);
      uint64_t v35 = *(void *)(a1 + 48);
      id v126 = *(id *)(a1 + 32);
      id v127 = v34;
      [v126 _reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:v35 completionHandler:v125];
      [v3 finish];
      id v23 = v127;
    }

    else
    {
      os_log_t v59 = sub_1000DD968();
      v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(v59);
      if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
      {
        uint64_t v61 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543618;
        uint64_t v148 = v61;
        __int16 v149 = 1024;
        *(_DWORD *)v150 = (_DWORD)v12;
        _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_ERROR,  "%{public}@ - Unhandled subscription status=%d when trying to enable cloud library",  buf,  0x12u);
      }

      v62 = *(void **)(a1 + 40);
      v63 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      v97[0] = _NSConcreteStackBlock;
      v97[1] = 3221225472LL;
      v97[2] = sub_1000123BC;
      v97[3] = &unk_1001A6BE0;
      id v98 = v62;
      dispatch_async(v63, v97);
      [v3 finish];
      id v23 = v98;
    }

    goto LABEL_28;
  }

  if (!v11)
  {
    os_log_t v64 = sub_1000DD968();
    v65 = (os_log_s *)objc_claimAutoreleasedReturnValue(v64);
    if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v66 = *(void *)(a1 + 32);
      v67 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
      *(_DWORD *)buf = 138543618;
      uint64_t v148 = v66;
      __int16 v149 = 2114;
      *(void *)v150 = v67;
      _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Platform %{public}@ doesn't support automatically enabling cloud library",  buf,  0x16u);
    }

    v68 = *(void **)(a1 + 40);
    v69 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v99[0] = _NSConcreteStackBlock;
    v99[1] = 3221225472LL;
    v99[2] = sub_1000123A4;
    v99[3] = &unk_1001A6BE0;
    id v100 = v68;
    dispatch_async(v69, v99);
    [v3 finish];
    id v23 = v100;
    goto LABEL_28;
  }

  v45 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  v46 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v45));

  v47 = (void *)objc_claimAutoreleasedReturnValue([v46 sagaAccountID]);
  if (!v47)
  {
    os_log_t v48 = sub_1000DD968();
    v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v50 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v148 = v50;
      _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - New account [enabling iCML if possible]",  buf,  0xCu);
    }

    *(_DWORD *)(*(void *)(a1 + 32) + 120LL) = 0;
    *(_DWORD *)(*(void *)(a1 + 32) + 128LL) = 0;
  }

  os_log_t v51 = sub_1000DD968();
  v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
  if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v53 = *(void *)(a1 + 32);
    uint64_t v54 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543618;
    uint64_t v148 = v53;
    __int16 v149 = 1024;
    *(_DWORD *)v150 = v54;
    _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Preparing to enable Cloud Music Library for reason=%d",  buf,  0x12u);
  }

  if (MSVDeviceSupportsMultipleLibraries(v55))
  {
    v120[0] = _NSConcreteStackBlock;
    v120[1] = 3221225472LL;
    v120[2] = sub_100012024;
    v120[3] = &unk_1001A1FF0;
    v56 = *(void **)(a1 + 40);
    uint64_t v57 = *(void *)(a1 + 48);
    id v121 = *(id *)(a1 + 32);
    uint64_t v124 = v57;
    id v123 = v56;
    id v122 = v3;
    [v121 _authenticateAndStartInitialImportWithMergePreference:0 userIdentityProperties:v6 enableReason:v57 withCompletionHandler:v120];

    v58 = v123;
  }

  else
  {
    v70 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
    unsigned int v71 = [v70 supportsSideLoadedMediaContent];

    if (v71)
    {
      v115[0] = _NSConcreteStackBlock;
      v115[1] = 3221225472LL;
      v115[2] = sub_1000120F8;
      v115[3] = &unk_1001A1FF0;
      v72 = *(void **)(a1 + 40);
      uint64_t v73 = *(void *)(a1 + 48);
      id v116 = *(id *)(a1 + 32);
      uint64_t v119 = v73;
      id v118 = v72;
      id v117 = v3;
      [v116 _tryEnablingICMLOnDevicesSupportingSideLoadedContentWithProperties:v6 reason:v73 withCompletionHandler:v115];

      v58 = v118;
    }

    else
    {
      v74 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
      unsigned int v75 = [v74 isWatch];

      if (v75)
      {
        if (sub_1000B1B34())
        {
          os_log_t v76 = sub_1000DD968();
          v77 = (os_log_s *)objc_claimAutoreleasedReturnValue(v76);
          if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v78 = *(void *)(a1 + 32);
            uint64_t v79 = *(void *)(a1 + 48);
            *(_DWORD *)buf = 138543618;
            uint64_t v148 = v78;
            __int16 v149 = 1024;
            *(_DWORD *)v150 = v79;
            _os_log_impl( (void *)&_mh_execute_header,  v77,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Skipping initial import on non standalone watch for reason=%d",  buf,  0x12u);
          }

          v80 = *(void **)(a1 + 40);
          v81 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
          v113[0] = _NSConcreteStackBlock;
          v113[1] = 3221225472LL;
          v113[2] = sub_10001238C;
          v113[3] = &unk_1001A6BE0;
          id v114 = v80;
          dispatch_async(v81, v113);
          [v3 finish];
          v58 = v114;
        }

        else
        {
          v108[0] = _NSConcreteStackBlock;
          v108[1] = 3221225472LL;
          v108[2] = sub_1000121CC;
          v108[3] = &unk_1001A1FF0;
          v86 = *(void **)(a1 + 40);
          uint64_t v87 = *(void *)(a1 + 48);
          id v109 = *(id *)(a1 + 32);
          uint64_t v112 = v87;
          id v111 = v86;
          id v110 = v3;
          [v109 _authenticateAndStartInitialImportWithMergePreference:0 userIdentityProperties:v6 enableReason:v87 withCompletionHandler:v108];

          v58 = v111;
        }
      }

      else
      {
        v82 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
        unsigned int v83 = [v82 isROSDevice];

        if (v83)
        {
          v103[0] = _NSConcreteStackBlock;
          v103[1] = 3221225472LL;
          v103[2] = sub_1000122A0;
          v103[3] = &unk_1001A1FF0;
          v84 = *(void **)(a1 + 40);
          uint64_t v85 = *(void *)(a1 + 48);
          id v104 = *(id *)(a1 + 32);
          uint64_t v107 = v85;
          id v106 = v84;
          id v105 = v3;
          [v104 _authenticateAndStartInitialImportWithMergePreference:0 userIdentityProperties:v6 enableReason:v85 withCompletionHandler:v103];

          v58 = v106;
        }

        else
        {
          os_log_t v88 = sub_1000DD968();
          v89 = (os_log_s *)objc_claimAutoreleasedReturnValue(v88);
          if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v93 = *(void *)(a1 + 32);
            v90 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
            *(_DWORD *)buf = 138543618;
            uint64_t v148 = v93;
            __int16 v149 = 2114;
            *(void *)v150 = v90;
            _os_log_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Not enabling iCML on unsupported platform %{public}@",  buf,  0x16u);
          }

          v91 = *(void **)(a1 + 40);
          v92 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
          v101[0] = _NSConcreteStackBlock;
          v101[1] = 3221225472LL;
          v101[2] = sub_100012374;
          v101[3] = &unk_1001A6BE0;
          id v102 = v91;
          dispatch_async(v92, v101);
          [v3 finish];
          v58 = v102;
        }
      }
    }
  }

LABEL_29:
}

void sub_100011B24(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472LL;
  unsigned int v9 = sub_100012560;
  uint64_t v10 = &unk_1001A6BB8;
  id v5 = *(id *)(a1 + 48);
  id v11 = v3;
  id v12 = v5;
  id v6 = v3;
  dispatch_async(v4, &v7);
  objc_msgSend(*(id *)(a1 + 40), "finish", v7, v8, v9, v10);
}

void sub_100011BD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 56);
    *(_DWORD *)buf = 138543874;
    uint64_t v17 = v5;
    __int16 v18 = 1024;
    int v19 = v6;
    __int16 v20 = 2114;
    id v21 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  id v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  uint64_t v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472LL;
  id v12 = sub_100012544;
  int v13 = &unk_1001A6BB8;
  id v8 = *(id *)(a1 + 48);
  id v14 = v3;
  id v15 = v8;
  id v9 = v3;
  dispatch_async(v7, &v10);
  objc_msgSend(*(id *)(a1 + 40), "finish", v10, v11, v12, v13);
}

void sub_100011D24(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472LL;
  id v9 = sub_100012528;
  uint64_t v10 = &unk_1001A6BB8;
  id v5 = *(id *)(a1 + 48);
  id v11 = v3;
  id v12 = v5;
  id v6 = v3;
  dispatch_async(v4, &v7);
  objc_msgSend(*(id *)(a1 + 40), "finish", v7, v8, v9, v10);
}

void sub_100011DD0(uint64_t a1)
{
  dispatch_semaphore_t v2 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100012510;
  block[3] = &unk_1001A6BE0;
  id v4 = *(id *)(a1 + 48);
  dispatch_async(v2, block);
  [*(id *)(a1 + 40) finish];
}

void sub_100011E58(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 56);
    *(_DWORD *)buf = 138543874;
    uint64_t v17 = v5;
    __int16 v18 = 1024;
    int v19 = v6;
    __int16 v20 = 2114;
    id v21 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  id v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  uint64_t v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472LL;
  id v12 = sub_1000124F4;
  int v13 = &unk_1001A6BB8;
  id v8 = *(id *)(a1 + 48);
  id v14 = v3;
  id v15 = v8;
  id v9 = v3;
  dispatch_async(v7, &v10);
  objc_msgSend(*(id *)(a1 + 40), "finish", v10, v11, v12, v13);
}

void sub_100011FAC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  dispatch_semaphore_t v2 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000124DC;
  block[3] = &unk_1001A6BE0;
  id v4 = v1;
  dispatch_async(v2, block);
}

void sub_100012024(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(dispatch_queue_s **)(v3 + 88);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000124B8;
    block[3] = &unk_1001A4D20;
    uint64_t v5 = *(void *)(a1 + 56);
    void block[4] = v3;
    void block[5] = v5;
    dispatch_async(v4, block);
  }

  uint64_t v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1000124C4;
  v7[3] = &unk_1001A6BE0;
  id v8 = *(id *)(a1 + 48);
  dispatch_async(v6, v7);
  [*(id *)(a1 + 40) finish];
}

void sub_1000120F8(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(dispatch_queue_s **)(v3 + 88);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100012494;
    block[3] = &unk_1001A4D20;
    uint64_t v5 = *(void *)(a1 + 56);
    void block[4] = v3;
    void block[5] = v5;
    dispatch_async(v4, block);
  }

  uint64_t v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_1000124A0;
  v7[3] = &unk_1001A6BE0;
  id v8 = *(id *)(a1 + 48);
  dispatch_async(v6, v7);
  [*(id *)(a1 + 40) finish];
}

void sub_1000121CC(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(dispatch_queue_s **)(v3 + 88);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100012470;
    block[3] = &unk_1001A4D20;
    uint64_t v5 = *(void *)(a1 + 56);
    void block[4] = v3;
    void block[5] = v5;
    dispatch_async(v4, block);
  }

  uint64_t v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10001247C;
  v7[3] = &unk_1001A6BE0;
  id v8 = *(id *)(a1 + 48);
  dispatch_async(v6, v7);
  [*(id *)(a1 + 40) finish];
}

void sub_1000122A0(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(dispatch_queue_s **)(v3 + 88);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10001244C;
    block[3] = &unk_1001A4D20;
    uint64_t v5 = *(void *)(a1 + 56);
    void block[4] = v3;
    void block[5] = v5;
    dispatch_async(v4, block);
  }

  uint64_t v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100012458;
  v7[3] = &unk_1001A6BE0;
  id v8 = *(id *)(a1 + 48);
  dispatch_async(v6, v7);
  [*(id *)(a1 + 40) finish];
}

uint64_t sub_100012374(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

uint64_t sub_10001238C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

uint64_t sub_1000123A4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

void sub_1000123BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
    (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
  }

uint64_t sub_100012430(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

id sub_10001244C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _retryEnablingCloudMusicLibraryForReason:*(void *)(a1 + 40)];
}

uint64_t sub_100012458(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

id sub_100012470(uint64_t a1)
{
  return [*(id *)(a1 + 32) _retryEnablingCloudMusicLibraryForReason:*(void *)(a1 + 40)];
}

uint64_t sub_10001247C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

id sub_100012494(uint64_t a1)
{
  return [*(id *)(a1 + 32) _retryEnablingCloudMusicLibraryForReason:*(void *)(a1 + 40)];
}

uint64_t sub_1000124A0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

id sub_1000124B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _retryEnablingCloudMusicLibraryForReason:*(void *)(a1 + 40)];
}

uint64_t sub_1000124C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

uint64_t sub_1000124DC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

uint64_t sub_1000124F4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_100012510(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

uint64_t sub_100012528(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_100012544(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_100012560(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_10001257C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10001258C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    uint64_t v13 = v5;
    __int16 v14 = 1024;
    int v15 = v6;
    __int16 v16 = 2114;
    id v17 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  id v7 = *(void **)(a1 + 40);
  if (v7)
  {
    id v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1000126D4;
    v9[3] = &unk_1001A42A0;
    id v10 = v7;
    char v11 = *(_BYTE *)(a1 + 56);
    dispatch_async(v8, v9);
  }
}

uint64_t sub_1000126D4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(a1 + 40));
}

void sub_1000126E8(uint64_t a1, uint64_t a2)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_10001277C;
  v7[3] = &unk_1001A1F78;
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = *(id *)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  [v4 _handleSagaAuthentication:a2 finishedForReason:v5 explicitUserAction:0 shouldStartInitialImport:1 completionHandler:v7];
}

void sub_10001277C(uint64_t a1, uint64_t a2, char a3)
{
  id v3 = *(void **)(a1 + 40);
  if (v3)
  {
    uint64_t v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_100012804;
    v6[3] = &unk_1001A42A0;
    id v7 = v3;
    char v8 = a3;
    dispatch_async(v5, v6);
  }

uint64_t sub_100012804(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(a1 + 40));
}

void sub_100012818(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 configuration]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentity]);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100012E58;
  v6[3] = &unk_1001A1AF0;
  id v5 = *(id *)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  [v2 _removeCloudSourcesForReason:-10 withClientIdentity:v4 byDisablingActiveLockerAccount:0 completionHandler:v6];
}

void sub_1000128C8(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[4];
    uint64_t v6 = a1[6];
    *(_DWORD *)buf = 138543874;
    uint64_t v13 = v5;
    __int16 v14 = 1024;
    int v15 = v6;
    __int16 v16 = 2114;
    id v17 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  uint64_t v7 = a1[4];
  char v8 = (void *)a1[5];
  id v9 = *(dispatch_queue_s **)(v7 + 88);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_100012C84;
  v10[3] = &unk_1001A6BB8;
  v10[4] = v7;
  id v11 = v8;
  dispatch_async(v9, v10);
}

void sub_100012A04(void *a1)
{
  uint64_t v1 = a1[4];
  id v2 = (void *)a1[5];
  id v3 = *(dispatch_queue_s **)(v1 + 88);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_100012A88;
  block[3] = &unk_1001A1BE0;
  block[1] = 3221225472LL;
  uint64_t v4 = a1[6];
  void block[4] = v1;
  uint64_t v7 = v4;
  id v6 = v2;
  dispatch_async(v3, block);
}

void sub_100012A88(void *a1)
{
  id v2 = (void *)a1[4];
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 configuration]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentity]);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  v7[2] = sub_100012B38;
  v7[3] = &unk_1001A1EB0;
  id v6 = (void *)a1[5];
  uint64_t v5 = a1[6];
  void v7[4] = a1[4];
  uint64_t v9 = v5;
  id v8 = v6;
  [v2 _performInitialJaliscoImportWithClientIdentity:v4 completion:v7];
}

void sub_100012B38(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[4];
    uint64_t v6 = a1[6];
    *(_DWORD *)buf = 138543874;
    uint64_t v12 = v5;
    __int16 v13 = 1024;
    int v14 = v6;
    __int16 v15 = 2114;
    id v16 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  uint64_t v7 = (void *)a1[5];
  if (v7)
  {
    id v8 = *(dispatch_queue_s **)(a1[4] + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100012C78;
    block[3] = &unk_1001A6BE0;
    id v10 = v7;
    dispatch_async(v8, block);
  }
}

uint64_t sub_100012C78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100012C84(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 configuration]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentity]);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100012D30;
  v6[3] = &unk_1001A7220;
  uint64_t v5 = *(void **)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  [v2 _performInitialSagaImportWithClientIdentity:v4 allowingNoisyAuthPrompt:0 completionHandler:v6];
}

void sub_100012D30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  id v3 = *(dispatch_queue_s **)(v1 + 88);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100012DAC;
  v4[3] = &unk_1001A6BB8;
  v4[4] = v1;
  id v5 = v2;
  dispatch_async(v3, v4);
}

void sub_100012DAC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 40);
  if (v2)
  {
    id v3 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100012E4C;
    block[3] = &unk_1001A6BE0;
    id v5 = v2;
    dispatch_async(v3, block);
  }

uint64_t sub_100012E4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100012E58(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  if (v1)
  {
    id v2 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100012ED8;
    block[3] = &unk_1001A6BE0;
    id v4 = v1;
    dispatch_async(v2, block);
  }

uint64_t sub_100012ED8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100012EE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"CloudLibraryStateReasonKey"]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"AutoEnableCloudLibraryFailureReasonKey"]);
    BOOL v9 = [v7 intValue] == -101;
    unsigned int v10 = [v8 intValue];
    BOOL v11 = v10 == -1;
    char v12 = v10 == -1 || v9;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v12 ^ 1;
  }

  else
  {
    BOOL v9 = 0;
    BOOL v11 = 0;
  }

  __int16 v13 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = *(void *)(a1 + 32);
    int v15 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
    int v16 = 138544386;
    uint64_t v17 = v14;
    __int16 v18 = 1024;
    BOOL v19 = v9;
    __int16 v20 = 1024;
    BOOL v21 = v11;
    __int16 v22 = 1024;
    int v23 = v15;
    __int16 v24 = 2114;
    id v25 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ICML (notEnabledInBackup=%{BOOL}u, manuallyDisabled=%{BOOL}u), shouldHandle=%{BOOL}u, cloudLibrarySta teReason=%{public}@",  (uint8_t *)&v16,  0x28u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100013080(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v9 = v5;
  if (v5)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
    id v7 = v5;
    id v8 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v7;
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([a2 objectForKey:@"CloudLibraryStateReasonKey"]);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v8 intValue] == -1;
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_100013114(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10001311C(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 141LL) = 0;
  unsigned int v2 = [*(id *)(a1 + 32) isActive];
  id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v12 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Starting retry operation to enable ICML.",  buf,  0xCu);
    }

    id v6 = objc_alloc(&OBJC_CLASS___ICAsyncBlockOperation);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1000132A8;
    v10[3] = &unk_1001A1E60;
    uint64_t v7 = *(void *)(a1 + 40);
    v10[4] = *(void *)(a1 + 32);
    void v10[5] = v7;
    id v3 = (os_log_s *)[v6 initWithStartHandler:v10];
    [*(id *)(*(void *)(a1 + 32) + 112) addOperation:v3];
  }

  else if (v4)
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    uint64_t v12 = v8;
    __int16 v13 = 1024;
    int v14 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - NOT retrying to enable cloud library for reason=%d as the handler is not active",  buf,  0x12u);
  }
}

void sub_1000132A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  id v16 = 0LL;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 getPropertiesForUserIdentity:v5 error:&v16]);
  id v7 = v16;

  if (v7 || !v6)
  {
    ++*(_DWORD *)(*(void *)(a1 + 32) + 120LL);
    uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = *(int *)(v10 + 120);
      *(_DWORD *)buf = 138543874;
      uint64_t v18 = v10;
      __int16 v19 = 2114;
      id v20 = v7;
      __int16 v21 = 2048;
      uint64_t v22 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Could not get properties for current user identity - error=%{public}@., _autoEnableFailureCount=%ld",  buf,  0x20u);
    }

    [*(id *)(a1 + 32) _retryEnablingCloudMusicLibraryForReason:*(void *)(a1 + 40)];
    id v12 = v7;
  }

  else
  {
    if (MSVDeviceSupportsMultipleLibraries(v8) || [v6 isActive])
    {
      [*(id *)(a1 + 32) _tryEnablingCloudMusicLibraryForReason:*(void *)(a1 + 40) completionHandler:0];
    }

    else
    {
      __int16 v13 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        unsigned int v15 = [v6 isActive];
        *(_DWORD *)buf = 138543874;
        uint64_t v18 = v14;
        __int16 v19 = 2114;
        id v20 = 0LL;
        __int16 v21 = 1024;
        LODWORD(v22) = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished loading user identity properties with error=%{public}@. account is active=%{BOOL}u. Not loading iCML",  buf,  0x1Cu);
      }
    }

    id v12 = 0LL;
  }

  [v3 finishWithError:v12];
}

void sub_1000134C8(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 80LL) = 3LL;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100014118;
  v5[3] = &unk_1001A7220;
  unsigned int v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = *(id *)(a1 + 40);
  v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  [v2 _tryEnablingCloudMusicLibraryForReason:v3 completionHandler:v5];
}

void sub_100013560(void *a1, char a2, char a3, void *a4)
{
  id v7 = a4;
  uint64_t v8 = a1[4];
  uint64_t v9 = (void *)a1[5];
  uint64_t v10 = *(dispatch_queue_s **)(v8 + 88);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_100013624;
  block[3] = &unk_1001A1B68;
  block[1] = 3221225472LL;
  uint64_t v15 = a1[6];
  char v16 = a2;
  char v17 = a3;
  void block[4] = v8;
  id v13 = v7;
  id v14 = v9;
  id v11 = v7;
  dispatch_async(v10, block);
}

void sub_100013624(uint64_t a1)
{
  unsigned int v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 56);
    int v4 = *(unsigned __int8 *)(a1 + 64);
    int v5 = *(unsigned __int8 *)(a1 + 65);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    int v8 = *(_DWORD *)(v6 + 124);
    *(_DWORD *)buf = 138544642;
    uint64_t v73 = v6;
    __int16 v74 = 1024;
    int v75 = v3;
    __int16 v76 = 1024;
    int v77 = v4;
    __int16 v78 = 1024;
    int v79 = v5;
    __int16 v80 = 2114;
    uint64_t v81 = v7;
    __int16 v82 = 1024;
    int v83 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - finished reloading subscription status for reason=%d, AM=%{BOOL}u, Match=%{BOOL}u, error=%{public}@, subscriptionStatusFailureCount=%d",  buf,  0x2Eu);
  }

  if ([*(id *)(a1 + 32) isActive])
  {
    uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 80LL);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
    if ([v10 shouldTreatSubscriptionStatusCheckAsIncomplete])
    {
      int v11 = MSVDeviceOSIsInternalInstall();

      if (v11)
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v13 = *(_DWORD *)(v12 + 124);
        *(void *)(v12 + 80) = 0LL;
        ++*(_DWORD *)(*(void *)(a1 + 32) + 124LL);
        id v14 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v15 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          uint64_t v73 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - shouldTreatSubscriptionStatusCheckAsIncomplete is set. Will treat subscription status check as incomplete",  buf,  0xCu);
        }

        [*(id *)(a1 + 32) _enqueueSubscriptionStatusCheckForReason:*(void *)(a1 + 56)];
        if (v13)
        {
          char v16 = *(void **)(a1 + 48);
          if (!v16) {
            return;
          }
          char v17 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100013EF8;
          block[3] = &unk_1001A6BE0;
          id v68 = v16;
          dispatch_async(v17, block);
          uint64_t v18 = v68;
        }

        else
        {
          int v32 = *(void **)(a1 + 32);
          __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 configuration]);
          unsigned int v34 = (void *)objc_claimAutoreleasedReturnValue([v33 clientIdentity]);
          v69[0] = _NSConcreteStackBlock;
          v69[1] = 3221225472LL;
          v69[2] = sub_100013DB8;
          v69[3] = &unk_1001A1EB0;
          uint64_t v36 = *(void **)(a1 + 48);
          uint64_t v35 = *(void *)(a1 + 56);
          v69[4] = *(void *)(a1 + 32);
          uint64_t v71 = v35;
          id v70 = v36;
          [v32 _performInitialJaliscoImportWithClientIdentity:v34 completion:v69];

          uint64_t v18 = v70;
        }

        goto LABEL_38;
      }
    }

    else
    {
    }

    if (*(_BYTE *)(a1 + 64) || *(_BYTE *)(a1 + 65))
    {
      *(void *)(*(void *)(a1 + 32) + 80LL) = 2LL;
      if (*(_BYTE *)(a1 + 64)
        && MSVDeviceSupportsSideLoadedMediaContent()
        && CFPreferencesGetAppBooleanValue(@"UserRequestedSubscriptionHidden", @"com.apple.mobileipod", 0LL))
      {
        int v23 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v24 = *(void *)(a1 + 32);
          uint64_t v25 = *(void *)(v24 + 80);
          int v26 = *(unsigned __int8 *)(a1 + 64);
          int v27 = *(unsigned __int8 *)(a1 + 65);
          *(_DWORD *)buf = 138544130;
          uint64_t v73 = v24;
          __int16 v74 = 1024;
          int v75 = v25;
          __int16 v76 = 1024;
          int v77 = v26;
          __int16 v78 = 1024;
          int v79 = v27;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - _musicSubscriptionCheckStatus=%d, subscribedToAppleMusic=%{BOOL}u, subscribedToiTunesMatch=%{BO OL}u, setting userRequestedSubscriptionHidden to 0",  buf,  0x1Eu);
        }

        CFPreferencesSetAppValue( @"UserRequestedSubscriptionHidden",  &__kCFBooleanFalse,  @"com.apple.mobileipod");
        CFPreferencesAppSynchronize(@"com.apple.mobileipod");
      }

LABEL_42:
    [*(id *)(a1 + 32) _enqueueSubscriptionStatusCheckForReason:*(void *)(a1 + 56)];
    v49 = *(void **)(a1 + 48);
    if (v49)
    {
      uint64_t v50 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      v62[0] = _NSConcreteStackBlock;
      v62[1] = 3221225472LL;
      v62[2] = sub_100014050;
      v62[3] = &unk_1001A6BE0;
      id v63 = v49;
      dispatch_async(v50, v62);
      uint64_t v18 = v63;
      goto LABEL_38;
    }

    return;
  }

  __int16 v19 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v20 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v73 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring subscription status change as the handler is not active",  buf,  0xCu);
  }

  __int16 v21 = *(void **)(a1 + 48);
  if (v21)
  {
    uint64_t v22 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v56[0] = _NSConcreteStackBlock;
    v56[1] = 3221225472LL;
    v56[2] = sub_1000140E8;
    v56[3] = &unk_1001A6BE0;
    id v57 = v21;
    dispatch_async(v22, v56);
    uint64_t v18 = v57;
LABEL_38:
  }

      uint64_t v44 = (uint64_t)[*(id *)(*(void *)&buf[8] + 40) responseCode];
      if (v44 > 399)
      {
        uint64_t v45 = 3LL;
        if (v44 == 400 || v44 == 404) {
          goto LABEL_51;
        }
      }

      else if (v44 == 200 || v44 == 204)
      {
        if (self->_properties) {
          uint64_t v45 = 1LL;
        }
        else {
          uint64_t v45 = 2LL;
        }
        goto LABEL_51;
      }

      uint64_t v45 = 2LL;
LABEL_51:
      -[CloudLibraryOperation setStatus:](self, "setStatus:", v45);

      _Block_object_dispose(&v59, 8);
      _Block_object_dispose(buf, 8);

      goto LABEL_52;
    }

    if (![v50 longLongValue])
    {
      [obj setObject:v50 forKey:v13];
      id v14 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Resetting parent persistent-id to 0 (default root level)",  buf,  2u);
      }

      goto LABEL_20;
    }

    id v14 = (os_log_s *)+[ML3Container newWithPersistentID:inLibrary:]( ML3Container,  "newWithPersistentID:inLibrary:",  [v50 longLongValue],  v54);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s valueForProperty:](v14, "valueForProperty:", ML3ContainerPropertyStoreCloudID));
    if ((uint64_t)[v15 longLongValue] < 1)
    {
      [obj removeObjectForKey:v13];
      char v16 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        *(void *)&uint8_t buf[4] = [v50 longLongValue];
        char v17 = "Failed to find parent cloud-id for persistent-id %lld";
        uint64_t v18 = v16;
        __int16 v19 = 12;
        goto LABEL_18;
      }
    }

    else
    {
      [obj setObject:v15 forKey:v13];
      char v16 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218240;
        *(void *)&uint8_t buf[4] = [v50 longLongValue];
        *(_WORD *)&buf[12] = 2048;
        *(void *)&buf[14] = [v15 unsignedLongValue];
        char v17 = "Translated parent persistent-id %lld to cloud-id %lu";
        uint64_t v18 = v16;
        __int16 v19 = 22;
LABEL_18:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v17, buf, v19);
      }
    }

LABEL_20:
    goto LABEL_21;
  }

  uint64_t v20 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v21 = self->super._status;
    *(_DWORD *)buf = 134217984;
    *(void *)&uint8_t buf[4] = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Playlist with pid = %lld is not in the database, skipping save to cloud library.",  buf,  0xCu);
  }

  -[CloudLibraryOperation setStatus:](self, "setStatus:", 1LL);
LABEL_52:
  v46 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
  uint64_t v47 = MSVTCCIdentityForCurrentProcess();
  id v48 = (void *)objc_claimAutoreleasedReturnValue(v47);
  [v46 setClientIdentity:v48];

  [v3 endTransaction];
  objc_autoreleasePoolPop(context);
}

    __int16 v33 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Releasing power assertion: com.apple.itunescloudd.SagaLoadLyricsOperation",  buf,  2u);
    }

    CPSetPowerAssertionWithIdentifier(0LL, @"com.apple.itunescloudd.SagaLoadLyricsOperation");
    unsigned int v34 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
    uint64_t v35 = MSVTCCIdentityForCurrentProcess();
    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
    [v34 setClientIdentity:v36];

    -[CloudLibraryOperation setStatus:](self, "setStatus:", 1LL);
    [v37 endTransaction];
  }
}

void sub_100013DB8(void *a1, void *a2)
{
  id v3 = a2;
  int v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[4];
    uint64_t v6 = a1[6];
    *(_DWORD *)buf = 138543874;
    uint64_t v12 = v5;
    __int16 v13 = 1024;
    int v14 = v6;
    __int16 v15 = 2114;
    id v16 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  uint64_t v7 = (void *)a1[5];
  if (v7)
  {
    int v8 = *(dispatch_queue_s **)(a1[4] + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10001410C;
    block[3] = &unk_1001A6BE0;
    id v10 = v7;
    dispatch_async(v8, block);
  }
}

uint64_t sub_100013EF8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100013F04(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    uint64_t v12 = v5;
    __int16 v13 = 1024;
    int v14 = v6;
    __int16 v15 = 2114;
    id v16 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished reloading media purchase history for reason=%d with error=%{public}@",  buf,  0x1Cu);
  }

  [*(id *)(a1 + 32) _enqueueSubscriptionStatusCheckForReason:*(void *)(a1 + 48)];
  uint64_t v7 = *(void **)(a1 + 40);
  if (v7)
  {
    int v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100014100;
    block[3] = &unk_1001A6BE0;
    id v10 = v7;
    dispatch_async(v8, block);
  }
}

uint64_t sub_100014050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10001405C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  if (v1)
  {
    unsigned int v2 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000140F4;
    block[3] = &unk_1001A6BE0;
    id v4 = v1;
    dispatch_async(v2, block);
  }

uint64_t sub_1000140DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000140E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000140F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100014100(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10001410C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100014118(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  if (v1)
  {
    unsigned int v2 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100014198;
    block[3] = &unk_1001A6BE0;
    id v4 = v1;
    dispatch_async(v2, block);
  }

uint64_t sub_100014198(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000141A4(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = 115200LL;
  id v6 = a2;
  id v7 = a3;
  int v8 = v7;
  int v9 = *(_DWORD *)(*(void *)(a1 + 32) + 132LL);
  if (v9 >= 10) {
    int v9 = 10;
  }
  unint64_t v10 = 600 * (v9 ^ 2);
  if (!v7)
  {
    int v11 = (void *)objc_claimAutoreleasedReturnValue([v6 libraryDAAPConfiguration]);
    if ([v11 maxSyncRetryIntervalSeconds])
    {
      unint64_t v5 = (unint64_t)[v11 maxSyncRetryIntervalSeconds];
      uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543618;
        uint64_t v26 = v13;
        __int16 v27 = 2048;
        unint64_t v28 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ maxRetryDelaySeconds=%lu",  buf,  0x16u);
      }
    }
  }

  if (v5 >= v10) {
    unint64_t v14 = v10;
  }
  else {
    unint64_t v14 = v5;
  }
  double v15 = (double)v14;
  id v16 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](&OBJC_CLASS___NSDate, "dateWithTimeIntervalSinceNow:", v15));
    uint64_t v19 = *(int *)(*(void *)(a1 + 32) + 132LL);
    *(_DWORD *)buf = 138544130;
    uint64_t v26 = v17;
    __int16 v27 = 2114;
    unint64_t v28 = (unint64_t)v18;
    __int16 v29 = 2048;
    uint64_t v30 = v19;
    __int16 v31 = 2048;
    unint64_t v32 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Scheduling retry to update cloud libary on %{public}@ (failureCount=%lu, retryDelaySeconds=%lu)",  buf,  0x2Au);
  }

  dispatch_time_t v20 = dispatch_time(0x8000000000000000LL, (uint64_t)(v15 * 1000000000.0));
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = *(void *)(a1 + 40);
  int v23 = *(dispatch_queue_s **)(v21 + 88);
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472LL;
  v24[2] = sub_10001440C;
  v24[3] = &unk_1001A4D20;
  v24[4] = v21;
  v24[5] = v22;
  dispatch_after(v20, v23, v24);
}

void sub_10001440C(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 142LL) = 0;
  unsigned int v2 = [*(id *)(a1 + 32) isActive];
  id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      int v10 = 138543618;
      uint64_t v11 = v5;
      __int16 v12 = 1024;
      int v13 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - retrying to enable cloud library for reason=%d",  (uint8_t *)&v10,  0x12u);
    }

    if (*(void *)(a1 + 40) == 1LL) {
      uint64_t v7 = 4LL;
    }
    else {
      uint64_t v7 = 5LL;
    }
    [*(id *)(a1 + 32) _tryEnablingCloudMusicLibraryForReason:v7 completionHandler:0];
  }

  else
  {
    if (v4)
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      int v10 = 138543618;
      uint64_t v11 = v8;
      __int16 v12 = 1024;
      int v13 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - NOT retrying to update cloud library for reason=%d as the handler is not active",  (uint8_t *)&v10,  0x12u);
    }
  }

void sub_100014558(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 140LL) = 0;
  if ([*(id *)(a1 + 32) isActive])
  {
    _[*(id *)(a1 + 32) _runSubscriptionStatusCheckOperationWithReason:*(void *)(a1 + 40) completionHandler:0];
  }

  else
  {
    unsigned int v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      int v4 = 138543362;
      uint64_t v5 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Not reloading subscription status as the handler is not active.",  (uint8_t *)&v4,  0xCu);
    }
  }

void sub_100014654(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v25 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Starting operation to refresh subscription status.",  buf,  0xCu);
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  id v23 = 0LL;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 getPropertiesForUserIdentity:v7 error:&v23]);
  id v9 = v23;

  int v11 = MSVDeviceSupportsMultipleLibraries(v10);
  if (v9) {
    BOOL v12 = 1;
  }
  else {
    BOOL v12 = v8 == 0LL;
  }
  int v13 = !v12;
  if (v11)
  {
    if (!v13 || ([v8 isActiveLocker] & 1) != 0)
    {
      unint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v15 = *(void *)(a1 + 32);
        unsigned int v16 = [v8 isActiveLocker];
        *(_DWORD *)buf = 138543874;
        uint64_t v25 = v15;
        __int16 v26 = 1024;
        unsigned int v27 = v16;
        __int16 v28 = 2114;
        v29[0] = v9;
        uint64_t v17 = "%{public}@ - Not refreshing subscription status. isActiveLocker=%{BOOL}u, loading user identity properties"
              " finished with error=%{public}@";
        uint64_t v18 = v14;
        uint32_t v19 = 28;
LABEL_20:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v17, buf, v19);
        goto LABEL_21;
      }

      goto LABEL_21;
    }
  }

  else if (!v13 {
         || ([v8 isActiveLocker] & 1) != 0
  }
         || ![v8 isActive])
  {
    unint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1 + 32);
      unsigned int v21 = [v8 isActive];
      unsigned int v22 = [v8 isActiveLocker];
      *(_DWORD *)buf = 138544130;
      uint64_t v25 = v20;
      __int16 v26 = 1024;
      unsigned int v27 = v21;
      __int16 v28 = 1024;
      LODWORD(v29[0]) = v22;
      WORD2(v29[0]) = 2114;
      *(void *)((char *)v29 + 6) = v9;
      uint64_t v17 = "%{public}@ - Not refreshing subscription status. isActiveAccount=%{BOOL}u, isActiveLocker=%{BOOL}u, loading "
            "user identity properties finished with error=%{public}@";
      uint64_t v18 = v14;
      uint32_t v19 = 34;
      goto LABEL_20;
    }

LABEL_21:
    goto LABEL_22;
  }

  [*(id *)(a1 + 32) _reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:*(void *)(a1 + 40) completionHandler:0];
LABEL_22:
  [v3 finishWithError:v9];
}

  objc_autoreleasePoolPop(v3);
}

  return v10;
}

void sub_1000148E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 67109378;
    int v22 = v5;
    __int16 v23 = 2114;
    uint64_t v24 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Finished updating Jalisco Library with reason=%d, error=%{public}@",  buf,  0x12u);
  }

  if (*(_BYTE *)(a1 + 64))
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 67109120;
      int v22 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Updating Saga Library with reason=%d",  buf,  8u);
    }

    id v9 = *(void **)(a1 + 40);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 configuration]);
    int v11 = (void *)objc_claimAutoreleasedReturnValue([v10 clientIdentity]);
    uint64_t v12 = *(void *)(a1 + 56);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_100014B40;
    v15[3] = &unk_1001A1E10;
    uint64_t v20 = v12;
    id v16 = *(id *)(a1 + 32);
    id v13 = *(id *)(a1 + 48);
    uint64_t v14 = *(void *)(a1 + 40);
    id v19 = v13;
    uint64_t v17 = v14;
    id v18 = v3;
    [v9 updateSagaLibraryWithClientIdentity:v11 forReason:v12 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:v15];
  }
}

void sub_100014AE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100014B40(void *a1, void *a2)
{
  id v3 = a2;
  int v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = a1[8];
    uint64_t v6 = a1[4];
    *(_DWORD *)buf = 67109378;
    int v17 = v5;
    __int16 v18 = 2114;
    uint64_t v19 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Finished updating Saga Library with reason=%d, error=%{public}@",  buf,  0x12u);
  }

  uint64_t v7 = (void *)a1[7];
  if (v7)
  {
    uint64_t v8 = *(dispatch_queue_s **)(a1[5] + 96LL);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    v12[2] = sub_100014C9C;
    v12[3] = &unk_1001A6D48;
    id v9 = v7;
    uint64_t v10 = a1[5];
    int v11 = (void *)a1[6];
    id v15 = v9;
    void v12[4] = v10;
    id v13 = v11;
    id v14 = v3;
    dispatch_async(v8, v12);
  }
}

void sub_100014C9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  id v2 = (id)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _prepareLibraryLoadErrorWithJaliscoError:*(void *)(a1 + 40) sagaError:*(void *)(a1 + 48)]);
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100014CE8(uint64_t a1)
{
  [*(id *)(a1 + 32) setActive:*(_BYTE *)(a1 + 48) == 0];
  id v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = *(void **)(a1 + 32);
    int v4 = *(unsigned __int8 *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    *(void *)&uint8_t buf[4] = v3;
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = v4;
    *(_WORD *)&buf[18] = 1024;
    *(_DWORD *)&buf[20] = [v3 isActive];
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - becomeInactiveWithDeauthentication, deauthentication=%{BOOL}u, active=%{BOOL}u",  buf,  0x18u);
  }

  if (*(_BYTE *)(a1 + 48) || (MSVDeviceSupportsMultipleLibraries(v5) & 1) == 0)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[ICEnvironmentMonitor sharedMonitor](&OBJC_CLASS___ICEnvironmentMonitor, "sharedMonitor"));
    [v8 unregisterObserver:*(void *)(a1 + 32)];

    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v9 removeObserver:*(void *)(a1 + 32)];

    *(void *)buf = 0LL;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x3032000000LL;
    uint64_t v54 = sub_10000F504;
    uint64_t v55 = sub_10000F514;
    id v56 = *(id *)(*(void *)(a1 + 32) + 64LL);
    v45[0] = 0LL;
    v45[1] = v45;
    v45[2] = 0x3032000000LL;
    v45[3] = sub_10000F504;
    v45[4] = sub_10000F514;
    id v46 = *(id *)(*(void *)(a1 + 32) + 72LL);
    uint64_t v10 = *(void **)(*(void *)(a1 + 32) + 72LL);
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472LL;
    v44[2] = sub_100015324;
    v44[3] = &unk_1001A3C50;
    v44[4] = buf;
    [v10 cancelOperationsWithCompletionHandler:v44];
    int v11 = *(void **)(*(void *)(a1 + 32) + 64LL);
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 3221225472LL;
    v43[2] = sub_100015338;
    v43[3] = &unk_1001A3C50;
    v43[4] = v45;
    [v11 cancelOperationsWithCompletionHandler:v43];
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = *(void **)(v12 + 72);
    *(void *)(v12 + 72) = 0LL;

    id v14 = *(void **)(*(void *)(a1 + 32) + 64LL);
    *(void *)(*(void *)(a1 + 32) + 64LL) = 0LL;

    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[CloudContentTasteUpdateRequestListener sharedContentTasteRequestListener]( &OBJC_CLASS___CloudContentTasteUpdateRequestListener,  "sharedContentTasteRequestListener"));
    id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    [v15 removeContentTasteOperationsForConnectionConfiguration:v16];

    int v17 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t v47 = 138543362;
      uint64_t v48 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished removing content taste items",  v47,  0xCu);
    }

    uint64_t v19 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t v47 = 138543362;
      uint64_t v48 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Removing allArtistImagesMapCacheFile due to account change",  v47,  0xCu);
    }

    unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    int v22 = (void *)objc_claimAutoreleasedReturnValue( +[CloudArtistHeroImageImporter allArtistImagesMapCacheFilePathURL]( &OBJC_CLASS___CloudArtistHeroImageImporter,  "allArtistImagesMapCacheFilePathURL"));
    [v21 removeItemAtURL:v22 error:0];

    __int16 v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v23));

    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 sagaAccountID]);
    __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v24 sagaLastKnownActiveLockerAccountDSID]);
    if ([v25 longLongValue])
    {
      unsigned int v27 = v26;
      __int16 v28 = v25;
      __int16 v29 = v28;
      if (v27 == v28)
      {

LABEL_19:
        goto LABEL_20;
      }

      unsigned __int8 v30 = -[os_log_s isEqual:](v27, "isEqual:", v28);

      if ((v30 & 1) == 0)
      {
        [v24 setSagaLastKnownActiveLockerAccountDSID:v29];
        __int16 v31 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = *(void *)(a1 + 32);
          id v33 = -[os_log_s longLongValue](v27, "longLongValue");
          id v34 = -[os_log_s longLongValue](v29, "longLongValue");
          *(_DWORD *)uint64_t v47 = 138543874;
          uint64_t v48 = v32;
          __int16 v49 = 2048;
          id v50 = v33;
          __int16 v51 = 2048;
          id v52 = v34;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Updating last known active locker account from %lld to %lld",  v47,  0x20u);
        }

        __int16 v29 = v31;
        goto LABEL_19;
      }
    }

LABEL_20:
LABEL_21:
    uint64_t v35 = *(void **)(a1 + 32);
    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v35 configuration]);
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v36 clientIdentity]);
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472LL;
    v41[2] = sub_10001534C;
    v41[3] = &unk_1001A1AF0;
    id v38 = *(id *)(a1 + 40);
    v41[4] = *(void *)(a1 + 32);
    id v42 = v38;
    [v35 _removeCloudSourcesForReason:-11 withClientIdentity:v37 byDisablingActiveLockerAccount:0 completionHandler:v41];

    _Block_object_dispose(v45, 8);
    _Block_object_dispose(buf, 8);

    return;
  }

  [*(id *)(*(void *)(a1 + 32) + 64) decreasePriorityForAllOperations];
  [*(id *)(*(void *)(a1 + 32) + 56) decreasePriorityForAllOperations];
  uint64_t v6 = *(void **)(a1 + 40);
  if (v6)
  {
    uint64_t v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000153EC;
    block[3] = &unk_1001A6BE0;
    id v40 = v6;
    dispatch_async(v7, block);
  }
}

    uint64_t v10 = 0;
  }

      id v13 = 0;
      goto LABEL_21;
    }

    id v13 = 0;
  }

      goto LABEL_22;
    }

    if (a4 == v9) {
      goto LABEL_3;
    }
    goto LABEL_2;
  }

  if ((int)a4 > 1634165105)
  {
    if (a4 == 1634165106) {
      goto LABEL_22;
    }
    if (a4 == 1634951787) {
      goto LABEL_3;
    }
    id v9 = 1835624804;
    goto LABEL_20;
  }

  if (a4 != 1633968755 && a4 != 1634026356)
  {
    if (a4 != 1634165100)
    {
LABEL_2:
      uint64_t v7 = 0;
      goto LABEL_3;
    }

void sub_1000152E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

void sub_100015324(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = 0LL;
}

void sub_100015338(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = 0LL;
}

void sub_10001534C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = *(void **)(a1 + 40);
  if (v5)
  {
    uint64_t v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_1000153FC;
    v7[3] = &unk_1001A6BB8;
    id v9 = v5;
    id v8 = v4;
    dispatch_async(v6, v7);
  }
}

uint64_t sub_1000153EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000153FC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

id sub_10001540C(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v39 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}@ - becomeActive", buf, 0xCu);
  }

  if (MSVDeviceSupportsMultipleLibraries([*(id *)(a1 + 32) setActive:1]))
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 64LL);
    uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v6)
      {
        uint64_t v7 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v39 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - we have a valid JaliscoRequestHandler.",  buf,  0xCu);
      }
    }

    else
    {
      if (v6)
      {
        uint64_t v22 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v39 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - initializing JaliscoRequestHandler",  buf,  0xCu);
      }

      __int16 v23 = objc_alloc(&OBJC_CLASS___JaliscoRequestHandler);
      uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
      uint64_t v24 = -[JaliscoRequestHandler initWithConfiguration:updateTaskHelper:]( v23,  "initWithConfiguration:updateTaskHelper:",  v5,  *(void *)(a1 + 32));
      uint64_t v25 = *(void *)(a1 + 32);
      __int16 v26 = *(void **)(v25 + 64);
      *(void *)(v25 + 64) = v24;
    }

    uint64_t v27 = *(void *)(*(void *)(a1 + 32) + 72LL);
    uint64_t v18 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    BOOL v28 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);
    if (v27)
    {
      if (v28)
      {
        uint64_t v29 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v39 = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - we have a valid SubscriptionRequestHandler.",  buf,  0xCu);
      }
    }

    else
    {
      if (v28)
      {
        uint64_t v30 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v39 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - initializing SubscriptionRequestHandler",  buf,  0xCu);
      }

      uint64_t v31 = objc_alloc(&OBJC_CLASS___SubscriptionRequestHandler);
      uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
      uint64_t v32 = -[SubscriptionRequestHandler initWithConfiguration:](v31, "initWithConfiguration:", v18);
      uint64_t v33 = *(void *)(a1 + 32);
      id v34 = *(void **)(v33 + 72);
      *(void *)(v33 + 72) = v32;
    }
  }

  else
  {
    id v8 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v39 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - initializing JaliscoRequestHandler",  buf,  0xCu);
    }

    uint64_t v10 = objc_alloc(&OBJC_CLASS___JaliscoRequestHandler);
    int v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    uint64_t v12 = -[JaliscoRequestHandler initWithConfiguration:updateTaskHelper:]( v10,  "initWithConfiguration:updateTaskHelper:",  v11,  *(void *)(a1 + 32));
    uint64_t v13 = *(void *)(a1 + 32);
    id v14 = *(void **)(v13 + 64);
    *(void *)(v13 + 64) = v12;

    id v15 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v39 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - initializing SubscriptionRequestHandler",  buf,  0xCu);
    }

    int v17 = objc_alloc(&OBJC_CLASS___SubscriptionRequestHandler);
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    uint64_t v19 = -[SubscriptionRequestHandler initWithConfiguration:](v17, "initWithConfiguration:", v18);
    uint64_t v20 = *(void *)(a1 + 32);
    unsigned int v21 = *(void **)(v20 + 72);
    *(void *)(v20 + 72) = v19;
  }

  uint64_t v35 = *(void **)(a1 + 32);
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472LL;
  v37[2] = sub_100015848;
  v37[3] = &unk_1001A6B90;
  v37[4] = v35;
  return [v35 _reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:1 completionHandler:v37];
}

void sub_100015848(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Start observing subscription status changed notification",  buf,  0xCu);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v4 addObserver:*(void *)(a1 + 32) selector:"_handleMusicSubscriptionStatusDidChangeNotification:" name:ICMusicSubscriptionStatusDidChangeNotification object:0];

  *(_BYTE *)(*(void *)(a1 + 32) + 148LL) = 1;
  dispatch_time_t v5 = dispatch_time(0x8000000000000000LL, 120000000000LL);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(dispatch_queue_s **)(v6 + 88);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000159A0;
  block[3] = &unk_1001A6B90;
  void block[4] = v6;
  dispatch_after(v5, v7, block);
}

void sub_1000159A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(_BYTE *)(v2 + 146)
    || *(int *)(v2 + 136) > 0
    || ![(id)v2 isActive]
    || (uint64_t v3 = *(void **)(a1 + 32), v3[10] == 1LL))
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      dispatch_time_t v5 = *(unsigned __int8 **)(a1 + 32);
      int v6 = v5[146];
      unsigned int v7 = [v5 isActive];
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(v8 + 80);
      LODWORD(v_Block_object_dispose((const void *)(v31 - 176), 8) = *(_DWORD *)(v8 + 136);
      int v10 = 138544386;
      int v11 = v5;
      __int16 v12 = 1024;
      int v13 = v6;
      __int16 v14 = 1024;
      unsigned int v15 = v7;
      __int16 v16 = 1024;
      int v17 = v9;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - skipping additional subscription status check isPendingAuthentication=%{BOOL}u, isHandlerActive=%{B OOL}u, musicSubscriptionCheckStatus=%d, deauthOperationCount=%d ",  (uint8_t *)&v10,  0x24u);
    }
  }

  else
  {
    [v3 _reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:5 completionHandler:0];
  }

void sub_100015B20(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 152LL);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 40)));
  id v9 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKey:v3]);

  LODWORD(v4) = *(_DWORD *)(a1 + 48);
  dispatch_time_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](&OBJC_CLASS___NSNumber, "numberWithFloat:", v4));
  if (v9) {
    [v9 setObject:v5 forKey:@"ICDCloudLibrarySyncProgressKey"];
  }
  else {
    id v9 = (id)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithObjectsAndKeys:",  v5,  @"ICDCloudLibrarySyncProgressKey",  0LL));
  }

  uint64_t v6 = *(void *)(a1 + 40);
  unsigned int v7 = *(void **)(*(void *)(a1 + 32) + 152LL);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v6));
  [v7 setObject:v9 forKey:v8];
}

id sub_100015C34(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = @"Unknown";
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4 == 1) {
      uint64_t v3 = @"Saga";
    }
    BOOL v5 = v4 == 0;
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543874;
    if (v5) {
      uint64_t v3 = @"Jalisco";
    }
    uint64_t v38 = v6;
    __int16 v39 = 2114;
    id v40 = v3;
    __int16 v41 = 2114;
    uint64_t v42 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ finished update operation for %{public}@ library, response=%{public}@",  buf,  0x20u);
  }

  uint64_t v8 = *(void **)(*(void *)(a1 + 32) + 152LL);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 48)));
  [v8 removeObjectForKey:v9];

  int v10 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) objectForKey:@"ICDCloudMusicLibraryProgressUpdateOperationStatusKey"]);
  id v11 = [v10 integerValue];

  if (*(void *)(a1 + 48) == 1LL)
  {
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) objectForKey:@"ICDCloudMusicLibraryProgressRequestReasonKey"]);
    id v13 = [v12 integerValue];

    if (v11 == (id)5)
    {
      unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) objectForKey:@"ICDCloudMusicLibraryProgressTemporaryFialureTypeKey"]);
      __int16 v16 = v15;
      if (v15)
      {
        id v17 = [v15 integerValue];
        id v18 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
        int v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v17));
        sub_1000C2890(v18, v19, 1LL, 0LL);
      }
    }

    else
    {
      if (v11 == (id)3)
      {
        *(_BYTE *)(*(void *)(a1 + 32) + 144LL) = 0;
        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) objectForKey:@"ICDCloudMusicLibraryProgressWasExplicitUserActionKey"]);
        unsigned __int8 v23 = [v22 BOOLValue];

        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) objectForKey:@"ICDCloudMusicLibraryProgressWasInitialImportKey"]);
        unsigned __int8 v25 = [v24 BOOLValue];

        __int16 v26 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 40) objectForKey:@"ICDCloudMusicLibraryProgressPermanentFailureTypeKey"]);
        id v27 = [v26 integerValue];

        BOOL v28 = *(void **)(a1 + 32);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v28 configuration]);
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v29 clientIdentity]);
        v34[0] = _NSConcreteStackBlock;
        v34[1] = 3221225472LL;
        v34[2] = sub_100016030;
        v34[3] = &unk_1001A1DC0;
        unsigned __int8 v35 = v23;
        unsigned __int8 v36 = v25;
        v34[4] = *(void *)(a1 + 32);
        v34[5] = v27;
        [v28 disableCloudLibraryWithClientIdentity:v30 reason:v27 completionHandler:v34];

        return [*(id *)(a1 + 32) _postLibraryUpdateProgressChangedForLibraryType:*(void *)(a1 + 48)];
      }

      if (v11 == (id)1)
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 132LL) = 0;
        uint64_t v14 = *(void *)(a1 + 32);
LABEL_16:
        *(_BYTE *)(v14 + 144) = 0;
        return [*(id *)(a1 + 32) _postLibraryUpdateProgressChangedForLibraryType:*(void *)(a1 + 48)];
      }
    }

    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    id v21 = [v20 sagaOnDiskDatabaseRevision];

    uint64_t v14 = *(void *)(a1 + 32);
    if (v21) {
      goto LABEL_16;
    }
    ++*(_DWORD *)(v14 + 132);
    uint64_t v31 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v32 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v38 = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - scheduling initial cloud library update",  buf,  0xCu);
    }

    [*(id *)(a1 + 32) _enqueueCloudUpdateLibraryOperationForReason:v13];
  }

  return [*(id *)(a1 + 32) _postLibraryUpdateProgressChangedForLibraryType:*(void *)(a1 + 48)];
}

void sub_100016030(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(_BYTE *)(a1 + 48)
    && *(_BYTE *)(a1 + 49)
    && MSVDeviceSupportsSideLoadedMediaContent()
    && *(void *)(a1 + 40) == -2LL)
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v19 = 138543618;
      uint64_t v20 = v5;
      __int16 v21 = 1024;
      int v22 = -2;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Showing system dialog for enable cloud library error code=%d",  (uint8_t *)&v19,  0x12u);
    }

    int v6 = MGGetSInt32Answer(@"DeviceClassNumber", 0xFFFFFFFFLL);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mediaPlayerBundle](&OBJC_CLASS___NSBundle, "mediaPlayerBundle"));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( [v7 localizedStringForKey:@"ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_TITLE" value:&stru_1001A7960 table:@"MediaPlayer"]);

    if (v6 == 2)
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mediaPlayerBundle](&OBJC_CLASS___NSBundle, "mediaPlayerBundle"));
      int v10 = v9;
      id v11 = @"ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPOD";
    }

    else
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mediaPlayerBundle](&OBJC_CLASS___NSBundle, "mediaPlayerBundle"));
      int v10 = v9;
      if (v6 == 3) {
        id v11 = @"ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPAD";
      }
      else {
        id v11 = @"ENABLE_SYNC_LIBRARY_FAILED_TOO_MANY_ITEMS_MESSAGE_IPHONE";
      }
    }

    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v9 localizedStringForKey:v11 value:&stru_1001A7960 table:@"MediaPlayer"]);

    if (![v8 length] && !objc_msgSend(v12, "length"))
    {
      id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
      id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void CloudLibraryUtilitiesShowFailedToEnableCloudLibrarySystemDialog(ICCloudLibraryUtilitiesDisableICMLReason)"));
      [v17 handleFailureInFunction:v18 file:@"CloudLibraryUtilities.m" lineNumber:105 description:@"Either alertHeader or alertMessage is required."];
    }

    id v13 = objc_alloc_init(&OBJC_CLASS___MSVSystemDialogOptions);
    [v13 setAlertHeader:v8];
    [v13 setAlertMessage:v12];
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mediaPlayerBundle](&OBJC_CLASS___NSBundle, "mediaPlayerBundle"));
    unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue( [v14 localizedStringForKey:@"OK" value:&stru_1001A7960 table:@"MediaPlayer"]);
    [v13 setDefaultButtonTitle:v15];

    [v13 setForceModalAlertAppearance:1];
    id v16 = [[MSVSystemDialog alloc] initWithOptions:v13];
    [v16 presentWithCompletion:0];
  }
}

void sub_10001631C(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = @"Unknown";
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5 == 1) {
      id v3 = @"Saga";
    }
    int v6 = *(unsigned __int8 *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    if (!v5) {
      id v3 = @"Jalisco";
    }
    uint64_t v12 = v4;
    __int16 v13 = 2114;
    uint64_t v14 = v3;
    __int16 v15 = 1024;
    int v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ starting update operation for %{public}@ library, initialImport=%{BOOL}u",  buf,  0x1Cu);
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithObjectsAndKeys:",  v7,  @"ICDCloudLibraryIsInitialImportKey",  0LL));

  id v9 = *(void **)(*(void *)(a1 + 32) + 152LL);
  int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 40)));
  [v9 setObject:v8 forKey:v10];

  [*(id *)(a1 + 32) _postLibraryUpdateProgressChangedForLibraryType:*(void *)(a1 + 40)];
}

void sub_10001649C(uint64_t a1, char a2, int a3, void *a4)
{
  id v7 = a4;
  uint64_t v8 = v7;
  if ((a2 & 1) != 0 || a3)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_17;
      }
      uint64_t v15 = *(void *)(a1 + 32);
      int v16 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
      int v23 = 138543618;
      uint64_t v24 = v15;
      __int16 v25 = 1024;
      LODWORD(v26) = v16;
      uint64_t v12 = "%{public}@ - user is a subscriber and locker bit is set. includeMediaKindSong=%{BOOL}u";
    }

    else
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 0;
      id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_17;
      }
      uint64_t v17 = *(void *)(a1 + 32);
      int v18 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
      int v23 = 138543618;
      uint64_t v24 = v17;
      __int16 v25 = 1024;
      LODWORD(v26) = v18;
      uint64_t v12 = "%{public}@ - user is a subscriber and locker bit is NOT set. includeMediaKindSong=%{BOOL}u";
    }

    goto LABEL_15;
  }

  if (!v7)
  {
    if (MSVDeviceSupportsSideLoadedMediaContent())
    {
      int v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 jaliscoLastExcludedMediaKinds]);
      *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v20 containsObject:&off_1001B39B8] ^ 1;
    }

    id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    uint64_t v21 = *(void *)(a1 + 32);
    int v22 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
    int v23 = 138543618;
    uint64_t v24 = v21;
    __int16 v25 = 1024;
    LODWORD(v26) = v22;
    uint64_t v12 = "%{public}@ - user is a NOT a subscriber. includeMediaKindSong=%{BOOL}u";
LABEL_15:
    __int16 v13 = v9;
    uint32_t v14 = 18;
    goto LABEL_16;
  }

  id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL);
    int v23 = 138543874;
    uint64_t v24 = v10;
    __int16 v25 = 2114;
    __int16 v26 = v8;
    __int16 v27 = 1024;
    int v28 = v11;
    uint64_t v12 = "%{public}@ Error %{public}@ loading subscription status. includeMediaKindSong=%{BOOL}u";
    __int16 v13 = v9;
    uint32_t v14 = 28;
LABEL_16:
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)&v23, v14);
  }

void sub_100016738(void *a1)
{
  uint64_t v2 = *(void **)(a1[4] + 72LL);
  if (v2)
  {
    [v2 loadScreenshotInfoForSubscriptionPersistentIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadScreenshotInfoForSubscriptionPersistentIDs as we don't have a valid SubscriptionRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      int v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001688C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001688C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000168F0(void *a1)
{
  id v2 = *(void **)(a1[4] + 72LL);
  if (v2)
  {
    [v2 loadArtworkInfoForSubscriptionContainerPersistentIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadArtworkInfoForSubscriptionContainerPersistentIDs as we don't have a valid SubscriptionRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      int v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100016A44;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100016A44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100016AA8(void *a1)
{
  id v2 = *(void **)(a1[4] + 72LL);
  if (v2)
  {
    [v2 loadArtworkInfoForSubscriptionItemPersistentIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadArtworkInfoForSubscriptionItemPersistentIDs as we don't have a valid SubscriptionRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      int v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100016BFC;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100016BFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100016C60(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 72LL);
  if (v2)
  {
    [v2 deprioritizeSubscriptionContainerArtworkForPersistentID:*(void *)(a1 + 40)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeSubscriptionContainerArtworkForPersistentID as we don't have a valid Subscript ionRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_100016D50(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 72LL);
  if (v2)
  {
    [v2 deprioritizeSubscriptionScreenshotForPersistentID:*(void *)(a1 + 40)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeSubscriptionScreenshotForPersistentID as we don't have a valid SubscriptionRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_100016E40(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 72LL);
  if (v2)
  {
    [v2 deprioritizeSubscriptionItemArtworkForPersistentID:*(void *)(a1 + 40)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeSubscriptionItemArtworkForPersistentID as we don't have a valid SubscriptionRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_100016F30(void *a1)
{
  id v2 = *(void **)(a1[4] + 72LL);
  if (v2)
  {
    [v2 importContainerArtworkForPersistentID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importContainerArtworkForPersistentID as we don't have a valid SubscriptionRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100017084;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100017084(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000170E4(void *a1)
{
  id v2 = *(void **)(a1[4] + 72LL);
  if (v2)
  {
    [v2 importScreenshotForPersistentID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importScreenshotForPersistentID as we don't have a valid SubscriptionRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100017238;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100017238(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100017298(void *a1)
{
  id v2 = *(void **)(a1[4] + 72LL);
  if (v2)
  {
    [v2 importItemArtworkForPersistentID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importItemArtworkForPersistentID as we don't have a valid SubscriptionRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000173EC;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_1000173EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001744C(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 hideItemsWithPurchaseHistoryIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring hideItemsWithPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000175A0;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_1000175A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100017600(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 64LL);
  if (v2)
  {
    [v2 loadMissingArtworkWithClientIdentity:*(void *)(a1 + 40)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v8 = 138543362;
      uint64_t v9 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadMissingArtwork as we don't have a valid JaliscoRequestHandler",  (uint8_t *)&v8,  0xCu);
    }
  }

  int v5 = *(void **)(*(void *)(a1 + 32) + 72LL);
  if (v5)
  {
    [v5 loadMissingArtworkWithClientIdentity:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138543362;
      uint64_t v9 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadMissingArtwork as we don't have a valid SubscriptionRequestHandler",  (uint8_t *)&v8,  0xCu);
    }
  }

void sub_100017750(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 loadBooksForStoreIDs:a1[5] clientIdentity:a1[6] withCompletionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadBooksForStoreIDs as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000178A4;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_1000178A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100017908(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    _[v2 isMediaKindDisabledForJaliscoLibrary:a1[7] withClientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring isMediaKindDisabledForJaliscoLibrary as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100017A5C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100017A5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100017AC0(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 loadScreenshotInfoForPurchaseHistoryIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadScreenshotInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100017C14;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100017C14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100017C78(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 loadArtworkInfoForPurchaseHistoryIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadArtworkInfoForPurchaseHistoryIDs as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100017DCC;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100017DCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100017E30(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 setItemProperties:a1[5] forPurchaseHistoryID:a1[8] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setItemProperties as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100017F84;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100017F84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100017FE4(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 removeLibraryWithClientIdentity:a1[5] completion:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring removeLibraryWithCompletion as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100018134;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100018134(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100018194(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 64LL);
  if (v2)
  {
    [v2 deprioritizeScreenshotForPurchaseHistoryID:*(void *)(a1 + 40)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_100018284(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 64LL);
  if (v2)
  {
    [v2 deprioritizeItemArtworkForPurchaseHistoryID:*(void *)(a1 + 40)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_100018374(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 importScreenshotForPurchaseHistoryID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importScreenshotForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000184C8;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_1000184C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100018528(void *a1)
{
  id v2 = *(void **)(a1[4] + 64LL);
  if (v2)
  {
    [v2 importItemArtworkForPurchaseHistoryID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importItemArtworkForPurchaseHistoryID as we don't have a valid JaliscoRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001867C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001867C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000186DC(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 resetInvitationURLForCollaborationWithPersistentID:a1[6] completion:a1[5]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring request to remove a collaborator, as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[5];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001882C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001882C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100018890(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 removeCollaborators:a1[5] fromCollaborationWithPersistentID:a1[7] completion:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring request to remove a collaborator, as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000189E4;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_1000189E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100018A44(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56LL);
  if (v2)
  {
    [v2 respondToPendingCollaborator:*(void *)(a1 + 40) onCollaborationWithPersistentID:*(void *)(a1 + 56) withApproval:*(unsigned __int8 *)(a1 + 64) completion:*(void *)(a1 + 48)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring request to respond to a collaborator, as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = *(void **)(a1 + 48);
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100018B9C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100018B9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100018BFC(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 joinCollaborationWithGlobalPlaylistID:a1[5] invitationURL:a1[6] completion:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring join collaboration request, as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100018D50;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100018D50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100018DB4(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 editCollaborationWithPersistentID:a1[8] properties:a1[5] trackEdits:a1[6] completion:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring edit collaboration request, as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100018F08;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100018F08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100018F68(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 endCollaborationWithPersistentID:a1[6] completion:a1[5]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring end collaboration request, as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[5];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000190B8;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_1000190B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001911C(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 beginCollaborationUsingPlaylistWithPersistentID:a1[6] sharingMode:a1[7] completion:a1[5]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring start collaboration request, as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[5];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019270;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100019270(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_1000192D4(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2 && a1[7] && a1[8])
  {
    objc_msgSend(v2, "favoriteEntityWithPersistentID:sagaID:entityType:time:completionHandler:");
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = NSStringFromICFavoriteMediaEntityType(a1[9]);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      uint64_t v7 = a1[7];
      uint64_t v8 = a1[8];
      *(_DWORD *)buf = 138544130;
      uint64_t v14 = v4;
      __int16 v15 = 2114;
      int v16 = v6;
      __int16 v17 = 2048;
      uint64_t v18 = v7;
      __int16 v19 = 2048;
      uint64_t v20 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignore favoriting entityType=%{public}@ with sagaID=%lld, persistentID=%lld as we don't have a vali d SagaRequestHandler OR the identifiers are invalid",  buf,  0x2Au);
    }

    uint64_t v9 = (void *)a1[6];
    if (v9)
    {
      uint64_t v10 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001947C;
      block[3] = &unk_1001A6BE0;
      id v12 = v9;
      dispatch_async(v10, block);
    }
  }

void sub_10001947C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000194DC(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2 && a1[5] && a1[8])
  {
    objc_msgSend(v2, "favoriteArtistWithPersistentID:cloudLibraryID:time:completionHandler:");
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = a1[5];
      uint64_t v6 = a1[8];
      *(_DWORD *)buf = 138543874;
      uint64_t v12 = v4;
      __int16 v13 = 2114;
      uint64_t v14 = v5;
      __int16 v15 = 2048;
      uint64_t v16 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignore favoriting artist with cloudLibraryID=%{public}@, persistentID=%lld  as we don't have a vali d SagaRequestHandler OR the identifiers are invalid",  buf,  0x20u);
    }

    uint64_t v7 = (void *)a1[7];
    if (v7)
    {
      uint64_t v8 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019658;
      block[3] = &unk_1001A6BE0;
      id v10 = v7;
      dispatch_async(v8, block);
    }
  }

void sub_100019658(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000196B8(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2 && a1[5] && a1[8])
  {
    objc_msgSend(v2, "favoriteAlbumWithPersistentID:cloudLibraryID:time:completionHandler:");
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = a1[5];
      uint64_t v6 = a1[8];
      *(_DWORD *)buf = 138543874;
      uint64_t v12 = v4;
      __int16 v13 = 2114;
      uint64_t v14 = v5;
      __int16 v15 = 2048;
      uint64_t v16 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignore favoriting album with cloudLibraryID=%{public}@, persistentID=%lld as we don't have a valid SagaRequestHandler OR the identifiers are invalid",  buf,  0x20u);
    }

    uint64_t v7 = (void *)a1[7];
    if (v7)
    {
      uint64_t v8 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019834;
      block[3] = &unk_1001A6BE0;
      id v10 = v7;
      dispatch_async(v8, block);
    }
  }

void sub_100019834(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100019894(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2 && a1[8] && a1[5])
  {
    objc_msgSend(v2, "favoritePlaylistWithPersistentID:globalID:time:completionHandler:");
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = a1[5];
      uint64_t v6 = a1[8];
      *(_DWORD *)buf = 138543874;
      uint64_t v12 = v4;
      __int16 v13 = 2114;
      uint64_t v14 = v5;
      __int16 v15 = 2048;
      uint64_t v16 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignore favoriting playlist with globalID=%{public}@, persistentID=%lld as we don't have a valid Sag aRequestHandler OR the identifiers are invalid",  buf,  0x20u);
    }

    uint64_t v7 = (void *)a1[7];
    if (v7)
    {
      uint64_t v8 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019A10;
      block[3] = &unk_1001A6BE0;
      id v10 = v7;
      dispatch_async(v8, block);
    }
  }

void sub_100019A10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100019A70(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2 && a1[7] && a1[8])
  {
    objc_msgSend(v2, "favoriteEntityWithPersistentID:storeID:entityType:time:completionHandler:");
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = NSStringFromICFavoriteMediaEntityType(a1[9]);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      uint64_t v8 = a1[7];
      uint64_t v7 = a1[8];
      *(_DWORD *)buf = 138544130;
      uint64_t v14 = v4;
      __int16 v15 = 2114;
      uint64_t v16 = v6;
      __int16 v17 = 2048;
      uint64_t v18 = v7;
      __int16 v19 = 2048;
      uint64_t v20 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignore favoriting entityType=%{public}@ with storeID=%lld, persistentID=%lld as we don't have a val id SagaRequestHandler OR the identifiers are invalid",  buf,  0x2Au);
    }

    uint64_t v9 = (void *)a1[6];
    if (v9)
    {
      id v10 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019C18;
      block[3] = &unk_1001A6BE0;
      id v12 = v9;
      dispatch_async(v10, block);
    }
  }

void sub_100019C18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_100019C78(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32),  0LL);
}

uint64_t sub_100019C8C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  *(void *)(a1 + 32));
}

uint64_t sub_100019CA0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  *(void *)(a1 + 32));
}

void sub_100019CB4(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 loadScreenshotInfoForSagaIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadScreenshotInfoForSagaIDs as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019E08;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100019E08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_100019E6C(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 loadArtworkInfoForContainerSagaIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadArtworkInfoForContainerSagaIDs as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100019FC0;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_100019FC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001A024(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 loadArtworkInfoForSagaIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadArtworkInfoForSagaIDs as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001A178;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001A178(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001A1DC(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 loadGeniusItemsForSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring loadGeniusItemsForSagaID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001A330;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001A330(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001A394(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56LL);
  if (v2)
  {
    [v2 updateSubscribedPlaylistsWithSagaIDs:*(void *)(a1 + 40) ignoreMinRefreshInterval:*(unsigned __int8 *)(a1 + 72) requestReason:*(void *)(a1 + 64) pinnedOnly:*(unsigned __int8 *)(a1 + 73) clientIdentity:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring updateSubscribedPlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = *(void **)(a1 + 56);
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001A4F0;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001A4F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001A550(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 updatePlaylistPlayDataWithClientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring updatePlaylistPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001A6A0;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001A6A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001A700(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 updateItemPlayDataWithClientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring updateItemPlayDataWithCompletionHandler as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001A850;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001A850(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001A8B0(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 setAlbumArtistProperties:a1[5] withArtistPersistentID:a1[8] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setAlbumArtistProperties as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001AA04;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001AA04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001AA64(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 setAlbumEntityProperties:a1[5] withAlbumPersistentID:a1[8] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setAlbumProperties as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001ABB8;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001ABB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001AC18(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 setAlbumProperties:a1[5] forItemsWithAlbumPersistentID:a1[8] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setAlbumItemProperties as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001AD6C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001AD6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001ADCC(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 setItemProperties:a1[5] forSagaID:a1[8] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setItemProperties as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001AF20;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001AF20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001AF80(void *a1)
{
  if (!*(void *)(a1[4] + 56LL))
  {
    id v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v26 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setCloudFavoriteSongAddToLibraryBehavior as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v4 = (void *)a1[6];
    if (!v4) {
      return;
    }
    uint64_t v5 = *(dispatch_queue_s **)(a1[4] + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10001B394;
    block[3] = &unk_1001A6BE0;
    id v20 = v4;
    dispatch_async(v5, block);
    uint64_t v6 = v20;
LABEL_17:

    return;
  }

  if (!_os_feature_enabled_impl("MediaPlayer", "AddToLibraryWhenFavoriting"))
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = a1[4];
      uint64_t StringForAddToLibraryBehavior = ICCloudClientGetStringForAddToLibraryBehavior(a1[7]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(StringForAddToLibraryBehavior);
      *(_DWORD *)buf = 138543618;
      uint64_t v26 = v8;
      __int16 v27 = 2114;
      int v28 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setCloudFavoriteSongAddToLibraryBehavior as %{public}@ feature is not enabled",  buf,  0x16u);
    }

    int v11 = (void *)a1[6];
    if (!v11) {
      return;
    }
    id v12 = *(dispatch_queue_s **)(a1[4] + 96LL);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    v21[2] = sub_10001B334;
    v21[3] = &unk_1001A6BE0;
    id v22 = v11;
    dispatch_async(v12, v21);
    uint64_t v6 = v22;
    goto LABEL_17;
  }

  if (a1[7])
  {
    objc_msgSend(*(id *)(a1[4] + 56), "setCloudFavoriteSongAddToLibraryBehavior:clientIdentity:completionHandler:");
    return;
  }

  __int16 v13 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = a1[4];
    uint64_t v15 = ICCloudClientGetStringForAddToLibraryBehavior(a1[7]);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    *(_DWORD *)buf = 138543618;
    uint64_t v26 = v14;
    __int16 v27 = 2114;
    int v28 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setCloudFavoriteSongAddToLibraryBehavior as %{public}@ is not a valid behavior",  buf,  0x16u);
  }

  __int16 v17 = (void *)a1[6];
  if (v17)
  {
    uint64_t v18 = *(dispatch_queue_s **)(a1[4] + 96LL);
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_10001B2D4;
    v23[3] = &unk_1001A6BE0;
    id v24 = v17;
    dispatch_async(v18, v23);
    uint64_t v6 = v24;
    goto LABEL_17;
  }

void sub_10001B2D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001B334(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001B394(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001B3F4(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 setCloudAddToPlaylistBehavior:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setCloudAddToPlaylistBehavior as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001B548;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001B548(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001B5A8(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 setPlaylistProperties:a1[5] trackList:a1[6] forPlaylistPersistentID:a1[10] clientIdentity:a1[7] requestingBundleID:a1[8] completionHandler:a1[9]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setPlaylistProperties with bundleID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[9];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001B700;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001B700(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001B760(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 setPlaylistProperties:a1[5] trackList:a1[6] forPlaylistPersistentID:a1[9] clientIdentity:a1[7] completionHandler:a1[8]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring setPlaylistProperties as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[8];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001B8B8;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001B8B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001B918(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addStorePlaylistWithGlobalID:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addStorePlaylistWithGlobalID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001BA6C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001BA6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001BAD0(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addStoreItemWithOpaqueID:a1[5] requestingBundleID:a1[6] clientIdentity:a1[7] completionHandler:a1[8]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addStoreItemWithOpaqueID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[8];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001BC24;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001BC24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001BC88(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addStoreItemWithAdamID:a1[8] referral:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addStoreItemWithAdamID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001BDDC;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001BDDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001BE40(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addItemWithSagaID:a1[8] toPlaylistWithPersistentID:a1[9] requestingBundleID:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addItemWithSagaID with bundleID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001BF98;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001BF98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001BFF8(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addStoreItemWithOpaqueID:a1[5] toPlaylistWithPersistentID:a1[9] requestingBundleID:a1[6] clientIdentity:a1[7] completionHandler:a1[8]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addStoreItemWithOpaqueID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[8];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001C150;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001C150(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001C1B4(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addItemWithSagaID:a1[7] toPlaylistWithPersistentID:a1[8] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addItemWithSagaID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001C308;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001C308(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001C368(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addStoreItemWithAdamID:a1[8] referral:a1[5] toPlaylistWithPersistentID:a1[9] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addStoreItemWithAdamID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001C4C0;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001C4C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001C520(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 addGeniusPlaylistWithPersistentID:a1[10] name:a1[5] seedItemIDs:a1[6] itemIDs:a1[7] clientIdentity:a1[8] completionHandler:a1[9]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring addGeniusPlaylistWithPersistentID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[9];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001C678;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001C678(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001C6DC(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 uploadArtworkForPlaylistWithPersistentID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring uploadArtworkForPlaylistWithPersistentID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001C830;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001C830(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001C890(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 removePlaylistsWithSagaIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring removePlaylistsWithSagaIDs as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001C9E4;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001C9E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001CA44(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 removeItemsWithSagaIDs:a1[5] clientIdentity:a1[6] completionHandler:a1[7]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring removeItemsWithSagaIDs as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[7];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001CB98;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001CB98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001CBF8(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 publishPlaylistWithSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring publishPlaylistWithSagaID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001CD4C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001CD4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, void, id))(v1 + 16))(v1, 0LL, 0LL, v2);
}

void sub_10001CDB4(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 createPlaylistWithPersistentID:a1[10] properties:a1[5] trackList:a1[6] requestingBundleID:a1[7] clientIdentity:a1[8] completionHandler:a1[9]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring createPlaylistWithPersistentID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[9];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001CF0C;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001CF0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001CF70(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 createPlaylistWithPersistentID:a1[9] properties:a1[5] trackList:a1[6] clientIdentity:a1[7] completionHandler:a1[8]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring createPlaylistWithPersistentID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    uint64_t v5 = (void *)a1[8];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001D0C8;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001D0C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10001D12C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56LL);
  if (v2)
  {
    [v2 deprioritizeContainerArtworkForSagaID:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeContainerArtworkForSagaID as we don't have a valid SagaRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_10001D21C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56LL);
  if (v2)
  {
    [v2 deprioritizeScreenshotForSagaID:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeScreenshotForSagaID as we don't have a valid SagaRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_10001D30C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56LL);
  if (v2)
  {
    [v2 deprioritizeItemArtworkForSagaID:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138543362;
      uint64_t v6 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring deprioritizeItemArtworkForSagaID as we don't have a valid SagaRequestHandler",  (uint8_t *)&v5,  0xCu);
    }
  }

void sub_10001D3FC(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 importContainerArtworkForSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importContainerArtworkForSagaID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001D550;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001D550(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001D5B0(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 importScreenshotForSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importScreenshotForSagaID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001D704;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001D704(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001D764(void *a1)
{
  id v2 = *(void **)(a1[4] + 56LL);
  if (v2)
  {
    [v2 importItemArtworkForSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ignoring importItemArtworkForSagaID as we don't have a valid SagaRequestHandler",  buf,  0xCu);
    }

    int v5 = (void *)a1[6];
    if (v5)
    {
      uint64_t v6 = *(dispatch_queue_s **)(a1[4] + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001D8B8;
      block[3] = &unk_1001A6BE0;
      id v8 = v5;
      dispatch_async(v6, block);
    }
  }

void sub_10001D8B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001D918(uint64_t a1)
{
  float v3 = v2;
  if (*(void *)(a1 + 48))
  {
    float v4 = v2 + 0.0;
    int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    uint64_t v6 = (uint64_t)[v5 jaliscoOnDiskDatabaseRevision];

    [*(id *)(*(void *)(a1 + 32) + 56) updateProgress];
    float v8 = v7;
    uint64_t v9 = *(void *)(a1 + 32);
    if (*(_BYTE *)(v9 + 144))
    {
      if (v4 == 0.0)
      {
        if (v6 >= 1 && !*(_BYTE *)(v9 + 145)) {
          float v4 = 0.25;
        }
      }

      else if (v4 > 0.25)
      {
        float v4 = 0.25;
      }
    }

    float v15 = v4 + (float)(v7 * 0.75);
    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 48);
      uint64_t v18 = @"Unknown";
      int v19 = *(unsigned __int8 *)(v16 + 144);
      if (v17 == 1) {
        uint64_t v18 = @"Saga";
      }
      int v20 = *(unsigned __int8 *)(v16 + 145);
      *(_DWORD *)buf = 138545154;
      if (v17) {
        uint64_t v21 = v18;
      }
      else {
        uint64_t v21 = @"Jalisco";
      }
      uint64_t v28 = v16;
      __int16 v29 = 2114;
      uint64_t v30 = v21;
      __int16 v31 = 1024;
      *(_DWORD *)uint64_t v32 = v6;
      *(_WORD *)&v32[4] = 1024;
      *(_DWORD *)&v32[6] = v19;
      __int16 v33 = 1024;
      int v34 = v20;
      __int16 v35 = 2048;
      double v36 = v8;
      __int16 v37 = 2048;
      double v38 = v3;
      __int16 v39 = 2048;
      double v40 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, jaliscoDatabaseVersion=%d, havePendingSaga Update=%{BOOL}u, _didManuallyReloadCloudLibrary=%{BOOL}u, sagaUpdateProgress=%f, jaliscoUpdateProgress=%f, progress=%f",  buf,  0x46u);
    }

    float v3 = v15;
  }

  else
  {
    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 48);
      id v12 = @"Unknown";
      if (v11 == 1) {
        id v12 = @"Saga";
      }
      uint64_t v13 = *(void *)(a1 + 32);
      if (v11) {
        uint64_t v14 = v12;
      }
      else {
        uint64_t v14 = @"Jalisco";
      }
      *(_DWORD *)buf = 138543874;
      uint64_t v28 = v13;
      __int16 v29 = 2114;
      uint64_t v30 = v14;
      __int16 v31 = 2048;
      *(double *)uint64_t v32 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - updateProgressForLibraryType for libraryType=%{public}@, progress=%f",  buf,  0x20u);
    }
  }

  id v22 = *(void **)(a1 + 40);
  if (v22)
  {
    int v23 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    v24[2] = sub_10001DC30;
    v24[3] = &unk_1001A1BB8;
    id v25 = v22;
    float v26 = v3;
    dispatch_async(v23, v24);
  }

uint64_t sub_10001DC30(uint64_t a1)
{
  return (*(uint64_t (**)(void, float))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(float *)(a1 + 40));
}

id sub_10001DC44(uint64_t a1)
{
  if (*(void *)(a1 + 40) == 1LL) {
    uint64_t v1 = &OBJC_IVAR___ICDCloudMusicLibraryRequestHandler__sagaRequestHandler;
  }
  else {
    uint64_t v1 = &OBJC_IVAR___ICDCloudMusicLibraryRequestHandler__jaliscoRequestHandler;
  }
  return [*(id *)(*(void *)(a1 + 32) + *v1) cancelPendingChanges];
}

void sub_10001DC6C(uint64_t a1)
{
  if (*(void *)(a1 + 48) == 1LL)
  {
    [*(id *)(*(void *)(a1 + 32) + 56) addBackgroundOperation:*(void *)(a1 + 40) priority:*(unsigned int *)(a1 + 56)];
  }

  else
  {
    float v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      uint64_t v4 = *(void *)(a1 + 40);
      int v5 = 138543618;
      uint64_t v6 = v3;
      __int16 v7 = 2048;
      uint64_t v8 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Unsupported request to add background operation (%p) for Jalisco library",  (uint8_t *)&v5,  0x16u);
    }
  }

id sub_10001DD70(uint64_t a1)
{
  if (*(void *)(a1 + 48) == 1LL) {
    uint64_t v1 = &OBJC_IVAR___ICDCloudMusicLibraryRequestHandler__sagaRequestHandler;
  }
  else {
    uint64_t v1 = &OBJC_IVAR___ICDCloudMusicLibraryRequestHandler__jaliscoRequestHandler;
  }
  return [*(id *)(*(void *)(a1 + 32) + *v1) addOperation:*(void *)(a1 + 40) priority:*(unsigned int *)(a1 + 56)];
}

void sub_10001DDA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 64);
  if (v3)
  {
    if (*(_BYTE *)(v2 + 148))
    {
      [v3 updateLibraryWithClientIdentity:*(void *)(a1 + 40) reason:*(void *)(a1 + 56) completionHandler:*(void *)(a1 + 48)];
      return;
    }

    uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v23 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Deferring jalisco library update as the handler has not finished initial setup",  buf,  0xCu);
    }

    dispatch_time_t v11 = dispatch_time(0x8000000000000000LL, 60000000000LL);
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void **)(a1 + 40);
    uint64_t v14 = *(dispatch_queue_s **)(v12 + 88);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_10001E004;
    v18[3] = &unk_1001A1CD0;
    uint64_t v15 = *(void *)(a1 + 56);
    v18[4] = v12;
    uint64_t v21 = v15;
    id v19 = v13;
    id v20 = *(id *)(a1 + 48);
    dispatch_after(v11, v14, v18);

    uint64_t v8 = v19;
    goto LABEL_11;
  }

  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v23 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Not updating jalisco library as the handler is nil",  buf,  0xCu);
  }

  uint64_t v6 = *(void **)(a1 + 48);
  if (v6)
  {
    __int16 v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10001E0E8;
    block[3] = &unk_1001A6BE0;
    id v17 = v6;
    dispatch_async(v7, block);
    uint64_t v8 = v17;
LABEL_11:
  }

id sub_10001E004(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t StringForRequestReason = ICCloudClientGetStringForRequestReason(*(void *)(a1 + 56));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(StringForRequestReason);
    int v7 = 138543618;
    uint64_t v8 = v3;
    __int16 v9 = 2114;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Starting to update jalisco library for reason=%{public}@",  (uint8_t *)&v7,  0x16u);
  }

  return [*(id *)(a1 + 32) updateJaliscoLibraryWithClientIdentity:*(void *)(a1 + 40) forReason:*(void *)(a1 + 56) completionHandler:*(void *)(a1 + 48)];
}

void sub_10001E0E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001E148(uint64_t a1)
{
  if (*(void *)(a1 + 56) == 4LL
    && (id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]),
        uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 sagaAccountID]),
        id v4 = [v3 longLongValue],
        v3,
        v2,
        !v4))
  {
    id v19 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v33 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Ignoring request for periodic poll because ICML is not enabled",  buf,  0xCu);
    }

    uint64_t v21 = *(void **)(a1 + 48);
    if (v21)
    {
      id v22 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472LL;
      v30[2] = sub_10001E4C8;
      v30[3] = &unk_1001A6BE0;
      id v31 = v21;
      dispatch_async(v22, v30);
      dispatch_time_t v11 = v31;
      goto LABEL_17;
    }
  }

  else
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(v5 + 56);
    if (v6)
    {
      if (*(_BYTE *)(v5 + 148))
      {
        [v6 updateLibraryWithClientIdentity:*(void *)(a1 + 40) reason:*(void *)(a1 + 56) allowNoisyAuthPrompt:*(unsigned __int8 *)(a1 + 64) isExplicitUserAction:*(unsigned __int8 *)(a1 + 65) completionHandler:*(void *)(a1 + 48)];
        return;
      }

      uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v33 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Deferring saga library update as the handler has not finished initial setup",  buf,  0xCu);
      }

      dispatch_time_t v14 = dispatch_time(0x8000000000000000LL, 60000000000LL);
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void **)(a1 + 40);
      id v17 = *(dispatch_queue_s **)(v15 + 88);
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472LL;
      void v25[2] = sub_10001E528;
      v25[3] = &unk_1001A1B68;
      uint64_t v18 = *(void *)(a1 + 56);
      v25[4] = v15;
      uint64_t v28 = v18;
      id v26 = v16;
      __int16 v29 = *(_WORD *)(a1 + 64);
      id v27 = *(id *)(a1 + 48);
      dispatch_after(v14, v17, v25);

      dispatch_time_t v11 = v26;
      goto LABEL_17;
    }

    int v7 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v33 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Not updating saga library as the handler is nil",  buf,  0xCu);
    }

    __int16 v9 = *(void **)(a1 + 48);
    if (v9)
    {
      uint64_t v10 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001E614;
      block[3] = &unk_1001A6BE0;
      id v24 = v9;
      dispatch_async(v10, block);
      dispatch_time_t v11 = v24;
LABEL_17:
    }
  }

void sub_10001E4C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

id sub_10001E528(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t StringForRequestReason = ICCloudClientGetStringForRequestReason(*(void *)(a1 + 56));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(StringForRequestReason);
    int v7 = 138543618;
    uint64_t v8 = v3;
    __int16 v9 = 2114;
    uint64_t v10 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Starting to update saga library for reason=%{public}@",  (uint8_t *)&v7,  0x16u);
  }

  return [*(id *)(a1 + 32) updateSagaLibraryWithClientIdentity:*(void *)(a1 + 40) forReason:*(void *)(a1 + 56) allowNoisyAuthPrompt:*(unsigned __int8 *)(a1 + 64) isExplicitUserAction:*(unsigned __int8 *)(a1 + 65) completionHandler:*(void *)(a1 + 48)];
}

void sub_10001E614(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001E674(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 152) objectForKey:&off_1001B3988]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*((id *)*v2 + 19) objectForKey:&off_1001B39A0]);
  uint64_t v38 = 0LL;
  __int16 v39 = &v38;
  uint64_t v40 = 0x2020000000LL;
  char v41 = 0;
  uint64_t v34 = 0LL;
  __int16 v35 = &v34;
  uint64_t v36 = 0x2020000000LL;
  char v37 = 0;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*v2 musicLibrary]);
  if ([v5 jaliscoOnDiskDatabaseRevision]) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = v4 == 0LL;
  }
  int v7 = !v6;

  uint64_t v8 = *(void **)(a1 + 32);
  if ((v8[10] | 2LL) == 2)
  {
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue([v8 userIdentityStore]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472LL;
    v27[2] = sub_10001E9B8;
    v27[3] = &unk_1001A1B40;
    uint64_t v30 = &v34;
    BOOL v32 = v4 != 0LL;
    id v11 = v3;
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void **)(a1 + 40);
    v28[0] = v11;
    v28[1] = v12;
    id v31 = &v38;
    char v33 = v7;
    id v29 = v13;
    [v9 getPropertiesForUserIdentity:v10 completionHandler:v27];

    dispatch_time_t v14 = (id *)v28;
LABEL_13:

    goto LABEL_14;
  }

  uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = *(void *)(a1 + 32);
    int v17 = *((unsigned __int8 *)v35 + 24);
    int v18 = *(unsigned __int8 *)(v16 + 144);
    uint64_t v19 = *(void *)(v16 + 80);
    int v20 = *((unsigned __int8 *)v39 + 24);
    *(_DWORD *)buf = 138544898;
    uint64_t v43 = v16;
    __int16 v44 = 1024;
    int v45 = v17;
    __int16 v46 = 1024;
    int v47 = v20;
    __int16 v48 = 1024;
    BOOL v49 = v4 != 0LL;
    __int16 v50 = 1024;
    int v51 = v7;
    __int16 v52 = 1024;
    int v53 = v18;
    __int16 v54 = 1024;
    int v55 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - isUpdatingCloudLibraryWithCompletion sagaUpdateInProgress=%{BOOL}u, sagaInitialImport=%{BOOL}u, jalis coUpdateInProgress=%{BOOL}u, jaliscoInitialImport=%{BOOL}u, havePendingSagaUpdate=%{BOOL}u, musicSubscriptionCheckStatus=%d",  buf,  0x30u);
  }

  uint64_t v21 = *(void **)(a1 + 40);
  if (v21)
  {
    id v22 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_10001EC48;
    v23[3] = &unk_1001A1B18;
    dispatch_time_t v14 = (id *)v24;
    v24[0] = v21;
    v24[1] = &v34;
    v24[2] = &v38;
    BOOL v25 = v4 != 0LL;
    char v26 = v7;
    dispatch_async(v22, v23);
    goto LABEL_13;
  }

void sub_10001E98C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_10001E9B8(uint64_t a1, void *a2, void *a3)
{
  id v19 = a2;
  id v5 = a3;
  if (!v5 && [v19 isActiveLocker])
  {
    BOOL v6 = *(_BYTE *)(a1 + 72) || *(void *)(a1 + 32) || *(_BYTE *)(*(void *)(a1 + 40) + 144LL) != 0;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v6;
    int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
    if ([v7 sagaOnDiskDatabaseRevision])
    {
      BOOL v8 = 0;
    }

    else if (*(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL))
    {
      BOOL v8 = 1;
    }

    else
    {
      BOOL v8 = *(_BYTE *)(*(void *)(a1 + 40) + 144LL) != 0;
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = v8;
  }

  __int16 v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 40);
    int v11 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);
    int v12 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
    int v13 = *(unsigned __int8 *)(a1 + 72);
    int v14 = *(unsigned __int8 *)(a1 + 73);
    int v15 = *(unsigned __int8 *)(v10 + 144);
    uint64_t v16 = *(void *)(v10 + 80);
    *(_DWORD *)buf = 138545410;
    uint64_t v25 = v10;
    __int16 v26 = 1024;
    int v27 = v11;
    __int16 v28 = 1024;
    int v29 = v12;
    __int16 v30 = 1024;
    int v31 = v13;
    __int16 v32 = 1024;
    int v33 = v14;
    __int16 v34 = 1024;
    int v35 = v15;
    __int16 v36 = 1024;
    int v37 = v16;
    __int16 v38 = 2114;
    id v39 = v5;
    __int16 v40 = 1024;
    unsigned int v41 = [v19 isActiveLocker];
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - isUpdatingCloudLibraryWithCompletion sagaUpdateInProgress=%{BOOL}u, sagaInitialImport=%{BOOL}u, jalis coUpdateInProgress=%{BOOL}u, jaliscoInitialImport=%{BOOL}u, havePendingSagaUpdate=%{BOOL}u, musicSubscriptionCheck Status=%d, error=%{public}@, properties.isActiveLocker-%{BOOL}u",  buf,  0x40u);
  }

  int v17 = *(void **)(a1 + 48);
  if (v17)
  {
    int v18 = *(dispatch_queue_s **)(*(void *)(a1 + 40) + 96LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10001EC74;
    block[3] = &unk_1001A1B18;
    id v21 = v17;
    __int128 v22 = *(_OWORD *)(a1 + 56);
    __int16 v23 = *(_WORD *)(a1 + 72);
    dispatch_async(v18, block);
  }
}

uint64_t sub_10001EC48(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL),  *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL),  *(unsigned __int8 *)(a1 + 56),  *(unsigned __int8 *)(a1 + 57));
}

uint64_t sub_10001EC74(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL),  *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL),  *(unsigned __int8 *)(a1 + 56),  *(unsigned __int8 *)(a1 + 57));
}

id sub_10001ECA0(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 152) count];
  if (result) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = *(_BYTE *)(*(void *)(a1 + 32) + 144LL) != 0;
  }
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v3;
  return result;
}

void sub_10001ED00(uint64_t a1, void *a2)
{
  BOOL v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 userIdentity]);
  [v4 setIdentity:v5];

  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  [v4 setIdentityStore:v6];
}

void sub_10001ED7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = *(void **)(a1 + 40);
  id v4 = *(dispatch_queue_s **)(v2 + 88);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10001EF88;
  v6[3] = &unk_1001A1CD0;
  uint64_t v5 = *(void *)(a1 + 56);
  void v6[4] = v2;
  uint64_t v9 = v5;
  id v7 = v3;
  id v8 = *(id *)(a1 + 48);
  dispatch_async(v4, v6);
}

void sub_10001EE18(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_10001EF78;
    v6[3] = &unk_1001A6BB8;
    id v8 = v4;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_10001EEB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_10001EF68;
    v6[3] = &unk_1001A6BB8;
    id v8 = v4;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_10001EF58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10001EF68(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

uint64_t sub_10001EF78(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10001EF88(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10001F014;
  v6[3] = &unk_1001A1AF0;
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(id *)(a1 + 48);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  [v2 _removeCloudSourcesForReason:v4 withClientIdentity:v3 byDisablingActiveLockerAccount:1 completionHandler:v6];
}

void sub_10001F014(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = *(void **)(a1 + 40);
  if (v5)
  {
    id v6 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    v7[2] = sub_10001F0B4;
    v7[3] = &unk_1001A6BB8;
    id v9 = v5;
    id v8 = v4;
    dispatch_async(v6, v7);
  }
}

uint64_t sub_10001F0B4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10001F0C4(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "Default");
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSError msv_description](v2, "msv_description"));
      int v6 = 138543362;
      id v7 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Automatic download media kind update task completed error=%{public}@",  (uint8_t *)&v6,  0xCu);
    }
  }

  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v6) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Automatic download media kind update task completed",  (uint8_t *)&v6,  2u);
  }
}

void sub_10001F1D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
  [v4 setClientIdentity:*(void *)(a1 + 40)];

  id v5 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 56);
    int v8 = *(unsigned __int8 *)(a1 + 64);
    int v9 = *(unsigned __int8 *)(a1 + 65);
    *(_DWORD *)buf = 138544130;
    uint64_t v22 = v6;
    __int16 v23 = 1024;
    int v24 = v7;
    __int16 v25 = 1024;
    int v26 = v8;
    __int16 v27 = 1024;
    int v28 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Starting to run a subscription status check to enable cloud library with policy=%d startInitialImport =%{BOOL}u, isExplicitUserAction=%{BOOL}u",  buf,  0x1Eu);
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  v14[0] = _NSConcreteStackBlock;
  v14[2] = sub_10001F37C;
  v14[3] = &unk_1001A1AA8;
  int v12 = *(void **)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  v14[4] = *(void *)(a1 + 32);
  uint64_t v18 = v11;
  v14[1] = 3221225472LL;
  id v17 = v12;
  id v15 = v3;
  char v19 = *(_BYTE *)(a1 + 65);
  id v16 = *(id *)(a1 + 40);
  char v20 = *(_BYTE *)(a1 + 64);
  id v13 = v3;
  sub_1000C3C88(v10, v14);
}

void sub_10001F37C(uint64_t a1, int a2, int a3, void *a4)
{
  id v7 = a4;
  if (!v7)
  {
    uint64_t v8 = 2LL;
    if (!(a2 | a3)) {
      uint64_t v8 = 3LL;
    }
    *(void *)(*(void *)(a1 + 32) + 80LL) = v8;
    [*(id *)(a1 + 32) _updateAutomaticDownloadsPreference];
  }

  if ((unint64_t)(*(void *)(a1 + 64) - 1LL) > 1)
  {
    if (!*(_BYTE *)(a1 + 72) && !*(_BYTE *)(a1 + 73))
    {
      int v53 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
      {
        __int16 v54 = *(unsigned __int8 **)(a1 + 32);
        uint64_t v55 = *(void *)(a1 + 64);
        int v56 = v54[146];
        *(_DWORD *)buf = 138543874;
        id v96 = v54;
        __int16 v97 = 1024;
        *(_DWORD *)id v98 = v55;
        *(_WORD *)&v98[4] = 1024;
        *(_DWORD *)&v98[6] = v56;
        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_ERROR,  "%{public}@ - enableCloudLibraryWithClientIdentity called with nothing to enable. enableCloudLibraryPolicy=%d, isPendingAuthentication=%{BOOL}u",  buf,  0x18u);
      }

      id v57 = *(void **)(a1 + 56);
      if (!v57) {
        goto LABEL_12;
      }
      v58 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      id v70 = _NSConcreteStackBlock;
      uint64_t v71 = 3221225472LL;
      v72 = sub_10001FF44;
      uint64_t v73 = &unk_1001A6BE0;
      id v74 = v57;
      dispatch_async(v58, &v70);
      int v14 = v74;
      goto LABEL_11;
    }

    id v15 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = *(unsigned __int8 **)(a1 + 32);
      int v17 = *(unsigned __int8 *)(a1 + 73);
      uint64_t v18 = *(void *)(a1 + 64);
      int v19 = *(unsigned __int8 *)(a1 + 72);
      int v20 = v16[146];
      *(_DWORD *)buf = 138544386;
      id v96 = v16;
      __int16 v97 = 1024;
      *(_DWORD *)id v98 = v17;
      *(_WORD *)&v98[4] = 1024;
      *(_DWORD *)&v98[6] = v18;
      LOWORD(v99) = 1024;
      *(_DWORD *)((char *)&v99 + 2) = v19;
      HIWORD(v99) = 1024;
      int v100 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - User is not subscriber, performing Jalisco import. shouldStartInitialImport=%{BOOL}u, enableCloudLi braryPolicy=%d, isExplicitUserAction=%{BOOL}u, isPendingAuthentication=%{BOOL}u",  buf,  0x24u);
    }

    id v21 = *(void **)(a1 + 32);
    v75[0] = _NSConcreteStackBlock;
    v75[1] = 3221225472LL;
    v75[2] = sub_10001FD90;
    v75[3] = &unk_1001A2068;
    v75[4] = v21;
    uint64_t v22 = *(void *)(a1 + 48);
    id v77 = *(id *)(a1 + 56);
    id v76 = *(id *)(a1 + 40);
    [v21 _performJaliscoImportWithClientIdentity:v22 byAddingMediaKind:1 completionHandler:v75];
  }

  else
  {
    uint64_t v9 = *(void *)(a1 + 32);
    if (*(_BYTE *)(v9 + 146))
    {
      uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(unsigned __int8 **)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        id v96 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - We have a pending saga authenticate operation. Will not try to enable cloud library",  buf,  0xCu);
      }

      int v12 = *(void **)(a1 + 56);
      if (!v12) {
        goto LABEL_12;
      }
      id v13 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10001FC98;
      block[3] = &unk_1001A6BE0;
      id v94 = v12;
      dispatch_async(v13, block);
      int v14 = v94;
LABEL_11:

LABEL_12:
      objc_msgSend(*(id *)(a1 + 40), "finishWithError:", 0, v70, v71, v72, v73);
      goto LABEL_40;
    }

    if (!v7 && *(void *)(v9 + 80) == 2LL)
    {
      if (*(_BYTE *)(a1 + 72))
      {
        __int16 v23 = (void *)objc_claimAutoreleasedReturnValue([(id)v9 musicLibrary]);
        int v24 = (void *)objc_claimAutoreleasedReturnValue([v23 sagaLastKnownActiveLockerAccountDSID]);
        id v25 = [v24 longLongValue];

        int v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
        __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([v26 accountDSID]);
        id v28 = [v27 longLongValue];

        if (v28 == v25)
        {
          int v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
          [v29 setSagaLastKnownActiveLockerAccountDSID:0];

          os_log_t v30 = sub_1000DD968();
          int v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v32 = *(unsigned __int8 **)(a1 + 32);
            *(_DWORD *)buf = 138543362;
            id v96 = v32;
            _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Clearing last known locker account",  buf,  0xCu);
          }
        }

        BOOL v33 = *(void *)(a1 + 64) == 1LL;
        __int16 v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
        [v34 setSagaPrefersToMergeWithCloudLibrary:v33];

        uint64_t v9 = *(void *)(a1 + 32);
      }

      int v35 = (void *)objc_claimAutoreleasedReturnValue([(id)v9 userIdentityStore]);
      __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
      id v92 = 0LL;
      int v37 = (void *)objc_claimAutoreleasedReturnValue([v35 getPropertiesForUserIdentity:v36 error:&v92]);
      id v38 = v92;

      if (*(_BYTE *)(a1 + 72)) {
        uint64_t v39 = 0LL;
      }
      else {
        uint64_t v39 = 5LL;
      }
      if (v37)
      {
        unsigned __int8 v40 = [v37 isActiveLocker];
        unsigned int v41 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
        BOOL v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);
        if ((v40 & 1) == 0)
        {
          if (v42)
          {
            id v65 = *(unsigned __int8 **)(a1 + 32);
            *(_DWORD *)buf = 138543618;
            id v96 = v65;
            __int16 v97 = 1024;
            *(_DWORD *)id v98 = v39;
            _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - performing SagaAuthenticationOperation enableICMLReason=%d",  buf,  0x12u);
          }

          uint64_t v66 = *(void **)(a1 + 32);
          uint64_t v67 = *(void *)(a1 + 48);
          id v68 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  *(void *)(a1 + 64)));
          uint64_t v69 = *(unsigned __int8 *)(a1 + 72);
          v86[0] = _NSConcreteStackBlock;
          v86[1] = 3221225472LL;
          v86[2] = sub_10001FCA8;
          v86[3] = &unk_1001A1A80;
          v86[4] = *(void *)(a1 + 32);
          uint64_t v89 = v39;
          char v90 = v69;
          char v91 = *(_BYTE *)(a1 + 73);
          id v88 = *(id *)(a1 + 56);
          id v87 = *(id *)(a1 + 40);
          [v66 _runSagaAuthenticateOperationWithClientIdentity:v67 mergePreference:v68 allowNoisyPrompt:v69 cloudLibraryEnableReason:v39 co mpletionHandler:v86];

          goto LABEL_54;
        }

        if (v42)
        {
          uint64_t v43 = *(unsigned __int8 **)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          id v96 = v43;
          _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - ICML is already enabled",  buf,  0xCu);
        }

        __int16 v44 = *(void **)(a1 + 56);
        if (!v44)
        {
LABEL_50:
          [*(id *)(a1 + 40) finishWithError:0];
LABEL_54:

          goto LABEL_40;
        }

        int v45 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
        v84[0] = _NSConcreteStackBlock;
        v84[1] = 3221225472LL;
        v84[2] = sub_10001FD60;
        v84[3] = &unk_1001A6BE0;
        id v85 = v44;
        dispatch_async(v45, v84);
        __int16 v46 = v85;
      }

      else
      {
        os_log_t v59 = sub_1000DD968();
        v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(v59);
        if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
        {
          id v61 = *(void **)(a1 + 32);
          v62 = (void *)objc_claimAutoreleasedReturnValue([v61 userIdentity]);
          *(_DWORD *)buf = 138543874;
          id v96 = (unsigned __int8 *)v61;
          __int16 v97 = 2114;
          *(void *)id v98 = v62;
          *(_WORD *)&v98[8] = 2114;
          id v99 = v38;
          _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Not enabling cloud library. Could not get properties of %{public}@, error=%{public}@",  buf,  0x20u);
        }

        id v63 = *(void **)(a1 + 56);
        if (!v63) {
          goto LABEL_50;
        }
        os_log_t v64 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
        v81[0] = _NSConcreteStackBlock;
        v81[1] = 3221225472LL;
        v81[2] = sub_10001FD70;
        v81[3] = &unk_1001A6BB8;
        id v83 = v63;
        id v82 = v38;
        dispatch_async(v64, v81);

        __int16 v46 = v83;
      }

      goto LABEL_50;
    }

    int v47 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v48 = *(unsigned __int8 **)(a1 + 32);
      uint64_t v49 = *(void *)(a1 + 64);
      *(_DWORD *)buf = 134218498;
      id v96 = v48;
      __int16 v97 = 2114;
      *(void *)id v98 = v7;
      *(_WORD *)&v98[8] = 1024;
      LODWORD(v99) = v49;
      _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loading subscription status finished with error=%{public}@, not enabling iCML with policy=%d ",  buf,  0x1Cu);
    }

    __int16 v50 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  2003LL,  0LL));
    int v51 = *(void **)(a1 + 56);
    if (v51)
    {
      __int16 v52 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
      v78[0] = _NSConcreteStackBlock;
      v78[1] = 3221225472LL;
      v78[2] = sub_10001FD80;
      v78[3] = &unk_1001A6BB8;
      id v80 = v51;
      id v79 = v50;
      dispatch_async(v52, v78);
    }

    [*(id *)(a1 + 40) finishWithError:v7];
  }

LABEL_40:
}
}

  return v8;
}
}

uint64_t sub_10001FC98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10001FCA8(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 65);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10001FF64;
  v8[3] = &unk_1001A1A58;
  void v8[4] = v4;
  uint64_t v7 = *(void *)(a1 + 56);
  id v10 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 40);
  [v4 _handleSagaAuthentication:a2 finishedForReason:v7 explicitUserAction:v5 shouldStartInitialImport:v6 completionHandler:v8];
}

uint64_t sub_10001FD60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10001FD70(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

uint64_t sub_10001FD80(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10001FD90(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      *(_DWORD *)buf = 138543618;
      uint64_t v18 = v6;
      __int16 v19 = 2114;
      int v20 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@ - Jalisco import complete. error=%{public}@",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v18 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Jalisco import complete.",  buf,  0xCu);
  }

  id v9 = *(void **)(a1 + 48);
  if (v9)
  {
    id v10 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    uint64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472LL;
    id v13 = sub_10001FF54;
    int v14 = &unk_1001A6BB8;
    id v16 = v9;
    id v15 = v3;
    dispatch_async(v10, &v11);
  }

  objc_msgSend(*(id *)(a1 + 40), "finishWithError:", v3, v11, v12, v13, v14);
}

uint64_t sub_10001FF44(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10001FF54(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10001FF64(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  uint64_t v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "msv_description"));
      *(_DWORD *)buf = 138543874;
      uint64_t v20 = v8;
      __int16 v21 = 1024;
      int v22 = a3;
      __int16 v23 = 2114;
      int v24 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ - SagaAuthentication complete. shouldRetry=%{BOOL}u error=%{public}@",  buf,  0x1Cu);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543618;
    uint64_t v20 = v10;
    __int16 v21 = 1024;
    int v22 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - SagaAuthentication complete. shouldRetry=%{BOOL}u",  buf,  0x12u);
  }

  uint64_t v11 = *(void **)(a1 + 48);
  if (v11)
  {
    uint64_t v12 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 96LL);
    id v13 = _NSConcreteStackBlock;
    uint64_t v14 = 3221225472LL;
    id v15 = sub_100020134;
    id v16 = &unk_1001A6BB8;
    id v18 = v11;
    id v17 = v5;
    dispatch_async(v12, &v13);
  }

  objc_msgSend(*(id *)(a1 + 40), "finishWithError:", v5, v13, v14, v15, v16);
}

uint64_t sub_100020134(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

id sub_100020144(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v9 = 138543362;
    uint64_t v10 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Handling music app install",  (uint8_t *)&v9,  0xCu);
  }

  id v4 = *(void **)(a1 + 32);
  id v5 = (void *)v4[8];
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 configuration]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 clientIdentity]);
  [v5 updateLibraryWithClientIdentity:v7 reason:6 completionHandler:0];

  return [*(id *)(a1 + 32) _tryEnablingCloudMusicLibraryForReason:6 completionHandler:0];
}

void sub_1000202DC(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v2 = (void *)qword_1001DB590;
  qword_1001DB590 = (uint64_t)v1;
}

id sub_100020894(uint64_t a1, void *a2)
{
  return [a2 writeUInt32:*(unsigned int *)(a1 + 32) withCode:1836413810];
}

LABEL_9:
    [v5 setObject:@"<redacted>" forKey:@"userToken"];
  }

  return v5;
}

    int v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
    -[ICDPlaybackPositionRequestOperationPull _finishWithError:](self, "_finishWithError:", v9);

    goto LABEL_10;
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionRequestContext entity](self->_context, "entity"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 playbackPositionKey]);

  if (!v5)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v13 = self;
      uint64_t v8 = "%{public}@ entity.playbackPositionKey=nil";
      goto LABEL_8;
    }

    goto LABEL_9;
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_100046670;
  v10[3] = &unk_1001A7180;
  v10[4] = self;
  uint64_t v11 = v3;
  [v6 getBagForRequestContext:v11 withCompletionHandler:v10];

LABEL_10:
}
  }
}
}

    goto LABEL_10;
  }

  id v15 = *(void **)(a1 + 32);
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  v17[2] = sub_1000B03CC;
  v17[3] = &unk_1001A48F8;
  v17[4] = v15;
  [v15 _fetchRecommendationsSetAndModelWithCompletionHandler:v17];
LABEL_10:
}

  id v4 = 0LL;
  if ((*(_BYTE *)&self->_has & 4) == 0) {
    goto LABEL_10;
  }
LABEL_5:
  id v5 = 2654435761LL * self->_releaseDate;
  if ((*(_BYTE *)&self->_has & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_6:
  uint64_t v6 = 2654435761LL * self->_isExplicit;
  return v3 ^ v2 ^ v4 ^ v5 ^ v6 ^ (unint64_t)-[NSMutableArray hash](self->_contentFeatures, "hash");
}

    -[CloudLibraryOperation setStatus:](self, "setStatus:", 1LL);
LABEL_10:
    -[JaliscoUpdateOperation endPerformUpdate](self, "endPerformUpdate");
    return;
  }

  uint64_t v10 = objc_msgSend((id)objc_opt_class(self, v9), "logCategory");
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation error](self, "error"));
    *(_DWORD *)buf = 138543618;
    os_log_t v59 = self;
    v60 = 2114;
    id v61 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ - Received error when doing an update request: %{public}@",  buf,  0x16u);
  }

  -[CloudLibraryOperation setStatus:](self, "setStatus:", 2LL);
}

    goto LABEL_10;
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 badgeIdentifier]);
  uint64_t v8 = [v7 isEqualToString:@"appIcon"];

  if (!v8)
  {
    int v9 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = 0;
      uint64_t v10 = "Received a badge request with an unrecognized badgeIdentifier.";
      uint64_t v11 = (uint8_t *)&v12;
      goto LABEL_8;
    }

    goto LABEL_9;
  }

  [v6 badgeAppWithRequest:v5];
LABEL_10:
}

          uint64_t v14 = (os_log_s *)v6;
          uint64_t v6 = -[NSString initWithBytes:length:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytes:length:encoding:",  v13,  v12,  4LL);
          goto LABEL_11;
        }
      }

      else
      {
        if (v11 == 1668113253) {
          goto LABEL_9;
        }
        if (v11 != 1668113270) {
          goto LABEL_16;
        }
      }

      uint64_t v14 = (os_log_s *)v7;
      uint64_t v7 = -[NSString initWithBytes:length:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytes:length:encoding:",  v13,  v12,  4LL);
LABEL_11:

      if (v6 && v7)
      {
        [v17 setObject:v7 forKey:v6];

        uint64_t v7 = 0LL;
        uint64_t v6 = 0LL;
      }

      a3 = &v13[v12];
      a4 = a4 - 8 - v12;
      if (a4 <= 8) {
        goto LABEL_19;
      }
    }
  }

  uint64_t v7 = 0LL;
  uint64_t v6 = 0LL;
LABEL_19:
  id v15 = v17;

  return v15;
}

    int v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
    -[ICDPlaybackPositionRequestOperationPut _finishWithError:](self, "_finishWithError:", v9);

    goto LABEL_10;
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionRequestContext entity](self->_context, "entity"));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 playbackPositionKey]);

  if (!v5)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v13 = self;
      uint64_t v8 = "%{public}@ entity.playbackPositionKey=nil";
      goto LABEL_8;
    }

    goto LABEL_9;
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10010891C;
  v10[3] = &unk_1001A7180;
  v10[4] = self;
  uint64_t v11 = v3;
  [v6 getBagForRequestContext:v11 withCompletionHandler:v10];

LABEL_10:
}

void sub_100021044(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), v8);
    uint64_t v10 = NSStringFromClass(v9);
    id v25 = v6;
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    uint64_t v12 = *(void **)(a1 + 32);
    if ([v12 method]) {
      id v13 = @"POST";
    }
    else {
      id v13 = @"GET";
    }
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) action]);
    id v16 = (objc_class *)objc_opt_class(v5, v15);
    id v17 = NSStringFromClass(v16);
    id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    id v19 = [v5 responseCode];
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    *(_DWORD *)buf = 138545154;
    id v27 = v11;
    __int16 v28 = 2048;
    int v29 = v12;
    __int16 v30 = 2114;
    int v31 = v13;
    __int16 v32 = 2114;
    BOOL v33 = v14;
    __int16 v34 = 2114;
    int v35 = v18;
    __int16 v36 = 2048;
    id v37 = v5;
    __int16 v38 = 2048;
    id v39 = v19;
    __int16 v40 = 2048;
    id v41 = [v20 length];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x52u);

    id v6 = v25;
  }

  if (v6)
  {
    __int16 v21 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v27 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "JaliscoSetItemPropertyOperation failed with error: %{public}@",  buf,  0xCu);
    }
  }

  int v22 = *(void **)(a1 + 40);
  uint64_t v23 = (uint64_t)[v5 responseCode];
  if (v23 > 399)
  {
    if (v23 != 404 && v23 != 400) {
      goto LABEL_17;
    }
    uint64_t v24 = 3LL;
  }

  else
  {
    uint64_t v24 = 1LL;
    if (v23 != 200 && v23 != 204) {
LABEL_17:
    }
      uint64_t v24 = 2LL;
  }

  [v22 setStatus:v24];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_10002172C(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v9 = a1[4];
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      *(_DWORD *)buf = 138543618;
      id v32 = v9;
      __int16 v33 = 2114;
      __int16 v34 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished request to begin collaboration error=%{public}@",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = a1[4];
    *(_DWORD *)buf = 138543362;
    id v32 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished request to begin collaboration",  buf,  0xCu);
  }

  uint64_t v12 = (uint64_t)[v5 responseCode];
  if (v12 > 399)
  {
    if (v12 == 404 || v12 == 400)
    {
      uint64_t v13 = 3LL;
      goto LABEL_14;
    }

    goto LABEL_13;
  }

  uint64_t v13 = 1LL;
  if (v12 != 200 && v12 != 204) {
LABEL_13:
  }
    uint64_t v13 = 2LL;
LABEL_14:
  [a1[4] setStatus:v13];
  [a1[4] setError:v6];
  if (!v6)
  {
    id v14 = v5;
    *(void *)((char *)a1[4] + 114) = [v14 collaborationCloudLibraryID];
    uint64_t v15 = objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v14 collaborationCloudLibraryID]));
    v29[0] = ML3ContainerPropertyStoreCloudID;
    v29[1] = ML3ContainerPropertyIsCollaborative;
    __int16 v28 = (void *)v15;
    v30[0] = v15;
    v30[1] = &__kCFBooleanTrue;
    void v29[2] = ML3ContainerPropertyCollaborationMode;
    id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v14 collaborationMode]));
    v30[2] = v16;
    v30[3] = &off_1001B3A00;
    v29[3] = ML3ContainerPropertyCollaboratorPermissions;
    v29[4] = ML3ContainerPropertyCollaborationInvitationURL;
    uint64_t v17 = objc_claimAutoreleasedReturnValue([v14 collaborationInviteURL]);
    id v18 = (void *)v17;
    if (v17) {
      id v19 = (const __CFString *)v17;
    }
    else {
      id v19 = &stru_1001A7960;
    }
    void v30[4] = v19;
    v29[5] = ML3ContainerPropertyCollaborationInvitationURLExpirationDate;
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v14 collaborationInviteURLExpirationDate]));
    v30[5] = v20;
    v29[6] = ML3ContainerPropertyCloudGlobalID;
    uint64_t v21 = objc_claimAutoreleasedReturnValue([v14 collaborationGlobalID]);
    int v22 = (void *)v21;
    if (v21) {
      uint64_t v23 = (const __CFString *)v21;
    }
    else {
      uint64_t v23 = &stru_1001A7960;
    }
    v29[7] = ML3ContainerPropertyCollaboratorStatus;
    v30[6] = v23;
    v30[7] = &off_1001B3A18;
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v30,  v29,  8LL));
    id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithDictionary:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithDictionary:",  v24));

    if (([a1[5] setValuesForPropertiesWithDictionary:v25] & 1) == 0)
    {
      int v26 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        id v27 = a1[4];
        *(_DWORD *)buf = 138543362;
        id v32 = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to update container properties",  buf,  0xCu);
      }
    }

    *((_BYTE *)a1[4] + 106) = [v14 updateRequired];
  }

  [a1[6] endTransaction];
  [a1[4] finish];
}

uint64_t sub_100021D10(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  uint64_t v7 = (uint64_t)[*(id *)(a1 + 40) jaliscoOnDiskDatabaseRevision];
  uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v7 < 1)
  {
    if (v9)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "No purchase history database revision, skipping deauthenticate and clean up.",  buf,  2u);
    }
  }

  else
  {
    if (v9)
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Removing purchase history tracks", buf, 2u);
    }

    dispatch_semaphore_t v10 = dispatch_semaphore_create(0LL);
    id v11 = *(void **)(a1 + 40);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_100022028;
    v18[3] = &unk_1001A5AC0;
    uint64_t v8 = v10;
    id v19 = v8;
    [v11 removeSource:4 usingConnection:v3 withCompletionHandler:v18];
    dispatch_semaphore_wait((dispatch_semaphore_t)v8, 0xFFFFFFFFFFFFFFFFLL);
    uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      id v13 = [*(id *)(a1 + 40) jaliscoOnDiskDatabaseRevision];
      *(_DWORD *)buf = 134217984;
      id v21 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Clearing purchase history database revision (%ld)",  buf,  0xCu);
    }

    [*(id *)(a1 + 40) setJaliscoOnDiskDatabaseRevision:0];
    [*(id *)(a1 + 40) clearJaliscoAccountID];
    [*(id *)(a1 + 40) setStorefrontIdentifier:0];
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantPast](&OBJC_CLASS___NSDate, "distantPast"));
    [*(id *)(a1 + 40) setJaliscoLastGeniusUpdateDate:v14];

    if ([*(id *)(a1 + 40) jaliscoHasCloudGeniusData])
    {
      [*(id *)(a1 + 40) clearAllGeniusData];
      [*(id *)(a1 + 40) setJaliscoHasCloudGeniusData:0];
      [*(id *)(a1 + 40) setJaliscoIsMusicGeniusUserEnabled:0];
    }

    [*(id *)(a1 + 40) clearAllCloudKVSData];
    uint64_t v15 = objc_alloc_init(&OBJC_CLASS___CSSearchableIndex);
    -[CSSearchableIndex deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:]( v15,  "deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:",  &off_1001B4A28,  @"com.apple.Music",  0LL,  &stru_1001A2198);
  }

  id v16 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Cancelling any outstanding jalisco track downloads.",  buf,  2u);
  }

  sub_10006AF64(*(void **)(a1 + 40));
  return 1LL;
}

uint64_t sub_100022028(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100022030(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 138543362;
      id v5 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Failed to remove playback intents. err=%{public}@",  (uint8_t *)&v4,  0xCu);
    }
  }
}

void sub_100022890(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  uint64_t v8 = v7;
  if (v5)
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    *(_DWORD *)uint64_t v17 = 134217984;
    *(void *)&v17[4] = [v5 responseCode];
    BOOL v9 = "Set album artist properties response: %lu";
    dispatch_semaphore_t v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
    uint32_t v12 = 12;
  }

  else
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    *(_WORD *)uint64_t v17 = 0;
    BOOL v9 = "Set album artist properties received no response";
    dispatch_semaphore_t v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
    uint32_t v12 = 2;
  }

  _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, v17, v12);
LABEL_7:

  if (v6)
  {
    id v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v17 = 138543362;
      *(void *)&v17[4] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Set album artist properties response with error: %{public}@",  v17,  0xCu);
    }
  }

  id v14 = *(void **)(a1 + 32);
  uint64_t v15 = (uint64_t)objc_msgSend(v5, "responseCode", *(_OWORD *)v17);
  if (v15 > 399)
  {
    if (v15 != 404 && v15 != 400) {
      goto LABEL_18;
    }
    uint64_t v16 = 3LL;
  }

  else
  {
    uint64_t v16 = 1LL;
    if (v15 != 200 && v15 != 204) {
LABEL_18:
    }
      uint64_t v16 = 2LL;
  }

  [v14 setStatus:v16];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100023694( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
}

uint64_t sub_100023718(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100023728(uint64_t a1)
{
}

void sub_100023730(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  dispatch_semaphore_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100023CC0(uint64_t a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100023D34;
  v3[3] = &unk_1001A70B8;
  id v4 = *(id *)(a1 + 32);
  ICDAAPUtilitiesWriteContainer(a2, 1835623521LL, v3);
}

void sub_100023D34(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0LL;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        ICDAAPUtilitiesWriteProperty(v3, 1835624804LL, 5LL, *(void *)(*((void *)&v9 + 1) + 8LL * (void)v8));
        uint64_t v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v6);
  }
}

void sub_10002496C(uint64_t a1)
{
}

void sub_10002529C(id a1)
{
  id v1 = -[ICDDefaults _init](objc_alloc(&OBJC_CLASS___ICDDefaults), "_init");
  uint64_t v2 = (void *)qword_1001DB5A0;
  qword_1001DB5A0 = (uint64_t)v1;
}

uint64_t sub_1000255C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10002576C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100025884( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100025964( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000259B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000259C8(uint64_t a1)
{
}

void sub_1000259D0(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 40), a2), "handlers");
  id v11 = (id)objc_claimAutoreleasedReturnValue(v3);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v11 allValues]);
  id v5 = NSStringFromSelector("configuration");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForKeyPath:v6]);
  id v8 = [v7 copy];
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8LL);
  __int128 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;
}

void sub_100025A6C(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 48), a2), "handlers");
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 accountDSID]);

  if (v6)
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:v6]);
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    __int128 v10 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 48);
      uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
      int v17 = 134218754;
      uint64_t v18 = v12;
      __int16 v19 = 2048;
      uint64_t v20 = v13;
      __int16 v21 = 2114;
      id v22 = (id)objc_opt_class(v12, v11);
      __int16 v23 = 2114;
      uint64_t v24 = v6;
      id v14 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "BaseRequestHandler %p - Deleting handler %p - class=%{public}@ dsid=%{public}@",  (uint8_t *)&v17,  0x2Au);
    }

    [v4 setObject:0 forKeyedSubscript:v6];
  }

  else
  {
    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = 0LL;
  }
}

void sub_100025BF4(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 48), a2), "handlers");
  id v17 = (id)objc_claimAutoreleasedReturnValue(v3);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 accountDSID]);

  if (v5)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v17 objectForKeyedSubscript:v5]);

    if (!v7)
    {
      id v9 = objc_msgSend( objc_alloc((Class)objc_opt_class(*(void *)(a1 + 48), v8)),  "initWithConfiguration:",  *(void *)(a1 + 32));
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
      uint64_t v11 = *(void **)(v10 + 40);
      *(void *)(v10 + 40) = v9;

      [v17 setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKeyedSubscript:v5];
    }

    uint64_t v12 = objc_claimAutoreleasedReturnValue([v17 objectForKeyedSubscript:v5]);
    goto LABEL_7;
  }

  if (objc_msgSend((id)objc_opt_class(*(void *)(a1 + 48), v6), "supportsAccountlessHandling"))
  {
    id v14 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 48), v13), "accountlessHandler");
    uint64_t v12 = objc_claimAutoreleasedReturnValue(v14);
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v12;
  }
}

void sub_100025D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), a2);
  id v3 = NSStringFromClass(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"com.apple.%@.global.serial.queue",  v4));

  id v11 = v5;
  uint64_t v6 = (const char *)[v11 UTF8String];
  dispatch_queue_attr_t v7 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  uint64_t v8 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v7);
  dispatch_queue_t v9 = dispatch_queue_create(v6, v8);
  uint64_t v10 = (void *)qword_1001DB5B0;
  qword_1001DB5B0 = (uint64_t)v9;
}

void sub_100025DAC(void *a1)
{
  id v309 = a1;
  id v1 = (void *)objc_claimAutoreleasedReturnValue([v309 userIdentity]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v1));

  uint64_t v3 = (uint64_t)objc_msgSend(v2, "icd_sagaDatabaseUserVersion");
  id v4 = [v2 sagaOnDiskDatabaseRevision];
  uint64_t v5 = (uint64_t)[v2 jaliscoOnDiskDatabaseRevision];
  uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218752;
    *(void *)&uint8_t buf[4] = 610000LL;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v3;
    *(_WORD *)&buf[22] = 2048;
    v314 = v4;
    LOWORD(v315) = 2048;
    *(void *)((char *)&v315 + 2) = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Migrating to version %ld, from userVersion=%ld, sagaDatabaseRevision=%ld, jaliscoDatabaseRevision=%ld",  buf,  0x2Au);
  }

  if (!v3) {
    goto LABEL_7;
  }
  if (v3 == 610000) {
    goto LABEL_10;
  }
  if ((uint64_t)v4 <= 0 && v5 < 1)
  {
LABEL_7:
    objc_msgSend(v2, "icd_setSagaDatabaseUserVersion:", 610000);
    dispatch_queue_attr_t v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      *(void *)&uint8_t buf[4] = 610000LL;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Skipping migration and setting user version to latest: %ld",  buf,  0xCu);
    }

    goto LABEL_10;
  }

  int v29 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "Current user version: %ld", buf, 0xCu);
  }

  if (v3 < 610000)
  {
    uint64_t v308 = ML3TrackPropertyMediaType;
    uint64_t v307 = ML3TrackPropertyPurchaseHistoryID;
    uint64_t v303 = ML3TrackPropertyStoreCanonicalItemId;
    uint64_t v302 = ML3TrackPropertyBaseLocationID;
    v301 = (void **)ML3TrackPropertyFilePath;
    uint64_t v300 = ML3TrackPropertyTitle;
    uint64_t v298 = ML3ContainerPropertyDateModified;
    uint64_t v299 = ML3ContainerPropertyCloudIsSubscribed;
    uint64_t v306 = ML3TrackPropertyStoreExtrasURL;
    do
    {
      if (v3 <= 389999)
      {
        if (v3 > 380049)
        {
          if (v3 <= 380114)
          {
            if (v3 <= 380079)
            {
              switch(v3)
              {
                case 380050LL:
                  id v195 = v2;
                  v196 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                  if (os_log_type_enabled(v196, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v196,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380050to380060]",  buf,  2u);
                  }

                  v197 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v308,  &off_1001B3A60,  10LL));
                  *(void *)buf = v197;
                  v198 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
                  *(void *)&buf[8] = v198;
                  v199 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  2LL));
                  v200 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v199));

                  sub_10002A1D4(v195, (uint64_t)v200);
                  if ([v195 sagaOnDiskDatabaseRevision]
                    && (uint64_t)objc_msgSend(v195, "icd_sagaDatabaseUserVersion") >= 1)
                  {
                    [v195 setSagaNeedsFullUpdate:1];
                  }

                  uint64_t v3 = 380060LL;
                  break;
                case 380060LL:
                  id v201 = v2;
                  v202 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                  if (os_log_type_enabled(v202, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v202,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380060to380070]",  buf,  2u);
                  }

                  if ([v201 sagaOnDiskDatabaseRevision]
                    && (uint64_t)objc_msgSend(v201, "icd_sagaDatabaseUserVersion") >= 1)
                  {
                    [v201 setSagaNeedsFullUpdate:1];
                  }

                  uint64_t v3 = 380070LL;
                  break;
                case 380070LL:
                  id v77 = v2;
                  __int16 v78 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                  if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380070to380080]",  buf,  2u);
                  }

                  if ([v77 sagaOnDiskDatabaseRevision]
                    && (uint64_t)objc_msgSend(v77, "icd_sagaDatabaseUserVersion") >= 1)
                  {
                    [v77 setSagaNeedsFullUpdate:1];
                  }

                  uint64_t v3 = 380080LL;
                  break;
              }
            }

            else if (v3 > 380099)
            {
              if (v3 == 380100)
              {
                id v263 = v2;
                v264 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v264, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v264,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion3800100to380110]",  buf,  2u);
                }

                v265 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  v308,  2048LL));
                *(void *)buf = v265;
                v266 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
                *(void *)&buf[8] = v266;
                v267 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  2LL));
                v268 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v267));

                sub_10002A1D4(v263, (uint64_t)v268);
                uint64_t v3 = 380110LL;
              }

              else if (v3 == 380110)
              {
                id v111 = v2;
                uint64_t v112 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v112, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v112,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion3800110to380115]",  buf,  2u);
                }

                v113 = (void **)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v308,  &off_1001B3A90,  10LL));
                v323 = v113;
                id v114 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
                uint64_t v324 = (uint64_t)v114;
                v115 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v323,  2LL));
                id v116 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v115));

                sub_10002A1D4(v111, (uint64_t)v116);
                id v117 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Track,  "queryWithLibrary:predicate:",  v111,  v116));
                id v118 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
                block = _NSConcreteStackBlock;
                uint64_t p_block = 3221225472LL;
                uint64_t v319 = (uint64_t)sub_10002A488;
                v320 = &unk_1001A6458;
                uint64_t v119 = v118;
                v321 = v119;
                [v117 enumeratePersistentIDsUsingBlock:&block];
                if ([v119 count])
                {
                  *(void *)buf = _NSConcreteStackBlock;
                  *(void *)&buf[8] = 3221225472LL;
                  *(void *)&buf[16] = sub_10002A4D4;
                  v314 = &unk_1001A64D0;
                  *(void *)&__int128 v315 = v119;
                  *((void *)&v315 + 1) = v111;
                  [*((id *)&v315 + 1) performDatabaseTransactionWithBlock:buf];
                }

                uint64_t v3 = 380115LL;
              }
            }

            else if (v3 == 380080)
            {
              id v153 = v2;
              v154 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v154, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v154,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380080to380090]",  buf,  2u);
              }

              *(void *)buf = _NSConcreteStackBlock;
              *(void *)&buf[8] = 3221225472LL;
              *(void *)&buf[16] = sub_10002A388;
              v314 = &unk_1001A3928;
              *(void *)&__int128 v315 = v153;
              id v155 = v153;
              [v155 databaseConnectionAllowingWrites:1 withBlock:buf];

              uint64_t v3 = 380090LL;
            }

            else if (v3 == 380090)
            {
              id v43 = v2;
              __int16 v44 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380090to380100]",  buf,  2u);
              }

              if ([v43 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v43, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v43 setSagaNeedsFullUpdate:1];
              }

              uint64_t v3 = 380100LL;
            }

            goto LABEL_468;
          }

          if (v3 <= 380139)
          {
            switch(v3)
            {
              case 380115LL:
                id v230 = v2;
                v231 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v231, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v231,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion3800110to380120]",  buf,  2u);
                }

                unsigned int v232 = [v230 sagaPrefersToMergeWithCloudLibrary];
                dispatch_semaphore_t v233 = dispatch_semaphore_create(0LL);
                v310[0] = _NSConcreteStackBlock;
                v310[1] = 3221225472LL;
                v310[2] = sub_10002A710;
                v310[3] = &unk_1001A6398;
                dispatch_semaphore_t v311 = v233;
                v234 = v233;
                v235 = v310;
                v236 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
                v237 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentity activeLockerAccount]( &OBJC_CLASS___ICUserIdentity,  "activeLockerAccount"));
                id v312 = 0LL;
                v238 = (void *)objc_claimAutoreleasedReturnValue([v236 getPropertiesForUserIdentity:v237 error:&v312]);
                id v239 = v312;
                if (v239 || !v238)
                {
                  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
                  v290 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
                  *(void *)buf = _NSConcreteStackBlock;
                  *(void *)&buf[8] = 3221225472LL;
                  *(void *)&buf[16] = sub_1000C26BC;
                  v314 = &unk_1001A6BB8;
                  *((void *)&v315 + 1) = v235;
                  *(void *)&__int128 v315 = v239;
                  dispatch_async(v290, buf);

                  v241 = (void *)*((void *)&v315 + 1);
                }

                else
                {
                  v240 = (void *)objc_claimAutoreleasedReturnValue([v238 mergeToCloudLibraryPreference]);
                  v241 = v240;
                  if (v240 && [v240 BOOLValue] == v232)
                  {
                    dispatch_queue_global_t v293 = dispatch_get_global_queue(0LL, 0LL);
                    v294 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v293);
                    block = _NSConcreteStackBlock;
                    uint64_t p_block = 3221225472LL;
                    uint64_t v319 = (uint64_t)sub_1000C2870;
                    v320 = &unk_1001A6BB8;
                    v295 = v235;
                    v321 = 0LL;
                    id v322 = v295;
                    dispatch_async(v294, &block);

                    v242 = &v322;
                  }

                  else
                  {
                    *(void *)buf = _NSConcreteStackBlock;
                    *(void *)&buf[8] = 3221225472LL;
                    *(void *)&buf[16] = sub_1000C26CC;
                    v314 = &unk_1001A5208;
                    LOBYTE(v315) = v232;
                    v323 = _NSConcreteStackBlock;
                    uint64_t v324 = 3221225472LL;
                    uint64_t v325 = (uint64_t)sub_1000C27C0;
                    v326 = &unk_1001A5880;
                    v327 = v235;
                    [v236 insertPropertiesForUserIdentity:v237 andPostAccountChangeNotification:0 usingBlock:buf completionHandler:&v323];
                    v242 = (id *)&v327;
                  }
                }

                dispatch_semaphore_wait(v234, 0xFFFFFFFFFFFFFFFFLL);
                uint64_t v3 = 380120LL;
                break;
              case 380120LL:
                id v243 = v2;
                v244 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v244, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v244,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion3800120to380130]",  buf,  2u);
                }

                [v243 sortJaliscoLastSupportedMediaKinds];
                uint64_t v3 = 380130LL;
                break;
              case 380130LL:
                v86 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v86,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380130to380140]",  buf,  2u);
                }

                uint64_t v3 = 380140LL;
                if ((MSVDeviceIsAppleTV() & 1) == 0)
                {
                  id v87 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                  if (os_log_type_enabled(v87, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_DEFAULT,  "Removing Job: com.apple.itunescloudd.periodicPoll.jaliscoApps",  buf,  2u);
                  }

                  id v88 =  +[CloudBackgroundTaskManager sharedTaskManager]( &OBJC_CLASS___CloudBackgroundTaskManager,  "sharedTaskManager");
                  BackgroundTaskAgentRemoveJob("com.apple.itunescloudd.periodicPoll.jaliscoApps");
                  unsigned __int16 v71 = -13076;
                  goto LABEL_461;
                }

                break;
            }
          }

          else if (v3 > 380159)
          {
            if (v3 == 380160)
            {
              id v280 = v2;
              v281 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v281, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v281,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380160to380170]",  buf,  2u);
              }

              v282 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v308,  &off_1001B3A90,  10LL));
              v283 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
              *(void *)buf = v282;
              *(void *)&buf[8] = v283;
              v284 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  2LL));
              v285 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v284));

              sub_10002A1D4(v280, (uint64_t)v285);
              unsigned __int16 v76 = -13076;
LABEL_450:
              uint64_t v169 = v76 | 0x50000u;
LABEL_451:
              uint64_t v3 = v169 + 30;
              goto LABEL_468;
            }

            if (v3 == 380170)
            {
              v132 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v132, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v132,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380170to390000]",  buf,  2u);
              }

              id v133 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
              unsigned int v134 = [v133 automaticDownloadsEnabled];

              id v135 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              BOOL v136 = os_log_type_enabled(v135, OS_LOG_TYPE_DEFAULT);
              if (v134)
              {
                if (v136)
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v135,  OS_LOG_TYPE_DEFAULT,  "Found Automatic Downloads Key in user defaults",  buf,  2u);
                }

                id v137 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
                [v137 deleteAutomaticDownloadsKey];

                id v135 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[ICUpdateAutomaticDownloadMediaKindsRequest automaticDownloadMediaKindsForMusic]( &OBJC_CLASS___ICUpdateAutomaticDownloadMediaKindsRequest,  "automaticDownloadMediaKindsForMusic"));
                id v138 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
                v139 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
                id v140 = -[ICStoreRequestContext initWithIdentity:](v138, "initWithIdentity:", v139);

                id v141 = [[ICUpdateAutomaticDownloadMediaKindsRequest alloc] initWithRequestContext:v140 mediaKindsToAdd:v135 mediaKindsToRemove:0];
                [v141 performRequestWithCompletionHandler:&stru_1001A22B0];
              }

              else if (v136)
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v135,  OS_LOG_TYPE_DEFAULT,  "Automatic Downloads Key does not exist in user defaults",  buf,  2u);
              }

              unsigned __int16 v71 = -3216;
              goto LABEL_461;
            }
          }

          else
          {
            if (v3 == 380140)
            {
              id v170 = v2;
              v171 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v171, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v171,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380140to380150]",  buf,  2u);
              }

              if ([v170 jaliscoOnDiskDatabaseRevision])
              {
                v172 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v172, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v172,  OS_LOG_TYPE_DEFAULT,  "resetting jalisco revisions to zero to force a reset sync",  buf,  2u);
                }

                [v170 setJaliscoOnDiskDatabaseRevision:0];
              }

              unsigned __int16 v173 = -13076;
              goto LABEL_466;
            }

            if (v3 == 380150)
            {
              id v57 = v2;
              v58 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380150to380160]",  buf,  2u);
              }

              os_log_t v59 = (void *)objc_claimAutoreleasedReturnValue([v57 sagaAccountID]);
              if ([v59 longLongValue])
              {
                v60 = (void *)objc_claimAutoreleasedReturnValue([v57 jaliscoLastExcludedMediaKinds]);
                unsigned int v61 = [v60 containsObject:&off_1001B3A30];

                if (v61)
                {
                  os_log_t v62 = sub_1000DD8D8();
                  id v63 = (os_log_s *)objc_claimAutoreleasedReturnValue(v62);
                  if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_DEFAULT,  "resetting jalisco revision to zero to force a reset sync",  buf,  2u);
                  }

                  os_log_t v59 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", &off_1001B3A30));
                  [v57 updateJaliscoExcludedMediaKindsWith:v59 excludingMediaKindsInSet:0];
                  goto LABEL_121;
                }
              }

              else
              {
LABEL_121:
              }

              unsigned __int16 v64 = -13076;
LABEL_337:
              uint64_t v92 = v64 | 0x50000u;
LABEL_386:
              uint64_t v3 = v92 + 20;
            }
          }
        }

        else
        {
          if (v3 > 370299)
          {
            if (v3 <= 380009)
            {
              switch(v3)
              {
                case 370300LL:
                  id v208 = v2;
                  v209 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                  if (os_log_type_enabled(v209, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v209,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion370300to370400]",  buf,  2u);
                  }

                  if ([v208 sagaOnDiskDatabaseRevision]
                    && (uint64_t)objc_msgSend(v208, "icd_sagaDatabaseUserVersion") >= 1)
                  {
                    [v208 setSagaNeedsFullUpdate:1];
                  }

                  v210 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  v308,  2048LL));
                  *(void *)buf = v210;
                  v211 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
                  *(void *)&buf[8] = v211;
                  v212 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v306,  &stru_1001A7960,  1LL));
                  *(void *)&buf[16] = v212;
                  v213 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  3LL));
                  v214 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v213));

                  sub_10002A1D4(v208, (uint64_t)v214);
                  uint64_t v3 = 370400LL;
                  break;
                case 370400LL:
                  id v215 = v2;
                  v216 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                  if (os_log_type_enabled(v216, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v216,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion370400to380000]",  buf,  2u);
                  }

                  if ([v215 sagaOnDiskDatabaseRevision]
                    && (uint64_t)objc_msgSend(v215, "icd_sagaDatabaseUserVersion") >= 1)
                  {
                    [v215 setSagaNeedsFullUpdate:1];
                  }

                  uint64_t v3 = 380000LL;
                  break;
                case 380000LL:
                  id v82 = v2;
                  id v83 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                  if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380000to380010]",  buf,  2u);
                  }

                  if ([v82 sagaOnDiskDatabaseRevision]
                    && (uint64_t)objc_msgSend(v82, "icd_sagaDatabaseUserVersion") >= 1)
                  {
                    [v82 setSagaNeedsFullUpdate:1];
                  }

                  uint64_t v3 = 380010LL;
                  break;
              }
            }

            else if (v3 > 380029)
            {
              if (v3 == 380030)
              {
                id v273 = v2;
                v274 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v274, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v274,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380030to380040]",  buf,  2u);
                }

                id v275 = [v273 sagaOnDiskDatabaseRevision];
                v276 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                BOOL v277 = os_log_type_enabled(v276, OS_LOG_TYPE_DEFAULT);
                if (v275)
                {
                  if (v277)
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v276,  OS_LOG_TYPE_DEFAULT,  "Cloud library is enabled, repairing subscribed containers is_src_remote (if any)",  buf,  2u);
                  }

                  [v273 databaseConnectionAllowingWrites:1 withBlock:&stru_1001A2290];
                }

                else
                {
                  if (v277)
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v276,  OS_LOG_TYPE_DEFAULT,  "Cloud library is NOT enabled, deleting subscribed containers (if any)",  buf,  2u);
                  }

                  v291 = (void *)objc_claimAutoreleasedReturnValue( +[ML3PropertyPredicate predicateWithProperty:]( &OBJC_CLASS___ML3PropertyPredicate,  "predicateWithProperty:",  v299));
                  v292 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Container unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:]( &OBJC_CLASS___ML3Container,  "unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:",  v273,  v291,  &__NSArray0__struct));

                  [v292 deleteAllEntitiesFromLibraryWithDeletionType:2];
                }

                uint64_t v3 = 380040LL;
              }

              else if (v3 == 380040)
              {
                id v123 = v2;
                uint64_t v124 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v124, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v124,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380040to380050]",  buf,  2u);
                }

                v125 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  v308,  2048LL));
                *(void *)buf = v125;
                id v126 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
                *(void *)&buf[8] = v126;
                id v127 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v306,  &stru_1001A7960,  1LL));
                *(void *)&buf[16] = v127;
                v128 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  3LL));
                id v129 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v128));

                sub_10002A1D4(v123, (uint64_t)v129);
                uint64_t v3 = 380050LL;
              }
            }

            else if (v3 == 380010)
            {
              id v161 = v2;
              v162 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v162, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v162,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380010to380020]",  buf,  2u);
              }

              sub_100029F54(v161);
              uint64_t v3 = 380020LL;
            }

            else if (v3 == 380020)
            {
              id v48 = v2;
              uint64_t v49 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion380020to380030]",  buf,  2u);
              }

              __int16 v50 = (void *)objc_claimAutoreleasedReturnValue( +[ML3BitMaskPredicate predicateWithProperty:mask:value:]( &OBJC_CLASS___ML3BitMaskPredicate,  "predicateWithProperty:mask:value:",  v308,  8LL,  8LL));
              *(void *)buf = v50;
              int v51 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
              *(void *)&buf[8] = v51;
              __int16 v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  2LL));
              int v53 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v52));

              sub_10002A1D4(v48, (uint64_t)v53);
              uint64_t v3 = 380030LL;
            }

            goto LABEL_468;
          }

          if (v3 > 366558)
          {
            if (v3 > 370099)
            {
              if (v3 == 370100)
              {
                id v246 = v2;
                v247 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v247, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v247,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion370100to370200]",  buf,  2u);
                }

                if ([v246 jaliscoOnDiskDatabaseRevision] && (MSVDeviceIsAppleTV() & 1) == 0)
                {
                  os_log_t v248 = sub_1000DD8D8();
                  v249 = (os_log_s *)objc_claimAutoreleasedReturnValue(v248);
                  if (os_log_type_enabled(v249, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_WORD *)buf = 0;
                    _os_log_impl( (void *)&_mh_execute_header,  v249,  OS_LOG_TYPE_DEFAULT,  "resetting jalisco and saga revisions to zero",  buf,  2u);
                  }

                  [v246 setJaliscoOnDiskDatabaseRevision:0];
                  sub_10002A0B8(4LL, v246);
                  [v246 setSagaOnDiskDatabaseRevision:0];
                  sub_10002A0B8(2LL, v246);
                  [v246 notifyCloudLibraryAvailabilityDidChange];
                  [v246 setValue:&off_1001B3A30 forDatabaseProperty:@"MLResetCollectionsOnNextImport"];
                  id v296 = v246;
                  v297 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
                  v305 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
                  v250 = (void *)objc_claimAutoreleasedReturnValue([v297 enumeratorAtPath:@"/var/mobile/Media/Purchases"]);
                  v251 = (void *)objc_claimAutoreleasedReturnValue([v250 nextObject]);
                  if (v251)
                  {
                    do
                    {
                      if ([v251 hasSuffix:@".plist"])
                      {
                        v252 = objc_autoreleasePoolPush();
                        v253 = (void *)objc_claimAutoreleasedReturnValue( [@"/var/mobile/Media/Purchases" stringByAppendingPathComponent:v251]);
                        v254 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithContentsOfFile:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithContentsOfFile:",  v253));
                        v255 = v254;
                        if (v254)
                        {
                          v256 = (void *)objc_claimAutoreleasedReturnValue([v254 objectForKey:@"itemId"]);
                          if (v256)
                          {
                            v257 = (void *)objc_claimAutoreleasedReturnValue( [v255 objectForKey:@"com.apple.iTunesStore.downloadInfo"]);
                            v258 = v257;
                            if (v257)
                            {
                              v259 = (void *)objc_claimAutoreleasedReturnValue([v257 objectForKey:@"mediaAssetFilename"]);
                              if (v259) {
                                [v305 setValue:v256 forKey:v259];
                              }
                            }
                          }
                        }

                        objc_autoreleasePoolPop(v252);
                      }

                      uint64_t v260 = objc_claimAutoreleasedReturnValue([v250 nextObject]);

                      v251 = (void *)v260;
                    }

                    while (v260);
                  }

                  *(void *)buf = _NSConcreteStackBlock;
                  *(void *)&buf[8] = 3221225472LL;
                  *(void *)&buf[16] = sub_10002A158;
                  v314 = &unk_1001A3928;
                  *(void *)&__int128 v315 = v305;
                  id v261 = v305;
                  [v296 databaseConnectionAllowingWrites:1 withBlock:buf];
                }

                uint64_t v3 = 370200LL;
              }

              else if (v3 == 370200)
              {
                id v93 = v2;
                id v94 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v94, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v94,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion370200to370300]",  buf,  2u);
                }

                if ([v93 sagaOnDiskDatabaseRevision]) {
                  sub_100029F54(v93);
                }

                uint64_t v3 = 370300LL;
              }
            }

            else if (v3 == 366559)
            {
              id v147 = v2;
              uint64_t v148 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v148, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v148,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion366559to370000]",  buf,  2u);
              }

              if ([v147 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v147, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v147 setSagaNeedsFullUpdate:1];
              }

              uint64_t v3 = 370000LL;
            }

            else if (v3 == 370000)
            {
              id v34 = v2;
              int v35 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion370000to370100]",  buf,  2u);
              }

              if ([v34 jaliscoOnDiskDatabaseRevision] && MSVDeviceIsAppleTV())
              {
                os_log_t v36 = sub_1000DD8D8();
                id v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
                if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "Deleting ML database", buf, 2u);
                }

                [v34 emptyAllTables];
                sub_100029F54(v34);
              }

              uint64_t v3 = 370100LL;
            }

            goto LABEL_468;
          }

          switch(v3)
          {
            case 0LL:
              v184 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v184, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v184,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion0to348294]",  buf,  2u);
              }

              unsigned __int16 v71 = 20614;
              goto LABEL_461;
            case 348294LL:
              v185 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v185, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v185,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion348294to348295]",  buf,  2u);
              }

              uint64_t v3 = 348295LL;
              break;
            case 348295LL:
              id v68 = v2;
              uint64_t v69 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v69,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion348295to366559]",  buf,  2u);
              }

              id v70 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
              [v68 setValue:v70 forDatabaseProperty:@"MLCloudNeedsContainerRefetch"];

              unsigned __int16 v71 = -26657;
LABEL_461:
              uint64_t v3 = v71 | 0x50000u;
              break;
          }
        }
      }

      else if (v3 <= 509999)
      {
        if (v3 > 399999)
        {
          if (v3 <= 400024)
          {
            if (v3 == 400000)
            {
              id v304 = v2;
              v217 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v217, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v217,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 400010",  buf,  2u);
              }

              v218 = objc_alloc_init(&OBJC_CLASS___NSDateComponents);
              -[NSDateComponents setYear:](v218, "setYear:", 2021LL);
              -[NSDateComponents setMonth:](v218, "setMonth:", 6LL);
              -[NSDateComponents setDay:](v218, "setDay:", 24LL);
              -[NSDateComponents setHour:](v218, "setHour:", 0LL);
              -[NSDateComponents setMinute:](v218, "setMinute:", 0LL);
              v219 = -[NSCalendar initWithCalendarIdentifier:]( objc_alloc(&OBJC_CLASS___NSCalendar),  "initWithCalendarIdentifier:",  NSCalendarIdentifierGregorian);
              v220 = (void *)objc_claimAutoreleasedReturnValue(-[NSCalendar dateFromComponents:](v219, "dateFromComponents:", v218));
              v221 = (void **)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v302,  &off_1001B3AA8,  4LL));
              v222 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v308,  &off_1001B3A60,  10LL));
              block = v221;
              uint64_t p_block = (uint64_t)v222;
              v223 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &block,  2LL));
              v224 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v223));
              v225 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:]( &OBJC_CLASS___ML3Track,  "unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:",  v304,  v224,  0LL));

              v323 = v301;
              uint64_t v324 = v300;
              v226 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v323,  2LL));
              *(void *)buf = _NSConcreteStackBlock;
              *(void *)&buf[8] = 3221225472LL;
              *(void *)&buf[16] = sub_10002A828;
              v314 = &unk_1001A6EC8;
              *(void *)&__int128 v315 = v220;
              id v227 = v220;
              [v225 enumeratePersistentIDsAndProperties:v226 usingBlock:buf];

              uint64_t v205 = 400000LL;
              goto LABEL_467;
            }

            if (v3 != 400010)
            {
              if (v3 == 400020)
              {
                id v84 = v2;
                id v85 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 400025",  buf,  2u);
                }

                if ([v84 sagaOnDiskDatabaseRevision]
                  && (uint64_t)objc_msgSend(v84, "icd_sagaDatabaseUserVersion") >= 1)
                {
                  [v84 setSagaNeedsFullUpdate:1];
                }

                uint64_t v3 = 400025LL;
              }

              goto LABEL_468;
            }

            id v228 = v2;
            v229 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v229, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v229,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 400020",  buf,  2u);
            }

            if ([v228 sagaOnDiskDatabaseRevision]
              && (uint64_t)objc_msgSend(v228, "icd_sagaDatabaseUserVersion") >= 1)
            {
              [v228 setSagaNeedsFullUpdate:1];
            }

            uint64_t v92 = 400000LL;
            goto LABEL_386;
          }

          if (v3 > 499999)
          {
            if (v3 == 500000)
            {
              id v278 = v2;
              v279 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v279, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v279,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 504000",  buf,  2u);
              }

              uint64_t v3 = 504000LL;
              goto LABEL_468;
            }

            if (v3 == 504000)
            {
              id v130 = v2;
              uint64_t v131 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v131, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v131,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 510000",  buf,  2u);
              }

              if (_os_feature_enabled_impl("MediaPlayer", "Favoriting")
                && [v130 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v130, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v130 setSagaNeedsFullUpdate:1];
                [v130 setSagaLastLibraryUpdateTime:0];
              }

              unsigned __int16 v56 = -14288;
              goto LABEL_364;
            }
          }

          else
          {
            if (v3 == 400025)
            {
              id v163 = v2;
              v164 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v164, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v164,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion400025to400030]",  buf,  2u);
              }

              v165 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v308,  &off_1001B3AC0,  10LL));
              v166 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
              *(void *)buf = v165;
              *(void *)&buf[8] = v166;
              v167 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  2LL));
              v168 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v167));

              sub_10002A1D4(v163, (uint64_t)v168);
              uint64_t v169 = 400000LL;
              goto LABEL_451;
            }

            if (v3 == 400030)
            {
              id v54 = v2;
              uint64_t v55 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 500000",  buf,  2u);
              }

              if ([v54 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v54, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v54 setSagaNeedsFullUpdate:1];
              }

              unsigned __int16 v56 = -24288;
              goto LABEL_364;
            }
          }
        }

        else if (v3 <= 390029)
        {
          switch(v3)
          {
            case 390000LL:
              v186 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v186, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v186,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion390000to390010]",  buf,  2u);
              }

              v187 = (void *)objc_claimAutoreleasedReturnValue( +[ACAccountStore ic_sharedAccountStore]( &OBJC_CLASS___ACAccountStore,  "ic_sharedAccountStore"));
              block = 0LL;
              v188 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v187, "ic_activeStoreAccountWithError:", &block));
              v189 = block;

              if (!v188 || v189)
              {
                v192 = os_log_create("com.apple.amp.itunescloudd", "XPC");
                if (os_log_type_enabled(v192, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138543362;
                  *(void *)&uint8_t buf[4] = v189;
                  _os_log_impl( (void *)&_mh_execute_header,  v192,  OS_LOG_TYPE_DEFAULT,  "Could not get active store account, error=%{public}@",  buf,  0xCu);
                }

LABEL_464:
              }

              else if (objc_msgSend(v188, "ic_isAutomaticDownloadsEnabledForMediaKindMusic"))
              {
                os_log_t v190 = sub_1000DD8D8();
                v191 = (os_log_s *)objc_claimAutoreleasedReturnValue(v190);
                if (os_log_type_enabled(v191, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v191,  OS_LOG_TYPE_DEFAULT,  "Automatic Downloads is enabled on the active account. Setting appropriate user defaults",  buf,  2u);
                }

                v192 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
                -[os_log_s setAutomaticDownloadsEnabled:](v192, "setAutomaticDownloadsEnabled:", 1LL);
                goto LABEL_464;
              }

              unsigned __int16 v173 = -3216;
LABEL_466:
              uint64_t v205 = v173 | 0x50000u;
              goto LABEL_467;
            case 390010LL:
              id v193 = v2;
              v194 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v194, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v194,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion390010to390020]",  buf,  2u);
              }

              if (((MSVDeviceIsWatch() & 1) != 0 || MSVDeviceIsAudioAccessory())
                && [v193 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v193, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v193 setSagaNeedsFullUpdate:1];
              }

              unsigned __int16 v64 = -3216;
              goto LABEL_337;
            case 390020LL:
              id v72 = v2;
              uint64_t v73 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v73,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion390020to390030]",  buf,  2u);
              }

              if ([v72 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v72, "icd_sagaDatabaseUserVersion") >= 1)
              {
                os_log_t v74 = sub_1000DD8D8();
                int v75 = (os_log_s *)objc_claimAutoreleasedReturnValue(v74);
                if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v75,  OS_LOG_TYPE_DEFAULT,  "Resetting sagaOnDiskDatabaseRevision to 1 to update missing cloud_universal_library_id",  buf,  2u);
                }

                [v72 setSagaNeedsFullUpdate:1];
              }

              unsigned __int16 v76 = -3216;
              goto LABEL_450;
          }
        }

        else
        {
          if (v3 > 390049)
          {
            if (v3 == 390050)
            {
              v262 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v262, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v262,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion390050to390060]",  buf,  2u);
              }

              uint64_t v3 = 390060LL;
            }

            else if (v3 == 390060)
            {
              id v95 = v2;
              id v96 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v96, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v96,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion390060to400000]",  buf,  2u);
              }

              if ([v95 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v95, "icd_sagaDatabaseUserVersion") >= 1)
              {
                __int16 v97 = (void **)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v298,  &off_1001B3A48,  3LL));
                v323 = v97;
                id v98 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  v299,  1LL));
                uint64_t v324 = (uint64_t)v98;
                id v99 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v323,  2LL));
                int v100 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v99));

                id v101 = v95;
                id v102 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Container queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Container,  "queryWithLibrary:predicate:",  v101,  v100));
                v103 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
                block = _NSConcreteStackBlock;
                uint64_t p_block = 3221225472LL;
                uint64_t v319 = (uint64_t)sub_10002A718;
                v320 = &unk_1001A6458;
                id v104 = v103;
                v321 = v104;
                [v102 enumeratePersistentIDsUsingBlock:&block];
                os_log_t v105 = sub_1000DD8FC();
                id v106 = (os_log_s *)objc_claimAutoreleasedReturnValue(v105);
                if (os_log_type_enabled(v106, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138543362;
                  *(void *)&uint8_t buf[4] = v104;
                  _os_log_impl( (void *)&_mh_execute_header,  v106,  OS_LOG_TYPE_DEFAULT,  "Will reset date_modified to 0 for playlistPersistenIDs=%{public}@",  buf,  0xCu);
                }

                *(void *)buf = _NSConcreteStackBlock;
                *(void *)&buf[8] = 3221225472LL;
                *(void *)&buf[16] = sub_10002A764;
                v314 = &unk_1001A64D0;
                *(void *)&__int128 v315 = v104;
                *((void *)&v315 + 1) = v101;
                id v107 = v101;
                v108 = v104;
                [v107 performDatabaseTransactionWithBlock:buf];

                [v107 setSagaLastSubscribedContainersUpdateTime:0];
                os_log_t v109 = sub_1000DD8D8();
                id v110 = (os_log_s *)objc_claimAutoreleasedReturnValue(v109);
                if (os_log_type_enabled(v110, OS_LOG_TYPE_DEFAULT))
                {
                  *(_WORD *)buf = 0;
                  _os_log_impl( (void *)&_mh_execute_header,  v110,  OS_LOG_TYPE_DEFAULT,  "Resetting sagaOnDiskDatabaseRevision to 1 to update date_modified for subscribed playlists",  buf,  2u);
                }

                [v107 setSagaNeedsFullUpdate:1];
              }

              uint64_t v3 = 400000LL;
            }

            goto LABEL_468;
          }

          if (v3 == 390030)
          {
            id v149 = v2;
            v150 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v150, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v150,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion390030to390040]",  buf,  2u);
            }

            if ([v149 sagaOnDiskDatabaseRevision]
              && (uint64_t)objc_msgSend(v149, "icd_sagaDatabaseUserVersion") >= 1)
            {
              os_log_t v151 = sub_1000DD8D8();
              int v152 = (os_log_s *)objc_claimAutoreleasedReturnValue(v151);
              if (os_log_type_enabled(v152, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v152,  OS_LOG_TYPE_DEFAULT,  "Resetting sagaOnDiskDatabaseRevision to 1 to update missing category_type_mask and grouping_sort_key",  buf,  2u);
              }

              [v149 setSagaNeedsFullUpdate:1];
            }

            uint64_t v67 = 390000LL;
            goto LABEL_292;
          }

          if (v3 == 390040)
          {
            id v38 = v2;
            id v39 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "-[CloudServer _migrateFromUserVersion390040to390050]",  buf,  2u);
            }

            if ([v38 sagaOnDiskDatabaseRevision]
              && (uint64_t)objc_msgSend(v38, "icd_sagaDatabaseUserVersion") >= 1)
            {
              os_log_t v40 = sub_1000DD8D8();
              id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
              if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "Resetting sagaOnDiskDatabaseRevision to 1 to update missing hls fields",  buf,  2u);
              }

              [v38 setSagaNeedsFullUpdate:1];
            }

            uint64_t v42 = 390000LL;
            goto LABEL_457;
          }
        }
      }

      else if (v3 <= 530019)
      {
        if (v3 <= 520009)
        {
          switch(v3)
          {
            case 510000LL:
              id v203 = v2;
              v204 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v204, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v204,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 510010",  buf,  2u);
              }

              if ([v203 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v203, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v203 setSagaNeedsFullUpdate:1];
                [v203 setSagaLastLibraryUpdateTime:0];
              }

              unsigned __int16 v81 = -14288;
LABEL_356:
              uint64_t v205 = v81 | 0x70000u;
LABEL_467:
              uint64_t v3 = v205 + 10;
              break;
            case 510010LL:
              id v206 = v2;
              v207 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v207, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v207,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 520000",  buf,  2u);
              }

              if (_os_feature_enabled_impl("MediaPlayer", "Favoriting")
                && [v206 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v206, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v206 setSagaNeedsFullUpdate:1];
                [v206 setSagaLastLibraryUpdateTime:0];
              }

              unsigned __int16 v56 = -4288;
LABEL_364:
              uint64_t v3 = v56 | 0x70000u;
              break;
            case 520000LL:
              id v79 = v2;
              id v80 = os_log_create("com.apple.amp.itunescloudd", "XPC");
              if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v80,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 520010",  buf,  2u);
              }

              if ([v79 sagaOnDiskDatabaseRevision]
                && (uint64_t)objc_msgSend(v79, "icd_sagaDatabaseUserVersion") >= 1)
              {
                [v79 setSagaNeedsFullUpdate:1];
                [v79 setSagaLastLibraryUpdateTime:0];
              }

              unsigned __int16 v81 = -4288;
              goto LABEL_356;
          }
        }

        else if (v3 > 529999)
        {
          if (v3 == 530000)
          {
            id v269 = v2;
            v270 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v270, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v270,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 530010",  buf,  2u);
            }

            if ([v269 sagaOnDiskDatabaseRevision]
              && (uint64_t)objc_msgSend(v269, "icd_sagaDatabaseUserVersion") >= 1
              && _os_feature_enabled_impl("MediaPlayer", "AddToLibraryWhenFavoriting")
              && !objc_msgSend(v269, "icd_sagaCloudFavoriteSongAddToLibraryBehavior"))
            {
              os_log_t v271 = sub_1000DD8D8();
              v272 = (os_log_s *)objc_claimAutoreleasedReturnValue(v271);
              if (os_log_type_enabled(v272, OS_LOG_TYPE_DEFAULT))
              {
                *(void *)buf = 67109376LL;
                *(_WORD *)&buf[8] = 1024;
                *(_DWORD *)&buf[10] = 1;
                _os_log_impl( (void *)&_mh_execute_header,  v272,  OS_LOG_TYPE_DEFAULT,  "AddToLibraryWhenFavoriting is enabled, but addToLibraryBehavior=%d, setting to %d",  buf,  0xEu);
              }

              objc_msgSend(v269, "icd_setSagaCloudFavoriteSongAddToLibraryBehavior:", 1);
            }

            uint64_t v205 = 530000LL;
            goto LABEL_467;
          }

          if (v3 == 530010)
          {
            id v120 = v2;
            id v121 = v309;
            id v122 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v122, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v122,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 530020",  buf,  2u);
            }

            block = 0LL;
            uint64_t p_block = (uint64_t)&block;
            uint64_t v319 = 0x2020000000LL;
            LOBYTE(v320) = 0;
            *(void *)buf = _NSConcreteStackBlock;
            *(void *)&buf[8] = 3221225472LL;
            *(void *)&buf[16] = sub_10002AB54;
            v314 = &unk_1001A2300;
            *(void *)&__int128 v315 = &block;
            [v120 databaseConnectionAllowingWrites:0 withBlock:buf];
            if (*(_BYTE *)(p_block + 24)
              && [v120 sagaOnDiskDatabaseRevision]
              && (uint64_t)objc_msgSend(v120, "icd_sagaDatabaseUserVersion") >= 1)
            {
              [v120 setSagaNeedsFullUpdate:1];
              [v120 setSagaLastLibraryUpdateTime:0];
            }

            _Block_object_dispose(&block, 8);

            uint64_t v92 = 530000LL;
            goto LABEL_386;
          }
        }

        else
        {
          if (v3 == 520010)
          {
            id v156 = v309;
            v157 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v157, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v157,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 520020",  buf,  2u);
            }

            v158 = objc_alloc(&OBJC_CLASS___CloudPendingChangesCoordinator);
            v160 = -[CloudPendingChangesCoordinator initWithConfiguration:prefix:loggable:]( v158,  "initWithConfiguration:prefix:loggable:",  v156,  @"Saga",  objc_opt_class(&OBJC_CLASS___SagaLibrary, v159));

            -[CloudPendingChangesCoordinator removeAllPendingChanges](v160, "removeAllPendingChanges");
            uint64_t v92 = 520000LL;
            goto LABEL_386;
          }

          if (v3 == 520020)
          {
            id v45 = v2;
            __int16 v46 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 530000",  buf,  2u);
            }

            if ([v45 sagaOnDiskDatabaseRevision]
              && (uint64_t)objc_msgSend(v45, "icd_sagaDatabaseUserVersion") >= 1)
            {
              [v45 setSagaLastLibraryUpdateTime:0];
            }

            unsigned __int16 v47 = 5712;
            goto LABEL_277;
          }
        }
      }

      else if (v3 > 600019)
      {
        if (v3 > 600039)
        {
          if (v3 == 600040)
          {
            id v286 = v2;
            v287 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v287, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v287,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 600050",  buf,  2u);
            }

            if ((sub_1000B1B34() & 1) == 0)
            {
              *(void *)buf = _NSConcreteStackBlock;
              *(void *)&buf[8] = 3221225472LL;
              *(void *)&buf[16] = sub_10002B0D4;
              v314 = &unk_1001A3928;
              *(void *)&__int128 v315 = v286;
              [(id)v315 databaseConnectionAllowingWrites:0 withBlock:buf];
            }

            uint64_t v42 = 600000LL;
LABEL_457:
            uint64_t v3 = v42 + 50;
            goto LABEL_468;
          }

          if (v3 == 600050)
          {
            id v142 = v2;
            id v143 = v309;
            id v144 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v144, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v144,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 610000",  buf,  2u);
            }

            if ((sub_1000B1B34() & 1) == 0
              && [v142 sagaOnDiskDatabaseRevision]
              && (uint64_t)objc_msgSend(v142, "icd_sagaDatabaseUserVersion") >= 1)
            {
              block = 0LL;
              uint64_t p_block = (uint64_t)&block;
              uint64_t v319 = 0x2020000000LL;
              LOBYTE(v320) = 0;
              *(void *)buf = _NSConcreteStackBlock;
              *(void *)&buf[8] = 3221225472LL;
              *(void *)&buf[16] = sub_10002B1B0;
              v314 = &unk_1001A2300;
              *(void *)&__int128 v315 = &block;
              [v142 databaseConnectionAllowingWrites:0 withBlock:buf];
              if (*(_BYTE *)(p_block + 24))
              {
                [v142 setSagaNeedsFullUpdate:1];
                [v142 setSagaInitiateClientResetSync:1];
                [v142 setSagaLastLibraryUpdateTime:0];
              }

              _Block_object_dispose(&block, 8);
            }

            unsigned __int16 v33 = 20176;
            goto LABEL_270;
          }
        }

        else
        {
          if (v3 == 600020)
          {
            id v174 = v2;
            v175 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v175, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v175,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 600030",  buf,  2u);
            }

            v176 = (void **)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  v308,  2048LL));
            block = v176;
            v177 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  v308,  512LL));
            uint64_t p_block = (uint64_t)v177;
            v178 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &block,  2LL));
            v179 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AnyCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AnyCompoundPredicate,  "predicateMatchingPredicates:",  v178));

            *(void *)buf = v179;
            v180 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v307,  &off_1001B3A48,  2LL));
            *(void *)&buf[8] = v180;
            v181 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v303,  &stru_1001A7960,  1LL));
            *(void *)&buf[16] = v181;
            v182 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  3LL));
            v183 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v182));

            sub_10002A1D4(v174, (uint64_t)v183);
            uint64_t v169 = 600000LL;
            goto LABEL_451;
          }

          if (v3 == 600030)
          {
            id v65 = v2;
            uint64_t v66 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "Migrating to version 600040",  buf,  2u);
            }

            uint64_t v67 = 600000LL;
LABEL_292:
            uint64_t v3 = v67 + 40;
          }
        }
      }

      else if (v3 > 599999)
      {
        if (v3 == 600000)
        {
          v245 = os_log_create("com.apple.amp.itunescloudd", "XPC");
          if (os_log_type_enabled(v245, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v245, OS_LOG_TYPE_DEFAULT, "Migrating to version 600010", buf, 2u);
          }

          uint64_t v205 = 600000LL;
          goto LABEL_467;
        }

        if (v3 == 600010)
        {
          id v89 = v2;
          id v90 = v309;
          char v91 = os_log_create("com.apple.amp.itunescloudd", "XPC");
          if (os_log_type_enabled(v91, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v91, OS_LOG_TYPE_DEFAULT, "Migrating to version 600020", buf, 2u);
          }

          if ((sub_1000B1B34() & 1) == 0
            && [v89 sagaOnDiskDatabaseRevision]
            && (uint64_t)objc_msgSend(v89, "icd_sagaDatabaseUserVersion") >= 1)
          {
            v323 = 0LL;
            uint64_t v324 = (uint64_t)&v323;
            uint64_t v325 = 0x2020000000LL;
            LOBYTE(v326) = 0;
            block = _NSConcreteStackBlock;
            uint64_t p_block = 3221225472LL;
            uint64_t v319 = (uint64_t)sub_10002AC94;
            v320 = &unk_1001A2300;
            v321 = &v323;
            [v89 databaseConnectionAllowingWrites:0 withBlock:&block];
            *(void *)buf = _NSConcreteStackBlock;
            *(void *)&buf[8] = 3221225472LL;
            *(void *)&buf[16] = sub_10002AFD4;
            v314 = &unk_1001A2328;
            *((void *)&v315 + 1) = &v323;
            *(void *)&__int128 v315 = v89;
            [(id)v315 databaseConnectionAllowingWrites:1 withBlock:buf];

            _Block_object_dispose(&v323, 8);
          }

          uint64_t v92 = 600000LL;
          goto LABEL_386;
        }
      }

      else
      {
        if (v3 == 530020)
        {
          id v145 = v2;
          id v146 = os_log_create("com.apple.amp.itunescloudd", "XPC");
          if (os_log_type_enabled(v146, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v146, OS_LOG_TYPE_DEFAULT, "Migrating to version 540000", buf, 2u);
          }

          if ([v145 sagaOnDiskDatabaseRevision]
            && (uint64_t)objc_msgSend(v145, "icd_sagaDatabaseUserVersion") >= 1)
          {
            [v145 setSagaNeedsFullUpdate:1];
            [v145 setSagaLastLibraryUpdateTime:0];
          }

          unsigned __int16 v47 = 15712;
LABEL_277:
          uint64_t v3 = v47 | 0x80000u;
          goto LABEL_468;
        }

        if (v3 == 540000)
        {
          id v30 = v2;
          id v31 = v309;
          id v32 = os_log_create("com.apple.amp.itunescloudd", "XPC");
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Migrating to version 600000", buf, 2u);
          }

          if ((sub_1000B1B34() & 1) == 0
            && [v30 sagaOnDiskDatabaseRevision]
            && (uint64_t)objc_msgSend(v30, "icd_sagaDatabaseUserVersion") >= 1)
          {
            block = 0LL;
            uint64_t p_block = (uint64_t)&block;
            uint64_t v319 = 0x2020000000LL;
            LOBYTE(v320) = 0;
            *(void *)buf = _NSConcreteStackBlock;
            *(void *)&buf[8] = 3221225472LL;
            *(void *)&buf[16] = sub_10002ABA4;
            v314 = &unk_1001A2300;
            *(void *)&__int128 v315 = &block;
            [v30 databaseConnectionAllowingWrites:0 withBlock:buf];
            if (*(_BYTE *)(p_block + 24))
            {
              [v30 setSagaNeedsFullUpdate:1];
              [v30 setSagaInitiateClientResetSync:1];
              [v30 setSagaLastLibraryUpdateTime:0];
            }

            _Block_object_dispose(&block, 8);
          }

          unsigned __int16 v33 = 10176;
LABEL_270:
          uint64_t v3 = v33 | 0x90000u;
        }
      }

LABEL_468:
      objc_msgSend(v2, "icd_setSagaDatabaseUserVersion:", v3);
      v288 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v288, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        *(void *)&uint8_t buf[4] = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v288,  OS_LOG_TYPE_DEFAULT,  "Setting current user version: %ld",  buf,  0xCu);
      }
    }

    while (v3 < 610000);
  }

LABEL_10:
  id v8 = v2;
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 valueForDatabaseProperty:@"MLEnableICMLConfig"]);
  if (v10)
  {
    uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSNumber, v9);
    uint64_t v13 = objc_opt_class(&OBJC_CLASS___NSDictionary, v12);
    uint64_t v15 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  v11,  v13,  objc_opt_class(&OBJC_CLASS___NSString, v14),  0LL);
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    block = 0LL;
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClasses:fromData:error:",  v16,  v10,  &block));
    uint64_t v18 = block;

    __int16 v19 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (!v17 || v18)
    {
      if (v20)
      {
        *(_DWORD *)buf = 138543362;
        *(void *)&uint8_t buf[4] = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Error (%{public}@) unarchiving enableICMLConfigData",  buf,  0xCu);
      }
    }

    else
    {
      if (v20)
      {
        *(_DWORD *)buf = 138543362;
        *(void *)&uint8_t buf[4] = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Found autoEnableICMLConfig=%{public}@",  buf,  0xCu);
      }

      __int16 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([v17 objectForKey:@"MLActiveAccountDSID"]);
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v17 objectForKey:@"MLAutoEnableICML"]);
      id v22 = v21;
      if (v19 && ![v21 intValue])
      {
        dispatch_semaphore_t v23 = dispatch_semaphore_create(0LL);
        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentity specificAccountWithDSID:]( &OBJC_CLASS___ICUserIdentity,  "specificAccountWithDSID:",  v19));
        id v25 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
        *(void *)buf = _NSConcreteStackBlock;
        *(void *)&buf[8] = 3221225472LL;
        *(void *)&buf[16] = sub_10002B2A0;
        v314 = &unk_1001A6068;
        *(void *)&__int128 v315 = v24;
        *((void *)&v315 + 1) = v25;
        dispatch_semaphore_t v316 = v23;
        id v26 = v24;
        id v27 = v25;
        __int16 v28 = v23;
        [v27 getPropertiesForUserIdentity:v26 completionHandler:buf];
        dispatch_semaphore_wait(v28, 0xFFFFFFFFFFFFFFFFLL);
      }
    }

    [v8 deleteDatabaseProperty:@"MLEnableICMLConfig"];
  }

  else
  {
    uint64_t v18 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "No configuration to determine if iCML should be enabled/disabled",  buf,  2u);
    }
  }
}

  os_unfair_lock_unlock(&self->_lock);
  id v38 = 0u;
  id v39 = 0u;
  os_log_t v36 = 0u;
  id v37 = 0u;
  BOOL v20 = v9;
  __int16 v21 = [v20 countByEnumeratingWithState:&v36 objects:v48 count:16];
  if (v21)
  {
    id v22 = v21;
    dispatch_semaphore_t v23 = *(void *)v37;
    do
    {
      for (i = 0LL; i != v22; i = (char *)i + 1)
      {
        if (*(void *)v37 != v23) {
          objc_enumerationMutation(v20);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v36 + 1) + 8LL * (void)i) + 16LL))();
      }

      id v22 = [v20 countByEnumeratingWithState:&v36 objects:v48 count:16];
    }

    while (v22);
  }

  if (v8)
  {
    id v25 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
LABEL_21:

      goto LABEL_22;
    }

    *(_DWORD *)buf = 138543618;
    id v41 = self;
    uint64_t v42 = 2114;
    id v43 = v8;
    id v26 = "%{public}@: Could not find valid storefront identifier; error: %{public}@.";
    id v27 = v25;
    __int16 v28 = OS_LOG_TYPE_ERROR;
    int v29 = 22;
LABEL_20:
    _os_log_impl((void *)&_mh_execute_header, v27, v28, v26, buf, v29);
    goto LABEL_21;
  }

  if (!v12) {
    goto LABEL_22;
  }
  if ((v14 & 1) == 0)
  {
    id v25 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_21;
    }
    *(_DWORD *)buf = 138543362;
    id v41 = self;
    id v26 = "%{public}@: Storefront identifier did not change. Skipping invoking observation handlers.";
    id v27 = v25;
    __int16 v28 = OS_LOG_TYPE_DEFAULT;
    int v29 = 12;
    goto LABEL_20;
  }

  id v30 = [v13 count];
  id v31 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
  {
    id v32 = "s";
    *(_DWORD *)buf = 138544130;
    uint64_t v42 = 2114;
    id v41 = self;
    if (v30 == (id)1) {
      id v32 = "";
    }
    id v43 = v7;
    __int16 v44 = 2048;
    id v45 = v30;
    __int16 v46 = 2080;
    unsigned __int16 v47 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Storefront identifier did change: %{public}@. About to notify %llu observer%s.",  buf,  0x2Au);
  }

  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  v34[2] = sub_100035F1C;
  v34[3] = &unk_1001A2670;
  v34[4] = self;
  int v35 = (id)v7;
  [v13 enumerateKeysAndObjectsUsingBlock:v34];

LABEL_22:
}

  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v18, 8);
}
  }

  if ([*(id *)(a1 + 40) isCancelled])
  {
    __int16 v19 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Noticed cancel flag while downloading artist hero images, stopping...",  buf,  2u);
    }

    *a4 = 1;
  }
}
      }

      a3 = &v12[v11];
      a4 = a4 - 8 - v11;
      if (!a4) {
        return v6;
      }
    }

    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([a1 _parseDictionaryCollectionWithBytes:a3 + 8 length:v11]);
    if (v13) {
      [v6 addEntriesFromDictionary:v13];
    }
    goto LABEL_10;
  }

  return v6;
}
      }

      uint64_t v16 = bswap32(v11);
      a3 += v16 + 8;
      a4 = a4 - 8 - v16;
      if (!a4) {
        return v6;
      }
    }

    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  bswap32(*((_DWORD *)a3 + 2))));
    uint64_t v13 = v6;
    uint64_t v14 = v12;
    uint64_t v15 = @"dmap.itemid";
LABEL_7:
    [v13 setObject:v14 forKey:v15];
    goto LABEL_10;
  }

  return v6;
}

    goto LABEL_11;
  }

  if (WeakRetained)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained accountManager]);
    dispatch_queue_attr_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 state]);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 supportedConfigurations]);
    uint64_t v9 = [v8 count];

    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
    uint64_t v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
    if (v9)
    {
      if (v11)
      {
        *(_DWORD *)buf = 134217984;
        __int16 v19 = WeakRetained;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "ICDBackgroundTaskManager %p - periodicPolling - Performing periodic sync",  buf,  0xCu);
      }

      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained handlerCoordinator]);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained accountManager]);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 state]);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472LL;
      v16[2] = sub_10011BE10;
      v16[3] = &unk_1001A7130;
      id v17 = (os_log_s *)WeakRetained;
      [v12 enumerateHandlersForAccountState:v14 usingBlock:v16];

      uint64_t v10 = v17;
      goto LABEL_10;
    }

    if (v11)
    {
      *(_DWORD *)buf = 134217984;
      __int16 v19 = WeakRetained;
      uint64_t v15 = "ICDBackgroundTaskManager %p - periodicPolling - Ignoring polling [No configurations]";
      goto LABEL_9;
    }

    goto LABEL_10;
  }

void sub_100029F20(_Unwind_Exception *a1)
{
}

void sub_100029F54(void *a1)
{
  id v1 = a1;
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Removing play data plists", v9, 2u);
  }

  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v1 libraryContainerPath]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue( [v3 stringByAppendingPathComponent:@"iTunes_Control/iTunes/LatestCloudPlayCountChanges.plist"]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( [v3 stringByAppendingPathComponent:@"iTunes_Control/iTunes/LatestCloudPlayDateChanges.plist"]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( [v3 stringByAppendingPathComponent:@"iTunes_Control/iTunes/LatestCloudSkipCountChanges.plist"]);
  dispatch_queue_attr_t v7 = (void *)objc_claimAutoreleasedReturnValue( [v3 stringByAppendingPathComponent:@"iTunes_Control/iTunes/LatestCloudPlayDataChangesDate.plist"]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v8 removeItemAtPath:v4 error:0];
  [v8 removeItemAtPath:v5 error:0];
  [v8 removeItemAtPath:v6 error:0];
  [v8 removeItemAtPath:v7 error:0];
}

void sub_10002A0B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10002B848;
  v5[3] = &unk_1001A5AC0;
  dispatch_semaphore_t v6 = dispatch_semaphore_create(0LL);
  id v4 = v6;
  [v3 removeSource:a1 withCompletionHandler:v5];

  dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
}

void sub_10002A158(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10002B6C0;
  v6[3] = &unk_1001A2270;
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v6];
}

void sub_10002A1D4(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ML3Track queryWithLibrary:predicate:](&OBJC_CLASS___ML3Track, "queryWithLibrary:predicate:", v3, a2));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10002B5B0;
  v13[3] = &unk_1001A6458;
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v14 = v5;
  [v4 enumeratePersistentIDsUsingBlock:v13];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10002B5FC;
  v10[3] = &unk_1001A64D0;
  id v6 = v5;
  id v11 = v6;
  id v7 = v3;
  id v12 = v7;
  [v7 performDatabaseTransactionWithBlock:v10];
  if ([v6 count])
  {
    [v7 setJaliscoNeedsUpdateForTokens:1];
    id v8 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = [v6 count];
      *(_DWORD *)buf = 134217984;
      id v16 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Removing purchase history token from %lu tracks",  buf,  0xCu);
    }
  }
}

void sub_10002A388(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( [a2 executeQuery:@"SELECT COUNT() FROM artwork_token WHERE artwork_type = ? AND artwork_token LIKE '%%0x0%%'" withParameters:&off_1001B4A58]);
  uint64_t v4 = (uint64_t)[v3 int64ValueForFirstRowAndColumn];
  if (v4 >= 1)
  {
    uint64_t v5 = v4;
    id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 134217984;
      uint64_t v8 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Detected %lld invalid artist artwork tokens, clearing last artist image import date...",  (uint8_t *)&v7,  0xCu);
    }

    [*(id *)(a1 + 32) setValue:&off_1001B3A48 forDatabaseProperty:@"MLArtistHeroImageImportDate"];
  }
}

void sub_10002A488(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

id sub_10002A4D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"DELETE FROM artwork_token WHERE artwork_source_type=%d AND entity_pid",  400LL));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[ML3DatabaseStatementRenderer defaultRenderer]( &OBJC_CLASS___ML3DatabaseStatementRenderer,  "defaultRenderer"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "statementWithPrefix:inParameterCount:", v4, objc_msgSend(*(id *)(a1 + 32), "count")));

  uint64_t v7 = *(void *)(a1 + 32);
  id v23 = 0LL;
  id v8 = [v3 executeUpdate:v6 withParameters:v7 error:&v23];
  id v9 = v23;
  uint64_t v10 = v9;
  if ((v8 & 1) != 0)
  {
    id v18 = v9;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    id v11 = *(id *)(a1 + 32);
    id v12 = [v11 countByEnumeratingWithState:&v19 objects:v24 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v20;
      do
      {
        uint64_t v15 = 0LL;
        do
        {
          if (*(void *)v20 != v14) {
            objc_enumerationMutation(v11);
          }
          objc_msgSend( *(id *)(a1 + 40),  "updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:preserveExistingAvailableTo ken:usingConnection:",  objc_msgSend(*(id *)(*((void *)&v19 + 1) + 8 * (void)v15), "longLongValue"),  0,  1,  0,  v3,  0.0);
          uint64_t v15 = (char *)v15 + 1;
        }

        while (v13 != v15);
        id v13 = [v11 countByEnumeratingWithState:&v19 objects:v24 count:16];
      }

      while (v13);
    }

    [*(id *)(a1 + 40) cleanupArtworkWithOptions:30 usingConnection:v3];
    uint64_t v10 = v18;
  }

  else
  {
    id v16 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v26 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Failed to purge artwork_token for movies and tv shows. err=%{public}@",  buf,  0xCu);
    }
  }

  return v8;
}

uint64_t sub_10002A710(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10002A718(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

id sub_10002A764(uint64_t a1, void *a2)
{
  uint64_t v7 = ML3ContainerPropertyDateModified;
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v7, 1LL));
  id v5 = +[ML3Container setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3Container,  "setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  &off_1001B4A70,  v4,  *(void *)(a1 + 32),  *(void *)(a1 + 40),  v3,  v7);

  return v5;
}

void sub_10002A828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary mediaFolderPathByAppendingPathComponent:]( &OBJC_CLASS___ML3MusicLibrary,  "mediaFolderPathByAppendingPathComponent:",  *(void *)a3));
  id v6 = *(id *)(a3 + 8);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 pathExtension]);
  uint64_t v8 = ML3OfflineHLSFileExtensions();
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  unsigned int v10 = [v9 containsObject:v7];

  if (v10)
  {
    id v25 = v7;
    id v27 = v5;
    id v11 = [[ICFileContentKeyStore alloc] initWithPath:v5];
    id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](&OBJC_CLASS___NSMutableArray, "arrayWithCapacity:", 2LL));
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    v32[2] = sub_10002B340;
    v32[3] = &unk_1001A22D8;
    id v26 = v6;
    id v13 = v6;
    id v33 = v13;
    id v34 = *(id *)(a1 + 32);
    id v14 = v12;
    id v35 = v14;
    [v11 enumerateKeyEntriesUsingBlock:v32];
    uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = [v14 count];
      *(_DWORD *)buf = 134218498;
      id v38 = v16;
      __int16 v39 = 2114;
      id v40 = v13;
      __int16 v41 = 2114;
      id v42 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Purging %lu keys for song '%{public}@': %{public}@",  buf,  0x20u);
    }

    __int128 v30 = 0u;
    __int128 v31 = 0u;
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    id v17 = v14;
    id v18 = [v17 countByEnumeratingWithState:&v28 objects:v36 count:16];
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = *(void *)v29;
      do
      {
        for (i = 0LL; i != v19; i = (char *)i + 1)
        {
          if (*(void *)v29 != v20) {
            objc_enumerationMutation(v17);
          }
          __int128 v22 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
          id v23 = (void *)objc_claimAutoreleasedReturnValue([v11 removeKeyForIdentifier:v22]);
          if (v23)
          {
            uint64_t v24 = os_log_create("com.apple.amp.itunescloudd", "XPC");
            if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138543618;
              id v38 = v22;
              __int16 v39 = 2114;
              id v40 = v23;
              _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "Failed to remove key '%{public}@'. err=%{public}@",  buf,  0x16u);
            }
          }
        }

        id v19 = [v17 countByEnumeratingWithState:&v28 objects:v36 count:16];
      }

      while (v19);
    }

    id v6 = v26;
    id v5 = v27;
    uint64_t v7 = v25;
  }
}

void sub_10002AB54(uint64_t a1, void *a2)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue([a2 executeQuery:@"SELECT 1 FROM container WHERE is_collaborative = 1"]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 hasAtLeastOneRow];
}

void sub_10002ABA4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( [a2 executeQuery:@"SELECT COUNT() FROM item_store WHERE store_saga_id != 0 GROUP BY store_saga_id HAVING COUNT() > 1"]);
  if ([v3 int64ValueForFirstRowAndColumn])
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 134217984;
      id v6 = [v3 int64ValueForFirstRowAndColumn];
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Found %lld rows with duplicate saga_ids. Will perform a reset sync",  (uint8_t *)&v5,  0xCu);
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
  }
}

void sub_10002AC94(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT COUNT() FROM container WHERE store_cloud_id != 0 GROUP BY store_cloud_id HAVING COUNT() > 1"]);
  if ([v4 int64ValueForFirstRowAndColumn])
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
    int v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = 134217984;
      id v20 = [v4 int64ValueForFirstRowAndColumn];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Found %lld rows with duplicate cloud-ids. Will perform a reset sync",  (uint8_t *)&v19,  0xCu);
    }
  }

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL)
    || (id v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo")),
        unsigned int v7 = [v6 isIPhone],
        v6,
        !v7))
  {
    uint64_t v8 = v4;
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT COUNT() FROM container WHERE sync_id != 0 AND is_src_remote != 1"]);

    if ([v8 int64ValueForFirstRowAndColumn])
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
      id v9 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = [v8 int64ValueForFirstRowAndColumn];
        int v19 = 134217984;
        id v20 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Found %lld rows with un expected sync_ids for playlists. Will perform a reset sync",  (uint8_t *)&v19,  0xCu);
      }
    }
  }

  uint64_t v11 = *(void *)(a1 + 32);
  if (*(_BYTE *)(*(void *)(v11 + 8) + 24LL))
  {
    id v12 = v8;
  }

  else
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT COUNT() FROM container WHERE cloud_global_id != '' GROUP BY cloud_global_id HAVING COUNT() > 1"]);

    id v13 = [v12 int64ValueForFirstRowAndColumn];
    uint64_t v11 = *(void *)(a1 + 32);
    if (v13)
    {
      *(_BYTE *)(*(void *)(v11 + 8) + 24LL) = 1;
      id v14 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        id v15 = [v12 int64ValueForFirstRowAndColumn];
        int v19 = 134217984;
        id v20 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Found %lld rows with duplicate cloud global ids. Will perform a reset sync",  (uint8_t *)&v19,  0xCu);
      }

      uint64_t v11 = *(void *)(a1 + 32);
    }
  }

  if (*(_BYTE *)(*(void *)(v11 + 8) + 24LL))
  {
    id v16 = v12;
  }

  else
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT COUNT() FROM container WHERE cloud_universal_library_id != '' GROUP BY cloud_universal_library_id HAVING COUNT() > 1"]);

    if ([v16 int64ValueForFirstRowAndColumn])
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
      id v17 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        id v18 = [v16 int64ValueForFirstRowAndColumn];
        int v19 = 134217984;
        id v20 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Found %lld rows with duplicate cloud universal library ids. Will perform a reset sync",  (uint8_t *)&v19,  0xCu);
      }
    }
  }
}

void sub_10002AFD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  unsigned int v5 = [v4 isIPhone];

  if (v5
    && ([v3 executeUpdate:@"UPDATE container SET sync_id=0 WHERE (is_src_remote != 1 AND sync_id != 0)"] & 1) == 0)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)unsigned int v7 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "Error clearing sync id from playlists that were incorrectly updated",  v7,  2u);
    }
  }

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL))
  {
    [*(id *)(a1 + 32) setSagaNeedsFullUpdate:1];
    [*(id *)(a1 + 32) setSagaInitiateClientResetSync:1];
    [*(id *)(a1 + 32) setSagaLastLibraryUpdateTime:0];
    [*(id *)(a1 + 32) setSagaLastSubscribedContainersUpdateTime:0];
  }
}

void sub_10002B0D4(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( a2,  "executeQuery:",  @"SELECT item_pid FROM item JOIN item_store USING(item_pid) WHERE (media_type IN (8, 1032) AND store_saga_id = 0 AND match_redownload_params != '' AND in_my_library = 1) LIMIT 1"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForFirstRowAndColumn]);

  if (v4)
  {
    unsigned int v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Found at least one item in library with invalid saga id and valid download parameters. Will initiate a reset syn c to clear state",  v6,  2u);
    }

    [*(id *)(a1 + 32) setSagaNeedsFullUpdate:1];
    [*(id *)(a1 + 32) setSagaInitiateClientResetSync:1];
    [*(id *)(a1 + 32) setSagaLastLibraryUpdateTime:0];
    [*(id *)(a1 + 32) setSagaLastSubscribedContainersUpdateTime:0];
  }
}

void sub_10002B1B0(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue( [a2 executeQuery:@"SELECT COUNT() FROM item_store WHERE store_saga_id != 0 GROUP BY store_saga_id HAVING COUNT() > 1"]);
  if ([v3 int64ValueForFirstRowAndColumn])
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 134217984;
      id v6 = [v3 int64ValueForFirstRowAndColumn];
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Found %lld rows with duplicate saga_ids. Will perform a reset sync",  (uint8_t *)&v5,  0xCu);
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = 1;
  }
}

void sub_10002B2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    if (!a3)
    {
      uint64_t v4 = -[ICConnectionConfiguration initWithUserIdentity:userIdentityStore:]( objc_alloc(&OBJC_CLASS___ICConnectionConfiguration),  "initWithUserIdentity:userIdentityStore:",  *(void *)(a1 + 32),  *(void *)(a1 + 40));
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472LL;
      v5[2] = sub_10002B338;
      v5[3] = &unk_1001A6398;
      id v6 = *(id *)(a1 + 48);
      sub_1000C3050(v4, -101LL, v5);
    }
  }

uint64_t sub_10002B338(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10002B340(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 renewalDate]);
    uint64_t v7 = a1[4];
    int v12 = 138543874;
    id v13 = v5;
    __int16 v14 = 2114;
    id v15 = v6;
    __int16 v16 = 2114;
    uint64_t v17 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Found persisted key '%{public}@' with renewal Date '%{public}@' for song '%{public}@",  (uint8_t *)&v12,  0x20u);
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 renewalDate]);
  id v9 = [v8 compare:a1[5]];

  if (v9 == (id)-1LL)
  {
    id v10 = (void *)a1[6];
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    [v10 addObject:v11];
  }
}

void sub_10002B494(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = os_log_create("com.apple.amp.itunescloudd", "Default");
  uint64_t v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSError msv_description](v2, "msv_description"));
      int v6 = 138543362;
      uint64_t v7 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Automatic download media kind update task completed error=%{public}@",  (uint8_t *)&v6,  0xCu);
    }
  }

  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v6) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Automatic download media kind update task completed",  (uint8_t *)&v6,  2u);
  }
}

void sub_10002B5A0(id a1, ML3DatabaseConnection *a2)
{
  -[ML3DatabaseConnection executeUpdate:]( a2,  "executeUpdate:",  @"UPDATE container SET is_src_remote = 2 WHERE cloud_is_subscribed AND is_src_remote = 0");
}

void sub_10002B5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

id sub_10002B5FC(uint64_t a1, void *a2)
{
  uint64_t v7 = ML3TrackPropertyPurchaseHistoryToken;
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v7, 1LL));
  id v5 = +[ML3Track setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3Track,  "setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  &off_1001B4A40,  v4,  *(void *)(a1 + 32),  *(void *)(a1 + 40),  v3,  v7);

  return v5;
}

void sub_10002B6C0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543618;
    id v13 = v5;
    __int16 v14 = 2048;
    id v15 = [v6 longLongValue];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "updating track with location '%{public}@' to store_item_id=%lld",  buf,  0x16u);
  }

  uint64_t v8 = *(void **)(a1 + 32);
  v11[0] = v6;
  v11[1] = v5;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 2LL));
  LOBYTE(v_Block_object_dispose((const void *)(v1 - 152), 8) = [v8 executeUpdate:@"UPDATE item_store SET store_item_id = ? WHERE item_pid IN (SELECT item_pid FROM item_extra WHERE location = ?)" withParameters:v9 error:0];

  if ((v8 & 1) == 0)
  {
    id v10 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v13 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "failed to update track with location '%{public}@'",  buf,  0xCu);
    }
  }
}

void sub_10002B848(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138543362;
      id v7 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "RemoveSource error: %{public}@",  (uint8_t *)&v6,  0xCu);
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10002BB64(_Unwind_Exception *a1)
{
}

void sub_10002C930(_Unwind_Exception *a1)
{
}

void sub_10002D5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_10002D618()
{
  id v4 = 0LL;
  if (!qword_1001DB5C8)
  {
    __int128 v5 = off_1001A23C0;
    uint64_t v6 = 0LL;
    qword_1001DB5C8 = _sl_dlopen(&v5, &v4);
  }

  v0 = (void *)qword_1001DB5C8;
  if (!qword_1001DB5C8)
  {
    v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryArtistAffinityAnalyzer.m",  20,  @"%s",  v4);

    __break(1u);
    goto LABEL_7;
  }

  id v1 = v4;
  if (v4) {
LABEL_7:
  }
    free(v1);
  return v0;
}

id sub_10002D71C()
{
  uint64_t v4 = 0LL;
  __int128 v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  v0 = (void *)qword_1001DB5E0;
  uint64_t v7 = qword_1001DB5E0;
  if (!qword_1001DB5E0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_10002D7D0;
    v3[3] = &unk_1001A6978;
    void v3[4] = &v4;
    sub_10002D7D0((uint64_t)v3);
    v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10002D7B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10002D7D0(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPPropertySet");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB5E0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPPropertySetClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryArtistAffinityAnalyzer.m",  24,  @"Unable to find class %s",  "MPPropertySet");

    __break(1u);
  }

id sub_10002D894()
{
  uint64_t v4 = 0LL;
  __int128 v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  v0 = (void *)qword_1001DB5C0;
  uint64_t v7 = qword_1001DB5C0;
  if (!qword_1001DB5C0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_10002DCC8;
    v3[3] = &unk_1001A6978;
    void v3[4] = &v4;
    sub_10002DCC8((uint64_t)v3);
    v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10002D930( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_10002D948()
{
  uint64_t v4 = 0LL;
  __int128 v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  v0 = (void *)qword_1001DB5D0;
  uint64_t v7 = qword_1001DB5D0;
  if (!qword_1001DB5D0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_10002DC04;
    v3[3] = &unk_1001A6978;
    void v3[4] = &v4;
    sub_10002DC04((uint64_t)v3);
    v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10002D9E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10002D9FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 results]);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_10002DB98;
    v13[3] = &unk_1001A2350;
    id v14 = v8;
    id v10 = v8;
    [v9 enumerateItemsUsingBlock:v13];

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained aggregateLibraryRecommendationMetricsFromSnapshots:v10]);
    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

  else
  {
    id WeakRetained = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled((os_log_t)WeakRetained, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v16 = v12;
      __int16 v17 = 2114;
      id v18 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)WeakRetained,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to retrieve library response for artist analysis. err=%{public}@",  buf,  0x16u);
    }
  }
}

void sub_10002DB98(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = sub_10002D948();
  if ((objc_opt_isKindOfClass(v5, v3) & 1) != 0)
  {
    uint64_t v4 = -[ICMusicLibraryContentItemSnapshot initWithSong:]( objc_alloc(&OBJC_CLASS___ICMusicLibraryContentItemSnapshot),  "initWithSong:",  v5);
    [*(id *)(a1 + 32) addObject:v4];
  }
}

void sub_10002DC04(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPModelSong");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB5D0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPModelSongClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryArtistAffinityAnalyzer.m",  21,  @"Unable to find class %s",  "MPModelSong");

    __break(1u);
  }

void sub_10002DCC8(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPModelLibraryRequest");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB5C0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPModelLibraryRequestClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryArtistAffinityAnalyzer.m",  25,  @"Unable to find class %s",  "MPModelLibraryRequest");

    __break(1u);
  }

void sub_10002DD8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!v5 || v6)
  {
    id v10 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543618;
      id v19 = WeakRetained;
      __int16 v20 = 2114;
      id v21 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to retrieve library response for artist analysis. err=%{public}@",  buf,  0x16u);
    }
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 results]);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_10002DFC0;
    v16[3] = &unk_1001A2350;
    id v10 = v8;
    __int16 v17 = v10;
    [v9 enumerateItemsUsingBlock:v16];

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained aggregateLibraryRecommendationMetricsFromSnapshots:v10]);
    uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      id v13 = *(void **)(a1 + 32);
      id v14 = [v11 count];
      *(_DWORD *)buf = 138543618;
      id v19 = v13;
      __int16 v20 = 2048;
      id v21 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Analyzing %lu user library artists.",  buf,  0x16u);
    }

    id v15 = (void *)objc_claimAutoreleasedReturnValue( [WeakRetained createFeatureProviderDictionaryFromNewContentResponse:*(void *)(a1 + 40) withLibraryArtistSnapshots:v11]);
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }
}

void sub_10002DFC0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = sub_10002D948();
  if ((objc_opt_isKindOfClass(v5, v3) & 1) != 0)
  {
    uint64_t v4 = -[ICMusicLibraryContentItemSnapshot initWithSong:]( objc_alloc(&OBJC_CLASS___ICMusicLibraryContentItemSnapshot),  "initWithSong:",  v5);
    [*(id *)(a1 + 32) addObject:v4];
  }
}

void sub_10002E1E0(id *a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10002E280;
  v4[3] = &unk_1001A3A08;
  id v5 = a1[4];
  id v6 = a1[5];
  id v7 = a1[6];
  ICDAAPUtilitiesWriteContainer(a2, 1835819884LL, v4);
}

void sub_10002E280(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10002E328;
  v6[3] = &unk_1001A23E0;
  uint64_t v4 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = *(id *)(a1 + 48);
  id v5 = v3;
  [v4 enumerateObjectsUsingBlock:v6];
}

void sub_10002E328(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectAtIndexedSubscript:a3]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10002E3F4;
  v10[3] = &unk_1001A3A08;
  id v11 = v5;
  id v12 = v6;
  uint64_t v7 = *(void *)(a1 + 40);
  id v13 = *(id *)(a1 + 48);
  id v8 = v6;
  id v9 = v5;
  ICDAAPUtilitiesWriteContainer(v7, 1835821428LL, v10);
}

void sub_10002E3F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  ICDAAPUtilitiesWriteProperty(v3, 1835624804LL, 5LL, *(void *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10002E49C;
  v6[3] = &unk_1001A5A48;
  uint64_t v4 = *(void **)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  id v8 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v6];
}

void sub_10002E49C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) hasInfoForProperty:v5])
  {
    ICDAAPUtilitiesWriteProperty( *(void *)(a1 + 40),  [*(id *)(a1 + 32) elementCodeForProperty:v5],  objc_msgSend(*(id *)(a1 + 32), "valueTypeForProperty:", v5),  v6);
  }

  else
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "No DAAP code found for container property: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }
}

void sub_10002F430( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, char a40)
{
}

void sub_10002F500(uint64_t a1, uint64_t a2, id *a3)
{
  id v5 = *a3;
  id v6 = [a3[1] unsignedLongLongValue];
  [a3[2] doubleValue];
  double v8 = v7;
  if ((uint64_t)[v5 longLongValue] >= 1
    && (([*(id *)(a1 + 32) ignoreMinRefreshInterval] & 1) != 0
     || *(double *)(a1 + 48) >= v8 + (double)(unint64_t)v6))
  {
    [*(id *)(a1 + 40) addObject:v5];
  }

  else
  {
    id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      id v10 = [v5 unsignedLongValue];
      double v11 = *(double *)(a1 + 48) - v8;
      int v12 = 134218496;
      id v13 = v10;
      __int16 v14 = 2048;
      double v15 = v11;
      __int16 v16 = 2048;
      id v17 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Skipping update for playlist cloud ID: %lu -- time since update = %.fs (min refresh = %llus)",  (uint8_t *)&v12,  0x20u);
    }
  }
}

uint64_t sub_10002F64C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10002F65C(uint64_t a1)
{
}

void sub_10002F664(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10002F6B0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 67109120;
    LODWORD(v9) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "SagaSubscribedPlaylistUpdater import succeeded: %d",  (uint8_t *)&v8,  8u);
  }

  if (v5)
  {
    double v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "SagaSubscribedPlaylistUpdater import failed: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10002FFE4(_Unwind_Exception *a1)
{
}

uint64_t sub_100030F90(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = v4;
  if (v4 && xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
  {
    xpc_object_t value = xpc_dictionary_get_value(v5, "did");
    double v7 = (void *)objc_claimAutoreleasedReturnValue(value);
    xpc_object_t v8 = xpc_dictionary_get_value(v5, "fid");
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    xpc_object_t v10 = xpc_dictionary_get_value(v5, "pid");
    double v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    if (v7
      && xpc_get_type(v7) == (xpc_type_t)&_xpc_type_int64
      && v9
      && xpc_get_type(v9) == (xpc_type_t)&_xpc_type_int64
      && v11
      && xpc_get_type(v11) == (xpc_type_t)&_xpc_type_int64)
    {
      id v12 = objc_alloc(&OBJC_CLASS___AMSFamilyAccountPair);
      int64_t v13 = xpc_int64_get_value(v7);
      int64_t v14 = xpc_int64_get_value(v11);
      id v15 = [v12 initWithDownloaderAccountID:v13 purchaserAccountID:v14 familyID:xpc_int64_get_value(v9)];
      [*(id *)(a1 + 32) addObject:v15];
    }
  }

  return 1LL;
}

id sub_1000310E0(uint64_t a1, void *a2)
{
  return _[a2 _handleCloudAuthenticationDidChangeNotification];
}

id sub_1000310E8(uint64_t a1, void *a2)
{
  return _[a2 _handleMusicSettingsChangedNotification];
}

id sub_1000310F0(uint64_t a1, void *a2)
{
  return [a2 _handleFamilyCircleChangedNotification];
}

void sub_1000310F8()
{
  uint64_t v5 = 0LL;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  v0 = (id *)qword_1001DB630;
  uint64_t v8 = qword_1001DB630;
  if (!qword_1001DB630)
  {
    uint64_t v1 = sub_1000311EC();
    v0 = (id *)dlsym(v1, "MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification");
    v6[3] = (uint64_t)v0;
    qword_1001DB630 = (uint64_t)v0;
  }

  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    id v2 = *v0;
  }

  else
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString *getMPRestrictionsMonitorAllowsExplicitContentDidChangeNotification(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"ICDServerNotificationsManager.m",  38,  @"%s",  dlerror());

    __break(1u);
  }

void sub_1000311D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1000311EC()
{
  id v4 = 0LL;
  if (!qword_1001DB638)
  {
    __int128 v5 = off_1001A2478;
    uint64_t v6 = 0LL;
    qword_1001DB638 = _sl_dlopen(&v5, &v4);
  }

  v0 = (void *)qword_1001DB638;
  if (!qword_1001DB638)
  {
    v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDServerNotificationsManager.m",  33,  @"%s",  v4);

    __break(1u);
    goto LABEL_7;
  }

  uint64_t v1 = v4;
  if (v4) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_1000312F0()
{
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  v0 = (id *)qword_1001DB648;
  uint64_t v8 = qword_1001DB648;
  if (!qword_1001DB648)
  {
    uint64_t v1 = sub_1000311EC();
    v0 = (id *)dlsym(v1, "MPHomeUserMonitorAllowExplicitSettingDidChangeNotification");
    v6[3] = (uint64_t)v0;
    qword_1001DB648 = (uint64_t)v0;
  }

  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    id v2 = *v0;
  }

  else
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString *getMPHomeUserMonitorAllowExplicitSettingDidChangeNotification(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"ICDServerNotificationsManager.m",  35,  @"%s",  dlerror());

    __break(1u);
  }

void sub_1000313CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_1000313E4(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPHomeMonitor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB650 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPHomeMonitorClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDServerNotificationsManager.m",  34,  @"Unable to find class %s",  "MPHomeMonitor");

    __break(1u);
  }

void sub_1000314A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  string = xpc_dictionary_get_string(v3, _xpc_event_key_name);
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", string));
  [v5 _didReceiveDistributedNotification:v6 withStreamEvent:v3];
}

void sub_100031524(uint64_t a1, xpc_object_t xdict)
{
  string = xpc_dictionary_get_string(xdict, _xpc_event_key_name);
  id v4 = *(void **)(a1 + 32);
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", string));
  [v4 _didReceiveDarwinNotification:v5];
}

void sub_10003158C(uint64_t a1, xpc_object_t xdict)
{
  string = xpc_dictionary_get_string(xdict, _xpc_event_key_name);
  id v4 = *(void **)(a1 + 32);
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", string));
  [v4 _didReceiveTelephonyCenterNotification:v5];
}

LABEL_24:
    os_log_t v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2009LL,  0LL));
    -[CloudLibraryOperation setError:](self, "setError:", v36);

    -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
    id v37 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
    id v38 = MSVTCCIdentityForCurrentProcess();
    __int16 v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
    [v37 setClientIdentity:v39];

    __int128 v31 = v74;
    [v74 endTransaction];
    goto LABEL_46;
  }

  if ((MSVDeviceSupportsMultipleLibraries(v21) & 1) == 0 && ([v17 isActive] & 1) == 0)
  {
    id v32 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543618;
      id v85 = self;
      v86 = 2112;
      *(void *)id v87 = v22;
      id v33 = "%{public}@ - Not authenticating ... account is not active. DSID=%@";
      id v34 = v32;
      id v35 = 22;
      goto LABEL_23;
    }

    goto LABEL_24;
  }

  id v72 = v10;
  id v23 = (void *)objc_claimAutoreleasedReturnValue([v17 cloudLibraryStateReason]);
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v23 objectForKey:@"CloudLibraryStateReasonKey"]);
  if ([v24 integerValue] != (id)-1 || !self->_mergeToCloudLibraryPreference)
  {

    xpc_object_t v10 = v72;
LABEL_16:
    uint64_t v73 = dispatch_semaphore_create(0LL);
    if (([v17 isActiveLocker] & 1) == 0)
    {
      id v25 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
      [v25 setIgnoreAccountChanges:1];

      v82[0] = _NSConcreteStackBlock;
      v82[1] = 3221225472LL;
      v82[2] = sub_10003215C;
      v82[3] = &unk_1001A2498;
      v82[4] = self;
      v78[0] = _NSConcreteStackBlock;
      v78[1] = 3221225472LL;
      v78[2] = sub_100032278;
      v78[3] = &unk_1001A24C0;
      void v78[4] = self;
      id v79 = v16;
      id v80 = v22;
      id v26 = v73;
      unsigned __int16 v81 = v26;
      [v76 insertPropertiesForUserIdentity:v79 usingBlock:v82 completionHandler:v78];
      dispatch_semaphore_wait(v26, 0xFFFFFFFFFFFFFFFFLL);
      if ((id)-[CloudLibraryOperation status](self, "status") == (id)3)
      {
        id v27 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
        [v27 setIgnoreAccountChanges:0];

        __int128 v28 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
        __int128 v29 = MSVTCCIdentityForCurrentProcess();
        __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
        [v28 setClientIdentity:v30];

        __int128 v31 = v74;
        [v74 endTransaction];

LABEL_45:
        goto LABEL_46;
      }
    }

    if (MSVDeviceOSIsInternalInstall(-[CloudLibraryOperation setStatus:](self, "setStatus:", 1LL))
      && (id v40 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults")),
          __int16 v41 = [v40 shouldTreatSagaAddComputerCallAsFailed],
          v40,
          v41))
    {
      sleep(5u);
      id v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2022LL,  0LL));
      -[CloudLibraryOperation setError:](self, "setError:", v42);

      -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
      -[CloudAuthenticateOperation setAuthenticateFailureCode:](self, "setAuthenticateFailureCode:", &off_1001B3B50);
      id v43 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (!os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
LABEL_44:

        os_log_t v62 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
        [v62 setIgnoreAccountChanges:0];

        id v63 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
        unsigned __int16 v64 = MSVTCCIdentityForCurrentProcess();
        id v65 = (void *)objc_claimAutoreleasedReturnValue(v64);
        [v63 setClientIdentity:v65];

        __int128 v31 = v74;
        [v74 endTransaction];
        goto LABEL_45;
      }

      *(_DWORD *)buf = 138543362;
      id v85 = self;
      __int16 v44 = "%{public}@ - shouldTreatSagaAddComputerCallAsFailed is set. Will force SagaAddComputer call to fail.";
      id v45 = v43;
      __int16 v46 = 12;
    }

    else
    {
      if (v14)
      {
        unsigned __int16 v47 = v10;
        id v48 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation configuration](self, "configuration"));
        status = self->super._status;
        id v77 = 0LL;
        __int16 v50 = sub_1000C1558(v48, status, &v77);
        int v51 = v77;

        if (!v50)
        {
          if (!v51) {
            int v51 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2022LL,  0LL));
          }
          -[CloudLibraryOperation setError:](self, "setError:", v51);
          -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
          -[CloudAuthenticateOperation setAuthenticateFailureCode:](self, "setAuthenticateFailureCode:", &off_1001B3B50);
        }

        xpc_object_t v10 = v47;
      }

      if ((id)-[CloudLibraryOperation status](self, "status") == (id)1)
      {
        __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
        [v52 setSagaAccountID:v22];

        if ((MSVDeviceSupportsMultipleLibraries(v53) & 1) == 0)
        {
          id v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantPast](&OBJC_CLASS___NSDate, "distantPast"));
          uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
          [v55 setJaliscoLastGeniusUpdateDate:v54];

          unsigned __int16 v56 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
          LODWORD(v55) = [v56 jaliscoHasCloudGeniusData];

          if ((_DWORD)v55)
          {
            id v57 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
            [v57 clearAllGeniusData];

            v58 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
            [v58 setJaliscoHasCloudGeniusData:0];
          }
        }

        ICSiriPostDynamiteClientStateChangedNotification();
        DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
        CFNotificationCenterPostNotification( DarwinNotifyCenter,  ICCloudClientIsAuthenticatedDidChangeNotification,  0LL,  0LL,  1u);
      }

      id v43 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
      if (!os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_44;
      }
      v60 = -[CloudLibraryOperation status](self, "status");
      mergeToCloudLibraryPreference = self->_mergeToCloudLibraryPreference;
      *(_DWORD *)buf = 138543874;
      id v85 = self;
      v86 = 1024;
      *(_DWORD *)id v87 = v60;
      *(_WORD *)&v87[4] = 1024;
      *(_DWORD *)&v87[6] = (_DWORD)mergeToCloudLibraryPreference;
      __int16 v44 = "%{public}@ - Completed authentication completed with status=%d for reason=%d";
      id v45 = v43;
      __int16 v46 = 24;
    }

    _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, v44, buf, v46);
    goto LABEL_44;
  }

  uint64_t v66 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR))
  {
    uint64_t v67 = self->_mergeToCloudLibraryPreference;
    *(_DWORD *)buf = 138543618;
    id v85 = self;
    v86 = 1024;
    *(_DWORD *)id v87 = (_DWORD)v67;
    _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_ERROR,  "%{public}@ - ICML was manually disabled by the user. Not retrying CloudAuthenticateOperation for reason=%d",  buf,  0x12u);
  }

  id v68 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2003LL,  0LL));
  -[CloudLibraryOperation setError:](self, "setError:", v68);

  -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
  uint64_t v69 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
  id v70 = MSVTCCIdentityForCurrentProcess();
  unsigned __int16 v71 = (void *)objc_claimAutoreleasedReturnValue(v70);
  [v69 setClientIdentity:v71];

  __int128 v31 = v74;
  [v74 endTransaction];

  xpc_object_t v10 = v72;
LABEL_46:
}

  return v42;
}

void sub_10003215C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = v3;
  if (*(void *)(*(void *)(a1 + 32) + 96LL))
  {
    objc_msgSend(v3, "setMergeToCloudLibraryPreference:");
    id v3 = v7;
  }

  [v3 setActiveLocker:1];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v7 cloudLibraryStateReason]);
  id v5 = [v4 mutableCopy];

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  *(void *)(*(void *)(a1 + 32) + 112LL)));
  if (v5) {
    [v5 setObject:v6 forKey:@"CloudLibraryStateReasonKey"];
  }
  else {
    id v5 = (id)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithObjectsAndKeys:",  v6,  @"CloudLibraryStateReasonKey",  0LL));
  }

  [v7 setCloudLibraryStateReason:v5];
}

void sub_100032278(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    unsigned int v9 = [*(id *)(v6 + 96) BOOLValue];
    uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 112LL);
    int v11 = 138544642;
    uint64_t v12 = v6;
    __int16 v13 = 2114;
    uint64_t v14 = v7;
    __int16 v15 = 2114;
    uint64_t v16 = v8;
    __int16 v17 = 1024;
    unsigned int v18 = v9;
    __int16 v19 = 1024;
    int v20 = v10;
    __int16 v21 = 2114;
    id v22 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Setting account %{public}@ as the active locker account, dsid=%{public}@, _mergeToCloudLibraryPrefere nce=%d, enableReason=%d finished with error=%{public}@",  (uint8_t *)&v11,  0x36u);
  }

  if (v4)
  {
    [*(id *)(a1 + 32) setError:v4];
    [*(id *)(a1 + 32) setStatus:3];
    [*(id *)(a1 + 32) setAuthenticateFailureCode:&off_1001B3B38];
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

LABEL_16:
}
}

  return v12;
}

    goto LABEL_17;
  }

  if (*(void *)(a1 + 40))
  {
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) path]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 stringByDeletingLastPathComponent]);
    id v93 = 0LL;
    -[os_log_s createDirectoryAtPath:withIntermediateDirectories:attributes:error:]( v5,  "createDirectoryAtPath:withIntermediateDirectories:attributes:error:",  v8,  1LL,  0LL,  &v93);
    id v89 = (NSString *)v93;
    -[os_log_s removeItemAtPath:error:](v5, "removeItemAtPath:error:", v7, 0LL);
    unsigned int v9 = objc_claimAutoreleasedReturnValue([v90 bodyDataURL]);
    if (v9
      && (uint64_t v10 = (void *)v9,
          int v11 = (void *)objc_claimAutoreleasedReturnValue([v90 bodyDataURL]),
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 absoluteString]),
          __int16 v13 = -[os_log_s fileExistsAtPath:](v5, "fileExistsAtPath:", v12),
          v12,
          v11,
          v10,
          v13))
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v90 bodyDataURL]);
      __int16 v15 = *(void *)(a1 + 40);
      uint64_t v92 = v89;
      -[os_log_s linkItemAtURL:toURL:error:](v5, "linkItemAtURL:toURL:error:", v14, v15, &v92);
      uint64_t v16 = v92;

      __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v90 bodyDataURL]);
      -[os_log_s removeItemAtURL:error:](v5, "removeItemAtURL:error:", v17, 0LL);
    }

    else
    {
      unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v90 bodyData]);

      if (!v18)
      {
LABEL_11:
        if (v89)
        {
          __int16 v19 = os_log_create("com.apple.amp.itunescloudd", "Connections");
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            int v20 = *(void *)(a1 + 40);
            *(_DWORD *)buf = 138543618;
            __int16 v97 = v20;
            id v98 = 2114;
            id v99 = v89;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Failed to write response data to %{public}@. err=%{public}@",  buf,  0x16u);
          }
        }

        goto LABEL_16;
      }

      __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v90 bodyData]);
      char v91 = v89;
      [v17 writeToFile:v7 options:1 error:&v91];
      uint64_t v16 = v91;
    }

    id v89 = v16;

    goto LABEL_11;
  }

  id v89 = 0LL;
LABEL_17:
  if (v90)
  {
    __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v90 urlResponse]);
    id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 allHeaderFields]);
    id v23 = (unint64_t)[v21 statusCode];
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v90 bodyData]);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([v21 MIMEType]);
    id v26 = (void *)objc_claimAutoreleasedReturnValue( +[ICDResponse responseWithCode:headerFields:data:MIMEType:error:]( &OBJC_CLASS___ICDResponse,  "responseWithCode:headerFields:data:MIMEType:error:",  v23,  v22,  v24,  v25,  0LL));
    if (v23 - 200 <= 6 && ((1LL << (v23 + 56)) & 0x51) != 0)
    {
      id v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) canonicalResponseForResponse:v26]);
      __int128 v28 = os_log_create("com.apple.amp.itunescloudd", "Connections");
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        __int128 v30 = v21;
        __int128 v31 = v22;
        id v32 = *(void *)(a1 + 48);
        id v33 = (objc_class *)objc_opt_class(v27, v29);
        id v34 = NSStringFromClass(v33);
        id v87 = v25;
        id v35 = (NSString *)objc_claimAutoreleasedReturnValue(v34);
        os_log_t v36 = v26;
        id v37 = [v27 responseCode];
        id v85 = a1;
        id v38 = v24;
        __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([v27 responseData]);
        id v40 = [v39 length];
        *(_DWORD *)buf = 134219010;
        __int16 v97 = v32;
        id v22 = v31;
        __int16 v21 = v30;
        id v98 = 2114;
        id v99 = v35;
        int v100 = 2048;
        id v101 = v27;
        id v102 = 2048;
        v103 = v37;
        id v26 = v36;
        id v104 = 2048;
        os_log_t v105 = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Received request %p response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x34u);

        uint64_t v24 = v38;
        a1 = v85;

        id v25 = v87;
      }

      if (*(void *)(a1 + 40)) {
        objc_msgSend(v27, "setResponseDataFileURL:");
      }
      __int16 v41 = *(void (**)(void))(*(void *)(a1 + 64) + 16LL);
    }

    else
    {
      if (v23 == 401)
      {
        id v45 = os_log_create("com.apple.amp.itunescloudd", "Connections");
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "Response: (HTTP 401) - Not Authenticated",  buf,  2u);
        }
      }

      else
      {
        if ((v23 & 0xFFFFFFFFFFFFFFFBLL) != 0x190)
        {
          unsigned __int16 v47 = (void *)objc_claimAutoreleasedReturnValue( +[ICDResponseDataParser parseErrorInResponseData:]( &OBJC_CLASS___ICDResponseDataParser,  "parseErrorInResponseData:",  v24));
          id v27 = v47;
          if (v23 == 403)
          {
            if (v47)
            {
              v86 = v24;
              id v88 = v26;
              id v48 = v25;
              uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v47 objectForKey:&off_1001B4198]);
              __int16 v50 = [v49 unsignedIntegerValue];

              id v94 = @"CloudLibraryConnectionRequestForbiddenAdditonalErrorCodeKey";
              int v51 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  v50));
              id v95 = v51;
              __int16 v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v95,  &v94,  1LL));
              int v53 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2019LL,  v52));

              id v25 = v48;
              id v26 = v88;
              switch((unint64_t)v50)
              {
                case 0x3B6uLL:
                  int v75 = sub_1000DD890();
                  uint64_t v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v75);
                  if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_83;
                  }
                  *(_DWORD *)buf = 67109120;
                  LODWORD(v97) = 950;
                  id v70 = "Response: (HTTP 403, DMAP %d) - Cloud DAAP Subscription Lapsed.";
                  goto LABEL_81;
                case 0x3B7uLL:
                  unsigned __int16 v76 = sub_1000DD890();
                  uint64_t v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v76);
                  if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_83;
                  }
                  *(_DWORD *)buf = 67109120;
                  LODWORD(v97) = 951;
                  id v70 = "Response: (HTTP 403, DMAP %d) - Cloud DAAP Client Expired (client DAAP version is less than the "
                        "minimum version supported by the server).";
                  goto LABEL_81;
                case 0x3B8uLL:
                  id v77 = sub_1000DD890();
                  __int16 v78 = (os_log_s *)objc_claimAutoreleasedReturnValue(v77);
                  if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)buf = 67109120;
                    LODWORD(v97) = 952;
                    _os_log_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_ERROR,  "Response: (HTTP 403, DMAP %d) - Cloud DAAP Temporary Disconnect Requested.",  buf,  8u);
                  }

                  id v79 = (void *)objc_claimAutoreleasedReturnValue([v27 objectForKey:&off_1001B41B0]);
                  id v80 = [v79 unsignedIntegerValue];

                  if (v80) {
                    unsigned __int16 v81 = (uint64_t)v80;
                  }
                  else {
                    unsigned __int16 v81 = 300LL;
                  }
                  id v82 = sub_1000DD890();
                  id v83 = (os_log_s *)objc_claimAutoreleasedReturnValue(v82);
                  if (os_log_type_enabled(v83, OS_LOG_TYPE_DEFAULT))
                  {
                    *(_DWORD *)buf = 134217984;
                    __int16 v97 = v81;
                    _os_log_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEFAULT,  "Will retry request in %lu seconds",  buf,  0xCu);
                  }

                  sleep(v81);
                  objc_msgSend( *(id *)(a1 + 56),  "_onQueue_sendRequest:withInternalResponseHandler:",  *(void *)(a1 + 48),  *(void *)(a1 + 64));
                  uint64_t v24 = v86;
                  id v26 = v88;
                  break;
                case 0x3B9uLL:
                case 0x3BBuLL:
                case 0x3BCuLL:
                case 0x3BDuLL:
                  goto LABEL_64;
                case 0x3BAuLL:
                  id v84 = sub_1000DD890();
                  uint64_t v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v84);
                  if (!os_log_type_enabled(v69, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_83;
                  }
                  *(_DWORD *)buf = 67109120;
                  LODWORD(v97) = 954;
                  id v70 = "Response: (HTTP 403, DMAP %d) - Cloud DAAP Item Limit Exceeded (no additional items may be added"
                        " to the library).";
LABEL_81:
                  unsigned __int16 v71 = v69;
                  id v72 = 8;
                  goto LABEL_82;
                case 0x3BEuLL:
                case 0x3BFuLL:
                  id v54 = sub_1000DD890();
                  uint64_t v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);
                  if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)buf = 134217984;
                    __int16 v97 = (unint64_t)v50;
                    _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_ERROR,  "Response: (HTTP 403, DMAP %lu) - Collaboration limit exceeded.",  buf,  0xCu);
                  }

                  unsigned __int16 v56 = *(void (**)(void))(*(void *)(a1 + 64) + 16LL);
                  goto LABEL_85;
                default:
                  id v25 = v48;
                  id v26 = v88;
                  if (v50 == (id)403)
                  {
                    id v68 = sub_1000DD890();
                    uint64_t v69 = (os_log_s *)objc_claimAutoreleasedReturnValue(v68);
                    if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
                    {
                      *(_WORD *)buf = 0;
                      id v70 = "Response: (HTTP 403, DMAP 403) - Request forbidden.";
                      unsigned __int16 v71 = v69;
                      id v72 = 2;
LABEL_82:
                      _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_ERROR, v70, buf, v72);
                    }

void sub_1000338B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location, id a22)
{
}

void sub_100033DDC(_Unwind_Exception *a1)
{
}

void sub_100034644( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_100034C38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

LABEL_35:
    goto LABEL_36;
  }

  __int128 v29 = v41;
  if (!v39) {
    goto LABEL_36;
  }
  if ((v18 & 1) == 0)
  {
    id v33 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      uint64_t v49 = self;
      id v34 = "%{public}@: Storefront country code did not change. Skipping invoking observation handlers.";
      id v35 = v33;
      os_log_t v36 = OS_LOG_TYPE_DEFAULT;
      id v37 = 12;
      goto LABEL_34;
    }

    goto LABEL_35;
  }

  __int128 v30 = [v17 count];
  __int128 v31 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
  {
    id v32 = "s";
    *(_DWORD *)buf = 138544130;
    __int16 v50 = 2114;
    uint64_t v49 = self;
    if (v30 == (id)1) {
      id v32 = "";
    }
    int v51 = v12;
    __int16 v52 = 2048;
    int v53 = v30;
    id v54 = 2080;
    uint64_t v55 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Storefront country code did change: %{public}@. About to notify %llu observer%s.",  buf,  0x2Au);
  }

  v42[0] = _NSConcreteStackBlock;
  v42[1] = 3221225472LL;
  v42[2] = sub_10003652C;
  v42[3] = &unk_1001A2670;
  v42[4] = self;
  id v43 = v12;
  [v17 enumerateKeysAndObjectsUsingBlock:v42];

LABEL_36:
}

  __int16 v39 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
  {
    id v40 = *(void *)(a1 + 32);
    __int16 v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "msv_description"));
    *(_DWORD *)buf = 138543618;
    __int16 v50 = v40;
    int v51 = 2114;
    __int16 v52 = v41;
    _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_ERROR,  "%{public}@ Saga update complete error=%{public}@",  buf,  0x16u);
  }

  uint64_t v7 = v14;
LABEL_40:

  *(_DWORD *)(*(void *)(a1 + 32) + 88LL) = 1065353216;
  [*(id *)(a1 + 40) notifyContentsDidChange];
  id v43 = [*(id *)(a1 + 32) isCancelled];
  __int16 v44 = *(void *)(a1 + 48);
  if (v43)
  {
    id v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -2LL,  0LL));
    (*(void (**)(uint64_t, void *))(v44 + 16))(v44, v45);
  }

  else
  {
    (*(void (**)(uint64_t, id))(v44 + 16))(v44, v7);
  }
}

LABEL_37:
      -[NSMutableArray addObject:](v31, "addObject:", v28);
    }

    id v23 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v21,  "countByEnumeratingWithState:objects:count:",  &v65,  v82,  16LL);
  }

  while (v23);
LABEL_41:

  objc_storeStrong(location, v25);
  id v32 = -[NSMutableArray copy](v20, "copy");
  id v33 = -[NSMutableDictionary copy](v59, "copy");
  if (v57) {
    -[NSMutableArray removeObject:](v58->_cancellableCapabilitiesRequestOperations, "removeObject:", v57);
  }

  os_unfair_lock_unlock(lock);
  id v63 = 0u;
  unsigned __int16 v64 = 0u;
  unsigned int v61 = 0u;
  os_log_t v62 = 0u;
  id v34 = v32;
  id v35 = [v34 countByEnumeratingWithState:&v61 objects:v81 count:16];
  if (v35)
  {
    os_log_t v36 = v35;
    id v37 = *(void *)v62;
    do
    {
      for (j = 0LL; j != v36; j = (char *)j + 1)
      {
        if (*(void *)v62 != v37) {
          objc_enumerationMutation(v34);
        }
        __int16 v39 = (void (**)(void, void, void))objc_claimAutoreleasedReturnValue( [*(id *)(*((void *)&v61 + 1) + 8 * (void)j) completionHandler]);
        id v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v55, "msv_errorByRemovingUnsafeUserInfo"));
        ((void (**)(void, unint64_t, void *))v39)[2](v39, a3, v40);
      }

      os_log_t v36 = [v34 countByEnumeratingWithState:&v61 objects:v81 count:16];
    }

    while (v36);
  }

  if (v55)
  {
    __int16 v41 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543618;
      os_log_t v74 = v58;
      int v75 = 2114;
      unsigned __int16 v76 = (uint64_t)v55;
      id v42 = "%{public}@: Could not find valid cloud service capabilities; error: %{public}@.";
      id v43 = v41;
      __int16 v44 = OS_LOG_TYPE_ERROR;
      id v45 = 22;
      goto LABEL_53;
    }

    goto LABEL_54;
  }

  if (v53)
  {
    if ((v52 & 1) != 0)
    {
      __int16 v46 = [v33 count];
      unsigned __int16 v47 = os_log_create("com.apple.amp.itunescloudd", "Default");
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
      {
        Description = ICCloudServiceCapabilitiesGetDescription(a3);
        uint64_t v49 = objc_claimAutoreleasedReturnValue(Description);
        __int16 v50 = (void *)v49;
        int v51 = "s";
        *(_DWORD *)buf = 138544130;
        int v75 = 2114;
        os_log_t v74 = v58;
        if (v46 == (id)1) {
          int v51 = "";
        }
        unsigned __int16 v76 = v49;
        id v77 = 2048;
        __int16 v78 = v46;
        id v79 = 2080;
        id v80 = v51;
        _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Cloud service capabilities did change: %{public}@. About to notify %llu observer%s.",  buf,  0x2Au);
      }

      v60[0] = _NSConcreteStackBlock;
      v60[1] = 3221225472LL;
      v60[2] = sub_100036280;
      v60[3] = &unk_1001A2698;
      v60[4] = v58;
      void v60[5] = a3;
      [v33 enumerateKeysAndObjectsUsingBlock:v60];
    }

    else
    {
      __int16 v41 = os_log_create("com.apple.amp.itunescloudd", "Default");
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        os_log_t v74 = v58;
        id v42 = "%{public}@: Cloud service capabilities did not change. Skipping invoking observation handlers.";
        id v43 = v41;
        __int16 v44 = OS_LOG_TYPE_DEFAULT;
        id v45 = 12;
LABEL_53:
        _os_log_impl((void *)&_mh_execute_header, v43, v44, v42, buf, v45);
      }

      goto LABEL_38;
    }

    goto LABEL_33;
  }

  int v11 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543362;
    id v43 = self;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ metadataWithItemIdentifier - keyValueStorePayload=nil",  buf,  0xCu);
  }

  uint64_t v14 = 0LL;
LABEL_39:

  return v14;
}
      }

      uint64_t v16 = [obj countByEnumeratingWithState:&v41 objects:v49 count:16];
    }

    while (v16);
  }

  v37[2](v37, v6, v38);
}

  *(_OWORD *)buf = *(_OWORD *)v254;
  v256 = *(_OWORD *)&v254[16];
  v257 = *(_OWORD *)&v254[32];
  v258 = *(_OWORD *)&v254[48];
  v259 = *(void *)&v254[64];
  if (*(uint64_t *)v254 > 3999)
  {
    if (*(uint64_t *)v254 > 4255)
    {
      if (*(void *)v254 == 4256LL)
      {
        id v98 = &buf[8];
        id v99 = (char *)calloc(0x40uLL, 1uLL);
        int v100 = v99;
        for (i = 0LL; i != 64; i += 2LL)
        {
          id v102 = *v98++;
          v103 = &v99[i];
          void *v103 = a0123456789abcd[(unint64_t)v102 >> 4];
          v103[1] = a0123456789abcd[v102 & 0xF];
        }

        uint64_t v69 = objc_alloc(&OBJC_CLASS___NSString);
        id v70 = v100;
        unsigned __int16 v71 = 64LL;
      }

      else
      {
        if (*(void *)v254 != 4512LL) {
          goto LABEL_100;
        }
        unsigned __int16 v76 = &buf[8];
        id v77 = (char *)calloc(0x80uLL, 1uLL);
        __int16 v78 = v77;
        for (j = 0LL; j != 128; j += 2LL)
        {
          id v80 = *v76++;
          unsigned __int16 v81 = &v77[j];
          dispatch_queue_s *v81 = a0123456789abcd[(unint64_t)v80 >> 4];
          v81[1] = a0123456789abcd[v80 & 0xF];
        }

        uint64_t v69 = objc_alloc(&OBJC_CLASS___NSString);
        id v70 = v78;
        unsigned __int16 v71 = 128LL;
      }
    }

    else if (*(void *)v254 == 4000LL)
    {
      id v88 = &buf[8];
      id v89 = (char *)calloc(0x20uLL, 1uLL);
      id v90 = v89;
      for (k = 0LL; k != 32; k += 2LL)
      {
        uint64_t v92 = *v88++;
        id v93 = &v89[k];
        *id v93 = a0123456789abcd[(unint64_t)v92 >> 4];
        v93[1] = a0123456789abcd[v92 & 0xF];
      }

      uint64_t v69 = objc_alloc(&OBJC_CLASS___NSString);
      id v70 = v90;
      unsigned __int16 v71 = 32LL;
    }

    else
    {
      if (*(void *)v254 != 4001LL) {
        goto LABEL_100;
      }
      id v63 = &buf[8];
      unsigned __int16 v64 = (char *)calloc(0x28uLL, 1uLL);
      id v65 = v64;
      for (m = 0LL; m != 40; m += 2LL)
      {
        uint64_t v67 = *v63++;
        id v68 = &v64[m];
        void *v68 = a0123456789abcd[(unint64_t)v67 >> 4];
        v68[1] = a0123456789abcd[v67 & 0xF];
      }

      uint64_t v69 = objc_alloc(&OBJC_CLASS___NSString);
      id v70 = v65;
      unsigned __int16 v71 = 40LL;
    }

      [v15 addObject:v22];

      __int16 v19 = (char *)v19 + 1;
    }

    while (v17 != v19);
    id v33 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( obj,  "countByEnumeratingWithState:objects:count:",  &v42,  v56,  16LL);
    __int16 v17 = v33;
  }

  while (v33);
LABEL_46:

  id v34 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste_Oversize");
  if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138544386;
    unsigned __int16 v47 = v37;
    id v48 = 2114;
    uint64_t v49 = v15;
    __int16 v50 = 2114;
    int v51 = v40;
    __int16 v52 = 2048;
    int v53 = v39;
    id v54 = 1024;
    uint64_t v55 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "%{public}@ prepared %{public}@ content taste update items with expiration date %{public}@, revisionID %llu, isCach ed %d from server response",  buf,  0x30u);
  }

  id v35 = objc_alloc_init(&OBJC_CLASS___ICCloudContentTasteUpdateResponse);
  -[ICCloudContentTasteUpdateResponse setContentTasteItems:](v35, "setContentTasteItems:", v15);
  -[ICCloudContentTasteUpdateResponse setExpirationDate:](v35, "setExpirationDate:", v40);
  -[ICCloudContentTasteUpdateResponse setCachedResponse:](v35, "setCachedResponse:", v6);
  -[ICCloudContentTasteUpdateResponse setResponseRevisionID:](v35, "setResponseRevisionID:", v39);

  return v35;
}

LABEL_54:
    }
  }
}

void sub_100035F1C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 32), v7),  "_isClientAllowedToRequestRestrictedInformationForConnection:",  v6))
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138543874;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2114;
      id v19 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Notifying client with observation token %{public}@ of updated storefront identifier: %{public}@.",  buf,  0x20u);
    }

    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_1000360E0;
    v13[3] = &unk_1001A6398;
    void v13[4] = *(void *)(a1 + 32);
    os_log_t v11 = (os_log_t)objc_claimAutoreleasedReturnValue([v6 remoteObjectProxyWithErrorHandler:v13]);
    -[os_log_s storefrontIdentifierDidChange:](v11, "storefrontIdentifierDidChange:", *(void *)(a1 + 40));
  }

  else
  {
    os_log_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543874;
      uint64_t v15 = v12;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2114;
      id v19 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Skipping notification of updated storefront identifier for client with observation token %{public}@: client connection %{public}@ is not allowed to access restricted information.",  buf,  0x20u);
    }
  }
}

void sub_1000360E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138543618;
    uint64_t v7 = v5;
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@: Failed to obtain remote proxy to notify of updated storefront identifier; error = %{public}@.",
      (uint8_t *)&v6,
      0x16u);
  }
}

void sub_1000361B0(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if ((objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 32), v6),  "_shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection:forIncomingCloudServiceCapabilitiesRequest:",  v5,  0) & 1) == 0) {
    [*(id *)(a1 + 40) setObject:v5 forKey:v7];
  }
}

void sub_100036218(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 32), v6),  "_shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection:forIncomingCloudServiceCapabilitiesRequest:",  v5,  0)) {
    [*(id *)(a1 + 40) setObject:v5 forKey:v7];
  }
}

void sub_100036280(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 32), v7),  "_isClientAllowedToRequestCapabilitiesForConnection:",  v6))
  {
    __int16 v8 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t Description = ICCloudServiceCapabilitiesGetDescription(*(void *)(a1 + 40));
      os_log_t v11 = (void *)objc_claimAutoreleasedReturnValue(Description);
      *(_DWORD *)buf = 138543874;
      uint64_t v16 = v9;
      __int16 v17 = 2114;
      id v18 = v5;
      __int16 v19 = 2114;
      id v20 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Notifying client with observation token %{public}@ of updated cloud service capabilities: %{public}@.",  buf,  0x20u);
    }

    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_10003645C;
    v14[3] = &unk_1001A6398;
    v14[4] = *(void *)(a1 + 32);
    os_log_t v12 = (os_log_t)objc_claimAutoreleasedReturnValue([v6 remoteObjectProxyWithErrorHandler:v14]);
    -[os_log_s capabilitiesDidChange:](v12, "capabilitiesDidChange:", *(void *)(a1 + 40));
  }

  else
  {
    os_log_t v12 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543874;
      uint64_t v16 = v13;
      __int16 v17 = 2114;
      id v18 = v5;
      __int16 v19 = 2114;
      id v20 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Skipping notification of updated cloud service capabilities for client with observation token %{publ ic}@: client connection %{public}@ is not allowed to access capabilities.",  buf,  0x20u);
    }
  }
}

void sub_10003645C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138543618;
    uint64_t v7 = v5;
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@: Failed to obtain remote proxy to notify of updated cloud service capabilities; error = %{public}@.",
      (uint8_t *)&v6,
      0x16u);
  }
}

void sub_10003652C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 32), v7),  "_isClientAllowedToRequestRestrictedInformationForConnection:",  v6))
  {
    __int16 v8 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138543874;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2114;
      id v19 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Notifying client with observation token %{public}@ of updated storefront country code: %{public}@.",  buf,  0x20u);
    }

    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    v13[2] = sub_1000366F0;
    v13[3] = &unk_1001A6398;
    void v13[4] = *(void *)(a1 + 32);
    os_log_t v11 = (os_log_t)objc_claimAutoreleasedReturnValue([v6 remoteObjectProxyWithErrorHandler:v13]);
    -[os_log_s storefrontCountryCodeDidChange:](v11, "storefrontCountryCodeDidChange:", *(void *)(a1 + 40));
  }

  else
  {
    os_log_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543874;
      uint64_t v15 = v12;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2114;
      id v19 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Skipping notification of updated storefront country code for client with observation token %{public} @: client connection %{public}@ is not allowed to access restricted information.",  buf,  0x20u);
    }
  }
}

void sub_1000366F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138543618;
    uint64_t v7 = v5;
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@: Failed to obtain remote proxy to notify of updated storefront country code; error = %{public}@.",
      (uint8_t *)&v6,
      0x16u);
  }
}

void sub_1000367C0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (!v5)
  {
    uint64_t v10 = objc_claimAutoreleasedReturnValue([a2 storefrontIdentifier]);
    if (v10)
    {
      id v9 = (void *)v10;
    }

    else
    {
      os_log_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 localStoreAccountProperties]);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v12 storefrontIdentifier]);

      if (!v9)
      {
        id v8 = (id)objc_claimAutoreleasedReturnValue( +[NSError msv_errorWithDomain:code:debugDescription:]( &OBJC_CLASS___NSError,  "msv_errorWithDomain:code:debugDescription:",  ICErrorDomain,  0LL,  @"Found nil storefront identifier from local store account."));
        uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "Default");
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        {
          uint64_t v14 = *(void *)(a1 + 32);
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "msv_description"));
          int v16 = 138543618;
          uint64_t v17 = v14;
          __int16 v18 = 2114;
          id v19 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "%{public}@: %{public}@",  (uint8_t *)&v16,  0x16u);
        }

        goto LABEL_5;
      }
    }

    id v8 = 0LL;
    goto LABEL_10;
  }

  int v6 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v16 = 138543618;
    uint64_t v17 = v7;
    __int16 v18 = 2114;
    id v19 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@: Encountered error getting properties for active account: %{public}@.",  (uint8_t *)&v16,  0x16u);
  }

  id v8 = v5;
LABEL_5:
  id v9 = 0LL;
LABEL_10:
  [*(id *)(a1 + 32) _updateWithStorefrontIdentifier:v9 error:v8];
}

void sub_1000369CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 138543618;
      uint64_t v10 = v8;
      __int16 v11 = 2114;
      id v12 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@: Failed to fetch bag with error: %{public}@.",  (uint8_t *)&v9,  0x16u);
    }
  }

  [*(id *)(a1 + 32) _updateWithBag:v5 error:v6];
}

void sub_100036AC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = (id *)(a1 + 40);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  [*(id *)(a1 + 32) _updateWithCapabilities:a2 error:v6 privacyAcknowledgementPolicy:*(void *)(a1 + 48) capabilitiesRequestOperation:WeakRetained];
}

void sub_100036B28(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543618;
    uint64_t v12 = v8;
    __int16 v13 = 2114;
    id v14 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Notifying client with observation token %{public}@ of updated active account.",  buf,  0x16u);
  }

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_100036C5C;
  v10[3] = &unk_1001A6398;
  void v10[4] = *(void *)(a1 + 32);
  int v9 = (void *)objc_claimAutoreleasedReturnValue([v6 remoteObjectProxyWithErrorHandler:v10]);

  [v9 activeAccountDidChange];
}

void sub_100036C5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138543618;
    uint64_t v7 = v5;
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@: Failed to obtain remote proxy to notify of updated active account; error = %{public}@.",
      (uint8_t *)&v6,
      0x16u);
  }
}

void sub_100036D2C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleUpdatedBag:v3];
}

void sub_100036D74(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + 32);
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _handleUpdatedSubscriptionStatus:v4];
}

void sub_100036DBC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 originatingClientConnection]);
  unsigned int v8 = [v7 isEqual:*(void *)(a1 + 32)];

  if (v8)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = a3;
    *a4 = 1;
  }

void sub_100036E2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_loadWeakRetained((id *)(a1 + 40));
  if (v2) {
    [WeakRetained _handleClientConnectionInterrupted:v2];
  }
}

void sub_100036E80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_loadWeakRetained((id *)(a1 + 40));
  if (v2) {
    [WeakRetained _handleClientConnectionInvalidated:v2];
  }
}

void sub_100036ED4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v8 = v6;
  if (!v5)
  {
    id v10 = v6;
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 domain]);
    if ([v12 isEqualToString:ICErrorDomain])
    {
      id v13 = [v10 code];

      if (v13 == (id)-8200LL) {
        goto LABEL_8;
      }
    }

    else
    {
    }

    uint64_t v14 = objc_claimAutoreleasedReturnValue( +[NSError msv_errorWithDomain:code:underlyingError:debugDescription:]( &OBJC_CLASS___NSError,  "msv_errorWithDomain:code:underlyingError:debugDescription:",  ICErrorDomain,  -8200LL,  v10,  @"Failed to fetch developer token."));

    id v10 = (id)v14;
LABEL_8:
    uint64_t v15 = *(void *)(a1 + 48);
    id v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, void, id))(v15 + 16))(v15, 0LL, v11);
    goto LABEL_9;
  }

  id v9 = objc_msgSend( (id)objc_opt_class(*(void *)(a1 + 32), v7),  "_clientInfoForUserTokenRequestWithRequestingApplicationBundleIdentifier:",  *(void *)(a1 + 40));
  id v10 = (id)objc_claimAutoreleasedReturnValue(v9);
  id v11 = [[ICMusicUserTokenFetchRequest alloc] initWithDeveloperToken:v5 clientInfo:v10 options:*(void *)(a1 + 56) & 1];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_100037080;
  v16[3] = &unk_1001A2510;
  id v17 = v5;
  id v18 = *(id *)(a1 + 48);
  [v11 performRequestWithResponseHandler:v16];

LABEL_9:
}

void sub_100037080(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [[ICMusicKitTokensResponse alloc] initWithDeveloperToken:*(void *)(a1 + 32) userToken:v6 userTokenFetchingError:v5];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_100037104(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100037110(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100038404(_Unwind_Exception *a1)
{
}

void sub_1000390A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

void sub_100039664(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5 || v6)
  {
    [*(id *)(a1 + 32) addPendingChange:*(void *)(a1 + 40)];
  }

  else
  {
    if ([v5 hasCapability:512])
    {
      uint64_t v8 = *(void *)(a1 + 48);
      if (v8)
      {
        id v9 = *(void (**)(void))(v8 + 16);
LABEL_12:
        v9();
        goto LABEL_13;
      }

      goto LABEL_13;
    }

    id v10 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543362;
      uint64_t v21 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "%{public}@ Cannot run operation as user is not subscribed to Cloud Music Library",  buf,  0xCu);
    }

    uint64_t v12 = MSVAutoBugCaptureDomainMusicLibrary;
    v17[0] = @"FavoriteChangeOperation";
    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) description]);
    v17[1] = @"SubscriptionStatus";
    v18[0] = v13;
    v18[1] = v5;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v18,  v17,  2LL));
    id v19 = v14;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v19, 1LL));
    +[MSVAutoBugCapture snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:]( &OBJC_CLASS___MSVAutoBugCapture,  "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:",  v12,  @"Bug",  @"OFT-FavoriteEntityForUnsupportedSubscription",  @"Unsupported API call",  0LL,  v15,  0LL);

    [*(id *)(a1 + 40) _revertPendingFavoriteEntityForPermanentlyFailedOperation];
  }

  uint64_t v16 = *(void *)(a1 + 48);
  if (v16)
  {
    id v9 = *(void (**)(void))(v16 + 16);
    goto LABEL_12;
  }

void sub_100039858(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

void sub_1000398A4(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = a2;
  id v7 = v6;
  if (*(_BYTE *)(a1 + 56))
  {
    uint64_t v8 = *(void **)(a1 + 32);
    id v45 = v6;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v45, 1LL));
    id v34 = 0LL;
    LOBYTE(v_Block_object_dispose(va, 8) = objc_msgSend( v8,  "executeUpdate:withParameters:error:",  @"UPDATE item_stats SET liked_state=1, liked_state_changed_date=0 WHERE item_pid=?",  v9,  &v34);
    id v10 = v34;
    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)v8;

    if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL))
    {
      uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = *(void *)(a1 + 40);
        id v13 = [v7 longLongValue];
        uint64_t v14 = *(void **)(*(void *)(a1 + 40) + 88LL);
        *(_DWORD *)buf = 138544130;
        uint64_t v38 = v12;
        __int16 v39 = 2048;
        id v40 = v13;
        __int16 v41 = 2048;
        id v42 = v14;
        __int16 v43 = 2114;
        id v44 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not revert liked_state=1, liked_state_changed_date=0 for track with persistentID=%lld, storeI D:%lld. Error=%{public}@",  buf,  0x2Au);
      }
    }
  }

  else
  {
    id v10 = 0LL;
  }

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL))
  {
    uint64_t v15 = *(void **)(a1 + 32);
    os_log_t v36 = v7;
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v36, 1LL));
    id v33 = v10;
    unsigned __int8 v17 = [v15 executeUpdate:@"UPDATE item_store SET store_saga_id = store_saga_id WHERE item_pid = ?" withParameters:v16 error:&v33];
    id v18 = v33;

    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v17;
    if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL))
    {
      if (!*(_BYTE *)(a1 + 57)) {
        goto LABEL_11;
      }
      id v19 = *(void **)(a1 + 32);
      v35[0] = &off_1001B3B68;
      v35[1] = v7;
      v35[2] = &off_1001B3B80;
      v35[3] = &off_1001B3B98;
      id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v35, 4LL));
      id v32 = v18;
      LOBYTE(v19) = objc_msgSend( v19,  "executeUpdate:withParameters:error:",  @"UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (?, ?)",  v20,  &v32);
      id v21 = v32;

      *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)v19;
      id v18 = v21;
      if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL))
      {
LABEL_11:
        id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
        +[ML3Track incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:]( ML3Track,  "incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:",  v22,  [v7 longLongValue],  0,  0,  *(void *)(a1 + 32));

        id v23 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v24 = *(void *)(a1 + 40);
          id v25 = [v7 longLongValue];
          *(_DWORD *)buf = 138543618;
          uint64_t v38 = v24;
          __int16 v39 = 2048;
          id v40 = v25;
          id v26 = "%{public}@ Updated in_my_library for track with persistent ID %lld";
          id v27 = v23;
          os_log_type_t v28 = OS_LOG_TYPE_DEFAULT;
          uint32_t v29 = 22;
LABEL_16:
          _os_log_impl((void *)&_mh_execute_header, v27, v28, v26, buf, v29);
          goto LABEL_17;
        }

        goto LABEL_17;
      }
    }
  }

  else
  {
    id v18 = v10;
  }

  *a4 = 1;
  id v23 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
  {
    uint64_t v30 = *(void *)(a1 + 40);
    id v31 = [v7 longLongValue];
    *(_DWORD *)buf = 138543874;
    uint64_t v38 = v30;
    __int16 v39 = 2048;
    id v40 = v31;
    __int16 v41 = 2114;
    id v42 = v18;
    id v26 = "%{public}@ Failed to update in_my_library for track with persistent ID %lld with error: %{public}@";
    id v27 = v23;
    os_log_type_t v28 = OS_LOG_TYPE_ERROR;
    uint32_t v29 = 32;
    goto LABEL_16;
  }

void sub_100039C8C(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    [v3 notifyEntitiesAddedOrRemoved];

    id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    [v4 notifyContentsDidChange];
  }

id sub_100039CE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  *(void *)(*(void *)(a1 + 32) + 96LL)));
  id v27 = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v27, 1LL));
  id v18 = 0LL;
  id v9 = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"UPDATE album_artist SET liked_state=1, liked_state_changed_date=0 WHERE album_artist_pid=?",  v8,  &v18);
  id v10 = v18;

  if ((v9 & 1) == 0)
  {
    uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = *(void *)(v12 + 88);
      uint64_t v14 = *(void *)(v12 + 96);
      *(_DWORD *)buf = 138544130;
      uint64_t v20 = v12;
      __int16 v21 = 2048;
      uint64_t v22 = v13;
      __int16 v23 = 2048;
      uint64_t v24 = v14;
      __int16 v25 = 2114;
      id v26 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not revert liked_state=1, liked_state_changed_date=0 for album_artist with store=%lld, persiste ntID=%lld. Error=%{public}@",  buf,  0x2Au);
    }
  }

  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_10003A0F0;
  v16[3] = &unk_1001A5C68;
  id v17 = *(id *)(a1 + 40);
  [v3 enqueueBlockForTransactionCommit:v16];

  return v9;
}

id sub_100039F00(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  uint64_t v23 = *(void *)(*(void *)(a1 + 32) + 120LL);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v23, 1LL));
  id v16 = 0LL;
  id v8 = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"UPDATE album_artist SET liked_state=1, liked_state_changed_date=0 WHERE cloud_universal_library_id=?",  v7,  &v16);
  id v9 = v16;

  if ((v8 & 1) == 0)
  {
    id v10 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(v11 + 120);
      *(_DWORD *)buf = 138543874;
      uint64_t v18 = v11;
      __int16 v19 = 2114;
      uint64_t v20 = v12;
      __int16 v21 = 2114;
      id v22 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not revert liked_state=1, liked_state_changed_date=0 for album_artist with cloud_universal_libr ary_id=%{public}@. Error=%{public}@",  buf,  0x20u);
    }
  }

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10003A0E0;
  v14[3] = &unk_1001A5C68;
  id v15 = *(id *)(a1 + 40);
  [v3 enqueueBlockForTransactionCommit:v14];

  return v8;
}

id *sub_10003A0E0(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] notifyContentsDidChange];
  }
  return result;
}

id *sub_10003A0F0(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] notifyContentsDidChange];
  }
  return result;
}

id sub_10003A100(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  *(void *)(*(void *)(a1 + 32) + 96LL)));
  uint32_t v29 = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v29, 1LL));
  id v22 = 0LL;
  id v9 = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"UPDATE album SET liked_state=1, liked_state_changed_date=0 WHERE album_pid=?",  v8,  &v22);
  id v10 = v22;

  if ((_DWORD)v9)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3TrackPropertyStorePlaylistID,  *(void *)(*(void *)(a1 + 32) + 88LL)));
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:]( &OBJC_CLASS___ML3Track,  "allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:",  *(void *)(a1 + 40),  v12,  &__NSArray0__struct,  0LL));
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    v20[2] = sub_10003A5C8;
    v20[3] = &unk_1001A6458;
    id v21 = v11;
    id v14 = v11;
    [v13 enumeratePersistentIDsUsingBlock:v20];
    [*(id *)(a1 + 32) _recomputeInUsersLibraryForTrackPids:v14 resetFavoriteState:0 usingConnection:v3];
  }

  else
  {
    uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(v15 + 96);
      *(_DWORD *)buf = 138543874;
      uint64_t v24 = v15;
      __int16 v25 = 2048;
      uint64_t v26 = v16;
      __int16 v27 = 2114;
      id v28 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not revert liked_state=1, liked_state_changed_date=0 for album with album_pid=%lld. Error=%{public}@",  buf,  0x20u);
    }
  }

  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472LL;
  void v18[2] = sub_10003A614;
  v18[3] = &unk_1001A5C68;
  id v19 = *(id *)(a1 + 40);
  [v3 enqueueBlockForTransactionCommit:v18];

  return v9;
}

id sub_10003A3D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  uint64_t v23 = *(void *)(*(void *)(a1 + 32) + 112LL);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v23, 1LL));
  id v16 = 0LL;
  id v8 = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"UPDATE album SET liked_state=1, liked_state_changed_date=0 WHERE cloud_library_id=?",  v7,  &v16);
  id v9 = v16;

  if ((v8 & 1) == 0)
  {
    id v10 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(v11 + 112);
      *(_DWORD *)buf = 138543874;
      uint64_t v18 = v11;
      __int16 v19 = 2114;
      uint64_t v20 = v12;
      __int16 v21 = 2114;
      id v22 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not revert liked_state=1, liked_state_changed_date=0 for album with cloud_universal_id=%{public }@ with error=%{public}@",  buf,  0x20u);
    }
  }

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10003A5B8;
  v14[3] = &unk_1001A5C68;
  id v15 = *(id *)(a1 + 40);
  [v3 enqueueBlockForTransactionCommit:v14];

  return v8;
}

id *sub_10003A5B8(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] notifyContentsDidChange];
  }
  return result;
}

void sub_10003A5C8(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

id *sub_10003A614(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] notifyContentsDidChange];
  }
  return result;
}

uint64_t sub_10003A624(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  id v7 = *(void **)(a1 + 32);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v7[12]));
  uint64_t v11 = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v11, 1LL));
  [v7 _recomputeInUsersLibraryForTrackPids:v9 resetFavoriteState:1 usingConnection:v3];

  return 1LL;
}

uint64_t sub_10003A734(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10003A744(uint64_t a1)
{
}

void sub_10003A74C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

uint64_t sub_10003A7A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  id v7 = *(void **)(a1 + 32);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) allObjects]);
  [v7 _recomputeInUsersLibraryForTrackPids:v8 resetFavoriteState:0 usingConnection:v3];

  return 1LL;
}

uint64_t sub_10003A84C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10003AC3C;
  v15[3] = &unk_1001A26C0;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = v7;
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(a1 + 40);
  id v16 = v3;
  uint64_t v17 = v8;
  id v10 = v3;
  [v9 enumerateObjectsUsingBlock:v15];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_10003ADE4;
  v13[3] = &unk_1001A5C68;
  id v14 = *(id *)(a1 + 48);
  [v10 enqueueBlockForTransactionCommit:v13];
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);

  return v11;
}

uint64_t sub_10003A974(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  LODWORD(v5) = sub_100114150(v7);

  if ((_DWORD)v5)
  {
    v32[0] = *(void *)(a1 + 40);
    v32[1] = &off_1001B3B68;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  *(void *)(*(void *)(a1 + 32) + 96LL)));
    v32[2] = v8;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v32, 3LL));
    id v22 = 0LL;
    unsigned __int8 v10 = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"UPDATE album SET cloud_library_id=?, keep_local=? WHERE album_pid=?",  v9,  &v22);
    uint64_t v11 = v22;
  }

  else
  {
    v31[0] = *(void *)(a1 + 40);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  *(void *)(*(void *)(a1 + 32) + 96LL)));
    v31[1] = v8;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v31, 2LL));
    __int16 v21 = 0LL;
    unsigned __int8 v10 = [v3 executeUpdate:@"UPDATE album SET cloud_library_id=? WHERE album_pid=?" withParameters:v9 error:&v21];
    uint64_t v11 = v21;
  }

  id v12 = v11;

  if ((v10 & 1) != 0)
  {
    uint64_t v13 = 1LL;
  }

  else
  {
    id v14 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(v15 + 96);
      *(_DWORD *)buf = 138544130;
      uint64_t v24 = v15;
      __int16 v25 = 2114;
      uint64_t v26 = v16;
      __int16 v27 = 2048;
      uint64_t v28 = v17;
      __int16 v29 = 2114;
      id v30 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "%{public}@ set cloud_library_id=%{public}@ for album with persistentID=%lld with error=%{public}@",  buf,  0x2Au);
    }

    uint64_t v13 = 0LL;
  }

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_10003AC2C;
  v19[3] = &unk_1001A5C68;
  id v20 = *(id *)(a1 + 48);
  [v3 enqueueBlockForTransactionCommit:v19];

  return v13;
}

id *sub_10003AC2C(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] notifyContentsDidChange];
  }
  return result;
}

void sub_10003AC3C(void *a1)
{
  id v2 = (void *)a1[4];
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a1[7]));
  v21[0] = v3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  *(void *)(a1[5] + 96LL)));
  v21[1] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v21, 2LL));
  id v12 = 0LL;
  unsigned __int8 v6 = [v2 executeUpdate:@"UPDATE container SET store_cloud_id=? WHERE container_pid=?" withParameters:v5 error:&v12];
  id v7 = v12;
  *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = v6;

  if (!*(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL))
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[5];
      uint64_t v10 = a1[7];
      uint64_t v11 = *(void *)(v9 + 96);
      *(_DWORD *)buf = 138544130;
      uint64_t v14 = v9;
      __int16 v15 = 2048;
      uint64_t v16 = v10;
      __int16 v17 = 2048;
      uint64_t v18 = v11;
      __int16 v19 = 2114;
      id v20 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Could not set store_cloud_id=%lld for container with persistentID=%lld. Error=%{public}@",  buf,  0x2Au);
    }
  }
}

id *sub_10003ADE4(id *result, int a2)
{
  if (a2) {
    return (id *)[result[4] notifyContentsDidChange];
  }
  return result;
}

void sub_10003ADF4(uint64_t a1, uint64_t a2)
{
  if ((_DWORD)a2)
  {
    id v3 = (id *)(a1 + 32);
    id v4 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@",  objc_opt_class(*(void *)(a1 + 32), a2));
    uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
    id v6 = [[MSVXPCTransaction alloc] initWithName:v5];
    [v6 beginTransaction];
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*v3 musicLibrary]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*v3 clientIdentity]);
    [v7 setClientIdentity:v8];

    os_log_t v62 = (void *)objc_claimAutoreleasedReturnValue([*v3 connection]);
    unsigned int v61 = objc_alloc(&OBJC_CLASS___ICFavoriteEntityRequest);
    uint64_t v9 = *((void *)*v3 + 11);
    uint64_t v10 = *((void *)*v3 + 13);
    uint64_t v11 = *((void *)*v3 + 14);
    uint64_t v12 = *((void *)*v3 + 15);
    uint64_t v13 = (os_log_s *)v5;
    id v14 = v6;
    uint64_t v15 = *((void *)*v3 + 17);
    uint64_t v16 = *((void *)*v3 + 16);
    LODWORD(v6) = [v62 databaseID];
    unsigned int v17 = [*v3 _currentDatabaseRevision];
    uint64_t v18 = v15;
    __int16 v19 = v14;
    id v20 = v13;
    __int16 v21 = -[ICFavoriteEntityRequest initWithStoreID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:entityType:time:databaseID:databaseRevision:]( v61,  "initWithStoreID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:entityType:time:databaseID:databaseRevision:",  v9,  v10,  v11,  v12,  v18,  v16,  __PAIR64__(v17, v6));
    id v22 = v21;
    if (!v21)
    {
LABEL_40:
      if ([*(id *)(a1 + 32) status] == (id)3)
      {
        unsigned __int16 v56 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v57 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          *(void *)&uint8_t buf[4] = v57;
          _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Operation permanently failed, attempting to remove pending library content...",  buf,  0xCu);
        }

        [*(id *)(a1 + 32) _revertPendingFavoriteEntityForPermanentlyFailedOperation];
      }

      v58 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
      uint64_t v59 = MSVTCCIdentityForCurrentProcess();
      v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
      [v58 setClientIdentity:v60];

      [v19 endTransaction];
      goto LABEL_45;
    }

    -[ICDRequest setVerificationInteractionLevel:](v21, "setVerificationInteractionLevel:", 2LL);
    uint64_t v23 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = *(void *)(a1 + 32);
      uint64_t v26 = (objc_class *)objc_opt_class(v22, v24);
      __int16 v27 = NSStringFromClass(v26);
      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
      if (-[ICDRequest method](v22, "method")) {
        __int16 v29 = @"POST";
      }
      else {
        __int16 v29 = @"GET";
      }
      id v30 = (void *)objc_claimAutoreleasedReturnValue(-[ICDRequest action](v22, "action"));
      *(_DWORD *)buf = 138544386;
      *(void *)&uint8_t buf[4] = v25;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v28;
      *(_WORD *)&buf[22] = 2048;
      id v79 = (uint64_t (*)(uint64_t, uint64_t))v22;
      *(_WORD *)id v80 = 2114;
      *(void *)&v80[2] = v29;
      *(_WORD *)&v80[10] = 2114;
      *(void *)&v80[12] = v30;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Sending favorite entity request <%{public}@: %p method=%{public}@ action=%{public}@>",  buf,  0x34u);
    }

    *(void *)buf = 0LL;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x3032000000LL;
    id v79 = sub_10003A734;
    *(void *)id v80 = sub_10003A744;
    *(void *)&v80[8] = 0LL;
    uint64_t v70 = 0LL;
    unsigned __int16 v71 = &v70;
    uint64_t v72 = 0x3032000000LL;
    uint64_t v73 = sub_10003A734;
    os_log_t v74 = sub_10003A744;
    id v75 = 0LL;
    dispatch_semaphore_t v31 = dispatch_semaphore_create(0LL);
    v64[0] = _NSConcreteStackBlock;
    v64[1] = 3221225472LL;
    v64[2] = sub_10003B628;
    v64[3] = &unk_1001A5BF0;
    id v32 = v22;
    uint64_t v33 = *(void *)(a1 + 32);
    id v65 = v32;
    uint64_t v66 = v33;
    id v68 = buf;
    uint64_t v69 = &v70;
    uint64_t v34 = a1;
    id v35 = v31;
    uint64_t v67 = v35;
    [v62 sendRequest:v32 withResponseHandler:v64];
    dispatch_semaphore_wait(v35, 0xFFFFFFFFFFFFFFFFLL);
    uint64_t v36 = (uint64_t)[*(id *)(*(void *)&buf[8] + 40) responseCode];
    if (v36 > 399)
    {
      if (v36 == 404 || v36 == 400)
      {
        uint64_t v37 = 3LL;
        goto LABEL_18;
      }
    }

    else
    {
      uint64_t v37 = 1LL;
      if (v36 == 200 || v36 == 204)
      {
LABEL_18:
        [*(id *)(a1 + 32) setStatus:v37];
        __int16 v39 = (void *)v71[5];
        if (!v39) {
          goto LABEL_26;
        }
        id v40 = (void *)objc_claimAutoreleasedReturnValue([v39 domain]);
        if ([v40 isEqualToString:ICCloudClientErrorDomain])
        {
          BOOL v41 = [(id)v71[5] code] == (id)2019;

          uint64_t v34 = a1;
          if (!v41) {
            goto LABEL_26;
          }
          id v42 = (void *)objc_claimAutoreleasedReturnValue([(id)v71[5] userInfo]);
          id v40 = (void *)objc_claimAutoreleasedReturnValue( [v42 objectForKey:@"CloudLibraryConnectionRequestForbiddenAdditonalErrorCodeKey"]);

          if ([v40 integerValue] == (id)954)
          {
            [*(id *)(a1 + 32) setStatus:3];
            __int16 v43 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
            if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
            {
              uint64_t v44 = *(void *)(a1 + 32);
              *(_DWORD *)unsigned __int16 v76 = 138543362;
              uint64_t v77 = v44;
              _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "%{public}@ favorite entity permamently failed -- item limit exceeded",  v76,  0xCu);
            }
          }
        }

        uint64_t v34 = a1;
LABEL_26:
        if (MSVDeviceOSIsInternalInstall(v39))
        {
          id v45 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
          unsigned int v46 = [v45 shouldTreatFavoritingEntityRequestAsFailed];

          uint64_t v34 = a1;
          if (v46)
          {
            unsigned __int16 v47 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
            if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v48 = *(void *)(a1 + 32);
              *(_DWORD *)unsigned __int16 v76 = 138543362;
              uint64_t v77 = v48;
              _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Defaults are set to treat favoriting action as failed. Setting operation status to permanently failed",  v76,  0xCu);
            }

            uint64_t v34 = a1;
            [*(id *)(a1 + 32) setStatus:3];
          }
        }

        if ([*(id *)(v34 + 32) status] == (id)1)
        {
          [*(id *)(a1 + 32) _setCloudIDsFromResponse:*(void *)(*(void *)&buf[8] + 40)];
          unsigned int v49 = [*(id *)(*(void *)&buf[8] + 40) updateRequired];
          __int16 v50 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
          BOOL v51 = os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT);
          if (v49)
          {
            if (v51)
            {
              uint64_t v52 = *(void *)(a1 + 32);
              *(_DWORD *)unsigned __int16 v76 = 138543362;
              uint64_t v77 = v52;
              _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Requesting library update because the response contained update-required flag",  v76,  0xCu);
            }

            __int16 v50 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
            int v53 = (void *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  v50));
            id v54 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
            [v53 updateSagaLibraryWithClientIdentity:v54 forReason:8 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:0];
          }

          else if (v51)
          {
            uint64_t v55 = *(void *)(a1 + 32);
            *(_DWORD *)unsigned __int16 v76 = 138543362;
            uint64_t v77 = v55;
            _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Skipping library update because the response did not contain update-required flag",  v76,  0xCu);
          }
        }

        _Block_object_dispose(&v70, 8);
        _Block_object_dispose(buf, 8);

        goto LABEL_40;
      }
    }

    uint64_t v37 = 2LL;
    goto LABEL_18;
  }

  id v20 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v38 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    *(void *)&uint8_t buf[4] = v38;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "%{public}@ Not running operation", buf, 0xCu);
  }

LABEL_45:
}

        uint64_t v26 = 0LL;
        goto LABEL_46;
      }
    }

    id v20 = 0LL;
    goto LABEL_45;
  }

  id v6 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    id v7 = "Failed to load URL bag, skipping artist hero image update";
    goto LABEL_15;
  }

    id v35 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( v17,  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v18,  v19,  4LL,  1LL,  4000LL,  *(void *)v56);
    goto LABEL_46;
  }

  if (*(uint64_t *)v57 > 2999)
  {
    if (*(void *)v57 == 3000LL)
    {
      LODWORD(v60[0]) = bswap32(DWORD2(v58[0]));
      id v42 = (char *)calloc(8uLL, 1uLL);
      __int16 v43 = 0LL;
      uint64_t v44 = v42 + 1;
      do
      {
        id v45 = *((unsigned __int8 *)v60 + v43);
        *(v44 - 1) = a0123456789abcd[v45 >> 4];
        *uint64_t v44 = a0123456789abcd[v45 & 0xF];
        v44 += 2;
        ++v43;
      }

      while (v43 != 4);
      unsigned int v17 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v18 = v42;
      __int16 v19 = 8LL;
    }

    else
    {
      if (*(void *)v57 != 3001LL) {
        goto LABEL_48;
      }
      v60[0] = bswap64(*((unint64_t *)&v58[0] + 1));
      id v20 = (char *)calloc(0x10uLL, 1uLL);
      __int16 v21 = 0LL;
      id v22 = v20 + 1;
      do
      {
        uint64_t v23 = *((unsigned __int8 *)v60 + v21);
        *(v22 - 1) = a0123456789abcd[v23 >> 4];
        *id v22 = a0123456789abcd[v23 & 0xF];
        v22 += 2;
        ++v21;
      }

      while (v21 != 8);
      unsigned int v17 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v18 = v20;
      __int16 v19 = 16LL;
    }

    goto LABEL_45;
  }

  if (*(void *)v57 == 1000LL)
  {
    id v30 = *((void *)&v58[0] + 1);
    dispatch_semaphore_t v31 = (char *)&v61 + 1;
    quot = *((void *)&v58[0] + 1);
    do
    {
      uint64_t v33 = lldiv(quot, 10LL);
      quot = v33.quot;
      if (v33.rem >= 0) {
        LOBYTE(v34) = v33.rem;
      }
      else {
        uint64_t v34 = -v33.rem;
      }
      *(v31 - 2) = v34 + 48;
      uint64_t v10 = (const UInt8 *)(v31 - 2);
      --v31;
    }

    while (v33.quot);
    if (v30 < 0)
    {
      *(v31 - 2) = 45;
      uint64_t v10 = (const UInt8 *)(v31 - 2);
    }

    uint64_t v9 = (char *)((char *)&v61 - (char *)v10);
    goto LABEL_35;
  }

  if (*(void *)v57 != 2000LL)
  {
LABEL_48:
    id v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSAssertionHandler currentHandler]( &OBJC_CLASS___NSAssertionHandler,  "currentHandler",  4000LL,  *(void *)v56));
    uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString * _Nonnull _MSVHashGetDigest(MSVHash)"));
    [v54 handleFailureInFunction:v55 file:@"MSVHasher+Algorithms.h" lineNumber:356 description:@"Cannot obtain digest from unknown hasher algorithm"];

    uint64_t v52 = &stru_1001A7960;
    goto LABEL_47;
  }

  uint64_t v5 = DWORD2(v58[0]);
  id v6 = &v61;
  do
  {
    id v7 = ldiv(v5, 10LL);
    uint64_t v5 = v7.quot;
    if (v7.rem >= 0) {
      LOBYTE(v_Block_object_dispose(va, 8) = v7.rem;
    }
    else {
      uint64_t v8 = -v7.rem;
    }
    *((_BYTE *)v6 - 1) = v8 + 48;
    id v6 = (uint64_t *)((char *)v6 - 1);
  }

  while (v7.quot);
  uint64_t v9 = (char *)((char *)&v61 - (char *)v6);
  uint64_t v10 = (const UInt8 *)v6;
LABEL_35:
  id v35 = CFStringCreateWithBytes(0LL, v10, (CFIndex)v9, 0x8000100u, 0);
LABEL_46:
  uint64_t v52 = (__CFString *)v35;
LABEL_47:

  return v52;
}

    id v42 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( v24,  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v25,  v26,  4LL,  1LL);
    goto LABEL_46;
  }

  if (*(uint64_t *)v74 > 2999)
  {
    if (*(void *)v74 == 3000LL)
    {
      LODWORD(v77[0]) = bswap32(DWORD2(v75[0]));
      unsigned int v49 = (char *)calloc(8uLL, 1uLL);
      __int16 v50 = 0LL;
      BOOL v51 = v49 + 1;
      do
      {
        uint64_t v52 = *((unsigned __int8 *)v77 + v50);
        *(v51 - 1) = a0123456789abcd[v52 >> 4];
        *BOOL v51 = a0123456789abcd[v52 & 0xF];
        v51 += 2;
        ++v50;
      }

      while (v50 != 4);
      uint64_t v24 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v25 = v49;
      uint64_t v26 = 8LL;
    }

    else
    {
      if (*(void *)v74 != 3001LL) {
        goto LABEL_50;
      }
      v77[0] = bswap64(*((unint64_t *)&v75[0] + 1));
      __int16 v27 = (char *)calloc(0x10uLL, 1uLL);
      uint64_t v28 = 0LL;
      __int16 v29 = v27 + 1;
      do
      {
        id v30 = *((unsigned __int8 *)v77 + v28);
        *(v29 - 1) = a0123456789abcd[v30 >> 4];
        *__int16 v29 = a0123456789abcd[v30 & 0xF];
        v29 += 2;
        ++v28;
      }

      while (v28 != 8);
      uint64_t v24 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v25 = v27;
      uint64_t v26 = 16LL;
    }

    goto LABEL_45;
  }

  if (*(void *)v74 == 1000LL)
  {
    uint64_t v37 = *((void *)&v75[0] + 1);
    uint64_t v38 = (char *)v78 + 1;
    quot = *((void *)&v75[0] + 1);
    do
    {
      id v40 = lldiv(quot, 10LL);
      quot = v40.quot;
      if (v40.rem >= 0) {
        LOBYTE(v41) = v40.rem;
      }
      else {
        BOOL v41 = -v40.rem;
      }
      *(v38 - 2) = v41 + 48;
      unsigned int v17 = (const UInt8 *)(v38 - 2);
      --v38;
    }

    while (v40.quot);
    if (v37 < 0)
    {
      *(v38 - 2) = 45;
      unsigned int v17 = (const UInt8 *)(v38 - 2);
    }

    uint64_t v16 = (char *)((char *)v78 - (char *)v17);
    goto LABEL_35;
  }

  if (*(void *)v74 == 2000LL)
  {
    uint64_t v12 = DWORD2(v75[0]);
    uint64_t v13 = v78;
    do
    {
      id v14 = ldiv(v12, 10LL);
      uint64_t v12 = v14.quot;
      if (v14.rem >= 0) {
        LOBYTE(v15) = v14.rem;
      }
      else {
        uint64_t v15 = -v14.rem;
      }
      *((_BYTE *)v13 - 1) = v15 + 48;
      uint64_t v13 = (void *)((char *)v13 - 1);
    }

    while (v14.quot);
    uint64_t v16 = (char *)((char *)v78 - (char *)v13);
    unsigned int v17 = (const UInt8 *)v13;
LABEL_35:
    id v42 = CFStringCreateWithBytes(0LL, v17, (CFIndex)v16, 0x8000100u, 0);
LABEL_46:
    uint64_t v59 = (__CFString *)v42;
    goto LABEL_47;
  }

void sub_10003B5F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

void sub_10003B628(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), v8);
    uint64_t v10 = NSStringFromClass(v9);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    uint64_t v12 = *(void **)(a1 + 32);
    id v13 = [v12 method];
    id v14 = @"POST";
    if (!v13) {
      id v14 = @"GET";
    }
    dispatch_semaphore_t v31 = v14;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) action]);
    unsigned int v17 = (objc_class *)objc_opt_class(v5, v16);
    uint64_t v18 = NSStringFromClass(v17);
    __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    id v20 = [v5 responseCode];
    __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    *(_DWORD *)buf = 138545154;
    uint64_t v33 = v11;
    __int16 v34 = 2048;
    id v35 = v12;
    __int16 v36 = 2114;
    uint64_t v37 = v31;
    __int16 v38 = 2114;
    __int16 v39 = v15;
    __int16 v40 = 2114;
    BOOL v41 = v19;
    __int16 v42 = 2048;
    id v43 = v5;
    __int16 v44 = 2048;
    id v45 = v20;
    __int16 v46 = 2048;
    id v47 = [v21 length];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x52u);
  }

  if (v6)
  {
    id v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v24 = *(void **)(a1 + 32);
      uint64_t v23 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138543874;
      uint64_t v33 = v23;
      __int16 v34 = 2114;
      id v35 = v24;
      __int16 v36 = 2114;
      uint64_t v37 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "%{public}@ %{public}@ failed with error: %{public}@",  buf,  0x20u);
    }
  }

  uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v26 = *(void **)(v25 + 40);
  *(void *)(v25 + 40) = v5;
  id v27 = v5;

  uint64_t v28 = *(void *)(*(void *)(a1 + 64) + 8LL);
  __int16 v29 = *(void **)(v28 + 40);
  *(void *)(v28 + 40) = v6;
  id v30 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_10003C248(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 40)) {
    int v3 = 1835625572;
  }
  else {
    int v3 = 1835624804;
  }
  if (*(_BYTE *)(a1 + 40)) {
    uint64_t v4 = 7LL;
  }
  else {
    uint64_t v4 = 5LL;
  }
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10003C2F0;
  v6[3] = &unk_1001A39B8;
  id v5 = *(id *)(a1 + 32);
  int v9 = v3;
  id v7 = v5;
  uint64_t v8 = v4;
  ICDAAPUtilitiesWriteContainer(a2, 1835623521LL, v6);
}

void sub_10003C2F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0LL;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        ICDAAPUtilitiesWriteProperty( v3,  *(unsigned int *)(a1 + 48),  *(void *)(a1 + 40),  *(void *)(*((void *)&v9 + 1) + 8LL * (void)v8));
        uint64_t v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v6);
  }
}

void sub_10003C9FC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v9 = a1[4];
      __int128 v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v14 = 138543618;
      id v15 = v9;
      __int16 v16 = 2114;
      unsigned int v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished request to end collaboration error=%{public}@",  (uint8_t *)&v14,  0x16u);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = a1[4];
    int v14 = 138543362;
    id v15 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished request to end collaboration",  (uint8_t *)&v14,  0xCu);
  }

  uint64_t v12 = (uint64_t)[v5 responseCode];
  if (v12 > 399)
  {
    if (v12 == 404 || v12 == 400)
    {
      uint64_t v13 = 3LL;
      goto LABEL_14;
    }

    goto LABEL_13;
  }

  uint64_t v13 = 1LL;
  if (v12 != 200 && v12 != 204) {
LABEL_13:
  }
    uint64_t v13 = 2LL;
LABEL_14:
  [a1[4] setStatus:v13];
  [a1[4] setError:v6];
  if (!v6)
  {
    *((_BYTE *)a1[4] + 107) = [v5 updateRequired];
    *(void *)((char *)a1[4] + 114) = [a1[5] longLongValue];
  }

  [a1[6] endTransaction];
  [a1[4] finish];
}

void sub_10003DF24( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, char a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

void sub_10003E834( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

LABEL_12:
    __int16 v16 = v6;
    goto LABEL_13;
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 music]);
  __int128 v10 = (id)objc_claimAutoreleasedReturnValue([v9 userProfile]);
  if (v10 == v7)
  {

LABEL_9:
    unsigned int v17 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      uint64_t v28 = self;
      uint64_t v18 = "%{public}@ User profile unchanged. Returning state.";
      __int16 v19 = v17;
      id v20 = OS_LOG_TYPE_DEFAULT;
      __int16 v21 = 12;
      goto LABEL_11;
    }

    goto LABEL_12;
  }

  id v11 = v10;
  uint64_t v12 = [v10 isEqual:v7];

  if ((v12 & 1) != 0) {
    goto LABEL_9;
  }
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v6 music]);
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472LL;
  void v25[2] = sub_10003F4F0;
  v25[3] = &unk_1001A2CA8;
  uint64_t v26 = v7;
  int v14 = [v13 copyWithBlock:v25];

  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472LL;
  v23[2] = sub_10003F4FC;
  v23[3] = &unk_1001A2C80;
  uint64_t v24 = v14;
  id v15 = v14;
  __int16 v16 = [v6 copyWithBlock:v23];

LABEL_13:
  return v16;
}
}

LABEL_4:
  uint64_t v7 = 0;
LABEL_13:

  return v7;
}

  LOBYTE(self->super._status) = 0;
  BYTE1(self->super._status) = 0;
  uint64_t v12 = -[CloudUpdateLibraryOperation _updateLibrary](self, "_updateLibrary");
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  int v14 = [v13 shouldTreatSubscriptionStatusAsExpired];
  if ((_DWORD)v14)
  {
    id v15 = MSVDeviceOSIsInternalInstall(v14);

    if (v15)
    {
      unsigned int v17 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        id v94 = self;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - shouldTreatSubscriptionStatusAsExpired is set. Will force subscription status to be expired",  buf,  0xCu);
      }

      -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
      v78[0] = &off_1001B45D0;
      v77[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
      v77[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
      v78[1] = v18;
      v77[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
      __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v4 == 0LL));
      v78[2] = v19;
      v78[3] = &off_1001B4648;
      v77[3] = @"ICDCloudMusicLibraryProgressPermanentFailureTypeKey";
      v77[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
      id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
      void v78[4] = v20;
      __int16 v21 = v78;
      id v22 = v77;
      goto LABEL_19;
    }
  }

  else
  {
  }

  if ((v12 & 1) == 0)
  {
    if (!LOBYTE(self->super._status))
    {
      if (v4)
      {
        -[CloudLibraryOperation setStatus:](self, "setStatus:", 5LL);
        v68[0] = &off_1001B4630;
        v67[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
        v67[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
        v68[1] = v18;
        v67[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
        __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 0LL));
        v68[2] = v19;
        v67[3] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
        id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
        v68[3] = v20;
        id v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v68,  v67,  4LL));
        uint64_t v33 = @"load initial cloud library";
      }

      else
      {
        if (BYTE1(self->super._status))
        {
          if (MSVDeviceSupportsMultipleLibraries(v16))
          {
            -[CloudLibraryOperation setStatus:](self, "setStatus:", 5LL);
            v74[0] = &off_1001B4630;
            v73[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
            v73[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
            uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
            v74[1] = v18;
            v73[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
            __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
            v74[2] = v19;
            v74[3] = &off_1001B4660;
            v73[3] = @"ICDCloudMusicLibraryProgressTemporaryFialureTypeKey";
            v73[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
            id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
            v74[4] = v20;
            uint64_t v55 = v74;
            unsigned __int16 v56 = v73;
          }

          else
          {
            -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
            v72[0] = &off_1001B45D0;
            v71[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
            v71[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
            uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
            v72[1] = v18;
            v71[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
            __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
            v72[2] = v19;
            v72[3] = &off_1001B4678;
            v71[3] = @"ICDCloudMusicLibraryProgressPermanentFailureTypeKey";
            v71[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
            id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
            v72[4] = v20;
            uint64_t v55 = v72;
            unsigned __int16 v56 = v71;
          }
        }

        else
        {
          -[CloudLibraryOperation setStatus:](self, "setStatus:", 5LL);
          v70[0] = &off_1001B4630;
          v69[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
          v69[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
          v70[1] = v18;
          v69[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
          __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
          v70[2] = v19;
          v70[3] = &off_1001B4660;
          v69[3] = @"ICDCloudMusicLibraryProgressTemporaryFialureTypeKey";
          v69[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
          id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
          v70[4] = v20;
          uint64_t v55 = v70;
          unsigned __int16 v56 = v69;
        }

        id v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v55,  v56,  5LL));
        uint64_t v33 = @"load initial cloud library - isInitialImport";
      }

      goto LABEL_20;
    }

    -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
    v76[0] = &off_1001B45D0;
    v75[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
    v75[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
    v76[1] = v18;
    v75[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
    __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v4 == 0LL));
    v76[2] = v19;
    v76[3] = &off_1001B4648;
    v75[3] = @"ICDCloudMusicLibraryProgressPermanentFailureTypeKey";
    v75[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
    id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
    uint8_t v76[4] = v20;
    __int16 v21 = v76;
    id v22 = v75;
LABEL_19:
    id v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v21,  v22,  5LL));
    uint64_t v33 = @"subscription lapsed";
LABEL_20:

    __int16 v34 = 0;
    goto LABEL_21;
  }

  id v32 = 0LL;
  uint64_t v33 = 0LL;
  __int16 v34 = 1;
LABEL_21:
  id v35 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
  {
    __int16 v36 = -[CloudLibraryOperation status](self, "status");
    *(_DWORD *)buf = 138543874;
    id v94 = self;
    id v95 = 1024;
    *(_DWORD *)id v96 = v36;
    *(_WORD *)&v96[4] = 2114;
    *(void *)&v96[6] = v33;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_ERROR,  "%{public}@ - finished with status=%d, failureReason=%{public}@",  buf,  0x1Cu);
  }

  if (v34)
  {
    v66[0] = &off_1001B45B8;
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper,  @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey",  @"ICDCloudMusicLibraryProgressRequestReasonKey"));
    v66[1] = v37;
    v65[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
    __int16 v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v4 == 0LL));
    v66[2] = v38;
    v65[3] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
    __int16 v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
    v66[3] = v39;
    __int16 v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v66,  v65,  4LL));

    if (!v4)
    {
      BOOL v41 = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification( v41,  ICCloudClientInitialCloudLibraryImportCompletedNotification,  0LL,  0LL,  1u);
    }
  }

  else
  {
    if (!v4 && (id)-[CloudLibraryOperation status](self, "status") == (id)3) {
      -[CloudUpdateLibraryOperation _clearAllCloudIDs](self, "_clearAllCloudIDs");
    }
    __int16 v40 = v32;
  }

void sub_10003F370(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "UserState");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@: connection invalidated: pid=%u",  (uint8_t *)&v5,  0x12u);
  }
}

void sub_10003F430(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "UserState");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@: connection interrupted: pid=%u",  (uint8_t *)&v5,  0x12u);
  }
}

id sub_10003F4F0(uint64_t a1, void *a2)
{
  return [a2 setUserProfile:*(void *)(a1 + 32)];
}

id sub_10003F4FC(uint64_t a1, void *a2)
{
  return [a2 setMusic:*(void *)(a1 + 32)];
}

void sub_10003F508(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  [v3 setIdentityStore:v4];

  [v3 setIdentity:*(void *)(a1 + 32)];
  [v3 setAllowsExpiredBags:1];
  id v5 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v3 setAuthenticationProvider:v5];
}

id sub_10003F5A8(id a1, ICMediaUserState *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10003F620;
  v5[3] = &unk_1001A2C80;
  uint64_t v6 = a2;
  id v2 = v6;
  id v3 = -[ICMediaUserState copyWithBlock:](v2, "copyWithBlock:", v5);

  return v3;
}

void sub_10003F620(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  int v4 = (void *)objc_claimAutoreleasedReturnValue([v2 music]);
  id v5 = [v4 copyWithBlock:&stru_1001A2C58];

  [v3 setMusic:v5];
}

void sub_10003F684(id a1, ICMutableMusicUserState *a2)
{
}

void sub_10003F690(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    __int16 v7 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v59 = *(void *)(a1 + 32);
      v60 = v7;
      id v8 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) DSID]);
      uint64_t v9 = MSVHasherSharedSeed();
      uint64_t v11 = v10;
      __int128 v66 = 0u;
      __int128 v67 = 0u;
      __int128 v68 = 0u;
      __int128 v69 = 0u;
      __int128 v70 = 0u;
      __int128 v71 = 0u;
      __int128 v72 = 0u;
      __int128 v73 = 0u;
      __int128 v74 = 0u;
      __int128 v75 = 0u;
      uint64_t v12 = v9 ^ 0x736F6D6570736575LL;
      uint64_t v76 = 0LL;
      uint64_t v13 = v10 ^ 0x646F72616E646F6DLL;
      uint64_t v14 = v9 ^ 0x6C7967656E657261LL;
      *(void *)buf = 1000LL;
      unint64_t v15 = (unint64_t)[v8 integerValue];
      uint64_t v16 = v11 ^ 0x7465646279746573LL ^ v15;
      uint64_t v17 = (v12 + v13) ^ __ROR8__(v13, 51);
      uint64_t v18 = v14 + v16;
      uint64_t v19 = (v14 + v16) ^ __ROR8__(v16, 48);
      uint64_t v20 = v19 + __ROR8__(v12 + v13, 32);
      uint64_t v21 = v18 + v17;
      uint64_t v22 = v21 ^ __ROR8__(v17, 47);
      uint64_t v65 = 0x800000000000000LL;
      memset(&v77[1], 0, 64);
      uint64_t v23 = v20 ^ __ROR8__(v19, 43) ^ 0x800000000000000LL;
      unint64_t v24 = (v20 ^ v15) + v22;
      uint64_t v25 = v24 ^ __ROR8__(v22, 51);
      uint64_t v26 = __ROR8__(v21, 32) + v23;
      uint64_t v27 = __ROR8__(v23, 48);
      uint64_t v28 = (v26 ^ v27) + __ROR8__(v24, 32);
      uint64_t v29 = v28 ^ __ROR8__(v26 ^ v27, 43);
      uint64_t v30 = v26 + v25;
      uint64_t v31 = v30 ^ __ROR8__(v25, 47);
      uint64_t v32 = (v28 ^ 0x800000000000000LL) + v31;
      uint64_t v33 = __ROR8__(v32, 32);
      uint64_t v34 = v32 ^ __ROR8__(v31, 51);
      uint64_t v35 = (__ROR8__(v30, 32) ^ 0xFFLL) + v29;
      uint64_t v36 = v35 ^ __ROR8__(v29, 48);
      uint64_t v37 = v33 + v36;
      uint64_t v38 = (v33 + v36) ^ __ROR8__(v36, 43);
      uint64_t v39 = v34 + v35;
      uint64_t v40 = v39 ^ __ROR8__(v34, 47);
      uint64_t v41 = v40 + v37;
      uint64_t v42 = v41 ^ __ROR8__(v40, 51);
      uint64_t v43 = __ROR8__(v39, 32) + v38;
      uint64_t v44 = __ROR8__(v38, 48);
      uint64_t v45 = __ROR8__(v41, 32) + (v43 ^ v44);
      uint64_t v46 = v45 ^ __ROR8__(v43 ^ v44, 43);
      uint64_t v47 = v42 + v43;
      uint64_t v48 = v47 ^ __ROR8__(v42, 47);
      uint64_t v49 = v48 + v45;
      uint64_t v50 = v49 ^ __ROR8__(v48, 51);
      uint64_t v51 = __ROR8__(v47, 32) + v46;
      uint64_t v52 = __ROR8__(v46, 48);
      uint64_t v53 = __ROR8__(v49, 32) + (v51 ^ v52);
      uint64_t v54 = v53 ^ __ROR8__(v51 ^ v52, 43);
      uint64_t v55 = v50 + v51;
      *(void *)&buf[8] = v53;
      unint64_t v63 = __ROR8__(v55, 32);
      uint64_t v64 = v54;
      v77[0] = 1000LL;
      v77[1] = v55 ^ __ROR8__(v50, 47) ^ v53 ^ v63 ^ v54;
      *(_OWORD *)&v77[9] = *(_OWORD *)v77;
      *(_OWORD *)&v77[11] = *(_OWORD *)&v77[2];
      *(_OWORD *)&v77[13] = *(_OWORD *)&v77[4];
      *(_OWORD *)&v77[15] = *(_OWORD *)&v77[6];
      v77[17] = 0LL;
      __int16 v7 = v60;
      uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  v77[1]));
      v58 = (void *)objc_claimAutoreleasedReturnValue([v57 stringValue]);

      *(_DWORD *)buf = 138543874;
      *(void *)&uint8_t buf[4] = v59;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v58;
      __int16 v62 = 2114;
      unint64_t v63 = (unint64_t)v6;
      _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch user state for user %{public}@, refresh triggered by expired token. err=%{public}@",  buf,  0x20u);
    }

    unsigned __int16 v56 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
  }

  else
  {
    unsigned __int16 v56 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
  }

  v56();
}

unint64_t sub_10003FC64(void *a1)
{
  if (*a1 < 0x20uLL) {
    uint64_t v1 = a1[3] + 0x27D4EB2F165667C5LL;
  }
  else {
    uint64_t v1 = 0x85EBCA77C2B2AE63LL
  }
       - 0x61C8864E7A143579LL
       * ((0x85EBCA77C2B2AE63LL
         - 0x61C8864E7A143579LL
         * ((0x85EBCA77C2B2AE63LL
           - 0x61C8864E7A143579LL
           * ((0x85EBCA77C2B2AE63LL
             - 0x61C8864E7A143579LL
             * ((__ROR8__(a1[2], 57) + __ROR8__(a1[1], 63) + __ROR8__(a1[3], 52) + __ROR8__(a1[4], 46)) ^ (0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[1], 33)))) ^ (0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[2], 33)))) ^ (0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[3], 33)))) ^ (0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * a1[4], 33)));
  unint64_t v2 = v1 + *a1;
  id v3 = a1 + 5;
  unint64_t v4 = *a1 & 0x1FLL;
  if (v4 >= 8)
  {
    do
    {
      uint64_t v5 = *v3++;
      unint64_t v2 = 0x85EBCA77C2B2AE63LL
         - 0x61C8864E7A143579LL * __ROR8__((0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * v5, 33)) ^ v2, 37);
      v4 -= 8LL;
    }

    while (v4 > 7);
  }

  if (v4 >= 4)
  {
    unsigned int v6 = *(_DWORD *)v3;
    id v3 = (uint64_t *)((char *)v3 + 4);
    unint64_t v2 = 0x165667B19E3779F9LL - 0x3D4D51C2D82B14B1LL * __ROR8__((0x9E3779B185EBCA87LL * v6) ^ v2, 41);
    v4 -= 4LL;
  }

  for (; v4; --v4)
  {
    unsigned int v7 = *(unsigned __int8 *)v3;
    id v3 = (uint64_t *)((char *)v3 + 1);
    unint64_t v2 = 0x9E3779B185EBCA87LL * __ROR8__((0x27D4EB2F165667C5LL * v7) ^ v2, 53);
  }

  unint64_t v8 = 0x165667B19E3779F9LL
     * ((0xC2B2AE3D27D4EB4FLL * (v2 ^ (v2 >> 33))) ^ ((0xC2B2AE3D27D4EB4FLL * (v2 ^ (v2 >> 33))) >> 29));
  return v8 ^ HIDWORD(v8);
}

uint64_t sub_10003FDD4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10003FDE4(uint64_t a1)
{
}

void sub_10003FDEC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = os_log_create("com.apple.amp.itunescloudd", "UserState");
  unint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = a1[4];
      *(_DWORD *)buf = 138543618;
      uint64_t v20 = v9;
      __int16 v21 = 2114;
      id v22 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch token status. err=%{public}@",  buf,  0x16u);
    }

    (*(void (**)(void))(a1[5] + 16LL))();
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = a1[4];
      *(_DWORD *)buf = 138543618;
      uint64_t v20 = v10;
      __int16 v21 = 2114;
      id v22 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Fetched token status dictionary: %{public}@",  buf,  0x16u);
    }

    id v11 = [v5 mutableCopy];
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( NSMutableDictionary,  "dictionaryWithCapacity:",  [v11 count]));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_10003FFD8;
    v16[3] = &unk_1001A2B88;
    uint64_t v13 = a1[6];
    id v17 = v12;
    uint64_t v18 = v13;
    id v14 = v12;
    [v11 enumerateKeysAndObjectsUsingBlock:v16];
    (*(void (**)(void, id, void, uint64_t))(a1[5] + 16LL))(a1[5], v14, 0LL, v15);
  }
}

void sub_10003FFD8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = objc_alloc(&OBJC_CLASS___ICMusicLibraryAuthToken);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_10004011C;
  v19[3] = &unk_1001A2B38;
  id v8 = v5;
  id v20 = v8;
  id v9 = [v7 initWithBlock:v19];
  id v10 = objc_alloc(&OBJC_CLASS___ICMusicLibraryAuthTokenStatus);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_1000401F8;
  v16[3] = &unk_1001A2B60;
  id v17 = v9;
  id v18 = v8;
  id v15 = v8;
  id v11 = v9;
  id v12 = [v10 initWithBlock:v16];
  uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v14 = *(void **)(v13 + 40);
  *(void *)(v13 + 40) = v12;

  [*(id *)(a1 + 32) setObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) forKeyedSubscript:v6];
}

void sub_10004011C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 tokenResult]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 token]);
  [v4 setToken:v6];

  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tokenResult]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 expirationDate]);
  [v4 setExpirationDate:v8];

  id v11 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) tokenResult]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v11 tokenIdentitifer]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 deviceGUID]);
  [v4 setDeviceGUID:v10];
}

void sub_1000401F8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v6 = a2;
  [v6 setToken:v3];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) lastError]);
  [v6 setLastError:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) lastUpdatedDate]);
  [v6 setLastUpdatedDate:v5];

  objc_msgSend( v6,  "setShouldExcludeFromBackgroundRefresh:",  objc_msgSend(*(id *)(a1 + 40), "shouldExcludeFromBackgroundRefresh"));
}

void sub_100040288(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v22 = 138543618;
      uint64_t v23 = v8;
      __int16 v24 = 2114;
      id v25 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Encountered error fetching user social profile. Returning cached userState error=%{public}@",  (uint8_t *)&v22,  0x16u);
    }
  }

  else
  {
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _updatedUserStateFromState:*(void *)(a1 + 56) withUserProfile:v5]);
    id v9 = *(void **)(a1 + 40);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) DSID]);
    [v9 setObject:v7 forKeyedSubscript:v10];
  }

  id v11 = *(void **)(a1 + 40);
  os_log_t v12 = (os_log_t)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) DSID]);
  id v13 = (id)objc_claimAutoreleasedReturnValue([v11 objectForKeyedSubscript:v12]);
  id v14 = *(id *)(a1 + 56);
  if (v13 == v14)
  {

LABEL_10:
    goto LABEL_11;
  }

  id v15 = v14;
  unsigned __int8 v16 = [v13 isEqual:v14];

  if ((v16 & 1) == 0)
  {
    os_log_t v12 = os_log_create("com.apple.amp.itunescloudd", "UserState_Oversize");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(a1 + 32);
      id v17 = *(void **)(a1 + 40);
      uint64_t v19 = *(void **)(a1 + 56);
      id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) DSID]);
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v17 objectForKeyedSubscript:v20]);
      int v22 = 138543874;
      uint64_t v23 = v18;
      __int16 v24 = 2114;
      id v25 = v19;
      __int16 v26 = 2114;
      uint64_t v27 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Updated user state. cachedUserState=%{public}@ newUserState=%{public}@",  (uint8_t *)&v22,  0x20u);
    }

    goto LABEL_10;
  }

LABEL_11:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 64));
}

    id v14 = 0;
    goto LABEL_12;
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 valueForEntitlement:@"com.apple.itunescloudd.private"]);

  if (!v9)
  {
    os_log_t v12 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543618;
      uint64_t v33 = self;
      uint64_t v34 = 2114;
      uint64_t v35 = v8;
      __int16 v26 = "%{public}@ Connection missing private entitlement %{public}@";
      goto LABEL_10;
    }

    goto LABEL_11;
  }

  id v10 = [v8 processIdentifier];
  id v11 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543618;
    uint64_t v33 = self;
    uint64_t v34 = 1024;
    LODWORD(v35) = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Got connection from pid %i",  buf,  0x12u);
  }

  os_log_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSXPCInterface interfaceWithProtocol:]( &OBJC_CLASS___NSXPCInterface,  "interfaceWithProtocol:",  &OBJC_PROTOCOL___ICPlaybackPositionService));
  id v14 = 1;
  -[os_log_s setClass:forSelector:argumentIndex:ofReply:]( v12,  "setClass:forSelector:argumentIndex:ofReply:",  objc_opt_class(&OBJC_CLASS___NSError, v13),  "persistPlaybackPositionEntity:isCheckpoint:completionBlock:",  1LL,  1LL);
  unsigned __int8 v16 = objc_opt_class(&OBJC_CLASS___ICPlaybackPositionEntity, v15);
  uint64_t v18 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  v16,  objc_opt_class(&OBJC_CLASS___NSString, v17),  0LL);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  -[os_log_s setClasses:forSelector:argumentIndex:ofReply:]( v12,  "setClasses:forSelector:argumentIndex:ofReply:",  v19,  "pushPlaybackPositionEntity:completionBlock:",  0LL,  0LL);

  -[os_log_s setClass:forSelector:argumentIndex:ofReply:]( v12,  "setClass:forSelector:argumentIndex:ofReply:",  objc_opt_class(&OBJC_CLASS___NSError, v20),  "pushPlaybackPositionEntity:completionBlock:",  1LL,  1LL);
  int v22 = objc_opt_class(&OBJC_CLASS___ICPlaybackPositionEntity, v21);
  __int16 v24 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  v22,  objc_opt_class(&OBJC_CLASS___NSString, v23),  0LL);
  id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  -[os_log_s setClasses:forSelector:argumentIndex:ofReply:]( v12,  "setClasses:forSelector:argumentIndex:ofReply:",  v25,  "pushPlaybackPositionEntity:completionBlock:",  2LL,  1LL);

  [v8 setExportedInterface:v12];
  [v8 setExportedObject:self];
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472LL;
  v30[2] = sub_100048130;
  v30[3] = &unk_1001A6D98;
  void v30[4] = self;
  uint64_t v31 = v10;
  [v8 setInterruptionHandler:v30];
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  void v28[2] = sub_1000481F0;
  v28[3] = &unk_1001A6D98;
  v28[4] = self;
  uint64_t v29 = v10;
  [v8 setInvalidationHandler:v28];
  [v8 resume];
LABEL_12:

  return v14;
}

  return v4;
}

  id v20 = *(void *)(a1 + 40);
  if (v20) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16))(v20, v3, v4, v5);
  }
}

  id v20 = *(void *)(a1 + 40);
  if (v20) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 16))(v20, v3, v4, v5);
  }
}
}

  if (-[NSMutableArray count](self->_contentFeatures, "count"))
  {
    uint64_t v8 = -[NSMutableArray initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableArray),  "initWithCapacity:",  -[NSMutableArray count](self->_contentFeatures, "count"));
    uint64_t v19 = 0u;
    id v20 = 0u;
    __int16 v21 = 0u;
    int v22 = 0u;
    id v9 = self->_contentFeatures;
    id v10 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v9,  "countByEnumeratingWithState:objects:count:",  &v19,  v23,  16LL);
    if (v10)
    {
      id v11 = v10;
      os_log_t v12 = *(void *)v20;
      do
      {
        for (i = 0LL; i != v11; i = (char *)i + 1)
        {
          if (*(void *)v20 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v19 + 1) + 8 * (void)i) dictionaryRepresentation]);
          -[NSMutableArray addObject:](v8, "addObject:", v14);
        }

        id v11 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v9,  "countByEnumeratingWithState:objects:count:",  &v19,  v23,  16LL);
      }

      while (v11);
    }

    [v3 setObject:v8 forKey:@"contentFeatures"];
  }

  return v3;
}
}

void sub_1000404C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) allValues]);
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10004050C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8LL));
  id v7 = *(id *)(*(void *)(a1 + 32) + 48LL);
  uint64_t v8 = objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(void **)(v9 + 48);
  *(void *)(v9 + 4_Block_object_dispose(va, 8) = v8;

  uint64_t v11 = *(void *)(a1 + 32);
  int v12 = *(unsigned __int8 *)(v11 + 57);
  int v13 = *(unsigned __int8 *)(v11 + 56);
  *(_BYTE *)(v11 + 57) = 0;
  *(_BYTE *)(*(void *)(a1 + 32) + 56LL) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8LL));
  id v14 = os_log_create("com.apple.amp.itunescloudd", "UserState");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = *(void *)(a1 + 32);
    id v16 = [v7 count];
    int v17 = *(unsigned __int8 *)(a1 + 40);
    int v18 = *(unsigned __int8 *)(a1 + 41);
    *(_DWORD *)buf = 138544130;
    uint64_t v27 = v15;
    __int16 v28 = 2048;
    id v29 = v16;
    __int16 v30 = 1024;
    int v31 = v17;
    __int16 v32 = 1024;
    int v33 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ user state account fetch finished with %lu pending completions. forceRefresh=%{BOOL}u ignoreCache=%{BOOL}u",  buf,  0x22u);
  }

  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472LL;
  v23[2] = sub_1000409A0;
  v23[3] = &unk_1001A2A30;
  id v19 = v5;
  id v24 = v19;
  id v20 = v6;
  id v25 = v20;
  [v7 enumerateObjectsUsingBlock:v23];
  if ((unint64_t)[v7 count] >= 2)
  {
    __int16 v21 = *(void **)(a1 + 32);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472LL;
    v22[2] = sub_100040A64;
    v22[3] = &unk_1001A6150;
    void v22[4] = v21;
    [v21 _fetchAccountsWithForceRefresh:v13 != 0 ignoreResponseCache:v12 != 0 completion:v22];
  }
}

void sub_100040738(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  }

  else
  {
    id v6 = dispatch_group_create();
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    id obj = *(id *)(a1 + 32);
    id v7 = [obj countByEnumeratingWithState:&v22 objects:v26 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v23;
      do
      {
        id v10 = 0LL;
        do
        {
          if (*(void *)v23 != v9) {
            objc_enumerationMutation(obj);
          }
          uint64_t v11 = *(void *)(*((void *)&v22 + 1) + 8LL * (void)v10);
          dispatch_group_enter(v6);
          uint64_t v12 = *(unsigned __int8 *)(a1 + 64);
          v19[0] = _NSConcreteStackBlock;
          v19[1] = 3221225472LL;
          v19[2] = sub_100040954;
          v19[3] = &unk_1001A2AC0;
          int v13 = *(void **)(a1 + 40);
          id v20 = *(id *)(a1 + 48);
          __int16 v21 = v6;
          [v13 _getUserStateFromIdentity:v11 tokensDictionary:v5 ignoreResponseCache:v12 completion:v19];

          id v10 = (char *)v10 + 1;
        }

        while (v8 != v10);
        id v8 = [obj countByEnumeratingWithState:&v22 objects:v26 count:16];
      }

      while (v8);
    }

    id v14 = *(dispatch_queue_s **)(*(void *)(a1 + 40) + 16LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100040984;
    block[3] = &unk_1001A6BB8;
    id v18 = *(id *)(a1 + 56);
    id v17 = *(id *)(a1 + 48);
    dispatch_group_notify(v6, v14, block);
  }
}

void sub_100040954(uint64_t a1, uint64_t a2)
{
  if (a2) {
    [*(id *)(a1 + 32) addObject:a2];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_100040984(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32),  0LL);
}

id sub_100040998(id a1, ICUserIdentity *a2)
{
  return -[ICUserIdentity DSID](a2, "DSID");
}

void sub_1000409A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  id v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100040BD0;
  block[3] = &unk_1001A6C08;
  id v10 = v3;
  id v8 = *(id *)(a1 + 32);
  id v9 = *(id *)(a1 + 40);
  id v6 = v3;
  dispatch_async(v5, block);
}

void sub_100040A64(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "UserState");
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v12 = 138543874;
      uint64_t v13 = v9;
      __int16 v14 = 2114;
      id v15 = v5;
      __int16 v16 = 2114;
      id v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ user state refresh completed with userStates %{public}@ error=%{public}@",  (uint8_t *)&v12,  0x20u);
    }
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = 138543618;
      uint64_t v13 = v11;
      __int16 v14 = 2114;
      id v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ user state refresh completed with userStates %{public}@",  (uint8_t *)&v12,  0x16u);
    }

    [*(id *)(a1 + 32) _notifyServerStateUpdatedIfNeeded:v5];
  }
}

uint64_t sub_100040BD0(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5]);
}

void sub_100040BE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 domain]);
  if ([v7 isEqualToString:ICErrorDomain])
  {
    id v8 = [v6 code];

    if (v8 == (id)-7007LL)
    {
      uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "UserState");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v31 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Couldn't fetch subscription status due to privacy restriction - fetching lightweight version instead",  buf,  0xCu);
      }

      id v11 = [[ICLightweightMusicSubscriptionStatusRequest alloc] initWithRequestContext:*(void *)(a1 + 40)];
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472LL;
      v27[2] = sub_100042E14;
      v27[3] = &unk_1001A2860;
      uint64_t v12 = *(void *)(a1 + 64);
      void v27[4] = *(void *)(a1 + 32);
      uint64_t v29 = v12;
      __int128 v26 = *(_OWORD *)(a1 + 48);
      id v13 = (id)v26;
      __int128 v28 = v26;
      [v11 performRequestWithResponseHandler:v27];

      goto LABEL_18;
    }
  }

  else
  {
  }

  if (v5)
  {
    __int16 v14 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    id v15 = v14;
    if (v6)
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        uint64_t v16 = *(void *)(a1 + 32);
        id v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
        *(_DWORD *)buf = 138543874;
        uint64_t v31 = v16;
        __int16 v32 = 2114;
        id v33 = v5;
        __int16 v34 = 2114;
        uint64_t v35 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "%{public}@ Subscription status request completed with response: %{public}@ error=%{public}@",  buf,  0x20u);
      }
    }

    else if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v23 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v31 = v23;
      __int16 v32 = 2114;
      id v33 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Subscription status request completed with response: %{public}@",  buf,  0x16u);
    }

    uint64_t v24 = objc_claimAutoreleasedReturnValue([v5 subscriptionStatus]);
    uint64_t v25 = *(void *)(*(void *)(a1 + 72) + 8LL);
    __int128 v22 = *(void **)(v25 + 40);
    *(void *)(v25 + 40) = v24;
  }

  else
  {
    id v18 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      uint64_t v19 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v31 = v19;
      __int16 v32 = 2114;
      id v33 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to perform subscription status request. err=%{public}@",  buf,  0x16u);
    }

    uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8LL);
    id v21 = v6;
    __int128 v22 = *(void **)(v20 + 40);
    *(void *)(v20 + 40) = v21;
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
LABEL_18:
}

void sub_100040F08(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (v7)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8LL));
    id v8 = *(void **)(*(void *)(a1 + 32) + 40LL);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identity]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 DSID]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v10]);

    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8LL));
    if (v11 && (uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 music]), v12, v12))
    {
      id v13 = os_log_create("com.apple.amp.itunescloudd", "UserState");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        id v15 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
        int v21 = 138543874;
        uint64_t v22 = v14;
        __int16 v23 = 2114;
        id v24 = v15;
        __int16 v25 = 2114;
        id v26 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "%{public}@ Encountered error fetching user social profile. Keeping cached ICMusicUserProfile: %{public}@. error=%{public}@",  (uint8_t *)&v21,  0x20u);
      }

      os_log_t v16 = (os_log_t)objc_claimAutoreleasedReturnValue([v11 music]);
      uint64_t v17 = objc_claimAutoreleasedReturnValue(-[os_log_s userProfile](v16, "userProfile"));
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8LL);
      uint64_t v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v17;
    }

    else
    {
      os_log_t v16 = os_log_create("com.apple.amp.itunescloudd", "UserState");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        uint64_t v20 = *(void *)(a1 + 32);
        int v21 = 138543618;
        uint64_t v22 = v20;
        __int16 v23 = 2114;
        id v24 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "%{public}@ Encountered error fetching user social profile. error=%{public}@",  (uint8_t *)&v21,  0x16u);
      }
    }
  }

  else
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL), a2);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_10004113C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v11 = 138543618;
      uint64_t v12 = v7;
      __int16 v13 = 2114;
      id v14 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Encountered error fetching bag. error=%{public}@",  (uint8_t *)&v11,  0x16u);
    }
  }

  else
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue([a2 stringForBagKey:ICURLBagKeyCountryCode]);
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10004124C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("WLKStoredConfigurationManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB658 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getWLKStoredConfigurationManagerClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDMediaUserStateCenterServer.m",  48,  @"Unable to find class %s",  "WLKStoredConfigurationManager");

    __break(1u);
  }

id sub_100041310()
{
  uint64_t v4 = 0LL;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  v0 = (void *)qword_1001DB668;
  uint64_t v7 = qword_1001DB668;
  if (!qword_1001DB668)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_100042C50;
    v3[3] = &unk_1001A6978;
    void v3[4] = &v4;
    sub_100042C50((uint64_t)v3);
    v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1000413AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000413C4(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [a2 isActiveUser];
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000413F8(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___ICMediaUserState);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000414CC;
  v5[3] = &unk_1001A29E0;
  id v6 = *(id *)(a1 + 32);
  char v11 = *(_BYTE *)(a1 + 104);
  __int128 v8 = *(_OWORD *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 72);
  id v7 = *(id *)(a1 + 40);
  __int128 v10 = *(_OWORD *)(a1 + 80);
  id v3 = -[ICMediaUserState initWithBlock:](v2, "initWithBlock:", v5);
  (*(void (**)(void, ICMediaUserState *, void, uint64_t))(*(void *)(a1 + 48) + 16LL))( *(void *)(a1 + 48),  v3,  *(void *)(*(void *)(*(void *)(a1 + 96) + 8LL) + 40LL),  v4);
}

void sub_1000414CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(void *)&__int128 data = 0LL;
  *((void *)&data + 1) = &data;
  *(void *)&__int128 v158 = 0x2050000000LL;
  uint64_t v4 = (void *)qword_1001DB670;
  *((void *)&v158 + 1) = qword_1001DB670;
  if (!qword_1001DB670)
  {
    uint64_t v154 = (uint64_t)_NSConcreteStackBlock;
    v155.count[0] = 3221225472LL;
    v155.count[1] = (CC_LONG64)sub_1000426E0;
    v155.hash[0] = (CC_LONG64)&unk_1001A6978;
    v155.hash[1] = (CC_LONG64)&data;
    sub_1000426E0((uint64_t)&v154);
    uint64_t v4 = *(void **)(*((void *)&data + 1) + 24LL);
  }

  id v5 = v4;
  _Block_object_dispose(&data, 8);
  if ([v5 isCurrentDeviceValidHomeAccessory])
  {
    *(void *)&__int128 data = 0LL;
    *((void *)&data + 1) = &data;
    *(void *)&__int128 v158 = 0x2050000000LL;
    id v6 = (void *)qword_1001DB680;
    *((void *)&v158 + 1) = qword_1001DB680;
    if (!qword_1001DB680)
    {
      uint64_t v154 = (uint64_t)_NSConcreteStackBlock;
      v155.count[0] = 3221225472LL;
      v155.count[1] = (CC_LONG64)sub_1000427A4;
      v155.hash[0] = (CC_LONG64)&unk_1001A6978;
      v155.hash[1] = (CC_LONG64)&data;
      sub_1000427A4((uint64_t)&v154);
      id v6 = *(void **)(*((void *)&data + 1) + 24LL);
    }

    id v7 = v6;
    _Block_object_dispose(&data, 8);
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) homeUserIdentifiers]);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 userMonitorWithHomeIdentifiers:v8]);

    if (v9) {
      unsigned __int8 v10 = [v9 isPrivateListeningEnabledForCurrentAccessory];
    }
    else {
      unsigned __int8 v10 = 1;
    }
  }

  else
  {
    unsigned __int8 v10 = 0;
  }

  char v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) homeUserIdentifiers]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "msv_map:", &stru_1001A2940));

  id v13 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) DSID]);
  uint64_t v14 = MSVHasherSharedSeed();
  memset(&v155.hash[2], 0, 176);
  uint64_t v154 = 1000LL;
  v155.count[0] = v14 ^ 0x736F6D6570736575LL;
  v155.count[1] = v15 ^ 0x646F72616E646F6DLL;
  v155.hash[0] = v14 ^ 0x6C7967656E657261LL;
  v155.hash[1] = v15 ^ 0x7465646279746573LL;
  unint64_t v16 = (unint64_t)[v13 integerValue];
  unint64_t v17 = v16;
  uint64_t v18 = &v154;
  uint64_t v19 = &v155.hash[1];
  *(void *)&__int128 data = v16;
  uint64_t v20 = v154;
  if (v154 <= 3000)
  {
    if (v154 <= 1999)
    {
      if (v154)
      {
        if (v154 != 1000) {
          goto LABEL_62;
        }
        unint64_t v21 = v155.hash[2];
        if ((v155.hash[2] & 0x400000000000000LL) != 0)
        {
          if ((v155.hash[2] & 0x300000000000000LL) != 0)
          {
            id v146 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
            id v144 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)"));
            objc_msgSend( v146,  "handleFailureInFunction:file:lineNumber:description:",  v144,  @"MSVHasher+SipHash.h",  105,  @"_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld",  v155.hash[2]);

            unint64_t v21 = v155.hash[2];
          }

          uint64_t v40 = v21 & 0xFFFFFFFFFFFFFFLL | (v17 << 32);
          CC_LONG64 v41 = (v155.count[0] + v155.count[1]) ^ __ROR8__(v155.count[1], 51);
          CC_LONG64 v42 = v155.hash[0] + (v40 ^ v155.hash[1]);
          uint64_t v43 = __ROR8__(v40 ^ v155.hash[1], 48);
          CC_LONG64 v44 = (v42 ^ v43) + __ROR8__(v155.count[0] + v155.count[1], 32);
          CC_LONG64 v45 = v44 ^ __ROR8__(v42 ^ v43, 43);
          CC_LONG64 v46 = v42 + v41;
          v155.hash[0] = __ROR8__(v46, 32);
          v155.hash[1] = v45;
          v155.count[0] = v44 ^ v40;
          v155.count[1] = v46 ^ __ROR8__(v41, 47);
          unint64_t v21 = v21 & 0xFF00000000000000LL | HIDWORD(v17);
        }

        else
        {
          if ((v155.hash[2] & 0x7FFFFFFFFFFFFFFLL) != 0)
          {
            id v145 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
            id v143 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)"));
            objc_msgSend( v145,  "handleFailureInFunction:file:lineNumber:description:",  v143,  @"MSVHasher+SipHash.h",  101,  @"_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld",  v155.hash[2]);

            unint64_t v21 = v155.hash[2];
          }

          CC_LONG64 v22 = (v155.count[0] + v155.count[1]) ^ __ROR8__(v155.count[1], 51);
          CC_LONG64 v23 = v155.hash[0] + (v155.hash[1] ^ v17);
          uint64_t v24 = __ROR8__(v155.hash[1] ^ v17, 48);
          CC_LONG64 v25 = (v23 ^ v24) + __ROR8__(v155.count[0] + v155.count[1], 32);
          CC_LONG64 v26 = v25 ^ __ROR8__(v23 ^ v24, 43);
          CC_LONG64 v27 = v23 + v22;
          v155.hash[0] = __ROR8__(v27, 32);
          v155.hash[1] = v26;
          v155.count[0] = v25 ^ v17;
          v155.count[1] = v27 ^ __ROR8__(v22, 47);
        }

        v155.hash[2] = v21 + 0x800000000000000LL;
      }

      else
      {
        uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
        __int16 v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)"));
        [v31 handleFailureInFunction:v32 file:@"MSVHasher+Algorithms.h" lineNumber:227 description:@"Cannot append to unknown hasher algorithm"];
      }

      goto LABEL_61;
    }

    if (v154 == 2000)
    {
      id v33 = (char *)BYTE3(v155.count[1]);
      unint64_t v34 = (BYTE3(v155.count[1]) + 8) & 0x1FC;
      char v35 = BYTE3(v155.count[1]) & 3;
      switch(BYTE3(v155.count[1]))
      {
        case 0:
          unint64_t v36 = v16 >> 8;
          v16 >>= 16;
          unsigned __int8 v37 = v17;
          v17 >>= 24;
          break;
        case 1:
          v16 >>= 8;
          unsigned __int8 v37 = v155.count[1];
          LOBYTE(v36) = v17;
          v17 >>= 16;
          break;
        case 2:
          unint64_t v17 = v16 >> 8;
          unsigned __int8 v37 = v155.count[1];
          LODWORD(v36) = HIBYTE(LOWORD(v155.count[1]));
          break;
        case 3:
          unsigned __int8 v37 = v155.count[1];
          LODWORD(v36) = HIBYTE(LOWORD(v155.count[1]));
          LOBYTE(v16) = BYTE2(v155.count[1]);
          break;
        default:
LABEL_48:
          LOBYTE(v36) = 0;
          unsigned __int8 v37 = 0;
          LOBYTE(v16) = 0;
          LODWORD(v17) = 0;
          break;
      }

      int v51 = (v16 << 16) | ((_DWORD)v17 << 24) | v37 | (v36 << 8);
      HIDWORD(v52) = (461845907 * ((380141568 * v51) | ((-862048943 * v51) >> 17))) ^ LODWORD(v155.count[0]);
      LODWORD(v52) = HIDWORD(v52);
      int v53 = 5 * (v52 >> 19) - 430675100;
      LODWORD(v155.count[0]) = v53;
      uint64_t v54 = (char *)((char *)&data - v33 + 4);
      id v33 = (char *)(v34 + (char *)&data - v33);
      if (v34 >= 5)
      {
        do
        {
          int v55 = *(_DWORD *)v54;
          v54 += 4;
          HIDWORD(v56) = (461845907 * ((380141568 * v55) | ((-862048943 * v55) >> 17))) ^ v53;
          LODWORD(v56) = HIDWORD(v56);
          unint64_t v34 = 5 * (v56 >> 19);
          int v53 = v34 - 430675100;
        }

        while (v54 < v33);
        LODWORD(v155.count[0]) = v34 - 430675100;
      }

      v18 += 2;
      switch((int)v33)
      {
        case 0:
          break;
        case 1:
          LOBYTE(v155.count[1]) = *v33;
          break;
        case 2:
          LOWORD(v155.count[1]) = *(_WORD *)v33;
          break;
        case 3:
          *(_WORD *)uint64_t v18 = *(_WORD *)v33;
          *((_BYTE *)v18 + 2) = v33[2];
          break;
        default:
          goto LABEL_48;
      }

      BYTE3(v155.count[1]) = v35;
      HIDWORD(v155.count[0]) += 8;
      goto LABEL_61;
    }

    if (v154 != 3000) {
      goto LABEL_62;
    }
    BOOL v28 = (LODWORD(v155.count[0]) + 8) > 0xF;
    LODWORD(v155.count[0]) += 8;
    HIDWORD(v155.count[0]) |= v28;
    uint64_t v29 = (CC_LONG64 *)((char *)&v155.wbuf[-7] + LODWORD(v155.hash[3]));
    if (LODWORD(v155.hash[3]) > 7)
    {
      memcpy(v29, &data, (16 - LODWORD(v155.hash[3])));
      HIDWORD(v47) = LODWORD(v155.count[1]) - 2048144777 * LODWORD(v155.hash[1]);
      LODWORD(v47) = HIDWORD(v47);
      int v48 = -1640531535 * (v47 >> 19);
      HIDWORD(v47) = HIDWORD(v155.count[1]) - 2048144777 * HIDWORD(v155.hash[1]);
      LODWORD(v47) = HIDWORD(v47);
      LODWORD(v155.count[1]) = v48;
      HIDWORD(v155.count[1]) = -1640531535 * (v47 >> 19);
      HIDWORD(v47) = LODWORD(v155.hash[0]) - 2048144777 * LODWORD(v155.hash[2]);
      LODWORD(v47) = HIDWORD(v47);
      LODWORD(v155.hash[0]) = -1640531535 * (v47 >> 19);
      HIDWORD(v47) = HIDWORD(v155.hash[0]) - 2048144777 * HIDWORD(v155.hash[2]);
      LODWORD(v47) = HIDWORD(v47);
      unsigned int v49 = 16 - LODWORD(v155.hash[3]);
      HIDWORD(v155.hash[0]) = -1640531535 * (v47 >> 19);
      LODWORD(v155.hash[3]) = 0;
      if (v49 > 7) {
        goto LABEL_61;
      }
      int v30 = 8 - v49;
      __memcpy_chk(&v155.hash[1], (char *)&data + v49, 8LL - v49, 184LL);
    }

    else
    {
      *uint64_t v29 = v17;
      int v30 = LODWORD(v155.hash[3]) + 8;
    }

    LODWORD(v155.hash[3]) = v30;
    goto LABEL_61;
  }

  if (v154 > 4000)
  {
    switch(v154)
    {
      case 4001LL:
        CC_SHA1_Update((CC_SHA1_CTX *)&v155, &data, 4u);
        break;
      case 4256LL:
        CC_SHA256_Update((CC_SHA256_CTX *)&v155, &data, 4u);
        break;
      case 4512LL:
        CC_SHA512_Update(&v155, &data, 4u);
        break;
      default:
        goto LABEL_62;
    }

    goto LABEL_61;
  }

  if (v154 == 3001)
  {
    v155.count[0] += 8LL;
    uint64_t v38 = (CC_LONG64 *)((char *)&v155.wbuf[-5] + LODWORD(v155.hash[7]));
    if (LODWORD(v155.hash[7]) > 0x17)
    {
      memcpy(v38, &data, (32 - LODWORD(v155.hash[7])));
      v155.count[1] = 0x9E3779B185EBCA87LL * __ROR8__(v155.count[1] - 0x3D4D51C2D82B14B1LL * v155.hash[3], 33);
      v155.hash[0] = 0x9E3779B185EBCA87LL * __ROR8__(v155.hash[0] - 0x3D4D51C2D82B14B1LL * v155.hash[4], 33);
      v155.hash[1] = 0x9E3779B185EBCA87LL * __ROR8__(v155.hash[1] - 0x3D4D51C2D82B14B1LL * v155.hash[5], 33);
      v155.hash[2] = 0x9E3779B185EBCA87LL * __ROR8__(v155.hash[2] - 0x3D4D51C2D82B14B1LL * v155.hash[6], 33);
      unsigned int v50 = 32 - LODWORD(v155.hash[7]);
      LODWORD(v155.hash[7]) = 0;
      if (v50 > 7) {
        goto LABEL_61;
      }
      int v39 = 8 - v50;
      __memcpy_chk(&v155.hash[3], (char *)&data + v50, 8LL - v50, 168LL);
    }

    else
    {
      *uint64_t v38 = v17;
      int v39 = LODWORD(v155.hash[7]) + 8;
    }

    LODWORD(v155.hash[7]) = v39;
    goto LABEL_61;
  }

  if (v154 != 4000) {
    goto LABEL_62;
  }
  CC_MD5_Update((CC_MD5_CTX *)&v155, &data, 4u);
LABEL_61:
  uint64_t v20 = v154;
LABEL_62:
  memset(&v156[8], 0, 64);
  *(void *)id v156 = v20;
  if (v20 > 3000)
  {
    if (v20 <= 4000)
    {
      if (v20 == 3001)
      {
        *(void *)&v156[8] = sub_10003FC64(&v155);
      }

      else if (v20 == 4000)
      {
        CC_MD5_Final(&v156[8], (CC_MD5_CTX *)&v155);
      }
    }

    else
    {
      switch(v20)
      {
        case 4001LL:
          CC_SHA1_Final(&v156[8], (CC_SHA1_CTX *)&v155);
          break;
        case 4256LL:
          CC_SHA256_Final(&v156[8], (CC_SHA256_CTX *)&v155);
          break;
        case 4512LL:
          CC_SHA512_Final(&v156[8], &v155);
          break;
      }
    }

    goto LABEL_99;
  }

  if (v20 > 1999)
  {
    if (v20 != 2000)
    {
      if (v20 != 3000) {
        goto LABEL_99;
      }
      if (HIDWORD(v155.count[0])) {
        int v87 = vaddvq_s32((int32x4_t)vorrq_s8( (int8x16_t)vshlq_u32(*(uint32x4_t *)&v155.count[1], (uint32x4_t)xmmword_10013B560),  (int8x16_t)vshlq_u32(*(uint32x4_t *)&v155.count[1], (uint32x4_t)xmmword_10013B550)));
      }
      else {
        int v87 = LODWORD(v155.hash[0]) + 374761393;
      }
      unsigned int v91 = LODWORD(v155.count[0]) + v87;
      unint64_t v92 = v155.hash[3] & 0xF;
      if (v92 >= 4)
      {
        do
        {
          int v93 = *(_DWORD *)v19;
          uint64_t v19 = (CC_LONG64 *)((char *)v19 + 4);
          HIDWORD(v94) = v91 - 1028477379 * v93;
          LODWORD(v94) = HIDWORD(v94);
          unsigned int v91 = 668265263 * (v94 >> 15);
          v92 -= 4LL;
        }

        while (v92 > 3);
      }

      for (; v92; --v92)
      {
        int v95 = *(unsigned __int8 *)v19;
        uint64_t v19 = (CC_LONG64 *)((char *)v19 + 1);
        HIDWORD(v96) = v91 + 374761393 * v95;
        LODWORD(v96) = HIDWORD(v96);
        unsigned int v91 = -1640531535 * (v96 >> 21);
      }

      unsigned int v97 = (-2048144777 * (v91 ^ (v91 >> 15))) ^ ((-2048144777 * (v91 ^ (v91 >> 15))) >> 13);
      unsigned int v98 = (-1028477379 * v97) ^ ((-1028477379 * v97) >> 16);
      goto LABEL_98;
    }

    switch(BYTE3(v155.count[1]))
    {
      case 1u:
        int v90 = LOBYTE(v155.count[1]);
        break;
      case 2u:
        int v90 = LOWORD(v155.count[1]);
        break;
      case 3u:
        int v90 = LOWORD(v155.count[1]) | (BYTE2(v155.count[1]) << 16);
        break;
      default:
        unsigned int v99 = v155.count[0];
        goto LABEL_97;
    }

    unsigned int v99 = (461845907 * ((380141568 * v90) | ((-862048943 * v90) >> 17))) ^ LODWORD(v155.count[0]);
LABEL_97:
    unsigned int v100 = -2048144789 * (v99 ^ HIDWORD(v155.count[0]) ^ ((v99 ^ HIDWORD(v155.count[0])) >> 16));
    unsigned int v98 = (-1028477387 * (v100 ^ (v100 >> 13))) ^ ((-1028477387 * (v100 ^ (v100 >> 13))) >> 16);
    LODWORD(v155.count[0]) = v98;
LABEL_98:
    *(_DWORD *)&v156[8] = v98;
    goto LABEL_99;
  }

  if (v20)
  {
    if (v20 == 1000)
    {
      CC_LONG64 v57 = (v155.count[0] + v155.count[1]) ^ __ROR8__(v155.count[1], 51);
      CC_LONG64 v58 = v155.hash[0] + (v155.hash[1] ^ v155.hash[2]);
      uint64_t v59 = __ROR8__(v155.hash[1] ^ v155.hash[2], 48);
      CC_LONG64 v60 = (v58 ^ v59) + __ROR8__(v155.count[0] + v155.count[1], 32);
      CC_LONG64 v61 = v60 ^ __ROR8__(v58 ^ v59, 43);
      CC_LONG64 v62 = v58 + v57;
      CC_LONG64 v63 = v62 ^ __ROR8__(v57, 47);
      CC_LONG64 v64 = (v60 ^ v155.hash[2]) + v63;
      CC_LONG64 v65 = v64 ^ __ROR8__(v63, 51);
      CC_LONG64 v66 = (__ROR8__(v62, 32) ^ 0xFFLL) + v61;
      uint64_t v67 = __ROR8__(v61, 48);
      uint64_t v68 = __ROR8__(v64, 32) + (v66 ^ v67);
      uint64_t v69 = v68 ^ __ROR8__(v66 ^ v67, 43);
      CC_LONG64 v70 = v65 + v66;
      CC_LONG64 v71 = v70 ^ __ROR8__(v65, 47);
      CC_LONG64 v72 = v71 + v68;
      uint64_t v73 = v72 ^ __ROR8__(v71, 51);
      uint64_t v74 = __ROR8__(v70, 32) + v69;
      uint64_t v75 = __ROR8__(v69, 48);
      uint64_t v76 = __ROR8__(v72, 32) + (v74 ^ v75);
      uint64_t v77 = v76 ^ __ROR8__(v74 ^ v75, 43);
      uint64_t v78 = v73 + v74;
      uint64_t v79 = v78 ^ __ROR8__(v73, 47);
      uint64_t v80 = v79 + v76;
      uint64_t v81 = v80 ^ __ROR8__(v79, 51);
      uint64_t v82 = __ROR8__(v78, 32) + v77;
      uint64_t v83 = __ROR8__(v77, 48);
      CC_LONG64 v84 = __ROR8__(v80, 32) + (v82 ^ v83);
      CC_LONG64 v85 = v84 ^ __ROR8__(v82 ^ v83, 43);
      uint64_t v86 = v81 + v82;
      v155.count[0] = v84;
      v155.count[1] = v86 ^ __ROR8__(v81, 47);
      v155.hash[0] = __ROR8__(v86, 32);
      v155.hash[1] = v85;
      *(void *)&v156[8] = v155.count[1] ^ v84 ^ v155.hash[0] ^ v85;
    }
  }

  else
  {
    id v88 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v89 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)"));
    [v88 handleFailureInFunction:v89 file:@"MSVHasher+Algorithms.h" lineNumber:156 description:@"Cannot finalize unknown hasher algorithm"];
  }

LABEL_99:
  __int128 data = *(_OWORD *)v156;
  __int128 v158 = *(_OWORD *)&v156[16];
  __int128 v159 = *(_OWORD *)&v156[32];
  __int128 v160 = *(_OWORD *)&v156[48];
  uint64_t v161 = *(void *)&v156[64];
  if (*(uint64_t *)v156 <= 3999)
  {
    if (*(uint64_t *)v156 <= 2999)
    {
      if (*(void *)v156 != 1000LL)
      {
        if (*(void *)v156 != 2000LL) {
          goto LABEL_125;
        }
        goto LABEL_118;
      }

LABEL_112:
      id v107 = (id)*((void *)&data + 1);
      goto LABEL_126;
    }

    if (*(void *)v156 == 3000LL)
    {
LABEL_118:
      id v107 = (id)DWORD2(data);
      goto LABEL_126;
    }

    if (*(void *)v156 == 3001LL) {
      goto LABEL_112;
    }
LABEL_125:
    id v126 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v127 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSUInteger _MSVHashGetHash(MSVHash)"));
    [v126 handleFailureInFunction:v127 file:@"MSVHasher+Algorithms.h" lineNumber:301 description:@"Cannot obtain hash from unknown hasher algorithm"];

    id v107 = 0LL;
    goto LABEL_126;
  }

  if (*(uint64_t *)v156 > 4255)
  {
    if (*(void *)v156 == 4256LL)
    {
      id v120 = (char *)calloc(0x40uLL, 1uLL);
      uint64_t v121 = 0LL;
      id v122 = (unsigned __int8 *)&data + 8;
      do
      {
        unsigned int v123 = *v122++;
        uint64_t v124 = &v120[v121];
        *uint64_t v124 = a0123456789abcd[(unint64_t)v123 >> 4];
        v124[1] = a0123456789abcd[v123 & 0xF];
        v121 += 2LL;
      }

      while (v121 != 64);
      v125 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v120,  64LL,  4LL,  1LL);
      id v107 = -[NSString hash](v125, "hash");
    }

    else
    {
      if (*(void *)v156 != 4512LL) {
        goto LABEL_125;
      }
      v108 = (char *)calloc(0x80uLL, 1uLL);
      uint64_t v109 = 0LL;
      id v110 = (unsigned __int8 *)&data + 8;
      do
      {
        unsigned int v111 = *v110++;
        uint64_t v112 = &v108[v109];
        *uint64_t v112 = a0123456789abcd[(unint64_t)v111 >> 4];
        v112[1] = a0123456789abcd[v111 & 0xF];
        v109 += 2LL;
      }

      while (v109 != 128);
      v113 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v108,  128LL,  4LL,  1LL);
      id v107 = -[NSString hash](v113, "hash");
    }
  }

  else if (*(void *)v156 == 4000LL)
  {
    id v114 = (char *)calloc(0x20uLL, 1uLL);
    uint64_t v115 = 0LL;
    id v116 = (unsigned __int8 *)&data + 8;
    do
    {
      unsigned int v117 = *v116++;
      id v118 = &v114[v115];
      *id v118 = a0123456789abcd[(unint64_t)v117 >> 4];
      v118[1] = a0123456789abcd[v117 & 0xF];
      v115 += 2LL;
    }

    while (v115 != 32);
    uint64_t v119 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v114,  32LL,  4LL,  1LL);
    id v107 = -[NSString hash](v119, "hash");
  }

  else
  {
    if (*(void *)v156 != 4001LL) {
      goto LABEL_125;
    }
    id v101 = (char *)calloc(0x28uLL, 1uLL);
    uint64_t v102 = 0LL;
    v103 = (unsigned __int8 *)&data + 8;
    do
    {
      unsigned int v104 = *v103++;
      os_log_t v105 = &v101[v102];
      *os_log_t v105 = a0123456789abcd[(unint64_t)v104 >> 4];
      v105[1] = a0123456789abcd[v104 & 0xF];
      v102 += 2LL;
    }

    while (v102 != 40);
    id v106 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v101,  40LL,  4LL,  1LL);
    id v107 = -[NSString hash](v106, "hash");
  }

LABEL_126:
  v128 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v107));
  id v129 = (void *)objc_claimAutoreleasedReturnValue([v128 stringValue]);

  [v3 setIdentifier:v129];
  objc_msgSend(v3, "setIsActive:", objc_msgSend(*(id *)(a1 + 32), "isActive"));
  id v130 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) DSID]);
  [v3 setDsid:v130];

  uint64_t v131 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) alternateDSID]);
  [v3 setAlternateDSID:v131];

  v132 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) iCloudPersonID]);
  [v3 setICloudPersonID:v132];

  [v3 setHomeUserIDs:v12];
  id v133 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) storefrontIdentifier]);
  [v3 setStorefrontIdentifier:v133];

  [v3 setCountryCode:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  unsigned int v134 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) firstName]);
  [v3 setFirstName:v134];

  id v135 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) lastName]);
  [v3 setLastName:v135];

  BOOL v136 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) username]);
  [v3 setUsername:v136];

  [v3 setAgeVerificationRequired:*(unsigned __int8 *)(a1 + 88)];
  id v137 = objc_alloc(&OBJC_CLASS___ICMusicUserState);
  v148[0] = _NSConcreteStackBlock;
  v148[1] = 3221225472LL;
  v148[2] = sub_100042868;
  v148[3] = &unk_1001A2990;
  id v149 = *(id *)(a1 + 32);
  __int128 v151 = *(_OWORD *)(a1 + 56);
  unsigned __int8 v153 = v10;
  id v138 = *(id *)(a1 + 40);
  uint64_t v139 = *(void *)(a1 + 72);
  id v150 = v138;
  uint64_t v152 = v139;
  id v140 = [v137 initWithBlock:v148];
  id v141 = objc_alloc(&OBJC_CLASS___ICTVUserState);
  v147[0] = _NSConcreteStackBlock;
  v147[1] = 3221225472LL;
  v147[2] = sub_100042A38;
  v147[3] = &unk_1001A29B8;
  v147[4] = *(void *)(a1 + 80);
  id v142 = [v141 initWithBlock:v147];
  [v3 setMusic:v140];
  [v3 setTv:v142];
}

void sub_10004269C(_Unwind_Exception *a1)
{
}

void sub_1000426E0(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPHomeMonitor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB670 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPHomeMonitorClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDMediaUserStateCenterServer.m",  54,  @"Unable to find class %s",  "MPHomeMonitor");

    __break(1u);
  }

void sub_1000427A4(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPHomeUserMonitor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB680 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPHomeUserMonitorClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDMediaUserStateCenterServer.m",  55,  @"Unable to find class %s",  "MPHomeUserMonitor");

    __break(1u);
  }

void sub_100042868(uint64_t a1, void *a2)
{
  id v15 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) carrierBundleDeviceIdentifier]);
  [v15 setCarrierBundleDeviceID:v3];

  [v15 setSubscriptionStatus:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  [v15 setLightweightSubscriptionStatus:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) cloudLibraryStateReason]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKey:@"CloudLibraryStateReasonKey"]);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber, v6);
  if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0)
  {
    id v8 = [v5 integerValue];
    else {
      uint64_t v9 = 1LL;
    }
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  [v15 setCloudLibrarySyncStatus:v9];
  [v15 setUsesListeningHistory:*(_BYTE *)(a1 + 72) == 0];
  unsigned __int8 v10 = *(void **)(a1 + 40);
  char v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) DSID]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:v11]);
  [v15 setLibraryAuthTokenStatus:v12];

  if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL)) {
    objc_msgSend(v15, "setUserProfile:");
  }
  id v13 = objc_alloc(&OBJC_CLASS___ICMusicUserStateCookies);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_100042A4C;
  v16[3] = &unk_1001A2968;
  id v17 = *(id *)(a1 + 32);
  id v14 = [v13 initWithBlock:v16];
  [v15 setCookies:v14];
}

id sub_100042A38(uint64_t a1, void *a2)
{
  return _[a2 setActiveWatchKitUser:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

void sub_100042A4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v10 = (id)objc_claimAutoreleasedReturnValue(+[ICHTTPCookieStore sharedCookieStore](&OBJC_CLASS___ICHTTPCookieStore, "sharedCookieStore"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) DSID]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v10 getCookieWithName:@"itfe" userIdentifier:v4]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 value]);
  [v3 setItfe:v6];

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) DSID]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v10 getCookieWithName:@"xpAb" userIdentifier:v7]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 value]);
  [v3 setXpab:v9];
}

id sub_100042B48(id a1, NSUUID *a2)
{
  return -[NSUUID UUIDString](a2, "UUIDString");
}

void sub_100042B50()
{
  id v3 = 0LL;
  if (!qword_1001DB678)
  {
    __int128 v4 = off_1001A2CE0;
    uint64_t v5 = 0LL;
    qword_1001DB678 = _sl_dlopen(&v4, &v3);
  }

  if (!qword_1001DB678)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v2,  @"ICDMediaUserStateCenterServer.m",  53,  @"%s",  v3);

    __break(1u);
    goto LABEL_7;
  }

  v0 = v3;
  if (v3) {
LABEL_7:
  }
    free(v0);
}

void sub_100042C50(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("WLKConfigurationManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB668 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getWLKConfigurationManagerClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDMediaUserStateCenterServer.m",  50,  @"Unable to find class %s",  "WLKConfigurationManager");

    __break(1u);
  }

void sub_100042D14()
{
  id v3 = 0LL;
  if (!qword_1001DB660)
  {
    __int128 v4 = off_1001A2CC8;
    uint64_t v5 = 0LL;
    qword_1001DB660 = _sl_dlopen(&v4, &v3);
  }

  if (!qword_1001DB660)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *WatchListKitLibrary(void)"));
    objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v2,  @"ICDMediaUserStateCenterServer.m",  47,  @"%s",  v3);

    __break(1u);
    goto LABEL_7;
  }

  v0 = v3;
  if (v3) {
LABEL_7:
  }
    free(v0);
}

void sub_100042E14(uint64_t a1, void *a2, void *a3)
{
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v12 = 138543618;
      uint64_t v13 = v8;
      __int16 v14 = 2114;
      id v15 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to perform lightweight subscription status request. err=%{public}@",  (uint8_t *)&v12,  0x16u);
    }

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a3);
  }

  else
  {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([a2 lightweightSubscriptionStatus]);
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8LL);
    char v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

BOOL sub_100042F30(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 dsid]);

  if (!v3) {
    +[MSVAutoBugCapture snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:]( &OBJC_CLASS___MSVAutoBugCapture,  "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:",  MSVAutoBugCaptureDomainiTunesCloud,  @"Bug",  @"ICMediaUserStateBug",  @"UserState with nil dsid",  0LL,  *(void *)(a1 + 32),  0LL);
  }
  return v3 != 0LL;
}

void sub_100042FB0(id a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue( +[NSDistributedNotificationCenter defaultCenter]( &OBJC_CLASS___NSDistributedNotificationCenter,  "defaultCenter"));
  [v1 postNotificationName:ICMediaUserStateCenterServerStateUpdatedNotification object:0 userInfo:0];
}

void sub_100042FF8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138543618;
      uint64_t v9 = v7;
      __int16 v10 = 2114;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch accounts forcing refresh after user updated notification. err=%{public}@",  (uint8_t *)&v8,  0x16u);
    }
  }

  else
  {
    [*(id *)(a1 + 32) _notifyServerStateUpdatedIfNeeded:a2];
  }
}

void sub_1000430E4(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _sanitizedUserStatesForRemoteClientConnection:*(void *)(a1 + 40)]);
  __int128 v4 = os_log_create("com.apple.amp.itunescloudd", "UserState_Oversize");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = 138543874;
    uint64_t v8 = v5;
    __int16 v9 = 2114;
    uint64_t v10 = v6;
    __int16 v11 = 2114;
    int v12 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ refreshSocialProfilesWithReply: Returning updated user states to client connection %{public}@: %{public}@",  (uint8_t *)&v7,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_1000431E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v13 = 138543618;
      uint64_t v14 = v7;
      __int16 v15 = 2114;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ refreshSocialProfilesWithReply: Failed to get user states. err=%{public}@",  (uint8_t *)&v13,  0x16u);
    }

    uint64_t v8 = *(void *)(a1 + 48);
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, void *, void *))(v8 + 16))(v8, &__NSArray0__struct, v9);
  }

  else
  {
    [*(id *)(a1 + 32) _notifyServerStateUpdatedIfNeeded:a2];
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _sanitizedUserStatesForRemoteClientConnection:*(void *)(a1 + 40)]);
    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "UserState_Oversize");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = *(void **)(a1 + 40);
      int v13 = 138543874;
      uint64_t v14 = v11;
      __int16 v15 = 2114;
      id v16 = v12;
      __int16 v17 = 2114;
      uint64_t v18 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ refreshSocialProfilesWithReply: Returning updated user states to client connection %{public}@: %{public}@",  (uint8_t *)&v13,  0x20u);
    }

    (*(void (**)(void, void *, void))(*(void *)(a1 + 48) + 16LL))(*(void *)(a1 + 48), v9, 0LL);
  }
}

void sub_100043390(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v13 = 138543618;
      uint64_t v14 = v7;
      __int16 v15 = 2114;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to get user states. err=%{public}@",  (uint8_t *)&v13,  0x16u);
    }

    uint64_t v8 = *(void *)(a1 + 48);
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0LL, v9);
  }

  else
  {
    [*(id *)(a1 + 32) _notifyServerStateUpdatedIfNeeded:a2];
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _sanitizedUserStatesForRemoteClientConnection:*(void *)(a1 + 40)]);
    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = *(void **)(a1 + 40);
      int v13 = 138543874;
      uint64_t v14 = v11;
      __int16 v15 = 2114;
      id v16 = v12;
      __int16 v17 = 2114;
      uint64_t v18 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Returning updated user states to client connection %{public}@: %{public}@",  (uint8_t *)&v13,  0x20u);
    }

    (*(void (**)(void, void *, void))(*(void *)(a1 + 48) + 16LL))(*(void *)(a1 + 48), v9, 0LL);
  }
}

id sub_100043538(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_100043590;
  v3[3] = &unk_1001A6150;
  void v3[4] = v1;
  return [v1 _fetchAccountsWithForceRefresh:0 completion:v3];
}

void sub_100043590(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138543618;
      uint64_t v9 = v7;
      __int16 v10 = 2114;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to get user states lazily. err=%{public}@",  (uint8_t *)&v8,  0x16u);
    }
  }

  else
  {
    [*(id *)(a1 + 32) _notifyServerStateUpdatedIfNeeded:a2];
  }
}

void sub_10004440C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Default");
  int v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      __int16 v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v16 = 138543874;
      uint64_t v17 = v9;
      __int16 v18 = 2114;
      id v19 = v5;
      __int16 v20 = 2114;
      unint64_t v21 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ received response: %{public}@ error=%{public}@",  (uint8_t *)&v16,  0x20u);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v16 = 138543618;
      uint64_t v17 = v11;
      __int16 v18 = 2114;
      id v19 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ received response: %{public}@",  (uint8_t *)&v16,  0x16u);
    }

    if ([*(id *)(a1 + 32) isCancelled])
    {
      int v12 = os_log_create("com.apple.amp.itunescloudd", "Default");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = *(void *)(a1 + 32);
        int v16 = 138543362;
        uint64_t v17 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Import was cancelled - returning",  (uint8_t *)&v16,  0xCu);
      }

      uint64_t v14 = *(void *)(a1 + 40);
      __int16 v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"JaliscoImporterErrorDomain",  -2LL,  0LL));
      (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v15);
    }

    else
    {
      [*(id *)(a1 + 32) _processItemsPageResponse:v5 withCompletion:*(void *)(a1 + 40)];
    }
  }
}

void sub_100044634(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v4 = os_log_create("com.apple.amp.itunescloudd", "Default");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      int v8 = 138543362;
      uint64_t v9 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "Update complete error=%{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v_Block_object_dispose((const void *)(v1 - 192), 8) = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Update complete", (uint8_t *)&v8, 2u);
  }

  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
}

void sub_100044FC4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v26 = a4;
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 3221225472LL;
  v36[2] = sub_100045440;
  v36[3] = &unk_1001A2D28;
  id v22 = a5;
  id v37 = v22;
  uint64_t v11 = objc_retainBlock(v36);
  CC_LONG64 v23 = v10;
  int v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v10]);
  if (_NSIsNSDictionary())
  {
    uint64_t v40 = v12;
    uint64_t v13 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v40, 1LL, v22));

    int v12 = (void *)v13;
  }

  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id obj = v12;
  id v27 = [obj countByEnumeratingWithState:&v32 objects:v39 count:16];
  if (v27)
  {
    uint64_t v25 = *(void *)v33;
    do
    {
      for (i = 0LL; i != v27; i = (char *)i + 1)
      {
        if (*(void *)v33 != v25) {
          objc_enumerationMutation(obj);
        }
        __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((void *)&v32 + 1) + 8 * (void)i), "objectForKey:", v26, v22));
        __int128 v28 = 0u;
        __int128 v29 = 0u;
        __int128 v30 = 0u;
        __int128 v31 = 0u;
        id v16 = [v15 countByEnumeratingWithState:&v28 objects:v38 count:16];
        if (v16)
        {
          id v17 = v16;
          uint64_t v18 = *(void *)v29;
          do
          {
            for (j = 0LL; j != v17; j = (char *)j + 1)
            {
              if (*(void *)v29 != v18) {
                objc_enumerationMutation(v15);
              }
              __int16 v20 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)j);
              unint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:@"key"]);
              if (_NSIsNSString(v21)
                && [v21 length]
                && ((unsigned int (*)(void *, void *, void *))v11[2])(v11, v20, v21))
              {
                [v9 addObject:v21];
              }
            }

            id v17 = [v15 countByEnumeratingWithState:&v28 objects:v38 count:16];
          }

          while (v17);
        }
      }

      id v27 = [obj countByEnumeratingWithState:&v32 objects:v39 count:16];
    }

    while (v27);
  }
}

uint64_t sub_10004528C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 1LL;
}

uint64_t sub_1000452BC(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "containsObject:") ^ 1;
}

uint64_t sub_1000452E4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 40), "containsObject:") ^ 1;
}

BOOL sub_10004530C(id a1, NSDictionary *a2, NSString *a3)
{
  __int128 v4 = a2;
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKey:](v4, "objectForKey:", @"reason"));
  unsigned int v7 = [v6 isEqual:@"oversize"];

  if (v7)
  {
    int v8 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v12 = 138412290;
      uint64_t v13 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "ERROR: server rejected %@ because the payload was too big.",  (uint8_t *)&v12,  0xCu);
    }
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKey:](v4, "objectForKey:", @"reason"));
  unsigned __int8 v10 = [v9 isEqual:@"conflicted"];

  return v10;
}

BOOL sub_100045438(id a1, NSDictionary *a2, NSString *a3)
{
  return 1;
}

uint64_t sub_100045440(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    return (*(uint64_t (**)(void))(v1 + 16))();
  }
  else {
    return 1LL;
  }
}

void sub_10004599C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
  if ([v7 length] && objc_msgSend(v5, "responseCode") == (id)200)
  {
    int v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSInputStream inputStreamWithData:](&OBJC_CLASS___NSInputStream, "inputStreamWithData:", v7));
    id v9 = [[DKDAAPParser alloc] initWithStream:v8];
    unsigned __int8 v10 = objc_alloc_init(&OBJC_CLASS___PublishPlaylistResponseParserDelegate);
    [v9 setDelegate:v10];
    [v9 parse];
    uint64_t v11 = objc_claimAutoreleasedReturnValue(-[PublishPlaylistResponseParserDelegate playlistGlobalID](v10, "playlistGlobalID"));
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void **)(v12 + 96);
    *(void *)(v12 + 96) = v11;

    uint64_t v14 = objc_claimAutoreleasedReturnValue(-[PublishPlaylistResponseParserDelegate playlistShareURL](v10, "playlistShareURL"));
    uint64_t v15 = *(void *)(a1 + 32);
    id v16 = *(void **)(v15 + 104);
    *(void *)(v15 + 104) = v14;
  }

  id v17 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(a1 + 32);
    id v19 = *(void **)(v18 + 96);
    uint64_t v20 = *(void *)(v18 + 104);
    int v24 = 138543618;
    id v25 = v19;
    __int16 v26 = 2114;
    uint64_t v27 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Received playlist globalID: %{public}@ shareURL: %{public}@",  (uint8_t *)&v24,  0x16u);
  }

  uint64_t v21 = (uint64_t)[v5 responseCode];
  if (v21 <= 399)
  {
    if (v21 == 200 || v21 == 204)
    {
      if (*(void *)(*(void *)(a1 + 32) + 96LL)) {
        uint64_t v22 = 1LL;
      }
      else {
        uint64_t v22 = 2LL;
      }
      goto LABEL_15;
    }

void sub_100046670(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue([a2 urlForBagKey:*(void *)(*(void *)(a1 + 32) + 24)]);
  unsigned int v7 = (void *)v6;
  if (a2 && v6)
  {
    int v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _baseRequestWithURL:v6]);
    id v9 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v8,  *(void *)(a1 + 40));
    unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_100046864;
    v15[3] = &unk_1001A6A08;
    void v15[4] = *(void *)(a1 + 32);
    [v10 enqueueDataRequest:v9 withCompletionHandler:v15];

LABEL_9:
    goto LABEL_10;
  }

  uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(v12 + 24);
    *(_DWORD *)buf = 138543874;
    uint64_t v17 = v12;
    __int16 v18 = 2114;
    uint64_t v19 = v13;
    __int16 v20 = 2114;
    uint64_t v21 = 0LL;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch URL from bag using key %{public}@. error=%{public}@",  buf,  0x20u);
  }

  uint64_t v14 = *(void **)(a1 + 32);
  if (!v5)
  {
    int v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7200LL,  0LL));
    [v14 _finishWithError:v8];
    goto LABEL_9;
  }

  [v14 _finishWithError:v5];
LABEL_10:
}

void sub_100046864(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  int v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v14 = 138544130;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2114;
      uint64_t v19 = v10;
      __int16 v20 = 2114;
      uint64_t v21 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ request completed with response: %{public}@ body: %{public}@ error=%{public}@",  (uint8_t *)&v14,  0x2Au);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
    int v14 = 138543874;
    uint64_t v15 = v12;
    __int16 v16 = 2114;
    id v17 = v5;
    __int16 v18 = 2114;
    uint64_t v19 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ request completed with response: %{public}@ body: %{public}@",  (uint8_t *)&v14,  0x20u);
  }

  [*(id *)(a1 + 32) _finishWithResponse:v5 error:v6];
}

void sub_10004800C(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 lastSyncedDomainVersion]);

  if (!v4)
  {
    id v5 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([v3 accountDSID]);
      int v10 = 138543619;
      uint64_t v11 = v6;
      __int16 v12 = 2113;
      uint64_t v13 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ _handleUserIdentityStoreDidChangeNotification. Performing initial sync for user %{private}@",  (uint8_t *)&v10,  0x16u);
    }

    int v8 = *(void **)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 libraryUID]);
    [v8 _performNotificationSyncForLibraryWithUID:v9];
  }
}

void sub_100048130(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Connection interrupted from pid: %i",  (uint8_t *)&v5,  0x12u);
  }
}

void sub_1000481F0(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Connection invalidated from pid: %i",  (uint8_t *)&v5,  0x12u);
  }
}

void sub_1000482B0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  __int16 v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "msv_description"));
      int v11 = 138544130;
      uint64_t v12 = v8;
      __int16 v13 = 1024;
      int v14 = a2;
      __int16 v15 = 2114;
      id v16 = v5;
      __int16 v17 = 2114;
      __int16 v18 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[%{public}@ pushPlaybackPositionEntity:completionBlock:] Finished. success=%{BOOL}u error=%{public}@ error=%{public}@",  (uint8_t *)&v11,  0x26u);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = 138543874;
    uint64_t v12 = v10;
    __int16 v13 = 1024;
    int v14 = a2;
    __int16 v15 = 2114;
    id v16 = 0LL;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%{public}@ pushPlaybackPositionEntity:completionBlock:] Finished. success=%{BOOL}u error=%{public}@",  (uint8_t *)&v11,  0x1Cu);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

void sub_10004842C(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  uint64_t v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "msv_description"));
      int v14 = 138544386;
      uint64_t v15 = v11;
      __int16 v16 = 1024;
      int v17 = a2;
      __int16 v18 = 2114;
      id v19 = v7;
      __int16 v20 = 2114;
      id v21 = v8;
      __int16 v22 = 2114;
      CC_LONG64 v23 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "[%{public}@ pullPlaybackPositionEntity:completionBlock:] Finished. success=%{BOOL}u error=%{public}@ cloudEntity =%{public}@ error=%{public}@",  (uint8_t *)&v14,  0x30u);
    }
  }

  else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v13 = *(void *)(a1 + 32);
    int v14 = 138544130;
    uint64_t v15 = v13;
    __int16 v16 = 1024;
    int v17 = a2;
    __int16 v18 = 2114;
    id v19 = 0LL;
    __int16 v20 = 2114;
    id v21 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%{public}@ pullPlaybackPositionEntity:completionBlock:] Finished. success=%{BOOL}u error=%{public}@ cloudEntity=%{public}@",  (uint8_t *)&v14,  0x26u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1000485D4(void *a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  uint64_t v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = a1[4];
      uint64_t v12 = a1[5];
      id v13 = [v8 count];
      int v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "msv_description"));
      int v17 = 138544386;
      uint64_t v18 = v11;
      __int16 v19 = 2114;
      uint64_t v20 = v12;
      __int16 v21 = 2048;
      id v22 = v13;
      __int16 v23 = 1024;
      int v24 = a2;
      __int16 v25 = 2114;
      __int16 v26 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "[%{public}@ getLocalPlaybackPositionForEntityIdentifiers:] Completed request for library (%{public}@) with %llu entities. success=%{BOOL}u error=%{public}@",  (uint8_t *)&v17,  0x30u);
    }
  }

  else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = a1[4];
    uint64_t v16 = a1[5];
    int v17 = 138544130;
    uint64_t v18 = v15;
    __int16 v19 = 2114;
    uint64_t v20 = v16;
    __int16 v21 = 2048;
    id v22 = [v8 count];
    __int16 v23 = 1024;
    int v24 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%{public}@ getLocalPlaybackPositionForEntityIdentifiers:] Completed request for library (%{public}@) with %llu en tities. success=%{BOOL}u",  (uint8_t *)&v17,  0x26u);
  }

  (*(void (**)(void))(a1[6] + 16LL))();
}

void sub_1000487A0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 138543618;
    uint64_t v9 = v7;
    __int16 v10 = 1024;
    int v11 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@ persistPlaybackPositionEntity:isCheckpoint:completionBlock:] Finished. success=%{BOOL}u",  (uint8_t *)&v8,  0x12u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100048DD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = os_log_create("com.apple.amp.itunescloudd", "SDK");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v19 = 138543362;
      id v20 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Failed to badge application. err=%{public}@",  (uint8_t *)&v19,  0xCu);
    }
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) metrics]);

  if (v5)
  {
    id v6 = [[AMSEngagement alloc] initWithBag:*(void *)(a1 + 40)];
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) metrics]);
    id v8 = [v6 enqueueData:v7];
  }

  uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v19) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "Sucessfully badged application",  (uint8_t *)&v19,  2u);
  }

  if ([*(id *)(a1 + 32) enabled])
  {
    uint64_t v10 = *(void *)(a1 + 48);
    if (v10)
    {
      int v11 = *(void **)(a1 + 56);
      if (v11)
      {
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) badgeIdentifier]);
        [v11 storeBadgeActionMetricsEvent:v10 identifier:v12];

        id v13 = os_log_create("com.apple.amp.itunescloudd", "Default");
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        {
          int v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) badgeIdentifier]);
          int v19 = 138543362;
          id v20 = v14;
          uint64_t v15 = "Stored %{public}@ badging action metrics event";
          uint64_t v16 = v13;
          os_log_type_t v17 = OS_LOG_TYPE_DEBUG;
LABEL_18:
          _os_log_impl((void *)&_mh_execute_header, v16, v17, v15, (uint8_t *)&v19, 0xCu);
        }
      }

      else
      {
        id v13 = os_log_create("com.apple.amp.itunescloudd", "Default");
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          int v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) badgeIdentifier]);
          int v19 = 138543362;
          id v20 = v14;
          uint64_t v15 = "Dropping %{public}@ badging action metrics event; no badge controller";
          uint64_t v16 = v13;
          os_log_type_t v17 = OS_LOG_TYPE_INFO;
          goto LABEL_18;
        }
      }

uint64_t sub_100049088(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10004A050( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_10004A070(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 48) newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) addObject:v3];
}

uint64_t sub_10004A0B8(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  *a4 = 1;
  return result;
}

void sub_10004A0D0(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 48) newWithPersistentID:a2 inLibrary:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) addObject:v3];
}

void sub_10004A118(uint64_t a1, uint64_t a2, id *a3)
{
  if ([*a3 integerValue] != (id)-1)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    [v5 addObject:v6];
  }

id sub_10004A18C(void *a1, void *a2)
{
  uint64_t v3 = ML3EntityPropertyKeepLocal;
  uint64_t v12 = ML3EntityPropertyKeepLocal;
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v12, 1LL));
  unsigned int v6 = +[ML3Track setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3Track,  "setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  &off_1001B4A88,  v5,  a1[4],  a1[5],  v4);

  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = (void *)a1[6];
  v11[0] = v3;
  v11[1] = ML3EntityPropertyKeepLocalStatus;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 2LL));
  id v9 = [v7 setValues:&off_1001B4AA0 forProperties:v8];

  return v9;
}

void sub_10004A880(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = v6;
  if (v5)
  {
    id v8 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = (void *)objc_opt_class(*(void *)(a1 + 32), v9);
      int v11 = *(void **)(*(void *)(a1 + 32) + 88LL);
      id v12 = v10;
      int v19 = 138543874;
      id v20 = v10;
      __int16 v21 = 2048;
      id v22 = [v11 count];
      __int16 v23 = 2114;
      id v24 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%{public}@] Loading artwork info for %lu cloud IDs failed with error=%{public}@",  (uint8_t *)&v19,  0x20u);
    }
  }

  else
  {
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([v6 artworkInfoDictionaries]);
    if (-[os_log_s count](v8, "count"))
    {
      id v13 = -[os_log_s copy](v8, "copy");
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void **)(v14 + 104);
      *(void *)(v14 + 104) = v13;
    }
  }

  uint64_t v16 = *(void **)(a1 + 32);
  uint64_t v17 = (uint64_t)[v7 responseCode];

  if (v17 > 399)
  {
    if (v17 != 404 && v17 != 400) {
      goto LABEL_13;
    }
    uint64_t v18 = 3LL;
  }

  else
  {
    uint64_t v18 = 1LL;
    if (v17 != 200 && v17 != 204) {
LABEL_13:
    }
      uint64_t v18 = 2LL;
  }

  [v16 setStatus:v18];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10004AEB0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  id v4 = a2;
  [v4 writeUInt32:v3 withCode:1836413810];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_10004AF68;
  v5[3] = &unk_1001A5A98;
  int v8 = *(_DWORD *)(a1 + 52);
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  ICDAAPUtilitiesWriteContainer(v4, 1835819884LL, v5);
}

void sub_10004AF68(uint64_t a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10004AFFC;
  v4[3] = &unk_1001A5A98;
  int v7 = *(_DWORD *)(a1 + 48);
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  ICDAAPUtilitiesWriteContainer(a2, 1835821428LL, v4);
}

void sub_10004AFFC(uint64_t a1, void *a2)
{
  id v7 = a2;
  [v7 writeUInt32:*(unsigned int *)(a1 + 48) withCode:1835624804];
  if (*(void *)(a1 + 32))
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[ICDAAPPropertyInfo sharedContainerPropertyInfo]( &OBJC_CLASS___ICDAAPPropertyInfo,  "sharedContainerPropertyInfo"));
    id v4 = *(void **)(a1 + 32);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10004B120;
    v10[3] = &unk_1001A5A48;
    id v11 = v3;
    id v12 = v7;
    id v5 = v3;
    [v4 enumerateKeysAndObjectsUsingBlock:v10];
  }

  id v6 = *(void **)(a1 + 40);
  if (v6)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_10004B234;
    v8[3] = &unk_1001A70B8;
    id v9 = v6;
    ICDAAPUtilitiesWriteContainer(v7, 1835623521LL, v8);
  }
}

void sub_10004B120(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) hasInfoForProperty:v5])
  {
    ICDAAPUtilitiesWriteProperty( *(void *)(a1 + 40),  [*(id *)(a1 + 32) elementCodeForProperty:v5],  objc_msgSend(*(id *)(a1 + 32), "valueTypeForProperty:", v5),  v6);
  }

  else
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "No DAAP code found for container property: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }
}

void sub_10004B234(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10004B2B0;
  v6[3] = &unk_1001A5A70;
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateCloudItemIDsUsingBlock:v6];
}

void sub_10004B2B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  id v5 = [v6 unsignedLongLongValue];
  switch(a3)
  {
    case 2LL:
      [*(id *)(a1 + 32) writeString:v6 withCode:1634353993];
      break;
    case 1LL:
      [*(id *)(a1 + 32) writeUInt64:v5 withCode:1634025833];
      break;
    case 0LL:
      [*(id *)(a1 + 32) writeUInt32:v5 withCode:1835624804];
      break;
  }
}

void sub_10004BA18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

uint64_t sub_10004BA88(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10004BA98(uint64_t a1)
{
}

void sub_10004BAA0(uint64_t a1, void *a2, int a3, int a4)
{
  id v7 = a2;
  dispatch_suspend(*(dispatch_object_t *)(a1 + 32));
  int v8 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 40);
    int v15 = 138544130;
    uint64_t v16 = v9;
    __int16 v17 = 2048;
    id v18 = [v7 count];
    __int16 v19 = 1024;
    int v20 = a3;
    __int16 v21 = 1024;
    int v22 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] flushed %lu play events with result %d isFinalResult: %d",  (uint8_t *)&v15,  0x22u);
  }

  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8LL);
  if (*(_BYTE *)(v10 + 24)) {
    char v11 = 1;
  }
  else {
    char v11 = a3;
  }
  *(_BYTE *)(v10 + 24) = v11;
  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL) && (a3 & 1) == 0)
  {
    uint64_t v12 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8LL);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }

  if (a4) {
    [*(id *)(a1 + 40) finishWithError:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
  }
  dispatch_resume(*(dispatch_object_t *)(a1 + 32));
}

id sub_10004BC28(void *a1)
{
  uint64_t v1 = (void *)a1[4];
  uint64_t v2 = *(void *)(a1[5] + 8LL);
  id v3 = *(void **)(v2 + 40);
  uint64_t v4 = *(void *)(a1[6] + 8LL);
  id v7 = *(id *)(v4 + 40);
  id obj = v3;
  id v5 = [v1 getStoreAccounts:&obj returningError:&v7];
  objc_storeStrong((id *)(v2 + 40), obj);
  objc_storeStrong((id *)(v4 + 40), v7);
  return v5;
}

void sub_10004BC9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v42 = 0LL;
  uint64_t v43 = &v42;
  uint64_t v44 = 0x3032000000LL;
  CC_LONG64 v45 = sub_10004BA88;
  CC_LONG64 v46 = sub_10004BA98;
  id v47 = 0LL;
  uint64_t v36 = 0LL;
  id v37 = &v36;
  uint64_t v38 = 0x3032000000LL;
  int v39 = sub_10004BA88;
  uint64_t v40 = sub_10004BA98;
  id v41 = 0LL;
  uint64_t v4 = *(void **)(a1 + 32);
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472LL;
  void v31[2] = sub_10004C018;
  v31[3] = &unk_1001A4D98;
  id v32 = v4;
  __int128 v34 = &v42;
  id v5 = v3;
  id v33 = v5;
  __int128 v35 = &v36;
  [v32 performTransactionWithBlock:v31];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472LL;
  v27[2] = sub_10004C0A4;
  v27[3] = &unk_1001A2F90;
  id v28 = *(id *)(a1 + 40);
  __int128 v18 = *(_OWORD *)(a1 + 56);
  id v6 = (id)v18;
  __int128 v29 = v18;
  __int128 v30 = &v42;
  id v7 = objc_retainBlock(v27);
  if (v37[5] || ![(id)v43[5] count])
  {
    int v8 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = v37[5];
      *(_DWORD *)buf = 138412546;
      id v49 = v5;
      __int16 v50 = 2112;
      uint64_t v51 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Found no play activity events for account id: %@ with error: %@",  buf,  0x16u);
    }

    ((void (*)(void *, void))v7[2])(v7, 0LL);
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentity specificAccountWithDSID:]( &OBJC_CLASS___ICUserIdentity,  "specificAccountWithDSID:",  v5,  v18));
  char v11 = -[ICStoreRequestContext initWithIdentity:]( objc_alloc(&OBJC_CLASS___ICStoreRequestContext),  "initWithIdentity:",  v10);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_10004C13C;
  v19[3] = &unk_1001A3030;
  uint64_t v13 = v11;
  int v20 = v13;
  id v14 = v10;
  __int16 v26 = &v42;
  uint64_t v15 = *(void *)(a1 + 48);
  id v21 = v14;
  uint64_t v22 = v15;
  uint64_t v16 = v7;
  id v25 = v16;
  id v17 = v5;
  id v23 = v17;
  id v24 = *(id *)(a1 + 32);
  [v12 getBagForRequestContext:v13 withCompletionHandler:v19];

  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&v42, 8);
}

void sub_10004BFE0(_Unwind_Exception *a1)
{
}

id sub_10004C018(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id obj = *(id *)(v2 + 40);
  id v3 = *(void **)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) longLongValue];
  uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v8 = *(id *)(v5 + 40);
  id v6 = [v3 getPlayActivityEvents:&obj storeAccountID:v4 limit:1000 returningError:&v8];
  objc_storeStrong((id *)(v2 + 40), obj);
  objc_storeStrong((id *)(v5 + 40), v8);
  return v6;
}

void sub_10004C0A4(uint64_t a1, char a2)
{
  id v4 = *(dispatch_queue_s **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10004D3D4;
  block[3] = &unk_1001A2F68;
  __int128 v6 = *(_OWORD *)(a1 + 40);
  id v5 = (id)v6;
  __int128 v8 = v6;
  uint64_t v9 = *(void *)(a1 + 56);
  char v10 = a2;
  dispatch_async(v4, block);
}

void sub_10004C13C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 urlForBagKey:ICURLBagKeyPlayActivityFeedRequestPostURL]);
    if (v7)
    {
      __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identityStore]);
      uint64_t v9 = *(void *)(a1 + 40);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      void v18[2] = sub_10004C3BC;
      v18[3] = &unk_1001A3008;
      id v10 = v5;
      uint64_t v11 = *(void *)(a1 + 48);
      id v19 = v10;
      uint64_t v20 = v11;
      __int128 v17 = *(_OWORD *)(a1 + 72);
      id v12 = (id)v17;
      __int128 v26 = v17;
      id v21 = *(id *)(a1 + 32);
      id v22 = v7;
      id v23 = *(id *)(a1 + 56);
      id v24 = *(id *)(a1 + 40);
      id v25 = *(id *)(a1 + 64);
      [v8 getPropertiesForUserIdentity:v9 completionHandler:v18];
    }

    else
    {
      uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        uint64_t v16 = *(void *)(a1 + 48);
        *(_DWORD *)buf = 138543362;
        uint64_t v28 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "[%{public}@] Post URL missing from bag",  buf,  0xCu);
      }

      (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
    }
  }

  else
  {
    uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138543618;
      uint64_t v28 = v14;
      __int16 v29 = 2114;
      id v30 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "[%{public}@] Failed to load URL bag with error: %{public}@",  buf,  0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
  }
}

void sub_10004C3BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v41 = a3;
  id v6 = objc_alloc_init(&OBJC_CLASS___ICPlayActivityFeedSerialization);
  uint64_t v42 = v5;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 storefrontIdentifier]);
  uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) storefrontHeaderSuffix]);
  uint64_t v9 = (void *)v8;
  if (v8) {
    id v10 = (const __CFString *)v8;
  }
  else {
    id v10 = &stru_1001A7960;
  }
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v7 stringByAppendingString:v10]);
  -[ICPlayActivityFeedSerialization setCurrentStoreFrontID:](v6, "setCurrentStoreFrontID:", v11);

  __int128 v54 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v51 = 0u;
  uint64_t v12 = a1;
  id v13 = *(id *)(*(void *)(*(void *)(a1 + 96) + 8LL) + 40LL);
  id v14 = [v13 countByEnumeratingWithState:&v51 objects:v59 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = 0LL;
    uint64_t v17 = *(void *)v52;
    do
    {
      for (i = 0LL; i != v15; i = (char *)i + 1)
      {
        if (*(void *)v52 != v17) {
          objc_enumerationMutation(v13);
        }
        id v19 = (void *)objc_claimAutoreleasedReturnValue( -[ICPlayActivityFeedSerialization propertyListObjectWithPlayActivityEvent:]( v6,  "propertyListObjectWithPlayActivityEvent:",  *(void *)(*((void *)&v51 + 1) + 8LL * (void)i)));
        if (v19)
        {
          if (!v16) {
            uint64_t v16 = -[NSMutableArray initWithCapacity:]( [NSMutableArray alloc],  "initWithCapacity:",  [*(id *)(*(void *)(*(void *)(v12 + 96) + 8) + 40) count]);
          }
          if (MSVDeviceOSIsInternalInstall(-[NSMutableArray addObject:](v16, "addObject:", v19)))
          {
            uint64_t v20 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity_Oversize");
            if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v21 = *(void *)(v12 + 40);
              *(_DWORD *)buf = 138543618;
              uint64_t v56 = v21;
              __int16 v57 = 2114;
              CC_LONG64 v58 = v19;
              _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Adding PAF event %{public}@.",  buf,  0x16u);
            }
          }
        }
      }

      id v15 = [v13 countByEnumeratingWithState:&v51 objects:v59 count:16];
    }

    while (v15);
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  if (-[NSMutableArray count](v16, "count"))
  {
    id v22 = -[NSMutableDictionary initWithObjectsAndKeys:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithObjectsAndKeys:",  v16,  @"events",  0LL,  v41);
    uint64_t v23 = v12;
    id v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v12 + 48) deviceInfo]);
    id v25 = -[NSMutableURLRequest initWithURL:]( objc_alloc(&OBJC_CLASS___NSMutableURLRequest),  "initWithURL:",  *(void *)(v23 + 56));
    -[NSMutableURLRequest setHTTPMethod:](v25, "setHTTPMethod:", @"POST");
    __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v24 deviceGUID]);
    if (v26) {
      -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v25,  "setValue:forHTTPHeaderField:",  v26,  ICStoreHTTPHeaderKeyXGUID);
    }
    if ([*(id *)(v23 + 64) longLongValue])
    {
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v23 + 72) accountDSID]);
      -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v25,  "setValue:forHTTPHeaderField:",  v27,  ICStoreHTTPHeaderKeyXDSID);
    }

    if (!v42 || (uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v42 storefrontIdentifier])) == 0)
    {
      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v29 storeFrontID]);

      if (v28)
      {
        if (![v28 length]) {
          goto LABEL_37;
        }
        goto LABEL_36;
      }

      id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v23 + 48) identityStore]);
      uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v30 localStoreAccountProperties]);
      uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue([v31 storefrontIdentifier]);
    }

    if (![v28 length])
    {
LABEL_37:
      __int128 v34 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v25,  *(void *)(v23 + 48));
      v43[0] = _NSConcreteStackBlock;
      v43[2] = sub_10004C8E4;
      v43[3] = &unk_1001A2FE0;
      uint64_t v35 = *(void *)(v23 + 40);
      uint64_t v36 = *(void **)(v23 + 48);
      uint64_t v44 = v22;
      uint64_t v45 = v35;
      v43[1] = 3221225472LL;
      CC_LONG64 v46 = v25;
      id v37 = v36;
      uint64_t v38 = *(void *)(v23 + 96);
      id v47 = v37;
      uint64_t v50 = v38;
      id v48 = *(id *)(v23 + 80);
      id v49 = *(id *)(v23 + 88);
      int v39 = v25;
      uint64_t v40 = v22;
      -[ICStoreURLRequest buildURLRequestWithCompletionHandler:](v34, "buildURLRequestWithCompletionHandler:", v43);

      goto LABEL_38;
    }

    id v32 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v23 + 32) storefrontHeaderSuffix]);
    if ([v32 length])
    {
      uint64_t v33 = objc_claimAutoreleasedReturnValue([v28 stringByAppendingString:v32]);

      uint64_t v28 = (void *)v33;
    }

LABEL_36:
    -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v25,  "setValue:forHTTPHeaderField:",  v28,  ICStoreHTTPHeaderKeyXAppleStorefront);
    goto LABEL_37;
  }

  (*(void (**)(void))(*(void *)(v12 + 88) + 16LL))();
LABEL_38:
}

void sub_10004C8E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v5)
  {
    id v33 = v6;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[ICPlayActivityFeedSerialization defaultOverrideHTTPHeaderFields]( &OBJC_CLASS___ICPlayActivityFeedSerialization,  "defaultOverrideHTTPHeaderFields"));
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    id v9 = [v8 countByEnumeratingWithState:&v40 objects:v50 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = 0LL;
      uint64_t v12 = *(void *)v41;
      do
      {
        for (i = 0LL; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v41 != v12) {
            objc_enumerationMutation(v8);
          }
          uint64_t v14 = *(void *)(*((void *)&v40 + 1) + 8LL * (void)i);
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForHTTPHeaderField:v14]);
          if (v15)
          {
            if (!v11) {
              uint64_t v11 = -[NSMutableDictionary initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithCapacity:",  1LL);
            }
            -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v15, v14);
          }
        }

        id v10 = [v8 countByEnumeratingWithState:&v40 objects:v50 count:16];
      }

      while (v10);
    }

    else
    {
      uint64_t v11 = 0LL;
    }

    if (-[NSMutableDictionary count](v11, "count")) {
      [*(id *)(a1 + 32) setObject:v11 forKey:@"override-headers"];
    }
    uint64_t v18 = *(void *)(a1 + 32);
    id v39 = 0LL;
    id v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v18,  200LL,  0LL,  &v39));
    id v20 = v39;
    uint64_t v21 = v20;
    id v7 = v33;
    if ((!v19 || v20) && MSVDeviceOSIsInternalInstall(v20))
    {
      id v22 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity_Oversize");
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        uint64_t v23 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 138543874;
        uint64_t v45 = v23;
        __int16 v46 = 2114;
        id v47 = v21;
        __int16 v48 = 2114;
        id v49 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "[%{public}@] error (%{public}@ serializing request data (%{public}@).",  buf,  0x20u);
      }
    }

    id v24 = v19;
    id v25 = v24;
    if ([v24 length])
    {
      uint64_t v26 = MSVGzipCompressData(v24);
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
      if (v27)
      {
        [*(id *)(a1 + 48) setValue:ICHTTPHeaderContentEncodingGZIP forHTTPHeaderField:ICHTTPHeaderKeyContentEncoding];
        [*(id *)(a1 + 48) setValue:ICHTTPHeaderContentTypeXApplePlist forHTTPHeaderField:ICHTTPHeaderKeyContentType];
        id v25 = v27;
        uint64_t v28 = (os_log_s *)v24;
      }

      else
      {
        uint64_t v28 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          uint64_t v29 = *(void *)(a1 + 40);
          *(_DWORD *)buf = 138543362;
          uint64_t v45 = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "[%{public}@] error compressing request data",  buf,  0xCu);
        }

        id v25 = v24;
      }
    }

    [*(id *)(a1 + 48) setHTTPBody:v25];
    id v30 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  *(void *)(a1 + 48),  *(void *)(a1 + 56));
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472LL;
    v34[2] = sub_10004CD78;
    v34[3] = &unk_1001A2FB8;
    uint64_t v38 = *(void *)(a1 + 80);
    v34[4] = *(void *)(a1 + 40);
    id v35 = v24;
    id v36 = *(id *)(a1 + 64);
    id v37 = *(id *)(a1 + 72);
    id v32 = v24;
    [v31 enqueueDataRequest:v30 withCompletionHandler:v34];
  }

  else
  {
    uint64_t v16 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      uint64_t v17 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      uint64_t v45 = v17;
      __int16 v46 = 2114;
      id v47 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "[%{public}@] Failed to resolve a URL request for override headers with error: %{public}@",  buf,  0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
  }
}

void sub_10004CD78(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 bodyData]);
  if (MSVDeviceOSIsInternalInstall(v8)
    && CFPreferencesGetAppBooleanValue(@"ShouldDebugLogFlushedEvents", @"com.apple.PlayActivityFeed", 0LL))
  {
    id v9 = NSTemporaryDirectory();
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 stringByAppendingPathComponent:@"com.apple.PlayActivityEvents"]);

    id v12 = [[ICHTTPArchive alloc] initUnboundedArchiveWithDirectoryPath:v11];
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 urlRequest]);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 performanceMetrics]);
    [v12 archiveRequest:v13 withResponse:v14 responseData:v8 performanceMetrics:v15];
  }

  int v16 = 0;
  uint64_t v17 = -1LL;
  if (v5 && !v6)
  {
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
    uint64_t v20 = objc_opt_class(&OBJC_CLASS___NSHTTPURLResponse, v19);
    if ((objc_opt_isKindOfClass(v18, v20) & 1) != 0)
    {
      uint64_t v17 = (uint64_t)[v18 statusCode];
      uint64_t v21 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v22 = a1[4];
        unsigned int v23 = [*(id *)(*(void *)(a1[8] + 8) + 40) count];
        *(_DWORD *)buf = 138543874;
        *(void *)&uint8_t buf[4] = v22;
        *(_WORD *)&buf[12] = 1024;
        *(_DWORD *)&buf[14] = v23;
        *(_WORD *)&buf[18] = 2048;
        *(void *)&buf[20] = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Flush %d PAF events finished with HTTP code %ld",  buf,  0x1Cu);
      }

      if ((unint64_t)(v17 - 200) <= 0x63)
      {
        if (v8) {
          BOOL v24 = v7 == 0LL;
        }
        else {
          BOOL v24 = 0;
        }
        int v16 = !v24;
        goto LABEL_30;
      }

      if (v17 == 500)
      {
        uint64_t v27 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        {
          uint64_t v28 = a1[4];
          *(_DWORD *)buf = 138543362;
          *(void *)&uint8_t buf[4] = v28;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "[%{public}@] MALFORMED PAF EVENTS ",  buf,  0xCu);
        }

        if (MSVDeviceOSIsInternalInstall(v29))
        {
          id v30 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity_Oversize");
          if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
          {
            uint64_t v31 = *(void *)(*(void *)(a1[8] + 8LL) + 40LL);
            uint64_t v32 = a1[4];
            uint64_t v33 = a1[5];
            *(_DWORD *)buf = 138543874;
            *(void *)&uint8_t buf[4] = v32;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v31;
            *(_WORD *)&_BYTE buf[22] = 2114;
            *(void *)&_BYTE buf[24] = v33;
            _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_ERROR,  "[%{public}@] MALFORMED PAF EVENTS=%{public}@, requestData=%{public}@",  buf,  0x20u);
          }

          __int128 v34 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
          if (os_log_type_enabled(v34, OS_LOG_TYPE_FAULT))
          {
            uint64_t v35 = a1[4];
            *(_DWORD *)buf = 138543362;
            *(void *)&uint8_t buf[4] = v35;
            _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_FAULT,  "[%{public}@] Uploading malformed PAF events",  buf,  0xCu);
          }
        }

        int v16 = 0;
        uint64_t v17 = 500LL;
        goto LABEL_30;
      }
    }

    else
    {
      id v25 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        uint64_t v26 = a1[4];
        *(_DWORD *)buf = 138543362;
        *(void *)&uint8_t buf[4] = v26;
        _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "[%{public}@] response is NOT of kind NSHTTPURLResponse",  buf,  0xCu);
      }
    }

    int v16 = 0;
LABEL_30:
  }

  id v36 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v37 = a1[4];
    *(_DWORD *)buf = 138544130;
    *(void *)&uint8_t buf[4] = v37;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v6;
    *(_WORD *)&_BYTE buf[22] = 2048;
    *(void *)&_BYTE buf[24] = v17;
    LOWORD(v53) = 2114;
    *(void *)((char *)&v53 + 2) = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] operation finished with error %{public}@, HTTTP statusCode %ld, parsedResponseBody %{public}@",  buf,  0x2Au);
  }

  if (v16)
  {
    *(void *)buf = 0LL;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x3032000000LL;
    *(void *)&_BYTE buf[24] = sub_10004BA88;
    *(void *)&__int128 v53 = sub_10004BA98;
    *((void *)&v53 + 1) = objc_alloc_init(&OBJC_CLASS___NSError);
    uint64_t v38 = (void *)a1[6];
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472LL;
    v44[2] = sub_10004D378;
    v44[3] = &unk_1001A4DC0;
    id v39 = v38;
    uint64_t v40 = a1[8];
    id v45 = v39;
    uint64_t v46 = v40;
    id v47 = buf;
    [v39 performTransactionWithBlock:v44];
    if (*(void *)(*(void *)&buf[8] + 40LL))
    {
      __int128 v41 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      {
        uint64_t v42 = *(void *)(*(void *)(a1[8] + 8LL) + 40LL);
        uint64_t v43 = *(void *)(*(void *)&buf[8] + 40LL);
        *(_DWORD *)__int16 v48 = 138412546;
        uint64_t v49 = v42;
        __int16 v50 = 2112;
        uint64_t v51 = v43;
        _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "Failed to remove playActivtyEvents: %@ from table with error: %@",  v48,  0x16u);
      }
    }

    _Block_object_dispose(buf, 8);
  }

  (*(void (**)(void))(a1[7] + 16LL))();
}

void sub_10004D358( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

id sub_10004D378(void *a1)
{
  uint64_t v1 = (void *)a1[4];
  uint64_t v2 = *(void *)(*(void *)(a1[5] + 8LL) + 40LL);
  uint64_t v3 = *(void *)(a1[6] + 8LL);
  id obj = *(id *)(v3 + 40);
  id v4 = [v1 removePlayActivityEvents:v2 returningError:&obj];
  objc_storeStrong((id *)(v3 + 40), obj);
  return v4;
}

uint64_t sub_10004D3D4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, BOOL))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL),  *(unsigned __int8 *)(a1 + 56),  --*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) == 0LL);
}

void sub_10004D808(_Unwind_Exception *a1)
{
}

uint64_t sub_10004DD50(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10004DD60(uint64_t a1)
{
}

void sub_10004DD68(uint64_t a1, void *a2)
{
  id v10 = a2;
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___CloudArtworkImportOperation, v3);
  if ((objc_opt_isKindOfClass(v10, v4) & 1) == 0)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    [v9 handleFailureInMethod:*(void *)(a1 + 64) object:*(void *)(a1 + 32) file:@"CloudArtworkOperationQueue.m" lineNumber:48 description:@"Only operations of type CloudArtworkImportOperation are supported"];
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v10 assetURL]);

  if (v5)
  {
    [*(id *)(a1 + 32) addOperation:v10];
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v10 cloudID]));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v10 artworkType]));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) objectForKeyedSubscript:v7]);
    if (!v8)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
      [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) setObject:v8 forKeyedSubscript:v7];
    }

    [v8 addObject:v6];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setObject:v10 forKeyedSubscript:v6];
    ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);
  }
}

void sub_10004DEF4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v27 = a2;
  id v26 = a3;
  if ([v26 count])
  {
    if ([*(id *)(a1 + 32) sourceType] == (id)400
      && -[__CFString integerValue](v27, "integerValue") == (id)1)
    {
      id v30 = (objc_class *)objc_opt_class(&OBJC_CLASS___JaliscoLoadBulkItemArtworkInfoOperation, v5);
      id v31 = ICArtworkInfoKeyPurchaseHistoryID;
      uint64_t v29 = 0LL;
      id v6 = @"purchase history";
    }

    else
    {
      if ([*(id *)(a1 + 32) sourceType] == (id)200
        && -[__CFString integerValue](v27, "integerValue") == (id)1)
      {
        id v30 = (objc_class *)objc_opt_class(&OBJC_CLASS___SagaLoadBulkItemArtworkInfoOperation, v7);
        id v31 = ICArtworkInfoKeySagaID;
        id v6 = @"cloud";
      }

      else if ([*(id *)(a1 + 32) sourceType] == (id)200 {
             && -[__CFString integerValue](v27, "integerValue") == (id)5)
      }
      {
        id v30 = (objc_class *)objc_opt_class(&OBJC_CLASS___SagaLoadBulkContainerArtworkInfoOperation, v8);
        id v31 = ICArtworkInfoKeySagaID;
        id v6 = @"container cloud";
      }

      else if ([*(id *)(a1 + 32) sourceType] == (id)600 {
             && -[__CFString integerValue](v27, "integerValue") == (id)1)
      }
      {
        id v30 = (objc_class *)objc_opt_class(&OBJC_CLASS___SagaLoadBulkItemArtworkInfoOperation, v9);
        id v31 = ICArtworkInfoKeySagaID;
        id v6 = @"cloud (subscription)";
      }

      else if ([*(id *)(a1 + 32) sourceType] == (id)600 {
             && -[__CFString integerValue](v27, "integerValue") == (id)5)
      }
      {
        id v30 = (objc_class *)objc_opt_class(&OBJC_CLASS___SagaLoadBulkContainerArtworkInfoOperation, v10);
        id v31 = ICArtworkInfoKeySagaID;
        id v6 = @"container cloud (subscription)";
      }

      else
      {
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
        [v11 handleFailureInMethod:*(void *)(a1 + 48), *(void *)(a1 + 32), @"CloudArtworkOperationQueue.m", 107, @"Unknown sourceType/artworkType pair for CloudArtworkOperationQueue addOperations: %ld/%@", objc_msgSend(*(id *)(a1 + 32), "sourceType"), v27 object file lineNumber description];

        id v6 = 0LL;
        id v30 = 0LL;
        id v31 = 0LL;
      }

      uint64_t v29 = 1LL;
    }

    id v12 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218242;
      id v43 = [v26 count];
      __int16 v44 = 2114;
      id v45 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Determined %lu operations with artworkType=%{public}@ need to resolve artwork URLs before executing.",  buf,  0x16u);
    }

    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue([v26 subarraysOfSize:500]);
    id v13 = [obj countByEnumeratingWithState:&v37 objects:v41 count:16];
    if (v13)
    {
      uint64_t v14 = *(void *)v38;
      do
      {
        for (i = 0LL; i != v13; i = (char *)i + 1)
        {
          if (*(void *)v38 != v14) {
            objc_enumerationMutation(obj);
          }
          int v16 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
          uint64_t v17 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          {
            id v18 = [v16 count];
            *(_DWORD *)buf = 134218242;
            id v43 = v18;
            __int16 v44 = 2114;
            id v45 = v6;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Sending bulk artwork info request for %lu %{public}@ IDs.",  buf,  0x16u);
          }

          id v19 = objc_alloc(v30);
          uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
          id v21 = [v19 initWithConfiguration:v20 cloudIDs:v16];

          objc_initWeak((id *)buf, v21);
          v32[0] = _NSConcreteStackBlock;
          v32[1] = 3221225472LL;
          v32[2] = sub_10004E5EC;
          void v32[3] = &unk_1001A30A8;
          void v32[4] = v16;
          objc_copyWeak(&v36, (id *)buf);
          uint64_t v33 = (__CFString *)v6;
          id v34 = v31;
          __int128 v35 = *(_OWORD *)(a1 + 32);
          [v21 setCompletionBlock:v32];
          [v21 setName:@"com.apple.itunescloudd.CloudArtworkOperation.bulkArtworkInfoOperation"];
          unsigned int v23 = (void *)objc_opt_class(&OBJC_CLASS___ICDCloudMusicLibraryRequestHandler, v22);
          BOOL v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
          id v25 = (void *)objc_claimAutoreleasedReturnValue([v23 handlerForConfiguration:v24]);
          [v25 addOperation:v21 forLibraryType:v29 priority:1];

          objc_destroyWeak(&v36);
          objc_destroyWeak((id *)buf);
        }

        id v13 = [obj countByEnumeratingWithState:&v37 objects:v41 count:16];
      }

      while (v13);
    }
  }
}

void sub_10004E44C(_Unwind_Exception *a1)
{
}

id sub_10004E474(uint64_t a1, uint64_t a2, void *a3)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10004E4D0;
  v4[3] = &unk_1001A30F8;
  __int128 v5 = *(_OWORD *)(a1 + 32);
  return [a3 enumerateObjectsUsingBlock:v4];
}

void sub_10004E4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) objectForKey:a2]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"No store account for source_type %ld",  *(void *)(*(void *)(a1 + 32) + 8LL),  NSLocalizedDescriptionKey));
  uint64_t v8 = v4;
  __int128 v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v8,  &v7,  1LL));

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2009LL,  v5));
  [v3 setError:v6];

  [*(id *)(a1 + 32) addOperation:v3];
}

void sub_10004E5EC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mutableCopy];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained cloudArtworkInfoDictionaries]);

  __int128 v5 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v4 count];
    uint64_t v7 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 134218242;
    id v43 = v6;
    __int16 v44 = 2114;
    id v45 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Received %lu artwork info dictionaries for %{public}@ IDs.",  buf,  0x16u);
  }

  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  id v8 = v4;
  id v9 = [v8 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v35;
    do
    {
      for (i = 0LL; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v35 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)i);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKeyedSubscript:*(void *)(a1 + 48)]);
        [v2 removeObject:v14];
        int v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) _artworkURLForInfoDictionary:v13]);
        [v15 setAssetURL:v16];

        [*(id *)(a1 + 56) addOperation:v15];
      }

      id v10 = [v8 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }

    while (v10);
  }

  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  id obj = v2;
  id v17 = [obj countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v31;
    do
    {
      for (j = 0LL; j != v18; j = (char *)j + 1)
      {
        if (*(void *)v31 != v19) {
          objc_enumerationMutation(obj);
        }
        id v21 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)j);
        uint64_t v22 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          unsigned int v23 = *(void **)(a1 + 40);
          id v24 = [v21 unsignedLongLongValue];
          *(_DWORD *)buf = 138543618;
          id v43 = v23;
          __int16 v44 = 2048;
          id v45 = v24;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "Failed to resolve artwork URL for %{public}@ ID: %llu",  buf,  0x16u);
        }

        NSErrorUserInfoKey v38 = NSLocalizedDescriptionKey;
        id v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Failed to resolve artwork URL for %@ ID: %@",  *(void *)(a1 + 40),  v21));
        __int128 v39 = v26;
        uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v39,  &v38,  1LL));

        uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2008LL,  v27));
        [v25 setError:v28];

        [*(id *)(a1 + 56) addOperation:v25];
      }

      id v18 = [obj countByEnumeratingWithState:&v30 objects:v40 count:16];
    }

    while (v18);
  }
}

uint64_t sub_10004F01C(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(void *)(*(void *)(a1 + 32) + 120) = [v3 containerID];
  uint64_t v4 = (uint64_t)[v3 responseCode];

  if (v4 > 399)
  {
    uint64_t v6 = 3LL;
    if (v4 == 400 || v4 == 404) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }

  if (v4 != 200 && v4 != 204)
  {
LABEL_9:
    uint64_t v6 = 2LL;
LABEL_10:
    __int128 v5 = *(void **)(a1 + 32);
    goto LABEL_11;
  }

  __int128 v5 = *(void **)(a1 + 32);
  if (v5[15]) {
    uint64_t v6 = 1LL;
  }
  else {
    uint64_t v6 = 2LL;
  }
LABEL_11:
  [v5 setStatus:v6];
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

LABEL_22:
  return (id)v18;
}

  return v13;
}

  unsigned int v23 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
  {
    id v24 = *(void **)(a1 + 32);
    id v25 = *(void **)(a1 + 64);
    id v26 = 138543618;
    uint64_t v27 = v24;
    uint64_t v28 = 2048;
    uint64_t v29 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "Failed to load %{public}@ URL after %g seconds",  (uint8_t *)&v26,  0x16u);
  }

  *(_BYTE *)(*(void *)(*(void *)v19 + 8LL) + 24LL) = 1;
LABEL_5:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}
      }

      id v8 = [v6 countByEnumeratingWithState:&v31 objects:v42 count:16];
    }

    while (v8);
  }

  if (a3) {
    *a3 = v30;
  }
  if (a4) {
    *a4 = v29;
  }
  if (a5) {
    *a5 = v28;
  }
}

    uint64_t v7 = _os_feature_enabled_impl("MediaPlayer", "Favoriting");
  }

void sub_1000504CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000505C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100052D10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10005346C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_1000539C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_100055150( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

id sub_100056124(uint64_t a1, void *a2)
{
  id result = [a2 statusType];
  id v4 = result;
  int v5 = result == (id)1;
  if (*(unsigned __int8 *)(a1 + 40) != v5 || *(unsigned __int8 *)(a1 + 41) != *(unsigned __int8 *)(a1 + 42))
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *(unsigned __int8 *)(a1 + 41);
      v8[0] = 67109376;
      v8[1] = v5;
      __int16 v9 = 1024;
      int v10 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Updating AirPlay defaults: isAppleMusicSubscriber=%d, cloudLibraryIsOn=%d",  (uint8_t *)v8,  0xEu);
    }

    [*(id *)(a1 + 32) setBool:v4 == (id)1 forKey:@"isAppleMusicSubscriber"];
    [*(id *)(a1 + 32) setBool:*(unsigned __int8 *)(a1 + 41) forKey:@"cloudLibraryIsOn"];
    return (id)notify_post("com.apple.airplay.prefsChanged");
  }

  return result;
}

void sub_100056254(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  int v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      int v9 = 138543618;
      uint64_t v10 = v6;
      __int16 v11 = 2114;
      id v12 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "Finished clearing default supported commands with MR for bundle id '%{public}@' error=%{public}@",  (uint8_t *)&v9,  0x16u);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 138543362;
    uint64_t v10 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Finished clearing default supported commands with MR for bundle id '%{public}@'",  (uint8_t *)&v9,  0xCu);
  }
}

void sub_100056384(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v19 = 138543618;
      uint64_t v20 = v8;
      __int16 v21 = 2114;
      v22[0] = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Failed to load U18 account value from account %{public}@ error=%{public}@",  (uint8_t *)&v19,  0x16u);
    }
  }

  if (v5)
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 value]);
    id v11 = [v10 BOOLValue];

    id v12 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v13 = *(void *)(a1 + 40);
      int v19 = 138543874;
      uint64_t v20 = v13;
      __int16 v21 = 1024;
      LODWORD(v22[0]) = (_DWORD)v11;
      WORD2(v22[0]) = 2114;
      *(void *)((char *)v22 + 6) = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - _updateAccountServerCachedData caching isU18 value of %{BOOL}u for account %{public}@",  (uint8_t *)&v19,  0x1Cu);
    }

    id v15 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
    [v15 setCachedU18MinorAccountStatus:v11];

    int v16 = (void *)objc_claimAutoreleasedReturnValue( +[AMSAccountCachedServerData sharedInstance]( &OBJC_CLASS___AMSAccountCachedServerData,  "sharedInstance"));
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v5 token]);
    id v18 = [v16 cancelUpdatesForToken:v17];
  }
}

void sub_100056580(id a1, ICMusicSubscriptionStatus *a2, NSError *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (v5)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[Updating HTTP Cookies] Failed to obtain subscription status for updating cookies. will be treated as unknown",  buf,  2u);
    }
  }

  id v7 = [sub_1000568B0() sharedRestrictionsMonitor];
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = [v8 allowsMusicVideos];

  id v10 = [sub_1000568B0() sharedRestrictionsMonitor];
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = [v11 allowsExplicitContent];

  int AppBooleanValue = CFPreferencesGetAppBooleanValue( @"UserRequestedSubscriptionHidden",  @"com.apple.mobileipod",  0LL);
  unsigned int v14 = -[ICMusicSubscriptionStatus hasCapability:](v4, "hasCapability:", 1LL);
  id v15 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109888;
    int v23 = (int)v12;
    __int16 v24 = 1024;
    int v25 = (int)v9;
    __int16 v26 = 1024;
    BOOL v27 = AppBooleanValue != 0;
    __int16 v28 = 1024;
    unsigned int v29 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "[Updating HTTP Cookies] Updating cookie store for content restrictions. explicitContentAllowed=%{BOOL}u, musicVide osAllowed=%{BOOL}u, hasDisabledAppleMusic=%{BOOL}u, isSubscriber=%{BOOL}u",  buf,  0x1Au);
  }

  int v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICDDefaults daemonDefaults](&OBJC_CLASS___ICDDefaults, "daemonDefaults"));
  if ((_DWORD)v12 != [v16 lastKnownExplicitContentAllowed])
  {
    if ((_DWORD)v12)
    {
    }

    else if (!sub_100056B04(ICStoreHTTPCookieNameITRE, @"1"))
    {
      goto LABEL_13;
    }

    [v16 setLastKnownExplicitContentAllowed:v12];
  }

id sub_1000568B0()
{
  uint64_t v4 = 0LL;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  v0 = (void *)qword_1001DB6A0;
  uint64_t v7 = qword_1001DB6A0;
  if (!qword_1001DB6A0)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_100056D5C;
    v3[3] = &unk_1001A6978;
    void v3[4] = &v4;
    sub_100056D5C((uint64_t)v3);
    v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10005694C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100056964(void *a1)
{
  id v1 = a1;
  id v2 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v11 = v1;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "[Updating HTTP Cookies] Removing cookie '%{public}@'",  buf,  0xCu);
  }

  v8[0] = @"Domain";
  v8[1] = @"Name";
  v9[0] = @".apple.com";
  v9[1] = v1;
  _DWORD v8[2] = @"Path";
  v9[2] = @"/";
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v9,  v8,  3LL));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICHTTPCookieStore sharedCookieStore](&OBJC_CLASS___ICHTTPCookieStore, "sharedCookieStore"));
  id v5 = [v4 removeCookiesWithProperties:v3];

  if ((v5 & 1) == 0)
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v11 = v1;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[Updating HTTP Cookies] Failed to remove cookie '%{public}@'",  buf,  0xCu);
    }
  }

  return v5;
}

id sub_100056B04(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543618;
    id v18 = v3;
    __int16 v19 = 2114;
    id v20 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[Updating HTTP Cookies] Setting cookie '%{public}@ = %{public}@'",  buf,  0x16u);
  }

  v15[0] = NSHTTPCookieName;
  v15[1] = NSHTTPCookieValue;
  v16[0] = v3;
  v16[1] = v4;
  v15[2] = NSHTTPCookiePath;
  v15[3] = NSHTTPCookieDomain;
  v16[2] = @"/";
  v16[3] = @".apple.com";
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v16,  v15,  4LL));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSHTTPCookie cookieWithProperties:](&OBJC_CLASS___NSHTTPCookie, "cookieWithProperties:", v6));

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[ICHTTPCookieStore sharedCookieStore](&OBJC_CLASS___ICHTTPCookieStore, "sharedCookieStore"));
  unsigned int v14 = v7;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v14, 1LL));
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", @"https://www.apple.com/"));
  id v11 = [v8 saveCookies:v9 forURL:v10 userIdentifier:&off_1001B3C40];

  if ((v11 & 1) == 0)
  {
    id v12 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v18 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[Updating HTTP Cookies] Failed to set cookie '%{public}@'",  buf,  0xCu);
    }
  }

  return v11;
}

void sub_100056D5C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPRestrictionsMonitor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB6A0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPRestrictionsMonitorClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDServer.m",  86,  @"Unable to find class %s",  "MPRestrictionsMonitor");

    __break(1u);
  }

void sub_100056E20()
{
  id v3 = 0LL;
  if (!qword_1001DB6A8)
  {
    __int128 v4 = off_1001A3700;
    uint64_t v5 = 0LL;
    qword_1001DB6A8 = _sl_dlopen(&v4, &v3);
  }

  if (!qword_1001DB6A8)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v2,  @"ICDServer.m",  80,  @"%s",  v3);

    __break(1u);
    goto LABEL_7;
  }

  v0 = v3;
  if (v3) {
LABEL_7:
  }
    free(v0);
}

void sub_100056F20(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138543362;
      id v12 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "Skipping updating enhanced audio availability because we failed to load the bag. err=%{public}@",  (uint8_t *)&v11,  0xCu);
    }
  }

  else
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue([a2 enhancedAudioConfiguration]);
    if (v7)
    {
      uint64_t v6 = (os_log_s *)v7;
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionStatusController sharedStatusController]( &OBJC_CLASS___ICMusicSubscriptionStatusController,  "sharedStatusController"));
      id v9 = [[ICMusicSubscriptionStatusRequest alloc] initWithStoreRequestContext:*(void *)(a1 + 32)];
      [v9 setCarrierBundleProvisioningStyle:1];
      [v9 shouldReturnLastKnownStatusOnly];
      [v9 setShouldIgnoreCache:0];
      [v9 setAllowsFallbackToExpiredStatus:1];
      [v9 setAllowsFallbackToStatusNeedingReload:1];
      [v8 performSubscriptionStatusRequest:v9 withCompletionHandler:&stru_1001A3630];
    }

    else
    {
      id v10 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v11) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Disabling enhanced audio because the configuration is missing",  (uint8_t *)&v11,  2u);
      }

      CFPreferencesSetAppValue(@"EnhancedAudioAvailable", kCFBooleanFalse, @"com.apple.mobileipod");
      uint64_t v6 = 0LL;
    }
  }
}

void sub_1000570F4(id a1, ICMusicSubscriptionStatusResponse *a2, NSError *a3)
{
  __int128 v4 = a3;
  if (v4)
  {
    id v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138543362;
      int v11 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "Skipping updating enhanced audio availability because we failed to load subscription status. err=%{public}@",  (uint8_t *)&v10,  0xCu);
    }
  }

  else
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[ICMusicSubscriptionStatusResponse subscriptionStatus](a2, "subscriptionStatus"));
    unsigned int v7 = [v6 hasCapability:1];

    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 67109120;
      LODWORD(v11) = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Setting cached enhanced audio availability flag to %{BOOL}u",  (uint8_t *)&v10,  8u);
    }

    id v9 = (CFPropertyListRef *)&kCFBooleanTrue;
    if (!v7) {
      id v9 = (CFPropertyListRef *)&kCFBooleanFalse;
    }
    CFPreferencesSetAppValue(@"EnhancedAudioAvailable", *v9, @"com.apple.mobileipod");
  }
}

void sub_100057268(id a1, ICRequestContext *a2)
{
  id v2 = a2;
  -[ICRequestContext setAllowsExpiredBags:](v2, "setAllowsExpiredBags:", 1LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  -[ICRequestContext setIdentity:](v2, "setIdentity:", v3);

  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  -[ICRequestContext setIdentityStore:](v2, "setIdentityStore:", v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  -[ICRequestContext setClientInfo:](v2, "setClientInfo:", v5);

  id v6 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  -[ICRequestContext setAuthenticationProvider:](v2, "setAuthenticationProvider:", v6);
}

void sub_100057330(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 int64ValueForBagKey:ICURLBagKeySubscriptionStatusRefreshIntervalSeconds];
  id v5 = v4;
  else {
    int64_t v6 = XPC_ACTIVITY_INTERVAL_1_DAY;
  }
  unsigned int v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v3 serverCorrelationKey]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 serverEnvironment]);
    *(_DWORD *)buf = 134218754;
    int64_t v17 = v6;
    __int16 v18 = 2048;
    id v19 = v5;
    __int16 v20 = 2114;
    __int16 v21 = v8;
    __int16 v22 = 2114;
    int v23 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Setting timer to perform periodic subscription tasks for %llds (value from bag: %llds; bag's serve"
      "r correlation key: %{public}@; server environment: %{public}@).",
      buf,
      0x2Au);
  }

  xpc_object_t v10 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_string(v10, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  xpc_dictionary_set_BOOL(v10, XPC_ACTIVITY_REPEATING, 1);
  xpc_dictionary_set_int64(v10, XPC_ACTIVITY_INTERVAL, v6);
  xpc_dictionary_set_BOOL(v10, XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP, 0);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100057550;
  v13[3] = &unk_1001A4E10;
  id v11 = *(id *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  id v14 = v11;
  uint64_t v15 = v12;
  xpc_activity_register("com.apple.itunescloud.subscription_status_refresh", v10, v13);
}

void sub_100057550(uint64_t a1)
{
  id v1 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Performing periodic refresh of subscription status",  buf,  2u);
  }

  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICPrivacyInfo sharedPrivacyInfo](&OBJC_CLASS___ICPrivacyInfo, "sharedPrivacyInfo"));
  unsigned int v3 = [v2 privacyAcknowledgementRequiredForMusic];

  if (v3)
  {
    id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Skipping periodic subscription refresh because privacy acknowledgement is required",  buf,  2u);
    }
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
    id v36 = 0LL;
    int64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 userIdentitiesForManageableAccountsWithError:&v36]);
    id v4 = (os_log_s *)v36;

    if (v4 || ![v6 count])
    {
      unsigned int v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543618;
        __int128 v39 = v4;
        __int16 v40 = 2114;
        __int128 v41 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Skipping subscription status refresh [issue retrieving user identities] - error=%{public}@ - u serIdentities=%{public}@",  buf,  0x16u);
      }
    }

    else
    {
      int v23 = v6;
      __int128 v34 = 0u;
      __int128 v35 = 0u;
      __int128 v32 = 0u;
      __int128 v33 = 0u;
      id obj = v6;
      id v8 = [obj countByEnumeratingWithState:&v32 objects:v37 count:16];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = *(void *)v33;
        do
        {
          for (i = 0LL; i != v9; i = (char *)i + 1)
          {
            if (*(void *)v33 != v10) {
              objc_enumerationMutation(obj);
            }
            uint64_t v12 = *(void *)(*((void *)&v32 + 1) + 8LL * (void)i);
            uint64_t v13 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
            v31[0] = _NSConcreteStackBlock;
            v31[1] = 3221225472LL;
            void v31[2] = sub_1000579E8;
            v31[3] = &unk_1001A3570;
            void v31[4] = v12;
            id v14 = -[ICStoreRequestContext initWithBlock:](v13, "initWithBlock:", v31);
            id v15 = [[ICMusicSubscriptionStatusRequest alloc] initWithStoreRequestContext:v14];
            [v15 setCarrierBundleProvisioningStyle:1];
            [v15 setShouldIgnoreCache:1];
            [v15 setAllowsFallbackToExpiredStatus:1];
            [v15 setAllowsFallbackToStatusNeedingReload:1];
            int v16 = *(void **)(a1 + 32);
            v27[0] = _NSConcreteStackBlock;
            v27[1] = 3221225472LL;
            v27[2] = sub_100057A9C;
            v27[3] = &unk_1001A6AF8;
            id v17 = v16;
            id v28 = v17;
            unsigned int v29 = v14;
            uint64_t v30 = v12;
            __int16 v18 = v14;
            [v17 performSubscriptionStatusRequest:v15 withCompletionHandler:v27];
          }

          id v9 = [obj countByEnumeratingWithState:&v32 objects:v37 count:16];
        }

        while (v9);
      }

      if (MSVDeviceSupportsEnhancedMusic())
      {
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472LL;
        void v26[2] = sub_100057C18;
        v26[3] = &unk_1001A4920;
        id v19 = *(void **)(a1 + 32);
        void v26[4] = *(void *)(a1 + 40);
        [v19 getSubscriptionStatusWithCompletionHandler:v26];
        int64_t v6 = v23;
      }

      else
      {
        __int16 v20 = os_log_create("com.apple.amp.itunescloudd", "XPC");
        int64_t v6 = v23;
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Skipping offline HLS key refresh because the device does not support it",  buf,  2u);
        }
      }

      __int16 v21 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Updating Media API URL mapping file",  buf,  2u);
      }

      __int16 v22 = (void *)objc_claimAutoreleasedReturnValue( +[ICMediaAPIURLMappingProvider sharedProvider]( &OBJC_CLASS___ICMediaAPIURLMappingProvider,  "sharedProvider"));
      [v22 updateURLMappingsWithCompletion:&stru_1001A35B0];

      [*(id *)(a1 + 40) processPendingKeyInvalidations];
    }
  }
}

void sub_1000579E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setAllowsExpiredBags:1];
  [v3 setIdentity:*(void *)(a1 + 32)];
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  [v3 setIdentityStore:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  [v3 setClientInfo:v5];

  id v6 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v3 setAuthenticationProvider:v6];
}

void sub_100057A9C(void *a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 subscriptionStatus]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  if ([v4 isAppleTV])
  {
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
    unsigned __int8 v6 = [v5 isAudioAccessory];

    if ((v6 & 1) == 0 && [v3 hasCapability:128])
    {
      unsigned int v7 = (void *)a1[4];
      uint64_t v8 = a1[5];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472LL;
      void v11[2] = sub_100057DA8;
      v11[3] = &unk_1001A4920;
      v11[4] = a1[6];
      [v7 refreshSubscriptionUsingRequestContext:v8 withCompletionHandler:v11];
      goto LABEL_9;
    }
  }

  id v9 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = a1[6];
    *(_DWORD *)buf = 138412546;
    uint64_t v13 = v10;
    __int16 v14 = 2114;
    id v15 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Skipping subscription key refresh complete for user identity: %@ - Subscription status: %{public}@",  buf,  0x16u);
  }

LABEL_9:
}

void sub_100057C18(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 hasCapability:1];
  id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Refreshing offline HLS keys",  buf,  2u);
    }
  }

  else
  {
    if (v5)
    {
      *(_WORD *)unsigned __int8 v6 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "<Key Refresh> - Skipping refreshing offline HLS keys because the user is not a subscriber",  v6,  2u);
    }
  }

void sub_100057CF4(id a1, ICMediaAPIURLMappingSet *a2, NSError *a3)
{
  unsigned int v3 = a3;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138543362;
    unsigned __int8 v6 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Media API URL mapping update completed. err=%{public}@",  (uint8_t *)&v5,  0xCu);
  }
}

void sub_100057DA8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  int v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  unsigned __int8 v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v13 = 138412546;
      uint64_t v14 = v7;
      __int16 v15 = 2114;
      id v16 = v4;
      uint64_t v8 = "<Key Refresh> - Periodic subscription refresh issue for user identity: %@ - error=%{public}@";
      id v9 = v6;
      os_log_type_t v10 = OS_LOG_TYPE_ERROR;
      uint32_t v11 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, (uint8_t *)&v13, v11);
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    int v13 = 138412290;
    uint64_t v14 = v12;
    uint64_t v8 = "<Key Refresh> - Periodic subscription refresh complete for user identity: %@";
    id v9 = v6;
    os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
    uint32_t v11 = 12;
    goto LABEL_6;
  }
}

void sub_100057EC0(id a1, ICStoreRequestContext *a2)
{
  id v2 = a2;
  -[ICStoreRequestContext setAllowsExpiredBags:](v2, "setAllowsExpiredBags:", 1LL);
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  -[ICStoreRequestContext setIdentity:](v2, "setIdentity:", v3);

  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  -[ICStoreRequestContext setIdentityStore:](v2, "setIdentityStore:", v4);

  int v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  -[ICStoreRequestContext setClientInfo:](v2, "setClientInfo:", v5);

  id v6 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  -[ICStoreRequestContext setAuthenticationProvider:](v2, "setAuthenticationProvider:", v6);
}

void sub_100057F88(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 134217984;
    uint64_t v7 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Starting operation to reload cloud library for secondary accounts]",  buf,  0xCu);
  }

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) internalOperationQueue]);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_100058088;
  v5[3] = &unk_1001A6B90;
  void v5[4] = *(void *)(a1 + 32);
  [v4 addOperationWithBlock:v5];
}

void sub_100058088(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
  id v3 = [v2 libraryManagementPolicy];

  if (v3 == (id)1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handlerCoordinator]);
    unsigned int v5 = [v4 isSetupCompleted];

    if (v5)
    {
      [*(id *)(a1 + 32) _transitionAppleTVToParallelMultiUserLibraryManagementPolicy];
    }

    else
    {
      uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v9 = *(void *)(a1 + 32);
        int v10 = 134217984;
        uint64_t v11 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Handler Coordinator has not finished setup. Will retry loading secondary accounts]",  (uint8_t *)&v10,  0xCu);
      }

      [*(id *)(a1 + 32) _retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV];
    }
  }

  else
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 134218240;
      uint64_t v11 = v7;
      __int16 v12 = 1024;
      int v13 = (int)v3;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - currentPolicy=%d and is not in a supported configuration. Will not attempt to reload cloud librar y for secondary users]",  (uint8_t *)&v10,  0x12u);
    }
  }

uint64_t sub_10005822C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10005823C(uint64_t a1)
{
}

uint64_t sub_100058244(uint64_t a1, void *a2)
{
  uint64_t v3 = objc_claimAutoreleasedReturnValue([a2 subscriptionStatus]);
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100058284(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    [*(id *)(a1 + 32) _writeURLResolutionCacheFileUsingBag:a2];
  }

  else
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138543362;
      id v8 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "Failed to create url resolution file because we couldn't fetch the bag. err=%{public}@",  (uint8_t *)&v7,  0xCu);
    }
  }
}

void sub_10005835C(id a1, ICStoreRequestContext *a2)
{
  id v2 = a2;
  -[ICStoreRequestContext setAllowsExpiredBags:](v2, "setAllowsExpiredBags:", 1LL);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  -[ICStoreRequestContext setIdentity:](v2, "setIdentity:", v3);

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  -[ICStoreRequestContext setIdentityStore:](v2, "setIdentityStore:", v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  -[ICStoreRequestContext setClientInfo:](v2, "setClientInfo:", v5);

  id v6 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  -[ICStoreRequestContext setAuthenticationProvider:](v2, "setAuthenticationProvider:", v6);
}

void sub_100058424(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  uint64_t v3 = objc_claimAutoreleasedReturnValue([v2 cachedSharedControlsCapability]);
  uint64_t v4 = (void *)v3;
  id v5 = &off_1001B3C10;
  if (v3) {
    id v5 = (_UNKNOWN **)v3;
  }
  id v6 = v5;

  int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dictionaryForBagKey:ICURLBagKeyMusicSubscription]);
  BOOL v8 = v7 != 0LL;

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  [v9 setSocialProfileSupported:v8];

  uint64_t v10 = ICURLBagKeySharedControls;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) numberForBagKey:ICURLBagKeySharedControls]);

  if (v11) {
    __int16 v12 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) numberForBagKey:v10]);
  }
  else {
    __int16 v12 = &off_1001B3C28;
  }
  int v13 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = *(void *)(a1 + 40);
    int v18 = 134218498;
    uint64_t v19 = v14;
    __int16 v20 = 2114;
    __int16 v21 = v6;
    __int16 v22 = 2114;
    int v23 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p CachedSharedControlsCapability. cachedStatus=%{public}@ currentStatus=%{public}@",  (uint8_t *)&v18,  0x20u);
  }

  id v15 = [v12 integerValue];
  if (v15 != [v6 integerValue])
  {
    id v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
    [v16 setCachedSharedControlsCapability:v12];

    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDistributedNotificationCenter defaultCenter]( &OBJC_CLASS___NSDistributedNotificationCenter,  "defaultCenter"));
    [v17 postNotificationName:ICMusicUserStateGroupSessionCapabilityChangedNotification object:0];
  }
}

void sub_10005862C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 134218242;
      uint64_t v9 = v7;
      __int16 v10 = 2112;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "ICDServer %p - Server Setup - Encountered error fetching bag: %@",  (uint8_t *)&v8,  0x16u);
    }
  }

  else
  {
    [*(id *)(a1 + 32) _updateSocialFeaturesAvailabilityIfNeededUsingBag:a2];
  }
}

void sub_100058714(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543618;
    uint64_t v11 = v5;
    __int16 v12 = 2114;
    id v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Removing cloud music library",
      buf,
      0x16u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  v3));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_10005890C;
  void v8[3] = &unk_1001A7108;
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v3;
  id v7 = v3;
  [v6 handleMusicAppRemovedWithCompletion:v8];
}

void sub_100058850(id a1, ICConnectionConfiguration *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(-[ICConnectionConfiguration userIdentity](v4, "userIdentity"));
  id v8 = (id)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v5));

  [v8 setJaliscoNeedsUpdateForTokens:1];
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  v4));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[ICConnectionConfiguration clientIdentity](v4, "clientIdentity"));

  [v6 updateJaliscoLibraryWithClientIdentity:v7 forReason:6 completionHandler:&stru_1001A34E0];
}

void sub_10005890C(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    uint64_t v18 = v3;
    __int16 v19 = 2114;
    uint64_t v20 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Removing other music and music video tracks",
      buf,
      0x16u);
  }

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v5));

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  v13[2] = sub_100058ACC;
  v13[3] = &unk_1001A69E0;
  id v7 = v6;
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(a1 + 40);
  id v14 = v7;
  uint64_t v15 = v8;
  id v16 = v9;
  [v7 performDatabaseTransactionWithBlock:v13];
  __int16 v10 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    uint64_t v18 = v11;
    __int16 v19 = 2114;
    uint64_t v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Finished removing all music data",
      buf,
      0x16u);
  }
}

uint64_t sub_100058ACC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  ML3TrackPropertyMediaType,  &off_1001B3BF8,  10LL));
  v40[0] = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  ML3TrackPropertyIsLocal,  1LL));
  v40[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v40, 2LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v6));

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:]( &OBJC_CLASS___ML3Track,  "unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:",  *(void *)(a1 + 32),  v7,  0LL));
  id v9 = [v8 countOfEntities];
  __int16 v10 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 40);
    uint64_t v12 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543874;
    uint64_t v35 = v11;
    __int16 v36 = 2114;
    uint64_t v37 = v12;
    __int16 v38 = 2048;
    id v39 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Found %lu additional tracks to remove from library",
      buf,
      0x20u);
  }

  id v13 = calloc((size_t)v9, 8uLL);
  if (v13)
  {
    id v14 = v13;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472LL;
    v33[2] = sub_100058FA4;
    v33[3] = &unk_1001A34A0;
    void v33[4] = v13;
    [v8 enumeratePersistentIDsUsingBlock:v33];
    if ((+[ML3Track deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:]( &OBJC_CLASS___ML3Track,  "deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:",  *(void *)(a1 + 32),  2LL,  v14,  v9,  v3) & 1) == 0)
    {
      uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = *(void *)(a1 + 40);
        uint64_t v17 = *(void *)(a1 + 48);
        *(_DWORD *)buf = 138543618;
        uint64_t v35 = v16;
        __int16 v36 = 2114;
        uint64_t v37 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Failed to remove additional tracks",
          buf,
          0x16u);
      }
    }

    free(v14);
  }

  else
  {
    uint64_t v18 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = *(void *)(a1 + 40);
      uint64_t v20 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138543618;
      uint64_t v35 = v19;
      __int16 v36 = 2114;
      uint64_t v37 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Failed to allocate pid array - skipping",
        buf,
        0x16u);
    }
  }

  __int16 v21 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v22 = *(void *)(a1 + 40);
    uint64_t v23 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543618;
    uint64_t v35 = v22;
    __int16 v36 = 2114;
    uint64_t v37 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Removing empty collections",
      buf,
      0x16u);
  }

  if ((+[ML3Collection removeOrphanedCollectionsInLibrary:usingConnection:]( &OBJC_CLASS___ML3Collection,  "removeOrphanedCollectionsInLibrary:usingConnection:",  *(void *)(a1 + 32),  v3) & 1) == 0)
  {
    __int16 v24 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543362;
      uint64_t v35 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - [Music App Removal] Failed to remove empty collections",  buf,  0xCu);
    }
  }

  __int16 v26 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v27 = *(void *)(a1 + 40);
    uint64_t v28 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138543618;
    uint64_t v35 = v27;
    __int16 v36 = 2114;
    uint64_t v37 = v28;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Cleaning up artwork",
      buf,
      0x16u);
  }

  if (([*(id *)(a1 + 32) cleanupArtworkWithOptions:30] & 1) == 0)
  {
    unsigned int v29 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v30 = *(void *)(a1 + 40);
      uint64_t v31 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138543618;
      uint64_t v35 = v30;
      __int16 v36 = 2114;
      uint64_t v37 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "%{public}@ [Music App Removal] %{public}@; Artwork cleanup failed",
        buf,
        0x16u);
    }
  }

  return 1LL;
}

uint64_t sub_100058FA4(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)(*(void *)(result + 32) + 8 * a3) = a2;
  return result;
}

void sub_100058FB0(id a1, ICConnectionConfiguration *a2, unint64_t a3, BOOL *a4)
{
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  a2,  a4));
  [v4 handleMusicAppInstalled];
}

void sub_100058FE8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  unsigned int v3 = [v2 isAppleTV];

  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
  uint64_t v5 = v4;
  if (!v3) {
    goto LABEL_6;
  }
  id v6 = [v4 libraryManagementPolicy];

  id v7 = *(void **)(a1 + 32);
  if (v6 != (id)1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v7 accountManager]);
    uint64_t v5 = v4;
LABEL_6:
    [v4 updateState];

    os_log_t v11 = (os_log_t)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handlerCoordinator]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 stateChange]);
    -[os_log_s updateHandlersWithAccountStateChange:](v11, "updateHandlersWithAccountStateChange:", v13);

LABEL_7:
    goto LABEL_8;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 handlerCoordinator]);
  unsigned int v9 = [v8 isSetupCompleted];

  __int16 v10 = *(_BYTE **)(a1 + 32);
  if (!v9)
  {
    if (v10[10]) {
      goto LABEL_8;
    }
    v10[10] = 1;
    os_log_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v24 = *(void *)(a1 + 32);
      int v25 = 134217984;
      uint64_t v26 = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Deferring library policy management change till handler coordinator is fully initialized",  (uint8_t *)&v25,  0xCu);
    }

    goto LABEL_7;
  }

  [v10 _transitionAppleTVToParallelMultiUserLibraryManagementPolicy];
LABEL_8:
  id v14 = *(void **)(a1 + 32);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 accountManager]);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 activeConfiguration]);
  [v14 _ensureSubscriptionInformationIsUpToDateForConfiguration:v16];

  uint64_t v17 = *(void **)(a1 + 32);
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 accountManager]);
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 activeConfiguration]);
  [v17 _updateAirPlaySettingsForConfiguration:v19];

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  if (([v20 isIPhone] & 1) != 0 || objc_msgSend(v20, "isIPod"))
  {
    __int16 v21 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicLibraryRecommendationController sharedLibraryRecommendationController]( &OBJC_CLASS___ICMusicLibraryRecommendationController,  "sharedLibraryRecommendationController"));
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 activeConfiguration]);
    [v21 handleAccountStateChange:v23];
  }

  [*(id *)(a1 + 32) _updateAccountServerCachedData];
}

void sub_100059264(uint64_t a1, void *a2)
{
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  void v17[2] = sub_1000593D8;
  v17[3] = &unk_1001A6398;
  id v18 = a2;
  id v3 = v18;
  id v4 = objc_retainBlock(v17);
  uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Ensuring that we have off-line music subscription keys if the user has a slot",  buf,  2u);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_1000593EC;
  v11[3] = &unk_1001A3418;
  id v12 = v7;
  id v13 = v6;
  uint64_t v14 = *(void *)(a1 + 40);
  id v15 = v4;
  id v8 = v6;
  id v9 = v7;
  __int16 v10 = v4;
  [v8 getPropertiesForUserIdentity:v9 completionHandler:v11];
}

id sub_1000593D8(uint64_t a1, uint64_t a2)
{
  byte_1001DB698 = 0;
  return [*(id *)(a1 + 32) finishWithError:a2];
}

void sub_1000593EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a2 DSID]);
  id v7 = [v6 unsignedLongLongValue];

  if (a2 && v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionFairPlayController sharedController]( &OBJC_CLASS___ICMusicSubscriptionFairPlayController,  "sharedController"));
    id v30 = 0LL;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 getKeyStatusForAccountUniqueIdentifier:v7 error:&v30]);
    id v10 = v30;

    if (v10)
    {
      os_log_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        id v32 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Failed to get current subscription key status - skipping key refresh. err=%{public}@",  buf,  0xCu);
      }

      id v12 = *(void (**)(void))(*(void *)(a1 + 56) + 16LL);
    }

    else
    {
      if (![v9 hasOfflinePlaybackKeys])
      {
        id v15 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 3221225472LL;
        v27[2] = sub_100059774;
        v27[3] = &unk_1001A33C8;
        id v28 = *(id *)(a1 + 32);
        id v29 = *(id *)(a1 + 40);
        uint64_t v16 = -[ICStoreRequestContext initWithBlock:](v15, "initWithBlock:", v27);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionStatusController sharedStatusController]( &OBJC_CLASS___ICMusicSubscriptionStatusController,  "sharedStatusController"));
        id v18 = [[ICMusicSubscriptionStatusRequest alloc] initWithStoreRequestContext:v16];
        [v18 setCarrierBundleProvisioningStyle:1];
        [v18 setShouldIgnoreCache:0];
        [v18 setAllowsFallbackToExpiredStatus:1];
        [v18 setAllowsFallbackToStatusNeedingReload:1];
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472LL;
        v22[2] = sub_100059810;
        void v22[3] = &unk_1001A33F0;
        id v19 = *(id *)(a1 + 56);
        id v23 = v17;
        uint64_t v24 = v16;
        uint64_t v25 = *(void *)(a1 + 48);
        id v26 = v19;
        uint64_t v20 = v16;
        id v21 = v17;
        [v21 performSubscriptionStatusRequest:v18 withCompletionHandler:v22];

        goto LABEL_15;
      }

      uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134217984;
        id v32 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Offline subscription keys already present for DSID %llu - skipping key refresh",  buf,  0xCu);
      }

      id v12 = *(void (**)(void))(*(void *)(a1 + 56) + 16LL);
    }

    v12();
LABEL_15:

    goto LABEL_16;
  }

  id v13 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v32 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "No account properties - skipping subscription key refresh. err=%{public}@",  buf,  0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
LABEL_16:
}

void sub_100059774(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setAllowsExpiredBags:1];
  [v3 setIdentity:*(void *)(a1 + 32)];
  [v3 setIdentityStore:*(void *)(a1 + 40)];
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  [v3 setClientInfo:v4];

  id v5 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v3 setAuthenticationProvider:v5];
}

void sub_100059810(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  if (!v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([a2 subscriptionStatus]);
    if ([v7 statusType] == (id)1)
    {
      if ([v7 hasCapability:128])
      {
        id v8 = (void *)a1[4];
        uint64_t v9 = a1[5];
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472LL;
        v15[2] = sub_100059A38;
        v15[3] = &unk_1001A52E0;
        id v10 = (void *)a1[7];
        void v15[4] = a1[6];
        id v16 = v10;
        [v8 refreshSubscriptionUsingRequestContext:v9 withCompletionHandler:v15];

LABEL_14:
        goto LABEL_15;
      }

      os_log_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        id v18 = v7;
        id v12 = "Subscription not enabled - skipping key refresh. status=%{public}@";
        id v13 = v11;
        uint32_t v14 = 12;
        goto LABEL_12;
      }
    }

    else
    {
      os_log_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        id v12 = "Subscription not enabled - skipping key refresh";
        id v13 = v11;
        uint32_t v14 = 2;
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v12, buf, v14);
      }
    }

    (*(void (**)(void))(a1[7] + 16LL))();
    goto LABEL_14;
  }

  id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v18 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Failed to obtain subscription status - skipping key refresh. err=%{public}@",  buf,  0xCu);
  }

  (*(void (**)(void))(a1[7] + 16LL))();
LABEL_15:
}

void sub_100059A38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138543618;
      id v15 = v6;
      __int16 v16 = 2114;
      id v17 = v5;
      uint64_t v9 = "Subscription refresh complete. status=%{public}@, err=%{public}@";
      id v10 = v8;
      os_log_type_t v11 = OS_LOG_TYPE_ERROR;
      uint32_t v12 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, (uint8_t *)&v14, v12);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = 138543362;
    id v15 = v5;
    uint64_t v9 = "Subscription refresh complete. status=%{public}@";
    id v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
    uint32_t v12 = 12;
    goto LABEL_6;
  }

  [*(id *)(a1 + 32) refreshEnhancedAudioSharedKeys];
  (*(void (**)(void, id, uint64_t))(*(void *)(a1 + 40) + 16LL))(*(void *)(a1 + 40), v6, v13);
}

void sub_100059B74(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPHomeMonitor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB6C0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPHomeMonitorClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDServer.m",  83,  @"Unable to find class %s",  "MPHomeMonitor");

    __break(1u);
  }

void sub_100059C38(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPHomeUserMonitor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB6C8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPHomeUserMonitorClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDServer.m",  84,  @"Unable to find class %s",  "MPHomeUserMonitor");

    __break(1u);
  }

void sub_100059CFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 hasCapability:128])
  {
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) valueForDatabaseProperty:@"MLLastUploadedExplicitContentAllowedBoolean"]);
    os_log_t v5 = v4;
    if (v4 && *(unsigned __int8 *)(a1 + 64) == -[os_log_s BOOLValue](v4, "BOOLValue"))
    {
      id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v7 = *(unsigned __int8 *)(a1 + 64);
        *(_DWORD *)buf = 67109120;
        LODWORD(v21) = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "parental control settings have not changed - allowExplicitContent %d",  buf,  8u);
      }
    }

    else
    {
      id v9 = [[ICSetParentalControlRequestOperation alloc] initWithRequestContext:*(void *)(a1 + 40) allowsExplicitContent:*(unsigned __int8 *)(a1 + 64) isAutomatic:*(unsigned __int8 *)(a1 + 65)];
      id v10 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        os_log_type_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountDSID]);
        unsigned int v12 = -[os_log_s BOOLValue](v5, "BOOLValue");
        int v13 = *(unsigned __int8 *)(a1 + 64);
        int v14 = *(unsigned __int8 *)(a1 + 65);
        *(_DWORD *)buf = 138478595;
        id v21 = v11;
        __int16 v22 = 1024;
        *(_DWORD *)id v23 = v12;
        *(_WORD *)&void v23[4] = 1024;
        *(_DWORD *)&v23[6] = v13;
        __int16 v24 = 1024;
        int v25 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "updating explicit content. dsid=%{private}@, lastUploadedValue=%{BOOL}u, setting allowsExplicitContent=%{BOOL} u, automatic=%{BOOL}u",  buf,  0x1Eu);
      }

      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472LL;
      v16[2] = sub_100059FFC;
      v16[3] = &unk_1001A3358;
      id v17 = v9;
      id v18 = *(id *)(a1 + 32);
      char v19 = *(_BYTE *)(a1 + 64);
      id v6 = (os_log_s *)v9;
      id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSBlockOperation blockOperationWithBlock:]( &OBJC_CLASS___NSBlockOperation,  "blockOperationWithBlock:",  v16));
      -[os_log_s setName:](v6, "setName:", @"com.apple.itunescloudd.setParentalControlRequestOperation");
      [v15 addDependency:v6];
      [*(id *)(a1 + 48) addBackgroundOperation:v6 priority:1];
      [*(id *)(a1 + 48) addOperation:v15 priority:1];
    }
  }

  else
  {
    os_log_t v5 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) userIdentity]);
      *(_DWORD *)buf = 138543618;
      id v21 = v8;
      __int16 v22 = 2114;
      *(void *)id v23 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "User Identity %{public}@ has subscription status %{public}@.",  buf,  0x16u);
    }
  }
}

void sub_100059FFC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
  if (v2)
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = *(unsigned __int8 *)(a1 + 48);
      v7[0] = 67109378;
      v7[1] = v4;
      __int16 v8 = 2114;
      id v9 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Could not update parental settings to %d - error %{public}@.",  (uint8_t *)v7,  0x12u);
    }
  }

  else
  {
    os_log_t v5 = *(void **)(a1 + 40);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 48)));
    [v5 setValue:v6 forDatabaseProperty:@"MLLastUploadedExplicitContentAllowedBoolean"];
  }
}

void sub_10005A110(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPMediaQuery");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB6B0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPMediaQueryClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDServer.m",  82,  @"Unable to find class %s",  "MPMediaQuery");

    __break(1u);
  }

id sub_10005A1D4()
{
  uint64_t v4 = 0LL;
  os_log_t v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  v0 = (void *)qword_1001DB6B8;
  uint64_t v7 = qword_1001DB6B8;
  if (!qword_1001DB6B8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_10005A288;
    v3[3] = &unk_1001A6978;
    void v3[4] = &v4;
    sub_10005A288((uint64_t)v3);
    v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_10005A270( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10005A288(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPMediaLibrary");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB6B8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPMediaLibraryClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDServer.m",  81,  @"Unable to find class %s",  "MPMediaLibrary");

    __break(1u);
  }

void sub_10005A34C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isStartupSequenceCompleted];
  id v3 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  uint64_t v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "ICDServer %p - _completeStartupSequenceIfNeeded - Nothing to do [startup sequence completed]",  buf,  0xCu);
    }
  }

  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Completing server setup ....",  buf,  0xCu);
    }

    dispatch_group_enter(*(dispatch_group_t *)(*(void *)(a1 + 32) + 56LL));
    [*(id *)(a1 + 32) _initializeAncillaryServices];
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 2. Services initialized...",  buf,  0xCu);
    }

    id v9 = *(void **)(a1 + 32);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 accountManager]);
    os_log_type_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 supportedConfigurations]);
    [v9 _setupMPMediaLibraryFilteringForConfigurations:v11];

    unsigned int v12 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 3. MediaLibrary filtering setup completed...",  buf,  0xCu);
    }

    [*(id *)(a1 + 32) _startAncillaryServices];
    int v14 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 4. Services started...",  buf,  0xCu);
    }

    __int16 v16 = *(void **)(a1 + 32);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 accountManager]);
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 supportedConfigurations]);
    [v16 _migrateToLatestUserVersionForConfigurations:v18];

    char v19 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 5. Migration completed...",  buf,  0xCu);
    }

    id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
    [v21 updateState];

    __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handlerCoordinator]);
    id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
    __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([v23 stateChange]);
    [v22 setupHandlersWithAccountStateChange:v24];

    int v25 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v26 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 6. Handlers setup...",  buf,  0xCu);
    }

    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v27 addObserver:*(void *)(a1 + 32) selector:"_handleURLBagProviderDidUpdateBagNotification:" name:ICURLBagProviderDidUpdateBagNotification object:0];

    [*(id *)(a1 + 32) _initializeSocialFeaturesAvailabilityIfNeeded];
    id v28 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v29 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 7. Posting notification that the service is ready",  buf,  0xCu);
    }

    int v30 = dword_1001DA908;
    if (dword_1001DA908 == -1)
    {
      notify_register_check("com.apple.itunescloud.setupcompleted", &dword_1001DA908);
      int v30 = dword_1001DA908;
    }

    notify_set_state(v30, 1uLL);
    notify_post("com.apple.itunescloud.setupcompleted");
    uint64_t v31 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v32 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - Creating push notification controller...",  buf,  0xCu);
    }

    __int128 v33 = *(void **)(a1 + 32);
    if (!v33[19])
    {
      __int128 v34 = objc_alloc(&OBJC_CLASS___CloudPushNotificationController);
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
      __int16 v36 = -[CloudPushNotificationController initWithAccountManager:](v34, "initWithAccountManager:", v35);
      uint64_t v37 = *(void *)(a1 + 32);
      __int16 v38 = *(void **)(v37 + 152);
      *(void *)(v37 + 152) = v36;

      [*(id *)(*(void *)(a1 + 32) + 152) setMediaUserStateCenterServer:*(void *)(*(void *)(a1 + 32) + 176)];
      [*(id *)(*(void *)(a1 + 32) + 152) setPlaybackPositionServer:*(void *)(*(void *)(a1 + 32) + 88)];
      [*(id *)(*(void *)(a1 + 32) + 152) setUserNotificationController:*(void *)(*(void *)(a1 + 32) + 168)];
      __int128 v33 = *(void **)(a1 + 32);
    }

    id v39 = (void *)objc_claimAutoreleasedReturnValue([v33 accountManager]);
    __int16 v40 = (void *)objc_claimAutoreleasedReturnValue([v39 supportedConfigurations]);
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 3221225472LL;
    v48[2] = sub_10005AAAC;
    v48[3] = &unk_1001A32B0;
    uint8_t v48[4] = *(void *)(a1 + 32);
    [v40 enumerateObjectsUsingBlock:v48];

    __int128 v41 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v42 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v42;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 8. Explicit content settings updated...",  buf,  0xCu);
    }

    id v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) accountManager]);
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue([v43 activeConfiguration]);

    [*(id *)(a1 + 32) _updateAirPlaySettingsForConfiguration:v4];
    __int16 v44 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v45 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v45;
      _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server Setup - 9. Posting notification that the service is ready",  buf,  0xCu);
    }

    [*(id *)(a1 + 32) _ensureSubscriptionInformationIsUpToDateForConfiguration:v4];
    [*(id *)(a1 + 32) _updateEnhancedAudioAvailabilityIfNeeded];
    [*(id *)(a1 + 32) _updateHTTPCookieStoreForContentRestrictions];
    [*(id *)(a1 + 32) _ensureURLResolutionCacheFileExists];
    [*(id *)(a1 + 32) _updateAccountServerCachedData];
    [*(id *)(a1 + 32) setStartupSequenceCompleted:1];
    dispatch_group_leave(*(dispatch_group_t *)(*(void *)(a1 + 32) + 56LL));
    uint64_t v46 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v47 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v50 = v47;
      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Server setup completed",  buf,  0xCu);
    }
  }
}

id sub_10005AAAC(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _updateAllowsExplicitContentSettingForConfiguration:a2 automatically:1];
}

uint64_t sub_10005AABC(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 8LL) = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_10005AACC(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 8LL);
  return result;
}

id sub_10005AAE0(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 144) startSystemXPCService];
}

void sub_10005AB10(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[ICPlayActivityServer sharedInstance](&OBJC_CLASS___ICPlayActivityServer, "sharedInstance"));
  [v1 start];

  id v2 = (id)objc_claimAutoreleasedReturnValue( +[CloudContentTasteUpdateRequestListener sharedContentTasteRequestListener]( &OBJC_CLASS___CloudContentTasteUpdateRequestListener,  "sharedContentTasteRequestListener"));
  [v2 start];
}

void sub_10005AB68(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  unsigned __int8 v3 = [v2 isAudioAccessory];

  if ((v3 & 1) != 0)
  {
    uint64_t v4 = 2LL;
  }

  else
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
    unsigned int v6 = [v5 isAppleTV];

    uint64_t v4 = v6;
  }

  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v37 = 134218240;
    uint64_t v38 = v8;
    __int16 v39 = 1024;
    int v40 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - policyType=%d",  (uint8_t *)&v37,  0x12u);
  }

  id v9 = *(void **)(a1 + 32);
  if (!v9[14])
  {
    id v10 = -[ICDAccountManager initWithLibraryManagementPolicy:]( objc_alloc(&OBJC_CLASS___ICDAccountManager),  "initWithLibraryManagementPolicy:",  v4);
    uint64_t v11 = *(void *)(a1 + 32);
    unsigned int v12 = *(void **)(v11 + 112);
    *(void *)(v11 + 112) = v10;

    id v9 = *(void **)(a1 + 32);
  }

  if (!v9[15])
  {
    uint64_t v13 = -[ICDHandlerCoordinator initWithLibraryManagementPolicy:backgroundTaskScheduler:]( objc_alloc(&OBJC_CLASS___ICDHandlerCoordinator),  "initWithLibraryManagementPolicy:backgroundTaskScheduler:",  v4,  *(void *)(a1 + 32));
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = *(void **)(v14 + 120);
    *(void *)(v14 + 120) = v13;

    __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
    unsigned int v17 = [v16 isAppleTV];

    id v9 = *(void **)(a1 + 32);
    if (v17)
    {
      [v9 _retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV];
      id v9 = *(void **)(a1 + 32);
    }
  }

  if (!v9[16])
  {
    id v18 = -[ICDBackgroundTaskManager initWithAccountManager:handlerCoordinator:]( objc_alloc(&OBJC_CLASS___ICDBackgroundTaskManager),  "initWithAccountManager:handlerCoordinator:",  *(void *)(*(void *)(a1 + 32) + 112LL),  *(void *)(*(void *)(a1 + 32) + 120LL));
    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v20 = *(void **)(v19 + 128);
    *(void *)(v19 + 12_Block_object_dispose(va, 8) = v18;
  }

  id v21 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  unsigned __int8 v22 = [v21 isMac];

  if ((v22 & 1) == 0)
  {
    id v23 = *(void **)(a1 + 32);
    if (!v23[17])
    {
      uint64_t v24 = objc_claimAutoreleasedReturnValue( +[ICDelegateAccountStoreServiceListener machServiceListener]( &OBJC_CLASS___ICDelegateAccountStoreServiceListener,  "machServiceListener"));
      uint64_t v25 = *(void *)(a1 + 32);
      uint64_t v26 = *(void **)(v25 + 136);
      *(void *)(v25 + 136) = v24;

      id v23 = *(void **)(a1 + 32);
    }

    if (!v23[18])
    {
      uint64_t v27 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
      id v28 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
      uint64_t v29 = -[ICStoreRequestContext initWithClientInfo:](v27, "initWithClientInfo:", v28);
      uint64_t v30 = objc_claimAutoreleasedReturnValue( +[ICDelegationProviderService systemServiceWithRequestContext:]( &OBJC_CLASS___ICDelegationProviderService,  "systemServiceWithRequestContext:",  v29));
      uint64_t v31 = *(void *)(a1 + 32);
      uint64_t v32 = *(void **)(v31 + 144);
      *(void *)(v31 + 144) = v30;

      id v23 = *(void **)(a1 + 32);
    }

    if (!v23[21])
    {
      __int128 v33 = objc_alloc_init(&OBJC_CLASS___CloudUserNotificationController);
      uint64_t v34 = *(void *)(a1 + 32);
      uint64_t v35 = *(void **)(v34 + 168);
      *(void *)(v34 + 16_Block_object_dispose(va, 8) = v33;

      __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) cloudBadgingService]);
      [*(id *)(*(void *)(a1 + 32) + 168) setBadgeControllerProtocol:v36];
    }
  }

void sub_10005AE40(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Handling SIGTERM event", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  xpc_transaction_exit_clean([WeakRetained stop]);
}

id sub_10005AED4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _updateAllowsExplicitContentSettingForConfiguration:a2 automatically:0];
}

void sub_10005AEE4(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    unsigned __int8 v3 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 138543362;
      uint64_t v5 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Failed to remove explicit playback intents. err=%{public}@",  (uint8_t *)&v4,  0xCu);
    }
  }
}

void sub_10005AF9C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  unsigned int v3 = [v2 isAppleTV];

  if (v3)
  {
    int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) internalOperationQueue]);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    v5[2] = sub_10005B0A8;
    v5[3] = &unk_1001A6B90;
    void v5[4] = *(void *)(a1 + 32);
    [v4 addOperationWithBlock:v5];
  }

void sub_10005B03C(uint64_t a1)
{
  id v2 = *(_BYTE **)(a1 + 32);
  if (v2[10])
  {
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v2 accountManager]);
    id v4 = [v3 libraryManagementPolicy];

    if (v4 == (id)1)
    {
      *(_BYTE *)(*(void *)(a1 + 32) + 10LL) = 0;
      [*(id *)(a1 + 32) _transitionAppleTVToParallelMultiUserLibraryManagementPolicy];
    }
  }

void sub_10005B0A8(uint64_t a1)
{
  id v2 = *(_BYTE **)(a1 + 32);
  if (v2[10])
  {
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue([v2 accountManager]);
    id v4 = [v3 libraryManagementPolicy];

    if (v4 == (id)1)
    {
      *(_BYTE *)(*(void *)(a1 + 32) + 10LL) = 0;
      [*(id *)(a1 + 32) _transitionAppleTVToParallelMultiUserLibraryManagementPolicy];
    }
  }

void sub_10005B114(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[CellularDataEnabled] An active account exists, updating Purchase History...",  buf,  2u);
    }

    else {
      uint64_t v8 = 4LL;
    }
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  *(void *)(a1 + 40)));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentity]);
    [v9 updateJaliscoLibraryWithClientIdentity:v10 forReason:v8 completionHandler:&stru_1001A3268];

    if ([v5 isActiveLocker])
    {
      uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[CellularDataEnabled] An active locker account exists, updating iCloud Music Library...",  v15,  2u);
      }

      else {
        uint64_t v12 = 4LL;
      }
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  *(void *)(a1 + 40)));
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentity]);
      [v13 updateSagaLibraryWithClientIdentity:v14 forReason:v12 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:&stru_1001A3288];
    }
  }
}

void sub_10005B2E0(void *a1)
{
  id v2 = (void *)a1[5];
  unsigned int v3 = *(void **)(a1[4] + 72LL);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10005B354;
  v6[3] = &unk_1001A3248;
  id v4 = v2;
  uint64_t v5 = a1[6];
  id v7 = v4;
  uint64_t v8 = v5;
  [v3 enumerateKeysAndObjectsUsingBlock:v6];
}

void sub_10005B354(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v10 = a2;
  if ([*(id *)(a1 + 32) isEqual:a3])
  {
    id v7 = [v10 copy];
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8LL);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    *a4 = 1;
  }
}

void sub_10005B3C8(uint64_t a1)
{
  uint64_t Name = ICCloudServerSupportedServiceGetName(*(void *)(a1 + 48));
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(Name);
  id v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v18 = 134218242;
      uint64_t v19 = v6;
      __int16 v20 = 2114;
      id v21 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Looking up XPC Listener [%{public}@]",  (uint8_t *)&v18,  0x16u);
    }

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKeyedSubscript:v3]);
    if (!v7)
    {
      switch(*(void *)(a1 + 48))
      {
        case 0LL:
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
          [v8 handleFailureInMethod:*(void *)(a1 + 56) object:*(void *)(a1 + 32) file:@"ICDServer.m" lineNumber:445 description:@"We should never get here"];

          goto LABEL_7;
        case 1LL:
          uint64_t v11 = -[NSXPCListener initWithMachServiceName:]( objc_alloc(&OBJC_CLASS___NSXPCListener),  "initWithMachServiceName:",  @"com.apple.itunescloudd.xpc");
          goto LABEL_13;
        case 2LL:
          id v9 = (NSXPCListener *)objc_claimAutoreleasedReturnValue(+[NSXPCListener anonymousListener](&OBJC_CLASS___NSXPCListener, "anonymousListener"));
          uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) networkAvailabilityService]);
          goto LABEL_18;
        case 3LL:
          uint64_t v11 = (NSXPCListener *)objc_claimAutoreleasedReturnValue(+[NSXPCListener anonymousListener](&OBJC_CLASS___NSXPCListener, "anonymousListener"));
LABEL_13:
          id v9 = v11;
          -[NSXPCListener setDelegate:](v11, "setDelegate:", *(void *)(a1 + 32));
          break;
        case 4LL:
          id v9 = (NSXPCListener *)objc_claimAutoreleasedReturnValue(+[NSXPCListener anonymousListener](&OBJC_CLASS___NSXPCListener, "anonymousListener"));
          uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) cloudServiceStatusMonitor]);
          goto LABEL_18;
        case 5LL:
          id v9 = (NSXPCListener *)objc_claimAutoreleasedReturnValue(+[NSXPCListener anonymousListener](&OBJC_CLASS___NSXPCListener, "anonymousListener"));
          uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) mediaUserStateCenterServer]);
          goto LABEL_18;
        case 6LL:
          id v9 = (NSXPCListener *)objc_claimAutoreleasedReturnValue(+[NSXPCListener anonymousListener](&OBJC_CLASS___NSXPCListener, "anonymousListener"));
          uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) playbackPositionService]);
          goto LABEL_18;
        case 7LL:
          id v9 = (NSXPCListener *)objc_claimAutoreleasedReturnValue(+[NSXPCListener anonymousListener](&OBJC_CLASS___NSXPCListener, "anonymousListener"));
          uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) cloudBadgingService]);
LABEL_18:
          uint64_t v13 = (void *)v12;
          -[NSXPCListener setDelegate:](v9, "setDelegate:", v12);

          break;
        default:
LABEL_7:
          id v9 = 0LL;
          break;
      }

      [*(id *)(*(void *)(a1 + 32) + 72) setObject:v9 forKeyedSubscript:v3];
      -[NSXPCListener resume](v9, "resume");
    }

    uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      int v18 = 134218242;
      uint64_t v19 = v15;
      __int16 v20 = 2114;
      id v21 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "ICDServer %p - Retrieved XPC Listener [%{public}@]",  (uint8_t *)&v18,  0x16u);
    }

    uint64_t v16 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 72) objectForKeyedSubscript:v3]);
    uint64_t v17 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v5 = *(os_log_s **)(v17 + 40);
    *(void *)(v17 + 40) = v16;
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    int v18 = 134217984;
    uint64_t v19 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "ICDServer %p - No XPC listener [unknown service]",  (uint8_t *)&v18,  0xCu);
  }
}

void sub_10005B728(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 138543362;
      *(void *)int v18 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Could not get ICML state reason, error=%{public}@",  (uint8_t *)&v17,  0xCu);
    }

uint64_t sub_10005B9DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned int v3 = *(void **)(v2 + 72);
  *(void *)(v2 + 72) = 0LL;

  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[CloudMusicSubscriptionStatusServiceListener sharedMusicSubscriptionStatusServiceListener]( &OBJC_CLASS___CloudMusicSubscriptionStatusServiceListener,  "sharedMusicSubscriptionStatusServiceListener"));
  [v4 stop];

  uint64_t v5 = *(void *)(a1 + 32);
  if (*(void *)(v5 + 200))
  {
    dispatch_source_cancel(*(dispatch_source_t *)(v5 + 200));
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 200);
    *(void *)(v6 + 200) = 0LL;

    uint64_t v5 = *(void *)(a1 + 32);
  }

  if (*(_BYTE *)(v5 + 8))
  {
    [(id)v5 _stopAncillaryServices];
    *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = 0;
    uint64_t v5 = *(void *)(a1 + 32);
  }

  [(id)v5 _tearDownKVO];
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 184LL);
  if (result)
  {
    uint64_t result = MSVLogRemoveStateHandler();
    *(void *)(*(void *)(a1 + 32) + 184LL) = 0LL;
  }

  return result;
}

void sub_10005BA94(id a1, NSString *a2, NSXPCListener *a3, BOOL *a4)
{
}

uint64_t sub_10005BA9C(uint64_t a1)
{
  id v1 = &_dispatch_main_q;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10005BB70;
  v4[3] = &unk_1001A3168;
  objc_copyWeak(&v5, &location);
  uint64_t v2 = MSVLogAddStateHandler(&_dispatch_main_q, @"iTunesCloudService State", v4);
  objc_destroyWeak(&v5);

  objc_destroyWeak(&location);
  return v2;
}

void sub_10005BB4C(_Unwind_Exception *a1)
{
}

id sub_10005BB68(uint64_t a1)
{
  return [*(id *)(a1 + 32) _completeStartupSequenceIfNeeded];
}

uint64_t sub_10005BB70(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) != 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    unsigned int v8 = WeakRetained;
    if (WeakRetained)
    {
      unsigned int v9 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained _stateDump]);
      uint64_t v6 = v5[2](v5, v9);
    }

    else
    {
      uint64_t v6 = 0LL;
    }
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6;
}

void sub_10005BC38(id a1)
{
  id v1 = -[ICDServer _init](objc_alloc(&OBJC_CLASS___ICDServer), "_init");
  uint64_t v2 = (void *)qword_1001DB688;
  qword_1001DB688 = (uint64_t)v1;
}

void sub_10005C328(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v3 setPrivacyContext:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v8 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT DISTINCT (fetchable_artwork_token), purchase_history_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = 0 JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token",  &off_1001B4B18));

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10005C438;
  void v9[3] = &unk_1001A6B20;
  id v6 = *(id *)(a1 + 32);
  char v12 = *(_BYTE *)(a1 + 48);
  id v10 = v6;
  id v11 = v5;
  id v7 = v5;
  [v8 enumerateRowsWithBlock:v9];
  [*(id *)(a1 + 40) importCloudArtworkForRequests:v7];
}

void sub_10005C438(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = (id)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  id v4 = [v3 int64ForColumnIndex:1];
  id v5 = [v3 intForColumnIndex:2];

  id v6 = -[CloudArtworkImportRequest initWithClientIdentity:]( objc_alloc(&OBJC_CLASS___CloudArtworkImportRequest),  "initWithClientIdentity:",  *(void *)(a1 + 32));
  -[CloudArtworkImportRequest setCloudID:](v6, "setCloudID:", v4);
  -[CloudArtworkImportRequest setToken:](v6, "setToken:", v7);
  -[CloudArtworkImportRequest setMediaType:](v6, "setMediaType:", v5);
  -[CloudArtworkImportRequest setArtworkType:](v6, "setArtworkType:", 2LL);
  -[CloudArtworkImportRequest setAllowsCellularData:](v6, "setAllowsCellularData:", *(unsigned __int8 *)(a1 + 48));
  [*(id *)(a1 + 40) addObject:v6];
}

void sub_10005C504(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v3 setPrivacyContext:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v9 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT DISTINCT (fetchable_artwork_token), purchase_history_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = 0 JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token",  &off_1001B4B00));

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_10005C614;
  v10[3] = &unk_1001A3720;
  id v6 = *(id *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  id v11 = v6;
  uint64_t v12 = v7;
  id v13 = v5;
  id v8 = v5;
  [v9 enumerateRowsWithBlock:v10];
  [*(id *)(a1 + 40) importCloudArtworkForRequests:v8];
}

void sub_10005C614(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = (id)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  id v4 = [v3 int64ForColumnIndex:1];
  id v5 = [v3 intForColumnIndex:2];

  id v6 = -[CloudArtworkImportRequest initWithClientIdentity:]( objc_alloc(&OBJC_CLASS___CloudArtworkImportRequest),  "initWithClientIdentity:",  *(void *)(a1 + 32));
  -[CloudArtworkImportRequest setCloudID:](v6, "setCloudID:", v4);
  -[CloudArtworkImportRequest setToken:](v6, "setToken:", v7);
  -[CloudArtworkImportRequest setMediaType:](v6, "setMediaType:", v5);
  -[CloudArtworkImportRequest setArtworkType:](v6, "setArtworkType:", 1LL);
  -[CloudArtworkImportRequest setAllowsCellularData:]( v6,  "setAllowsCellularData:",  [*(id *)(a1 + 40) _cellularDataAllowedForMediaType:v5]);
  [*(id *)(a1 + 48) addObject:v6];
}

void sub_10005C8C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10005CFE0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10005D284(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v18 = 0LL;
  __int16 v19 = &v18;
  uint64_t v20 = 0x3032000000LL;
  id v21 = sub_10005D5D4;
  unsigned __int8 v22 = sub_10005D5E4;
  id v23 = (id)objc_opt_new(&OBJC_CLASS___NSString, v4);
  uint64_t v15 = 0LL;
  unsigned int v16 = &v15;
  uint64_t v17 = 0x2020000000LL;
  id v5 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v3 setPrivacyContext:v5];

  if (*(void *)(a1 + 56) == 1LL)
  {
    v26[0] = &off_1001B3CB8;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 64)));
    v26[1] = v6;
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v26, 2LL));
    uint64_t v8 = objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN item_artist ON entity_pid = item_artist_pid AND entity_type = ? WHERE entity_pid = ?",  v7));
  }

  else
  {
    v25[0] = &off_1001B3CD0;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 64)));
    v25[1] = v6;
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v25, 2LL));
    uint64_t v8 = objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT fetchable_artwork_token, store_id FROM best_artwork_token JOIN album_artist ON entity_pid = album_artist_pid AND entity_type = ? WHERE entity_pid = ?",  v7));
  }

  id v9 = (void *)v8;

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10005D5EC;
  v14[3] = &unk_1001A37E8;
  void v14[4] = &v18;
  void v14[5] = &v15;
  [v9 enumerateRowsWithBlock:v14];
  if ([(id)v19[5] length] && v16[3])
  {
    id v10 = -[CloudArtworkImportRequest initWithClientIdentity:]( objc_alloc(&OBJC_CLASS___CloudArtworkImportRequest),  "initWithClientIdentity:",  *(void *)(a1 + 32));
    -[CloudArtworkImportRequest setCloudID:](v10, "setCloudID:", v16[3]);
    -[CloudArtworkImportRequest setToken:](v10, "setToken:", v19[5]);
    -[CloudArtworkImportRequest setMediaType:](v10, "setMediaType:", 8LL);
    -[CloudArtworkImportRequest setArtworkType:](v10, "setArtworkType:", 4LL);
    -[CloudArtworkImportRequest setAllowsCellularData:](v10, "setAllowsCellularData:", *(unsigned __int8 *)(a1 + 72));
    -[CloudArtworkImportRequest setCompletionHandler:](v10, "setCompletionHandler:", *(void *)(a1 + 48));
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkImporter]);
    uint64_t v24 = v10;
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v24, 1LL));
    [v11 importCloudArtworkForRequests:v12];

LABEL_9:
    goto LABEL_10;
  }

  uint64_t v13 = *(void *)(a1 + 48);
  if (v13)
  {
    id v10 = (CloudArtworkImportRequest *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2015LL,  0LL));
    (*(void (**)(uint64_t, CloudArtworkImportRequest *))(v13 + 16))(v13, v10);
    goto LABEL_9;
  }

void sub_10005D5A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005D5D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10005D5E4(uint64_t a1)
{
}

void sub_10005D5EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  id v7 = [v3 int64ForColumnIndex:1];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v7;
}

void sub_10005D658(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);

  if (v2)
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v6 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Running second artist hero image update",  v6,  2u);
    }

    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) operationQueue]);
    [v5 addOperation:v4];

    [*(id *)(a1 + 32) setCurrentUpdateOperation:v4];
    [*(id *)(a1 + 32) setFollowupUpdateOpertion:0];
  }

void sub_10005D740(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10005D78C(uint64_t a1)
{
  BOOL v2 = *(void *)(a1 + 40) != 0LL;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
  CPSetPowerAssertionWithIdentifier(v2, v3);

  unint64_t v5 = *(void *)(a1 + 40);
  unint64_t v4 = *(void *)(a1 + 48);
  if (v4)
  {
    if (!v5)
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) watchdog]);
      [v6 suspend];

      id v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
        *(_DWORD *)buf = 138543362;
        uint64_t v14 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Releasing power assertion: %{public}@",  buf,  0xCu);
      }

      [*(id *)(a1 + 32) _artistHeroImageUpdateFinished];
      return;
    }

    goto LABEL_10;
  }

  if (!v5)
  {
LABEL_10:
    if (v5 < v4)
    {
      id v12 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) watchdog]);
      [v12 resume];
    }

    return;
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) watchdog]);
  [v9 resume];

  uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
    *(_DWORD *)buf = 138543362;
    uint64_t v14 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Taking power assertion: %{public}@", buf, 0xCu);
  }
}

id sub_10005D988(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40))
  {
    BOOL v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) operationQueue]);
    [v2 waitUntilAllOperationsAreFinished];
  }

  return [*(id *)(a1 + 32) setCurrentUpdateOperation:0];
}

void sub_10005D9D8(uint64_t a1)
{
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
  id v3 = [v2 currentRevision];

  unint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
  unint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForDatabaseProperty:@"MLArtistHeroImageImportDatabaseRevision"]);
  id v6 = [v5 longLongValue];

  id v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if ((uint64_t)v3 > (uint64_t)v6)
  {
    if (v8)
    {
      *(_DWORD *)buf = 134217984;
      id v109 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Searching for artists added since database revision %lld",  buf,  0xCu);
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    id v11 = +[ML3Artist revisionTrackingCode](&OBJC_CLASS___ML3Artist, "revisionTrackingCode");
    v104[0] = _NSConcreteStackBlock;
    v104[1] = 3221225472LL;
    v104[2] = sub_10005E460;
    v104[3] = &unk_1001A3748;
    id v7 = v9;
    os_log_t v105 = v7;
    [v10 enumeratePersistentIDsAfterRevision:v6 revisionTrackingCode:v11 maximumRevisionType:0 forMediaTypes:0 inUsersLibrary:0 usingBlock:v104];

    id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    id v14 = +[ML3AlbumArtist revisionTrackingCode](&OBJC_CLASS___ML3AlbumArtist, "revisionTrackingCode");
    v102[0] = _NSConcreteStackBlock;
    v102[1] = 3221225472LL;
    v102[2] = sub_10005E4B4;
    v102[3] = &unk_1001A3748;
    id v15 = v12;
    id v103 = v15;
    [v13 enumeratePersistentIDsAfterRevision:v6 revisionTrackingCode:v14 maximumRevisionType:0 forMediaTypes:0 inUsersLibrary:0 usingBlock:v102];

    if (-[os_log_s count](v7, "count") || [v15 count])
    {
      unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithSet:](&OBJC_CLASS___NSMutableSet, "setWithSet:", v7));
      [v16 unionSet:v15];
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
      v98[0] = _NSConcreteStackBlock;
      v98[1] = 3221225472LL;
      v98[2] = sub_10005E508;
      v98[3] = &unk_1001A3798;
      id v99 = v16;
      unsigned int v100 = v7;
      id v101 = v15;
      id v18 = v16;
      [v17 databaseConnectionAllowingWrites:0 withBlock:v98];
    }

    id v89 = v15;
    __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s allObjects](v7, "allObjects"));
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithArray:](&OBJC_CLASS___NSMutableArray, "arrayWithArray:", v19));

    id v21 = (void *)objc_claimAutoreleasedReturnValue([v15 allObjects]);
    unsigned __int8 v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithArray:](&OBJC_CLASS___NSMutableArray, "arrayWithArray:", v21));

    if (![v20 count] && !objc_msgSend(v22, "count"))
    {
      __int128 v53 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEFAULT,  "Found zero new artists and zero new album artists to update",  buf,  2u);
      }

      uint64_t v30 = (DetermineArtistStoreIDLookupTypeOperation *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
      sub_10005E640(v30, (uint64_t)v3);
      goto LABEL_69;
    }

    id v23 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      id v24 = [v20 count];
      id v25 = [v22 count];
      *(_DWORD *)buf = 134218240;
      id v109 = v24;
      __int16 v110 = 2048;
      id v111 = v25;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "Found %lu artist(s) and %lu album artist(s) to update",  buf,  0x16u);
    }

    uint64_t v26 = objc_alloc(&OBJC_CLASS___DetermineArtistStoreIDLookupTypeOperation);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkImporter]);
    uint64_t v28 = *(void *)(a1 + 40);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) operationQueue]);
    uint64_t v30 = -[QueueAwareOperation initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:]( v26,  "initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:",  v27,  v28,  v29,  v20,  v22);

    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentUpdateOperation]);
    uint64_t v32 = *(void **)(a1 + 32);
    if (!v31)
    {
      uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue([v32 operationQueue]);
      [v46 addOperation:v30];

      [*(id *)(a1 + 32) setCurrentUpdateOperation:v30];
LABEL_69:

      goto LABEL_70;
    }

    __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 followupUpdateOpertion]);

    uint64_t v34 = *(void **)(a1 + 32);
    if (v33)
    {
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v34 followupUpdateOpertion]);
      unsigned int v36 = [v35 shouldProcessSpecificArtists];

      int v37 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      BOOL v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);
      if (!v36)
      {
        if (v38)
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "A follow-up artist hero image update already exists, it should include the specific artist persistent ids.",  buf,  2u);
        }

        goto LABEL_69;
      }

      if (v38)
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "A follow-up artist hero image update already exists, merging artist persistent ids to update.",  buf,  2u);
      }

      __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentUpdateOperation]);
      int v40 = (void *)objc_claimAutoreleasedReturnValue([v39 artistPersistentIDsToUpdate]);

      __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
      uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v41 artistPersistentIDsToUpdate]);

      uint64_t v86 = v30;
      if (!v20 || v42)
      {
        if (v20 || !v42)
        {
          uint64_t v82 = v22;
          id v44 = objc_msgSend(v42, "mutableCopy", v42);
          __int128 v94 = 0u;
          __int128 v95 = 0u;
          __int128 v96 = 0u;
          __int128 v97 = 0u;
          CC_LONG64 v84 = v20;
          id v57 = v20;
          id v58 = [v57 countByEnumeratingWithState:&v94 objects:v107 count:16];
          if (v58)
          {
            id v59 = v58;
            uint64_t v60 = *(void *)v95;
            do
            {
              for (i = 0LL; i != v59; i = (char *)i + 1)
              {
                if (*(void *)v95 != v60) {
                  objc_enumerationMutation(v57);
                }
                uint64_t v62 = *(void *)(*((void *)&v94 + 1) + 8LL * (void)i);
                if (([v44 containsObject:v62] & 1) == 0
                  && ([v40 containsObject:v62] & 1) == 0)
                {
                  [v44 addObject:v62];
                }
              }

              id v59 = [v57 countByEnumeratingWithState:&v94 objects:v107 count:16];
            }

            while (v59);
          }

          CC_LONG64 v63 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
          [v63 setArtistPersistentIDsToUpdate:v44];

          unsigned __int8 v22 = v82;
          uint64_t v20 = v84;
          uint64_t v42 = v80;
LABEL_50:

          CC_LONG64 v64 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentUpdateOperation]);
          CC_LONG64 v65 = (void *)objc_claimAutoreleasedReturnValue([v64 albumArtistPersistentIDsToUpdate]);

          CC_LONG64 v66 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
          uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue([v66 albumArtistPersistentIDsToUpdate]);

          id v88 = v67;
          if (!v22 || v67)
          {
            if (v22 || !v67)
            {
              CC_LONG64 v85 = v20;
              id v69 = objc_msgSend(v67, "mutableCopy", v42);
              __int128 v90 = 0u;
              __int128 v91 = 0u;
              __int128 v92 = 0u;
              __int128 v93 = 0u;
              uint64_t v83 = v22;
              id v71 = v22;
              id v72 = [v71 countByEnumeratingWithState:&v90 objects:v106 count:16];
              if (v72)
              {
                id v73 = v72;
                uint64_t v74 = *(void *)v91;
                do
                {
                  for (j = 0LL; j != v73; j = (char *)j + 1)
                  {
                    if (*(void *)v91 != v74) {
                      objc_enumerationMutation(v71);
                    }
                    uint64_t v76 = *(void *)(*((void *)&v90 + 1) + 8LL * (void)j);
                    if (([v69 containsObject:v76] & 1) == 0
                      && ([v65 containsObject:v76] & 1) == 0)
                    {
                      [v69 addObject:v76];
                    }
                  }

                  id v73 = [v71 countByEnumeratingWithState:&v90 objects:v106 count:16];
                }

                while (v73);
              }

              uint64_t v77 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
              [v77 setAlbumArtistPersistentIDsToUpdate:v69];

              id v15 = v89;
              unsigned __int8 v22 = v83;
              uint64_t v20 = v85;
              uint64_t v42 = v81;
              goto LABEL_68;
            }

            uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
            CC_LONG64 v70 = v67;
            id v69 = v68;
          }

          else
          {
            [v22 removeObjectsInArray:v65];
            uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
            id v69 = v68;
            CC_LONG64 v70 = v22;
          }

          [v68 setAlbumArtistPersistentIDsToUpdate:v70];
LABEL_68:

          uint64_t v30 = v86;
          goto LABEL_69;
        }

        id v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
        id v44 = v43;
        uint64_t v45 = v42;
      }

      else
      {
        [v20 removeObjectsInArray:v40];
        id v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);
        id v44 = v43;
        uint64_t v45 = v20;
      }

      [v43 setArtistPersistentIDsToUpdate:v45];
      goto LABEL_50;
    }

    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v34 currentUpdateOperation]);
    uint64_t v48 = objc_claimAutoreleasedReturnValue([v47 artistPersistentIDsToUpdate]);

    int v87 = (void *)v48;
    [v20 removeObjectsInArray:v48];
    -[QueueAwareOperation setArtistPersistentIDsToUpdate:](v30, "setArtistPersistentIDsToUpdate:", v20);
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentUpdateOperation]);
    uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v49 albumArtistPersistentIDsToUpdate]);

    [v22 removeObjectsInArray:v50];
    -[QueueAwareOperation setAlbumArtistPersistentIDsToUpdate:](v30, "setAlbumArtistPersistentIDsToUpdate:", v22);
    uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue(-[QueueAwareOperation artistPersistentIDsToUpdate](v30, "artistPersistentIDsToUpdate"));
    if ([v51 count])
    {
      __int128 v52 = v30;
    }

    else
    {
      __int128 v52 = v30;
      __int128 v54 = (void *)objc_claimAutoreleasedReturnValue(-[QueueAwareOperation albumArtistPersistentIDsToUpdate](v30, "albumArtistPersistentIDsToUpdate"));
      id v55 = [v54 count];

      if (!v55)
      {
        os_log_t v78 = sub_1000DD848();
        uint64_t v79 = (os_log_s *)objc_claimAutoreleasedReturnValue(v78);
        if (os_log_type_enabled(v79, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_DEFAULT,  "The artist hero image update that is already in progress will already update all of the requests artists, sk ipping a follow-up update.",  buf,  2u);
        }

        uint64_t v30 = v52;
        goto LABEL_38;
      }
    }

    uint64_t v56 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v56, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEFAULT,  "Artist hero image update already in progress: scheduling a follow-up update.",  buf,  2u);
    }

    uint64_t v30 = v52;
    [*(id *)(a1 + 32) setFollowupUpdateOpertion:v52];
LABEL_38:

    goto LABEL_69;
  }

  if (v8)
  {
    *(_WORD *)buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Database revision is the same as the last update.",  buf,  2u);
  }

LABEL_70:
}

void sub_10005E460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a5)
  {
    unint64_t v5 = *(void **)(a1 + 32);
    id v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    [v5 addObject:v6];
  }

void sub_10005E4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a5)
  {
    unint64_t v5 = *(void **)(a1 + 32);
    id v6 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    [v5 addObject:v6];
  }

void sub_10005E508(id *a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[ML3DatabaseStatementRenderer defaultRenderer]( &OBJC_CLASS___ML3DatabaseStatementRenderer,  "defaultRenderer"));
  id v8 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v4,  "statementWithPrefix:inParameterCount:",  @"SELECT entity_pid FROM artwork_token LEFT OUTER JOIN artwork USING (artwork_token) WHERE artwork_token.artwork_source_type = ? AND relative_path != '' AND entity_pid",  (char *)objc_msgSend(a1[4], "count") + 1));

  unint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithObject:](&OBJC_CLASS___NSMutableArray, "arrayWithObject:", &off_1001B3CA0));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a1[4] allObjects]);
  [v5 addObjectsFromArray:v6];

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 executeQuery:v8 withParameters:v5]);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_100064E60;
  void v9[3] = &unk_1001A3770;
  id v10 = a1[5];
  id v11 = a1[6];
  [v7 enumerateRowsWithBlock:v9];
}

void sub_10005E640(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v3 setValue:v4 forDatabaseProperty:@"MLArtistHeroImageImportDatabaseRevision"];
}

LABEL_61:
  _Block_object_dispose(&v62, 8);
}

void sub_10005EFC4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_10005F00C(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_10005F33C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v28 = a3;
  id v30 = (id)objc_claimAutoreleasedReturnValue( +[NSMutableSet setWithCapacity:]( NSMutableSet,  "setWithCapacity:",  (char *)[v6 count] + (void)objc_msgSend(v28, "count")));
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  id obj = v6;
  id v7 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v37;
    uint64_t v10 = ML3ArtistPropertyStoreID;
    uint64_t v11 = ML3ArtistPropertyName;
    do
    {
      id v12 = 0LL;
      do
      {
        if (*(void *)v37 != v9) {
          objc_enumerationMutation(obj);
        }
        id v13 = +[ML3Artist newWithPersistentID:inLibrary:]( ML3Artist,  "newWithPersistentID:inLibrary:",  [*(id *)(*((void *)&v36 + 1) + 8 * (void)v12) longLongValue],  v5);
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v13 valueForProperty:v10]);
        id v15 = [v14 longLongValue];

        if (!v15)
        {
          unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v13 valueForProperty:v11]);
          if ([v16 length]) {
            [v30 addObject:v16];
          }
        }

        id v12 = (char *)v12 + 1;
      }

      while (v8 != v12);
      id v8 = [obj countByEnumeratingWithState:&v36 objects:v41 count:16];
    }

    while (v8);
  }

  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id v17 = v28;
  id v18 = [v17 countByEnumeratingWithState:&v32 objects:v40 count:16];
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v33;
    uint64_t v21 = ML3AlbumArtistPropertyStoreID;
    uint64_t v29 = ML3AlbumArtistPropertyName;
    do
    {
      unsigned __int8 v22 = 0LL;
      do
      {
        if (*(void *)v33 != v20) {
          objc_enumerationMutation(v17);
        }
        id v23 = +[ML3AlbumArtist newWithPersistentID:inLibrary:]( ML3AlbumArtist,  "newWithPersistentID:inLibrary:",  [*(id *)(*((void *)&v32 + 1) + 8 * (void)v22) longLongValue],  v5);
        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 valueForProperty:v21]);
        id v25 = [v24 longLongValue];

        if (!v25)
        {
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v23 valueForProperty:v29]);
          if ([v26 length]) {
            [v30 addObject:v26];
          }
        }

        unsigned __int8 v22 = (char *)v22 + 1;
      }

      while (v19 != v22);
      id v19 = [v17 countByEnumeratingWithState:&v32 objects:v40 count:16];
    }

    while (v19);
  }

  return v30;
}

id sub_10005F62C(void *a1)
{
  id v1 = a1;
  BOOL v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  id v3 = sub_100062468(v1);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  uint64_t v19 = ML3ArtistPropertyName;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v19, 1LL));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_1000624F0;
  v16[3] = &unk_1001A6EC8;
  id v6 = v2;
  id v17 = v6;
  [v4 enumeratePersistentIDsAndProperties:v5 usingBlock:v16];

  id v7 = sub_100062538(v1);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  uint64_t v18 = ML3AlbumArtistPropertyName;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v18, 1LL));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_1000625C0;
  v14[3] = &unk_1001A6EC8;
  id v10 = v6;
  id v15 = v10;
  [v8 enumeratePersistentIDsAndProperties:v9 usingBlock:v14];

  uint64_t v11 = v15;
  id v12 = v10;

  return v12;
}

void sub_10005F7DC(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artistNameLibraryMatchURL]);
  v26[0] = @"kind";
  v26[1] = @"an";
  v27[0] = @"artist";
  v27[1] = v5;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v27,  v26,  2LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ic_URLByAppendingQueryParameters:", v7));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](&OBJC_CLASS___NSMutableURLRequest, "requestWithURL:", v8));

  [v9 setTimeoutInterval:180.0];
  id v10 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v9,  *(void *)(a1 + 40));
  dispatch_semaphore_t v11 = dispatch_semaphore_create(0LL);
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  v20[2] = sub_100062014;
  v20[3] = &unk_1001A56E8;
  id v13 = v5;
  uint64_t v14 = *(void *)(a1 + 32);
  id v21 = v13;
  uint64_t v22 = v14;
  id v15 = v11;
  id v23 = v15;
  [v12 enqueueDataRequest:v10 withCompletionHandler:v20];

  dispatch_time_t v16 = dispatch_time(0LL, 300000000000LL);
  if (dispatch_semaphore_wait(v15, v16))
  {
    id v17 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      int v25 = 300;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "Failed to receive response for artist id look up request after %d seconds, cancelling request",  buf,  8u);
    }

    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    [v18 cancelRequest:v10];
  }

  if ([*(id *)(a1 + 32) isCancelled])
  {
    uint64_t v19 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Noticed cancel flag while looking up artist store ids by name, stopping...",  buf,  2u);
    }

    *a3 = 1;
  }
}

void sub_1000602F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT store_id FROM item_artist LEFT OUTER JOIN artwork_token ON item_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0" withParameters:&off_1001B4B30]);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_100060404;
  void v8[3] = &unk_1001A6548;
  id v9 = *(id *)(a1 + 32);
  [v4 enumerateRowsWithBlock:v8];
  id v5 = (id)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT store_id FROM album_artist LEFT OUTER JOIN artwork_token ON album_artist_pid = entity_pid AND entity_type = ? AND artwork_type = ? AND artwork_source_type = ? WHERE store_id != 0" withParameters:&off_1001B4B48]);

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10006044C;
  v6[3] = &unk_1001A6548;
  id v7 = *(id *)(a1 + 32);
  [v5 enumerateRowsWithBlock:v6];
}

void sub_100060404(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue([a2 objectAtIndexedSubscript:0]);
  [v2 addObject:v3];
}

void sub_10006044C(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue([a2 objectAtIndexedSubscript:0]);
  [v2 addObject:v3];
}

void sub_100060494(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  id v8 = v6;
  id v9 = [v8 countByEnumeratingWithState:&v42 objects:v50 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v43;
    do
    {
      for (i = 0LL; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v43 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v42 + 1) + 8 * (void)i) stringValue]);
        [v7 addObject:v13];
      }

      id v10 = [v8 countByEnumeratingWithState:&v42 objects:v50 count:16];
    }

    while (v10);
  }

  id v14 = objc_alloc_init(&OBJC_CLASS___ICStorePlatformRequest);
  id v15 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
  dispatch_time_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  id v17 = -[ICStoreRequestContext initWithIdentity:](v15, "initWithIdentity:", v16);

  [v14 setRequestContext:v17];
  [v14 setItemIdentifiers:v7];
  [v14 setPersonalizationStyle:1];
  [v14 setProtocolVersion:@"2"];
  dispatch_semaphore_t v18 = dispatch_semaphore_create(0LL);
  uint64_t v19 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    id v47 = v14;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Sending lookup request: %p", buf, 0xCu);
  }

  __int128 v34 = _NSConcreteStackBlock;
  uint64_t v35 = 3221225472LL;
  __int128 v36 = sub_100061E60;
  __int128 v37 = &unk_1001A38B0;
  id v20 = v8;
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = *(void **)(a1 + 40);
  id v38 = v20;
  uint64_t v39 = v21;
  id v40 = v22;
  id v23 = v18;
  __int128 v41 = v23;
  id v24 = [v14 performWithResponseHandler:&v34];
  int v25 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    id v47 = v14;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Waiting for lookup request: %p", buf, 0xCu);
  }

  dispatch_time_t v26 = dispatch_time(0LL, 300000000000LL);
  uint64_t v27 = dispatch_semaphore_wait(v23, v26);
  id v28 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  BOOL v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);
  if (v27)
  {
    if (!v29) {
      goto LABEL_18;
    }
    *(_DWORD *)buf = 134218240;
    id v47 = v14;
    __int16 v48 = 1024;
    int v49 = 300;
    id v30 = "Failed to receive response for lookup request: %p after %d seconds";
    uint64_t v31 = v28;
    uint32_t v32 = 18;
  }

  else
  {
    if (!v29) {
      goto LABEL_18;
    }
    *(_DWORD *)buf = 134217984;
    id v47 = v14;
    id v30 = "Received response for lookup request: %p";
    uint64_t v31 = v28;
    uint32_t v32 = 12;
  }

  _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, v30, buf, v32);
LABEL_18:

  if (objc_msgSend(*(id *)(a1 + 32), "isCancelled", v34, v35, v36, v37))
  {
    __int128 v33 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Noticed cancel flag while looking up artist hero image URLs, stopping...",  buf,  2u);
    }

    *a4 = 1;
  }
}

uint64_t sub_1000608C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_1000616FC;
  v7[3] = &unk_1001A3900;
  id v4 = *(void **)(a1 + 32);
  void v7[4] = *(void *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v9 = v3;
  id v5 = v3;
  [v4 enumerateObjectsUsingBlock:v7];

  return 1LL;
}

void sub_100060D88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

void sub_100060DC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN item_artist ON item_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token",  &off_1001B4B60));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1000614AC;
  void v8[3] = &unk_1001A6548;
  id v9 = *(id *)(a1 + 32);
  [v4 enumerateRowsWithBlock:v8];
  id v5 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT DISTINCT (fetchable_artwork_token), store_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token LEFT OUTER JOIN album_artist ON album_artist_pid = entity_pid WHERE artwork_token IS NULL AND entity_type = ? AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token",  &off_1001B4B78));

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_100061538;
  v6[3] = &unk_1001A6548;
  id v7 = *(id *)(a1 + 32);
  [v5 enumerateRowsWithBlock:v6];
}

Class sub_100060ED4(uint64_t a1)
{
  id v6 = 0LL;
  if (!qword_1001DB6D8)
  {
    __int128 v7 = off_1001A3970;
    uint64_t v8 = 0LL;
    qword_1001DB6D8 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB6D8)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudArtistHeroImageImporter.m",  29,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("MPMediaLibrary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPMediaLibraryClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudArtistHeroImageImporter.m",  30,  @"Unable to find class %s",  "MPMediaLibrary");

LABEL_10:
    __break(1u);
  }

  qword_1001DB6D0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_100061070(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v8));
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary artworkTokenForArtistHeroURL:]( &OBJC_CLASS___ML3MusicLibrary,  "artworkTokenForArtistHeroURL:",  v9));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary artworkRelativePathFromToken:]( &OBJC_CLASS___ML3MusicLibrary,  "artworkRelativePathFromToken:",  v10));
  if (([*(id *)(a1 + 32) hasOriginalArtworkForRelativePath:v11] & 1) == 0)
  {
    dispatch_time_t v16 = objc_alloc(&OBJC_CLASS___CloudArtworkImportRequest);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentity]);
    os_log_t v15 = -[CloudArtworkImportRequest initWithClientIdentity:](v16, "initWithClientIdentity:", v17);

    dispatch_semaphore_t v18 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v23 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Creating request for artwork token: %{public}@",  buf,  0xCu);
    }

    -[os_log_s setCloudID:](v15, "setCloudID:", [v7 longLongValue]);
    -[os_log_s setToken:](v15, "setToken:", v8);
    -[os_log_s setMediaType:](v15, "setMediaType:", 8LL);
    -[os_log_s setArtworkType:](v15, "setArtworkType:", 4LL);
    -[os_log_s setAllowsCellularData:](v15, "setAllowsCellularData:", *(unsigned __int8 *)(a1 + 56));
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    v20[2] = sub_1000613D8;
    v20[3] = &unk_1001A6398;
    id v21 = v10;
    -[os_log_s setCompletionHandler:](v15, "setCompletionHandler:", v20);
    [*(id *)(a1 + 48) addObject:v15];

    goto LABEL_10;
  }

  id v12 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v23 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Found hero image on disk for artwork token: %{public}@, attempting to import into database...",  buf,  0xCu);
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
  unsigned int v14 = [v13 importExistingOriginalArtworkWithArtworkToken:v10 artworkType:4 sourceType:500 mediaType:8];

  if (v14)
  {
    os_log_t v15 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      id v23 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Inserted artist hero image for artwork token: %{public}@",  buf,  0xCu);
    }

void sub_1000613D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138543618;
      uint64_t v7 = v5;
      __int16 v8 = 2114;
      id v9 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Import request for artwork token: %{public}@ failed with error: %{public}@",  (uint8_t *)&v6,  0x16u);
    }
  }
}

void sub_1000614AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  id v4 = [v3 int64ForColumnIndex:1];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v4));
  [*(id *)(a1 + 32) setObject:v6 forKey:v5];
}

void sub_100061538(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  id v4 = [v3 int64ForColumnIndex:1];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v4));
  [*(id *)(a1 + 32) setObject:v6 forKey:v5];
}

void sub_1000616FC(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5 = a2;
  if ([*(id *)(a1 + 32) isCancelled])
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Cancelled while processing artist artwork tokens.",  buf,  2u);
    }

    if (a3) {
      *a3 = 1;
    }
  }

  else
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:v5]);
    if (v7)
    {
      __int16 v48 = v7;
      __int16 v8 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary artworkTokenForArtistHeroURL:]( &OBJC_CLASS___ML3MusicLibrary,  "artworkTokenForArtistHeroURL:",  v7));
      id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
      int v49 = v5;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3ArtistPropertyStoreID,  [v5 longLongValue]));
      id v12 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Artist queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Artist,  "queryWithLibrary:predicate:",  v10,  v11));

      v63[0] = _NSConcreteStackBlock;
      v63[1] = 3221225472LL;
      v63[2] = sub_100061DC8;
      v63[3] = &unk_1001A6458;
      id v13 = v9;
      id v64 = v13;
      id v47 = v12;
      [v12 enumeratePersistentIDsUsingBlock:v63];
      __int128 v61 = 0u;
      __int128 v62 = 0u;
      __int128 v59 = 0u;
      __int128 v60 = 0u;
      id obj = v13;
      id v14 = [obj countByEnumeratingWithState:&v59 objects:v72 count:16];
      if (v14)
      {
        id v15 = v14;
        uint64_t v16 = *(void *)v60;
        uint64_t v50 = ML3ArtistPropertyName;
        do
        {
          for (i = 0LL; i != v15; i = (char *)i + 1)
          {
            if (*(void *)v60 != v16) {
              objc_enumerationMutation(obj);
            }
            dispatch_semaphore_t v18 = *(void **)(*((void *)&v59 + 1) + 8LL * (void)i);
            id v19 = [v18 longLongValue];
            id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
            id v21 = +[ML3Artist newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Artist,  "newWithPersistentID:inLibrary:",  v19,  v20);

            if (v21)
            {
              uint64_t v22 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
              if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
              {
                id v23 = [v18 longLongValue];
                id v24 = (void *)objc_claimAutoreleasedReturnValue([v21 valueForProperty:v50]);
                *(_DWORD *)buf = 138543874;
                uint64_t v67 = v8;
                __int16 v68 = 2048;
                id v69 = v23;
                __int16 v70 = 2114;
                id v71 = v24;
                _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Setting artist hero image artwork_token '%{public}@' for item_artist with pid: %lld (name = %{public}@)",  buf,  0x20u);
              }

              int v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
              objc_msgSend( v25,  "importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:",  objc_msgSend(v21, "persistentID"),  2,  v8,  4,  500,  *(void *)(a1 + 48));

              dispatch_time_t v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
              objc_msgSend( v26,  "updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:",  objc_msgSend(v21, "persistentID"),  2,  4,  *(void *)(a1 + 48),  0.0);
            }
          }

          id v15 = [obj countByEnumeratingWithState:&v59 objects:v72 count:16];
        }

        while (v15);
      }

      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
      id v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
      BOOL v29 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3AlbumArtistPropertyStoreID,  [v49 longLongValue]));
      id v30 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AlbumArtist queryWithLibrary:predicate:]( &OBJC_CLASS___ML3AlbumArtist,  "queryWithLibrary:predicate:",  v28,  v29));

      v57[0] = _NSConcreteStackBlock;
      v57[1] = 3221225472LL;
      v57[2] = sub_100061E14;
      v57[3] = &unk_1001A6458;
      id v31 = v27;
      id v58 = v31;
      uint64_t v46 = v30;
      [v30 enumeratePersistentIDsUsingBlock:v57];
      __int128 v55 = 0u;
      __int128 v56 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      id v32 = v31;
      id v33 = [v32 countByEnumeratingWithState:&v53 objects:v65 count:16];
      if (v33)
      {
        id v34 = v33;
        uint64_t v35 = *(void *)v54;
        uint64_t v51 = ML3AlbumArtistPropertyName;
        do
        {
          for (j = 0LL; j != v34; j = (char *)j + 1)
          {
            if (*(void *)v54 != v35) {
              objc_enumerationMutation(v32);
            }
            __int128 v37 = *(void **)(*((void *)&v53 + 1) + 8LL * (void)j);
            id v38 = [v37 longLongValue];
            uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
            id v40 = +[ML3AlbumArtist newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3AlbumArtist,  "newWithPersistentID:inLibrary:",  v38,  v39);

            if (v40)
            {
              __int128 v41 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
              if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
              {
                id v42 = [v37 longLongValue];
                __int128 v43 = (void *)objc_claimAutoreleasedReturnValue([v40 valueForProperty:v51]);
                *(_DWORD *)buf = 138543874;
                uint64_t v67 = v8;
                __int16 v68 = 2048;
                id v69 = v42;
                __int16 v70 = 2114;
                id v71 = v43;
                _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "Setting artist hero image artwork_token '%{public}@' for album_artist with pid: %lld (name = %{public}@)",  buf,  0x20u);
              }

              __int128 v44 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
              objc_msgSend( v44,  "importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:",  objc_msgSend(v40, "persistentID"),  7,  v8,  4,  500,  *(void *)(a1 + 48));

              __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
              objc_msgSend( v45,  "updateBestArtworkTokenForEntityPersistentID:entityType:artworkType:retrievalTime:usingConnection:",  objc_msgSend(v40, "persistentID"),  7,  4,  *(void *)(a1 + 48),  0.0);
            }
          }

          id v34 = [v32 countByEnumeratingWithState:&v53 objects:v65 count:16];
        }

        while (v34);
      }

      uint64_t v7 = v48;
      id v5 = v49;
    }
  }
}

void sub_100061DC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

void sub_100061E14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

void sub_100061E60(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  id obj = *(id *)(a1 + 32);
  id v4 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v19;
    do
    {
      for (i = 0LL; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v19 != v6) {
          objc_enumerationMutation(obj);
        }
        __int16 v8 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 stringValue]);
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v3 itemForIdentifier:v9]);

        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 metadataDictionary]);
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKey:@"artwork"]);

        uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSDictionary, v13);
        if ((objc_opt_isKindOfClass(v12, v14) & 1) != 0)
        {
          uint64_t v15 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) _imageURLFromArtworkInfo:v12]);
          if (v15)
          {
            uint64_t v16 = (void *)v15;
            [*(id *)(a1 + 48) setObject:v15 forKey:v8];
          }
        }
      }

      id v5 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    }

    while (v5);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

void sub_100062014(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 urlResponse]);
  if ([v4 statusCode] == (id)200)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 parsedBodyDictionary]);
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "Artwork_Oversize");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      id v36 = v7;
      __int16 v37 = 2114;
      id v38 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Library match results for '%{public}@': %{public}@",  buf,  0x16u);
    }
  }

  else
  {
    id v5 = 0LL;
  }

  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKey:@"id"]);
  if ((objc_opt_respondsToSelector(v8, "longLongValue") & 1) != 0)
  {
    id v9 = [v8 longLongValue];
    if (v9)
    {
      id v32 = v9;
      id v10 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToValue:",  ML3ArtistPropertyName,  *(void *)(a1 + 32)));
      v34[0] = v10;
      uint64_t v29 = ML3ArtistPropertyStoreID;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:"));
      v34[1] = v11;
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v34, 2LL));
      uint64_t v13 = objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v12));

      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
      id v31 = (void *)v13;
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[ML3Artist anyInLibrary:predicate:](&OBJC_CLASS___ML3Artist, "anyInLibrary:predicate:", v14, v13));

      if (v15)
      {
        uint64_t v16 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          id v17 = *(void **)(a1 + 32);
          *(_DWORD *)buf = 134218242;
          id v36 = v32;
          __int16 v37 = 2114;
          id v38 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Setting store_id '%lld' for item_artist with name: '%{public}@'",  buf,  0x16u);
        }

        __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v32));
        [v15 setValue:v18 forProperty:v29];
      }

      id v30 = v15;
      __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToValue:",  ML3AlbumArtistPropertyName,  *(void *)(a1 + 32)));
      v33[0] = v19;
      uint64_t v28 = ML3AlbumArtistPropertyStoreID;
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:"));
      v33[1] = v20;
      __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v33, 2LL));
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v21));

      id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
      id v24 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AlbumArtist anyInLibrary:predicate:]( &OBJC_CLASS___ML3AlbumArtist,  "anyInLibrary:predicate:",  v23,  v22));

      if (v24)
      {
        int v25 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          dispatch_time_t v26 = *(void **)(a1 + 32);
          *(_DWORD *)buf = 134218242;
          id v36 = v32;
          __int16 v37 = 2114;
          id v38 = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Setting store_id '%lld' for album_artist with name: '%{public}@'",  buf,  0x16u);
        }

        uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v32));
        [v24 setValue:v27 forProperty:v28];
      }
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

id sub_100062468(void *a1)
{
  uint64_t v1 = ML3ArtistPropertyStoreID;
  id v2 = a1;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v1,  &off_1001B3D30,  1LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Artist queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Artist,  "queryWithLibrary:predicate:",  v2,  v3));

  return v4;
}

void sub_1000624F0(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = *a3;
  if ([v4 length]) {
    [*(id *)(a1 + 32) addObject:v4];
  }
}

id sub_100062538(void *a1)
{
  uint64_t v1 = ML3AlbumArtistPropertyStoreID;
  id v2 = a1;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  v1,  &off_1001B3D30,  1LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AlbumArtist queryWithLibrary:predicate:]( &OBJC_CLASS___ML3AlbumArtist,  "queryWithLibrary:predicate:",  v2,  v3));

  return v4;
}

void sub_1000625C0(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = *a3;
  if ([v4 length]) {
    [*(id *)(a1 + 32) addObject:v4];
  }
}

LABEL_18:
    goto LABEL_19;
  }

  if (-[QueueAwareOperation shouldProcessSpecificArtists](self, "shouldProcessSpecificArtists")) {
    -[UpdateArtistStoreIDsByMapOperation _updateSpecificArtistStoreIDsUsingAllArtistImagesMap:]( self,  "_updateSpecificArtistStoreIDsUsingAllArtistImagesMap:",  v3);
  }
  else {
    -[UpdateArtistStoreIDsByMapOperation _updateAllArtistStoreIDsUsingAllArtistImagesMap:]( self,  "_updateAllArtistStoreIDsUsingAllArtistImagesMap:",  v3);
  }
  if (!-[UpdateArtistStoreIDsByMapOperation isCancelled](self, "isCancelled"))
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[QueueAwareOperation operationQueue](self, "operationQueue"));
    if (v7)
    {
      uint64_t v15 = objc_alloc(&OBJC_CLASS___UpdateArtistArtworkTokensOperation);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(-[QueueAwareOperation artworkImporter](self, "artworkImporter"));
      id v17 = (void *)objc_claimAutoreleasedReturnValue(-[QueueAwareOperation clientIdentity](self, "clientIdentity"));
      __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(-[QueueAwareOperation artistPersistentIDsToUpdate](self, "artistPersistentIDsToUpdate"));
      __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(-[QueueAwareOperation albumArtistPersistentIDsToUpdate](self, "albumArtistPersistentIDsToUpdate"));
      uint64_t v13 = -[QueueAwareOperation initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:]( v15,  "initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:",  v16,  v17,  v7,  v18,  v19);

      goto LABEL_17;
    }

    goto LABEL_18;
  }

  id v4 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v20 = 0;
    id v5 = "Cancelled after updating album_artist store ids.";
    uint64_t v6 = (uint8_t *)&v20;
    goto LABEL_13;
  }

  PBDataWriterWriteInt64Field(v5, self->_releaseDate, 4LL);
  if ((*(_BYTE *)&self->_has & 0x10) != 0) {
LABEL_6:
  }
    PBDataWriterWriteBOOLField(v5, self->_isExplicit, 5LL);
LABEL_7:
  uint64_t v14 = 0u;
  uint64_t v15 = 0u;
  id v12 = 0u;
  uint64_t v13 = 0u;
  uint64_t v7 = self->_contentFeatures;
  __int16 v8 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v7,  "countByEnumeratingWithState:objects:count:",  &v12,  v16,  16LL);
  if (v8)
  {
    id v9 = v8;
    id v10 = *(void *)v13;
    do
    {
      for (i = 0LL; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        PBDataWriterWriteSubmessage(v5, *(void *)(*((void *)&v12 + 1) + 8LL * (void)i), 6LL);
      }

      id v9 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v7,  "countByEnumeratingWithState:objects:count:",  &v12,  v16,  16LL);
    }

    while (v9);
  }
}

  *((void *)v5 + 3) = self->_releaseDate;
  *((_BYTE *)v5 + 48) |= 4u;
  if ((*(_BYTE *)&self->_has & 0x10) != 0)
  {
LABEL_6:
    *((_BYTE *)v5 + 44) = self->_isExplicit;
    *((_BYTE *)v5 + 48) |= 0x10u;
  }

  self->_releaseDate = *((void *)v4 + 3);
  *(_BYTE *)&self->_has |= 4u;
  if ((*((_BYTE *)v4 + 48) & 0x10) != 0)
  {
LABEL_6:
    self->_isExplicit = *((_BYTE *)v4 + 44);
    *(_BYTE *)&self->_has |= 0x10u;
  }

void sub_100062EF0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

void sub_10006356C(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, _BYTE *a5)
{
  __int16 v8 = *(void **)(a1 + 32);
  id v9 = *a3;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v9]);
  uint64_t v11 = v10;
  if (v10) {
    id v12 = [v10 longLongValue];
  }
  else {
    id v12 = 0LL;
  }
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
  sub_100063960(v13, a2, v9, v12);

  unsigned int v14 = [*(id *)(a1 + 40) isCancelled];
  if (v14)
  {
    uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Noticed cancel flag while updating artist store ids, stopping...",  v16,  2u);
    }

    *a5 = 1;
  }
}

void sub_100063680(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, _BYTE *a5)
{
  __int16 v8 = *(void **)(a1 + 32);
  id v9 = *a3;
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v9]);
  uint64_t v11 = v10;
  if (v10) {
    id v12 = [v10 longLongValue];
  }
  else {
    id v12 = 0LL;
  }
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
  sub_100063794(v13, a2, v9, v12);

  unsigned int v14 = [*(id *)(a1 + 40) isCancelled];
  if (v14)
  {
    uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Noticed cancel flag while updating album_artist store ids, stopping...",  v16,  2u);
    }

    *a5 = 1;
  }
}

void sub_100063794(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  if (a4)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3EntityPropertyPersistentID,  a2));
    os_log_t v10 = (os_log_t)objc_claimAutoreleasedReturnValue( +[ML3AlbumArtist anyInLibrary:predicate:]( &OBJC_CLASS___ML3AlbumArtist,  "anyInLibrary:predicate:",  v7,  v9));

    if (v10)
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a4));
      -[os_log_s setValue:forProperty:](v10, "setValue:forProperty:", v11, ML3AlbumArtistPropertyStoreID);

      id v12 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 134218242;
        id v14 = a4;
        __int16 v15 = 2114;
        id v16 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[Album Artist] Assigned store artist ID %lld to %{public}@",  (uint8_t *)&v13,  0x16u);
      }
    }
  }

  else
  {
    os_log_t v10 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 138543362;
      id v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[Album Artist] No store artist id found for: '%{public}@'",  (uint8_t *)&v13,  0xCu);
    }
  }
}

void sub_100063960(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  if (a4)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3EntityPropertyPersistentID,  a2));
    os_log_t v10 = (os_log_t)objc_claimAutoreleasedReturnValue(+[ML3Artist anyInLibrary:predicate:](&OBJC_CLASS___ML3Artist, "anyInLibrary:predicate:", v7, v9));

    if (v10)
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a4));
      -[os_log_s setValue:forProperty:](v10, "setValue:forProperty:", v11, ML3ArtistPropertyStoreID);

      id v12 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 134218242;
        id v14 = a4;
        __int16 v15 = 2114;
        id v16 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[Item Artist] Assigned store artist ID %lld to %{public}@",  (uint8_t *)&v13,  0x16u);
      }
    }
  }

  else
  {
    os_log_t v10 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 138543362;
      id v14 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[Item Artist] No store artist id found for: '%{public}@'",  (uint8_t *)&v13,  0xCu);
    }
  }
}

void sub_100063B2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
  if ([v7 statusCode] == (id)200)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 bodyData]);
    uint64_t v9 = objc_claimAutoreleasedReturnValue( +[NSJSONSerialization JSONObjectWithData:options:error:]( &OBJC_CLASS___NSJSONSerialization,  "JSONObjectWithData:options:error:",  v8,  0LL,  0LL));
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    id v12 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      id v13 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
      int v17 = 134217984;
      id v18 = v13;
      id v14 = "Received all artist images map with %lu artist ids.";
      __int16 v15 = v12;
      uint32_t v16 = 12;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v17, v16);
    }
  }

  else
  {
    id v12 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = 134218242;
      id v18 = [v7 statusCode];
      __int16 v19 = 2114;
      id v20 = v6;
      id v14 = "Failed to fetch all artist images map [HTTP %ld] - error: %{public}@";
      __int16 v15 = v12;
      uint32_t v16 = 22;
      goto LABEL_6;
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100064150(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bulkArtistNameLibraryMatchURL]);
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLComponents componentsWithURL:resolvingAgainstBaseURL:]( &OBJC_CLASS___NSURLComponents,  "componentsWithURL:resolvingAgainstBaseURL:",  v6,  0LL));

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableArray arrayWithCapacity:]( NSMutableArray,  "arrayWithCapacity:",  [v5 count]));
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  __int128 v34 = 0u;
  id v8 = v5;
  id v9 = [v8 countByEnumeratingWithState:&v31 objects:v37 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v32;
    do
    {
      for (i = 0LL; i != v10; i = (char *)i + 1)
      {
        if (*(void *)v32 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(*((void *)&v31 + 1) + 8 * (void)i) stringByAddingPercentEncodingWithAllowedCharacters:*(void *)(a1 + 40)]);
        id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLQueryItem queryItemWithName:value:]( &OBJC_CLASS___NSURLQueryItem,  "queryItemWithName:value:",  @"an",  v13));
        [v7 addObject:v14];
      }

      id v10 = [v8 countByEnumeratingWithState:&v31 objects:v37 count:16];
    }

    while (v10);
  }

  [v27 setPercentEncodedQueryItems:v7];
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v27 URL]);
  uint32_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](&OBJC_CLASS___NSMutableURLRequest, "requestWithURL:", v15));

  [v16 setTimeoutInterval:180.0];
  int v17 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v16,  *(void *)(a1 + 48));
  dispatch_semaphore_t v18 = dispatch_semaphore_create(0LL);
  __int16 v19 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  void v28[2] = sub_10006450C;
  v28[3] = &unk_1001A56E8;
  v28[4] = *(void *)(a1 + 32);
  id v20 = v8;
  id v29 = v20;
  __int128 v21 = v18;
  id v30 = v21;
  [v19 enqueueDataRequest:v17 withCompletionHandler:v28];

  dispatch_time_t v22 = dispatch_time(0LL, 300000000000LL);
  if (dispatch_semaphore_wait(v21, v22))
  {
    id v23 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 67109120;
      int v36 = 300;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "Failed to receive response for bulk artist id look up request after %d seconds, cancelling request",  buf,  8u);
    }

    id v24 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    [v24 cancelRequest:v17];
  }

  if ([*(id *)(a1 + 32) isCancelled])
  {
    int v25 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Noticed cancel flag while looking up artist store ids by name, stopping...",  buf,  2u);
    }

    *a4 = 1;
  }
}

void sub_10006450C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 urlResponse]);
  if ([v4 statusCode] == (id)200)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 parsedBodyDictionary]);
    id v6 = os_log_create("com.apple.amp.itunescloudd", "Artwork_Oversize");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      __int16 v15 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Bulk library match results: %{public}@",  buf,  0xCu);
    }
  }

  else
  {
    id v5 = 0LL;
  }

  if ([v5 count])
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_100064694;
    v10[3] = &unk_1001A69E0;
    id v11 = *(id *)(a1 + 40);
    id v8 = v5;
    uint64_t v9 = *(void *)(a1 + 32);
    id v12 = v8;
    uint64_t v13 = v9;
    [v7 performDatabaseTransactionWithBlock:v10];
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

uint64_t sub_100064694(id *a1, void *a2)
{
  id v40 = a2;
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  id obj = a1[4];
  id v3 = [obj countByEnumeratingWithState:&v46 objects:v60 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v47;
    uint64_t v36 = ML3ArtistPropertyName;
    uint64_t v42 = ML3ArtistPropertyStoreID;
    uint64_t v35 = ML3AlbumArtistPropertyName;
    uint64_t v41 = ML3AlbumArtistPropertyStoreID;
    id v7 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
    *(void *)&__int128 v4 = 134218242LL;
    __int128 v34 = v4;
    uint64_t v37 = *(void *)v47;
    id v38 = a1;
    do
    {
      id v8 = 0LL;
      id v39 = v5;
      do
      {
        if (*(void *)v47 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void *)(*((void *)&v46 + 1) + 8LL * (void)v8);
        id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "objectForKeyedSubscript:", v9, v34));
        if ((objc_opt_respondsToSelector(v10, "longLongValue") & 1) != 0)
        {
          id v11 = [v10 longLongValue];
          if (v11)
          {
            id v12 = v11;
            __int128 v44 = v10;
            uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToValue:",  v36,  v9));
            v59[0] = v13;
            id v14 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  v42,  0LL));
            v59[1] = v14;
            __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v7[6] arrayWithObjects:v59 count:2]);
            uint64_t v16 = objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v15));

            int v17 = (void *)objc_claimAutoreleasedReturnValue([a1[6] musicLibrary]);
            __int128 v45 = (void *)v16;
            dispatch_semaphore_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Artist anyInLibrary:predicate:]( &OBJC_CLASS___ML3Artist,  "anyInLibrary:predicate:",  v17,  v16));

            if (v18)
            {
              __int16 v19 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
              if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = v34;
                id v56 = v12;
                __int16 v57 = 2114;
                uint64_t v58 = v9;
                _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Setting store_id '%lld' for item_artist with name: '%{public}@'",  buf,  0x16u);
              }

              id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v12));
              __int128 v54 = v20;
              __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v54,  1LL));
              uint64_t v53 = v42;
              dispatch_time_t v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v53,  1LL));
              [v18 setValues:v21 forProperties:v22 usingConnection:v40];
            }

            id v23 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToValue:",  v35,  v9));
            v52[0] = v23;
            id v24 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  v41,  0LL));
            v52[1] = v24;
            int v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v52,  2LL));
            dispatch_time_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v25));

            a1 = v38;
            uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v38[6] musicLibrary]);
            uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AlbumArtist anyInLibrary:predicate:]( &OBJC_CLASS___ML3AlbumArtist,  "anyInLibrary:predicate:",  v27,  v26));

            if (v28)
            {
              id v29 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
              if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = v34;
                id v56 = v12;
                __int16 v57 = 2114;
                uint64_t v58 = v9;
                _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Setting store_id '%lld' for album_artist with name: '%{public}@'",  buf,  0x16u);
              }

              id v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v12));
              uint64_t v51 = v30;
              __int128 v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v51,  1LL));
              uint64_t v50 = v41;
              __int128 v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v50,  1LL));
              [v28 setValues:v31 forProperties:v32 usingConnection:v40];
            }

            uint64_t v6 = v37;
            id v5 = v39;
            id v7 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
            id v10 = v44;
          }
        }

        id v8 = (char *)v8 + 1;
      }

      while (v5 != v8);
      id v5 = [obj countByEnumeratingWithState:&v46 objects:v60 count:16];
    }

    while (v5);
  }

  return 1LL;
}

void sub_100064E60(uint64_t a1, void *a2)
{
  id v3 = [a2 int64ForColumnIndex:0];
  __int128 v4 = *(void **)(a1 + 32);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v3));
  [v4 removeObject:v5];

  uint64_t v6 = *(void **)(a1 + 40);
  id v7 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v3));
  [v6 removeObject:v7];
}

void sub_100064EF8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForDatabaseProperty:@"MLArtistHeroImageImportDate"]);
  [v3 doubleValue];
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:"));

  id v5 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    [v4 timeIntervalSince1970];
    int v27 = 134217984;
    uint64_t v28 = (uint64_t)v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Last artist update time: %{time_t}zd",  (uint8_t *)&v27,  0xCu);
  }

  if (!v4) {
    goto LABEL_7;
  }
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v7 timeIntervalSinceDate:v4];
  double v9 = v8;

  id v10 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    double v11 = (double)*(uint64_t *)(a1 + 48);
    int v27 = 134218240;
    uint64_t v28 = *(void *)&v9;
    __int16 v29 = 2048;
    double v30 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Elapsed time since last artist hero image update: %g, minimum: %g",  (uint8_t *)&v27,  0x16u);
  }

  if (v9 < (double)*(uint64_t *)(a1 + 48))
  {
    __int16 v19 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v27) = 0;
      id v20 = "Skipping update, not enough time has passed since last update.";
      goto LABEL_14;
    }
  }

  else
  {
LABEL_7:
    id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) currentUpdateOperation]);

    if (v12)
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) followupUpdateOpertion]);

      if (!v13)
      {
        id v14 = objc_alloc(&OBJC_CLASS___DetermineArtistStoreIDLookupTypeOperation);
        __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkImporter]);
        uint64_t v16 = *(void *)(a1 + 40);
        int v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) operationQueue]);
        dispatch_semaphore_t v18 = -[QueueAwareOperation initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:]( v14,  "initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:",  v15,  v16,  v17,  0LL,  0LL);
        [*(id *)(a1 + 32) setFollowupUpdateOpertion:v18];
      }

      __int16 v19 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v27) = 0;
        id v20 = "Artist hero image update already in progress: scheduling a maximum of one additional update.";
LABEL_14:
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v20, (uint8_t *)&v27, 2u);
      }
    }

    else
    {
      __int128 v21 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v27) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Updating all artist hero images...",  (uint8_t *)&v27,  2u);
      }

      dispatch_time_t v22 = objc_alloc(&OBJC_CLASS___DetermineArtistStoreIDLookupTypeOperation);
      id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkImporter]);
      uint64_t v24 = *(void *)(a1 + 40);
      int v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) operationQueue]);
      __int16 v19 = -[QueueAwareOperation initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:]( v22,  "initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:",  v23,  v24,  v25,  0LL,  0LL);

      dispatch_time_t v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) operationQueue]);
      [v26 addOperation:v19];

      [*(id *)(a1 + 32) setCurrentUpdateOperation:v19];
    }
  }
}

void sub_1000652B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained accessQueue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100065340;
    block[3] = &unk_1001A6B90;
    id v5 = v2;
    dispatch_async(v3, block);
  }
}

void sub_100065340(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "Artwork_Oversize");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) operationQueue]);
    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 operations]);
    int v8 = 138543362;
    double v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Watchdog fired, operation queue contents: %{public}@",  (uint8_t *)&v8,  0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
  CPSetPowerAssertionWithIdentifier(0LL, v5);

  double v6 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
    int v8 = 138543362;
    double v9 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "Watchdog fired, releasing power assertion: %{public}@",  (uint8_t *)&v8,  0xCu);
  }
}

id sub_1000666BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _savePendingChanges:0];
}

uint64_t sub_1000666C8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000666D8(uint64_t a1)
{
}

void sub_1000666E0(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _pendingChanges]);
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  __int128 v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100066718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  if (v6) {
    return _[v5 _addPendingChangesForContentTasteUpdateOperation:v7 invalidateLocalCache:*(unsigned __int8 *)(a1 + 56)];
  }
  else {
    return _objc_msgSend(v5, "_removePendingChangesForContentTasteUpdateOperation:", v7, a4);
  }
}

void sub_100066DA8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  int v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      *(_DWORD *)buf = 138543618;
      uint64_t v28 = v9;
      __int16 v29 = 2114;
      double v30 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished request to end collaboration error=%{public}@",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v28 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished request to end collaboration",  buf,  0xCu);
  }

  uint64_t v12 = (uint64_t)[v5 responseCode];
  if (v12 > 399)
  {
    if (v12 == 404 || v12 == 400)
    {
      uint64_t v13 = 3LL;
      goto LABEL_14;
    }

    goto LABEL_13;
  }

  uint64_t v13 = 1LL;
  if (v12 != 200 && v12 != 204) {
LABEL_13:
  }
    uint64_t v13 = 2LL;
LABEL_14:
  [*(id *)(a1 + 32) setStatus:v13];
  [*(id *)(a1 + 32) setError:v6];
  if (v6)
  {
    unsigned __int8 v14 = 0;
  }

  else
  {
    if (*(_BYTE *)(a1 + 56))
    {
      id v15 = v5;
      uint64_t v16 = objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v15 convertedPlaylistCloudLibraryID]));
      uint64_t v17 = *(void *)(a1 + 32);
      dispatch_semaphore_t v18 = *(void **)(v17 + 106);
      *(void *)(v17 + 106) = v16;

      uint64_t v19 = objc_claimAutoreleasedReturnValue([v15 convertedPlaylistGlobalID]);
    }

    else
    {
      uint64_t v19 = objc_claimAutoreleasedReturnValue([v5 globalPlaylistID]);
    }

    uint64_t v20 = *(void *)(a1 + 32);
    __int128 v21 = *(void **)(v20 + 98);
    *(void *)(v20 + 9_Block_object_dispose(va, 8) = v19;

    unsigned __int8 v14 = [v5 updateRequired];
    dispatch_time_t v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    v24[0] = _NSConcreteStackBlock;
    v24[2] = sub_10006708C;
    void v24[3] = &unk_1001A6B48;
    id v23 = *(void **)(a1 + 40);
    void v24[4] = *(void *)(a1 + 32);
    char v26 = *(_BYTE *)(a1 + 56);
    v24[1] = 3221225472LL;
    id v25 = v23;
    [v22 databaseConnectionAllowingWrites:1 withBlock:v24];

    *(void *)(*(void *)(a1 + 32) + 122) = [*(id *)(*(void *)(a1 + 32) + 106) unsignedLongLongValue];
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 114LL) = v14;
  [*(id *)(a1 + 48) endTransaction];
  [*(id *)(a1 + 32) finish];
}

void sub_10006708C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v31[0] = ML3ContainerPropertyStoreCloudID;
  v32[0] = *(void *)(*(void *)(a1 + 32) + 106LL);
  v32[1] = &off_1001B3D48;
  v31[1] = ML3ContainerPropertyCollaborationJoinRequestPending;
  void v31[2] = ML3ContainerPropertyCollaboratorStatus;
  __int128 v4 = &off_1001B3D60;
  if (!*(_BYTE *)(a1 + 48)) {
    __int128 v4 = &off_1001B3D78;
  }
  v32[2] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v32,  v31,  3LL));
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithDictionary:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithDictionary:",  v5));

  if (*(_BYTE *)(a1 + 48))
  {
    v29[0] = ML3ContainerPropertyCollaborationMode;
    v29[1] = ML3ContainerPropertyCollaboratorPermissions;
    v30[0] = &off_1001B3D48;
    v30[1] = &off_1001B3D48;
    void v29[2] = ML3ContainerPropertyIsCollaborative;
    v29[3] = ML3ContainerPropertyCollaborationInvitationURL;
    v30[2] = &__kCFBooleanFalse;
    v30[3] = &stru_1001A7960;
    v29[4] = ML3ContainerPropertyCollaborationInvitationURLExpirationDate;
    void v30[4] = &off_1001B3D48;
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v30,  v29,  5LL));
    [v6 addEntriesFromDictionary:v7];
  }

  if (([*(id *)(a1 + 40) setValuesForPropertiesWithDictionary:v6] & 1) == 0)
  {
    int v8 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v25 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to update container properties",  buf,  0xCu);
    }
  }

  uint64_t v28 = *(void *)(*(void *)(a1 + 32) + 106LL);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v28, 1LL));
  id v22 = 0LL;
  unsigned __int8 v11 = [v3 executeUpdate:@"DELETE FROM container_author WHERE container_pid = ?" withParameters:v10 error:&v22];
  id v12 = v22;

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v25 = v14;
      __int16 v26 = 2114;
      id v27 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to clear container_author entries. err=%{public}@",  buf,  0x16u);
    }
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(*(void *)(a1 + 32) + 90LL)));
  id v23 = v15;
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v23, 1LL));
  id v21 = v12;
  unsigned __int8 v17 = [v3 executeUpdate:@"DELETE FROM container_item_reaction WHERE container_item_pid IN (SELECT container_item_pid FROM container_item WHERE container_pid = ?)" withParameters:v16 error:&v21];
  id v18 = v21;

  if ((v17 & 1) == 0)
  {
    uint64_t v19 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      uint64_t v20 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v25 = v20;
      __int16 v26 = 2114;
      id v27 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to clear container_item_reaction entries. err=%{public}@",  buf,  0x16u);
    }
  }
}

void sub_10006782C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _queryFilterString]);
  if (v3) {
    [v7 writeString:v3 withCode:1836152165];
  }
  if (*(_BYTE *)(a1 + 48)) {
    int v4 = 1835625572;
  }
  else {
    int v4 = 1835624804;
  }
  if (*(_BYTE *)(a1 + 48)) {
    uint64_t v5 = 7LL;
  }
  else {
    uint64_t v5 = 5LL;
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_100067910;
  void v8[3] = &unk_1001A39B8;
  id v6 = *(id *)(a1 + 40);
  int v11 = v4;
  id v9 = v6;
  uint64_t v10 = v5;
  ICDAAPUtilitiesWriteContainer(v7, 1835623521LL, v8);
}

void sub_100067910(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      int v8 = 0LL;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        ICDAAPUtilitiesWriteProperty( v3,  *(unsigned int *)(a1 + 48),  *(void *)(a1 + 40),  *(void *)(*((void *)&v9 + 1) + 8LL * (void)v8));
        int v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v6);
  }
}

void sub_100068810( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000689C4(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 8LL);
  return result;
}

uint64_t sub_1000689D8(uint64_t result)
{
  *(_BYTE *)(*(void *)(result + 32) + 8LL) = *(_BYTE *)(result + 40);
  return result;
}

void sub_100068C70(id *a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100068D10;
  v4[3] = &unk_1001A3A08;
  id v5 = a1[4];
  id v6 = a1[5];
  id v7 = a1[6];
  ICDAAPUtilitiesWriteContainer(a2, 1835819884LL, v4);
}

void sub_100068D10(id *a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100068DB0;
  v4[3] = &unk_1001A3A08;
  id v5 = a1[4];
  id v6 = a1[5];
  id v7 = a1[6];
  ICDAAPUtilitiesWriteContainer(a2, 1835821428LL, v4);
}

void sub_100068DB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 writeString:*(void *)(a1 + 32) withCode:1835626093];
  [v3 writeUInt8:3 withCode:1634029643];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_100068F64;
  void v9[3] = &unk_1001A70B8;
  id v10 = *(id *)(a1 + 40);
  ICDAAPUtilitiesWriteContainer(v3, 1835623521LL, v9);
  if ([*(id *)(a1 + 48) count])
  {
    uint64_t v4 = *(void *)(a1 + 48);
    __int128 v11 = @"geniusSeedTrackIDs";
    uint64_t v12 = v4;
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v12,  &v11,  1LL));
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v5,  200LL,  0LL,  0LL));
    [v3 writeData:v6 withCode:1634029636];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    _DWORD v7[2] = sub_10006906C;
    v7[3] = &unk_1001A70B8;
    id v8 = *(id *)(a1 + 48);
    ICDAAPUtilitiesWriteContainer(v3, 1634027347LL, v7);
  }
}

void sub_100068F64(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      id v8 = 0LL;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        ICDAAPUtilitiesWriteProperty(v3, 1835624804LL, 5LL, *(void *)(*((void *)&v9 + 1) + 8LL * (void)v8));
        id v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v6);
  }
}

void sub_10006906C(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      id v8 = 0LL;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        ICDAAPUtilitiesWriteProperty(v3, 1835624804LL, 5LL, *(void *)(*((void *)&v9 + 1) + 8LL * (void)v8));
        id v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v6);
  }
}

LABEL_86:
  uint64_t v79 = (void *)objc_claimAutoreleasedReturnValue([v5 featureName]);
  if ([v79 length]) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v79, @"feature-name");
  }
  [v5 itemDuration];
  uint64_t v81 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  (uint64_t)(v80 * 1000.0)));
  -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v81, @"media-duration-in-milliseconds");

  uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v5 mediaType] == (id)1));
  -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v82, @"media-type");

  uint64_t v83 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v5 isOffline]));
  -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v83, @"offline");

  CC_LONG64 v84 = -[NSMutableDictionary initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithCapacity:",  3LL);
  CC_LONG64 v85 = (char *)[v5 repeatPlayMode];
  else {
    uint64_t v86 = v85;
  }
  int v87 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v86));
  -[NSMutableDictionary setObject:forKey:](v84, "setObject:forKey:", v87, @"repeat-play-mode");

  id v88 = [v5 shufflePlayMode];
  if (v88 == (id)2) {
    id v89 = 2LL;
  }
  else {
    id v89 = v88 == (id)1;
  }
  __int128 v90 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v89));
  -[NSMutableDictionary setObject:forKey:](v84, "setObject:forKey:", v90, @"shuffle-play-mode");

  __int128 v91 = (char *)[v5 autoPlayMode];
  else {
    __int128 v92 = v91;
  }
  __int128 v93 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v92));
  -[NSMutableDictionary setObject:forKey:](v84, "setObject:forKey:", v93, @"auto-play-mode");

  if (-[NSMutableDictionary count](v84, "count")) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v84, @"play-mode");
  }
  quot = [v5 persistentID];
  v176 = v84;
  v178 = v79;
  if (quot)
  {
    __int128 v95 = (unint64_t)quot;
    __int128 v96 = (char *)v188 + 1;
    do
    {
      __int128 v97 = lldiv((uint64_t)quot, 10LL);
      quot = (id)v97.quot;
      if (v97.rem >= 0) {
        LOBYTE(v9_Block_object_dispose(va, 8) = v97.rem;
      }
      else {
        unsigned int v98 = -v97.rem;
      }
      *(v96 - 2) = v98 + 48;
      id v99 = (const UInt8 *)(v96 - 2);
      --v96;
    }

    while (v97.quot);
    if ((v95 & 0x8000000000000000LL) != 0)
    {
      *(v96 - 2) = 45;
      id v99 = (const UInt8 *)(v96 - 2);
    }

    unsigned int v100 = (__CFString *)CFStringCreateWithBytes(0LL, v99, (char *)v188 - (char *)v99, 0x8000100u, 0);
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v100, @"persistent-id");
  }

  id v101 = (void *)objc_claimAutoreleasedReturnValue([v5 queueGroupingID]);
  if ([v101 length]) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v101, @"queue-grouping-id");
  }
  uint64_t v102 = [v5 sharedActivityGroupSizeCurrent];
  if (v102)
  {
    id v103 = sub_10006A964((unint64_t)v102);
    unsigned int v104 = (void *)objc_claimAutoreleasedReturnValue(v103);
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v104, @"shared-activity-devices-current");

    os_log_t v105 = sub_10006A964((unint64_t)[v5 sharedActivityGroupSizeMax]);
    id v106 = (void *)objc_claimAutoreleasedReturnValue(v105);
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v106, @"shared-activity-devices-max");
  }

  else
  {
    [v5 sharedActivityGroupSizeMax];
  }

  id v107 = (unint64_t)[v5 sharedActivityType];
  if (v107 <= 6)
  {
    v108 = v107;
    if (((1LL << v107) & 0x72) != 0)
    {
      id v109 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v107));
      -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v109, @"shared-activity-type");
    }
  }

  if (objc_msgSend(v5, "isCollaborativePlaylist", v108))
  {
    __int16 v110 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v110, @"is-collaborative");
  }

  id v111 = (void *)objc_claimAutoreleasedReturnValue([v5 eventDate]);
  uint64_t v112 = v111;
  if (v111)
  {
    [v111 timeIntervalSinceNow];
    id v114 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  (uint64_t)(v113 * -1000.0) & ~((uint64_t)(v113 * -1000.0) >> 63)));
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v114, @"milliseconds-since-play");
  }

  uint64_t v115 = (void *)objc_claimAutoreleasedReturnValue([v5 recommendationData]);
  if ([v115 length]) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v115, @"reco-data");
  }
  unsigned __int16 v173 = v115;
  id v116 = [v5 sourceType];
  if (v116 == (id)2) {
    unsigned int v117 = 7LL;
  }
  else {
    unsigned int v117 = v116 == (id)1;
  }
  id v118 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v117));
  -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v118, @"source-type");

  [v5 itemStartTime];
  id v120 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  (uint64_t)(v119 * 1000.0)));
  -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v120, @"start-position-in-milliseconds");

  uint64_t v121 = (void *)objc_claimAutoreleasedReturnValue([v5 timedMetadata]);
  if ([v121 length]) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v121, @"timed-metadata");
  }
  v184 = (void *)objc_claimAutoreleasedReturnValue([v5 trackInfo]);
  v172 = v121;
  if ([v184 length])
  {
    id v122 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v184,  0LL,  0LL,  0LL));
    if (v122) {
      -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v122, @"track-info");
    }
  }

  id v174 = v112;
  unsigned int v123 = (char *)[v5 itemType];
  else {
    uint64_t v124 = qword_10013B4E8[(void)(v123 - 1)];
  }
  v125 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v124));
  -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v125, @"type");

  id v126 = objc_claimAutoreleasedReturnValue([v5 requestingBundleIdentifier]);
  if (v126) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v126, @"bundle-id");
  }
  id v127 = objc_claimAutoreleasedReturnValue([v5 requestingBundleVersion]);
  if (v127) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v127, @"bundle-version");
  }
  id v170 = (void *)v127;
  v128 = (void *)objc_claimAutoreleasedReturnValue([v5 householdID]);
  if ([v128 length]) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v128, @"household-id");
  }
  id v129 = (void *)objc_claimAutoreleasedReturnValue([v5 isSiriInitiated]);
  if (v129) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v129, @"siri-initiated");
  }
  v181 = v129;
  v175 = v101;
  v171 = (void *)v126;
  uint64_t v169 = v128;
  if ((uint64_t)[v5 version] > 1)
  {
    v167 = v41;
    BOOL v136 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v5 reasonHintType] == (id)1));
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v136, @"event-reason-hint-type");

    if (v182 == (id)2) {
      id v137 = 2LL;
    }
    else {
      id v137 = v182 == (id)1;
    }
    id v138 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v137));
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v138, @"event-type");

    id v130 = -[NSMutableDictionary initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithCapacity:",  8LL);
    uint64_t v139 = (void *)objc_claimAutoreleasedReturnValue([v5 itemIDs]);
    uint64_t v131 = v139;
    if (v168 == (char *)1)
    {
      id v140 = [v139 radioAdamID];
      if (v140)
      {
        id v141 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v140));
        id v142 = @"radio-adam-id";
LABEL_170:
        -[NSMutableDictionary setObject:forKey:](v130, "setObject:forKey:", v141, v142);
      }
    }

    else
    {
      id v143 = [v139 subscriptionAdamID];
      id v144 = v143;
      if (v123 != (char *)6)
      {
        if (v143)
        {
          id v145 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v143));
          -[NSMutableDictionary setObject:forKey:](v130, "setObject:forKey:", v145, @"subscription-adam-id");
        }

        id v146 = objc_msgSend(v131, "equivalencySourceAdamID", v144);
        if (v146)
        {
          id v147 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v146));
          -[NSMutableDictionary setObject:forKey:](v130, "setObject:forKey:", v147, @"orig-sf-adam-id");
        }

        uint64_t v148 = [v131 purchasedAdamID];
        if (v148)
        {
          id v149 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v148));
          -[NSMutableDictionary setObject:forKey:](v130, "setObject:forKey:", v149, @"purchased-adam-id");
        }

        id v150 = [v131 cloudID];
        if (v150)
        {
          __int128 v151 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v150));
          -[NSMutableDictionary setObject:forKey:](v130, "setObject:forKey:", v151, @"cloud-id");
        }

        uint64_t v152 = [v131 reportingAdamID];
        if (!v152) {
          goto LABEL_171;
        }
        id v141 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v152));
        id v142 = @"reporting-adam-id";
        goto LABEL_170;
      }

      if (v143)
      {
        id v141 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v143));
        id v142 = @"auc-adam-id";
        goto LABEL_170;
      }
    }

LABEL_171:
    unsigned int v134 = (void *)objc_claimAutoreleasedReturnValue([v131 lyricsID]);
    if ([v134 length]) {
      -[NSMutableDictionary setObject:forKey:](v130, "setObject:forKey:", v134, @"lyric-id");
    }
    if (-[NSMutableDictionary count](v130, "count")) {
      -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v130, @"ids");
    }
    id v135 = (void *)objc_claimAutoreleasedReturnValue([v5 containerIDs]);
    unsigned __int8 v153 = -[NSMutableDictionary initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithCapacity:",  3LL);
    switch((unint64_t)v168)
    {
      case 1uLL:
        uint64_t v154 = (void *)objc_claimAutoreleasedReturnValue([v135 stationHash]);
        if ([v154 length]) {
          -[NSMutableDictionary setObject:forKey:](v153, "setObject:forKey:", v154, @"station-hash");
        }
        CC_SHA512_CTX v155 = (void *)objc_claimAutoreleasedReturnValue([v135 stationStringID]);
        if ([v155 length]) {
          -[NSMutableDictionary setObject:forKey:](v153, "setObject:forKey:", v155, @"station-id");
        }
        id v156 = [v135 stationID];
        if (!v156) {
          goto LABEL_189;
        }
        v157 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v156));
        __int128 v158 = @"station-personalized-id";
        goto LABEL_188;
      case 2uLL:
        uint64_t v154 = (void *)objc_claimAutoreleasedReturnValue([v135 globalPlaylistID]);
        if ([v154 length]) {
          -[NSMutableDictionary setObject:forKey:](v153, "setObject:forKey:", v154, @"global-playlist-id");
        }
        CC_SHA512_CTX v155 = (void *)objc_claimAutoreleasedReturnValue([v135 playlistVersionHash]);
        if ([v155 length]) {
          -[NSMutableDictionary setObject:forKey:](v153, "setObject:forKey:", v155, @"playlist-version-hash");
        }
        __int128 v159 = [v135 cloudPlaylistID];
        if (v159)
        {
          v157 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v159));
          __int128 v158 = @"cloud-playlist-id";
LABEL_188:
          -[NSMutableDictionary setObject:forKey:](v153, "setObject:forKey:", v157, v158);
        }

LABEL_189:
        id v129 = v181;
        goto LABEL_197;
      case 3uLL:
        __int128 v160 = [v135 adamID];
        if (!v160) {
          goto LABEL_198;
        }
        uint64_t v154 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v160));
        uint64_t v161 = @"artist-adam-id";
        break;
      case 4uLL:
        v162 = [v135 adamID];
        if (v162)
        {
          id v163 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v162));
          -[NSMutableDictionary setObject:forKey:](v153, "setObject:forKey:", v163, @"album-adam-id");
        }

        uint64_t v154 = (void *)objc_claimAutoreleasedReturnValue([v135 cloudAlbumID]);
        if (![v154 length]) {
          goto LABEL_197;
        }
        uint64_t v161 = @"cloud-album-id";
        break;
      default:
        goto LABEL_198;
    }

    -[NSMutableDictionary setObject:forKey:](v153, "setObject:forKey:", v154, v161);
LABEL_197:

LABEL_198:
    if (-[NSMutableDictionary count](v153, "count")) {
      -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v153, @"container-ids");
    }

    uint64_t v41 = v167;
    v132 = v173;
    id v133 = v170;
    goto LABEL_201;
  }

  id v130 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue([v5 containerID]);
  if (v130) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v130, @"container-id");
  }
  uint64_t v131 = (void *)objc_claimAutoreleasedReturnValue([v5 externalID]);
  v132 = v173;
  id v133 = v170;
  if (v131) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v131, @"external-identifier");
  }
  unsigned int v134 = (void *)objc_claimAutoreleasedReturnValue([v5 personalizedContainerID]);
  if ([v134 length]) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v134, @"personalized-container-id");
  }
  id v135 = (void *)objc_claimAutoreleasedReturnValue([v5 storeID]);
  if ([v135 length]) {
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v135, @"id");
  }
LABEL_201:

  v164 = -[NSMutableDictionary count](v42, "count");
  v165 = (NSMutableDictionary *)&__NSDictionary0__struct;
  if (v164) {
    v165 = v42;
  }
  CC_LONG64 v63 = v165;

LABEL_204:
  return v63;
}

__CFString *sub_10006A964(unint64_t a1)
{
  if (a1 == 1) {
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%llu",  1LL));
  }
  if (a1 - 1 < 4) {
    return @"2-4";
  }
  if (a1 - 5 < 3) {
    return @"5-7";
  }
  if (a1 - 8 < 3) {
    return @"8-10";
  }
  if (a1 - 11 < 5) {
    return @"11-15";
  }
  if (a1 - 16 < 5) {
    return @"16-20";
  }
  if (a1 - 21 < 5) {
    return @"21-25";
  }
  if (a1 <= 0x19) {
    return @"-1";
  }
  return @"26+";
}

void sub_10006AF64(void *a1)
{
  id v1 = a1;
  if (MSVDeviceSupportsMediaDownloads())
  {
    uint64_t v8 = 0LL;
    __int128 v9 = &v8;
    uint64_t v10 = 0x2050000000LL;
    uint64_t v2 = (void *)qword_1001DB6E0;
    uint64_t v11 = qword_1001DB6E0;
    if (!qword_1001DB6E0)
    {
      *(void *)buf = _NSConcreteStackBlock;
      uint64_t v13 = 3221225472LL;
      uint64_t v14 = sub_10006B100;
      id v15 = &unk_1001A6978;
      uint64_t v16 = &v8;
      sub_10006B100((uint64_t)buf);
      uint64_t v2 = (void *)v9[3];
    }

    id v3 = v2;
    _Block_object_dispose(&v8, 8);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sharedManager", v8));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 allMediaDownloadLibraryIdentifiers]);
    if ([v5 count])
    {
      id v6 = os_log_create("com.apple.amp.itunescloudd", "Downloads");
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v7 = [v5 count];
        *(_DWORD *)buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Cancelling %d downloads", buf, 8u);
      }

      [v4 cancelDownloads:v5];
    }
  }
}

void sub_10006B0E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

Class sub_10006B100(uint64_t a1)
{
  id v6 = 0LL;
  if (!qword_1001DB6E8)
  {
    __int128 v7 = off_1001A3A28;
    uint64_t v8 = 0LL;
    qword_1001DB6E8 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB6E8)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudTrackDownloadManager.m",  17,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("MPMediaDownloadManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPMediaDownloadManagerClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudTrackDownloadManager.m",  18,  @"Unable to find class %s",  "MPMediaDownloadManager");

LABEL_10:
    __break(1u);
  }

  qword_1001DB6E0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_10006C180(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = (id)objc_claimAutoreleasedReturnValue([a2 userIdentity]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 accountDSID]);
  [v2 addObject:v3];
}

void sub_10006C1D4(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_configurationForAccount:baseConfiguration:"));
  if (v3)
  {
    id v4 = *(void **)(a1 + 48);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _configurationForAccount:v6 baseConfiguration:*(void *)(a1 + 40)]);
    [v4 addObject:v5];
  }
}

void sub_10006C4F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10006C6E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_10006C700(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10006C710(uint64_t a1)
{
}

void sub_10006C718(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (([v4 isManageable] & 1) != 0 || objc_msgSend(v4, "isActive"))
  {
    if (([v4 isManageable] & 1) == 0)
    {
      id v5 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *(void *)(a1 + 48);
        int v7 = 134217984;
        uint64_t v8 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "ICDAccountManagerState %p - stateForAccounts: active account is not manageable!",  (uint8_t *)&v7,  0xCu);
      }
    }

    [*(id *)(a1 + 32) addObject:v4];
  }
}

void sub_10006C82C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v5 accountDSID]);
}

void sub_10006CAF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 bodyData]);
    double v7 = COERCE_DOUBLE([v10 length]);

    if (v7 == 0.0)
    {
      __int128 v12 = 0LL;
    }

    else
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5 bodyData]);
      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v11,  0LL,  0LL,  0LL));

      uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSDictionary, v13);
      if ((objc_opt_isKindOfClass(v12, v14) & 1) != 0)
      {
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 objectForKey:@"status"]);
        double v16 = COERCE_DOUBLE([v15 integerValue]);

        if (v16 == 0.0)
        {
          double v7 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue([v12 objectForKey:@"retry-in-ms"]));

          if (v7 != 0.0)
          {
            id v23 = (void *)objc_claimAutoreleasedReturnValue([v12 objectForKey:@"retry-in-ms"]);
            unint64_t v24 = (unint64_t)[v23 unsignedIntegerValue];

            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
            [v25 timeIntervalSinceDate:*(void *)(a1 + 40)];
            double v27 = v26;
            double v28 = *(double *)(a1 + 64);

            __int16 v29 = os_log_create("com.apple.amp.itunescloudd", "Genius");
            double v30 = v29;
            if (v27 >= v28)
            {
              if (os_log_type_enabled(v29, OS_LOG_TYPE_FAULT))
              {
                uint64_t v36 = *(void *)(a1 + 32);
                double v37 = *(double *)(a1 + 64);
                int v39 = 138543618;
                uint64_t v40 = v36;
                __int16 v41 = 2048;
                double v42 = v37;
                _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_FAULT,  "Failed to load %{public}@ after %g seconds",  (uint8_t *)&v39,  0x16u);
              }

              uint64_t v38 = *(void *)(a1 + 56);
              uint64_t v35 = (ICStoreURLRequest *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SSURLConnectionRequest+GeniusAdditions",  -1LL,  0LL));
              (*(void (**)(uint64_t, void, void, ICStoreURLRequest *))(v38 + 16))(v38, 0LL, 0LL, v35);
            }

            else
            {
              if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v31 = *(void *)(a1 + 32);
                int v39 = 138543618;
                uint64_t v40 = v31;
                __int16 v41 = 2048;
                double v42 = (double)v24 / 1000.0;
                _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Retrying loading %{public}@ in %g seconds",  (uint8_t *)&v39,  0x16u);
              }

              __int128 v32 = objc_alloc(&OBJC_CLASS___ICStoreURLRequest);
              __int128 v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) urlRequest]);
              __int128 v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) storeRequestContext]);
              uint64_t v35 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( v32,  "initWithURLRequest:requestContext:",  v33,  v34);

              -[ICStoreURLRequest setMaxRetryCount:]( v35,  "setMaxRetryCount:",  [*(id *)(a1 + 48) maxRetryCount]);
              -[ICStoreURLRequest setShouldUseMescalSigning:]( v35,  "setShouldUseMescalSigning:",  [*(id *)(a1 + 48) shouldUseMescalSigning]);
              -[ICStoreURLRequest _startGeniusRequestWithStartDate:retryTimeout:debugName:connectionResponseBlock:]( v35,  "_startGeniusRequestWithStartDate:retryTimeout:debugName:connectionResponseBlock:",  *(void *)(a1 + 40),  *(void *)(a1 + 32),  *(void *)(a1 + 56),  *(double *)(a1 + 64));
            }

            double v7 = 0.0;
            goto LABEL_14;
          }
        }

        else
        {
          __int128 v45 = @"server-status-code";
          unsigned __int8 v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)&v16));
          __int128 v46 = v17;
          id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v46,  &v45,  1LL));
          double v7 = COERCE_DOUBLE( objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SSURLConnectionRequestGeniusAdditionsErrorDomain",  0LL,  v18)));

          uint64_t v19 = os_log_create("com.apple.amp.itunescloudd", "Genius");
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          {
            uint64_t v20 = *(void *)(a1 + 32);
            id v21 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
            id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 URL]);
            int v39 = 138543874;
            uint64_t v40 = v20;
            __int16 v41 = 2048;
            double v42 = v16;
            __int16 v43 = 2114;
            __int128 v44 = v22;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "Received non-zero status response loading %{public}@: Status=%ld responseURL: %{public}@",  (uint8_t *)&v39,  0x20u);
          }
        }
      }

      else
      {
        double v7 = 0.0;
      }
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
LABEL_14:

    goto LABEL_15;
  }

  double v7 = *(double *)&v6;
  uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Genius");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v39 = 138543618;
    uint64_t v40 = v9;
    __int16 v41 = 2114;
    double v42 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Received error loading %{public}@: %{public}@",  (uint8_t *)&v39,  0x16u);
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
LABEL_15:
}

uint64_t sub_10006D5F0(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        uint64_t v11 = OBJC_IVAR___PBDataReader__error;
        int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    uint64_t v11 = OBJC_IVAR___PBDataReader__error;
    int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    int v13 = v6 & 7;
    if (v12 || v13 == 4) {
      break;
    }
    unint64_t v15 = v6 >> 3;
    if ((v6 >> 3) == 2)
    {
      if (v13 == 2)
      {
        uint64_t result = PBReaderPlaceMark(a2, v27);
        if (!(_DWORD)result) {
          return result;
        }
        while (1)
        {
          id v21 = (unint64_t *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v22 = *v21;
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__length);
          if (*v21 >= v23 || *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            break;
          }
          if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > v23)
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            float v24 = 0.0;
          }

          else
          {
            float v24 = *(float *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *id v21 = v22 + 4;
          }

          PBRepeatedFloatAdd(a1 + 8, v20, v24);
        }

        PBReaderRecallMark(a2, v27);
      }

      else
      {
        unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          float v26 = *(float *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 4;
        }

        else
        {
          *(_BYTE *)(a2 + v11) = 1;
          float v26 = 0.0;
        }

        PBRepeatedFloatAdd(a1 + 8, v15, v26);
      }
    }

    else if ((_DWORD)v15 == 1)
    {
      uint64_t String = PBReaderReadString(a2);
      uint64_t v17 = objc_claimAutoreleasedReturnValue(String);
      id v18 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v17;
    }

    else if ((PBReaderSkipValueWithTag(a2) & 1) == 0)
    {
      return 0LL;
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10006DF00(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_57;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_59;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_57:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_59:
        uint64_t v38 = 40LL;
        goto LABEL_72;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 48) |= 2u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_63;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_63:
        uint64_t v39 = 16LL;
        goto LABEL_77;
      case 3u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v24 = objc_claimAutoreleasedReturnValue(String);
        unint64_t v25 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v24;

        continue;
      case 4u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 48) |= 4u;
        while (2)
        {
          unint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v28 == -1LL || v28 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v29 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28 + 1;
            v20 |= (unint64_t)(v29 & 0x7F) << v26;
            if (v29 < 0)
            {
              v26 += 7;
              BOOL v9 = v27++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_67;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_67:
        uint64_t v39 = 24LL;
        goto LABEL_77;
      case 5u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 48) |= 8u;
        while (2)
        {
          unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v32 == -1LL || v32 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v33 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 1;
            v14 |= (unint64_t)(v33 & 0x7F) << v30;
            if (v33 < 0)
            {
              v30 += 7;
              BOOL v9 = v31++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_71;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_71:
        uint64_t v38 = 44LL;
LABEL_72:
        *(_DWORD *)(a1 + v3_Block_object_dispose(va, 8) = v14;
        continue;
      case 6u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 48) |= 1u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
    }

    while (1)
    {
      unint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v36 == -1LL || v36 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v37 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36 + 1;
      v20 |= (unint64_t)(v37 & 0x7F) << v34;
      if ((v37 & 0x80) == 0) {
        goto LABEL_74;
      }
      v34 += 7;
      BOOL v9 = v35++ >= 9;
      if (v9)
      {
        uint64_t v20 = 0LL;
        goto LABEL_76;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_74:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v20 = 0LL;
    }
LABEL_76:
    uint64_t v39 = 8LL;
LABEL_77:
    *(void *)(a1 + v39) = v20;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_10006FAB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___CloudLibraryOperation, v4);
  if ((objc_opt_isKindOfClass(v3, v5) & 1) != 0)
  {
    id v6 = v3;
    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 libraryIdentifier]);
    char v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) libraryIdentifier]);
    unsigned int v9 = [v7 isEqualToString:v8];

    id v11 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v10), "logCategory");
    char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v9)
    {
      if (v13)
      {
        unint64_t v15 = (void *)objc_opt_class(*(void *)(a1 + 32), v14);
        uint64_t v16 = *(void *)(a1 + 32);
        id v17 = v15;
        int v29 = 138544130;
        char v30 = v15;
        __int16 v31 = 2048;
        uint64_t v32 = v16;
        __int16 v33 = 2114;
        id v34 = (id)objc_opt_class(v6, v18);
        __int16 v35 = 2048;
        id v36 = v6;
        id v19 = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %p -  Calling block on one of our operations [%{public}@ %p]",  (uint8_t *)&v29,  0x2Au);
      }

      (*(void (**)(void, id, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  v6,  v20,  v21,  v22,  v23);
    }

    else
    {
      if (v13)
      {
        uint64_t v24 = (void *)objc_opt_class(*(void *)(a1 + 32), v14);
        uint64_t v25 = *(void *)(a1 + 32);
        id v26 = v24;
        int v29 = 138544130;
        char v30 = v24;
        __int16 v31 = 2048;
        uint64_t v32 = v25;
        __int16 v33 = 2114;
        id v34 = (id)objc_opt_class(v6, v27);
        __int16 v35 = 2048;
        id v36 = v6;
        id v28 = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %p -  Ignoring operation which is not ours [%{public}@ %p]",  (uint8_t *)&v29,  0x2Au);
      }
    }
  }
}

void sub_10006FCCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___CloudLibraryOperation, v4);
  if ((objc_opt_isKindOfClass(v3, v5) & 1) != 0)
  {
    id v6 = v3;
    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 libraryIdentifier]);
    char v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) libraryIdentifier]);
    unsigned int v9 = [v7 isEqualToString:v8];

    id v11 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v10), "logCategory");
    char v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v9)
    {
      if (v13)
      {
        unint64_t v15 = (void *)objc_opt_class(*(void *)(a1 + 32), v14);
        uint64_t v16 = *(void *)(a1 + 32);
        id v17 = v15;
        int v29 = 138544130;
        char v30 = v15;
        __int16 v31 = 2048;
        uint64_t v32 = v16;
        __int16 v33 = 2114;
        id v34 = (id)objc_opt_class(v6, v18);
        __int16 v35 = 2048;
        id v36 = v6;
        id v19 = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %p -  Calling block on one of our background operations [%{public}@ %p]",  (uint8_t *)&v29,  0x2Au);
      }

      (*(void (**)(void, id, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  v6,  v20,  v21,  v22,  v23);
    }

    else
    {
      if (v13)
      {
        uint64_t v24 = (void *)objc_opt_class(*(void *)(a1 + 32), v14);
        uint64_t v25 = *(void *)(a1 + 32);
        id v26 = v24;
        int v29 = 138544130;
        char v30 = v24;
        __int16 v31 = 2048;
        uint64_t v32 = v25;
        __int16 v33 = 2114;
        id v34 = (id)objc_opt_class(v6, v27);
        __int16 v35 = 2048;
        id v36 = v6;
        id v28 = v34;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %p -  Ignoring background operation which is not ours [%{public}@ %p]",  (uint8_t *)&v29,  0x2Au);
      }
    }
  }
}

void sub_10006FEE8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v7 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v6), "logCategory");
  char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  unsigned int v9 = v8;
  if (a2)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      uint64_t v29 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "CloudLibrary %p - Connected to library successfully.",  buf,  0xCu);
    }

    uint64_t v11 = *(void *)(a1 + 48);
    if (v11) {
      (*(void (**)(uint64_t, void))(v11 + 16))(v11, *(void *)(a1 + 40));
    }
  }

  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134218242;
      uint64_t v29 = v12;
      __int16 v30 = 2114;
      id v31 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "CloudLibrary %p - Failed to connect to library with error: %{public}@",  buf,  0x16u);
    }

    BOOL v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) userIdentity]);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) userIdentityStore]);
    unint64_t v15 = v14;
    if (v13) {
      BOOL v16 = v14 == 0LL;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16)
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    }

    else
    {
      id v27 = 0LL;
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v14 getVerificationContextForUserIdentity:v13 error:&v27]);
      id v18 = v27;
      id v19 = v18;
      if (v17)
      {
        [v17 setInteractionLevel:1];
        [v17 setDebugReason:@"Connecting to cloud library"];
        id v20 = [[ICUserVerificationRequest alloc] initWithVerificationContext:v17];
        uint64_t v21 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
        uint64_t v23 = -[ICStoreRequestContext initWithIdentity:identityStore:clientInfo:]( v21,  "initWithIdentity:identityStore:clientInfo:",  v13,  v15,  v22);
        [v20 setStoreRequestContext:v23];

        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472LL;
        v24[2] = sub_1000701AC;
        void v24[3] = &unk_1001A3BB0;
        id v26 = *(id *)(a1 + 48);
        id v25 = *(id *)(a1 + 40);
        [v20 performWithResponseHandler:v24];
      }

      else
      {
        (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
      }
    }
  }
}

uint64_t sub_1000701AC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if ((a2 & 1) != 0) {
    uint64_t v4 = 0LL;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 32);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v3, v4);
}

void sub_1000701CC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 _userIdentity]);
  [v4 setIdentity:v3];

  [v4 setPersonalizationStyle:2];
}

void sub_100070228(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v7 = a3;
  char v8 = *(void **)(a1 + 32);
  if (v7)
  {
    id v9 = objc_msgSend((id)objc_opt_class(v8, v6), "logCategory");
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      goto LABEL_13;
    }
    uint64_t v11 = *(void *)(a1 + 32);
    int v54 = 134218242;
    uint64_t v55 = v11;
    __int16 v56 = 2114;
    id v57 = v7;
    uint64_t v12 = "CloudLibrary %p - failed to load url bag. err=%{public}@";
    BOOL v13 = v10;
    uint32_t v14 = 22;
    goto LABEL_12;
  }

  unsigned int v16 = [v8 _isEnabledWithURLBag:v5];
  id v17 = *(void **)(a1 + 32);
  if (!v16)
  {
    id v32 = objc_msgSend((id)objc_opt_class(v17, v15), "logCategory");
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      goto LABEL_13;
    }
    uint64_t v33 = *(void *)(a1 + 32);
    int v54 = 134217984;
    uint64_t v55 = v33;
    uint64_t v12 = "CloudLibrary %p - Service disabled in URL bag.";
    BOOL v13 = v10;
    uint32_t v14 = 12;
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, v12, (uint8_t *)&v54, v14);
LABEL_13:

    uint64_t v34 = *(void *)(a1 + 40);
    if (v34) {
      (*(void (**)(uint64_t, void))(v34 + 16))(v34, 0LL);
    }
    goto LABEL_35;
  }

  uint64_t v18 = objc_claimAutoreleasedReturnValue([v17 _bagKey]);
  id v19 = (void *)objc_claimAutoreleasedReturnValue([v5 dictionaryForBagKey:v18]);

  uint64_t v21 = objc_opt_class(&OBJC_CLASS___NSDictionary, v20);
  LOBYTE(v1_Block_object_dispose(va, 8) = objc_opt_isKindOfClass(v19, v21);
  uint64_t v23 = (void *)objc_opt_class(*(void *)(a1 + 32), v22);
  if ((v18 & 1) != 0)
  {
    uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 oversizeLogCategory]);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = *(void *)(a1 + 32);
      int v54 = 134218242;
      uint64_t v55 = v25;
      __int16 v56 = 2114;
      id v57 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "CloudLibrary %p - Library Bag: %{public}@",  (uint8_t *)&v54,  0x16u);
    }

    uint64_t v26 = ICGetCloudDAAPClientPrefix();
    id v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
    id v28 = (void *)objc_claimAutoreleasedReturnValue([v27 stringByAppendingString:@"base-url"]);
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v19 objectForKey:v28]);
    __int16 v30 = v29;
    if (v29) {
      id v31 = v29;
    }
    else {
      id v31 = (id)objc_claimAutoreleasedReturnValue([v19 objectForKey:@"base-url"]);
    }
    uint64_t v38 = v31;

    if (v38 && (uint64_t v40 = objc_opt_class(&OBJC_CLASS___NSString, v39), (objc_opt_isKindOfClass(v38, v40) & 1) != 0))
    {
      id v41 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v39), "logCategory");
      double v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v43 = *(void *)(a1 + 32);
        int v54 = 134218242;
        uint64_t v55 = v43;
        __int16 v56 = 2114;
        id v57 = v38;
        _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "CloudLibrary %p - Determined server URL: %{public}@",  (uint8_t *)&v54,  0x16u);
      }

      __int128 v44 = *(void **)(*(void *)(a1 + 32) + 32LL);
      __int128 v45 = (void *)objc_claimAutoreleasedReturnValue([v38 stringByAppendingString:@"/"]);
      __int128 v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v45));
      [v44 setBaseURL:v46];

      [*(id *)(a1 + 32) _continueConnectingToLibraryWithCompletionHandler:*(void *)(a1 + 40)];
    }

    else
    {
      int v47 = *(unsigned __int8 *)(a1 + 48);
      id v48 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v39), "logCategory");
      __int128 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
      BOOL v50 = os_log_type_enabled(v49, OS_LOG_TYPE_ERROR);
      if (v47)
      {
        if (v50)
        {
          uint64_t v51 = *(void *)(a1 + 32);
          int v54 = 134217984;
          uint64_t v55 = v51;
          _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_ERROR,  "CloudLibrary %p - No library URL found, invalidating the URL bag and retrying...",  (uint8_t *)&v54,  0xCu);
        }

        [*(id *)(a1 + 32) _connectToLibraryWithCompletionHandler:*(void *)(a1 + 40) allowRetry:0 forceBagReload:1];
      }

      else
      {
        if (v50)
        {
          uint64_t v52 = *(void *)(a1 + 32);
          int v54 = 134217984;
          uint64_t v55 = v52;
          _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_ERROR,  "CloudLibrary %p - No library URL found.",  (uint8_t *)&v54,  0xCu);
        }

        uint64_t v53 = *(void *)(a1 + 40);
        if (v53) {
          (*(void (**)(uint64_t, void))(v53 + 16))(v53, 0LL);
        }
      }
    }
  }

  else
  {
    __int16 v35 = (os_log_s *)objc_claimAutoreleasedReturnValue([v23 logCategory]);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
    {
      uint64_t v36 = *(void *)(a1 + 32);
      int v54 = 134217984;
      uint64_t v55 = v36;
      _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_ERROR,  "CloudLibrary %p - No URL bag found",  (uint8_t *)&v54,  0xCu);
    }

    uint64_t v37 = *(void *)(a1 + 40);
    if (v37) {
      (*(void (**)(uint64_t, void))(v37 + 16))(v37, 0LL);
    }
  }

LABEL_35:
}

void sub_1000706CC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) underlyingConnection]);
  if ([v2 connectionState] == (id)2)
  {
LABEL_7:

    goto LABEL_8;
  }

  unsigned __int8 v3 = [*(id *)(a1 + 32) loginRequestInFlight];

  if ((v3 & 1) == 0)
  {
    id v4 = (dispatch_group_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connectionGroup]);
    dispatch_group_enter(v4);

    [*(id *)(a1 + 32) setLoginRequestInFlight:1];
    uint64_t v6 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ Ensure Connection",  objc_opt_class(*(void *)(a1 + 32), v5));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v7 = [[MSVXPCTransaction alloc] initWithName:v2];
    [v7 beginTransaction];
    objc_initWeak(&location, *(id *)(a1 + 32));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_1000708F8;
    v16[3] = &unk_1001A3B60;
    objc_copyWeak(&v18, &location);
    void v16[4] = *(void *)(a1 + 32);
    id v8 = v7;
    id v17 = v8;
    id v9 = objc_retainBlock(v16);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 32) baseURL]);

    uint64_t v11 = *(void **)(a1 + 32);
    if (v10) {
      [v11 _continueConnectingToLibraryWithCompletionHandler:v9];
    }
    else {
      [v11 _connectToLibraryWithCompletionHandler:v9 allowRetry:1 forceBagReload:0];
    }

    objc_destroyWeak(&v18);
    objc_destroyWeak(&location);

    goto LABEL_7;
  }

void sub_1000708DC(_Unwind_Exception *a1)
{
}

void sub_1000708F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v6 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v4), "logCategory");
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      id v14 = WeakRetained;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudLibrary %p - Connected to library",  buf,  0xCu);
    }

    id v8 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained connectionQueue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100070A60;
    block[3] = &unk_1001A5F78;
    id v10 = WeakRetained;
    id v11 = v3;
    id v12 = *(id *)(a1 + 40);
    dispatch_async(v8, block);
  }

  else
  {
    [*(id *)(a1 + 40) endTransaction];
  }
}

uint64_t sub_100070A54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100070A60(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) underlyingConnection]);
  [*(id *)(a1 + 32) setFailedToConnect:v2 == 0];

  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) underlyingConnection]);
  id v4 = [v3 connectionState];

  if (v4 == (id)2) {
    [*(id *)(a1 + 32) _performPendingOperations];
  }
  [*(id *)(a1 + 32) setLoginRequestInFlight:0];
  uint64_t v5 = (dispatch_group_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connectionGroup]);
  dispatch_group_leave(v5);

  return [*(id *)(a1 + 48) endTransaction];
}

void sub_100070B04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v4), "logCategory");
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = v8;
    int v13 = 138544130;
    id v14 = v8;
    __int16 v15 = 2048;
    uint64_t v16 = v9;
    __int16 v17 = 2114;
    id v18 = (id)objc_opt_class(v3, v11);
    __int16 v19 = 2048;
    id v20 = v3;
    id v12 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %p - Cancelling one of our operations [%{public}@ %p]",  (uint8_t *)&v13,  0x2Au);
  }

  [v3 cancel];
}

void sub_100070C20(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v4), "logCategory");
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = v8;
    int v13 = 138544130;
    id v14 = v8;
    __int16 v15 = 2048;
    uint64_t v16 = v9;
    __int16 v17 = 2114;
    id v18 = (id)objc_opt_class(v3, v11);
    __int16 v19 = 2048;
    id v20 = v3;
    id v12 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %p -  Increasing priority of one of our operations [%{public}@ %p]",  (uint8_t *)&v13,  0x2Au);
  }

  [v3 increasePriority];
}

void sub_100070D3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v4), "logCategory");
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
    uint64_t v9 = *(void *)(a1 + 32);
    id v10 = v8;
    int v13 = 138544130;
    id v14 = v8;
    __int16 v15 = 2048;
    uint64_t v16 = v9;
    __int16 v17 = 2114;
    id v18 = (id)objc_opt_class(v3, v11);
    __int16 v19 = 2048;
    id v20 = v3;
    id v12 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %p -  Decreasing priority of one of our operations [%{public}@ %p]",  (uint8_t *)&v13,  0x2Au);
  }

  [v3 decreasePriority];
}

void sub_100070E58(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) failedToConnect];
  id v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    _[v3 _enqueuePendingOperation:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 underlyingConnection]);
    [*(id *)(a1 + 40) setConnection:v4];

    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) completionBlock]);
    objc_initWeak(&location, *(id *)(a1 + 40));
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472LL;
    id v10 = sub_100070FA8;
    uint64_t v11 = &unk_1001A4D70;
    objc_copyWeak(&v14, &location);
    uint64_t v12 = *(void *)(a1 + 32);
    id v6 = v5;
    id v13 = v6;
    [*(id *)(a1 + 40) setCompletionBlock:&v8];
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server", v8, v9, v10, v11, v12));
    [v7 addBackgroundOperation:*(void *)(a1 + 40) priority:*(unsigned int *)(a1 + 48)];

    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }

void sub_100070F88(_Unwind_Exception *a1)
{
}

void sub_100070FA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained status] == (id)1)
    {
      id v8 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v7), "logCategory");
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      if (!os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT))
      {
LABEL_10:

        goto LABEL_11;
      }

      uint64_t v11 = *(void *)(a1 + 32);
      int v32 = 134218498;
      uint64_t v33 = v11;
      __int16 v34 = 2114;
      id v35 = (id)objc_opt_class(v6, v10);
      __int16 v36 = 2048;
      uint64_t v37 = v6;
      id v12 = v35;
      id v13 = "CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.";
    }

    else
    {
      if ([v6 status] == (id)2)
      {
        id v15 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v14), "logCategory");
        uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v18 = *(void *)(a1 + 32);
          int v32 = 134218498;
          uint64_t v33 = v18;
          __int16 v34 = 2114;
          id v35 = (id)objc_opt_class(v6, v17);
          __int16 v36 = 2048;
          uint64_t v37 = v6;
          id v19 = v35;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.",  (uint8_t *)&v32,  0x20u);
        }

        [*(id *)(a1 + 32) _enqueueFailedOperation:v6];
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) underlyingConnection]);
        [v9 disconnect];
        goto LABEL_10;
      }

      if ([v6 status] == (id)3)
      {
        id v22 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v21), "logCategory");
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v22);
        if (!os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_10;
        }
        uint64_t v24 = *(void *)(a1 + 32);
        int v32 = 134218498;
        uint64_t v33 = v24;
        __int16 v34 = 2114;
        id v35 = (id)objc_opt_class(v6, v23);
        __int16 v36 = 2048;
        uint64_t v37 = v6;
        id v12 = v35;
        id v13 = "CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperationSt"
              "atusPermanentlyFailed.";
      }

      else
      {
        id v25 = [v6 status];
        id v27 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v26), "logCategory");
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v27);
        BOOL v28 = os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT);
        if (v25 == (id)4)
        {
          if (!v28) {
            goto LABEL_10;
          }
          uint64_t v30 = *(void *)(a1 + 32);
          int v32 = 134218498;
          uint64_t v33 = v30;
          __int16 v34 = 2114;
          id v35 = (id)objc_opt_class(v6, v29);
          __int16 v36 = 2048;
          uint64_t v37 = v6;
          id v12 = v35;
          id v13 = "CloudLibrary %p - Background operation of type %{public}@ %p completed with status CloudLibraryOperation"
                "StatusCancelled.";
        }

        else
        {
          if (!v28) {
            goto LABEL_10;
          }
          uint64_t v31 = *(void *)(a1 + 32);
          int v32 = 134218498;
          uint64_t v33 = v31;
          __int16 v34 = 2114;
          id v35 = (id)objc_opt_class(v6, v29);
          __int16 v36 = 2048;
          uint64_t v37 = v6;
          id v12 = v35;
          id v13 = "CloudLibrary %p - BACKGROUND OPERATION FAILED TO SET STATUS %{public}@ %p";
        }
      }
    }

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v9, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v32, 0x20u);

    goto LABEL_10;
  }

void sub_1000712D0(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) failedToConnect];
  uint64_t v3 = *(void **)(a1 + 32);
  if ((v2 & 1) != 0)
  {
    _[v3 _enqueuePendingOperation:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 underlyingConnection]);
    [*(id *)(a1 + 40) setConnection:v4];

    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) completionBlock]);
    objc_initWeak(&location, *(id *)(a1 + 40));
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472LL;
    uint64_t v10 = sub_100071420;
    uint64_t v11 = &unk_1001A4D70;
    objc_copyWeak(&v14, &location);
    uint64_t v12 = *(void *)(a1 + 32);
    id v6 = v5;
    id v13 = v6;
    [*(id *)(a1 + 40) setCompletionBlock:&v8];
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server", v8, v9, v10, v11, v12));
    [v7 addOperation:*(void *)(a1 + 40) priority:*(unsigned int *)(a1 + 48)];

    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }

void sub_100071400(_Unwind_Exception *a1)
{
}

void sub_100071420(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained status] == (id)1)
    {
      id v8 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v7), "logCategory");
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      if (!os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT))
      {
LABEL_10:

        goto LABEL_11;
      }

      uint64_t v11 = *(void *)(a1 + 32);
      int v32 = 134218498;
      uint64_t v33 = v11;
      __int16 v34 = 2114;
      id v35 = (id)objc_opt_class(v6, v10);
      __int16 v36 = 2048;
      uint64_t v37 = v6;
      id v12 = v35;
      id v13 = "CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusSuccess.";
    }

    else
    {
      if ([v6 status] == (id)2)
      {
        id v15 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v14), "logCategory");
        uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v18 = *(void *)(a1 + 32);
          int v32 = 134218498;
          uint64_t v33 = v18;
          __int16 v34 = 2114;
          id v35 = (id)objc_opt_class(v6, v17);
          __int16 v36 = 2048;
          uint64_t v37 = v6;
          id v19 = v35;
          _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusFailed.",  (uint8_t *)&v32,  0x20u);
        }

        [*(id *)(a1 + 32) _enqueueFailedOperation:v6];
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) underlyingConnection]);
        [v9 disconnect];
        goto LABEL_10;
      }

      if ([v6 status] == (id)3)
      {
        id v22 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v21), "logCategory");
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v22);
        if (!os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_10;
        }
        uint64_t v24 = *(void *)(a1 + 32);
        int v32 = 134218498;
        uint64_t v33 = v24;
        __int16 v34 = 2114;
        id v35 = (id)objc_opt_class(v6, v23);
        __int16 v36 = 2048;
        uint64_t v37 = v6;
        id v12 = v35;
        id v13 = "CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusPermanentlyFailed.";
      }

      else
      {
        id v25 = [v6 status];
        id v27 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 32), v26), "logCategory");
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v27);
        BOOL v28 = os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_DEFAULT);
        if (v25 == (id)4)
        {
          if (!v28) {
            goto LABEL_10;
          }
          uint64_t v30 = *(void *)(a1 + 32);
          int v32 = 134218498;
          uint64_t v33 = v30;
          __int16 v34 = 2114;
          id v35 = (id)objc_opt_class(v6, v29);
          __int16 v36 = 2048;
          uint64_t v37 = v6;
          id v12 = v35;
          id v13 = "CloudLibrary %p - Operation of type %{public}@ %p completed with status CloudLibraryOperationStatusCancelled.";
        }

        else
        {
          if (!v28) {
            goto LABEL_10;
          }
          uint64_t v31 = *(void *)(a1 + 32);
          int v32 = 134218498;
          uint64_t v33 = v31;
          __int16 v34 = 2114;
          id v35 = (id)objc_opt_class(v6, v29);
          __int16 v36 = 2048;
          uint64_t v37 = v6;
          id v12 = v35;
          id v13 = "CloudLibrary %p - OPERATION FAILED TO SET STATUS %{public}@ %p";
        }
      }
    }

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v9, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v32, 0x20u);

    goto LABEL_10;
  }

void sub_100072038(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v8 = v7;
  if (v5)
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    *(_DWORD *)uint64_t v17 = 134217984;
    *(void *)&void v17[4] = [v5 responseCode];
    uint64_t v9 = "Set item properties response status code: %lu";
    uint64_t v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
    uint32_t v12 = 12;
  }

  else
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_FAULT)) {
      goto LABEL_7;
    }
    *(_WORD *)uint64_t v17 = 0;
    uint64_t v9 = "Set item properties received no response";
    uint64_t v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_FAULT;
    uint32_t v12 = 2;
  }

  _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, v17, v12);
LABEL_7:

  if (v6)
  {
    id v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t v17 = 138543362;
      *(void *)&void v17[4] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Set item properties response failed with error: %{public}@",  v17,  0xCu);
    }
  }

  uint64_t v14 = *(void **)(a1 + 32);
  uint64_t v15 = (uint64_t)objc_msgSend(v5, "responseCode", *(_OWORD *)v17);
  if (v15 > 399)
  {
    if (v15 != 404 && v15 != 400) {
      goto LABEL_18;
    }
    uint64_t v16 = 3LL;
  }

  else
  {
    uint64_t v16 = 1LL;
    if (v15 != 200 && v15 != 204) {
LABEL_18:
    }
      uint64_t v16 = 2LL;
  }

  [v14 setStatus:v16];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100073370( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_10007363C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000738B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100073C9C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100073EB8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000742E0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100074594( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_10007486C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100074A78( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100074C98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100074EB8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000750D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100075334( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000756E8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100075AE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100075D08( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100075F28( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_10007615C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100076390( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000765C4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100076C40( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_100076F20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000774F0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100077820( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_100077AE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100077CFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000780F4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_100078410( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_10007872C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
}

void sub_10007890C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100078AE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100078CE4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100078EE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000790E4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000792FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000794D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10007A3C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      *(_DWORD *)buf = 138543618;
      uint64_t v20 = v6;
      __int16 v21 = 2114;
      id v22 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@ Completed cloud library update error=%{public}@",  buf,  0x16u);
    }

LABEL_5:
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    goto LABEL_12;
  }

  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v20 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Completed cloud library update",  buf,  0xCu);
  }

  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    os_log_type_t v11 = *(void **)(a1 + 56);
    *(_DWORD *)buf = 138543618;
    uint64_t v20 = v10;
    __int16 v21 = 2048;
    id v22 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Requesting subscribed playlist update for %lld",  buf,  0x16u);
  }

  uint32_t v12 = *(void **)(a1 + 32);
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(a1 + 56)));
  uint64_t v18 = v13;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v18, 1LL));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_10007A778;
  v16[3] = &unk_1001A7220;
  uint64_t v15 = *(void *)(a1 + 40);
  void v16[4] = *(void *)(a1 + 32);
  id v17 = *(id *)(a1 + 48);
  [v12 updateSubscribedPlaylistsWithSagaIDs:v14 ignoreMinRefreshInterval:1 requestReason:8 pinnedOnly:0 clientIdentity:v15 completionHandler:v16];

LABEL_12:
}

void sub_10007A630(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      int v9 = 138543618;
      uint64_t v10 = v6;
      __int16 v11 = 2114;
      uint32_t v12 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@ Completed subscribed playlist update error=%{public}@",  (uint8_t *)&v9,  0x16u);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 138543362;
    uint64_t v10 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Completed subscribed playlist update",  (uint8_t *)&v9,  0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10007A778(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      int v9 = 138543618;
      uint64_t v10 = v6;
      __int16 v11 = 2114;
      uint32_t v12 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@ Completed subscribed playlist update error=%{public}@",  (uint8_t *)&v9,  0x16u);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 138543362;
    uint64_t v10 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Completed subscribed playlist update",  (uint8_t *)&v9,  0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10007A8C0(uint64_t a1)
{
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v9 + 1) + 8LL * (void)v6);
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "msv_errorByRemovingUnsafeUserInfo", (void)v9));
        (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);

        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v4);
  }
}

uint64_t sub_10007A9D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10007A9E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7007LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10007AA44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2013LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_10007AA98(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10007AAA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2003LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10007AAFC(uint64_t a1)
{
  if (*(void *)(a1 + 56) && *(void *)(*(void *)(a1 + 32) + 56LL))
  {
    id v2 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v37 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Cloud library update already in progress, attaching completion handler.",  buf,  0xCu);
    }

    id v4 = *(void **)(*(void *)(a1 + 32) + 64LL);
    id v5 = [*(id *)(a1 + 56) copy];
    [v4 addObject:v5];
  }

  if (!*(void *)(*(void *)(a1 + 32) + 56LL))
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t StringForRequestReason = ICCloudClientGetStringForRequestReason(*(void *)(a1 + 64));
      __int128 v9 = (void *)objc_claimAutoreleasedReturnValue(StringForRequestReason);
      *(_DWORD *)buf = 138543618;
      uint64_t v37 = v7;
      __int16 v38 = 2114;
      uint64_t v39 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Enqueuing update cloud library operation (requestReason = %{public}@)",  buf,  0x16u);
    }

    __int128 v10 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 daemonOptionsForConfiguration:*(void *)(*(void *)(a1 + 32) + 96)]);

    unsigned int v12 = [v11 prohibitLibraryUpload];
    unsigned __int8 v13 = [v11 prohibitArtworkPrefetch];
    os_log_t v14 = (os_log_t)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
    char v15 = v13 ^ 1;
    if (-[os_log_s isWatch](v14, "isWatch"))
    {
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICEnvironmentMonitor sharedMonitor](&OBJC_CLASS___ICEnvironmentMonitor, "sharedMonitor"));
      unsigned __int8 v17 = [v16 isCharging];

      if ((v17 & 1) != 0)
      {
LABEL_15:
        id v18 = *(id *)(*(void *)(a1 + 32) + 96LL);
        id v19 = -[CloudUpdateLibraryOperation initWithConfiguration:clientIdentity:reason:updateTaskHelper:]( objc_alloc(&OBJC_CLASS___CloudUpdateLibraryOperation),  "initWithConfiguration:clientIdentity:reason:updateTaskHelper:",  v18,  *(void *)(a1 + 40),  *(void *)(a1 + 64),  *(void *)(*(void *)(a1 + 32) + 88LL));
        uint64_t v20 = *(void **)(*(void *)(a1 + 32) + 56LL);
        *(void *)(*(void *)(a1 + 32) + 56LL) = v19;

        __int16 v21 = *(void **)(a1 + 56);
        if (v21)
        {
          id v22 = *(void **)(*(void *)(a1 + 32) + 64LL);
          id v23 = [v21 copy];
          [v22 addObject:v23];
        }

        [*(id *)(*(void *)(a1 + 32) + 56) setUploadingLibraryIsSupported:v12 ^ 1];
        [*(id *)(*(void *)(a1 + 32) + 56) setAllowNoisyAuthPrompt:*(unsigned __int8 *)(a1 + 72)];
        [*(id *)(*(void *)(a1 + 32) + 56) setIsExplicitUserAction:*(unsigned __int8 *)(a1 + 73)];
        objc_initWeak(&location, *(id *)(a1 + 32));
        objc_initWeak(&from, *(id *)(*(void *)(a1 + 32) + 56LL));
        uint64_t v26 = _NSConcreteStackBlock;
        uint64_t v27 = 3221225472LL;
        BOOL v28 = sub_10007AF88;
        uint64_t v29 = &unk_1001A3D50;
        objc_copyWeak(&v31, &location);
        objc_copyWeak(&v32, &from);
        char v33 = v15;
        id v30 = *(id *)(a1 + 40);
        [*(id *)(*(void *)(a1 + 32) + 56) setCompletionBlock:&v26];
        objc_msgSend( *(id *)(*(void *)(a1 + 32) + 56),  "setName:",  @"com.apple.itunescloudd.SagaRequestHandler.updateLibraryOperation",  v26,  v27,  v28,  v29);
        [*(id *)(a1 + 48) addOperation:*(void *)(*(void *)(a1 + 32) + 56) priority:2];
        uint64_t v24 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v25 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          uint64_t v37 = v25;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Posting Saga update in progress changed notification",  buf,  0xCu);
        }

        objc_destroyWeak(&v32);
        objc_destroyWeak(&v31);
        objc_destroyWeak(&from);
        objc_destroyWeak(&location);

        return;
      }

      os_log_t v14 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Not performing artwork update because power is required",  buf,  2u);
      }

      char v15 = 0;
    }

    goto LABEL_15;
  }

void sub_10007AF50( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
}

void sub_10007AF88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = v3;
  if (WeakRetained)
  {
    id v5 = (dispatch_queue_s *)WeakRetained[5];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_10007B050;
    v6[3] = &unk_1001A3D28;
    id v7 = v3;
    uint64_t v8 = WeakRetained;
    char v10 = *(_BYTE *)(a1 + 56);
    id v9 = *(id *)(a1 + 32);
    dispatch_async(v5, v6);
  }
}

void sub_10007B050(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) status];
  id v3 = *(void **)(a1 + 40);
  if (v2 == (id)1)
  {
    id v4 = (void *)v3[12];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472LL;
    v22[2] = sub_10007B410;
    void v22[3] = &unk_1001A3D00;
    char v26 = *(_BYTE *)(a1 + 56);
    id v23 = *(id *)(a1 + 32);
    id v24 = *(id *)(a1 + 40);
    id v25 = *(id *)(a1 + 48);
    id v5 = v4;
    uint64_t v6 = v22;
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 userIdentityStore]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 userIdentity]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    v42[0] = 0LL;
    char v10 = (void *)objc_claimAutoreleasedReturnValue([v7 getPropertiesForUserIdentity:v8 error:v42]);
    id v11 = v42[0];
    if (v11 || !v10)
    {
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
      id v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
      block = _NSConcreteStackBlock;
      uint64_t v28 = 3221225472LL;
      uint64_t v29 = sub_1000C30CC;
      id v30 = &unk_1001A6BB8;
      id v32 = v6;
      id v31 = v11;
      dispatch_async(v18, &block);
    }

    else
    {
      uint64_t v36 = 0LL;
      uint64_t v37 = &v36;
      uint64_t v38 = 0x3032000000LL;
      uint64_t v39 = sub_1000C1AE4;
      uint64_t v40 = sub_1000C1AF4;
      unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue([v10 cloudLibraryStateReason]);
      id v41 = [v12 mutableCopy];

      uint64_t v13 = objc_claimAutoreleasedReturnValue([(id)v37[5] objectForKey:@"EnableCloudLibraryFailureReasonKey"]);
      id v20 = v9;
      uint64_t v14 = objc_claimAutoreleasedReturnValue([(id)v37[5] objectForKey:@"AutoEnableCloudLibraryFailureReasonKey"]);
      if (v13 | v14)
      {
        v35[0] = _NSConcreteStackBlock;
        v35[1] = 3221225472LL;
        v35[2] = sub_1000C30DC;
        v35[3] = &unk_1001A5240;
        void v35[4] = &v36;
        block = _NSConcreteStackBlock;
        uint64_t v28 = 3221225472LL;
        uint64_t v29 = sub_1000C3154;
        id v30 = &unk_1001A5268;
        __int16 v34 = &v36;
        char v15 = v8;
        id v31 = v15;
        id v32 = (dispatch_queue_s *)v20;
        char v33 = v6;
        [v7 insertPropertiesForUserIdentity:v15 andPostAccountChangeNotification:0 usingBlock:v35 completionHandler:&block];

        uint64_t v16 = v32;
      }

      else
      {
        dispatch_queue_global_t v19 = dispatch_get_global_queue(0LL, 0LL);
        uint64_t v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v19);
        block = _NSConcreteStackBlock;
        uint64_t v28 = 3221225472LL;
        uint64_t v29 = sub_1000C32E4;
        id v30 = &unk_1001A6BE0;
        id v31 = v6;
        dispatch_async(v16, &block);
      }

      _Block_object_dispose(&v36, 8);
      id v9 = v20;
    }
  }

  else
  {
    id v21 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
    [v3 _handleCloudLibraryUpdateOperationFinishedWithError:v21];
  }

void sub_10007B3F4(_Unwind_Exception *a1)
{
}

void sub_10007B410(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 40);
  id v5 = (dispatch_queue_s *)v4[5];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_10007B4CC;
  v6[3] = &unk_1001A6C30;
  id v7 = v4;
  id v8 = *(id *)(a1 + 32);
  dispatch_async(v5, v6);
}

void sub_10007B4CC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) error]);
  [v1 _handleCloudLibraryUpdateOperationFinishedWithError:v2];
}

void sub_10007B50C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = [WeakRetained libraryUpdateRequired];
  id v5 = [WeakRetained playlistCloudLibraryID];
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained updatedInvitationURL]);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, void *, void *))(v7 + 16))(v7, v6, v8);
  }

  else
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10007B62C;
    v10[3] = &unk_1001A7220;
    id v9 = *(void **)(a1 + 32);
    id v12 = *(id *)(a1 + 40);
    id v11 = v6;
    [v9 _handleLibraryEditOperationCompletionUpdatingLibrary:v4 andSubscribedPlaylist:v5 completion:v10];
  }
}

void sub_10007B62C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v3, v4);
}

void sub_10007B678(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = [WeakRetained libraryUpdateRequired];
  id v5 = [WeakRetained playlistCloudLibraryID];
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }

  else
  {
    id v8 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10007B768;
    v10[3] = &unk_1001A50C0;
    id v9 = *(void **)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    [v9 _handleLibraryEditOperationCompletionUpdatingLibrary:v4 andSubscribedPlaylist:v8 completion:v10];
  }
}

void sub_10007B768(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_10007B7B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = [WeakRetained libraryUpdateRequired];
  id v5 = [WeakRetained playlistCloudLibraryID];
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }

  else
  {
    id v8 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10007B8A0;
    v10[3] = &unk_1001A50C0;
    id v9 = *(void **)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    [v9 _handleLibraryEditOperationCompletionUpdatingLibrary:v4 andSubscribedPlaylist:v8 completion:v10];
  }
}

void sub_10007B8A0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_10007B8E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = [WeakRetained libraryUpdateRequired];
  id v5 = [WeakRetained resultingPlaylistCloudLibraryID];
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, id, void *))(v6 + 16))(v6, v5, v7);
  }

  else
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10007B9DC;
    void v9[3] = &unk_1001A3CD8;
    id v8 = *(void **)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    id v11 = v5;
    [v8 _handleLibraryEditOperationCompletionUpdatingLibrary:v4 andSubscribedPlaylist:v5 completion:v9];
  }
}

void sub_10007B9DC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v3, v4);
}

void sub_10007BA28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = [WeakRetained libraryUpdateRequired];
  id v5 = [WeakRetained playlistCloudLibraryID];
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }

  else
  {
    id v8 = v5;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10007BB18;
    v10[3] = &unk_1001A50C0;
    id v9 = *(void **)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    [v9 _handleLibraryEditOperationCompletionUpdatingLibrary:v4 andSubscribedPlaylist:v8 completion:v10];
  }
}

void sub_10007BB18(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_10007BB60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = [WeakRetained libraryUpdateRequired];
  id v5 = [WeakRetained resultingPlaylistCloudLibraryID];
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, id, void *))(v6 + 16))(v6, v5, v7);
  }

  else
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10007BC54;
    void v9[3] = &unk_1001A3CD8;
    id v8 = *(void **)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    id v11 = v5;
    [v8 _handleLibraryEditOperationCompletionUpdatingLibrary:v4 andSubscribedPlaylist:v5 completion:v9];
  }
}

void sub_10007BC54(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v3, v4);
}

void sub_10007BCA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = [WeakRetained libraryUpdateRequired];
  id v5 = [WeakRetained resultingCollaborationCloudLibraryID];
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));
    (*(void (**)(uint64_t, id, void *))(v6 + 16))(v6, v5, v7);
  }

  else
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10007BD94;
    void v9[3] = &unk_1001A3CD8;
    id v8 = *(void **)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    id v11 = v5;
    [v8 _handleLibraryEditOperationCompletionUpdatingLibrary:v4 andSubscribedPlaylist:0 completion:v9];
  }
}

void sub_10007BD94(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v3, v4);
}

void sub_10007BDE0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

void sub_10007BE50(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

void sub_10007BEC0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

void sub_10007BF30(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

void sub_10007BFA0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

id sub_10007C010(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 56LL);
  if (result)
  {
    id result = [result progress];
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v3;
  }

  return result;
}

uint64_t sub_10007C048(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007C05C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    int v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

void sub_10007C0CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained itemIDs]);
    (*(void (**)(uint64_t, void *, void))(v1 + 16))(v1, v2, 0LL);
  }

uint64_t sub_10007C138(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

uint64_t sub_10007C154(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5]);
}

void sub_10007C168(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained cloudArtworkInfoDictionaries]);
    (*(void (**)(uint64_t, void *, void))(v1 + 16))(v1, v2, 0LL);
  }

uint64_t sub_10007C1D4(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007C1F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  NSURLErrorDomain,  -999LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10007C254(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained cloudArtworkInfoDictionaries]);
    (*(void (**)(uint64_t, void *, void))(v1 + 16))(v1, v2, 0LL);
  }

uint64_t sub_10007C2C0(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007C2DC(void *a1, uint64_t a2)
{
  if (a2)
  {
    [*(id *)(a1[4] + 16) importContainerArtworkForSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    int v3 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = a1[7];
      *(_DWORD *)buf = 138543618;
      uint64_t v11 = v4;
      __int16 v12 = 2048;
      uint64_t v13 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - No active locker account, skipping import container artwork for saga ID: %llu",  buf,  0x16u);
    }

    uint64_t v6 = (void *)a1[6];
    if (v6)
    {
      uint64_t v7 = *(dispatch_queue_s **)(a1[4] + 48LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10007C42C;
      block[3] = &unk_1001A6BE0;
      id v9 = v6;
      dispatch_async(v7, block);
    }
  }

void sub_10007C42C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2009LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10007C480(void *a1, uint64_t a2)
{
  if (a2)
  {
    [*(id *)(a1[4] + 16) importScreenshotForSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    int v3 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = a1[7];
      *(_DWORD *)buf = 138543618;
      uint64_t v11 = v4;
      __int16 v12 = 2048;
      uint64_t v13 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - No active locker account, skipping import screenshot for saga ID: %llu",  buf,  0x16u);
    }

    uint64_t v6 = (void *)a1[6];
    if (v6)
    {
      uint64_t v7 = *(dispatch_queue_s **)(a1[4] + 48LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10007C5D0;
      block[3] = &unk_1001A6BE0;
      id v9 = v6;
      dispatch_async(v7, block);
    }
  }

void sub_10007C5D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2009LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10007C624(void *a1, uint64_t a2)
{
  if (a2)
  {
    [*(id *)(a1[4] + 16) importItemArtworkForSagaID:a1[7] clientIdentity:a1[5] completionHandler:a1[6]];
  }

  else
  {
    int v3 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = a1[7];
      *(_DWORD *)buf = 138543618;
      uint64_t v11 = v4;
      __int16 v12 = 2048;
      uint64_t v13 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - No active locker account, skipping import item artwork for saga ID: %llu",  buf,  0x16u);
    }

    uint64_t v6 = (void *)a1[6];
    if (v6)
    {
      uint64_t v7 = *(dispatch_queue_s **)(a1[4] + 48LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10007C774;
      block[3] = &unk_1001A6BE0;
      id v9 = v6;
      dispatch_async(v7, block);
    }
  }

void sub_10007C774(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2009LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

id sub_10007C7C8(void *a1)
{
  *(_BYTE *)(*(void *)(a1[5] + 8LL) + 24LL) = *(void *)(a1[4] + 56LL) != 0LL;
  id result = [*(id *)(a1[4] + 56) isInitialUpdate];
  *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_10007C814(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007C87C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007C890(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007C8F8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007C90C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007C974(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007C988(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    int v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

uint64_t sub_10007C9F8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007CA0C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    int v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

uint64_t sub_10007CA7C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007CA90(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained updateRequired])
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    _DWORD v7[2] = sub_10007CB9C;
    v7[3] = &unk_1001A7220;
    int v3 = *(void **)(a1 + 32);
    id v9 = *(id *)(a1 + 40);
    id v8 = WeakRetained;
    [v3 _handleLibraryEditOperationCompletionUpdatingLibrary:1 andSubscribedPlaylist:0 completion:v7];
  }

  else
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4)
    {
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained globalIDToSagaIDMap]);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
      (*(void (**)(uint64_t, void *, void *))(v4 + 16))(v4, v5, v6);
    }
  }
}

uint64_t sub_10007CB80(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007CB9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (v1)
  {
    id v4 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) globalIDToSagaIDMap]);
    int v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
    (*(void (**)(uint64_t, id, void *))(v1 + 16))(v1, v4, v3);
  }

uint64_t sub_10007CC14(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10007CC28(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007CC44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained updateRequired]) {
    [*(id *)(a1 + 32) _handleLibraryEditOperationCompletionUpdatingLibrary:1 andSubscribedPlaylist:0 completion:&stru_1001A3CB0];
  }
  uint64_t v2 = *(void *)(a1 + 40);
  int v3 = WeakRetained;
  if (v2)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained adamIDToSagaIDMap]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *, void *))(v2 + 16))(v2, v4, v5);

    int v3 = WeakRetained;
  }
}

uint64_t sub_10007CCE8(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007CD08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007CD70(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007CD84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

void sub_10007CDEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007CE54(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007CE68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007CED0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007CEE4(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    int v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained playlistGlobalID]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained playlistShareURL]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *, void *, void *))(v2 + 16))(v2, v3, v4, v5);
  }

uint64_t sub_10007CF90(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(result + 16))(result, 0LL, 0LL, a2);
  }
  return result;
}

void sub_10007CFB0(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    int v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);

    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
    }

    else
    {
      uint64_t v6 = *(void **)(a1 + 32);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained clientIdentity]);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      _DWORD v8[2] = sub_10007D0BC;
      void v8[3] = &unk_1001A50C0;
      id v9 = *(id *)(a1 + 40);
      [v6 updateLibraryWithClientIdentity:v7 reason:8 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:v8];
    }
  }

uint64_t sub_10007D0A8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10007D0BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10007D0C8(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if ([WeakRetained libraryUpdateRequired])
    {
      uint64_t v2 = *(void **)(a1 + 32);
      int v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained clientIdentity]);
      [v2 updateLibraryWithClientIdentity:v3 reason:8 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:&stru_1001A3C90];
    }

    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }

uint64_t sub_10007D188(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007D1A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007D208(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10007D21C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_10007D230(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007D24C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
  }

uint64_t sub_10007D2B4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007D2C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained updateRequired]) {
    [*(id *)(a1 + 32) _handleLibraryEditOperationCompletionUpdatingLibrary:1 andSubscribedPlaylist:0 completion:&stru_1001A3C70];
  }
  uint64_t v2 = *(void *)(a1 + 40);
  int v3 = WeakRetained;
  if (v2)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v4);

    int v3 = WeakRetained;
  }
}

uint64_t sub_10007D34C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10007D364(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = [WeakRetained playlistSagaID];
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, id, void *))(v2 + 16))(v2, v3, v4);
  }

uint64_t sub_10007D3F0(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007D40C(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);

    if (v3)
    {
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
      (*(void (**)(uint64_t, void, void *))(v4 + 16))(v4, 0LL, v5);
    }

    else
    {
      uint64_t v6 = *(void **)(a1 + 32);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained clientIdentity]);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      _DWORD v8[2] = sub_10007D534;
      void v8[3] = &unk_1001A7220;
      id v10 = *(id *)(a1 + 40);
      id v9 = WeakRetained;
      [v6 updateLibraryWithClientIdentity:v7 reason:8 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:v8];
    }
  }

uint64_t sub_10007D518(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007D534(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v4 = a2;
  (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, [v3 playlistSagaID], v4);
}

void sub_10007D580(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = [WeakRetained playlistSagaID];
    id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, id, void *))(v2 + 16))(v2, v3, v4);
  }

uint64_t sub_10007D60C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_10007D628(void *a1)
{
  uint64_t v2 = *(void *)(a1[4] + 80LL);
  id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      uint64_t v5 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v21 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Postponing playlist play data timer due to continued updates",  buf,  0xCu);
    }

    uint64_t v6 = *(dispatch_source_s **)(a1[4] + 80LL);
    dispatch_time_t v7 = dispatch_time(0LL, 1000000000LL);
    dispatch_source_set_timer(v6, v7, 0xFFFFFFFFFFFFFFFFLL, 0x989680uLL);
  }

  else
  {
    if (v4)
    {
      uint64_t v8 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v21 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Created timer to update playlist play data",  buf,  0xCu);
    }

    dispatch_source_t v9 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1[4] + 32LL));
    uint64_t v10 = a1[4];
    uint64_t v11 = *(void **)(v10 + 80);
    *(void *)(v10 + 80) = v9;

    __int16 v12 = *(dispatch_source_s **)(a1[4] + 80LL);
    dispatch_time_t v13 = dispatch_time(0LL, 1000000000LL);
    dispatch_source_set_timer(v12, v13, 0xFFFFFFFFFFFFFFFFLL, 0x989680uLL);
    uint64_t v14 = a1[4];
    char v15 = (void *)a1[5];
    uint64_t v16 = *(dispatch_source_s **)(v14 + 80);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_10007D824;
    handler[3] = &unk_1001A5D08;
    handler[4] = v14;
    id v18 = v15;
    uint64_t v19 = a1[6];
    dispatch_source_set_event_handler(v16, handler);
    dispatch_resume(*(dispatch_object_t *)(a1[4] + 80LL));
  }

void sub_10007D824(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 104) sagaLastPlaylistPlayDataUploadDate]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v3 timeIntervalSinceDate:v2];
  double v5 = v4;

  if (v2 && v5 <= *(double *)(a1 + 48))
  {
    dispatch_source_t v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 48);
      int v21 = 138543874;
      uint64_t v22 = v16;
      __int16 v23 = 2048;
      uint64_t v24 = *(void *)&v5;
      __int16 v25 = 2048;
      uint64_t v26 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Skipping playlist play data upload (minimum time interval not satisfied (%.0f < %.0f)",  (uint8_t *)&v21,  0x20u);
    }
  }

  else
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      [v2 timeIntervalSince1970];
      int v21 = 138543618;
      uint64_t v22 = v7;
      __int16 v23 = 2048;
      uint64_t v24 = (uint64_t)v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Uploading playlist play data since %{time}zd",  (uint8_t *)&v21,  0x16u);
    }

    dispatch_source_t v9 = -[CloudLibraryOperation initWithConfiguration:clientIdentity:]( objc_alloc(&OBJC_CLASS___SagaUploadPlaylistPlayDataOperation),  "initWithConfiguration:clientIdentity:",  *(void *)(*(void *)(a1 + 32) + 96LL),  *(void *)(a1 + 40));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _library]);
    [v10 addOperation:v9 priority:2];

    -[os_log_s waitUntilFinished](v9, "waitUntilFinished");
    id v11 = -[os_log_s status](v9, "status");
    if (v11 == (id)1)
    {
      __int16 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [*(id *)(*(void *)(a1 + 32) + 104) setSagaLastPlaylistPlayDataUploadDate:v12];
    }

    else
    {
      unint64_t v13 = (unint64_t)v11;
      __int16 v12 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        if (v13 > 4) {
          char v15 = @"Unknown Cloud Library Operation Status";
        }
        else {
          char v15 = *(&off_1001A3DC0 + v13);
        }
        id v18 = v15;
        int v21 = 138543618;
        uint64_t v22 = v14;
        __int16 v23 = 2114;
        uint64_t v24 = (uint64_t)v18;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Upload playlist play data operation failed with status: %{public}@",  (uint8_t *)&v21,  0x16u);
      }
    }
  }

  dispatch_source_cancel(*(dispatch_source_t *)(*(void *)(a1 + 32) + 80LL));
  uint64_t v19 = *(void *)(a1 + 32);
  id v20 = *(void **)(v19 + 80);
  *(void *)(v19 + 80) = 0LL;
}

void sub_10007DB08(void *a1)
{
  uint64_t v2 = *(void *)(a1[4] + 72LL);
  id v3 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      uint64_t v5 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v21 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Postponing item play data timer due to continued updates",  buf,  0xCu);
    }

    uint64_t v6 = *(dispatch_source_s **)(a1[4] + 72LL);
    dispatch_time_t v7 = dispatch_time(0LL, 1000000000LL);
    dispatch_source_set_timer(v6, v7, 0xFFFFFFFFFFFFFFFFLL, 0x989680uLL);
  }

  else
  {
    if (v4)
    {
      uint64_t v8 = a1[4];
      *(_DWORD *)buf = 138543362;
      uint64_t v21 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Created timer to update item play data",  buf,  0xCu);
    }

    dispatch_source_t v9 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *(dispatch_queue_t *)(a1[4] + 24LL));
    uint64_t v10 = a1[4];
    id v11 = *(void **)(v10 + 72);
    *(void *)(v10 + 72) = v9;

    __int16 v12 = *(dispatch_source_s **)(a1[4] + 72LL);
    dispatch_time_t v13 = dispatch_time(0LL, 1000000000LL);
    dispatch_source_set_timer(v12, v13, 0xFFFFFFFFFFFFFFFFLL, 0x989680uLL);
    uint64_t v14 = a1[4];
    char v15 = (void *)a1[5];
    uint64_t v16 = *(dispatch_source_s **)(v14 + 72);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_10007DD04;
    handler[3] = &unk_1001A5D08;
    handler[4] = v14;
    id v18 = v15;
    uint64_t v19 = a1[6];
    dispatch_source_set_event_handler(v16, handler);
    dispatch_resume(*(dispatch_object_t *)(a1[4] + 72LL));
  }

void sub_10007DD04(double *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)a1 + 4) + 104) sagaLastItemPlayDataUploadDate]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v3 timeIntervalSinceDate:v2];
  double v5 = v4;

  if (v2 && v5 <= a1[6])
  {
    dispatch_source_t v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *((void *)a1 + 4);
      uint64_t v16 = *((void *)a1 + 6);
      *(_DWORD *)buf = 138543874;
      *(void *)&uint8_t buf[4] = v15;
      *(_WORD *)&buf[12] = 2048;
      *(double *)&buf[14] = v5;
      *(_WORD *)&_BYTE buf[22] = 2048;
      uint64_t v26 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Skipping item play data upload (minimum time interval not satisfied (%.0f < %.0f)",  buf,  0x20u);
    }
  }

  else
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *((void *)a1 + 4);
      [v2 timeIntervalSince1970];
      *(_DWORD *)buf = 138543618;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = (uint64_t)v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Uploading item play data since %{time}zd",  buf,  0x16u);
    }

    dispatch_source_t v9 = -[CloudLibraryOperation initWithConfiguration:clientIdentity:]( objc_alloc(&OBJC_CLASS___SagaUploadItemPlayDataOperation),  "initWithConfiguration:clientIdentity:",  *(void *)(*((void *)a1 + 4) + 96LL),  *((void *)a1 + 5));
    -[os_log_s setName:](v9, "setName:", @"com.apple.itunescloudd.SagaRequestHandler.uploadPlayDataOperation");
    *(void *)buf = 0LL;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000LL;
    LOBYTE(v26) = 1;
    uint64_t v10 = (void *)*((void *)a1 + 4);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    v20[2] = sub_10007E074;
    v20[3] = &unk_1001A3C50;
    void v20[4] = buf;
    [v10 _addLibraryOperation:v9 priority:2 noLibraryHandler:v20];
    if (*(_BYTE *)(*(void *)&buf[8] + 24LL)) {
      -[os_log_s waitUntilFinished](v9, "waitUntilFinished");
    }
    id v11 = -[os_log_s status](v9, "status");
    if (v11 == (id)1)
    {
      __int16 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [*(id *)(*((void *)a1 + 4) + 104) setSagaLastItemPlayDataUploadDate:v12];
    }

    else
    {
      __int16 v12 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        uint64_t v13 = *((void *)a1 + 4);
        else {
          uint64_t v14 = *(&off_1001A3DC0 + (void)v11);
        }
        uint64_t v17 = v14;
        *(_DWORD *)uint64_t v21 = 138543618;
        uint64_t v22 = v13;
        __int16 v23 = 2114;
        uint64_t v24 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "%{public}@ - Upload item play data operation failed with status: %{public}@",  v21,  0x16u);
      }
    }

    _Block_object_dispose(buf, 8);
  }

  dispatch_source_cancel(*(dispatch_source_t *)(*((void *)a1 + 4) + 72LL));
  uint64_t v18 = *((void *)a1 + 4);
  uint64_t v19 = *(void **)(v18 + 72);
  *(void *)(v18 + 72) = 0LL;
}

void sub_10007E050( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_10007E074(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 0;
  return result;
}

void sub_10007E084(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 libraryDAAPConfiguration]);
  double v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync_Oversize");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543618;
    uint64_t v12 = v5;
    __int16 v13 = 2114;
    uint64_t v14 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ = Fetched library DAAP configuration: %{public}@",  buf,  0x16u);
  }

  else {
    double v6 = (double)(uint64_t)[v3 playDataBatchIntervalInMinutes] * 60.0;
  }
  [*(id *)(a1 + 32) uploadPlaylistPropertiesWithClientIdentity:*(void *)(a1 + 40) minimumTimeInterval:v6];
  uint64_t v7 = *(void **)(a1 + 48);
  if (v7)
  {
    double v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 48LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10007E1F0;
    block[3] = &unk_1001A6BE0;
    id v10 = v7;
    dispatch_async(v8, block);
  }
}

uint64_t sub_10007E1F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10007E200(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 libraryDAAPConfiguration]);
  double v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync_Oversize");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543618;
    uint64_t v12 = v5;
    __int16 v13 = 2114;
    uint64_t v14 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Fetched library DAAP configuration: %{public}@",  buf,  0x16u);
  }

  else {
    double v6 = (double)(uint64_t)[v3 playDataBatchIntervalInMinutes] * 60.0;
  }
  [*(id *)(a1 + 32) uploadItemPropertiesWithClientIdentity:*(void *)(a1 + 40) minimumTimeInterval:v6];
  uint64_t v7 = *(void **)(a1 + 48);
  if (v7)
  {
    double v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 48LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10007E36C;
    block[3] = &unk_1001A6BE0;
    id v10 = v7;
    dispatch_async(v8, block);
  }
}

uint64_t sub_10007E36C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_10007E37C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 56) increasePriority];
}

id sub_10007E388(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 56) decreasePriority];
}

void sub_10007E394(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(dispatch_queue_s **)(v2 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10007E4B0;
  block[3] = &unk_1001A6B90;
  void block[4] = v2;
  dispatch_sync(v3, block);
  [*(id *)(*(void *)(a1 + 32) + 16) cancelAllImportsAndWaitForOperationsToFinish:0];
  [*(id *)(*(void *)(a1 + 32) + 8) cancelAllOperations];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(v4 + 8);
  *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;

  double v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v10 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - cancelOperations: - Done!",  buf,  0xCu);
  }
}

void sub_10007E4B0(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v6 = 138543362;
    uint64_t v7 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - cancelOperations: - _updateCloudLibraryOperation",  (uint8_t *)&v6,  0xCu);
  }

  [*(id *)(*(void *)(a1 + 32) + 56) cancel];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(v4 + 56);
  *(void *)(v4 + 56) = 0LL;
}

void sub_10007E57C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(dispatch_queue_s **)(v2 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10007E6F0;
  block[3] = &unk_1001A6B90;
  void block[4] = v2;
  dispatch_sync(v3, block);
  [*(id *)(*(void *)(a1 + 32) + 16) cancelAllImportsAndWaitForOperationsToFinish:1];
  [*(id *)(*(void *)(a1 + 32) + 8) cancelAllOperations];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(v4 + 8);
  *(void *)(v4 + _Block_object_dispose(va, 8) = 0LL;

  int v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v14 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - cancelOperationsWithCompletion: - Done!",  buf,  0xCu);
  }

  double v8 = *(void **)(a1 + 40);
  if (v8)
  {
    dispatch_source_t v9 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 48LL);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_10007E724;
    v10[3] = &unk_1001A6BE0;
    id v11 = v8;
    dispatch_async(v9, v10);
  }

void sub_10007E6F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 56);
  *(void *)(v2 + 56) = 0LL;
}

uint64_t sub_10007E724(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_10007E734(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 userIdentity]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 accountDSID]);
  int v6 = (void *)objc_claimAutoreleasedReturnValue([v3 stringByAppendingFormat:@".%@", v5]);

  return v6;
}

uint64_t sub_10007F358(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 itemIDs]);
  uint64_t v5 = *(void *)(a1 + 32);
  int v6 = *(void **)(v5 + 104);
  *(void *)(v5 + 104) = v4;

  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = (uint64_t)[v3 responseCode];

  if (v8 > 399)
  {
    if (v8 != 404 && v8 != 400) {
      goto LABEL_8;
    }
    uint64_t v9 = 3LL;
  }

  else
  {
    uint64_t v9 = 1LL;
    if (v8 != 200 && v8 != 204) {
LABEL_8:
    }
      uint64_t v9 = 2LL;
  }

  [v7 setStatus:v9];
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100088BE0(uint64_t a1, void *a2)
{
  uint64_t v3 = (uint64_t)[a2 code];
  if (v3 >= 1)
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      uint64_t v12 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Update Match Library failed with status: %ld",  buf,  0xCu);
    }
  }

  uint64_t v5 = *(void **)(a1 + 32);
  if (v5)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    _DWORD v8[2] = sub_100088D10;
    void v8[3] = &unk_1001A40A8;
    id v9 = v5;
    uint64_t v10 = v3;
    dispatch_async(v7, v8);
  }

uint64_t sub_100088D10(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(void *)(a1 + 40) == 0LL);
}

uint64_t sub_100088D28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100088D34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100088D40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100088D4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100088D5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100088D68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100088D78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100088D84(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc(&OBJC_CLASS___ICConnectionConfiguration);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  int v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  uint64_t v7 = -[ICConnectionConfiguration initWithUserIdentity:userIdentityStore:clientIdentity:]( v4,  "initWithUserIdentity:userIdentityStore:clientIdentity:",  v5,  v6,  *(void *)(a1 + 32));

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) handlerProvider]);
  id v16 = 0LL;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 handlerWithType:0 configuration:v7 error:&v16]);
  id v10 = v16;

  if (v9)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[ICConnectionConfiguration clientIdentity](v7, "clientIdentity"));
    [v9 disableCloudLibraryWithClientIdentity:v11 reason:*(void *)(a1 + 56) completionHandler:*(void *)(a1 + 48)];

    [v3 finish];
  }

  else
  {
    uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 134218498;
      uint64_t v18 = v13;
      __int16 v19 = 1024;
      int v20 = v14;
      __int16 v21 = 2114;
      id v22 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "CloudService %p - disableCloudLibraryWithReason (%d) - Unable to service request for cloud library - error=%{public}@",  buf,  0x1Cu);
    }

    [v3 finish];
    uint64_t v15 = *(void *)(a1 + 48);
    if (v15) {
      (*(void (**)(uint64_t, id))(v15 + 16))(v15, v10);
    }
  }
}

void sub_100088F64(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 handlerProvider]);
  uint64_t v6 = *(void *)(a1 + 40);
  id v16 = 0LL;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 handlerWithType:0 configuration:v6 error:&v16]);
  id v8 = v16;

  if (v7)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentity]);
    [v7 enableCloudLibraryWithClientIdentity:v9 startInitialImport:*(unsigned __int8 *)(a1 + 64) enableCloudLibraryPolicy:*(void *)(a1 + 56) isExplicitUserAction:*(unsigned __int8 *)(a1 + 65) completionHandler:*(void *)(a1 + 48)];

    [v4 finish];
  }

  else
  {
    id v10 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v12 = *(unsigned __int8 *)(a1 + 64);
      uint64_t v13 = *(void *)(a1 + 56);
      int v14 = *(unsigned __int8 *)(a1 + 65);
      *(_DWORD *)buf = 134219010;
      uint64_t v18 = v11;
      __int16 v19 = 1024;
      int v20 = v12;
      __int16 v21 = 1024;
      int v22 = v13;
      __int16 v23 = 1024;
      int v24 = v14;
      __int16 v25 = 2114;
      id v26 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "CloudService %p - authenticateForConfiguration (startInitialImport=%{BOOL}u, enableCloudLibraryPolicy=%d, isExpl icitUserAction=%{BOOL}u) - Unable to service request for cloud library - error=%{public}@",  buf,  0x28u);
    }

    [v4 finish];
    uint64_t v15 = *(void *)(a1 + 48);
    if (v15) {
      (*(void (**)(uint64_t, id))(v15 + 16))(v15, v8);
    }
  }
}

uint64_t sub_100089108(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0LL);
  }
  return result;
}

uint64_t sub_100089120(uint64_t a1, int a2, int a3, unsigned int a4, unsigned int a5)
{
  id v10 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v13 = 134219008;
    uint64_t v14 = v11;
    __int16 v15 = 1024;
    int v16 = a3;
    __int16 v17 = 1024;
    int v18 = a2;
    __int16 v19 = 1024;
    unsigned int v20 = a5;
    __int16 v21 = 1024;
    unsigned int v22 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadIsUpdateInProgressForConfiguration: Saga [initial import: %{BOOL}u. Update in progress: %{BO OL}u], Jalisco [initial import: %{BOOL}u. Update in progress: %{BOOL}u]",  (uint8_t *)&v13,  0x24u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a2 | a4, a3 | a5);
  }
  return result;
}

void sub_10008922C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218498;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    __int16 v13 = 2114;
    id v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadArtworkInfoForSubscriptionContainerPersistentIDs: - Sending subscription container artwork i nfo: %{public}@ - error=%{public}@",  (uint8_t *)&v9,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100089328(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218498;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    __int16 v13 = 2114;
    id v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadScreenshotInfoForSubscriptionPersistentIDs: - Sending subscription screenshot artwork info: %{public}@ - error=%{public}@",  (uint8_t *)&v9,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100089424(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218498;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    __int16 v13 = 2114;
    id v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadArtworkInfoForSubscriptionItemPersistentIDs: - Sending subscription item artwork info: %{pub lic}@ - error=%{public}@",  (uint8_t *)&v9,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_100089520(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10008952C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218498;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    __int16 v13 = 2114;
    id v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadScreenshotInfoForPurchaseHistoryIDs: - Sending purchase history screenshot artwork info: %{p ublic}@ - error=%{public}@",  (uint8_t *)&v9,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100089628(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218242;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - Sending purchase history artwork info: %{public}@",  (uint8_t *)&v9,  0x16u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_10008971C(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    double v4 = *(float *)(a1 + 48);
    int v6 = 134218240;
    uint64_t v7 = v3;
    __int16 v8 = 2048;
    double v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadSagaUpdateProgressForConfiguration: - Jalisco update progress: %f",  (uint8_t *)&v6,  0x16u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, float))(result + 16))(result, 0LL, *(float *)(a1 + 48));
  }
  return result;
}

uint64_t sub_1000897F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v8 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v11 = 134218496;
    uint64_t v12 = v9;
    __int16 v13 = 1024;
    int v14 = a5;
    __int16 v15 = 1024;
    int v16 = a4;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadIsJaliscoUpdateInProgressForConfiguration: - Jalisco initial import: %{BOOL}u. Update in progress: %{BOOL}u",  (uint8_t *)&v11,  0x18u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a4, a5);
  }
  return result;
}

uint64_t sub_1000898E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000898F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000898FC(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 dictionaryForBagKey:ICURLBagKeyPurchaseDAAP]);
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDictionary, v4);
  if ((objc_opt_isKindOfClass(v3, v5) & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v6 = ICGetCloudDAAPClientPrefix();
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue([v7 stringByAppendingString:@"update-on-app-focus-enabled"]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:v8]);
  uint64_t v10 = v9;
  id v11 = v9
      ? v9
      : (id)objc_claimAutoreleasedReturnValue([v3 objectForKey:@"update-on-app-focus-enabled"]);
  uint64_t v12 = v11;

  unsigned int v13 = (objc_opt_respondsToSelector(v12, "BOOLValue") & 1) != 0 ? [v12 BOOLValue] : 0;
  uint64_t v14 = ICGetCloudDAAPClientPrefix();
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  int v16 = (void *)objc_claimAutoreleasedReturnValue([v15 stringByAppendingString:@"update-polling-frequency-secs"]);
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:v16]);
  int v18 = v17;
  id v19 = v17
      ? v17
      : (id)objc_claimAutoreleasedReturnValue([v3 objectForKey:@"update-polling-frequency-secs"]);
  unsigned int v20 = v19;

  double v21 = (objc_opt_respondsToSelector(v20, "intValue") & 1) != 0 ? (double)(int)[v20 intValue] : 900.0;
  if (!v13)
  {
LABEL_23:
    id v30 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Jalisco] Periodic update on app focus disabled via bag.",  buf,  2u);
    }

    goto LABEL_29;
  }

  if (![*(id *)(a1 + 32) jaliscoOnDiskDatabaseRevision])
  {
LABEL_26:
    id v31 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Jalisco] Updating jalisco library...",  buf,  2u);
    }

    char v33 = *(void **)(a1 + 40);
    uint64_t v32 = *(void *)(a1 + 48);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472LL;
    void v34[2] = sub_100089CF8;
    v34[3] = &unk_1001A6398;
    id v35 = (os_log_s *)*(id *)(a1 + 32);
    [v33 updateJaliscoLibraryWithReason:7 forConfiguration:v32 completion:v34];
    id v30 = v35;
LABEL_29:

    goto LABEL_30;
  }

  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) jaliscoLastLibraryUpdateTime]);
  [v22 timeIntervalSinceReferenceDate];
  if (v23 <= 0.0)
  {

    goto LABEL_26;
  }

  int v24 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    [v22 timeIntervalSince1970];
    *(_DWORD *)buf = 134217984;
    uint64_t v37 = (uint64_t)v25;
    _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Jalisco] Last library update time: %{time_t}zd",  buf,  0xCu);
  }

  id v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v26 timeIntervalSinceDate:v22];
  double v28 = v27;

  uint64_t v29 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    uint64_t v37 = *(void *)&v28;
    __int16 v38 = 2048;
    double v39 = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Jalisco] Elapsed time since last library update: %g, minimum: %g",  buf,  0x16u);
  }

  if (v28 >= v21) {
    goto LABEL_26;
  }
LABEL_30:
}

void sub_100089CF8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [*(id *)(a1 + 32) setJaliscoLastLibraryUpdateTime:v3];
  }

void sub_100089D4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 0x100) != 0)
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) handlerProvider]);
    uint64_t v11 = *(void *)(a1 + 40);
    id v20 = 0LL;
    __int16 v8 = (void *)objc_claimAutoreleasedReturnValue([v10 handlerWithType:0 configuration:v11 error:&v20]);
    id v7 = v20;

    if (v8)
    {
      uint64_t v12 = *(void *)(a1 + 48);
      unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestingBundleID]);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentity]);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      void v18[2] = sub_100089FC8;
      v18[3] = &unk_1001A3F98;
      id v19 = *(id *)(a1 + 56);
      [v8 addStoreItemWithOpaqueID:v12 requestingBundleID:v13 clientIdentity:v14 completionHandler:v18];
    }

    else
    {
      __int16 v15 = os_log_create("com.apple.amp.itunescloudd", "SDK");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        uint64_t v16 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 134218242;
        uint64_t v22 = v16;
        __int16 v23 = 2114;
        id v24 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "CloudService %p - sdk_addStoreItemWithOpaqueID: - Unable to service request for cloud library - error=%{public}@",  buf,  0x16u);
      }

      uint64_t v17 = *(void *)(a1 + 56);
      if (v17) {
        (*(void (**)(uint64_t, void, id))(v17 + 16))(v17, 0LL, v7);
      }
      __int16 v8 = 0LL;
    }

    goto LABEL_11;
  }

  uint64_t v6 = *(void *)(a1 + 56);
  if (v6)
  {
    NSErrorUserInfoKey v25 = NSDebugDescriptionErrorKey;
    id v7 = (id)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Missing add to library capabilities in %ld",  a2));
    id v26 = v7;
    __int16 v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v26,  &v25,  1LL));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7602LL,  v8));
    (*(void (**)(uint64_t, void, void *))(v6 + 16))(v6, 0LL, v9);

LABEL_11:
  }
}

uint64_t sub_100089FC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100089FD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100089FE0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100089FF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10008A000(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10008A00C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10008A018(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10008A024(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10008A030(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10008A03C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218498;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    __int16 v13 = 2114;
    id v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadScreenshotInfoForSagaIDs: - Sending saga screenshot artwork info: %{public}@ - error=%{public}@",  (uint8_t *)&v9,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10008A138(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218498;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    __int16 v13 = 2114;
    id v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadArtworkInfoForContainerSagaIDs: - Sending saga container artwork info: %{public}@ - error=%{public}@",  (uint8_t *)&v9,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10008A234(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 134218498;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v5;
    __int16 v13 = 2114;
    id v14 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadArtworkInfoForSagaIDs: - Sending saga artwork info: %{public}@ - error=%{public}@",  (uint8_t *)&v9,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_10008A330(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    double v4 = *(float *)(a1 + 48);
    int v6 = 134218240;
    uint64_t v7 = v3;
    __int16 v8 = 2048;
    double v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadSagaUpdateProgressForConfiguration: - Saga update progress: %f",  (uint8_t *)&v6,  0x16u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, float))(result + 16))(result, 0LL, *(float *)(a1 + 48));
  }
  return result;
}

uint64_t sub_10008A40C(uint64_t a1, int a2, int a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v13 = 134218496;
    uint64_t v14 = v11;
    __int16 v15 = 1024;
    int v16 = a3 | a5;
    __int16 v17 = 1024;
    int v18 = a2 | a4;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "CloudService %p - loadIsSagaUpdateInProgressForConfiguration: - Saga initial import: %{BOOL}u. Update in progress: %{BOOL}u",  (uint8_t *)&v13,  0x18u);
  }

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a2 | a4, a3 | a5);
  }
  return result;
}

void sub_10008A510(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10008A598(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (!a2 || v5)
  {
    __int16 v8 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = a1[4];
      *(_DWORD *)buf = 138543618;
      uint64_t v19 = v13;
      __int16 v20 = 2114;
      double v21 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Could not get properties for user identity: %{public}@ - error=%{public}@.",  buf,  0x16u);
    }
  }

  else
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  a1[4]));
    __int16 v8 = -[ICStoreRequestContext initWithIdentity:]( objc_alloc(&OBJC_CLASS___ICStoreRequestContext),  "initWithIdentity:",  a1[4]);
    double v9 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    v14[2] = sub_10008A730;
    v14[3] = &unk_1001A3E58;
    uint64_t v10 = a1[5];
    uint64_t v11 = (void *)a1[6];
    id v15 = v7;
    uint64_t v16 = v10;
    id v17 = v11;
    id v12 = v7;
    [v9 getBagForRequestContext:v8 withCompletionHandler:v14];
  }
}

void sub_10008A730(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 dictionaryForBagKey:ICURLBagKeyLibraryDAAP]);
  uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDictionary, v4);
  if ((objc_opt_isKindOfClass(v3, v5) & 1) != 0)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:@"auto-update-polling-frequency-secs"]);
    else {
      uint64_t v7 = 900LL;
    }
    double v9 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:@"subscribed-container-polling-frequency-secs"]);
    else {
      uint64_t v8 = -1LL;
    }
  }

  else
  {
    uint64_t v8 = -1LL;
    uint64_t v7 = 900LL;
  }

  unsigned int v10 = [*(id *)(a1 + 32) sagaOnDiskDatabaseRevision];
  if (v10)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sagaLastLibraryUpdateTime]);
    [v11 timeIntervalSinceReferenceDate];
    if (v12 <= 0.0)
    {
      BOOL v19 = 1;
    }

    else
    {
      uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        [v11 timeIntervalSince1970];
        *(_DWORD *)buf = 134217984;
        *(void *)CC_LONG64 v65 = (uint64_t)v14;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Last library update time: %{time_t}zd",  buf,  0xCu);
      }

      id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [v15 timeIntervalSinceDate:v11];
      double v17 = v16;

      int v18 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 134218240;
        *(double *)CC_LONG64 v65 = v17;
        *(_WORD *)&v65[8] = 2048;
        double v66 = (double)v7;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Elapsed time since last library update: %g, minimum: %g",  buf,  0x16u);
      }

      BOOL v19 = v17 >= (double)v7;
    }
  }

  else
  {
    BOOL v19 = 1;
  }

  if (v8 == -1)
  {
    __int16 v20 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Subscribed containers periodic update disabled via bag.",  buf,  2u);
    }

    uint64_t v36 = 0LL;
    BOOL v37 = 0;
  }

  else
  {
    __int16 v20 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) sagaLastSubscribedContainersUpdateTime]);
    -[os_log_s timeIntervalSinceReferenceDate](v20, "timeIntervalSinceReferenceDate");
    if (v21 <= 0.0) {
      goto LABEL_28;
    }
    uint64_t v22 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      -[os_log_s timeIntervalSince1970](v20, "timeIntervalSince1970");
      *(_DWORD *)buf = 134217984;
      *(void *)CC_LONG64 v65 = (uint64_t)v23;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Last subscribed containers update time: %{time_t}zd",  buf,  0xCu);
    }

    id v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v24 timeIntervalSinceDate:v20];
    double v26 = v25;

    double v27 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218240;
      *(double *)CC_LONG64 v65 = v26;
      *(_WORD *)&v65[8] = 2048;
      double v66 = (double)v8;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Elapsed time since last subscribed containers update: %g, minimum: %g",  buf,  0x16u);
    }

    if (v26 >= (double)v8)
    {
LABEL_28:
      uint64_t v36 = 0LL;
      BOOL v37 = 0;
      int v38 = 1;
      goto LABEL_33;
    }

    BOOL v50 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  ML3ContainerPropertyDistinguishedKind,  0LL));
    v63[0] = v50;
    uint64_t v51 = v3;
    double v28 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  ML3ContainerPropertyCloudLastUpdateTime,  0LL));
    v63[1] = v28;
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3ContainerPropertyCloudIsSubscribed,  1LL));
    v63[2] = v29;
    uint64_t v30 = ML3ContainerPropertyStoreCloudID;
    id v31 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  ML3ContainerPropertyStoreCloudID,  &off_1001B3F58,  2LL));
    v63[3] = v31;
    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v63, 4LL));
    __int128 v49 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v32));

    char v33 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Container queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Container,  "queryWithLibrary:predicate:",  *(void *)(a1 + 32),  v49));
    __int16 v34 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v62 = v30;
    id v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v62, 1LL));
    v60[0] = _NSConcreteStackBlock;
    v60[1] = 3221225472LL;
    v60[2] = sub_10008AFB4;
    v60[3] = &unk_1001A6EC8;
    uint64_t v36 = v34;
    __int128 v61 = v36;
    [v33 enumeratePersistentIDsAndProperties:v35 usingBlock:v60];

    BOOL v37 = -[NSMutableArray count](v36, "count") != 0LL;
    uint64_t v3 = v51;
  }

  int v38 = 0;
LABEL_33:

  double v39 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109632;
    *(_DWORD *)CC_LONG64 v65 = v38;
    *(_WORD *)&v65[4] = 1024;
    *(_DWORD *)&v65[6] = v37;
    LOWORD(v66) = 1024;
    *(_DWORD *)((char *)&v66 + 2) = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] shouldUpdateAllSubscribedContainers=%{BOOL}u, shouldUpdateSubscribedContainersWithNoLastUpda teTimestamp=%{BOOL}u, shouldUpdateLibrary=%{BOOL}u",  buf,  0x14u);
  }

  if (v19)
  {
    if (v10) {
      uint64_t v40 = 7LL;
    }
    else {
      uint64_t v40 = 1LL;
    }
    id v41 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109632;
      *(_DWORD *)CC_LONG64 v65 = v10;
      *(_WORD *)&v65[4] = 1024;
      *(_DWORD *)&v65[6] = v10 == 0;
      LOWORD(v66) = 1024;
      *(_DWORD *)((char *)&v66 + 2) = v40;
      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Updating cloud library. databaseRevision=%u, allowNoisyAuthPrompts=%{BOOL}u, reason=%d",  buf,  0x14u);
    }

    uint64_t v43 = *(void **)(a1 + 40);
    double v42 = *(void **)(a1 + 48);
    v54[0] = _NSConcreteStackBlock;
    v54[1] = 3221225472LL;
    v54[2] = sub_10008AFC0;
    v54[3] = &unk_1001A3E10;
    char v58 = v38;
    v54[4] = v43;
    id v55 = v42;
    id v56 = *(id *)(a1 + 32);
    BOOL v59 = v37;
    id v57 = v36;
    [v43 _updateSagaLibraryWithReason:v40 allowNoisyAuthPrompt:v10 == 0 forConfiguration:v55 completionHandler:v54];

    __int128 v44 = v55;
LABEL_46:

    goto LABEL_47;
  }

  if (v38)
  {
    __int128 v45 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Skipped cloud library update, updating all subscribed containers now (not ignoring min ref resh interval)...",  buf,  2u);
    }

    int v47 = *(void **)(a1 + 40);
    uint64_t v46 = *(void *)(a1 + 48);
    v52[0] = _NSConcreteStackBlock;
    v52[1] = 3221225472LL;
    void v52[2] = sub_10008B118;
    v52[3] = &unk_1001A6398;
    id v53 = *(id *)(a1 + 32);
    [v47 updateSubscribedPlaylistsWithSagaIDs:0 ignoreMinRefreshInterval:0 configuration:v46 completion:v52];
    __int128 v44 = v53;
    goto LABEL_46;
  }

  if (v37)
  {
    id v48 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Skipped cloud library update and skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...",  buf,  2u);
    }

    [*(id *)(a1 + 40) updateSubscribedPlaylistsWithSagaIDs:v36 ignoreMinRefreshInterval:0 configuration:*(void *)(a1 + 48) completion:&stru_1001A3E30];
  }

LABEL_47:
}

id sub_10008AFB4(uint64_t a1, uint64_t a2, void *a3)
{
  return [*(id *)(a1 + 32) addObject:*a3];
}

void sub_10008AFC0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (*(_BYTE *)(a1 + 64))
    {
      uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Update saga library completed successfully, updating all subscribed containers...",  buf,  2u);
      }

      uint64_t v4 = *(void **)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472LL;
      _DWORD v7[2] = sub_10008B16C;
      v7[3] = &unk_1001A6398;
      id v8 = *(id *)(a1 + 48);
      [v4 updateSubscribedPlaylistsWithSagaIDs:0 ignoreMinRefreshInterval:1 configuration:v5 completion:v7];
    }

    else if (*(_BYTE *)(a1 + 65))
    {
      id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[BecomeActive::Cloud] Update saga library completed successfully, skipped updating all subscribed containers. Updating all subscribed containers with no last_update now...",  buf,  2u);
      }

      [*(id *)(a1 + 32) updateSubscribedPlaylistsWithSagaIDs:*(void *)(a1 + 56) ignoreMinRefreshInterval:0 configuration:*(void *)(a1 + 40) completion:&stru_1001A3DE8];
    }
  }

void sub_10008B118(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [*(id *)(a1 + 32) setSagaLastSubscribedContainersUpdateTime:v3];
  }

void sub_10008B16C(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [*(id *)(a1 + 32) setSagaLastSubscribedContainersUpdateTime:v3];
  }

void sub_10008C60C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v8 = v7;
  if (v5)
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    *(_DWORD *)double v17 = 134217984;
    *(void *)&void v17[4] = [v5 responseCode];
    double v9 = "Set album properties response: %lu";
    unsigned int v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
    uint32_t v12 = 12;
  }

  else
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    *(_WORD *)double v17 = 0;
    double v9 = "Set album properties received no response";
    unsigned int v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
    uint32_t v12 = 2;
  }

  _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, v17, v12);
LABEL_7:

  if (v6)
  {
    uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)double v17 = 138543362;
      *(void *)&void v17[4] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Set album properties response with error: %{public}@",  v17,  0xCu);
    }
  }

  double v14 = *(void **)(a1 + 32);
  uint64_t v15 = (uint64_t)objc_msgSend(v5, "responseCode", *(_OWORD *)v17);
  if (v15 > 399)
  {
    if (v15 != 404 && v15 != 400) {
      goto LABEL_18;
    }
    uint64_t v16 = 3LL;
  }

  else
  {
    uint64_t v16 = 1LL;
    if (v15 != 200 && v15 != 204) {
LABEL_18:
    }
      uint64_t v16 = 2LL;
  }

  [v14 setStatus:v16];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10008DA34(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v18 = a4;
  id v13 = a5;
  id v14 = a7;
  id v15 = a6;
  id v16 = a3;
  id v17 = a2;
  [a1 setObject:v15 forKey:v13];
  [v17 addObject:v13];

  [v16 addObject:v15];
  if (v14) {
    [v18 setObject:v14 forKey:v13];
  }
}

ICStoreURLRequest *sub_10008DF80(void *a1, void *a2, uint64_t a3, void *a4, double a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a4;
  uint64_t v34 = 0LL;
  id v35 = &v34;
  uint64_t v36 = 0x3032000000LL;
  BOOL v37 = sub_10008E4A4;
  int v38 = sub_10008E4B4;
  id v39 = 0LL;
  uint32_t v12 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  id v14 = -[ICStoreRequestContext initWithIdentity:](v12, "initWithIdentity:", v13);

  if (v9) {
    goto LABEL_14;
  }
  if (!v10)
  {
    double v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "ICStoreURLRequest *_CloudGeniusUtilitiesCreatePostRequest(NSURL *__strong, NSString *__strong, NST imeInterval, NSInteger, NSMutableDictionary *__strong, BOOL, BOOL)"));
    [v28 handleFailureInFunction:v29 file:@"CloudGeniusUtilities.m" lineNumber:315 description:@"Must provide either a URL or a URL Bag Key"];
  }

  dispatch_semaphore_t v15 = dispatch_semaphore_create(0LL);
  *(void *)&__int128 v41 = 0LL;
  *((void *)&v41 + 1) = &v41;
  uint64_t v42 = 0x3032000000LL;
  uint64_t v43 = sub_10008E4A4;
  __int128 v44 = sub_10008E4B4;
  id v45 = 0LL;
  id v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472LL;
  v30[2] = sub_10008E4BC;
  v30[3] = &unk_1001A59D8;
  uint64_t v32 = &v41;
  char v33 = &v34;
  id v17 = v15;
  id v31 = v17;
  [v16 getBagForRequestContext:v14 withCompletionHandler:v30];

  dispatch_semaphore_wait(v17, 0xFFFFFFFFFFFFFFFFLL);
  if (v35[5])
  {
    id v18 = os_log_create("com.apple.amp.itunescloudd", "Genius");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = v35[5];
      *(_DWORD *)buf = 138543362;
      *(void *)&uint8_t buf[4] = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "failed to fetch bag. err=%{public}@",  buf,  0xCu);
    }
  }

  else
  {
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v41 + 1) + 40) stringForBagKey:v10]);
    if (v18)
    {
      id v9 = (id)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v18));
      goto LABEL_13;
    }

    __int16 v20 = os_log_create("com.apple.amp.itunescloudd", "Genius");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      *(void *)&uint8_t buf[4] = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "not creating request because url bag key '%{public}@' not found",  buf,  0xCu);
    }

    id v18 = 0LL;
  }

  id v9 = 0LL;
LABEL_13:

  _Block_object_dispose(&v41, 8);
  if (!v9)
  {
    double v26 = 0LL;
    goto LABEL_25;
  }

void sub_10008E464( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008E4A4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10008E4B4(uint64_t a1)
{
}

void sub_10008E4BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10008EAC0(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v9 = a1[4];
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      *(_DWORD *)buf = 138543618;
      id v33 = v9;
      __int16 v34 = 2114;
      id v35 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished request error=%{public}@",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = a1[4];
    *(_DWORD *)buf = 138543362;
    id v33 = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%{public}@ Finished request", buf, 0xCu);
  }

  uint64_t v12 = (uint64_t)[v5 responseCode];
  if (v12 > 399)
  {
    if (v12 == 404 || v12 == 400)
    {
      uint64_t v13 = 3LL;
      goto LABEL_14;
    }

    goto LABEL_13;
  }

  uint64_t v13 = 1LL;
  if (v12 != 200 && v12 != 204) {
LABEL_13:
  }
    uint64_t v13 = 2LL;
LABEL_14:
  [a1[4] setStatus:v13];
  [a1[4] setError:v6];
  if (!v6)
  {
    id v14 = v5;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 updatedInvitationURL]);
    unsigned int v16 = [v14 updatedInviteURLExpirationDate];
    if (v16) {
      uint64_t v17 = v16 - 978307200LL;
    }
    else {
      uint64_t v17 = 0LL;
    }
    objc_storeStrong((id *)((char *)a1[4] + 106), v15);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([a1[4] musicLibrary]);
    id v24 = _NSConcreteStackBlock;
    uint64_t v25 = 3221225472LL;
    double v26 = sub_10008EDE0;
    double v27 = &unk_1001A40D0;
    id v28 = v15;
    uint64_t v31 = v17;
    id v19 = a1[5];
    id v20 = a1[4];
    id v29 = v19;
    id v30 = v20;
    id v21 = v15;
    [v18 databaseConnectionAllowingWrites:1 withBlock:&v24];

    LOBYTE(v1_Block_object_dispose(va, 8) = objc_msgSend(v14, "updateRequired", v24, v25, v26, v27);
    *((_BYTE *)a1[4] + 9_Block_object_dispose(va, 8) = (_BYTE)v18;
    *(void *)((char *)a1[4] + 114) = [a1[6] longLongValue];
  }

  id v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    id v23 = a1[4];
    *(_DWORD *)buf = 138543362;
    id v33 = v23;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "%{public}@ Operation complete", buf, 0xCu);
  }

  [a1[7] endTransaction];
  [a1[4] finish];
}

void sub_10008EDE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v12[0] = ML3ContainerPropertyCollaborationInvitationURL;
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    id v5 = (__CFString *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) absoluteString]);
  }
  else {
    id v5 = &stru_1001A7960;
  }
  v12[1] = ML3ContainerPropertyCollaborationInvitationURLExpirationDate;
  v13[0] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 56)));
  v13[1] = v6;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  2LL));

  if (v4) {
  if (([*(id *)(a1 + 40) setValuesForPropertiesWithDictionary:v7] & 1) == 0)
  }
  {
    id v8 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 48);
      int v10 = 138543362;
      uint64_t v11 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to update container properties",  (uint8_t *)&v10,  0xCu);
    }
  }
}

id sub_10008F3B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) resume];
}

void sub_10008F3B8(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = a1[4];
    uint64_t v9 = a1[5];
    *(_DWORD *)buf = 138543618;
    uint64_t v16 = v8;
    __int16 v17 = 2112;
    uint64_t v18 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Delivering response to remote client for request %@",  buf,  0x16u);
  }

  int v10 = (void *)a1[6];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  v14[2] = sub_10008F518;
  v14[3] = &unk_1001A6398;
  void v14[4] = a1[4];
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 remoteObjectProxyWithErrorHandler:v14]);
  uint64_t v12 = a1[5];
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "msv_errorByRemovingUnsafeUserInfo"));

  [v11 deliverSubscriptionStatusResponse:v6 forRemoteRequestWithUniqueIdentifier:v12 error:v13];
}

void sub_10008F518(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138543618;
    uint64_t v7 = v5;
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to obtain remote proxy to deliver subscription status response. error = %{public}@.",  (uint8_t *)&v6,  0x16u);
  }
}

void *sub_10008F5E8(void *result)
{
  if (*(_BYTE *)(result[4] + 16LL))
  {
    uint64_t v1 = result;
    uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = v1[4];
      int v4 = 138543362;
      uint64_t v5 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}@ stopping...", (uint8_t *)&v4, 0xCu);
    }

    *(_BYTE *)(v1[4] + 16LL) = 0;
    [*(id *)(v1[4] + 24) invalidate];
    return [*(id *)(v1[4] + 24) setDelegate:0];
  }

  return result;
}

void *sub_10008F6C8(void *result)
{
  if (!*(_BYTE *)(result[4] + 16LL))
  {
    uint64_t v1 = result;
    uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = v1[4];
      int v4 = 138543362;
      uint64_t v5 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ starting up...",  (uint8_t *)&v4,  0xCu);
    }

    *(_BYTE *)(v1[4] + 16LL) = 1;
    objc_msgSend(*(id *)(v1[4] + 24), "setDelegate:");
    return [*(id *)(v1[4] + 24) resume];
  }

  return result;
}

uint64_t sub_10008F7A8(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 16LL);
  return result;
}

void sub_10008F7FC(id a1)
{
  id v1 = -[CloudMusicSubscriptionStatusServiceListener _init]( objc_alloc(&OBJC_CLASS___CloudMusicSubscriptionStatusServiceListener),  "_init");
  uint64_t v2 = (void *)qword_1001DB6F0;
  qword_1001DB6F0 = (uint64_t)v1;
}

LABEL_38:
  uint64_t v42 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v43 = self->_responseExpirationDate;
    __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
    id v45 = (void *)objc_claimAutoreleasedReturnValue(-[NSDate descriptionWithLocale:](v43, "descriptionWithLocale:", v44));
    *(_DWORD *)buf = 138543618;
    __int16 v68 = self;
    id v69 = 2114;
    *(void *)__int16 v70 = v45;
    _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEFAULT,  "%{public}@  retaining _responseExpirationDate=%{public}@",  buf,  0x16u);
  }

  if ((v34 & 1) != 0) {
    goto LABEL_41;
  }
LABEL_47:
}

LABEL_39:
      id v30 = bswap32(v13);
      a3 += v30 + 8;
      a4 = v14 - v30;
      if (v14 == v30) {
        goto LABEL_40;
      }
    }

    if (v12 == 1633837420 || v12 == 1633837426 || v12 == 1633837936)
    {
LABEL_20:
      id v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "_parseBrowseListingWithBytes:length:", a3 + 8, a4 - 8, v32));
      goto LABEL_21;
    }

uint64_t sub_100090848(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_100090858(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!*(void *)(a1 + 32))
  {
    id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    [v21 handleFailureInMethod:*(void *)(a1 + 56) object:*(void *)(a1 + 40) file:@"ICContentTasteRequestHandler.m" lineNumber:215 description:@"content taste change to post cannot be nil"];
  }

  if (*(_BYTE *)(*(void *)(a1 + 40) + 64LL))
  {
    id v4 = [[MSVXPCTransaction alloc] initWithName:@"PostPendingContentTasteChanges"];
    [v4 beginTransaction];
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 32) pendingChanges]);
    int v6 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste_Oversize");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      uint64_t v32 = v7;
      __int16 v33 = 1024;
      LODWORD(v34) = [v5 count];
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Found %d pending content taste changes to post.",  buf,  0x12u);
    }

    [*(id *)(a1 + 40) _postContentTasteChanges:v5 withCompletionHandler:0];
    __int16 v8 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) objectForKey:@"ContentTastePendingChangesCoordinatorOperationIdentifierKey"]);
    if ([v8 isEqualToString:@"ICContentTasteRequestHandlerRetryTaskIdentifier"]
      && ![v5 count])
    {
      uint64_t v16 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste_Oversize");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v17 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 138543362;
        uint64_t v32 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@ No pending changes for retry task.",  buf,  0xCu);
      }

      *(void *)(*(void *)(a1 + 40) + 48LL) = 0LL;
      uint64_t v18 = *(void **)(a1 + 48);
      if (!v18) {
        goto LABEL_10;
      }
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
      id v20 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
      id v22 = _NSConcreteStackBlock;
      uint64_t v23 = 3221225472LL;
      id v24 = sub_100090C5C;
      uint64_t v25 = &unk_1001A6BE0;
      id v26 = v18;
      dispatch_async(v20, &v22);

      int v10 = v26;
    }

    else
    {
      id v9 = *(void **)(a1 + 40);
      uint64_t v30 = *(void *)(a1 + 32);
      int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v30, 1LL));
      [v9 _postContentTasteChanges:v10 withCompletionHandler:*(void *)(a1 + 48)];
    }

LABEL_10:
    objc_msgSend(v4, "endTransaction", v22, v23, v24, v25);
    [v3 finishWithError:0];

LABEL_15:
    goto LABEL_16;
  }

  uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    uint64_t v32 = v12;
    __int16 v33 = 2048;
    id v34 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ handler is no longer valid. Not running operation=%p",  buf,  0x16u);
  }

  id v4 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  [v3 finishWithError:v4];
  uint64_t v13 = *(void **)(a1 + 48);
  if (v13)
  {
    dispatch_queue_global_t v14 = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v15 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v14);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100090C4C;
    block[3] = &unk_1001A6BB8;
    id v29 = v13;
    id v4 = v4;
    id v28 = v4;
    dispatch_async(v15, block);

    uint64_t v5 = v29;
    goto LABEL_15;
  }

uint64_t sub_100090C4C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

uint64_t sub_100090C5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_100090C6C(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 72LL) = 0LL;
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138543362;
    uint64_t v6 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@  starting retry operation to post content taste change",  (uint8_t *)&v5,  0xCu);
  }

  return [*(id *)(a1 + 32) updateContentTasteForReason:2 invalidatingLocalCache:0 completionHandler:0];
}

void sub_100090D38(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state == 2)
  {
    uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 40);
      int v17 = 138543362;
      uint64_t v18 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@  running default task tp update content taste",  (uint8_t *)&v17,  0xCu);
    }

    [*(id *)(a1 + 40) updateContentTasteForReason:3 invalidatingLocalCache:0 completionHandler:0];
  }

  else if (!state)
  {
    xpc_object_t v5 = xpc_activity_copy_criteria(v3);
    uint64_t v6 = v5;
    if (v5)
    {
      if (*(double *)(a1 + 48) != xpc_dictionary_get_double(v5, "MediaContentTasteResponseExpirationTimeKey"))
      {
        xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
        uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v8 = *(void *)(a1 + 40);
          id v9 = *(void **)(v8 + 40);
          int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](&OBJC_CLASS___NSLocale, "currentLocale"));
          uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 descriptionWithLocale:v10]);
          int v17 = 138543618;
          uint64_t v18 = v8;
          __int16 v19 = 2114;
          id v20 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@  updating criteria to fire next content taste operation at %{public}@",  (uint8_t *)&v17,  0x16u);
        }

        goto LABEL_15;
      }

      uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = *(void *)(a1 + 40);
        int v17 = 138543362;
        uint64_t v18 = v16;
        uint64_t v15 = "%{public}@  criteria to fire next content taste operation is unchanged";
        goto LABEL_14;
      }
    }

    else
    {
      xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
      uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 40);
        int v17 = 138543362;
        uint64_t v18 = v14;
        uint64_t v15 = "%{public}@  setting criteria to fire next content taste operation";
LABEL_14:
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v17, 0xCu);
      }
    }

void sub_100090FC8(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    unsigned int v4 = [*(id *)(v3 + 16) operationCount];
    *(_DWORD *)buf = 138543618;
    uint64_t v11 = v3;
    __int16 v12 = 1024;
    unsigned int v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - cancelling %d operations and clearing all pending changes",  buf,  0x12u);
  }

  *(_BYTE *)(*(void *)(a1 + 32) + 64LL) = 0;
  xpc_activity_unregister((const char *)[*(id *)(*(void *)(a1 + 32) + 56) UTF8String]);
  xpc_object_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[ICCloudContentTasteResponseCacheManager sharedCloudContentTasteResponseCacheManager]( &OBJC_CLASS___ICCloudContentTasteResponseCacheManager,  "sharedCloudContentTasteResponseCacheManager"));
  [v5 removeCachedContentTasteResponseForConnectionConfiguration:*(void *)(*(void *)(a1 + 32) + 24)];

  [*(id *)(*(void *)(a1 + 32) + 32) removePendingChanges];
  [*(id *)(*(void *)(a1 + 32) + 16) cancelAllOperations];
  uint64_t v6 = *(void **)(a1 + 40);
  uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 16LL);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_100091138;
  void v8[3] = &unk_1001A6BE0;
  id v9 = v6;
  [v7 addOperationWithBlock:v8];
}

void sub_100091138(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000911C0;
    block[3] = &unk_1001A6BE0;
    id v5 = v1;
    dispatch_async(v3, block);
  }

uint64_t sub_1000911C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000911CC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 56))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[ICCloudContentTasteResponseCacheManager sharedCloudContentTasteResponseCacheManager]( &OBJC_CLASS___ICCloudContentTasteResponseCacheManager,  "sharedCloudContentTasteResponseCacheManager"));
    [v2 removeCachedContentTasteResponseForConnectionConfiguration:*(void *)(*(void *)(a1 + 32) + 24)];
  }

  uint64_t v3 = *(void *)(a1 + 40);
  if (v3)
  {
    v16[1] = @"ContentTastePendingChangesCoordinatorInvalidateCacheKey";
    v17[0] = v3;
    v16[0] = @"ContentTastePendingChangesCoordinatorContentTasteItemKey";
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 56)));
    v17[1] = v4;
    id v5 = (void **)v17;
    uint64_t v6 = (const __CFString **)v16;
    uint64_t v7 = 2LL;
  }

  else
  {
    uint64_t v14 = @"ContentTastePendingChangesCoordinatorInvalidateCacheKey";
    unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 56)));
    uint64_t v15 = v4;
    id v5 = &v15;
    uint64_t v6 = &v14;
    uint64_t v7 = 1LL;
  }

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v5,  v6,  v7));

  v12[0] = @"ContentTastePendingChangesCoordinatorOperationIdentifierKey";
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 UUIDString]);
  v12[1] = @"ContentTastePendingChangesCoordinatorPendingChangesKey";
  v13[0] = v10;
  v13[1] = v8;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v13,  v12,  2LL));

  [*(id *)(a1 + 32) _postPendingContentTasteChangesByAddingChange:v11 completionHandler:*(void *)(a1 + 48)];
}

void sub_10009136C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 56))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[ICCloudContentTasteResponseCacheManager sharedCloudContentTasteResponseCacheManager]( &OBJC_CLASS___ICCloudContentTasteResponseCacheManager,  "sharedCloudContentTasteResponseCacheManager"));
    [v2 removeCachedContentTasteResponseForConnectionConfiguration:*(void *)(*(void *)(a1 + 32) + 24)];

    BOOL v3 = *(_BYTE *)(a1 + 56) != 0;
  }

  else
  {
    BOOL v3 = 0LL;
  }

  __int16 v19 = @"ContentTastePendingChangesCoordinatorInvalidateCacheKey";
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v3));
  id v20 = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v20,  &v19,  1LL));

  unint64_t v6 = *(void *)(a1 + 48);
  if (v6 >= 4)
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138543618;
      uint64_t v16 = v9;
      __int16 v17 = 1024;
      int v18 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_FAULT,  "%{public}@ - Requesting content taste for invalid reason=%d",  buf,  0x12u);
    }

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    uint64_t v7 = (__CFString *)objc_claimAutoreleasedReturnValue([v11 UUIDString]);
  }

  else
  {
    uint64_t v7 = off_1001A41D8[v6];
  }

  v13[0] = @"ContentTastePendingChangesCoordinatorOperationIdentifierKey";
  v13[1] = @"ContentTastePendingChangesCoordinatorPendingChangesKey";
  v14[0] = v7;
  v14[1] = v5;
  __int16 v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v14,  v13,  2LL));
  [*(id *)(a1 + 32) _postPendingContentTasteChangesByAddingChange:v12 completionHandler:*(void *)(a1 + 40)];
}

void sub_100091CD8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100091DA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100092708( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, id location)
{
}

void sub_1000928FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100092E5C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_100093C58( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

void sub_100093E84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (*(void *)(a1 + 32))
  {
    id v6 = WeakRetained;
    id v3 = [WeakRetained status];
    uint64_t v4 = *(void *)(a1 + 32);
    if (v3 == (id)1)
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v6 books]);
      (*(void (**)(uint64_t, void *, void))(v4 + 16))(v4, v5, 0LL);
    }

    else
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2002LL,  0LL));
      (*(void (**)(uint64_t, void, void *))(v4 + 16))(v4, 0LL, v5);
    }

    id WeakRetained = v6;
  }
}

uint64_t sub_100093F28(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_100093F44(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(v3 + 64);
    int v7 = 138543618;
    uint64_t v8 = v3;
    __int16 v9 = 2048;
    uint64_t v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - cancelling _updateLibraryOperation=%p",  (uint8_t *)&v7,  0x16u);
  }

  [*(id *)(*(void *)(a1 + 32) + 64) cancel];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 64);
  *(void *)(v5 + 64) = 0LL;
}

void sub_100094020(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    [*(id *)(*(void *)(a1 + 32) + 16) setClientIdentity:*(void *)(a1 + 40)];
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _DAAPMediaKindFromJaliscoSupportedMediaKind:*(void *)(a1 + 56)]);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 16) jaliscoLastExcludedMediaKinds]);
    unsigned __int8 v15 = [v14 containsObject:v13];

    uint64_t v16 = *(void **)(a1 + 48);
    if (v16)
    {
      __int16 v17 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      void v18[2] = sub_100094260;
      v18[3] = &unk_1001A42A0;
      id v19 = v16;
      unsigned __int8 v20 = v15;
      dispatch_async(v17, v18);
    }

    goto LABEL_8;
  }

  int v7 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v8 + 8) userIdentity]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 accountDSID]);
    *(_DWORD *)buf = 138543874;
    uint64_t v25 = v8;
    __int16 v26 = 2114;
    double v27 = v10;
    __int16 v28 = 2114;
    id v29 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Failed to get account properties - DSID=%{public}@ err=%{public}@",  buf,  0x20u);
  }

  uint64_t v11 = *(void **)(a1 + 48);
  if (v11)
  {
    __int16 v12 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10009424C;
    block[3] = &unk_1001A6BB8;
    id v23 = v11;
    id v22 = v6;
    dispatch_async(v12, block);

    unsigned int v13 = v23;
LABEL_8:
  }
}

uint64_t sub_10009424C(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  1LL,  *(void *)(a1 + 32));
}

uint64_t sub_100094260(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16LL))( *(void *)(a1 + 32),  *(unsigned __int8 *)(a1 + 40),  0LL);
}

void sub_100094278(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v9 + 8) userIdentity]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 accountDSID]);
      *(_DWORD *)buf = 138543874;
      uint64_t v24 = v9;
      __int16 v25 = 2114;
      __int16 v26 = v11;
      __int16 v27 = 2114;
      id v28 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Failed to get account properties - DSID=%{public}@ err=%{public}@",  buf,  0x20u);
    }

    __int16 v12 = *(void **)(a1 + 48);
    if (v12)
    {
      unsigned int v13 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472LL;
      v20[2] = sub_1000944B8;
      v20[3] = &unk_1001A6BB8;
      id v22 = v12;
      id v21 = v6;
      dispatch_async(v13, v20);
    }
  }

  else
  {
    if (v8)
    {
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 138543618;
      uint64_t v24 = v14;
      __int16 v25 = 1024;
      LODWORD(v26) = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Reload media purchase history by removing media kind %d",  buf,  0x12u);
    }

    [*(id *)(*(void *)(a1 + 32) + 16) setClientIdentity:*(void *)(a1 + 40)];
    uint64_t v16 = *(void **)(a1 + 32);
    __int16 v17 = (void *)v16[2];
    int v18 = (void *)objc_claimAutoreleasedReturnValue([v16 _DAAPMediaKindFromJaliscoSupportedMediaKind:*(void *)(a1 + 56)]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v18));
    [v17 updateJaliscoExcludedMediaKindsWith:v19 excludingMediaKindsInSet:1];

    [*(id *)(a1 + 32) _updateJaliscoLibraryWithClientIdentity:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
}

uint64_t sub_1000944B8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000944C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v9 + 8) userIdentity]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 accountDSID]);
      *(_DWORD *)buf = 138543874;
      uint64_t v24 = v9;
      __int16 v25 = 2114;
      __int16 v26 = v11;
      __int16 v27 = 2114;
      id v28 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Failed to get account properties - DSID=%{public}@ err=%{public}@",  buf,  0x20u);
    }

    __int16 v12 = *(void **)(a1 + 48);
    if (v12)
    {
      unsigned int v13 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472LL;
      v20[2] = sub_100094708;
      v20[3] = &unk_1001A6BB8;
      id v22 = v12;
      id v21 = v6;
      dispatch_async(v13, v20);
    }
  }

  else
  {
    if (v8)
    {
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 138543618;
      uint64_t v24 = v14;
      __int16 v25 = 1024;
      LODWORD(v26) = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Reload media purchase history by adding media kind %d",  buf,  0x12u);
    }

    [*(id *)(*(void *)(a1 + 32) + 16) setClientIdentity:*(void *)(a1 + 40)];
    uint64_t v16 = *(void **)(a1 + 32);
    __int16 v17 = (void *)v16[2];
    int v18 = (void *)objc_claimAutoreleasedReturnValue([v16 _DAAPMediaKindFromJaliscoSupportedMediaKind:*(void *)(a1 + 56)]);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v18));
    [v17 updateJaliscoExcludedMediaKindsWith:v19 excludingMediaKindsInSet:0];

    [*(id *)(a1 + 32) _updateJaliscoLibraryWithClientIdentity:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
}

uint64_t sub_100094708(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_100094718(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ArtistImageRequestHandler,  "handlerForConfiguration:",  *(void *)(*(void *)(a1 + 32) + 8LL)));
  [v2 cancelAllOperationsAndWaitForOperationsToFinish:1];

  [*(id *)(a1 + 32) cancelAllOperationsAndWaitForOperationsToFinish:1];
  [*(id *)(*(void *)(a1 + 32) + 16) clearJaliscoLastExcludedMediaKinds];
  uint64_t v3 = *(void **)(a1 + 40);
  if (v3)
  {
    uint64_t v4 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000947D4;
    block[3] = &unk_1001A6BE0;
    id v6 = v3;
    dispatch_async(v4, block);
  }

uint64_t sub_1000947D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000947E4(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5]);
}

void sub_1000947F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  NSURLErrorDomain,  -999LL,  0LL));
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v2);
}

void sub_10009485C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained cloudArtworkInfoDictionaries]);
    (*(void (**)(uint64_t, void *, void))(v1 + 16))(v1, v2, 0LL);
  }

uint64_t sub_1000948C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, 0LL, a2);
  }
  return result;
}

void sub_1000948E4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v8 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkImporter]);
    [v8 importScreenshotForPurchaseHistoryID:*(void *)(a1 + 56) clientIdentity:*(void *)(a1 + 40) completionHandler:*(void *)(a1 + 48)];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 138543618;
      uint64_t v12 = v4;
      __int16 v13 = 2048;
      uint64_t v14 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "%{public}@ - No active account, skipping import screenshot for purchase history ID: %llu",  buf,  0x16u);
    }

    id v6 = *(void **)(a1 + 48);
    if (v6)
    {
      int v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100094A48;
      block[3] = &unk_1001A6BE0;
      id v10 = v6;
      dispatch_async(v7, block);
    }
  }

void sub_100094A48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2009LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100094A9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v8 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkImporter]);
    [v8 importItemArtworkForPurchaseHistoryID:*(void *)(a1 + 56) clientIdentity:*(void *)(a1 + 40) completionHandler:*(void *)(a1 + 48)];
  }

  else
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 138543618;
      uint64_t v12 = v4;
      __int16 v13 = 2048;
      uint64_t v14 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "%{public}@ - No active account, skipping import artwork for purchase history ID: %llu",  buf,  0x16u);
    }

    id v6 = *(void **)(a1 + 48);
    if (v6)
    {
      int v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100094C00;
      block[3] = &unk_1001A6BE0;
      id v10 = v6;
      dispatch_async(v7, block);
    }
  }

void sub_100094C00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2009LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100094C54(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
    (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  }

void sub_100094CC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);
}

uint64_t sub_100094D18(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100094D2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100094D3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100094D4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_100094D5C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_100094D6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7400LL,  *(void *)(a1 + 32)));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100094DCC(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) storefrontIdentifier]);
  if (v2)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) storefrontIdentifier]);
    [*(id *)(*(void *)(a1 + 32) + 16) setStorefrontIdentifier:v3];
  }

  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 72);
  if (v4[8])
  {
    if (v5)
    {
      id v6 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v41 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Update library operation in progress, attaching completion handler.",  buf,  0xCu);
      }

      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) updateLibraryCompletionHandlers]);
      id v9 = [*(id *)(a1 + 72) copy];
      [v8 addObject:v9];
    }
  }

  else
  {
    if (v5)
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v4 updateLibraryCompletionHandlers]);
      id v11 = [*(id *)(a1 + 72) copy];
      [v10 addObject:v11];
    }

    uint64_t v12 = -[JaliscoMediaUpdateOperation initWithConfiguration:reason:supportedMediaKindsHandler:clientIdentity:]( objc_alloc(&OBJC_CLASS___JaliscoMediaUpdateOperation),  "initWithConfiguration:reason:supportedMediaKindsHandler:clientIdentity:",  *(void *)(*(void *)(a1 + 32) + 8LL),  *(void *)(a1 + 80),  *(void *)(*(void *)(a1 + 32) + 40LL),  *(void *)(a1 + 40));
    __int16 v13 = *(void **)(*(void *)(a1 + 32) + 64LL);
    *(void *)(*(void *)(a1 + 32) + 64LL) = v12;

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 daemonOptionsForConfiguration:*(void *)(*(void *)(a1 + 32) + 8)]);
    unsigned __int8 v16 = [v15 prohibitArtworkPrefetch];

    __int16 v17 = *(os_log_s **)(a1 + 80);
    id v18 = [*(id *)(*(void *)(a1 + 32) + 16) jaliscoOnDiskDatabaseRevision];
    BOOL v19 = v18 == 0LL;
    if ((v16 & 1) != 0)
    {
      LODWORD(v17) = 0;
    }

    else if (v17 != (os_log_s *)1)
    {
      LODWORD(v17) = [*(id *)(*(void *)(a1 + 32) + 16) jaliscoNeedsUpdateForTokens];
    }

    unsigned __int8 v20 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
    if ([v20 isWatch])
    {
      id v21 = (void *)objc_claimAutoreleasedReturnValue(+[ICEnvironmentMonitor sharedMonitor](&OBJC_CLASS___ICEnvironmentMonitor, "sharedMonitor"));
      unsigned __int8 v22 = [v21 isCharging];

      if ((v22 & 1) == 0)
      {
        __int16 v17 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Not performing artwork update because power is required",  buf,  2u);
        }

        LODWORD(v17) = 0;
      }
    }

    else
    {
    }

    id v23 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v24 = v18 == 0LL;
      uint64_t v25 = *(void *)(a1 + 32);
      uint64_t StringForRequestReason = ICCloudClientGetStringForRequestReason(*(void *)(a1 + 80));
      __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(StringForRequestReason);
      uint64_t v28 = *(void *)(*(void *)(a1 + 32) + 64LL);
      *(_DWORD *)buf = 138544386;
      uint64_t v41 = v25;
      __int16 v42 = 2114;
      uint64_t v43 = v27;
      __int16 v44 = 1024;
      BOOL v45 = v24;
      __int16 v46 = 1024;
      int v47 = (int)v17;
      __int16 v48 = 2048;
      uint64_t v49 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Updating media purchase history - Reason=%{public}@ - isInitialImport=%{BOOL}u - prefetchArtwork=%{ BOOL}u, _updateLibraryOperation=%p",  buf,  0x2Cu);
    }

    [*(id *)(*(void *)(a1 + 32) + 40) startingUpdateOperationForLibraryType:0 isInitialImport:*(void *)(a1 + 80) == 1];
    objc_initWeak(&location, *(id *)(a1 + 32));
    objc_initWeak(&from, *(id *)(*(void *)(a1 + 32) + 64LL));
    id v29 = *(void **)(*(void *)(a1 + 32) + 64LL);
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    v32[2] = sub_100095340;
    void v32[3] = &unk_1001A4228;
    objc_copyWeak(&v34, &location);
    objc_copyWeak(v35, &from);
    v35[1] = *(id *)(a1 + 80);
    BOOL v36 = v19;
    char v37 = (char)v17;
    id v33 = *(id *)(a1 + 40);
    [v29 setCompletionBlock:v32];
    [*(id *)(*(void *)(a1 + 32) + 64) setName:@"com.apple.itunescloudd.JaliscoRequestHandler.updateLibraryOperation"];
    [*(id *)(a1 + 64) addOperation:*(void *)(*(void *)(a1 + 32) + 64) priority:2];
    notify_post("com.apple.itunescloudd.jaliscoUpdateInProgressChanged");
    uint64_t v30 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v31 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v41 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Posting Jalisco update in progress notification",  buf,  0xCu);
    }

    objc_destroyWeak(v35);
    objc_destroyWeak(&v34);
    objc_destroyWeak(&from);
    objc_destroyWeak(&location);
  }
}

void sub_100095308( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location, id a20)
{
}

void sub_100095340(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v20 = WeakRetained;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Library update finished.",  buf,  0xCu);
  }

  id v4 = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v5 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained updateLibraryQueue]);
    id v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472LL;
    __int16 v13 = sub_100095584;
    uint64_t v14 = &unk_1001A4200;
    id v15 = v4;
    id v6 = WeakRetained;
    uint64_t v7 = *(void *)(a1 + 56);
    id v16 = v6;
    uint64_t v17 = v7;
    char v18 = *(_BYTE *)(a1 + 64);
    dispatch_async(v5, &v11);

    if (*(_BYTE *)(a1 + 65))
    {
      id v8 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        id v20 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Importing artwork and screenshots if relevant [post library update]",  buf,  0xCu);
      }

      id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "artworkImporter", v11, v12, v13, v14, v15));
      [v9 importAllItemArtworkAndScreenshotsWithClientIdentity:*(void *)(a1 + 32)];
    }
  }

  notify_post("com.apple.itunescloudd.jaliscoUpdateInProgressChanged");
  id v10 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    id v20 = WeakRetained;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Posting Jalisco update in progress notification",  buf,  0xCu);
  }
}

void sub_100095584(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) status];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) updateLibraryOperation]);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 error]);
  id v5 = [v4 copy];

  [*(id *)(a1 + 40) setUpdateLibraryOperation:0];
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) updateLibraryCompletionHandlers]);
  id v7 = [v6 countByEnumeratingWithState:&v21 objects:v27 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v22;
    do
    {
      id v10 = 0LL;
      do
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v6);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v21 + 1) + 8LL * (void)v10) + 16LL))();
        id v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v21 objects:v27 count:16];
    }

    while (v8);
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) updateLibraryCompletionHandlers]);
  [v11 removeAllObjects];

  uint64_t v12 = *(void **)(*(void *)(a1 + 40) + 40LL);
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v2));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 48)));
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 56)));
  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjectsAndKeys:",  v13,  @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey",  v14,  @"ICDCloudMusicLibraryProgressRequestReasonKey",  v15,  @"ICDCloudMusicLibraryProgressWasInitialImportKey",  0LL));
  [v12 finishedUpdateOperationForLibraryType:0 withResponse:v16];

  uint64_t v17 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138543362;
    uint64_t v26 = v18;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Update Jalisco library completed",  buf,  0xCu);
  }

  uint64_t v19 = *(void *)(a1 + 40);
  id v20 = *(void **)(v19 + 64);
  *(void *)(v19 + 64) = 0LL;
}

id sub_1000957FC(uint64_t a1)
{
  id result = *(id *)(*(void *)(a1 + 32) + 64LL);
  if (result)
  {
    id result = [result updateProgress];
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v3;
  }

  return result;
}

void *sub_100095834(void *result)
{
  if (*(void *)(result[4] + 64LL))
  {
    uint64_t v1 = result;
    *(_BYTE *)(*(void *)(result[5] + 8LL) + 24LL) = 1;
    id result = [*(id *)(result[4] + 64) isInitialImport];
    *(_BYTE *)(*(void *)(v1[6] + 8LL) + 24LL) = (_BYTE)result;
  }

  return result;
}

void sub_100095884(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(void **)(v2 + 64);
  *(void *)(v2 + 64) = 0LL;
}

void sub_1000958B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(void **)(v2 + 64);
  *(void *)(v2 + 64) = 0LL;
}

void sub_100097ED8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  [v3 setIdentityStore:v4];

  [v3 setIdentity:*(void *)(a1 + 32)];
  [v3 setAllowsExpiredBags:1];
  id v5 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v3 setAuthenticationProvider:v5];
}

void sub_100098120( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_100098140(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100098150(uint64_t a1)
{
}

void sub_100098158(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v9 = a2;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v9 libraryUID]);
  unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
    *a4 = 1;
  }
}

void sub_10009B33C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v25 = v9;
      __int16 v26 = 2114;
      id v27 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ failed to load bag. err=%{public}@",  buf,  0x16u);
    }

    [*(id *)(a1 + 32) finishWithError:v6];
  }

  else
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v25 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Executing request for AMPMusicArtistNewContentResponse",  buf,  0xCu);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 dictionaryForBagKey:ICURLBagKeyArtistNewContent]);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKey:@"url"]);
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v12));
    if (v13)
    {
      uint64_t v14 = -[NSMutableURLRequest initWithURL:](objc_alloc(&OBJC_CLASS___NSMutableURLRequest), "initWithURL:", v13);
      -[NSMutableURLRequest setCachePolicy:](v14, "setCachePolicy:", 1LL);
      -[NSMutableURLRequest setHTTPMethod:](v14, "setHTTPMethod:", @"GET");
      -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v14,  "setValue:forHTTPHeaderField:",  ICHTTPHeaderContentTypeXProtobuf,  ICHTTPHeaderKeyContentType);
      id v15 = *(id *)(*(void *)(a1 + 32) + 8LL);
      id v16 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v14,  v15);
      -[ICStoreURLRequest setAnisetteVersion:](v16, "setAnisetteVersion:", 0LL);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472LL;
      v22[2] = sub_10009B690;
      void v22[3] = &unk_1001A5518;
      void v22[4] = *(void *)(a1 + 32);
      __int128 v23 = v14;
      uint64_t v18 = v14;
      [v17 enqueueDataRequest:v16 withCompletionHandler:v22];
    }

    else
    {
      uint64_t v19 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        uint64_t v20 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543618;
        uint64_t v25 = v20;
        __int16 v26 = 2114;
        id v27 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "%{public}@ Failure to find bag key for artist recommendations url. Bag Key: %{public}@",  buf,  0x16u);
      }

      __int128 v21 = *(void **)(a1 + 32);
      uint64_t v18 = (NSMutableURLRequest *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7201LL,  0LL));
      [v21 finishWithError:v18];
    }
  }
}

void sub_10009B690(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a2 bodyData]);
  id v7 = v6;
  if (v5)
  {
    BOOL v8 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v19 = 138543618;
      uint64_t v20 = v9;
      __int16 v21 = 2114;
      id v22 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Sync request failed. err=%{public}@",  (uint8_t *)&v19,  0x16u);
    }

    uint64_t v10 = v5;
    goto LABEL_14;
  }

  if (![v6 length])
  {
    id v16 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 32);
      uint64_t v18 = *(void **)(a1 + 40);
      int v19 = 138543618;
      uint64_t v20 = v17;
      __int16 v21 = 2114;
      id v22 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Sync request failed. Artist new content request returned no data %{public}@",  (uint8_t *)&v19,  0x16u);
    }

    goto LABEL_13;
  }

  id v11 = -[AMPMusicArtistNewContentResponse initWithData:]( objc_alloc(&OBJC_CLASS___AMPMusicArtistNewContentResponse),  "initWithData:",  v7);
  uint64_t v12 = *(void *)(a1 + 32);
  __int16 v13 = *(void **)(v12 + 16);
  *(void *)(v12 + 16) = v11;

  if (*(void *)(*(void *)(a1 + 32) + 16LL))
  {
LABEL_13:
    uint64_t v10 = 0LL;
    goto LABEL_14;
  }

  uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = *(void *)(a1 + 32);
    int v19 = 138543362;
    uint64_t v20 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ failed to decode response object",  (uint8_t *)&v19,  0xCu);
  }

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
LABEL_14:
  [*(id *)(a1 + 32) finishWithError:v10];
}

uint64_t sub_10009B8D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(*(void *)(a1 + 32) + 16LL),  a2);
}

void sub_10009C028( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

void sub_10009D3EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      *(_DWORD *)buf = 138543362;
      id v43 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Failed to complete artist update request error=%{public}@",  buf,  0xCu);
    }
  }

  uint64_t v9 = v6;
  if ([v5 responseCode] != (id)200)
  {
    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      id v11 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      id v43 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "%{public}@ Received non-200 response for artists request, failing update",  buf,  0xCu);
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -5LL,  0LL));
  }

  if (v9)
  {
    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
  }

  else
  {
    if ([*(id *)(a1 + 32) isCancelled])
    {
      uint64_t v12 = *(void *)(a1 + 64);
      __int16 v13 = (SagaImportController *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -2LL,  0LL));
      (*(void (**)(uint64_t, SagaImportController *, void))(v12 + 16))(v12, v13, 0LL);
    }

    else
    {
      __int16 v13 = objc_alloc_init(&OBJC_CLASS___SagaImportController);
      -[SagaImportController processDAAPFileAtURL:](v13, "processDAAPFileAtURL:", *(void *)(a1 + 40));
      if (-[SagaImportController shouldRestart](v13, "shouldRestart"))
      {
        uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v15 = *(void **)(a1 + 32);
          unsigned int v16 = [*(id *)(a1 + 48) count];
          *(_DWORD *)buf = 138543618;
          id v43 = v15;
          __int16 v44 = 1024;
          *(_DWORD *)BOOL v45 = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Server requested restart for artists request. clearing %d previous pages and starting again...",  buf,  0x12u);
        }

        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        uint64_t v18 = *(void *)(a1 + 56);
        id v41 = 0LL;
        unsigned __int8 v19 = [v17 removeItemAtPath:v18 error:&v41];
        id v20 = v41;
        if ((v19 & 1) == 0)
        {
          __int16 v21 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412290;
            id v43 = v20;
            _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "Failed to remove obsolete items DAAP files with error: %@",  buf,  0xCu);
          }
        }

        *(_DWORD *)(*(void *)(a1 + 32) + 72LL) = 0;
        id v22 = *(void **)(a1 + 32);
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
        [v22 _fetchUpdatedArtistsWithPaginationToken:0 responseFileURLs:v23 completion:*(void *)(a1 + 64)];
      }

      else
      {
        float v24 = (float)-[SagaImportController processedItemCount](v13, "processedItemCount");
        float v25 = v24 / (float)-[SagaImportController totalItemCount](v13, "totalItemCount");
        LODWORD(v26) = 0;
        LODWORD(v27) = 0;
        LODWORD(v2_Block_object_dispose((const void *)(v67 - 160), 8) = 0;
        LODWORD(v29) = 0;
        *(float *)&double v30 = v25;
        [*(id *)(a1 + 32) _updateProgressWithItemsProgress:v26 albumsProgress:v27 artistsProgress:v30 playlistProgress:v28 importerProgress:v29];
        uint64_t v31 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = *(void **)(a1 + 32);
          unsigned int v33 = -[SagaImportController currentItemCount](v13, "currentItemCount");
          unsigned int v34 = -[SagaImportController processedItemCount](v13, "processedItemCount");
          unsigned int v35 = -[SagaImportController totalItemCount](v13, "totalItemCount");
          *(_DWORD *)buf = 138544386;
          id v43 = v32;
          __int16 v44 = 1024;
          *(_DWORD *)BOOL v45 = v33;
          *(_WORD *)&v45[4] = 2048;
          *(double *)&v45[6] = (float)(v25 * 100.0);
          __int16 v46 = 1024;
          unsigned int v47 = v34;
          __int16 v48 = 1024;
          unsigned int v49 = v35;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Downloaded artists response contains %u artists -- overall progress = %.0f%% (%u/%u)",  buf,  0x28u);
        }

        [*(id *)(a1 + 48) addObject:*(void *)(a1 + 40)];
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(-[SagaImportController currentPaginationToken](v13, "currentPaginationToken"));
        id v36 = [v17 length];
        char v37 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        BOOL v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);
        if (v36)
        {
          if (v38)
          {
            id v39 = *(void **)(a1 + 32);
            *(_DWORD *)buf = 138543618;
            id v43 = v39;
            __int16 v44 = 2114;
            *(void *)BOOL v45 = v17;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Requesting next batch of artist data with token: %{public}@",  buf,  0x16u);
          }

          [*(id *)(a1 + 32) _fetchUpdatedArtistsWithPaginationToken:v17 responseFileURLs:*(void *)(a1 + 48) completion:*(void *)(a1 + 64)];
        }

        else
        {
          if (v38)
          {
            uint64_t v40 = *(void **)(a1 + 32);
            *(_DWORD *)buf = 138543362;
            id v43 = v40;
            _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished fetching artist data",  buf,  0xCu);
          }

          (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
        }
      }
    }
  }
}

void sub_10009D960(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      *(_DWORD *)buf = 138543618;
      uint64_t v45 = v8;
      __int16 v46 = 2114;
      *(void *)unsigned int v47 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to complete albums update request error=%{public}@",  buf,  0x16u);
    }
  }

  uint64_t v10 = v6;
  if ([v5 responseCode] != (id)200)
  {
    id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v45 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Received non-200 response for albums request, failing update",  buf,  0xCu);
    }

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -5LL,  0LL));
  }

  if (v10)
  {
    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
  }

  else
  {
    if ([*(id *)(a1 + 32) isCancelled])
    {
      uint64_t v13 = *(void *)(a1 + 64);
      uint64_t v14 = (SagaImportController *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -2LL,  0LL));
      (*(void (**)(uint64_t, SagaImportController *, void))(v13 + 16))(v13, v14, 0LL);
    }

    else
    {
      uint64_t v14 = objc_alloc_init(&OBJC_CLASS___SagaImportController);
      -[SagaImportController processDAAPFileAtURL:](v14, "processDAAPFileAtURL:", *(void *)(a1 + 40));
      if (-[SagaImportController shouldRestart](v14, "shouldRestart"))
      {
        uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v16 = *(void *)(a1 + 32);
          unsigned int v17 = [*(id *)(a1 + 48) count];
          *(_DWORD *)buf = 138543618;
          uint64_t v45 = v16;
          __int16 v46 = 1024;
          *(_DWORD *)unsigned int v47 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Server requested restart for albums request. clearing %d previous pages and starting again...",  buf,  0x12u);
        }

        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        uint64_t v19 = *(void *)(a1 + 56);
        id v43 = 0LL;
        unsigned __int8 v20 = [v18 removeItemAtPath:v19 error:&v43];
        id v21 = v43;
        if ((v20 & 1) == 0)
        {
          id v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            uint64_t v23 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138543618;
            uint64_t v45 = v23;
            __int16 v46 = 2112;
            *(void *)unsigned int v47 = v21;
            _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to remove obsolete items DAAP files with error: %@",  buf,  0x16u);
          }
        }

        *(_DWORD *)(*(void *)(a1 + 32) + 68LL) = 0;
        float v24 = *(void **)(a1 + 32);
        float v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
        [v24 _fetchUpdatedAlbumsWithPaginationToken:0 responseFileURLs:v25 completion:*(void *)(a1 + 64)];
      }

      else
      {
        float v26 = (float)-[SagaImportController processedItemCount](v14, "processedItemCount");
        float v27 = v26 / (float)-[SagaImportController totalItemCount](v14, "totalItemCount");
        LODWORD(v2_Block_object_dispose((const void *)(v67 - 160), 8) = 0;
        LODWORD(v29) = 0;
        LODWORD(v30) = 0;
        LODWORD(v31) = 0;
        *(float *)&double v32 = v27;
        [*(id *)(a1 + 32) _updateProgressWithItemsProgress:v28 albumsProgress:v32 artistsProgress:v29 playlistProgress:v30 importerProgress:v31];
        unsigned int v33 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v34 = *(void *)(a1 + 32);
          unsigned int v35 = -[SagaImportController currentItemCount](v14, "currentItemCount");
          unsigned int v36 = -[SagaImportController processedItemCount](v14, "processedItemCount");
          unsigned int v37 = -[SagaImportController totalItemCount](v14, "totalItemCount");
          *(_DWORD *)buf = 138544386;
          uint64_t v45 = v34;
          __int16 v46 = 1024;
          *(_DWORD *)unsigned int v47 = v35;
          *(_WORD *)&uint8_t v47[4] = 2048;
          *(double *)&v47[6] = (float)(v27 * 100.0);
          __int16 v48 = 1024;
          unsigned int v49 = v36;
          __int16 v50 = 1024;
          unsigned int v51 = v37;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Downloaded albums response contains %u albums -- overall progress = %.0f%% (%u/%u)",  buf,  0x28u);
        }

        [*(id *)(a1 + 48) addObject:*(void *)(a1 + 40)];
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[SagaImportController currentPaginationToken](v14, "currentPaginationToken"));
        id v38 = [v18 length];
        id v39 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        BOOL v40 = os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT);
        if (v38)
        {
          if (v40)
          {
            uint64_t v41 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138543618;
            uint64_t v45 = v41;
            __int16 v46 = 2114;
            *(void *)unsigned int v47 = v18;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Requesting next batch of album data with token: %{public}@",  buf,  0x16u);
          }

          [*(id *)(a1 + 32) _fetchUpdatedAlbumsWithPaginationToken:v18 responseFileURLs:*(void *)(a1 + 48) completion:*(void *)(a1 + 64)];
        }

        else
        {
          if (v40)
          {
            uint64_t v42 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138543362;
            uint64_t v45 = v42;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished fetching album data",  buf,  0xCu);
          }

          (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
        }
      }
    }
  }
}

void sub_10009DEF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v23 = 138543618;
      uint64_t v24 = v8;
      __int16 v25 = 2114;
      float v26 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to complete playlist update request error=%{public}@",  (uint8_t *)&v23,  0x16u);
    }
  }

  uint64_t v10 = v6;
  if ([v5 responseCode] != (id)200)
  {
    id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      int v23 = 138543362;
      uint64_t v24 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Received non-200 response for playlist request, failing update",  (uint8_t *)&v23,  0xCu);
    }

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -5LL,  0LL));
  }

  if (v10)
  {
    uint64_t v13 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
LABEL_16:
    v13();
    goto LABEL_17;
  }

  if (![*(id *)(a1 + 32) isCancelled])
  {
    uint64_t v16 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 32);
      int v23 = 138543362;
      uint64_t v24 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished fetching playlist data",  (uint8_t *)&v23,  0xCu);
    }

    LODWORD(v1_Block_object_dispose((const void *)(v67 - 160), 8) = 0;
    LODWORD(v19) = 0;
    LODWORD(v20) = 0;
    LODWORD(v21) = 1.0;
    LODWORD(v22) = 0;
    [*(id *)(a1 + 32) _updateProgressWithItemsProgress:v18 albumsProgress:v19 artistsProgress:v20 playlistProgress:v21 importerProgress:v22];
    uint64_t v13 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
    goto LABEL_16;
  }

  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -2LL,  0LL));
  (*(void (**)(uint64_t, void *, void))(v14 + 16))(v14, v15, 0LL);

LABEL_17:
}

void sub_10009E18C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      *(_DWORD *)buf = 138543618;
      uint64_t v51 = v8;
      __int16 v52 = 2114;
      *(void *)id v53 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to complete playlist update request error=%{public}@",  buf,  0x16u);
    }
  }

  uint64_t v10 = v6;
  if ([v5 responseCode] != (id)200)
  {
    id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v51 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Received non-200 response for playlist request, failing update",  buf,  0xCu);
    }

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -5LL,  0LL));
  }

  if (v10)
  {
    (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
  }

  else
  {
    if ([*(id *)(a1 + 32) isCancelled])
    {
      uint64_t v13 = *(void *)(a1 + 72);
      uint64_t v14 = (SagaImportController *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -2LL,  0LL));
      (*(void (**)(uint64_t, SagaImportController *, void, void, void))(v13 + 16))( v13,  v14,  0LL,  0LL,  0LL);
    }

    else
    {
      uint64_t v14 = objc_alloc_init(&OBJC_CLASS___SagaImportController);
      -[SagaImportController processDAAPFileAtURL:](v14, "processDAAPFileAtURL:", *(void *)(a1 + 40));
      if (-[SagaImportController shouldRestart](v14, "shouldRestart"))
      {
        uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v16 = *(void *)(a1 + 32);
          unsigned int v17 = [*(id *)(a1 + 48) count];
          *(_DWORD *)buf = 138543618;
          uint64_t v51 = v16;
          __int16 v52 = 1024;
          *(_DWORD *)id v53 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Server requested restart for items request. clearing %d previous pages and starting again...",  buf,  0x12u);
        }

        double v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        uint64_t v19 = *(void *)(a1 + 56);
        id v49 = 0LL;
        unsigned __int8 v20 = [v18 removeItemAtPath:v19 error:&v49];
        id v21 = v49;
        if ((v20 & 1) == 0)
        {
          double v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            uint64_t v23 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138543618;
            uint64_t v51 = v23;
            __int16 v52 = 2112;
            *(void *)id v53 = v21;
            _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to remove obsolete items DAAP files with error: %@",  buf,  0x16u);
          }
        }

        *(_DWORD *)(*(void *)(a1 + 32) + 64LL) = 0;
        uint64_t v24 = *(void **)(a1 + 32);
        __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
        float v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
        [v24 _fetchUpdatedTracksWithPaginationToken:0 responseFileURLs:v25 currentIncludesBookmarkable:0 cloudIDToLyricsTokenMap:v26 completion:*(void *)(a1 + 72)];
      }

      else
      {
        if (*(_BYTE *)(a1 + 80)) {
          uint64_t v27 = 1LL;
        }
        else {
          uint64_t v27 = -[SagaImportController includesBookmarkable](v14, "includesBookmarkable");
        }
        double v28 = (void *)objc_claimAutoreleasedReturnValue(-[SagaImportController cloudIDToLyricsTokenMap](v14, "cloudIDToLyricsTokenMap"));
        id v29 = [v28 count];

        if (v29)
        {
          double v30 = *(void **)(a1 + 64);
          double v31 = (void *)objc_claimAutoreleasedReturnValue(-[SagaImportController cloudIDToLyricsTokenMap](v14, "cloudIDToLyricsTokenMap"));
          [v30 addEntriesFromDictionary:v31];
        }

        float v32 = (float)-[SagaImportController processedItemCount](v14, "processedItemCount");
        float v33 = v32 / (float)-[SagaImportController totalItemCount](v14, "totalItemCount");
        LODWORD(v34) = 0;
        LODWORD(v35) = 0;
        LODWORD(v36) = 0;
        LODWORD(v37) = 0;
        *(float *)&double v38 = v33;
        [*(id *)(a1 + 32) _updateProgressWithItemsProgress:v38 albumsProgress:v34 artistsProgress:v35 playlistProgress:v36 importerProgress:v37];
        id v39 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v40 = *(void *)(a1 + 32);
          unsigned int v41 = -[SagaImportController currentItemCount](v14, "currentItemCount");
          unsigned int v42 = -[SagaImportController processedItemCount](v14, "processedItemCount");
          unsigned int v43 = -[SagaImportController totalItemCount](v14, "totalItemCount");
          *(_DWORD *)buf = 138544386;
          uint64_t v51 = v40;
          __int16 v52 = 1024;
          *(_DWORD *)id v53 = v41;
          *(_WORD *)&v53[4] = 2048;
          *(double *)&v53[6] = (float)(v33 * 100.0);
          __int16 v54 = 1024;
          unsigned int v55 = v42;
          __int16 v56 = 1024;
          unsigned int v57 = v43;
          _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Downloaded items response contains %u items -- overall progress = %.0f%% (%u/%u)",  buf,  0x28u);
        }

        [*(id *)(a1 + 48) addObject:*(void *)(a1 + 40)];
        double v18 = (void *)objc_claimAutoreleasedReturnValue(-[SagaImportController currentPaginationToken](v14, "currentPaginationToken"));
        id v44 = [v18 length];
        uint64_t v45 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        BOOL v46 = os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT);
        if (v44)
        {
          if (v46)
          {
            uint64_t v47 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138543618;
            uint64_t v51 = v47;
            __int16 v52 = 2114;
            *(void *)id v53 = v18;
            _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Requesting next batch of item data with token: %{public}@",  buf,  0x16u);
          }

          [*(id *)(a1 + 32) _fetchUpdatedTracksWithPaginationToken:v18 responseFileURLs:*(void *)(a1 + 48) currentIncludesBookmarkable:v27 cloudIDToLyricsTokenMap:*(void *)(a1 + 64) completion:*(void *)(a1 + 72)];
        }

        else
        {
          if (v46)
          {
            uint64_t v48 = *(void *)(a1 + 32);
            *(_DWORD *)buf = 138543362;
            uint64_t v51 = v48;
            _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished fetching items data",  buf,  0xCu);
          }

          (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
        }
      }
    }
  }
}

id sub_10009E7B8(id a1, NSURL *a2)
{
  return -[NSURL path](a2, "path");
}

id sub_10009E7C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  ML3TrackPropertyStoreSagaID,  &off_1001B4048,  2LL));
  v34[0] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3TrackPropertyStoreCloudAssetAvailable,  0LL));
  v34[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3TrackPropertyStoreProtectionType,  2LL));
  void v34[2] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v34, 3LL));
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v7));

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:]( &OBJC_CLASS___ML3Track,  "unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:",  *(void *)(a1 + 32),  v8,  &__NSArray0__struct));
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472LL;
  void v28[2] = sub_10009EBA0;
  v28[3] = &unk_1001A6458;
  id v10 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v29 = v10;
  [v9 enumeratePersistentIDsUsingBlock:v28];
  if ([v10 count])
  {
    id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 40);
      id v13 = [v10 count];
      *(_DWORD *)buf = 138543874;
      uint64_t v31 = v12;
      __int16 v32 = 2048;
      *(void *)float v33 = v13;
      *(_WORD *)&v33[8] = 1024;
      *(_DWORD *)&v33[10] = 2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Found %lu unavailable tracks to unlink with asset protection type = %d",  buf,  0x1Cu);
    }

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
    uint64_t v15 = *(void *)(a1 + 32);
    uint64_t v23 = _NSConcreteStackBlock;
    uint64_t v24 = 3221225472LL;
    __int16 v25 = sub_10009EBEC;
    float v26 = &unk_1001A43F0;
    id v16 = v14;
    id v27 = v16;
    +[ML3Track enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:]( &OBJC_CLASS___ML3Track,  "enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:",  v15,  v10,  &v23);
    unsigned int v17 = os_log_create("com.apple.amp.itunescloudd", "CloudSync_Oversize");
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138543874;
      uint64_t v31 = v18;
      __int16 v32 = 1024;
      *(_DWORD *)float v33 = 2;
      *(_WORD *)&void v33[4] = 2114;
      *(void *)&v33[6] = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "%{public}@  Deleting assets with protection type = %d that are no longer cloud available: %{public}@",  buf,  0x1Cu);
    }

    ML3DeleteAssetsAtPaths(v16);
    id v19 = +[ML3Track clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:]( &OBJC_CLASS___ML3Track,  "clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:",  *(void *)(a1 + 32),  v10,  0LL,  v3,  v23,  v24,  v25,  v26);
    if ((v19 & 1) == 0)
    {
      unsigned __int8 v20 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        uint64_t v21 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 138543618;
        uint64_t v31 = v21;
        __int16 v32 = 1024;
        *(_DWORD *)float v33 = 2;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "%{public}@  Failed to clear location for unavailable tracks with asset protection type = %d",  buf,  0x12u);
      }
    }
  }

  else
  {
    id v19 = 0LL;
  }

  return v19;
}

void sub_10009EBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

void sub_10009EBEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    id v6 = v3;
    id v5 = [v3 length];
    id v4 = v6;
    if (v5)
    {
      [*(id *)(a1 + 32) addObject:v6];
      id v4 = v6;
    }
  }
}

uint64_t sub_10009EC40(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10009EC50(uint64_t a1)
{
}

void sub_10009EC58(uint64_t a1, void *a2, void *a3, char a4, void *a5)
{
  id v18 = a2;
  id v10 = a3;
  id v11 = a5;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  if (v18) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v10;
  id v14 = v10;

  *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = a4;
  uint64_t v15 = *(void *)(*(void *)(a1 + 72) + 8LL);
  id v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v11;
  id v17 = v11;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10009ED40(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v6 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  if (v10) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
  id v9 = v6;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10009EDE4(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v6 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  if (v10) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
  id v9 = v6;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10009EE88(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v6 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  if (v10) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 48LL));
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
  id v9 = v6;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10009EF2C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isCancelled])
  {
    uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v45 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Stopping saga import as the operation is cancelled",  buf,  0xCu);
    }

    uint64_t v4 = *(void *)(a1 + 40);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -2LL,  0LL));
    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }

  else
  {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    uint64_t v8 = v7;
    if (v6)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v9 = *(void *)(a1 + 32);
        uint64_t v10 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
        *(_DWORD *)buf = 138543618;
        uint64_t v45 = v9;
        __int16 v46 = 2114;
        uint64_t v47 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to obtain updated library data. err=%{public}@",  buf,  0x16u);
      }

      (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
    }

    else
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v45 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Metadata update complete - starting import",  buf,  0xCu);
      }

      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = *(unsigned int *)(v12 + 40);
      uint64_t v14 = *(unsigned int *)(v12 + 44);
      uint64_t v15 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
      uint64_t v43 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL);
      id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v43, 1LL));
      sub_1000C1FC0( 2,  v13,  v14,  v15,  v16,  *(void **)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL),  *(void **)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL));

      id v18 = *(_DWORD **)(a1 + 32);
      int v19 = v18[10];
      BOOL v32 = v19 == 0;
      if (!v19)
      {
        uint64_t v42 = objc_opt_class(&OBJC_CLASS___ML3Album, v17);
        unsigned __int8 v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v42, 1LL));
        uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
        +[CloudKeepLocalUtilities downPinCollectionsForClasses:configuration:]( &OBJC_CLASS___CloudKeepLocalUtilities,  "downPinCollectionsForClasses:configuration:",  v20,  v21);

        id v18 = *(_DWORD **)(a1 + 32);
      }

      float v33 = (void *)objc_claimAutoreleasedReturnValue( [v18 _importDataFromResponseFileURLs:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)]);
      double v22 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _importDataFromResponseFileURLs:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40)]);
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _importDataFromResponseFileURLs:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)]);
      uint64_t v24 = *(void **)(a1 + 32);
      uint64_t v41 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL);
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v41, 1LL));
      float v26 = (void *)objc_claimAutoreleasedReturnValue([v24 _importDataFromResponseFileURLs:v25]);

      id v27 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  *(void *)(*(void *)(a1 + 32) + 8LL)));
      [v27 setClientIdentity:*(void *)(*(void *)(a1 + 32) + 24)];
      double v28 = (void *)objc_claimAutoreleasedReturnValue([v27 databasePath]);
      id v29 = [[ML3DatabaseImport alloc] initWithLibraryPath:v28 trackData:v33 playlistData:v26 albumArtistData:v22 albumData:v23 clientIdentity:*(void *)(*(void *)(a1 + 32) + 24)];
      [v29 setClientInitiatedReset:*(unsigned __int8 *)(*(void *)(a1 + 32) + 17)];
      objc_initWeak((id *)buf, *(id *)(a1 + 32));
      double v30 = (void *)objc_claimAutoreleasedReturnValue( +[MLMediaLibraryService sharedMediaLibraryService]( &OBJC_CLASS___MLMediaLibraryService,  "sharedMediaLibraryService"));
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472LL;
      v39[2] = sub_10009F468;
      v39[3] = &unk_1001A5B28;
      objc_copyWeak(&v40, (id *)buf);
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472LL;
      void v34[2] = sub_10009F4B8;
      void v34[3] = &unk_1001A43A0;
      void v34[4] = *(void *)(a1 + 32);
      BOOL v38 = v32;
      id v31 = v27;
      id v35 = v31;
      __int128 v37 = *(_OWORD *)(a1 + 88);
      id v36 = *(id *)(a1 + 40);
      [v30 performImport:v29 fromSource:2 withProgressBlock:v39 completionHandler:v34];

      objc_destroyWeak(&v40);
      objc_destroyWeak((id *)buf);
    }
  }

void sub_10009F43C(_Unwind_Exception *a1)
{
}

void sub_10009F468(uint64_t a1, float a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    LODWORD(v4) = 0;
    LODWORD(v5) = 0;
    LODWORD(v6) = 0;
    LODWORD(v7) = 0;
    id v9 = WeakRetained;
    *(float *)&double v8 = a2;
    [WeakRetained _updateProgressWithItemsProgress:v4 albumsProgress:v5 artistsProgress:v6 playlistProgress:v7 importerProgress:v8];
    id WeakRetained = v9;
  }
}

void sub_10009F4B8(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  uint64_t v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "msv_description"));
      *(_DWORD *)buf = 138543618;
      uint64_t v50 = v11;
      __int16 v51 = 2114;
      __int16 v52 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "%{public}@ Database import completed error=%{public}@",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v13 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v50 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Database import completed",  buf,  0xCu);
  }

  id v14 = v7;
  if (*(_BYTE *)(a1 + 72))
  {
    uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v50 = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "%{public}@ Re-pinning albums", buf, 0xCu);
    }

    uint64_t v48 = objc_opt_class(&OBJC_CLASS___ML3Album, v17);
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v48, 1LL));
    int v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    +[CloudKeepLocalUtilities rePinCollectionsForClasses:configuration:]( &OBJC_CLASS___CloudKeepLocalUtilities,  "rePinCollectionsForClasses:configuration:",  v18,  v19);
  }

  unsigned __int8 v20 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v21 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v50 = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Removing unavailable subscription content",  buf,  0xCu);
  }

  [*(id *)(a1 + 32) _removeUnavailableSubscriptionAssetsInLibrary:*(void *)(a1 + 40)];
  if (a2)
  {
    if ([*(id *)(a1 + 32) isCancelled])
    {
      unsigned int v22 = 1;
    }

    else
    {
      uint64_t v23 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v24 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v50 = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Updating subscribed playlists",  buf,  0xCu);
      }

      v47[0] = *(void *)(*(void *)(a1 + 32) + 32LL);
      v47[1] = @"containers.daap";
      __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v47, 2LL));
      float v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPathComponents:](&OBJC_CLASS___NSURL, "fileURLWithPathComponents:", v25));

      v46[0] = *(void *)(*(void *)(a1 + 32) + 32LL);
      v46[1] = @"subscribed-containers.daap";
      id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v46, 2LL));
      double v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPathComponents:](&OBJC_CLASS___NSURL, "fileURLWithPathComponents:", v27));

      id v29 = *(void **)(a1 + 32);
      double v30 = (void *)objc_claimAutoreleasedReturnValue([v26 path]);
      unsigned int v22 = [v29 _updateGlobalPlaylistsFromContainersPayloadAtPath:v30 downloadPathForSubscribedContainersPayload:v28];

      if ((v22 & 1) == 0)
      {
        id v31 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
        {
          uint64_t v32 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          uint64_t v50 = v32;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to update subscribed playlists",  buf,  0xCu);
        }
      }
    }
  }

  else
  {
    unsigned int v22 = 0;
  }

  float v33 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  if ([v33 isWatch])
  {
    unsigned int v34 = 1;
    if (!v22) {
      goto LABEL_25;
    }
LABEL_28:
    if ((([*(id *)(a1 + 32) isCancelled] | v34) & 1) == 0)
    {
      id v35 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v36 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543362;
        uint64_t v50 = v36;
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "%{public}@ Updating lyrics", buf, 0xCu);
      }

      [*(id *)(a1 + 32) _importLyricsWithLyricsTokenMap:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];
    }

    if (*(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL))
    {
      __int128 v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
      BOOL v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) libraryUID]);
      [v37 postNotificationName:@"ICDPlaybackPositionImportRequiresSyncNotification" object:v38];
    }

    if (!v7) {
      goto LABEL_38;
    }
    goto LABEL_35;
  }

  unsigned int v34 = [v33 isAudioAccessory];
  if (v22) {
    goto LABEL_28;
  }
LABEL_25:
  if (!v7)
  {
    id v7 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SagaImporterErrorDomain",  -1LL,  0LL));
LABEL_38:
    id v39 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v42 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      uint64_t v50 = v42;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "%{public}@ Saga update complete", buf, 0xCu);
    }

    goto LABEL_40;
  }

uint64_t sub_10009FB84(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000A0078(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (uint64_t)[v5 responseCode];
  if (v7 > 399)
  {
    if (v7 == 404 || v7 == 400)
    {
      uint64_t v8 = 3LL;
      goto LABEL_9;
    }

    goto LABEL_8;
  }

  uint64_t v8 = 1LL;
  if (v7 != 200 && v7 != 204) {
LABEL_8:
  }
    uint64_t v8 = 2LL;
LABEL_9:
  [*(id *)(a1 + 32) setStatus:v8];
  [*(id *)(a1 + 32) setError:v6];
  if (v6)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 domain]);
    uint64_t v11 = ICCloudClientErrorDomain;
    if (([v10 isEqualToString:ICCloudClientErrorDomain] & 1) == 0)
    {

      goto LABEL_25;
    }

    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
    id v13 = [v12 code];

    if (v13 == (id)2019)
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) error]);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 userInfo]);
      id v9 = (void *)objc_claimAutoreleasedReturnValue( [v15 objectForKey:@"CloudLibraryConnectionRequestForbiddenAdditonalErrorCodeKey"]);

      id v16 = [v9 integerValue];
      if (v16 == (id)959)
      {
        double v28 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          uint64_t v29 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          uint64_t v34 = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "%{public}@ - Server response indicates the limit on pending collaborators has been reached",  buf,  0xCu);
        }

        [*(id *)(a1 + 32) setStatus:3];
        int v19 = @"Pending collaborator limit exceeded";
        uint64_t v20 = v11;
        uint64_t v21 = 2024LL;
        goto LABEL_24;
      }

      if (v16 == (id)958)
      {
        uint64_t v17 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          uint64_t v18 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          uint64_t v34 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "%{public}@ - Server response indicates the limit on active collaborators has been reached",  buf,  0xCu);
        }

        [*(id *)(a1 + 32) setStatus:3];
        int v19 = @"Active collaborator limit exceeded";
        uint64_t v20 = v11;
        uint64_t v21 = 2023LL;
LABEL_24:
        double v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSError msv_errorWithDomain:code:underlyingError:debugDescription:]( &OBJC_CLASS___NSError,  "msv_errorWithDomain:code:underlyingError:debugDescription:",  v20,  v21,  v6,  v19));
        [*(id *)(a1 + 32) setError:v30];
      }

LABEL_25:
    }
  }

  else
  {
    id v22 = v5;
    unsigned int v23 = [v22 collaborationCloudLibraryID];
    uint64_t v24 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      uint64_t v34 = v25;
      __int16 v35 = 1024;
      unsigned int v36 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished request to join collaboration. sagaID=%u",  buf,  0x12u);
    }

    *(void *)(*(void *)(a1 + 32) + 114LL) = v23;
    float v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    void v31[2] = sub_1000A045C;
    void v31[3] = &unk_1001A44D0;
    void v31[4] = *(void *)(a1 + 32);
    unsigned int v32 = v23;
    [v26 databaseConnectionAllowingWrites:1 withBlock:v31];

    unsigned __int8 v27 = [v22 updateRequired];
    *(_BYTE *)(*(void *)(a1 + 32) + 106LL) = v27;
  }

  [*(id *)(a1 + 40) endTransaction];
  [*(id *)(a1 + 32) finish];
}

void sub_1000A045C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToValue:",  ML3ContainerPropertyCloudGlobalID,  *(void *)(*(void *)(a1 + 32) + 90LL)));
  double v4 = (void *)objc_claimAutoreleasedReturnValue(+[ML3Container anyInLibrary:predicate:](&OBJC_CLASS___ML3Container, "anyInLibrary:predicate:", v2, v3));

  if ([v4 existsInLibrary])
  {
    v11[0] = ML3ContainerPropertyStoreCloudID;
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)(a1 + 40)));
    v12[0] = v5;
    v12[1] = &__kCFBooleanTrue;
    v11[1] = ML3ContainerPropertyIsCollaborative;
    void v11[2] = ML3ContainerPropertyCollaboratorStatus;
    void v12[2] = &off_1001B4060;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v12,  v11,  3LL));

    if (([v4 setValuesForPropertiesWithDictionary:v6] & 1) == 0)
    {
      uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        int v9 = 138543362;
        uint64_t v10 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to update container properties",  (uint8_t *)&v9,  0xCu);
      }
    }
  }
}

void sub_1000A0FA0(_Unwind_Exception *a1)
{
}

uint64_t sub_1000A1004(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000A1014(uint64_t a1)
{
}

void sub_1000A101C(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000A11AC(uint64_t a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000A1220;
  v3[3] = &unk_1001A70B8;
  id v4 = *(id *)(a1 + 32);
  ICDAAPUtilitiesWriteContainer(a2, 1835623521LL, v3);
}

void sub_1000A1220(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0LL;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        ICDAAPUtilitiesWriteProperty(v3, 1835624804LL, 5LL, *(void *)(*((void *)&v9 + 1) + 8LL * (void)v8));
        uint64_t v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v6);
  }
}

void sub_1000A2154( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_1000A21D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000A21E8(uint64_t a1)
{
}

void sub_1000A21F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  __int128 v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000A2B9C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1000A2D1C(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1000A3160(uint64_t a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000A31C0;
  v3[3] = &unk_1001A70B8;
  void v3[4] = *(void *)(a1 + 32);
  return ICDAAPUtilitiesWriteContainer(a2, 1835819884LL, v3);
}

uint64_t sub_1000A31C0(uint64_t a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000A3220;
  v3[3] = &unk_1001A70B8;
  void v3[4] = *(void *)(a1 + 32);
  return ICDAAPUtilitiesWriteContainer(a2, 1835821428LL, v3);
}

void sub_1000A3220(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 104LL);
  id v4 = a2;
  [v4 writeString:v3 withCode:1634357319];
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 112) absoluteString]);
  [v4 writeString:v5 withCode:1634354025];
}

void sub_1000A3A84(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), v8);
    __int128 v10 = NSStringFromClass(v9);
    id v25 = v6;
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = *(void **)(a1 + 32);
    if ([v12 method]) {
      id v13 = @"POST";
    }
    else {
      id v13 = @"GET";
    }
    id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) action]);
    id v16 = (objc_class *)objc_opt_class(v5, v15);
    uint64_t v17 = NSStringFromClass(v16);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    id v19 = [v5 responseCode];
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    *(_DWORD *)buf = 138545154;
    id v27 = v11;
    __int16 v28 = 2048;
    uint64_t v29 = v12;
    __int16 v30 = 2114;
    id v31 = v13;
    __int16 v32 = 2114;
    float v33 = v14;
    __int16 v34 = 2114;
    __int16 v35 = v18;
    __int16 v36 = 2048;
    id v37 = v5;
    __int16 v38 = 2048;
    id v39 = v19;
    __int16 v40 = 2048;
    id v41 = [v20 length];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x52u);

    id v6 = v25;
  }

  if (v6)
  {
    uint64_t v21 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v27 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "SagaRemovePlaylistOperation failed with error: %{public}@",  buf,  0xCu);
    }
  }

  id v22 = *(void **)(a1 + 40);
  uint64_t v23 = (uint64_t)[v5 responseCode];
  if (v23 > 399)
  {
    if (v23 != 404 && v23 != 400) {
      goto LABEL_17;
    }
    uint64_t v24 = 3LL;
  }

  else
  {
    uint64_t v24 = 1LL;
    if (v23 != 200 && v23 != 204) {
LABEL_17:
    }
      uint64_t v24 = 2LL;
  }

  [v22 setStatus:v24];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000A45F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000A4738( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000A4814( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000A49E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1000A4B98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000A4E40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_1000A56E0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 allObjects]);
  id v6 = [v4 executeUpdate:v2 withParameters:v5 error:0];

  return v6;
}

id sub_1000A5740(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000A5814;
  v10[3] = &unk_1001A47A0;
  id v11 = v3;
  id v5 = (id)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( NSMutableDictionary,  "dictionaryWithCapacity:",  [v4 count]));
  id v12 = v5;
  id v6 = v3;
  [v4 enumerateObjectsUsingBlock:v10];

  uint64_t v7 = v12;
  id v8 = v5;

  return v8;
}

void sub_1000A5814(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForProperty:"));
  if (v3) {
    [*(id *)(a1 + 40) setObject:v3 forKey:v4];
  }
}

uint64_t sub_1000A5870(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000A5880(uint64_t a1)
{
}

uint64_t sub_1000A5888(uint64_t a1, void *a2)
{
  uint64_t v14 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v14, 1LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT key, play_count_user, has_been_played, bookmark_time_ms, bookmark_sync_timestamp FROM cloud_kvs WHERE key = ?",  v4));

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000A59A8;
  void v9[3] = &unk_1001A4750;
  uint64_t v13 = *(void *)(a1 + 56);
  id v10 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 48);
  id v11 = v6;
  uint64_t v12 = v7;
  [v5 enumerateRowsWithBlock:v9];

  return 1LL;
}

void sub_1000A59A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[ICPlaybackPositionEntity initWithDomain:]( objc_alloc(&OBJC_CLASS___ICPlaybackPositionEntity),  "initWithDomain:",  *(void *)(a1 + 32));
  uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  id v13 = (id)objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:1]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:2]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:3]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:4]);

  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setPlaybackPositionKey:*(void *)(a1 + 40)];
  id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) libraryUID]);
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setLibraryIdentifier:v10];

  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setUserPlayCount:v13];
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setHasBeenPlayed:v7];
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setBookmarkTimestamp:v9];
  if (v8)
  {
    [v8 doubleValue];
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v11 / 1000.0));
  }

  else
  {
    uint64_t v12 = 0LL;
  }

  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setBookmarkTime:v12];
  if (v8) {
}
  }

void sub_1000A5B40(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:a1[4]];
  [v3 setPrivacyContext:v4];

  uint64_t v9 = a1[5];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v9, 1LL));
  uint64_t v6 = *(void *)(a1[7] + 8LL);
  id obj = *(id *)(v6 + 40);
  unsigned __int8 v7 = [v3 executeUpdate:@"DELETE FROM cloud_kvs WHERE key = ?" withParameters:v5 error:&obj];

  objc_storeStrong((id *)(v6 + 40), obj);
  *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = v7;
}

BOOL sub_1000A5C44(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v3 setPrivacyContext:v4];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) playbackPositionKey]);
  uint64_t v80 = v5;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v80, 1LL));
  unsigned __int8 v7 = (void *)objc_claimAutoreleasedReturnValue([v3 executeQuery:@"SELECT key FROM cloud_kvs WHERE key = ?" withParameters:v6]);

  if ([v7 hasAtLeastOneRow])
  {
    id v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v9 = (id *)(a1 + 40);
    uint64_t v10 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) hasBeenPlayed]);
    double v11 = (void *)v10;
    if (v10) {
      uint64_t v12 = (_UNKNOWN **)v10;
    }
    else {
      uint64_t v12 = &off_1001B4078;
    }
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v8,  "setObject:forKeyedSubscript:",  v12,  @"has_been_played");

    uint64_t v13 = objc_claimAutoreleasedReturnValue([*v9 userPlayCount]);
    uint64_t v14 = (void *)v13;
    if (v13) {
      uint64_t v15 = (_UNKNOWN **)v13;
    }
    else {
      uint64_t v15 = &off_1001B4078;
    }
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v8,  "setObject:forKeyedSubscript:",  v15,  @"play_count_user");

    uint64_t v16 = objc_claimAutoreleasedReturnValue([*v9 bookmarkTimestamp]);
    uint64_t v17 = (void *)v16;
    if (v16) {
      uint64_t v18 = (_UNKNOWN **)v16;
    }
    else {
      uint64_t v18 = &off_1001B4078;
    }
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v8,  "setObject:forKeyedSubscript:",  v18,  @"bookmark_sync_timestamp");

    id v19 = (void *)objc_claimAutoreleasedReturnValue([*v9 bookmarkTime]);
    if (v19)
    {
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) bookmarkTime]);
      [v20 doubleValue];
      id v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v21 * 1000.0));
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v8,  "setObject:forKeyedSubscript:",  v22,  @"bookmark_time_ms");
    }

    else
    {
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v8,  "setObject:forKeyedSubscript:",  &off_1001B4078,  @"bookmark_time_ms");
    }

    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary allKeys](v8, "allKeys"));
    BOOL v24 = [v23 count] == 0;

    if (v24)
    {

      BOOL v42 = 1LL;
      goto LABEL_24;
    }

    id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 48) currentRevision]));
    -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v25, @"bookmark_sync_revision");

    float v26 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary allKeys](v8, "allKeys"));
    id v27 = [v26 count];

    __int16 v28 = objc_alloc_init(&OBJC_CLASS___NSMutableString);
    uint64_t v29 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int16 v30 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary allKeys](v8, "allKeys"));
    v73[0] = _NSConcreteStackBlock;
    v73[1] = 3221225472LL;
    v73[2] = sub_1000A62CC;
    v73[3] = &unk_1001A46B0;
    uint64_t v74 = v28;
    uint64_t v75 = v29;
    uint64_t v76 = v8;
    id v77 = v27;
    id v31 = v8;
    __int16 v32 = v29;
    float v33 = v28;
    [v30 enumerateObjectsUsingBlock:v73];

    __int16 v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) playbackPositionKey]);
    -[NSMutableArray addObject:](v32, "addObject:", v34);

    __int16 v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"UPDATE cloud_kvs SET %@ WHERE key = ?",  v33));
    *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v3 executeUpdate:v35 withParameters:v32 error:0];
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = objc_msgSend( *(id *)(a1 + 56),  "_updateUbiquitousDatabaseWithEntity: syncRevision:usingConnection:",  *(void *)(a1 + 40),  objc_msgSend( *(id *)(a1 + 48),  "currentRevision"),  v3);
  }

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL))
  {
    __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) playbackPositionKey]);
    uint64_t v79 = v36;
    id v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v79, 1LL));
    __int16 v38 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT item_pid, play_count_user, has_been_played, bookmark_time_ms FROM cloud_kvs INNER JOIN item_kvs USING (key) LEFT OUTER JOIN item USING (item_pid) WHERE key = ? AND item.item_pid IS NOT NULL",  v37));

    uint64_t v67 = 0LL;
    __int16 v68 = &v67;
    uint64_t v69 = 0x3032000000LL;
    __int16 v70 = sub_1000A5870;
    id v71 = sub_1000A5880;
    id v72 = 0LL;
    uint64_t v61 = 0LL;
    uint64_t v62 = &v61;
    uint64_t v63 = 0x3032000000LL;
    id v64 = sub_1000A5870;
    CC_LONG64 v65 = sub_1000A5880;
    id v66 = 0LL;
    uint64_t v55 = 0LL;
    __int16 v56 = &v55;
    uint64_t v57 = 0x3032000000LL;
    char v58 = sub_1000A5870;
    BOOL v59 = sub_1000A5880;
    id v60 = 0LL;
    uint64_t v49 = 0LL;
    uint64_t v50 = &v49;
    uint64_t v51 = 0x3032000000LL;
    __int16 v52 = sub_1000A5870;
    id v53 = sub_1000A5880;
    id v54 = 0LL;
    uint64_t v45 = 0LL;
    __int16 v46 = &v45;
    uint64_t v47 = 0x2020000000LL;
    char v48 = 0;
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472LL;
    v44[2] = sub_1000A6380;
    v44[3] = &unk_1001A46D8;
    void v44[4] = &v67;
    void v44[5] = &v61;
    v44[6] = &v55;
    v44[7] = &v49;
    v44[8] = &v45;
    [v38 enumerateRowsWithBlock:v44];
    if (*((_BYTE *)v46 + 24) && [(id)v68[5] longLongValue])
    {
      uint64_t v39 = v56[5];
      v78[0] = v50[5];
      v78[1] = v39;
      uint64_t v40 = v68[5];
      v78[2] = v62[5];
      v78[3] = v40;
      id v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v78, 4LL));
      *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"UPDATE item_stats SET bookmark_time_ms = ?, has_been_played = ?, play_count_user = ? where item_pid = ?",  v41,  0);
    }

    _Block_object_dispose(&v45, 8);
    _Block_object_dispose(&v49, 8);

    _Block_object_dispose(&v55, 8);
    _Block_object_dispose(&v61, 8);

    _Block_object_dispose(&v67, 8);
    BOOL v42 = *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) != 0;
  }

  else
  {
    BOOL v42 = 0LL;
  }

void sub_1000A627C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, char a41)
{
}

void sub_1000A62CC(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  [v5 appendFormat:@"%@ = ?", v6];
  unsigned __int8 v7 = *(void **)(a1 + 40);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) objectForKey:v6]);

  [v7 addObject:v8];
  if (*(void *)(a1 + 56) - 1LL > a3) {
    objc_msgSend(*(id *)(a1 + 32), "appendString:", @", ");
  }
}

void sub_1000A6380(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:0]);
  uint64_t v5 = *(void *)(a1[4] + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint64_t v7 = objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:1]);
  uint64_t v8 = *(void *)(a1[5] + 8LL);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  uint64_t v10 = objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:2]);
  uint64_t v11 = *(void *)(a1[6] + 8LL);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;

  uint64_t v13 = objc_claimAutoreleasedReturnValue([v3 numberForColumnIndex:3]);
  uint64_t v14 = *(void *)(a1[7] + 8LL);
  uint64_t v15 = *(void **)(v14 + 40);
  *(void *)(v14 + 40) = v13;

  *(_BYTE *)(*(void *)(a1[8] + 8LL) + 24LL) = 1;
}

uint64_t sub_1000A6450(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:a1[4]];
  [v3 setPrivacyContext:v4];

  id v5 = [[ML3Track alloc] initWithPersistentID:a1[7] inLibrary:a1[5]];
  id v6 = v5;
  if (v5)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForProperty:ML3TrackPropertyRememberBookmarkTime]);
    unsigned int v8 = [v7 BOOLValue];

    if (!v8)
    {
      uint64_t v16 = 0LL;
      goto LABEL_12;
    }

    uint64_t v9 = ML3TrackPropertyStoreBookmarkMetadataIdentifier;
    os_log_t v10 = (os_log_t)objc_claimAutoreleasedReturnValue([v6 valueForProperty:ML3TrackPropertyStoreBookmarkMetadataIdentifier]);
    if (-[os_log_s length](v10, "length"))
    {
      *(void *)&__int128 buf = 0LL;
      *((void *)&buf + 1) = &buf;
      uint64_t v23 = 0x3032000000LL;
      BOOL v24 = sub_1000A5870;
      id v25 = sub_1000A5880;
      id v26 = 0LL;
      os_log_t v21 = v10;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v21, 1LL));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT play_count_user, has_been_played, bookmark_time_ms FROM cloud_kvs WHERE key = ?",  v11));

      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472LL;
      v19[2] = sub_1000A6750;
      v19[3] = &unk_1001A4660;
      void v19[4] = &buf;
      [v12 enumerateRowsWithBlock:v19];
      if (*(void *)(*((void *)&buf + 1) + 40LL)) {
        objc_msgSend(v6, "setValuesForPropertiesWithDictionary:");
      }
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:v9]);
      v20[0] = &off_1001B4C68;
      v20[1] = &off_1001B4078;
      v20[2] = v13;
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 3LL));
      id v15 =  objc_msgSend( v3,  "executeQuery:withParameters:",  @"UPDATE cloud_kvs SET bookmark_sync_timestamp = ?, bookmark_sync_revision = ? WHERE key = ?",  v14);

      *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 1;
      _Block_object_dispose(&buf, 8);

      uint64_t v16 = 1LL;
      goto LABEL_10;
    }
  }

  else
  {
    os_log_t v10 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v17 = a1[7];
      LODWORD(buf) = 134217984;
      *(void *)((char *)&buf + 4) = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "updateMusicLibraryByApplyingUbiquitousBookmarkMetadataToTrackWithPersistentID:, persistentID %lld doesn't exist.",  (uint8_t *)&buf,  0xCu);
    }
  }

  uint64_t v16 = 0LL;
LABEL_10:

LABEL_12:
  return v16;
}

void sub_1000A672C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1000A6750(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    if (!a3)
    {
      v11[0] = ML3TrackPropertyPlayCountUser;
      id v4 = a2;
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 numberForColumnIndex:0]);
      v12[0] = v5;
      v11[1] = ML3TrackPropertyHasBeenPlayed;
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 numberForColumnIndex:1]);
      v12[1] = v6;
      void v11[2] = ML3TrackPropertyBookmarkTime;
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 numberForColumnIndex:2]);

      void v12[2] = v7;
      uint64_t v8 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v12,  v11,  3LL));
      uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8LL);
      os_log_t v10 = *(void **)(v9 + 40);
      *(void *)(v9 + 40) = v8;
    }
  }

void sub_1000A6874(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:a1[4]];
  [v3 setPrivacyContext:v4];

  uint64_t v5 = *(void *)(a1[6] + 8LL);
  id obj = *(id *)(v5 + 40);
  unsigned __int8 v6 = [v3 executeUpdate:@"DELETE FROM cloud_kvs" withParameters:&__NSArray0__struct error:&obj];

  objc_storeStrong((id *)(v5 + 40), obj);
  *(_BYTE *)(*(void *)(a1[5] + 8LL) + 24LL) = v6;
}

void sub_1000A6920(uint64_t a1, void *a2)
{
  id v17 = a2;
  id v3 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v17 setPrivacyContext:v3];

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableString stringWithString:]( &OBJC_CLASS___NSMutableString,  "stringWithString:",  @"SELECT key, play_count_user, has_been_played, bookmark_time_ms, bookmark_sync_timestamp FROM cloud_kvs WHERE key"));
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[ML3DatabaseStatementRenderer defaultRenderer]( &OBJC_CLASS___ML3DatabaseStatementRenderer,  "defaultRenderer"));
  id v4 = (char *)[*(id *)(a1 + 40) count];
  if (v4)
  {
    uint64_t v5 = v4;
    unsigned __int8 v6 = 0LL;
    unint64_t v7 = 0LL;
    uint64_t v8 = -1LL;
    do
    {
      else {
        uint64_t v9 = (uint64_t)&v5[-v7];
      }
      os_log_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "subarrayWithRange:", v7, v9));
      if (v8 != v9)
      {
        uint64_t v11 = objc_claimAutoreleasedReturnValue([v15 statementWithPrefix:v16 inParameterCount:v9]);

        uint64_t v8 = v9;
        unsigned __int8 v6 = (void *)v11;
      }

      v7 += v9;
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v17 executeQuery:v6 withParameters:v10]);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      void v18[2] = sub_1000A6AD0;
      v18[3] = &unk_1001A4610;
      id v13 = *(id *)(a1 + 48);
      uint64_t v14 = *(void *)(a1 + 56);
      id v19 = v13;
      uint64_t v20 = v14;
      [v12 enumerateRowsWithBlock:v18];
    }

    while (v7 < (unint64_t)v5);
  }
}

void sub_1000A6AD0(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2 && !a3)
  {
    id v4 = a2;
    id v12 = (id)objc_claimAutoreleasedReturnValue([v4 stringForColumnIndex:0]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 numberForColumnIndex:1]);
    unsigned __int8 v6 = (void *)objc_claimAutoreleasedReturnValue([v4 numberForColumnIndex:2]);
    unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v4 numberForColumnIndex:3]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 numberForColumnIndex:4]);

    uint64_t v9 = -[ICPlaybackPositionEntity initWithDomain:]( objc_alloc(&OBJC_CLASS___ICPlaybackPositionEntity),  "initWithDomain:",  *(void *)(a1 + 32));
    -[ICPlaybackPositionEntity setPlaybackPositionKey:](v9, "setPlaybackPositionKey:", v12);
    -[ICPlaybackPositionEntity setUserPlayCount:](v9, "setUserPlayCount:", v5);
    -[ICPlaybackPositionEntity setHasBeenPlayed:](v9, "setHasBeenPlayed:", v6);
    -[ICPlaybackPositionEntity setBookmarkTimestamp:](v9, "setBookmarkTimestamp:", v8);
    if (v7)
    {
      [v7 doubleValue];
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v10 / 1000.0));
      -[ICPlaybackPositionEntity setBookmarkTime:](v9, "setBookmarkTime:", v11);
    }

    else
    {
      -[ICPlaybackPositionEntity setBookmarkTime:](v9, "setBookmarkTime:", 0LL);
    }

    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v9];
  }

uint64_t sub_1000A6C44(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000A6E68;
  v3[3] = &unk_1001A4570;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v1 = *(void **)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  [v1 enumerateKeysAndObjectsUsingBlock:v3];

  return 1LL;
}

uint64_t sub_1000A6CBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) setLastSyncedEntityRevision:*(void *)(a1 + 64)];
  [*(id *)(a1 + 32) setLastSyncedDomainVersion:*(void *)(a1 + 40)];
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v4 setDateLastSynced:v5];

  [*(id *)(a1 + 32) setLastNotificationDomainVersion:*(void *)(a1 + 40)];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000A6DA0;
  void v9[3] = &unk_1001A45C0;
  void v9[4] = *(void *)(a1 + 32);
  unsigned __int8 v6 = *(void **)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  id v11 = v3;
  id v7 = v3;
  [v6 enumerateKeysAndObjectsUsingBlock:v9];

  return 1LL;
}

void sub_1000A6DA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v13 = v3;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 playbackPositionKey]);
  unsigned __int8 v6 = (void *)objc_claimAutoreleasedReturnValue([v4 _kvsEntityWithKVSKey:v5 domain:*(void *)(a1 + 40)]);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 bookmarkTimestamp]);
  [v7 doubleValue];
  double v9 = v8;

  if (!v6
    || (id v10 = (void *)objc_claimAutoreleasedReturnValue([v13 bookmarkTimestamp]),
        [v10 doubleValue],
        double v12 = v11,
        v10,
        v12 > v9))
  {
    [*(id *)(a1 + 32) _updateUbiquitousDatabaseWithEntity:v13 syncRevision:0 usingConnection:*(void *)(a1 + 48)];
  }
}

void sub_1000A6E68(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  unsigned __int8 v8 = [v6 isEqual:v7];

  if ((v8 & 1) == 0)
  {
    double v9 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:ML3TrackPropertyStoreBookmarkMetadataIdentifier]);
    if ([v9 length])
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:ML3TrackPropertyStoreBookmarkMetadataEntityRevision]);
      id v11 = [v10 unsignedLongLongValue];

      double v12 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:ML3TrackPropertyStoreBookmarkMetadataTimestamp]);
      [v12 doubleValue];
      double v14 = v13;

      id v15 = (void *)objc_claimAutoreleasedReturnValue([v5 bookmarkTimestamp]);
      [v15 doubleValue];
      double v17 = v16;

      if (v14 >= v17)
      {
        [*(id *)(a1 + 32) addObject:v5];
      }

      else
      {
LABEL_5:
        uint64_t v18 = objc_claimAutoreleasedReturnValue([v5 hasBeenPlayed]);
        id v19 = (void *)v18;
        uint64_t v20 = &off_1001B4078;
        if (v18) {
          os_log_t v21 = (_UNKNOWN **)v18;
        }
        else {
          os_log_t v21 = &off_1001B4078;
        }
        id v22 = v21;

        uint64_t v23 = objc_claimAutoreleasedReturnValue([v5 userPlayCount]);
        BOOL v24 = (void *)v23;
        if (v23) {
          id v25 = (_UNKNOWN **)v23;
        }
        else {
          id v25 = &off_1001B4078;
        }
        id v26 = v25;

        id v27 = (void *)objc_claimAutoreleasedReturnValue([v5 bookmarkTime]);
        if (v27)
        {
          __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v5 bookmarkTime]);
          [v28 doubleValue];
          uint64_t v20 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v29 * 1000.0));
        }

        v31[0] = ML3TrackPropertyPlayCountUser;
        v31[1] = ML3TrackPropertyHasBeenPlayed;
        v32[0] = v26;
        v32[1] = v22;
        void v31[2] = ML3TrackPropertyBookmarkTime;
        v32[2] = v20;
        __int16 v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v32,  v31,  3LL));
        [v6 setValuesForPropertiesWithDictionary:v30];
      }
    }
  }
}

uint64_t sub_1000A70EC(id *a1, void *a2)
{
  id v3 = a1[4];
  id v4 = a1[5];
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "_queryForTracksNeedingPushWithEntityRevisionAnchor:orderingTerms:",  objc_msgSend(v4, "lastSyncedEntityRevision"),  &__NSArray0__struct));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_1000A72F4;
  v19[3] = &unk_1001A44F8;
  id v7 = a1[6];
  id v8 = a1[4];
  id v9 = a1[5];
  id v20 = v7;
  id v21 = v8;
  id v22 = v9;
  id v23 = a1[7];
  [v6 enumeratePersistentIDsUsingBlock:v19];
  id v10 = (void *)objc_claimAutoreleasedReturnValue([a1[4] _sqlQueryStringForItemsNeedingPush]);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [a1[5] lastSyncedEntityRevision]));
  BOOL v24 = v11;
  double v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v24, 1LL));
  double v13 = (void *)objc_claimAutoreleasedReturnValue([v5 executeQuery:v10 withParameters:v12]);

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_1000A73C0;
  v15[3] = &unk_1001A4520;
  void v15[4] = a1[4];
  id v16 = a1[6];
  id v18 = a1[7];
  id v17 = a1[5];
  [v13 enumerateRowsWithBlock:v15];

  return 1LL;
}

void sub_1000A72F4(uint64_t a1, uint64_t a2)
{
  id v7 = -[ICPlaybackPositionEntity initWithDomain:]( objc_alloc(&OBJC_CLASS___ICPlaybackPositionEntity),  "initWithDomain:",  *(void *)(a1 + 32));
  id v4 = [[ML3Track alloc] initWithPersistentID:a2 inLibrary:*(void *)(a1 + 40)];
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:ML3TrackPropertyStoreBookmarkMetadataIdentifier]);
  if ([v5 length])
  {
    [*(id *)(a1 + 40) _populateMetadataValues:v7 fromDataSourceTrack:v4];
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) ubiquitousIdentifiersToSync]);
    [v6 addObject:v5];
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

void sub_1000A73C0(uint64_t a1, void *a2)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([a2 stringForColumnIndex:0]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _kvsEntityWithKVSKey:v5 domain:*(void *)(a1 + 40)]);
  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) ubiquitousIdentifiersToSync]);
  [v4 addObject:v5];
}

void sub_1000A7A40(_Unwind_Exception *a1)
{
}

void sub_1000A7A4C(uint64_t a1, int a2)
{
  if (a2) {
    objc_terminate();
  }
  JUMPOUT(0x1000A7A58LL);
}

void sub_1000A7CBC(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _mediaContentTasteCacheFilePathForAccount:*(void *)(a1 + 40)]);
  if (v2)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v8 = 0LL;
    unsigned int v4 = [v3 removeItemAtPath:v2 error:&v8];
    id v5 = v8;

    id v6 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138544130;
      uint64_t v10 = v7;
      __int16 v11 = 2114;
      double v12 = v2;
      __int16 v13 = 1024;
      unsigned int v14 = v4;
      __int16 v15 = 2114;
      id v16 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Cached content taste response at %{public}@ was deleted with status=%{BOOL}u, error=%{public}@ ",  buf,  0x26u);
    }
  }
}

void sub_1000A7DF4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16LL);
  id v27 = 0LL;
  unsigned int v4 = (void *)objc_claimAutoreleasedReturnValue([v2 contentsOfDirectoryAtPath:v3 error:&v27]);
  id v5 = v27;

  id v6 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = [v4 count];
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v30 = v7;
    __int16 v31 = 2048;
    id v32 = v8;
    __int16 v33 = 2114;
    id v34 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Got %lu content taste archives to remove with error %{public}@",  buf,  0x20u);
  }

  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v9 = v4;
  id v10 = [v9 countByEnumeratingWithState:&v23 objects:v28 count:16];
  if (v10)
  {
    id v12 = v10;
    uint64_t v13 = *(void *)v24;
    *(void *)&__int128 v11 = 138543874LL;
    __int128 v21 = v11;
    do
    {
      unsigned int v14 = 0LL;
      __int16 v15 = v5;
      do
      {
        if (*(void *)v24 != v13) {
          objc_enumerationMutation(v9);
        }
        id v16 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( *(id *)(*(void *)(a1 + 32) + 16),  "stringByAppendingPathComponent:",  *(void *)(*((void *)&v23 + 1) + 8 * (void)v14),  v21));
        id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
        id v22 = v15;
        unsigned __int8 v18 = [v17 removeItemAtPath:v16 error:&v22];
        id v5 = v22;

        if ((v18 & 1) == 0)
        {
          id v19 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
          {
            uint64_t v20 = *(void *)(a1 + 32);
            *(_DWORD *)__int128 buf = v21;
            uint64_t v30 = v20;
            __int16 v31 = 2114;
            id v32 = v5;
            __int16 v33 = 2114;
            id v34 = v16;
            _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "%{public}@ Error %{public}@ removing archive at %{public}@",  buf,  0x20u);
          }
        }

        unsigned int v14 = (char *)v14 + 1;
        __int16 v15 = v5;
      }

      while (v12 != v14);
      id v12 = [v9 countByEnumeratingWithState:&v23 objects:v28 count:16];
    }

    while (v12);
  }
}

void sub_1000A8090(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _mediaContentTasteCacheFilePathForAccount:*(void *)(a1 + 40)]);
  if (v2)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _prepareArchiveWithContentTasteReponse:*(void *)(a1 + 48)]);
    unsigned int v4 = v3;
    if (v3 && [v3 length])
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 16LL);
      id v14 = 0LL;
      unsigned __int8 v7 = [v5 createDirectoryAtPath:v6 withIntermediateDirectories:1 attributes:0 error:&v14];
      id v8 = v14;
      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = v7;

      if (*(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL))
      {
        *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v4 writeToFile:v2 atomically:1];
        id v9 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v10 = *(void *)(a1 + 32);
          __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
          int v12 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);
          *(_DWORD *)__int128 buf = 138544130;
          uint64_t v16 = v10;
          __int16 v17 = 2114;
          id v18 = v11;
          __int16 v19 = 2114;
          uint64_t v20 = v2;
          __int16 v21 = 1024;
          int v22 = v12;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ content taste response for %{public}@ was written to %{public}@ with status=%{BOOL}u",  buf,  0x26u);
        }
      }

      else
      {
        id v9 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v13 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543618;
          uint64_t v16 = v13;
          __int16 v17 = 2114;
          id v18 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Error %{public}@ creating content taste update directory",  buf,  0x16u);
        }
      }
    }

    else
    {
      id v8 = (id)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      [v8 removeItemAtPath:v2 error:0];
    }
  }
}

uint64_t sub_1000A82E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000A82F8(uint64_t a1)
{
}

void sub_1000A8300(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _mediaContentTasteCacheFilePathForAccount:*(void *)(a1 + 40)]);
  if (v2)
  {
    uint64_t v6 = v2;
    uint64_t v3 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _prepareCachedResponseFromArchiveAtPath:v2]);
    uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8LL);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    uint64_t v2 = v6;
  }
}

void sub_1000A83A8(id a1)
{
  id v1 = -[ICCloudContentTasteResponseCacheManager _init]( objc_alloc(&OBJC_CLASS___ICCloudContentTasteResponseCacheManager),  "_init");
  uint64_t v2 = (void *)qword_1001DB700;
  qword_1001DB700 = (uint64_t)v1;
}

void sub_1000A89AC(uint64_t a1, uint64_t a2, id *a3)
{
  id v18 = *a3;
  else {
    id v6 = a3[1];
  }
  id v7 = v6;
  else {
    id v8 = a3[2];
  }
  id v9 = v8;
  [a3[3] doubleValue];
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:"));
  __int128 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 earlierDate:*(void *)(a1 + 32)]);

  if (v11 == v10)
  {

    uint64_t v10 = 0LL;
  }

  [a3[4] doubleValue];
  int v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:"));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 earlierDate:*(void *)(a1 + 32)]);

  if (v13 == v12)
  {

    int v12 = 0LL;
  }

  if (v7 || v9 || v10 || v12)
  {
    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithCapacity:",  4LL));
    __int16 v15 = v14;
    if (v7) {
      [v14 setObject:v7 forKey:@"daap.incrementplaycount"];
    }
    if (v9) {
      [v15 setObject:v9 forKey:@"daap.incrementskipcount"];
    }
    if (v10) {
      [v15 setObject:v10 forKey:ML3TrackPropertyDatePlayed];
    }
    if (v12) {
      [v15 setObject:v12 forKey:ML3TrackPropertyDateSkipped];
    }
    [*(id *)(a1 + 40) addObject:v18];
    [*(id *)(a1 + 48) addObject:v15];
    uint64_t v16 = *(void **)(a1 + 56);
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    [v16 addObject:v17];
  }
}

void sub_1000A8BB4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 134217984;
    id v13 = [v5 responseCode];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Bulk set item properties response code: %lu",  (uint8_t *)&v12,  0xCu);
  }

  if (v6)
  {
    id v8 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v12 = 138543362;
      id v13 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Bulk set item properties response with error: %{public}@",  (uint8_t *)&v12,  0xCu);
    }
  }

  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = (uint64_t)[v5 responseCode];
  if (v10 > 399)
  {
    if (v10 != 404 && v10 != 400) {
      goto LABEL_14;
    }
    uint64_t v11 = 3LL;
  }

  else
  {
    uint64_t v11 = 1LL;
    if (v10 != 200 && v10 != 204) {
LABEL_14:
    }
      uint64_t v11 = 2LL;
  }

  [v9 setStatus:v11];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

uint64_t sub_1000A8D44(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  __int16 v17 = v3;
  [v3 setPrivacyContext:v6];

  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  id obj = *(id *)(a1 + 40);
  id v7 = [obj countByEnumeratingWithState:&v19 objects:v25 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v20;
    uint64_t v10 = ML3TrackPropertyPlayCountRecent;
    uint64_t v11 = ML3TrackPropertySkipCountRecent;
    do
    {
      for (i = 0LL; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v20 != v9) {
          objc_enumerationMutation(obj);
        }
        id v13 = [*(id *)(*((void *)&v19 + 1) + 8 * (void)i) longLongValue];
        id v14 = +[ML3Track newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Track,  "newWithPersistentID:inLibrary:",  v13,  *(void *)(a1 + 48));
        [v14 setValue:&off_1001B4090 forProperty:v10];
        [v14 setValue:&off_1001B4090 forProperty:v11];
        __int16 v15 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__int128 buf = 134217984;
          id v24 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "Play data update succeeded for track with persistent ID: %lld",  buf,  0xCu);
        }
      }

      id v8 = [obj countByEnumeratingWithState:&v19 objects:v25 count:16];
    }

    while (v8);
  }

  return 1LL;
}

uint64_t sub_1000A99AC(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      id v18 = objc_alloc_init(&OBJC_CLASS___AMPMusicCatalogContent);
      [(id)a1 addCatalogContent:v18];
      if (!PBReaderPlaceMark(a2, v23) || (sub_1000CD42C((uint64_t)v18, a2) & 1) == 0)
      {

        return 0LL;
      }

      PBReaderRecallMark(a2, v23);
    }

    else if ((_DWORD)v12 == 2)
    {
      uint64_t String = PBReaderReadString(a2);
      uint64_t v20 = objc_claimAutoreleasedReturnValue(String);
      __int128 v21 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v20;
    }

    else if ((_DWORD)v12 == 1)
    {
      char v13 = 0;
      unsigned int v14 = 0;
      uint64_t v15 = 0LL;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v16 == -1LL || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v17 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          goto LABEL_34;
        }
        v13 += 7;
        BOOL v9 = v14++ >= 9;
        if (v9)
        {
          uint64_t v15 = 0LL;
          goto LABEL_36;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_34:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v15 = 0LL;
      }
LABEL_36:
      *(void *)(a1 + _Block_object_dispose(va, 8) = v15;
    }

    else
    {
      uint64_t result = PBReaderSkipValueWithTag(a2);
      if (!(_DWORD)result) {
        return result;
      }
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000AB724(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    id v4 = objc_begin_catch(a1);
    os_log_t v5 = sub_1000DD944();
    unint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)(v3 - 12_Block_object_dispose(va, 8) = 138543618;
      *(void *)(v3 - 124) = v2;
      *(_WORD *)(v3 - 116) = 2114;
      *(void *)(v3 - 114) = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to cache or compile MLModel err=%{public}@",  (uint8_t *)(v3 - 128),  0x16u);
    }

    objc_end_catch();
    JUMPOUT(0x1000AB710LL);
  }

  _Unwind_Resume(a1);
}

void sub_1000AB974( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000AC8EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    unint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v65 = v8;
      __int16 v66 = 2114;
      uint64_t v67 = v9;
      __int16 v68 = 2114;
      id v69 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Unable to get message entries for identifier %{public}@. err=%{public}@",  buf,  0x20u);
    }

    goto LABEL_30;
  }

  __int128 v61 = 0u;
  __int128 v62 = 0u;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  id v10 = [v5 countByEnumeratingWithState:&v59 objects:v63 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v50 = a1;
    unint64_t v12 = 0LL;
    id v53 = v5;
    id v54 = 0LL;
    uint64_t v13 = *(void *)v60;
    uint64_t v51 = *(void *)v60;
    do
    {
      for (i = 0LL; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v60 != v13) {
          objc_enumerationMutation(v5);
        }
        uint64_t v15 = *(void **)(*((void *)&v59 + 1) + 8LL * (void)i);
        unint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 applicationMessage]);
        char v17 = (void *)objc_claimAutoreleasedReturnValue([v16 identifier]);
        unsigned int v18 = [v17 isEqualToString:@"non-subscriber-notification-content-opt-in"];

        if (v18)
        {
          id v19 = v15;

          unint64_t v12 = v19;
        }

        uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v16 targets]);
        unsigned int v21 = [v20 containsObject:@"Library_Recommendation"];

        if (v21)
        {
          if (!v54
            || (signed int v22 = [v16 priority],
                __int128 v23 = (void *)objc_claimAutoreleasedReturnValue([v54 applicationMessage]),
                signed int v24 = [v23 priority],
                v23,
                v22 > v24))
          {
            id v25 = v15;

            id v54 = v25;
          }

          uint64_t v13 = v51;
          id v5 = v53;
        }
      }

      id v11 = [v5 countByEnumeratingWithState:&v59 objects:v63 count:16];
    }

    while (v11);
    unint64_t v7 = (os_log_s *)v54;
    if (v54)
    {
      id v6 = 0LL;
      if (v12)
      {
        __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v54 applicationMessage]);
        id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 contentPages]);
        __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v27 firstObject]);

        double v29 = (void *)objc_claimAutoreleasedReturnValue([v28 contentParameters]);
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v29 firstObject]);

        __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v12 applicationMessage]);
        uint64_t v32 = objc_claimAutoreleasedReturnValue([v31 contentPages]);
        __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([(id)v32 lastObject]);

        id v34 = (void *)objc_claimAutoreleasedReturnValue([v33 contentParameters]);
        LOBYTE(v32) = [v34 containsObject:v30];

        if ((v32 & 1) == 0)
        {
          __int16 v52 = v28;
          __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v12 applicationMessage]);
          __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v54 applicationMessage]);
          [v36 startDate];
          objc_msgSend(v35, "setStartDate:");

          id v37 = (void *)objc_claimAutoreleasedReturnValue([v54 applicationMessage]);
          [v37 endDate];
          objc_msgSend(v35, "setEndDate:");

          __int16 v38 = (void *)objc_claimAutoreleasedReturnValue([v35 contentPages]);
          [v38 removeLastObject];

          uint64_t v39 = *(void **)(v50 + 32);
          uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v54 applicationMessage]);
          id v41 = (void *)objc_claimAutoreleasedReturnValue([v40 contentPages]);
          BOOL v42 = (void *)objc_claimAutoreleasedReturnValue([v41 firstObject]);
          unsigned int v43 = (void *)objc_claimAutoreleasedReturnValue([v39 _optInMessageContentForPriorityMessageContent:v42]);
          [v35 addContentPages:v43];

          uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
          v57[0] = _NSConcreteStackBlock;
          v57[1] = 3221225472LL;
          v57[2] = sub_1000ACE44;
          v57[3] = &unk_1001A7108;
          void v57[4] = *(void *)(v50 + 32);
          id v58 = v12;
          [v44 updateMessageEntry:v58 completion:v57];

          __int16 v28 = v52;
          unint64_t v7 = (os_log_s *)v54;
        }
      }

      else
      {
        uint64_t v47 = *(void **)(v50 + 32);
        char v48 = (void *)objc_claimAutoreleasedReturnValue([v54 applicationMessage]);
        v55[0] = _NSConcreteStackBlock;
        v55[1] = 3221225472LL;
        v55[2] = sub_1000ACF2C;
        v55[3] = &unk_1001A4AF0;
        uint64_t v49 = *(void **)(v50 + 40);
        v55[4] = *(void *)(v50 + 32);
        id v56 = v49;
        [v47 _optInMessageForPriorityMessage:v48 completion:v55];
      }

      id v5 = v53;
      goto LABEL_30;
    }

    unint64_t v7 = (os_log_s *)v12;
    a1 = v50;
    id v6 = 0LL;
  }

  else
  {
    unint64_t v7 = 0LL;
  }

  uint64_t v45 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
  {
    uint64_t v46 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v65 = v46;
    _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "%{public}@ Unable to find priority message.",  buf,  0xCu);
  }

LABEL_30:
}

void sub_1000ACE44(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) applicationMessage]);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 identifier]);
      int v7 = 138543618;
      uint64_t v8 = v4;
      __int16 v9 = 2114;
      id v10 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "%{public}@ Unable to update opt-in message entry %{public}@.",  (uint8_t *)&v7,  0x16u);
    }
  }

void sub_1000ACF2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      __int16 v9 = (void *)objc_claimAutoreleasedReturnValue([v5 applicationMessage]);
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v17 = v8;
      __int16 v18 = 2114;
      id v19 = v10;
      __int16 v20 = 2114;
      id v21 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to create opt-in message %{public}@. err=%{public}@",  buf,  0x20u);
    }
  }

  else
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1000AD0D4;
    void v12[3] = &unk_1001A71A8;
    void v12[4] = *(void *)(a1 + 32);
    id v13 = v5;
    id v14 = *(id *)(a1 + 40);
    id v15 = 0LL;
    [v11 addMessageEntry:v13 completion:v12];
  }
}

void sub_1000AD0D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) applicationMessage]);
      int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 identifier]);
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v22 = v5;
      __int16 v23 = 2114;
      signed int v24 = v7;
      __int16 v25 = 2114;
      id v26 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to save application message %{public}@. err=%{public}@",  buf,  0x20u);
    }
  }

  else
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
    __int16 v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) applicationMessage]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 identifier]);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    void v17[2] = sub_1000AD2DC;
    v17[3] = &unk_1001A6040;
    uint64_t v11 = *(void *)(a1 + 48);
    unint64_t v12 = (os_log_s *)*(id *)(a1 + 56);
    uint64_t v13 = *(void *)(a1 + 32);
    id v14 = *(void **)(a1 + 40);
    __int16 v18 = v12;
    uint64_t v19 = v13;
    id v20 = v14;
    [v8 downloadResourcesForMessageWithIdentifier:v10 bundleIdentifier:v11 completion:v17];

    id v15 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    void v16[2] = sub_1000AD3E4;
    v16[3] = &unk_1001A6398;
    void v16[4] = *(void *)(a1 + 32);
    [v15 removeMessageEntryWithIdentifier:@"non-subscriber-notification-content-opt-in" forBundleIdentifier:@"com.apple.amp.inappmessages.private" completion:v16];

    uint64_t v4 = v18;
  }
}

void sub_1000AD2DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) applicationMessage]);
      int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 identifier]);
      int v8 = 138543874;
      uint64_t v9 = v5;
      __int16 v10 = 2114;
      uint64_t v11 = v7;
      __int16 v12 = 2114;
      id v13 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to download resources for message %{public}@. err=%{public}@",  (uint8_t *)&v8,  0x20u);
    }
  }
}

void sub_1000AD3E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138543874;
      uint64_t v7 = v5;
      __int16 v8 = 2114;
      uint64_t v9 = @"non-subscriber-notification-content-opt-in";
      __int16 v10 = 2114;
      id v11 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to remove message with identifier %{public}@. err=%{public}@",  (uint8_t *)&v6,  0x20u);
    }
  }
}

void sub_1000AD4C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v18 = 138543874;
      uint64_t v19 = v8;
      __int16 v20 = 2114;
      id v21 = @"non-subscriber-opt-in-message";
      __int16 v22 = 2114;
      id v23 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Unable to retrieve message with identifier %{public}@. err=%{public}@",  (uint8_t *)&v18,  0x20u);
    }
  }

  else
  {
    uint64_t v7 = (os_log_s *)objc_alloc_init(&OBJC_CLASS___ICIAMApplicationMessage);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 applicationMessage]);
    -[os_log_s mergeFrom:](v7, "mergeFrom:", v9);

    [*(id *)(a1 + 40) startDate];
    -[os_log_s setStartDate:](v7, "setStartDate:");
    [*(id *)(a1 + 40) endDate];
    -[os_log_s setEndDate:](v7, "setEndDate:");
    __int16 v10 = *(void **)(a1 + 32);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) contentPages]);
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v11 firstObject]);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v10 _optInMessageContentForPriorityMessageContent:v12]);
    -[os_log_s addContentPages:](v7, "addContentPages:", v13);

    id v14 = objc_alloc(&OBJC_CLASS___ICInAppMessageEntry);
    uint64_t v15 = ICBundleIdentifierForSystemApplicationType(0LL);
    unint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    id v17 = [v14 initWithApplicationMessage:v7 bundleIdentifier:v16];

    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }
}

void sub_1000AD6CC(uint64_t a1, void *a2, void *a3)
{
  id v95 = a2;
  id v94 = a3;
  if (v94)
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = v5;
      *(_WORD *)&_BYTE buf[12] = 2112;
      *(void *)&buf[14] = v94;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ platform lookup failed. err=%@",  buf,  0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
LABEL_33:
    uint64_t v106 = 0LL;
    id v107 = &v106;
    uint64_t v108 = 0x2050000000LL;
    id v58 = (void *)qword_1001DB720;
    uint64_t v109 = qword_1001DB720;
    if (!qword_1001DB720)
    {
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_1000AE998;
      id v111 = &unk_1001A6978;
      uint64_t v112 = &v106;
      sub_1000AE998((uint64_t)buf);
      id v58 = (void *)v107[3];
    }

    __int128 v59 = v58;
    _Block_object_dispose(&v106, 8);
    id v60 = objc_alloc(v59);
    __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([v95 allItems]);
    os_log_t v44 = (os_log_t)[v60 initWithLookupItems:v61];

    uint64_t v106 = 0LL;
    id v107 = &v106;
    uint64_t v108 = 0x2050000000LL;
    __int128 v62 = (void *)qword_1001DB730;
    uint64_t v109 = qword_1001DB730;
    if (!qword_1001DB730)
    {
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_1000AEA5C;
      id v111 = &unk_1001A6978;
      uint64_t v112 = &v106;
      sub_1000AEA5C((uint64_t)buf);
      __int128 v62 = (void *)v107[3];
    }

    id v63 = v62;
    _Block_object_dispose(&v106, 8);
    id v64 = (void *)objc_claimAutoreleasedReturnValue([v63 musicLibraryForUserAccount:0]);
    uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue([v64 databasePath]);
    uint64_t v106 = 0LL;
    id v107 = &v106;
    uint64_t v108 = 0x2050000000LL;
    __int16 v66 = (void *)qword_1001DB738;
    uint64_t v109 = qword_1001DB738;
    if (!qword_1001DB738)
    {
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_1000AEB20;
      id v111 = &unk_1001A6978;
      uint64_t v112 = &v106;
      sub_1000AEB20((uint64_t)buf);
      __int16 v66 = (void *)v107[3];
    }

    uint64_t v67 = v66;
    _Block_object_dispose(&v106, 8);
    id v68 = objc_alloc(v67);
    id v69 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s trackData](v44, "trackData"));
    id v70 = [v68 initWithLibraryPath:v65 trackData:v69 playlistData:0];

    [v70 setTracksAreLibraryOwnedContent:0];
    [v70 setPendingMatch:0];
    uint64_t v106 = 0LL;
    id v107 = &v106;
    uint64_t v108 = 0x2050000000LL;
    id v71 = (void *)qword_1001DB740;
    uint64_t v109 = qword_1001DB740;
    if (!qword_1001DB740)
    {
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_1000AEBE4;
      id v111 = &unk_1001A6978;
      uint64_t v112 = &v106;
      sub_1000AEBE4((uint64_t)buf);
      id v71 = (void *)v107[3];
    }

    id v72 = v71;
    _Block_object_dispose(&v106, 8);
    id v73 = (void *)objc_claimAutoreleasedReturnValue([v72 sharedMediaLibraryService]);
    v98[0] = _NSConcreteStackBlock;
    v98[1] = 3221225472LL;
    v98[2] = sub_1000AECA8;
    v98[3] = &unk_1001A4A78;
    void v98[4] = *(void *)(a1 + 32);
    id v99 = *(id *)(a1 + 64);
    [v73 performImport:v70 fromSource:6 withProgressBlock:0 completionHandler:v98];

    goto LABEL_42;
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  unsigned __int8 v7 = [v6 shouldForceLibraryRecommendationAnalysis];

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v95 itemForIdentifier:*(void *)(a1 + 40)]);
  uint64_t v9 = v8;
  if (v8)
  {
    id v76 = [v8 storeAdamID];
    __int16 v10 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([v9 title]);
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v11;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&buf[14] = v76;
      *(_WORD *)&_BYTE buf[22] = 2114;
      id v111 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Creating application message for adamID %lld : %{public}@",  buf,  0x20u);
    }

    id v96 = objc_alloc_init(&OBJC_CLASS___ICIAMApplicationMessage);
    [v96 setAssetPrefetchStrategy:1];
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v9 releaseDate]);
    if (v13
      && (id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now")),
          BOOL v15 = [v13 compare:v14] == (id)1,
          v14,
          v15))
    {
      unint64_t v16 = v13;
    }

    else
    {
      uint64_t v17 = objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));

      unint64_t v16 = (void *)v17;
    }

    uint64_t v75 = v16;
    uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue([v16 dateByAddingTimeInterval:1209600.0]);
    [v75 timeIntervalSince1970];
    objc_msgSend(v96, "setStartDate:");
    [v74 timeIntervalSince1970];
    objc_msgSend(v96, "setEndDate:");
    int v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    CC_LONG64 v84 = (void *)objc_claimAutoreleasedReturnValue([v18 UUIDString]);

    [v96 setGlobalPresentationPolicyGroup:0];
    [v96 setCarousel:0];
    [v96 setHasCloseButton:1];
    [v96 setIdentifier:v84];
    [v96 setMaximumDisplays:0xFFFFFFFFLL];
    [v96 setMessageType:2];
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) score]);
    [v19 doubleValue];
    double v21 = v20;

    [v96 setPriority:(int)(v21 * 100.0)];
    [v96 addTarget:@"Library_Recommendation"];
    id v22 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageRule);
    [v22 setIdentifier:@"page-detail-rule"];
    [v22 setType:1];
    [v22 setRuleOperator:0];
    id v90 = objc_alloc_init(&OBJC_CLASS___ICIAMTriggerCondition);
    [v90 setComparisonType:2];
    [v90 setDataType:2];
    id v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"eventType:page|pageId:%lld",  v76));
    [v90 setIdentifier:v23];

    [v90 setTriggerValue:@"1"];
    id v86 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageRule);
    [v86 setIdentifier:@"detail-event"];
    [v86 setType:0];
    [v86 setTriggerCondition:v90];
    [v22 addSubrules:v86];
    id v89 = objc_alloc_init(&OBJC_CLASS___ICIAMTriggerCondition);
    [v89 setIdentifier:@"isOptedInToNewArtistContent"];
    [v89 setComparisonType:0];
    [v89 setTriggerValue:@"true"];
    [v89 setDataType:0];
    id v85 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageRule);
    [v85 setIdentifier:@"optin-context"];
    [v85 setType:0];
    [v85 setTriggerCondition:v89];
    [v22 addSubrules:v85];
    if ([v9 isExplicit])
    {
      id v24 = objc_alloc_init(&OBJC_CLASS___ICIAMTriggerCondition);
      [v24 setIdentifier:@"isExplicitContent"];
      [v24 setComparisonType:0];
      [v24 setTriggerValue:@"true"];
      [v24 setDataType:0];
      id v25 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageRule);
      [v25 setIdentifier:@"is-explicit-rule"];
      [v25 setType:0];
      [v25 setTriggerCondition:v24];
      [v22 addSubrules:v25];
    }

    if ((v7 & 1) == 0)
    {
      id v26 = objc_alloc_init(&OBJC_CLASS___ICIAMTriggerCondition);
      [v26 setComparisonType:0];
      [v26 setDataType:0];
      [v26 setIdentifier:@"isAppleMusicSubscriber"];
      [v26 setTriggerValue:@"false"];
      id v27 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageRule);
      [v27 setIdentifier:@"subscription-status-context"];
      [v27 setType:0];
      [v27 setTriggerCondition:v26];
      [v22 addSubrules:v27];
    }

    [v96 setRule:v22];
    id v93 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageContent);
    [v93 setIdentifier:*(void *)(a1 + 40)];
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v9 name]);
    [v93 setTitle:v28];

    double v29 = (void *)objc_claimAutoreleasedReturnValue([v9 artistName]);
    [v93 setSubtitle:v29];

    id v82 = objc_alloc_init(&OBJC_CLASS___ICIAMImage);
    uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v30 UUIDString]);
    [v82 setIdentifier:v31];

    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v9 artworkInfos]);
    __int16 v33 = (void *)objc_claimAutoreleasedReturnValue([v32 firstObject]);

    id v34 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v33,  "artworkURLWithSize:cropStyle:format:",  ICStoreArtworkInfoCropStyleBoundedBox,  ICStoreArtworkInfoImageFormatJPEG,  210.0,  210.0));
    __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 absoluteString]);
    [v82 setURL:v35];

    [v93 addImages:v82];
    id v81 = objc_alloc_init(&OBJC_CLASS___ICIAMParameter);
    [v81 setKey:@"adamId"];
    [v81 setValue:*(void *)(a1 + 40)];
    [v93 addContentParameters:v81];
    id v80 = objc_alloc_init(&OBJC_CLASS___ICIAMParameter);
    [v80 setKey:@"explicitContent"];
    else {
      __int16 v36 = @"false";
    }
    [v80 setValue:v36];
    [v93 addContentParameters:v80];
    id v88 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageAction);
    [v88 setIdentifier:@"album-detail-segue"];
    [v88 setRequiresDelegate:1];
    [v88 setMessageRemovalPolicy:1];
    id v92 = objc_alloc_init(&OBJC_CLASS___ICIAMMetricEvent);
    [v92 setActionType:0];
    [v92 setEventType:@"click"];
    [v92 setPageId:@"LibraryContentBannerNonsubscriber"];
    [v92 setPageType:0];
    [v92 setTargetId:v84];
    [v92 setTargetType:3];
    uint64_t v83 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) recoId]);
    id v79 = objc_alloc_init(&OBJC_CLASS___ICIAMParameter);
    [v79 setKey:@"recoId"];
    [v79 setValue:v83];
    [v92 addActionDetails:v79];
    [v88 setClickEvent:v92];
    [v93 addMessageActions:v88];
    id v37 = objc_alloc_init(&OBJC_CLASS___ICIAMMessageAction);
    [v37 setIdentifier:@"close-button"];
    [v37 setRequiresDelegate:1];
    [v37 setMessageRemovalPolicy:1];
    id v91 = objc_alloc_init(&OBJC_CLASS___ICIAMMetricEvent);
    [v91 setActionType:0];
    [v91 setEventType:@"click"];
    [v91 setPageId:@"LibraryContentBannerNonsubscriber"];
    [v91 setPageType:0];
    [v91 setTargetId:v84];
    [v91 setTargetType:4];
    id v78 = objc_alloc_init(&OBJC_CLASS___ICIAMParameter);
    [v78 setKey:@"recoId"];
    [v78 setValue:v83];
    [v91 addActionDetails:v78];
    [v37 setClickEvent:v91];
    [v93 addMessageActions:v37];
    [v96 addContentPages:v93];
    id v87 = objc_alloc_init(&OBJC_CLASS___ICIAMMetricEvent);
    [v87 setEventType:@"impressions"];
    [v87 setPageId:@"LibraryContentBannerNonsubscriber"];
    [v87 setPageType:0];
    id v77 = objc_alloc_init(&OBJC_CLASS___ICIAMImpressionNode);
    [v77 setImpressionType:@"banner"];
    [v77 setRecoAlgoId:v83];
    [v87 setImpression:v77];
    [v96 setImpressionEvent:v87];
    __int16 v38 = *(_BYTE **)(a1 + 32);
    if (v38[24])
    {
      uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue( [v38 _createLocalNotificationDictionaryForRecommendationResult:*(void *)(a1 + 48) storePlatformMetadata:v9 recommendationID:v83 identifier:v84]);
      if (v39)
      {
        id v40 = objc_alloc_init(&OBJC_CLASS___ICIAMLocalNotification);
        id v105 = 0LL;
        id v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSJSONSerialization dataWithJSONObject:options:error:]( &OBJC_CLASS___NSJSONSerialization,  "dataWithJSONObject:options:error:",  v39,  0LL,  &v105));
        id v42 = v105;
        if (v41
          && (unsigned int v43 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 base64EncodedStringWithOptions:0])) != 0)
        {
          [v40 setNotification:v43];
          [v96 setLocalNotification:v40];
        }

        else
        {
          unsigned int v43 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
          if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v47 = *(void *)(a1 + 32);
            *(_DWORD *)__int128 buf = 138543618;
            *(void *)&uint8_t buf[4] = v47;
            *(_WORD *)&_BYTE buf[12] = 2114;
            *(void *)&buf[14] = v42;
            _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Failed to serialize local notification data. err=%{public}@",  buf,  0x16u);
          }
        }
      }
    }

    char v48 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v49 = *(void *)(a1 + 32);
      uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v96 identifier]);
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v49;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v50;
      *(_WORD *)&_BYTE buf[22] = 2048;
      id v111 = v76;
      _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Created new application message %{public}@ for adamID %lld",  buf,  0x20u);
    }

    uint64_t v51 = ICBundleIdentifierForSystemApplicationType(0LL);
    __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
    id v53 = [[ICInAppMessageEntry alloc] initWithApplicationMessage:v96 bundleIdentifier:v52];
    [v53 setShouldDownloadResources:1];
    id v54 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
    v100[0] = _NSConcreteStackBlock;
    v100[1] = 3221225472LL;
    v100[2] = sub_1000AE7E0;
    v100[3] = &unk_1001A4A50;
    v100[4] = *(void *)(a1 + 32);
    id v101 = v96;
    id v103 = v52;
    id v104 = v76;
    id v102 = v9;
    id v55 = v52;
    id v56 = v9;
    id v57 = v96;
    [v54 addMessageEntry:v53 completion:v100];

    goto LABEL_33;
  }

  os_log_t v44 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
  {
    uint64_t v45 = *(void *)(a1 + 32);
    uint64_t v46 = *(void *)(a1 + 40);
    *(_DWORD *)__int128 buf = 138543618;
    *(void *)&uint8_t buf[4] = v45;
    *(_WORD *)&_BYTE buf[12] = 2112;
    *(void *)&buf[14] = v46;
    _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_ERROR,  "%{public}@ Unable to create message. There is no store platform data for AdamID: %@",  buf,  0x16u);
  }

void sub_1000AE7B4(_Unwind_Exception *a1)
{
}

void sub_1000AE7E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]);
      uint64_t v7 = *(void *)(a1 + 64);
      *(_DWORD *)__int128 buf = 138544130;
      uint64_t v16 = v5;
      __int16 v17 = 2114;
      int v18 = v6;
      __int16 v19 = 2048;
      uint64_t v20 = v7;
      __int16 v21 = 2114;
      id v22 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to save application message %{public}@ for adamID %lld. err=%{public}@",  buf,  0x2Au);
    }
  }

  else
  {
    uint64_t v8 = *(void **)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 48) storeAdamID]));
    id v14 = v9;
    __int16 v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v14, 1LL));
    [v8 _cacheMatchedRecommendations:v10];

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
    __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]);
    [v11 downloadResourcesForMessageWithIdentifier:v12 bundleIdentifier:*(void *)(a1 + 56) completion:&stru_1001A4A28];

    id v13 = *(_BYTE **)(a1 + 32);
    if (!v13[25]) {
      [v13 _updateOptInIfNecessary];
    }
  }
}

void sub_1000AE998(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("ML3StoreItemTrackData");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB720 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getML3StoreItemTrackDataClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryRecommendationController.m",  62,  @"Unable to find class %s",  "ML3StoreItemTrackData");

    __break(1u);
  }

void sub_1000AEA5C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("ML3MusicLibrary");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB730 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getML3MusicLibraryClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryRecommendationController.m",  60,  @"Unable to find class %s",  "ML3MusicLibrary");

    __break(1u);
  }

void sub_1000AEB20(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("ML3MutableDatabaseImport");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB738 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getML3MutableDatabaseImportClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryRecommendationController.m",  61,  @"Unable to find class %s",  "ML3MutableDatabaseImport");

    __break(1u);
  }

void sub_1000AEBE4(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MLMediaLibraryService");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB740 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMLMediaLibraryServiceClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICMusicLibraryRecommendationController.m",  63,  @"Unable to find class %s",  "MLMediaLibraryService");

    __break(1u);
  }

void sub_1000AECA8(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138543618;
      uint64_t v9 = v7;
      __int16 v10 = 2114;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to import lookup responses into media library. err=%{public}@",  (uint8_t *)&v8,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1000AED90()
{
  id v3 = 0LL;
  if (!qword_1001DB728)
  {
    __int128 v4 = off_1001A4B10;
    uint64_t v5 = 0LL;
    qword_1001DB728 = _sl_dlopen(&v4, &v3);
  }

  if (!qword_1001DB728)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MusicLibraryLibrary(void)"));
    objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v2,  @"ICMusicLibraryRecommendationController.m",  59,  @"%s",  v3);

    __break(1u);
    goto LABEL_7;
  }

  v0 = v3;
  if (v3) {
LABEL_7:
  }
    free(v0);
}

void sub_1000AEE94(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
  [v4 timeIntervalSince1970];
  double v6 = v5;

  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  id v7 = v3;
  id v8 = [v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      id v11 = 0LL;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        __int16 v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v21 + 1) + 8 * (void)v11) applicationMessage]);
        id v13 = (void *)objc_claimAutoreleasedReturnValue([v12 targets]);
        if ([v13 containsObject:@"Library_Recommendation"])
        {
          [v12 endDate];
          double v15 = v14;

          if (v6 > v15)
          {
            uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
            __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v12 identifier]);
            v19[0] = _NSConcreteStackBlock;
            v19[1] = 3221225472LL;
            v19[2] = sub_1000AF098;
            v19[3] = &unk_1001A7108;
            uint64_t v18 = *(void *)(a1 + 32);
            void v19[4] = *(void *)(a1 + 40);
            id v20 = v12;
            [v16 removeMessageEntryWithIdentifier:v17 forBundleIdentifier:v18 completion:v19];
          }
        }

        else
        {
        }

        id v11 = (char *)v11 + 1;
      }

      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }

    while (v9);
  }
}

void sub_1000AF098(uint64_t a1, uint64_t a2)
{
  __int128 v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  double v5 = v4;
  if (a2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v13 = 138543618;
      uint64_t v14 = v6;
      __int16 v15 = 2114;
      uint64_t v16 = v7;
      id v8 = "%{public}@ Failed to remove expired message %{public}@";
      id v9 = v5;
      os_log_type_t v10 = OS_LOG_TYPE_ERROR;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, (uint8_t *)&v13, 0x16u);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 40);
    int v13 = 138543618;
    uint64_t v14 = v11;
    __int16 v15 = 2114;
    uint64_t v16 = v12;
    id v8 = "%{public}@ Removed expired message %{public}@";
    id v9 = v5;
    os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
    goto LABEL_6;
  }
}

uint64_t sub_1000AF1B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000AF1C0(uint64_t a1)
{
}

void sub_1000AF1C8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  id v14 = (id)objc_claimAutoreleasedReturnValue([v2 DSIDForUserIdentity:v3 outError:0]);

  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _cacheDirectoryPath]);
  double v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v4));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 URLByAppendingPathComponent:@"musicRecommendationsData"]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithContentsOfURL:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithContentsOfURL:",  v6));
  id v8 = [v7 mutableCopy];

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v14 stringValue]);
  os_log_type_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:v9]);

  uint64_t v11 = objc_claimAutoreleasedReturnValue([v10 valueForKey:@"matchedAdamIDs"]);
  uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8LL);
  int v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;
}

void sub_1000AF314(id a1, ICStoreRequestContext *a2)
{
  __int128 v4 = a2;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  -[ICStoreRequestContext setIdentity:](v4, "setIdentity:", v2);

  id v3 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  -[ICStoreRequestContext setAuthenticationProvider:](v4, "setAuthenticationProvider:", v3);

  -[ICStoreRequestContext setAllowsExpiredBags:](v4, "setAllowsExpiredBags:", 1LL);
  -[ICStoreRequestContext setPersonalizationStyle:](v4, "setPersonalizationStyle:", 0LL);
}

void sub_1000AF3A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 138543618;
      uint64_t v10 = v8;
      __int16 v11 = 2114;
      id v12 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch recommendations model. err=%{public}@",  (uint8_t *)&v9,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1000AF49C(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 valueForKey:@"release_ix"]);
  [v3 removeObjectForKey:@"release_ix"];
  if ([v4 count])
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) mlModel]);
    id v54 = 0LL;
    id v6 = -[MLDictionaryFeatureProvider initWithDictionary:error:]( objc_alloc(&OBJC_CLASS___MLDictionaryFeatureProvider),  "initWithDictionary:error:",  v3,  &v54);
    id v7 = v54;
    id v53 = v7;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 predictionFromFeatures:v6 error:&v53]);
    id v9 = v53;

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 featureValueForName:@"thresholded_score"]);
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v10 multiArrayValue]);

    if (v9)
    {
      id v12 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        uint64_t v13 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 138543618;
        uint64_t v56 = v13;
        __int16 v57 = 2114;
        id v58 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to compute scores. err=%{public}@",  buf,  0x16u);
      }

      (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
    }

    else
    {
      __int16 v52 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
      id v17 = [v16 allowLowAffinityRecommendations];

      uint64_t v49 = v4;
      uint64_t v45 = v8;
      uint64_t v46 = v6;
      uint64_t v47 = v5;
      id v48 = v3;
      uint64_t v18 = 0LL;
      uint64_t v51 = 0LL;
      double v19 = 0.0;
      id v20 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
      uint64_t v50 = v11;
      do
      {
        __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v11 objectAtIndexedSubscript:v18]);
        [v21 doubleValue];
        if (v22 == 0.0) {
          int v23 = (int)v17;
        }
        else {
          int v23 = 0;
        }
        if (v23 == 1)
        {
          id v24 = [v20[40] numberWithDouble:(double)arc4random() / 4294967300.0];
          uint64_t v25 = objc_claimAutoreleasedReturnValue(v24);

          __int128 v21 = (void *)v25;
        }

        [v21 doubleValue];
        if (v26 > 0.0)
        {
          id v27 = v17;
          __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v4 objectAtIndex:v18]);
          signed int v29 = [v28 intValue];

          uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) artistContentAtIndex:v29]);
          __int16 v31 = (void *)objc_claimAutoreleasedReturnValue([v30 catalogContentAtIndex:0]);
          uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20[40], "numberWithLongLong:", objc_msgSend(v31, "adamId")));
          __int16 v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( NSDate,  "dateWithTimeIntervalSince1970:",  (double)(uint64_t)[v31 releaseDate]));
          id v34 = -[ICMusicLibraryRecommendationResult initWithAdamID:date:score:]( objc_alloc(&OBJC_CLASS___ICMusicLibraryRecommendationResult),  "initWithAdamID:date:score:",  v32,  v33,  v21);
          -[NSMutableArray addObject:](v52, "addObject:", v34);
          [v21 doubleValue];
          if (v35 > v19)
          {
            [v21 doubleValue];
            double v19 = v36;
            uint64_t v37 = a1;
            __int16 v38 = v34;

            uint64_t v51 = v38;
            a1 = v37;
            __int128 v4 = v49;
          }

          id v17 = v27;
          __int16 v11 = v50;
          id v20 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
        }

        ++v18;
      }

      while ((uint64_t)[v11 count] > v18);
      id v5 = v47;
      id v3 = v48;
      id v9 = 0LL;
      id v6 = v46;
      uint64_t v8 = v45;
      if (v51)
      {
        uint64_t v39 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v40 = *(void *)(a1 + 32);
          id v41 = -[NSMutableArray count](v52, "count");
          *(_DWORD *)__int128 buf = 138543874;
          uint64_t v56 = v40;
          __int16 v57 = 2048;
          id v58 = v41;
          __int16 v59 = 2114;
          id v60 = v52;
          _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Found %lu new recommendations: %{public}@",  buf,  0x20u);
        }

        id v42 = v51;
      }

      else
      {
LABEL_25:
        uint64_t v39 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
        if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
        {
          uint64_t v43 = *(void *)(a1 + 32);
          id v44 = [v11 count];
          *(_DWORD *)__int128 buf = 138543618;
          uint64_t v56 = v43;
          __int16 v57 = 2048;
          id v58 = v44;
          _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_ERROR,  "%{public}@ Generated %lu matches, but zero results scored above the model score threshold.",  buf,  0x16u);
        }

        id v42 = 0LL;
      }

      (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
      __int128 v4 = v49;
    }
  }

  else
  {
    id v14 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v56 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ No matched results found",  buf,  0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  }

  [*(id *)(a1 + 32) _clearMLModelCache];
}

void sub_1000AFA20(id *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([a1[4] _retrievePreviousRecommendationMatchesFromCache]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v4));

    id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 adamID]);
    unsigned int v7 = [v5 containsObject:v6];

    if (v7)
    {
      uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v9 = a1[4];
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 adamID]);
        *(_DWORD *)__int128 buf = 138543618;
        id v24 = v9;
        __int16 v25 = 2048;
        id v26 = [v10 longLongValue];
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Matched recommendation already created for AdamID: %llu",  buf,  0x16u);
      }
    }

    else
    {
      uint64_t v13 = ICBundleIdentifierForSystemApplicationType(0LL);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472LL;
      void v17[2] = sub_1000AFC9C;
      v17[3] = &unk_1001A4970;
      id v16 = a1[4];
      id v18 = v14;
      id v19 = v16;
      id v20 = v3;
      id v21 = a1[5];
      id v22 = a1[6];
      uint64_t v8 = v14;
      [v15 messageEntriesForBundleIdentifier:v8 completion:v17];
    }
  }

  else
  {
    __int16 v11 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = a1[4];
      *(_DWORD *)__int128 buf = 138543362;
      id v24 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ No recommendations found.",  buf,  0xCu);
    }

    (*((void (**)(void))a1[6] + 2))();
  }
}

void sub_1000AFC9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v25 objects:v33 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v26;
    do
    {
      unsigned int v7 = 0LL;
      do
      {
        if (*(void *)v26 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v25 + 1) + 8 * (void)v7) applicationMessage]);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 targets]);
        unsigned int v10 = [v9 containsObject:@"Library_Recommendation"];

        if (v10)
        {
          __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(+[ICInAppMessageManager sharedManager](&OBJC_CLASS___ICInAppMessageManager, "sharedManager"));
          id v12 = (void *)objc_claimAutoreleasedReturnValue([v8 identifier]);
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 3221225472LL;
          v23[2] = sub_1000AFF38;
          v23[3] = &unk_1001A7108;
          uint64_t v13 = *(void *)(a1 + 32);
          void v23[4] = *(void *)(a1 + 40);
          id v24 = v8;
          [v11 removeMessageEntryWithIdentifier:v12 forBundleIdentifier:v13 completion:v23];
        }

        unsigned int v7 = (char *)v7 + 1;
      }

      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v25 objects:v33 count:16];
    }

    while (v5);
  }

  id v14 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = *(void *)(a1 + 40);
    id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) adamID]);
    id v17 = [v16 longLongValue];
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v30 = v15;
    __int16 v31 = 2048;
    id v32 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Attempting to create new recommendation message for AdamID: %llu",  buf,  0x16u);
  }

  id v18 = *(void **)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472LL;
  void v21[2] = sub_1000B0064;
  v21[3] = &unk_1001A50C0;
  uint64_t v20 = *(void *)(a1 + 56);
  id v22 = *(id *)(a1 + 64);
  [v18 _createApplicationMessagesForResult:v19 artistNewContentResponse:v20 completion:v21];
}

void sub_1000AFF38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v14 = 138543874;
      uint64_t v15 = v6;
      __int16 v16 = 2114;
      uint64_t v17 = v7;
      __int16 v18 = 2114;
      id v19 = v3;
      uint64_t v8 = "%{public}@ Failed to remove message %{public}@, err=%{public}@";
      id v9 = v5;
      os_log_type_t v10 = OS_LOG_TYPE_ERROR;
      uint32_t v11 = 32;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, (uint8_t *)&v14, v11);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(a1 + 40);
    int v14 = 138543618;
    uint64_t v15 = v12;
    __int16 v16 = 2114;
    uint64_t v17 = v13;
    uint64_t v8 = "%{public}@ Removing stale messages for new recommendation update. Removed message: %{public}@";
    id v9 = v5;
    os_log_type_t v10 = OS_LOG_TYPE_DEFAULT;
    uint32_t v11 = 22;
    goto LABEL_6;
  }
}

uint64_t sub_1000B0064(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000B0070(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    if (v5)
    {
      os_log_t v7 = (os_log_t)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionStatusController sharedStatusController]( &OBJC_CLASS___ICMusicSubscriptionStatusController,  "sharedStatusController"));
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472LL;
      void v14[2] = sub_1000B020C;
      v14[3] = &unk_1001A4920;
      void v14[4] = *(void *)(a1 + 32);
      -[os_log_s getSubscriptionStatusWithCompletionHandler:](v7, "getSubscriptionStatusWithCompletionHandler:", v14);
      goto LABEL_9;
    }

    os_log_t v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_9;
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v16 = v13;
    id v9 = "%{public}@ Skipping update because the user is not signed in";
    os_log_type_t v10 = v7;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
    uint32_t v12 = 12;
    goto LABEL_4;
  }

  os_log_t v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v16 = v8;
    __int16 v17 = 2114;
    id v18 = v6;
    id v9 = "%{public}@ Skipping update because we failed to load account properties. err=%{public}@";
    os_log_type_t v10 = v7;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
    uint32_t v12 = 22;
LABEL_4:
    _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, buf, v12);
  }

void sub_1000B020C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  os_log_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  unsigned int v8 = [v7 shouldForceLibraryRecommendationAnalysis];

  if (v6)
  {
    id v9 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v19 = v10;
      __int16 v20 = 2114;
      id v21 = v6;
      os_log_type_t v11 = "%{public}@ Skipping update because we failed to obtain the subscription status. err=%{public}@";
      uint32_t v12 = v9;
      os_log_type_t v13 = OS_LOG_TYPE_ERROR;
      uint32_t v14 = 22;
LABEL_8:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v11, buf, v14);
      goto LABEL_9;
    }

    goto LABEL_9;
  }

  if ((([v5 hasCapability:128] ^ 1 | v8) & 1) == 0)
  {
    id v9 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v19 = v16;
      os_log_type_t v11 = "%{public}@ Skipping update because the user is a subscriber";
      uint32_t v12 = v9;
      os_log_type_t v13 = OS_LOG_TYPE_DEFAULT;
      uint32_t v14 = 12;
      goto LABEL_8;
    }

void sub_1000B03CC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1000B04C4;
    v6[3] = &unk_1001A6398;
    void v6[4] = v3;
    [v3 _handleRecommendationsResponseModel:a2 completion:v6];
  }

  else
  {
    id v4 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v8 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ No response model from the server - skipping update",  buf,  0xCu);
    }
  }

void sub_1000B04C4(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "%{public}@ Library Recommendations Computation Finished",  (uint8_t *)&v4,  0xCu);
  }
}

void sub_1000B0574(uint64_t a1, void *a2)
{
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue([a2 settingsSwitches]);
  id v3 = [obj countByEnumeratingWithState:&v17 objects:v23 count:16];
  if (!v3) {
    goto LABEL_12;
  }
  id v4 = v3;
  uint64_t v15 = a1;
  unsigned __int8 v5 = 0;
  unsigned __int8 v6 = 0;
  char v7 = 0;
  uint64_t v8 = *(void *)v18;
  do
  {
    for (i = 0LL; i != v4; i = (char *)i + 1)
    {
      if (*(void *)v18 != v8) {
        objc_enumerationMutation(obj);
      }
      uint64_t v10 = *(void **)(*((void *)&v17 + 1) + 8LL * (void)i);
      os_log_type_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "identifier", v15));
      unsigned int v12 = [v11 isEqualToString:ICMusicAccountNotificationsSettingsSwitchArtistsAndShows];

      if (v12)
      {
        unsigned __int8 v6 = [v10 isToggled];
        unsigned __int8 v5 = [v10 hasBeenPreviouslyToggled];
        char v7 = v6 | v5 ^ 1;
      }
    }

    id v4 = [obj countByEnumeratingWithState:&v17 objects:v23 count:16];
  }

  while (v4);
  a1 = v15;
  if ((v7 & 1) != 0)
  {
    *(_BYTE *)(*(void *)(v15 + 32) + 24LL) = v6 & 1;
    *(_BYTE *)(*(void *)(v15 + 32) + 25LL) = v5 & 1;
    [*(id *)(v15 + 32) _performRecommendationsRequest];
  }

  else
  {
LABEL_12:
    os_log_type_t v13 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v22 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ User has opted out of artist and shows notifications; recommendations request is skipped.",
        buf,
        0xCu);
    }
  }
}

void sub_1000B075C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _cacheDirectoryPath]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v2));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  unsigned __int8 v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  unsigned __int8 v6 = (void *)objc_claimAutoreleasedReturnValue([v4 DSIDForUserIdentity:v5 outError:0]);

  if (v3)
  {
    uint64_t v22 = v2;
    char v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:@"musicRecommendationsData"]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithContentsOfURL:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithContentsOfURL:",  v7));
    id v9 = (NSMutableDictionary *)[v8 mutableCopy];

    if (!v9) {
      id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    }
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v6 stringValue]);
    os_log_type_t v11 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKey:](v9, "objectForKey:", v10));

    if (!v11)
    {
      os_log_type_t v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      unsigned int v12 = (void *)objc_claimAutoreleasedReturnValue([v6 stringValue]);
      -[NSMutableDictionary setObject:forKey:](v9, "setObject:forKey:", v11, v12);
    }

    os_log_type_t v13 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary valueForKey:](v11, "valueForKey:", @"matchedAdamIDs"));
    if (v13) {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](&OBJC_CLASS___NSMutableSet, "setWithArray:", v13));
    }
    else {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableSet setWithCapacity:]( NSMutableSet,  "setWithCapacity:",  [*(id *)(a1 + 40) count]));
    }
    uint64_t v16 = v14;
    [v14 addObjectsFromArray:*(void *)(a1 + 40)];
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 allObjects]);
    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v17, @"matchedAdamIDs");

    id v23 = 0LL;
    unsigned __int8 v18 = -[NSMutableDictionary writeToURL:error:](v9, "writeToURL:error:", v7, &v23);
    id v19 = v23;
    if (v19 || (v18 & 1) == 0)
    {
      __int128 v20 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        uint64_t v21 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 138543618;
        uint64_t v25 = v21;
        __int16 v26 = 2114;
        id v27 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to write to disk the matched recommendations. err=%{public}@",  buf,  0x16u);
      }
    }

    uint64_t v2 = v22;
  }

  else
  {
    char v7 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v25 = v15;
      __int16 v26 = 2114;
      id v27 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Cache Directory URL is nil failed to cache recommendations data with path received: %{public}@",  buf,  0x16u);
    }
  }
}

void sub_1000B0AA4(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Handle new AMPMusicArtistNewContentResponse from notification finished",  (uint8_t *)&v4,  0xCu);
  }
}

void sub_1000B0B54(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 dictionaryForBagKey:ICURLBagKeyArtistNewContent]);
  int v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ic_numberValueForKey:", @"min-refresh-freq-in-seconds"));
  if ([v4 longLongValue]) {
    id v5 = [v4 longLongValue];
  }
  else {
    id v5 = (id)XPC_ACTIVITY_INTERVAL_1_DAY;
  }
  unsigned __int8 v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  unsigned int v7 = [v6 shouldReduceLibraryRecommendationsXPCInterval];

  if (v7) {
    id v5 = (id)XPC_ACTIVITY_INTERVAL_30_MIN;
  }
  *(double *)(*(void *)(a1 + 32) + 64LL) = (double)(uint64_t)v5;
  uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v14 = v9;
    __int16 v15 = 2048;
    id v16 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Scheduling periodic updates every %lld seconds",  buf,  0x16u);
  }

  xpc_object_t v10 = xpc_dictionary_create(0LL, 0LL, 0LL);
  os_log_type_t v11 = (const char *)[@"com.apple.itunescloud.library_recommendations_refresh" UTF8String];
  xpc_dictionary_set_string(v10, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
  xpc_dictionary_set_BOOL(v10, XPC_ACTIVITY_REPEATING, 1);
  xpc_dictionary_set_int64(v10, XPC_ACTIVITY_INTERVAL, (int64_t)v5);
  xpc_dictionary_set_BOOL(v10, XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP, 0);
  xpc_dictionary_set_BOOL(v10, XPC_ACTIVITY_ALLOW_BATTERY, 0);
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_1000B0DA8;
  handler[3] = &unk_1001A4880;
  handler[4] = *(void *)(a1 + 32);
  xpc_activity_register(v11, v10, handler);
}

void sub_1000B0DA8(uint64_t a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
  [v3 timeIntervalSince1970];
  *(void *)(*(void *)(a1 + 32) + 56LL) = v2;
  [*(id *)(a1 + 32) _performRecommendationsUpdate];
}

void sub_1000B0DF8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  _DWORD v7[2] = sub_1000B0E98;
  v7[3] = &unk_1001A6C30;
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v4;
  id v6 = v4;
  [v5 synchronizeWithCompletionHandler:v7];
}

void sub_1000B0E98(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v2 DSIDForUserIdentity:v3 outError:0]);

  if (!v4) {
    goto LABEL_7;
  }
  id v5 = *(void **)(a1 + 32);
  if (v4 != v5[6])
  {
    [v5 stopSystemService];
    [*(id *)(a1 + 32) startSystemService];
  }

  if (![*(id *)(a1 + 40) hasCapability:128]
    || (id v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults")),
        unsigned int v7 = [v6 shouldForceLibraryRecommendationAnalysis],
        v6,
        v7))
  {
    [*(id *)(a1 + 32) scheduleRecommendationsRefreshTimer];
  }

  else
  {
LABEL_7:
    [*(id *)(a1 + 32) stopSystemService];
  }

  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 48);
  *(void *)(v8 + 4_Block_object_dispose((const void *)(v1 - 192), 8) = v4;
}

void sub_1000B0FB8(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___ICMusicLibraryRecommendationController);
  uint64_t v2 = (void *)qword_1001DB718;
  qword_1001DB718 = (uint64_t)v1;
}

void sub_1000B1278(id a1)
{
  id v1 = -[ICDAAPPropertyInfo _init](objc_alloc(&OBJC_CLASS___ICDAAPPropertyInfo), "_init");
  uint64_t v2 = (void *)qword_1001DB758;
  qword_1001DB758 = (uint64_t)v1;

  [(id)qword_1001DB758 mapProperty:@"daap.incrementplaycount" toCode:1634953584 valueType:5];
  [(id)qword_1001DB758 mapProperty:@"com.apple.itunes.cloud-artwork-token" toCode:1634026324 valueType:9];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyName toCode:1835626093 valueType:9];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyDescription toCode:1634037860 valueType:9];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyDatePlayed toCode:1835362672 valueType:10];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyDateCreated toCode:1835362657 valueType:10];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyLikedState toCode:1634036851 valueType:1];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyCloudIsPublic toCode:1634358088 valueType:1];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyCloudIsVisible toCode:1634363766 valueType:1];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyCloudAuthorStoreID toCode:1634353481 valueType:7];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyParentPersistentID toCode:1836082031 valueType:5];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyExternalVendorIdentifier toCode:1634358889 valueType:9];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyExternalVendorDisplayName toCode:1634358894 valueType:9];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyExternalVendorContainerTag toCode:1634358900 valueType:9];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyCoverArtworkRecipe toCode:1634353490 valueType:9];
  [(id)qword_1001DB758 mapProperty:ML3ContainerPropertyCollaborationMode toCode:1634353999 valueType:5];
}

void sub_1000B14B4(id a1)
{
  id v1 = -[ICDAAPPropertyInfo _init](objc_alloc(&OBJC_CLASS___ICDAAPPropertyInfo), "_init");
  uint64_t v2 = (void *)qword_1001DB748;
  qword_1001DB748 = (uint64_t)v1;

  [(id)qword_1001DB748 mapProperty:@"daap.incrementplaycount" toCode:1634953584 valueType:5];
  [(id)qword_1001DB748 mapProperty:@"daap.incrementskipcount" toCode:1634953587 valueType:5];
  [(id)qword_1001DB748 mapProperty:@"dmap.itemhidden" toCode:1835624553 valueType:1];
  [(id)qword_1001DB748 mapProperty:ML3TrackPropertyUserRating toCode:1634956658 valueType:1];
  [(id)qword_1001DB748 mapProperty:ML3TrackPropertyHidden toCode:1835624553 valueType:1];
  [(id)qword_1001DB748 mapProperty:ML3TrackPropertyDatePlayed toCode:1634955372 valueType:10];
  [(id)qword_1001DB748 mapProperty:ML3TrackPropertyDateSkipped toCode:1634954084 valueType:10];
  [(id)qword_1001DB748 mapProperty:ML3TrackPropertyLikedState toCode:1634036851 valueType:1];
  [(id)qword_1001DB748 mapProperty:ML3TrackPropertyAlbumLikedState toCode:1634361708 valueType:1];
  [(id)qword_1001DB748 mapProperty:ML3TrackPropertyLikedStateChangedDate toCode:1634036850 valueType:10];
  [(id)qword_1001DB748 mapProperty:ML3AlbumArtistPropertyLikedState toCode:1634036851 valueType:1];
  [(id)qword_1001DB748 mapProperty:ML3AlbumArtistPropertyLikedStateChangedDate toCode:1634036850 valueType:10];
  [(id)qword_1001DB748 mapProperty:ML3AlbumPropertyLikedState toCode:1634036851 valueType:1];
  [(id)qword_1001DB748 mapProperty:ML3AlbumPropertyLikedStateChangedDate toCode:1634036850 valueType:10];
}

BOOL sub_1000B1A6C(void *a1, const __CFString *a2)
{
  BOOL v2 = 0LL;
  if (a1 && a2)
  {
    [a1 auditToken];
    cf[0] = cf[1];
    uint64_t v4 = SecTaskCreateWithAuditToken(0LL, cf);
    if (!v4) {
      return 0LL;
    }
    id v5 = v4;
    *(void *)cf[0].val = 0LL;
    id v6 = (const __CFBoolean *)SecTaskCopyValueForEntitlement(v4, a2, (CFErrorRef *)cf);
    if (*(void *)cf[0].val)
    {
      CFRelease(*(CFTypeRef *)cf[0].val);
    }

    else if (v6)
    {
      CFTypeID TypeID = CFBooleanGetTypeID();
      if (TypeID == CFGetTypeID(v6))
      {
        BOOL v2 = CFBooleanGetValue(v6) != 0;
        goto LABEL_7;
      }
    }

    BOOL v2 = 0LL;
LABEL_7:
    CFRelease(v5);
  }

  return v2;
}

id sub_1000B1B34()
{
  v0 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  if ([v0 isWatch])
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue( +[ICNanoPairedDeviceStatusMonitor sharedMonitor]( &OBJC_CLASS___ICNanoPairedDeviceStatusMonitor,  "sharedMonitor"));
    id v2 = [v1 isMediaSyncingSupported];
  }

  else
  {
    id v2 = 0LL;
  }

  return v2;
}

void sub_1000B21DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = os_log_create("com.apple.amp.itunescloudd", "SDK");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), v8);
    xpc_object_t v10 = NSStringFromClass(v9);
    id v25 = v6;
    os_log_type_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    unsigned int v12 = *(void **)(a1 + 32);
    if ([v12 method]) {
      os_log_type_t v13 = @"POST";
    }
    else {
      os_log_type_t v13 = @"GET";
    }
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) action]);
    id v16 = (objc_class *)objc_opt_class(v5, v15);
    __int128 v17 = NSStringFromClass(v16);
    unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    id v19 = [v5 responseCode];
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    *(_DWORD *)__int128 buf = 138545154;
    id v27 = v11;
    __int16 v28 = 2048;
    signed int v29 = v12;
    __int16 v30 = 2114;
    __int16 v31 = v13;
    __int16 v32 = 2114;
    __int16 v33 = v14;
    __int16 v34 = 2114;
    double v35 = v18;
    __int16 v36 = 2048;
    id v37 = v5;
    __int16 v38 = 2048;
    id v39 = v19;
    __int16 v40 = 2048;
    id v41 = [v20 length];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x52u);

    id v6 = v25;
  }

  if (v6)
  {
    uint64_t v21 = os_log_create("com.apple.amp.itunescloudd", "SDK");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v27 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "JaliscoHideItemOperation failed with error: %{public}@",  buf,  0xCu);
    }
  }

  uint64_t v22 = *(void **)(a1 + 40);
  uint64_t v23 = (uint64_t)[v5 responseCode];
  if (v23 > 399)
  {
    if (v23 != 404 && v23 != 400) {
      goto LABEL_17;
    }
    uint64_t v24 = 3LL;
  }

  else
  {
    uint64_t v24 = 1LL;
    if (v23 != 200 && v23 != 204) {
LABEL_17:
    }
      uint64_t v24 = 2LL;
  }

  [v22 setStatus:v24];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000B29C4(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v9 = a1[4];
      xpc_object_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v14 = 138543618;
      id v15 = v9;
      __int16 v16 = 2114;
      __int128 v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished request to end collaboration error=%{public}@",  (uint8_t *)&v14,  0x16u);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = a1[4];
    int v14 = 138543362;
    id v15 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished request to end collaboration",  (uint8_t *)&v14,  0xCu);
  }

  uint64_t v12 = (uint64_t)[v5 responseCode];
  if (v12 > 399)
  {
    if (v12 == 404 || v12 == 400)
    {
      uint64_t v13 = 3LL;
      goto LABEL_14;
    }

    goto LABEL_13;
  }

  uint64_t v13 = 1LL;
  if (v12 != 200 && v12 != 204) {
LABEL_13:
  }
    uint64_t v13 = 2LL;
LABEL_14:
  [a1[4] setStatus:v13];
  [a1[4] setError:v6];
  if (!v6)
  {
    *((_BYTE *)a1[4] + 106) = [v5 updateRequired];
    *(void *)((char *)a1[4] + 114) = [a1[5] longLongValue];
  }

  [a1[6] endTransaction];
  [a1[4] finish];
}

void sub_1000B3010(uint64_t a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000B30B8;
  v4[3] = &unk_1001A4BC0;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  char v8 = *(_BYTE *)(a1 + 56);
  id v7 = *(id *)(a1 + 48);
  ICDAAPUtilitiesWriteContainer(a2, 1835819884LL, v4);
}

void sub_1000B30B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000B3168;
  v6[3] = &unk_1001A4BE8;
  uint64_t v4 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  char v10 = *(_BYTE *)(a1 + 56);
  id v9 = *(id *)(a1 + 48);
  id v5 = v3;
  [v4 enumerateObjectsUsingBlock:v6];
}

void sub_1000B3168(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectAtIndexedSubscript:a3]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000B323C;
  v10[3] = &unk_1001A4BC0;
  char v14 = *(_BYTE *)(a1 + 56);
  id v11 = v5;
  id v12 = v6;
  uint64_t v7 = *(void *)(a1 + 40);
  id v13 = *(id *)(a1 + 48);
  id v8 = v6;
  id v9 = v5;
  ICDAAPUtilitiesWriteContainer(v7, 1835821428LL, v10);
}

void sub_1000B323C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (*(_BYTE *)(a1 + 56) == 6) {
    uint64_t v5 = 1634888036LL;
  }
  else {
    uint64_t v5 = 1634353513LL;
  }
  ICDAAPUtilitiesWriteProperty(v3, v5, 9LL, *(void *)(a1 + 32));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1000B32F8;
  void v8[3] = &unk_1001A5A48;
  id v6 = *(void **)(a1 + 40);
  id v9 = *(id *)(a1 + 48);
  id v10 = v4;
  id v7 = v4;
  [v6 enumerateKeysAndObjectsUsingBlock:v8];
}

void sub_1000B32F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) hasInfoForProperty:v5])
  {
    ICDAAPUtilitiesWriteProperty( *(void *)(a1 + 40),  [*(id *)(a1 + 32) elementCodeForProperty:v5],  objc_msgSend(*(id *)(a1 + 32), "valueTypeForProperty:", v5),  v6);
  }

  else
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "No DAAP code found for item property: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }
}

void sub_1000B340C(uint64_t a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000B34B4;
  v4[3] = &unk_1001A4BC0;
  char v8 = *(_BYTE *)(a1 + 56);
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  ICDAAPUtilitiesWriteContainer(a2, 1835819884LL, v4);
}

void sub_1000B34B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(_BYTE *)(a1 + 56)) {
    int v4 = 1835625572;
  }
  else {
    int v4 = 1835624804;
  }
  if (*(_BYTE *)(a1 + 56)) {
    uint64_t v5 = 7LL;
  }
  else {
    uint64_t v5 = 5LL;
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1000B3590;
  void v8[3] = &unk_1001A4B98;
  id v6 = *(void **)(a1 + 32);
  id v9 = *(id *)(a1 + 40);
  id v10 = v3;
  int v13 = v4;
  uint64_t v12 = v5;
  id v11 = *(id *)(a1 + 48);
  id v7 = v3;
  [v6 enumerateObjectsUsingBlock:v8];
}

void sub_1000B3590(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectAtIndexedSubscript:a3]);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000B366C;
  v10[3] = &unk_1001A4B70;
  int v15 = *(_DWORD *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 56);
  id v11 = v5;
  id v12 = v6;
  uint64_t v7 = *(void *)(a1 + 40);
  id v13 = *(id *)(a1 + 48);
  id v8 = v6;
  id v9 = v5;
  ICDAAPUtilitiesWriteContainer(v7, 1835821428LL, v10);
}

void sub_1000B366C(uint64_t a1, void *a2)
{
  id v3 = a2;
  ICDAAPUtilitiesWriteProperty(v3, *(unsigned int *)(a1 + 64), *(void *)(a1 + 56), *(void *)(a1 + 32));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000B3710;
  v6[3] = &unk_1001A5A48;
  int v4 = *(void **)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  id v8 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v6];
}

void sub_1000B3710(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) hasInfoForProperty:v5])
  {
    ICDAAPUtilitiesWriteProperty( *(void *)(a1 + 40),  [*(id *)(a1 + 32) elementCodeForProperty:v5],  objc_msgSend(*(id *)(a1 + 32), "valueTypeForProperty:", v5),  v6);
  }

  else
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "No DAAP code found for item property: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }
}

LABEL_23:
        __int16 v16 = 0LL;
        goto LABEL_24;
      }

      unsigned __int8 v18 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v21 = 138543362;
        uint64_t v22 = v3;
        id v19 = "failed to finalize resized image at '%{public}@'";
        goto LABEL_21;
      }
    }

    else
    {
      unsigned __int8 v18 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v21 = 138543362;
        uint64_t v22 = v3;
        id v19 = "failed to resize image at '%{public}@'";
LABEL_21:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, (uint8_t *)&v21, 0xCu);
      }
    }

    goto LABEL_23;
  }

  __int16 v16 = 0LL;
LABEL_27:

  return v16;
}
}

  unsigned __int8 v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", self->_releaseDate));
  [v3 setObject:v18 forKey:@"releaseDate"];

  if ((*(_BYTE *)&self->_has & 0x10) != 0)
  {
LABEL_10:
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", self->_isExplicit));
    [v3 setObject:v7 forKey:@"isExplicit"];
  }

id sub_1000B4AC0(uint64_t a1)
{
  uint64_t v2 = NSStringFromMLMediaType([*(id *)(a1 + 40) mediaType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [*(id *)(a1 + 32) setObject:v3 forKeyedSubscript:@"mediaType"];

  [*(id *)(a1 + 48) timeIntervalSinceNow];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fabs(v4)));
  [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:@"duration"];

  [*(id *)(a1 + 32) setObject:&__kCFBooleanFalse forKeyedSubscript:@"success"];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 64)));
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:@"cachingEnabled"];

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  *(void *)(a1 + 56)));
  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:@"availableStorage"];

  return *(id *)(a1 + 32);
}

id sub_1000B4BC0(id *a1)
{
  uint64_t v2 = NSStringFromMLMediaType([a1[5] mediaType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [a1[4] setObject:v3 forKeyedSubscript:@"mediaType"];

  [a1[6] timeIntervalSinceNow];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fabs(v4)));
  [a1[4] setObject:v5 forKeyedSubscript:@"duration"];

  [a1[4] setObject:&__kCFBooleanFalse forKeyedSubscript:@"success"];
  [a1[4] setObject:&__kCFBooleanTrue forKeyedSubscript:@"noToken"];
  return a1[4];
}

id sub_1000B4C78(id *a1)
{
  uint64_t v2 = NSStringFromMLMediaType([a1[5] mediaType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [a1[4] setObject:v3 forKeyedSubscript:@"mediaType"];

  [a1[6] timeIntervalSinceNow];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fabs(v4)));
  [a1[4] setObject:v5 forKeyedSubscript:@"duration"];

  [a1[4] setObject:&__kCFBooleanFalse forKeyedSubscript:@"success"];
  [a1[4] setObject:&__kCFBooleanTrue forKeyedSubscript:@"noAssetURL"];
  return a1[4];
}

id sub_1000B4D30(id *a1)
{
  uint64_t v2 = NSStringFromMLMediaType([a1[5] mediaType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [a1[4] setObject:v3 forKeyedSubscript:@"mediaType"];

  [a1[6] timeIntervalSinceNow];
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fabs(v4)));
  [a1[4] setObject:v5 forKeyedSubscript:@"duration"];

  [a1[4] setObject:&__kCFBooleanFalse forKeyedSubscript:@"success"];
  [a1[4] setObject:&__kCFBooleanTrue forKeyedSubscript:@"watchNotCharging"];
  return a1[4];
}

void sub_1000B4DE8(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = [a1[4] isCancelled];
  unsigned int v8 = v7;
  if (v6 || (v7 & 1) != 0)
  {
    id v25 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    __int16 v26 = v25;
    if (v6)
    {
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        id v27 = a1[4];
        __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v27 assetURL]);
        signed int v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
        *(_DWORD *)__int128 buf = 138544130;
        id v67 = v27;
        __int16 v68 = 2114;
        id v69 = v28;
        __int16 v70 = 1024;
        LODWORD(v71[0]) = v8;
        WORD2(v71[0]) = 2114;
        *(void *)((char *)v71 + 6) = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished downloading artwork from '%{public}@' (isCancelled=%{BOOL}u) error=%{public}@",  buf,  0x26u);
      }
    }

    else if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      id v35 = a1[4];
      __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v35 assetURL]);
      *(_DWORD *)__int128 buf = 138543874;
      id v67 = v35;
      __int16 v68 = 2114;
      id v69 = v36;
      __int16 v70 = 1024;
      LODWORD(v71[0]) = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished downloading artwork from '%{public}@' (isCancelled=%{BOOL}u)",  buf,  0x1Cu);
    }

    v45[0] = _NSConcreteStackBlock;
    v45[1] = 3221225472LL;
    v45[2] = sub_1000B56D4;
    v45[3] = &unk_1001A4CD8;
    id v37 = a1[5];
    id v38 = a1[4];
    id v46 = v37;
    id v47 = v38;
    id v48 = a1[6];
    char v50 = v8;
    id v39 = v6;
    id v49 = v39;
    AnalyticsSendEventLazy(@"com.apple.iTunesCloud.itunescloudd.cloudArtworkImportOperation", v45);
    [a1[4] setError:v39];
    [a1[4] finish];
  }

  else
  {
    id v9 = objc_autoreleasePoolPush();
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
    uint64_t v12 = objc_opt_class(&OBJC_CLASS___NSHTTPURLResponse, v11);
    if ((objc_opt_isKindOfClass(v10, v12) & 1) != 0 && [v10 statusCode] == (id)200)
    {
      uint64_t v43 = v9;
      id v13 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        id v14 = a1[4];
        int v15 = (void *)objc_claimAutoreleasedReturnValue([v14 assetURL]);
        *(_DWORD *)__int128 buf = 138543618;
        id v67 = v14;
        __int16 v68 = 2114;
        id v69 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Downloaded artwork successfully from '%{public}@'",  buf,  0x16u);
      }

      __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v5 bodyDataURL]);
      uint64_t v17 = objc_claimAutoreleasedReturnValue([a1[4] _resizedImageDataFromLocation:v16]);
      v60[0] = _NSConcreteStackBlock;
      v60[1] = 3221225472LL;
      v60[2] = sub_1000B53F0;
      v60[3] = &unk_1001A4C88;
      void v60[4] = a1[4];
      id v61 = v10;
      id v18 = v16;
      id v62 = v18;
      id v63 = a1[5];
      id v64 = a1[6];
      id v65 = 0LL;
      id v19 = objc_retainBlock(v60);
      id v44 = (void *)objc_claimAutoreleasedReturnValue([a1[4] musicLibrary]);
      __int128 v20 = (void *)objc_claimAutoreleasedReturnValue([a1[4] artworkToken]);
      id v42 = [a1[4] artworkType];
      id v41 = [a1[4] sourceType];
      id v21 = [a1[4] mediaType];
      uint64_t v22 = (void *)v17;
      if (v17)
      {
        v58[0] = _NSConcreteStackBlock;
        v58[1] = 3221225472LL;
        v58[2] = sub_1000B55DC;
        v58[3] = &unk_1001A50C0;
        uint64_t v23 = (id *)&v59;
        __int16 v59 = v19;
        uint64_t v24 = v19;
        [v44 importOriginalArtworkFromImageData:v22 withArtworkToken:v20 artworkType:v42 sourceType:v41 mediaType:v21 shouldPerformColorAnalysis:0 completion:v58];
      }

      else
      {
        v56[0] = _NSConcreteStackBlock;
        v56[1] = 3221225472LL;
        v56[2] = sub_1000B55E8;
        v56[3] = &unk_1001A50C0;
        uint64_t v23 = (id *)&v57;
        __int16 v57 = v19;
        __int16 v40 = v19;
        [v44 importOriginalArtworkFromFileURL:v18 withArtworkToken:v20 artworkType:v42 sourceType:v41 mediaType:v21 shouldPerformColorAnalysis:0 completion:v56];
      }

      id v9 = v43;
    }

    else
    {
      __int16 v30 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      {
        id v31 = a1[4];
        __int16 v32 = (void *)objc_claimAutoreleasedReturnValue([v31 assetURL]);
        *(_DWORD *)__int128 buf = 138543874;
        id v67 = v31;
        __int16 v68 = 2114;
        id v69 = v32;
        __int16 v70 = 2114;
        v71[0] = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to download artwork. URL = %{public}@), response=%{public}@",  buf,  0x20u);
      }

      v51[0] = _NSConcreteStackBlock;
      v51[1] = 3221225472LL;
      v51[2] = sub_1000B55F4;
      v51[3] = &unk_1001A4CB0;
      id v33 = a1[5];
      id v34 = a1[4];
      id v52 = v33;
      id v53 = v34;
      id v54 = a1[6];
      id v55 = 0LL;
      AnalyticsSendEventLazy(@"com.apple.iTunesCloud.itunescloudd.cloudArtworkImportOperation", v51);
      [a1[4] setError:0];
      [a1[4] finish];

      id v18 = v52;
    }

    objc_autoreleasePoolPop(v9);
  }
}

void sub_1000B53F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    double v4 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      id v6 = [*(id *)(a1 + 40) statusCode];
      unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) assetURL]);
      unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      *(_DWORD *)__int128 buf = 138544130;
      uint64_t v20 = v5;
      __int16 v21 = 2048;
      id v22 = v6;
      __int16 v23 = 2114;
      uint64_t v24 = v7;
      __int16 v25 = 2114;
      __int16 v26 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to download artwork with HTTP status code %lld (URL = %{public}@) error=%{public}@",  buf,  0x2Au);
    }
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  [v9 removeItemAtURL:*(void *)(a1 + 48) error:0];

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1000B57D0;
  v13[3] = &unk_1001A4C60;
  id v10 = *(id *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 32);
  id v14 = v10;
  uint64_t v15 = v11;
  id v16 = *(id *)(a1 + 64);
  id v17 = v3;
  id v18 = *(id *)(a1 + 72);
  id v12 = v3;
  AnalyticsSendEventLazy(@"com.apple.iTunesCloud.itunescloudd.cloudArtworkImportOperation", v13);
  [*(id *)(a1 + 32) setError:*(void *)(a1 + 72)];
  [*(id *)(a1 + 32) finish];
}

uint64_t sub_1000B55DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000B55E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000B55F4(id *a1)
{
  uint64_t v2 = NSStringFromMLMediaType([a1[5] mediaType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [a1[4] setObject:v3 forKeyedSubscript:@"mediaType"];

  [a1[6] timeIntervalSinceNow];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fabs(v4)));
  [a1[4] setObject:v5 forKeyedSubscript:@"duration"];

  [a1[4] setObject:&__kCFBooleanFalse forKeyedSubscript:@"success"];
  [a1[4] setObject:&__kCFBooleanFalse forKeyedSubscript:@"isCancelled"];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "msv_analyticSignature"));
  [a1[4] setObject:v6 forKeyedSubscript:@"errorstring"];

  return a1[4];
}

id sub_1000B56D4(uint64_t a1)
{
  uint64_t v2 = NSStringFromMLMediaType([*(id *)(a1 + 40) mediaType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [*(id *)(a1 + 32) setObject:v3 forKeyedSubscript:@"mediaType"];

  [*(id *)(a1 + 48) timeIntervalSinceNow];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fabs(v4)));
  [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:@"duration"];

  [*(id *)(a1 + 32) setObject:&__kCFBooleanFalse forKeyedSubscript:@"success"];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 64)));
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:@"isCancelled"];

  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "msv_analyticSignature"));
  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:@"errorstring"];

  return *(id *)(a1 + 32);
}

id sub_1000B57D0(uint64_t a1)
{
  uint64_t v2 = NSStringFromMLMediaType([*(id *)(a1 + 40) mediaType]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  [*(id *)(a1 + 32) setObject:v3 forKeyedSubscript:@"mediaType"];

  [*(id *)(a1 + 48) timeIntervalSinceNow];
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", fabs(v4)));
  [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:@"duration"];

  [*(id *)(a1 + 32) setObject:&__kCFBooleanTrue forKeyedSubscript:@"success"];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(void *)(a1 + 56) == 0LL));
  [*(id *)(a1 + 32) setObject:v6 forKeyedSubscript:@"importSuccess"];

  unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "msv_analyticSignature"));
  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:@"errorstring"];

  return *(id *)(a1 + 32);
}

void sub_1000B70B0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 32);
  id v4 = a2;
  [v4 writeUInt32:v3 withCode:1836413810];
  [v4 writeUInt8:*(unsigned __int8 *)(a1 + 36) withCode:1634354764];
}

void sub_1000B7668( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000B7980( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1000B7E30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000B8020( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000B8400(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  xpc_object_t v5 = xpc_activity_copy_criteria(v3);
  id v6 = v5;
  if (state != 2)
  {
    if (state)
    {
      uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_29;
      }
      uint64_t v17 = *(void *)(a1 + 40);
      int v30 = 138543362;
      uint64_t v31 = v17;
      id v18 = "%{public}@ Unknown state";
      id v19 = v11;
      uint32_t v20 = 12;
    }

    else
    {
      if (v5)
      {
        double v7 = xpc_dictionary_get_double(v5, "CloudPlayActivityListenerNextFlushPlayActivityFireDateKey");
        double v8 = v7;
        uint64_t v9 = *(void **)(a1 + 32);
        if (v9)
        {
          double v10 = xpc_dictionary_get_double(v9, "CloudPlayActivityListenerNextFlushPlayActivityFireDateKey");
          if (![*(id *)(a1 + 40) _isValidTimeInterval:v8] || vabdd_f64(v10, v8) > 300.0)
          {
            *(double *)(*(void *)(a1 + 40) + 48LL) = v10;
            xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
            uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v12 = *(void *)(a1 + 40);
              id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSince1970:",  v8));
              id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSince1970:",  *(double *)(*(void *)(a1 + 40) + 48LL)));
              int v30 = 138543874;
              uint64_t v31 = v12;
              __int16 v32 = 2114;
              id v33 = v13;
              __int16 v34 = 2114;
              id v35 = v14;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ updating current criteria to flush the next play activity event from %{public}@ to %{public}@",  (uint8_t *)&v30,  0x20u);

LABEL_28:
            }

LABEL_29:
            goto LABEL_30;
          }

          uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
          if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_29;
          }
          uint64_t v29 = *(void *)(a1 + 40);
          id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSince1970:",  v8));
          int v30 = 138543618;
          uint64_t v31 = v29;
          __int16 v32 = 2114;
          id v33 = v13;
          __int16 v23 = "%{public}@ Found existing activity to flush play activity events on %{public}@";
LABEL_27:
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v23, (uint8_t *)&v30, 0x16u);
          goto LABEL_28;
        }

        unsigned int v24 = [*(id *)(a1 + 40) _isValidTimeInterval:v7];
        uint64_t v25 = *(void *)(a1 + 40);
        if (v24)
        {
          *(double *)(v25 + 4_Block_object_dispose(va, 8) = v8;
          uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
          if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_29;
          }
          uint64_t v26 = *(void *)(a1 + 40);
          id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSince1970:",  *(double *)(v26 + 48)));
          int v30 = 138543618;
          uint64_t v31 = v26;
          __int16 v32 = 2114;
          id v33 = v13;
          __int16 v23 = "%{public}@ Loading next play activity flush event to fire on %{public}@";
          goto LABEL_27;
        }

        *(void *)(v25 + 4_Block_object_dispose(va, 8) = 0LL;
        uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
        if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_29;
        }
      }

      else
      {
        __int16 v21 = *(void **)(a1 + 32);
        if (v21)
        {
          *(double *)(*(void *)(a1 + 40) + 48LL) = xpc_dictionary_get_double( v21,  "CloudPlayActivityListenerNextFlushPlayActivityFireDateKey");
          xpc_activity_set_criteria(v3, *(xpc_object_t *)(a1 + 32));
          uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
          if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_29;
          }
          uint64_t v22 = *(void *)(a1 + 40);
          id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSince1970:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSince1970:",  *(double *)(v22 + 48)));
          int v30 = 138543618;
          uint64_t v31 = v22;
          __int16 v32 = 2114;
          id v33 = v13;
          __int16 v23 = "%{public}@ Setting criteria to fire the next play activity event on %{public}@";
          goto LABEL_27;
        }

        *(void *)(*(void *)(a1 + 40) + 48LL) = 0LL;
        uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
        if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_29;
        }
      }

      uint64_t v27 = *(void *)(a1 + 40);
      __int16 v28 = *(void **)(v27 + 48);
      int v30 = 138543618;
      uint64_t v31 = v27;
      __int16 v32 = 2048;
      id v33 = v28;
      id v18 = "%{public}@ Loading default nextFlushPlayActivityFireSyncInterval to %f";
      id v19 = v11;
      uint32_t v20 = 22;
    }

    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v18, (uint8_t *)&v30, v20);
    goto LABEL_29;
  }

  uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = *(void *)(a1 + 40);
    int v30 = 138543362;
    uint64_t v31 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ starting xpc activity to flush play activity events",  (uint8_t *)&v30,  0xCu);
  }

  [*(id *)(a1 + 40) flushPendingPlayActivityEventsWithCompletionHandler:0];
  *(void *)(*(void *)(a1 + 40) + 48LL) = 0LL;
LABEL_30:
  *(void *)(*(void *)(a1 + 40) + 56LL) = 0LL;
}

void sub_1000B890C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  double v7 = v6;
  if (v5 && !v6)
  {
    double v8 = (void *)objc_claimAutoreleasedReturnValue([v5 numberForBagKey:@"play-activity-feed-post-frequency"]);
    uint64_t v9 = v8;
    if (v8)
    {
      [v8 doubleValue];
      *(void *)(*(void *)(a1[6] + 8LL) + 24LL) = v10;
      uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = a1[4];
        uint64_t v13 = *(void *)(*(void *)(a1[6] + 8LL) + 24LL);
        int v19 = 138543618;
        uint64_t v20 = v12;
        __int16 v21 = 2048;
        uint64_t v22 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Found postFrequency %f from bag",  (uint8_t *)&v19,  0x16u);
      }
    }
  }

  uint64_t v14 = *(void *)(a1[6] + 8LL);
  if (*(double *)(v14 + 24) == 0.0)
  {
    *(void *)(v14 + 24) = 0x408C200000000000LL;
    uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = a1[4];
      uint64_t v17 = *(void *)(*(void *)(a1[6] + 8LL) + 24LL);
      int v19 = 138543618;
      uint64_t v20 = v16;
      __int16 v21 = 2048;
      uint64_t v22 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Did not find postFrequency from bag using default value (%f)",  (uint8_t *)&v19,  0x16u);
    }
  }

  uint64_t v18 = a1[5];
  if (v18) {
    (*(void (**)(double))(v18 + 16))(*(double *)(*(void *)(a1[6] + 8LL) + 24LL));
  }
}

uint64_t sub_1000B8AF0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000B8B00(uint64_t a1)
{
}

id sub_1000B8B08(void *a1)
{
  id v1 = (void *)a1[4];
  uint64_t v2 = *(void *)(a1[5] + 8LL) + 24LL;
  uint64_t v3 = *(void *)(a1[6] + 8LL);
  id obj = *(id *)(v3 + 40);
  id v4 = [v1 hasPendingPlayActivityEvents:v2 returningError:&obj];
  objc_storeStrong((id *)(v3 + 40), obj);
  return v4;
}

void sub_1000B8B64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000B8BA8(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ connection from pid %i was interrupted",  (uint8_t *)&v5,  0x12u);
  }
}

void sub_1000B8C68(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ connection from pid %i was invalidated",  (uint8_t *)&v5,  0x12u);
  }
}

BOOL sub_1000B8D28(uint64_t a1)
{
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v17;
LABEL_3:
    uint64_t v6 = 0LL;
    while (1)
    {
      if (*(void *)v17 != v5) {
        objc_enumerationMutation(v2);
      }
      uint64_t v7 = *(void *)(*((void *)&v16 + 1) + 8 * v6);
      int v8 = *(void **)(a1 + 40);
      uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8LL);
      id obj = *(id *)(v9 + 40);
      unsigned __int8 v10 = [v8 insertPlayActivityEvent:v7 returningError:&obj];
      objc_storeStrong((id *)(v9 + 40), obj);
      *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v10;
      if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL)) {
        break;
      }
      if (v4 == (id)++v6)
      {
        id v4 = [v2 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v4) {
          goto LABEL_3;
        }
        break;
      }
    }
  }

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL)) {
    return 1LL;
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL)) {
    return 0LL;
  }
  uint64_t v12 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
  uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v14 = *(void **)(v13 + 40);
  *(void *)(v13 + 40) = v12;

  return *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) != 0;
}

void sub_1000B8EDC(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(dispatch_queue_s **)(v2 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000B8F38;
  v4[3] = &unk_1001A4D20;
  void v4[4] = v2;
  *(double *)&void v4[5] = a2;
  dispatch_async(v3, v4);
}

void sub_1000B8F38(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _criteriaDictionaryWithPostFrequency:*(double *)(a1 + 40)]);
  if (v2)
  {
    id v3 = v2;
    [*(id *)(a1 + 32) _scheduleNextPlayActivityFlushOperationWithCriteria:v2];
    uint64_t v2 = v3;
  }
}

void sub_1000B8F88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained error]);
  id v4 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v15 = v5;
    __int16 v16 = 2114;
    __int128 v17 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ finished flushing play activity events with error %{public}@",  buf,  0x16u);
  }

  uint64_t v6 = *(void **)(a1 + 40);
  if (v6)
  {
    uint64_t v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 16LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000B9110;
    block[3] = &unk_1001A6BB8;
    id v13 = v6;
    id v12 = v3;
    dispatch_async(v7, block);
  }

  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(dispatch_queue_s **)(v8 + 16);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000B9154;
  v10[3] = &unk_1001A6B90;
  void v10[4] = v8;
  dispatch_async(v9, v10);
}

void sub_1000B9110(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

id sub_1000B9154(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) hasPendingPlayEvents];
  if ((_DWORD)result && !*(void *)(*(void *)(a1 + 32) + 40LL))
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "PlayActivity");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v8 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Have pending play activity events to flush",  buf,  0xCu);
    }

    uint64_t v5 = *(void **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1000B9268;
    v6[3] = &unk_1001A4D48;
    void v6[4] = v5;
    return [v5 _timeIntervalForNextFlushOperationWithReplyBlock:v6];
  }

  return result;
}

void sub_1000B9268(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(dispatch_queue_s **)(v2 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000B92C4;
  v4[3] = &unk_1001A4D20;
  void v4[4] = v2;
  *(double *)&void v4[5] = a2;
  dispatch_async(v3, v4);
}

void sub_1000B92C4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _criteriaDictionaryWithPostFrequency:*(double *)(a1 + 40)]);
  if (v2)
  {
    id v3 = v2;
    [*(id *)(a1 + 32) _scheduleNextPlayActivityFlushOperationWithCriteria:v2];
    uint64_t v2 = v3;
  }
}

void sub_1000B93D8(id a1)
{
  id v1 = -[ICPlayActivityServer _init](objc_alloc(&OBJC_CLASS___ICPlayActivityServer), "_init");
  uint64_t v2 = (void *)qword_1001DB770;
  qword_1001DB770 = (uint64_t)v1;
}

void sub_1000B990C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1000B9C78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = objc_alloc(&OBJC_CLASS___ICAsyncBlockOperation);
    id v13 = _NSConcreteStackBlock;
    uint64_t v14 = 3221225472LL;
    uint64_t v15 = sub_1000B9DF8;
    uint64_t v16 = &unk_1001A4FB0;
    __int128 v17 = (os_log_s *)*(id *)(a1 + 40);
    char v20 = *(_BYTE *)(a1 + 48);
    id v8 = v5;
    uint64_t v9 = *(void *)(a1 + 32);
    id v18 = v8;
    uint64_t v19 = v9;
    id v10 = [v7 initWithStartHandler:&v13];
    objc_msgSend( v10,  "setName:",  @"com.apple.itunescloudd.enhancedAudioSharedKeyRefreshOperation",  v13,  v14,  v15,  v16);
    [*(id *)(*(void *)(a1 + 32) + 8) addOperation:v10];

    uint64_t v11 = v17;
  }

  else
  {
    uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v22 = v12;
      __int16 v23 = 2114;
      id v24 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch the bag. err=%{public}@",  buf,  0x16u);
    }
  }
}

void sub_1000B9DF8(uint64_t a1, void *a2)
{
  id v17 = a2;
  id v3 = [[ICContentKeySession alloc] initWithRequestContext:*(void *)(a1 + 32)];
  [v3 setBypassCache:*(unsigned __int8 *)(a1 + 56)];
  [v3 setRequestOfflineKeys:1];
  [v3 setAdamID:&off_1001B40F0];
  [v3 setKeyServerProtocolType:1];
  uint64_t v4 = a1;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) enhancedAudioConfiguration]);
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  uint64_t v16 = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 prefetchSKDs]);
  id v7 = [v6 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v19;
    do
    {
      for (i = 0LL; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v18 + 1) + 8LL * (void)i);
        uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "Default");
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v13 = *(void *)(v4 + 48);
          *(_DWORD *)__int128 buf = 138543618;
          uint64_t v23 = v13;
          __int16 v24 = 2114;
          uint64_t v25 = v11;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Requesting refresh for key %{public}@",  buf,  0x16u);
        }

        [v3 processKeyWithIdentifier:v11];
      }

      id v8 = [v6 countByEnumeratingWithState:&v18 objects:v26 count:16];
    }

    while (v8);
  }

  [v3 waitForAllKeysToProcess];
  uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = *(void *)(v4 + 48);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v23 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished refreshing offline HLS keys",  buf,  0xCu);
  }

  [v17 finishWithError:0];
}

void sub_1000BA064(id a1, ICStoreRequestContext *a2)
{
  uint64_t v2 = a2;
  -[ICStoreRequestContext setAllowsExpiredBags:](v2, "setAllowsExpiredBags:", 1LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  -[ICStoreRequestContext setIdentity:](v2, "setIdentity:", v3);

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  -[ICStoreRequestContext setIdentityStore:](v2, "setIdentityStore:", v4);

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  -[ICStoreRequestContext setClientInfo:](v2, "setClientInfo:", v5);

  id v6 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  -[ICStoreRequestContext setAuthenticationProvider:](v2, "setAuthenticationProvider:", v6);
}

void sub_1000BA12C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v13 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Processing pending key invalidations",  buf,  0xCu);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _storeRequestContext]);
  id v7 = [v6 copyWithBlock:&stru_1001A4F40];

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000BA284;
  v10[3] = &unk_1001A7180;
  void v10[4] = *(void *)(a1 + 32);
  id v11 = v3;
  id v9 = v3;
  [v8 getBagForRequestContext:v7 withCompletionHandler:v10];
}

void sub_1000BA284(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "Default");
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v24 = v9;
      __int16 v25 = 2114;
      id v26 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch bag to obtain invalidation URLS. err=%{public}@",  buf,  0x16u);
    }

    [*(id *)(a1 + 40) finishWithError:v6];
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v24 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Stopping key session for keys",  buf,  0xCu);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[ICContentKeySession pendingInvalidationKeyStorePath]( &OBJC_CLASS___ICContentKeySession,  "pendingInvalidationKeyStorePath"));
    id v12 = [[ICFileContentKeyStore alloc] initWithPath:v11];
    id v13 = objc_alloc(&OBJC_CLASS___ICContentKeySession);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _storeRequestContext]);
    id v15 = [v13 initWithRequestContext:v14 keyStore:v12];

    [v15 setKeyServerProtocolType:2];
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v5 urlForBagKey:ICURLBagKeyPodcastsLicenseOfflineStop]);
    [v15 setOfflineLeaseStopURL:v16];

    id v17 = (void *)objc_claimAutoreleasedReturnValue([v5 urlForBagKey:ICURLBagKeyPodcastsLicenseOfflineStopNonce]);
    [v15 setOfflineLeaseStopNonceURL:v17];

    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    v20[2] = sub_1000BA504;
    void v20[3] = &unk_1001A6040;
    __int128 v18 = *(void **)(a1 + 40);
    void v20[4] = *(void *)(a1 + 32);
    id v21 = v12;
    id v22 = v18;
    id v19 = v12;
    [v15 stopSessionInvalidatingKeys:1 withCompletion:v20];
  }
}

void sub_1000BA504(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "Default");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_description"));
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v12 = v6;
      __int16 v13 = 2114;
      uint64_t v14 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished Invalidating offline keys error=%{public}@",  buf,  0x16u);
    }

    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1000BA688;
    v10[3] = &unk_1001A4F68;
    id v8 = *(void **)(a1 + 40);
    void v10[4] = *(void *)(a1 + 32);
    [v8 enumerateKeyEntriesUsingBlock:v10];
  }

  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v12 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished Invalidating offline keys",  buf,  0xCu);
    }
  }

  [*(id *)(a1 + 48) finishWithError:v3];
}

void sub_1000BA688(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = MSVAutoBugCaptureDomainiTunesCloud;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 adamID]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Failed to invalidate key '%@', adamID %@",  v5,  v6));
  +[MSVAutoBugCapture snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:]( &OBJC_CLASS___MSVAutoBugCapture,  "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:",  v4,  @"Bug",  @"Key Management",  v7,  &stru_1001A7960,  0LL,  0LL);

  id v8 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 identifier]);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v3 adamID]);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v13 = v9;
    __int16 v14 = 2114;
    id v15 = v10;
    __int16 v16 = 2114;
    id v17 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to invalidate key '%{public}@', adamID=%{public}@",  buf,  0x20u);
  }
}

void sub_1000BA828(id a1, ICStoreRequestContext *a2)
{
  uint64_t v2 = a2;
  id v3 = [[ICClientInfo alloc] initWithSystemApplicationType:3];
  -[ICStoreRequestContext setClientInfo:](v2, "setClientInfo:", v3);
}

void sub_1000BA880(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[ML3BitMaskPredicate predicateWithProperty:mask:value:]( &OBJC_CLASS___ML3BitMaskPredicate,  "predicateWithProperty:mask:value:",  ML3TrackPropertyMediaType,  1032LL,  8LL));
  v16[0] = v2;
  id v3 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInteger:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInteger:",  ML3TrackPropertyHasNonPurgeableAsset,  1LL));
  v16[1] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  ML3TrackPropertyHLSAssetTraits,  &off_1001B40F0,  2LL));
  void v16[2] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v16, 3LL));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v5));

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:]( &OBJC_CLASS___ML3Track,  "unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:",  *(void *)(a1 + 32),  v6,  0LL));
  v15[0] = ML3TrackPropertyFilePath;
  v15[1] = ML3TrackPropertyTitle;
  v15[2] = ML3TrackPropertyAssetStoreItemID;
  v15[3] = ML3TrackPropertySubscriptionStoreItemID;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v15, 4LL));
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_1000BB00C;
  void v12[3] = &unk_1001A4E60;
  void v12[4] = *(void *)(a1 + 40);
  id v13 = v8;
  __int128 v11 = *(_OWORD *)(a1 + 48);
  id v9 = (id)v11;
  __int128 v14 = v11;
  id v10 = v8;
  [v7 enumeratePersistentIDsAndProperties:v10 usingBlock:v12];
}

void sub_1000BAAA0(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_1000BAB2C;
  v2[3] = &unk_1001A4ED8;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  [v1 enumerateKeysAndObjectsUsingBlock:v2];
  objc_destroyWeak(&v3);
}

void sub_1000BAB18(_Unwind_Exception *a1)
{
}

void sub_1000BAB2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:ML3TrackPropertyFilePath]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:ML3TrackPropertyTitle]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary mediaFolderPathByAppendingPathComponent:]( &OBJC_CLASS___ML3MusicLibrary,  "mediaFolderPathByAppendingPathComponent:",  v8));
  __int128 v11 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 138543874;
    id v30 = WeakRetained;
    __int16 v31 = 2114;
    __int16 v32 = v9;
    __int16 v33 = 2114;
    id v34 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Fetching missing offline key for track '%{public}@' (%{public}@)",  buf,  0x20u);
  }

  id v12 = objc_alloc(&OBJC_CLASS___ICAsyncBlockOperation);
  __int128 v20 = _NSConcreteStackBlock;
  uint64_t v21 = 3221225472LL;
  id v22 = sub_1000BAD74;
  uint64_t v23 = &unk_1001A4EB0;
  id v24 = WeakRetained;
  id v25 = v6;
  id v26 = v9;
  id v27 = v5;
  id v28 = v10;
  id v13 = v10;
  id v14 = v5;
  id v15 = v9;
  id v16 = v6;
  id v17 = (id *)WeakRetained;
  id v18 = [v12 initWithStartHandler:&v20];
  id v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"com.apple.itunescloudd.enhancedAudioOfflineKeyFetchOperation.%@]",  v14,  v20,  v21,  v22,  v23));
  [v18 setName:v19];

  [v17[1] addOperation:v18];
}

void sub_1000BAD74(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 _storeRequestContext]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:ML3TrackPropertyAssetStoreItemID]);
  if (![v6 longLongValue])
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:ML3TrackPropertySubscriptionStoreItemID]);

    id v6 = (void *)v7;
  }

  id v8 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 56);
    int v21 = 138543874;
    uint64_t v22 = v9;
    __int16 v23 = 2114;
    uint64_t v24 = v10;
    __int16 v25 = 2114;
    uint64_t v26 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Fetching offline key for track '%{public}@' (%{public}@)",  (uint8_t *)&v21,  0x20u);
  }

  id v12 = [[ICFileContentKeyStore alloc] initWithPath:*(void *)(a1 + 64)];
  id v13 = [[ICContentKeySession alloc] initWithRequestContext:v5 keyStore:v12];
  [v13 setAdamID:v6];
  [v13 setRequestOfflineKeys:1];
  [v13 setKeyServerProtocolType:1];
  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", *(void *)(a1 + 64)));
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[AVURLAsset URLAssetWithURL:options:](&OBJC_CLASS___AVURLAsset, "URLAssetWithURL:options:", v14, 0LL));

  [v13 addAsset:v15 shouldPreloadKeys:1 waitForKeyIdentifiers:1];
  [v13 waitForAllKeysToProcess];
  id v16 = os_log_create("com.apple.amp.itunescloudd", "Default");
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 48);
    uint64_t v19 = *(void *)(a1 + 56);
    uint64_t v20 = *(void *)(a1 + 64);
    int v21 = 138544130;
    uint64_t v22 = v17;
    __int16 v23 = 2114;
    uint64_t v24 = v18;
    __int16 v25 = 2114;
    uint64_t v26 = v19;
    __int16 v27 = 2114;
    uint64_t v28 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished  track %{public}@ because the file '%{public}@' (%{public}@) isn't HLS",  (uint8_t *)&v21,  0x2Au);
  }

  [v4 finishWithError:0];
}

void sub_1000BB00C(uint64_t a1, uint64_t a2, id *a3)
{
  uint64_t v27 = a2;
  id v5 = *a3;
  id v6 = a3[1];
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary mediaFolderPathByAppendingPathComponent:]( &OBJC_CLASS___ML3MusicLibrary,  "mediaFolderPathByAppendingPathComponent:",  v5));
  char v36 = 1;
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  unsigned __int8 v9 = [v8 fileExistsAtPath:v7 isDirectory:&v36];
  if (v36) {
    unsigned __int8 v10 = v9;
  }
  else {
    unsigned __int8 v10 = 0;
  }

  if ((v10 & 1) != 0)
  {
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue([v7 pathExtension]);
    uint64_t v12 = ML3OfflineHLSFileExtensions();
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    unsigned __int8 v14 = [v13 containsObject:v11];

    if ((v14 & 1) != 0)
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
      os_log_t v15 = (os_log_t)[[ICFileContentKeyStore alloc] initWithPath:v7];
      *(void *)uint64_t v43 = 0LL;
      *(void *)&v43[8] = v43;
      *(void *)&v43[16] = 0x2020000000LL;
      LOBYTE(v44) = 1;
      uint64_t v28 = _NSConcreteStackBlock;
      uint64_t v29 = 3221225472LL;
      id v30 = sub_1000BB440;
      __int16 v31 = &unk_1001A4E38;
      uint64_t v16 = *(void *)(a1 + 32);
      id v34 = v43;
      uint64_t v32 = v16;
      id v17 = v6;
      id v33 = v17;
      uint64_t v35 = v27;
      -[os_log_s enumerateKeyEntriesUsingBlock:](v15, "enumerateKeyEntriesUsingBlock:", &v28);
      if (*(_BYTE *)(*(void *)&v43[8] + 24LL))
      {
        uint64_t v18 = os_log_create("com.apple.amp.itunescloudd", "Default");
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v19 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543874;
          uint64_t v38 = v19;
          __int16 v39 = 2114;
          id v40 = v17;
          __int16 v41 = 2048;
          uint64_t v42 = v27;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Found track missing offline key: '%{public}@' (%lld)",  buf,  0x20u);
        }

        uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( NSMutableDictionary,  "dictionaryWithCapacity:",  [*(id *)(a1 + 40) count]));
        for (unint64_t i = 0; i < (unint64_t)objc_msgSend(*(id *)(a1 + 40), "count", v27, v28, v29, v30, v31, v32); ++i)
        {
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectAtIndexedSubscript:i]);
          [v20 setObject:a3[i] forKey:v22];
        }

        __int16 v25 = *(void **)(a1 + 48);
        uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v27));
        [v25 setObject:v20 forKey:v26];
      }

      _Block_object_dispose(v43, 8);
    }

    else
    {
      os_log_t v15 = os_log_create("com.apple.amp.itunescloudd", "Default");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v24 = *(void *)(a1 + 32);
        *(_DWORD *)uint64_t v43 = 138544130;
        *(void *)&void v43[4] = v24;
        *(_WORD *)&v43[12] = 2114;
        *(void *)&v43[14] = v6;
        *(_WORD *)&v43[22] = 2048;
        uint64_t v44 = v27;
        __int16 v45 = 2114;
        id v46 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Skipping track '%{public}@' (%llu) because the file '%{public}@' isn't HLS",  v43,  0x2Au);
      }
    }
  }

  else
  {
    uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v23 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t v43 = 138544130;
      *(void *)&void v43[4] = v23;
      *(_WORD *)&v43[12] = 2114;
      *(void *)&v43[14] = v6;
      *(_WORD *)&v43[22] = 2048;
      uint64_t v44 = v27;
      __int16 v45 = 2114;
      id v46 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Skipping track '%{public}@' (%llu) because the asset file '%{public}@' doesn't exist or is not a directory",  v43,  0x2Au);
    }
  }
}

void sub_1000BB414( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

void sub_1000BB440(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 keyData]);

  if (v4)
  {
LABEL_6:
    *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 0;
    goto LABEL_7;
  }

  if ((unint64_t)[v3 failureCount] >= 5)
  {
    id v5 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = a1[4];
      uint64_t v7 = a1[5];
      uint64_t v8 = a1[7];
      int v9 = 138544130;
      uint64_t v10 = v6;
      __int16 v11 = 2114;
      uint64_t v12 = v7;
      __int16 v13 = 2048;
      uint64_t v14 = v8;
      __int16 v15 = 2048;
      id v16 = [v3 failureCount];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Skipping track '%{public}@' (%llu) because the failure count of %lu exceeds the retry limit",  (uint8_t *)&v9,  0x2Au);
    }

    goto LABEL_6;
  }

void sub_1000BBCFC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000BC2B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000BC2C8(uint64_t a1)
{
}

void sub_1000BC2D0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v9 = a2;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v9 libraryUID]);
  unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
    *a4 = 1;
  }
}

void sub_1000BD008( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000BD168(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000BD178(uint64_t a1)
{
}

void sub_1000BD180(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "SDK");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = (objc_class *)objc_opt_class(v5, v8);
    uint64_t v10 = NSStringFromClass(v9);
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = [v5 responseCode];
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    int v18 = 138544386;
    id v19 = v11;
    __int16 v20 = 2048;
    id v21 = v5;
    __int16 v22 = 2048;
    id v23 = v12;
    __int16 v24 = 2048;
    id v25 = [v13 length];
    __int16 v26 = 1024;
    unsigned int v27 = [v5 responseCode];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Books ItemsRequest retrieved a response: <%{public}@: %p code=%ld, length=%{bytes}lu> -- Code: %d",  (uint8_t *)&v18,  0x30u);
  }

  if (v6)
  {
    uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "SDK");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      int v18 = 138543362;
      id v19 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "Books ItemsRequest failed with error: %{public}@",  (uint8_t *)&v18,  0xCu);
    }
  }

  uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v5;
  id v17 = v5;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000BDC30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, char a41)
{
}

void sub_1000BE958( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000BEAC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = v3;
  if (*(void *)(a1 + 32))
  {
    objc_msgSend(v3, "setIdentity:");
  }

  else
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
    [v7 setIdentity:v4];
  }

  if (*(void *)(a1 + 40))
  {
    objc_msgSend(v7, "setClientInfo:");
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
    [v7 setClientInfo:v5];
  }

  id v6 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v7 setAuthenticationProvider:v6];

  [v7 setAllowsExpiredBags:1];
}

void sub_1000BEB98(uint64_t a1)
{
  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000BEC08;
    block[3] = &unk_1001A6B90;
    void block[4] = v2;
    dispatch_barrier_async(v3, block);
  }
}

id sub_1000BEC08(uint64_t a1)
{
  return [*(id *)(a1 + 32) _checkForRecentRevocations];
}

void sub_1000BEC10(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v10 = v3;
  if (*(void *)(a1 + 32))
  {
    objc_msgSend(v3, "setIdentity:");
  }

  else
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
    [v10 setIdentity:v4];
  }

  id v5 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v10 setAuthenticationProvider:v5];

  [v10 setAllowsExpiredBags:1];
  [v10 setPersonalizationStyle:2];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  id v7 = [v6 mutableCopy];

  if (*(void *)(a1 + 40))
  {
    id v8 = [[ICClientInfo alloc] initWithBundleIdentifier:*(void *)(a1 + 40)];
    [v7 setRequestingBundleIdentifier:*(void *)(a1 + 40)];
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 clientVersion]);
    [v7 setRequestingBundleVersion:v9];
  }

  [v10 setClientInfo:v7];
}

void sub_1000BED38(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = *(void **)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = a2;
    id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v3));
    [v2 _registerFailureToRevokeMusicUserTokensForApplicationsWithIdentifiers:v5 error:v4];
  }

void sub_1000BEDA8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a2 urlForBagKey:ICURLBagKeyRevokeMusicUserTokenURL]);
  if (v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](&OBJC_CLASS___NSMutableURLRequest, "requestWithURL:", v6));
    [v7 setHTTPMethod:@"POST"];
    id v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) deviceInfo]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 deviceGUID]);

    if (v10) {
      -[NSMutableDictionary setObject:forKey:](v8, "setObject:forKey:", v10, @"guid");
    }
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSJSONSerialization dataWithJSONObject:options:error:]( &OBJC_CLASS___NSJSONSerialization,  "dataWithJSONObject:options:error:",  v8,  0LL,  0LL));
    if (v11)
    {
      [v7 setHTTPBody:v11];
      [v7 setValue:ICHTTPHeaderContentTypeJSON forHTTPHeaderField:ICHTTPHeaderKeyContentType];
    }

    id v12 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v7,  *(void *)(a1 + 48));
    __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    void v17[2] = sub_1000BF07C;
    v17[3] = &unk_1001A56C0;
    uint64_t v14 = *(void **)(a1 + 40);
    void v17[4] = *(void *)(a1 + 32);
    id v18 = v14;
    id v19 = *(id *)(a1 + 56);
    id v20 = *(id *)(a1 + 64);
    [v13 enqueueDataRequest:v12 withCompletionHandler:v17];
  }

  else
  {
    if (v5) {
      id v15 = v5;
    }
    else {
      id v15 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7201LL,  0LL));
    }
    id v7 = v15;
    id v16 = os_log_create("com.apple.amp.itunescloudd", "SDK");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      __int16 v22 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "Failed to load revocation url from bag. err=%{public}@",  buf,  0xCu);
    }

    [*(id *)(a1 + 32) _registerFailureToRevokeMusicUserTokensForApplicationIdentifier:*(void *)(a1 + 40) error:v7];
    (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
  }
}

void sub_1000BF07C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = os_log_create("com.apple.amp.itunescloudd", "Default");
  id v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "msv_description"));
      int v14 = 138544130;
      uint64_t v15 = v7;
      __int16 v16 = 2114;
      uint64_t v17 = v8;
      __int16 v18 = 2114;
      uint64_t v19 = v9;
      __int16 v20 = 2114;
      id v21 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Completed revocation of music kit user tokens for application '%{public}@' and user identity %{public }@ error=%{public}@",  (uint8_t *)&v14,  0x2Au);
    }

    [*(id *)(a1 + 32) _registerFailureToRevokeMusicUserTokensForApplicationIdentifier:*(void *)(a1 + 40) error:v4];
  }

  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(a1 + 40);
      uint64_t v13 = *(void *)(a1 + 48);
      int v14 = 138543874;
      uint64_t v15 = v11;
      __int16 v16 = 2114;
      uint64_t v17 = v12;
      __int16 v18 = 2114;
      uint64_t v19 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Completed revocation of music kit user tokens for application '%{public}@' and user identity %{public}@",  (uint8_t *)&v14,  0x20u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

void sub_1000BF208(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "msv_errorByRemovingUnsafeUserInfo"));
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);
}

void sub_1000BF250(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 40LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56)));
  id v7 = (id)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);

  if (!v7)
  {
    id v7 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    id v4 = *(void **)(*(void *)(a1 + 32) + 40LL);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 56)));
    [v4 setObject:v7 forKeyedSubscript:v5];

    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
  }

  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  [v7 addObject:v6];
}

void sub_1000BF330(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000BF3E0;
  v6[3] = &unk_1001A5098;
  id v7 = *(id *)(a1 + 48);
  id v4 = *(id *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v4;
  uint64_t v9 = v5;
  int v10 = *(_DWORD *)(a1 + 64);
  [v2 _displayNotificationForBuilder:v3 withReplyBlock:v6];
}

void sub_1000BF3E0(uint64_t a1, int a2, void *a3)
{
  uint64_t v20 = a1;
  id v4 = a3;
  uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "SDK");
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (a2)
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(v20 + 32);
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "User accepted to renew premissions for all expired bundle identifiers %{public}@",  (uint8_t *)&buf,  0xCu);
    }

    TCCExpirationResetService(kTCCServiceMediaLibrary);
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    id obj = *(id *)(v20 + 32);
    id v8 = [obj countByEnumeratingWithState:&v28 objects:v40 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v29;
      do
      {
        int v10 = 0LL;
        do
        {
          if (*(void *)v29 != v9) {
            objc_enumerationMutation(obj);
          }
          uint64_t v11 = *(void *)(*((void *)&v28 + 1) + 8LL * (void)v10);
          uint64_t v38 = kTCCSetNoKill;
          __int16 v39 = &__kCFBooleanTrue;
          TCCAccessSetForBundleIdWithOptions( kTCCServiceMediaLibrary,  v11,  1LL,  +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v39,  &v38,  1LL,  v20));
          int v10 = (char *)v10 + 1;
        }

        while (v8 != v10);
        id v8 = [obj countByEnumeratingWithState:&v28 objects:v40 count:16];
      }

      while (v8);
    }

    uint64_t v12 = @"com.apple.Music.iOS.VPPA.ApprovalButtonSelected";
  }

  else
  {
    if (v6)
    {
      uint64_t v13 = *(void *)(v20 + 40);
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "User rejected to renew premissions for all expired bundle identifiers, resetting for %{public}@",  (uint8_t *)&buf,  0xCu);
    }

    TCCExpirationResetServiceForBundleIdentifier(kTCCServiceMediaLibrary, *(void *)(v20 + 40));
    uint64_t v12 = @"com.apple.Music.iOS.VPPA.CancelButtonSelected";
  }

  AnalyticsSendEvent(v12, 0LL);
  *(void *)&__int128 buf = 0LL;
  *((void *)&buf + 1) = &buf;
  uint64_t v34 = 0x3032000000LL;
  uint64_t v35 = sub_1000BF784;
  char v36 = sub_1000BF794;
  id v37 = 0LL;
  uint64_t v14 = *(void *)(v20 + 48);
  uint64_t v15 = *(dispatch_queue_s **)(v14 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000BF79C;
  block[3] = &unk_1001A5070;
  void block[4] = v14;
  void block[5] = &buf;
  int v27 = *(_DWORD *)(v20 + 56);
  dispatch_barrier_sync(v15, block);
  __int128 v24 = 0u;
  __int128 v25 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  id v16 = *(id *)(*((void *)&buf + 1) + 40LL);
  id v17 = [v16 countByEnumeratingWithState:&v22 objects:v32 count:16];
  if (v17)
  {
    uint64_t v18 = *(void *)v23;
    do
    {
      uint64_t v19 = 0LL;
      do
      {
        if (*(void *)v23 != v18) {
          objc_enumerationMutation(v16);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v22 + 1) + 8LL * (void)v19) + 16LL))();
        uint64_t v19 = (char *)v19 + 1;
      }

      while (v17 != v19);
      id v17 = [v16 countByEnumeratingWithState:&v22 objects:v32 count:16];
    }

    while (v17);
  }

  _Block_object_dispose(&buf, 8);
}

void sub_1000BF75C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,char a51)
{
}

uint64_t sub_1000BF784(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000BF794(uint64_t a1)
{
}

void sub_1000BF79C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 40LL);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 48)));
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  BOOL v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint64_t v7 = *(void **)(*(void *)(a1 + 32) + 40LL);
  id v8 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 48)));
  [v7 setObject:0 forKeyedSubscript:v8];
}

void sub_1000BF840(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543874;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    __int16 v9 = 2114;
    int v10 = @"com.apple.itunescloudd.tcchelper";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ connection from pid %i was interrupted for service %{public}@.",  (uint8_t *)&v5,  0x1Cu);
  }
}

void sub_1000BF914(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "XPC");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543874;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    __int16 v9 = 2114;
    int v10 = @"com.apple.itunescloudd.tcchelper";
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ connection from pid %i was invalidated for service %{public}@.",  (uint8_t *)&v5,  0x1Cu);
  }
}

id sub_1000BF9E8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopObservingRevocations];
}

id sub_1000BF9F0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _startObservingRevocations];
}

id sub_1000BF9F8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stopObservingRevocations];
}

void sub_1000BFC18(id a1)
{
  id v1 = -[MediaLibraryAccessRevocationController _init]( objc_alloc(&OBJC_CLASS___MediaLibraryAccessRevocationController),  "_init");
  uint64_t v2 = (void *)qword_1001DB778;
  qword_1001DB778 = (uint64_t)v1;
}

void sub_1000C06BC(_Unwind_Exception *a1)
{
}

id sub_1000C08F0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    int v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000C0998;
    block[3] = &unk_1001A6BE0;
    id v7 = v2;
    dispatch_async(v4, block);
  }

  return [*(id *)(a1 + 40) endTransaction];
}

uint64_t sub_1000C0998(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000C09A4(id *a1)
{
  uint64_t v2 = a1 + 4;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1[4] _pendingChanges]);
  id v4 = [v3 count];
  id v6 = objc_msgSend((id)objc_opt_class(*((void *)*v2 + 4), v5), "logCategory");
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (!v8) {
      goto LABEL_7;
    }
    id v9 = a1[4];
    *(_DWORD *)__int128 buf = 138543874;
    *(void *)&uint8_t buf[4] = v9;
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&buf[14] = v4;
    *(_WORD *)&_BYTE buf[22] = 2114;
    id v47 = v3;
    int v10 = "%{public}@ Processing %lu pending changes: %{public}@";
    uint64_t v11 = v7;
    uint32_t v12 = 32;
  }

  else
  {
    if (!v8) {
      goto LABEL_7;
    }
    id v13 = a1[4];
    *(_DWORD *)__int128 buf = 138543362;
    *(void *)&uint8_t buf[4] = v13;
    int v10 = "%{public}@  No pending changes to process.";
    uint64_t v11 = v7;
    uint32_t v12 = 12;
  }

  _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, buf, v12);
LABEL_7:

  id v32 = [v3 mutableCopy];
  uint64_t v14 = objc_alloc_init(&OBJC_CLASS___NSOperationQueue);
  -[NSOperationQueue setName:]( v14,  "setName:",  @"com.apple.itunescloudd.CloudPendingChangesCoordinator.operationQueue");
  -[NSOperationQueue setMaxConcurrentOperationCount:](v14, "setMaxConcurrentOperationCount:", 1LL);
  -[NSOperationQueue setQualityOfService:](v14, "setQualityOfService:", -1LL);
  *(void *)__int128 buf = 0LL;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x2810000000LL;
  id v47 = &unk_100166F5B;
  int v48 = 0;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  __int128 v40 = 0u;
  id obj = v3;
  id v16 = [obj countByEnumeratingWithState:&v37 objects:v45 count:16];
  if (v16)
  {
    uint64_t v18 = *(void *)v38;
    *(void *)&__int128 v17 = 138543618LL;
    __int128 v30 = v17;
    do
    {
      for (unint64_t i = 0LL; i != v16; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v18) {
          objc_enumerationMutation(obj);
        }
        uint64_t v20 = *(void **)(*((void *)&v37 + 1) + 8LL * (void)i);
        id v21 = objc_msgSend((id)objc_opt_class(*((void *)a1[4] + 4), v15), "logCategory");
        __int128 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          id v23 = a1[4];
          *(_DWORD *)__int16 v41 = v30;
          id v42 = v23;
          __int16 v43 = 2114;
          id v44 = v20;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Enqueueing pending change operation %{public}@",  v41,  0x16u);
        }

        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([a1[5] underlyingConnection]);
        [v20 setConnection:v24];

        objc_initWeak((id *)v41, v20);
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472LL;
        void v33[2] = sub_1000C0E28;
        v33[3] = &unk_1001A5138;
        objc_copyWeak(&v36, (id *)v41);
        uint64_t v35 = buf;
        id v34 = v32;
        [v20 setCompletionBlock:v33];
        -[NSOperationQueue addOperation:](v14, "addOperation:", v20);

        objc_destroyWeak(&v36);
        objc_destroyWeak((id *)v41);
      }

      id v16 = [obj countByEnumeratingWithState:&v37 objects:v45 count:16];
    }

    while (v16);
  }

  -[NSOperationQueue waitUntilAllOperationsAreFinished](v14, "waitUntilAllOperationsAreFinished");
  if ([v32 count])
  {
    id v26 = objc_msgSend((id)objc_opt_class(*((void *)a1[4] + 4), v25), "logCategory");
    int v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = a1[4];
      id v29 = [v32 count];
      *(_DWORD *)__int16 v41 = 138543618;
      id v42 = v28;
      __int16 v43 = 2048;
      id v44 = v29;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %lu pending changes failed again, persisting for another time.",  v41,  0x16u);
    }
  }

  objc_msgSend(a1[4], "_savePendingChanges:", v32, v30);
  [a1[6] endTransaction];
  _Block_object_dispose(buf, 8);
}

void sub_1000C0DD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, id location)
{
}

void sub_1000C0E28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained status] != (id)2)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(*(void *)(a1 + 40) + 8LL) + 32LL));
    [*(id *)(a1 + 32) removeObject:WeakRetained];
    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(*(void *)(a1 + 40) + 8LL) + 32LL));
  }
}

void sub_1000C0E94(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _pendingChanges]);
  id v4 = (NSMutableArray *)[v2 mutableCopy];

  uint64_t v3 = v4;
  if (!v4) {
    uint64_t v3 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", 1LL);
  }
  uint64_t v5 = v3;
  -[NSMutableArray addObject:](v3, "addObject:", *(void *)(a1 + 40));
  [*(id *)(a1 + 32) _savePendingChanges:v5];
  [*(id *)(a1 + 48) endTransaction];
}

id sub_1000C0F14()
{
  v0 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  id v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 lastObject]);

  v7[0] = v2;
  v7[1] = @"com.apple.itunescloudd";
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v7, 2LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v3));

  if ([v4 length])
  {
    id v5 = v4;
  }

  else
  {
    +[NSException raise:format:]( &OBJC_CLASS___NSException,  "raise:format:",  NSInternalInconsistencyException,  @"unable to create cache directory");
    id v5 = 0LL;
  }

  return v5;
}

id sub_1000C1020()
{
  id v0 = sub_1000C0F14();
  id v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 stringByAppendingPathComponent:@"ArtworkDownloads"]);

  return v2;
}

id sub_1000C12C4(uint64_t a1, void *a2)
{
  return [a2 writeString:*(void *)(*(void *)(a1 + 32) + 104) withCode:1634357319];
}

BOOL sub_1000C1558(void *a1, char a2, void *a3)
{
  id v5 = a1;
  uint64_t v57 = 0LL;
  id v58 = &v57;
  uint64_t v59 = 0x2020000000LL;
  char v60 = 0;
  uint64_t v51 = 0LL;
  id v52 = &v51;
  uint64_t v53 = 0x3032000000LL;
  id v54 = sub_1000C1AE4;
  id v55 = sub_1000C1AF4;
  id v56 = 0LL;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 userIdentity]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v6));

  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue([v7 sagaCloudLibraryCUID]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 sagaCloudLibraryTroveID]);
  if ([v8 length] && objc_msgSend(v9, "length"))
  {
    int v10 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Device is already registered with CUID and TroveID",  buf,  2u);
    }

    *((_BYTE *)v58 + 24) = 1;
  }

  if (!*((_BYTE *)v58 + 24))
  {
    uint64_t v11 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 3221225472LL;
    v48[2] = sub_1000C1AFC;
    v48[3] = &unk_1001A5160;
    id v49 = v5;
    char v50 = a2;
    id v26 = -[ICStoreRequestContext initWithBlock:](v11, "initWithBlock:", v48);
    *(void *)__int128 buf = 0LL;
    __int16 v43 = buf;
    uint64_t v44 = 0x3032000000LL;
    __int16 v45 = sub_1000C1AE4;
    id v46 = sub_1000C1AF4;
    id v47 = 0LL;
    dispatch_semaphore_t v12 = dispatch_semaphore_create(0LL);
    uint64_t v36 = 0LL;
    __int128 v37 = &v36;
    uint64_t v38 = 0x3032000000LL;
    __int128 v39 = sub_1000C1AE4;
    __int128 v40 = sub_1000C1AF4;
    id v41 = 0LL;
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    v32[2] = sub_1000C1BF0;
    void v32[3] = &unk_1001A59D8;
    id v34 = &v36;
    uint64_t v35 = buf;
    uint64_t v14 = v12;
    id v33 = v14;
    [v13 getBagForRequestContext:v26 withCompletionHandler:v32];

    dispatch_semaphore_wait(v14, 0xFFFFFFFFFFFFFFFFLL);
    if (*((void *)v43 + 5))
    {
      uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = *((void *)v43 + 5);
        *(_DWORD *)id v61 = 138543362;
        uint64_t v62 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Failed to load url bag. err=%{public}@",  v61,  0xCu);
      }
    }

    else
    {
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([(id)v37[5] urlForBagKey:ICURLBagKeyCloudAddComputer]);
      __int128 v17 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
      BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
      if (v15)
      {
        if (v18)
        {
          *(_WORD *)id v61 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Sending request to register device",  v61,  2u);
        }

        dispatch_semaphore_t v19 = dispatch_semaphore_create(0LL);
        uint64_t v20 = -[ICStoreURLRequest initWithURL:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURL:requestContext:",  v15,  v26);
        id v21 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 3221225472LL;
        void v27[2] = sub_1000C1C78;
        v27[3] = &unk_1001A5188;
        id v28 = v7;
        __int128 v30 = &v57;
        __int128 v31 = &v51;
        __int128 v22 = v19;
        uint64_t v29 = v22;
        [v21 enqueueDataRequest:v20 withCompletionHandler:v27];

        dispatch_semaphore_wait(v22, 0xFFFFFFFFFFFFFFFFLL);
      }

      else
      {
        if (v18)
        {
          *(_WORD *)id v61 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "Failed to register device because url bag is missing the 'cloud-add-computer' key",  v61,  2u);
        }

        uint64_t v23 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7201LL,  0LL));
        __int128 v22 = (dispatch_semaphore_s *)v52[5];
        v52[5] = v23;
      }
    }

    _Block_object_dispose(&v36, 8);
    _Block_object_dispose(buf, 8);
  }

  if (a3) {
    *a3 = (id) v52[5];
  }
  BOOL v24 = *((_BYTE *)v58 + 24) != 0;

  _Block_object_dispose(&v51, 8);
  _Block_object_dispose(&v57, 8);

  return v24;
}

void sub_1000C1A84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

uint64_t sub_1000C1AE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000C1AF4(uint64_t a1)
{
}

void sub_1000C1AFC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 userIdentity]);
  [v4 setIdentity:v5];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  [v4 setIdentityStore:v6];

  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  [v4 setClientInfo:v7];

  id v8 = objc_alloc(&OBJC_CLASS___ICStoreURLResponseAuthenticationProvider);
  if (*(_BYTE *)(a1 + 40)) {
    uint64_t v9 = 2LL;
  }
  else {
    uint64_t v9 = 1LL;
  }
  id v10 = [v8 initWithUserInteractionLevel:v9];
  [v4 setAuthenticationProvider:v10];

  id v11 = objc_alloc_init(&OBJC_CLASS___ICStoreDialogResponseHandler);
  [v4 setStoreDialogResponseHandler:v11];
}

void sub_1000C1BF0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000C1C78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v22 = 138543362;
      id v23 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Failed to register device. err=%{public}@",  (uint8_t *)&v22,  0xCu);
    }
  }

  else
  {
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([v5 bodyData]);
    id v8 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v22 = 134217984;
      id v23 = -[os_log_s length](v7, "length");
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Received response (length = %{bytes}lu)",  (uint8_t *)&v22,  0xCu);
    }

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
    uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSDictionary, v10);
    if ((objc_opt_isKindOfClass(v9, v11) & 1) != 0)
    {
      id v12 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v22 = 138543362;
        id v23 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Register device response: %{public}@",  (uint8_t *)&v22,  0xCu);
      }

      id v13 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKey:@"cloud-info"]);
      uint64_t v15 = objc_opt_class(&OBJC_CLASS___NSDictionary, v14);
      if ((objc_opt_isKindOfClass(v13, v15) & 1) != 0)
      {
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:@"cuid"]);
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKey:@"troveid"]);
        if ([v16 length] && objc_msgSend(v17, "length"))
        {
          BOOL v18 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            int v22 = 138543618;
            id v23 = v16;
            __int16 v24 = 2114;
            uint64_t v25 = v17;
            _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Successfully registered device (CUID: %{public}@, TroveID: %{public}@)",  (uint8_t *)&v22,  0x16u);
          }

          [*(id *)(a1 + 32) setSagaCloudLibraryCUID:v16];
          [*(id *)(a1 + 32) setSagaCloudLibraryTroveID:v17];
          *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
        }
      }
    }

    if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL))
    {
      uint64_t v19 = objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2022LL,  0LL));
      uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8LL);
      id v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;
    }
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000C1FC0(int a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  if (MSVDeviceOSIsInternalInstall(v16))
  {
    uint64_t v70 = a3;
    uint64_t v74 = v16;
    __int128 v17 = objc_alloc_init(&OBJC_CLASS___NSFileManager);
    BOOL v18 = off_1001A5358[a1];
    uint64_t v19 = MSVMediaLoggingDirectory();
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    v84[0] = v20;
    v84[1] = @"DaapDebugging";
    v84[2] = v18;
    id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v84, 3LL));
    int v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPathComponents:](&OBJC_CLASS___NSURL, "fileURLWithPathComponents:", v21));

    uint64_t v23 = objc_claimAutoreleasedReturnValue([v22 URLByAppendingPathComponent:@"Initial" isDirectory:1]);
    uint64_t v24 = a2;
    uint64_t v25 = (void *)v23;
    id v72 = v15;
    id v73 = v22;
    uint64_t v71 = v24;
    if ((_DWORD)v24)
    {
      id v68 = v14;
      uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
      v83[0] = NSURLIsDirectoryKey;
      v83[1] = NSURLCreationDateKey;
      id v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v83, 2LL));
      id v69 = v17;
      int v27 = (void *)objc_claimAutoreleasedReturnValue( -[NSFileManager enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:]( v17,  "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:",  v22,  v26,  4LL,  0LL));

      __int128 v80 = 0u;
      __int128 v81 = 0u;
      __int128 v78 = 0u;
      __int128 v79 = 0u;
      id v28 = v27;
      id v29 = [v28 countByEnumeratingWithState:&v78 objects:v82 count:16];
      if (v29)
      {
        id v30 = v29;
        uint64_t v31 = *(void *)v79;
        do
        {
          for (unint64_t i = 0LL; i != v30; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v79 != v31) {
              objc_enumerationMutation(v28);
            }
            id v33 = *(void **)(*((void *)&v78 + 1) + 8LL * (void)i);
            if ((objc_msgSend(v33, "ic_referencesSameFile:", v25) & 1) == 0)
            {
              id v77 = 0LL;
              unsigned int v34 = [v33 getResourceValue:&v77 forKey:NSURLIsDirectoryKey error:0];
              id v35 = v77;
              uint64_t v36 = v35;
              if (v34 && [v35 BOOLValue])
              {
                id v76 = 0LL;
                unsigned __int8 v37 = [v33 getResourceValue:&v76 forKey:NSURLCreationDateKey error:0];
                id v38 = v76;
                if ((v37 & 1) == 0)
                {
                  uint64_t v39 = objc_claimAutoreleasedReturnValue(+[NSDate distantPast](&OBJC_CLASS___NSDate, "distantPast"));

                  id v38 = (id)v39;
                }

                [v75 setObject:v33 forKey:v38];
              }
            }
          }

          id v30 = [v28 countByEnumeratingWithState:&v78 objects:v82 count:16];
        }

        while (v30);
      }

      __int128 v40 = v75;
      id v41 = v73;
      if ((unint64_t)[v75 count] >= 4)
      {
        id v42 = (void *)objc_claimAutoreleasedReturnValue([v75 allKeys]);
        __int16 v43 = (void *)objc_claimAutoreleasedReturnValue([v42 sortedArrayUsingComparator:&stru_1001A51C8]);

        if ([v43 count] != (id)3)
        {
          uint64_t v44 = 0LL;
          do
          {
            __int16 v45 = (void *)objc_claimAutoreleasedReturnValue([v43 objectAtIndex:v44]);
            id v46 = (void *)objc_claimAutoreleasedReturnValue([v75 objectForKey:v45]);

            -[NSFileManager removeItemAtURL:error:](v69, "removeItemAtURL:error:", v46, 0LL);
            ++v44;
          }

          while (v44 < (char *)[v43 count] - 3);
        }

        __int128 v40 = v75;
        id v41 = v73;
      }

      id v47 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
      int v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Revision_%u_to_%u",  v71,  v70));
      id v49 = (id)objc_claimAutoreleasedReturnValue([v41 URLByAppendingPathComponent:v48 isDirectory:1]);

      id v14 = v68;
      __int128 v17 = v69;
    }

    else
    {
      -[NSFileManager removeItemAtURL:error:](v17, "removeItemAtURL:error:", v22, 0LL);
      id v49 = v25;
      id v47 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
    }

    -[NSFileManager createDirectoryAtURL:withIntermediateDirectories:attributes:error:]( v17,  "createDirectoryAtURL:withIntermediateDirectories:attributes:error:",  v49,  1LL,  0LL,  0LL);
    if ([v13 count])
    {
      unint64_t v50 = 0LL;
      do
      {
        uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue([v13 objectAtIndex:v50++]);
        id v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"track_data_%lu.daap",  v50));
        uint64_t v53 = (void *)objc_claimAutoreleasedReturnValue([v49 URLByAppendingPathComponent:v52 isDirectory:0]);

        id v47 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
        -[NSFileManager copyItemAtURL:toURL:error:](v17, "copyItemAtURL:toURL:error:", v51, v53, 0LL);
      }

      while (v50 < (unint64_t)[v13 count]);
    }

    if ([v14 count])
    {
      unint64_t v54 = 0LL;
      do
      {
        id v55 = (void *)objc_claimAutoreleasedReturnValue([v14 objectAtIndex:v54++]);
        id v56 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"playlist_data_%lu.daap",  v54));
        uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v49 URLByAppendingPathComponent:v56 isDirectory:0]);

        id v47 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
        -[NSFileManager copyItemAtURL:toURL:error:](v17, "copyItemAtURL:toURL:error:", v55, v57, 0LL);
      }

      while (v54 < (unint64_t)[v14 count]);
    }

    id v58 = v72;
    if (_os_feature_enabled_impl("MediaPlayer", "Favoriting"))
    {
      uint64_t v59 = v74;
      if ([v74 count])
      {
        unint64_t v60 = 0LL;
        do
        {
          id v61 = (void *)objc_claimAutoreleasedReturnValue([v59 objectAtIndex:v60++]);
          uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"album_data_%lu.daap",  v60));
          id v63 = (void *)objc_claimAutoreleasedReturnValue([v49 URLByAppendingPathComponent:v62 isDirectory:0]);

          id v47 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
          -[NSFileManager copyItemAtURL:toURL:error:](v17, "copyItemAtURL:toURL:error:", v61, v63, 0LL);

          uint64_t v59 = v74;
        }

        while (v60 < (unint64_t)[v74 count]);
      }

      id v58 = v72;
      if ([v72 count])
      {
        unint64_t v64 = 0LL;
        do
        {
          id v65 = (void *)objc_claimAutoreleasedReturnValue([v72 objectAtIndex:v64++]);
          __int16 v66 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47[47], "stringWithFormat:", @"artist_data_%lu.daap", v64));
          id v67 = (void *)objc_claimAutoreleasedReturnValue([v49 URLByAppendingPathComponent:v66 isDirectory:0]);

          id v47 = &OBJC_CLASS___MSVAutoBugCapture_ptr;
          -[NSFileManager copyItemAtURL:toURL:error:](v17, "copyItemAtURL:toURL:error:", v65, v67, 0LL);
        }

        while (v64 < (unint64_t)[v72 count]);
      }
    }

    id v16 = v74;
    id v15 = v58;
  }
}

int64_t sub_1000C26AC(id a1, NSDate *a2, NSDate *a3)
{
  return -[NSDate compare:](a2, "compare:", a3);
}

int64_t sub_1000C26B4(id a1, NSDate *a2, NSDate *a3)
{
  return -[NSDate compare:](a2, "compare:", a3);
}

uint64_t sub_1000C26BC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000C26CC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v3));
  [v4 setMergeToCloudLibraryPreference:v5];

  id v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *(unsigned __int8 *)(a1 + 32);
    v8[0] = 67109120;
    v8[1] = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Updating mergeToICMLPreference to %d for activeLockerAccount",  (uint8_t *)v8,  8u);
  }
}

void sub_1000C27C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = *(void **)(a1 + 32);
  if (v5)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    int v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    _DWORD v8[2] = sub_1000C2880;
    void v8[3] = &unk_1001A6BB8;
    id v10 = v5;
    id v9 = v4;
    dispatch_async(v7, v8);
  }
}

uint64_t sub_1000C2870(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

uint64_t sub_1000C2880(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000C2890(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  id v28 = a2;
  id v8 = a4;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 userIdentityStore]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 userIdentity]);
  int v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  id v52 = 0LL;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 getPropertiesForUserIdentity:v10 error:&v52]);
  id v12 = v52;
  if (!v12 && v11)
  {
    uint64_t v43 = 0LL;
    uint64_t v44 = &v43;
    uint64_t v45 = 0x3032000000LL;
    id v46 = sub_1000C1AE4;
    id v47 = sub_1000C1AF4;
    id v13 = (void *)objc_claimAutoreleasedReturnValue([v11 cloudLibraryStateReason]);
    id v48 = [v13 mutableCopy];

    if (a3 == 1)
    {
      id v14 = off_1001A5228;
    }

    else
    {
      if (a3 != 2)
      {
        uint64_t v25 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 67109120;
          int v54 = a3;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Invalid CloudLibraryStateReasonType (%d)",  buf,  8u);
        }

        goto LABEL_17;
      }

      id v14 = &off_1001A5230;
    }

    __int128 v17 = *v14;
    if (v17)
    {
      BOOL v18 = (dispatch_queue_s *)v17;
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([(id)v44[5] objectForKey:v17]);
      uint64_t v20 = v19;
      if (v44[5] && ([v19 isEqualToNumber:v28] & 1) != 0)
      {
        if (!v8)
        {
LABEL_22:

          _Block_object_dispose(&v43, 8);
          goto LABEL_23;
        }

        dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
        int v22 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
        v29[0] = _NSConcreteStackBlock;
        v29[1] = 3221225472LL;
        void v29[2] = sub_1000C3030;
        v29[3] = &unk_1001A6BB8;
        id v30 = 0LL;
        id v31 = v8;
        dispatch_async(v22, v29);

        uint64_t v23 = &v31;
        uint64_t v24 = v30;
      }

      else
      {
        v37[0] = _NSConcreteStackBlock;
        v37[1] = 3221225472LL;
        v37[2] = sub_1000C2DA8;
        v37[3] = &unk_1001A5308;
        __int128 v40 = &v43;
        id v38 = v28;
        BOOL v18 = v18;
        uint64_t v39 = v18;
        v32[0] = _NSConcreteStackBlock;
        v32[1] = 3221225472LL;
        v32[2] = sub_1000C2E54;
        void v32[3] = &unk_1001A5268;
        uint64_t v36 = &v43;
        id v33 = v7;
        id v34 = v27;
        id v35 = v8;
        [v9 insertPropertiesForUserIdentity:v10 andPostAccountChangeNotification:0 usingBlock:v37 completionHandler:v32];

        uint64_t v23 = &v38;
        uint64_t v24 = v39;
      }

void sub_1000C2D14( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, char a38)
{
}

uint64_t sub_1000C2D38(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000C2D48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1000C2DA8(void *a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1[6] + 8LL) + 40LL);
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  id v6 = a2;
  if (v3)
  {
    [v3 setObject:v4 forKey:v5];
  }

  else
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithObjectsAndKeys:",  v4,  v5,  0LL));
    uint64_t v8 = *(void *)(a1[6] + 8LL);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;
  }

  [a2 setCloudLibraryStateReason:*(void *)(*(void *)(a1[6] + 8) + 40)];
}

void sub_1000C2E54(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 accountDSID]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v9 timeIntervalSinceDate:*(void *)(a1 + 40)];
    *(_DWORD *)__int128 buf = 138544130;
    uint64_t v19 = v6;
    __int16 v20 = 2114;
    id v21 = v8;
    __int16 v22 = 2114;
    id v23 = v4;
    __int16 v24 = 2048;
    uint64_t v25 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "_CloudLibraryUtilitiesUpdateUserIdentityWithReason finished updating (cloudLibraryStateReason=%{public}@) for acco unt [%{public}@] with error=%{public}@ in %f seconds",  buf,  0x2Au);
  }

  if (!v4)
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification( DarwinNotifyCenter,  ICCloudClientEnableCloudLibraryFailureTypeChangedNotification,  0LL,  0LL,  1u);
  }

  id v12 = *(void **)(a1 + 48);
  if (v12)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    id v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_1000C3040;
    v15[3] = &unk_1001A6BB8;
    id v17 = v12;
    id v16 = v4;
    dispatch_async(v14, v15);
  }
}

uint64_t sub_1000C3030(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

uint64_t sub_1000C3040(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000C3050(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  id v7 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
  sub_1000C2890(v6, v7, 2LL, v5);
}

uint64_t sub_1000C30CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000C30DC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  id v4 = a2;
  [v3 removeObjectForKey:@"EnableCloudLibraryFailureReasonKey"];
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) removeObjectForKey:@"AutoEnableCloudLibraryFailureReasonKey"];
  [v4 setCloudLibraryStateReason:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void sub_1000C3154(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(*(void *)(a1[7] + 8LL) + 40LL);
    uint64_t v7 = a1[4];
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v8 timeIntervalSinceDate:a1[5]];
    *(_DWORD *)__int128 buf = 138544130;
    uint64_t v17 = v6;
    __int16 v18 = 2114;
    uint64_t v19 = v7;
    __int16 v20 = 2114;
    id v21 = v4;
    __int16 v22 = 2048;
    uint64_t v23 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "CloudLibraryUtilitiesUpdateAccountRemoveEnableICMLErrorReason finished updating (cloudLibraryStateReason=%{public} @) for %{public}@ with error=%{public}@ in %f seconds",  buf,  0x2Au);
  }

  uint64_t v10 = (void *)a1[6];
  if (v10)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_1000C32F4;
    v13[3] = &unk_1001A6BB8;
    id v15 = v10;
    id v14 = v4;
    dispatch_async(v12, v13);
  }
}

uint64_t sub_1000C32E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000C32F4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

uint64_t sub_1000C3304(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000C3314(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = a2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v4));
  if (v3)
  {
    [v3 setObject:v6 forKey:@"CloudLibraryStateReasonKey"];
  }

  else
  {
    uint64_t v7 = objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithObjectsAndKeys:",  v6,  @"CloudLibraryStateReasonKey",  0LL));
    uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8LL);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;
  }

  [a2 setCloudLibraryStateReason:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void sub_1000C3408(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(*(void *)(a1[7] + 8LL) + 40LL);
    uint64_t v7 = a1[4];
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v8 timeIntervalSinceDate:a1[5]];
    *(_DWORD *)__int128 buf = 138544130;
    uint64_t v17 = v6;
    __int16 v18 = 2114;
    uint64_t v19 = v7;
    __int16 v20 = 2114;
    id v21 = v4;
    __int16 v22 = 2048;
    uint64_t v23 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Finished updating cloudLibraryStateReason=%{public}@ for %{public}@ with error=%{public}@ in %f seconds",  buf,  0x2Au);
  }

  uint64_t v10 = (void *)a1[6];
  if (v10)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    id v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_1000C35A8;
    v13[3] = &unk_1001A6BB8;
    id v15 = v10;
    id v14 = v4;
    dispatch_async(v12, v13);
  }
}

uint64_t sub_1000C3598(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1000C35A8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1000C35B8(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 userIdentityStore]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 userIdentity]);

  id v20 = 0LL;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 getPropertiesForUserIdentity:v6 error:&v20]);
  id v8 = v20;
  if (!v8 && v7)
  {
    id v9 = (id)objc_claimAutoreleasedReturnValue([v7 cloudLibraryStateReason]);
    if (v3)
    {
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
      uint64_t v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000C377C;
      block[3] = &unk_1001A6BB8;
      id v16 = v3;
      id v9 = v9;
      id v15 = v9;
      dispatch_async(v11, block);
    }

    goto LABEL_7;
  }

  if (v3)
  {
    dispatch_queue_global_t v12 = dispatch_get_global_queue(0LL, 0LL);
    id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v12);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    void v17[2] = sub_1000C3768;
    v17[3] = &unk_1001A6BB8;
    id v19 = v3;
    id v18 = v8;
    dispatch_async(v13, v17);

    id v9 = v19;
LABEL_7:
  }
}

uint64_t sub_1000C3768(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  0LL,  *(void *)(a1 + 32));
}

uint64_t sub_1000C377C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32),  0LL);
}

id sub_1000C3790(void *a1)
{
  id v1 = a1;
  if ((MSVDeviceSupportsMultipleLibraries(v1) & 1) != 0)
  {
    id v2 = 0LL;
  }

  else
  {
    uint64_t v9 = 0LL;
    uint64_t v10 = &v9;
    uint64_t v11 = 0x2050000000LL;
    id v3 = (void *)qword_1001DB788;
    uint64_t v12 = qword_1001DB788;
    if (!qword_1001DB788)
    {
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      _DWORD v8[2] = sub_1000C389C;
      void v8[3] = &unk_1001A6978;
      void v8[4] = &v9;
      sub_1000C389C((uint64_t)v8);
      id v3 = (void *)v10[3];
    }

    id v4 = v3;
    _Block_object_dispose(&v9, 8);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v1 userIdentity]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 controllerWithUserIdentity:v5]);
    id v2 = [v6 isEnablingCloudLibraryDestructive];
  }

  return v2;
}

void sub_1000C3884( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

Class sub_1000C389C(uint64_t a1)
{
  uint64_t v6 = 0LL;
  if (!qword_1001DB790)
  {
    __int128 v7 = off_1001A5328;
    uint64_t v8 = 0LL;
    qword_1001DB790 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB790)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudLibraryUtilities.m",  38,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("MPCloudController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPCloudControllerClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudLibraryUtilities.m",  39,  @"Unable to find class %s",  "MPCloudController");

LABEL_10:
    __break(1u);
  }

  qword_1001DB788 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

id sub_1000C3A38()
{
  uint64_t v4 = 0LL;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000LL;
  id v0 = (void *)qword_1001DB798;
  uint64_t v7 = qword_1001DB798;
  if (!qword_1001DB798)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_1000C3AEC;
    v3[3] = &unk_1001A6978;
    void v3[4] = &v4;
    sub_1000C3AEC((uint64_t)v3);
    id v0 = (void *)v5[3];
  }

  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1000C3AD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

Class sub_1000C3AEC(uint64_t a1)
{
  uint64_t v6 = 0LL;
  if (!qword_1001DB7A0)
  {
    __int128 v7 = off_1001A5340;
    uint64_t v8 = 0LL;
    qword_1001DB7A0 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB7A0)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *AirTrafficDeviceLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudLibraryUtilities.m",  34,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("ATDeviceSettings");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getATDeviceSettingsClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudLibraryUtilities.m",  35,  @"Unable to find class %s",  "ATDeviceSettings");

LABEL_10:
    __break(1u);
  }

  qword_1001DB798 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_1000C3C88(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 userIdentity]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[ICPrivacyInfo sharedPrivacyInfoForUserIdentity:]( &OBJC_CLASS___ICPrivacyInfo,  "sharedPrivacyInfoForUserIdentity:",  v5));
  if (![v6 privacyAcknowledgementRequiredForMusic])
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionStatusController sharedStatusController]( &OBJC_CLASS___ICMusicSubscriptionStatusController,  "sharedStatusController"));
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1000C3EE4;
    void v12[3] = &unk_1001A52E0;
    uint64_t v10 = &v13;
    id v13 = v3;
    id v14 = (dispatch_queue_s *)v4;
    [v11 getSubscriptionStatusForUserIdentity:v5 bypassingCache:0 withCompletionHandler:v12];

    uint64_t v9 = v14;
    goto LABEL_7;
  }

  __int128 v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__int128 buf = 138412290;
    id v18 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Cant load subscription status because privacy acknowledgement is required for identity %{[ublic}@",  buf,  0xCu);
  }

  if (v4)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000C3E78;
    block[3] = &unk_1001A6BE0;
    uint64_t v10 = &v16;
    id v16 = v4;
    dispatch_async(v9, block);
LABEL_7:
  }
}

void sub_1000C3E78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError msv_errorWithDomain:code:debugDescription:]( &OBJC_CLASS___NSError,  "msv_errorWithDomain:code:debugDescription:",  ICErrorDomain,  -7007LL,  @"Privacy acknowledgement required to check subscription status"));
  (*(void (**)(uint64_t, void, void, id))(v1 + 16))(v1, 0LL, 0LL, v2);
}

void sub_1000C3EE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    __int128 v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v20 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Failed to load subscription status. error=%{public}@",  buf,  0xCu);
    }

    LOBYTE(v_Block_object_dispose(va, 8) = 0;
    LOBYTE(v9) = 0;
  }

  else
  {
    unsigned int v9 = [v5 hasCapability:1];
    unsigned int v8 = [v5 isMatchEnabled];
    __int128 v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
      *(_DWORD *)__int128 buf = 138543874;
      id v20 = v10;
      __int16 v21 = 1024;
      unsigned int v22 = v9;
      __int16 v23 = 1024;
      unsigned int v24 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ has AM subscription enabled=%{BOOL}u, Match subscription enabled=%{BOOL}u",  buf,  0x18u);
    }
  }

  uint64_t v11 = *(void **)(a1 + 40);
  if (v11)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    id v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000C40F0;
    block[3] = &unk_1001A52B8;
    id v16 = v11;
    char v17 = v9;
    char v18 = v8;
    id v15 = v6;
    dispatch_async(v13, block);
  }
}

uint64_t sub_1000C40F0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(unsigned __int8 *)(a1 + 49),  *(void *)(a1 + 32));
}

uint64_t sub_1000C4848(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v14 = 16LL;
        goto LABEL_29;
      case 2u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0LL;
        *(_BYTE *)(a1 + 36) |= 1u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1LL || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v20 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if (v20 < 0)
            {
              v16 += 7;
              BOOL v9 = v17++ >= 9;
              if (v9)
              {
                uint64_t v18 = 0LL;
                goto LABEL_40;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v18 = 0LL;
        }
LABEL_40:
        *(void *)(a1 + _Block_object_dispose(va, 8) = v18;
        continue;
      case 3u:
        uint64_t v21 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v21);
        uint64_t v14 = 24LL;
LABEL_29:
        unsigned int v22 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        continue;
      case 4u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0LL;
        *(_BYTE *)(a1 + 36) |= 2u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        continue;
    }

    while (1)
    {
      unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v26 == -1LL || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
      v25 |= (unint64_t)(v27 & 0x7F) << v23;
      if ((v27 & 0x80) == 0) {
        goto LABEL_42;
      }
      v23 += 7;
      BOOL v9 = v24++ >= 9;
      if (v9)
      {
        LODWORD(v25) = 0;
        goto LABEL_44;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v25) = 0;
    }
LABEL_44:
    *(_DWORD *)(a1 + 32) = v25;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000C568C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
}

uint64_t sub_1000C5778(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000C5788(uint64_t a1)
{
}

void sub_1000C5790(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "SDK");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), v8);
    int v10 = NSStringFromClass(v9);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    uint64_t v12 = *(void **)(a1 + 32);
    id v13 = [v12 method];
    uint64_t v14 = @"POST";
    if (!v13) {
      uint64_t v14 = @"GET";
    }
    id v29 = v14;
    id v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) action]);
    unsigned int v17 = (objc_class *)objc_opt_class(v5, v16);
    uint64_t v18 = NSStringFromClass(v17);
    unint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    id v20 = [v5 responseCode];
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    *(_DWORD *)__int128 buf = 138545154;
    id v31 = v11;
    __int16 v32 = 2048;
    uint64_t v33 = v12;
    __int16 v34 = 2114;
    id v35 = v29;
    __int16 v36 = 2114;
    unsigned __int8 v37 = v15;
    __int16 v38 = 2114;
    uint64_t v39 = v19;
    __int16 v40 = 2048;
    id v41 = v5;
    __int16 v42 = 2048;
    id v43 = v20;
    __int16 v44 = 2048;
    id v45 = [v21 length];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x52u);
  }

  if (v6)
  {
    unsigned int v22 = os_log_create("com.apple.amp.itunescloudd", "SDK");
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v31 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "SagaCloudSDKAddOperation failed with error: %{public}@",  buf,  0xCu);
    }
  }

  uint64_t v23 = *(void *)(*(void *)(a1 + 48) + 8LL);
  unsigned int v24 = *(void **)(v23 + 40);
  *(void *)(v23 + 40) = v5;
  id v25 = v5;

  uint64_t v26 = *(void *)(*(void *)(a1 + 56) + 8LL);
  char v27 = *(void **)(v26 + 40);
  *(void *)(v26 + 40) = v6;
  id v28 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void *sub_1000C59EC(void *a1)
{
  id v5 = 0LL;
  if (!qword_1001DB7B0)
  {
    __int128 v6 = off_1001A53B8;
    uint64_t v7 = 0LL;
    qword_1001DB7B0 = _sl_dlopen(&v6, &v5);
  }

  id v2 = (void *)qword_1001DB7B0;
  if (!qword_1001DB7B0)
  {
    a1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( a1,  "handleFailureInFunction:file:lineNumber:description:",  v2,  @"SagaCloudSDKAddOperation.m",  30,  @"%s",  v5);

    __break(1u);
    goto LABEL_7;
  }

  id v3 = v5;
  if (v5) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "MPErrorDomain");
  *(void *)(*(void *)(a1[4] + 8LL) + 24LL) = result;
  qword_1001DB7A8 = *(void *)(*(void *)(a1[4] + 8LL) + 24LL);
  return result;
}

uint64_t sub_1000C5B20(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, *(void *)(a1 + 32), a2);
  }
  return result;
}

void sub_1000C633C(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v9 = 134218240;
    uint64_t v10 = v5;
    __int16 v11 = 2048;
    id v12 = [v3 responseCode];
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%p received response status code: %lu",  (uint8_t *)&v9,  0x16u);
  }

  __int128 v6 = *(void **)(a1 + 40);
  uint64_t v7 = (uint64_t)[v3 responseCode];
  if (v7 > 399)
  {
    if (v7 != 404 && v7 != 400) {
      goto LABEL_10;
    }
    uint64_t v8 = 3LL;
  }

  else
  {
    uint64_t v8 = 1LL;
    if (v7 != 200 && v7 != 204) {
LABEL_10:
    }
      uint64_t v8 = 2LL;
  }

  [v6 setStatus:v8];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

LABEL_55:
    memset(&v154[8], 0, 64);
    *(void *)uint64_t v154 = v152;
    if (v152 > 3000)
    {
      if (v152 > 4000)
      {
        switch(v152)
        {
          case 4001LL:
            CC_SHA1_Final(&v154[8], (CC_SHA1_CTX *)&v153);
            break;
          case 4256LL:
            CC_SHA256_Final(&v154[8], (CC_SHA256_CTX *)&v153);
            break;
          case 4512LL:
            CC_SHA512_Final(&v154[8], &v153);
            break;
        }

        goto LABEL_102;
      }

      if (v152 != 3001)
      {
        if (v152 == 4000) {
          CC_MD5_Final(&v154[8], (CC_MD5_CTX *)&v153);
        }
LABEL_102:
        v155[0] = *(_OWORD *)v154;
        v155[1] = *(_OWORD *)&v154[16];
        v155[2] = *(_OWORD *)&v154[32];
        v155[3] = *(_OWORD *)&v154[48];
        id v156 = *(void *)&v154[64];
        if (*(uint64_t *)v154 > 3999)
        {
          if (*(uint64_t *)v154 > 4255)
          {
            if (*(void *)v154 == 4256LL)
            {
              unsigned int v134 = (unsigned __int8 *)v155 + 8;
              id v135 = (char *)calloc(0x40uLL, 1uLL);
              BOOL v136 = v135;
              for (unint64_t i = 0LL; i != 64; i += 2LL)
              {
                id v138 = *v134++;
                uint64_t v139 = &v135[i];
                void *v139 = a0123456789abcd[(unint64_t)v138 >> 4];
                v139[1] = a0123456789abcd[v138 & 0xF];
              }

              id v105 = objc_alloc((Class)v16[47]);
              uint64_t v106 = v136;
              id v107 = 64LL;
            }

            else
            {
              if (*(void *)v154 != 4512LL) {
                goto LABEL_150;
              }
              uint64_t v112 = (unsigned __int8 *)v155 + 8;
              v113 = (char *)calloc(0x80uLL, 1uLL);
              id v114 = v113;
              for (j = 0LL; j != 128; j += 2LL)
              {
                id v116 = *v112++;
                unsigned int v117 = &v113[j];
                *unsigned int v117 = a0123456789abcd[(unint64_t)v116 >> 4];
                v117[1] = a0123456789abcd[v116 & 0xF];
              }

              id v105 = objc_alloc((Class)v16[47]);
              uint64_t v106 = v114;
              id v107 = 128LL;
            }
          }

          else if (*(void *)v154 == 4000LL)
          {
            uint64_t v124 = (unsigned __int8 *)v155 + 8;
            v125 = (char *)calloc(0x20uLL, 1uLL);
            id v126 = v125;
            for (k = 0LL; k != 32; k += 2LL)
            {
              v128 = *v124++;
              id v129 = &v125[k];
              *id v129 = a0123456789abcd[(unint64_t)v128 >> 4];
              v129[1] = a0123456789abcd[v128 & 0xF];
            }

            id v105 = objc_alloc((Class)v16[47]);
            uint64_t v106 = v126;
            id v107 = 32LL;
          }

          else
          {
            if (*(void *)v154 != 4001LL) {
              goto LABEL_150;
            }
            id v99 = (unsigned __int8 *)v155 + 8;
            unsigned int v100 = (char *)calloc(0x28uLL, 1uLL);
            id v101 = v100;
            for (m = 0LL; m != 40; m += 2LL)
            {
              id v103 = *v99++;
              id v104 = &v100[m];
              *id v104 = a0123456789abcd[(unint64_t)v103 >> 4];
              v104[1] = a0123456789abcd[v103 & 0xF];
            }

            id v105 = objc_alloc((Class)v16[47]);
            uint64_t v106 = v101;
            id v107 = 40LL;
          }
        }

        else
        {
          if (*(uint64_t *)v154 <= 2999)
          {
            if (*(void *)v154 == 1000LL)
            {
              id v118 = *((void *)&v155[0] + 1);
              uint64_t v119 = (char *)v158 + 1;
              quot = *((void *)&v155[0] + 1);
              do
              {
                uint64_t v121 = lldiv(quot, 10LL);
                quot = v121.quot;
                if (v121.rem >= 0) {
                  LOBYTE(v122) = v121.rem;
                }
                else {
                  id v122 = -v121.rem;
                }
                *(v119 - 2) = v122 + 48;
                unsigned int v98 = (const UInt8 *)(v119 - 2);
                --v119;
              }

              while (v121.quot);
              if (v118 < 0)
              {
                *(v119 - 2) = 45;
                unsigned int v98 = (const UInt8 *)(v119 - 2);
              }

              __int128 v97 = (char *)((char *)v158 - (char *)v98);
              goto LABEL_136;
            }

            if (*(void *)v154 == 2000LL)
            {
              id v93 = DWORD2(v155[0]);
              id v94 = v158;
              do
              {
                id v95 = ldiv(v93, 10LL);
                id v93 = v95.quot;
                if (v95.rem >= 0) {
                  LOBYTE(v96) = v95.rem;
                }
                else {
                  id v96 = -v95.rem;
                }
                *((_BYTE *)v94 - 1) = v96 + 48;
                id v94 = (void *)((char *)v94 - 1);
              }

              while (v95.quot);
              __int128 v97 = (char *)((char *)v158 - (char *)v94);
              unsigned int v98 = (const UInt8 *)v94;
LABEL_136:
              unsigned int v123 = CFStringCreateWithBytes(0LL, v98, (CFIndex)v97, 0x8000100u, 0);
LABEL_147:
              id v140 = v123;
LABEL_148:

              hashedDSID = v8->_hashedDSID;
              v8->_hashedDSID = &v140->isa;

              id v142 = v16[47];
              id v143 = v8->_hashedDSID;
              id v144 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  -[ICMusicSubscriptionStatus statusType](v8->_subscriptionStatus, "statusType")));
              id v145 = objc_claimAutoreleasedReturnValue([v142 stringWithFormat:@"%@-%@", v143, v144]);
              cacheKey = v8->_cacheKey;
              v8->_cacheKey = (NSString *)v145;

              goto LABEL_149;
            }

LABEL_150:
            uint64_t v148 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
            id v149 = (void *)objc_claimAutoreleasedReturnValue( [v16[47] stringWithUTF8String:"NSString * _Nonnull _MSVHashGetDigest(MSVHash)"]);
            [v148 handleFailureInFunction:v149 file:@"MSVHasher+Algorithms.h" lineNumber:356 description:@"Cannot obtain digest from unknown hasher algorithm"];

            id v140 = &stru_1001A7960;
            goto LABEL_148;
          }

          if (*(void *)v154 == 3000LL)
          {
            LODWORD(v157[0]) = bswap32(DWORD2(v155[0]));
            id v130 = (char *)calloc(8uLL, 1uLL);
            uint64_t v131 = 0LL;
            v132 = v130 + 1;
            do
            {
              id v133 = *((unsigned __int8 *)v157 + v131);
              *(v132 - 1) = a0123456789abcd[v133 >> 4];
              void *v132 = a0123456789abcd[v133 & 0xF];
              v132 += 2;
              ++v131;
            }

            while (v131 != 4);
            id v105 = objc_alloc((Class)v16[47]);
            uint64_t v106 = v130;
            id v107 = 8LL;
          }

          else
          {
            if (*(void *)v154 != 3001LL) {
              goto LABEL_150;
            }
            v157[0] = bswap64(*((unint64_t *)&v155[0] + 1));
            uint64_t v108 = (char *)calloc(0x10uLL, 1uLL);
            uint64_t v109 = 0LL;
            __int16 v110 = v108 + 1;
            do
            {
              id v111 = *((unsigned __int8 *)v157 + v109);
              *(v110 - 1) = a0123456789abcd[v111 >> 4];
              *__int16 v110 = a0123456789abcd[v111 & 0xF];
              v110 += 2;
              ++v109;
            }

            while (v109 != 8);
            id v105 = objc_alloc((Class)v16[47]);
            uint64_t v106 = v108;
            id v107 = 16LL;
          }
        }

        unsigned int v123 = (CFStringRef)[v105 initWithBytesNoCopy:v106 length:v107 encoding:4 freeWhenDone:1];
        goto LABEL_147;
      }

      if (v153.count[0] < 0x20) {
        uint64_t v74 = v153.hash[1] + 0x27D4EB2F165667C5LL;
      }
      else {
        uint64_t v74 = 0x9E3779B185EBCA87LL
      }
            * ((0x9E3779B185EBCA87LL
              * ((0x9E3779B185EBCA87LL
                * ((0x9E3779B185EBCA87LL
                  * ((__ROR8__(v153.hash[0], 57)
                    + __ROR8__(v153.count[1], 63)
                    + __ROR8__(v153.hash[1], 52)
                    + __ROR8__(v153.hash[2], 46)) ^ (0x9E3779B185EBCA87LL
                                                   * __ROR8__(0xC2B2AE3D27D4EB4FLL * v153.count[1], 33)))
                  - 0x7A1435883D4D519DLL) ^ (0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * v153.hash[0], 33)))
                - 0x7A1435883D4D519DLL) ^ (0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * v153.hash[1], 33)))
              - 0x7A1435883D4D519DLL) ^ (0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * v153.hash[2], 33)))
            - 0x7A1435883D4D519DLL;
      uint64_t v75 = v74 + v153.count[0];
      id v76 = &v153.hash[3];
      id v77 = v153.count[0] & 0x1F;
      if (v77 >= 8)
      {
        do
        {
          __int128 v78 = *v76++;
          uint64_t v75 = 0x85EBCA77C2B2AE63LL
              - 0x61C8864E7A143579LL
              * __ROR8__((0x9E3779B185EBCA87LL * __ROR8__(0xC2B2AE3D27D4EB4FLL * v78, 33)) ^ v75, 37);
          v77 -= 8LL;
        }

        while (v77 > 7);
      }

      if (v77 >= 4)
      {
        __int128 v79 = *(_DWORD *)v76;
        id v76 = (CC_LONG64 *)((char *)v76 + 4);
        uint64_t v75 = 0x165667B19E3779F9LL - 0x3D4D51C2D82B14B1LL * __ROR8__((0x9E3779B185EBCA87LL * v79) ^ v75, 41);
        v77 -= 4LL;
      }

      for (; v77; --v77)
      {
        __int128 v80 = *(unsigned __int8 *)v76;
        id v76 = (CC_LONG64 *)((char *)v76 + 1);
        uint64_t v75 = 0x9E3779B185EBCA87LL * __ROR8__((0x27D4EB2F165667C5LL * v80) ^ v75, 53);
      }

      __int128 v81 = 0x165667B19E3779F9LL
          * ((0xC2B2AE3D27D4EB4FLL * (v75 ^ (v75 >> 33))) ^ ((0xC2B2AE3D27D4EB4FLL * (v75 ^ (v75 >> 33))) >> 29));
      id v69 = v81 ^ HIDWORD(v81);
LABEL_89:
      *(void *)&v154[8] = v69;
      goto LABEL_102;
    }

    if (v152 <= 1999)
    {
      if (!v152)
      {
        uint64_t v71 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
        id v72 = (void *)objc_claimAutoreleasedReturnValue( [v16[47] stringWithUTF8String:"MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)"]);
        [v71 handleFailureInFunction:v72 file:@"MSVHasher+Algorithms.h" lineNumber:156 description:@"Cannot finalize unknown hasher algorithm"];

        goto LABEL_102;
      }

      if (v152 != 1000) {
        goto LABEL_102;
      }
      uint64_t v39 = (v153.count[0] + v153.count[1]) ^ __ROR8__(v153.count[1], 51);
      __int16 v40 = v153.hash[0] + (v153.hash[1] ^ v153.hash[2]);
      id v41 = __ROR8__(v153.hash[1] ^ v153.hash[2], 48);
      __int16 v42 = (v40 ^ v41) + __ROR8__(v153.count[0] + v153.count[1], 32);
      id v43 = v42 ^ __ROR8__(v40 ^ v41, 43);
      __int16 v44 = v40 + v39;
      id v45 = v44 ^ __ROR8__(v39, 47);
      id v46 = (v42 ^ v153.hash[2]) + v45;
      id v47 = v46 ^ __ROR8__(v45, 51);
      id v48 = (__ROR8__(v44, 32) ^ 0xFFLL) + v43;
      id v49 = __ROR8__(v43, 48);
      id v50 = __ROR8__(v46, 32) + (v48 ^ v49);
      id v51 = v50 ^ __ROR8__(v48 ^ v49, 43);
      id v52 = v47 + v48;
      uint64_t v53 = v52 ^ __ROR8__(v47, 47);
      int v54 = v53 + v50;
      id v55 = v54 ^ __ROR8__(v53, 51);
      id v56 = __ROR8__(v52, 32) + v51;
      uint64_t v57 = __ROR8__(v51, 48);
      id v58 = __ROR8__(v54, 32) + (v56 ^ v57);
      uint64_t v59 = v58 ^ __ROR8__(v56 ^ v57, 43);
      unint64_t v60 = v55 + v56;
      id v61 = v60 ^ __ROR8__(v55, 47);
      uint64_t v62 = v61 + v58;
      id v63 = v62 ^ __ROR8__(v61, 51);
      unint64_t v64 = __ROR8__(v60, 32) + v59;
      id v65 = __ROR8__(v59, 48);
      __int16 v66 = __ROR8__(v62, 32) + (v64 ^ v65);
      id v67 = v66 ^ __ROR8__(v64 ^ v65, 43);
      id v68 = v63 + v64;
      v153.count[0] = v66;
      v153.count[1] = v68 ^ __ROR8__(v63, 47);
      v153.hash[0] = __ROR8__(v68, 32);
      v153.hash[1] = v67;
      id v69 = v153.count[1] ^ v66 ^ v153.hash[0] ^ v67;
      goto LABEL_89;
    }

    if (v152 != 2000)
    {
      if (v152 != 3000) {
        goto LABEL_102;
      }
      if (HIDWORD(v153.count[0])) {
        uint64_t v70 = vaddvq_s32((int32x4_t)vorrq_s8( (int8x16_t)vshlq_u32(*(uint32x4_t *)&v153.count[1], (uint32x4_t)xmmword_10013B560),  (int8x16_t)vshlq_u32(*(uint32x4_t *)&v153.count[1], (uint32x4_t)xmmword_10013B550)));
      }
      else {
        uint64_t v70 = LODWORD(v153.hash[0]) + 374761393;
      }
      id v82 = LODWORD(v153.count[0]) + v70;
      uint64_t v83 = &v153.hash[1];
      CC_LONG64 v84 = v153.hash[3] & 0xF;
      if (v84 >= 4)
      {
        do
        {
          id v85 = *(_DWORD *)v83;
          uint64_t v83 = (CC_LONG64 *)((char *)v83 + 4);
          HIDWORD(v86) = v82 - 1028477379 * v85;
          LODWORD(v86) = HIDWORD(v86);
          id v82 = 668265263 * (v86 >> 15);
          v84 -= 4LL;
        }

        while (v84 > 3);
      }

      for (; v84; --v84)
      {
        id v87 = *(unsigned __int8 *)v83;
        uint64_t v83 = (CC_LONG64 *)((char *)v83 + 1);
        HIDWORD(v8_Block_object_dispose((const void *)(v33 - 224), 8) = v82 + 374761393 * v87;
        LODWORD(v8_Block_object_dispose((const void *)(v33 - 224), 8) = HIDWORD(v88);
        id v82 = -1640531535 * (v88 >> 21);
      }

      id v89 = (-2048144777 * (v82 ^ (v82 >> 15))) ^ ((-2048144777 * (v82 ^ (v82 >> 15))) >> 13);
      id v90 = (-1028477379 * v89) ^ ((-1028477379 * v89) >> 16);
      goto LABEL_101;
    }

    switch(BYTE3(v153.count[1]))
    {
      case 1u:
        id v73 = LOBYTE(v153.count[1]);
        break;
      case 2u:
        id v73 = LOWORD(v153.count[1]);
        break;
      case 3u:
        id v73 = LOWORD(v153.count[1]) | (BYTE2(v153.count[1]) << 16);
        break;
      default:
        id v91 = v153.count[0];
        goto LABEL_100;
    }

    id v91 = (461845907 * ((380141568 * v73) | ((-862048943 * v73) >> 17))) ^ LODWORD(v153.count[0]);
LABEL_100:
    id v92 = -2048144789 * (v91 ^ HIDWORD(v153.count[0]) ^ ((v91 ^ HIDWORD(v153.count[0])) >> 16));
    id v90 = (-1028477387 * (v92 ^ (v92 >> 13))) ^ ((-1028477387 * (v92 ^ (v92 >> 13))) >> 16);
    LODWORD(v153.count[0]) = v90;
LABEL_101:
    *(_DWORD *)&v154[8] = v90;
    goto LABEL_102;
  }

LABEL_149:
  return v8;
}

void sub_1000C8C4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000C8CD8;
  v6[3] = &unk_1001A54C8;
  int v8 = *(_DWORD *)(a1 + 40);
  void v6[4] = v4;
  id v7 = v3;
  id v5 = v3;
  [v4 _performMusicUserProfileRequestWithUserProfileContext:v5 ignoreCache:1 completion:v6];
}

void sub_1000C8CD8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(void **)(a1 + 40);
  int v9 = *(dispatch_queue_s **)(v7 + 16);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_1000C8D9C;
  block[3] = &unk_1001A54A0;
  block[1] = 3221225472LL;
  id v13 = v6;
  uint64_t v14 = v7;
  int v17 = *(_DWORD *)(a1 + 48);
  id v15 = v8;
  id v16 = v5;
  id v10 = v5;
  id v11 = v6;
  dispatch_async(v9, block);
}

void sub_1000C8D9C(uint64_t a1)
{
  if (*(void *)(a1 + 32)
    && objc_msgSend(*(id *)(a1 + 40), "_errorIsRecoverable:")
    && *(_DWORD *)(a1 + 64) <= 2u)
  {
    id v2 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      int v3 = *(_DWORD *)(a1 + 64) + 1;
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v4 = *(void *)(a1 + 40);
      int v16 = 134218498;
      uint64_t v17 = v4;
      __int16 v18 = 1024;
      *(_DWORD *)unint64_t v19 = v3;
      *(_WORD *)&void v19[4] = 2112;
      *(void *)&v19[6] = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "<ICDMusicUserSocialProfileProvider: %p> Error is recoverable, retrying attempt %u in background. error=%@",  (uint8_t *)&v16,  0x1Cu);
    }

    [*(id *)(*(void *)(a1 + 40) + 8) addObject:*(void *)(a1 + 48)];
    objc_msgSend(*(id *)(a1 + 40), "_onQueue_setupRetrySourceForAttempt:", (*(_DWORD *)(a1 + 64) + 1));
  }

  else
  {
    [*(id *)(*(void *)(a1 + 40) + 8) removeObject:*(void *)(a1 + 48)];
    if (![*(id *)(*(void *)(a1 + 40) + 8) count])
    {
      objc_msgSend(*(id *)(a1 + 40), "_onQueue_teardownRetrySource");
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[ICEnvironmentMonitor sharedMonitor](&OBJC_CLASS___ICEnvironmentMonitor, "sharedMonitor"));
      [v6 unregisterObserver:*(void *)(a1 + 40)];
    }

    id v7 = *(id *)(*(void *)(a1 + 40) + 32LL);
    int v8 = v7;
    if (*(void *)(a1 + 32)
      || ![v7 conformsToProtocol:&OBJC_PROTOCOL___ICDMusicUserSocialProfileProviderDelegate])
    {
      id v13 = os_log_create("com.apple.amp.itunescloudd", "UserState");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        uint64_t v15 = *(void *)(a1 + 32);
        uint64_t v14 = *(void *)(a1 + 40);
        int v16 = 134218242;
        uint64_t v17 = v14;
        __int16 v18 = 2112;
        *(void *)unint64_t v19 = v15;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "<ICDMusicUserSocialProfileProvider: %p> Error is unrecoverable - dropping retry. error=%@",  (uint8_t *)&v16,  0x16u);
      }
    }

    else
    {
      int v9 = os_log_create("com.apple.amp.itunescloudd", "UserState");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v10 = *(void *)(a1 + 40);
        uint64_t v11 = *(void *)(a1 + 56);
        int v16 = 134218498;
        uint64_t v17 = v10;
        __int16 v18 = 2114;
        *(void *)unint64_t v19 = v8;
        *(_WORD *)&v19[8] = 2114;
        *(void *)&v19[10] = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "<ICDMusicUserSocialProfileProvider: %p> Updating delegate %{public}@ with profile %{public}@",  (uint8_t *)&v16,  0x20u);
      }

      uint64_t v12 = *(void *)(a1 + 56);
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) storeRequestContext]);
      [v8 updateUserProfile:v12 forRequestContext:v13];
    }
  }

void sub_1000C9030(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    int v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICEnvironmentMonitor sharedMonitor](&OBJC_CLASS___ICEnvironmentMonitor, "sharedMonitor"));
    unsigned int v4 = [v3 isRemoteServerLikelyReachable];

    if (v4)
    {
      objc_msgSend(WeakRetained, "_onQueue_retryPendingUpdateAttempt:", *(unsigned int *)(a1 + 48));
    }

    else
    {
      uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "UserState");
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *(void *)(a1 + 32);
        int v8 = 134217984;
        uint64_t v9 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "<ICDMusicUserSocialProfileProvider: %p> Postponing retry for favorable environment",  (uint8_t *)&v8,  0xCu);
      }

      id v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICEnvironmentMonitor sharedMonitor](&OBJC_CLASS___ICEnvironmentMonitor, "sharedMonitor"));
      [v7 registerObserver:*(void *)(a1 + 32)];

      objc_msgSend(WeakRetained, "_onQueue_teardownRetrySource");
    }
  }
}

void sub_1000C915C(uint64_t a1, void *a2)
{
  int v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v11 = (id)objc_claimAutoreleasedReturnValue([v3 clientInfo]);
  uint64_t v5 = (void *)MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID();
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v11 clientIdentifier]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v11 clientVersion]);
  int v8 = (void *)objc_claimAutoreleasedReturnValue( +[ICClientInfo clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:]( &OBJC_CLASS___ICClientInfo,  "clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:",  v6,  v7,  v5));

  [v4 setClientInfo:v8];
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identity]);
  [v4 setIdentity:v9];

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identityStore]);
  [v4 setIdentityStore:v10];
}

void sub_1000C925C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "UserState_Oversize");
  int v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = a1[4];
      uint64_t v10 = a1[5];
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
      int v22 = 134219011;
      uint64_t v23 = v9;
      __int16 v24 = 2114;
      uint64_t v25 = v10;
      __int16 v26 = 2114;
      id v27 = v5;
      __int16 v28 = 2114;
      id v29 = v6;
      __int16 v30 = 2113;
      id v31 = v11;
      uint64_t v12 = "<ICDMusicUserSocialProfileProvider: %p> Encountered error for MusicKit request %{public}@. response=%{public"
            "}@ error=%{public}@ responseBody=%{private}@";
      id v13 = v8;
      os_log_type_t v14 = OS_LOG_TYPE_ERROR;
      uint32_t v15 = 52;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v13, v14, v12, (uint8_t *)&v22, v15);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = a1[4];
    uint64_t v17 = a1[5];
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
    int v22 = 134218755;
    uint64_t v23 = v16;
    __int16 v24 = 2114;
    uint64_t v25 = v17;
    __int16 v26 = 2114;
    id v27 = v5;
    __int16 v28 = 2113;
    id v29 = v11;
    uint64_t v12 = "<ICDMusicUserSocialProfileProvider: %p> Received response for MusicKit request: %{public}@. response=%{public}"
          "@ responseBody=%{private}@";
    id v13 = v8;
    os_log_type_t v14 = OS_LOG_TYPE_DEFAULT;
    uint32_t v15 = 42;
    goto LABEL_6;
  }

  (*(void (**)(void, id, id, uint64_t, uint64_t, uint64_t, uint64_t))(a1[6] + 16LL))( a1[6],  v5,  v6,  v18,  v19,  v20,  v21);
}

void sub_1000C9408(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

  else
  {
    if ([v5 statusCode] == (id)200)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 parsedBodyDictionary]);
      id v8 = [[ICMusicUserProfile alloc] initWithMediaAPIResponse:v7];
      if (v8)
      {
        uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "UserState");
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v20 = *(void *)(a1 + 32);
          uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v8 name]);
          id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 handle]);
          unsigned int v19 = [v8 collaborationAllowed];
          unsigned int v12 = [v8 isOnboarded];
          id v13 = (void *)objc_claimAutoreleasedReturnValue([v8 socialProfileID]);
          os_log_type_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 socialProfile]);
          *(_DWORD *)__int128 buf = 134219779;
          uint64_t v22 = v20;
          __int16 v23 = 2048;
          id v24 = v8;
          __int16 v25 = 2113;
          __int16 v26 = v10;
          __int16 v27 = 2113;
          __int16 v28 = v11;
          __int16 v29 = 1024;
          unsigned int v30 = v19;
          __int16 v31 = 1024;
          unsigned int v32 = v12;
          __int16 v33 = 2113;
          __int16 v34 = v13;
          __int16 v35 = 2114;
          __int16 v36 = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "<ICDMusicUserSocialProfileProvider: %p> Created <ICMusicUserProfile %p> name=%{private}@ handle=%{private}@ collaborationAllowed=%{BOOL}u isOnboarded=%{BOOL}u socialProfileID=%{private}@ socialProfile=%{public}@",  buf,  0x4Au);
        }
      }

      uint32_t v15 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"data"]);

      if (v15) {
        [*(id *)(a1 + 32) _cacheResponse:v7 forContext:*(void *)(a1 + 40)];
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    }

    else
    {
      uint64_t v16 = os_log_create("com.apple.amp.itunescloudd", "UserState");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        uint64_t v17 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 134217984;
        uint64_t v22 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "<ICDMusicUserSocialProfileProvider: %p> Failed to create user profile from response.",  buf,  0xCu);
      }

      uint64_t v18 = *(void *)(a1 + 48);
      id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7102LL,  0LL));
      (*(void (**)(uint64_t, void, void *))(v18 + 16))(v18, 0LL, v7);
    }
  }
}

id sub_1000C96E8(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "UserState_Oversize");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    unsigned int v4 = [*(id *)(a1 + 40) isRemoteServerLikelyReachable];
    int v6 = 134218240;
    uint64_t v7 = v3;
    __int16 v8 = 1024;
    unsigned int v9 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEBUG,  "<ICDMusicUserSocialProfileProvider: %p> environmentMonitorDidChangeNetworkReachability remoteServerLikelyReachable=%{BOOL}u",  (uint8_t *)&v6,  0x12u);
  }

  return objc_msgSend(*(id *)(a1 + 32), "_onQueue_retryPendingUpdateAttempt:", 0);
}

void sub_1000C97BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "UserState");
    __int16 v8 = v7;
    if (v6)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v9 = *(void *)(a1 + 32);
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
        *(_DWORD *)__int128 buf = 134218498;
        uint64_t v35 = v9;
        __int16 v36 = 2114;
        id v37 = v5;
        __int16 v38 = 2114;
        id v39 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "<ICDMusicUserSocialProfileProvider: %p> Subscription status request completed with response: %{public}@ error=%{public}@",  buf,  0x20u);
      }
    }

    else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 134218242;
      uint64_t v35 = v15;
      __int16 v36 = 2114;
      id v37 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "<ICDMusicUserSocialProfileProvider: %p> Subscription status request completed with response: %{public}@",  buf,  0x16u);
    }

    uint64_t v16 = objc_alloc(&OBJC_CLASS___ICDMusicUserSocialProfileRequestContext);
    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v5 subscriptionStatus]);
    unsigned int v19 = -[ICDMusicUserSocialProfileRequestContext initWithStoreRequestContext:subscriptionStatus:]( v16,  "initWithStoreRequestContext:subscriptionStatus:",  v17,  v18);

    uint64_t v20 = *(void **)(a1 + 32);
    if (*(_BYTE *)(a1 + 56))
    {
      [v20 _clearCacheForContext:v19];
    }

    else
    {
      uint64_t v26 = objc_claimAutoreleasedReturnValue([v20 _getCachedResponseForContext:v19]);
      if (v26)
      {
        __int16 v25 = (void *)v26;
        __int16 v27 = os_log_create("com.apple.amp.itunescloudd", "UserState_Oversize");
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v28 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 134218243;
          uint64_t v35 = v28;
          __int16 v36 = 2113;
          id v37 = v25;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "<ICDMusicUserSocialProfileProvider: %p> Short-circuiting with cached response: %{private}@.",  buf,  0x16u);
        }

        uint64_t v29 = *(void *)(a1 + 48);
        id v30 = [[ICMusicUserProfile alloc] initWithMediaAPIResponse:v25];
        (*(void (**)(uint64_t, id, void))(v29 + 16))(v29, v30, 0LL);

        goto LABEL_18;
      }
    }

    uint64_t v21 = *(void **)(a1 + 32);
    uint64_t v22 = *(unsigned __int8 *)(a1 + 56);
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    void v31[2] = sub_1000C9B70;
    void v31[3] = &unk_1001A53D8;
    id v23 = *(id *)(a1 + 48);
    uint64_t v24 = *(void *)(a1 + 32);
    id v33 = v23;
    void v31[4] = v24;
    unsigned int v32 = v19;
    [v21 _performMusicUserProfileRequestWithUserProfileContext:v32 ignoreCache:v22 completion:v31];

    __int16 v25 = v33;
LABEL_18:

LABEL_19:
    goto LABEL_20;
  }

  id v11 = os_log_create("com.apple.amp.itunescloudd", "UserState");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identity]);
    *(_DWORD *)__int128 buf = 134218499;
    uint64_t v35 = v12;
    __int16 v36 = 2113;
    id v37 = v13;
    __int16 v38 = 2114;
    id v39 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "<ICDMusicUserSocialProfileProvider: %p> Failed to fetch subscription status for identity=%{private}@ error=%{public}@",  buf,  0x20u);
  }

  uint64_t v14 = *(void *)(a1 + 48);
  if (!v6)
  {
    unsigned int v19 = (ICDMusicUserSocialProfileRequestContext *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
    (*(void (**)(uint64_t, void, ICDMusicUserSocialProfileRequestContext *))(v14 + 16))(v14, 0LL, v19);
    goto LABEL_19;
  }

  (*(void (**)(uint64_t, void, id))(v14 + 16))(v14, 0LL, v6);
LABEL_20:
}

void sub_1000C9B70(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
  if (v6)
  {
    v7();
    if ([*(id *)(a1 + 32) _errorIsRecoverable:v6])
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void **)(a1 + 40);
      uint64_t v10 = *(dispatch_queue_s **)(v8 + 16);
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472LL;
      void v11[2] = sub_1000C9C44;
      void v11[3] = &unk_1001A6C30;
      void v11[4] = v8;
      id v12 = v9;
      dispatch_async(v10, v11);
    }
  }

  else
  {
    v7();
  }
}

id sub_1000C9C44(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_onQueue_setupRetrySourceForAttempt:", 0);
}

void sub_1000CA6B4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) badgeActionMetricsEventForIdentifier:@"appIcon"]);
  if (v2)
  {
    uint64_t v3 = v2;
    [*(id *)(a1 + 32) enqueueMetricsEvent:v2];
    [*(id *)(a1 + 32) clearBadgeActionMetricsEventForIdentifier:@"appIcon"];
    id v2 = v3;
  }
}

BOOL sub_1000CAB0C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t String = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v14 = 8LL;
LABEL_21:
        uint64_t v16 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_23;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    uint64_t v15 = PBReaderReadString(a2);
    uint64_t v13 = objc_claimAutoreleasedReturnValue(v15);
    uint64_t v14 = 16LL;
    goto LABEL_21;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1000CBB04(uint64_t a1, void *a2)
{
  return [a2 writeString:*(void *)(*(void *)(a1 + 32) + 104) withCode:1634357319];
}

void sub_1000CC1B0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 urlResponse]);
    uint64_t v7 = (uint64_t)[v6 statusCode];
    if (v7 > 399)
    {
      if (v7 == 404 || v7 == 400)
      {
        uint64_t v8 = 3LL;
LABEL_13:
        [*(id *)(a1 + 32) setStatus:v8];
        if ([*(id *)(a1 + 32) status] != (id)1)
        {
          int v10 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
          {
            int v11 = 134217984;
            id v12 = [v6 statusCode];
            _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Cloud library opt-out request failed with non-2xx status code %ld",  (uint8_t *)&v11,  0xCu);
          }
        }

        goto LABEL_18;
      }
    }

    else
    {
      uint64_t v8 = 1LL;
      if (v7 == 200 || v7 == 204) {
        goto LABEL_13;
      }
    }

    uint64_t v8 = 2LL;
    goto LABEL_13;
  }

  uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    int v11 = 138543362;
    id v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Cloud library opt-out request failed with error: %{public}@",  (uint8_t *)&v11,  0xCu);
  }

  [*(id *)(a1 + 32) setStatus:2];
LABEL_18:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

uint64_t sub_1000CD42C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0LL;
        *(_BYTE *)(a1 + 48) |= 8u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1LL || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_59;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_61;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_59:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_61:
        *(_DWORD *)(a1 + 40) = v14;
        goto LABEL_79;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 48) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1LL || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v22 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_65;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_65:
        uint64_t v37 = 8LL;
        goto LABEL_74;
      case 3u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 48) |= 2u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1LL || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v26 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v20 |= (unint64_t)(v26 & 0x7F) << v23;
            if (v26 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_69;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_69:
        uint64_t v37 = 16LL;
        goto LABEL_74;
      case 4u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v20 = 0LL;
        *(_BYTE *)(a1 + 48) |= 4u;
        while (2)
        {
          unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v29 == -1LL || v29 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v30 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 1;
            v20 |= (unint64_t)(v30 & 0x7F) << v27;
            if (v30 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0LL;
                goto LABEL_73;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0LL;
        }
LABEL_73:
        uint64_t v37 = 24LL;
LABEL_74:
        *(void *)(a1 + v37) = v20;
        goto LABEL_79;
      case 5u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0LL;
        *(_BYTE *)(a1 + 48) |= 0x10u;
        while (2)
        {
          unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v34 == -1LL || v34 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            char v35 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 1;
            v33 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v9 = v32++ >= 9;
              if (v9)
              {
                uint64_t v33 = 0LL;
                goto LABEL_78;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v33 = 0LL;
        }
LABEL_78:
        *(_BYTE *)(a1 + 44) = v33 != 0;
        goto LABEL_79;
      case 6u:
        __int16 v36 = objc_alloc_init(&OBJC_CLASS___AMPMusicFeature);
        [(id)a1 addContentFeatures:v36];
        if (PBReaderPlaceMark(a2, v38) && (sub_10006D5F0((uint64_t)v36, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v38);

LABEL_79:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_79;
    }
  }

void sub_1000CE4CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1000CE55C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000CE56C(uint64_t a1)
{
}

void sub_1000CE574(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL);
  id v4 = a2;
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[RemoveCloudSourcesOperation _icCloudSourceToMLCloudSourceMapDescription]( &OBJC_CLASS___RemoveCloudSourcesOperation,  "_icCloudSourceToMLCloudSourceMapDescription"));
  unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:v4]);

  uint64_t v6 = objc_claimAutoreleasedReturnValue([v3 stringByAppendingFormat:@"%@,", v5]);
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8LL);
  char v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_1000CE614(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v5 = (id)objc_claimAutoreleasedReturnValue( +[RemoveCloudSourcesOperation _icCloudSourceToMLCloudSourceMap]( &OBJC_CLASS___RemoveCloudSourcesOperation,  "_icCloudSourceToMLCloudSourceMap"));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:v3]);

  [v2 addObject:v4];
}

void sub_1000CE688(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  id v5 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) DSID]);
    int v8 = 138543874;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    id v11 = [v7 longLongValue];
    __int16 v12 = 2114;
    id v13 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Removing account %lld as the active locker account finished with error=%{public}@",  (uint8_t *)&v8,  0x20u);
  }
}

uint64_t sub_1000CE780(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000CE788(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  id v5 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = 138543618;
    uint64_t v8 = v6;
    __int16 v9 = 2114;
    id v10 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Finished running maintenance task with error=%{public}@",  (uint8_t *)&v7,  0x16u);
  }
}

void sub_1000CE860(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 138543362;
      id v5 = v2;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Failed to remove playback intents. err=%{public}@",  (uint8_t *)&v4,  0xCu);
    }
  }
}

void sub_1000CEA18(id a1)
{
  v3[0] = &off_1001B4150;
  v3[1] = &off_1001B4180;
  v4[0] = @"Purchase History";
  v4[1] = @"Subscription";
  v3[2] = &off_1001B4138;
  v3[3] = &off_1001B4168;
  v4[2] = @"Saga";
  v4[3] = @"Purchase History For Media Items";
  uint64_t v1 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  4LL));
  id v2 = (void *)qword_1001DB7B8;
  qword_1001DB7B8 = v1;
}

LABEL_28:
            unsigned int v32 = v6;
          }

          [v32 setObject:v20 forKeyedSubscript:v19];
          goto LABEL_37;
        }

        char v22 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__int128 buf = 138543618;
          id v51 = self;
          id v52 = 2114;
          uint64_t v53 = v19;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not create remote entity from key %{public}@",  buf,  0x16u);
        }
}

void sub_1000D006C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue([a2 urlForBagKey:*(void *)(*(void *)(a1 + 32) + 8)]);
  int v7 = (void *)v6;
  if (a2 && v6)
  {
    uint64_t v8 = -[NSMutableURLRequest initWithURL:](objc_alloc(&OBJC_CLASS___NSMutableURLRequest), "initWithURL:", v6);
    -[NSMutableURLRequest setHTTPMethod:](v8, "setHTTPMethod:", @"POST");
    -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v8,  "setValue:forHTTPHeaderField:",  ICHTTPHeaderContentTypeXApplePlist,  ICHTTPHeaderKeyContentType);
    -[NSMutableURLRequest setHTTPBody:](v8, "setHTTPBody:", *(void *)(a1 + 40));
    __int16 v9 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v8,  *(void *)(a1 + 48));
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_1000D02C4;
    v15[3] = &unk_1001A5710;
    void v15[4] = *(void *)(a1 + 32);
    id v16 = *(id *)(a1 + 56);
    [v10 enqueueDataRequest:v9 withCompletionHandler:v15];

LABEL_9:
    goto LABEL_10;
  }

  id v11 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(v12 + 8);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v18 = v12;
    __int16 v19 = 2114;
    uint64_t v20 = v13;
    __int16 v21 = 2114;
    uint64_t v22 = 0LL;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch URL from bag using key %{public}@. error=%{public}@",  buf,  0x20u);
  }

  uint64_t v14 = *(void *)(a1 + 56);
  if (!v5)
  {
    uint64_t v8 = (NSMutableURLRequest *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7200LL,  0LL));
    (*(void (**)(uint64_t, void, NSMutableURLRequest *))(v14 + 16))(v14, 0LL, v8);
    goto LABEL_9;
  }

  (*(void (**)(uint64_t, void, id))(v14 + 16))(v14, 0LL, v5);
LABEL_10:
}

void sub_1000D02C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  uint64_t v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
      id v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v14 = 138544130;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2114;
      __int16 v19 = v10;
      __int16 v20 = 2114;
      __int16 v21 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ request completed with response: %{public}@ body: %{public}@ error=%{public}@",  (uint8_t *)&v14,  0x2Au);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
    int v14 = 138543874;
    uint64_t v15 = v12;
    __int16 v16 = 2114;
    id v17 = v5;
    __int16 v18 = 2114;
    __int16 v19 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ request completed with response: %{public}@ body: %{public}@",  (uint8_t *)&v14,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1000D0474(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = (void *)objc_claimAutoreleasedReturnValue([v3 playbackPositionKey]);
  id v5 = [v4 length];

  if (v5)
  {
    id v6 = *(void **)(*(void *)(a1 + 32) + 32LL);
    int v7 = (void *)objc_claimAutoreleasedReturnValue([v3 playbackPositionKey]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:v7]);

    if (v8)
    {
      uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v3 playbackPositionKey]);
        id v11 = *(void **)(*(void *)(a1 + 32) + 32LL);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v3 playbackPositionKey]);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKeyedSubscript:v12]);
        int v16 = 138543874;
        id v17 = v10;
        __int16 v18 = 2114;
        __int16 v19 = v13;
        __int16 v20 = 2114;
        id v21 = v3;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "ERROR: metadataItemsFromDataSource already contains item for entityIdentifier %{public}@. existingItem=%{publi c}@ newItem=%{public}@",  (uint8_t *)&v16,  0x20u);
      }
    }

    int v14 = *(void **)(*(void *)(a1 + 32) + 32LL);
    uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue([v3 playbackPositionKey]);
    [v14 setObject:v3 forKey:v15];
  }

  else
  {
    uint64_t v15 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138412290;
      id v17 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "ERROR: will skip syncing item with no sync metadataIdentifier: %@",  (uint8_t *)&v16,  0xCu);
    }
  }
}

void sub_1000D0684(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = a1[4];
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v8;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v5;
      *(_WORD *)&_BYTE buf[22] = 2114;
      uint64_t v57 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Encountered error with reponse: %{public}@ error=%{public}@",  buf,  0x20u);
    }

    [a1[4] _finishWithError:v6];
  }

  else
  {
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([*((id *)a1[4] + 2) playbackPositionDomain]);
    uint64_t v9 = objc_alloc(&OBJC_CLASS___ICDPlaybackPositionResponseDataSync);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
    id v11 = -[ICDPlaybackPositionResponseDataSync initWithResponseDictionary:forDomain:]( v9,  "initWithResponseDictionary:forDomain:",  v10,  v33);

    uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition_Oversize");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      id v13 = a1[4];
      unsigned int v32 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue( -[ICDPlaybackPositionResponseDataSync syncAnchor]( v11,  "syncAnchor"));
      char v31 = (void *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionResponseDataSync updatedKeys](v11, "updatedKeys"));
      int v14 = (void *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionResponseDataSync conflictedKeys](v11, "conflictedKeys"));
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionResponseDataSync deletedKeys](v11, "deletedKeys"));
      int v16 = (void *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionResponseDataSync successfullyUpdatedKeys](v11, "successfullyUpdatedKeys"));
      id v17 = (void *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionResponseDataSync successfullyDeletedKeys](v11, "successfullyDeletedKeys"));
      *(_DWORD *)__int128 buf = 138545154;
      *(void *)&uint8_t buf[4] = v13;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v5;
      *(_WORD *)&_BYTE buf[22] = 2112;
      uint64_t v57 = v32;
      *(_WORD *)id v58 = 2112;
      *(void *)&v58[2] = v31;
      *(_WORD *)&v58[10] = 2112;
      *(void *)&v58[12] = v14;
      __int16 v59 = 2112;
      unint64_t v60 = v15;
      __int16 v61 = 2112;
      uint64_t v62 = v16;
      __int16 v63 = 2112;
      unint64_t v64 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Received sync response: %{public}@\n syncAnchor=%@\n updatedKeys=%@\n conflictedKeys=%@\n deletedKeys=%@\n successfullyUpdatedKeys=%@\n successfullyDeletedKeys=%@",  buf,  0x52u);
    }

    *(void *)__int128 buf = 0LL;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000LL;
    uint64_t v57 = sub_1000D0C48;
    *(void *)id v58 = sub_1000D0C58;
    *(void *)&v58[8] = 0LL;
    uint64_t v46 = 0LL;
    id v47 = &v46;
    uint64_t v48 = 0x3032000000LL;
    id v49 = sub_1000D0C48;
    id v50 = sub_1000D0C58;
    id v51 = 0LL;
    id v18 = a1[4];
    v45[0] = _NSConcreteStackBlock;
    v45[1] = 3221225472LL;
    v45[2] = sub_1000D0C60;
    v45[3] = &unk_1001A5670;
    void v45[4] = buf;
    void v45[5] = &v46;
    [v18 _parseResponseData:v11 completion:v45];
    __int16 v19 = (__CFString *)objc_claimAutoreleasedReturnValue(-[ICDPlaybackPositionResponseDataSync syncAnchor](v11, "syncAnchor"));
    if (!v19)
    {
      __int16 v20 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        id v21 = a1[4];
        *(_DWORD *)id v52 = 138543362;
        id v53 = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "%{public}@ responseData.syncAnchor=nil",  v52,  0xCu);
      }

      __int16 v19 = @"0";
    }

    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472LL;
    v38[2] = sub_1000D0CD4;
    v38[3] = &unk_1001A5698;
    uint64_t v22 = v19;
    id v39 = v22;
    __int16 v44 = buf;
    id v40 = a1[5];
    id v41 = a1[6];
    id v23 = v33;
    id v24 = a1[4];
    id v42 = v23;
    id v43 = v24;
    unint64_t v25 = objc_retainBlock(v38);
    if ([(id)v47[5] count])
    {
      char v26 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        id v27 = a1[4];
        unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue([(id)v47[5] allKeys]);
        *(_DWORD *)id v52 = 138543618;
        id v53 = v27;
        __int16 v54 = 2112;
        id v55 = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Sending merged items to server: %@",  v52,  0x16u);
      }

      id v29 = a1[4];
      uint64_t v30 = v47[5];
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472LL;
      void v34[2] = sub_1000D0DF0;
      void v34[3] = &unk_1001A56C0;
      void v34[4] = v29;
      id v35 = v5;
      id v36 = v23;
      uint64_t v37 = v25;
      [v29 _performSyncWithSyncAnchor:v22 itemsToSync:v30 conflictDetectionType:@"none" completion:v34];
    }

    else
    {
      ((void (*)(void *, void))v25[2])(v25, 0LL);
    }

    _Block_object_dispose(&v46, 8);
    _Block_object_dispose(buf, 8);
  }
}

void sub_1000D0C10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
}

uint64_t sub_1000D0C48(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000D0C58(uint64_t a1)
{
}

void sub_1000D0C60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v11 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
}

void sub_1000D0CD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL);
    int v9 = 138412546;
    uint64_t v10 = v5;
    __int16 v11 = 2112;
    uint64_t v12 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Committing merged items with domainRevision: %@ to local database: %@",  (uint8_t *)&v9,  0x16u);
  }

  uint64_t v7 = *(void **)(a1 + 40);
  id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) allValues]);
  [v7 commitUniversalPlaybackPositions:v8 context:*(void *)(a1 + 48) domain:*(void *)(a1 + 56) domainVersion:*(void *)(a1 + 32)];

  [*(id *)(a1 + 64) _finishWithError:v3];
}

void sub_1000D0DF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v13 = 138543618;
      uint64_t v14 = v6;
      __int16 v15 = 2114;
      id v16 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@ Received error for KVS merge request. error=%{public}@",  (uint8_t *)&v13,  0x16u);
    }
  }

  else
  {
    uint64_t v7 = objc_alloc(&OBJC_CLASS___ICDPlaybackPositionResponseDataSync);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) parsedBodyDictionary]);
    uint64_t v5 = -[ICDPlaybackPositionResponseDataSync initWithResponseDictionary:forDomain:]( v7,  "initWithResponseDictionary:forDomain:",  v8,  *(void *)(a1 + 48));

    int v9 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s conflictedKeys](v5, "conflictedKeys"));
    id v10 = [v9 count];

    if (v10)
    {
      __int16 v11 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v13 = 138543362;
        uint64_t v14 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ WARNING: sent resolved conflict to server, but still received conflicts in the response, saving tho se for next time...",  (uint8_t *)&v13,  0xCu);
      }
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
}

LABEL_33:
      }

      id v36 = [obj countByEnumeratingWithState:&v41 objects:v53 count:16];
      if (!v36)
      {
LABEL_35:

        uint64_t v7 = v31;
        goto LABEL_36;
      }
    }
  }

  uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v46 = self;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Change processing done [no configurations]",  buf,  0xCu);
  }

        -[CloudUpdateLibraryOperation _prepareLibraryForInitialUpdate](self, "_prepareLibraryForInitialUpdate");
        id v43 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 138543362;
          id v94 = self;
          _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Cancelled after preparing library for cloud import",  buf,  0xCu);
        }

        -[CloudLibraryOperation setStatus:](self, "setStatus:", 4LL);
        v80[0] = &off_1001B4600;
        v79[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
        v79[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
        __int16 v44 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
        v80[1] = v44;
        v79[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
        id v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
        v80[2] = v45;
        v79[3] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
        uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
        v80[3] = v46;
        id v47 = v80;
        uint64_t v48 = v79;
LABEL_37:
        id v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v47,  v48,  4LL));

        -[CloudUpdateLibraryOperation _clearAllCloudIDs](self, "_clearAllCloudIDs");
        goto LABEL_50;
      }

      if ((id)-[CloudUpdateLibraryOperation uploadResponseStatus](self, "uploadResponseStatus") == (id)4011)
      {
        -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
        __int16 v59 = sub_1000DD86C();
        unint64_t v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(v59);
        if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v61 = -[CloudUpdateLibraryOperation uploadResponseStatus](self, "uploadResponseStatus");
          *(_DWORD *)__int128 buf = 138543618;
          id v94 = self;
          id v95 = 1024;
          *(_DWORD *)id v96 = v61;
          _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - self.uploadResponseStatus=%d, treating as a hard failure",  buf,  0x12u);
        }

        v86[0] = &off_1001B45D0;
        v85[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
        v85[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
        char v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
        v86[1] = v26;
        v85[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
        id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
        v86[2] = v27;
        v86[3] = &off_1001B4618;
        v85[3] = @"ICDCloudMusicLibraryProgressPermanentFailureTypeKey";
        v85[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
        unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
        v86[4] = v28;
        id v29 = v86;
        uint64_t v30 = v85;
      }

      else
      {
        -[CloudLibraryOperation setStatus:](self, "setStatus:", 5LL);
        uint64_t v62 = sub_1000DD86C();
        __int16 v63 = (os_log_s *)objc_claimAutoreleasedReturnValue(v62);
        if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v64 = -[CloudUpdateLibraryOperation uploadResponseStatus](self, "uploadResponseStatus");
          *(_DWORD *)__int128 buf = 138543618;
          id v94 = self;
          id v95 = 1024;
          *(_DWORD *)id v96 = v64;
          _os_log_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - self.uploadResponseStatus=%d, treating as a temporary failure",  buf,  0x12u);
        }

        v84[0] = &off_1001B4630;
        v83[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
        v83[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
        char v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
        v84[1] = v26;
        void v83[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
        id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
        v84[2] = v27;
        void v84[3] = &off_1001B4648;
        v83[3] = @"ICDCloudMusicLibraryProgressTemporaryFialureTypeKey";
        v83[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
        unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
        void v84[4] = v28;
        id v29 = v84;
        uint64_t v30 = v83;
      }
    }

    else
    {
      id v50 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138543362;
        id v94 = self;
        _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_ERROR,  "%{public}@ - Failed to register device, bailing on initial library update",  buf,  0xCu);
      }

      -[CloudLibraryOperation setStatus:](self, "setStatus:", 3LL);
      v90[0] = &off_1001B45D0;
      v89[0] = @"ICDCloudMusicLibraryProgressUpdateOperationStatusKey";
      v89[1] = @"ICDCloudMusicLibraryProgressRequestReasonKey";
      char v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  self->_updateTaskHelper));
      v90[1] = v26;
      v89[2] = @"ICDCloudMusicLibraryProgressWasInitialImportKey";
      id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 1LL));
      v90[2] = v27;
      v90[3] = &off_1001B45E8;
      v89[3] = @"ICDCloudMusicLibraryProgressPermanentFailureTypeKey";
      v89[4] = @"ICDCloudMusicLibraryProgressWasExplicitUserActionKey";
      unsigned int v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  -[CloudUpdateLibraryOperation isExplicitUserAction](self, "isExplicitUserAction")));
      v90[4] = v28;
      id v29 = v90;
      uint64_t v30 = v89;
    }

    char v31 = 5LL;
    goto LABEL_49;
  }

LABEL_36:
}

void sub_1000D2558(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userIdentity]);
      int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 accountDSID]);
      *(_DWORD *)id v23 = 138544130;
      *(void *)&void v23[4] = v6;
      *(_WORD *)&v23[12] = 2114;
      *(void *)&v23[14] = v7;
      *(_WORD *)&v23[22] = 2114;
      id v24 = v9;
      LOWORD(v25) = 2114;
      *(void *)((char *)&v25 + 2) = v3;
      id v10 = "%{public}@ - Unable to deactivate handler - class=%{public}@ dsid=%{public}@ error=%{public}@";
      __int16 v11 = v5;
      os_log_type_t v12 = OS_LOG_TYPE_ERROR;
      uint32_t v13 = 42;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v11, v12, v10, v23, v13);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 40);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userIdentity]);
    int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 accountDSID]);
    *(_DWORD *)id v23 = 138543874;
    *(void *)&void v23[4] = v14;
    *(_WORD *)&v23[12] = 2114;
    *(void *)&v23[14] = v15;
    *(_WORD *)&v23[22] = 2114;
    id v24 = v9;
    id v10 = "%{public}@ - Handler is no longer active - class=%{public}@ dsid=%{public}@";
    __int16 v11 = v5;
    os_log_type_t v12 = OS_LOG_TYPE_DEFAULT;
    uint32_t v13 = 32;
    goto LABEL_6;
  }

  if (*(void *)(a1 + 56) && ICSystemApplicationIsInstalled(0LL))
  {
    id v16 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(a1 + 32);
      id v18 = *(void **)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 56);
      __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) userIdentity]);
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 accountDSID]);
      *(_DWORD *)id v23 = 138544130;
      *(void *)&void v23[4] = v17;
      *(_WORD *)&v23[12] = 2048;
      *(void *)&v23[14] = v19;
      *(_WORD *)&v23[22] = 2114;
      id v24 = v18;
      LOWORD(v25) = 2114;
      *(void *)((char *)&v25 + 2) = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Activating handler %p - class=%{public}@ dsid=%{public}@",  v23,  0x2Au);
    }

    [*(id *)(a1 + 56) becomeActive];
  }

  id v22 =  objc_msgSend( *(id *)(a1 + 40),  "deleteHandlerForConfiguration:",  *(void *)(a1 + 48),  *(_OWORD *)v23,  *(void *)&v23[16],  v24,  v25);
}

void sub_1000D27B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = *(void *)(a1 + 40);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userIdentity]);
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 accountDSID]);
      int v10 = 138544130;
      uint64_t v11 = v5;
      __int16 v12 = 2114;
      uint64_t v13 = v6;
      __int16 v14 = 2114;
      uint64_t v15 = v8;
      __int16 v16 = 2114;
      id v17 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "%{public}@ - Unable to deactivate handler with deauthentication [deleting it anyway] - class=%{public}@ dsid=%{p ublic}@ error=%{public}@",  (uint8_t *)&v10,  0x2Au);
    }
  }

  id v9 = [*(id *)(a1 + 40) deleteHandlerForConfiguration:*(void *)(a1 + 48)];
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

uint64_t sub_1000D28E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000D28F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) libraryManagementPolicy];
  id v5 = *(id *)(a1 + 48);
  uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4 == v5)
  {
    if (v7)
    {
      id v8 = *(void **)(a1 + 32);
      int v14 = 138543618;
      uint64_t v15 = v8;
      __int16 v16 = 1024;
      LODWORD(v17) = [v8 libraryManagementPolicy];
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - policy type is unchanged (%d)",  (uint8_t *)&v14,  0x12u);
    }
  }

  else
  {
    if (v7)
    {
      id v9 = *(void **)(a1 + 32);
      unint64_t v10 = (unint64_t)[v9 libraryManagementPolicy];
      if (v10 > 2) {
        uint64_t v11 = @"Unknown";
      }
      else {
        uint64_t v11 = off_1001A57A8[v10];
      }
      unint64_t v12 = *(void *)(a1 + 48);
      if (v12 > 2) {
        uint64_t v13 = @"Unknown";
      }
      else {
        uint64_t v13 = off_1001A57A8[v12];
      }
      int v14 = 138543874;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      id v17 = v11;
      __int16 v18 = 2114;
      uint64_t v19 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Changing policy type from %{public}@ to %{public}@",  (uint8_t *)&v14,  0x20u);
    }

    [*(id *)(a1 + 32) setLibraryManagementPolicy:*(void *)(a1 + 48)];
    if ([*(id *)(a1 + 32) libraryManagementPolicy] == (id)2) {
      [*(id *)(a1 + 32) _processSupportedConfigurationsChange:*(void *)(a1 + 40) initialSetup:0];
    }
  }

  [v3 finishWithError:0];
}

void sub_1000D2ABC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v51 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - updateHandlersWithAccountStateChange",  buf,  0xCu);
  }

  if (([*(id *)(a1 + 32) isSetupCompleted] & 1) == 0)
  {
    unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  }

  if (([*(id *)(a1 + 40) activeConfigurationChanged] & 1) == 0
    && ([*(id *)(a1 + 40) supportedConfigurationsChanged] & 1) == 0)
  {
    id v29 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v30 = *(void *)(a1 + 32);
      char v31 = *(void **)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v51 = v30;
      __int16 v52 = 2112;
      id v53 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - No changes detected - %@",  buf,  0x16u);
    }

    goto LABEL_48;
  }

  uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = *(void **)(a1 + 40);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v51 = v7;
    __int16 v52 = 2112;
    id v53 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%{public}@ - Change detected: %@", buf, 0x16u);
  }

  if ([*(id *)(a1 + 32) libraryManagementPolicy] == (id)2
    && [*(id *)(a1 + 40) supportedConfigurationsChanged])
  {
    id v9 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v51 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Supported configurations changed",  buf,  0xCu);
    }

    [*(id *)(a1 + 32) _processSupportedConfigurationsChange:*(void *)(a1 + 40) initialSetup:0];
  }

  else if ((![*(id *)(a1 + 32) libraryManagementPolicy] {
          || [*(id *)(a1 + 32) libraryManagementPolicy] == (id)1)
  }
         && [*(id *)(a1 + 40) activeConfigurationChanged])
  {
    uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v51 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Active account changed",  buf,  0xCu);
    }

    [*(id *)(a1 + 32) _processActiveConfigurationChange:*(void *)(a1 + 40) initialSetup:0];
  }

  if ([*(id *)(a1 + 32) libraryManagementPolicy] == (id)2)
  {
    id v33 = v3;
    uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v51 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Verifying handlers are active",  buf,  0xCu);
    }

    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue( +[ICDHandlerCoordinator _managedHandlerClasses]( &OBJC_CLASS___ICDHandlerCoordinator,  "_managedHandlerClasses"));
    id v36 = [obj countByEnumeratingWithState:&v44 objects:v49 count:16];
    if (v36)
    {
      uint64_t v35 = *(void *)v45;
      do
      {
        uint64_t v15 = 0LL;
        do
        {
          if (*(void *)v45 != v35) {
            objc_enumerationMutation(obj);
          }
          uint64_t v37 = v15;
          __int16 v16 = *(void **)(*((void *)&v44 + 1) + 8 * v15);
          __int128 v40 = 0u;
          __int128 v41 = 0u;
          __int128 v42 = 0u;
          __int128 v43 = 0u;
          uint64_t v17 = a1;
          __int16 v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) finalState]);
          uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 supportedConfigurations]);

          id v20 = [v19 countByEnumeratingWithState:&v40 objects:v48 count:16];
          if (v20)
          {
            id v21 = v20;
            uint64_t v22 = *(void *)v41;
            do
            {
              for (unint64_t i = 0LL; i != v21; unint64_t i = (char *)i + 1)
              {
                if (*(void *)v41 != v22) {
                  objc_enumerationMutation(v19);
                }
                id v24 = (void *)objc_claimAutoreleasedReturnValue( [v16 handlerForConfiguration:*(void *)(*((void *)&v40 + 1) + 8 * (void)i)]);
                if (([v24 isActive] & 1) == 0)
                {
                  __int128 v25 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
                  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t v26 = *(void *)(v17 + 32);
                    *(_DWORD *)__int128 buf = 138543618;
                    uint64_t v51 = v26;
                    __int16 v52 = 2114;
                    id v53 = v24;
                    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - activating handler %{public}@",  buf,  0x16u);
                  }

                  [v24 becomeActive];
                }
              }

              id v21 = [v19 countByEnumeratingWithState:&v40 objects:v48 count:16];
            }

            while (v21);
          }

          uint64_t v15 = v37 + 1;
          a1 = v17;
        }

        while ((id)(v37 + 1) != v36);
        id v36 = [obj countByEnumeratingWithState:&v44 objects:v49 count:16];
      }

      while (v36);
    }

    id v3 = v33;
  }

  if ([*(id *)(a1 + 32) libraryManagementPolicy] != (id)2
    && [*(id *)(a1 + 32) libraryManagementPolicy] != (id)1)
  {
LABEL_48:
    [v3 finishWithError:0];
    goto LABEL_49;
  }

  id v27 = *(void **)(a1 + 32);
  uint64_t v28 = *(void *)(a1 + 40);
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 3221225472LL;
  v38[2] = sub_1000D30EC;
  v38[3] = &unk_1001A6398;
  id v39 = v3;
  [v27 _deauthenticateUnsupportedConfigurationsFromChange:v28 initialSetup:0 completion:v38];

LABEL_49:
}

id sub_1000D30EC(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

void sub_1000D30F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v27 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - setupHandlersWithAccountStateChange",  buf,  0xCu);
  }

  if ([*(id *)(a1 + 32) isSetupCompleted])
  {
    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  }

  unsigned __int8 v6 = [*(id *)(a1 + 40) activeConfigurationChanged];
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if ((v6 & 1) != 0)
  {
    if (!v8) {
      goto LABEL_11;
    }
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) initialState]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) finalState]);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v27 = v9;
    __int16 v28 = 2112;
    id v29 = v10;
    __int16 v30 = 2112;
    char v31 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - setupHandlers - Account change on startup [restore - [%@] -> [%@]]",  buf,  0x20u);
  }

  else
  {
    if (!v8) {
      goto LABEL_11;
    }
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) initialState]);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v27 = v12;
    __int16 v28 = 2112;
    id v29 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - setupHandlers - No account change on startup [restore - [%@]]",  buf,  0x16u);
  }

LABEL_11:
  id v13 = [*(id *)(a1 + 32) libraryManagementPolicy];
  uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "Accounts");
  BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG);
  if (v13 == (id)2)
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void **)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v27 = v16;
      __int16 v28 = 2112;
      id v29 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "%{public}@ - setupHandlers - Parallel MU setup - State Change=%@",  buf,  0x16u);
    }

    [*(id *)(a1 + 32) _processSupportedConfigurationsChange:*(void *)(a1 + 40) initialSetup:1];
  }

  else
  {
    if (v15)
    {
      uint64_t v18 = *(void *)(a1 + 32);
      uint64_t v19 = *(void **)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v27 = v18;
      __int16 v28 = 2112;
      id v29 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "%{public}@ - setupHandlers - Single & Sequential MU setups - State Change=%@",  buf,  0x16u);
    }

    [*(id *)(a1 + 32) _processActiveConfigurationChange:*(void *)(a1 + 40) initialSetup:1];
  }

  if ([*(id *)(a1 + 32) libraryManagementPolicy] == (id)2
    || [*(id *)(a1 + 32) libraryManagementPolicy] == (id)1)
  {
    id v21 = *(void **)(a1 + 32);
    uint64_t v20 = *(void *)(a1 + 40);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    v24[2] = sub_1000D34B0;
    void v24[3] = &unk_1001A7108;
    void v24[4] = v21;
    id v25 = v3;
    [v21 _deauthenticateUnsupportedConfigurationsFromChange:v20 initialSetup:0 completion:v24];
  }

  else
  {
    [*(id *)(a1 + 32) setSetupCompleted:1];
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    [v22 postNotificationName:@"ICDHandlerCoordinatorDidFinishInitializationNotificationName" object:*(void *)(a1 + 32)];
    [v3 finishWithError:0];
  }
}

void sub_1000D34B0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 setSetupCompleted:1];
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v5 postNotificationName:@"ICDHandlerCoordinatorDidFinishInitializationNotificationName" object:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) finishWithError:v4];
}

void sub_1000D4084( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

uint64_t sub_1000D425C(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 16LL) = 0LL;
  return result;
}

void sub_1000D4268(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
  uint64_t v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D4950;
  block[3] = &unk_1001A5858;
  id v8 = *(id *)(a1 + 32);
  char v13 = a2;
  id v11 = v5;
  id v12 = v8;
  id v9 = v5;
  dispatch_async(v7, block);
}

void sub_1000D431C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) connectionState])
  {
    id v2 = os_log_create("com.apple.amp.itunescloudd", "Connections");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16LL);
      *(_DWORD *)__int128 buf = 134217984;
      uint64_t v20 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "Unable to connect, current state: %ld",  buf,  0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

  else
  {
    *(void *)(*(void *)(a1 + 32) + 16LL) = 1LL;
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 libraryBagKey]);

    if ([v5 length])
    {
      unsigned __int8 v6 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      void v18[2] = sub_1000D4590;
      v18[3] = &unk_1001A6640;
      void v18[4] = *(void *)(a1 + 32);
      uint64_t v7 = -[ICStoreRequestContext initWithBlock:](v6, "initWithBlock:", v18);
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472LL;
      void v14[2] = sub_1000D45EC;
      v14[3] = &unk_1001A58D0;
      id v9 = v5;
      uint64_t v10 = *(void *)(a1 + 32);
      id v11 = *(void **)(a1 + 40);
      id v15 = v9;
      uint64_t v16 = v10;
      id v17 = v11;
      [v8 getBagForRequestContext:v7 withCompletionHandler:v14];
    }

    else
    {
      id v12 = os_log_create("com.apple.amp.itunescloudd", "Connections");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "No library bag key. Failed to determine database ID.",  buf,  2u);
      }

      *(void *)(*(void *)(a1 + 32) + 16LL) = 0LL;
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v7 = (ICStoreRequestContext *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2013LL,  0LL));
      (*(void (**)(uint64_t, void, ICStoreRequestContext *))(v13 + 16))(v13, 0LL, v7);
    }
  }

void sub_1000D4590(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 userIdentity]);
  [v4 setIdentity:v3];

  [v4 setPersonalizationStyle:2];
}

void sub_1000D45EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Connections");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      *(_DWORD *)__int128 buf = 138543362;
      id v23 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Failed to fetch bag error=%{public}@",  buf,  0xCu);
    }
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 dictionaryForBagKey:*(void *)(a1 + 32)]);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKey:@"database-id"]);
  unsigned int v11 = [v10 unsignedIntValue];

  id v12 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKey:@"database-name"]);
  uint64_t v13 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) queue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000D47C0;
  block[3] = &unk_1001A58A8;
  unsigned int v21 = v11;
  uint64_t v14 = *(void **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v18 = v12;
  id v19 = v9;
  id v20 = v14;
  id v15 = v9;
  id v16 = v12;
  dispatch_async(v13, block);
}

void sub_1000D47C0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v2)
  {
    *(_DWORD *)(v3 + _Block_object_dispose((const void *)(v37 - 208), 8) = v2;
    *(void *)(*(void *)(a1 + 32) + 16LL) = 2LL;
    id v4 = os_log_create("com.apple.amp.itunescloudd", "Connections");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      int v6 = *(_DWORD *)(*(void *)(a1 + 32) + 8LL);
      int v11 = 138543618;
      uint64_t v12 = v5;
      __int16 v13 = 1024;
      int v14 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Cloud database: %{public}@ (DatabaseID = %u)",  (uint8_t *)&v11,  0x12u);
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  }

  else
  {
    *(void *)(v3 + 16) = 0LL;
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Connections");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 48);
      int v11 = 138543362;
      uint64_t v12 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Failed to load database ID, bag library: %{public}@",  (uint8_t *)&v11,  0xCu);
    }

    uint64_t v9 = *(void *)(a1 + 56);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2013LL,  0LL));
    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0LL, v10);
  }

uint64_t sub_1000D4950(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(unsigned __int8 *)(a1 + 48),  *(void *)(a1 + 32));
}

Class sub_1000D4964(uint64_t a1)
{
  int v6 = 0LL;
  if (!qword_1001DB7D0)
  {
    __int128 v7 = off_1001A58F0;
    uint64_t v8 = 0LL;
    qword_1001DB7D0 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB7D0)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudLibraryConnection.m",  27,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("MPPlaybackUserDefaults");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPPlaybackUserDefaultsClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudLibraryConnection.m",  28,  @"Unable to find class %s",  "MPPlaybackUserDefaults");

LABEL_10:
    __break(1u);
  }

  qword_1001DB7C8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_1000D4B00(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v11 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 configuration]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 userIdentity]);
  [v11 setIdentity:v5];

  int v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) configuration]);
  __int128 v7 = (void *)objc_claimAutoreleasedReturnValue([v6 userIdentityStore]);
  [v11 setIdentityStore:v7];

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[ICClientInfo defaultInfo](&OBJC_CLASS___ICClientInfo, "defaultInfo"));
  [v11 setClientInfo:v8];

  id v9 = objc_msgSend( [ICStoreURLResponseAuthenticationProvider alloc],  "initWithUserInteractionLevel:",  objc_msgSend(*(id *)(a1 + 40), "verificationInteractionLevel"));
  [v11 setAuthenticationProvider:v9];

  id v10 = objc_alloc_init(&OBJC_CLASS___ICStoreDialogResponseHandler);
  [v11 setStoreDialogResponseHandler:v10];

  objc_msgSend(v11, "setPersonalizationStyle:", objc_msgSend(*(id *)(a1 + 40), "requestPersonalizationStyle"));
}

void sub_1000D4C2C(uint64_t a1, void *a2, void *a3)
{
  id v90 = a2;
  id v89 = a3;
  if (v89)
  {
    uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "Connections");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v6 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      unint64_t v97 = v6;
      __int16 v98 = 2114;
      id v99 = v89;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Failed to send request to %{public}@. err=%{public}@",  buf,  0x16u);
    }

LABEL_83:
                  }

                  else
                  {
LABEL_64:
                    os_log_t v73 = sub_1000DD890();
                    uint64_t v74 = (os_log_s *)objc_claimAutoreleasedReturnValue(v73);
                    if (os_log_type_enabled(v74, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)__int128 buf = 134217984;
                      unint64_t v97 = (unint64_t)v50;
                      _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_ERROR,  "Response: (HTTP 403, DMAP %lu) - Unknown code.",  buf,  0xCu);
                    }
                  }

                  id v56 = *(void (**)(void))(*(void *)(a1 + 64) + 16LL);
LABEL_85:
                  v56();
                  id v24 = v86;
                  break;
              }
            }

            else
            {
              os_log_t v60 = sub_1000DD890();
              __int16 v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(v60);
              if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
              {
                *(_WORD *)__int128 buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_ERROR,  "Response: (HTTP 403) - Response Missing DMAP Status Code",  buf,  2u);
              }

              uint64_t v62 = *(void *)(a1 + 64);
              id v53 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2019LL,  0LL));
              (*(void (**)(uint64_t, void, void *))(v62 + 16))(v62, 0LL, v53);
            }
          }

          else
          {
            uint64_t v57 = os_log_create("com.apple.amp.itunescloudd", "Connections");
            BOOL v58 = os_log_type_enabled(v57, OS_LOG_TYPE_ERROR);
            __int16 v59 = v26;
            if (v27)
            {
              if (v58)
              {
                *(_DWORD *)__int128 buf = 134218242;
                unint64_t v97 = v23;
                __int16 v98 = 2114;
                id v99 = (NSString *)v27;
                _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_ERROR,  "Unhandled Response: (HTTP %lu)\nParsed response data as DMAP error: %{public}@",  buf,  0x16u);
              }
            }

            else if (v58)
            {
              __int16 v63 = -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v24,  4LL);
              unint64_t v64 = v63;
              if (v63) {
                id v65 = v63;
              }
              else {
                id v65 = (NSString *)v24;
              }
              *(_DWORD *)__int128 buf = 134218242;
              unint64_t v97 = v23;
              __int16 v98 = 2114;
              id v99 = v65;
              _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_ERROR,  "Unhandled Response: (HTTP %lu)\nRaw response data: %{public}@",  buf,  0x16u);
            }

            uint64_t v66 = *(void *)(a1 + 64);
            id v67 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2018LL,  0LL));
            (*(void (**)(uint64_t, void, void *))(v66 + 16))(v66, 0LL, v67);

            uint64_t v26 = v59;
          }

          goto LABEL_40;
        }

        __int128 v45 = os_log_create("com.apple.amp.itunescloudd", "Connections");
        if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__int128 buf = 134217984;
          unint64_t v97 = v23;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "Response: (HTTP %lu) - Bad Request/No Found",  buf,  0xCu);
        }
      }

      uint64_t v46 = *(void *)(a1 + 64);
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2017LL,  0LL));
      __int128 v41 = *(void (**)(void))(v46 + 16);
    }

    v41();
LABEL_40:

    goto LABEL_41;
  }

  __int128 v42 = os_log_create("com.apple.amp.itunescloudd", "Connections");
  if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
  {
    unint64_t v43 = *(void *)(a1 + 48);
    *(_DWORD *)__int128 buf = 134218242;
    unint64_t v97 = v43;
    __int16 v98 = 2114;
    id v99 = v89;
    _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_ERROR,  "Received no response for request %p, error %{public}@",  buf,  0x16u);
  }

  uint64_t v44 = *(void *)(a1 + 64);
  if (!v89)
  {
    unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2018LL,  0LL));
    (*(void (**)(uint64_t, void, void *))(v44 + 16))(v44, 0LL, v21);
LABEL_41:

    goto LABEL_42;
  }

  (*(void (**)(uint64_t, void, NSString *))(v44 + 16))(v44, 0LL, v89);
LABEL_42:
}

ICURLSession *__cdecl sub_1000D587C(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration ic_defaultSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "ic_defaultSessionConfiguration"));
  int v2 = -[ICURLSession initWithConfiguration:maxConcurrentRequests:qualityOfService:]( objc_alloc(&OBJC_CLASS___ICURLSession),  "initWithConfiguration:maxConcurrentRequests:qualityOfService:",  v1,  4LL,  -1LL);

  return v2;
}

void sub_1000D58D0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000D5944;
  v3[3] = &unk_1001A57C8;
  id v4 = *(id *)(a1 + 48);
  objc_msgSend(v1, "_onQueue_sendRequest:withInternalResponseHandler:", v2, v3);
}

void sub_1000D5944(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  __int128 v7 = *(void **)(a1 + 32);
  if (v7)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
    uint64_t v9 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000D5A14;
    block[3] = &unk_1001A6C08;
    id v13 = v7;
    id v11 = v5;
    id v12 = v6;
    dispatch_async(v9, block);
  }
}

uint64_t sub_1000D5A14(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5]);
}

void sub_1000D5CE4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 104LL);
  id v4 = a2;
  [v4 writeString:v3 withCode:1634357319];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000D5D84;
  v5[3] = &unk_1001A70B8;
  void v5[4] = *(void *)(a1 + 32);
  ICDAAPUtilitiesWriteContainer(v4, 1835819884LL, v5);
}

void sub_1000D5D84(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id v4 = *(id *)(*(void *)(a1 + 32) + 112LL);
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v12;
    do
    {
      uint64_t v8 = 0LL;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v11 + 1) + 8LL * (void)v8);
        v10[0] = _NSConcreteStackBlock;
        v10[1] = 3221225472LL;
        v10[2] = sub_1000D5EE0;
        v10[3] = &unk_1001A70B8;
        void v10[4] = v9;
        ICDAAPUtilitiesWriteContainer(v3, 1835821428LL, v10);
        uint64_t v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }

    while (v6);
  }
}

id sub_1000D5EE0(uint64_t a1, void *a2)
{
  return [a2 writeString:*(void *)(a1 + 32) withCode:1936746852];
}

void sub_1000D6C38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

LABEL_34:
      id v33 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v33, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_FAULT,  "Work item did not include upload-info and response-data, failing upload",  buf,  2u);
      }

      -[CloudLibraryOperation setStatus:](self, "setStatus:", 2LL);
      unint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2014LL,  0LL));
      -[CloudLibraryOperation setError:](self, "setError:", v34);

      goto LABEL_37;
    }

    unint64_t v43 = v17;
    id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 objectAtIndex:0]);
    id v16 = 0LL;
    uint64_t v15 = 0LL;
    if (!_NSIsNSDictionary(v19))
    {
LABEL_30:

      id v17 = v43;
      goto LABEL_31;
    }

    __int128 v42 = v19;
    unint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 objectForKey:@"cloud-id"]);
    if (!_NSIsNSNumber())
    {
      id v16 = 0LL;
      uint64_t v15 = 0LL;
LABEL_29:

      id v19 = v42;
      goto LABEL_30;
    }

    unsigned int v21 = (void *)objc_claimAutoreleasedReturnValue(-[SagaUploadPlaylistArtworkOperation containerCloudID](self, "containerCloudID"));
    uint64_t v22 = [v20 isEqualToNumber:v21];

    if (v22)
    {
      unint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue([v42 objectForKey:@"actions"]);
      __int128 v41 = v23;
      if (_NSIsNSArray(v23) && -[os_log_s count](v23, "count"))
      {
        id v40 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s objectAtIndex:](v23, "objectAtIndex:", 0LL));
        id v24 = objc_claimAutoreleasedReturnValue([v40 objectForKey:@"action"]);
        id v25 = _NSIsNSString(v24);
        uint64_t v26 = (void *)v24;
        id v16 = 0LL;
        uint64_t v15 = 0LL;
        if (v25)
        {
          uint64_t v27 = v26;
          if ([v26 isEqualToString:@"upload-playlist"])
          {
            __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([v40 objectForKey:@"assets"]);
            __int16 v38 = v28;
            id v39 = v27;
            if (_NSIsNSDictionary(v28))
            {
              id v37 = (void *)objc_claimAutoreleasedReturnValue([v28 objectForKey:@"artwork"]);
              if (_NSIsNSDictionary(v37))
              {
                uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v37 objectForKey:@"upload-info"]);
                __int16 v30 = (void *)objc_claimAutoreleasedReturnValue([v40 objectForKey:@"response-data"]);
                id v36 = v29;
                uint64_t v35 = v30;
                if (_NSIsNSDictionary(v29) && _NSIsNSDictionary(v30))
                {
                  uint64_t v15 = v29;
                  id v16 = v30;
                }

                else
                {
                  id v16 = 0LL;
                  uint64_t v15 = 0LL;
                }
              }

              else
              {
                id v16 = 0LL;
                uint64_t v15 = 0LL;
              }
            }

            else
            {
              id v16 = 0LL;
              uint64_t v15 = 0LL;
            }

            uint64_t v26 = v39;
          }

          else
          {
            id v16 = 0LL;
            uint64_t v26 = v27;
            uint64_t v15 = 0LL;
          }
        }

        goto LABEL_28;
      }
    }

    else
    {
      char v31 = sub_1000DD86C();
      unint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
      __int128 v41 = v32;
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134217984;
        uint64_t v46 = [v20 unsignedLongLongValue];
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_ERROR,  "Received cloudID that does not match the one we initiated the asset upload for: %llu",  buf,  0xCu);
      }
    }

    id v16 = 0LL;
    uint64_t v15 = 0LL;
LABEL_28:

    goto LABEL_29;
  }

  uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "SagaUploadPlaylistArtworkOperation cancelled -- After initiating artwork upload",  buf,  2u);
  }

  -[CloudLibraryOperation setStatus:](self, "setStatus:", 4LL);
LABEL_38:
}

void sub_1000D7CC0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1000D85D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
}

void sub_1000D89D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000D8DB4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000D8DC4(uint64_t a1)
{
}

void sub_1000D8DCC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000D8E54(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void **)(a1 + 32);
      int v26 = 138543618;
      id v27 = v8;
      __int16 v28 = 2114;
      id v29 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Received an error loading response for %{public}@: %{public}@",  (uint8_t *)&v26,  0x16u);
    }

    goto LABEL_5;
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 bodyData]);
  id v10 = [v9 length];

  if (!v10)
  {
    uint64_t v19 = a1 + 48;
    if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL)) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 bodyData]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v11,  0LL,  0LL,  0LL));

  id v13 = 0LL;
  if (_NSIsNSDictionary(v12))
  {
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v12 objectForKey:@"status"]);
    id v15 = [v14 integerValue];

    if (v15)
    {
      uint64_t v16 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        id v17 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 URL]);
        int v26 = 134218242;
        id v27 = v15;
        __int16 v28 = 2114;
        id v29 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "Received response with error: Status-%ld when loading URL: %{public}@",  (uint8_t *)&v26,  0x16u);
      }

      id v13 = 0LL;
      goto LABEL_12;
    }

    id v13 = (id)objc_claimAutoreleasedReturnValue([v12 objectForKey:@"retry-in-ms"]);

    if (!v13)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL), v12);
LABEL_12:
      *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
      goto LABEL_17;
    }

    unint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v12 objectForKey:@"retry-in-ms"]);
    id v13 = [v20 unsignedIntegerValue];
  }

void sub_1000D9224(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a2;
  id v9 = a4;
  id v10 = a5;
  if (v10)
  {
    id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      int v12 = 138543618;
      id v13 = v10;
      __int16 v14 = 2114;
      id v15 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "uploadTask failed: %{public}@. %{public}@",  (uint8_t *)&v12,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1000D9330(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000D93B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v5 = v3;
  id v6 = (unsigned __int16 *)[v5 bytes];
  id v7 = [v5 length];
  int v8 = (int)v7;
  uint64_t v9 = *(void *)(v4 + 32);
  if (v9 > 3999)
  {
    if (v9 > 4255)
    {
      if (v9 == 4256)
      {
        CC_SHA256_Update((CC_SHA256_CTX *)(v4 + 40), v6, (CC_LONG)v7);
      }

      else if (v9 == 4512)
      {
        CC_SHA512_Update((CC_SHA512_CTX *)(v4 + 40), v6, (CC_LONG)v7);
      }
    }

    else if (v9 == 4000)
    {
      CC_MD5_Update((CC_MD5_CTX *)(v4 + 40), v6, (CC_LONG)v7);
    }

    else if (v9 == 4001)
    {
      CC_SHA1_Update((CC_SHA1_CTX *)(v4 + 40), v6, (CC_LONG)v7);
    }
  }

  else if (v9 > 2999)
  {
    if (v9 == 3000)
    {
      sub_1000DAF08((_DWORD *)(v4 + 40), (char *)v6, (size_t)v7);
    }

    else if (v9 == 3001)
    {
      sub_1000DB0B0((char *)(v4 + 40), (char *)v6, (size_t)v7);
    }
  }

  else if (v9)
  {
    if (v9 == 2000)
    {
      uint64_t v10 = *(unsigned __int8 *)(v4 + 51);
      size_t v11 = ((unint64_t)v7 + v10) & 3;
      if ((unint64_t)v7 + v10 >= 4)
      {
        unint64_t v15 = ((unint64_t)v7 + v10) & 0xFFFFFFFFFFFFFFFCLL;
        switch(*(_BYTE *)(v4 + 51))
        {
          case 0:
            unsigned int v16 = *(_DWORD *)v6;
            int v17 = *(_DWORD *)v6 >> 8;
            unsigned int v18 = HIWORD(*(_DWORD *)v6);
            int v19 = HIBYTE(*(_DWORD *)v6);
            break;
          case 1:
            LOBYTE(v16) = *(_BYTE *)(v4 + 48);
            LOBYTE(v17) = *(_BYTE *)v6;
            unsigned int v18 = *(unsigned __int16 *)((char *)v6 + 1);
            goto LABEL_31;
          case 2:
            unsigned int v16 = *(unsigned __int16 *)(v4 + 48);
            int v17 = v16 >> 8;
            unsigned int v18 = *v6;
LABEL_31:
            int v19 = v18 >> 8;
            break;
          case 3:
            unsigned int v16 = *(unsigned __int16 *)(v4 + 48);
            int v17 = v16 >> 8;
            LOBYTE(v1_Block_object_dispose(va, 8) = *(_BYTE *)(v4 + 50);
            int v19 = *(unsigned __int8 *)v6;
            break;
          default:
            LOBYTE(v17) = 0;
            LOBYTE(v16) = 0;
            LOBYTE(v1_Block_object_dispose(va, 8) = 0;
            int v19 = 0;
            break;
        }

        int v21 = (v18 << 16) | (v19 << 24) | v16 | (v17 << 8);
        HIDWORD(v22) = (461845907 * ((380141568 * v21) | ((-862048943 * v21) >> 17))) ^ *(_DWORD *)(v4 + 40);
        LODWORD(v22) = HIDWORD(v22);
        int v23 = 5 * (v22 >> 19) - 430675100;
        *(_DWORD *)(v4 + 40) = v23;
        id v24 = (char *)v6 - v10 + 4;
        uint64_t v25 = v15 - 4;
        int v26 = &v24[v25];
        if (v25 >= 1)
        {
          do
          {
            int v27 = *(_DWORD *)v24;
            v24 += 4;
            HIDWORD(v2_Block_object_dispose(va, 8) = (461845907 * ((380141568 * v27) | ((-862048943 * v27) >> 17))) ^ v23;
            LODWORD(v2_Block_object_dispose(va, 8) = HIDWORD(v28);
            int v23 = 5 * (v28 >> 19) - 430675100;
            *(_DWORD *)(v4 + 40) = v23;
          }

          while (v24 < v26);
        }

        if (v11) {
          memcpy((void *)(v4 + 48), v26, v11);
        }
        *(_BYTE *)(v4 + 51) = v11;
      }

      else
      {
        id v12 = (_BYTE *)(v4 + v10 + 48);
        switch((_BYTE)v11 - (_BYTE)v10)
        {
          case 0:
            break;
          case 1:
            *id v12 = *(_BYTE *)v6;
            break;
          case 2:
            __int16 v20 = *v6;
            goto LABEL_27;
          case 3:
            __int16 v20 = *v6;
            void v12[2] = *((_BYTE *)v6 + 2);
LABEL_27:
            *(_WORD *)id v12 = v20;
            break;
          default:
            memcpy(v12, v6, (v11 - v10));
            break;
        }
      }

      *(_DWORD *)(v4 + 44) += v8;
    }
  }

  else
  {
    id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    __int16 v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)"));
    [v13 handleFailureInFunction:v14 file:@"MSVHasher+Algorithms.h" lineNumber:262 description:@"Cannot append to unknown hasher algorithm"];
  }

  uint64_t v29 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v53 = v5;
  __int16 v30 = (unsigned __int16 *)[v53 bytes];
  id v31 = [v53 length];
  int v32 = (int)v31;
  uint64_t v33 = *(void *)(v29 + 32);
  if (v33 > 3999)
  {
    if (v33 > 4255)
    {
      if (v33 == 4256)
      {
        CC_SHA256_Update((CC_SHA256_CTX *)(v29 + 40), v30, (CC_LONG)v31);
      }

      else if (v33 == 4512)
      {
        CC_SHA512_Update((CC_SHA512_CTX *)(v29 + 40), v30, (CC_LONG)v31);
      }
    }

    else if (v33 == 4000)
    {
      CC_MD5_Update((CC_MD5_CTX *)(v29 + 40), v30, (CC_LONG)v31);
    }

    else if (v33 == 4001)
    {
      CC_SHA1_Update((CC_SHA1_CTX *)(v29 + 40), v30, (CC_LONG)v31);
    }
  }

  else if (v33 > 2999)
  {
    if (v33 == 3000)
    {
      sub_1000DAF08((_DWORD *)(v29 + 40), (char *)v30, (size_t)v31);
    }

    else if (v33 == 3001)
    {
      sub_1000DB0B0((char *)(v29 + 40), (char *)v30, (size_t)v31);
    }
  }

  else if (v33)
  {
    if (v33 == 2000)
    {
      uint64_t v34 = *(unsigned __int8 *)(v29 + 51);
      size_t v35 = ((unint64_t)v31 + v34) & 3;
      if ((unint64_t)v31 + v34 >= 4)
      {
        unint64_t v39 = ((unint64_t)v31 + v34) & 0xFFFFFFFFFFFFFFFCLL;
        switch(*(_BYTE *)(v29 + 51))
        {
          case 0:
            unsigned int v40 = *(_DWORD *)v30;
            int v41 = *(_DWORD *)v30 >> 8;
            unsigned int v42 = HIWORD(*(_DWORD *)v30);
            int v43 = HIBYTE(*(_DWORD *)v30);
            break;
          case 1:
            LOBYTE(v40) = *(_BYTE *)(v29 + 48);
            LOBYTE(v41) = *(_BYTE *)v30;
            unsigned int v42 = *(unsigned __int16 *)((char *)v30 + 1);
            goto LABEL_69;
          case 2:
            unsigned int v40 = *(unsigned __int16 *)(v29 + 48);
            int v41 = v40 >> 8;
            unsigned int v42 = *v30;
LABEL_69:
            int v43 = v42 >> 8;
            break;
          case 3:
            unsigned int v40 = *(unsigned __int16 *)(v29 + 48);
            int v41 = v40 >> 8;
            LOBYTE(v42) = *(_BYTE *)(v29 + 50);
            int v43 = *(unsigned __int8 *)v30;
            break;
          default:
            LOBYTE(v41) = 0;
            LOBYTE(v40) = 0;
            LOBYTE(v42) = 0;
            int v43 = 0;
            break;
        }

        int v45 = (v42 << 16) | (v43 << 24) | v40 | (v41 << 8);
        HIDWORD(v46) = (461845907 * ((380141568 * v45) | ((-862048943 * v45) >> 17))) ^ *(_DWORD *)(v29 + 40);
        LODWORD(v46) = HIDWORD(v46);
        int v47 = 5 * (v46 >> 19) - 430675100;
        *(_DWORD *)(v29 + 40) = v47;
        uint64_t v48 = (char *)v30 - v34 + 4;
        uint64_t v49 = v39 - 4;
        id v50 = &v48[v49];
        if (v49 >= 1)
        {
          do
          {
            int v51 = *(_DWORD *)v48;
            v48 += 4;
            HIDWORD(v52) = (461845907 * ((380141568 * v51) | ((-862048943 * v51) >> 17))) ^ v47;
            LODWORD(v52) = HIDWORD(v52);
            int v47 = 5 * (v52 >> 19) - 430675100;
            *(_DWORD *)(v29 + 40) = v47;
          }

          while (v48 < v50);
        }

        if (v35) {
          memcpy((void *)(v29 + 48), v50, v35);
        }
        *(_BYTE *)(v29 + 51) = v35;
      }

      else
      {
        id v36 = (_BYTE *)(v29 + v34 + 48);
        switch((_BYTE)v35 - (_BYTE)v34)
        {
          case 0:
            break;
          case 1:
            *id v36 = *(_BYTE *)v30;
            break;
          case 2:
            __int16 v44 = *v30;
            goto LABEL_65;
          case 3:
            __int16 v44 = *v30;
            v36[2] = *((_BYTE *)v30 + 2);
LABEL_65:
            *(_WORD *)id v36 = v44;
            break;
          default:
            memcpy(v36, v30, (v35 - v34));
            break;
        }
      }

      *(_DWORD *)(v29 + 44) += v32;
    }
  }

  else
  {
    id v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    __int16 v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)"));
    [v37 handleFailureInFunction:v38 file:@"MSVHasher+Algorithms.h" lineNumber:262 description:@"Cannot append to unknown hasher algorithm"];
  }
}

void sub_1000D9A50(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  memset(&v254[8], 0, 64);
  uint64_t v5 = *(void *)(v4 + 32);
  *(void *)v254 = v5;
  if (v5 > 3000)
  {
    if (v5 <= 4000)
    {
      if (v5 == 3001)
      {
        *(void *)&v254[8] = sub_10003FC64((void *)(v4 + 40));
      }

      else if (v5 == 4000)
      {
        CC_MD5_Final(&v254[8], (CC_MD5_CTX *)(v4 + 40));
      }
    }

    else
    {
      switch(v5)
      {
        case 4001LL:
          CC_SHA1_Final(&v254[8], (CC_SHA1_CTX *)(v4 + 40));
          break;
        case 4256LL:
          CC_SHA256_Final(&v254[8], (CC_SHA256_CTX *)(v4 + 40));
          break;
        case 4512LL:
          CC_SHA512_Final(&v254[8], (CC_SHA512_CTX *)(v4 + 40));
          break;
      }
    }

    goto LABEL_37;
  }

  if (v5 <= 1999)
  {
    if (v5)
    {
      if (v5 == 1000)
      {
        uint64_t v6 = *(void *)(v4 + 72);
        uint64_t v7 = *(void *)(v4 + 48);
        uint64_t v8 = *(void *)(v4 + 64) ^ v6;
        uint64_t v9 = *(void *)(v4 + 40) + v7;
        uint64_t v10 = v9 ^ __ROR8__(v7, 51);
        uint64_t v11 = *(void *)(v4 + 56) + v8;
        uint64_t v12 = __ROR8__(v8, 48);
        uint64_t v13 = (v11 ^ v12) + __ROR8__(v9, 32);
        uint64_t v14 = v13 ^ __ROR8__(v11 ^ v12, 43);
        uint64_t v15 = v11 + v10;
        uint64_t v16 = v15 ^ __ROR8__(v10, 47);
        uint64_t v17 = (v13 ^ v6) + v16;
        uint64_t v18 = v17 ^ __ROR8__(v16, 51);
        uint64_t v19 = (__ROR8__(v15, 32) ^ 0xFFLL) + v14;
        uint64_t v20 = __ROR8__(v14, 48);
        uint64_t v21 = __ROR8__(v17, 32) + (v19 ^ v20);
        uint64_t v22 = v21 ^ __ROR8__(v19 ^ v20, 43);
        uint64_t v23 = v18 + v19;
        uint64_t v24 = v23 ^ __ROR8__(v18, 47);
        uint64_t v25 = v24 + v21;
        uint64_t v26 = v25 ^ __ROR8__(v24, 51);
        uint64_t v27 = __ROR8__(v23, 32) + v22;
        uint64_t v28 = __ROR8__(v22, 48);
        uint64_t v29 = __ROR8__(v25, 32) + (v27 ^ v28);
        uint64_t v30 = v29 ^ __ROR8__(v27 ^ v28, 43);
        uint64_t v31 = v26 + v27;
        uint64_t v32 = v31 ^ __ROR8__(v26, 47);
        uint64_t v33 = v32 + v29;
        uint64_t v34 = v33 ^ __ROR8__(v32, 51);
        uint64_t v35 = __ROR8__(v31, 32) + v30;
        uint64_t v36 = __ROR8__(v30, 48);
        uint64_t v37 = __ROR8__(v33, 32) + (v35 ^ v36);
        uint64_t v38 = v37 ^ __ROR8__(v35 ^ v36, 43);
        uint64_t v39 = v34 + v35;
        uint64_t v40 = v39 ^ __ROR8__(v34, 47);
        *(void *)(v4 + 40) = v37;
        *(void *)(v4 + 4_Block_object_dispose(va, 8) = v40;
        *(void *)(v4 + 56) = __ROR8__(v39, 32);
        *(void *)(v4 + 64) = v38;
        *(void *)&v254[8] = v40 ^ v37 ^ __ROR8__(v39, 32) ^ v38;
      }
    }

    else
    {
      unsigned int v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
      int v43 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)"));
      [v42 handleFailureInFunction:v43 file:@"MSVHasher+Algorithms.h" lineNumber:156 description:@"Cannot finalize unknown hasher algorithm"];
    }

    goto LABEL_37;
  }

  if (v5 == 2000)
  {
    int v44 = *(unsigned __int8 *)(v4 + 51);
    switch(v44)
    {
      case 1:
        int v45 = *(unsigned __int8 *)(v4 + 48);
        break;
      case 2:
        int v45 = *(unsigned __int16 *)(v4 + 48);
        break;
      case 3:
        int v45 = *(unsigned __int16 *)(v4 + 48) | (*(unsigned __int8 *)(v4 + 50) << 16);
        break;
      default:
        unsigned int v54 = *(_DWORD *)(v4 + 40);
        goto LABEL_36;
    }

    unsigned int v54 = (461845907 * ((380141568 * v45) | ((-862048943 * v45) >> 17))) ^ *(_DWORD *)(v4 + 40);
LABEL_36:
    unsigned int v55 = -2048144789 * (v54 ^ *(_DWORD *)(v4 + 44) ^ ((v54 ^ *(_DWORD *)(v4 + 44)) >> 16));
    unsigned int v56 = (-1028477387 * (v55 ^ (v55 >> 13))) ^ ((-1028477387 * (v55 ^ (v55 >> 13))) >> 16);
    *(_DWORD *)(v4 + 40) = v56;
    *(_DWORD *)&v254[8] = v56;
    goto LABEL_37;
  }

  if (v5 == 3000)
  {
    if (*(_DWORD *)(v4 + 44)) {
      int v41 = vaddvq_s32((int32x4_t)vorrq_s8( (int8x16_t)vshlq_u32(*(uint32x4_t *)(v4 + 48), (uint32x4_t)xmmword_10013B560),  (int8x16_t)vshlq_u32(*(uint32x4_t *)(v4 + 48), (uint32x4_t)xmmword_10013B550)));
    }
    else {
      int v41 = *(_DWORD *)(v4 + 56) + 374761393;
    }
    unsigned int v46 = *(_DWORD *)(v4 + 40) + v41;
    int v47 = (int *)(v4 + 64);
    unint64_t v48 = *(_DWORD *)(v4 + 80) & 0xF;
    if (v48 >= 4)
    {
      do
      {
        int v49 = *v47++;
        HIDWORD(v50) = v46 - 1028477379 * v49;
        LODWORD(v50) = HIDWORD(v50);
        unsigned int v46 = 668265263 * (v50 >> 15);
        v48 -= 4LL;
      }

      while (v48 > 3);
    }

    for (; v48; --v48)
    {
      int v51 = *(unsigned __int8 *)v47;
      int v47 = (int *)((char *)v47 + 1);
      HIDWORD(v52) = v46 + 374761393 * v51;
      LODWORD(v52) = HIDWORD(v52);
      unsigned int v46 = -1640531535 * (v52 >> 21);
    }

    unsigned int v53 = -1028477379 * ((-2048144777 * (v46 ^ (v46 >> 15))) ^ ((-2048144777 * (v46 ^ (v46 >> 15))) >> 13));
    *(_DWORD *)&v254[8] = v53 ^ HIWORD(v53);
  }

LABEL_81:
    CFStringRef v87 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( v69,  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v70,  v71,  4LL,  1LL);
    goto LABEL_82;
  }

  if (*(uint64_t *)v254 > 2999)
  {
    if (*(void *)v254 == 3000LL)
    {
      LODWORD(v260[0]) = bswap32(*(unsigned int *)&buf[8]);
      id v94 = (char *)calloc(8uLL, 1uLL);
      uint64_t v95 = 0LL;
      id v96 = v94 + 1;
      do
      {
        unint64_t v97 = *((unsigned __int8 *)v260 + v95);
        *(v96 - 1) = a0123456789abcd[v97 >> 4];
        *id v96 = a0123456789abcd[v97 & 0xF];
        v96 += 2;
        ++v95;
      }

      while (v95 != 4);
      id v69 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v70 = v94;
      uint64_t v71 = 8LL;
    }

    else
    {
      if (*(void *)v254 != 3001LL) {
        goto LABEL_100;
      }
      v260[0] = bswap64(*(unint64_t *)&buf[8]);
      uint32_t v72 = (char *)calloc(0x10uLL, 1uLL);
      uint64_t v73 = 0LL;
      uint64_t v74 = v72 + 1;
      do
      {
        unint64_t v75 = *((unsigned __int8 *)v260 + v73);
        *(v74 - 1) = a0123456789abcd[v75 >> 4];
        _BYTE *v74 = a0123456789abcd[v75 & 0xF];
        v74 += 2;
        ++v73;
      }

      while (v73 != 8);
      id v69 = objc_alloc(&OBJC_CLASS___NSString);
      uint64_t v70 = v72;
      uint64_t v71 = 16LL;
    }

    goto LABEL_81;
  }

  if (*(void *)v254 == 1000LL)
  {
    uint64_t v82 = *(void *)&buf[8];
    uint64_t v83 = (char *)v261 + 1;
    uint64_t quot = *(void *)&buf[8];
    do
    {
      lldiv_t v85 = lldiv(quot, 10LL);
      uint64_t quot = v85.quot;
      if (v85.rem >= 0) {
        LOBYTE(v86) = v85.rem;
      }
      else {
        uint64_t v86 = -v85.rem;
      }
      *(v83 - 2) = v86 + 48;
      uint64_t v62 = (const UInt8 *)(v83 - 2);
      --v83;
    }

    while (v85.quot);
    if (v82 < 0)
    {
      *(v83 - 2) = 45;
      uint64_t v62 = (const UInt8 *)(v83 - 2);
    }

    __int16 v61 = (char *)((char *)v261 - (char *)v62);
    goto LABEL_71;
  }

  if (*(void *)v254 == 2000LL)
  {
    uint64_t v57 = *(unsigned int *)&buf[8];
    BOOL v58 = v261;
    do
    {
      ldiv_t v59 = ldiv(v57, 10LL);
      uint64_t v57 = v59.quot;
      if (v59.rem >= 0) {
        LOBYTE(v60) = v59.rem;
      }
      else {
        uint64_t v60 = -v59.rem;
      }
      *((_BYTE *)v58 - 1) = v60 + 48;
      BOOL v58 = (void *)((char *)v58 - 1);
    }

    while (v59.quot);
    __int16 v61 = (char *)((char *)v261 - (char *)v58);
    uint64_t v62 = (const UInt8 *)v58;
LABEL_71:
    CFStringRef v87 = CFStringCreateWithBytes(0LL, v62, (CFIndex)v61, 0x8000100u, 0);
LABEL_82:
    __int16 v104 = v87;
    goto LABEL_83;
  }

LABEL_100:
  id v143 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  id v144 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString * _Nonnull _MSVHashGetDigest(MSVHash)"));
  [v143 handleFailureInFunction:v144 file:@"MSVHasher+Algorithms.h" lineNumber:356 description:@"Cannot obtain digest from unknown hasher algorithm"];

  __int16 v104 = &stru_1001A7960;
LABEL_83:
  uint64_t v105 = *(void *)(*(void *)(a1 + 48) + 8LL);
  memset(&v254[8], 0, 64);
  uint64_t v106 = *(void *)(v105 + 32);
  *(void *)v254 = v106;
  if (v106 > 3000)
  {
    if (v106 <= 4000)
    {
      if (v106 == 3001)
      {
        *(void *)&v254[8] = sub_10003FC64((void *)(v105 + 40));
      }

      else if (v106 == 4000)
      {
        CC_MD5_Final(&v254[8], (CC_MD5_CTX *)(v105 + 40));
      }
    }

    else
    {
      switch(v106)
      {
        case 4001LL:
          CC_SHA1_Final(&v254[8], (CC_SHA1_CTX *)(v105 + 40));
          break;
        case 4256LL:
          CC_SHA256_Final(&v254[8], (CC_SHA256_CTX *)(v105 + 40));
          break;
        case 4512LL:
          CC_SHA512_Final(&v254[8], (CC_SHA512_CTX *)(v105 + 40));
          break;
      }
    }

    goto LABEL_120;
  }

  if (v106 <= 1999)
  {
    if (v106)
    {
      if (v106 == 1000)
      {
        uint64_t v107 = *(void *)(v105 + 72);
        uint64_t v108 = *(void *)(v105 + 48);
        uint64_t v109 = *(void *)(v105 + 64) ^ v107;
        uint64_t v110 = *(void *)(v105 + 40) + v108;
        uint64_t v111 = v110 ^ __ROR8__(v108, 51);
        uint64_t v112 = *(void *)(v105 + 56) + v109;
        uint64_t v113 = __ROR8__(v109, 48);
        uint64_t v114 = (v112 ^ v113) + __ROR8__(v110, 32);
        uint64_t v115 = v114 ^ __ROR8__(v112 ^ v113, 43);
        uint64_t v116 = v112 + v111;
        uint64_t v117 = v116 ^ __ROR8__(v111, 47);
        uint64_t v118 = (v114 ^ v107) + v117;
        uint64_t v119 = v118 ^ __ROR8__(v117, 51);
        uint64_t v120 = (__ROR8__(v116, 32) ^ 0xFFLL) + v115;
        uint64_t v121 = __ROR8__(v115, 48);
        uint64_t v122 = __ROR8__(v118, 32) + (v120 ^ v121);
        uint64_t v123 = v122 ^ __ROR8__(v120 ^ v121, 43);
        uint64_t v124 = v119 + v120;
        uint64_t v125 = v124 ^ __ROR8__(v119, 47);
        uint64_t v126 = v125 + v122;
        uint64_t v127 = v126 ^ __ROR8__(v125, 51);
        uint64_t v128 = __ROR8__(v124, 32) + v123;
        uint64_t v129 = __ROR8__(v123, 48);
        uint64_t v130 = __ROR8__(v126, 32) + (v128 ^ v129);
        uint64_t v131 = v130 ^ __ROR8__(v128 ^ v129, 43);
        uint64_t v132 = v127 + v128;
        uint64_t v133 = v132 ^ __ROR8__(v127, 47);
        uint64_t v134 = v133 + v130;
        uint64_t v135 = v134 ^ __ROR8__(v133, 51);
        uint64_t v136 = __ROR8__(v132, 32) + v131;
        uint64_t v137 = __ROR8__(v131, 48);
        uint64_t v138 = __ROR8__(v134, 32) + (v136 ^ v137);
        uint64_t v139 = v138 ^ __ROR8__(v136 ^ v137, 43);
        uint64_t v140 = v135 + v136;
        uint64_t v141 = v140 ^ __ROR8__(v135, 47);
        *(void *)(v105 + 40) = v138;
        *(void *)(v105 + 4_Block_object_dispose(va, 8) = v141;
        *(void *)(v105 + 56) = __ROR8__(v140, 32);
        *(void *)(v105 + 64) = v139;
        *(void *)&v254[8] = v141 ^ v138 ^ __ROR8__(v140, 32) ^ v139;
      }
    }

    else
    {
      id v145 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
      id v146 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)"));
      [v145 handleFailureInFunction:v146 file:@"MSVHasher+Algorithms.h" lineNumber:156 description:@"Cannot finalize unknown hasher algorithm"];
    }

    goto LABEL_120;
  }

  if (v106 == 2000)
  {
    int v147 = *(unsigned __int8 *)(v105 + 51);
    switch(v147)
    {
      case 1:
        int v148 = *(unsigned __int8 *)(v105 + 48);
        break;
      case 2:
        int v148 = *(unsigned __int16 *)(v105 + 48);
        break;
      case 3:
        int v148 = *(unsigned __int16 *)(v105 + 48) | (*(unsigned __int8 *)(v105 + 50) << 16);
        break;
      default:
        unsigned int v157 = *(_DWORD *)(v105 + 40);
        goto LABEL_119;
    }

    unsigned int v157 = (461845907 * ((380141568 * v148) | ((-862048943 * v148) >> 17))) ^ *(_DWORD *)(v105 + 40);
LABEL_119:
    unsigned int v158 = -2048144789 * (v157 ^ *(_DWORD *)(v105 + 44) ^ ((v157 ^ *(_DWORD *)(v105 + 44)) >> 16));
    unsigned int v159 = (-1028477387 * (v158 ^ (v158 >> 13))) ^ ((-1028477387 * (v158 ^ (v158 >> 13))) >> 16);
    *(_DWORD *)(v105 + 40) = v159;
    *(_DWORD *)&v254[8] = v159;
    goto LABEL_120;
  }

  if (v106 == 3000)
  {
    if (*(_DWORD *)(v105 + 44)) {
      int v142 = vaddvq_s32((int32x4_t)vorrq_s8( (int8x16_t)vshlq_u32(*(uint32x4_t *)(v105 + 48), (uint32x4_t)xmmword_10013B560),  (int8x16_t)vshlq_u32(*(uint32x4_t *)(v105 + 48), (uint32x4_t)xmmword_10013B550)));
    }
    else {
      int v142 = *(_DWORD *)(v105 + 56) + 374761393;
    }
    unsigned int v149 = *(_DWORD *)(v105 + 40) + v142;
    id v150 = (int *)(v105 + 64);
    unint64_t v151 = *(_DWORD *)(v105 + 80) & 0xF;
    if (v151 >= 4)
    {
      do
      {
        int v152 = *v150++;
        HIDWORD(v153) = v149 - 1028477379 * v152;
        LODWORD(v153) = HIDWORD(v153);
        unsigned int v149 = 668265263 * (v153 >> 15);
        v151 -= 4LL;
      }

      while (v151 > 3);
    }

    for (; v151; --v151)
    {
      int v154 = *(unsigned __int8 *)v150;
      id v150 = (int *)((char *)v150 + 1);
      HIDWORD(v155) = v149 + 374761393 * v154;
      LODWORD(v155) = HIDWORD(v155);
      unsigned int v149 = -1640531535 * (v155 >> 21);
    }

    unsigned int v156 = -1028477379 * ((-2048144777 * (v149 ^ (v149 >> 15))) ^ ((-2048144777 * (v149 ^ (v149 >> 15))) >> 13));
    *(_DWORD *)&v254[8] = v156 ^ HIWORD(v156);
  }

LABEL_120:
  *(_OWORD *)__int128 buf = *(_OWORD *)v254;
  __int128 v256 = *(_OWORD *)&v254[16];
  __int128 v257 = *(_OWORD *)&v254[32];
  __int128 v258 = *(_OWORD *)&v254[48];
  uint64_t v259 = *(void *)&v254[64];
  if (*(uint64_t *)v254 > 3999)
  {
    if (*(uint64_t *)v254 > 4255)
    {
      if (*(void *)v254 == 4256LL)
      {
        id v201 = &buf[8];
        v202 = (char *)calloc(0x40uLL, 1uLL);
        id v203 = v202;
        for (uint64_t n = 0LL; n != 64; n += 2LL)
        {
          unsigned int v205 = *v201++;
          id v206 = &v202[n];
          *id v206 = a0123456789abcd[(unint64_t)v205 >> 4];
          v206[1] = a0123456789abcd[v205 & 0xF];
        }

        v172 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned __int16 v173 = v203;
        uint64_t v174 = 64LL;
      }

      else
      {
        if (*(void *)v254 != 4512LL) {
          goto LABEL_197;
        }
        v179 = &buf[8];
        v180 = (char *)calloc(0x80uLL, 1uLL);
        v181 = v180;
        for (iuint64_t i = 0LL; ii != 128; ii += 2LL)
        {
          unsigned int v183 = *v179++;
          v184 = &v180[ii];
          char *v184 = a0123456789abcd[(unint64_t)v183 >> 4];
          v184[1] = a0123456789abcd[v183 & 0xF];
        }

        v172 = objc_alloc(&OBJC_CLASS___NSString);
        unsigned __int16 v173 = v181;
        uint64_t v174 = 128LL;
      }
    }

    else if (*(void *)v254 == 4000LL)
    {
      v191 = &buf[8];
      v192 = (char *)calloc(0x20uLL, 1uLL);
      id v193 = v192;
      for (juint64_t j = 0LL; jj != 32; jj += 2LL)
      {
        unsigned int v195 = *v191++;
        v196 = &v192[jj];
        char *v196 = a0123456789abcd[(unint64_t)v195 >> 4];
        v196[1] = a0123456789abcd[v195 & 0xF];
      }

      v172 = objc_alloc(&OBJC_CLASS___NSString);
      unsigned __int16 v173 = v193;
      uint64_t v174 = 32LL;
    }

    else
    {
      if (*(void *)v254 != 4001LL) {
        goto LABEL_197;
      }
      v166 = &buf[8];
      v167 = (char *)calloc(0x28uLL, 1uLL);
      v168 = v167;
      for (kuint64_t k = 0LL; kk != 40; kk += 2LL)
      {
        unsigned int v170 = *v166++;
        v171 = &v167[kk];
        char *v171 = a0123456789abcd[(unint64_t)v170 >> 4];
        v171[1] = a0123456789abcd[v170 & 0xF];
      }

      v172 = objc_alloc(&OBJC_CLASS___NSString);
      unsigned __int16 v173 = v168;
      uint64_t v174 = 40LL;
    }

LABEL_164:
    CFStringRef v190 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( v172,  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  v173,  v174,  4LL,  1LL);
    goto LABEL_165;
  }

  if (*(uint64_t *)v254 > 2999)
  {
    if (*(void *)v254 == 3000LL)
    {
      LODWORD(v260[0]) = bswap32(*(unsigned int *)&buf[8]);
      v197 = (char *)calloc(8uLL, 1uLL);
      uint64_t v198 = 0LL;
      v199 = v197 + 1;
      do
      {
        unint64_t v200 = *((unsigned __int8 *)v260 + v198);
        *(v199 - 1) = a0123456789abcd[v200 >> 4];
        _BYTE *v199 = a0123456789abcd[v200 & 0xF];
        v199 += 2;
        ++v198;
      }

      while (v198 != 4);
      v172 = objc_alloc(&OBJC_CLASS___NSString);
      unsigned __int16 v173 = v197;
      uint64_t v174 = 8LL;
    }

    else
    {
      if (*(void *)v254 != 3001LL) {
        goto LABEL_197;
      }
      v260[0] = bswap64(*(unint64_t *)&buf[8]);
      v175 = (char *)calloc(0x10uLL, 1uLL);
      uint64_t v176 = 0LL;
      v177 = v175 + 1;
      do
      {
        unint64_t v178 = *((unsigned __int8 *)v260 + v176);
        *(v177 - 1) = a0123456789abcd[v178 >> 4];
        _BYTE *v177 = a0123456789abcd[v178 & 0xF];
        v177 += 2;
        ++v176;
      }

      while (v176 != 8);
      v172 = objc_alloc(&OBJC_CLASS___NSString);
      unsigned __int16 v173 = v175;
      uint64_t v174 = 16LL;
    }

    goto LABEL_164;
  }

  if (*(void *)v254 == 1000LL)
  {
    uint64_t v185 = *(void *)&buf[8];
    v186 = (char *)v261 + 1;
    uint64_t v187 = *(void *)&buf[8];
    do
    {
      lldiv_t v188 = lldiv(v187, 10LL);
      uint64_t v187 = v188.quot;
      if (v188.rem >= 0) {
        LOBYTE(v189) = v188.rem;
      }
      else {
        uint64_t v189 = -v188.rem;
      }
      *(v186 - 2) = v189 + 48;
      v165 = (const UInt8 *)(v186 - 2);
      --v186;
    }

    while (v188.quot);
    if (v185 < 0)
    {
      *(v186 - 2) = 45;
      v165 = (const UInt8 *)(v186 - 2);
    }

    v164 = (char *)((char *)v261 - (char *)v165);
    goto LABEL_154;
  }

  if (*(void *)v254 == 2000LL)
  {
    uint64_t v160 = *(unsigned int *)&buf[8];
    uint64_t v161 = v261;
    do
    {
      ldiv_t v162 = ldiv(v160, 10LL);
      uint64_t v160 = v162.quot;
      if (v162.rem >= 0) {
        LOBYTE(v163) = v162.rem;
      }
      else {
        uint64_t v163 = -v162.rem;
      }
      *((_BYTE *)v161 - 1) = v163 + 48;
      uint64_t v161 = (void *)((char *)v161 - 1);
    }

    while (v162.quot);
    v164 = (char *)((char *)v261 - (char *)v161);
    v165 = (const UInt8 *)v161;
LABEL_154:
    CFStringRef v190 = CFStringCreateWithBytes(0LL, v165, (CFIndex)v164, 0x8000100u, 0);
LABEL_165:
    v207 = v190;
    goto LABEL_166;
  }

LABEL_197:
  id v239 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  v240 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString * _Nonnull _MSVHashGetDigest(MSVHash)"));
  [v239 handleFailureInFunction:v240 file:@"MSVHasher+Algorithms.h" lineNumber:356 description:@"Cannot obtain digest from unknown hasher algorithm"];

  v207 = &stru_1001A7960;
LABEL_166:
  v252[0] = @"cloud-ids";
  id v208 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) containerCloudID]);
  v251 = v208;
  v209 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v251, 1LL));
  v252[1] = @"artwork";
  v253[0] = v209;
  v249[0] = @"file-size";
  v210 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [*(id *)(a1 + 32) assetFileSize]));
  v249[1] = @"hash-values";
  v250[0] = v210;
  v247[0] = @"md5";
  v247[1] = @"sha256";
  id v243 = (__CFString *)v207;
  v244 = (__CFString *)v104;
  v248[0] = v104;
  v248[1] = v207;
  v211 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v248,  v247,  2LL));
  v250[1] = v211;
  v212 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v250,  v249,  2LL));
  v253[1] = v212;
  v213 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v253,  v252,  2LL));

  v245[0] = @"dsid";
  v214 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) dsid]);
  v246[0] = v214;
  v245[1] = @"cuid";
  id v215 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) cuid]);
  v246[1] = v215;
  v245[2] = @"troveid";
  v216 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) troveID]);
  v245[3] = @"payload";
  v246[2] = v216;
  v246[3] = v213;
  v217 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v246,  v245,  4LL));

  v218 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _requestWithURL:0 URLBagKey:ICURLBagKeyCloudAssetsUpdate timeoutInterval:v217 additionalBodyFields:60.0]);
  if (v218)
  {
    id v242 = v3;
    v219 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _responseBodyForRequest:v218 retryTimeout:@"initiate asset change" debugName:180.0]);
    uint64_t v221 = objc_opt_class(&OBJC_CLASS___NSDictionary, v220);
    if ((objc_opt_isKindOfClass(v219, v221) & 1) != 0)
    {
      v222 = (void *)objc_claimAutoreleasedReturnValue([v219 objectForKey:@"back-off-delay-in-ms"]);
      uint64_t v224 = objc_opt_class(&OBJC_CLASS___NSNumber, v223);
      if ((objc_opt_isKindOfClass(v222, v224) & 1) != 0) {
        unsigned int v225 = [v222 unsignedIntValue];
      }
      else {
        unsigned int v225 = 0;
      }
      id v228 = (void *)objc_claimAutoreleasedReturnValue([v219 objectForKey:@"upload-responses-url"]);
      uint64_t v230 = objc_opt_class(&OBJC_CLASS___NSString, v229);
      unsigned int v241 = v225;
      if ((objc_opt_isKindOfClass(v228, v230) & 1) != 0 && [v228 length]) {
        uint64_t v231 = objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v228));
      }
      else {
        uint64_t v231 = 0LL;
      }
      unsigned int v232 = (void *)objc_claimAutoreleasedReturnValue([v219 objectForKey:@"download-requests-url"]);
      uint64_t v234 = objc_opt_class(&OBJC_CLASS___NSString, v233);
      if ((objc_opt_isKindOfClass(v232, v234) & 1) != 0 && [v232 length]) {
        id v227 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v232));
      }
      else {
        id v227 = 0LL;
      }

      if (v227)
      {
        if (v231)
        {
          if (v241)
          {
            v235 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
            if (os_log_type_enabled(v235, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)__int128 buf = 67109120;
              *(_DWORD *)&uint8_t buf[4] = v241;
              _os_log_impl( (void *)&_mh_execute_header,  v235,  OS_LOG_TYPE_DEFAULT,  "Backing off before sending downloadRequestsRequest for %u ms",  buf,  8u);
            }

            usleep(1000 * v241);
          }

          [*(id *)(a1 + 32) _downloadRequestsFromURL:v227 uploadResponsesURL:v231];
          v236 = v227;
          id v227 = (void *)v231;
          goto LABEL_195;
        }

        v237 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v237, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)__int128 buf = 0;
          v238 = "Failed to get uploadResponsesURL";
          goto LABEL_193;
        }

        goto LABEL_194;
      }

      id v227 = (void *)v231;
    }

    else
    {
      id v227 = 0LL;
    }

    v237 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v237, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)__int128 buf = 0;
      v238 = "Failed to get downloadRequestsURL";
LABEL_193:
      _os_log_impl((void *)&_mh_execute_header, v237, OS_LOG_TYPE_FAULT, v238, buf, 2u);
    }

LABEL_194:
    [*(id *)(a1 + 32) setStatus:2];
    v236 = (void *)objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2014LL,  0LL));
    [*(id *)(a1 + 32) setError:v236];
LABEL_195:

    id v3 = v242;
    goto LABEL_196;
  }

  v226 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v226, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v226,  OS_LOG_TYPE_ERROR,  "SagaUploadPlaylistArtworkOperation failed to create url request - aborting",  buf,  2u);
  }

  [*(id *)(a1 + 32) setStatus:3];
LABEL_196:
}

_DWORD *sub_1000DAF08(_DWORD *result, char *__src, size_t __n)
{
  if (__src)
  {
    int v3 = __n;
    uint64_t v4 = __src;
    uint64_t v5 = result;
    int v6 = result[1];
    unsigned int v7 = *result + __n;
    BOOL v9 = __n > 0xF || v7 > 0xF;
    *Class result = v7;
    result[1] = v6 | v9;
    uint64_t v10 = result[10];
    if (v10 + __n <= 0xF)
    {
      Class result = memcpy((char *)result + v10 + 24, __src, __n);
      LODWORD(v11) = v5[10] + v3;
LABEL_18:
      v5[10] = v11;
      return result;
    }

    uint64_t v12 = &__src[__n];
    if ((_DWORD)v10)
    {
      Class result = memcpy((char *)result + v10 + 24, __src, (16 - v10));
      HIDWORD(v13) = v5[2] - 2048144777 * v5[6];
      LODWORD(v13) = HIDWORD(v13);
      int v14 = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[3] - 2048144777 * v5[7];
      LODWORD(v13) = HIDWORD(v13);
      v5[2] = v14;
      v5[3] = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[4] - 2048144777 * v5[8];
      LODWORD(v13) = HIDWORD(v13);
      void v5[4] = -1640531535 * (v13 >> 19);
      HIDWORD(v13) = v5[5] - 2048144777 * v5[9];
      LODWORD(v13) = HIDWORD(v13);
      void v5[5] = -1640531535 * (v13 >> 19);
      v4 += (16 - v5[10]);
      v5[10] = 0;
    }

    if (v4 <= v12 - 16)
    {
      int v15 = v5[2];
      int v16 = v5[3];
      int v17 = v5[4];
      int v18 = v5[5];
      do
      {
        HIDWORD(v19) = v15 - 2048144777 * *(_DWORD *)v4;
        LODWORD(v19) = HIDWORD(v19);
        int v15 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v16 - 2048144777 * *((_DWORD *)v4 + 1);
        LODWORD(v19) = HIDWORD(v19);
        int v16 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v17 - 2048144777 * *((_DWORD *)v4 + 2);
        LODWORD(v19) = HIDWORD(v19);
        int v17 = -1640531535 * (v19 >> 19);
        HIDWORD(v19) = v18 - 2048144777 * *((_DWORD *)v4 + 3);
        LODWORD(v19) = HIDWORD(v19);
        int v18 = -1640531535 * (v19 >> 19);
        v4 += 16;
      }

      while (v4 <= v12 - 16);
      v5[2] = v15;
      v5[3] = v16;
      void v5[4] = v17;
      void v5[5] = v18;
    }

    if (v4 < v12)
    {
      size_t v11 = v12 - v4;
      Class result = memcpy(v5 + 6, v4, v11);
      goto LABEL_18;
    }
  }

  return result;
}

char *sub_1000DB0B0(char *result, char *__src, size_t __n)
{
  if (__src)
  {
    int v3 = __n;
    uint64_t v4 = __src;
    uint64_t v5 = result;
    *(void *)result += __n;
    uint64_t v6 = *((unsigned int *)result + 18);
    if (v6 + __n <= 0x1F)
    {
      Class result = (char *)memcpy(&result[v6 + 40], __src, __n);
      LODWORD(v7) = *((_DWORD *)v5 + 18) + v3;
LABEL_12:
      *((_DWORD *)v5 + 1_Block_object_dispose(va, 8) = v7;
      return result;
    }

    uint64_t v8 = &__src[__n];
    if ((_DWORD)v6)
    {
      Class result = (char *)memcpy(&result[v6 + 40], __src, (32 - v6));
      uint64_t v9 = __ROR8__(*((void *)v5 + 2) - 0x3D4D51C2D82B14B1LL * *((void *)v5 + 6), 33);
      *((void *)v5 + 1) = 0x9E3779B185EBCA87LL
                          * __ROR8__(*((void *)v5 + 1) - 0x3D4D51C2D82B14B1LL * *((void *)v5 + 5), 33);
      *((void *)v5 + 2) = 0x9E3779B185EBCA87LL * v9;
      unint64_t v10 = 0x9E3779B185EBCA87LL * __ROR8__(*((void *)v5 + 4) - 0x3D4D51C2D82B14B1LL * *((void *)v5 + 8), 33);
      *((void *)v5 + 3) = 0x9E3779B185EBCA87LL
                          * __ROR8__(*((void *)v5 + 3) - 0x3D4D51C2D82B14B1LL * *((void *)v5 + 7), 33);
      *((void *)v5 + 4) = v10;
      v4 += (32 - *((_DWORD *)v5 + 18));
      *((_DWORD *)v5 + 1_Block_object_dispose(va, 8) = 0;
    }

    if (v4 + 32 <= v8)
    {
      unint64_t v11 = *((void *)v5 + 1);
      unint64_t v12 = *((void *)v5 + 2);
      unint64_t v14 = *((void *)v5 + 3);
      unint64_t v13 = *((void *)v5 + 4);
      do
      {
        unint64_t v11 = 0x9E3779B185EBCA87LL * __ROR8__(v11 - 0x3D4D51C2D82B14B1LL * *(void *)v4, 33);
        unint64_t v12 = 0x9E3779B185EBCA87LL * __ROR8__(v12 - 0x3D4D51C2D82B14B1LL * *((void *)v4 + 1), 33);
        unint64_t v14 = 0x9E3779B185EBCA87LL * __ROR8__(v14 - 0x3D4D51C2D82B14B1LL * *((void *)v4 + 2), 33);
        unint64_t v13 = 0x9E3779B185EBCA87LL * __ROR8__(v13 - 0x3D4D51C2D82B14B1LL * *((void *)v4 + 3), 33);
        v4 += 32;
      }

      while (v4 <= v8 - 32);
      *((void *)v5 + 1) = v11;
      *((void *)v5 + 2) = v12;
      *((void *)v5 + 3) = v14;
      *((void *)v5 + 4) = v13;
    }

    if (v4 < v8)
    {
      size_t v7 = v8 - v4;
      Class result = (char *)memcpy(v5 + 40, v4, v7);
      goto LABEL_12;
    }
  }

  return result;
}

void sub_1000DB610(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ICRemoteRequestOperationExecutionResponse);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) response]);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "msv_errorByRemovingUnsafeUserInfo"));

  id v7 = [v4 initWithRemoteRequestOperationResponse:v5 remoteRequestOperationError:v6];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void *sub_1000DB6B4(void *result)
{
  uint64_t v1 = result[4];
  if (*(_BYTE *)(v1 + 16))
  {
    uint64_t v2 = result;
    *(_BYTE *)(v1 + 16) = 0;
    [*(id *)(result[4] + 24) invalidate];
    return [*(id *)(v2[4] + 24) setDelegate:0];
  }

  return result;
}

void *sub_1000DB704(void *result)
{
  uint64_t v1 = result[4];
  if (!*(_BYTE *)(v1 + 16))
  {
    uint64_t v2 = result;
    *(_BYTE *)(v1 + 16) = 1;
    objc_msgSend(*(id *)(result[4] + 24), "setDelegate:");
    return [*(id *)(v2[4] + 24) resume];
  }

  return result;
}

uint64_t sub_1000DB754(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 16LL);
  return result;
}

void sub_1000DB7A8(id a1)
{
  id v1 = -[CloudRemoteRequestOperationExecutionServiceListener _init]( objc_alloc(&OBJC_CLASS___CloudRemoteRequestOperationExecutionServiceListener),  "_init");
  uint64_t v2 = (void *)qword_1001DB7D8;
  qword_1001DB7D8 = (uint64_t)v1;
}

void sub_1000DC0C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000DC77C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1000DC884(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = a2 == 0LL;
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 setError:v4];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000DC8E0(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([v4 responseCode] == (id)200) {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v4 databaseRevision];
  }
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v4 error]);
  [*(id *)(a1 + 32) setError:v3];

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000DD0E4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  id v4 = a2;
  [v4 writeUInt32:v3 withCode:1836413810];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000DD194;
  v5[3] = &unk_1001A61D0;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  ICDAAPUtilitiesWriteContainer(v4, 1835819884LL, v5);
}

void sub_1000DD194(uint64_t a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000DD220;
  v4[3] = &unk_1001A61D0;
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  ICDAAPUtilitiesWriteContainer(a2, 1835821428LL, v4);
}

void sub_1000DD220(uint64_t a1, void *a2)
{
  id v7 = a2;
  [v7 writeUInt8:1 withCode:1634029643];
  if (*(void *)(a1 + 32))
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue( +[ICDAAPPropertyInfo sharedContainerPropertyInfo]( &OBJC_CLASS___ICDAAPPropertyInfo,  "sharedContainerPropertyInfo"));
    id v4 = *(void **)(a1 + 32);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_1000DD340;
    v10[3] = &unk_1001A5A48;
    id v11 = v3;
    id v12 = v7;
    id v5 = v3;
    [v4 enumerateKeysAndObjectsUsingBlock:v10];
  }

  id v6 = *(void **)(a1 + 40);
  if (v6)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    _DWORD v8[2] = sub_1000DD454;
    void v8[3] = &unk_1001A70B8;
    id v9 = v6;
    ICDAAPUtilitiesWriteContainer(v7, 1835623521LL, v8);
  }
}

void sub_1000DD340(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) hasInfoForProperty:v5])
  {
    ICDAAPUtilitiesWriteProperty( *(void *)(a1 + 40),  [*(id *)(a1 + 32) elementCodeForProperty:v5],  objc_msgSend(*(id *)(a1 + 32), "valueTypeForProperty:", v5),  v6);
  }

  else
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 138543362;
      id v9 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "No DAAP code found for container property: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }
}

void sub_1000DD454(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000DD4D0;
  v6[3] = &unk_1001A5A70;
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateCloudItemIDsUsingBlock:v6];
}

void sub_1000DD4D0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  switch(a3)
  {
    case 2LL:
      id v7 = v5;
      [*(id *)(a1 + 32) writeString:v5 withCode:1634025833];
      goto LABEL_7;
    case 1LL:
      id v7 = v5;
      objc_msgSend(*(id *)(a1 + 32), "writeUInt64:withCode:", objc_msgSend(v5, "unsignedLongLongValue"), 1634025833);
      goto LABEL_7;
    case 0LL:
      id v7 = v5;
      objc_msgSend(*(id *)(a1 + 32), "writeUInt32:withCode:", objc_msgSend(v5, "unsignedIntValue"), 1835624804);
LABEL_7:
      id v6 = v7;
      break;
  }
}

os_log_t sub_1000DD824()
{
  return os_log_create("com.apple.amp.itunescloudd", "Default");
}

os_log_t sub_1000DD848()
{
  return os_log_create("com.apple.amp.itunescloudd", "Artwork");
}

os_log_t sub_1000DD86C()
{
  return os_log_create("com.apple.amp.itunescloudd", "CloudSync");
}

os_log_t sub_1000DD890()
{
  return os_log_create("com.apple.amp.itunescloudd", "Connections");
}

os_log_t sub_1000DD8B4()
{
  return os_log_create("com.apple.amp.itunescloudd", "Push");
}

os_log_t sub_1000DD8D8()
{
  return os_log_create("com.apple.amp.itunescloudd", "XPC");
}

os_log_t sub_1000DD8FC()
{
  return os_log_create("com.apple.amp.itunescloudd", "XPC_Oversize");
}

os_log_t sub_1000DD920()
{
  return os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
}

os_log_t sub_1000DD944()
{
  return os_log_create("com.apple.amp.itunescloudd", "LibraryRecommendations");
}

os_log_t sub_1000DD968()
{
  return os_log_create("com.apple.amp.itunescloudd", "CloudLibraryCoordinator");
}

os_log_t sub_1000DD98C()
{
  return os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
}

LABEL_27:
  if (!v81[5] && *(_BYTE *)(*(void *)&buf[8] + 24LL))
  {
    int v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    unint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(-[JaliscoImporter musicLibrary](self, "musicLibrary"));
    int v49 = (void *)objc_claimAutoreleasedReturnValue([v48 libraryUID]);
    [v47 postNotificationName:@"ICDPlaybackPositionImportRequiresSyncNotification" object:v49];
  }

  _Block_object_dispose(buf, 8);

  objc_destroyWeak(&v75);
  objc_destroyWeak(&v77);

  objc_destroyWeak(&location);
  objc_autoreleasePoolPop(context);
  int v15 = (id)v81[5];
  _Block_object_dispose(&v80, 8);

LABEL_31:
  return v15;
}

void sub_1000DF304( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,id a55,uint64_t a56,char a57)
{
}

uint64_t sub_1000DF464(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000DF474(uint64_t a1)
{
}

void sub_1000DF47C(uint64_t a1, float a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    *(float *)&double v4 = a2 * 0.99;
    id v5 = WeakRetained;
    [WeakRetained setProgress:v4];
    id WeakRetained = v5;
  }
}

void sub_1000DF4C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v14 = 138543618;
      uint64_t v15 = v6;
      __int16 v16 = 2114;
      id v17 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "%{public}@ - Import failed with error = %{public}@",  (uint8_t *)&v14,  0x16u);
    }
  }

  else
  {
    id WeakRetained = (os_log_s *)objc_loadWeakRetained((id *)(a1 + 56));
    id v5 = WeakRetained;
    if (WeakRetained)
    {
      int v8 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s supportedMediaKinds](WeakRetained, "supportedMediaKinds"));
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 componentsJoinedByString:@","]);

      unint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s musicLibrary](v5, "musicLibrary"));
      [v10 setJaliscoLastSupportedMediaKinds:v9];
    }
  }

  uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v4;
  id v13 = v4;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000DF620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    unsigned int v42 = 0LL;
    uint64_t v6 = 0LL;
    id v7 = 0LL;
    goto LABEL_63;
  }

  uint64_t v3 = a3;
  id v5 = 0LL;
  uint64_t v6 = 0LL;
  id v7 = 0LL;
  int v8 = (void *)(a2 + 16);
  do
  {
    int v9 = *((_DWORD *)v8 - 4);
    switch(v9)
    {
      case 1634026357:
        uint64_t v40 = v5;
        if (v8[1] == 2LL) {
          id v12 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  *(v8 - 1),  *v8,  4LL,  0LL);
        }
        else {
          id v12 = 0LL;
        }
        uint64_t v15 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _chapterDataFromURL:v12]);

        __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v12));
        uint64_t v17 = objc_claimAutoreleasedReturnValue([v16 URLByDeletingLastPathComponent]);

        id v7 = (void *)v17;
        uint64_t v6 = (void *)v15;
        id v5 = v40;
        break;
      case 1634951787:
        uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8LL);
        if (*(_BYTE *)(v13 + 24))
        {
          BOOL v14 = 1;
        }

        else
        {
          unsigned int v18 = -1;
          unint64_t v19 = (unsigned int *)*(v8 - 1);
          switch(*v8)
          {
            case 1LL:
              unsigned int v18 = *(unsigned __int8 *)v19;
              break;
            case 2LL:
              unsigned int v18 = __rev16(*(unsigned __int16 *)v19);
              break;
            case 4LL:
              unsigned int v24 = *v19;
              goto LABEL_27;
            case 8LL:
              unsigned int v24 = v19[1];
LABEL_27:
              unsigned int v18 = bswap32(v24);
              break;
            default:
              break;
          }

          BOOL v14 = v18 != 0;
        }

        *(_BYTE *)(v13 + 24) = v14;
        break;
      case 1835625572:
        uint64_t v10 = v8[1];
        switch(v10)
        {
          case 1LL:
            uint64_t v20 = 0LL;
            switch(*v8)
            {
              case 1LL:
                int v41 = v5;
                uint64_t v21 = objc_alloc(&OBJC_CLASS___NSNumber);
                uint64_t v22 = 255LL;
                uint64_t v23 = (unsigned __int8 *)*(v8 - 1);
                switch(*v8)
                {
                  case 1LL:
                    goto LABEL_38;
                  case 2LL:
                    ++v23;
                    goto LABEL_38;
                  case 4LL:
                    v23 += 3;
                    goto LABEL_38;
                  case 8LL:
                    v23 += 7;
LABEL_38:
                    uint64_t v22 = *v23;
                    break;
                  default:
                    break;
                }

                uint64_t v34 = -[NSNumber initWithUnsignedChar:](v21, "initWithUnsignedChar:", v22);
                goto LABEL_54;
              case 2LL:
                int v41 = v5;
                uint64_t v25 = objc_alloc(&OBJC_CLASS___NSNumber);
                uint64_t v26 = 0xFFFFLL;
                uint64_t v27 = (unsigned __int8 *)*(v8 - 1);
                switch(*v8)
                {
                  case 1LL:
                    uint64_t v26 = *v27;
                    break;
                  case 2LL:
                    unsigned int v35 = *(unsigned __int16 *)v27;
                    goto LABEL_43;
                  case 4LL:
                    unsigned int v35 = *((unsigned __int16 *)v27 + 1);
                    goto LABEL_43;
                  case 8LL:
                    unsigned int v35 = *((unsigned __int16 *)v27 + 3);
LABEL_43:
                    uint64_t v26 = bswap32(v35) >> 16;
                    break;
                  default:
                    break;
                }

                uint64_t v34 = -[NSNumber initWithUnsignedShort:](v25, "initWithUnsignedShort:", v26);
                goto LABEL_54;
              case 4LL:
                int v41 = v5;
                uint64_t v28 = objc_alloc(&OBJC_CLASS___NSNumber);
                uint64_t v29 = 0xFFFFFFFFLL;
                uint64_t v30 = (unsigned int *)*(v8 - 1);
                switch(*v8)
                {
                  case 1LL:
                    uint64_t v29 = *(unsigned __int8 *)v30;
                    break;
                  case 2LL:
                    uint64_t v29 = __rev16(*(unsigned __int16 *)v30);
                    break;
                  case 4LL:
                    unsigned int v36 = *v30;
                    goto LABEL_48;
                  case 8LL:
                    unsigned int v36 = v30[1];
LABEL_48:
                    uint64_t v29 = bswap32(v36);
                    break;
                  default:
                    break;
                }

                uint64_t v34 = -[NSNumber initWithUnsignedLong:](v28, "initWithUnsignedLong:", v29);
                goto LABEL_54;
              case 8LL:
                int v41 = v5;
                uint64_t v31 = objc_alloc(&OBJC_CLASS___NSNumber);
                unint64_t v32 = -1LL;
                uint64_t v33 = (unsigned __int8 *)*(v8 - 1);
                switch(*v8)
                {
                  case 1LL:
                    unint64_t v32 = *v33;
                    break;
                  case 2LL:
                    unint64_t v32 = __rev16(*(unsigned __int16 *)v33);
                    break;
                  case 4LL:
                    unint64_t v32 = bswap32(*(_DWORD *)v33);
                    break;
                  case 8LL:
                    break;
                  default:
                    break;
                }

                uint64_t v34 = -[NSNumber initWithUnsignedLongLong:](v31, "initWithUnsignedLongLong:", v32);
LABEL_54:
                uint64_t v20 = v34;
                id v5 = v41;
                break;
              default:
                goto LABEL_55;
            }

            goto LABEL_55;
          case 3LL:
            uint64_t v39 = v5;
            uint64_t v11 = -[NSData initWithBytesNoCopy:length:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytesNoCopy:length:freeWhenDone:",  *(v8 - 1),  *v8,  0LL);
            break;
          case 2LL:
            uint64_t v39 = v5;
            uint64_t v11 = -[NSString initWithBytesNoCopy:length:encoding:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytesNoCopy:length:encoding:freeWhenDone:",  *(v8 - 1),  *v8,  4LL,  0LL);
            break;
          default:
            uint64_t v20 = 0LL;
            goto LABEL_55;
        }

        id v5 = v39;
        uint64_t v20 = v11;
LABEL_55:

        id v5 = v20;
        break;
      default:
        break;
    }

    v8 += 4;
    --v3;
  }

  while (v3);
  if (v5 && v6)
  {
    unsigned int v42 = v5;
    if (v7)
    {
      uint64_t v37 = *(void **)(a1 + 40);
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _chapterArtworkURLsForData:v6 baseURL:v7]);
      [v37 setObject:v38 forKey:v42];
    }
  }

  else
  {
    unsigned int v42 = v5;
  }

LABEL_63:
}

id sub_1000DFAB8(id a1, id a2)
{
  return [a2 path];
}

void sub_1000DFAC0(uint64_t a1, uint64_t a2, id *a3)
{
  id v10 = *a3;
  id v5 = a3[1];
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber, v6);
  if ((objc_opt_isKindOfClass(v10, v7) & 1) != 0)
  {
    uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSNumber, v8);
    if ((objc_opt_isKindOfClass(v5, v9) & 1) != 0) {
      [*(id *)(a1 + 32) setObject:v5 forKey:v10];
    }
  }
}

uint64_t sub_1000DFB54(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000E0E38( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, id location, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

void sub_1000E110C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v8 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT DISTINCT (fetchable_artwork_token), subscription_store_item_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token",  &off_1001B4BF0));

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000E1204;
  void v9[3] = &unk_1001A6B20;
  id v5 = *(id *)(a1 + 32);
  char v12 = *(_BYTE *)(a1 + 48);
  id v10 = v5;
  id v11 = v4;
  id v6 = v4;
  [v8 enumerateRowsWithBlock:v9];
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkImporter]);
  [v7 importCloudArtworkForRequests:v6];
}

void sub_1000E1204(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = -[CloudArtworkImportRequest initWithClientIdentity:]( objc_alloc(&OBJC_CLASS___CloudArtworkImportRequest),  "initWithClientIdentity:",  *(void *)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  -[CloudArtworkImportRequest setToken:](v6, "setToken:", v4);

  -[CloudArtworkImportRequest setCloudID:](v6, "setCloudID:", [v3 int64ForColumnIndex:1]);
  id v5 = [v3 intForColumnIndex:2];

  -[CloudArtworkImportRequest setMediaType:](v6, "setMediaType:", v5);
  -[CloudArtworkImportRequest setArtworkType:](v6, "setArtworkType:", 1LL);
  -[CloudArtworkImportRequest setAllowsCellularData:](v6, "setAllowsCellularData:", *(unsigned __int8 *)(a1 + 48));
  [*(id *)(a1 + 40) addObject:v6];
}

uint64_t sub_1000E12D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000E12E8(uint64_t a1)
{
}

uint64_t sub_1000E12F0(void *a1)
{
  if (*(void *)(*(void *)(a1[5] + 8LL) + 40LL))
  {
    uint64_t v2 = *(void *)(a1[6] + 8LL);
    id v3 = *(void **)(v2 + 40);
    *(void *)(v2 + 40) = 0LL;
  }

  return (*(uint64_t (**)(void))(a1[4] + 16LL))();
}

void sub_1000E1358(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mutableCopy];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v4 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained cloudArtworkInfoDictionaries]);

  id v5 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    id v7 = [v4 count];
    uint64_t v9 = (void *)objc_opt_class(*(void *)(a1 + 40), v8);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v57 = v6;
    __int16 v58 = 2048;
    id v59 = v7;
    __int16 v60 = 2114;
    id v61 = v9;
    id v10 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Received %lu artwork info lookup dictionaries for lookup operation in  %{public}@ IDs.",  buf,  0x20u);
  }

  __int128 v50 = 0u;
  __int128 v51 = 0u;
  __int128 v48 = 0u;
  __int128 v49 = 0u;
  id v11 = v4;
  id v12 = [v11 countByEnumeratingWithState:&v48 objects:v55 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v49;
    uint64_t v15 = ICArtworkInfoKeySagaID;
    do
    {
      for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v49 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v17 = *(void **)(*((void *)&v48 + 1) + 8LL * (void)i);
        unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue([v17 objectForKeyedSubscript:v15]);
        [v2 removeObject:v18];
        [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v17];
      }

      id v13 = [v11 countByEnumeratingWithState:&v48 objects:v55 count:16];
    }

    while (v13);
  }

  unsigned int v42 = (void *)a1;
  int v41 = v11;

  __int128 v46 = 0u;
  __int128 v47 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  id v19 = v2;
  id v20 = [v19 countByEnumeratingWithState:&v44 objects:v54 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v45;
    uint64_t v23 = "com.apple.amp.itunescloudd";
    unsigned int v24 = "Artwork";
    do
    {
      for (uint64_t j = 0LL; j != v21; uint64_t j = (char *)j + 1)
      {
        if (*(void *)v45 != v22) {
          objc_enumerationMutation(v19);
        }
        uint64_t v26 = *(void **)(*((void *)&v44 + 1) + 8LL * (void)j);
        uint64_t v27 = os_log_create(v23, v24);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        {
          id v29 = v21;
          uint64_t v30 = v23;
          uint64_t v31 = v42[5];
          unint64_t v32 = v24;
          id v33 = v19;
          uint64_t v34 = (void *)objc_opt_class(v31, v28);
          id v43 = v34;
          id v35 = [v26 unsignedLongLongValue];
          *(_DWORD *)__int128 buf = 138543874;
          uint64_t v57 = v31;
          uint64_t v23 = v30;
          id v21 = v29;
          __int16 v58 = 2114;
          id v59 = v34;
          id v19 = v33;
          unsigned int v24 = v32;
          __int16 v60 = 2048;
          id v61 = v35;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_ERROR,  "%{public}@ - Failed to fetch artwork info lookup in %{public}@ ID: %llu",  buf,  0x20u);
        }
      }

      id v21 = [v19 countByEnumeratingWithState:&v44 objects:v54 count:16];
    }

    while (v21);
  }

  if ([v19 count])
  {
    unint64_t v52 = @"NSDebugDescription";
    unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ Failed to fetch artwork info lookup for cloud IDs: %@",  v42[5],  v19));
    unsigned int v53 = v36;
    uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v53,  &v52,  1LL));
    uint64_t v38 = objc_claimAutoreleasedReturnValue( +[NSError ic_cloudClientErrorWithCode:userInfo:]( &OBJC_CLASS___NSError,  "ic_cloudClientErrorWithCode:userInfo:",  2021LL,  v37));
    uint64_t v39 = *(void *)(v42[8] + 8LL);
    uint64_t v40 = *(void **)(v39 + 40);
    *(void *)(v39 + 40) = v38;
  }

  (*(void (**)(void))(v42[6] + 16LL))();
}

void sub_1000E1D60( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

uint64_t sub_1000E1DA4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000E1DB4(uint64_t a1)
{
}

void sub_1000E1DBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), v8);
    id v10 = NSStringFromClass(v9);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = *(void **)(a1 + 32);
    id v13 = [v12 method];
    uint64_t v14 = @"POST";
    if (!v13) {
      uint64_t v14 = @"GET";
    }
    unint64_t v32 = v14;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) action]);
    uint64_t v17 = (objc_class *)objc_opt_class(v5, v16);
    unsigned int v18 = NSStringFromClass(v17);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    id v20 = [v5 responseCode];
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    *(_DWORD *)__int128 buf = 138545154;
    uint64_t v34 = v11;
    __int16 v35 = 2048;
    id v36 = v12;
    __int16 v37 = 2114;
    uint64_t v38 = v32;
    __int16 v39 = 2114;
    uint64_t v40 = v15;
    __int16 v41 = 2114;
    unsigned int v42 = v19;
    __int16 v43 = 2048;
    id v44 = v5;
    __int16 v45 = 2048;
    id v46 = v20;
    __int16 v47 = 2048;
    id v48 = [v21 length];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x52u);
  }

  if (v6)
  {
    uint64_t v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      unsigned int v24 = (void *)objc_opt_class(*(void *)(a1 + 40), v23);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v34 = v24;
      __int16 v35 = 2114;
      id v36 = v6;
      id v25 = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "[%{public}@] failed with error: %{public}@",  buf,  0x16u);
    }
  }

  uint64_t v26 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v27 = *(void **)(v26 + 40);
  *(void *)(v26 + 40) = v5;
  id v28 = v5;

  uint64_t v29 = *(void *)(*(void *)(a1 + 64) + 8LL);
  uint64_t v30 = *(void **)(v29 + 40);
  *(void *)(v29 + 40) = v6;
  id v31 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000E25BC(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v22 = a1;
  id v21 = a2;
  id v9 = a3;
  id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3TrackPropertySubscriptionStoreItemID,  a5));
  id v12 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:]( &OBJC_CLASS___ML3Track,  "allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:",  v9,  v11,  &__NSArray0__struct,  0LL));
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472LL;
  void v31[2] = sub_1000E290C;
  void v31[3] = &unk_1001A6458;
  id v13 = v10;
  unint64_t v32 = v13;
  [v12 enumeratePersistentIDsUsingBlock:v31];
  if (-[NSMutableSet count](v13, "count"))
  {
    uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = -[NSMutableSet count](v13, "count");
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v34 = a4;
      __int16 v35 = 2048;
      id v36 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Found %lu track(s) to update in_my_library...",  buf,  0x16u);
    }

    uint64_t v16 = v11;
    uint64_t v17 = v12;
  }

  else
  {
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3TrackPropertyStorePlaylistID,  a5));

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:]( &OBJC_CLASS___ML3Track,  "allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:",  v9,  v16,  &__NSArray0__struct,  0LL));
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472LL;
    void v29[2] = sub_1000E2958;
    v29[3] = &unk_1001A6458;
    unsigned int v18 = v13;
    uint64_t v30 = v18;
    [v17 enumeratePersistentIDsUsingBlock:v29];

    uint64_t v14 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v19 = -[NSMutableSet count](v18, "count");
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v34 = a4;
      __int16 v35 = 2048;
      id v36 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Found %lu track(s) to update in_my_library (based on album store id)...",  buf,  0x16u);
    }
  }

  if (-[NSMutableSet count](v13, "count"))
  {
    unsigned __int8 v20 = sub_100114150(v22);
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_1000E29A4;
    v23[3] = &unk_1001A5C90;
    id v24 = v21;
    id v25 = v13;
    unsigned __int8 v28 = v20;
    id v26 = v9;
    uint64_t v27 = a4;
    [v26 performDatabaseTransactionWithBlock:v23];
  }
}

void sub_1000E290C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

void sub_1000E2958(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  [v2 addObject:v3];
}

uint64_t sub_1000E29A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v3 setPrivacyContext:v4];

  uint64_t v19 = 0LL;
  unsigned __int8 v20 = &v19;
  uint64_t v21 = 0x2020000000LL;
  char v22 = 1;
  id v5 = *(void **)(a1 + 40);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1000E2B0C;
  v13[3] = &unk_1001A5C40;
  uint64_t v16 = &v19;
  id v6 = v3;
  id v14 = v6;
  char v18 = *(_BYTE *)(a1 + 64);
  id v7 = *(id *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  id v15 = v7;
  uint64_t v17 = v8;
  [v5 enumerateObjectsUsingBlock:v13];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_1000E2DA4;
  void v11[3] = &unk_1001A5C68;
  id v12 = *(id *)(a1 + 48);
  [v6 enqueueBlockForTransactionCommit:v11];
  uint64_t v9 = *((unsigned __int8 *)v20 + 24);

  _Block_object_dispose(&v19, 8);
  return v9;
}

void sub_1000E2AF4(_Unwind_Exception *a1)
{
}

void sub_1000E2B0C(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5 = a2;
  id v6 = *(void **)(a1 + 32);
  id v31 = v5;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v31, 1LL));
  id v23 = 0LL;
  unsigned __int8 v8 = [v6 executeUpdate:@"UPDATE item_store set store_saga_id = store_saga_id WHERE item_pid = ?" withParameters:v7 error:&v23];
  id v9 = v23;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v8;

  if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL)) {
    goto LABEL_6;
  }
  if (!*(_BYTE *)(a1 + 64)) {
    goto LABEL_4;
  }
  id v10 = *(void **)(a1 + 32);
  v30[0] = &off_1001B4258;
  v30[1] = v5;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v30, 2LL));
  id v22 = v9;
  LOBYTE(v10) = objc_msgSend( v10,  "executeUpdate:withParameters:error:",  @"UPDATE item SET keep_local = ? WHERE item_pid = ? AND in_my_library = 1 AND media_type IN (8, 1032)",  v11,  &v22);
  id v12 = v22;

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)v10;
  id v9 = v12;
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL))
  {
LABEL_4:
    +[ML3Track incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:]( ML3Track,  "incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:",  *(void *)(a1 + 40),  [v5 longLongValue],  0,  0,  *(void *)(a1 + 32));
    id v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 56);
      id v15 = [v5 longLongValue];
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v25 = v14;
      __int16 v26 = 2048;
      id v27 = v15;
      uint64_t v16 = "[%{public}@] Updated in_my_library for track with persistent ID %lld";
      uint64_t v17 = v13;
      os_log_type_t v18 = OS_LOG_TYPE_DEFAULT;
      uint32_t v19 = 22;
LABEL_8:
      _os_log_impl((void *)&_mh_execute_header, v17, v18, v16, buf, v19);
    }
  }

  else
  {
LABEL_6:
    *a3 = 1;
    id v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      uint64_t v20 = *(void *)(a1 + 56);
      id v21 = [v5 longLongValue];
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v25 = v20;
      __int16 v26 = 2048;
      id v27 = v21;
      __int16 v28 = 2114;
      id v29 = v9;
      uint64_t v16 = "[%{public}@] Failed to update in_my_library for track with persistent ID %lld with error: %{public}@";
      uint64_t v17 = v13;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
      uint32_t v19 = 32;
      goto LABEL_8;
    }
  }
}

id *sub_1000E2DA4(id *result, int a2)
{
  if (a2)
  {
    id v2 = result;
    [result[4] notifyEntitiesAddedOrRemoved];
    return (id *)[v2[4] notifyContentsDidChange];
  }

  return result;
}

uint64_t sub_1000E3438(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3ContainerPropertyStoreCloudID,  0LL));
  v24[0] = v7;
  uint64_t v8 = ML3ContainerPropertyCloudGlobalID;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) allKeys]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v9));
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ContainmentPredicate predicateWithProperty:values:]( &OBJC_CLASS___ML3ContainmentPredicate,  "predicateWithProperty:values:",  v8,  v10));
  v24[1] = v11;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v24, 2LL));
  id v13 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v12));

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Container queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Container,  "queryWithLibrary:predicate:",  v14,  v13));

  uint64_t v23 = v8;
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v23, 1LL));
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  v20[2] = sub_1000E3680;
  void v20[3] = &unk_1001A5C18;
  id v17 = *(id *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 32);
  id v21 = v17;
  uint64_t v22 = v18;
  [v15 enumeratePersistentIDsAndProperties:v16 usingBlock:v20];

  return 1LL;
}

void sub_1000E3680(uint64_t a1, uint64_t a2, id *a3)
{
  id v5 = *a3;
  if ([v5 length])
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v5]);
    id v7 = v6;
    if (v6 && (uint64_t)[v6 longLongValue] >= 1)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
      id v9 = +[ML3Container newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Container,  "newWithPersistentID:inLibrary:",  a2,  v8);

      id v10 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = 134218240;
        uint64_t v12 = a2;
        __int16 v13 = 2048;
        id v14 = [v7 longLongValue];
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Updating playlist with persistent-id %lld, setting cloud-id to %lld",  (uint8_t *)&v11,  0x16u);
      }

      [v9 setValue:v7 forProperty:ML3ContainerPropertyStoreCloudID];
    }
  }
}

uint64_t start()
{
  id v0 = objc_autoreleasePoolPush();
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
  [v1 start];

  objc_autoreleasePoolPop(v0);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSRunLoop currentRunLoop](&OBJC_CLASS___NSRunLoop, "currentRunLoop"));
  [v2 run];

  return 0LL;
}

void sub_1000E4178(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 104LL);
  id v4 = a2;
  [v4 writeString:v3 withCode:1634357319];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  v5[2] = sub_1000E4218;
  v5[3] = &unk_1001A70B8;
  void v5[4] = *(void *)(a1 + 32);
  ICDAAPUtilitiesWriteContainer(v4, 1835819884LL, v5);
}

uint64_t sub_1000E4218(uint64_t a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1000E4278;
  v3[3] = &unk_1001A70B8;
  void v3[4] = *(void *)(a1 + 32);
  return ICDAAPUtilitiesWriteContainer(a2, 1835821428LL, v3);
}

void sub_1000E4278(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 112LL);
  id v4 = a2;
  [v4 writeString:v3 withCode:1936746852];
  [v4 writeUInt8:*(unsigned __int8 *)(*(void *)(a1 + 32) + 120) withCode:1634357328];
}

void sub_1000E4AFC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1000E545C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

float sub_1000E55D8(uint64_t a1, void *a2)
{
  float result = *(float *)v5;
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8LL);
  if (v5[0] > *(float *)(v4 + 24))
  {
    float result = v5[0];
    *(float *)(v4 + 24) = result;
  }

  return result;
}

void sub_1000E562C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1000E56E8;
  void v9[3] = &unk_1001A5DD0;
  uint64_t v4 = *(void **)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v5 = *(id *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  id v7 = *(void **)(a1 + 56);
  id v11 = v5;
  uint64_t v12 = v6;
  id v13 = v7;
  id v14 = v3;
  id v8 = v3;
  [v4 performDatabaseTransactionWithBlock:v9];
}

uint64_t sub_1000E56E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkToken]);
  uint64_t v30 = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v30, 1LL));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT relative_path FROM artwork WHERE artwork_token = ?" withParameters:v5]);

  uint64_t v20 = 0LL;
  id v21 = &v20;
  uint64_t v22 = 0x3032000000LL;
  uint64_t v23 = sub_1000E5924;
  id v24 = sub_1000E5934;
  id v25 = 0LL;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1000E593C;
  v14[3] = &unk_1001A5DA8;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  id v15 = v7;
  uint64_t v16 = v8;
  id v17 = *(id *)(a1 + 32);
  id v18 = *(id *)(a1 + 56);
  uint32_t v19 = &v20;
  [v6 enumerateRowsWithBlock:v14];
  if (v21[5])
  {
    id v9 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v11 = v21[5];
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v27 = v10;
      __int16 v28 = 2112;
      uint64_t v29 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "%{public}@ failed to create artwork color analysis with error: %@",  buf,  0x16u);
    }

    uint64_t v12 = v21[5];
  }

  else
  {
    uint64_t v12 = 0LL;
  }

  [*(id *)(a1 + 64) finishWithError:v12];

  _Block_object_dispose(&v20, 8);
  return 1LL;
}

void sub_1000E5904( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_1000E5924(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000E5934(uint64_t a1)
{
}

void sub_1000E593C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a3;
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL), a3);
  }

  else
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([a2 stringForColumnIndex:0]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) originalArtworkDirectory]);
    v26[0] = v8;
    v26[1] = v7;
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v26, 2LL));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString pathWithComponents:](&OBJC_CLASS___NSString, "pathWithComponents:", v9));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:isDirectory:](&OBJC_CLASS___NSURL, "fileURLWithPath:isDirectory:", v10, 0LL));

    objc_msgSend( *(id *)(a1 + 40),  "_sizeForArtworkWithMediaType:artworkType:",  objc_msgSend(*(id *)(a1 + 48), "artworkMediaType"),  objc_msgSend(*(id *)(a1 + 48), "artworkType"));
    id v14 = objc_msgSend( [MSVArtworkServiceColorAnalysisRequest alloc],  "initWithSourceURL:preferredImageSize:",  v11,  v12,  v13);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(+[MSVArtworkService sharedService](&OBJC_CLASS___MSVArtworkService, "sharedService"));
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_1000E5B40;
    v21[3] = &unk_1001A5D80;
    id v16 = *(id *)(a1 + 56);
    uint64_t v17 = *(void *)(a1 + 40);
    id v18 = *(void **)(a1 + 48);
    id v22 = v16;
    uint64_t v23 = v17;
    id v19 = v18;
    uint64_t v20 = *(void *)(a1 + 64);
    id v24 = v19;
    uint64_t v25 = v20;
    [v15 sendRequest:v14 completion:v21];
  }
}

void sub_1000E5B40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL), a3);
    id v7 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) assetURL]);
      int v17 = 138543618;
      uint64_t v18 = v8;
      __int16 v19 = 2112;
      uint64_t v20 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ failed to create artwork color analysis for image at: %@",  (uint8_t *)&v17,  0x16u);
    }
  }

  else
  {
    id v7 = (os_log_s *)[[ML3ArtworkColorAnalysis alloc] initWithColorAnalysis:v5];
    uint64_t v23 = @"ColorAnalysis";
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([&off_1001B4270 stringValue]);
    id v21 = v10;
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s dictRepresentation](v7, "dictRepresentation"));
    id v22 = v11;
    double v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v22,  &v21,  1LL));
    id v24 = v12;
    double v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v24,  &v23,  1LL));

    [*(id *)(a1 + 32) setInterestDictionary:v13];
    id v14 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 40);
      id v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) assetURL]);
      int v17 = 138543618;
      uint64_t v18 = v15;
      __int16 v19 = 2112;
      uint64_t v20 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ set interest dict for artwork for image at: %@",  (uint8_t *)&v17,  0x16u);
    }
  }
}

void sub_1000E5D84(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40))
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationQueue]);
    [v2 waitUntilAllOperationsAreFinished];
  }

  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationMap]);
  [v3 removeAllObjects];
}

void sub_1000E5DE0(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationQueue]);
  [v1 increaseQualityOfService];
}

void sub_1000E5E10(uint64_t a1)
{
  id v1 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationQueue]);
  [v1 decreaseQualityOfService];
}

void sub_1000E5E40(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"artwork_operation(%llu, %ld, %ld)",  *(void *)(a1 + 40),  *(void *)(a1 + 48),  [*(id *)(a1 + 32) sourceType]));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationMap]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKey:v2]);

  if (v4)
  {
    id v5 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v6 = (unint64_t)[v4 artworkType];
      if (v6 > 5) {
        id v7 = 0LL;
      }
      else {
        id v7 = off_1001A5E30[v6];
      }
      uint64_t v8 = sub_1000E5FB8((uint64_t)[v4 sourceType]);
      id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v11 = v2;
      __int16 v12 = 2114;
      double v13 = v7;
      __int16 v14 = 2114;
      uint64_t v15 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Decreasing priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)",  buf,  0x20u);
    }

    [v4 decreasePriority];
  }
}

CFStringRef sub_1000E5FB8(uint64_t a1)
{
  id v1 = @"ML3ArtworkSourceTypePurchaseHistory";
  id v2 = @"ML3ArtworkSourceTypeStore";
  id v3 = @"ML3ArtworkSourceTypeSubscriptionStoreContent";
  if (a1 != 600) {
    id v3 = 0LL;
  }
  if (a1 != 500) {
    id v2 = v3;
  }
  if (a1 != 400) {
    id v1 = v2;
  }
  uint64_t v4 = @"ML3ArtworkSourceTypeSync";
  if (a1 != 300) {
    uint64_t v4 = 0LL;
  }
  if (a1 == 200) {
    uint64_t v4 = @"ML3ArtworkSourceTypeCloud";
  }
  if (!a1) {
    uint64_t v4 = @"ML3ArtworkSourceTypeUnknown";
  }
  if (a1 <= 399) {
    return v4;
  }
  else {
    return v1;
  }
}

void sub_1000E6024(uint64_t a1)
{
  id v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v65 = 0u;
  __int128 v66 = 0u;
  __int128 v63 = 0u;
  __int128 v64 = 0u;
  id obj = *(id *)(a1 + 32);
  id v52 = [obj countByEnumeratingWithState:&v63 objects:v73 count:16];
  if (v52)
  {
    uint64_t v51 = *(void *)v64;
    uint64_t v46 = ML3ContainerPropertyStoreCloudID;
    uint64_t v47 = ML3TrackPropertyStoreSagaID;
    do
    {
      for (uint64_t i = 0LL; i != v52; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v64 != v51) {
          objc_enumerationMutation(obj);
        }
        id v3 = *(void **)(*((void *)&v63 + 1) + 8LL * (void)i);
        uint64_t v4 = objc_opt_class(&OBJC_CLASS___CloudArtworkImportRequest, v1);
        if ((objc_opt_isKindOfClass(v3, v4) & 1) == 0)
        {
          uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
          [v40 handleFailureInMethod:*(void *)(a1 + 48), *(void *)(a1 + 40), @"CloudArtworkImporter.m", 199, @"Request must be of type %@", objc_opt_class(CloudArtworkImportRequest, v41) object file lineNumber description];
        }

        id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"artwork_operation(%llu, %ld, %ld)",  [v3 cloudID],  objc_msgSend(v3, "artworkType"),  objc_msgSend(*(id *)(a1 + 40), "sourceType")));
        unint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkDownloadOperationMap]);
        id v7 = (CloudArtworkImportOperation *)objc_claimAutoreleasedReturnValue([v6 objectForKey:v5]);

        if (v7)
        {
          uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
          if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
          {
            unint64_t v9 = -[CloudArtworkImportOperation artworkType](v7, "artworkType");
            if (v9 > 5) {
              uint64_t v10 = 0LL;
            }
            else {
              uint64_t v10 = off_1001A5E30[v9];
            }
            uint64_t v15 = sub_1000E5FB8(-[CloudArtworkImportOperation sourceType](v7, "sourceType"));
            id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
            *(_DWORD *)__int128 buf = 138543874;
            os_log_t v68 = v5;
            __int16 v69 = 2114;
            uint64_t v70 = v10;
            __int16 v71 = 2114;
            uint32_t v72 = v16;
            _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Boosting priority of artwork download (identifier = '%{public}@' type = %{public}@ source = %{public}@)",  buf,  0x20u);
          }

          -[CloudArtworkImportOperation increasePriority](v7, "increasePriority");
          goto LABEL_34;
        }

        id v11 = [v3 cloudID];
        unsigned int v54 = (void *)objc_claimAutoreleasedReturnValue([v3 token]);
        id v55 = [v3 artworkType];
        id v12 = [*(id *)(a1 + 40) sourceType];
        id v13 = v12;
        if (v55 == (id)2)
        {
LABEL_13:
          id v14 = (id)objc_claimAutoreleasedReturnValue([v3 token]);
          unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v14));
LABEL_28:

          goto LABEL_29;
        }

        if (v12 == (id)600)
        {
          int v17 = (void *)objc_claimAutoreleasedReturnValue([v3 token]);
          id v14 = (id)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v17));

          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v14 resourceSpecifier]);
          BOOL v19 = [v18 rangeOfString:@"//"] == 0;

          if (v19)
          {
            id v14 = v14;
            unsigned int v53 = v14;
          }

          else
          {
            id v20 = [v3 cloudID];
            if ([v3 artworkType] == (id)1)
            {
              id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
              id v22 = +[ML3Track newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Track,  "newWithPersistentID:inLibrary:",  v20,  v21);

              uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 valueForProperty:v47]);
              id v11 = [v23 unsignedLongLongValue];
            }

            else if ([v3 artworkType] == (id)5)
            {
              id v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) musicLibrary]);
              id v25 = +[ML3Container newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Container,  "newWithPersistentID:inLibrary:",  v20,  v24);

              __int16 v26 = (void *)objc_claimAutoreleasedReturnValue([v25 valueForProperty:v46]);
              id v11 = [v26 unsignedLongLongValue];
            }

            unsigned int v53 = 0LL;
          }

          goto LABEL_28;
        }

        if (v12 == (id)500) {
          goto LABEL_13;
        }
        unsigned int v53 = 0LL;
LABEL_29:
        uint64_t v27 = objc_alloc(&OBJC_CLASS___CloudArtworkImportOperation);
        __int16 v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkDownloadSession]);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) configuration]);
        uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v3 clientIdentity]);
        id v7 = -[CloudArtworkImportOperation initWithURLSession:configuration:cloudID:artworkToken:artworkType:sourceType:clientIdentity:]( v27,  "initWithURLSession:configuration:cloudID:artworkToken:artworkType:sourceType:clientIdentity:",  v28,  v29,  v11,  v54,  v55,  v13,  v30);

        -[CloudArtworkImportOperation setMediaType:](v7, "setMediaType:", [v3 mediaType]);
        -[CloudArtworkImportOperation setAllowsCellularData:]( v7,  "setAllowsCellularData:",  [v3 allowsCellularData]);
        -[CloudArtworkImportOperation setAssetURL:](v7, "setAssetURL:", v53);
        id v31 = -[CloudArtworkImportAsset initWithAssertURL:artworkMediaType:artworkType:artworkToken:]( [CloudArtworkImportAsset alloc],  "initWithAssertURL:artworkMediaType:artworkType:artworkToken:",  v53,  [v3 mediaType],  v55,  v54);
        [v49 addObject:v31];
        v61[0] = _NSConcreteStackBlock;
        v61[1] = 3221225472LL;
        v61[2] = sub_1000E68F0;
        v61[3] = &unk_1001A6C30;
        uint8_t v61[4] = *(void *)(a1 + 40);
        id v32 = v5;
        id v62 = v32;
        -[CloudArtworkImportOperation setCompletionBlock:](v7, "setCompletionBlock:", v61);
        id v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkDownloadOperationMap]);
        [v33 setObject:v7 forKey:v32];

        uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkDownloadOperationMap]);
        LODWORD(v33) = [v34 count] == (id)1;

        if ((_DWORD)v33)
        {
          __int16 v35 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
          if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
          {
            id v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) powerAssertionIdentifier]);
            *(_DWORD *)__int128 buf = 138543362;
            os_log_t v68 = v36;
            _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "Taking power assertion: %{public}@",  buf,  0xCu);
          }

          __int16 v37 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) powerAssertionIdentifier]);
          CPSetPowerAssertionWithIdentifier(1LL, v37);

          uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkDownloadWatchdog]);
          [v38 resume];
        }

        [v48 addObject:v7];

LABEL_34:
        __int16 v39 = (void *)objc_claimAutoreleasedReturnValue([v3 completionHandler]);
        -[CloudArtworkImportOperation addCompletionHandler:](v7, "addCompletionHandler:", v39);
      }

      id v52 = [obj countByEnumeratingWithState:&v63 objects:v73 count:16];
    }

    while (v52);
  }

  unsigned int v42 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkDownloadOperationQueue]);
  [v42 addOperations:v48];

  objc_initWeak((id *)buf, *(id *)(a1 + 40));
  if ([v49 count])
  {
    __int16 v43 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary autoupdatingSharedLibrary]( &OBJC_CLASS___ML3MusicLibrary,  "autoupdatingSharedLibrary"));
    id v44 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) artworkDownloadOperationQueue]);
    v57[0] = _NSConcreteStackBlock;
    v57[1] = 3221225472LL;
    v57[2] = sub_1000E6978;
    v57[3] = &unk_1001A5CE0;
    objc_copyWeak(&v60, (id *)buf);
    id v58 = v49;
    id v45 = v43;
    id v59 = v45;
    [v44 addBarrierBlock:v57];

    objc_destroyWeak(&v60);
  }

  objc_destroyWeak((id *)buf);
}

void sub_1000E68C0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, id location)
{
}

void sub_1000E68F0(uint64_t a1)
{
  id v2 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadAccessQueue]);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_1000E6BE8;
  v4[3] = &unk_1001A6C30;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  dispatch_async(v2, v4);
}

void sub_1000E6978(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained artworkColorAnalysisAccessQueue]);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1000E6A38;
  block[3] = &unk_1001A5F78;
  id v6 = WeakRetained;
  id v7 = a1[4];
  id v8 = a1[5];
  id v4 = WeakRetained;
  dispatch_async(v3, block);
}

void sub_1000E6A38(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    id v2 = *(id *)(a1 + 40);
    id v3 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v16;
      do
      {
        id v6 = 0LL;
        do
        {
          if (*(void *)v16 != v5) {
            objc_enumerationMutation(v2);
          }
          id v7 = *(void **)(*((void *)&v15 + 1) + 8LL * (void)v6);
          id v8 = objc_autoreleasePoolPush();
          id v9 = objc_alloc(&OBJC_CLASS___ML3Artwork);
          uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "artworkToken", (void)v15));
          id v11 = objc_msgSend( v9,  "initWithToken:artworkType:musicLibrary:",  v10,  objc_msgSend(v7, "artworkType"),  *(void *)(a1 + 48));

          id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 interestDictionary]);
          if (!v12)
          {
            id v13 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _artworkColorAnalysisOperationForArtworkAsset:v7 library:*(void *)(a1 + 48) artwork:v11]);
            if (v13)
            {
              id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkColorAnalysisOperationQueue]);
              [v14 addOperation:v13];
            }
          }

          objc_autoreleasePoolPop(v8);
          id v6 = (char *)v6 + 1;
        }

        while (v4 != v6);
        id v4 = [v2 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }

      while (v4);
    }
  }

void sub_1000E6BE8(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationMap]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:*(void *)(a1 + 40)]);

  [v3 callCompletionHandlers];
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationMap]);
  [v4 removeObjectForKey:*(void *)(a1 + 40)];

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationMap]);
  id v6 = [v5 count];

  if (v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadWatchdog]);
    [v7 resume];
  }

  else
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification( DarwinNotifyCenter,  ICCloudClientArtworkDownloadsDidCompleteNotification,  0LL,  0LL,  1u);
    id v9 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
      int v12 = 138543362;
      id v13 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Releasing power assertion: %{public}@",  (uint8_t *)&v12,  0xCu);
    }

    id v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
    CPSetPowerAssertionWithIdentifier(0LL, v11);

    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadWatchdog]);
    [v7 suspend];
  }
}

Class sub_1000E6D8C(uint64_t a1)
{
  id v6 = 0LL;
  if (!qword_1001DB7F0)
  {
    __int128 v7 = off_1001A5E18;
    uint64_t v8 = 0LL;
    qword_1001DB7F0 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB7F0)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudArtworkImporter.m",  26,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("MPMediaDownloadManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPMediaDownloadManagerClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudArtworkImporter.m",  27,  @"Unable to find class %s",  "MPMediaDownloadManager");

LABEL_10:
    __break(1u);
  }

  qword_1001DB7E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_1000E6F28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue([WeakRetained artworkDownloadAccessQueue]);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000E6FB8;
    block[3] = &unk_1001A6B90;
    id v5 = v2;
    dispatch_async(v3, block);
  }
}

void sub_1000E6FB8(uint64_t a1)
{
  id v2 = os_log_create("com.apple.amp.itunescloudd", "Artwork_Oversize");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) artworkDownloadOperationQueue]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 operations]);
    *(_DWORD *)__int128 buf = 138543362;
    id v20 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "Watchdog fired, operation queue contents: %{public}@",  buf,  0xCu);
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
  CPSetPowerAssertionWithIdentifier(0LL, v5);

  id v6 = os_log_create("com.apple.amp.itunescloudd", "Artwork");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    __int128 v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) powerAssertionIdentifier]);
    *(_DWORD *)__int128 buf = 138543362;
    id v20 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "Watchdog fired, releasing power assertion: %{public}@",  buf,  0xCu);
  }

  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "artworkDownloadOperationQueue", 0));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 operations]);

  id v10 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = *(void *)v15;
    do
    {
      id v13 = 0LL;
      do
      {
        if (*(void *)v15 != v12) {
          objc_enumerationMutation(v9);
        }
        [*(id *)(*((void *)&v14 + 1) + 8 * (void)v13) cancel];
        id v13 = (char *)v13 + 1;
      }

      while (v11 != v13);
      id v11 = [v9 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v11);
  }
}

void sub_1000E7BF0(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a3 dictionaryRepresentation]);
  if (v5)
  {
    id v6 = *(void **)(a1 + 32);
    __int128 v7 = (void *)objc_claimAutoreleasedReturnValue([v8 stringValue]);
    [v6 setObject:v5 forKey:v7];
  }
}

void sub_1000E7C6C(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (_NSIsNSString(v9) && _NSIsNSDictionary(v5))
  {
    id v6 = -[ICDCloudPushNotificationAccountRegistrationState initWithDictionaryRepresentation:]( objc_alloc(&OBJC_CLASS___ICDCloudPushNotificationAccountRegistrationState),  "initWithDictionaryRepresentation:",  v5);
    __int128 v7 = *(void **)(*(void *)(a1 + 32) + 8LL);
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v9 longLongValue]));
    [v7 setObject:v6 forKey:v8];
  }
}

void sub_1000E9924( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000E9F0C(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  unsigned int v2 = [v1 isWatch];

  if (v2) {
    id v3 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"feature-movie",  @"tv-episode",  @"book",  @"software",  0LL);
  }
  else {
    id v3 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"feature-movie",  @"tv-episode",  @"book",  0LL,  v6);
  }
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  id v5 = (void *)qword_1001DB808;
  qword_1001DB808 = v4;
}

void sub_1000E9F9C(id a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
  unsigned int v2 = [v1 isWatch];

  if (v2) {
    id v3 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"song",  @"music-video",  @"feature-movie",  @"tv-episode",  @"book",  @"software",  0LL);
  }
  else {
    id v3 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  @"song",  @"music-video",  @"feature-movie",  @"tv-episode",  @"book",  0LL,  v6);
  }
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  id v5 = (void *)qword_1001DB7F8;
  qword_1001DB7F8 = v4;
}

void sub_1000EA040(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138543618;
      uint64_t v7 = v5;
      __int16 v8 = 2114;
      id v9 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@Failed to process incoming sync push message. err=%{public}@",  (uint8_t *)&v6,  0x16u);
    }
  }
}

Class sub_1000EA114(uint64_t a1)
{
  int v6 = 0LL;
  if (!qword_1001DB820)
  {
    __int128 v7 = off_1001A61B0;
    uint64_t v8 = 0LL;
    qword_1001DB820 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB820)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MusicLibraryLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudPushNotificationController.m",  29,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("ML3MusicLibrary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getML3MusicLibraryClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudPushNotificationController.m",  30,  @"Unable to find class %s",  "ML3MusicLibrary");

LABEL_10:
    __break(1u);
  }

  qword_1001DB818 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_1000EA2B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = os_log_create("com.apple.amp.itunescloudd", "Push");
  int v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "msv_description"));
      int v10 = 138543618;
      uint64_t v11 = v7;
      __int16 v12 = 2114;
      id v13 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Refreshed User Social Profiles error=%{public}@",  (uint8_t *)&v10,  0x16u);
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = 138543362;
    uint64_t v11 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Refreshed User Social Profiles",  (uint8_t *)&v10,  0xCu);
  }
}

void sub_1000EA3F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (!v5)
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_28;
    }
    __int128 v17 = *(os_log_s **)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    id v31 = v17;
    __int16 v32 = 2114;
    id v33 = v7;
    __int128 v18 = "%{public}@ Ignoring jalisco push message because we failed to load account properties. err=%{public}@";
    BOOL v19 = v8;
    uint32_t v20 = 22;
LABEL_24:
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v18, buf, v20);
    goto LABEL_28;
  }

  if ((MSVDeviceSupportsMultipleLibraries(v6) & 1) == 0 && ([v5 isActive] & 1) == 0)
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_28;
    }
    uint64_t v23 = *(os_log_s **)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    id v31 = v23;
    __int128 v18 = "%{public}@ Ignoring jalisco push message for an inactive account";
    BOOL v19 = v8;
    uint32_t v20 = 12;
    goto LABEL_24;
  }

  if ([*(id *)(a1 + 40) actionType] == (id)1)
  {
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) jaliscoChangedMediaTypes]);
    uint64_t v9 = -[ICConnectionConfiguration initWithUserIdentity:]( objc_alloc(&OBJC_CLASS___ICConnectionConfiguration),  "initWithUserIdentity:",  *(void *)(a1 + 48));
    if (v8)
    {
      int v10 = os_log_create("com.apple.amp.itunescloudd", "Push");
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138543362;
        id v31 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Received update request to media types: %{public}@",  buf,  0xCu);
      }

      __int128 v27 = 0u;
      __int128 v28 = 0u;
      __int128 v25 = 0u;
      __int128 v26 = 0u;
      uint64_t v11 = v8;
      id v12 = -[os_log_s countByEnumeratingWithState:objects:count:]( v11,  "countByEnumeratingWithState:objects:count:",  &v25,  v29,  16LL);
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v26;
        while (2)
        {
          for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v26 != v14) {
              objc_enumerationMutation(v11);
            }
            if (objc_msgSend( *(id *)(a1 + 32),  "_isSupportedJaliscoMediaKind:",  *(void *)(*((void *)&v25 + 1) + 8 * (void)i),  (void)v25))
            {

              goto LABEL_26;
            }
          }

          id v13 = -[os_log_s countByEnumeratingWithState:objects:count:]( v11,  "countByEnumeratingWithState:objects:count:",  &v25,  v29,  16LL);
          if (v13) {
            continue;
          }
          break;
        }
      }

      __int128 v16 = os_log_create("com.apple.amp.itunescloudd", "Push");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "Ignoring push notification since it did not contain any supported media types",  buf,  2u);
      }
    }

    else
    {
LABEL_26:
      __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  v9));
      id v24 = (void *)objc_claimAutoreleasedReturnValue(-[ICConnectionConfiguration clientIdentity](v9, "clientIdentity"));
      -[os_log_s updateJaliscoLibraryWithClientIdentity:forReason:completionHandler:]( v16,  "updateJaliscoLibraryWithClientIdentity:forReason:completionHandler:",  v24,  2LL,  0LL);
    }
  }

  else
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v21 = *(os_log_s **)(a1 + 32);
      id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userInfo]);
      *(_DWORD *)__int128 buf = 138543618;
      id v31 = v21;
      __int16 v32 = 2114;
      id v33 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Received unhandled jalisco push action. userInfo=%{public}@",  buf,  0x16u);
    }
  }

void sub_1000EA7A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_26;
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v26 = v13;
    __int16 v27 = 2114;
    id v28 = v6;
    uint64_t v14 = "%{public}@ Ignoring saga push message because we failed to load account properties. err=%{public}@";
    __int128 v15 = v8;
    uint32_t v16 = 22;
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v14, buf, v16);
    goto LABEL_26;
  }

  id v7 = [v5 isActiveLocker];
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_26;
    }
    uint64_t v17 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v26 = v17;
    uint64_t v14 = "%{public}@ Ignoring saga push message because the account no longer has icml enabled";
    goto LABEL_13;
  }

  if ((MSVDeviceSupportsMultipleLibraries(v7) & 1) == 0 && ([v5 isActive] & 1) == 0)
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_26;
    }
    uint64_t v19 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v26 = v19;
    uint64_t v14 = "%{public}@ Ignoring saga push message for an inactive account";
LABEL_13:
    __int128 v15 = v8;
    uint32_t v16 = 12;
    goto LABEL_14;
  }

  if ([*(id *)(a1 + 40) actionType] == (id)1)
  {
    uint64_t v8 = -[ICConnectionConfiguration initWithUserIdentity:]( objc_alloc(&OBJC_CLASS___ICConnectionConfiguration),  "initWithUserIdentity:",  *(void *)(a1 + 48));
    id v9 = [*(id *)(a1 + 40) sagaServerRevision];
    int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) sagaUpdatedSubscribedPlaylistIDs]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[BaseRequestHandler handlerForConfiguration:]( &OBJC_CLASS___ICDCloudMusicLibraryRequestHandler,  "handlerForConfiguration:",  v8));
    if (v9 && v10)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s clientIdentity](v8, "clientIdentity"));
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472LL;
      void v21[2] = sub_1000EAB48;
      v21[3] = &unk_1001A6040;
      id v22 = v11;
      id v23 = v10;
      id v24 = v8;
      [v22 updateSagaLibraryWithClientIdentity:v12 forReason:2 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:v21];

LABEL_24:
      goto LABEL_25;
    }

    if (v9)
    {
      uint32_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s clientIdentity](v8, "clientIdentity"));
      [v11 updateSagaLibraryWithClientIdentity:v20 forReason:2 allowNoisyAuthPrompt:0 isExplicitUserAction:0 completionHandler:0];
    }

    else
    {
      if (!v10) {
        goto LABEL_24;
      }
      uint32_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s clientIdentity](v8, "clientIdentity"));
      [v11 updateSubscribedPlaylistsWithSagaIDs:v10 ignoreMinRefreshInterval:1 requestReason:2 pinnedOnly:0 clientIdentity:v20 completionHandler:0];
    }

    goto LABEL_24;
  }

  uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "Push");
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v18 = *(void *)(a1 + 32);
    int v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userInfo]);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v26 = v18;
    __int16 v27 = 2114;
    id v28 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Received unhandled saga push action. userInfo=%{public}@",  buf,  0x16u);
LABEL_25:
  }

void sub_1000EAB48(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) clientIdentity]);
  [v1 updateSubscribedPlaylistsWithSagaIDs:v2 ignoreMinRefreshInterval:1 requestReason:2 pinnedOnly:0 clientIdentity:v3 completionHandler:0];
}

void sub_1000EABA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "Push");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v12 = 138543874;
    uint64_t v13 = v8;
    __int16 v14 = 2114;
    id v15 = v6;
    __int16 v16 = 2050;
    id v17 = [v5 statusCode];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished registering push token. err=%{public}@, statusCode=%{public}ld",  (uint8_t *)&v12,  0x20u);
  }

  id v9 = v6;
  int v10 = v9;
  if (!v9)
  {
    if ([v5 statusCode]) {
      int v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
    }
    else {
      int v10 = 0LL;
    }
  }

  uint64_t v11 = *(void *)(a1 + 40);
  if (v11) {
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v10);
  }
}

void sub_1000EAD00(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "Push");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v12 = 138543874;
    uint64_t v13 = v8;
    __int16 v14 = 2114;
    id v15 = v6;
    __int16 v16 = 1024;
    unsigned int v17 = [v5 statusCode];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished registering push token. err=%{public}@, statusCode=%d",  (uint8_t *)&v12,  0x1Cu);
  }

  id v9 = v6;
  int v10 = v9;
  if (!v9)
  {
    if ([v5 statusCode]) {
      int v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
    }
    else {
      int v10 = 0LL;
    }
  }

  uint64_t v11 = *(void *)(a1 + 40);
  if (v11) {
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v10);
  }
}

void sub_1000EAE60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[ICPrivacyInfo sharedPrivacyInfoForUserIdentity:]( &OBJC_CLASS___ICPrivacyInfo,  "sharedPrivacyInfoForUserIdentity:",  v7));
    unsigned int v9 = [v8 privacyAcknowledgementRequiredForMedia];

    if (v9)
    {
      int v10 = os_log_create("com.apple.amp.itunescloudd", "Push");
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 138543362;
        uint64_t v69 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Not registering for push notifications because privacy acknowledgement is required for media",  buf,  0xCu);
      }

      uint64_t v12 = *(void *)(a1 + 48);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7007LL,  0LL));
      (*(void (**)(uint64_t, void *))(v12 + 16))(v12, v13);

      goto LABEL_31;
    }

    uint64_t v17 = objc_claimAutoreleasedReturnValue([v5 DSID]);
    uint64_t v18 = (ICDCloudPushNotificationAccountRegistrationState *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 32) registrationStateForAccountDSID:v17]);
    if (!v18) {
      uint64_t v18 = objc_alloc_init(&OBJC_CLASS___ICDCloudPushNotificationAccountRegistrationState);
    }
    unsigned __int8 v19 = [v5 isActiveLocker];
    uint32_t v20 = *(void **)(a1 + 32);
    uint64_t v51 = (void *)v17;
    if ((v19 & 1) != 0) {
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 _supportedJaliscoMediaKindsWithSagaEnabled]);
    }
    else {
      id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 _supportedJaliscoMediaKinds]);
    }
    id v22 = v21;
    id v23 = (void *)objc_claimAutoreleasedReturnValue([v21 allObjects]);

    id v24 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
    v66[0] = _NSConcreteStackBlock;
    v66[1] = 3221225472LL;
    v66[2] = sub_1000EB3D4;
    v66[3] = &unk_1001A6640;
    id v67 = *(id *)(a1 + 40);
    __int128 v25 = -[ICStoreRequestContext initWithBlock:](v24, "initWithBlock:", v66);
    uint64_t v26 = objc_claimAutoreleasedReturnValue(-[ICDCloudPushNotificationAccountRegistrationState APNSToken](v18, "APNSToken"));
    uint64_t v27 = objc_claimAutoreleasedReturnValue(-[ICDCloudPushNotificationAccountRegistrationState mediaKinds](v18, "mediaKinds"));
    id v28 = (void *)v27;
    __int128 v50 = (void *)v26;
    if (v26)
    {
      unsigned __int8 v29 = [*(id *)(*(void *)(a1 + 32) + 24) isEqualToData:v26];
      unsigned __int8 v30 = v29;
      if (v28)
      {
        id v31 = v23;
        unsigned __int8 v32 = [v23 isEqualToArray:v28];
        if ((v30 & 1) != 0)
        {
          if ((v32 & 1) != 0)
          {
            id v33 = os_log_create("com.apple.amp.itunescloudd", "Push");
            if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v34 = *(void *)(a1 + 32);
              __int16 v35 = *(void **)(a1 + 40);
              *(_DWORD *)__int128 buf = 138543618;
              uint64_t v69 = v34;
              __int16 v70 = 2114;
              __int16 v71 = v35;
              _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Push notification registration up to date for configuration %{public}@",  buf,  0x16u);
            }

            (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
            id v36 = v51;
            goto LABEL_30;
          }

          goto LABEL_24;
        }

        __int16 v37 = v25;
        goto LABEL_26;
      }

      id v31 = v23;
      if ((v29 & 1) != 0)
      {
LABEL_24:
        uint64_t v38 = v25;
        __int16 v39 = *(void **)(a1 + 32);
        v52[0] = _NSConcreteStackBlock;
        v52[1] = 3221225472LL;
        void v52[2] = sub_1000EB5F8;
        v52[3] = &unk_1001A5FA0;
        unsigned int v53 = v18;
        id v40 = v31;
        uint64_t v41 = *(void *)(a1 + 32);
        id v54 = v40;
        uint64_t v55 = v41;
        id v36 = v51;
        id v56 = v51;
        id v57 = *(id *)(a1 + 48);
        unsigned int v42 = v39;
        __int128 v25 = v38;
        [v42 _registerMediaKinds:v40 usingRequestContext:v38 withCompletion:v52];

LABEL_30:
        goto LABEL_31;
      }

      __int16 v37 = v25;
    }

    else
    {
      __int16 v37 = v25;
      if (v27)
      {
        unsigned __int8 v32 = [v23 isEqualToArray:v27];
LABEL_26:
        char v43 = v32 ^ 1;
LABEL_29:
        id v44 = *(void **)(a1 + 32);
        uint64_t v45 = v44[3];
        v58[0] = _NSConcreteStackBlock;
        v58[1] = 3221225472LL;
        v58[2] = sub_1000EB484;
        v58[3] = &unk_1001A5FC8;
        id v64 = *(id *)(a1 + 48);
        uint64_t v46 = v18;
        uint64_t v47 = *(void *)(a1 + 32);
        id v59 = v46;
        uint64_t v60 = v47;
        char v65 = v43;
        id v61 = v23;
        id v48 = v37;
        id v62 = v37;
        id v36 = v51;
        id v63 = v51;
        uint64_t v49 = v45;
        __int128 v25 = v48;
        [v44 _registerAPNSToken:v49 usingRequestContext:v62 withCompletion:v58];

        id v31 = v23;
        goto LABEL_30;
      }
    }

    char v43 = 1;
    goto LABEL_29;
  }

  __int16 v14 = os_log_create("com.apple.amp.itunescloudd", "Push");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = *(void *)(a1 + 32);
    __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v69 = v15;
    __int16 v70 = 2114;
    __int16 v71 = v16;
    __int16 v72 = 2114;
    id v73 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Failed to get properties for user identity %{public}@. err=%{public}@",  buf,  0x20u);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
LABEL_31:
}

void sub_1000EB3D4(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 userIdentity]);
  [v4 setIdentity:v5];

  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  [v4 setIdentityStore:v6];

  [v4 setPersonalizationStyle:2];
  id v7 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v4 setAuthenticationProvider:v7];
}

void sub_1000EB484(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
  }

  else
  {
    [*(id *)(a1 + 32) setAPNSToken:*(void *)(*(void *)(a1 + 40) + 24)];
    id v3 = *(void **)(a1 + 40);
    if (*(_BYTE *)(a1 + 80))
    {
      uint64_t v4 = *(void *)(a1 + 48);
      uint64_t v5 = *(void *)(a1 + 56);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472LL;
      void v16[2] = sub_1000EB728;
      void v16[3] = &unk_1001A5FA0;
      id v17 = *(id *)(a1 + 32);
      id v6 = *(id *)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 40);
      id v18 = v6;
      uint64_t v19 = v7;
      id v20 = *(id *)(a1 + 64);
      id v21 = *(id *)(a1 + 72);
      [v3 _registerMediaKinds:v4 usingRequestContext:v5 withCompletion:v16];

      uint64_t v8 = v17;
    }

    else
    {
      unsigned int v9 = (dispatch_queue_s *)v3[1];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472LL;
      void v13[2] = sub_1000EB7E8;
      v13[3] = &unk_1001A5F78;
      void v13[4] = v3;
      id v14 = *(id *)(a1 + 32);
      id v15 = *(id *)(a1 + 64);
      dispatch_async(v9, v13);
      (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 72) + 16LL))( *(void *)(a1 + 72),  0LL,  v10,  v11,  v12);

      uint64_t v8 = v14;
    }
  }

void sub_1000EB5F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    [*(id *)(a1 + 32) setMediaKinds:*(void *)(a1 + 40)];
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(dispatch_queue_s **)(v4 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000EB6B8;
    block[3] = &unk_1001A5F78;
    void block[4] = v4;
    id v7 = *(id *)(a1 + 32);
    id v8 = *(id *)(a1 + 56);
    dispatch_async(v5, block);
  }

  (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
}

void sub_1000EB6B8(void *a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 32) dictionaryRepresentation]);
  [v3 setPushNotificationState:v2];
}

void sub_1000EB728(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    [*(id *)(a1 + 32) setMediaKinds:*(void *)(a1 + 40)];
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(dispatch_queue_s **)(v4 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1000EB858;
    block[3] = &unk_1001A5F78;
    void block[4] = v4;
    id v7 = *(id *)(a1 + 32);
    id v8 = *(id *)(a1 + 56);
    dispatch_async(v5, block);
  }

  (*(void (**)(void))(*(void *)(a1 + 64) + 16LL))();
}

void sub_1000EB7E8(void *a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 32) dictionaryRepresentation]);
  [v3 setPushNotificationState:v2];
}

void sub_1000EB858(void *a1)
{
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[ICDefaults standardDefaults](&OBJC_CLASS___ICDefaults, "standardDefaults"));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 32) dictionaryRepresentation]);
  [v3 setPushNotificationState:v2];
}

void sub_1000EB8C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = *(void **)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      __int128 v50 = v8;
      __int16 v51 = 2114;
      id v52 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Failed to fetch bag configuration. error=%{public}@",  buf,  0x16u);
    }
  }

  else
  {
    unsigned int v9 = (os_log_s *)APSEnvironmentProduction;
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 dictionaryForBagKey:ICURLBagKeyPushNotifications]);
    id v7 = v9;
    if (_NSIsNSDictionary(v10))
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKey:@"environment"]);
      id v7 = v9;
      if (_NSIsNSString(v11))
      {
        if (([v11 isEqualToString:v9] & 1) != 0
          || ([v11 isEqualToString:APSEnvironmentDevelopment] & 1) != 0
          || (id v7 = v9, [v11 isEqualToString:APSEnvironmentDemo]))
        {
          id v7 = v11;
        }
      }
    }

    uint64_t v12 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
    if (!v12
      || (uint64_t v13 = (void *)v12,
          id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pushEnvironment]),
          unsigned __int8 v15 = [v14 isEqualToString:v7],
          v14,
          v13,
          (v15 & 1) == 0))
    {
      __int16 v16 = os_log_create("com.apple.amp.itunescloudd", "Push");
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        id v17 = *(void **)(a1 + 32);
        id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 connection]);
        uint64_t v19 = @"Push environment changed";
        if (!v18) {
          uint64_t v19 = @"connection=nil";
        }
        *(_DWORD *)__int128 buf = 138543618;
        __int128 v50 = v17;
        __int16 v51 = 2114;
        id v52 = (id)v19;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Creating new APNS connection. %{public}@",  buf,  0x16u);
      }

      id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
      if (v20)
      {
        id v21 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
        [v21 setDelegate:0];

        [*(id *)(a1 + 32) setConnection:0];
      }

      __int16 v39 = v10;
      id v40 = v5;
      id v22 = os_log_create("com.apple.amp.itunescloudd", "Push");
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        id v23 = *(void **)(a1 + 32);
        *(_DWORD *)__int128 buf = 138543618;
        __int128 v50 = v23;
        __int16 v51 = 2114;
        id v52 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Registering for push notifications. environment=%{public}@",  buf,  0x16u);
      }

      [*(id *)(a1 + 32) setPushEnvironment:v7];
      id v24 = -[APSConnection initWithEnvironmentName:namedDelegatePort:queue:]( objc_alloc(&OBJC_CLASS___APSConnection),  "initWithEnvironmentName:namedDelegatePort:queue:",  v7,  @"com.apple.aps.itunescloudd",  &_dispatch_main_q);
      if (!v24)
      {
        __int128 v25 = os_log_create("com.apple.amp.itunescloudd", "Push");
        if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        {
          uint64_t v26 = *(void **)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543362;
          __int128 v50 = v26;
          _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to create the push connection",  buf,  0xCu);
        }
      }

      [*(id *)(a1 + 32) setConnection:v24];
      -[APSConnection setDelegate:](v24, "setDelegate:", *(void *)(a1 + 32));
      __int128 v45 = 0u;
      __int128 v46 = 0u;
      __int128 v43 = 0u;
      __int128 v44 = 0u;
      v47[0] = v9;
      v47[1] = APSEnvironmentDevelopment;
      void v47[2] = APSEnvironmentDemo;
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v47, 3LL));
      id v28 = [v27 countByEnumeratingWithState:&v43 objects:v48 count:16];
      if (v28)
      {
        id v29 = v28;
        uint64_t v30 = *(void *)v44;
        do
        {
          for (uint64_t i = 0LL; i != v29; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v44 != v30) {
              objc_enumerationMutation(v27);
            }
            unsigned __int8 v32 = *(void **)(*((void *)&v43 + 1) + 8LL * (void)i);
            id v33 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) pushEnvironment]);
            unsigned __int8 v34 = [v32 isEqualToString:v33];

            if ((v34 & 1) == 0)
            {
              __int16 v35 = -[APSConnection initWithEnvironmentName:namedDelegatePort:queue:]( objc_alloc(&OBJC_CLASS___APSConnection),  "initWithEnvironmentName:namedDelegatePort:queue:",  v32,  @"com.apple.aps.itunescloudd",  &_dispatch_main_q);

              -[APSConnection setDelegate:](v35, "setDelegate:", *(void *)(a1 + 32));
              dispatch_time_t v36 = dispatch_time(0LL, 1000000000LL);
              block[0] = _NSConcreteStackBlock;
              block[1] = 3221225472LL;
              block[2] = sub_1000EBE78;
              block[3] = &unk_1001A6B90;
              unsigned int v42 = v35;
              __int16 v37 = v35;
              dispatch_after(v36, &_dispatch_main_q, block);
            }
          }

          id v29 = [v27 countByEnumeratingWithState:&v43 objects:v48 count:16];
        }

        while (v29);
      }

      id v6 = 0LL;
      id v5 = v40;
      uint64_t v10 = v39;
    }
  }

  uint64_t v38 = *(void *)(a1 + 40);
  if (v38) {
    (*(void (**)(uint64_t, id))(v38 + 16))(v38, v6);
  }
}

id sub_1000EBE78(uint64_t a1)
{
  return [*(id *)(a1 + 32) setDelegate:0];
}

void sub_1000EBE84(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 16) operationCount])
  {
    uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v7 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ We already have an operation enqueued to handle push registration",  buf,  0xCu);
    }
  }

  else
  {
    id v4 = objc_alloc(&OBJC_CLASS___ICAsyncBlockOperation);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    double v5[2] = sub_1000EBFA4;
    v5[3] = &unk_1001A5F28;
    void v5[4] = *(void *)(a1 + 32);
    uint64_t v2 = (os_log_s *)[v4 initWithStartHandler:v5];
    [*(id *)(*(void *)(a1 + 32) + 16) addOperation:v2];
  }
}

void sub_1000EBFA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "Push");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v12 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Updating push notification registration",  buf,  0xCu);
  }

  id v6 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1000EC0B8;
  void v8[3] = &unk_1001A7108;
  id v9 = v3;
  uint64_t v10 = v6;
  id v7 = v3;
  [v6 _createAPNSConnectionWithCompletion:v8];
}

void sub_1000EC0B8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    [*(id *)(a1 + 32) finishWithError:a2];
  }

  else
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    v6[2] = sub_1000EC148;
    v6[3] = &unk_1001A5F00;
    id v3 = *(void **)(a1 + 40);
    id v4 = *(id *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    id v7 = v4;
    uint64_t v8 = v5;
    [v3 _activeConfigurationsWithCompletion:v6];
  }

void sub_1000EC148(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    [*(id *)(a1 + 32) finishWithError:a3];
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](&OBJC_CLASS___NSMutableArray, "arrayWithCapacity:", 5LL));
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICDeviceInfo currentDeviceInfo](&OBJC_CLASS___ICDeviceInfo, "currentDeviceInfo"));
    if (([v7 isMac] & 1) == 0 && objc_msgSend(v5, "count"))
    {
      [v6 addObject:@"com.apple.music.engagement"];
      [v6 addObject:@"com.apple.music.service"];
      [v6 addObject:@"com.apple.music.social"];
      [v6 addObject:@"com.apple.sagad"];
      [v6 addObject:@"com.apple.jalisco"];
      [v6 addObject:@"com.apple.storebookkeeper"];
    }

    if (([v7 isWatch] & 1) != 0
      || ([v7 isAppleTV] & 1) != 0
      || [v7 isMac])
    {
      [v6 addObject:@"com.apple.itunesstored"];
    }

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) connection]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 enabledTopics]);
    unsigned __int8 v10 = [v6 isEqualToArray:v9];

    if ((v10 & 1) == 0)
    {
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) connection]);
      [v11 _setEnabledTopics:v6];
    }

    uint64_t v12 = *(void **)(a1 + 40);
    if (v12[3]
      || (uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 connection]),
          uint64_t v14 = objc_claimAutoreleasedReturnValue([v13 publicToken]),
          uint64_t v15 = *(void *)(a1 + 40),
          __int16 v16 = *(void **)(v15 + 24),
          *(void *)(v15 + 24) = v14,
          v16,
          v13,
          *(void *)(*(void *)(a1 + 40) + 24LL)))
    {
      uint64_t v30 = v7;
      id v17 = dispatch_group_create();
      __int128 v36 = 0u;
      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v39 = 0u;
      id v31 = v5;
      id v18 = v5;
      id v19 = [v18 countByEnumeratingWithState:&v36 objects:v40 count:16];
      if (v19)
      {
        id v20 = v19;
        uint64_t v21 = *(void *)v37;
        do
        {
          for (uint64_t i = 0LL; i != v20; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v37 != v21) {
              objc_enumerationMutation(v18);
            }
            uint64_t v23 = *(void *)(*((void *)&v36 + 1) + 8LL * (void)i);
            dispatch_group_enter(v17);
            id v24 = *(void **)(a1 + 40);
            v34[0] = _NSConcreteStackBlock;
            v34[1] = 3221225472LL;
            void v34[2] = sub_1000EC51C;
            void v34[3] = &unk_1001A6398;
            __int16 v35 = v17;
            [v24 _updateRegistrationForConfiguration:v23 completion:v34];
          }

          id v20 = [v18 countByEnumeratingWithState:&v36 objects:v40 count:16];
        }

        while (v20);
      }

      uint64_t v26 = *(void **)(a1 + 32);
      uint64_t v25 = *(void *)(a1 + 40);
      uint64_t v27 = *(dispatch_queue_s **)(v25 + 8);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1000EC524;
      block[3] = &unk_1001A6C30;
      void block[4] = v25;
      id v33 = v26;
      dispatch_group_notify(v17, v27, block);

      id v5 = v31;
      id v7 = v30;
    }

    else
    {
      id v28 = os_log_create("com.apple.amp.itunescloudd", "Push");
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v29 = *(void *)(a1 + 40);
        *(_DWORD *)__int128 buf = 138543362;
        uint64_t v42 = v29;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "%{public}@ No APNS token available - skipping registration for now",  buf,  0xCu);
      }

      [*(id *)(a1 + 32) finishWithError:0];
    }
  }
}

void sub_1000EC51C(uint64_t a1)
{
}

id sub_1000EC524(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "Push");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138543362;
    uint64_t v6 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished push registration",  (uint8_t *)&v5,  0xCu);
  }

  return [*(id *)(a1 + 40) finishWithError:0];
}

void sub_1000EC5E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) connection]);

  if (v4 == v5)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
    unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_1000EC784;
    v13[3] = &unk_1001A5EB0;
    id v14 = *(id *)(a1 + 56);
    id v15 = v3;
    id v11 = *(id *)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 40);
    id v16 = v11;
    uint64_t v17 = v12;
    [v9 getPropertiesForUserIdentity:v10 completionHandler:v13];
  }

  else
  {
    uint64_t v6 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v19 = v7;
      __int16 v20 = 2114;
      uint64_t v21 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Push notification came from alternate environment, dropping notification from topic %{public}@: %{public}@",  buf,  0x16u);
    }

    [v3 finishWithError:0];
  }
}

void sub_1000EC784(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ICPushNotificationMessage alloc] initWithMessageUserInfo:*(void *)(a1 + 32)];
  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 DSID]);

  id v6 = [v5 longLongValue];
  id v7 = [v4 accountDSID];
  if (v7 == v6 || (id v8 = v7, (MSVDeviceSupportsMultipleLibraries(v7) & 1) != 0))
  {
    if ([*(id *)(a1 + 48) isEqualToString:@"com.apple.sagad"])
    {
      id v9 = *(void **)(a1 + 56);
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472LL;
      void v34[2] = sub_1000ECC74;
      void v34[3] = &unk_1001A6398;
      id v35 = *(id *)(a1 + 40);
      [v9 _handleSagaPushMessage:v4 withCompletionHandler:v34];
      unsigned __int8 v10 = v35;
    }

    else if ([*(id *)(a1 + 48) isEqualToString:@"com.apple.jalisco"])
    {
      id v11 = *(void **)(a1 + 56);
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472LL;
      v32[2] = sub_1000ECC80;
      void v32[3] = &unk_1001A6398;
      id v33 = *(id *)(a1 + 40);
      [v11 _handleJaliscoPushMessage:v4 withCompletionHandler:v32];
      unsigned __int8 v10 = v33;
    }

    else if (([*(id *)(a1 + 48) isEqualToString:@"com.apple.itunesstored"] & 1) != 0 {
           || [*(id *)(a1 + 48) isEqualToString:@"com.apple.music.service"])
    }
    {
      id v16 = *(void **)(a1 + 56);
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472LL;
      void v30[2] = sub_1000ECC8C;
      v30[3] = &unk_1001A6398;
      id v31 = *(id *)(a1 + 40);
      [v16 _handleITunesStorePushMessage:v4 withCompletionHandler:v30];
      unsigned __int8 v10 = v31;
    }

    else if ([*(id *)(a1 + 48) isEqualToString:@"com.apple.music.engagement"])
    {
      uint64_t v17 = *(void **)(a1 + 56);
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472LL;
      void v28[2] = sub_1000ECC98;
      v28[3] = &unk_1001A6398;
      id v29 = *(id *)(a1 + 40);
      [v17 _handleMusicEngagementPushMessage:v4 withCompletionHandler:v28];
      unsigned __int8 v10 = v29;
    }

    else if ([*(id *)(a1 + 48) isEqualToString:@"com.apple.music.social"])
    {
      id v18 = *(void **)(a1 + 56);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472LL;
      void v26[2] = sub_1000ECCA4;
      v26[3] = &unk_1001A6398;
      id v27 = *(id *)(a1 + 40);
      [v18 _handleMusicSocialPushMessage:v4 withCompletionHandler:v26];
      unsigned __int8 v10 = v27;
    }

    else if ([*(id *)(a1 + 48) isEqualToString:@"com.apple.storebookkeeper"])
    {
      uint64_t v19 = *(void **)(a1 + 56);
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472LL;
      void v24[2] = sub_1000ECCB0;
      void v24[3] = &unk_1001A6398;
      id v25 = *(id *)(a1 + 40);
      [v19 _handleStoreBookkeeperPushMessage:v4 withCompletionHandler:v24];
      unsigned __int8 v10 = v25;
    }

    else
    {
      os_log_t v20 = sub_1000DD8B4();
      uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        id v22 = *(void **)(a1 + 48);
        *(_DWORD *)__int128 buf = 138543362;
        id v39 = v22;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Unknown push topic '%{public}@'",  buf,  0xCu);
      }

      uint64_t v23 = *(void **)(a1 + 40);
      unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
      [v23 finishWithError:v10];
    }
  }

  else
  {
    uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "Push");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 134218240;
      id v39 = v8;
      __int16 v40 = 2048;
      id v41 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Ignoring push notification for an account that is not the active account. accountDSID=%lld, activeAccountDSID=%lld",  buf,  0x16u);
    }

    uint64_t v13 = *(void **)(a1 + 40);
    NSErrorUserInfoKey v36 = NSDebugDescriptionErrorKey;
    unsigned __int8 v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Ignoring push notification [account is not active] - accountDSID=%lld - activeAccountDSID=%lld",  v8,  v6));
    __int128 v37 = v10;
    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v37,  &v36,  1LL));
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7400LL,  v14));
    [v13 finishWithError:v15];
  }
}

id sub_1000ECC74(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

id sub_1000ECC80(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

id sub_1000ECC8C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

id sub_1000ECC98(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

id sub_1000ECCA4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

id sub_1000ECCB0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) finishWithError:a2];
}

void sub_1000ECF00(uint64_t a1, void *a2)
{
  id v4 = a2;
  if ([*(id *)(a1 + 32) length]) {
    [v4 writeString:*(void *)(a1 + 32) withCode:1835365473];
  }
  if ([*(id *)(a1 + 40) length]) {
    [v4 writeString:*(void *)(a1 + 40) withCode:1836152165];
  }
  if (*(_BYTE *)(a1 + 64)) {
    [v4 writeUInt8:1 withCode:1835559268];
  }
  if (*(_BYTE *)(a1 + 65)) {
    [v4 writeUInt8:1 withCode:1634355568];
  }
  if ([*(id *)(a1 + 48) length]) {
    [v4 writeString:*(void *)(a1 + 48) withCode:1836081511];
  }
  id v3 = *(void **)(a1 + 56);
  if (v3)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    double v5[2] = sub_1000ED020;
    v5[3] = &unk_1001A70B8;
    id v6 = v3;
    ICDAAPUtilitiesWriteContainer(v4, 1634038892LL, v5);
  }
}

void sub_1000ED020(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  v6[2] = sub_1000ED09C;
  v6[3] = &unk_1001A61F8;
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v6];
}

void sub_1000ED09C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_1000ED148;
  v10[3] = &unk_1001A61D0;
  id v11 = v5;
  id v12 = v6;
  id v8 = v6;
  id v9 = v5;
  ICDAAPUtilitiesWriteContainer(v7, 1634038889LL, v10);
}

void sub_1000ED148(uint64_t a1, void *a2)
{
  id v3 = a2;
  ((void (*)(void))ICDAAPUtilitiesWriteProperty)();
  ICDAAPUtilitiesWriteProperty(v3, 1634038895LL, 5LL, *(void *)(a1 + 40));
}

void sub_1000ED7A0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 32);
  id v4 = a2;
  [v4 writeUInt32:v3 withCode:1836413810];
  [v4 writeUInt8:*(unsigned __int8 *)(a1 + 36) withCode:1634354753];
}

LABEL_44:
    id v15 = os_log_create("com.apple.amp.itunescloudd", "Default");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v16[0] = 67109888;
      v16[1] = HIBYTE(a3);
      uint64_t v17 = 1024;
      id v18 = HIWORD(a3);
      uint64_t v19 = 1024;
      os_log_t v20 = a3 >> 8;
      uint64_t v21 = 1024;
      id v22 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Unhandled code in response: %c%c%c%c",  (uint8_t *)v16,  0x1Au);
    }

    goto LABEL_47;
  }

  if (a3 == 1668117364)
  {
    id v11 = objc_claimAutoreleasedReturnValue([a1 _parsePlayStatusResponseWithBytes:a4 length:a5]);
    goto LABEL_34;
  }

  if (a3 == 1835360880)
  {
LABEL_33:
    id v11 = objc_claimAutoreleasedReturnValue([a1 _parseItemsResponseWithBytes:a4 length:a5 usingHandler:v10]);
    goto LABEL_34;
  }

  if (a3 != 1835361379) {
    goto LABEL_44;
  }
  id v11 = objc_claimAutoreleasedReturnValue([a1 _parseEditCommandResponseWithBytes:a4 length:a5]);
LABEL_34:
  uint64_t v13 = (void *)v11;
LABEL_35:

  return v13;
}

LABEL_62:
        uint64_t v13 = (NSData *)os_log_create("com.apple.amp.itunescloudd", "Default");
        if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_DEFAULT))
        {
          v18[0] = 67109888;
          v18[1] = v7;
          uint64_t v19 = 1024;
          os_log_t v20 = HIWORD(v8);
          uint64_t v21 = 1024;
          id v22 = v10 >> 8;
          uint64_t v23 = 1024;
          id v24 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v13,  OS_LOG_TYPE_DEFAULT,  "Unhandled code in play status response: %c%c%c%c",  (uint8_t *)v18,  0x1Au);
        }

LABEL_78:
      }

      a3 = (const char *)&v12[v11];
      a4 = a4 - 8 - v11;
      if (!a4) {
        return v6;
      }
    }

    if (v10 <= 1667329643)
    {
      if (v10 <= 1667327588)
      {
        switch(v10)
        {
          case 1634951529:
            uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  (((unint64_t)*((unsigned __int8 *)a3 + 8) << 56) | ((unint64_t)*((unsigned __int8 *)a3 + 9) << 48) | ((unint64_t)*((unsigned __int8 *)a3 + 10) << 40) | ((unint64_t)*((unsigned __int8 *)a3 + 11) << 32) | ((unint64_t)*((unsigned __int8 *)a3 + 12) << 24) | ((unint64_t)*((unsigned __int8 *)a3 + 13) << 16) | ((unint64_t)*((unsigned __int8 *)a3 + 14) << 8))
                              + *((unsigned __int8 *)a3 + 15)));
            id v14 = v6;
            id v15 = v13;
            id v16 = &off_1001B4420;
            break;
          case 1667326322:
            uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  bswap32(*((_DWORD *)a3 + 2))));
            id v14 = v6;
            id v15 = v13;
            id v16 = &off_1001B4390;
            break;
          case 1667326323:
            uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  bswap32(*((_DWORD *)a3 + 2))));
            id v14 = v6;
            id v15 = v13;
            id v16 = &off_1001B4378;
            goto LABEL_77;
          default:
            goto LABEL_62;
        }
      }

      else if (v10 > 1667329632)
      {
        if (v10 != 1667329633)
        {
          if (v10 == 1667329639)
          {
            uint64_t v13 = -[NSString initWithBytes:length:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytes:length:encoding:",  a3 + 8,  v11,  4LL);
            id v14 = v6;
            id v15 = v13;
            id v16 = &off_1001B4498;
            goto LABEL_77;
          }

          goto LABEL_62;
        }

        uint64_t v13 = -[NSString initWithBytes:length:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytes:length:encoding:",  a3 + 8,  v11,  4LL);
        id v14 = v6;
        id v15 = v13;
        id v16 = &off_1001B42B8;
      }

      else
      {
        if (v10 != 1667327589)
        {
          if (v10 == 1667327603)
          {
            uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *v12));
            id v14 = v6;
            id v15 = v13;
            id v16 = &off_1001B4330;
            goto LABEL_77;
          }

          goto LABEL_62;
        }

        uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", *v12));
        id v14 = v6;
        id v15 = v13;
        id v16 = &off_1001B43A8;
      }
    }

    else if (v10 > 1667330162)
    {
      if (v10 > 1667330914)
      {
        if (v10 != 1667330915)
        {
          if (v10 == 1667330920)
          {
            uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *v12));
            id v14 = v6;
            id v15 = v13;
            id v16 = &off_1001B4300;
            goto LABEL_77;
          }

          goto LABEL_62;
        }

        uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", *v12));
        id v14 = v6;
        id v15 = v13;
        id v16 = &off_1001B44C8;
      }

      else
      {
        if (v10 != 1667330163)
        {
          if (v10 == 1667330672)
          {
            uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedChar:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedChar:",  *v12));
            id v14 = v6;
            id v15 = v13;
            id v16 = &off_1001B4318;
            goto LABEL_77;
          }

          goto LABEL_62;
        }

        uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", *v12));
        id v14 = v6;
        id v15 = v13;
        id v16 = &off_1001B42E8;
      }
    }

    else
    {
      switch(v10)
      {
        case 1667329644:
          uint64_t v13 = -[NSString initWithBytes:length:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytes:length:encoding:",  a3 + 8,  v11,  4LL);
          id v14 = v6;
          id v15 = v13;
          id v16 = &off_1001B42D0;
          goto LABEL_77;
        case 1667329645:
        case 1667329647:
        case 1667329649:
        case 1667329650:
        case 1667329651:
          goto LABEL_62;
        case 1667329646:
          uint64_t v13 = -[NSString initWithBytes:length:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytes:length:encoding:",  a3 + 8,  v11,  4LL);
          id v14 = v6;
          id v15 = v13;
          id v16 = &off_1001B42A0;
          goto LABEL_77;
        case 1667329648:
          uint64_t v13 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a3 + 8, v11);
          id v14 = v6;
          id v15 = v13;
          id v16 = &off_1001B4540;
          goto LABEL_77;
        case 1667329652:
          uint64_t v13 = (NSData *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  bswap32(*((_DWORD *)a3 + 2))));
          id v14 = v6;
          id v15 = v13;
          id v16 = &off_1001B44E0;
          goto LABEL_77;
        default:
          if (v10 != 1667330156) {
            goto LABEL_62;
          }
          uint64_t v13 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a3 + 8, v11);
          id v14 = v6;
          id v15 = v13;
          id v16 = &off_1001B4558;
          break;
      }
    }

    goto LABEL_77;
  }

  return v6;
}

void sub_1000F1310(int a1, unsigned __int8 *a2, unsigned int a3, void *a4, const __CFString **a5)
{
  if (a1 <= 1634952288)
  {
    if (a1 > 1634031683)
    {
      if (a1 <= 1634358894)
      {
        if (a1 > 1634354516)
        {
          if (a1 <= 1634356847)
          {
            if (a1 > 1634356832)
            {
              if (a1 != 1634356833)
              {
                if (a1 == 1634356837)
                {
                  __int128 v45 = sub_1000F3D38(a2, a3);
                  *a4 = (id)objc_claimAutoreleasedReturnValue(v45);
                  if (!a5) {
                    return;
                  }
                  unsigned __int8 v10 = @"com.apple.jingle.newsstandBindingEdge";
                  goto LABEL_481;
                }

                goto LABEL_472;
              }

              uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
              if (a5)
              {
                id v11 = @"com.apple.itunes.store.newsstand-artwork-url";
                goto LABEL_485;
              }

              goto LABEL_486;
            }

            if (a1 == 1634354517)
            {
              uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
              if (!a5) {
                goto LABEL_486;
              }
              id v11 = @"com.apple.itunes.store.extras-url";
            }

            else
            {
              if (a1 != 1634354547) {
                goto LABEL_472;
              }
              uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
              if (!a5) {
                goto LABEL_486;
              }
              id v11 = @"com.apple.itunes.store.episode-screenshot";
            }
          }

          else
          {
            if (a1 <= 1634357332)
            {
              if (a1 == 1634356848)
              {
                id v96 = sub_1000F3D38(a2, a3);
                *a4 = (id)objc_claimAutoreleasedReturnValue(v96);
                if (!a5) {
                  return;
                }
                unsigned __int8 v10 = @"com.apple.jingle.AppIconNeedsShine";
                goto LABEL_481;
              }

              if (a1 == 1634356852)
              {
                unsigned __int8 v34 = sub_1000F3D38(a2, a3);
                *a4 = (id)objc_claimAutoreleasedReturnValue(v34);
                if (!a5) {
                  return;
                }
                unsigned __int8 v10 = @"com.apple.jingle.newsstandBindingType";
                goto LABEL_481;
              }

              goto LABEL_472;
            }

            switch(a1)
            {
              case 1634357333:
                uint64_t v114 = -[NSData initWithBytes:length:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytes:length:",  a2,  a3);
                *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
                if (!a5) {
                  goto LABEL_486;
                }
                id v11 = @"com.apple.itunes.store.product-url";
                break;
              case 1634358884:
                uint64_t v114 = -[NSData initWithBytes:length:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytes:length:",  a2,  a3);
                *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
                if (!a5) {
                  goto LABEL_486;
                }
                id v11 = @"com.apple.itunes.store.vpp-org-display-name";
                break;
              case 1634358892:
                id v15 = sub_1000F3D38(a2, a3);
                *a4 = (id)objc_claimAutoreleasedReturnValue(v15);
                if (!a5) {
                  return;
                }
                unsigned __int8 v10 = @"com.apple.itunes.store.vpp-is-licensed";
                goto LABEL_481;
              default:
                goto LABEL_472;
            }
          }
        }

        else if (a1 <= 1634036069)
        {
          if (a1 > 1634035299)
          {
            if (a1 == 1634035300)
            {
              uint64_t v105 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v105);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.item-flavor-id";
              goto LABEL_481;
            }

            if (a1 == 1634035308)
            {
              *a4 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.item-flavor-listing";
              goto LABEL_481;
            }

            goto LABEL_472;
          }

          if (a1 == 1634031684)
          {
            uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
            *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
            if (!a5) {
              goto LABEL_486;
            }
            id v11 = @"com.apple.itunes.xid";
          }

          else
          {
            if (a1 != 1634034544) {
              goto LABEL_472;
            }
            uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
            *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
            if (!a5) {
              goto LABEL_486;
            }
            id v11 = @"com.apple.itunes.collection-description";
          }
        }

        else
        {
          if (a1 <= 1634037877)
          {
            if (a1 == 1634036070)
            {
              *a4 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.item-flavor";
              goto LABEL_481;
            }

            if (a1 == 1634037872)
            {
              id v28 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v28);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.page-progression";
              goto LABEL_481;
            }

            goto LABEL_472;
          }

          switch(a1)
          {
            case 1634037878:
              uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
              if (!a5) {
                goto LABEL_486;
              }
              id v11 = @"com.apple.itunes.publication-version";
              break;
            case 1634038895:
              id v64 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v64);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.cloud-purchased-token";
              goto LABEL_481;
            case 1634169456:
              uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
              if (!a5) {
                goto LABEL_486;
              }
              id v11 = @"daap.songgrouping";
              break;
            default:
              goto LABEL_472;
          }
        }

        goto LABEL_485;
      }

      if (a1 <= 1634952035)
      {
        if (a1 > 1634951531)
        {
          switch(a1)
          {
            case 1634951787:
              os_log_t v20 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v20);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.bookmarkable";
              goto LABEL_481;
            case 1634951788:
            case 1634951789:
            case 1634951790:
            case 1634951792:
            case 1634951793:
            case 1634951795:
              goto LABEL_472;
            case 1634951791:
              uint64_t v111 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v111);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.songbookmark";
              goto LABEL_481;
            case 1634951794:
              uint64_t v112 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v112);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.songbitrate";
              goto LABEL_481;
            case 1634951796:
              uint64_t v113 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v113);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.songbeatsperminute";
              goto LABEL_481;
            default:
              if (a1 != 1634951532)
              {
                if (a1 != 1634951538) {
                  goto LABEL_472;
                }
                uint64_t v114 = -[NSData initWithBytes:length:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytes:length:",  a2,  a3);
                *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
                if (a5)
                {
                  id v11 = @"daap.songartist";
                  goto LABEL_485;
                }

                goto LABEL_486;
              }

              uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
              *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
              if (!a5) {
                goto LABEL_486;
              }
              id v11 = @"daap.songalbum";
              break;
          }

          goto LABEL_485;
        }

        if (a1 <= 1634951520)
        {
          if (a1 == 1634358895)
          {
            uint64_t v47 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v47);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.store.vpp-org-id";
            goto LABEL_481;
          }

          if (a1 == 1634759535)
          {
            *a4 = (id)objc_claimAutoreleasedReturnValue( +[ICDResponseDataParser _parseItemsResponseWithBytes:length:usingHandler:]( &OBJC_CLASS___ICDResponseDataParser,  "_parseItemsResponseWithBytes:length:usingHandler:",  a2,  a3,  0LL));
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.playlistsongs";
            goto LABEL_481;
          }

          goto LABEL_472;
        }

        if (a1 != 1634951521)
        {
          if (a1 == 1634951529)
          {
            uint64_t v26 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v26);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.songalbumid";
            goto LABEL_481;
          }

          goto LABEL_472;
        }

        uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
        *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
        if (!a5) {
          goto LABEL_486;
        }
        id v11 = @"daap.songalbumartist";
        goto LABEL_485;
      }

      switch(a1)
      {
        case 1634952036:
          uint64_t v17 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v17);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songcodectype";
          break;
        case 1634952045:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songcomment";
          goto LABEL_485;
        case 1634952046:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songcontentdescription";
          goto LABEL_485;
        case 1634952047:
          id v48 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v48);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songcompilation";
          break;
        case 1634952048:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songcomposer";
          goto LABEL_485;
        case 1634952050:
          uint64_t v49 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v49);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songcontentrating";
          break;
        case 1634952051:
          __int128 v50 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v50);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songcodecsubtype";
          break;
        case 1634952052:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songcategory";
          goto LABEL_485;
        default:
          goto LABEL_472;
      }

LABEL_481:
      *a5 = v10;
      return;
    }

    if (a1 > 1634027348)
    {
      if (a1 <= 1634029141)
      {
        if (a1 <= 1634027852)
        {
          if (a1 > 1634027587)
          {
            if (a1 == 1634027588)
            {
              uint64_t v106 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v106);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.is-hd-video";
              goto LABEL_481;
            }

            if (a1 == 1634027606)
            {
              __int128 v43 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v43);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.has-video";
              goto LABEL_481;
            }
          }

          else
          {
            if (a1 == 1634027349)
            {
              id v89 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v89);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.gapless-dur";
              goto LABEL_481;
            }

            if (a1 == 1634027587)
            {
              uint64_t v23 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v23);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.has-chapter-data";
              goto LABEL_481;
            }
          }
        }

        else if (a1 <= 1634028337)
        {
          if (a1 == 1634027853)
          {
            id v93 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v93);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.itunes-machine-id";
            goto LABEL_481;
          }

          if (a1 == 1634028337)
          {
            uint64_t v30 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v30);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.drm-key1-id";
            goto LABEL_481;
          }
        }

        else
        {
          switch(a1)
          {
            case 1634028338:
              id v67 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v67);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.drm-key2-id";
              goto LABEL_481;
            case 1634028907:
              os_log_t v68 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v68);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.extended-media-kind";
              goto LABEL_481;
            case 1634029124:
              id v12 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v12);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.non-drm-user-id";
              goto LABEL_481;
          }
        }

        goto LABEL_472;
      }

      if (a1 <= 1634029667)
      {
        if (a1 > 1634029642)
        {
          if (a1 == 1634029643)
          {
            uint64_t v108 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v108);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.playlist-kind";
            goto LABEL_481;
          }

          if (a1 == 1634029651)
          {
            __int128 v46 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v46);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.special-playlist";
            goto LABEL_481;
          }
        }

        else
        {
          if (a1 == 1634029142)
          {
            id v91 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v91);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.norm-volume";
            goto LABEL_481;
          }

          if (a1 == 1634029636)
          {
            *a4 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.playlist-data";
            goto LABEL_481;
          }
        }

        goto LABEL_472;
      }

      if (a1 <= 1634029682)
      {
        if (a1 != 1634029668)
        {
          if (a1 == 1634029682)
          {
            id v35 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v35);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.playlist-sort-is-reversed";
            goto LABEL_481;
          }

          goto LABEL_472;
        }

        uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
        *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
        if (a5)
        {
          id v11 = @"com.apple.itunes.display-publication-version";
          goto LABEL_485;
        }

        goto LABEL_486;
      }

      switch(a1)
      {
        case 1634029683:
          unint64_t v75 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v75);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"com.apple.itunes.playlist-sort";
          goto LABEL_481;
        case 1634030160:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"com.apple.itunes.item-redownload-param";
          break;
        case 1634030192:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"com.apple.itunes.item-redownload-param-2";
          break;
        default:
          goto LABEL_472;
      }
    }

    else
    {
      if (a1 > 1634026575)
      {
        if (a1 <= 1634027331)
        {
          if (a1 > 1634026581)
          {
            if (a1 == 1634026582)
            {
              uint64_t v107 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v107);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.drm-versions";
              goto LABEL_481;
            }

            if (a1 == 1634027090)
            {
              __int128 v44 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v44);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.supports-fprap";
              goto LABEL_481;
            }
          }

          else
          {
            if (a1 == 1634026576)
            {
              id v90 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v90);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.drm-platform-id";
              goto LABEL_481;
            }

            if (a1 == 1634026578)
            {
              id v24 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v24);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.drm-user-id";
              goto LABEL_481;
            }
          }
        }

        else if (a1 <= 1634027335)
        {
          if (a1 == 1634027332)
          {
            uint64_t v95 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v95);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.gapless-enc-dr";
            goto LABEL_481;
          }

          if (a1 == 1634027333)
          {
            id v33 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v33);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.gapless-enc-del";
            goto LABEL_481;
          }
        }

        else
        {
          switch(a1)
          {
            case 1634027336:
              id v73 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v73);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.gapless-heur";
              goto LABEL_481;
            case 1634027346:
              uint64_t v74 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v74);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.gapless-resy";
              goto LABEL_481;
            case 1634027347:
              *a4 = (id)objc_claimAutoreleasedReturnValue( +[ICDResponseDataParser _parseItemIDArrayWithBytes:length:]( &OBJC_CLASS___ICDResponseDataParser,  "_parseItemIDArrayWithBytes:length:",  a2,  a3));
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"com.apple.itunes.genius-seed-track-id-listing";
              goto LABEL_481;
          }
        }

        goto LABEL_472;
      }

      if (a1 <= 1634026336)
      {
        if (a1 <= 1634026316)
        {
          if (a1 == 1633841260)
          {
            CFStringRef v87 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v87);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.baseplaylist";
            goto LABEL_481;
          }

          if (a1 == 1634026308)
          {
            *a4 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.flat-chapter-data";
            goto LABEL_481;
          }

          goto LABEL_472;
        }

        if (a1 == 1634026317)
        {
          id v103 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v103);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"com.apple.itunes.cloud-match-type";
          goto LABEL_481;
        }

        if (a1 != 1634026324) {
          goto LABEL_472;
        }
        uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
        *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
        if (!a5) {
          goto LABEL_486;
        }
        id v11 = @"com.apple.itunes.cloud-artwork-token";
      }

      else if (a1 <= 1634026354)
      {
        if (a1 == 1634026337)
        {
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (a5)
          {
            id v11 = @"com.apple.itunes.cloud-artwork-url";
            goto LABEL_485;
          }

          goto LABEL_486;
        }

        if (a1 != 1634026354) {
          goto LABEL_472;
        }
        uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
        *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
        if (!a5) {
          goto LABEL_486;
        }
        id v11 = @"com.apple.itunes.copyright";
      }

      else
      {
        if (a1 == 1634026355)
        {
          id v63 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v63);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"com.apple.itunes.cloud-connect-status";
          goto LABEL_481;
        }

        if (a1 != 1634026356)
        {
          if (a1 == 1634026571)
          {
            *a4 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"com.apple.itunes.drm-key-list-id";
            goto LABEL_481;
          }

          goto LABEL_472;
        }

        uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
        *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
        if (!a5) {
          goto LABEL_486;
        }
        id v11 = @"com.apple.itunes.cloud-lyrics-token";
      }
    }

LABEL_485:
    *a5 = v11;
    goto LABEL_486;
  }

  if (a1 <= 1634956651)
  {
    if (a1 > 1634954338)
    {
      if (a1 <= 1634956128)
      {
        if (a1 <= 1634955371)
        {
          if (a1 != 1634954339)
          {
            if (a1 == 1634954355)
            {
              unsigned int v92 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v92);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.songlongsize";
              goto LABEL_481;
            }

            if (a1 == 1634955363)
            {
              id v25 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v25);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.songuserplaycount";
              goto LABEL_481;
            }

            goto LABEL_472;
          }

          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songlongcontentdescription";
        }

        else
        {
          if (a1 > 1634955880)
          {
            if (a1 == 1634955881)
            {
              unint64_t v97 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v97);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.songartistid";
              goto LABEL_481;
            }

            if (a1 == 1634955894)
            {
              NSErrorUserInfoKey v36 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v36);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.songrelativevolume";
              goto LABEL_481;
            }

            goto LABEL_472;
          }

          if (a1 == 1634955372)
          {
            os_log_t v76 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v76);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.songdateplayed";
            goto LABEL_481;
          }

          if (a1 != 1634955381) {
            goto LABEL_472;
          }
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songpodcasturl";
        }

        goto LABEL_485;
      }

      if (a1 > 1634956153)
      {
        if (a1 > 1634956396)
        {
          if (a1 == 1634956397)
          {
            __int16 v104 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v104);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.songtime";
            goto LABEL_481;
          }

          if (a1 == 1634956398)
          {
            uint64_t v42 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v42);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.songtracknumber";
            goto LABEL_481;
          }
        }

        else
        {
          if (a1 == 1634956154)
          {
            id v88 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v88);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.songsize";
            goto LABEL_481;
          }

          if (a1 == 1634956387)
          {
            id v22 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v22);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.songtrackcount";
            goto LABEL_481;
          }
        }

        goto LABEL_472;
      }

      switch(a1)
      {
        case 1634956129:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.sortartist";
          goto LABEL_485;
        case 1634956131:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.sortcomposer";
          goto LABEL_485;
        case 1634956140:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.sortalbumartist";
          goto LABEL_485;
        case 1634956142:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.sortname";
          goto LABEL_485;
        case 1634956144:
          id v58 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v58);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songstoptime";
          break;
        case 1634956146:
          id v59 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v59);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songsamplerate";
          break;
        case 1634956147:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.sortseriesname";
          goto LABEL_485;
        case 1634956148:
          uint64_t v60 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v60);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songstarttime";
          break;
        case 1634956149:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.sortalbum";
          goto LABEL_485;
        default:
          goto LABEL_472;
      }

      goto LABEL_481;
    }

    if (a1 <= 1634952547)
    {
      switch(a1)
      {
        case 1634952289:
          id v16 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v16);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdateadded";
          break;
        case 1634952290:
          __int16 v51 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v51);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdisabled";
          break;
        case 1634952291:
          id v52 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v52);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdisccount";
          break;
        case 1634952299:
          unsigned int v53 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v53);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdatakind";
          break;
        case 1634952301:
          id v54 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v54);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdatemodified";
          break;
        case 1634952302:
          uint64_t v55 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v55);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdiscnumber";
          break;
        case 1634952304:
          id v56 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v56);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdatepurchased";
          break;
        case 1634952306:
          id v57 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v57);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songdatereleased";
          break;
        case 1634952308:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songdescription";
          goto LABEL_485;
        default:
          goto LABEL_472;
      }

      goto LABEL_481;
    }

    if (a1 > 1634953071)
    {
      if (a1 <= 1634954083)
      {
        if (a1 == 1634953072)
        {
          __int16 v100 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v100);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songgapless";
          goto LABEL_481;
        }

        if (a1 == 1634953328)
        {
          id v39 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v39);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songhasbeenplayed";
          goto LABEL_481;
        }

        goto LABEL_472;
      }

      if (a1 == 1634954084)
      {
        uint64_t v81 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v81);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"daap.songlastskipdate";
        goto LABEL_481;
      }

      if (a1 == 1634954096)
      {
        uint64_t v82 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v82);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"daap.songuserskipcount";
        goto LABEL_481;
      }

      if (a1 != 1634954105) {
        goto LABEL_472;
      }
      uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
      *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
      if (!a5) {
        goto LABEL_486;
      }
      id v11 = @"daap.songkeywords";
    }

    else if (a1 <= 1634952562)
    {
      if (a1 == 1634952548)
      {
        uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
        *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
        if (a5)
        {
          id v11 = @"daap.songextradata";
          goto LABEL_485;
        }

        goto LABEL_486;
      }

      if (a1 != 1634952561) {
        goto LABEL_472;
      }
      uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
      *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
      if (!a5) {
        goto LABEL_486;
      }
      id v11 = @"daap.songeqpreset";
    }

    else
    {
      switch(a1)
      {
        case 1634952563:
          __int128 v66 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v66);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"daap.songexcludefromshuffle";
          goto LABEL_481;
        case 1634952813:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songformat";
          break;
        case 1634953070:
          uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
          *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
          if (!a5) {
            goto LABEL_486;
          }
          id v11 = @"daap.songgenre";
          break;
        default:
          goto LABEL_472;
      }
    }

    goto LABEL_485;
  }

  if (a1 > 1835361394)
  {
    if (a1 > 1835626092)
    {
      if (a1 > 1936016200)
      {
        if (a1 <= 1936020040)
        {
          if (a1 == 1936016201)
          {
            unsigned int v102 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v102);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.composersyncid";
            goto LABEL_481;
          }

          if (a1 == 1936017225)
          {
            id v41 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v41);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.genresyncid";
            goto LABEL_481;
          }
        }

        else
        {
          switch(a1)
          {
            case 1936020041:
              lldiv_t v85 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v85);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.artistsyncid";
              goto LABEL_481;
            case 1936020297:
              uint64_t v86 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v86);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.syncid";
              goto LABEL_481;
            case 1936020553:
              uint64_t v21 = sub_1000F3D38(a2, a3);
              *a4 = (id)objc_claimAutoreleasedReturnValue(v21);
              if (!a5) {
                return;
              }
              unsigned __int8 v10 = @"daap.albumartistsyncid";
              goto LABEL_481;
          }
        }

        goto LABEL_472;
      }

      if (a1 > 1836082545)
      {
        switch(a1)
        {
          case 1836082546:
            __int16 v71 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v71);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.persistentid";
            goto LABEL_481;
          case 1836282996:
            __int16 v72 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v72);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.status";
            goto LABEL_481;
          case 1936015689:
            id v14 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v14);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"daap.albumsyncid";
            goto LABEL_481;
        }

        goto LABEL_472;
      }

      if (a1 != 1835626093)
      {
        if (a1 == 1836082031)
        {
          unsigned __int8 v32 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v32);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmap.parentcontainerid";
          goto LABEL_481;
        }

        goto LABEL_472;
      }

      uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
      *a4 =  -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v114,  4LL);
      if (a5)
      {
        id v11 = @"dmap.itemname";
        goto LABEL_485;
      }

      goto LABEL_486;
    }

    if (a1 > 1835624552)
    {
      if (a1 <= 1835625315)
      {
        if (a1 == 1835624553)
        {
          id v99 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v99);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmap.itemhidden";
          goto LABEL_481;
        }

        if (a1 == 1835624804)
        {
          __int128 v38 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v38);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmap.itemid";
          goto LABEL_481;
        }
      }

      else
      {
        switch(a1)
        {
          case 1835625316:
            __int128 v79 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v79);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.itemkind";
            goto LABEL_481;
          case 1835625572:
            unsigned int v80 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v80);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.longitemid";
            goto LABEL_481;
          case 1835625827:
            uint64_t v19 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v19);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.itemcount";
            goto LABEL_481;
        }
      }

      goto LABEL_472;
    }

    if (a1 <= 1835362671)
    {
      if (a1 == 1835361395) {
        return;
      }
      if (a1 == 1835362657)
      {
        id v29 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v29);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"dmap.itemdateadded";
        goto LABEL_481;
      }

      goto LABEL_472;
    }

    if (a1 == 1835362672)
    {
      char v65 = sub_1000F3D38(a2, a3);
      *a4 = (id)objc_claimAutoreleasedReturnValue(v65);
      if (!a5) {
        return;
      }
      unsigned __int8 v10 = @"dmap.itemdateplayed";
      goto LABEL_481;
    }

    if (a1 != 1835366516)
    {
      if (a1 == 1835623521)
      {
        *a4 = (id)objc_claimAutoreleasedReturnValue( +[ICDResponseDataParser _parseItemIDArrayWithBytes:length:]( &OBJC_CLASS___ICDResponseDataParser,  "_parseItemIDArrayWithBytes:length:",  a2,  a3));
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"dmap.itemidlisting";
        goto LABEL_481;
      }

      goto LABEL_472;
    }

    uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
    *a4 = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v114, 4LL);
    if (!a5) {
      goto LABEL_486;
    }
    id v11 = @"dmap.objectextradata";
    goto LABEL_485;
  }

  if (a1 > 1668117099)
  {
    if (a1 > 1835103851)
    {
      if (a1 <= 1835234408)
      {
        if (a1 == 1835103852)
        {
          id v101 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v101);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmap.itemavailable";
          goto LABEL_481;
        }

        if (a1 == 1835234403)
        {
          __int16 v40 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v40);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmap.containercount";
          goto LABEL_481;
        }
      }

      else
      {
        switch(a1)
        {
          case 1835234409:
            uint64_t v83 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v83);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.containeritemid";
            goto LABEL_481;
          case 1835295339:
            os_log_t v84 = sub_1000F3D38(a2, a3);
            *a4 = (id)objc_claimAutoreleasedReturnValue(v84);
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.databasekind";
            goto LABEL_481;
          case 1835295596:
            *a4 = (id)objc_claimAutoreleasedReturnValue( +[ICDResponseDataParser _parseDictionaryCollectionWithBytes:length:]( &OBJC_CLASS___ICDResponseDataParser,  "_parseDictionaryCollectionWithBytes:length:",  a2,  a3));
            if (!a5) {
              return;
            }
            unsigned __int8 v10 = @"dmap.dictionary";
            goto LABEL_481;
        }
      }
    }

    else if (a1 <= 1668117346)
    {
      if (a1 == 1668117100)
      {
        id v94 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v94);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"dmcp.supportsremotelibraryselection";
        goto LABEL_481;
      }

      if (a1 == 1668117346)
      {
        id v31 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v31);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"dmcp.supportsbonjoursourcesupdates";
        goto LABEL_481;
      }
    }

    else
    {
      switch(a1)
      {
        case 1668117347:
          uint64_t v69 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v69);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmcp.supportscontrolpromptrequests";
          goto LABEL_481;
        case 1668117360:
          __int16 v70 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v70);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmcp.supportsplaystatusupdates";
          goto LABEL_481;
        case 1668117366:
          uint64_t v13 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v13);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmcp.supportsvolumecontrol";
          goto LABEL_481;
      }
    }

    goto LABEL_472;
  }

  if (a1 > 1667330932)
  {
    if (a1 <= 1667584855)
    {
      if (a1 == 1667330933)
      {
        __int16 v98 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v98);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"dacp.supports-setuserrating";
        goto LABEL_481;
      }

      if (a1 == 1667584839)
      {
        __int128 v37 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v37);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"com.apple.itunes.supports-genius-control";
        goto LABEL_481;
      }
    }

    else
    {
      switch(a1)
      {
        case 1667584856:
          os_log_t v77 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v77);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"com.apple.itunes.supported-itunes-extensions";
          goto LABEL_481;
        case 1668114795:
          __int128 v78 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v78);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmcp.interfacekind";
          goto LABEL_481;
        case 1668116594:
          id v18 = sub_1000F3D38(a2, a3);
          *a4 = (id)objc_claimAutoreleasedReturnValue(v18);
          if (!a5) {
            return;
          }
          unsigned __int8 v10 = @"dmcp.protocolversion";
          goto LABEL_481;
      }
    }

    goto LABEL_472;
  }

  if (a1 <= 1634957681)
  {
    if (a1 != 1634956652)
    {
      if (a1 == 1634956658)
      {
        id v27 = sub_1000F3D38(a2, a3);
        *a4 = (id)objc_claimAutoreleasedReturnValue(v27);
        if (!a5) {
          return;
        }
        unsigned __int8 v10 = @"daap.songuserrating";
        goto LABEL_481;
      }

      goto LABEL_472;
    }

    uint64_t v114 = -[NSData initWithBytes:length:](objc_alloc(&OBJC_CLASS___NSData), "initWithBytes:length:", a2, a3);
    *a4 = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v114, 4LL);
    if (a5)
    {
      id v11 = @"daap.songdataurl";
      goto LABEL_485;
    }

LABEL_486:
    return;
  }

  switch(a1)
  {
    case 1634957682:
      id v61 = sub_1000F3D38(a2, a3);
      *a4 = (id)objc_claimAutoreleasedReturnValue(v61);
      if (!a5) {
        return;
      }
      unsigned __int8 v10 = @"daap.songyear";
      goto LABEL_481;
    case 1667330162:
      id v62 = sub_1000F3D38(a2, a3);
      *a4 = (id)objc_claimAutoreleasedReturnValue(v62);
      if (!a5) {
        return;
      }
      unsigned __int8 v10 = @"dacp.protocolversion";
      goto LABEL_481;
    case 1667330931:
      id v9 = sub_1000F3D38(a2, a3);
      *a4 = (id)objc_claimAutoreleasedReturnValue(v9);
      if (!a5) {
        return;
      }
      unsigned __int8 v10 = @"dacp.supports-speakerselection";
      goto LABEL_481;
  }

LABEL_472:
  os_log_t v109 = sub_1000DD824();
  uint64_t v110 = (os_log_s *)objc_claimAutoreleasedReturnValue(v109);
  if (os_log_type_enabled(v110, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 67110144;
    unsigned int v116 = HIBYTE(a1);
    __int16 v117 = 1024;
    unsigned int v118 = HIWORD(a1);
    __int16 v119 = 1024;
    unsigned int v120 = a1 >> 8;
    __int16 v121 = 1024;
    int v122 = a1;
    __int16 v123 = 1024;
    unsigned int v124 = a3;
    _os_log_impl( (void *)&_mh_execute_header,  v110,  OS_LOG_TYPE_DEFAULT,  "Unhandled code in item response: %c%c%c%c (%u bytes long)",  buf,  0x20u);
  }
}

NSNumber *sub_1000F3D38(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = 0LL;
  switch(a2)
  {
    case 1LL:
      uint64_t v3 = -[NSNumber initWithUnsignedChar:](objc_alloc(&OBJC_CLASS___NSNumber), "initWithUnsignedChar:", *a1);
      break;
    case 2LL:
      uint64_t v3 = -[NSNumber initWithUnsignedShort:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedShort:",  bswap32(*(unsigned __int16 *)a1) >> 16);
      break;
    case 4LL:
      uint64_t v3 = -[NSNumber initWithUnsignedLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedLong:",  bswap32(*(_DWORD *)a1));
      break;
    case 8LL:
      uint64_t v3 = -[NSNumber initWithUnsignedLongLong:]( objc_alloc(&OBJC_CLASS___NSNumber),  "initWithUnsignedLongLong:",  (((unint64_t)*a1 << 56) | ((unint64_t)a1[1] << 48) | ((unint64_t)a1[2] << 40) | ((unint64_t)a1[3] << 32) | ((unint64_t)a1[4] << 24) | ((unint64_t)a1[5] << 16) | ((unint64_t)a1[6] << 8))
           + a1[7]);
      break;
    default:
      return v3;
  }

  return v3;
}

uint64_t sub_1000F3E20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1000F3E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 40) parseItemWithBytes:a2 length:a3 usingHandler:*(void *)(a1 + 32)];
}

void sub_1000F4780(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  id v8 = a2;
  id v9 = objc_alloc_init(&OBJC_CLASS___ICAppleMusicAPITokenResponse);
  -[ICAppleMusicAPITokenResponse setTokenCollection:](v9, "setTokenCollection:", v8);

  if (v7)
  {
    unsigned __int8 v10 = -[ICAppleMusicAPITokenError initWithNSError:]( objc_alloc(&OBJC_CLASS___ICAppleMusicAPITokenError),  "initWithNSError:",  v7);
    -[ICAppleMusicAPITokenError setPhase:](v10, "setPhase:", a4);
    -[ICAppleMusicAPITokenResponse setError:](v9, "setError:", v10);
  }

  id v11 = os_log_create("com.apple.amp.itunescloudd", "Connections");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    uint64_t v12 = a1[4];
    uint64_t v13 = a1[5];
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[ICAppleMusicAPITokenResponse privacyConsciousDescription](v9, "privacyConsciousDescription"));
    int v16 = 138543874;
    uint64_t v17 = v12;
    __int16 v18 = 2114;
    uint64_t v19 = v13;
    __int16 v20 = 2114;
    uint64_t v21 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "%{public}@ Reporting completion for token request %{public}@ with response: %{public}@.",  (uint8_t *)&v16,  0x20u);
  }

  uint64_t v15 = a1[6];
  if (v15) {
    (*(void (**)(uint64_t, ICAppleMusicAPITokenResponse *))(v15 + 16))(v15, v9);
  }
}

void sub_1000F48F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "Connections");
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v18 = v9;
      __int16 v19 = 2114;
      id v20 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Encountered error trying to request Developer Token: %{public}@.",  buf,  0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  }

  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v18 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "%{public}@ Successfully retrieved Developer Token.",  buf,  0xCu);
    }

    id v11 = objc_alloc_init(&OBJC_CLASS___ICAppleMusicAPITokenCollection);
    -[ICAppleMusicAPITokenCollection setDeveloperToken:](v11, "setDeveloperToken:", v5);
    id v12 = objc_msgSend( [ICMusicUserTokenFetchRequest alloc],  "initWithDeveloperToken:clientInfo:options:",  v5,  *(void *)(a1 + 48),  objc_msgSend(*(id *)(a1 + 40), "shouldIgnoreUserTokenCache"));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    void v14[2] = sub_1000F4AF8;
    v14[3] = &unk_1001A6328;
    void v14[4] = *(void *)(a1 + 32);
    uint64_t v15 = v11;
    id v16 = *(id *)(a1 + 56);
    uint64_t v13 = v11;
    [v12 performRequestWithResponseHandler:v14];
  }
}

void sub_1000F4AF8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "Connections");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138543618;
      uint64_t v9 = v7;
      __int16 v10 = 2114;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "%{public}@ Encountered error trying to request Music User Token: %{public}@.",  (uint8_t *)&v8,  0x16u);
    }
  }

  else
  {
    [*(id *)(a1 + 40) setUserToken:a2];
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
}

id sub_1000F4BF4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stop];
}

id sub_1000F4BFC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _start];
}

void sub_1000F4C04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___IDSProtobuf);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 data]);

  id v6 = [v4 initWithProtobufData:v5 type:2000 isResponse:0];
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", IDSDefaultPairedDevice));
  v27[0] = IDSSendMessageOptionTimeoutKey;
  int v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLong:](&OBJC_CLASS___NSNumber, "numberWithLong:", llround(3600.0)));
  v28[0] = v8;
  v28[1] = &__kCFBooleanTrue;
  v27[1] = IDSSendMessageOptionWantsClientAcknowledgementKey;
  void v27[2] = IDSSendMessageOptionForceLocalDeliveryKey;
  void v28[2] = &__kCFBooleanTrue;
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v28,  v27,  3LL));

  __int16 v10 = *(void **)(*(void *)(a1 + 32) + 16LL);
  id v21 = 0LL;
  id v22 = 0LL;
  unsigned int v11 = [v10 sendProtobuf:v6 toDestinations:v7 priority:300 options:v9 identifier:&v22 error:&v21];
  id v12 = v22;
  id v13 = v21;
  id v14 = os_log_create("com.apple.amp.itunescloudd", "Connections");
  uint64_t v15 = v14;
  if (v11)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v24 = v16;
      __int16 v25 = 2114;
      id v26 = v12;
      uint64_t v17 = "%{public}@ Successfully sent response message; responseMessageIdentifier = %{public}@.";
      uint64_t v18 = v15;
      os_log_type_t v19 = OS_LOG_TYPE_INFO;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v18, v19, v17, buf, 0x16u);
    }
  }

  else if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    uint64_t v20 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v24 = v20;
    __int16 v25 = 2114;
    id v26 = v13;
    uint64_t v17 = "%{public}@ Failed to send response message with error = %{public}@.";
    uint64_t v18 = v15;
    os_log_type_t v19 = OS_LOG_TYPE_ERROR;
    goto LABEL_6;
  }
}

id sub_1000F4E6C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stop];
}

void sub_1000F4EB4(id a1)
{
  id v1 = -[AppleMusicAPITokenIDSService _init](objc_alloc(&OBJC_CLASS___AppleMusicAPITokenIDSService), "_init");
  uint64_t v2 = (void *)qword_1001DB828;
  qword_1001DB828 = (uint64_t)v1;
}

void sub_1000F5E1C(uint64_t a1, _BYTE *a2, void *a3)
{
  id v5 = a3;
  if (a2 && *a2)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v15 = 136446210;
      uint64_t v16 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "BackgroundTask Fired: %{public}s",  (uint8_t *)&v15,  0xCu);
    }

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[ICDeviceSetupStatusMonitor sharedMonitor]( &OBJC_CLASS___ICDeviceSetupStatusMonitor,  "sharedMonitor"));
    unsigned __int8 v8 = [v7 isSetupAssistantComplete];

    if ((v8 & 1) != 0)
    {
      int v9 = xpc_dictionary_get_BOOL(v5, kBackgroundTaskAgentJobExpired);
      int64_t int64 = xpc_dictionary_get_int64(v5, kBackgroundTaskAgentJobStatus);
      unsigned int v11 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v15 = 136315906;
        uint64_t v16 = a2;
        __int16 v17 = 1024;
        int v18 = v9;
        __int16 v19 = 1024;
        int v20 = (int64 == 2) & ~v9;
        __int16 v21 = 1024;
        BOOL v22 = int64 == 1;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "BackgroundTask %s: expired = %d, satisfied = %d, invalid = %d",  (uint8_t *)&v15,  0x1Eu);
      }

      id v12 = objc_autoreleasePoolPush();
      [*(id *)(a1 + 32) _handleJobNamed:a2 satisfied:(int64 == 2) & ~v9 invalid:int64 == 1];
      objc_autoreleasePoolPop(v12);
    }

    else
    {
      id v14 = os_log_create("com.apple.amp.itunescloudd", "XPC");
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v15) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Ignoring BackgroundTask because setup assistant hasn't finished.",  (uint8_t *)&v15,  2u);
      }

      [*(id *)(a1 + 32) _unscheduleJobNamed:a2];
    }
  }

  else
  {
    id v13 = os_log_create("com.apple.amp.itunescloudd", "XPC");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v15) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "BackgroundTask Fired without a job name",  (uint8_t *)&v15,  2u);
    }
  }
}

void sub_1000F60BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138543362;
      id v11 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Jalisco media deferred push update failed with error %{public}@, trying again in an hour.",  (uint8_t *)&v10,  0xCu);
    }

    id v5 = *(void **)(a1 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v6 timeIntervalSinceReferenceDate];
    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v7 + 3600.0));
    int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _baseBtaJobForDeferredPush]);
    [v5 _scheduleJobNamed:"com.apple.itunescloudd.deferredPushUpdate.jaliscoMedia" withStartTime:v8 baseBtaJob:v9];
  }

  else
  {
    [*(id *)(a1 + 32) unscheduleJaliscoMediaDeferredPushUpate];
  }
}

void sub_1000F6208(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = os_log_create("com.apple.amp.itunescloudd", "PurchaseSync");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v20 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Jalisco media periodic poll update failed with error %{public}@, trying again tomorrow.",  buf,  0xCu);
    }

    id v5 = objc_alloc(&OBJC_CLASS___NSNumber);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v6 timeIntervalSinceReferenceDate];
    unsigned __int8 v8 = -[NSNumber initWithDouble:](v5, "initWithDouble:", v7 + 86400.0);

    int v9 = *(void **)(a1 + 32);
    int v10 = (void *)objc_claimAutoreleasedReturnValue([v9 _nextJaliscoMediaPollTimeKey]);
    [v9 _setHomeSharingPrefsNumber:v8 forKey:v10];

    id v11 = *(void **)(a1 + 32);
    id v12 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v11,  "_baseBtaJobForPeriodicPollCellularDataAllowed:",  objc_msgSend(v11, "_cellularDataAllowedForJaliscoMedia")));
    [v11 _scheduleJobNamed:"com.apple.itunescloudd.periodicPoll.jaliscoMedia" withStartTime:v8 baseBtaJob:v12];
  }

  else
  {
    id v13 = [[MSVXPCTransaction alloc] initWithName:@"CloudPeriodicPoller - JaliscoMedia - LoadBag"];
    [v13 beginTransaction];
    id v14 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
    int v15 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
    unsigned __int8 v8 = -[ICStoreRequestContext initWithIdentity:](v14, "initWithIdentity:", v15);

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLBagProvider sharedBagProvider](&OBJC_CLASS___ICURLBagProvider, "sharedBagProvider"));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472LL;
    void v17[2] = sub_1000F6448;
    v17[3] = &unk_1001A7180;
    void v17[4] = *(void *)(a1 + 32);
    id v18 = v13;
    id v12 = v13;
    [v16 getBagForRequestContext:v8 withCompletionHandler:v17];
  }
}

void sub_1000F6448(uint64_t a1, void *a2)
{
  id v20 = (id)objc_claimAutoreleasedReturnValue([a2 dictionaryForBagKey:@"purchase-daap"]);
  uint64_t v3 = ICGetCloudDAAPClientPrefix();
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 stringByAppendingString:@"forced-refresh-frequency-minutes"]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:v5]);
  double v7 = v6;
  if (v6) {
    id v8 = v6;
  }
  else {
    id v8 = (id)objc_claimAutoreleasedReturnValue([v20 objectForKey:@"forced-refresh-frequency-minutes"]);
  }
  int v9 = v8;

  if (v9)
  {
    [v9 doubleValue];
    double v11 = v10 * 60.0;
  }

  else
  {
    double v11 = 604800.0;
  }

  id v12 = objc_alloc(&OBJC_CLASS___NSNumber);
  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v13 timeIntervalSinceReferenceDate];
  int v15 = -[NSNumber initWithDouble:](v12, "initWithDouble:", v11 + v14);

  uint64_t v16 = *(void **)(a1 + 32);
  __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 _nextJaliscoMediaPollTimeKey]);
  [v16 _setHomeSharingPrefsNumber:v15 forKey:v17];

  id v18 = *(void **)(a1 + 32);
  __int16 v19 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v18,  "_baseBtaJobForPeriodicPollCellularDataAllowed:",  objc_msgSend(v18, "_cellularDataAllowedForJaliscoMedia")));
  [v18 _scheduleJobNamed:"com.apple.itunescloudd.periodicPoll.jaliscoMedia" withStartTime:v15 baseBtaJob:v19];

  [*(id *)(a1 + 40) endTransaction];
}

void sub_1000F65D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138543362;
      id v11 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_ERROR,  "Saga deferred push update failed with error %{public}@, trying again in an hour.",  (uint8_t *)&v10,  0xCu);
    }

    id v5 = *(void **)(a1 + 32);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v6 timeIntervalSinceReferenceDate];
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:", v7 + 3600.0));
    int v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _baseBtaJobForDeferredPush]);
    [v5 _scheduleJobNamed:"com.apple.itunescloudd.deferredPushUpdate.saga" withStartTime:v8 baseBtaJob:v9];
  }

  else
  {
    [*(id *)(a1 + 32) unscheduleSagaDeferredPushUpate];
  }
}

void sub_1000F6764(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___CloudBackgroundTaskManager);
  uint64_t v2 = (void *)qword_1001DB838;
  qword_1001DB838 = (uint64_t)v1;
}

id sub_1000F69F4(uint64_t a1, void *a2)
{
  return [a2 writeUInt32:*(unsigned int *)(a1 + 32) withCode:1835624804];
}

LABEL_50:
  __int16 v51 = (void *)objc_claimAutoreleasedReturnValue(-[CloudLibraryOperation musicLibrary](self, "musicLibrary"));
  unsigned int v53 = MSVTCCIdentityForCurrentProcess(v51, v52);
  id v54 = (void *)objc_claimAutoreleasedReturnValue(v53);
  [v51 setClientIdentity:v54];

  -[NSError finishedUpdateOperationForLibraryType:withResponse:]( self->super._error,  "finishedUpdateOperationForLibraryType:withResponse:",  1LL,  v40);
}

  id v64 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
  char v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "NSString * _Nonnull _MSVHashGetDigest(MSVHash)"));
  [v64 handleFailureInFunction:v65 file:@"MSVHasher+Algorithms.h" lineNumber:356 description:@"Cannot obtain digest from unknown hasher algorithm"];

  id v59 = &stru_1001A7960;
LABEL_47:

  uint64_t v60 = @"com.apple.itunescloudd.deferredPushUpdate.jalisco";
  if (!a3) {
    uint64_t v60 = @"com.apple.itunescloudd.deferredPushUpdate.saga";
  }
  id v61 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@.%@", v60, v59));
  name = v6->_name;
  v6->_name = (NSString *)v61;

  return v6;
}

void sub_1000FA2F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
}

void sub_1000FBA1C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

void sub_1000FC064( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
}

id sub_1000FC3C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  double v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v13 = 138543362;
    uint64_t v14 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Clearing temporary item cloud ids.",  (uint8_t *)&v13,  0xCu);
  }

  if ([v3 executeUpdate:@"UPDATE item_store SET store_saga_id = 0"])
  {
    int v9 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v13 = 138543362;
      uint64_t v14 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Clearing temporary container cloud ids.",  (uint8_t *)&v13,  0xCu);
    }

    id v11 = [v3 executeUpdate:@"UPDATE container SET store_cloud_id = 0"];
  }

  else
  {
    id v11 = 0LL;
  }

  return v11;
}

uint64_t sub_1000FC55C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000FC56C(uint64_t a1)
{
}

void sub_1000FC574(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v18 = v7;

  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8LL);
  int v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v8;
  id v14 = v8;

  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v9;
  id v17 = v9;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000FC630(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (v5)
  {
    if ([v5 responseCode] == (id)200)
    {
      *(_DWORD *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v6 databaseRevision];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v6 hasAddToPlaylistBehavior];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [v6 addToPlaylistBehavior];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = [v6 hasNeedsResetSync];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = [v6 needsResetSync];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 96) + 8) + 24) = [v6 hasClientFeaturesVersion];
      uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 clientFeaturesVersion]);
      uint64_t v8 = *(void *)(*(void *)(a1 + 104) + 8LL);
      id v9 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v7;

      *(_BYTE *)(*(void *)(*(void *)(a1 + 112) + 8) + 24) = [v6 hasAddToLibraryWhenFavoritingBehavior];
      *(_BYTE *)(*(void *)(*(void *)(a1 + 120) + 8) + 24) = [v6 addToLibraryWhenFavoritingBehavior];
      char v10 = *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL);
      if (v10) {
        char v10 = *(_BYTE *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL) != 0;
      }
      *(_BYTE *)(*(void *)(*(void *)(a1 + 128) + 8LL) + 24LL) = v10;
      id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync_Oversize");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = *(_DWORD *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL);
        int v13 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
        int v14 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 24LL);
        int v15 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL);
        int v16 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 96) + 8LL) + 24LL);
        int v17 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL);
        int v18 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 120) + 8LL) + 24LL);
        int v19 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL);
        uint64_t v20 = *(void *)(*(void *)(*(void *)(a1 + 104) + 8LL) + 40LL);
        uint64_t v22 = *(void *)(a1 + 32);
        uint64_t v21 = *(void *)(a1 + 40);
        int v24 = 138545922;
        uint64_t v25 = v22;
        __int16 v26 = 1024;
        int v27 = v12;
        __int16 v28 = 1024;
        int v29 = v13;
        __int16 v30 = 1024;
        int v31 = v14;
        __int16 v32 = 1024;
        int v33 = v15;
        __int16 v34 = 1024;
        int v35 = v16;
        __int16 v36 = 1024;
        int v37 = v17;
        __int16 v38 = 1024;
        int v39 = v18;
        __int16 v40 = 1024;
        int v41 = v19;
        __int16 v42 = 2114;
        uint64_t v43 = v20;
        __int16 v44 = 2114;
        uint64_t v45 = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Got update response databaseRevision=%u, addToPlaylistBehavior=%{BOOL}u, favoriteSongAddToLibrary Behavior=%{BOOL}u, needsResetSync=%{BOOL}u, clientFeaturesVersion=%{BOOL}u, addToPlaylistBehaviorDAAPValue=%d, addToLibraryWhenFavoritingBehaviorDAAPValue=%d, needsResetSyncDAAPValue=%d, clientFeaturesVersionDAAPValue=%{ public}@, currentClientBuildVersion=%{public}@",  (uint8_t *)&v24,  0x50u);
      }
    }

    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v6 error]);
    [*(id *)(a1 + 32) setError:v23];
  }

  else
  {
    [*(id *)(a1 + 32) setError:a3];
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_1000FC8E8(uint64_t a1, void *a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = a2 == 0LL;
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 setError:v4];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000FC944(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  id v7 = (id)objc_claimAutoreleasedReturnValue( [v3 executeQuery:@"SELECT best_artwork_token.entity_pid FROM best_artwork_token JOIN artwork_token ON best_artwork_token.entity_pid = artwork_token.entity_pid AND best_artwork_token.entity_type = artwork_token.entity_type AND best_artwork_token.available_artwork_token=artwork_token.artwork_token WHERE best_artwork_token.entity_type = ? AND best_artwork_token.artwork_type = ? AND artwork_source_type = ? AND available_artwork_token != ''" withParameters:&off_1001B4C08]);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_1000FCA34;
  void v8[3] = &unk_1001A6548;
  id v9 = *(id *)(a1 + 40);
  [v7 enumerateRowsWithBlock:v8];
}

void sub_1000FCA34(uint64_t a1, void *a2)
{
  id v3 = [a2 int64ForColumnIndex:0];
  id v4 = *(void **)(a1 + 32);
  id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v3));
  [v4 addObject:v5];
}

uint64_t sub_1000FCA90(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  [v3 setPrivacyContext:v6];

  uint64_t v7 = objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3TrackPropertyStoreSagaID,  0LL));
  uint64_t v8 = objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3TrackPropertyPurchaseHistoryID,  0LL));
  uint64_t v9 = objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:value:comparison:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:value:comparison:",  ML3TrackPropertyMediaType,  &off_1001B4690,  10LL));
  int v27 = (void *)v8;
  __int16 v28 = (void *)v7;
  v35[0] = v7;
  v35[1] = v8;
  uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( +[ML3PropertyPredicate predicateWithProperty:]( &OBJC_CLASS___ML3PropertyPredicate,  "predicateWithProperty:",  ML3TrackPropertyIsInMyLibrary));
  __int16 v26 = (void *)v9;
  id v35[2] = v9;
  v35[3] = v25;
  char v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v35, 4LL));
  uint64_t v11 = objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v10));

  int v29 = (void *)v11;
  int v12 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Track,  "queryWithLibrary:predicate:",  *(void *)(a1 + 40),  v11));
  int v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v32 = v14;
    __int16 v33 = 2048;
    id v34 = [v12 countOfEntities];
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Removing %lu items that do not have a cloud id.",  buf,  0x16u);
  }

  unsigned int v24 = [v12 deleteAllEntitiesFromLibraryWithDeletionType:2 usingConnection:v3];
  int v15 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3ContainerPropertyStoreCloudID,  0LL));
  int v16 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  ML3ContainerPropertyIsHidden,  0LL));
  v30[0] = v15;
  v30[1] = v16;
  int v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v30, 2LL));
  int v18 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v17));

  int v19 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Container queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Container,  "queryWithLibrary:predicate:",  *(void *)(a1 + 40),  v18));
  uint64_t v20 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v21 = *(void *)(a1 + 32);
    id v22 = [v19 countOfEntities];
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v32 = v21;
    __int16 v33 = 2048;
    id v34 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Removing %lu playlists that do not have a cloud id.",  buf,  0x16u);
  }

  [v19 deleteAllEntitiesFromLibraryWithDeletionType:2 usingConnection:v3];
  [*(id *)(a1 + 40) setValue:&__kCFBooleanTrue forDatabaseProperty:@"createdBuiltInSmartPlaylists"];
  [*(id *)(a1 + 40) setValue:&__kCFBooleanTrue forDatabaseProperty:@"autoCreatedSmartPlaylistsDeleted"];

  return v24;
}

Class sub_1000FCE54(uint64_t a1)
{
  id v6 = 0LL;
  if (!qword_1001DB850)
  {
    __int128 v7 = off_1001A65B8;
    uint64_t v8 = 0LL;
    qword_1001DB850 = _sl_dlopen(&v7, &v6);
  }

  if (!qword_1001DB850)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MobileBackupLibrary(void)"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v4,  @"CloudUpdateLibraryOperation.m",  43,  @"%s",  v6);

    goto LABEL_10;
  }

  if (v6) {
    free(v6);
  }
  Class result = objc_getClass("MBStateInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMBStateInfoClass(void)_block_invoke"));
    objc_msgSend( v3,  "handleFailureInFunction:file:lineNumber:description:",  v5,  @"CloudUpdateLibraryOperation.m",  44,  @"Unable to find class %s",  "MBStateInfo");

LABEL_10:
    __break(1u);
  }

  qword_1001DB848 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  return result;
}

void sub_1000FCFF0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v18 = v7;

  uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8LL);
  int v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v8;
  id v14 = v8;

  uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8LL);
  int v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v9;
  id v17 = v9;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000FD0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v9 = objc_autoreleasePoolPush();
  if ([*(id *)(a1 + 32) isCancelled])
  {
    *a5 = 1;
  }

  else
  {
    int v29 = v9;
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithSharedKeySet:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithSharedKeySet:",  *(void *)(a1 + 40)));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%llx", a2));
    [v10 setObject:v11 forKey:@"persistent-id"];

    id v28 = *(id *)(a3 + 8LL * *(void *)(a1 + 72));
    else {
      uint64_t v12 = @"song";
    }
    __int16 v30 = v10;
    [v10 setObject:v12 forKey:@"kind"];
    id v13 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 8);
    id v14 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 16);
    int v27 = v13;
    __int16 v26 = v14;
    unsigned int v15 = [*(id *)(a3 + 8 * *(void *)(a1 + 72) + 24) BOOLValue];
    unsigned int v16 = [*(id *)(a3 + 8 * *(void *)(a1 + 72) + 32) BOOLValue];
    if (*(void *)(a1 + 72))
    {
      unsigned int v17 = v16;
      unint64_t v18 = 0LL;
      uint64_t v19 = ML3TrackPropertyUserRating;
      uint64_t v20 = ML3TrackPropertyUserAlbumRating;
      do
      {
        id v21 = *(id *)(a3 + 8 * v18);
        id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) objectAtIndex:v18]);
        uint64_t v23 = v22;
        if ((!v15 || ([v22 isEqualToString:v19] & 1) == 0)
          && (!v17 || ([v23 isEqualToString:v20] & 1) == 0))
        {
          uint64_t v24 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) geniusValueForML3TrackProperty:v23 value:v21]);

          if (v24)
          {
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) geniusTrackPropertyForML3TrackProperty:v23]);
            [v30 setObject:v24 forKey:v25];

            id v21 = (id)v24;
          }

          else
          {
            id v21 = 0LL;
          }
        }

        ++v18;
      }

      while (v18 < *(void *)(a1 + 72));
    }

    [*(id *)(a1 + 64) addObject:v30];

    id v9 = v29;
  }

  objc_autoreleasePoolPop(v9);
}

void sub_1000FD34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v9 = objc_autoreleasePoolPush();
  if (![*(id *)(a1 + 32) isCancelled])
  {
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithSharedKeySet:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithSharedKeySet:",  *(void *)(a1 + 40)));
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    [v10 setObject:v11 forKey:@"persistent-id"];

    unint64_t v12 = *(void *)(a1 + 72);
    if (v12)
    {
      for (unint64_t i = 0LL; i < v12; ++i)
      {
        id v14 = *(void **)(a1 + 48);
        id v15 = *(id *)(a3 + 8 * i);
        unsigned int v16 = (void *)objc_claimAutoreleasedReturnValue([v14 objectAtIndex:i]);
        unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) geniusValueForML3ContainerProperty:v16 value:v15]);

        if (v17)
        {
          unint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 56) geniusPlaylistPropertyForML3ContainerProperty:v16]);
          [v10 setObject:v17 forKey:v18];
        }

        unint64_t v12 = *(void *)(a1 + 72);
      }
    }

    id v19 = *(id *)(a3 + 8 * v12);
    id v20 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 8);
    id v21 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 32);
    id v22 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 40);
    id v74 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 48);
    id v73 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 16);
    __int16 v71 = v20;
    id v72 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 24);
    if (([v20 BOOLValue] & 1) != 0 && objc_msgSend(v19, "length"))
    {
      uint64_t v23 = v22;
      [v10 setObject:v19 forKey:@"playlist-global-id"];
      uint64_t v24 = 7LL;
LABEL_30:
      __int16 v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v24));
      [v10 setObject:v51 forKey:@"kind"];

      [*(id *)(a1 + 64) addObject:v10];
      goto LABEL_31;
    }

    if ([v21 BOOLValue])
    {
      uint64_t v23 = v22;
      uint64_t v24 = 4LL;
      goto LABEL_30;
    }

    unsigned __int8 v25 = [v74 BOOLValue];
    unsigned __int8 v26 = v25;
    uint64_t v53 = a2;
    if ((v25 & 1) != 0)
    {
      unsigned __int8 v62 = v25;
      id v58 = v9;
      id v64 = v19;
      int v27 = 3;
    }

    else
    {
      if (![v22 length])
      {
        uint64_t v23 = v22;
        if ([v73 BOOLValue])
        {
          uint64_t v24 = 8LL;
          goto LABEL_30;
        }

        unsigned int v52 = [v72 BOOLValue];
        if (v52) {
          uint64_t v24 = 9LL;
        }
        else {
          uint64_t v24 = 1LL;
        }
        if ((v52 & 1) != 0) {
          goto LABEL_30;
        }
        goto LABEL_29;
      }

      unsigned __int8 v62 = v26;
      id v58 = v9;
      id v64 = v19;
      int v27 = 2;
    }

    unsigned int v69 = v27;
    id v63 = v21;
    id v68 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 56);
    id v67 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 64);
    id v28 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 72);
    id v29 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 80);
    id v30 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 88);
    id v65 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 96);
    id v66 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 104);
    id v31 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 112);
    id v32 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 120);
    id v33 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 128);
    id v54 = *(id *)(a3 + 8LL * *(void *)(a1 + 72) + 136);
    unsigned int v34 = [v54 intValue];
    int v86 = 0;
    __int128 v85 = 0u;
    __int128 v84 = 0u;
    __int128 v83 = 0u;
    __int128 v82 = 0u;
    __int128 v81 = 0u;
    __int128 v80 = 0u;
    v77[0] = [v67 BOOLValue];
    id v61 = v28;
    v77[1] = [v28 BOOLValue];
    uint64_t v60 = v29;
    v77[2] = [v29 BOOLValue];
    id v59 = v30;
    v77[3] = ITDBPlaylistLimitFromSmartPlaylistLimit([v30 unsignedCharValue]);
    unsigned int v78 = bswap32(ITDBTrackOrderForTrackOrder([v66 unsignedIntValue]));
    id v57 = v31;
    unsigned int v79 = bswap32([v31 unsignedIntValue]);
    id v56 = v32;
    LOBYTE(v80) = [v32 BOOLValue];
    uint64_t v55 = v33;
    BYTE1(v80) = [v33 BOOLValue];
    BYTE2(v80) = [v74 BOOLValue];
    if (!v34) {
      DWORD1(v80) = bswap32(ITDBTrackOrderForTrackOrder([v65 unsignedIntValue]));
    }
    int v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithBytes:length:](&OBJC_CLASS___NSData, "dataWithBytes:length:", v77, 112LL));
    __int16 v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithObject:forKey:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithObject:forKey:",  v35,  @"smartInfo"));
    int v37 = v36;
    id v9 = v58;
    if (v22) {
      [v36 setObject:v22 forKey:@"contentFilter"];
    }
    uint64_t v23 = v22;
    if (v34 - 200 >= 7) {
      __int16 v38 = &__kCFBooleanFalse;
    }
    else {
      __int16 v38 = &__kCFBooleanTrue;
    }
    [v37 setObject:v38 forKey:@"isDefaultSmartPlaylist"];
    id v39 = [v68 longLongValue];
    if (v39)
    {
      CFStringRef v87 = @"persistent-id";
      __int16 v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%llx", v39));
      id v88 = v40;
      int v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v88,  &v87,  1LL));
      id v89 = v41;
      __int16 v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v89, 1LL));
      [v10 setObject:v42 forKeyedSubscript:@"genius-seed-tracks"];
    }

    uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v37,  200LL,  0LL,  0LL));
    if (v43) {
      [v10 setObject:v43 forKey:@"data"];
    }

    id v21 = v63;
    id v19 = v64;
    uint64_t v24 = v69;
    if ((v62 & 1) == 0) {
      goto LABEL_30;
    }
LABEL_29:
    unsigned int v70 = v24;
    __int16 v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    id v45 = v19;
    id v46 = v21;
    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) musicLibrary]);
    id v48 = +[ML3Container newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Container,  "newWithPersistentID:inLibrary:",  v53,  v47);

    id v21 = v46;
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track containerQueryWithContainer:]( &OBJC_CLASS___ML3Track,  "containerQueryWithContainer:",  v48));
    v75[0] = _NSConcreteStackBlock;
    v75[1] = 3221225472LL;
    v75[2] = sub_1000FDCF8;
    v75[3] = &unk_1001A6458;
    id v76 = v44;
    id v50 = v44;
    [v49 enumeratePersistentIDsUsingBlock:v75];
    [v10 setObject:v50 forKey:@"items"];

    id v19 = v45;
    uint64_t v24 = v70;
    goto LABEL_30;
  }

  *a5 = 1;
LABEL_31:
  objc_autoreleasePoolPop(v9);
}

void sub_1000FDAFC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000FDB84(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000FDC0C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v8 = 138543618;
      uint64_t v9 = v7;
      __int16 v10 = 2114;
      id v11 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "%{public}@ - Importing cloud-ids failed with error: %{public}@",  (uint8_t *)&v8,  0x16u);
    }
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000FDCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v5 = @"persistent-id";
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
  id v6 = v3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v6,  &v5,  1LL));
  [v2 addObject:v4];
}

void sub_1000FE398( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000FE478( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000FE558( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000FE638( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000FE6F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000FE8B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id sub_1000FE9E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = v2;

  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) finalState]);
  id v6 = [v5 copy];
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(void **)(v7 + 24);
  *(void *)(v7 + 24) = v6;

  return [*(id *)(*(void *)(a1 + 32) + 24) save];
}

uint64_t sub_1000FEA4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1000FEA5C(uint64_t a1)
{
}

void sub_1000FEA64(void *a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 _unsafeBackend]);

  uint64_t v4 = *(void *)(a1[5] + 8LL);
  id obj = *(id *)(v4 + 40);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 allStoreAccountsWithError:&obj]);
  objc_storeStrong((id *)(v4 + 40), obj);
  if (!*(void *)(*(void *)(a1[5] + 8LL) + 40LL))
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 24) activeConfiguration]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[ICDAccountManagerState stateForAccounts:baseConfiguration:]( &OBJC_CLASS___ICDAccountManagerState,  "stateForAccounts:baseConfiguration:",  v5,  v6));

    uint64_t v8 = a1[4];
    if (*(void *)(v8 + 40) == 2LL) {
      uint64_t v9 = 3LL;
    }
    else {
      uint64_t v9 = 1LL;
    }
    uint64_t v10 = objc_claimAutoreleasedReturnValue( +[ICDAccountManagerStateChange stateChangeFromState:toState:computation:]( &OBJC_CLASS___ICDAccountManagerStateChange,  "stateChangeFromState:toState:computation:",  *(void *)(v8 + 24),  v7,  v9));
    uint64_t v11 = *(void *)(a1[6] + 8LL);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;
  }
}

uint64_t sub_1000FEB80(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 40LL);
  return result;
}

void sub_1000FEB94(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 32) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000FEBCC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 24) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000FEC04(uint64_t a1)
{
  id v5 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) activeConfiguration]);
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1000FEC58(uint64_t a1)
{
  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 24) supportedConfigurations]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v6 allObjects]);
  id v3 = [v2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1000FF01C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_1000FF738(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPHomeMonitor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB858 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPHomeMonitorClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDMediaUserStateCenterServerNotificationsManager.m",  21,  @"Unable to find class %s",  "MPHomeMonitor");

    __break(1u);
  }

void *sub_1000FF7FC()
{
  uint64_t v4 = 0LL;
  if (!qword_1001DB860)
  {
    __int128 v5 = off_1001A6620;
    uint64_t v6 = 0LL;
    qword_1001DB860 = _sl_dlopen(&v5, &v4);
  }

  id v0 = (void *)qword_1001DB860;
  if (!qword_1001DB860)
  {
    id v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v0,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICDMediaUserStateCenterServerNotificationsManager.m",  20,  @"%s",  v4);

    __break(1u);
    goto LABEL_7;
  }

  id v1 = v4;
  if (v4) {
LABEL_7:
  }
    free(v1);
  return v0;
}

id sub_1000FF900(uint64_t a1, void *a2)
{
  return _[a2 _handleCloudAuthenticationDidChangeNotification];
}

id sub_1000FF908(uint64_t a1, void *a2)
{
  return _[a2 _handleMusicSettingsChangedNotification];
}

void sub_10010166C(_Unwind_Exception *a1)
{
}

void sub_100102144(_Unwind_Exception *a1)
{
}

void sub_100102824(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 int64ForColumnIndex:0];
  id v5 = [v3 int64ForColumnIndex:1];
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:2]);

  if (v4)
  {
    [*(id *)(a1 + 32) removeObject:v6];
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:v6]);
    uint64_t v8 = v7;
    if (v7)
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 objectAtIndexedSubscript:0]);
      unsigned int v10 = [v9 intValue];

      if (v5 == (id)(int)v10)
      {
        uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          int v14 = 138412802;
          uint64_t v15 = v6;
          __int16 v16 = 2048;
          id v17 = v4;
          __int16 v18 = 2048;
          id v19 = v5;
          _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Container with PlaylistGlobalId: %@, persistentID: %lld, liked_state: %lld is imported and has the correct liked state",  (uint8_t *)&v14,  0x20u);
        }

        goto LABEL_11;
      }

      [*(id *)(a1 + 48) addObject:v8];
      uint64_t v13 = *(void **)(a1 + 56);
      uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v4));
      [v13 addObject:v12];
    }

    else
    {
      uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v14 = 138543362;
        uint64_t v15 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Could not find content taste for playlistGlobalID=%{public}@",  (uint8_t *)&v14,  0xCu);
      }
    }

LABEL_11:
  }
}

void sub_100102A28(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v23 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Error %{public}@ adding global playlists",  buf,  0xCu);
    }

    uint64_t v8 = *(void *)(a1 + 72);
    if (v8)
    {
      uint64_t v9 = *(void (**)(void))(v8 + 16);
LABEL_11:
      v9();
    }
  }

  else if ([*(id *)(a1 + 32) isCancelled])
  {
    unsigned int v10 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void **)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543362;
      id v23 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%{public}@ is cancelled", buf, 0xCu);
    }

    uint64_t v12 = *(void *)(a1 + 72);
    if (v12)
    {
      uint64_t v9 = *(void (**)(void))(v12 + 16);
      goto LABEL_11;
    }
  }

  else
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    void v18[2] = sub_100102CC0;
    v18[3] = &unk_1001A6928;
    id v19 = *(id *)(a1 + 40);
    id v20 = *(id *)(a1 + 48);
    id v21 = *(id *)(a1 + 56);
    [v5 enumerateKeysAndObjectsUsingBlock:v18];
    uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = [*(id *)(a1 + 64) count];
      +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate");
      double v16 = v15 - *(double *)(a1 + 80);
      *(_DWORD *)__int128 buf = 134218240;
      id v23 = v14;
      __int16 v24 = 2048;
      double v25 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Finished loading content taste for %lu playlists in %3f seconds",  buf,  0x16u);
    }

    uint64_t v17 = *(void *)(a1 + 72);
    if (v17) {
      (*(void (**)(uint64_t, void, void, void))(v17 + 16))( v17,  *(void *)(a1 + 48),  *(void *)(a1 + 56),  0LL);
    }
  }
}

void sub_100102CC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 longLongValue];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v5]);
    if (v8)
    {
      uint64_t v9 = (os_log_s *)v8;
      [*(id *)(a1 + 40) addObject:v8];
      unsigned int v10 = *(void **)(a1 + 48);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v7));
      [v10 addObject:v11];
    }

    else
    {
      uint64_t v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 138543362;
        id v14 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Could not find content taste for playlistGlobalID=%{public}@",  (uint8_t *)&v13,  0xCu);
      }

      uint64_t v9 = 0LL;
    }
  }

  else
  {
    uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      int v13 = 138543362;
      id v14 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "global playlist %{public}@ was not imported",  (uint8_t *)&v13,  0xCu);
    }
  }
}

uint64_t sub_100102E4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100102E5C(uint64_t a1)
{
}

void sub_100102E64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 int64ForColumnIndex:0];
  id v5 = [v3 int64ForColumnIndex:1];
  id v6 = [v3 int64ForColumnIndex:2];
  id v7 = [v3 int64ForColumnIndex:3];
  uint64_t v8 = (uint64_t)[v3 int64ForColumnIndex:4];
  id v9 = [v3 int64ForColumnIndex:5];

  if (v4)
  {
    if (v9)
    {
      else {
        id v10 = v7;
      }
      uint64_t v11 = *(void **)(a1 + 40);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v10));
      [v11 removeObject:v12];

      if (v8 < 1)
      {
        id v19 = *(void **)(a1 + 48);
        id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v10));
        os_log_t v13 = (os_log_t)objc_claimAutoreleasedReturnValue([v19 objectForKey:v20]);

        if (v13)
        {
          id v21 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s objectAtIndexedSubscript:](v13, "objectAtIndexedSubscript:", 0LL));
          unsigned int v22 = [v21 intValue];

          if (v5 == (id)(int)v22)
          {
            id v23 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
            if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v24 = *(void *)(a1 + 32);
              int v28 = 134219010;
              id v29 = v6;
              __int16 v30 = 2048;
              id v31 = v7;
              __int16 v32 = 2048;
              id v33 = v4;
              __int16 v34 = 1024;
              *(_DWORD *)int v35 = (_DWORD)v5;
              *(_WORD *)&void v35[4] = 2112;
              *(void *)&v35[6] = v24;
              _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld, liked_state: %d for prop erty: %@ is imported and has the correct liked state",  (uint8_t *)&v28,  0x30u);
            }
          }

          else
          {
            [*(id *)(a1 + 56) addObject:v13];
            unsigned __int8 v26 = *(void **)(a1 + 64);
            int v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v4));
            [v26 addObject:v27];
          }
        }

        else
        {
          double v25 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            int v28 = 134217984;
            id v29 = v10;
            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Could not find content taste for media item with storeID=%lld",  (uint8_t *)&v28,  0xCu);
          }

          os_log_t v13 = 0LL;
        }
      }

      else
      {
        os_log_t v13 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = *(void *)(a1 + 32);
          int v28 = 134219010;
          id v29 = v6;
          __int16 v30 = 2048;
          id v31 = v7;
          __int16 v32 = 2048;
          id v33 = v4;
          __int16 v34 = 2112;
          *(void *)int v35 = v14;
          *(_WORD *)&v35[8] = 2048;
          *(void *)&v35[10] = v8;
          double v15 = "Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ has a st"
                "oreSagaID: %lld and will not be updated";
          double v16 = v13;
          uint32_t v17 = 52;
LABEL_13:
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v28, v17);
        }
      }
    }

    else
    {
      os_log_t v13 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v18 = *(void *)(a1 + 32);
        int v28 = 134218754;
        id v29 = v6;
        __int16 v30 = 2048;
        id v31 = v7;
        __int16 v32 = 2048;
        id v33 = v4;
        __int16 v34 = 2112;
        *(void *)int v35 = v18;
        double v15 = "Track with storeItemID: %lld, subscriptionStoreItemID: %lld, persistenID: %lld for property: %@ will be im"
              "ported to include subscription data source";
        double v16 = v13;
        uint32_t v17 = 42;
        goto LABEL_13;
      }
    }
  }

  else
  {
    os_log_t v13 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v28 = 134217984;
      id v29 = v6;
      double v15 = "Track with storeItemID: %lld will be imported";
      double v16 = v13;
      uint32_t v17 = 12;
      goto LABEL_13;
    }
  }
}

void sub_100103274(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 int64ForColumnIndex:0];
  id v5 = [v3 int64ForColumnIndex:1];
  id v6 = [v3 int64ForColumnIndex:2];
  id v7 = [v3 int64ForColumnIndex:3];
  uint64_t v8 = (uint64_t)[v3 int64ForColumnIndex:4];
  id v9 = [v3 int64ForColumnIndex:5];

  if (v7)
  {
    if (v9)
    {
      id v10 = *(void **)(a1 + 32);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v6));
      [v10 removeObject:v11];

      if (v8 < 1)
      {
        double v16 = *(void **)(a1 + 40);
        uint32_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v6));
        os_log_t v12 = (os_log_t)objc_claimAutoreleasedReturnValue([v16 objectForKey:v17]);

        if (v12)
        {
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s objectAtIndexedSubscript:](v12, "objectAtIndexedSubscript:", 0LL));
          unsigned int v19 = [v18 intValue];

          if (v5 == (id)(int)v19)
          {
            id v20 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
            if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
            {
              int v23 = 134218496;
              id v24 = v6;
              __int16 v25 = 2048;
              id v26 = v4;
              __int16 v27 = 2048;
              uint64_t v28 = (uint64_t)v5;
              _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Album with storeItemId: %lld, albumPid: %lld, liked_state: %lld is imported and has the correct liked state",  (uint8_t *)&v23,  0x20u);
            }
          }

          else
          {
            [*(id *)(a1 + 48) addObject:v12];
            id v21 = *(void **)(a1 + 56);
            unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v4));
            [v21 addObject:v22];
          }
        }
      }

      else
      {
        os_log_t v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          int v23 = 134218496;
          id v24 = v6;
          __int16 v25 = 2048;
          id v26 = v4;
          __int16 v27 = 2048;
          uint64_t v28 = v8;
          os_log_t v13 = "Album with storeItemId: %lld, albumPid: %lld, has storeSagaID: %lld and will not be updated";
          uint64_t v14 = v12;
          uint32_t v15 = 32;
LABEL_10:
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v23, v15);
        }
      }
    }

    else
    {
      os_log_t v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v23 = 134218240;
        id v24 = v6;
        __int16 v25 = 2048;
        id v26 = v4;
        os_log_t v13 = "Album with albumStoreID: %lld, persistenID: %lld will be imported to include subscription data source";
        uint64_t v14 = v12;
        uint32_t v15 = 22;
        goto LABEL_10;
      }
    }
  }

  else
  {
    os_log_t v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      int v23 = 134217984;
      id v24 = v6;
      os_log_t v13 = "Album with storeItemID: %lld will be imported";
      uint64_t v14 = v12;
      uint32_t v15 = 12;
      goto LABEL_10;
    }
  }
}

void sub_1001035B4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [*(id *)(a1 + 32) count];
      *(_DWORD *)__int128 buf = 134218242;
      id v81 = v8;
      __int16 v82 = 2112;
      double v83 = *(double *)&v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Error importing %lu tracks to the library. %@",  buf,  0x16u);
    }

    uint64_t v9 = *(void *)(a1 + 96);
    if (v9)
    {
      id v10 = *(void (**)(void))(v9 + 16);
LABEL_11:
      v10();
      goto LABEL_64;
    }

    goto LABEL_64;
  }

  unsigned __int8 v11 = [*(id *)(a1 + 72) isCancelled];
  os_log_t v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
  if ((v11 & 1) == 0)
  {
    id v58 = 0LL;
    if (v13)
    {
      id v16 = [v5 count];
      id v17 = [*(id *)(a1 + 32) count];
      *(_DWORD *)__int128 buf = 134218240;
      id v81 = v16;
      __int16 v82 = 2048;
      double v83 = *(double *)&v17;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Imported %lu mediaItems for %lu storeAdamIds",  buf,  0x16u);
    }

    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    __int128 v78 = 0u;
    __int128 v79 = 0u;
    id v59 = v5;
    id v19 = v5;
    id v20 = [v19 countByEnumeratingWithState:&v76 objects:v87 count:16];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = *(void *)v77;
      do
      {
        for (unint64_t i = 0LL; i != v21; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v77 != v22) {
            objc_enumerationMutation(v19);
          }
          id v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  objc_msgSend(*(id *)(*((void *)&v76 + 1) + 8 * (void)i), "persistentID", v58)));
          [v18 addObject:v24];
        }

        id v21 = [v19 countByEnumeratingWithState:&v76 objects:v87 count:16];
      }

      while (v21);
    }

    id v61 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
    __int128 v72 = 0u;
    __int128 v73 = 0u;
    __int128 v74 = 0u;
    __int128 v75 = 0u;
    id v25 = v18;
    id v71 = [v25 countByEnumeratingWithState:&v72 objects:v86 count:16];
    if (!v71)
    {
LABEL_55:

      id v6 = v58;
      if ([*(id *)(a1 + 32) count])
      {
        if ([*(id *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) count]) {
          [*(id *)(a1 + 32) addObjectsFromArray:*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40)];
        }
        uint64_t v50 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "componentsJoinedByString:", @"$", v58));
        uint64_t v51 = *(void *)(*(void *)(a1 + 112) + 8LL);
        unsigned int v52 = *(void **)(v51 + 40);
        *(void *)(v51 + 40) = v50;
      }

      uint64_t v53 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
      {
        id v54 = [*(id *)(a1 + 32) count];
        +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate");
        double v56 = v55 - *(double *)(a1 + 120);
        *(_DWORD *)__int128 buf = 134218240;
        id v81 = v54;
        __int16 v82 = 2048;
        double v83 = v56;
        _os_log_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_DEFAULT,  "Finished loading content taste for %lu items/albums in %3f seconds",  buf,  0x16u);
      }

      uint64_t v57 = *(void *)(a1 + 96);
      id v5 = v59;
      if (v57) {
        (*(void (**)(uint64_t, void, void, void, void, void, void))(v57 + 16))( v57,  *(void *)(a1 + 40),  *(void *)(a1 + 48),  *(void *)(a1 + 56),  *(void *)(a1 + 64),  *(void *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 40LL),  0LL);
      }

      goto LABEL_64;
    }

    uint64_t v26 = *(void *)v73;
    uint64_t v70 = ML3TrackPropertyStoreItemID;
    uint64_t v68 = ML3TrackPropertySubscriptionStoreItemID;
    uint64_t v69 = ML3TrackPropertyStoreSagaID;
    uint64_t v66 = ML3TrackPropertyAlbumPersistentID;
    uint64_t v64 = ML3AlbumPropertyStoreAlbumID;
    uint64_t v63 = ML3AlbumPropertyStoreCloudID;
    uint64_t v62 = ML3TrackPropertyStorePlaylistID;
    uint64_t v67 = *(void *)v73;
    id v65 = v25;
LABEL_23:
    uint64_t v27 = 0LL;
    while (1)
    {
      if (*(void *)v73 != v26) {
        objc_enumerationMutation(v25);
      }
      uint64_t v28 = *(void **)(*((void *)&v72 + 1) + 8 * v27);
      id v29 =  +[ML3Track newWithPersistentID:inLibrary:]( ML3Track,  "newWithPersistentID:inLibrary:",  objc_msgSend(v28, "longLongValue", v58),  *(void *)(a1 + 80));
      __int16 v30 = (void *)objc_claimAutoreleasedReturnValue([v29 valueForProperty:v70]);
      id v31 = v30;
      if (!v30 || ![v30 longLongValue])
      {
        uint64_t v32 = objc_claimAutoreleasedReturnValue([v29 valueForProperty:v68]);

        id v31 = (void *)v32;
      }

      uint64_t v33 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 88) objectForKey:v31]);
      if (v33)
      {
        __int16 v34 = (void *)v33;
        int v35 = (void *)objc_claimAutoreleasedReturnValue([v29 valueForProperty:v69]);
        if ((uint64_t)[v35 longLongValue] < 1)
        {
          [*(id *)(a1 + 40) addObject:v34];
          [*(id *)(a1 + 48) addObject:v28];
        }

        else
        {
          __int16 v36 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            id v37 = [v28 longLongValue];
            id v38 = [v31 longLongValue];
            id v39 = [v35 longLongValue];
            *(_DWORD *)__int128 buf = 134218496;
            id v81 = v37;
            __int16 v82 = 2048;
            double v83 = *(double *)&v38;
            uint64_t v26 = v67;
            __int16 v84 = 2048;
            id v85 = v39;
            _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "Not updating liked_state for track with persistentID: %lld, storeAdamID: %lld as it has a valid storeSagaID: %lld",  buf,  0x20u);
          }
        }

        [*(id *)(a1 + 32) removeObject:v31];
        goto LABEL_46;
      }

      int v35 = (void *)objc_claimAutoreleasedReturnValue([v29 valueForProperty:v66]);
      id v40 = [v35 longLongValue];
      if (!v40)
      {
        __int16 v34 = 0LL;
        goto LABEL_46;
      }

      id v41 = v40;
      id v42 = +[ML3Album newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Album,  "newWithPersistentID:inLibrary:",  v40,  *(void *)(a1 + 80));
      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v42 valueForProperty:v64]);
      __int16 v44 = (void *)objc_claimAutoreleasedReturnValue([v42 valueForProperty:v63]);
      if (!v43 || ![v43 longLongValue])
      {
        uint64_t v45 = objc_claimAutoreleasedReturnValue([v29 valueForProperty:v62]);

        uint64_t v43 = (void *)v45;
      }

      if ([v44 length])
      {
        id v46 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          id v47 = [v43 longLongValue];
          *(_DWORD *)__int128 buf = 134218242;
          id v81 = v47;
          __int16 v82 = 2114;
          double v83 = *(double *)&v44;
          _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "Skipping content taste for album with storeID=%lld, cloudUniversalLibraryID=%{public}@",  buf,  0x16u);
        }

        __int16 v34 = 0LL;
      }

      else
      {
        if (![v43 longLongValue])
        {
          __int16 v34 = 0LL;
          goto LABEL_43;
        }

        __int16 v34 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 88) objectForKey:v43]);
        [*(id *)(a1 + 56) addObject:v34];
        uint64_t v60 = *(void **)(a1 + 64);
        id v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v41));
        [v60 addObject:v48];

        [v61 addObject:v43];
      }

      [*(id *)(a1 + 32) removeObject:v43];
LABEL_43:

      id v25 = v65;
      uint64_t v26 = v67;
LABEL_46:

      if (v71 == (id)++v27)
      {
        id v49 = [v25 countByEnumeratingWithState:&v72 objects:v86 count:16];
        id v71 = v49;
        if (!v49) {
          goto LABEL_55;
        }
        goto LABEL_23;
      }
    }
  }

  if (v13)
  {
    uint64_t v14 = *(void **)(a1 + 72);
    *(_DWORD *)__int128 buf = 138543362;
    id v81 = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%{public}@ is cancelled", buf, 0xCu);
  }

  uint64_t v15 = *(void *)(a1 + 96);
  if (v15)
  {
    id v10 = *(void (**)(void))(v15 + 16);
    goto LABEL_11;
  }

LABEL_64:
}

void sub_100103E28(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 int64ForColumnIndex:0];
  unsigned int v5 = [v3 intForColumnIndex:1];
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:2]);
  id v7 = [v3 int64ForColumnIndex:3];

  if (v4)
  {
    id v8 = *(void **)(a1 + 32);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v7));
    [v8 removeObject:v9];

    if ([v6 length])
    {
      id v10 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        int v21 = 134218242;
        id v22 = v7;
        __int16 v23 = 2114;
        *(void *)id v24 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "Skipping content taste checks for album artist with storeID=%lld, cloudUniversalLibraryID=%{public}@",  (uint8_t *)&v21,  0x16u);
      }

      goto LABEL_13;
    }

    unsigned __int8 v11 = *(void **)(a1 + 40);
    os_log_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v7));
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue([v11 objectForKey:v12]);

    if (v10)
    {
      BOOL v13 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s objectAtIndexedSubscript:](v10, "objectAtIndexedSubscript:", 0LL));
      unsigned int v14 = [v13 intValue];

      if (v5 == v14)
      {
LABEL_13:

        goto LABEL_14;
      }

      [*(id *)(a1 + 48) addObject:v10];
      uint64_t v15 = *(void **)(a1 + 56);
      id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v4));
      [v15 addObject:v16];

      id v17 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        int v21 = 134218496;
        id v22 = v4;
        __int16 v23 = 1024;
        *(_DWORD *)id v24 = v5;
        *(_WORD *)&void v24[4] = 1024;
        *(_DWORD *)&void v24[6] = v14;
        uint64_t v18 = "Will update content taste for album artist with persistentID=%lld from %d to %d";
        id v19 = v17;
        uint32_t v20 = 24;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v18, (uint8_t *)&v21, v20);
      }
    }

    else
    {
      id v17 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        int v21 = 134217984;
        id v22 = v7;
        uint64_t v18 = "Could not find content taste for album artist with storeID=%lld";
        id v19 = v17;
        uint32_t v20 = 12;
        goto LABEL_11;
      }
    }

    goto LABEL_13;
  }

void sub_1001040E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v8 = 0LL;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2050000000LL;
  id v4 = (void *)qword_1001DB880;
  uint64_t v11 = qword_1001DB880;
  if (!qword_1001DB880)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001048B0;
    v7[3] = &unk_1001A6978;
    void v7[4] = &v8;
    sub_1001048B0((uint64_t)v7);
    id v4 = (void *)v9[3];
  }

  unsigned int v5 = v4;
  _Block_object_dispose(&v8, 8);
  id v6 = objc_msgSend( [v5 alloc],  "initWithStoreItemID:additionalTrackMetadata:",  objc_msgSend(v3, "longLongValue"),  0);
  [*(id *)(a1 + 32) addObject:v6];
}

void sub_1001041C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001041E0(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPStoreItemLibraryImport");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB888 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPStoreItemLibraryImportClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICCloudContentTasteUpdateOperation.m",  42,  @"Unable to find class %s",  "MPStoreItemLibraryImport");

    __break(1u);
  }

void sub_1001042A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [*(id *)(a1 + 32) count];
      *(_DWORD *)__int128 buf = 134218242;
      id v30 = v8;
      __int16 v31 = 2114;
      double v32 = *(double *)&v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Could not import %ld album artists, error=%{public}@",  buf,  0x16u);
    }

    uint64_t v9 = *(void *)(a1 + 96);
    if (v9)
    {
      uint64_t v10 = *(void (**)(void))(v9 + 16);
LABEL_11:
      v10();
    }
  }

  else if ([*(id *)(a1 + 40) isCancelled])
  {
    uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      os_log_t v12 = *(void **)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543362;
      id v30 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%{public}@ is cancelled", buf, 0xCu);
    }

    uint64_t v13 = *(void *)(a1 + 96);
    if (v13)
    {
      uint64_t v10 = *(void (**)(void))(v13 + 16);
      goto LABEL_11;
    }
  }

  else
  {
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    v23[2] = sub_1001045C0;
    v23[3] = &unk_1001A6888;
    id v24 = *(id *)(a1 + 48);
    id v25 = *(id *)(a1 + 56);
    id v26 = *(id *)(a1 + 64);
    id v27 = *(id *)(a1 + 72);
    id v28 = *(id *)(a1 + 80);
    [v5 enumerateObjectsUsingBlock:v23];
    unsigned int v14 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      id v15 = [*(id *)(a1 + 80) count];
      +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate");
      double v17 = v16 - *(double *)(a1 + 112);
      *(_DWORD *)__int128 buf = 134218240;
      id v30 = v15;
      __int16 v31 = 2048;
      double v32 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Finished loading content taste for %lu album artists in %3f seconds",  buf,  0x16u);
    }

    [*(id *)(a1 + 80) addObjectsFromArray:*(void *)(a1 + 88)];
    if ([*(id *)(a1 + 80) count])
    {
      uint64_t v18 = MSVArchivedDataWithRootObject(*(void *)(a1 + 80));
      uint64_t v19 = objc_claimAutoreleasedReturnValue(v18);
      uint64_t v20 = *(void *)(*(void *)(a1 + 104) + 8LL);
      int v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;
    }

    uint64_t v22 = *(void *)(a1 + 96);
    if (v22) {
      (*(void (**)(uint64_t, void, void, void, void))(v22 + 16))( v22,  *(void *)(a1 + 64),  *(void *)(a1 + 72),  *(void *)(*(void *)(*(void *)(a1 + 104) + 8LL) + 40LL),  0LL);
    }
  }
}

void sub_1001045C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[ML3AlbumArtist newWithPersistentID:inLibrary:]( ML3AlbumArtist,  "newWithPersistentID:inLibrary:",  [v3 longLongValue],  *(void *)(a1 + 32));
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:ML3AlbumArtistPropertyCloudUniversalLibraryID]);
  if ([v5 length])
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 134218242;
      id v10 = [v3 longLongValue];
      __int16 v11 = 2114;
      os_log_t v12 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Skipping content taste checks for album artist with persistentID=%lld, cloudUniversalLibraryID=%{public}@",  (uint8_t *)&v9,  0x16u);
    }
  }

  else
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:ML3AlbumArtistPropertyStoreID]);
    if (v6)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKey:v6]);
      if (v7)
      {
        [*(id *)(a1 + 48) addObject:v7];
        [*(id *)(a1 + 56) addObject:v3];
        [*(id *)(a1 + 64) removeObject:v6];
      }

      else
      {
        id v8 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          int v9 = 134217984;
          id v10 = -[os_log_s longLongValue](v6, "longLongValue");
          _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Could not find content taste for album artist with storeID=%lld",  (uint8_t *)&v9,  0xCu);
        }
      }
    }
  }
}

void sub_1001047B0()
{
  id v3 = 0LL;
  if (!qword_1001DB878)
  {
    __int128 v4 = off_1001A6998;
    uint64_t v5 = 0LL;
    qword_1001DB878 = _sl_dlopen(&v4, &v3);
  }

  if (!qword_1001DB878)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "void *MediaPlayerLibrary(void)"));
    objc_msgSend( v1,  "handleFailureInFunction:file:lineNumber:description:",  v2,  @"ICCloudContentTasteUpdateOperation.m",  39,  @"%s",  v3);

    __break(1u);
    goto LABEL_7;
  }

  id v0 = v3;
  if (v3) {
LABEL_7:
  }
    free(v0);
}

void sub_1001048B0(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPStoreItemLibraryImportElement");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB880 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPStoreItemLibraryImportElementClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICCloudContentTasteUpdateOperation.m",  41,  @"Unable to find class %s",  "MPStoreItemLibraryImportElement");

    __break(1u);
  }

void sub_100104974(id a1, ML3DatabaseConnection *a2)
{
  if ((-[ML3DatabaseConnection executeUpdate:withParameters:error:]( a2,  "executeUpdate:withParameters:error:",  @"DELETE FROM _MLDatabaseProperties WHERE key=?",  &off_1001B4C20,  0LL) & 1) == 0)
  {
    id v2 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "removing artists mapped to different entities failed",  v3,  2u);
    }
  }

BOOL sub_100104A04(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 globalPlaylistID]);
  if ([v4 length])
  {
    if (([*(id *)(a1 + 32) containsObject:v4] & 1) == 0)
    {
      [*(id *)(a1 + 32) addObject:v4];
LABEL_9:
      BOOL v7 = [v3 contentTasteType] != 0;
      goto LABEL_10;
    }
  }

  else
  {
    id v5 = [v3 storeID];
    if (v5)
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v5));
      if (([*(id *)(a1 + 40) containsObject:v6] & 1) == 0)
      {
        [*(id *)(a1 + 40) addObject:v6];

        goto LABEL_9;
      }
    }
  }

  BOOL v7 = 0LL;
LABEL_10:

  return v7;
}

void sub_100104AD0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  [v3 setIdentity:v2];
  id v4 = [[ICStoreURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v3 setAuthenticationProvider:v4];
}

void sub_100104B30(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v5 urlForBagKey:ICURLBagKeyMediaContentTastePostURL]);
    if (!v7)
    {
      double v17 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        uint64_t v18 = *(void *)(a1 + 32);
        *(_DWORD *)__int128 buf = 138543362;
        *(void *)&uint8_t buf[4] = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "%{public}@ Error getting sync url",  buf,  0xCu);
      }

      uint64_t v19 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  0LL,  0LL));
      uint64_t v20 = *(void *)(a1 + 32);
      int v21 = *(void **)(v20 + 40);
      *(void *)(v20 + 40) = v19;

      dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
      goto LABEL_41;
    }

    uint64_t v81 = 0LL;
    __int16 v82 = &v81;
    uint64_t v83 = 0x2020000000LL;
    char v84 = 0;
    *(void *)__int128 buf = 0LL;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000LL;
    id v93 = sub_100102E4C;
    id v94 = sub_100102E5C;
    id v95 = 0LL;
    uint64_t v75 = 0LL;
    __int128 v76 = &v75;
    uint64_t v77 = 0x3032000000LL;
    __int128 v78 = sub_100102E4C;
    __int128 v79 = sub_100102E5C;
    id v80 = 0LL;
    uint64_t v71 = 0LL;
    __int128 v72 = &v71;
    uint64_t v73 = 0x2020000000LL;
    uint64_t v74 = 0LL;
    id v8 = -[NSMutableURLRequest initWithURL:](objc_alloc(&OBJC_CLASS___NSMutableURLRequest), "initWithURL:", v7);
    uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([v5 numberForBagKey:ICURLBagKeyMediaContentTasteRefreshIntervalInMins]);
    [v57 doubleValue];
    double v10 = v9 * 60.0;
    if (v10 >= 2.22044605e-16) {
      double v11 = v10;
    }
    else {
      double v11 = 86400.0;
    }
    os_log_t v12 = *(void **)(a1 + 32);
    if (v12[1])
    {
      uint64_t v91 = v12[1];
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v91, 1LL));
      os_log_t v12 = *(void **)(a1 + 32);
    }

    else
    {
      uint64_t v13 = &__NSArray0__struct;
    }

    id v69 = 0LL;
    id v70 = 0LL;
    double v56 = v13;
    objc_msgSend(v12, "_getPBData:includedContentTasteItemUpdates:fromContentTasteUpdateItems:", &v70, &v69);
    id v22 = v70;
    id v58 = v69;
    if ([v22 length])
    {
      *((_BYTE *)v82 + 24) = 1;
      __int16 v23 = @"If-Match";
      id v24 = @"POST";
    }

    else
    {
      __int16 v23 = @"If-None-Match";
      id v24 = @"GET";
    }

    -[NSMutableURLRequest setHTTPMethod:](v8, "setHTTPMethod:", v24);
    -[NSMutableURLRequest setCachePolicy:](v8, "setCachePolicy:", 1LL);
    id v25 = (void *)objc_claimAutoreleasedReturnValue( +[ICCloudContentTasteResponseCacheManager sharedCloudContentTasteResponseCacheManager]( &OBJC_CLASS___ICCloudContentTasteResponseCacheManager,  "sharedCloudContentTasteResponseCacheManager"));
    id v26 = (void *)objc_claimAutoreleasedReturnValue( [v25 getCachedContentTasteResponseForConnectionConfiguration:*(void *)(*(void *)(a1 + 32) + 16)]);

    id v59 = (void *)objc_claimAutoreleasedReturnValue([v26 userInfo]);
    objc_storeStrong((id *)(*(void *)&buf[8] + 40LL), v26);
    if (*(void *)(*(void *)&buf[8] + 40LL) && *(_BYTE *)(*(void *)(a1 + 32) + 24LL))
    {
      id v27 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v28 = *(void *)(a1 + 32);
        *(_DWORD *)id v85 = 138543362;
        uint64_t v86 = v28;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "%{public}@ invalidating cached response",  v85,  0xCu);
      }

      id v29 = (void *)objc_claimAutoreleasedReturnValue( [v59 objectForKey:@"_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate"]);
      if (v29)
      {
        uint64_t v30 = objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _prepareCachedResponseFromResponse:*(void *)(*(void *)&buf[8] + 40) byAddingResponseTimeIntervalKey:0 withResponseTimeInterval:v29]);
        __int16 v31 = *(void **)(*(void *)&buf[8] + 40LL);
        *(void *)(*(void *)&buf[8] + 4AnalyticsSendEvent(@"com.apple.Music.iOS.VPPA.UnifiedReconsentDialogShown", 0LL) = v30;

        [*(id *)(a1 + 32) _setCachedContentTasteResponse:*(void *)(*(void *)&buf[8] + 40)];
      }
    }

    if (_os_feature_enabled_impl("MediaPlayer", "Favoriting")) {
      -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v8,  "setValue:forHTTPHeaderField:",  @"1.0",  @"Api-Version");
    }
    if ([v22 length])
    {
      *((_BYTE *)v82 + 24) = 1;
      -[NSMutableURLRequest setValue:forHTTPHeaderField:]( v8,  "setValue:forHTTPHeaderField:",  @"application/x-protobuf",  @"Content-Type");
      -[NSMutableURLRequest setHTTPBody:](v8, "setHTTPBody:", v22);
    }

    else if (v59)
    {
      uint64_t v32 = objc_claimAutoreleasedReturnValue( [v59 objectForKey:@"_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate"]);
      uint64_t v33 = (void *)v32;
      if (v32)
      {
        if (_NSIsNSNumber(v32))
        {
          [v33 doubleValue];
          double v35 = v34;
          +[NSDate timeIntervalSinceReferenceDate](&OBJC_CLASS___NSDate, "timeIntervalSinceReferenceDate");
          if (v36 - v35 < v11)
          {
            uint64_t v37 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)&buf[8] + 40) data]);
            id v38 = (void *)v76[5];
            v76[5] = v37;

            id v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v35));
            os_log_t loga = (os_log_t)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)&buf[8] + 40) response]);
            id v40 = (void *)objc_claimAutoreleasedReturnValue( +[ICCloudContentTasteUpdateResponse eTagValueFromContentTasteResponse:]( &OBJC_CLASS___ICCloudContentTasteUpdateResponse,  "eTagValueFromContentTasteResponse:",  loga));
            id v41 = [v40 longLongValue];
            v72[3] = (uint64_t)v41;

            os_log_t v42 = sub_1000DD920();
            log = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
            if (os_log_type_enabled(log, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v43 = *(void *)(a1 + 32);
              uint64_t v44 = v72[3];
              *(_DWORD *)id v85 = 138543874;
              uint64_t v86 = v43;
              __int16 v87 = 2114;
              id v88 = v39;
              __int16 v89 = 2048;
              uint64_t v90 = v44;
              _os_log_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEFAULT,  "%{public}@ preparing cached response with date %{public}@, revisionID %llu",  v85,  0x20u);
            }

            uint64_t v45 = v76[5];
            if (v45)
            {
              uint64_t v46 = objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _contentTasteUpdateResponseWithServerResponse:v45 expirationDate:v39 revisionID:v72[3] isCachedResponse:1]);
              uint64_t v47 = *(void *)(a1 + 32);
              id v48 = *(void **)(v47 + 56);
              *(void *)(v47 + 56) = v46;
            }

            dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
            goto LABEL_40;
          }
        }
      }
    }

    id v49 = (void *)objc_claimAutoreleasedReturnValue([v26 response]);
    uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue( +[ICCloudContentTasteUpdateResponse eTagValueFromContentTasteResponse:]( &OBJC_CLASS___ICCloudContentTasteUpdateResponse,  "eTagValueFromContentTasteResponse:",  v49));

    -[NSMutableURLRequest setValue:forHTTPHeaderField:](v8, "setValue:forHTTPHeaderField:", v50, v23);
    uint64_t v51 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v8,  *(void *)(a1 + 40));
    unsigned int v52 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    v60[0] = _NSConcreteStackBlock;
    v60[1] = 3221225472LL;
    v60[2] = sub_100105414;
    v60[3] = &unk_1001A6780;
    uint64_t v53 = *(void *)(a1 + 32);
    double v67 = v11;
    void v60[4] = v53;
    uint64_t v63 = &v71;
    uint64_t v64 = buf;
    id v65 = &v75;
    uint64_t v66 = &v81;
    id v61 = v58;
    uint64_t v68 = *(void *)(a1 + 56);
    id v62 = *(id *)(a1 + 48);
    [v52 enqueueDataRequest:v51 withCompletionHandler:v60];

    id v39 = 0LL;
LABEL_40:

    _Block_object_dispose(&v71, 8);
    _Block_object_dispose(&v75, 8);

    _Block_object_dispose(buf, 8);
    _Block_object_dispose(&v81, 8);
LABEL_41:

    goto LABEL_42;
  }

  unsigned int v14 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
  {
    uint64_t v15 = *(void *)(a1 + 32);
    double v16 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue([*(id *)(v15 + 16) userIdentity]);
    *(_DWORD *)__int128 buf = 138543874;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&_BYTE buf[12] = 2114;
    *(void *)&buf[14] = v6;
    *(_WORD *)&_BYTE buf[22] = 2114;
    id v93 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "%{public}@ Error %{public}@ getting bag for identity %{public}@",  buf,  0x20u);
  }

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 40LL), a3);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
LABEL_42:
}

void sub_1001053AC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, char a39)
{
}

void sub_100105414(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v63 = a3;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 40LL), a3);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v6 dateByAddingTimeInterval:*(double *)(a1 + 88)]);

  BOOL v7 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
  id v8 = [v7 statusCode];

  double v9 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    double v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 40);
    *(_DWORD *)__int128 buf = 138544130;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&_BYTE buf[12] = 2114;
    *(void *)&buf[14] = v5;
    *(_WORD *)&_BYTE buf[22] = 2114;
    unint64_t v151 = v11;
    LOWORD(v152) = 2048;
    *(void *)((char *)&v152 + 2) = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}@ finished with response=%{public}@, error=%{public}@, responseErrorCode %ld",  buf,  0x2Au);
  }

  if (*(void *)(*(void *)(a1 + 32) + 40LL))
  {
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
    goto LABEL_32;
  }

  if (v8 == (id)304)
  {
    os_log_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) response]);
  }

  else
  {
    uint64_t v13 = objc_claimAutoreleasedReturnValue([v5 bodyData]);
    uint64_t v14 = *(void *)(*(void *)(a1 + 72) + 8LL);
    uint64_t v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;

    os_log_t v12 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
  }

  double v16 = (void *)objc_claimAutoreleasedReturnValue( +[ICCloudContentTasteUpdateResponse eTagValueFromContentTasteResponse:]( &OBJC_CLASS___ICCloudContentTasteUpdateResponse,  "eTagValueFromContentTasteResponse:",  v12));
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v16 longLongValue];

  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL)
    && ![*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) length])
  {
    double v17 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _contentTasteUpdateResponseWithServerResponse:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) expirationDate:v64 revisionID:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) isCachedResponse:0]);
    uint64_t v18 = *(void **)(a1 + 32);
    uint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8LL);
    id obj = *(id *)(v19 + 40);
    uint64_t v144 = 0LL;
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v17 contentTasteItems]);
    [v18 _prepareContentTasteResponse:&obj withContentTasteItems:&v144 fromCachedContentTasteResponseItems:v20 includedContentTasteItems:*(void *)(a1 + 40)];
    objc_storeStrong((id *)(v19 + 40), obj);
  }

  [v64 timeIntervalSinceReferenceDate];
  id v62 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
  if (v8 == (id)304)
  {
    uint64_t v21 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL);
    if (v21)
    {
      id v22 = (NSCachedURLResponse *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _prepareCachedResponseFromResponse:v21 byAddingResponseTimeIntervalKey:1 withResponseTimeInterval:v62]);
LABEL_16:
      [*(id *)(a1 + 32) _setCachedContentTasteResponse:v22];

      goto LABEL_17;
    }
  }

  if (v5)
  {
    __int16 v23 = objc_alloc(&OBJC_CLASS___NSCachedURLResponse);
    id v24 = (void *)objc_claimAutoreleasedReturnValue([v5 urlResponse]);
    uint64_t v25 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL);
    unint64_t v153 = @"_MediaContentTasteUpdateResponseTimeIntervalSinceReferenceDate";
    int v154 = v62;
    id v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v154,  &v153,  1LL));
    id v22 = -[NSCachedURLResponse initWithResponse:data:userInfo:storagePolicy:]( v23,  "initWithResponse:data:userInfo:storagePolicy:",  v24,  v25,  v26,  0LL);

    goto LABEL_16;
  }

void sub_100105F70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
}

void sub_100106028(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) = objc_getClass("MPMediaLibrary");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL))
  {
    qword_1001DB870 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL);
  }

  else
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](&OBJC_CLASS___NSAssertionHandler, "currentHandler"));
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithUTF8String:]( &OBJC_CLASS___NSString,  "stringWithUTF8String:",  "Class getMPMediaLibraryClass(void)_block_invoke"));
    objc_msgSend( v2,  "handleFailureInFunction:file:lineNumber:description:",  v3,  @"ICCloudContentTasteUpdateOperation.m",  40,  @"Unable to find class %s",  "MPMediaLibrary");

    __break(1u);
  }

void sub_1001060EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_100106BF4;
  void v9[3] = &unk_1001A6668;
  __int128 v12 = *(_OWORD *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 80);
  id v10 = v3;
  double v11 = v4;
  id v8 = v3;
  [v4 _updateContentTasteForAlbumArtistItems:v5 musicLibrary:v6 mediaLibrary:v7 withCompletion:v9];
}

void sub_100106198(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  v10[2] = sub_100106A4C;
  v10[3] = &unk_1001A66B8;
  __int128 v8 = *(_OWORD *)(a1 + 80);
  __int128 v13 = *(_OWORD *)(a1 + 64);
  __int128 v14 = v8;
  uint64_t v15 = *(void *)(a1 + 96);
  id v11 = v3;
  __int128 v12 = v4;
  id v9 = v3;
  [v4 _updateContentTasteForMediaItems:v5 musicLibrary:v6 mediaLibrary:v7 withCompletion:v10];
}

void sub_100106248(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_100106928;
  void v9[3] = &unk_1001A6708;
  __int128 v12 = *(_OWORD *)(a1 + 64);
  id v10 = v3;
  id v11 = v4;
  id v8 = v3;
  [v4 _updateContentTasteForGlobalPlaylists:v5 musicLibrary:v6 mediaLibrary:v7 withCompletion:v9];
}

void sub_1001062EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    if ([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count])
    {
      uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
      v47[0] = ML3AlbumArtistPropertyLikedState;
      v47[1] = ML3AlbumArtistPropertyLikedStateChangedDate;
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v47, 2LL));
      unsigned __int8 v6 = +[ML3AlbumArtist setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3AlbumArtist,  "setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  v4,  v5,  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL),  *(void *)(a1 + 40),  v3);

      if ((v6 & 1) == 0)
      {
        uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        {
          uint64_t v8 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543362;
          uint64_t v40 = v8;
          _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not update content taste for album artists",  buf,  0xCu);
        }
      }
    }
  }

  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    if ([*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count])
    {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL);
      v46[0] = ML3ContainerPropertyLikedState;
      v46[1] = ML3ContainerPropertyLikedStateChangedDate;
      id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v46, 2LL));
      unsigned __int8 v11 = +[ML3Container setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3Container,  "setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  v9,  v10,  *(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL),  *(void *)(a1 + 40),  v3);

      if ((v11 & 1) == 0)
      {
        __int128 v12 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          uint64_t v13 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543362;
          uint64_t v40 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not update content taste for playlists",  buf,  0xCu);
        }
      }
    }
  }

  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    if ([*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) count])
    {
      uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 40LL);
      v45[0] = ML3TrackPropertyLikedState;
      v45[1] = ML3TrackPropertyLikedStateChangedDate;
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v45, 2LL));
      unsigned __int8 v16 = +[ML3Track setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3Track,  "setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  v14,  v15,  *(void *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL),  *(void *)(a1 + 40),  v3);

      if ((v16 & 1) == 0)
      {
        double v17 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          uint64_t v18 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543362;
          uint64_t v40 = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not update content taste for items",  buf,  0xCu);
        }
      }
    }
  }

  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    if ([*(id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40) count])
    {
      uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 104) + 8LL) + 40LL);
      v44[0] = ML3AlbumPropertyLikedState;
      v44[1] = ML3AlbumPropertyLikedStateChangedDate;
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v44, 2LL));
      unsigned __int8 v21 = +[ML3Album setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3Album,  "setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  v19,  v20,  *(void *)(*(void *)(*(void *)(a1 + 96) + 8LL) + 40LL),  *(void *)(a1 + 40),  v3);

      if ((v21 & 1) == 0)
      {
        id v22 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          uint64_t v23 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543362;
          uint64_t v40 = v23;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not update content taste for albums",  buf,  0xCu);
        }
      }
    }
  }

  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    uint64_t v24 = *(void *)(*(void *)(*(void *)(a1 + 112) + 8LL) + 40LL);
    if (v24)
    {
      v43[0] = @"NonMediaItemStoreAdamIds";
      v43[1] = v24;
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v43, 2LL));
      id v37 = 0LL;
      unsigned __int8 v26 = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"INSERT OR REPLACE INTO _MLDatabaseProperties (key, value) VALUES (?, ?)",  v25,  &v37);
      id v27 = v37;

      if ((v26 & 1) == 0)
      {
        uint64_t v28 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
        {
          uint64_t v29 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543618;
          uint64_t v40 = v29;
          __int16 v41 = 2114;
          id v42 = v27;
          _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not update non media item store adam IDs. error=%{public}@",  buf,  0x16u);
        }
      }
    }

    else
    {
      if (!*(void *)(*(void *)(*(void *)(a1 + 120) + 8LL) + 40LL)) {
        goto LABEL_40;
      }
      id v27 = 0LL;
    }

    uint64_t v30 = *(void *)(*(void *)(*(void *)(a1 + 120) + 8LL) + 40LL);
    if (v30)
    {
      v38[0] = @"ArtistsMatchingDifferentStoreAdamIds";
      v38[1] = v30;
      id v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v38, 2LL));
      id v36 = v27;
      unsigned __int8 v32 = objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"INSERT OR REPLACE INTO _MLDatabaseProperties (key, value) VALUES (?, ?)",  v31,  &v36);
      id v33 = v36;

      if ((v32 & 1) == 0)
      {
        double v34 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
        {
          uint64_t v35 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543618;
          uint64_t v40 = v35;
          __int16 v41 = 2114;
          id v42 = v33;
          _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_ERROR,  "%{public}@ Could not update artist store adam IDs. error=%{public}@",  buf,  0x16u);
        }
      }
    }

    else
    {
      id v33 = v27;
    }
  }

void sub_100106928(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  id v10 = a4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL), a3);
  [*(id *)(a1 + 32) finishWithError:v10];

  unsigned __int8 v11 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 40);
    int v13 = 138543362;
    uint64_t v14 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished processing content taste for playlists",  (uint8_t *)&v13,  0xCu);
  }
}

void sub_100106A4C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v21 = a2;
  id v20 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a6;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  id v17 = a7;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL), a3);
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL), a4);
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL), a5);
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 40LL), a6);
  [*(id *)(a1 + 32) finishWithError:v17];

  uint64_t v18 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v19 = *(void *)(a1 + 40);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v23 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished processing content taste for items/albums",  buf,  0xCu);
  }
}

void sub_100106BF4(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a2);
  id v13 = a5;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL), a3);
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 40LL), a4);
  [*(id *)(a1 + 32) finishWithError:v13];

  id v14 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = *(void *)(a1 + 40);
    int v16 = 138543362;
    uint64_t v17 = v15;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished processing content taste for album artists",  (uint8_t *)&v16,  0xCu);
  }
}

void sub_1001073E8(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v9 = a1[4];
      id v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v14 = 138543618;
      id v15 = v9;
      __int16 v16 = 2114;
      uint64_t v17 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ Finished request to edit collaboration error=%{public}@",  (uint8_t *)&v14,  0x16u);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = a1[4];
    int v14 = 138543362;
    id v15 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Finished request to edit collaboration",  (uint8_t *)&v14,  0xCu);
  }

  uint64_t v12 = (uint64_t)[v5 responseCode];
  if (v12 > 399)
  {
    if (v12 == 404 || v12 == 400)
    {
      uint64_t v13 = 3LL;
      goto LABEL_14;
    }

    goto LABEL_13;
  }

  uint64_t v13 = 1LL;
  if (v12 != 200 && v12 != 204) {
LABEL_13:
  }
    uint64_t v13 = 2LL;
LABEL_14:
  [a1[4] setStatus:v13];
  if ([v5 responseCode] == (id)500) {
    [a1[4] setStatus:3];
  }
  [a1[4] setError:v6];
  if (!v6)
  {
    *((_BYTE *)a1[4] + 114) = [v5 updateRequired];
    *(void *)((char *)a1[4] + 122) = [a1[5] longLongValue];
  }

  [a1[6] endTransaction];
  [a1[4] finish];
}

void sub_100107B0C(uint64_t a1, uint64_t a2, id *a3)
{
  id v14 = *a3;
  else {
    id v6 = a3[1];
  }
  unint64_t v7 = (unint64_t)v6;
  [a3[2] doubleValue];
  uint64_t v8 = objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:"));
  id v9 = (void *)objc_claimAutoreleasedReturnValue([(id)v8 earlierDate:*(void *)(a1 + 32)]);

  if (v9 == (void *)v8)
  {

    uint64_t v8 = 0LL;
  }

  if (v7 | v8)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithCapacity:",  2LL));
    id v11 = v10;
    if (v7) {
      [v10 setObject:v7 forKey:@"daap.incrementplaycount"];
    }
    if (v8) {
      [v11 setObject:v8 forKey:ML3ContainerPropertyDatePlayed];
    }
    [*(id *)(a1 + 40) addObject:v14];
    [*(id *)(a1 + 48) addObject:v11];
    uint64_t v12 = *(void **)(a1 + 56);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
    [v12 addObject:v13];
  }
}

void sub_100107C64(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = 134217984;
    id v13 = [v5 responseCode];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Bulk set containers properties response code: %lu",  (uint8_t *)&v12,  0xCu);
  }

  if (v6)
  {
    uint64_t v8 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v12 = 138543362;
      id v13 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Bulk set containers properties failed with error: %{public}@",  (uint8_t *)&v12,  0xCu);
    }
  }

  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = (uint64_t)[v5 responseCode];
  if (v10 > 399)
  {
    if (v10 != 404 && v10 != 400) {
      goto LABEL_14;
    }
    uint64_t v11 = 3LL;
  }

  else
  {
    uint64_t v11 = 1LL;
    if (v10 != 200 && v10 != 204) {
LABEL_14:
    }
      uint64_t v11 = 2LL;
  }

  [v9 setStatus:v11];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

uint64_t sub_100107DF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___ML3DatabasePrivacyContext);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) clientIdentity]);
  id v6 = [v4 initWithClientIdentity:v5];
  __int16 v16 = v3;
  [v3 setPrivacyContext:v6];

  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id obj = *(id *)(a1 + 40);
  id v7 = [obj countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v19;
    uint64_t v10 = ML3ContainerPropertyPlayCountRecent;
    do
    {
      for (unint64_t i = 0LL; i != v8; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v9) {
          objc_enumerationMutation(obj);
        }
        id v12 = [*(id *)(*((void *)&v18 + 1) + 8 * (void)i) longLongValue];
        id v13 = +[ML3Container newWithPersistentID:inLibrary:]( &OBJC_CLASS___ML3Container,  "newWithPersistentID:inLibrary:",  v12,  *(void *)(a1 + 48));
        [v13 setValue:&off_1001B4720 forProperty:v10];
        id v14 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__int128 buf = 134217984;
          id v23 = v12;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "Play data update succeeded for container with persistent ID: %lld",  buf,  0xCu);
        }
      }

      id v8 = [obj countByEnumeratingWithState:&v18 objects:v24 count:16];
    }

    while (v8);
  }

  return 1LL;
}

void sub_10010891C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = objc_claimAutoreleasedReturnValue([a2 urlForBagKey:*(void *)(*(void *)(a1 + 32) + 8)]);
  id v7 = (void *)v6;
  if (a2 && v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _baseRequestWithURL:v6]);
    uint64_t v9 = -[ICStoreURLRequest initWithURLRequest:requestContext:]( objc_alloc(&OBJC_CLASS___ICStoreURLRequest),  "initWithURLRequest:requestContext:",  v8,  *(void *)(a1 + 40));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[ICURLSessionManager defaultSession](&OBJC_CLASS___ICURLSessionManager, "defaultSession"));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_100108B10;
    v15[3] = &unk_1001A6A08;
    void v15[4] = *(void *)(a1 + 32);
    [v10 enqueueDataRequest:v9 withCompletionHandler:v15];

LABEL_9:
    goto LABEL_10;
  }

  uint64_t v11 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(v12 + 8);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v17 = v12;
    __int16 v18 = 2114;
    uint64_t v19 = v13;
    __int16 v20 = 2114;
    uint64_t v21 = 0LL;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "%{public}@ Failed to fetch URL from bag using key %{public}@. error=%{public}@",  buf,  0x20u);
  }

  id v14 = *(void **)(a1 + 32);
  if (!v5)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7200LL,  0LL));
    [v14 _finishWithError:v8];
    goto LABEL_9;
  }

  [v14 _finishWithError:v5];
LABEL_10:
}

void sub_100108B10(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "PlaybackPosition");
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "msv_description"));
      int v14 = 138544130;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2114;
      uint64_t v19 = v10;
      __int16 v20 = 2114;
      uint64_t v21 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "%{public}@ request completed with response: %{public}@ body: %{public}@ error=%{public}@",  (uint8_t *)&v14,  0x2Au);
    }
  }

  else if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v5 parsedBodyDictionary]);
    int v14 = 138543874;
    uint64_t v15 = v12;
    __int16 v16 = 2114;
    id v17 = v5;
    __int16 v18 = 2114;
    uint64_t v19 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "%{public}@ request completed with response: %{public}@ body: %{public}@",  (uint8_t *)&v14,  0x20u);
  }

  [*(id *)(a1 + 32) _finishWithResponse:v5 error:v6];
}

void sub_1001091FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@=%@", a2, a3));
  [v3 addObject:v4];
}

void sub_100109CDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v9 = 134218240;
    uint64_t v10 = v5;
    __int16 v11 = 2048;
    id v12 = [v3 responseCode];
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%p received response status code: %lu",  (uint8_t *)&v9,  0x16u);
  }

  id v6 = *(void **)(a1 + 40);
  uint64_t v7 = (uint64_t)[v3 responseCode];
  if (v7 > 399)
  {
    if (v7 != 404 && v7 != 400) {
      goto LABEL_10;
    }
    uint64_t v8 = 3LL;
  }

  else
  {
    uint64_t v8 = 1LL;
    if (v7 != 200 && v7 != 204) {
LABEL_10:
    }
      uint64_t v8 = 2LL;
  }

  [v6 setStatus:v8];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_10010A6EC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_10010B690(uint64_t a1)
{
  return [*(id *)(a1 + 32) _didCompleteAllCapabilitiesAsynchronousRequests];
}

void sub_10010B698(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setIdentityStore:v3];
  [v4 setIdentity:*(void *)(a1 + 40)];
  [v4 setAllowsExpiredBags:1];
  id v5 = [[ICURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v4 setAuthenticationProvider:v5];
}

void sub_10010B71C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Default");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      int v14 = 138543874;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      uint64_t v17 = v10;
      __int16 v18 = 2114;
      id v19 = v6;
      __int16 v11 = "%{public}@: Did complete %{public}@. Encountered error: %{public}@.";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v14, 0x20u);
    }
  }

  else if (v8)
  {
    uint64_t v12 = *(void *)(a1 + 32);
    uint64_t v13 = *(void *)(a1 + 40);
    int v14 = 138543874;
    uint64_t v15 = v12;
    __int16 v16 = 2114;
    uint64_t v17 = v13;
    __int16 v18 = 2114;
    id v19 = v5;
    __int16 v11 = "%{public}@: Did complete %{public}@. Received subscription status response %{public}@.";
    goto LABEL_6;
  }

  [*(id *)(a1 + 32) _updateWithSubscriptionStatusResponse:v5 error:v6];
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_10010B860(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Default");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v14 = 138543618;
      uint64_t v15 = v9;
      __int16 v16 = 2114;
      id v17 = v5;
      uint64_t v10 = "%{public}@: Did complete user identity properties request. Encountered error: %{public}@.";
      __int16 v11 = v7;
      uint32_t v12 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v14, v12);
    }
  }

  else if (v8)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    int v14 = 138543362;
    uint64_t v15 = v13;
    uint64_t v10 = "%{public}@: Did complete user identity properties request.";
    __int16 v11 = v7;
    uint32_t v12 = 12;
    goto LABEL_6;
  }

  [*(id *)(a1 + 32) _updateWithIdentityProperties:v6 error:v5];
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10010B998(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setIdentityStore:v3];
  [v4 setIdentity:*(void *)(a1 + 40)];
  [v4 setAllowsExpiredBags:0];
  id v5 = [[ICURLResponseAuthenticationProvider alloc] initWithUserInteractionLevel:1];
  [v4 setAuthenticationProvider:v5];
}

void sub_10010BA1C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "Default");
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v13 = 138543618;
      uint64_t v14 = v9;
      __int16 v15 = 2114;
      id v16 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Did complete bag request. Encountered error: %{public}@.",  (uint8_t *)&v13,  0x16u);
    }
  }

  else if (v8)
  {
    uint64_t v10 = *(void *)(a1 + 32);
    __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v5 serverCorrelationKey]);
    uint32_t v12 = (void *)objc_claimAutoreleasedReturnValue([v5 serverEnvironment]);
    int v13 = 138544130;
    uint64_t v14 = v10;
    __int16 v15 = 2114;
    id v16 = v5;
    __int16 v17 = 2114;
    __int16 v18 = v11;
    __int16 v19 = 2114;
    __int16 v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@: Did complete bag request. Received bag %{public}@ (serverCorrelationKey: %{public}@; serverEnvironment: %{public}@).",
      (uint8_t *)&v13,
      0x2Au);
  }

  [*(id *)(a1 + 32) _updateWithBag:v5 error:v6];
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10010BBAC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = (id *)(a1 + 40);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  [*(id *)(a1 + 32) _didCompletePrivacyPromptOperation:WeakRetained withStatus:a2 error:v6];
}

void sub_10010C4F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v3 setPrivacyContext:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v8 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT DISTINCT (fetchable_artwork_token), store_cloud_id FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN container ON entity_pid = container_pid AND entity_type = ? WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token",  &off_1001B4C50));

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10010C600;
  void v9[3] = &unk_1001A6B20;
  id v6 = *(id *)(a1 + 32);
  char v12 = *(_BYTE *)(a1 + 48);
  id v10 = v6;
  id v11 = v5;
  id v7 = v5;
  [v8 enumerateRowsWithBlock:v9];
  [*(id *)(a1 + 40) importCloudArtworkForRequests:v7];
}

void sub_10010C600(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = (id)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  id v4 = [v3 int64ForColumnIndex:1];

  id v5 = -[CloudArtworkImportRequest initWithClientIdentity:]( objc_alloc(&OBJC_CLASS___CloudArtworkImportRequest),  "initWithClientIdentity:",  *(void *)(a1 + 32));
  -[CloudArtworkImportRequest setCloudID:](v5, "setCloudID:", v4);
  -[CloudArtworkImportRequest setToken:](v5, "setToken:", v6);
  -[CloudArtworkImportRequest setMediaType:](v5, "setMediaType:", 8LL);
  -[CloudArtworkImportRequest setArtworkType:](v5, "setArtworkType:", 5LL);
  -[CloudArtworkImportRequest setAllowsCellularData:](v5, "setAllowsCellularData:", *(unsigned __int8 *)(a1 + 48));
  [*(id *)(a1 + 40) addObject:v5];
}

void sub_10010C6BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  [v3 setPrivacyContext:v4];

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v8 = (id)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT DISTINCT (fetchable_artwork_token), store_saga_id, media_type FROM best_artwork_token LEFT OUTER JOIN artwork ON fetchable_artwork_token = artwork_token JOIN item_store ON entity_pid = item_store.item_pid AND entity_type = ? JOIN item USING (item_pid) WHERE artwork_token IS NULL AND best_artwork_token.artwork_type = ? AND fetchable_artwork_source_type = ? GROUP BY fetchable_artwork_token",  &off_1001B4C38));

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10010C7CC;
  void v9[3] = &unk_1001A6B20;
  id v6 = *(id *)(a1 + 32);
  char v12 = *(_BYTE *)(a1 + 48);
  id v10 = v6;
  id v11 = v5;
  id v7 = v5;
  [v8 enumerateRowsWithBlock:v9];
  [*(id *)(a1 + 40) importCloudArtworkForRequests:v7];
}

void sub_10010C7CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v7 = (id)objc_claimAutoreleasedReturnValue([v3 stringForColumnIndex:0]);
  id v4 = [v3 int64ForColumnIndex:1];
  id v5 = [v3 intForColumnIndex:2];

  id v6 = -[CloudArtworkImportRequest initWithClientIdentity:]( objc_alloc(&OBJC_CLASS___CloudArtworkImportRequest),  "initWithClientIdentity:",  *(void *)(a1 + 32));
  -[CloudArtworkImportRequest setCloudID:](v6, "setCloudID:", v4);
  -[CloudArtworkImportRequest setToken:](v6, "setToken:", v7);
  -[CloudArtworkImportRequest setMediaType:](v6, "setMediaType:", v5);
  -[CloudArtworkImportRequest setArtworkType:](v6, "setArtworkType:", 1LL);
  -[CloudArtworkImportRequest setAllowsCellularData:](v6, "setAllowsCellularData:", *(unsigned __int8 *)(a1 + 48));
  [*(id *)(a1 + 40) addObject:v6];
}

void sub_10010DD64(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_10010DDE4;
  v7[3] = &unk_1001A6C30;
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v5;
  id v6 = v5;
  [a3 cancelAllOperationsAndClearPendingChangesWithCompletionHandler:v7];
}

void sub_10010DDE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  id v3 = *(dispatch_queue_s **)(v1 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_10010DE58;
  v4[3] = &unk_1001A6C30;
  void v4[4] = v1;
  id v5 = v2;
  dispatch_async(v3, v4);
}

id sub_10010DE58(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) removeObjectForKey:*(void *)(a1 + 40)];
}

uint64_t sub_10010DE64(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_10010DE74(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ connection from pid %i was interrupted",  (uint8_t *)&v5,  0x12u);
  }
}

void sub_10010DF34(uint64_t a1)
{
  uint64_t v2 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = *(_DWORD *)(a1 + 40);
    int v5 = 138543618;
    uint64_t v6 = v3;
    __int16 v7 = 1024;
    int v8 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ connection from pid %i was invalidated",  (uint8_t *)&v5,  0x12u);
  }
}

void sub_10010DFF4(uint64_t a1)
{
  if (*(_BYTE *)(*(void *)(a1 + 32) + 40LL))
  {
    if (*(void *)(a1 + 64))
    {
      uint64_t v2 = *(void **)(a1 + 40);
      if (v2)
      {
        uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 userIdentity]);
        int v4 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionStatusController sharedStatusController]( &OBJC_CLASS___ICMusicSubscriptionStatusController,  "sharedStatusController"));
        int v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
        v20[0] = _NSConcreteStackBlock;
        v20[1] = 3221225472LL;
        v20[2] = sub_10010E3AC;
        void v20[3] = &unk_1001A6D70;
        void v20[4] = *(void *)(a1 + 32);
        id v21 = v3;
        id v24 = *(id *)(a1 + 56);
        __int128 v25 = *(_OWORD *)(a1 + 64);
        id v22 = *(id *)(a1 + 40);
        id v6 = *(id *)(a1 + 48);
        uint64_t v7 = *(void *)(a1 + 80);
        id v23 = v6;
        uint64_t v26 = v7;
        id v8 = v3;
        [v4 getSubscriptionStatusForUserIdentity:v5 withCompletionHandler:v20];

LABEL_13:
        return;
      }
    }

    uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 64);
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v32 = v11;
      __int16 v33 = 2048;
      uint64_t v34 = v10;
      __int16 v35 = 2114;
      uint64_t v36 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "%{public}@ Cannot update content taste for artist with storeID %lld, configuration=%{public}@",  buf,  0x20u);
    }

    int v13 = *(void **)(a1 + 56);
    if (v13)
    {
      uint64_t v14 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10010E34C;
      block[3] = &unk_1001A6BE0;
      id v28 = v13;
      dispatch_async(v14, block);
      id v8 = v28;
      goto LABEL_13;
    }
  }

  else
  {
    __int16 v15 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 64);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v32 = v16;
      __int16 v33 = 2048;
      uint64_t v34 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Music app is not installed - not running content taste update operation for artist with storeID %lld",  buf,  0x16u);
    }

    __int16 v18 = *(void **)(a1 + 56);
    if (v18)
    {
      __int16 v19 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v29[0] = _NSConcreteStackBlock;
      v29[1] = 3221225472LL;
      void v29[2] = sub_10010E2EC;
      v29[3] = &unk_1001A6BE0;
      id v30 = v18;
      dispatch_async(v19, v29);
      id v8 = v30;
      goto LABEL_13;
    }
  }

void sub_10010E2EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10010E34C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10010E3AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    if ([v5 hasCapability:512])
    {
      uint64_t v7 = -[ICCloudContentTasteUpdateItem initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:]( objc_alloc(&OBJC_CLASS___ICCloudContentTasteUpdateItem),  "initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:",  *(void *)(a1 + 72),  8LL,  *(void *)(a1 + 80),  *(void *)(a1 + 48),  *(void *)(a1 + 56));
      id v8 = v7;
      if (*(void *)(a1 + 80) == 2LL || !*(void *)(a1 + 88))
      {
        uint64_t v42 = *(void *)(a1 + 32);
        id v43 = *(dispatch_queue_s **)(v42 + 16);
        v52[0] = _NSConcreteStackBlock;
        v52[1] = 3221225472LL;
        void v52[2] = sub_10010EB40;
        v52[3] = &unk_1001A6D48;
        void v52[4] = v42;
        uint64_t v53 = v7;
        id v54 = *(id *)(a1 + 48);
        id v55 = *(id *)(a1 + 64);
        dispatch_async(v43, v52);

        id v15 = 0LL;
LABEL_31:

        goto LABEL_32;
      }

      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
      uint64_t v10 = *(void *)(a1 + 40);
      id v51 = 0LL;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 getPropertiesForUserIdentity:v10 error:&v51]);
      id v12 = v51;

      if (v11)
      {
        if ([v11 isActiveLocker])
        {
          int v13 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
          uint64_t v14 = *(void *)(a1 + 48);
          id v50 = v12;
          id v48 = (void *)objc_claimAutoreleasedReturnValue([v13 handlerWithType:0 configuration:v14 error:&v50]);
          id v15 = v50;

          if (v48)
          {
            os_log_t v16 = sub_1000DD920();
            uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
            if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
            {
              uint64_t v18 = *(void *)(a1 + 32);
              uint64_t v19 = ICNSStringForICMediaContentTaste(*(void *)(a1 + 80));
              __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
              id v21 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 72);
              *(_DWORD *)__int128 buf = 138543874;
              *(void *)&uint8_t buf[4] = v18;
              *(_WORD *)&_BYTE buf[12] = 2114;
              *(void *)&buf[14] = v20;
              *(_WORD *)&_BYTE buf[22] = 2048;
              id v63 = v21;
              _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_FAULT,  "%{public}@ Got request to %{public}@ item with storeID=%lld and the locker bit is set for the account",  buf,  0x20u);
            }

            *(void *)__int128 buf = 0LL;
            *(void *)&uint8_t buf[8] = buf;
            *(void *)&uint8_t buf[16] = 0x3032000000LL;
            id v63 = sub_10010EB54;
            uint64_t v64 = sub_10010EB64;
            id v65 = 0LL;
            id v22 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userIdentity]);
            id v47 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v22));

            v49[0] = _NSConcreteStackBlock;
            v49[1] = 3221225472LL;
            v49[2] = sub_10010EB6C;
            v49[3] = &unk_1001A6C58;
            uint64_t v23 = *(void *)(a1 + 88);
            v49[4] = buf;
            v49[5] = v23;
            [v47 performReadOnlyDatabaseTransactionWithBlock:v49];
            if ([*(id *)(*(void *)&buf[8] + 40) length])
            {
              v60[0] = @"liked_state";
              id v24 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _adjustedContentTasteForLibraryEndpoint:*(void *)(a1 + 80)]);
              v61[0] = v24;
              v60[1] = @"liked_state_changed_date";
              __int128 v25 = *(void **)(a1 + 56);
              uint64_t v26 = v25;
              if (!v25) {
                uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
              }
              v60[2] = @"cloud_universal_library_id";
              uint64_t v27 = *(void *)(*(void *)&buf[8] + 40LL);
              v61[1] = v26;
              v61[2] = v27;
              id v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v61,  v60,  3LL,  v47));
              if (!v25) {

              }
              uint64_t v29 = *(void *)(a1 + 88);
              id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) clientIdentity]);
              [v48 setAlbumArtistProperties:v28 withArtistPersistentID:v29 clientIdentity:v30 completionHandler:*(void *)(a1 + 64)];
            }

            else if (*(void *)(a1 + 80) == 1LL)
            {
              [v48 favoriteEntityWithPersistentID:*(void *)(a1 + 88) storeID:*(void *)(a1 + 72) entityType:2 time:*(void *)(a1 + 56) completionHandler:*(void *)(a1 + 64)];
            }

            else
            {
              [*(id *)(a1 + 32) _updateContentTasteForItem:v8 invalidatingLocalCache:0 configuration:*(void *)(a1 + 48) withCompletionHandler:*(void *)(a1 + 64)];
            }

            _Block_object_dispose(buf, 8);
            goto LABEL_30;
          }

          id v12 = v15;
        }
      }

      else
      {
        id v44 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v45 = *(void *)(a1 + 32);
          uint64_t v46 = *(void *)(a1 + 40);
          *(_DWORD *)__int128 buf = 138543874;
          *(void *)&uint8_t buf[4] = v45;
          *(_WORD *)&_BYTE buf[12] = 2114;
          *(void *)&buf[14] = v46;
          *(_WORD *)&_BYTE buf[22] = 2114;
          id v63 = (uint64_t (*)(uint64_t, uint64_t))v12;
          _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Could not get properties for %{public}@, error=%{public}@",  buf,  0x20u);
        }
      }

      [*(id *)(a1 + 32) _updateContentTasteForItem:v8 invalidatingLocalCache:0 configuration:*(void *)(a1 + 48) withCompletionHandler:*(void *)(a1 + 64)];
      id v15 = v12;
LABEL_30:

      goto LABEL_31;
    }

    uint64_t v36 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v37 = *(void *)(a1 + 32);
      uint64_t v38 = *(void *)(a1 + 40);
      id v39 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 72);
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v37;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v38;
      *(_WORD *)&_BYTE buf[22] = 2048;
      id v63 = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "%{public}@ %{public}@ is not subscribed to Cloud Music Library. Not running content taste operation for artist w ith storeID %lld ",  buf,  0x20u);
    }

    uint64_t v40 = *(void **)(a1 + 64);
    if (v40)
    {
      __int16 v41 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v56[0] = _NSConcreteStackBlock;
      v56[1] = 3221225472LL;
      v56[2] = sub_10010EAE0;
      v56[3] = &unk_1001A6BE0;
      id v57 = v40;
      dispatch_async(v41, v56);
      id v15 = v57;
      goto LABEL_32;
    }
  }

  else
  {
    id v31 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v32 = *(void *)(a1 + 32);
      uint64_t v33 = *(void *)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v32;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v33;
      *(_WORD *)&_BYTE buf[22] = 2114;
      id v63 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Could not get subscription status for %{public}@, error=%{public}@. Not running request",  buf,  0x20u);
    }

    uint64_t v34 = *(void **)(a1 + 64);
    if (v34)
    {
      __int16 v35 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10010EA80;
      block[3] = &unk_1001A6BE0;
      id v59 = v34;
      dispatch_async(v35, block);
      id v15 = v59;
LABEL_32:
    }
  }
}

void sub_10010EA5C(_Unwind_Exception *a1)
{
}

void sub_10010EA80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10010EAE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

id sub_10010EB40(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateContentTasteForItem:*(void *)(a1 + 40) invalidatingLocalCache:0 configuration:*(void *)(a1 + 48) withCompletionHandler:*(void *)(a1 + 56)];
}

uint64_t sub_10010EB54(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10010EB64(uint64_t a1)
{
}

uint64_t sub_10010EB6C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v3));
  id v12 = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v12, 1LL));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( [v4 executeQuery:@"SELECT cloud_universal_library_id FROM album_artist WHERE album_artist_pid=?" withParameters:v6]);

  uint64_t v8 = objc_claimAutoreleasedReturnValue([v7 objectForFirstRowAndColumn]);
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  return 1LL;
}

void sub_10010EC64(uint64_t a1)
{
  if (*(_BYTE *)(*(void *)(a1 + 32) + 40LL))
  {
    if (*(void *)(a1 + 64) && *(void *)(a1 + 40))
    {
      id v2 = -[ICCloudContentTasteUpdateItem initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:]( objc_alloc(&OBJC_CLASS___ICCloudContentTasteUpdateItem),  "initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:",  *(void *)(a1 + 64),  3LL,  *(void *)(a1 + 72),  *(void *)(a1 + 40),  *(void *)(a1 + 48));
      if (*(void *)(a1 + 72) != 2LL && *(void *)(a1 + 80))
      {
        uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
        id v4 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
        id v44 = 0LL;
        id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 getPropertiesForUserIdentity:v3 error:&v44]);
        id v6 = v44;

        if (v5)
        {
          if ([v5 isActiveLocker])
          {
            uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
            uint64_t v8 = *(void *)(a1 + 40);
            id v43 = v6;
            uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 handlerWithType:0 configuration:v8 error:&v43]);
            id v10 = v43;

            if (v9)
            {
              os_log_t v11 = sub_1000DD920();
              id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
              if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT))
              {
                uint64_t v13 = *(void *)(a1 + 32);
                uint64_t v14 = ICNSStringForICMediaContentTaste(*(void *)(a1 + 72));
                id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
                os_log_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 80);
                uint64_t v17 = *(void *)(a1 + 64);
                *(_DWORD *)__int128 buf = 138544130;
                *(void *)&uint8_t buf[4] = v13;
                *(_WORD *)&_BYTE buf[12] = 2114;
                *(void *)&buf[14] = v15;
                *(_WORD *)&_BYTE buf[22] = 2048;
                unsigned int v52 = v16;
                LOWORD(v53) = 2048;
                *(void *)((char *)&v53 + 2) = v17;
                _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_FAULT,  "%{public}@ Got request to %{public}@ album with persistentID=%lld, storeID=%lld and the locker bit is set for the account",  buf,  0x2Au);
              }

              *(void *)__int128 buf = 0LL;
              *(void *)&uint8_t buf[8] = buf;
              *(void *)&uint8_t buf[16] = 0x3032000000LL;
              unsigned int v52 = sub_10010EB54;
              *(void *)&__int128 v53 = sub_10010EB64;
              *((void *)&v53 + 1) = 0LL;
              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
              uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v18));

              v42[0] = _NSConcreteStackBlock;
              v42[1] = 3221225472LL;
              id v42[2] = sub_10010F378;
              v42[3] = &unk_1001A6C58;
              uint64_t v20 = *(void *)(a1 + 80);
              v42[4] = buf;
              v42[5] = v20;
              [v19 performReadOnlyDatabaseTransactionWithBlock:v42];
              if ([*(id *)(*(void *)&buf[8] + 40) length])
              {
                __int16 v41 = v19;
                v49[0] = @"liked_state";
                id v21 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _adjustedContentTasteForLibraryEndpoint:*(void *)(a1 + 72)]);
                v50[0] = v21;
                v49[1] = @"liked_state_changed_date";
                id v22 = *(void **)(a1 + 48);
                uint64_t v23 = v22;
                if (!v22) {
                  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
                }
                v49[2] = @"cloud_library_id";
                uint64_t v24 = *(void *)(*(void *)&buf[8] + 40LL);
                v50[1] = v23;
                v50[2] = v24;
                __int128 v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v50,  v49,  3LL));
                if (!v22) {

                }
                uint64_t v26 = *(void *)(a1 + 80);
                uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentity]);
                [v9 setAlbumEntityProperties:v25 withAlbumPersistentID:v26 clientIdentity:v27 completionHandler:*(void *)(a1 + 56)];

                uint64_t v19 = v41;
              }

              else if (*(void *)(a1 + 72) == 1LL)
              {
                [v9 favoriteEntityWithPersistentID:*(void *)(a1 + 80) storeID:*(void *)(a1 + 64) entityType:3 time:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
              }

              else
              {
                [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 40) withCompletionHandler:*(void *)(a1 + 56)];
              }

              _Block_object_dispose(buf, 8);
              goto LABEL_31;
            }

            id v6 = v10;
          }
        }

        else
        {
          id v39 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
          if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v40 = *(void *)(a1 + 32);
            *(_DWORD *)__int128 buf = 138543874;
            *(void *)&uint8_t buf[4] = v40;
            *(_WORD *)&_BYTE buf[12] = 2114;
            *(void *)&buf[14] = v3;
            *(_WORD *)&_BYTE buf[22] = 2114;
            unsigned int v52 = (uint64_t (*)(uint64_t, uint64_t))v6;
            _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Could not get properties for %{public}@, error=%{public}@",  buf,  0x20u);
          }
        }

        [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 40) withCompletionHandler:*(void *)(a1 + 56)];
        id v10 = v6;
LABEL_31:

        goto LABEL_32;
      }

      [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 40) withCompletionHandler:*(void *)(a1 + 56)];
LABEL_32:

      return;
    }

    id v28 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      uint64_t v29 = *(void *)(a1 + 64);
      uint64_t v30 = *(void *)(a1 + 32);
      id v31 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 40);
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v30;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&buf[14] = v29;
      *(_WORD *)&_BYTE buf[22] = 2114;
      unsigned int v52 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "%{public}@ Cannot update content taste for album with storeID %lld@, configuration=%{public}@",  buf,  0x20u);
    }

    uint64_t v32 = *(void **)(a1 + 56);
    if (v32)
    {
      uint64_t v33 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10010F318;
      block[3] = &unk_1001A6BE0;
      uint64_t v46 = v32;
      dispatch_async(v33, block);
      id v2 = v46;
      goto LABEL_32;
    }
  }

  else
  {
    uint64_t v34 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v35 = *(void *)(a1 + 32);
      uint64_t v36 = *(void *)(a1 + 64);
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = v35;
      *(_WORD *)&_BYTE buf[12] = 2048;
      *(void *)&buf[14] = v36;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Music app is not installed - not running content taste update operation for album with storeID %lld",  buf,  0x16u);
    }

    uint64_t v37 = *(void **)(a1 + 56);
    if (v37)
    {
      uint64_t v38 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v47[0] = _NSConcreteStackBlock;
      v47[1] = 3221225472LL;
      void v47[2] = sub_10010F2B8;
      void v47[3] = &unk_1001A6BE0;
      id v48 = v37;
      dispatch_async(v38, v47);
      id v2 = v48;
      goto LABEL_32;
    }
  }

void sub_10010F294(_Unwind_Exception *a1)
{
}

void sub_10010F2B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10010F318(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_10010F378(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v3));
  id v12 = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v12, 1LL));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( [v4 executeQuery:@"SELECT cloud_library_id FROM album WHERE album_pid=?" withParameters:v6]);

  uint64_t v8 = objc_claimAutoreleasedReturnValue([v7 objectForFirstRowAndColumn]);
  uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8LL);
  id v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  return 1LL;
}

void sub_10010F470(uint64_t a1)
{
  if (*(_BYTE *)(*(void *)(a1 + 32) + 40LL))
  {
    if (*(void *)(a1 + 40) && *(void *)(a1 + 48))
    {
      id v2 = -[ICCloudContentTasteUpdateItem initWithGlobalPlaylistID:contentTaste:configuration:]( objc_alloc(&OBJC_CLASS___ICCloudContentTasteUpdateItem),  "initWithGlobalPlaylistID:contentTaste:configuration:",  *(void *)(a1 + 40),  *(void *)(a1 + 72),  *(void *)(a1 + 48));
      if (*(void *)(a1 + 72) == 2LL || !*(void *)(a1 + 80))
      {
        id v31 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v32 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543618;
          *(void *)&uint8_t buf[4] = v32;
          *(_WORD *)&_BYTE buf[12] = 2114;
          *(void *)&buf[14] = v2;
          _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Posting content taste for item=%{public}@",  buf,  0x16u);
        }

        [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 48) withCompletionHandler:*(void *)(a1 + 64)];
        goto LABEL_31;
      }

      uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userIdentity]);
      id v4 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
      id v47 = 0LL;
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 getPropertiesForUserIdentity:v3 error:&v47]);
      id v6 = v47;

      if (v5)
      {
        if ([v5 isActiveLocker])
        {
          uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
          uint64_t v8 = *(void *)(a1 + 48);
          id v46 = v6;
          uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v7 handlerWithType:0 configuration:v8 error:&v46]);
          id v9 = v46;

          if (v42)
          {
            os_log_t v10 = sub_1000DD920();
            os_log_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
            {
              uint64_t v12 = *(void *)(a1 + 32);
              uint64_t v13 = ICNSStringForICMediaContentTaste(*(void *)(a1 + 72));
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
              id v15 = *(void **)(a1 + 40);
              *(_DWORD *)__int128 buf = 138543874;
              *(void *)&uint8_t buf[4] = v12;
              *(_WORD *)&_BYTE buf[12] = 2114;
              *(void *)&buf[14] = v14;
              *(_WORD *)&_BYTE buf[22] = 2114;
              id v55 = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "%{public}@ Got request to %{public}@ playlist with globalID=%{public}@ and the locker bit is set for the account",  buf,  0x20u);
            }

            *(void *)__int128 buf = 0LL;
            *(void *)&uint8_t buf[8] = buf;
            *(void *)&uint8_t buf[16] = 0x2020000000LL;
            id v55 = 0LL;
            os_log_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) userIdentity]);
            __int16 v41 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v16));

            v43[0] = _NSConcreteStackBlock;
            v43[1] = 3221225472LL;
            void v43[2] = sub_10010FBE8;
            v43[3] = &unk_1001A6CD0;
            id v44 = *(id *)(a1 + 40);
            uint64_t v45 = buf;
            [v41 performReadOnlyDatabaseTransactionWithBlock:v43];
            if (*(void *)(*(void *)&buf[8] + 24LL))
            {
              v52[0] = @"liked_state";
              uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _adjustedContentTasteForLibraryEndpoint:*(void *)(a1 + 72)]);
              v53[0] = v17;
              v52[1] = @"liked_state_changed_date";
              uint64_t v18 = *(void *)(a1 + 56);
              if (v18) {
                uint64_t v19 = *(void *)(a1 + 56);
              }
              else {
                uint64_t v19 = objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
              }
              uint64_t v40 = (void *)v19;
              v53[1] = v19;
              uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v53,  v52,  2LL));
              uint64_t v38 = *(void *)(a1 + 80);
              id v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) clientIdentity]);
              [v42 setPlaylistProperties:v37 trackList:0 forPlaylistPersistentID:v38 clientIdentity:v39 completionHandler:*(void *)(a1 + 64)];

              if (!v18) {
            }
              }

            else
            {
              if (*(void *)(a1 + 72) != 1LL)
              {
                [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 48) withCompletionHandler:*(void *)(a1 + 64)];
                goto LABEL_39;
              }

              uint64_t v35 = *(void *)(a1 + 80);
              uint64_t v36 = *(void *)(a1 + 40);
              uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
              [v42 favoritePlaylistWithPersistentID:v35 globalID:v36 time:v17 completionHandler:*(void *)(a1 + 64)];
            }

LABEL_39:
            _Block_object_dispose(buf, 8);

            goto LABEL_30;
          }

          id v6 = v9;
        }
      }

      else
      {
        uint64_t v33 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v34 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543874;
          *(void *)&uint8_t buf[4] = v34;
          *(_WORD *)&_BYTE buf[12] = 2114;
          *(void *)&buf[14] = v3;
          *(_WORD *)&_BYTE buf[22] = 2114;
          id v55 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Could not get properties for %{public}@, error=%{public}@",  buf,  0x20u);
        }
      }

      [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 48) withCompletionHandler:*(void *)(a1 + 64)];
      id v9 = v6;
LABEL_30:

      goto LABEL_31;
    }

    uint64_t v20 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      uint64_t v21 = *(void *)(a1 + 32);
      uint64_t v22 = *(void *)(a1 + 40);
      uint64_t v23 = *(void **)(a1 + 48);
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v21;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v22;
      *(_WORD *)&_BYTE buf[22] = 2114;
      id v55 = v23;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "%{public}@ Cannot update content taste for item with globalPlaylistID=%{public}@, configuration=%{public}@",  buf,  0x20u);
    }

    uint64_t v24 = *(void **)(a1 + 64);
    if (v24)
    {
      __int128 v25 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10010FB88;
      block[3] = &unk_1001A6BE0;
      id v49 = v24;
      dispatch_async(v25, block);
      id v2 = v49;
LABEL_31:
    }
  }

  else
  {
    uint64_t v26 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = *(void *)(a1 + 32);
      uint64_t v28 = *(void *)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = v27;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Music app is not installed - not running content taste update operation for playlist %{public}@",  buf,  0x16u);
    }

    uint64_t v29 = *(void **)(a1 + 64);
    if (v29)
    {
      uint64_t v30 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v50[0] = _NSConcreteStackBlock;
      v50[1] = 3221225472LL;
      v50[2] = sub_10010FB28;
      void v50[3] = &unk_1001A6BE0;
      id v51 = v29;
      dispatch_async(v30, v50);
      id v2 = v51;
      goto LABEL_31;
    }
  }

void sub_10010FB08(_Unwind_Exception *a1)
{
}

void sub_10010FB28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10010FB88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_10010FBE8(uint64_t a1, void *a2)
{
  uint64_t v8 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v8, 1LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v3,  "executeQuery:withParameters:",  @"SELECT store_cloud_id FROM CONTAINER WHERE cloud_global_id=?",  v4,  v8));

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForFirstRowAndColumn]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v6 longLongValue];

  return 1LL;
}

void sub_10010FCC0(uint64_t a1)
{
  if (*(_BYTE *)(*(void *)(a1 + 32) + 40LL))
  {
    if (*(void *)(a1 + 72) && *(void *)(a1 + 40))
    {
      id v2 = -[ICCloudContentTasteUpdateItem initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:]( objc_alloc(&OBJC_CLASS___ICCloudContentTasteUpdateItem),  "initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:",  *(void *)(a1 + 72),  *(void *)(a1 + 64),  *(void *)(a1 + 80),  *(void *)(a1 + 40),  *(void *)(a1 + 48));
      if (*(void *)(a1 + 80) == 2LL || !*(void *)(a1 + 88))
      {
        uint64_t v33 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v34 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543618;
          *(void *)&uint8_t buf[4] = v34;
          *(_WORD *)&_BYTE buf[12] = 2114;
          *(void *)&buf[14] = v2;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Posting content taste for item=%{public}@",  buf,  0x16u);
        }

        [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 40) withCompletionHandler:*(void *)(a1 + 56)];
        goto LABEL_31;
      }

      id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
      id v4 = (void *)objc_claimAutoreleasedReturnValue( +[ICUserIdentityStore defaultIdentityStore]( &OBJC_CLASS___ICUserIdentityStore,  "defaultIdentityStore"));
      id v47 = 0LL;
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 getPropertiesForUserIdentity:v3 error:&v47]);
      id v6 = v47;

      if (v5)
      {
        if ([v5 isActiveLocker])
        {
          uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[ICDServer server](&OBJC_CLASS___ICDServer, "server"));
          uint64_t v8 = *(void *)(a1 + 40);
          id v46 = v6;
          id v43 = (void *)objc_claimAutoreleasedReturnValue([v7 handlerWithType:0 configuration:v8 error:&v46]);
          id v9 = v46;

          if (v43)
          {
            os_log_t v10 = sub_1000DD920();
            os_log_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
            {
              uint64_t v12 = *(void *)(a1 + 32);
              uint64_t v13 = ICNSStringForICMediaContentTaste(*(void *)(a1 + 80));
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
              uint64_t v15 = *(void *)(a1 + 72);
              *(_DWORD *)__int128 buf = 138543874;
              *(void *)&uint8_t buf[4] = v12;
              *(_WORD *)&_BYTE buf[12] = 2114;
              *(void *)&buf[14] = v14;
              *(_WORD *)&_BYTE buf[22] = 2048;
              *(void *)&_BYTE buf[24] = v15;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "%{public}@ Got request to %{public}@ item with storeID=%lld and the locker bit is set for the account",  buf,  0x20u);
            }

            *(void *)__int128 buf = 0LL;
            *(void *)&uint8_t buf[8] = buf;
            *(void *)&uint8_t buf[16] = 0x2020000000LL;
            *(void *)&_BYTE buf[24] = 0LL;
            os_log_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) userIdentity]);
            uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue( +[ML3MusicLibrary musicLibraryForUserAccount:]( &OBJC_CLASS___ML3MusicLibrary,  "musicLibraryForUserAccount:",  v16));

            v45[0] = _NSConcreteStackBlock;
            v45[1] = 3221225472LL;
            void v45[2] = sub_100110484;
            v45[3] = &unk_1001A6C58;
            uint64_t v17 = *(void *)(a1 + 88);
            void v45[4] = buf;
            void v45[5] = v17;
            [v42 performReadOnlyDatabaseTransactionWithBlock:v45];
            if (*(void *)(*(void *)&buf[8] + 24LL))
            {
              v52[0] = @"item_stats.liked_state";
              uint64_t v40 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) _adjustedContentTasteForLibraryEndpoint:*(void *)(a1 + 80)]);
              v52[1] = @"item_stats.liked_state_changed_date";
              v53[0] = v40;
              uint64_t v18 = *(void *)(a1 + 48);
              if (v18) {
                uint64_t v19 = *(void **)(a1 + 48);
              }
              else {
                uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date", v40));
              }
              v53[1] = v19;
              uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v53,  v52,  2LL,  v40));
              uint64_t v38 = *(void *)(*(void *)&buf[8] + 24LL);
              id v39 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) clientIdentity]);
              [v43 setItemProperties:v37 forSagaID:v38 clientIdentity:v39 completionHandler:*(void *)(a1 + 56)];

              if (!v18) {
            }
              }

            else if (*(void *)(a1 + 80) == 1LL)
            {
              [v43 favoriteEntityWithPersistentID:*(void *)(a1 + 88) storeID:*(void *)(a1 + 72) entityType:0 time:*(void *)(a1 + 48) completionHandler:*(void *)(a1 + 56)];
            }

            else
            {
              [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 40) withCompletionHandler:*(void *)(a1 + 56)];
            }

            if (*(void *)(a1 + 80) == 1LL)
            {
              v44[0] = _NSConcreteStackBlock;
              v44[1] = 3221225472LL;
              void v44[2] = sub_100110580;
              v44[3] = &unk_1001A6C80;
              void v44[4] = buf;
              void v44[5] = 1LL;
              v44[6] = *(void *)(a1 + 88);
              [v42 performDatabaseTransactionWithBlock:v44];
            }

            _Block_object_dispose(buf, 8);
            goto LABEL_30;
          }

          id v6 = v9;
        }
      }

      else
      {
        uint64_t v35 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
        if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v36 = *(void *)(a1 + 32);
          *(_DWORD *)__int128 buf = 138543874;
          *(void *)&uint8_t buf[4] = v36;
          *(_WORD *)&_BYTE buf[12] = 2114;
          *(void *)&buf[14] = v3;
          *(_WORD *)&_BYTE buf[22] = 2114;
          *(void *)&_BYTE buf[24] = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Could not get properties for %{public}@, error=%{public}@",  buf,  0x20u);
        }
      }

      [*(id *)(a1 + 32) _updateContentTasteForItem:v2 invalidatingLocalCache:0 configuration:*(void *)(a1 + 40) withCompletionHandler:*(void *)(a1 + 56)];
      id v9 = v6;
LABEL_30:

      goto LABEL_31;
    }

    uint64_t v20 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      uint64_t v21 = *(void *)(a1 + 64);
      uint64_t v22 = *(void *)(a1 + 72);
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      *(_DWORD *)__int128 buf = 138544130;
      *(void *)&uint8_t buf[4] = v23;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&buf[14] = v21;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&buf[20] = v22;
      *(_WORD *)&buf[28] = 2114;
      *(void *)&buf[30] = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "%{public}@ Cannot update content taste for item type %d with storeId=%lld, configuration=%{public}@",  buf,  0x26u);
    }

    __int128 v25 = *(void **)(a1 + 56);
    if (v25)
    {
      uint64_t v26 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100110424;
      block[3] = &unk_1001A6BE0;
      id v49 = v25;
      dispatch_async(v26, block);
      id v2 = v49;
LABEL_31:
    }
  }

  else
  {
    uint64_t v27 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void *)(a1 + 64);
      uint64_t v30 = *(void *)(a1 + 72);
      *(_DWORD *)__int128 buf = 138543874;
      *(void *)&uint8_t buf[4] = v28;
      *(_WORD *)&_BYTE buf[12] = 1024;
      *(_DWORD *)&buf[14] = v29;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&buf[20] = v30;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Music app is not installed - not running content taste update operation for item %d, id %lld",  buf,  0x1Cu);
    }

    id v31 = *(void **)(a1 + 56);
    if (v31)
    {
      uint64_t v32 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
      v50[0] = _NSConcreteStackBlock;
      v50[1] = 3221225472LL;
      v50[2] = sub_1001103C4;
      void v50[3] = &unk_1001A6BE0;
      id v51 = v31;
      dispatch_async(v32, v50);
      id v2 = v51;
      goto LABEL_31;
    }
  }

void sub_1001103A4(_Unwind_Exception *a1)
{
}

void sub_1001103C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100110424(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7101LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_100110484(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v3));
  os_log_t v10 = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v10, 1LL));
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( [v4 executeQuery:@"SELECT store_saga_id FROM item_store WHERE item_pid=?" withParameters:v6]);

  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForFirstRowAndColumn]);
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v8 longLongValue];

  return 1LL;
}

uint64_t sub_100110580(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  v11[0] = v4;
  v11[1] = &off_1001B4798;
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 2LL));
  [v3 executeUpdate:@"UPDATE container SET date_modified=? WHERE distinguished_kind=?" withParameters:v5 error:0];

  if (!*(void *)(*(void *)(a1[4] + 8LL) + 24LL) && a1[5] == 1LL)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date", &off_1001B47B0));
    v10[1] = v6;
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a1[6]));
    v10[2] = v7;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v10, 3LL));
    objc_msgSend( v3,  "executeUpdate:withParameters:error:",  @"UPDATE item SET in_my_library=?, date_added=? WHERE item_pid=?",  v8,  0);
  }

  return 1LL;
}

void sub_1001106E0(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentityStore]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userIdentity]);
  id v12 = 0LL;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 DSIDForUserIdentity:v3 outError:&v12]);
  id v5 = v12;

  if (v5) {
    BOOL v6 = 1;
  }
  else {
    BOOL v6 = v4 == 0LL;
  }
  if (v6 || ![v4 longValue])
  {
    uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste_Oversize");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v14 = v8;
      __int16 v15 = 2048;
      uint64_t v16 = v9;
      __int16 v17 = 2114;
      id v18 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Could not get DSID for configuration=%p, error=%{public}@",  buf,  0x20u);
    }
  }

  else
  {
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 40) + 32) objectForKey:v4]);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    v10[2] = sub_100110894;
    void v10[3] = &unk_1001A6C30;
    void v10[4] = *(void *)(a1 + 40);
    id v11 = v4;
    -[os_log_s cancelAllOperationsAndClearPendingChangesWithCompletionHandler:]( v7,  "cancelAllOperationsAndClearPendingChangesWithCompletionHandler:",  v10);
  }
}

void sub_100110894(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  id v3 = *(dispatch_queue_s **)(v1 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100110908;
  v4[3] = &unk_1001A6C30;
  void v4[4] = v1;
  id v5 = v2;
  dispatch_async(v3, v4);
}

id sub_100110908(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 32) removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_100110914(void *a1)
{
  uint64_t v2 = a1[4];
  if (*(_BYTE *)(v2 + 40))
  {
    id v3 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v20 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "%{public}@ updating content taste for media items",  buf,  0xCu);
    }

    id v5 = (void *)a1[4];
    uint64_t v6 = a1[5];
    id v18 = 0LL;
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 _contentTasteRequestHandlerForConfiguration:v6 outError:&v18]);
    id v8 = v18;
    uint64_t v9 = (void *)a1[6];
    if (v8 || !v7)
    {
      if (v9)
      {
        id v12 = *(dispatch_queue_s **)(a1[4] + 24LL);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_100110ADC;
        block[3] = &unk_1001A6BB8;
        id v17 = v9;
        id v16 = v8;
        dispatch_async(v12, block);
      }
    }

    else
    {
      [v7 updateContentTasteForReason:0 invalidatingLocalCache:1 completionHandler:v9];
    }
  }

  else
  {
    os_log_t v10 = (void *)a1[6];
    if (!v10) {
      return;
    }
    id v11 = *(dispatch_queue_s **)(v2 + 24);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_100110AEC;
    v13[3] = &unk_1001A6BE0;
    id v14 = v10;
    dispatch_async(v11, v13);
    id v8 = v14;
  }
}

uint64_t sub_100110ADC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_100110AEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ICErrorDomain,  -7002LL,  0LL));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_100110B4C(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___ICConnectionConfiguration);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](&OBJC_CLASS___ICUserIdentityStore, "defaultIdentityStore"));
  id v5 = -[ICConnectionConfiguration initWithUserIdentity:userIdentityStore:]( v2,  "initWithUserIdentity:userIdentityStore:",  v3,  v4);

  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v9 = 0LL;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 _contentTasteRequestHandlerForConfiguration:v5 outError:&v9]);
  id v8 = v7;
  if (!v9 && v7) {
    [v7 updateContentTasteForReason:1 invalidatingLocalCache:0 completionHandler:0];
  }
}

void *sub_100110C10(void *result)
{
  if (*(_BYTE *)(result[4] + 40LL))
  {
    uint64_t v1 = result;
    id v2 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = v1[4];
      int v4 = 138543362;
      uint64_t v5 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Music app is uninstalled - clearing all content taste handlers",  (uint8_t *)&v4,  0xCu);
    }

    *(_BYTE *)(v1[4] + 4AnalyticsSendEvent(@"com.apple.Music.iOS.VPPA.UnifiedReconsentDialogShown", 0LL) = 0;
    return [(id)v1[4] _cancelAllContentTasteRequestHandlers];
  }

  return result;
}

void *sub_100110CDC(void *result)
{
  if (!*(_BYTE *)(result[4] + 40LL))
  {
    uint64_t v1 = result;
    id v2 = os_log_create("com.apple.amp.itunescloudd", "ContentTaste");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = v1[4];
      int v4 = 138543362;
      uint64_t v5 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "%{public}@ Music app is installed - starting a content taste update operation",  (uint8_t *)&v4,  0xCu);
    }

    *(_BYTE *)(v1[4] + 4AnalyticsSendEvent(@"com.apple.Music.iOS.VPPA.UnifiedReconsentDialogShown", 0LL) = 1;
    return [(id)v1[4] _postContentTasteChangesForPendingItems];
  }

  return result;
}

id sub_100110DAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cancelAllContentTasteRequestHandlers];
}

id sub_100110DB4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _postContentTasteChangesForPendingItems];
}

void sub_100110DFC(id a1)
{
  id v1 = -[CloudContentTasteUpdateRequestListener _init]( objc_alloc(&OBJC_CLASS___CloudContentTasteUpdateRequestListener),  "_init");
  id v2 = (void *)qword_1001DB890;
  qword_1001DB890 = (uint64_t)v1;
}

void sub_100111178(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___CloudArtworkImportSetupOperation);
  id v2 = (void *)qword_1001DB8A8;
  qword_1001DB8A8 = (uint64_t)v1;
}

void sub_100111A18(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = *a3;
  if ((uint64_t)[v4 longLongValue] >= 1)
  {
    [*(id *)(a1 + 32) addObject:v4];
    [*(id *)(a1 + 40) addObject:*(void *)(a1 + 48)];
  }
}

void sub_100111A6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  id v8 = v7;
  if (v5)
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_7;
    }
    *(_DWORD *)id v17 = 134217984;
    *(void *)&void v17[4] = [v5 responseCode];
    uint64_t v9 = "Set album item properties response: %lu";
    os_log_t v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_DEFAULT;
    uint32_t v12 = 12;
  }

  else
  {
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      goto LABEL_7;
    }
    *(_WORD *)id v17 = 0;
    uint64_t v9 = "Set album item properties received no response";
    os_log_t v10 = v8;
    os_log_type_t v11 = OS_LOG_TYPE_ERROR;
    uint32_t v12 = 2;
  }

  _os_log_impl((void *)&_mh_execute_header, v10, v11, v9, v17, v12);
LABEL_7:

  if (v6)
  {
    uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)id v17 = 138543362;
      *(void *)&void v17[4] = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Set album item properties response with error: %{public}@",  v17,  0xCu);
    }
  }

  id v14 = *(void **)(a1 + 32);
  uint64_t v15 = (uint64_t)objc_msgSend(v5, "responseCode", *(_OWORD *)v17);
  if (v15 > 399)
  {
    if (v15 != 404 && v15 != 400) {
      goto LABEL_18;
    }
    uint64_t v16 = 3LL;
  }

  else
  {
    uint64_t v16 = 1LL;
    if (v15 != 200 && v15 != 204) {
LABEL_18:
    }
      uint64_t v16 = 2LL;
  }

  [v14 setStatus:v16];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100111F5C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 32);
  id v4 = a2;
  [v4 writeUInt32:v3 withCode:1835624804];
  [v4 writeUInt32:*(unsigned int *)(a1 + 40) withCode:1634353999];
}

void sub_100112D44( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, char a32)
{
}

uint64_t sub_100112D74(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100112D84(uint64_t a1)
{
}

void sub_100112D8C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  os_log_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100112E14(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = *a3;
  if ([v4 unsignedLongLongValue]) {
    objc_msgSend(*(id *)(a1 + 32), "addCloudItemID:idType:", objc_msgSend(v4, "unsignedLongLongValue"), 0);
  }
}

void sub_100112E6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8LL);
  os_log_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100113800(_Unwind_Exception *a1)
{
}

void sub_100113944(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100113990(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = *a3;
  if ([v4 unsignedLongLongValue]) {
    objc_msgSend(*(id *)(a1 + 32), "addCloudItemID:idType:", objc_msgSend(v4, "unsignedLongLongValue"), 0);
  }
}

void sub_1001139E8(uint64_t a1, void *a2)
{
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001140DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 8);
    id v7 = v3;
    if (!v4)
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      id v6 = *(void **)(a1 + 8);
      *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 176), 8) = v5;

      id v4 = *(void **)(a1 + 8);
    }

    [v4 addObject:v7];
    id v3 = v7;
  }
}

id sub_100114150(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 userIdentityStore]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v1 userIdentity]);

  id v15 = 0LL;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 getPropertiesForUserIdentity:v3 error:&v15]);
  id v5 = v15;

  if (v5 || !v4)
  {
    id v6 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Could not get active account. Treating automatic downloads as disabled",  buf,  2u);
    }

    id v10 = 0LL;
  }

  else
  {
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue([v4 DSID]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ic_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ic_sharedAccountStore"));
    uint64_t v14 = 0LL;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "ic_storeAccountForStoreAccountID:error:", v6, &v14));
    uint64_t v9 = v14;

    if (v9 || !v8)
    {
      id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        id v12 = -[os_log_s longLongValue](v6, "longLongValue");
        *(_DWORD *)__int128 buf = 134218240;
        id v17 = v12;
        __int16 v18 = 1024;
        int v19 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Could not get account for DSID=%lld. Automatic Downloads are %{BOOL}u",  buf,  0x12u);
      }

      id v10 = 0LL;
    }

    else
    {
      id v10 = objc_msgSend(v8, "ic_isAutomaticDownloadsEnabledForMediaKindMusic");
      id v11 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 67109120;
        LODWORD(v17) = (_DWORD)v10;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Automatic Downloads are %{BOOL}u.",  buf,  8u);
      }
    }
  }

  return v10;
}

void sub_10011439C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if ([v5 count])
  {
    id v8 = [v5 mutableCopy];
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    void v28[2] = sub_1001146A8;
    void v28[3] = &unk_1001A6F40;
    id v29 = v7;
    id v9 = v8;
    id v30 = v9;
    id v10 = v6;
    id v31 = v10;
    id v32 = v5;
    [v10 performDatabaseTransactionWithBlock:v28];
    id v11 = [v9 count];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 134217984;
        id v35 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Found %lu adam ids that didn't map to a track without a cloud-id, attempting with cloud-id now...",  buf,  0xCu);
      }

      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 allValues]);
      id v15 = [v14 mutableCopy];

      uint64_t v16 = ML3TrackPropertyStoreSagaID;
      id v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v15));
      __int16 v18 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ContainmentPredicate predicateWithProperty:values:]( &OBJC_CLASS___ML3ContainmentPredicate,  "predicateWithProperty:values:",  v16,  v17));

      int v19 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:]( &OBJC_CLASS___ML3Track,  "allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:",  v10,  v18,  &__NSArray0__struct,  0LL));
      uint64_t v33 = v16;
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v33, 1LL));
      uint64_t v23 = _NSConcreteStackBlock;
      uint64_t v24 = 3221225472LL;
      __int128 v25 = sub_100114BF0;
      uint64_t v26 = &unk_1001A6EC8;
      id v21 = v15;
      id v27 = v21;
      [v19 enumeratePersistentIDsAndProperties:v20 usingBlock:&v23];

      if (objc_msgSend(v21, "count", v23, v24, v25, v26))
      {
        uint64_t v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 138543362;
          id v35 = v21;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "The server returned cloud-ids that are not in the database, but should be: %{public}@",  buf,  0xCu);
        }
      }
    }
  }
}

uint64_t sub_1001146A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [[ML3DatabasePrivacyContext alloc] initWithClientIdentity:*(void *)(a1 + 32)];
  uint64_t v28 = v3;
  [v3 setPrivacyContext:v4];

  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) allValues]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v6));
  uint64_t v8 = ML3TrackPropertyStoreSagaID;
  id v30 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ContainmentPredicate predicateWithProperty:values:]( &OBJC_CLASS___ML3ContainmentPredicate,  "predicateWithProperty:values:",  ML3TrackPropertyStoreSagaID,  v7));

  id v29 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Track,  "queryWithLibrary:predicate:",  *(void *)(a1 + 48),  v30));
  uint64_t v60 = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v60, 1LL));
  v51[0] = _NSConcreteStackBlock;
  v51[1] = 3221225472LL;
  v51[2] = sub_100114CC4;
  v51[3] = &unk_1001A6EC8;
  id v10 = v5;
  unsigned int v52 = v10;
  [v29 enumeratePersistentIDsAndProperties:v9 usingBlock:v51];

  id v11 = *(void **)(a1 + 56);
  v48[0] = _NSConcreteStackBlock;
  v48[1] = 3221225472LL;
  v48[2] = sub_100114CD8;
  v48[3] = &unk_1001A6EF0;
  id v12 = v10;
  id v49 = v12;
  id v50 = *(id *)(a1 + 40);
  [v11 enumerateKeysAndObjectsUsingBlock:v48];
  if ([*(id *)(a1 + 40) count])
  {
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ComparisonPredicate predicateWithProperty:equalToInt64:]( &OBJC_CLASS___ML3ComparisonPredicate,  "predicateWithProperty:equalToInt64:",  v8,  0LL));
    v59[0] = v13;
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) allKeys]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v14));
    uint64_t v16 = ML3TrackPropertySubscriptionStoreItemID;
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[ML3ContainmentPredicate predicateWithProperty:values:]( &OBJC_CLASS___ML3ContainmentPredicate,  "predicateWithProperty:values:",  ML3TrackPropertySubscriptionStoreItemID,  v15));
    v59[1] = v17;
    __int16 v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v59, 2LL));
    int v19 = (void *)objc_claimAutoreleasedReturnValue( +[ML3AllCompoundPredicate predicateMatchingPredicates:]( &OBJC_CLASS___ML3AllCompoundPredicate,  "predicateMatchingPredicates:",  v18));

    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[ML3Track queryWithLibrary:predicate:]( &OBJC_CLASS___ML3Track,  "queryWithLibrary:predicate:",  *(void *)(a1 + 48),  v19));
    uint64_t v42 = 0LL;
    id v43 = &v42;
    uint64_t v44 = 0x3032000000LL;
    uint64_t v45 = sub_100114DCC;
    id v46 = sub_100114DDC;
    id v47 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    uint64_t v36 = 0LL;
    uint64_t v37 = &v36;
    uint64_t v38 = 0x3032000000LL;
    id v39 = sub_100114DCC;
    uint64_t v40 = sub_100114DDC;
    id v41 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    uint64_t v58 = v16;
    id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v58, 1LL));
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 3221225472LL;
    void v31[2] = sub_100114DE4;
    void v31[3] = &unk_1001A6F18;
    id v32 = *(id *)(a1 + 56);
    id v33 = *(id *)(a1 + 40);
    uint64_t v34 = &v42;
    id v35 = &v36;
    [v20 enumeratePersistentIDsAndProperties:v21 usingBlock:v31];

    if ([(id)v43[5] count])
    {
      uint64_t v22 = os_log_create("com.apple.amp.itunescloudd", "CloudSync_Oversize");
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v23 = v37[5];
        uint64_t v24 = v43[5];
        *(_DWORD *)__int128 buf = 138543618;
        uint64_t v55 = v23;
        __int16 v56 = 2114;
        uint64_t v57 = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "Setting sagaIDS=%{public}@ for trackPIDS=%{public}@",  buf,  0x16u);
      }

      uint64_t v25 = v37[5];
      uint64_t v53 = v8;
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v53, 1LL));
      +[ML3Track setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:]( &OBJC_CLASS___ML3Track,  "setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:",  v25,  v26,  v43[5],  *(void *)(a1 + 48),  v28);
    }

    _Block_object_dispose(&v36, 8);
    _Block_object_dispose(&v42, 8);
  }

  return 1LL;
}

void sub_100114BBC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_100114BF0(uint64_t a1, uint64_t a2, id *a3)
{
  id v4 = *a3;
  if (v4)
  {
    [*(id *)(a1 + 32) removeObject:v4];
    id v5 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = 134217984;
      id v7 = [v4 longLongValue];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Found cloud-id already in library: %lld",  (uint8_t *)&v6,  0xCu);
    }
  }
}

id *sub_100114CC4(id *result, uint64_t a2, void *a3)
{
  if (*a3) {
    return (id *)objc_msgSend(result[4], "addObject:");
  }
  return result;
}

void sub_100114CD8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) containsObject:v6])
  {
    id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 134217984;
      id v9 = [v6 longLongValue];
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Track with cloud-id %lld is already in the library, no updates needed...",  (uint8_t *)&v8,  0xCu);
    }

    [*(id *)(a1 + 40) removeObjectForKey:v5];
  }
}

uint64_t sub_100114DCC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100114DDC(uint64_t a1)
{
}

void sub_100114DE4(uint64_t a1, uint64_t a2, id *a3)
{
  id v5 = *a3;
  if (v5)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKey:v5]);
    [*(id *)(a1 + 40) removeObjectForKey:v5];
    if (v6 && (uint64_t)[v6 longLongValue] >= 1)
    {
      id v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL);
      int v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
      [v7 addObject:v8];

      id v9 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
      id v11 = v6;
      id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v11, 1LL));
      [v9 addObject:v10];
    }
  }
}

void sub_1001157D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

uint64_t sub_100115808(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100115818(uint64_t a1)
{
}

void sub_100115820(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = (objc_class *)objc_opt_class(*(void *)(a1 + 32), v8);
    id v10 = NSStringFromClass(v9);
    id v28 = v6;
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = *(void **)(a1 + 32);
    if ([v12 method]) {
      uint64_t v13 = @"POST";
    }
    else {
      uint64_t v13 = @"GET";
    }
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) action]);
    uint64_t v16 = (objc_class *)objc_opt_class(v5, v15);
    id v17 = NSStringFromClass(v16);
    __int16 v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    id v19 = [v5 responseCode];
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v5 responseData]);
    *(_DWORD *)__int128 buf = 138545154;
    id v30 = v11;
    __int16 v31 = 2048;
    id v32 = v12;
    __int16 v33 = 2114;
    uint64_t v34 = v13;
    __int16 v35 = 2114;
    uint64_t v36 = v14;
    __int16 v37 = 2114;
    uint64_t v38 = v18;
    __int16 v39 = 2048;
    id v40 = v5;
    __int16 v41 = 2048;
    id v42 = v19;
    __int16 v43 = 2048;
    id v44 = [v20 length];
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "<%{public}@: %p method=%{public}@ action=%{public}@> received response: <%{public}@: %p code=%ld, length=%{bytes}lu>",  buf,  0x52u);

    id v6 = v28;
  }

  if (v6)
  {
    id v21 = os_log_create("com.apple.amp.itunescloudd", "CloudSync");
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v30 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_ERROR,  "SagaRemoveItemOperation failed with error: %{public}@",  buf,  0xCu);
    }
  }

  uint64_t v22 = *(void *)(*(void *)(a1 + 56) + 8LL);
  uint64_t v23 = *(void **)(v22 + 40);
  *(void *)(v22 + 40) = v5;
  id v24 = v5;

  uint64_t v25 = *(void **)(a1 + 40);
  uint64_t v26 = (uint64_t)[v24 responseCode];
  if (v26 > 399)
  {
    if (v26 != 404 && v26 != 400) {
      goto LABEL_17;
    }
    uint64_t v27 = 3LL;
  }

  else
  {
    uint64_t v27 = 1LL;
    if (v26 != 200 && v26 != 204) {
LABEL_17:
    }
      uint64_t v27 = 2LL;
  }

  [v25 setStatus:v27];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

void sub_100115FAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v4 timeIntervalSince1970];
  uint64_t v6 = v5;

  [v3 writeUInt32:v6 withCode:1836282979];
  [v3 writeUInt32:*(unsigned int *)(a1 + 72) withCode:1836413810];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1001160C4;
  v7[3] = &unk_1001A6F90;
  uint64_t v12 = *(void *)(a1 + 64);
  id v8 = *(id *)(a1 + 32);
  id v9 = *(id *)(a1 + 40);
  id v10 = *(id *)(a1 + 48);
  id v11 = *(id *)(a1 + 56);
  ICDAAPUtilitiesWriteContainer(v3, 1835819884LL, v7);
}

void sub_1001160C4(uint64_t a1, uint64_t a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  v4[2] = sub_100116180;
  v4[3] = &unk_1001A6F90;
  uint64_t v9 = *(void *)(a1 + 64);
  id v5 = *(id *)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  ICDAAPUtilitiesWriteContainer(a2, 1835821428LL, v4);
}

void sub_100116180(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (*(uint64_t *)(a1 + 64) < 1)
  {
    if ([*(id *)(a1 + 32) length])
    {
      uint64_t v4 = *(void *)(a1 + 32);
    }

    else if ([*(id *)(a1 + 40) length])
    {
      uint64_t v4 = *(void *)(a1 + 40);
    }

    else
    {
      if (![*(id *)(a1 + 48) length]) {
        goto LABEL_10;
      }
      uint64_t v4 = *(void *)(a1 + 48);
    }

    [v6 writeString:v4 withCode:1634353993];
    goto LABEL_10;
  }

  objc_msgSend(v3, "writeSInt64:withCode:");
LABEL_10:
  [*(id *)(a1 + 56) timeIntervalSince1970];
  [v6 writeUInt32:v5 withCode:1634036850];
}

void sub_100116B10(id a1)
{
  id v1 = objc_alloc(&OBJC_CLASS___ArtistImageRequestHandler);
  id v5 = (id)objc_opt_new(&OBJC_CLASS___ICConnectionConfiguration, v2);
  id v3 = -[ArtistImageRequestHandler initWithConfiguration:](v1, "initWithConfiguration:", v5);
  uint64_t v4 = (void *)qword_1001DB8C0;
  qword_1001DB8C0 = (uint64_t)v3;
}

void sub_100116B70(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v2 = (void *)qword_1001DB8B0;
  qword_1001DB8B0 = (uint64_t)v1;
}

LABEL_5:
  if ((_DWORD)v10)
  {
LABEL_6:
    id v19 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"databases/%u/containers/%u/cloud-add",  v14,  v10);
    goto LABEL_8;
  }

  id v19 = +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"databases/%u/cloud-add",  v14,  v27);
LABEL_8:
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  v28.receiver = self;
  v28.super_class = (Class)&OBJC_CLASS___ICAddToLibraryRequest;
  id v21 = -[ICDRequest initWithAction:](&v28, "initWithAction:", v20);
  uint64_t v22 = v21;
  if (v21)
  {
    -[ICDRequest setMethod:](v21, "setMethod:", 1LL);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue( -[ICAddToLibraryRequest _bodyDataForDatabaseRevision:adamID:sagaID:playlistGlobalID:referralAlbumAdamID:referralPlaylistGlobalID:]( v22,  "_bodyDataForDatabaseRevision:adamID:sagaID:playlistGlobalID:referralAlbumAdamID:referralPlaylistGlobalID:",  v13,  a5,  a6,  v17,  a9,  v18));
    -[ICDRequest setBodyData:](v22, "setBodyData:", v23);
  }

  return v22;
}

  uint64_t v15 = objc_msgSend( objc_alloc((Class)objc_opt_class(a1, v13)),  "initWithDatabaseID:databaseRevision:adamID:sagaID:playlistGlobalID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:",  v10,  v9,  a5,  0,  0,  0,  a6,  v14);

  return v15;
}

void sub_100116F90(uint64_t a1, void *a2)
{
  id v4 = a2;
  [v4 writeUInt32:*(unsigned int *)(a1 + 72) withCode:1836413810];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  _DWORD v8[2] = sub_100117094;
  void v8[3] = &unk_1001A7040;
  __int128 v10 = *(_OWORD *)(a1 + 48);
  id v9 = *(id *)(a1 + 32);
  ICDAAPUtilitiesWriteContainer(v4, 1835623521LL, v8);
  uint64_t v3 = *(void *)(a1 + 64);
  if (v3) {
    goto LABEL_4;
  }
  if ([*(id *)(a1 + 40) length])
  {
    uint64_t v3 = *(void *)(a1 + 64);
LABEL_4:
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    double v5[2] = sub_10011710C;
    v5[3] = &unk_1001A7068;
    uint64_t v7 = v3;
    id v6 = *(id *)(a1 + 40);
    ICDAAPUtilitiesWriteContainer(v4, 1633907832LL, v5);
  }
}

void sub_100117094(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if ((uint64_t)a1[5] < 1)
  {
    else {
      objc_msgSend(v3, "writeUInt32:withCode:");
    }
  }

  else
  {
    objc_msgSend(v3, "writeSInt64:withCode:");
  }
}

id sub_10011710C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    return [a2 writeSInt64:v2 withCode:1634029641];
  }
  else {
    return [a2 writeString:*(void *)(a1 + 32) withCode:1634357319];
  }
}

LABEL_6:
  id v17 = objc_msgSend( objc_alloc((Class)objc_opt_class(a1, v15)),  "initWithDatabaseID:databaseRevision:adamID:sagaID:playlistGlobalID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:",  v12,  v11,  a5,  0,  0,  v9,  a7,  v16);
  return v17;
}

LABEL_3:
  return v7;
}

void sub_100118318(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 40);
  id v4 = a2;
  [v4 writeUInt32:v3 withCode:1836413810];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  double v5[2] = sub_1001183B4;
  v5[3] = &unk_1001A70B8;
  id v6 = *(id *)(a1 + 32);
  ICDAAPUtilitiesWriteContainer(v4, 1835623521LL, v5);
}

id sub_1001183B4(uint64_t a1, void *a2)
{
  return [a2 writeString:*(void *)(a1 + 32) withCode:1634353993];
}

void sub_1001189E0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 40);
  id v4 = a2;
  [v4 writeUInt32:v3 withCode:1836413810];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  double v5[2] = sub_100118A7C;
  v5[3] = &unk_1001A70B8;
  id v6 = *(id *)(a1 + 32);
  ICDAAPUtilitiesWriteContainer(v4, 1835623521LL, v5);
}

id sub_100118A7C(uint64_t a1, void *a2)
{
  return [a2 writeString:*(void *)(a1 + 32) withCode:1634353993];
}

void sub_10011A600(_Unwind_Exception *a1)
{
}

void sub_10011A69C(_Unwind_Exception *a1)
{
}

void sub_10011A85C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10011AAC8(_Unwind_Exception *a1)
{
}

void sub_10011B414(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v13 = 134218242;
      uint64_t v14 = v6;
      __int16 v15 = 2114;
      id v16 = v3;
      uint64_t v7 = "ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Failed - error=%{public}@";
      id v8 = v5;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, (uint8_t *)&v13, v10);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v13 = 134217984;
    uint64_t v14 = v11;
    uint64_t v7 = "ICDBackgroundTaskManager %p - jaliscoDeferredPushUpate - Succeeded";
    id v8 = v5;
    os_log_type_t v9 = OS_LOG_TYPE_DEFAULT;
    uint32_t v10 = 12;
    goto LABEL_6;
  }

  (*(void (**)(void, id, uint64_t))(*(void *)(a1 + 40) + 16LL))(*(void *)(a1 + 40), v3, v12);
}

void sub_10011B53C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v13 = 134218242;
      uint64_t v14 = v6;
      __int16 v15 = 2114;
      id v16 = v3;
      uint64_t v7 = "ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Failed - error=%{public}@";
      id v8 = v5;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, (uint8_t *)&v13, v10);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v13 = 134217984;
    uint64_t v14 = v11;
    uint64_t v7 = "ICDBackgroundTaskManager %p - sagaDeferredPushUpate - Succeeded";
    id v8 = v5;
    os_log_type_t v9 = OS_LOG_TYPE_DEFAULT;
    uint32_t v10 = 12;
    goto LABEL_6;
  }

  (*(void (**)(void, id, uint64_t))(*(void *)(a1 + 40) + 16LL))(*(void *)(a1 + 40), v3, v12);
}

id sub_10011B664(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 name]);
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_10011B6A4(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained && xpc_activity_get_state(v3) == 2)
  {
    if (!xpc_activity_set_state(v3, 4LL))
    {
      id v5 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = a1[4];
        *(_DWORD *)__int128 buf = 134218242;
        id v14 = WeakRetained;
        __int16 v15 = 2114;
        id v16 = v6;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "ICDBackgroundTaskManager %p - scheduleTask - Unable to perform asynchrounous work [%{public}@]",  buf,  0x16u);
      }
    }

    id v7 = a1[5];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    _DWORD v8[2] = sub_10011B83C;
    void v8[3] = &unk_1001A71A8;
    id v9 = WeakRetained;
    id v10 = a1[4];
    id v11 = a1[5];
    uint64_t v12 = v3;
    [v9 _handleTask:v7 completion:v8];
  }
}

void sub_10011B83C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      int v13 = 134218242;
      uint64_t v14 = v6;
      __int16 v15 = 2114;
      uint64_t v16 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "ICDBackgroundTaskManager %p - scheduleTask - Task failed [%{public}@]",  (uint8_t *)&v13,  0x16u);
    }

    [*(id *)(a1 + 32) _scheduleTask:*(void *)(a1 + 48) withStartTime:XPC_ACTIVITY_INTERVAL_1_HOUR];
  }

  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      int v13 = 134218242;
      uint64_t v14 = v8;
      __int16 v15 = 2114;
      uint64_t v16 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "ICDBackgroundTaskManager %p - scheduleTask - Task succeeded [%{public}@]",  (uint8_t *)&v13,  0x16u);
    }

    [*(id *)(a1 + 32) _stopTask:*(void *)(a1 + 48)];
  }

  if (!xpc_activity_set_state(*(xpc_activity_t *)(a1 + 56), 5LL))
  {
    id v10 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      uint64_t v12 = *(void *)(a1 + 40);
      int v13 = 134218242;
      uint64_t v14 = v11;
      __int16 v15 = 2114;
      uint64_t v16 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "ICDBackgroundTaskManager %p - scheduleTask - Unable to force task termination [%{public}@]",  (uint8_t *)&v13,  0x16u);
    }
  }
}

void sub_10011BA08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [*(id *)(a1 + 32) _pollingRefreshIntervalSecondsUsingBag:v5];
  id v8 = [*(id *)(a1 + 32) _pollingGracePeriodSecondsForRefreshInterval:v7];
  uint64_t v9 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 134218496;
    uint64_t v15 = v10;
    __int16 v16 = 2048;
    id v17 = v7;
    __int16 v18 = 2048;
    id v19 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "ICDBackgroundTaskManager %p - startPeriodicPolling - Setting timer to perform periodic poll for %llds (+/- %llds)",  buf,  0x20u);
  }

  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) _periodicPollingActivityCriteriaWithRefreshInterval:v7 gracePeriod:v8]);
  objc_initWeak((id *)buf, *(id *)(a1 + 32));
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_10011BBD8;
  handler[3] = &unk_1001A7158;
  objc_copyWeak(&v13, (id *)buf);
  xpc_activity_register("com.apple.itunescloud.ICDBackgroundTaskManager.periodic-poll-activity", v11, handler);
  [*(id *)(a1 + 40) endTransaction];
  objc_destroyWeak(&v13);
  objc_destroyWeak((id *)buf);
}

void sub_10011BBB0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10011BBD8(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  xpc_activity_state_t state = xpc_activity_get_state(v3);

  if (state != 2)
  {
    uint64_t v10 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 134217984;
      id v19 = WeakRetained;
      uint64_t v15 = "ICDBackgroundTaskManager %p - periodicPolling - Ignoring activity [State != Run]";
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v15, buf, 0xCu);
    }

void sub_10011BE10(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  double v5[2] = sub_10011BE9C;
  v5[3] = &unk_1001A7108;
  id v6 = *(id *)(a1 + 32);
  id v7 = v3;
  id v4 = v3;
  [v4 updateLibraryWithReason:4 completionHandler:v5];
}

void sub_10011BE9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = os_log_create("com.apple.amp.itunescloudd", "BackgroundTasks");
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      id v8 = (objc_class *)objc_opt_class(*(void *)(a1 + 40), v6);
      id v9 = NSStringFromClass(v8);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      uint64_t v11 = *(void *)(a1 + 40);
      int v21 = 134218754;
      uint64_t v22 = v7;
      __int16 v23 = 2112;
      id v24 = v10;
      __int16 v25 = 2048;
      uint64_t v26 = v11;
      __int16 v27 = 2114;
      id v28 = v3;
      uint64_t v12 = "ICDBackgroundTaskManager %p - periodicPolling - Failed to update %@ %p [error] - error=%{public}@";
      id v13 = v5;
      os_log_type_t v14 = OS_LOG_TYPE_ERROR;
      uint32_t v15 = 42;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v13, v14, v12, (uint8_t *)&v21, v15);
    }
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v17 = *(void *)(a1 + 32);
    __int16 v18 = (objc_class *)objc_opt_class(*(void *)(a1 + 40), v16);
    id v19 = NSStringFromClass(v18);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v19);
    uint64_t v20 = *(void *)(a1 + 40);
    int v21 = 134218498;
    uint64_t v22 = v17;
    __int16 v23 = 2112;
    id v24 = v10;
    __int16 v25 = 2048;
    uint64_t v26 = v20;
    uint64_t v12 = "ICDBackgroundTaskManager %p - periodicPolling - Updated %@ %p [no error]";
    id v13 = v5;
    os_log_type_t v14 = OS_LOG_TYPE_DEFAULT;
    uint32_t v15 = 32;
    goto LABEL_6;
  }
}

id objc_msgSend_APNSToken(void *a1, const char *a2, ...)
{
  return _[a1 APNSToken];
}

id objc_msgSend_DSID(void *a1, const char *a2, ...)
{
  return _[a1 DSID];
}

id objc_msgSend_DSIDForUserIdentity_outError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "DSIDForUserIdentity:outError:");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_MIMEType(void *a1, const char *a2, ...)
{
  return _[a1 MIMEType];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLAssetWithURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLAssetWithURL:options:");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathExtension:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLQueryAllowedCharacterSet];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:relativeToURL:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__DAAPMediaKindFromJaliscoSupportedMediaKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_DAAPMediaKindFromJaliscoSupportedMediaKind:");
}

id objc_msgSend__HTTPMethodStringForICDRequestMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_HTTPMethodStringForICDRequestMethod:");
}

id objc_msgSend__ICCloudServerSupportedServiceForXPCListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ICCloudServerSupportedServiceForXPCListener:");
}

id objc_msgSend__activeConfigurationsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeConfigurationsWithCompletion:");
}

id objc_msgSend__addAllStoreArtistIDsToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAllStoreArtistIDsToSet:");
}

id objc_msgSend__addLibraryOperation_priority_noLibraryHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLibraryOperation:priority:noLibraryHandler:");
}

id objc_msgSend__addSpecificStoreArtistIDsToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSpecificStoreArtistIDsToSet:");
}

id objc_msgSend__adjustMergePreferenceWithUserIdentityProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustMergePreferenceWithUserIdentityProperties:");
}

id objc_msgSend__adjustOperationQueueStatusForMediaDownloads(void *a1, const char *a2, ...)
{
  return _[a1 _adjustOperationQueueStatusForMediaDownloads];
}

id objc_msgSend__adjustedContentTasteForLibraryEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustedContentTasteForLibraryEndpoint:");
}

id objc_msgSend__artistHeroImageUpdateFinished(void *a1, const char *a2, ...)
{
  return _[a1 _artistHeroImageUpdateFinished];
}

id objc_msgSend__artworkColorAnalysisOperationForArtworkAsset_library_artwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_artworkColorAnalysisOperationForArtworkAsset:library:artwork:");
}

id objc_msgSend__artworkURLForInfoDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_artworkURLForInfoDictionary:");
}

id objc_msgSend__authenticateAndStartInitialImportWithMergePreference_userIdentityProperties_enableReason_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_authenticateAndStartInitialImportWithMergePreference:userIdentityProperties:enableReason:withCompletionHandler:");
}

id objc_msgSend__bagKey(void *a1, const char *a2, ...)
{
  return _[a1 _bagKey];
}

id objc_msgSend__baseBtaJobForDeferredPush(void *a1, const char *a2, ...)
{
  return _[a1 _baseBtaJobForDeferredPush];
}

id objc_msgSend__baseBtaJobForPeriodicPollCellularDataAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_baseBtaJobForPeriodicPollCellularDataAllowed:");
}

id objc_msgSend__baseRequestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_baseRequestWithURL:");
}

id objc_msgSend__beginObservingCloudServiceStatus(void *a1, const char *a2, ...)
{
  return _[a1 _beginObservingCloudServiceStatus];
}

id objc_msgSend__bodyDataForCloudIDs_itemKind_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForCloudIDs:itemKind:useLongIDs:");
}

id objc_msgSend__bodyDataForContainerIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForContainerIDs:");
}

id objc_msgSend__bodyDataForContainerIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForContainerIDs:properties:");
}

id objc_msgSend__bodyDataForDatabaseRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForDatabaseRevision:");
}

id objc_msgSend__bodyDataForDatabaseRevision_adamID_sagaID_playlistGlobalID_referralAlbumAdamID_referralPlaylistGlobalID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_bodyDataForDatabaseRevision:adamID:sagaID:playlistGlobalID:referralAlbumAdamID:referralPlaylistGlobalID:");
}

id objc_msgSend__bodyDataForDatabaseRevision_addToLibraryBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForDatabaseRevision:addToLibraryBehavior:");
}

id objc_msgSend__bodyDataForDatabaseRevision_addToPlaylistBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForDatabaseRevision:addToPlaylistBehavior:");
}

id objc_msgSend__bodyDataForDatabaseRevision_containerID_trackList_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForDatabaseRevision:containerID:trackList:properties:");
}

id objc_msgSend__bodyDataForDatabaseRevision_opaqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForDatabaseRevision:opaqueID:");
}

id objc_msgSend__bodyDataForDatabaseRevision_playlistProperties_trackList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForDatabaseRevision:playlistProperties:trackList:");
}

id objc_msgSend__bodyDataForItemIDs_properties_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForItemIDs:properties:useLongIDs:");
}

id objc_msgSend__bodyDataForItemIDs_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForItemIDs:useLongIDs:");
}

id objc_msgSend__bodyDataForItemKind_cloudLibraryIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForItemKind:cloudLibraryIDs:properties:");
}

id objc_msgSend__bodyDataForMetadataFilter_queryFilter_purchaseTokens_includeHiddenItems_includePreorders_paginationToken_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_bodyDataForMetadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:");
}

id objc_msgSend__bodyDataForPlaylistName_seedItemIDs_itemIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForPlaylistName:seedItemIDs:itemIDs:");
}

id objc_msgSend__bodyDataForSagaIDs_itemKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataForSagaIDs:itemKind:");
}

id objc_msgSend__bodyDataWithAdditionalBodyFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyDataWithAdditionalBodyFields:");
}

id objc_msgSend__bodyDataWithStoreID_globalPlaylistID_albumCloudLibraryID_artistCloudLibraryID_time_serverDatabaseRevision_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_bodyDataWithStoreID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:time:serverDatabaseRevision:");
}

id objc_msgSend__buildStateChange(void *a1, const char *a2, ...)
{
  return _[a1 _buildStateChange];
}

id objc_msgSend__buildUserStateFromUserIdentity_storeRequestContext_tokensDictionary_ignoreResponseCache_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_buildUserStateFromUserIdentity:storeRequestContext:tokensDictionary:ignoreResponseCache:completion:");
}

id objc_msgSend__cacheContainerPath(void *a1, const char *a2, ...)
{
  return _[a1 _cacheContainerPath];
}

id objc_msgSend__cacheDirectoryPath(void *a1, const char *a2, ...)
{
  return _[a1 _cacheDirectoryPath];
}

id objc_msgSend__cacheMatchedRecommendations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheMatchedRecommendations:");
}

id objc_msgSend__cacheResponse_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheResponse:forContext:");
}

id objc_msgSend__canCompleteStartupSequence(void *a1, const char *a2, ...)
{
  return _[a1 _canCompleteStartupSequence];
}

id objc_msgSend__canEnableCloudMusicLibraryOnPlatformsWithSideLoadedMediaContentWithProperties_includeLocalContentCheck_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_canEnableCloudMusicLibraryOnPlatformsWithSideLoadedMediaContentWithProperties:includeLocalContentCheck:");
}

id objc_msgSend__canRunOperationWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canRunOperationWithCompletionHandler:");
}

id objc_msgSend__cancelAllContentTasteRequestHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAllContentTasteRequestHandlers];
}

id objc_msgSend__cellularDataAllowedForJaliscoMedia(void *a1, const char *a2, ...)
{
  return _[a1 _cellularDataAllowedForJaliscoMedia];
}

id objc_msgSend__cellularDataAllowedForMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellularDataAllowedForMediaType:");
}

id objc_msgSend__chapterArtworkURLsForData_baseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_chapterArtworkURLsForData:baseURL:");
}

id objc_msgSend__chapterDataFromURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_chapterDataFromURL:");
}

id objc_msgSend__checkForRecentRevocations(void *a1, const char *a2, ...)
{
  return _[a1 _checkForRecentRevocations];
}

id objc_msgSend__claimSingleWriterStatus(void *a1, const char *a2, ...)
{
  return _[a1 _claimSingleWriterStatus];
}

id objc_msgSend__cleanupExpiredApplicationMessages(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupExpiredApplicationMessages];
}

id objc_msgSend__clearAllCloudIDs(void *a1, const char *a2, ...)
{
  return _[a1 _clearAllCloudIDs];
}

id objc_msgSend__clearCacheForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearCacheForContext:");
}

id objc_msgSend__clearMLModelCache(void *a1, const char *a2, ...)
{
  return _[a1 _clearMLModelCache];
}

id objc_msgSend__clearRecommendationsData(void *a1, const char *a2, ...)
{
  return _[a1 _clearRecommendationsData];
}

id objc_msgSend__clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientInfoForCloudDaemonOriginatedMusicKitRequestWithRequestingBundleIdentifier:");
}

id objc_msgSend__clientInfoForDeveloperTokenRequestWithRequestingApplicationBundleIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientInfoForDeveloperTokenRequestWithRequestingApplicationBundleIdentifier:");
}

id objc_msgSend__clientInfoForUserTokenRequestWithRequestingApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientInfoForUserTokenRequestWithRequestingApplicationBundleIdentifier:");
}

id objc_msgSend__cloudSourcesToRemoveForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cloudSourcesToRemoveForReason:");
}

id objc_msgSend__completeStartupSequenceIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _completeStartupSequenceIfNeeded];
}

id objc_msgSend__computeLibraryRecommendationWithResponse_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeLibraryRecommendationWithResponse:completionHandler:");
}

id objc_msgSend__configurationForAccount_baseConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationForAccount:baseConfiguration:");
}

id objc_msgSend__configurationsToActivateForChange_initialSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationsToActivateForChange:initialSetup:");
}

id objc_msgSend__configurationsToRemoveForChange_initialSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationsToRemoveForChange:initialSetup:");
}

id objc_msgSend__connectToLibraryWithCompletionHandler_allowRetry_forceBagReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToLibraryWithCompletionHandler:allowRetry:forceBagReload:");
}

id objc_msgSend__connectionClientIdentity(void *a1, const char *a2, ...)
{
  return _[a1 _connectionClientIdentity];
}

id objc_msgSend__containerPidsMatchingRequestGlobalPlaylistID(void *a1, const char *a2, ...)
{
  return _[a1 _containerPidsMatchingRequestGlobalPlaylistID];
}

id objc_msgSend__contentTasteRequestHandlerForConfiguration_outError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentTasteRequestHandlerForConfiguration:outError:");
}

id objc_msgSend__contentTasteUpdateResponseWithServerResponse_expirationDate_revisionID_isCachedResponse_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentTasteUpdateResponseWithServerResponse:expirationDate:revisionID:isCachedResponse:");
}

id objc_msgSend__continueConnectingToLibraryWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continueConnectingToLibraryWithCompletionHandler:");
}

id objc_msgSend__createAPNSConnectionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAPNSConnectionWithCompletion:");
}

id objc_msgSend__createApplicationMessagesForResult_artistNewContentResponse_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createApplicationMessagesForResult:artistNewContentResponse:completion:");
}

id objc_msgSend__createBag(void *a1, const char *a2, ...)
{
  return _[a1 _createBag];
}

id objc_msgSend__createLocalNotificationDictionaryForRecommendationResult_storePlatformMetadata_recommendationID_identifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_createLocalNotificationDictionaryForRecommendationResult:storePlatformMetadata:recommendationID:identifier:");
}

id objc_msgSend__criteriaDictionaryWithPostFrequency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_criteriaDictionaryWithPostFrequency:");
}

id objc_msgSend__currentDatabaseRevision(void *a1, const char *a2, ...)
{
  return _[a1 _currentDatabaseRevision];
}

id objc_msgSend__deauthenticateUnsupportedConfigurationsFromChange_initialSetup_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deauthenticateUnsupportedConfigurationsFromChange:initialSetup:completion:");
}

id objc_msgSend__deferredPushActivityCriteriaForTask_startTime_gracePeriod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deferredPushActivityCriteriaForTask:startTime:gracePeriod:");
}

id objc_msgSend__deferredPushGracePeriodSeconds(void *a1, const char *a2, ...)
{
  return _[a1 _deferredPushGracePeriodSeconds];
}

id objc_msgSend__deserializeResponseDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deserializeResponseDictionary:");
}

id objc_msgSend__determineResultsURLWhenReadyWithUpdateID_retryTimeout_responseStatusCode_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_determineResultsURLWhenReadyWithUpdateID:retryTimeout:responseStatusCode:");
}

id objc_msgSend__didCompleteAllCapabilitiesAsynchronousRequests(void *a1, const char *a2, ...)
{
  return _[a1 _didCompleteAllCapabilitiesAsynchronousRequests];
}

id objc_msgSend__didCompletePrivacyPromptOperation_withStatus_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCompletePrivacyPromptOperation:withStatus:error:");
}

id objc_msgSend__didCompleteWithPrivacyPromptStatus_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCompleteWithPrivacyPromptStatus:error:");
}

id objc_msgSend__didReceiveDarwinNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveDarwinNotification:");
}

id objc_msgSend__didReceiveDistributedNotification_withStreamEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveDistributedNotification:withStreamEvent:");
}

id objc_msgSend__didReceiveTelephonyCenterNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveTelephonyCenterNotification:");
}

id objc_msgSend__dispatchCompletionHandler_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchCompletionHandler:withError:");
}

id objc_msgSend__displayNotificationForBuilder_withReplyBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNotificationForBuilder:withReplyBlock:");
}

id objc_msgSend__downloadRequestsFromURL_uploadResponsesURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_downloadRequestsFromURL:uploadResponsesURL:");
}

id objc_msgSend__endObservingCloudServiceStatus(void *a1, const char *a2, ...)
{
  return _[a1 _endObservingCloudServiceStatus];
}

id objc_msgSend__enqueueCloudUpdateLibraryOperationForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueCloudUpdateLibraryOperationForReason:");
}

id objc_msgSend__enqueueFailedOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueFailedOperation:");
}

id objc_msgSend__enqueueSubscriptionStatusCheckForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueSubscriptionStatusCheckForReason:");
}

id objc_msgSend__ensureConnectionWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureConnectionWithCompletionHandler:");
}

id objc_msgSend__ensureDeviceIsRegistered(void *a1, const char *a2, ...)
{
  return _[a1 _ensureDeviceIsRegistered];
}

id objc_msgSend__ensureMusicSubscriptionKeysAreAvailableForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureMusicSubscriptionKeysAreAvailableForConfiguration:");
}

id objc_msgSend__ensureSubscriptionInformationIsUpToDateForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ensureSubscriptionInformationIsUpToDateForConfiguration:");
}

id objc_msgSend__ensureURLResolutionCacheFileExists(void *a1, const char *a2, ...)
{
  return _[a1 _ensureURLResolutionCacheFileExists];
}

id objc_msgSend__errorIsRecoverable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorIsRecoverable:");
}

id objc_msgSend__executeBlockForAllOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeBlockForAllOperations:");
}

id objc_msgSend__fetchAccountsWithForceRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAccountsWithForceRefresh:completion:");
}

id objc_msgSend__fetchAccountsWithForceRefresh_ignoreResponseCache_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAccountsWithForceRefresh:ignoreResponseCache:completion:");
}

id objc_msgSend__fetchAndCacheLatestAllArtistImagesMap(void *a1, const char *a2, ...)
{
  return _[a1 _fetchAndCacheLatestAllArtistImagesMap];
}

id objc_msgSend__fetchRecommendationsSetAndModelWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRecommendationsSetAndModelWithCompletionHandler:");
}

id objc_msgSend__fetchSharedKeysForcingRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchSharedKeysForcingRefresh:");
}

id objc_msgSend__fetchUpdatedAlbumsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpdatedAlbumsWithCompletion:");
}

id objc_msgSend__fetchUpdatedAlbumsWithPaginationToken_responseFileURLs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpdatedAlbumsWithPaginationToken:responseFileURLs:completion:");
}

id objc_msgSend__fetchUpdatedArtistsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpdatedArtistsWithCompletion:");
}

id objc_msgSend__fetchUpdatedArtistsWithPaginationToken_responseFileURLs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpdatedArtistsWithPaginationToken:responseFileURLs:completion:");
}

id objc_msgSend__fetchUpdatedPlaylistsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpdatedPlaylistsWithCompletion:");
}

id objc_msgSend__fetchUpdatedTracksWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpdatedTracksWithCompletion:");
}

id objc_msgSend__fetchUpdatedTracksWithPaginationToken_responseFileURLs_currentIncludesBookmarkable_cloudIDToLyricsTokenMap_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_fetchUpdatedTracksWithPaginationToken:responseFileURLs:currentIncludesBookmarkable:cloudIDToLyricsTokenMap:completion:");
}

id objc_msgSend__fetchUpdatedUserProfilesForUserStates_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUpdatedUserProfilesForUserStates:completion:");
}

id objc_msgSend__finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishWithError:");
}

id objc_msgSend__finishWithResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishWithResponse:error:");
}

id objc_msgSend__getCachedResponseForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCachedResponseForContext:");
}

id objc_msgSend__getCurrentSubscriptionStatusForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCurrentSubscriptionStatusForReason:");
}

id objc_msgSend__getNetworkConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _getNetworkConstraints];
}

id objc_msgSend__getPBData_includedContentTasteItemUpdates_fromContentTasteUpdateItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPBData:includedContentTasteItemUpdates:fromContentTasteUpdateItems:");
}

id objc_msgSend__getStoreAdamIDLikedState_playlistGlobalIDLikedState_artistStoreAdamIDLikedState_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getStoreAdamIDLikedState:playlistGlobalIDLikedState:artistStoreAdamIDLikedState:");
}

id objc_msgSend__getTokenStatusesForDSIDs_forceRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getTokenStatusesForDSIDs:forceRefresh:completion:");
}

id objc_msgSend__getUserIdentitiesfromDefaultStore(void *a1, const char *a2, ...)
{
  return _[a1 _getUserIdentitiesfromDefaultStore];
}

id objc_msgSend__getUserStateFromIdentity_tokensDictionary_ignoreResponseCache_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getUserStateFromIdentity:tokensDictionary:ignoreResponseCache:completion:");
}

id objc_msgSend__handleApplicationRegistration_notificationName_streamEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleApplicationRegistration:notificationName:streamEvent:");
}

id objc_msgSend__handleApplicationRegistrationNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleApplicationRegistrationNotification:");
}

id objc_msgSend__handleClientConnectionInterrupted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClientConnectionInterrupted:");
}

id objc_msgSend__handleClientConnectionInvalidated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClientConnectionInvalidated:");
}

id objc_msgSend__handleClientConnectionSevered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClientConnectionSevered:");
}

id objc_msgSend__handleCloudLibraryUpdateOperationFinishedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCloudLibraryUpdateOperationFinishedWithError:");
}

id objc_msgSend__handleFamilyCircleChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleFamilyCircleChangedNotification];
}

id objc_msgSend__handleFamilyContentDeletionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFamilyContentDeletionEvent:");
}

id objc_msgSend__handleFamilyContentDeletionNotification_streamEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFamilyContentDeletionNotification:streamEvent:");
}

id objc_msgSend__handleFlushPlayActivityEvents(void *a1, const char *a2, ...)
{
  return _[a1 _handleFlushPlayActivityEvents];
}

id objc_msgSend__handleITunesStorePushMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleITunesStorePushMessage:withCompletionHandler:");
}

id objc_msgSend__handleInAppMessagesUpdatedPushMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInAppMessagesUpdatedPushMessage:");
}

id objc_msgSend__handleJaliscoDeferredPushUpdateTask_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleJaliscoDeferredPushUpdateTask:completion:");
}

id objc_msgSend__handleJaliscoPushMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleJaliscoPushMessage:withCompletionHandler:");
}

id objc_msgSend__handleJobNamed_satisfied_invalid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleJobNamed:satisfied:invalid:");
}

id objc_msgSend__handleLibraryEditOperationCompletionUpdatingLibrary_andSubscribedPlaylist_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLibraryEditOperationCompletionUpdatingLibrary:andSubscribedPlaylist:completion:");
}

id objc_msgSend__handleMusicEngagementPushMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMusicEngagementPushMessage:withCompletionHandler:");
}

id objc_msgSend__handleMusicSocialPushMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMusicSocialPushMessage:withCompletionHandler:");
}

id objc_msgSend__handlePlayActivityFlushInternalTestRequestNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handlePlayActivityFlushInternalTestRequestNotification];
}

id objc_msgSend__handlePrivacyAcknowledgementErrorWithMessage_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePrivacyAcknowledgementErrorWithMessage:underlyingError:");
}

id objc_msgSend__handleRecommendationsResponseModel_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRecommendationsResponseModel:completion:");
}

id objc_msgSend__handleSagaAuthentication_finishedForReason_explicitUserAction_shouldStartInitialImport_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_handleSagaAuthentication:finishedForReason:explicitUserAction:shouldStartInitialImport:completionHandler:");
}

id objc_msgSend__handleSagaDeferredPushUpdateTask_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSagaDeferredPushUpdateTask:completion:");
}

id objc_msgSend__handleSagaPushMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSagaPushMessage:withCompletionHandler:");
}

id objc_msgSend__handleStoreBookkeeperPushMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleStoreBookkeeperPushMessage:withCompletionHandler:");
}

id objc_msgSend__handleTask_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTask:completion:");
}

id objc_msgSend__handleUpdatedBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedBag:");
}

id objc_msgSend__handleUpdatedSubscriptionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatedSubscriptionStatus:");
}

id objc_msgSend__handleUserIdentityStoreDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUserIdentityStoreDidChangeNotification:");
}

id objc_msgSend__hasValidUserIdentity_forSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasValidUserIdentity:forSourceType:");
}

id objc_msgSend__homeSharingPrefsNumberForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_homeSharingPrefsNumberForKey:");
}

id objc_msgSend__icCloudSourceToMLCloudSourceMap(void *a1, const char *a2, ...)
{
  return _[a1 _icCloudSourceToMLCloudSourceMap];
}

id objc_msgSend__icCloudSourceToMLCloudSourceMapDescription(void *a1, const char *a2, ...)
{
  return _[a1 _icCloudSourceToMLCloudSourceMapDescription];
}

id objc_msgSend__identifiersOfApplicationsWithExpiredAccessToMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 _identifiersOfApplicationsWithExpiredAccessToMediaLibrary];
}

id objc_msgSend__identifiersOfApplicationsWithGrantedAccessToMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 _identifiersOfApplicationsWithGrantedAccessToMediaLibrary];
}

id objc_msgSend__imageURLFromArtworkInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageURLFromArtworkInfo:");
}

id objc_msgSend__importAllItemArtworkWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_importAllItemArtworkWithClientIdentity:");
}

id objc_msgSend__importDataFromResponseFileURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_importDataFromResponseFileURLs:");
}

id objc_msgSend__importLyricsWithLyricsTokenMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_importLyricsWithLyricsTokenMap:");
}

id objc_msgSend__importOriginalContainerArtworkWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_importOriginalContainerArtworkWithClientIdentity:");
}

id objc_msgSend__importOriginalItemArtworkWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_importOriginalItemArtworkWithClientIdentity:");
}

id objc_msgSend__importOriginalScreenshotsWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_importOriginalScreenshotsWithClientIdentity:");
}

id objc_msgSend__importTracksFromRevision_toRevision_withItemsResponse_clientIdentity_itemsFiles_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_importTracksFromRevision:toRevision:withItemsResponse:clientIdentity:itemsFiles:");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initWithAccounts_activeAccount_baseConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithAccounts:activeAccount:baseConfiguration:");
}

id objc_msgSend__initWithConfiguration_clientIdentity_persistentID_storeID_globalPlaylistID_albumCloudLibraryID_artistCloudLibraryID_entityType_time_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_initWithConfiguration:clientIdentity:persistentID:storeID:globalPlaylistID:albumCloudLibraryID:artistCloudLi braryID:entityType:time:");
}

id objc_msgSend__initWithInitialState_finalState_computation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithInitialState:finalState:computation:");
}

id objc_msgSend__initializeAncillaryServices(void *a1, const char *a2, ...)
{
  return _[a1 _initializeAncillaryServices];
}

id objc_msgSend__initializeBTAHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _initializeBTAHandlers];
}

id objc_msgSend__initializeMappings(void *a1, const char *a2, ...)
{
  return _[a1 _initializeMappings];
}

id objc_msgSend__initializeSocialFeaturesAvailabilityIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _initializeSocialFeaturesAvailabilityIfNeeded];
}

id objc_msgSend__initiateArtworkUpload(void *a1, const char *a2, ...)
{
  return _[a1 _initiateArtworkUpload];
}

id objc_msgSend__isClientAllowedToRequestCapabilitiesForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isClientAllowedToRequestCapabilitiesForConnection:");
}

id objc_msgSend__isClientAllowedToRequestRestrictedInformationForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isClientAllowedToRequestRestrictedInformationForConnection:");
}

id objc_msgSend__isEnabledWithURLBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEnabledWithURLBag:");
}

id objc_msgSend__isNativeMusicAppInstalled(void *a1, const char *a2, ...)
{
  return _[a1 _isNativeMusicAppInstalled];
}

id objc_msgSend__isSupportedJaliscoMediaKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSupportedJaliscoMediaKind:");
}

id objc_msgSend__isValidTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValidTimeInterval:");
}

id objc_msgSend__keyValueStoreItemIdentifierForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyValueStoreItemIdentifierForItem:");
}

id objc_msgSend__kvsEntityWithKVSKey_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_kvsEntityWithKVSKey:domain:");
}

id objc_msgSend__latestAllArtistImagesMap(void *a1, const char *a2, ...)
{
  return _[a1 _latestAllArtistImagesMap];
}

id objc_msgSend__library(void *a1, const char *a2, ...)
{
  return _[a1 _library];
}

id objc_msgSend__locked_userStatesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_locked_userStatesChanged:");
}

id objc_msgSend__managedHandlerClasses(void *a1, const char *a2, ...)
{
  return _[a1 _managedHandlerClasses];
}

id objc_msgSend__mediaContentTasteCacheFilePathForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mediaContentTasteCacheFilePathForAccount:");
}

id objc_msgSend__migrateToLatestUserVersionForConfigurations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_migrateToLatestUserVersionForConfigurations:");
}

id objc_msgSend__mlRemoveSourceAttributeFromICRemoveSource(void *a1, const char *a2, ...)
{
  return _[a1 _mlRemoveSourceAttributeFromICRemoveSource];
}

id objc_msgSend__nextEvaluateSyncRulesThrottleOperationTimeKey(void *a1, const char *a2, ...)
{
  return _[a1 _nextEvaluateSyncRulesThrottleOperationTimeKey];
}

id objc_msgSend__nextJaliscoMediaPollTimeKey(void *a1, const char *a2, ...)
{
  return _[a1 _nextJaliscoMediaPollTimeKey];
}

id objc_msgSend__notifyObserversForActiveUserIdentityChanged(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversForActiveUserIdentityChanged];
}

id objc_msgSend__notifyServerStateUpdatedIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyServerStateUpdatedIfNeeded:");
}

id objc_msgSend__onQueue_addSyncBlockWithIdentifier_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_addSyncBlockWithIdentifier:block:");
}

id objc_msgSend__onQueue_retryPendingUpdateAttempt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_retryPendingUpdateAttempt:");
}

id objc_msgSend__onQueue_scheduleBlockWithIdentifier_isCheckpoint_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_scheduleBlockWithIdentifier:isCheckpoint:block:");
}

id objc_msgSend__onQueue_sendRequest_withInternalResponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_sendRequest:withInternalResponseHandler:");
}

id objc_msgSend__onQueue_setupRetrySourceForAttempt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_setupRetrySourceForAttempt:");
}

id objc_msgSend__onQueue_teardownRetrySource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_teardownRetrySource");
}

id objc_msgSend__optInMessageContentForPriorityMessageContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_optInMessageContentForPriorityMessageContent:");
}

id objc_msgSend__optInMessageForPriorityMessage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_optInMessageForPriorityMessage:completion:");
}

id objc_msgSend__parseAuthorizedAccountTokenWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseAuthorizedAccountTokenWithBytes:length:");
}

id objc_msgSend__parseBrowseListingWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseBrowseListingWithBytes:length:");
}

id objc_msgSend__parseBulkCloudArtworkInfoResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseBulkCloudArtworkInfoResponseWithBytes:length:");
}

id objc_msgSend__parseBulkCloudLyricsInfoResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseBulkCloudLyricsInfoResponseWithBytes:length:");
}

id objc_msgSend__parseCloudArtworkInfoResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseCloudArtworkInfoResponseWithBytes:length:");
}

id objc_msgSend__parseCloudLyricsInfoResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseCloudLyricsInfoResponseWithBytes:length:");
}

id objc_msgSend__parseControlInterfacesResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseControlInterfacesResponseWithBytes:length:");
}

id objc_msgSend__parseControlPromptResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseControlPromptResponseWithBytes:length:");
}

id objc_msgSend__parseDeletedIDListingWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseDeletedIDListingWithBytes:length:");
}

id objc_msgSend__parseDictionaryCollectionWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseDictionaryCollectionWithBytes:length:");
}

id objc_msgSend__parseEditCommandResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseEditCommandResponseWithBytes:length:");
}

id objc_msgSend__parseErrorResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseErrorResponseWithBytes:length:");
}

id objc_msgSend__parseItemIDArrayWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseItemIDArrayWithBytes:length:");
}

id objc_msgSend__parseItemPropertyCountWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseItemPropertyCountWithBytes:length:");
}

id objc_msgSend__parseItemsResponseWithBytes_length_usingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseItemsResponseWithBytes:length:usingHandler:");
}

id objc_msgSend__parseListingCollectionWithBytes_length_usingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseListingCollectionWithBytes:length:usingHandler:");
}

id objc_msgSend__parseListingItemWithBytes_length_usingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseListingItemWithBytes:length:usingHandler:");
}

id objc_msgSend__parseLoginResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseLoginResponseWithBytes:length:");
}

id objc_msgSend__parsePlayStatusResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parsePlayStatusResponseWithBytes:length:");
}

id objc_msgSend__parseResponseCode_bytes_length_usingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseResponseCode:bytes:length:usingHandler:");
}

id objc_msgSend__parseResponseData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseResponseData:completion:");
}

id objc_msgSend__parseUpdateResponseWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseUpdateResponseWithBytes:length:");
}

id objc_msgSend__parseUpdateTypeWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parseUpdateTypeWithBytes:length:");
}

id objc_msgSend__pendingChanges(void *a1, const char *a2, ...)
{
  return _[a1 _pendingChanges];
}

id objc_msgSend__performInitialJaliscoImportWithClientIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performInitialJaliscoImportWithClientIdentity:completion:");
}

id objc_msgSend__performInitialSagaImportWithClientIdentity_allowingNoisyAuthPrompt_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performInitialSagaImportWithClientIdentity:allowingNoisyAuthPrompt:completionHandler:");
}

id objc_msgSend__performJaliscoImportWithClientIdentity_byAddingMediaKind_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performJaliscoImportWithClientIdentity:byAddingMediaKind:completionHandler:");
}

id objc_msgSend__performMusicKitRequestWithURL_storeRequestContext_ignoreCache_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performMusicKitRequestWithURL:storeRequestContext:ignoreCache:completion:");
}

id objc_msgSend__performMusicUserProfileRequestWithUserProfileContext_ignoreCache_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performMusicUserProfileRequestWithUserProfileContext:ignoreCache:completion:");
}

id objc_msgSend__performNextItemsPageRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performNextItemsPageRequestWithCompletion:");
}

id objc_msgSend__performNotificationSyncForLibraryWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performNotificationSyncForLibraryWithUID:");
}

id objc_msgSend__performPendingOperations(void *a1, const char *a2, ...)
{
  return _[a1 _performPendingOperations];
}

id objc_msgSend__performPeriodicSubscriptionTasks(void *a1, const char *a2, ...)
{
  return _[a1 _performPeriodicSubscriptionTasks];
}

id objc_msgSend__performRecommendationsRequest(void *a1, const char *a2, ...)
{
  return _[a1 _performRecommendationsRequest];
}

id objc_msgSend__performRecommendationsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _performRecommendationsUpdate];
}

id objc_msgSend__performSyncWithBodyData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performSyncWithBodyData:completion:");
}

id objc_msgSend__performSyncWithSyncAnchor_itemsToSync_conflictDetectionType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performSyncWithSyncAnchor:itemsToSync:conflictDetectionType:completion:");
}

id objc_msgSend__performTokenRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performTokenRequest:completionHandler:");
}

id objc_msgSend__periodicPollingActivityCriteriaWithRefreshInterval_gracePeriod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_periodicPollingActivityCriteriaWithRefreshInterval:gracePeriod:");
}

id objc_msgSend__pollingGracePeriodSecondsForRefreshInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pollingGracePeriodSecondsForRefreshInterval:");
}

id objc_msgSend__pollingRefreshIntervalSecondsUsingBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pollingRefreshIntervalSecondsUsingBag:");
}

id objc_msgSend__populateMetadataValues_fromDataSourceTrack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateMetadataValues:fromDataSourceTrack:");
}

id objc_msgSend__postContentTasteChanges_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postContentTasteChanges:withCompletionHandler:");
}

id objc_msgSend__postContentTasteChangesForPendingItems(void *a1, const char *a2, ...)
{
  return _[a1 _postContentTasteChangesForPendingItems];
}

id objc_msgSend__postLibraryUpdateProgressChangedForLibraryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postLibraryUpdateProgressChangedForLibraryType:");
}

id objc_msgSend__postPendingContentTasteChangesByAddingChange_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postPendingContentTasteChangesByAddingChange:completionHandler:");
}

id objc_msgSend__precacheHomeProperties(void *a1, const char *a2, ...)
{
  return _[a1 _precacheHomeProperties];
}

id objc_msgSend__prepareArchiveWithContentTasteReponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareArchiveWithContentTasteReponse:");
}

id objc_msgSend__prepareCachedResponseFromArchiveAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareCachedResponseFromArchiveAtPath:");
}

id objc_msgSend__prepareCachedResponseFromResponse_byAddingResponseTimeIntervalKey_withResponseTimeInterval_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_prepareCachedResponseFromResponse:byAddingResponseTimeIntervalKey:withResponseTimeInterval:");
}

id objc_msgSend__prepareContentTasteResponse_withContentTasteItems_fromCachedContentTasteResponseItems_includedContentTasteItems_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_prepareContentTasteResponse:withContentTasteItems:fromCachedContentTasteResponseItems:includedContentTasteItems:");
}

id objc_msgSend__prepareLibraryForInitialUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _prepareLibraryForInitialUpdate];
}

id objc_msgSend__prepareLibraryLoadErrorWithJaliscoError_sagaError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareLibraryLoadErrorWithJaliscoError:sagaError:");
}

id objc_msgSend__preprocessURLResolutionCacheDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preprocessURLResolutionCacheDictionary:");
}

id objc_msgSend__processActiveConfigurationChange_initialSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processActiveConfigurationChange:initialSetup:");
}

id objc_msgSend__processItemsPageResponse_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processItemsPageResponse:withCompletion:");
}

id objc_msgSend__processSupportedConfigurationsChange_initialSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processSupportedConfigurationsChange:initialSetup:");
}

id objc_msgSend__queryFilterEncodedStringForDAAPNameString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queryFilterEncodedStringForDAAPNameString:");
}

id objc_msgSend__queryFilterString(void *a1, const char *a2, ...)
{
  return _[a1 _queryFilterString];
}

id objc_msgSend__queryForTracksNeedingPushWithEntityRevisionAnchor_orderingTerms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queryForTracksNeedingPushWithEntityRevisionAnchor:orderingTerms:");
}

id objc_msgSend__recomputeInUsersLibraryForTrackPids_resetFavoriteState_usingConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recomputeInUsersLibraryForTrackPids:resetFavoriteState:usingConnection:");
}

id objc_msgSend__refreshCapabilitiesWithPrivacyAcknowledgementPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshCapabilitiesWithPrivacyAcknowledgementPolicy:");
}

id objc_msgSend__refreshCloudServiceStatus(void *a1, const char *a2, ...)
{
  return _[a1 _refreshCloudServiceStatus];
}

id objc_msgSend__refreshStorefrontCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 _refreshStorefrontCountryCode];
}

id objc_msgSend__refreshStorefrontIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _refreshStorefrontIdentifier];
}

id objc_msgSend__registerAPNSToken_usingRequestContext_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerAPNSToken:usingRequestContext:withCompletion:");
}

id objc_msgSend__registerDeviceAndPerformInitialImportWithUserIdentityProperties_cloudLibraryEnableReason_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_registerDeviceAndPerformInitialImportWithUserIdentityProperties:cloudLibraryEnableReason:completionHandler:");
}

id objc_msgSend__registerFailureToRevokeMusicUserTokensForApplicationIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerFailureToRevokeMusicUserTokensForApplicationIdentifier:error:");
}

id objc_msgSend__registerFailureToRevokeMusicUserTokensForApplicationsWithIdentifiers_error_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerFailureToRevokeMusicUserTokensForApplicationsWithIdentifiers:error:");
}

id objc_msgSend__registerMediaKinds_usingRequestContext_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerMediaKinds:usingRequestContext:withCompletion:");
}

id objc_msgSend__reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadSubscriptionStatusAndEnableCloudMusicLibraryWithReason:completionHandler:");
}

id objc_msgSend__removeCloudSourcesDescription(void *a1, const char *a2, ...)
{
  return _[a1 _removeCloudSourcesDescription];
}

id objc_msgSend__removeCloudSourcesForReason_withClientIdentity_byDisablingActiveLockerAccount_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_removeCloudSourcesForReason:withClientIdentity:byDisablingActiveLockerAccount:completionHandler:");
}

id objc_msgSend__removeUnavailableSubscriptionAssetsInLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeUnavailableSubscriptionAssetsInLibrary:");
}

id objc_msgSend__requestBagWithAsynchronousRequestsGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestBagWithAsynchronousRequestsGroup:");
}

id objc_msgSend__requestBody(void *a1, const char *a2, ...)
{
  return _[a1 _requestBody];
}

id objc_msgSend__requestBodyWithPlaylistCloudLibraryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestBodyWithPlaylistCloudLibraryID:");
}

id objc_msgSend__requestBodyWithPlaylistCloudLibraryID_sharingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestBodyWithPlaylistCloudLibraryID:sharingMode:");
}

id objc_msgSend__requestCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 _requestCapabilities];
}

id objc_msgSend__requestIdentityPropertiesWithAsynchronousRequestsGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestIdentityPropertiesWithAsynchronousRequestsGroup:");
}

id objc_msgSend__requestItemProperties(void *a1, const char *a2, ...)
{
  return _[a1 _requestItemProperties];
}

id objc_msgSend__requestItemVersion(void *a1, const char *a2, ...)
{
  return _[a1 _requestItemVersion];
}

id objc_msgSend__requestSubscriptionStatusWithAsynchronousRequestsGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestSubscriptionStatusWithAsynchronousRequestsGroup:");
}

id objc_msgSend__requestWithURL_URLBagKey_timeoutInterval_additionalBodyFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestWithURL:URLBagKey:timeoutInterval:additionalBodyFields:");
}

id objc_msgSend__requestingBundleIdentifierForOriginatingClientConnection_clientInfo_error_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestingBundleIdentifierForOriginatingClientConnection:clientInfo:error:");
}

id objc_msgSend__resetInternalCloudLibraryState(void *a1, const char *a2, ...)
{
  return _[a1 _resetInternalCloudLibraryState];
}

id objc_msgSend__resizedImageDataFromLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resizedImageDataFromLocation:");
}

id objc_msgSend__resolveConflictBetweenClientPayloadPair_andServerPayloadPair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveConflictBetweenClientPayloadPair:andServerPayloadPair:");
}

id objc_msgSend__responseBodyForRequest_retryTimeout_debugName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_responseBodyForRequest:retryTimeout:debugName:");
}

id objc_msgSend__restoreCurrentTasks(void *a1, const char *a2, ...)
{
  return _[a1 _restoreCurrentTasks];
}

id objc_msgSend__retrievePreviousRecommendationMatchesFromCache(void *a1, const char *a2, ...)
{
  return _[a1 _retrievePreviousRecommendationMatchesFromCache];
}

id objc_msgSend__retryEnablingCloudMusicLibraryForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_retryEnablingCloudMusicLibraryForReason:");
}

id objc_msgSend__retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV(void *a1, const char *a2, ...)
{
  return _[a1 _retryLoadingCloudLibraryForSecondaryAccountsOnAppleTV];
}

id objc_msgSend__revertFavoritingEntityTypeAlbum(void *a1, const char *a2, ...)
{
  return _[a1 _revertFavoritingEntityTypeAlbum];
}

id objc_msgSend__revertFavoritingEntityTypeArtist(void *a1, const char *a2, ...)
{
  return _[a1 _revertFavoritingEntityTypeArtist];
}

id objc_msgSend__revertFavoritingEntityTypePlaylist(void *a1, const char *a2, ...)
{
  return _[a1 _revertFavoritingEntityTypePlaylist];
}

id objc_msgSend__revertFavoritingEntityTypeTrack(void *a1, const char *a2, ...)
{
  return _[a1 _revertFavoritingEntityTypeTrack];
}

id objc_msgSend__revertPendingFavoriteEntityForPermanentlyFailedOperation(void *a1, const char *a2, ...)
{
  return _[a1 _revertPendingFavoriteEntityForPermanentlyFailedOperation];
}

id objc_msgSend__revokeMusicUserTokensForApplicationWithIdentifier_andUserIdentity_withCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_revokeMusicUserTokensForApplicationWithIdentifier:andUserIdentity:withCompletion:");
}

id objc_msgSend__revokeMusicUserTokensForApplicationsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_revokeMusicUserTokensForApplicationsWithIdentifiers:");
}

id objc_msgSend__runSagaAuthenticateOperationWithClientIdentity_mergePreference_allowNoisyPrompt_cloudLibraryEnableReason_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_runSagaAuthenticateOperationWithClientIdentity:mergePreference:allowNoisyPrompt:cloudLibraryEnableReason:completionHandler:");
}

id objc_msgSend__sanitizedUserStatesForRemoteClientConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sanitizedUserStatesForRemoteClientConnection:");
}

id objc_msgSend__saveCurrentTasks(void *a1, const char *a2, ...)
{
  return _[a1 _saveCurrentTasks];
}

id objc_msgSend__savePendingChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_savePendingChanges:");
}

id objc_msgSend__scheduleJobNamed_withStartTime_baseBtaJob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleJobNamed:withStartTime:baseBtaJob:");
}

id objc_msgSend__scheduleNextPlayActivityFlushOperationWithCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleNextPlayActivityFlushOperationWithCriteria:");
}

id objc_msgSend__schedulePostingContentTasteForFailedItems(void *a1, const char *a2, ...)
{
  return _[a1 _schedulePostingContentTasteForFailedItems];
}

id objc_msgSend__scheduleTask_withStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleTask:withStartTime:");
}

id objc_msgSend__scheduleUpdatingContentTasteWithNewExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleUpdatingContentTasteWithNewExpirationDate];
}

id objc_msgSend__sendOptOutWithCUID_troveID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendOptOutWithCUID:troveID:");
}

id objc_msgSend__serializableRequestBodyPropertyListWithItems_syncAnchor_conflictDetectionType_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serializableRequestBodyPropertyListWithItems:syncAnchor:conflictDetectionType:");
}

id objc_msgSend__serializableUpdateItemPayloadDictionaryForEntity_withKey_withConflictDetection_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serializableUpdateItemPayloadDictionaryForEntity:withKey:withConflictDetection:");
}

id objc_msgSend__serverDatabaseRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_serverDatabaseRevision:");
}

id objc_msgSend__setCachedContentTasteResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCachedContentTasteResponse:");
}

id objc_msgSend__setCloudIDsFromResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCloudIDsFromResponse:");
}

id objc_msgSend__setEnabledTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEnabledTopics:");
}

id objc_msgSend__setHomeSharingPrefsNumber_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHomeSharingPrefsNumber:forKey:");
}

id objc_msgSend__setOrRemoveObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOrRemoveObject:forKey:");
}

id objc_msgSend__setShadowOperationForRemoteExecution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShadowOperationForRemoteExecution:");
}

id objc_msgSend__setupCacheDirectoryStructureWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCacheDirectoryStructureWithPath:");
}

id objc_msgSend__setupInternalQueues(void *a1, const char *a2, ...)
{
  return _[a1 _setupInternalQueues];
}

id objc_msgSend__setupKVO(void *a1, const char *a2, ...)
{
  return _[a1 _setupKVO];
}

id objc_msgSend__setupMPMediaLibraryFilteringForConfigurations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupMPMediaLibraryFilteringForConfigurations:");
}

id objc_msgSend__setupNotificationHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupNotificationHandlers];
}

id objc_msgSend__setupNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _setupNotifications];
}

id objc_msgSend__setupSigtermHandler(void *a1, const char *a2, ...)
{
  return _[a1 _setupSigtermHandler];
}

id objc_msgSend__setupXPCListenerForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupXPCListenerForService:");
}

id objc_msgSend__shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection_forIncomingCloudServiceCapabilitiesRequest_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_shouldBypassEnforcementOfPrivacyAcknowledgementForClientConnection:forIncomingCloudServiceCapabilitiesRequest:");
}

id objc_msgSend__shouldHandleDaemonStartupOrAccountChangedNotificationWithProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldHandleDaemonStartupOrAccountChangedNotificationWithProperties:");
}

id objc_msgSend__sizeForArtworkWithMediaType_artworkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sizeForArtworkWithMediaType:artworkType:");
}

id objc_msgSend__sqlQueryStringForItemsNeedingPush(void *a1, const char *a2, ...)
{
  return _[a1 _sqlQueryStringForItemsNeedingPush];
}

id objc_msgSend__standardBodyDictionaryWithAdditionalFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_standardBodyDictionaryWithAdditionalFields:");
}

id objc_msgSend__startAncillaryServices(void *a1, const char *a2, ...)
{
  return _[a1 _startAncillaryServices];
}

id objc_msgSend__startGeniusRequestWithStartDate_retryTimeout_debugName_connectionResponseBlock_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startGeniusRequestWithStartDate:retryTimeout:debugName:connectionResponseBlock:");
}

id objc_msgSend__startTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTask:");
}

id objc_msgSend__stateDump(void *a1, const char *a2, ...)
{
  return _[a1 _stateDump];
}

id objc_msgSend__stopAncillaryServices(void *a1, const char *a2, ...)
{
  return _[a1 _stopAncillaryServices];
}

id objc_msgSend__stopTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopTask:");
}

id objc_msgSend__storeRequestContext(void *a1, const char *a2, ...)
{
  return _[a1 _storeRequestContext];
}

id objc_msgSend__storeRequestContextFromUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeRequestContextFromUserIdentity:");
}

id objc_msgSend__storeRequestContextWithIdentity_applicationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeRequestContextWithIdentity:applicationIdentifier:");
}

id objc_msgSend__supportedJaliscoMediaKinds(void *a1, const char *a2, ...)
{
  return _[a1 _supportedJaliscoMediaKinds];
}

id objc_msgSend__supportedJaliscoMediaKindsWithSagaEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _supportedJaliscoMediaKindsWithSagaEnabled];
}

id objc_msgSend__supportedMediaKindsDatabasePropertyValue(void *a1, const char *a2, ...)
{
  return _[a1 _supportedMediaKindsDatabasePropertyValue];
}

id objc_msgSend__synchronize(void *a1, const char *a2, ...)
{
  return _[a1 _synchronize];
}

id objc_msgSend__synchronouslyLoadArtistUpdatePollingFrequencyFromBag(void *a1, const char *a2, ...)
{
  return _[a1 _synchronouslyLoadArtistUpdatePollingFrequencyFromBag];
}

id objc_msgSend__taskWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_taskWithName:");
}

id objc_msgSend__tearDownKVO(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownKVO];
}

id objc_msgSend__tearDownNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownNotifications];
}

id objc_msgSend__timeIntervalForNextFlushOperationWithReplyBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timeIntervalForNextFlushOperationWithReplyBlock:");
}

id objc_msgSend__transitionAppleTVToParallelMultiUserLibraryManagementPolicy(void *a1, const char *a2, ...)
{
  return _[a1 _transitionAppleTVToParallelMultiUserLibraryManagementPolicy];
}

id objc_msgSend__tryEnablingCloudMusicLibraryForReason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tryEnablingCloudMusicLibraryForReason:completionHandler:");
}

id objc_msgSend__tryEnablingICMLOnDevicesSupportingSideLoadedContentWithProperties_reason_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_tryEnablingICMLOnDevicesSupportingSideLoadedContentWithProperties:reason:withCompletionHandler:");
}

id objc_msgSend__unsafeBackend(void *a1, const char *a2, ...)
{
  return _[a1 _unsafeBackend];
}

id objc_msgSend__unscheduleJobNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unscheduleJobNamed:");
}

id objc_msgSend__unscheduleTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unscheduleTask:");
}

id objc_msgSend__updateAccountServerCachedData(void *a1, const char *a2, ...)
{
  return _[a1 _updateAccountServerCachedData];
}

id objc_msgSend__updateAirPlaySettingsForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAirPlaySettingsForConfiguration:");
}

id objc_msgSend__updateAllArtistStoreIDsUsingAllArtistImagesMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAllArtistStoreIDsUsingAllArtistImagesMap:");
}

id objc_msgSend__updateAllowsExplicitContentSettingForConfiguration_automatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAllowsExplicitContentSettingForConfiguration:automatically:");
}

id objc_msgSend__updateAutomaticDownloadsPreference(void *a1, const char *a2, ...)
{
  return _[a1 _updateAutomaticDownloadsPreference];
}

id objc_msgSend__updateContentTasteForAlbumArtistItems_musicLibrary_mediaLibrary_withCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentTasteForAlbumArtistItems:musicLibrary:mediaLibrary:withCompletion:");
}

id objc_msgSend__updateContentTasteForGlobalPlaylists_musicLibrary_mediaLibrary_withCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentTasteForGlobalPlaylists:musicLibrary:mediaLibrary:withCompletion:");
}

id objc_msgSend__updateContentTasteForItem_invalidatingLocalCache_configuration_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentTasteForItem:invalidatingLocalCache:configuration:withCompletionHandler:");
}

id objc_msgSend__updateContentTasteForMediaItems_musicLibrary_mediaLibrary_withCompletion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentTasteForMediaItems:musicLibrary:mediaLibrary:withCompletion:");
}

id objc_msgSend__updateDatabaseByResetingSyncEntityRevisionForItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDatabaseByResetingSyncEntityRevisionForItemsWithIdentifiers:");
}

id objc_msgSend__updateEnhancedAudioAvailabilityIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updateEnhancedAudioAvailabilityIfNeeded];
}

id objc_msgSend__updateGlobalPlaylistsFromContainersPayloadAtPath_downloadPathForSubscribedContainersPayload_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_updateGlobalPlaylistsFromContainersPayloadAtPath:downloadPathForSubscribedContainersPayload:");
}

id objc_msgSend__updateHTTPCookieStoreForContentRestrictions(void *a1, const char *a2, ...)
{
  return _[a1 _updateHTTPCookieStoreForContentRestrictions];
}

id objc_msgSend__updateJaliscoLibraryWithClientIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateJaliscoLibraryWithClientIdentity:completion:");
}

id objc_msgSend__updateLibrary(void *a1, const char *a2, ...)
{
  return _[a1 _updateLibrary];
}

id objc_msgSend__updateMediaRemoteCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMediaRemoteCommands:");
}

id objc_msgSend__updateOptInIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _updateOptInIfNecessary];
}

id objc_msgSend__updateProgressWithItemsProgress_albumsProgress_artistsProgress_playlistProgress_importerProgress_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_updateProgressWithItemsProgress:albumsProgress:artistsProgress:playlistProgress:importerProgress:");
}

id objc_msgSend__updatePushNotificationsRegistration(void *a1, const char *a2, ...)
{
  return _[a1 _updatePushNotificationsRegistration];
}

id objc_msgSend__updateRegistrationForConfiguration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRegistrationForConfiguration:completion:");
}

id objc_msgSend__updateSagaLibraryWithReason_allowNoisyAuthPrompt_forConfiguration_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSagaLibraryWithReason:allowNoisyAuthPrompt:forConfiguration:completionHandler:");
}

id objc_msgSend__updateSocialFeaturesAvailabilityIfNeededUsingBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSocialFeaturesAvailabilityIfNeededUsingBag:");
}

id objc_msgSend__updateSpecificArtistStoreIDsUsingAllArtistImagesMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSpecificArtistStoreIDsUsingAllArtistImagesMap:");
}

id objc_msgSend__updateStateWithChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStateWithChange:");
}

id objc_msgSend__updateSupportedConfigurationsDSIDs(void *a1, const char *a2, ...)
{
  return _[a1 _updateSupportedConfigurationsDSIDs];
}

id objc_msgSend__updateSupportedConfigurationsWithAccounts_activeConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSupportedConfigurationsWithAccounts:activeConfiguration:");
}

id objc_msgSend__updateUbiquitousDatabaseWithEntity_syncRevision_usingConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateUbiquitousDatabaseWithEntity:syncRevision:usingConnection:");
}

id objc_msgSend__updateWithBag_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWithBag:error:");
}

id objc_msgSend__updateWithCapabilities_error_privacyAcknowledgementPolicy_capabilitiesRequestOperation_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWithCapabilities:error:privacyAcknowledgementPolicy:capabilitiesRequestOperation:");
}

id objc_msgSend__updateWithIdentityProperties_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWithIdentityProperties:error:");
}

id objc_msgSend__updateWithStorefrontIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWithStorefrontIdentifier:error:");
}

id objc_msgSend__updateWithSubscriptionStatusResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWithSubscriptionStatusResponse:error:");
}

id objc_msgSend__updatedUserStateFromState_withUserProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatedUserStateFromState:withUserProfile:");
}

id objc_msgSend__uploadArtworkAssetWithInfo_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uploadArtworkAssetWithInfo:completionHandler:");
}

id objc_msgSend__uploadArtworkAssetWithInfo_uploadResponsesURL_uploadResponseData_postUploadBackOffDelay_followupDownloadRequestsURL_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_uploadArtworkAssetWithInfo:uploadResponsesURL:uploadResponseData:postUploadBackOffDelay:followupDownloadRequestsURL:");
}

id objc_msgSend__uploadLibrary(void *a1, const char *a2, ...)
{
  return _[a1 _uploadLibrary];
}

id objc_msgSend__urlResolutionCacheFilePath(void *a1, const char *a2, ...)
{
  return _[a1 _urlResolutionCacheFilePath];
}

id objc_msgSend__userIdentity(void *a1, const char *a2, ...)
{
  return _[a1 _userIdentity];
}

id objc_msgSend__userIdentityForAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userIdentityForAccount:");
}

id objc_msgSend__userStateAccessForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userStateAccessForConnection:");
}

id objc_msgSend__wasRestoredFromCloudBackup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_wasRestoredFromCloudBackup:");
}

id objc_msgSend__wrapAndCacheResponseModelWithCompiledMLModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_wrapAndCacheResponseModelWithCompiledMLModel:");
}

id objc_msgSend__writeURLResolutionCacheFileUsingBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeURLResolutionCacheFileUsingBag:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_acceptsGzipEncoding(void *a1, const char *a2, ...)
{
  return _[a1 acceptsGzipEncoding];
}

id objc_msgSend_accessQueue(void *a1, const char *a2, ...)
{
  return _[a1 accessQueue];
}

id objc_msgSend_accountDSID(void *a1, const char *a2, ...)
{
  return _[a1 accountDSID];
}

id objc_msgSend_accountManager(void *a1, const char *a2, ...)
{
  return _[a1 accountManager];
}

id objc_msgSend_accountlessHandler(void *a1, const char *a2, ...)
{
  return _[a1 accountlessHandler];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionMetricsEvent(void *a1, const char *a2, ...)
{
  return _[a1 actionMetricsEvent];
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return _[a1 actionType];
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeAccount];
}

id objc_msgSend_activeAccountDidChange(void *a1, const char *a2, ...)
{
  return _[a1 activeAccountDidChange];
}

id objc_msgSend_activeConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 activeConfiguration];
}

id objc_msgSend_activeConfigurationChanged(void *a1, const char *a2, ...)
{
  return _[a1 activeConfigurationChanged];
}

id objc_msgSend_activeConfigurationDSID(void *a1, const char *a2, ...)
{
  return _[a1 activeConfigurationDSID];
}

id objc_msgSend_activeLockerAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeLockerAccount];
}

id objc_msgSend_activeStoreAccountWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeStoreAccountWithError:");
}

id objc_msgSend_activeUser(void *a1, const char *a2, ...)
{
  return _[a1 activeUser];
}

id objc_msgSend_activityCriteriaForTask_startTimeInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityCriteriaForTask:startTimeInSeconds:");
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return _[a1 adamID];
}

id objc_msgSend_adamIDToSagaIDMap(void *a1, const char *a2, ...)
{
  return _[a1 adamIDToSagaIDMap];
}

id objc_msgSend_adamId(void *a1, const char *a2, ...)
{
  return _[a1 adamId];
}

id objc_msgSend_addActionDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addActionDetails:");
}

id objc_msgSend_addArtistContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArtistContent:");
}

id objc_msgSend_addAsset_shouldPreloadKeys_waitForKeyIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAsset:shouldPreloadKeys:waitForKeyIdentifiers:");
}

id objc_msgSend_addBackgroundOperation_forLibraryType_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBackgroundOperation:forLibraryType:priority:");
}

id objc_msgSend_addBackgroundOperation_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBackgroundOperation:priority:");
}

id objc_msgSend_addBarrierBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBarrierBlock:");
}

id objc_msgSend_addCatalogContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCatalogContent:");
}

id objc_msgSend_addCloudItemID_idType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCloudItemID:idType:");
}

id objc_msgSend_addCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletionHandler:");
}

id objc_msgSend_addContentFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContentFeatures:");
}

id objc_msgSend_addContentPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContentPages:");
}

id objc_msgSend_addContentParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContentParameters:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDependency:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addGeniusPlaylistWithPersistentID_name_seedItemIDs_itemIDs_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "addGeniusPlaylistWithPersistentID:name:seedItemIDs:itemIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_addImages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addImages:");
}

id objc_msgSend_addItemWithSagaID_toPlaylistWithPersistentID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItemWithSagaID:toPlaylistWithPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_addItemWithSagaID_toPlaylistWithPersistentID_requestingBundleID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "addItemWithSagaID:toPlaylistWithPersistentID:requestingBundleID:clientIdentity:completionHandler:");
}

id objc_msgSend_addMessageActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMessageActions:");
}

id objc_msgSend_addMessageEntry_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMessageEntry:completion:");
}

id objc_msgSend_addNonLibraryOwnedPlaylistsWithGlobalIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOperation_forLibraryType_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:forLibraryType:priority:");
}

id objc_msgSend_addOperation_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:priority:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperations:");
}

id objc_msgSend_addPendingChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPendingChange:");
}

id objc_msgSend_addStoreItemIDs_andAddTracksToCloudLibrary_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:");
}

id objc_msgSend_addStoreItemWithAdamID_referral_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStoreItemWithAdamID:referral:clientIdentity:completionHandler:");
}

id objc_msgSend_addStoreItemWithAdamID_referral_toPlaylistWithPersistentID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_addStoreItemWithOpaqueID_requestingBundleID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStoreItemWithOpaqueID:requestingBundleID:clientIdentity:completionHandler:");
}

id objc_msgSend_addStoreItemWithOpaqueID_toPlaylistWithPersistentID_requestingBundleID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "addStoreItemWithOpaqueID:toPlaylistWithPersistentID:requestingBundleID:clientIdentity:completionHandler:");
}

id objc_msgSend_addStorePlaylistWithGlobalID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStorePlaylistWithGlobalID:clientIdentity:completionHandler:");
}

id objc_msgSend_addSubrules_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubrules:");
}

id objc_msgSend_addTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:");
}

id objc_msgSend_addToLibraryWhenFavoritingBehavior(void *a1, const char *a2, ...)
{
  return _[a1 addToLibraryWhenFavoritingBehavior];
}

id objc_msgSend_addToPlaylistBehavior(void *a1, const char *a2, ...)
{
  return _[a1 addToPlaylistBehavior];
}

id objc_msgSend_addValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValue:");
}

id objc_msgSend_addedItems(void *a1, const char *a2, ...)
{
  return _[a1 addedItems];
}

id objc_msgSend_ageVerificationStateForUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ageVerificationStateForUserIdentity:");
}

id objc_msgSend_aggregateLibraryRecommendationMetricsFromSnapshots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aggregateLibraryRecommendationMetricsFromSnapshots:");
}

id objc_msgSend_album(void *a1, const char *a2, ...)
{
  return _[a1 album];
}

id objc_msgSend_albumAdamID(void *a1, const char *a2, ...)
{
  return _[a1 albumAdamID];
}

id objc_msgSend_albumArtistPersistentIDsToUpdate(void *a1, const char *a2, ...)
{
  return _[a1 albumArtistPersistentIDsToUpdate];
}

id objc_msgSend_albumMetadataDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 albumMetadataDescriptor];
}

id objc_msgSend_allArtistImagesMapCacheFilePathURL(void *a1, const char *a2, ...)
{
  return _[a1 allArtistImagesMapCacheFilePathURL];
}

id objc_msgSend_allArtistImagesMapURL(void *a1, const char *a2, ...)
{
  return _[a1 allArtistImagesMapURL];
}

id objc_msgSend_allGeniusPlaylistPropertiesWithML3ContainerProperties(void *a1, const char *a2, ...)
{
  return _[a1 allGeniusPlaylistPropertiesWithML3ContainerProperties];
}

id objc_msgSend_allGeniusTrackPropertiesWithML3TrackProperties(void *a1, const char *a2, ...)
{
  return _[a1 allGeniusTrackPropertiesWithML3TrackProperties];
}

id objc_msgSend_allHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 allHTTPHeaderFields];
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 allHeaderFields];
}

id objc_msgSend_allItems(void *a1, const char *a2, ...)
{
  return _[a1 allItems];
}

id objc_msgSend_allItemsQueryWithLibrary_predicate_orderingTerms_usingSections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allLibraries(void *a1, const char *a2, ...)
{
  return _[a1 allLibraries];
}

id objc_msgSend_allML3ContainerPropertiesWithGeniusPlaylistProperties(void *a1, const char *a2, ...)
{
  return _[a1 allML3ContainerPropertiesWithGeniusPlaylistProperties];
}

id objc_msgSend_allML3TrackPropertiesWithGeniusTrackProperties(void *a1, const char *a2, ...)
{
  return _[a1 allML3TrackPropertiesWithGeniusTrackProperties];
}

id objc_msgSend_allMediaDownloadLibraryIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 allMediaDownloadLibraryIdentifiers];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allStoreAccountsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allStoreAccountsWithError:");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowLowAffinityRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 allowLowAffinityRecommendations];
}

id objc_msgSend_allowNoisyAuthPrompt(void *a1, const char *a2, ...)
{
  return _[a1 allowNoisyAuthPrompt];
}

id objc_msgSend_allowsCellularData(void *a1, const char *a2, ...)
{
  return _[a1 allowsCellularData];
}

id objc_msgSend_allowsExplicitContent(void *a1, const char *a2, ...)
{
  return _[a1 allowsExplicitContent];
}

id objc_msgSend_allowsMusicVideos(void *a1, const char *a2, ...)
{
  return _[a1 allowsMusicVideos];
}

id objc_msgSend_alternateDSID(void *a1, const char *a2, ...)
{
  return _[a1 alternateDSID];
}

id objc_msgSend_amsPushHandler(void *a1, const char *a2, ...)
{
  return _[a1 amsPushHandler];
}

id objc_msgSend_anonymousListener(void *a1, const char *a2, ...)
{
  return _[a1 anonymousListener];
}

id objc_msgSend_anyInLibrary_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyInLibrary:predicate:");
}

id objc_msgSend_anyInLibrary_predicate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyInLibrary:predicate:options:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_applicationMessage(void *a1, const char *a2, ...)
{
  return _[a1 applicationMessage];
}

id objc_msgSend_apsPayload(void *a1, const char *a2, ...)
{
  return _[a1 apsPayload];
}

id objc_msgSend_archiveRequest_withResponse_responseData_performanceMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archiveRequest:withResponse:responseData:performanceMetrics:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayForBagKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayForBagKey:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_artist(void *a1, const char *a2, ...)
{
  return _[a1 artist];
}

id objc_msgSend_artistAdamID(void *a1, const char *a2, ...)
{
  return _[a1 artistAdamID];
}

id objc_msgSend_artistContentAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artistContentAtIndex:");
}

id objc_msgSend_artistContentsCount(void *a1, const char *a2, ...)
{
  return _[a1 artistContentsCount];
}

id objc_msgSend_artistMetadataDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 artistMetadataDescriptor];
}

id objc_msgSend_artistName(void *a1, const char *a2, ...)
{
  return _[a1 artistName];
}

id objc_msgSend_artistNameLibraryMatchURL(void *a1, const char *a2, ...)
{
  return _[a1 artistNameLibraryMatchURL];
}

id objc_msgSend_artistPersistentIDsToUpdate(void *a1, const char *a2, ...)
{
  return _[a1 artistPersistentIDsToUpdate];
}

id objc_msgSend_artworkColorAnalysisAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 artworkColorAnalysisAccessQueue];
}

id objc_msgSend_artworkColorAnalysisOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 artworkColorAnalysisOperationQueue];
}

id objc_msgSend_artworkDataSource(void *a1, const char *a2, ...)
{
  return _[a1 artworkDataSource];
}

id objc_msgSend_artworkDownloadAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 artworkDownloadAccessQueue];
}

id objc_msgSend_artworkDownloadOperationMap(void *a1, const char *a2, ...)
{
  return _[a1 artworkDownloadOperationMap];
}

id objc_msgSend_artworkDownloadOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 artworkDownloadOperationQueue];
}

id objc_msgSend_artworkDownloadSession(void *a1, const char *a2, ...)
{
  return _[a1 artworkDownloadSession];
}

id objc_msgSend_artworkDownloadWatchdog(void *a1, const char *a2, ...)
{
  return _[a1 artworkDownloadWatchdog];
}

id objc_msgSend_artworkImporter(void *a1, const char *a2, ...)
{
  return _[a1 artworkImporter];
}

id objc_msgSend_artworkInfoDictionaries(void *a1, const char *a2, ...)
{
  return _[a1 artworkInfoDictionaries];
}

id objc_msgSend_artworkInfos(void *a1, const char *a2, ...)
{
  return _[a1 artworkInfos];
}

id objc_msgSend_artworkMediaType(void *a1, const char *a2, ...)
{
  return _[a1 artworkMediaType];
}

id objc_msgSend_artworkRelativePathFromToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkRelativePathFromToken:");
}

id objc_msgSend_artworkToken(void *a1, const char *a2, ...)
{
  return _[a1 artworkToken];
}

id objc_msgSend_artworkTokenForArtistHeroURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkTokenForArtistHeroURL:");
}

id objc_msgSend_artworkTokenForChapterWithItemPID_retrievalTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkTokenForChapterWithItemPID:retrievalTime:");
}

id objc_msgSend_artworkTokenForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkTokenForSource:");
}

id objc_msgSend_artworkType(void *a1, const char *a2, ...)
{
  return _[a1 artworkType];
}

id objc_msgSend_artworkURLWithSize_cropStyle_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkURLWithSize:cropStyle:format:");
}

id objc_msgSend_artworkURLWithSize_cropStyle_format_preferP3ColorSpace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkURLWithSize:cropStyle:format:preferP3ColorSpace:");
}

id objc_msgSend_assetFileSize(void *a1, const char *a2, ...)
{
  return _[a1 assetFileSize];
}

id objc_msgSend_assetURL(void *a1, const char *a2, ...)
{
  return _[a1 assetURL];
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audioQualityPreference(void *a1, const char *a2, ...)
{
  return _[a1 audioQualityPreference];
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _[a1 auditToken];
}

id objc_msgSend_authenticateFailureCode(void *a1, const char *a2, ...)
{
  return _[a1 authenticateFailureCode];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_autoPlayMode(void *a1, const char *a2, ...)
{
  return _[a1 autoPlayMode];
}

id objc_msgSend_automaticDownloadMediaKindsForMusic(void *a1, const char *a2, ...)
{
  return _[a1 automaticDownloadMediaKindsForMusic];
}

id objc_msgSend_automaticDownloadsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 automaticDownloadsEnabled];
}

id objc_msgSend_autoupdatingActiveAccount(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingActiveAccount];
}

id objc_msgSend_autoupdatingSharedLibrary(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingSharedLibrary];
}

id objc_msgSend_averagePlaysPerItemAdded(void *a1, const char *a2, ...)
{
  return _[a1 averagePlaysPerItemAdded];
}

id objc_msgSend_backgroundTaskManager(void *a1, const char *a2, ...)
{
  return _[a1 backgroundTaskManager];
}

id objc_msgSend_badgeActionMetricsEventForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeActionMetricsEventForIdentifier:");
}

id objc_msgSend_badgeActionMetricsEventPathForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeActionMetricsEventPathForIdentifier:");
}

id objc_msgSend_badgeAppWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeAppWithRequest:");
}

id objc_msgSend_badgeControllerProtocol(void *a1, const char *a2, ...)
{
  return _[a1 badgeControllerProtocol];
}

id objc_msgSend_badgeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 badgeIdentifier];
}

id objc_msgSend_bag(void *a1, const char *a2, ...)
{
  return _[a1 bag];
}

id objc_msgSend_bagForProfile_profileVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagForProfile:profileVersion:");
}

id objc_msgSend_bagProfile(void *a1, const char *a2, ...)
{
  return _[a1 bagProfile];
}

id objc_msgSend_bagProfileVersion(void *a1, const char *a2, ...)
{
  return _[a1 bagProfileVersion];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_baseURL(void *a1, const char *a2, ...)
{
  return _[a1 baseURL];
}

id objc_msgSend_becomeActive(void *a1, const char *a2, ...)
{
  return _[a1 becomeActive];
}

id objc_msgSend_becomeInactiveWithDeauthentication_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeInactiveWithDeauthentication:completion:");
}

id objc_msgSend_beginCollaborationUsingPlaylistWithPersistentID_sharingMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginCollaborationUsingPlaylistWithPersistentID:sharingMode:completion:");
}

id objc_msgSend_beginObservingBagWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingBagWithHandler:");
}

id objc_msgSend_beginObservingSubscriptionStatusWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingSubscriptionStatusWithHandler:");
}

id objc_msgSend_beginPerformUpdate(void *a1, const char *a2, ...)
{
  return _[a1 beginPerformUpdate];
}

id objc_msgSend_beginTransaction(void *a1, const char *a2, ...)
{
  return _[a1 beginTransaction];
}

id objc_msgSend_beginTransactionWithItemsToSyncWithDomain_enumerationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginTransactionWithItemsToSyncWithDomain:enumerationBlock:");
}

id objc_msgSend_bitDepth(void *a1, const char *a2, ...)
{
  return _[a1 bitDepth];
}

id objc_msgSend_bitRate(void *a1, const char *a2, ...)
{
  return _[a1 bitRate];
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_bodyContentFormat(void *a1, const char *a2, ...)
{
  return _[a1 bodyContentFormat];
}

id objc_msgSend_bodyData(void *a1, const char *a2, ...)
{
  return _[a1 bodyData];
}

id objc_msgSend_bodyDataURL(void *a1, const char *a2, ...)
{
  return _[a1 bodyDataURL];
}

id objc_msgSend_bookmarkTime(void *a1, const char *a2, ...)
{
  return _[a1 bookmarkTime];
}

id objc_msgSend_bookmarkTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 bookmarkTimestamp];
}

id objc_msgSend_books(void *a1, const char *a2, ...)
{
  return _[a1 books];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLForKey_accountID_updateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:accountID:updateBlock:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_buildFeatures(void *a1, const char *a2, ...)
{
  return _[a1 buildFeatures];
}

id objc_msgSend_buildIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 buildIdentifier];
}

id objc_msgSend_buildURLRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildURLRequestWithCompletionHandler:");
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return _[a1 buildVersion];
}

id objc_msgSend_bulkArtistNameLibraryMatchBatchSize(void *a1, const char *a2, ...)
{
  return _[a1 bulkArtistNameLibraryMatchBatchSize];
}

id objc_msgSend_bulkArtistNameLibraryMatchURL(void *a1, const char *a2, ...)
{
  return _[a1 bulkArtistNameLibraryMatchURL];
}

id objc_msgSend_bulkRefreshWaitInterval(void *a1, const char *a2, ...)
{
  return _[a1 bulkRefreshWaitInterval];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleRecordForAuditToken_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleRecordForAuditToken:error:");
}

id objc_msgSend_bypassBagSanityChecks(void *a1, const char *a2, ...)
{
  return _[a1 bypassBagSanityChecks];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cacheKey(void *a1, const char *a2, ...)
{
  return _[a1 cacheKey];
}

id objc_msgSend_cachedSharedControlsCapability(void *a1, const char *a2, ...)
{
  return _[a1 cachedSharedControlsCapability];
}

id objc_msgSend_cachingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 cachingEnabled];
}

id objc_msgSend_callCompletionHandlers(void *a1, const char *a2, ...)
{
  return _[a1 callCompletionHandlers];
}

id objc_msgSend_canShowCloudDownloadButtons(void *a1, const char *a2, ...)
{
  return _[a1 canShowCloudDownloadButtons];
}

id objc_msgSend_canShowCloudMusic(void *a1, const char *a2, ...)
{
  return _[a1 canShowCloudMusic];
}

id objc_msgSend_canShowCloudVideo(void *a1, const char *a2, ...)
{
  return _[a1 canShowCloudVideo];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAllImports(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllImports];
}

id objc_msgSend_cancelAllImportsAndWaitForOperationsToFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAllImportsAndWaitForOperationsToFinish:");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllOperations];
}

id objc_msgSend_cancelAllOperationsAndClearPendingChangesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAllOperationsAndClearPendingChangesWithCompletionHandler:");
}

id objc_msgSend_cancelAllOperationsAndWaitForOperationsToFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAllOperationsAndWaitForOperationsToFinish:");
}

id objc_msgSend_cancelDownloads_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelDownloads:");
}

id objc_msgSend_cancelImportOperation_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelImportOperation:completionHandler:");
}

id objc_msgSend_cancelOperationsByClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelOperationsByClass:");
}

id objc_msgSend_cancelOperationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelOperationsWithCompletionHandler:");
}

id objc_msgSend_cancelPendingChanges(void *a1, const char *a2, ...)
{
  return _[a1 cancelPendingChanges];
}

id objc_msgSend_cancelPendingChangesForLibraryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPendingChangesForLibraryType:");
}

id objc_msgSend_cancelPendingChangesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPendingChangesWithCompletion:");
}

id objc_msgSend_cancelRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRequest:");
}

id objc_msgSend_cancelUpdatesForToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelUpdatesForToken:");
}

id objc_msgSend_canonicalResponseForResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canonicalResponseForResponse:");
}

id objc_msgSend_canonicalTimestampFromTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canonicalTimestampFromTimeInterval:");
}

id objc_msgSend_capabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capabilitiesDidChange:");
}

id objc_msgSend_carrierBundleDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 carrierBundleDeviceIdentifier];
}

id objc_msgSend_catalogContentAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "catalogContentAtIndex:");
}

id objc_msgSend_catalogContents(void *a1, const char *a2, ...)
{
  return _[a1 catalogContents];
}

id objc_msgSend_catalogContentsCount(void *a1, const char *a2, ...)
{
  return _[a1 catalogContentsCount];
}

id objc_msgSend_categoryWithIdentifier_actions_intentIdentifiers_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "categoryWithIdentifier:actions:intentIdentifiers:options:");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_changeLibraryManagementPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeLibraryManagementPolicy:");
}

id objc_msgSend_changeLibraryManagementPolicy_withAccountsStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeLibraryManagementPolicy:withAccountsStateChange:");
}

id objc_msgSend_channelLayoutDescription(void *a1, const char *a2, ...)
{
  return _[a1 channelLayoutDescription];
}

id objc_msgSend_checkInDatabaseConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkInDatabaseConnection:");
}

id objc_msgSend_checkoutReaderConnection(void *a1, const char *a2, ...)
{
  return _[a1 checkoutReaderConnection];
}

id objc_msgSend_cleanupArtworkWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupArtworkWithOptions:");
}

id objc_msgSend_cleanupArtworkWithOptions_usingConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupArtworkWithOptions:usingConnection:");
}

id objc_msgSend_clearAllCloudKVSData(void *a1, const char *a2, ...)
{
  return _[a1 clearAllCloudKVSData];
}

id objc_msgSend_clearAllGeniusData(void *a1, const char *a2, ...)
{
  return _[a1 clearAllGeniusData];
}

id objc_msgSend_clearArtistContents(void *a1, const char *a2, ...)
{
  return _[a1 clearArtistContents];
}

id objc_msgSend_clearBadgeActionMetricsEventForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearBadgeActionMetricsEventForIdentifier:");
}

id objc_msgSend_clearCatalogContents(void *a1, const char *a2, ...)
{
  return _[a1 clearCatalogContents];
}

id objc_msgSend_clearContentFeatures(void *a1, const char *a2, ...)
{
  return _[a1 clearContentFeatures];
}

id objc_msgSend_clearJaliscoAccountID(void *a1, const char *a2, ...)
{
  return _[a1 clearJaliscoAccountID];
}

id objc_msgSend_clearJaliscoLastExcludedMediaKinds(void *a1, const char *a2, ...)
{
  return _[a1 clearJaliscoLastExcludedMediaKinds];
}

id objc_msgSend_clearLocationFromLibrary_persistentIDs_disableKeepLocal_usingConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearLocationFromLibrary:persistentIDs:disableKeepLocal:usingConnection:");
}

id objc_msgSend_clearNeedsUpdateForTokens(void *a1, const char *a2, ...)
{
  return _[a1 clearNeedsUpdateForTokens];
}

id objc_msgSend_clearSagaClientFeaturesVersion(void *a1, const char *a2, ...)
{
  return _[a1 clearSagaClientFeaturesVersion];
}

id objc_msgSend_clearSagaCloudLibraryCUID(void *a1, const char *a2, ...)
{
  return _[a1 clearSagaCloudLibraryCUID];
}

id objc_msgSend_clearSagaCloudLibraryTroveID(void *a1, const char *a2, ...)
{
  return _[a1 clearSagaCloudLibraryTroveID];
}

id objc_msgSend_clearShouldForceServerToUseDAAPDebugFeatures(void *a1, const char *a2, ...)
{
  return _[a1 clearShouldForceServerToUseDAAPDebugFeatures];
}

id objc_msgSend_clearValues(void *a1, const char *a2, ...)
{
  return _[a1 clearValues];
}

id objc_msgSend_clientFeaturesVersion(void *a1, const char *a2, ...)
{
  return _[a1 clientFeaturesVersion];
}

id objc_msgSend_clientIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientIdentifier];
}

id objc_msgSend_clientIdentity(void *a1, const char *a2, ...)
{
  return _[a1 clientIdentity];
}

id objc_msgSend_clientInfo(void *a1, const char *a2, ...)
{
  return _[a1 clientInfo];
}

id objc_msgSend_clientInfoForMusicKitRequestWithClientIdentifier_clientVersion_bundleIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:");
}

id objc_msgSend_clientInterface(void *a1, const char *a2, ...)
{
  return _[a1 clientInterface];
}

id objc_msgSend_clientVersion(void *a1, const char *a2, ...)
{
  return _[a1 clientVersion];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeFile(void *a1, const char *a2, ...)
{
  return _[a1 closeFile];
}

id objc_msgSend_cloudAddRequestWithDatabaseID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudAddRequestWithDatabaseID:");
}

id objc_msgSend_cloudAlbumID(void *a1, const char *a2, ...)
{
  return _[a1 cloudAlbumID];
}

id objc_msgSend_cloudArtworkInfoDictionaries(void *a1, const char *a2, ...)
{
  return _[a1 cloudArtworkInfoDictionaries];
}

id objc_msgSend_cloudBadgingService(void *a1, const char *a2, ...)
{
  return _[a1 cloudBadgingService];
}

id objc_msgSend_cloudEntity(void *a1, const char *a2, ...)
{
  return _[a1 cloudEntity];
}

id objc_msgSend_cloudID(void *a1, const char *a2, ...)
{
  return _[a1 cloudID];
}

id objc_msgSend_cloudIDToLyricsTokenMap(void *a1, const char *a2, ...)
{
  return _[a1 cloudIDToLyricsTokenMap];
}

id objc_msgSend_cloudLibraryStateReason(void *a1, const char *a2, ...)
{
  return _[a1 cloudLibraryStateReason];
}

id objc_msgSend_cloudPlaylistID(void *a1, const char *a2, ...)
{
  return _[a1 cloudPlaylistID];
}

id objc_msgSend_cloudServiceStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 cloudServiceStatusMonitor];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_codecString(void *a1, const char *a2, ...)
{
  return _[a1 codecString];
}

id objc_msgSend_collaborationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 collaborationAllowed];
}

id objc_msgSend_collaborationCloudLibraryID(void *a1, const char *a2, ...)
{
  return _[a1 collaborationCloudLibraryID];
}

id objc_msgSend_collaborationGlobalID(void *a1, const char *a2, ...)
{
  return _[a1 collaborationGlobalID];
}

id objc_msgSend_collaborationInviteURL(void *a1, const char *a2, ...)
{
  return _[a1 collaborationInviteURL];
}

id objc_msgSend_collaborationInviteURLExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 collaborationInviteURLExpirationDate];
}

id objc_msgSend_collaborationMode(void *a1, const char *a2, ...)
{
  return _[a1 collaborationMode];
}

id objc_msgSend_commitUniversalPlaybackPositions_context_domain_domainVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitUniversalPlaybackPositions:context:domain:domainVersion:");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compileModelAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compileModelAtURL:error:");
}

id objc_msgSend_completedUnitCount(void *a1, const char *a2, ...)
{
  return _[a1 completedUnitCount];
}

id objc_msgSend_completionBlock(void *a1, const char *a2, ...)
{
  return _[a1 completionBlock];
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 completionHandler];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_componentsWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_computation(void *a1, const char *a2, ...)
{
  return _[a1 computation];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationFromSourceConfiguration_userIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationFromSourceConfiguration:userIdentity:");
}

id objc_msgSend_conflictedKeys(void *a1, const char *a2, ...)
{
  return _[a1 conflictedKeys];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectWithCompletionHandler:");
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_connectionGroup(void *a1, const char *a2, ...)
{
  return _[a1 connectionGroup];
}

id objc_msgSend_connectionQueue(void *a1, const char *a2, ...)
{
  return _[a1 connectionQueue];
}

id objc_msgSend_connectionState(void *a1, const char *a2, ...)
{
  return _[a1 connectionState];
}

id objc_msgSend_constraintsForSystemApplicationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsForSystemApplicationType:");
}

id objc_msgSend_containerCloudID(void *a1, const char *a2, ...)
{
  return _[a1 containerCloudID];
}

id objc_msgSend_containerID(void *a1, const char *a2, ...)
{
  return _[a1 containerID];
}

id objc_msgSend_containerIDs(void *a1, const char *a2, ...)
{
  return _[a1 containerIDs];
}

id objc_msgSend_containerQueryWithContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerQueryWithContainer:");
}

id objc_msgSend_containerType(void *a1, const char *a2, ...)
{
  return _[a1 containerType];
}

id objc_msgSend_containingBundleRecord(void *a1, const char *a2, ...)
{
  return _[a1 containingBundleRecord];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_contentFeatures(void *a1, const char *a2, ...)
{
  return _[a1 contentFeatures];
}

id objc_msgSend_contentFeaturesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentFeaturesAtIndex:");
}

id objc_msgSend_contentFeaturesCount(void *a1, const char *a2, ...)
{
  return _[a1 contentFeaturesCount];
}

id objc_msgSend_contentPages(void *a1, const char *a2, ...)
{
  return _[a1 contentPages];
}

id objc_msgSend_contentParameters(void *a1, const char *a2, ...)
{
  return _[a1 contentParameters];
}

id objc_msgSend_contentTasteItem(void *a1, const char *a2, ...)
{
  return _[a1 contentTasteItem];
}

id objc_msgSend_contentTasteItems(void *a1, const char *a2, ...)
{
  return _[a1 contentTasteItems];
}

id objc_msgSend_contentTasteType(void *a1, const char *a2, ...)
{
  return _[a1 contentTasteType];
}

id objc_msgSend_contentTasteUpdateOperation_finishedByInvalidatingCache_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentTasteUpdateOperation:finishedByInvalidatingCache:error:");
}

id objc_msgSend_contentTasteUpdateResponse(void *a1, const char *a2, ...)
{
  return _[a1 contentTasteUpdateResponse];
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_controllerWithUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerWithUserIdentity:");
}

id objc_msgSend_convertedPlaylistCloudLibraryID(void *a1, const char *a2, ...)
{
  return _[a1 convertedPlaylistCloudLibraryID];
}

id objc_msgSend_convertedPlaylistGlobalID(void *a1, const char *a2, ...)
{
  return _[a1 convertedPlaylistGlobalID];
}

id objc_msgSend_cookieWithProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cookieWithProperties:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_copyWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithBlock:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countOfEntities(void *a1, const char *a2, ...)
{
  return _[a1 countOfEntities];
}

id objc_msgSend_createBag(void *a1, const char *a2, ...)
{
  return _[a1 createBag];
}

id objc_msgSend_createCFUserNotification(void *a1, const char *a2, ...)
{
  return _[a1 createCFUserNotification];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createFeatureProviderDictionaryFromNewContentResponse_withLibraryArtistSnapshots_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFeatureProviderDictionaryFromNewContentResponse:withLibraryArtistSnapshots:");
}

id objc_msgSend_createFileAtPath_contents_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFileAtPath:contents:attributes:");
}

id objc_msgSend_createPlaylistWithPersistentID_properties_trackList_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPlaylistWithPersistentID:properties:trackList:clientIdentity:completionHandler:");
}

id objc_msgSend_createPlaylistWithPersistentID_properties_trackList_requestingBundleID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "createPlaylistWithPersistentID:properties:trackList:requestingBundleID:clientIdentity:completionHandler:");
}

id objc_msgSend_cuid(void *a1, const char *a2, ...)
{
  return _[a1 cuid];
}

id objc_msgSend_cumulativePlayCount(void *a1, const char *a2, ...)
{
  return _[a1 cumulativePlayCount];
}

id objc_msgSend_cumulativeSkipCount(void *a1, const char *a2, ...)
{
  return _[a1 cumulativeSkipCount];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentDatabaseRevision(void *a1, const char *a2, ...)
{
  return _[a1 currentDatabaseRevision];
}

id objc_msgSend_currentDeviceFavoriteSongsPlaylist(void *a1, const char *a2, ...)
{
  return _[a1 currentDeviceFavoriteSongsPlaylist];
}

id objc_msgSend_currentDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 currentDeviceInfo];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentItemCount(void *a1, const char *a2, ...)
{
  return _[a1 currentItemCount];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentPaginationToken(void *a1, const char *a2, ...)
{
  return _[a1 currentPaginationToken];
}

id objc_msgSend_currentRevision(void *a1, const char *a2, ...)
{
  return _[a1 currentRevision];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentTasks(void *a1, const char *a2, ...)
{
  return _[a1 currentTasks];
}

id objc_msgSend_currentThermalLevel(void *a1, const char *a2, ...)
{
  return _[a1 currentThermalLevel];
}

id objc_msgSend_currentUpdateOperation(void *a1, const char *a2, ...)
{
  return _[a1 currentUpdateOperation];
}

id objc_msgSend_daapQueryFilterString(void *a1, const char *a2, ...)
{
  return _[a1 daapQueryFilterString];
}

id objc_msgSend_daemonDefaults(void *a1, const char *a2, ...)
{
  return _[a1 daemonDefaults];
}

id objc_msgSend_daemonOptionsForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "daemonOptionsForConfiguration:");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataByInflatingWithNoZipHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataByInflatingWithNoZipHeader:");
}

id objc_msgSend_dataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForKey:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:options:error:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_databaseConnectionAllowingWrites_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseConnectionAllowingWrites:withBlock:");
}

id objc_msgSend_databaseID(void *a1, const char *a2, ...)
{
  return _[a1 databaseID];
}

id objc_msgSend_databasePath(void *a1, const char *a2, ...)
{
  return _[a1 databasePath];
}

id objc_msgSend_databaseRevision(void *a1, const char *a2, ...)
{
  return _[a1 databaseRevision];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromComponents:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_daysSinceLastPlayedDate(void *a1, const char *a2, ...)
{
  return _[a1 daysSinceLastPlayedDate];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_decodeArrayOfObjectsOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeArrayOfObjectsOfClass:forKey:");
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeInt32ForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeInt32ForKey:");
}

id objc_msgSend_decodeInt64ForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeInt64ForKey:");
}

id objc_msgSend_decodeIntForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decodeTCCIdentityForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeTCCIdentityForKey:");
}

id objc_msgSend_decreasePriority(void *a1, const char *a2, ...)
{
  return _[a1 decreasePriority];
}

id objc_msgSend_decreasePriorityForAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 decreasePriorityForAllOperations];
}

id objc_msgSend_decreaseQualityOfService(void *a1, const char *a2, ...)
{
  return _[a1 decreaseQualityOfService];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultIdentityStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultIdentityStore];
}

id objc_msgSend_defaultInfo(void *a1, const char *a2, ...)
{
  return _[a1 defaultInfo];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMediaLibrary(void *a1, const char *a2, ...)
{
  return _[a1 defaultMediaLibrary];
}

id objc_msgSend_defaultOverrideHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 defaultOverrideHTTPHeaderFields];
}

id objc_msgSend_defaultRenderer(void *a1, const char *a2, ...)
{
  return _[a1 defaultRenderer];
}

id objc_msgSend_defaultSession(void *a1, const char *a2, ...)
{
  return _[a1 defaultSession];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteAllEntitiesFromLibraryWithDeletionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAllEntitiesFromLibraryWithDeletionType:");
}

id objc_msgSend_deleteAllEntitiesFromLibraryWithDeletionType_usingConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAllEntitiesFromLibraryWithDeletionType:usingConnection:");
}

id objc_msgSend_deleteAutomaticDownloadsKey(void *a1, const char *a2, ...)
{
  return _[a1 deleteAutomaticDownloadsKey];
}

id objc_msgSend_deleteDB(void *a1, const char *a2, ...)
{
  return _[a1 deleteDB];
}

id objc_msgSend_deleteDatabaseProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteDatabaseProperty:");
}

id objc_msgSend_deleteFromLibrary(void *a1, const char *a2, ...)
{
  return _[a1 deleteFromLibrary];
}

id objc_msgSend_deleteFromLibrary_deletionType_persistentIDs_count_usingConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteFromLibrary:deletionType:persistentIDs:count:usingConnection:");
}

id objc_msgSend_deleteHandlerForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteHandlerForConfiguration:");
}

id objc_msgSend_deleteInteractionsWithGroupIdentifiers_bundleID_protectionClass_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteInteractionsWithGroupIdentifiers:bundleID:protectionClass:completionHandler:");
}

id objc_msgSend_deletePlaybackPositionEntitiesFromLibraryWithIdentifier_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletePlaybackPositionEntitiesFromLibraryWithIdentifier:clientIdentity:");
}

id objc_msgSend_deletePlaybackPositionWithRequestContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletePlaybackPositionWithRequestContext:");
}

id objc_msgSend_deletedKeys(void *a1, const char *a2, ...)
{
  return _[a1 deletedKeys];
}

id objc_msgSend_deliverSubscriptionStatusResponse_forRemoteRequestWithUniqueIdentifier_error_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deliverSubscriptionStatusResponse:forRemoteRequestWithUniqueIdentifier:error:");
}

id objc_msgSend_deprioritizeAlbumArtistHeroImageForPersistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeAlbumArtistHeroImageForPersistentID:");
}

id objc_msgSend_deprioritizeArtistHeroImageForPersistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeArtistHeroImageForPersistentID:");
}

id objc_msgSend_deprioritizeContainerArtworkForSagaID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeContainerArtworkForSagaID:");
}

id objc_msgSend_deprioritizeImportArtworkForCloudID_artworkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeImportArtworkForCloudID:artworkType:");
}

id objc_msgSend_deprioritizeItemArtworkForPurchaseHistoryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeItemArtworkForPurchaseHistoryID:");
}

id objc_msgSend_deprioritizeItemArtworkForSagaID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeItemArtworkForSagaID:");
}

id objc_msgSend_deprioritizeScreenshotForPurchaseHistoryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeScreenshotForPurchaseHistoryID:");
}

id objc_msgSend_deprioritizeScreenshotForSagaID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeScreenshotForSagaID:");
}

id objc_msgSend_deprioritizeSubscriptionContainerArtworkForPersistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeSubscriptionContainerArtworkForPersistentID:");
}

id objc_msgSend_deprioritizeSubscriptionItemArtworkForPersistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeSubscriptionItemArtworkForPersistentID:");
}

id objc_msgSend_deprioritizeSubscriptionScreenshotForPersistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deprioritizeSubscriptionScreenshotForPersistentID:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptionWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionWithLocale:");
}

id objc_msgSend_developerToken(void *a1, const char *a2, ...)
{
  return _[a1 developerToken];
}

id objc_msgSend_deviceGUID(void *a1, const char *a2, ...)
{
  return _[a1 deviceGUID];
}

id objc_msgSend_deviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 deviceInfo];
}

id objc_msgSend_deviceMediaLibraryWithUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceMediaLibraryWithUserIdentity:");
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return _[a1 deviceName];
}

id objc_msgSend_dictRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictRepresentation];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForBagKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryForBagKey:");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_dictionaryWithSharedKeySet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithSharedKeySet:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_disableActiveLockerAccount(void *a1, const char *a2, ...)
{
  return _[a1 disableActiveLockerAccount];
}

id objc_msgSend_disableCloudLibraryWithClientIdentity_reason_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableCloudLibraryWithClientIdentity:reason:completionHandler:");
}

id objc_msgSend_disableLockerAccountWithDSID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableLockerAccountWithDSID:completionHandler:");
}

id objc_msgSend_disconnect(void *a1, const char *a2, ...)
{
  return _[a1 disconnect];
}

id objc_msgSend_displayType(void *a1, const char *a2, ...)
{
  return _[a1 displayType];
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _[a1 distantPast];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downPinCollectionsForClasses_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downPinCollectionsForClasses:configuration:");
}

id objc_msgSend_downloadManager(void *a1, const char *a2, ...)
{
  return _[a1 downloadManager];
}

id objc_msgSend_downloadResourcesForMessageWithIdentifier_bundleIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadResourcesForMessageWithIdentifier:bundleIdentifier:completion:");
}

id objc_msgSend_downloaderAccountID(void *a1, const char *a2, ...)
{
  return _[a1 downloaderAccountID];
}

id objc_msgSend_dsid(void *a1, const char *a2, ...)
{
  return _[a1 dsid];
}

id objc_msgSend_eTagValueFromContentTasteResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eTagValueFromContentTasteResponse:");
}

id objc_msgSend_earlierDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "earlierDate:");
}

id objc_msgSend_editCollaborationWithPersistentID_properties_trackEdits_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editCollaborationWithPersistentID:properties:trackEdits:completion:");
}

id objc_msgSend_elementCodeForProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elementCodeForProperty:");
}

id objc_msgSend_emptyAllTables(void *a1, const char *a2, ...)
{
  return _[a1 emptyAllTables];
}

id objc_msgSend_enableCloudLibraryWithClientIdentity_startInitialImport_enableCloudLibraryPolicy_isExplicitUserAction_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "enableCloudLibraryWithClientIdentity:startInitialImport:enableCloudLibraryPolicy:isExplicitUserAction:completionHandler:");
}

id objc_msgSend_enableReason(void *a1, const char *a2, ...)
{
  return _[a1 enableReason];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_enabledTopics(void *a1, const char *a2, ...)
{
  return _[a1 enabledTopics];
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeInt32_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt32:forKey:");
}

id objc_msgSend_encodeInt64_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt64:forKey:");
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodeTCCIdentity_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeTCCIdentity:forKey:");
}

id objc_msgSend_endArray(void *a1, const char *a2, ...)
{
  return _[a1 endArray];
}

id objc_msgSend_endCollaborationWithPersistentID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endCollaborationWithPersistentID:completion:");
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endObservingBagWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endObservingBagWithToken:");
}

id objc_msgSend_endObservingCloudServiceStatusWithToken_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endObservingCloudServiceStatusWithToken:completionHandler:");
}

id objc_msgSend_endObservingSubscriptionStatusWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endObservingSubscriptionStatusWithToken:");
}

id objc_msgSend_endPerformUpdate(void *a1, const char *a2, ...)
{
  return _[a1 endPerformUpdate];
}

id objc_msgSend_endReasonType(void *a1, const char *a2, ...)
{
  return _[a1 endReasonType];
}

id objc_msgSend_endTransaction(void *a1, const char *a2, ...)
{
  return _[a1 endTransaction];
}

id objc_msgSend_endpoint(void *a1, const char *a2, ...)
{
  return _[a1 endpoint];
}

id objc_msgSend_enhancedAudioConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 enhancedAudioConfiguration];
}

id objc_msgSend_enhancedAudioKeyManager(void *a1, const char *a2, ...)
{
  return _[a1 enhancedAudioKeyManager];
}

id objc_msgSend_enhancedAudioSharedContentKeyPath(void *a1, const char *a2, ...)
{
  return _[a1 enhancedAudioSharedContentKeyPath];
}

id objc_msgSend_enqueueBlockForTransactionCommit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueBlockForTransactionCommit:");
}

id objc_msgSend_enqueueChildOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueChildOperation:");
}

id objc_msgSend_enqueueData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueData:");
}

id objc_msgSend_enqueueDataRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueDataRequest:withCompletionHandler:");
}

id objc_msgSend_enqueueDownloadRequest_toDestination_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueDownloadRequest:toDestination:withCompletionHandler:");
}

id objc_msgSend_enqueueMetricsEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueMetricsEvent:");
}

id objc_msgSend_enqueuerProperties(void *a1, const char *a2, ...)
{
  return _[a1 enqueuerProperties];
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _[a1 entity];
}

id objc_msgSend_enumerateBackgroundOperationsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateBackgroundOperationsUsingBlock:");
}

id objc_msgSend_enumerateCloudItemIDsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateCloudItemIDsUsingBlock:");
}

id objc_msgSend_enumerateHandlersForAccountState_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateHandlersForAccountState:usingBlock:");
}

id objc_msgSend_enumerateItemsInResponseData_usingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateItemsInResponseData:usingHandler:");
}

id objc_msgSend_enumerateItemsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateItemsUsingBlock:");
}

id objc_msgSend_enumerateKeyEntriesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeyEntriesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateOperationsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateOperationsUsingBlock:");
}

id objc_msgSend_enumeratePathsToDeleteFromLibrary_persistentIDs_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratePathsToDeleteFromLibrary:persistentIDs:usingBlock:");
}

id objc_msgSend_enumeratePersistentIDsAfterRevision_revisionTrackingCode_maximumRevisionType_forMediaTypes_inUsersLibrary_usingBlock_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:");
}

id objc_msgSend_enumeratePersistentIDsAndProperties_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratePersistentIDsAndProperties:usingBlock:");
}

id objc_msgSend_enumeratePersistentIDsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratePersistentIDsUsingBlock:");
}

id objc_msgSend_enumerateRawItemsInResponseData_usingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRawItemsInResponseData:usingHandler:");
}

id objc_msgSend_enumerateRowsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRowsWithBlock:");
}

id objc_msgSend_enumeratorAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtPath:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 ephemeralSessionConfiguration];
}

id objc_msgSend_equivalencySourceAdamID(void *a1, const char *a2, ...)
{
  return _[a1 equivalencySourceAdamID];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_eventDate(void *a1, const char *a2, ...)
{
  return _[a1 eventDate];
}

id objc_msgSend_eventTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 eventTimeZone];
}

id objc_msgSend_eventType(void *a1, const char *a2, ...)
{
  return _[a1 eventType];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_executeQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeQuery:");
}

id objc_msgSend_executeQuery_withParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeQuery:withParameters:");
}

id objc_msgSend_executeUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeUpdate:");
}

id objc_msgSend_executeUpdate_withParameters_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeUpdate:withParameters:error:");
}

id objc_msgSend_existsInLibrary(void *a1, const char *a2, ...)
{
  return _[a1 existsInLibrary];
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _[a1 expirationDate];
}

id objc_msgSend_externalID(void *a1, const char *a2, ...)
{
  return _[a1 externalID];
}

id objc_msgSend_failedToConnect(void *a1, const char *a2, ...)
{
  return _[a1 failedToConnect];
}

id objc_msgSend_failureCount(void *a1, const char *a2, ...)
{
  return _[a1 failureCount];
}

id objc_msgSend_familyID(void *a1, const char *a2, ...)
{
  return _[a1 familyID];
}

id objc_msgSend_familyMemberStoreID(void *a1, const char *a2, ...)
{
  return _[a1 familyMemberStoreID];
}

id objc_msgSend_favoriteAlbumWithPersistentID_cloudLibraryID_time_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "favoriteAlbumWithPersistentID:cloudLibraryID:time:completionHandler:");
}

id objc_msgSend_favoriteArtistWithPersistentID_cloudLibraryID_time_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "favoriteArtistWithPersistentID:cloudLibraryID:time:completionHandler:");
}

id objc_msgSend_favoriteEntityWithPersistentID_sagaID_entityType_time_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "favoriteEntityWithPersistentID:sagaID:entityType:time:completionHandler:");
}

id objc_msgSend_favoriteEntityWithPersistentID_storeID_entityType_time_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "favoriteEntityWithPersistentID:storeID:entityType:time:completionHandler:");
}

id objc_msgSend_favoritePlaylistWithPersistentID_globalID_time_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "favoritePlaylistWithPersistentID:globalID:time:completionHandler:");
}

id objc_msgSend_featureName(void *a1, const char *a2, ...)
{
  return _[a1 featureName];
}

id objc_msgSend_featureValueForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "featureValueForName:");
}

id objc_msgSend_fetchConfigurationWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConfigurationWithCompletionHandler:");
}

id objc_msgSend_fetchEnhancedAudioOfflineKeys(void *a1, const char *a2, ...)
{
  return _[a1 fetchEnhancedAudioOfflineKeys];
}

id objc_msgSend_fetchMissingOfflineKeys(void *a1, const char *a2, ...)
{
  return _[a1 fetchMissingOfflineKeys];
}

id objc_msgSend_fetchMusicUserProfileWithStoreRequestContext_ignoreCache_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMusicUserProfileWithStoreRequestContext:ignoreCache:completion:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileHandleForWritingToURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileHandleForWritingToURL:error:");
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _[a1 fileSize];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_fileURLWithPathComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPathComponents:");
}

id objc_msgSend_finalState(void *a1, const char *a2, ...)
{
  return _[a1 finalState];
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return _[a1 finish];
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return _[a1 finishDecoding];
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishedUpdateOperationForLibraryType_withResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedUpdateOperationForLibraryType:withResponse:");
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _[a1 firstName];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flushPendingPlayActivityEventsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushPendingPlayActivityEventsWithCompletionHandler:");
}

id objc_msgSend_followupUpdateOpertion(void *a1, const char *a2, ...)
{
  return _[a1 followupUpdateOpertion];
}

id objc_msgSend_geniusPlaylistPropertyForML3ContainerProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geniusPlaylistPropertyForML3ContainerProperty:");
}

id objc_msgSend_geniusTrackPropertyForML3TrackProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geniusTrackPropertyForML3TrackProperty:");
}

id objc_msgSend_geniusValueForML3ContainerProperty_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geniusValueForML3ContainerProperty:value:");
}

id objc_msgSend_geniusValueForML3TrackProperty_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geniusValueForML3TrackProperty:value:");
}

id objc_msgSend_geniusValueForMLValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geniusValueForMLValue:");
}

id objc_msgSend_getAccountNotificationsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAccountNotificationsWithCompletionHandler:");
}

id objc_msgSend_getBagForRequestContext_forceRefetch_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBagForRequestContext:forceRefetch:withCompletionHandler:");
}

id objc_msgSend_getBagForRequestContext_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBagForRequestContext:withCompletionHandler:");
}

id objc_msgSend_getCachedContentTasteResponseForConnectionConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCachedContentTasteResponseForConnectionConfiguration:");
}

id objc_msgSend_getCookieWithName_userIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCookieWithName:userIdentifier:");
}

id objc_msgSend_getCurrentInstallDisposition(void *a1, const char *a2, ...)
{
  return _[a1 getCurrentInstallDisposition];
}

id objc_msgSend_getKeyStatusForAccountUniqueIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getKeyStatusForAccountUniqueIdentifier:error:");
}

id objc_msgSend_getLocalPlaybackPositionForEntityIdentifiers_forDomain_fromLibraryWithIdentifier_clientIdentity_completionBlock_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "getLocalPlaybackPositionForEntityIdentifiers:forDomain:fromLibraryWithIdentifier:clientIdentity:completionBlock:");
}

id objc_msgSend_getPlayActivityEvents_storeAccountID_limit_returningError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPlayActivityEvents:storeAccountID:limit:returningError:");
}

id objc_msgSend_getPreExistingStoreIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 getPreExistingStoreIdentifiers];
}

id objc_msgSend_getPropertiesForUserIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPropertiesForUserIdentity:completionHandler:");
}

id objc_msgSend_getPropertiesForUserIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPropertiesForUserIdentity:error:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getResultsRequest(void *a1, const char *a2, ...)
{
  return _[a1 getResultsRequest];
}

id objc_msgSend_getStoreAccounts_returningError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStoreAccounts:returningError:");
}

id objc_msgSend_getSubscriptionStatusForUserIdentity_bypassingCache_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionStatusForUserIdentity:bypassingCache:withCompletionHandler:");
}

id objc_msgSend_getSubscriptionStatusForUserIdentity_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionStatusForUserIdentity:withCompletionHandler:");
}

id objc_msgSend_getSubscriptionStatusWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSubscriptionStatusWithCompletionHandler:");
}

id objc_msgSend_getTokenStatusForDSIDs_forcingRefresh_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getTokenStatusForDSIDs:forcingRefresh:completion:");
}

id objc_msgSend_getUserStatesForcingRefresh_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUserStatesForcingRefresh:withReply:");
}

id objc_msgSend_getValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValue:");
}

id objc_msgSend_getValuesForProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValuesForProperties:");
}

id objc_msgSend_getVerificationContextForUserIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVerificationContextForUserIdentity:error:");
}

id objc_msgSend_globalIDToSagaIDMap(void *a1, const char *a2, ...)
{
  return _[a1 globalIDToSagaIDMap];
}

id objc_msgSend_globalPlaylistID(void *a1, const char *a2, ...)
{
  return _[a1 globalPlaylistID];
}

id objc_msgSend_globalSerialQueue(void *a1, const char *a2, ...)
{
  return _[a1 globalSerialQueue];
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _[a1 handle];
}

id objc_msgSend_handleAccountStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAccountStateChange:");
}

id objc_msgSend_handleContentTasteChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 handleContentTasteChangedNotification];
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleMusicAppInstalled(void *a1, const char *a2, ...)
{
  return _[a1 handleMusicAppInstalled];
}

id objc_msgSend_handleMusicAppRemoved(void *a1, const char *a2, ...)
{
  return _[a1 handleMusicAppRemoved];
}

id objc_msgSend_handleMusicAppRemovedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMusicAppRemovedWithCompletion:");
}

id objc_msgSend_handleNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotification:");
}

id objc_msgSend_handleNotificationResponse_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotificationResponse:bag:");
}

id objc_msgSend_handleSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSuccess:");
}

id objc_msgSend_handlerCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 handlerCoordinator];
}

id objc_msgSend_handlerForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlerForConfiguration:");
}

id objc_msgSend_handlerProvider(void *a1, const char *a2, ...)
{
  return _[a1 handlerProvider];
}

id objc_msgSend_handlerWithType_configuration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlerWithType:configuration:error:");
}

id objc_msgSend_handlers(void *a1, const char *a2, ...)
{
  return _[a1 handlers];
}

id objc_msgSend_hasActiveDownloads(void *a1, const char *a2, ...)
{
  return _[a1 hasActiveDownloads];
}

id objc_msgSend_hasAddToLibraryWhenFavoritingBehavior(void *a1, const char *a2, ...)
{
  return _[a1 hasAddToLibraryWhenFavoritingBehavior];
}

id objc_msgSend_hasAddToPlaylistBehavior(void *a1, const char *a2, ...)
{
  return _[a1 hasAddToPlaylistBehavior];
}

id objc_msgSend_hasAtLeastOneRow(void *a1, const char *a2, ...)
{
  return _[a1 hasAtLeastOneRow];
}

id objc_msgSend_hasBeenPlayed(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenPlayed];
}

id objc_msgSend_hasBeenPreviouslyToggled(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenPreviouslyToggled];
}

id objc_msgSend_hasCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCapability:");
}

id objc_msgSend_hasClientFeaturesVersion(void *a1, const char *a2, ...)
{
  return _[a1 hasClientFeaturesVersion];
}

id objc_msgSend_hasDeveloperToken(void *a1, const char *a2, ...)
{
  return _[a1 hasDeveloperToken];
}

id objc_msgSend_hasError(void *a1, const char *a2, ...)
{
  return _[a1 hasError];
}

id objc_msgSend_hasInfoForProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasInfoForProperty:");
}

id objc_msgSend_hasModel(void *a1, const char *a2, ...)
{
  return _[a1 hasModel];
}

id objc_msgSend_hasNeedsResetSync(void *a1, const char *a2, ...)
{
  return _[a1 hasNeedsResetSync];
}

id objc_msgSend_hasOfflinePlaybackKeys(void *a1, const char *a2, ...)
{
  return _[a1 hasOfflinePlaybackKeys];
}

id objc_msgSend_hasOperationsOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOperationsOfClass:");
}

id objc_msgSend_hasOriginalArtworkForRelativePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasOriginalArtworkForRelativePath:");
}

id objc_msgSend_hasPendingPlayActivityEvents_returningError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPendingPlayActivityEvents:returningError:");
}

id objc_msgSend_hasPendingPlayEvents(void *a1, const char *a2, ...)
{
  return _[a1 hasPendingPlayEvents];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasProperNetworkConditionsToPlayMedia(void *a1, const char *a2, ...)
{
  return _[a1 hasProperNetworkConditionsToPlayMedia];
}

id objc_msgSend_hasProperNetworkConditionsToShowCloudMedia(void *a1, const char *a2, ...)
{
  return _[a1 hasProperNetworkConditionsToShowCloudMedia];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasTokenCollection(void *a1, const char *a2, ...)
{
  return _[a1 hasTokenCollection];
}

id objc_msgSend_hasUserToken(void *a1, const char *a2, ...)
{
  return _[a1 hasUserToken];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashedDSID(void *a1, const char *a2, ...)
{
  return _[a1 hashedDSID];
}

id objc_msgSend_hideItemsWithPurchaseHistoryIDs_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideItemsWithPurchaseHistoryIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_homeUserIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 homeUserIdentifiers];
}

id objc_msgSend_householdID(void *a1, const char *a2, ...)
{
  return _[a1 householdID];
}

id objc_msgSend_iCloudPersonID(void *a1, const char *a2, ...)
{
  return _[a1 iCloudPersonID];
}

id objc_msgSend_ic_DSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_DSID");
}

id objc_msgSend_ic_URLByAppendingQueryParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_URLByAppendingQueryParameters:");
}

id objc_msgSend_ic_activeStoreAccountWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_activeStoreAccountWithError:");
}

id objc_msgSend_ic_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_altDSID");
}

id objc_msgSend_ic_arrayValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_arrayValueForKey:");
}

id objc_msgSend_ic_cloudClientErrorWithCode_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_cloudClientErrorWithCode:userInfo:");
}

id objc_msgSend_ic_dataValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_dataValueForKey:");
}

id objc_msgSend_ic_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_defaultSessionConfiguration");
}

id objc_msgSend_ic_dictionaryValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_dictionaryValueForKey:");
}

id objc_msgSend_ic_intValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_intValueForKey:");
}

id objc_msgSend_ic_integerValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_integerValueForKey:");
}

id objc_msgSend_ic_isAutomaticDownloadsEnabledForMediaKindMusic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_isAutomaticDownloadsEnabledForMediaKindMusic");
}

id objc_msgSend_ic_numberValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_numberValueForKey:");
}

id objc_msgSend_ic_referencesSameFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_referencesSameFile:");
}

id objc_msgSend_ic_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_sharedAccountStore");
}

id objc_msgSend_ic_sharedRequestOperationQueueWithQualityOfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_sharedRequestOperationQueueWithQualityOfService:");
}

id objc_msgSend_ic_storeAccountForStoreAccountID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_storeAccountForStoreAccountID:error:");
}

id objc_msgSend_ic_stringValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ic_stringValueForKey:");
}

id objc_msgSend_icd_isConnectionAllowedForService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_isConnectionAllowedForService:");
}

id objc_msgSend_icd_preferredVideoQuality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_preferredVideoQuality");
}

id objc_msgSend_icd_sagaCloudFavoriteSongAddToLibraryBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_sagaCloudFavoriteSongAddToLibraryBehavior");
}

id objc_msgSend_icd_sagaDatabaseUserVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_sagaDatabaseUserVersion");
}

id objc_msgSend_icd_setPreferredVideoQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_setPreferredVideoQuality:");
}

id objc_msgSend_icd_setSagaCloudAddToPlaylistBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_setSagaCloudAddToPlaylistBehavior:");
}

id objc_msgSend_icd_setSagaCloudFavoriteSongAddToLibraryBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_setSagaCloudFavoriteSongAddToLibraryBehavior:");
}

id objc_msgSend_icd_setSagaDatabaseUserVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "icd_setSagaDatabaseUserVersion:");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifiers(void *a1, const char *a2, ...)
{
  return _[a1 identifiers];
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _[a1 identity];
}

id objc_msgSend_identityStore(void *a1, const char *a2, ...)
{
  return _[a1 identityStore];
}

id objc_msgSend_ignoreMinRefreshInterval(void *a1, const char *a2, ...)
{
  return _[a1 ignoreMinRefreshInterval];
}

id objc_msgSend_images(void *a1, const char *a2, ...)
{
  return _[a1 images];
}

id objc_msgSend_importAlbumArtistHeroImageForPersistentID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importAlbumArtistHeroImageForPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_importAllItemArtworkAndScreenshotsWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importAllItemArtworkAndScreenshotsWithClientIdentity:");
}

id objc_msgSend_importAllItemArtworkWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importAllItemArtworkWithClientIdentity:");
}

id objc_msgSend_importArtistHeroImageForPersistentID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importArtistHeroImageForPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_importArtworkForCloudID_artworkType_token_mediaType_allowsCellularData_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "importArtworkForCloudID:artworkType:token:mediaType:allowsCellularData:clientIdentity:completionHandler:");
}

id objc_msgSend_importArtworkTokenForEntityPersistentID_entityType_artworkToken_artworkType_sourceType_usingConnection_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:usingConnection:");
}

id objc_msgSend_importCloudArtworkForRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importCloudArtworkForRequests:");
}

id objc_msgSend_importContainerArtworkForPersistentID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importContainerArtworkForPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_importContainerArtworkForSagaID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importContainerArtworkForSagaID:clientIdentity:completionHandler:");
}

id objc_msgSend_importExistingOriginalArtworkWithArtworkToken_artworkType_sourceType_mediaType_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importExistingOriginalArtworkWithArtworkToken:artworkType:sourceType:mediaType:");
}

id objc_msgSend_importItemArtworkForPersistentID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importItemArtworkForPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_importItemArtworkForPurchaseHistoryID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importItemArtworkForPurchaseHistoryID:clientIdentity:completionHandler:");
}

id objc_msgSend_importItemArtworkForSagaID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importItemArtworkForSagaID:clientIdentity:completionHandler:");
}

id objc_msgSend_importOriginalArtworkFromFileURL_withArtworkToken_artworkType_sourceType_mediaType_shouldPerformColorAnalysis_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "importOriginalArtworkFromFileURL:withArtworkToken:artworkType:sourceType:mediaType:shouldPerformColorAnalysis:completion:");
}

id objc_msgSend_importOriginalArtworkFromImageData_withArtworkToken_artworkType_sourceType_mediaType_shouldPerformColorAnalysis_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:shouldPerformColorAnalysis:completion:");
}

id objc_msgSend_importScreenshotForPersistentID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importScreenshotForPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_importScreenshotForPurchaseHistoryID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importScreenshotForPurchaseHistoryID:clientIdentity:completionHandler:");
}

id objc_msgSend_importScreenshotForSagaID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importScreenshotForSagaID:clientIdentity:completionHandler:");
}

id objc_msgSend_importTracksUpToRevision_clientIdentity_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "importTracksUpToRevision:clientIdentity:withCompletionHandler:");
}

id objc_msgSend_importer(void *a1, const char *a2, ...)
{
  return _[a1 importer];
}

id objc_msgSend_includeCloudLibraryDAAPDebugFeature(void *a1, const char *a2, ...)
{
  return _[a1 includeCloudLibraryDAAPDebugFeature];
}

id objc_msgSend_includeFlavors(void *a1, const char *a2, ...)
{
  return _[a1 includeFlavors];
}

id objc_msgSend_includeHiddenItems(void *a1, const char *a2, ...)
{
  return _[a1 includeHiddenItems];
}

id objc_msgSend_includePreorders(void *a1, const char *a2, ...)
{
  return _[a1 includePreorders];
}

id objc_msgSend_includesBookmarkable(void *a1, const char *a2, ...)
{
  return _[a1 includesBookmarkable];
}

id objc_msgSend_increasePriority(void *a1, const char *a2, ...)
{
  return _[a1 increasePriority];
}

id objc_msgSend_increasePriorityForAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 increasePriorityForAllOperations];
}

id objc_msgSend_increaseQualityOfService(void *a1, const char *a2, ...)
{
  return _[a1 increaseQualityOfService];
}

id objc_msgSend_incrementRevisionWithLibrary_persistentID_deletionType_revisionType_usingConnection_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementRevisionWithLibrary:persistentID:deletionType:revisionType:usingConnection:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initUnboundedArchiveWithDirectoryPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initUnboundedArchiveWithDirectoryPath:");
}

id objc_msgSend_initUsingLocalDeviceLibraryDestinationWithImportElements_referralObject_usingLocalLibraryDestination_usingCloudLibraryDestination_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initUsingLocalDeviceLibraryDestinationWithImportElements:referralObject:usingLocalLibraryDestination:usingClo udLibraryDestination:");
}

id objc_msgSend_initWithAccountManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountManager:");
}

id objc_msgSend_initWithAccountManager_handlerCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountManager:handlerCoordinator:");
}

id objc_msgSend_initWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:");
}

id objc_msgSend_initWithAction_databaseID_databaseRevision_opaqueID_bundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:databaseID:databaseRevision:opaqueID:bundleID:");
}

id objc_msgSend_initWithAdamID_date_score_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdamID:date:score:");
}

id objc_msgSend_initWithApplicationMessage_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithApplicationMessage:bundleIdentifier:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithArtworkImporter_clientIdentity_operationQueue_artistPersistentIDsToUpdate_albumArtistPersistentIDsToUpdate_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithArtworkImporter:clientIdentity:operationQueue:artistPersistentIDsToUpdate:albumArtistPersistentIDsToUpdate:");
}

id objc_msgSend_initWithArtworkResponseDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArtworkResponseDictionary:");
}

id objc_msgSend_initWithArtworkURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArtworkURL:");
}

id objc_msgSend_initWithAssertURL_artworkMediaType_artworkType_artworkToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssertURL:artworkMediaType:artworkType:artworkToken:");
}

id objc_msgSend_initWithBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBag:");
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase64EncodedString:options:");
}

id objc_msgSend_initWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBlock:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundleIdentifier_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:queue:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithBytesNoCopy_length_encoding_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:encoding:freeWhenDone:");
}

id objc_msgSend_initWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:freeWhenDone:");
}

id objc_msgSend_initWithCalendarIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCalendarIdentifier:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientIdentity:");
}

id objc_msgSend_initWithClientInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientInfo:");
}

id objc_msgSend_initWithClientInfo_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientInfo:options:");
}

id objc_msgSend_initWithCode_headerFields_data_MIMEType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCode:headerFields:data:MIMEType:error:");
}

id objc_msgSend_initWithColorAnalysis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithColorAnalysis:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_CUID_troveID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:CUID:troveID:");
}

id objc_msgSend_initWithConfiguration_adamID_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:adamID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_adamID_playlistPersistentID_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:adamID:playlistPersistentID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_adamID_playlistPersistentID_referralAlbumAdamID_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:adamID:playlistPersistentID:referralAlbumAdamID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_adamID_playlistPersistentID_referralPlaylistGlobalID_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:adamID:playlistPersistentID:referralPlaylistGlobalID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_adamID_referralAlbumAdamID_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:adamID:referralAlbumAdamID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_adamID_referralPlaylistGlobalID_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:adamID:referralPlaylistGlobalID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:bag:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_addToLibraryBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:addToLibraryBehavior:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_addToPlaylistBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:addToPlaylistBehavior:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_albumPersistentID_albumItemProperties_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:albumPersistentID:albumItemProperties:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_albumPersistentID_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:albumPersistentID:properties:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_collaborationPersistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:collaborationPersistentID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_collaborationPersistentID_properties_trackEdits_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:collaborationPersistentID:properties:trackEdits:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_dictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:dictionary:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_globalPlaylistID_invitationURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:globalPlaylistID:invitationURL:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_itemPurchaseHistoryIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:itemPurchaseHistoryIDs:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_itemSagaIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:itemSagaIDs:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_opaqueID_bundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:opaqueID:bundleID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_opaqueID_bundleID_playlistPersistentID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:opaqueID:bundleID:playlistPersistentID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_albumCloudLibraryID_time_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:albumCloudLibraryID:time:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_artistCloudLibraryID_time_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:artistCloudLibraryID:time:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_globalPlaylistID_time_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:globalPlaylistID:time:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:properties:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_socialProfileID_approval_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:socialProfileID:approval:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_socialProfileIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:socialProfileIDs:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_persistentID_storeID_entityType_time_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:persistentID:storeID:entityType:time:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_playlistGlobalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:playlistGlobalID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_playlistPersistentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:playlistPersistentID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_playlistPersistentID_properties_trackList_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:playlistPersistentID:properties:trackList:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_playlistPersistentID_properties_trackList_requestingBundleID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithConfiguration:clientIdentity:playlistPersistentID:properties:trackList:requestingBundleID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_playlistPersistentID_sharingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:playlistPersistentID:sharingMode:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_playlistSagaIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:playlistSagaIDs:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_purchaseHistoryID_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:purchaseHistoryID:properties:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:reason:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_reason_updateTaskHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:reason:updateTaskHelper:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_sagaID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:sagaID:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_sagaID_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:sagaID:properties:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_sagaIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:sagaIDs:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_seedID_numberOfItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:clientIdentity:seedID:numberOfItems:");
}

id objc_msgSend_initWithConfiguration_clientIdentity_subscribedPlaylistSagaIDs_ignoreMinRefreshInterval_requestReason_pinnedOnly_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithConfiguration:clientIdentity:subscribedPlaylistSagaIDs:ignoreMinRefreshInterval:requestReason:pinnedOnly:");
}

id objc_msgSend_initWithConfiguration_cloudIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:cloudIDs:");
}

id objc_msgSend_initWithConfiguration_geniusPlaylistPersistentID_playlistName_seedItemIDs_itemIDs_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithConfiguration:geniusPlaylistPersistentID:playlistName:seedItemIDs:itemIDs:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_itemSagaID_playlistPersistentID_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:itemSagaID:playlistPersistentID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_itemSagaID_playlistPersistentID_clientIdentity_requestingBundleID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:itemSagaID:playlistPersistentID:clientIdentity:requestingBundleID:");
}

id objc_msgSend_initWithConfiguration_maxConcurrentRequests_qualityOfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:maxConcurrentRequests:qualityOfService:");
}

id objc_msgSend_initWithConfiguration_mergeToCloudLibraryPreference_allowNoisyAuthPrompt_enableLibraryReason_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithConfiguration:mergeToCloudLibraryPreference:allowNoisyAuthPrompt:enableLibraryReason:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_playlistPersistentID_properties_trackList_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:playlistPersistentID:properties:trackList:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_playlistPersistentID_properties_trackList_requestingBundleID_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithConfiguration:playlistPersistentID:properties:trackList:requestingBundleID:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_prefix_loggable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:prefix:loggable:");
}

id objc_msgSend_initWithConfiguration_progressObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:progressObserver:");
}

id objc_msgSend_initWithConfiguration_reason_supportedMediaKindsHandler_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:reason:supportedMediaKindsHandler:clientIdentity:");
}

id objc_msgSend_initWithConfiguration_sourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:sourceType:");
}

id objc_msgSend_initWithConfiguration_updateTaskHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:updateTaskHelper:");
}

id objc_msgSend_initWithConnection_serverInitiatedReset_clientInitiatedReset_clientFeaturesVersion_clientIdentity_fromRevision_toRevision_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithConnection:serverInitiatedReset:clientInitiatedReset:clientFeaturesVersion:clientIdentity:fromRevision:toRevision:");
}

id objc_msgSend_initWithConnection_supportedMediaKindsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:supportedMediaKindsHandler:");
}

id objc_msgSend_initWithContentItemSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItemSnapshot:");
}

id objc_msgSend_initWithContentTasteUpdateItem_invalidateLocalCache_configuration_operationIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentTasteUpdateItem:invalidateLocalCache:configuration:operationIdentifier:");
}

id objc_msgSend_initWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:options:error:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:options:error:");
}

id objc_msgSend_initWithContext_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:completionHandler:");
}

id objc_msgSend_initWithDSID_altDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDSID:altDSID:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDatabaseID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:");
}

id objc_msgSend_initWithDatabaseID_albumArtistCloudLibraryIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:albumArtistCloudLibraryIDs:properties:");
}

id objc_msgSend_initWithDatabaseID_albumCloudLibraryIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:albumCloudLibraryIDs:properties:");
}

id objc_msgSend_initWithDatabaseID_cloudIDs_itemKind_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:cloudIDs:itemKind:useLongIDs:");
}

id objc_msgSend_initWithDatabaseID_containerIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:containerIDs:");
}

id objc_msgSend_initWithDatabaseID_containerIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:containerIDs:properties:");
}

id objc_msgSend_initWithDatabaseID_databaseRevision_adamID_sagaID_playlistGlobalID_containerID_referralAlbumAdamID_referralPlaylistGlobalID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithDatabaseID:databaseRevision:adamID:sagaID:playlistGlobalID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:");
}

id objc_msgSend_initWithDatabaseID_databaseRevision_addToLibraryBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:databaseRevision:addToLibraryBehavior:");
}

id objc_msgSend_initWithDatabaseID_databaseRevision_addToPlaylistBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:databaseRevision:addToPlaylistBehavior:");
}

id objc_msgSend_initWithDatabaseID_databaseRevision_containerID_trackList_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:databaseRevision:containerID:trackList:properties:");
}

id objc_msgSend_initWithDatabaseID_databaseRevision_playlistProperties_trackList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:databaseRevision:playlistProperties:trackList:");
}

id objc_msgSend_initWithDatabaseID_databaseRevision_playlistProperties_trackList_requestingBundleID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:databaseRevision:playlistProperties:trackList:requestingBundleID:");
}

id objc_msgSend_initWithDatabaseID_globalPlaylistID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:globalPlaylistID:");
}

id objc_msgSend_initWithDatabaseID_globalPlaylistID_invitationURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:globalPlaylistID:invitationURL:");
}

id objc_msgSend_initWithDatabaseID_globalPlaylistID_socialProfileID_approval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:globalPlaylistID:socialProfileID:approval:");
}

id objc_msgSend_initWithDatabaseID_globalPlaylistID_socialProfileIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:globalPlaylistID:socialProfileIDs:");
}

id objc_msgSend_initWithDatabaseID_itemIDs_properties_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:itemIDs:properties:useLongIDs:");
}

id objc_msgSend_initWithDatabaseID_itemIDs_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:itemIDs:useLongIDs:");
}

id objc_msgSend_initWithDatabaseID_metadataFilter_queryFilter_purchaseTokens_includeHiddenItems_includePreorders_paginationToken_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:");
}

id objc_msgSend_initWithDatabaseID_paginationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:paginationToken:");
}

id objc_msgSend_initWithDatabaseID_playlistName_seedItemIDs_itemIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:playlistName:seedItemIDs:itemIDs:");
}

id objc_msgSend_initWithDatabaseID_playlistSagaID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:playlistSagaID:");
}

id objc_msgSend_initWithDatabaseID_playlistSagaID_cloudLibraryRevision_properties_trackEdits_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:playlistSagaID:cloudLibraryRevision:properties:trackEdits:");
}

id objc_msgSend_initWithDatabaseID_playlistSagaID_sharingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:playlistSagaID:sharingMode:");
}

id objc_msgSend_initWithDatabaseID_sagaIDs_itemKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:sagaIDs:itemKind:");
}

id objc_msgSend_initWithDatabaseID_seedID_numberOfItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseID:seedID:numberOfItems:");
}

id objc_msgSend_initWithDatabaseRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseRevision:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDeveloperToken_clientInfo_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeveloperToken:clientInfo:options:");
}

id objc_msgSend_initWithDeveloperToken_userToken_userTokenFetchingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeveloperToken:userToken:userTokenFetchingError:");
}

id objc_msgSend_initWithDictionary_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:error:");
}

id objc_msgSend_initWithDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionaryRepresentation:");
}

id objc_msgSend_initWithDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDouble:");
}

id objc_msgSend_initWithDownloaderAccountID_purchaserAccountID_familyID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDownloaderAccountID:purchaserAccountID:familyID:");
}

id objc_msgSend_initWithEntity_artworkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntity:artworkType:");
}

id objc_msgSend_initWithEntity_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntity:clientIdentity:");
}

id objc_msgSend_initWithEntityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntityType:");
}

id objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnvironmentName:namedDelegatePort:queue:");
}

id objc_msgSend_initWithGlobalPlaylistID_contentTaste_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGlobalPlaylistID:contentTaste:configuration:");
}

id objc_msgSend_initWithHandlerProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandlerProvider:");
}

id objc_msgSend_initWithIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentity:");
}

id objc_msgSend_initWithIdentity_identityStore_clientInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentity:identityStore:clientInfo:");
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyOptions:valueOptions:capacity:");
}

id objc_msgSend_initWithKindsToExclude_supportedMediaKindsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKindsToExclude:supportedMediaKindsHandler:");
}

id objc_msgSend_initWithLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLibrary:");
}

id objc_msgSend_initWithLibraryIdentifier_domain_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLibraryIdentifier:domain:clientIdentity:");
}

id objc_msgSend_initWithLibraryManagementPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLibraryManagementPolicy:");
}

id objc_msgSend_initWithLibraryManagementPolicy_backgroundTaskScheduler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLibraryManagementPolicy:backgroundTaskScheduler:");
}

id objc_msgSend_initWithLibraryPath_trackData_playlistData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLibraryPath:trackData:playlistData:");
}

id objc_msgSend_initWithLibraryPath_trackData_playlistData_albumArtistData_albumData_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLibraryPath:trackData:playlistData:albumArtistData:albumData:clientIdentity:");
}

id objc_msgSend_initWithLibraryPath_trackData_playlistData_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLibraryPath:trackData:playlistData:clientIdentity:");
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:");
}

id objc_msgSend_initWithLookupItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLookupItems:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithMediaAPIResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMediaAPIResponse:");
}

id objc_msgSend_initWithMessageUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMessageUserInfo:");
}

id objc_msgSend_initWithNSError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNSError:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithNewArtistContentResponseModel_andMLModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNewArtistContentResponseModel:andMLModel:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjectsAndKeys:");
}

id objc_msgSend_initWithOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOperation:");
}

id objc_msgSend_initWithOperationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOperationQueue:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithOutputFileHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputFileHandle:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPersistentID_inLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersistentID:inLibrary:");
}

id objc_msgSend_initWithPlayActivityTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayActivityTable:");
}

id objc_msgSend_initWithPrivacyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrivacyIdentifier:");
}

id objc_msgSend_initWithPrivacyIdentifier_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrivacyIdentifier:identity:");
}

id objc_msgSend_initWithProperties_relationships_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProperties:relationships:");
}

id objc_msgSend_initWithProtobufData_type_isResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProtobufData:type:isResponse:");
}

id objc_msgSend_initWithRemoteRequestOperationResponse_remoteRequestOperationError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRemoteRequestOperationResponse:remoteRequestOperationError:");
}

id objc_msgSend_initWithRequestContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:");
}

id objc_msgSend_initWithRequestContext_allowsExplicitContent_isAutomatic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:allowsExplicitContent:isAutomatic:");
}

id objc_msgSend_initWithRequestContext_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:completionBlock:");
}

id objc_msgSend_initWithRequestContext_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:completionHandler:");
}

id objc_msgSend_initWithRequestContext_keyStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:keyStore:");
}

id objc_msgSend_initWithRequestContext_mediaKindsToAdd_mediaKindsToRemove_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:mediaKindsToAdd:mediaKindsToRemove:");
}

id objc_msgSend_initWithRequestContext_notificationType_notificationParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:notificationType:notificationParameters:");
}

id objc_msgSend_initWithRequestContext_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestContext:token:");
}

id objc_msgSend_initWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResponse:");
}

id objc_msgSend_initWithResponse_data_userInfo_storagePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResponse:data:userInfo:storagePolicy:");
}

id objc_msgSend_initWithResponseDictionary_forDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResponseDictionary:forDomain:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithShape_dataType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithShape:dataType:error:");
}

id objc_msgSend_initWithSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSong:");
}

id objc_msgSend_initWithSourceType_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSourceType:configuration:");
}

id objc_msgSend_initWithSourceURL_preferredImageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSourceURL:preferredImageSize:");
}

id objc_msgSend_initWithStartHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartHandler:");
}

id objc_msgSend_initWithStoreID_globalPlaylistID_albumCloudLibraryID_artistCloudLibraryID_entityType_time_databaseID_databaseRevision_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithStoreID:globalPlaylistID:albumCloudLibraryID:artistCloudLibraryID:entityType:time:databaseID:databaseRevision:");
}

id objc_msgSend_initWithStoreItemID_additionalTrackMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreItemID:additionalTrackMetadata:");
}

id objc_msgSend_initWithStoreItemID_mediaContentTasteItem_contentTaste_configuration_timeStamp_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreItemID:mediaContentTasteItem:contentTaste:configuration:timeStamp:");
}

id objc_msgSend_initWithStoreRequestContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreRequestContext:");
}

id objc_msgSend_initWithStoreRequestContext_params_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreRequestContext:params:");
}

id objc_msgSend_initWithStoreRequestContext_subscriptionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreRequestContext:subscriptionStatus:");
}

id objc_msgSend_initWithStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStream:");
}

id objc_msgSend_initWithSubscribedPlaylistCloudIDs_cloudLibraryConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscribedPlaylistCloudIDs:cloudLibraryConnection:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithSystemApplicationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemApplicationType:");
}

id objc_msgSend_initWithTemporaryFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTemporaryFileURL:");
}

id objc_msgSend_initWithTitle_andStoreAdamID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:andStoreAdamID:");
}

id objc_msgSend_initWithToken_artworkType_musicLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithToken:artworkType:musicLibrary:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_requestContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:requestContext:");
}

id objc_msgSend_initWithURLRequest_requestContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURLRequest:requestContext:");
}

id objc_msgSend_initWithURLRequest_requestContext_resumeData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURLRequest:requestContext:resumeData:");
}

id objc_msgSend_initWithURLSession_configuration_cloudID_artworkToken_artworkType_sourceType_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithURLSession:configuration:cloudID:artworkToken:artworkType:sourceType:clientIdentity:");
}

id objc_msgSend_initWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnsignedChar:");
}

id objc_msgSend_initWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnsignedLong:");
}

id objc_msgSend_initWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnsignedLongLong:");
}

id objc_msgSend_initWithUnsignedShort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnsignedShort:");
}

id objc_msgSend_initWithUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserIdentity:");
}

id objc_msgSend_initWithUserIdentity_userIdentityStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserIdentity:userIdentityStore:");
}

id objc_msgSend_initWithUserIdentity_userIdentityStore_clientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserIdentity:userIdentityStore:clientIdentity:");
}

id objc_msgSend_initWithUserInteractionLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserInteractionLevel:");
}

id objc_msgSend_initWithVerificationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVerificationContext:");
}

id objc_msgSend_initialState(void *a1, const char *a2, ...)
{
  return _[a1 initialState];
}

id objc_msgSend_inputStreamWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputStreamWithData:");
}

id objc_msgSend_inputStreamWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputStreamWithURL:");
}

id objc_msgSend_insertPlayActivityEvent_returningError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertPlayActivityEvent:returningError:");
}

id objc_msgSend_insertPropertiesForUserIdentity_andPostAccountChangeNotification_usingBlock_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "insertPropertiesForUserIdentity:andPostAccountChangeNotification:usingBlock:completionHandler:");
}

id objc_msgSend_insertPropertiesForUserIdentity_usingBlock_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertPropertiesForUserIdentity:usingBlock:completionHandler:");
}

id objc_msgSend_instanceMethodForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instanceMethodForSelector:");
}

id objc_msgSend_int64ForColumnIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "int64ForColumnIndex:");
}

id objc_msgSend_int64ValueForBagKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "int64ValueForBagKey:");
}

id objc_msgSend_int64ValueForFirstRowAndColumn(void *a1, const char *a2, ...)
{
  return _[a1 int64ValueForFirstRowAndColumn];
}

id objc_msgSend_intForColumnIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intForColumnIndex:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interestDictionary(void *a1, const char *a2, ...)
{
  return _[a1 interestDictionary];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_internalOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 internalOperationQueue];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateCachedSubscriptionStatusWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateCachedSubscriptionStatusWithCompletionHandler:");
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isActiveLocker(void *a1, const char *a2, ...)
{
  return _[a1 isActiveLocker];
}

id objc_msgSend_isActiveUser(void *a1, const char *a2, ...)
{
  return _[a1 isActiveUser];
}

id objc_msgSend_isAppleTV(void *a1, const char *a2, ...)
{
  return _[a1 isAppleTV];
}

id objc_msgSend_isAudioAccessory(void *a1, const char *a2, ...)
{
  return _[a1 isAudioAccessory];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCellularDataRestrictedForMusic(void *a1, const char *a2, ...)
{
  return _[a1 isCellularDataRestrictedForMusic];
}

id objc_msgSend_isCellularDataRestrictedForStoreApps(void *a1, const char *a2, ...)
{
  return _[a1 isCellularDataRestrictedForStoreApps];
}

id objc_msgSend_isCellularDataRestrictedForVideos(void *a1, const char *a2, ...)
{
  return _[a1 isCellularDataRestrictedForVideos];
}

id objc_msgSend_isCharging(void *a1, const char *a2, ...)
{
  return _[a1 isCharging];
}

id objc_msgSend_isCollaborativePlaylist(void *a1, const char *a2, ...)
{
  return _[a1 isCollaborativePlaylist];
}

id objc_msgSend_isContinuityCameraUsed(void *a1, const char *a2, ...)
{
  return _[a1 isContinuityCameraUsed];
}

id objc_msgSend_isCurrentDeviceValidHomeAccessory(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentDeviceValidHomeAccessory];
}

id objc_msgSend_isCurrentNetworkLinkHighQuality(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentNetworkLinkHighQuality];
}

id objc_msgSend_isDeviceClassCUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceClassCUnlocked];
}

id objc_msgSend_isDeviceSetupComplete(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceSetupComplete];
}

id objc_msgSend_isEnablingCloudLibraryDestructive(void *a1, const char *a2, ...)
{
  return _[a1 isEnablingCloudLibraryDestructive];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExplicit(void *a1, const char *a2, ...)
{
  return _[a1 isExplicit];
}

id objc_msgSend_isExplicitSettingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isExplicitSettingEnabled];
}

id objc_msgSend_isExplicitUserAction(void *a1, const char *a2, ...)
{
  return _[a1 isExplicitUserAction];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isIPhone(void *a1, const char *a2, ...)
{
  return _[a1 isIPhone];
}

id objc_msgSend_isIPod(void *a1, const char *a2, ...)
{
  return _[a1 isIPod];
}

id objc_msgSend_isInitialImport(void *a1, const char *a2, ...)
{
  return _[a1 isInitialImport];
}

id objc_msgSend_isInitialUpdate(void *a1, const char *a2, ...)
{
  return _[a1 isInitialUpdate];
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return _[a1 isInternalBuild];
}

id objc_msgSend_isMac(void *a1, const char *a2, ...)
{
  return _[a1 isMac];
}

id objc_msgSend_isManageable(void *a1, const char *a2, ...)
{
  return _[a1 isManageable];
}

id objc_msgSend_isManagedAppleID(void *a1, const char *a2, ...)
{
  return _[a1 isManagedAppleID];
}

id objc_msgSend_isMatchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isMatchEnabled];
}

id objc_msgSend_isMediaKindDisabledForJaliscoLibrary_clientIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMediaKindDisabledForJaliscoLibrary:clientIdentity:completion:");
}

id objc_msgSend_isMediaSyncingSupported(void *a1, const char *a2, ...)
{
  return _[a1 isMediaSyncingSupported];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isNSArray__(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNSArray__");
}

id objc_msgSend_isNSData__(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNSData__");
}

id objc_msgSend_isNSString__(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNSString__");
}

id objc_msgSend_isOffline(void *a1, const char *a2, ...)
{
  return _[a1 isOffline];
}

id objc_msgSend_isOnboarded(void *a1, const char *a2, ...)
{
  return _[a1 isOnboarded];
}

id objc_msgSend_isPersistent(void *a1, const char *a2, ...)
{
  return _[a1 isPersistent];
}

id objc_msgSend_isPhoneNumberAccessRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isPhoneNumberAccessRestricted];
}

id objc_msgSend_isPrivateListeningEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPrivateListeningEnabled];
}

id objc_msgSend_isPrivateListeningEnabledForCurrentAccessory(void *a1, const char *a2, ...)
{
  return _[a1 isPrivateListeningEnabledForCurrentAccessory];
}

id objc_msgSend_isROSDevice(void *a1, const char *a2, ...)
{
  return _[a1 isROSDevice];
}

id objc_msgSend_isRemoteServerLikelyReachable(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteServerLikelyReachable];
}

id objc_msgSend_isRemoteServerReachable(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteServerReachable];
}

id objc_msgSend_isSBEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSBEnabled];
}

id objc_msgSend_isSetupAssistantComplete(void *a1, const char *a2, ...)
{
  return _[a1 isSetupAssistantComplete];
}

id objc_msgSend_isSetupCompleted(void *a1, const char *a2, ...)
{
  return _[a1 isSetupCompleted];
}

id objc_msgSend_isSiriInitiated(void *a1, const char *a2, ...)
{
  return _[a1 isSiriInitiated];
}

id objc_msgSend_isSpatialized(void *a1, const char *a2, ...)
{
  return _[a1 isSpatialized];
}

id objc_msgSend_isStartupSequenceCompleted(void *a1, const char *a2, ...)
{
  return _[a1 isStartupSequenceCompleted];
}

id objc_msgSend_isToggled(void *a1, const char *a2, ...)
{
  return _[a1 isToggled];
}

id objc_msgSend_isUpdatingCloudLibraryWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUpdatingCloudLibraryWithCompletion:");
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isWatch(void *a1, const char *a2, ...)
{
  return _[a1 isWatch];
}

id objc_msgSend_isWiFiAssociated(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiAssociated];
}

id objc_msgSend_itemAdamID(void *a1, const char *a2, ...)
{
  return _[a1 itemAdamID];
}

id objc_msgSend_itemDuration(void *a1, const char *a2, ...)
{
  return _[a1 itemDuration];
}

id objc_msgSend_itemEndTime(void *a1, const char *a2, ...)
{
  return _[a1 itemEndTime];
}

id objc_msgSend_itemForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemForIdentifier:");
}

id objc_msgSend_itemIDs(void *a1, const char *a2, ...)
{
  return _[a1 itemIDs];
}

id objc_msgSend_itemKind(void *a1, const char *a2, ...)
{
  return _[a1 itemKind];
}

id objc_msgSend_itemPersistentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 itemPersistentIdentifier];
}

id objc_msgSend_itemPositionUUID(void *a1, const char *a2, ...)
{
  return _[a1 itemPositionUUID];
}

id objc_msgSend_itemStartTime(void *a1, const char *a2, ...)
{
  return _[a1 itemStartTime];
}

id objc_msgSend_itemType(void *a1, const char *a2, ...)
{
  return _[a1 itemType];
}

id objc_msgSend_itemUUID(void *a1, const char *a2, ...)
{
  return _[a1 itemUUID];
}

id objc_msgSend_jaliscoAccountID(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoAccountID];
}

id objc_msgSend_jaliscoChangedMediaTypes(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoChangedMediaTypes];
}

id objc_msgSend_jaliscoGetSortedMediaKinds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jaliscoGetSortedMediaKinds:");
}

id objc_msgSend_jaliscoHasCloudGeniusData(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoHasCloudGeniusData];
}

id objc_msgSend_jaliscoLastExcludedMediaKinds(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoLastExcludedMediaKinds];
}

id objc_msgSend_jaliscoLastLibraryUpdateTime(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoLastLibraryUpdateTime];
}

id objc_msgSend_jaliscoLastSupportedMediaKinds(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoLastSupportedMediaKinds];
}

id objc_msgSend_jaliscoLibrary(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoLibrary];
}

id objc_msgSend_jaliscoLibraryWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jaliscoLibraryWithReason:");
}

id objc_msgSend_jaliscoNeedsUpdateForTokens(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoNeedsUpdateForTokens];
}

id objc_msgSend_jaliscoOnDiskDatabaseRevision(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoOnDiskDatabaseRevision];
}

id objc_msgSend_joinCollaborationWithGlobalPlaylistID_invitationURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinCollaborationWithGlobalPlaylistID:invitationURL:completion:");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyData(void *a1, const char *a2, ...)
{
  return _[a1 keyData];
}

id objc_msgSend_keyValueStorePayloadWithEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyValueStorePayloadWithEntity:");
}

id objc_msgSend_kindWithVariants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kindWithVariants:");
}

id objc_msgSend_knownAccountDSIDs(void *a1, const char *a2, ...)
{
  return _[a1 knownAccountDSIDs];
}

id objc_msgSend_knownActiveAccountDSID(void *a1, const char *a2, ...)
{
  return _[a1 knownActiveAccountDSID];
}

id objc_msgSend_lastDevicePlaybackDate(void *a1, const char *a2, ...)
{
  return _[a1 lastDevicePlaybackDate];
}

id objc_msgSend_lastError(void *a1, const char *a2, ...)
{
  return _[a1 lastError];
}

id objc_msgSend_lastKnownExplicitContentAllowed(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownExplicitContentAllowed];
}

id objc_msgSend_lastKnownLocalStoreAccountProperties(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownLocalStoreAccountProperties];
}

id objc_msgSend_lastKnownMusicSubscriptionType(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownMusicSubscriptionType];
}

id objc_msgSend_lastKnownMusicVideosAllowed(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownMusicVideosAllowed];
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _[a1 lastName];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastPlayedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayedDate];
}

id objc_msgSend_lastSyncedDomainVersion(void *a1, const char *a2, ...)
{
  return _[a1 lastSyncedDomainVersion];
}

id objc_msgSend_lastSyncedEntityRevision(void *a1, const char *a2, ...)
{
  return _[a1 lastSyncedEntityRevision];
}

id objc_msgSend_lastUpdatedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastUpdatedDate];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_legacyScore(void *a1, const char *a2, ...)
{
  return _[a1 legacyScore];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_library(void *a1, const char *a2, ...)
{
  return _[a1 library];
}

id objc_msgSend_libraryAddedDate(void *a1, const char *a2, ...)
{
  return _[a1 libraryAddedDate];
}

id objc_msgSend_libraryBagKey(void *a1, const char *a2, ...)
{
  return _[a1 libraryBagKey];
}

id objc_msgSend_libraryContainerPath(void *a1, const char *a2, ...)
{
  return _[a1 libraryContainerPath];
}

id objc_msgSend_libraryDAAPConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 libraryDAAPConfiguration];
}

id objc_msgSend_libraryIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 libraryIdentifier];
}

id objc_msgSend_libraryManagementPolicy(void *a1, const char *a2, ...)
{
  return _[a1 libraryManagementPolicy];
}

id objc_msgSend_libraryUID(void *a1, const char *a2, ...)
{
  return _[a1 libraryUID];
}

id objc_msgSend_libraryUpdateRequired(void *a1, const char *a2, ...)
{
  return _[a1 libraryUpdateRequired];
}

id objc_msgSend_libraryWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "libraryWithIdentifier:");
}

id objc_msgSend_lightweightSubscriptionStatus(void *a1, const char *a2, ...)
{
  return _[a1 lightweightSubscriptionStatus];
}

id objc_msgSend_linkItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkItemAtURL:toURL:error:");
}

id objc_msgSend_listCloudServerOperations(void *a1, const char *a2, ...)
{
  return _[a1 listCloudServerOperations];
}

id objc_msgSend_loadArtworkInfoForContainerSagaIDs_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadArtworkInfoForContainerSagaIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_loadArtworkInfoForPurchaseHistoryIDs_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadArtworkInfoForPurchaseHistoryIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_loadArtworkInfoForSagaIDs_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadArtworkInfoForSagaIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_loadArtworkInfoForSubscriptionContainerPersistentIDs_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadArtworkInfoForSubscriptionContainerPersistentIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_loadArtworkInfoForSubscriptionItemPersistentIDs_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadArtworkInfoForSubscriptionItemPersistentIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_loadBooksForStoreIDs_clientIdentity_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadBooksForStoreIDs:clientIdentity:withCompletionHandler:");
}

id objc_msgSend_loadGeniusItemsForSagaID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadGeniusItemsForSagaID:clientIdentity:completionHandler:");
}

id objc_msgSend_loadLastKnownEnableICMLStatusWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadLastKnownEnableICMLStatusWithCompletionHandler:");
}

id objc_msgSend_loadMissingArtworkWithClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadMissingArtworkWithClientIdentity:");
}

id objc_msgSend_loadScreenshotInfoForPurchaseHistoryIDs_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadScreenshotInfoForPurchaseHistoryIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_loadScreenshotInfoForSagaIDs_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadScreenshotInfoForSagaIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_loadScreenshotInfoForSubscriptionPersistentIDs_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadScreenshotInfoForSubscriptionPersistentIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_localDatabaseRevision(void *a1, const char *a2, ...)
{
  return _[a1 localDatabaseRevision];
}

id objc_msgSend_localStoreAccountProperties(void *a1, const char *a2, ...)
{
  return _[a1 localStoreAccountProperties];
}

id objc_msgSend_localeWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeWithLocaleIdentifier:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_logCategory(void *a1, const char *a2, ...)
{
  return _[a1 logCategory];
}

id objc_msgSend_logCloudAddRequestDescription(void *a1, const char *a2, ...)
{
  return _[a1 logCloudAddRequestDescription];
}

id objc_msgSend_logEvent_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEvent:payload:");
}

id objc_msgSend_loginRequestInFlight(void *a1, const char *a2, ...)
{
  return _[a1 loginRequestInFlight];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_lyricsDisplayedCharacterCount(void *a1, const char *a2, ...)
{
  return _[a1 lyricsDisplayedCharacterCount];
}

id objc_msgSend_lyricsID(void *a1, const char *a2, ...)
{
  return _[a1 lyricsID];
}

id objc_msgSend_lyricsInfoDictionaries(void *a1, const char *a2, ...)
{
  return _[a1 lyricsInfoDictionaries];
}

id objc_msgSend_lyricsLanguage(void *a1, const char *a2, ...)
{
  return _[a1 lyricsLanguage];
}

id objc_msgSend_machServiceListener(void *a1, const char *a2, ...)
{
  return _[a1 machServiceListener];
}

id objc_msgSend_machServiceName(void *a1, const char *a2, ...)
{
  return _[a1 machServiceName];
}

id objc_msgSend_main(void *a1, const char *a2, ...)
{
  return _[a1 main];
}

id objc_msgSend_mainScreenSize(void *a1, const char *a2, ...)
{
  return _[a1 mainScreenSize];
}

id objc_msgSend_mapProperty_toCode_valueType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapProperty:toCode:valueType:");
}

id objc_msgSend_mappedDataWithContentsOfTemporaryFileURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mappedDataWithContentsOfTemporaryFileURL:error:");
}

id objc_msgSend_maxConcurrentOperationCount(void *a1, const char *a2, ...)
{
  return _[a1 maxConcurrentOperationCount];
}

id objc_msgSend_maxRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 maxRetryCount];
}

id objc_msgSend_maxSupportedSize(void *a1, const char *a2, ...)
{
  return _[a1 maxSupportedSize];
}

id objc_msgSend_maxSyncRetryIntervalSeconds(void *a1, const char *a2, ...)
{
  return _[a1 maxSyncRetryIntervalSeconds];
}

id objc_msgSend_mediaAPIRequestURL(void *a1, const char *a2, ...)
{
  return _[a1 mediaAPIRequestURL];
}

id objc_msgSend_mediaFilter(void *a1, const char *a2, ...)
{
  return _[a1 mediaFilter];
}

id objc_msgSend_mediaFolderPathByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaFolderPathByAppendingPathComponent:");
}

id objc_msgSend_mediaKinds(void *a1, const char *a2, ...)
{
  return _[a1 mediaKinds];
}

id objc_msgSend_mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates(void *a1, const char *a2, ...)
{
  return _[a1 mediaLibraryAccessApplicationIdentifiersWithTCCAcceptanceDates];
}

id objc_msgSend_mediaPlayerBundle(void *a1, const char *a2, ...)
{
  return _[a1 mediaPlayerBundle];
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_mediaUserStateCenterServer(void *a1, const char *a2, ...)
{
  return _[a1 mediaUserStateCenterServer];
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_mergeToCloudLibraryPreference(void *a1, const char *a2, ...)
{
  return _[a1 mergeToCloudLibraryPreference];
}

id objc_msgSend_messageEntriesForBundleIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageEntriesForBundleIdentifier:completion:");
}

id objc_msgSend_messageEntryWithIdentifier_bundleIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageEntryWithIdentifier:bundleIdentifier:completion:");
}

id objc_msgSend_metadataDictionary(void *a1, const char *a2, ...)
{
  return _[a1 metadataDictionary];
}

id objc_msgSend_metadataFilter(void *a1, const char *a2, ...)
{
  return _[a1 metadataFilter];
}

id objc_msgSend_metadataKeys(void *a1, const char *a2, ...)
{
  return _[a1 metadataKeys];
}

id objc_msgSend_metadataWithItemIdentifier_keyValueStorePayload_failuresOkay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataWithItemIdentifier:keyValueStorePayload:failuresOkay:");
}

id objc_msgSend_metadataWithPlaybackPositionKey_failuresOkay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataWithPlaybackPositionKey:failuresOkay:");
}

id objc_msgSend_method(void *a1, const char *a2, ...)
{
  return _[a1 method];
}

id objc_msgSend_metrics(void *a1, const char *a2, ...)
{
  return _[a1 metrics];
}

id objc_msgSend_migrateExistingArtworkToken_newArtworkToken_newSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateExistingArtworkToken:newArtworkToken:newSourceType:");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_mlModel(void *a1, const char *a2, ...)
{
  return _[a1 mlModel];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelWithContentsOfURL:error:");
}

id objc_msgSend_moduleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 moduleIdentifier];
}

id objc_msgSend_msv_analyticSignature(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_analyticSignature");
}

id objc_msgSend_msv_compactDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_compactDescription");
}

id objc_msgSend_msv_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_description");
}

id objc_msgSend_msv_errorByRemovingUnsafeUserInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_errorByRemovingUnsafeUserInfo");
}

id objc_msgSend_msv_errorWithDomain_code_debugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_errorWithDomain:code:debugDescription:");
}

id objc_msgSend_msv_errorWithDomain_code_underlyingError_debugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_errorWithDomain:code:underlyingError:debugDescription:");
}

id objc_msgSend_msv_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_filter:");
}

id objc_msgSend_msv_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_map:");
}

id objc_msgSend_msv_uploadTaskWithRequest_fromData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_uploadTaskWithRequest:fromData:completionHandler:");
}

id objc_msgSend_multiArrayValue(void *a1, const char *a2, ...)
{
  return _[a1 multiArrayValue];
}

id objc_msgSend_music(void *a1, const char *a2, ...)
{
  return _[a1 music];
}

id objc_msgSend_musicLibrary(void *a1, const char *a2, ...)
{
  return _[a1 musicLibrary];
}

id objc_msgSend_musicLibraryForUserAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "musicLibraryForUserAccount:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_needsResetSync(void *a1, const char *a2, ...)
{
  return _[a1 needsResetSync];
}

id objc_msgSend_needsUpdateForTokens(void *a1, const char *a2, ...)
{
  return _[a1 needsUpdateForTokens];
}

id objc_msgSend_networkAvailabilityService(void *a1, const char *a2, ...)
{
  return _[a1 networkAvailabilityService];
}

id objc_msgSend_networkType(void *a1, const char *a2, ...)
{
  return _[a1 networkType];
}

id objc_msgSend_newImporter(void *a1, const char *a2, ...)
{
  return _[a1 newImporter];
}

id objc_msgSend_newWithPersistentID_inLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newWithPersistentID:inLibrary:");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _[a1 nextObject];
}

id objc_msgSend_notificationCenter_didChangeSettings_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationCenter:didChangeSettings:bag:");
}

id objc_msgSend_notificationWithName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationWithName:object:userInfo:");
}

id objc_msgSend_notificationsManager_didReceiveActiveUserIdentityDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveActiveUserIdentityDidChangeNotification:");
}

id objc_msgSend_notificationsManager_didReceiveAllowsExplicitContentDidChangeNotification_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveAllowsExplicitContentDidChangeNotification:");
}

id objc_msgSend_notificationsManager_didReceiveAllowsMusicVideosDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveAllowsMusicVideosDidChangeNotification:");
}

id objc_msgSend_notificationsManager_didReceiveApplicationInstallationNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveApplicationInstallationNotification:");
}

id objc_msgSend_notificationsManager_didReceiveAuthServiceTokenDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveAuthServiceTokenDidChangeNotification:");
}

id objc_msgSend_notificationsManager_didReceiveFamilyDeletionEventNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveFamilyDeletionEventNotification:");
}

id objc_msgSend_notificationsManager_didReceiveHandlerCoordinatorFinishedInitializationNotification_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveHandlerCoordinatorFinishedInitializationNotification:");
}

id objc_msgSend_notificationsManager_didReceiveNotificationChangingUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveNotificationChangingUserState:");
}

id objc_msgSend_notificationsManager_didReceiveSubscriptionStatusDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveSubscriptionStatusDidChangeNotification:");
}

id objc_msgSend_notificationsManager_didReceiveUserIdentityStoreDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManager:didReceiveUserIdentityStoreDidChangeNotification:");
}

id objc_msgSend_notificationsManagerDidReceiveBuddySetupDoneDarwinNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceiveBuddySetupDoneDarwinNotification:");
}

id objc_msgSend_notificationsManagerDidReceiveCellularDataRestrictionDidChangeDarwinNotification_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceiveCellularDataRestrictionDidChangeDarwinNotification:");
}

id objc_msgSend_notificationsManagerDidReceiveCloudAuthenticationDidChangeDarwinNotification_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceiveCloudAuthenticationDidChangeDarwinNotification:");
}

id objc_msgSend_notificationsManagerDidReceiveFamilyCircleChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceiveFamilyCircleChangedNotification:");
}

id objc_msgSend_notificationsManagerDidReceiveFirstUnlockNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceiveFirstUnlockNotification:");
}

id objc_msgSend_notificationsManagerDidReceiveLibraryImportDidFinishDarwinNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceiveLibraryImportDidFinishDarwinNotification:");
}

id objc_msgSend_notificationsManagerDidReceiveMusicSettingsChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceiveMusicSettingsChangedNotification:");
}

id objc_msgSend_notificationsManagerDidReceivePhoneNumberChangedNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidReceivePhoneNumberChangedNotification:");
}

id objc_msgSend_notificationsManagerDidRecieveICPlayActivityFlushInternalTestRequestNotification_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationsManagerDidRecieveICPlayActivityFlushInternalTestRequestNotification:");
}

id objc_msgSend_notifyCloudLibraryAvailabilityDidChange(void *a1, const char *a2, ...)
{
  return _[a1 notifyCloudLibraryAvailabilityDidChange];
}

id objc_msgSend_notifyContentsDidChange(void *a1, const char *a2, ...)
{
  return _[a1 notifyContentsDidChange];
}

id objc_msgSend_notifyEntitiesAddedOrRemoved(void *a1, const char *a2, ...)
{
  return _[a1 notifyEntitiesAddedOrRemoved];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberForBagKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberForBagKey:");
}

id objc_msgSend_numberForColumnIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberForColumnIndex:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForFirstRowAndColumn(void *a1, const char *a2, ...)
{
  return _[a1 objectForFirstRowAndColumn];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsPassingTest:");
}

id objc_msgSend_onDiskRevision(void *a1, const char *a2, ...)
{
  return _[a1 onDiskRevision];
}

id objc_msgSend_opaqueID(void *a1, const char *a2, ...)
{
  return _[a1 opaqueID];
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return _[a1 open];
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _[a1 operationCount];
}

id objc_msgSend_operationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 operationIdentifier];
}

id objc_msgSend_operationQueue(void *a1, const char *a2, ...)
{
  return _[a1 operationQueue];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _[a1 operations];
}

id objc_msgSend_originalArtworkDirectory(void *a1, const char *a2, ...)
{
  return _[a1 originalArtworkDirectory];
}

id objc_msgSend_originalFileURL(void *a1, const char *a2, ...)
{
  return _[a1 originalFileURL];
}

id objc_msgSend_originatingClientConnection(void *a1, const char *a2, ...)
{
  return _[a1 originatingClientConnection];
}

id objc_msgSend_outputStreamToFileAtPath_append_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputStreamToFileAtPath:append:");
}

id objc_msgSend_oversizeLogCategory(void *a1, const char *a2, ...)
{
  return _[a1 oversizeLogCategory];
}

id objc_msgSend_parse(void *a1, const char *a2, ...)
{
  return _[a1 parse];
}

id objc_msgSend_parseErrorInResponseData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseErrorInResponseData:");
}

id objc_msgSend_parseItemWithBytes_length_valuesOut_valuesCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseItemWithBytes:length:valuesOut:valuesCapacity:");
}

id objc_msgSend_parseResponseData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseResponseData:");
}

id objc_msgSend_parsedBodyDictionary(void *a1, const char *a2, ...)
{
  return _[a1 parsedBodyDictionary];
}

id objc_msgSend_parserSuccess(void *a1, const char *a2, ...)
{
  return _[a1 parserSuccess];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathForResourceFileOrFolder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResourceFileOrFolder:");
}

id objc_msgSend_pathWithComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathWithComponents:");
}

id objc_msgSend_payloadDataForUpdateResponseKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadDataForUpdateResponseKey:");
}

id objc_msgSend_payloadDownloadPathOverride(void *a1, const char *a2, ...)
{
  return _[a1 payloadDownloadPathOverride];
}

id objc_msgSend_pendingBackgroundTasksData(void *a1, const char *a2, ...)
{
  return _[a1 pendingBackgroundTasksData];
}

id objc_msgSend_pendingChanges(void *a1, const char *a2, ...)
{
  return _[a1 pendingChanges];
}

id objc_msgSend_pendingChangesCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 pendingChangesCoordinator];
}

id objc_msgSend_pendingInvalidationKeyStorePath(void *a1, const char *a2, ...)
{
  return _[a1 pendingInvalidationKeyStorePath];
}

id objc_msgSend_performBlockAfterDeviceSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAfterDeviceSetup:");
}

id objc_msgSend_performDatabaseTransactionWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDatabaseTransactionWithBlock:");
}

id objc_msgSend_performImport_fromSource_withProgressBlock_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performImport:fromSource:withProgressBlock:completionHandler:");
}

id objc_msgSend_performLibraryAnalysisFromResponse_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performLibraryAnalysisFromResponse:withCompletionHandler:");
}

id objc_msgSend_performMaintenanceTasksForDatabaseAtPath_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMaintenanceTasksForDatabaseAtPath:withCompletionHandler:");
}

id objc_msgSend_performReadOnlyDatabaseTransactionWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performReadOnlyDatabaseTransactionWithBlock:");
}

id objc_msgSend_performRequestOnOperationQueue_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestOnOperationQueue:withCompletionHandler:");
}

id objc_msgSend_performRequestWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestWithCompletionHandler:");
}

id objc_msgSend_performRequestWithResponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestWithResponseHandler:");
}

id objc_msgSend_performStoreAlbumArtistLibraryImport_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performStoreAlbumArtistLibraryImport:withCompletion:");
}

id objc_msgSend_performSubscriptionStatusRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSubscriptionStatusRequest:withCompletionHandler:");
}

id objc_msgSend_performSubscriptionStatusRequest_withStatusHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSubscriptionStatusRequest:withStatusHandler:");
}

id objc_msgSend_performTransactionWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTransactionWithBlock:");
}

id objc_msgSend_performUpdate(void *a1, const char *a2, ...)
{
  return _[a1 performUpdate];
}

id objc_msgSend_performUpdateWithClientIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUpdateWithClientIdentity:error:");
}

id objc_msgSend_performUpdateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUpdateWithCompletionHandler:");
}

id objc_msgSend_performWithResponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithResponseHandler:");
}

id objc_msgSend_performanceMetrics(void *a1, const char *a2, ...)
{
  return _[a1 performanceMetrics];
}

id objc_msgSend_persistPlaybackPositionWithContext_isCheckpoint_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistPlaybackPositionWithContext:isCheckpoint:completionHandler:");
}

id objc_msgSend_persistentID(void *a1, const char *a2, ...)
{
  return _[a1 persistentID];
}

id objc_msgSend_personalizedContainerID(void *a1, const char *a2, ...)
{
  return _[a1 personalizedContainerID];
}

id objc_msgSend_playActivityEvents(void *a1, const char *a2, ...)
{
  return _[a1 playActivityEvents];
}

id objc_msgSend_playCount(void *a1, const char *a2, ...)
{
  return _[a1 playCount];
}

id objc_msgSend_playDataBatchIntervalInMinutes(void *a1, const char *a2, ...)
{
  return _[a1 playDataBatchIntervalInMinutes];
}

id objc_msgSend_playbackFormatPreference(void *a1, const char *a2, ...)
{
  return _[a1 playbackFormatPreference];
}

id objc_msgSend_playbackPositionDomain(void *a1, const char *a2, ...)
{
  return _[a1 playbackPositionDomain];
}

id objc_msgSend_playbackPositionKey(void *a1, const char *a2, ...)
{
  return _[a1 playbackPositionKey];
}

id objc_msgSend_playbackPositionService(void *a1, const char *a2, ...)
{
  return _[a1 playbackPositionService];
}

id objc_msgSend_playlistCloudLibraryID(void *a1, const char *a2, ...)
{
  return _[a1 playlistCloudLibraryID];
}

id objc_msgSend_playlistGlobalID(void *a1, const char *a2, ...)
{
  return _[a1 playlistGlobalID];
}

id objc_msgSend_playlistSagaID(void *a1, const char *a2, ...)
{
  return _[a1 playlistSagaID];
}

id objc_msgSend_playlistShareURL(void *a1, const char *a2, ...)
{
  return _[a1 playlistShareURL];
}

id objc_msgSend_playlistVersionHash(void *a1, const char *a2, ...)
{
  return _[a1 playlistVersionHash];
}

id objc_msgSend_positionType(void *a1, const char *a2, ...)
{
  return _[a1 positionType];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_powerAssertionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 powerAssertionIdentifier];
}

id objc_msgSend_predicateMatchingPredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateMatchingPredicates:");
}

id objc_msgSend_predicateWithProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithProperty:");
}

id objc_msgSend_predicateWithProperty_equalToInt64_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithProperty:equalToInt64:");
}

id objc_msgSend_predicateWithProperty_equalToInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithProperty:equalToInteger:");
}

id objc_msgSend_predicateWithProperty_equalToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithProperty:equalToValue:");
}

id objc_msgSend_predicateWithProperty_mask_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithProperty:mask:value:");
}

id objc_msgSend_predicateWithProperty_value_comparison_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithProperty:value:comparison:");
}

id objc_msgSend_predicateWithProperty_values_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithProperty:values:");
}

id objc_msgSend_predictionFromFeatures_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predictionFromFeatures:error:");
}

id objc_msgSend_preferredVideoQuality(void *a1, const char *a2, ...)
{
  return _[a1 preferredVideoQuality];
}

id objc_msgSend_prefetchSKDs(void *a1, const char *a2, ...)
{
  return _[a1 prefetchSKDs];
}

id objc_msgSend_preflightImport(void *a1, const char *a2, ...)
{
  return _[a1 preflightImport];
}

id objc_msgSend_presentWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithCompletion:");
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return _[a1 priority];
}

id objc_msgSend_privacyAcknowledgementPolicy(void *a1, const char *a2, ...)
{
  return _[a1 privacyAcknowledgementPolicy];
}

id objc_msgSend_privacyAcknowledgementRequiredForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privacyAcknowledgementRequiredForIdentifier:");
}

id objc_msgSend_privacyAcknowledgementRequiredForMedia(void *a1, const char *a2, ...)
{
  return _[a1 privacyAcknowledgementRequiredForMedia];
}

id objc_msgSend_privacyAcknowledgementRequiredForMusic(void *a1, const char *a2, ...)
{
  return _[a1 privacyAcknowledgementRequiredForMusic];
}

id objc_msgSend_privacyConsciousDescription(void *a1, const char *a2, ...)
{
  return _[a1 privacyConsciousDescription];
}

id objc_msgSend_privacyConsciousDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 privacyConsciousDictionaryRepresentation];
}

id objc_msgSend_processAddedItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAddedItems:");
}

id objc_msgSend_processDAAPFileAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processDAAPFileAtURL:");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processKeyWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processKeyWithIdentifier:");
}

id objc_msgSend_processPendingChangesUsingLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPendingChangesUsingLibrary:");
}

id objc_msgSend_processPendingKeyInvalidations(void *a1, const char *a2, ...)
{
  return _[a1 processPendingKeyInvalidations];
}

id objc_msgSend_processedItemCount(void *a1, const char *a2, ...)
{
  return _[a1 processedItemCount];
}

id objc_msgSend_profileName(void *a1, const char *a2, ...)
{
  return _[a1 profileName];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_prohibitArtworkPrefetch(void *a1, const char *a2, ...)
{
  return _[a1 prohibitArtworkPrefetch];
}

id objc_msgSend_prohibitLibraryUpload(void *a1, const char *a2, ...)
{
  return _[a1 prohibitLibraryUpload];
}

id objc_msgSend_propertyListObjectWithPlayActivityEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListObjectWithPlayActivityEvent:");
}

id objc_msgSend_propertyListRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 propertyListRepresentation];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_propertySetWithProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertySetWithProperties:");
}

id objc_msgSend_providedAudioQuality(void *a1, const char *a2, ...)
{
  return _[a1 providedAudioQuality];
}

id objc_msgSend_publicToken(void *a1, const char *a2, ...)
{
  return _[a1 publicToken];
}

id objc_msgSend_publishPlaylistWithSagaID_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishPlaylistWithSagaID:clientIdentity:completionHandler:");
}

id objc_msgSend_pullPlaybackPositionWithRequestContext_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pullPlaybackPositionWithRequestContext:completionBlock:");
}

id objc_msgSend_purchaseClientIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 purchaseClientIdentifier];
}

id objc_msgSend_purchaseTokens(void *a1, const char *a2, ...)
{
  return _[a1 purchaseTokens];
}

id objc_msgSend_purchasedAdamID(void *a1, const char *a2, ...)
{
  return _[a1 purchasedAdamID];
}

id objc_msgSend_purchaserAccountID(void *a1, const char *a2, ...)
{
  return _[a1 purchaserAccountID];
}

id objc_msgSend_pushEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 pushEnvironment];
}

id objc_msgSend_pushNotificationState(void *a1, const char *a2, ...)
{
  return _[a1 pushNotificationState];
}

id objc_msgSend_pushPlaybackPositionWithContext_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushPlaybackPositionWithContext:completionHandler:");
}

id objc_msgSend_qualityOfService(void *a1, const char *a2, ...)
{
  return _[a1 qualityOfService];
}

id objc_msgSend_queryFilter(void *a1, const char *a2, ...)
{
  return _[a1 queryFilter];
}

id objc_msgSend_queryFilterPercentEscaped(void *a1, const char *a2, ...)
{
  return _[a1 queryFilterPercentEscaped];
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryItemWithName:value:");
}

id objc_msgSend_queryStoreIDs(void *a1, const char *a2, ...)
{
  return _[a1 queryStoreIDs];
}

id objc_msgSend_queryWithLibrary_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryWithLibrary:predicate:");
}

id objc_msgSend_queryWithLibrary_predicate_usingSections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryWithLibrary:predicate:usingSections:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queueGroupingID(void *a1, const char *a2, ...)
{
  return _[a1 queueGroupingID];
}

id objc_msgSend_radioAdamID(void *a1, const char *a2, ...)
{
  return _[a1 radioAdamID];
}

id objc_msgSend_raise(void *a1, const char *a2, ...)
{
  return _[a1 raise];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rePinCollectionsForClasses_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rePinCollectionsForClasses:configuration:");
}

id objc_msgSend_reactionString(void *a1, const char *a2, ...)
{
  return _[a1 reactionString];
}

id objc_msgSend_readUbiquitousDatabaseMetadataValuesForIdentifiers_forDomain_clientIdentity_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readUbiquitousDatabaseMetadataValuesForIdentifiers:forDomain:clientIdentity:");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_reasonHintType(void *a1, const char *a2, ...)
{
  return _[a1 reasonHintType];
}

id objc_msgSend_recoId(void *a1, const char *a2, ...)
{
  return _[a1 recoId];
}

id objc_msgSend_recommendationData(void *a1, const char *a2, ...)
{
  return _[a1 recommendationData];
}

id objc_msgSend_referencePositionUUID(void *a1, const char *a2, ...)
{
  return _[a1 referencePositionUUID];
}

id objc_msgSend_refreshEnhancedAudioSharedKeys(void *a1, const char *a2, ...)
{
  return _[a1 refreshEnhancedAudioSharedKeys];
}

id objc_msgSend_refreshSharedKeys(void *a1, const char *a2, ...)
{
  return _[a1 refreshSharedKeys];
}

id objc_msgSend_refreshSocialProfilesWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshSocialProfilesWithReply:");
}

id objc_msgSend_refreshSubscriptionUsingRequestContext_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshSubscriptionUsingRequestContext:withCompletionHandler:");
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObserver:");
}

id objc_msgSend_registrationStateForAccountDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registrationStateForAccountDSID:");
}

id objc_msgSend_releaseDate(void *a1, const char *a2, ...)
{
  return _[a1 releaseDate];
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_remoteRequestOperation(void *a1, const char *a2, ...)
{
  return _[a1 remoteRequestOperation];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllPendingChanges(void *a1, const char *a2, ...)
{
  return _[a1 removeAllPendingChanges];
}

id objc_msgSend_removeAllPendingChangesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllPendingChangesWithCompletion:");
}

id objc_msgSend_removeAllUbiquitousMetadataUsingClientIdentity_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllUbiquitousMetadataUsingClientIdentity:error:");
}

id objc_msgSend_removeCachedContentTasteResponseForConnectionConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCachedContentTasteResponseForConnectionConfiguration:");
}

id objc_msgSend_removeCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCharactersInString:");
}

id objc_msgSend_removeCloudSouceAttributes(void *a1, const char *a2, ...)
{
  return _[a1 removeCloudSouceAttributes];
}

id objc_msgSend_removeCloudSourcesWithAttributes_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCloudSourcesWithAttributes:completionHandler:");
}

id objc_msgSend_removeCollaborators_fromCollaborationWithPersistentID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCollaborators:fromCollaborationWithPersistentID:completion:");
}

id objc_msgSend_removeContentTasteOperationsForConnectionConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeContentTasteOperationsForConnectionConfiguration:");
}

id objc_msgSend_removeCookiesWithProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCookiesWithProperties:");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeItemsWithFamilyAccountID_purchaserAccountID_downloaderAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemsWithFamilyAccountID:purchaserAccountID:downloaderAccountID:");
}

id objc_msgSend_removeItemsWithSagaIDs_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemsWithSagaIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_removeKeyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeKeyForIdentifier:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeLibraryWithClientIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLibraryWithClientIdentity:completion:");
}

id objc_msgSend_removeMessageEntryWithIdentifier_forBundleIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMessageEntryWithIdentifier:forBundleIdentifier:completion:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeOrphanedCollectionsInLibrary_usingConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOrphanedCollectionsInLibrary:usingConnection:");
}

id objc_msgSend_removePendingAddedItemsForPermanentlyFailedOperation(void *a1, const char *a2, ...)
{
  return _[a1 removePendingAddedItemsForPermanentlyFailedOperation];
}

id objc_msgSend_removePendingChanges(void *a1, const char *a2, ...)
{
  return _[a1 removePendingChanges];
}

id objc_msgSend_removePlayActivityEvents_returningError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePlayActivityEvents:returningError:");
}

id objc_msgSend_removePlaylistsWithSagaIDs_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePlaylistsWithSagaIDs:clientIdentity:completionHandler:");
}

id objc_msgSend_removeSource_usingConnection_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSource:usingConnection:withCompletionHandler:");
}

id objc_msgSend_removeSource_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSource:withCompletionHandler:");
}

id objc_msgSend_renewalDate(void *a1, const char *a2, ...)
{
  return _[a1 renewalDate];
}

id objc_msgSend_repeatPlayMode(void *a1, const char *a2, ...)
{
  return _[a1 repeatPlayMode];
}

id objc_msgSend_replaceItemAtURL_withItemAtURL_backupItemName_options_resultingItemURL_error_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:");
}

id objc_msgSend_reportingAdamID(void *a1, const char *a2, ...)
{
  return _[a1 reportingAdamID];
}

id objc_msgSend_requestCapabilitiesWithPrivacyPromptPolicy_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCapabilitiesWithPrivacyPromptPolicy:completionHandler:");
}

id objc_msgSend_requestItem(void *a1, const char *a2, ...)
{
  return _[a1 requestItem];
}

id objc_msgSend_requestPersonalizationStyle(void *a1, const char *a2, ...)
{
  return _[a1 requestPersonalizationStyle];
}

id objc_msgSend_requestReason(void *a1, const char *a2, ...)
{
  return _[a1 requestReason];
}

id objc_msgSend_requestURLForBaseURL_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestURLForBaseURL:sessionID:");
}

id objc_msgSend_requestWithDatabaseID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:");
}

id objc_msgSend_requestWithDatabaseID_albumArtistCloudLibraryIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:albumArtistCloudLibraryIDs:properties:");
}

id objc_msgSend_requestWithDatabaseID_albumCloudLibraryIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:albumCloudLibraryIDs:properties:");
}

id objc_msgSend_requestWithDatabaseID_containerIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:containerIDs:");
}

id objc_msgSend_requestWithDatabaseID_containerIDs_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:containerIDs:properties:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_adamID_containerID_referralAlbumAdamID_referralPlaylistGlobalID_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "requestWithDatabaseID:databaseRevision:adamID:containerID:referralAlbumAdamID:referralPlaylistGlobalID:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_addToLibraryBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:databaseRevision:addToLibraryBehavior:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_addToPlaylistBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:databaseRevision:addToPlaylistBehavior:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_containerID_trackList_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:databaseRevision:containerID:trackList:properties:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_opaqueID_bundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:databaseRevision:opaqueID:bundleID:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_opaqueID_bundleID_containerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:databaseRevision:opaqueID:bundleID:containerID:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_playlistProperties_trackList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:databaseRevision:playlistProperties:trackList:");
}

id objc_msgSend_requestWithDatabaseID_databaseRevision_sagaID_containerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:databaseRevision:sagaID:containerID:");
}

id objc_msgSend_requestWithDatabaseID_itemIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:itemIDs:");
}

id objc_msgSend_requestWithDatabaseID_itemIDs_properties_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:itemIDs:properties:useLongIDs:");
}

id objc_msgSend_requestWithDatabaseID_itemIDs_useLongIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:itemIDs:useLongIDs:");
}

id objc_msgSend_requestWithDatabaseID_metadataFilter_queryFilter_purchaseTokens_includeHiddenItems_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:");
}

id objc_msgSend_requestWithDatabaseID_metadataFilter_queryFilter_purchaseTokens_includeHiddenItems_includePreorders_paginationToken_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "requestWithDatabaseID:metadataFilter:queryFilter:purchaseTokens:includeHiddenItems:includePreorders:paginationToken:");
}

id objc_msgSend_requestWithDatabaseID_paginationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:paginationToken:");
}

id objc_msgSend_requestWithDatabaseID_playlistName_seedItemIDs_itemIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:playlistName:seedItemIDs:itemIDs:");
}

id objc_msgSend_requestWithDatabaseID_seedID_numberOfItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseID:seedID:numberOfItems:");
}

id objc_msgSend_requestWithDatabaseRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithDatabaseRevision:");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requestWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:cachePolicy:timeoutInterval:");
}

id objc_msgSend_requestingBundleID(void *a1, const char *a2, ...)
{
  return _[a1 requestingBundleID];
}

id objc_msgSend_requestingBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 requestingBundleIdentifier];
}

id objc_msgSend_requestingBundleVersion(void *a1, const char *a2, ...)
{
  return _[a1 requestingBundleVersion];
}

id objc_msgSend_resetInvitationURLForCollaborationWithPersistentID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetInvitationURLForCollaborationWithPersistentID:completion:");
}

id objc_msgSend_resourceSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 resourceSpecifier];
}

id objc_msgSend_respondToPendingCollaborator_onCollaborationWithPersistentID_withApproval_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondToPendingCollaborator:onCollaborationWithPersistentID:withApproval:completion:");
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _[a1 response];
}

id objc_msgSend_responseCode(void *a1, const char *a2, ...)
{
  return _[a1 responseCode];
}

id objc_msgSend_responseData(void *a1, const char *a2, ...)
{
  return _[a1 responseData];
}

id objc_msgSend_responseDataDestinationFileURL(void *a1, const char *a2, ...)
{
  return _[a1 responseDataDestinationFileURL];
}

id objc_msgSend_responseDataFileURL(void *a1, const char *a2, ...)
{
  return _[a1 responseDataFileURL];
}

id objc_msgSend_responseHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 responseHeaderFields];
}

id objc_msgSend_responseModel(void *a1, const char *a2, ...)
{
  return _[a1 responseModel];
}

id objc_msgSend_responseWithCode_headerFields_data_MIMEType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseWithCode:headerFields:data:MIMEType:error:");
}

id objc_msgSend_responseWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseWithResponse:");
}

id objc_msgSend_restoredStatedWithFallbackAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoredStatedWithFallbackAccounts:");
}

id objc_msgSend_resultWithTimeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultWithTimeout:completion:");
}

id objc_msgSend_resultingCollaborationCloudLibraryID(void *a1, const char *a2, ...)
{
  return _[a1 resultingCollaborationCloudLibraryID];
}

id objc_msgSend_resultingPlaylistCloudLibraryID(void *a1, const char *a2, ...)
{
  return _[a1 resultingPlaylistCloudLibraryID];
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _[a1 results];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_revisionTrackingCode(void *a1, const char *a2, ...)
{
  return _[a1 revisionTrackingCode];
}

id objc_msgSend_rootArtworkCacheDirectory(void *a1, const char *a2, ...)
{
  return _[a1 rootArtworkCacheDirectory];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_sagaAccountID(void *a1, const char *a2, ...)
{
  return _[a1 sagaAccountID];
}

id objc_msgSend_sagaClientFeaturesVersion(void *a1, const char *a2, ...)
{
  return _[a1 sagaClientFeaturesVersion];
}

id objc_msgSend_sagaCloudAddToPlaylistBehavior(void *a1, const char *a2, ...)
{
  return _[a1 sagaCloudAddToPlaylistBehavior];
}

id objc_msgSend_sagaCloudFavoriteSongAddToLibraryBehavior(void *a1, const char *a2, ...)
{
  return _[a1 sagaCloudFavoriteSongAddToLibraryBehavior];
}

id objc_msgSend_sagaCloudLibraryCUID(void *a1, const char *a2, ...)
{
  return _[a1 sagaCloudLibraryCUID];
}

id objc_msgSend_sagaCloudLibraryTroveID(void *a1, const char *a2, ...)
{
  return _[a1 sagaCloudLibraryTroveID];
}

id objc_msgSend_sagaInitiateClientResetSync(void *a1, const char *a2, ...)
{
  return _[a1 sagaInitiateClientResetSync];
}

id objc_msgSend_sagaLastCloudUpdateClientBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 sagaLastCloudUpdateClientBuildVersion];
}

id objc_msgSend_sagaLastItemPlayDataUploadDate(void *a1, const char *a2, ...)
{
  return _[a1 sagaLastItemPlayDataUploadDate];
}

id objc_msgSend_sagaLastKnownActiveLockerAccountDSID(void *a1, const char *a2, ...)
{
  return _[a1 sagaLastKnownActiveLockerAccountDSID];
}

id objc_msgSend_sagaLastLibraryUpdateTime(void *a1, const char *a2, ...)
{
  return _[a1 sagaLastLibraryUpdateTime];
}

id objc_msgSend_sagaLastPlaylistPlayDataUploadDate(void *a1, const char *a2, ...)
{
  return _[a1 sagaLastPlaylistPlayDataUploadDate];
}

id objc_msgSend_sagaLastSubscribedContainersUpdateTime(void *a1, const char *a2, ...)
{
  return _[a1 sagaLastSubscribedContainersUpdateTime];
}

id objc_msgSend_sagaNeedsFullUpdate(void *a1, const char *a2, ...)
{
  return _[a1 sagaNeedsFullUpdate];
}

id objc_msgSend_sagaOnDiskDatabaseRevision(void *a1, const char *a2, ...)
{
  return _[a1 sagaOnDiskDatabaseRevision];
}

id objc_msgSend_sagaPrefersToMergeWithCloudLibrary(void *a1, const char *a2, ...)
{
  return _[a1 sagaPrefersToMergeWithCloudLibrary];
}

id objc_msgSend_sagaServerRevision(void *a1, const char *a2, ...)
{
  return _[a1 sagaServerRevision];
}

id objc_msgSend_sagaUpdatedSubscribedPlaylistIDs(void *a1, const char *a2, ...)
{
  return _[a1 sagaUpdatedSubscribedPlaylistIDs];
}

id objc_msgSend_sampleRate(void *a1, const char *a2, ...)
{
  return _[a1 sampleRate];
}

id objc_msgSend_save(void *a1, const char *a2, ...)
{
  return _[a1 save];
}

id objc_msgSend_saveCookies_forURL_userIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveCookies:forURL:userIdentifier:");
}

id objc_msgSend_scheduleBackgroundTaskToUpdateLibraryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleBackgroundTaskToUpdateLibraryType:");
}

id objc_msgSend_scheduleBackgroundUpdateType_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleBackgroundUpdateType:forConfiguration:");
}

id objc_msgSend_scheduleRecommendationsRefreshTimer(void *a1, const char *a2, ...)
{
  return _[a1 scheduleRecommendationsRefreshTimer];
}

id objc_msgSend_scheduleSyncForContext_isCheckpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleSyncForContext:isCheckpoint:");
}

id objc_msgSend_scheduleSyncWithContext_isCheckpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleSyncWithContext:isCheckpoint:");
}

id objc_msgSend_scheduleTaskOfType_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleTaskOfType:forConfiguration:");
}

id objc_msgSend_score(void *a1, const char *a2, ...)
{
  return _[a1 score];
}

id objc_msgSend_secondsFromGMT(void *a1, const char *a2, ...)
{
  return _[a1 secondsFromGMT];
}

id objc_msgSend_sendProtobuf_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendProtobuf:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequest:completion:");
}

id objc_msgSend_sendRequest_withResponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRequest:withResponseHandler:");
}

id objc_msgSend_serialQueue(void *a1, const char *a2, ...)
{
  return _[a1 serialQueue];
}

id objc_msgSend_server(void *a1, const char *a2, ...)
{
  return _[a1 server];
}

id objc_msgSend_serverCorrelationKey(void *a1, const char *a2, ...)
{
  return _[a1 serverCorrelationKey];
}

id objc_msgSend_serverEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 serverEnvironment];
}

id objc_msgSend_serverOperationsManager(void *a1, const char *a2, ...)
{
  return _[a1 serverOperationsManager];
}

id objc_msgSend_serverRevision(void *a1, const char *a2, ...)
{
  return _[a1 serverRevision];
}

id objc_msgSend_serviceInterface(void *a1, const char *a2, ...)
{
  return _[a1 serviceInterface];
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:");
}

id objc_msgSend_sessionWithIdentifier_creationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithIdentifier:creationBlock:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAPNSToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAPNSToken:");
}

id objc_msgSend_setActionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionType:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActiveLocker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveLocker:");
}

id objc_msgSend_setAdamID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdamID:");
}

id objc_msgSend_setAdamIDToSagaIDMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdamIDToSagaIDMap:");
}

id objc_msgSend_setAddToLibraryWhenFavoritingBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddToLibraryWhenFavoritingBehavior:");
}

id objc_msgSend_setAddToPlaylistBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddToPlaylistBehavior:");
}

id objc_msgSend_setAddedItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddedItems:");
}

id objc_msgSend_setAgeVerificationRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAgeVerificationRequired:");
}

id objc_msgSend_setAlbumArtistPersistentIDsToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlbumArtistPersistentIDsToUpdate:");
}

id objc_msgSend_setAlbumArtistProperties_withArtistPersistentID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlbumArtistProperties:withArtistPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_setAlbumEntityProperties_withAlbumPersistentID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlbumEntityProperties:withAlbumPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_setAlbumMetadataDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlbumMetadataDescriptor:");
}

id objc_msgSend_setAlbumProperties_forItemsWithAlbumPersistentID_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlbumProperties:forItemsWithAlbumPersistentID:clientIdentity:completionHandler:");
}

id objc_msgSend_setAlertHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertHeader:");
}

id objc_msgSend_setAlertMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertMessage:");
}

id objc_msgSend_setAllArtistImagesMapURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllArtistImagesMapURL:");
}

id objc_msgSend_setAllowNoisyAuthPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowNoisyAuthPrompt:");
}

id objc_msgSend_setAllowedRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedRetryCount:");
}

id objc_msgSend_setAllowsCellularAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCellularAccess:");
}

id objc_msgSend_setAllowsCellularData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCellularData:");
}

id objc_msgSend_setAllowsExpiredBags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsExpiredBags:");
}

id objc_msgSend_setAllowsFallbackToExpiredStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsFallbackToExpiredStatus:");
}

id objc_msgSend_setAllowsFallbackToStatusNeedingReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsFallbackToStatusNeedingReload:");
}

id objc_msgSend_setAlternateButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlternateButtonTitle:");
}

id objc_msgSend_setAlternateDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlternateDSID:");
}

id objc_msgSend_setAnisetteVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnisetteVersion:");
}

id objc_msgSend_setArtistMetadataDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtistMetadataDescriptor:");
}

id objc_msgSend_setArtistNameLibraryMatchURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtistNameLibraryMatchURL:");
}

id objc_msgSend_setArtistPersistentIDsToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtistPersistentIDsToUpdate:");
}

id objc_msgSend_setArtworkColorAnalysisAccessQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkColorAnalysisAccessQueue:");
}

id objc_msgSend_setArtworkColorAnalysisOperationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkColorAnalysisOperationQueue:");
}

id objc_msgSend_setArtworkDownloadAccessQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkDownloadAccessQueue:");
}

id objc_msgSend_setArtworkDownloadOperationMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkDownloadOperationMap:");
}

id objc_msgSend_setArtworkDownloadOperationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkDownloadOperationQueue:");
}

id objc_msgSend_setArtworkDownloadSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkDownloadSession:");
}

id objc_msgSend_setArtworkDownloadWatchdog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkDownloadWatchdog:");
}

id objc_msgSend_setArtworkInfoDictionaries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkInfoDictionaries:");
}

id objc_msgSend_setArtworkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkType:");
}

id objc_msgSend_setArtworkURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkURL:");
}

id objc_msgSend_setAssetFileSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetFileSize:");
}

id objc_msgSend_setAssetPrefetchStrategy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetPrefetchStrategy:");
}

id objc_msgSend_setAssetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetURL:");
}

id objc_msgSend_setAsynchronousRequestsAccessQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsynchronousRequestsAccessQueue:");
}

id objc_msgSend_setAuthenticateFailureCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticateFailureCode:");
}

id objc_msgSend_setAuthenticationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticationProvider:");
}

id objc_msgSend_setAuthor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthor:");
}

id objc_msgSend_setAutomaticDownloadsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticDownloadsEnabled:");
}

id objc_msgSend_setBadgeControllerProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeControllerProtocol:");
}

id objc_msgSend_setBadgeCount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeCount:withCompletionHandler:");
}

id objc_msgSend_setBagProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBagProfile:");
}

id objc_msgSend_setBagProfileVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBagProfileVersion:");
}

id objc_msgSend_setBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseURL:");
}

id objc_msgSend_setBodyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBodyData:");
}

id objc_msgSend_setBookmarkTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarkTime:");
}

id objc_msgSend_setBookmarkTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarkTimestamp:");
}

id objc_msgSend_setBooks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBooks:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBulkArtistNameLibraryMatchBatchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBulkArtistNameLibraryMatchBatchSize:");
}

id objc_msgSend_setBulkArtistNameLibraryMatchURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBulkArtistNameLibraryMatchURL:");
}

id objc_msgSend_setBypassCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBypassCache:");
}

id objc_msgSend_setCachePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachePolicy:");
}

id objc_msgSend_setCachedContentTasteUpdateResponse_forConnectionConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedContentTasteUpdateResponse:forConnectionConfiguration:");
}

id objc_msgSend_setCachedResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedResponse:");
}

id objc_msgSend_setCachedSharedControlsCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedSharedControlsCapability:");
}

id objc_msgSend_setCachedU18MinorAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedU18MinorAccountStatus:");
}

id objc_msgSend_setCancelOnHTTPErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelOnHTTPErrors:");
}

id objc_msgSend_setCarousel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarousel:");
}

id objc_msgSend_setCarrierBundleDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarrierBundleDeviceID:");
}

id objc_msgSend_setCarrierBundleProvisioningStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCarrierBundleProvisioningStyle:");
}

id objc_msgSend_setClass_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClass:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClickEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClickEvent:");
}

id objc_msgSend_setClientFeaturesVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientFeaturesVersion:");
}

id objc_msgSend_setClientIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientIdentifier:");
}

id objc_msgSend_setClientIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientIdentity:");
}

id objc_msgSend_setClientInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientInfo:");
}

id objc_msgSend_setClientInitiatedReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientInitiatedReset:");
}

id objc_msgSend_setClientType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientType:");
}

id objc_msgSend_setClientVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientVersion:");
}

id objc_msgSend_setCloudAddToPlaylistBehavior_clientIdentity_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudAddToPlaylistBehavior:clientIdentity:completionHandler:");
}

id objc_msgSend_setCloudFavoriteSongAddToLibraryBehavior_clientIdentity_completionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudFavoriteSongAddToLibraryBehavior:clientIdentity:completionHandler:");
}

id objc_msgSend_setCloudFilteringType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudFilteringType:");
}

id objc_msgSend_setCloudID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudID:");
}

id objc_msgSend_setCloudLibraryStateReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudLibraryStateReason:");
}

id objc_msgSend_setCloudLibrarySyncStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudLibrarySyncStatus:");
}

id objc_msgSend_setCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCode:");
}

id objc_msgSend_setCollaborationCloudLibraryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollaborationCloudLibraryID:");
}

id objc_msgSend_setCollaborationGlobalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollaborationGlobalID:");
}

id objc_msgSend_setCollaborationInviteURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollaborationInviteURL:");
}

id objc_msgSend_setCollaborationInviteURLExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollaborationInviteURLExpirationDate:");
}

id objc_msgSend_setCollaborationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollaborationMode:");
}

id objc_msgSend_setComparisonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComparisonType:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionHandler:");
}

id objc_msgSend_setConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnection:");
}

id objc_msgSend_setConnectionGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionGroup:");
}

id objc_msgSend_setConnectionQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionQueue:");
}

id objc_msgSend_setContainerCloudID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerCloudID:");
}

id objc_msgSend_setContainerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerID:");
}

id objc_msgSend_setContentTaste_forMediaItem_storeIdentifier_configuration_timeStamp_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:");
}

id objc_msgSend_setContentTaste_forMediaItem_storeIdentifier_persistentID_timeStamp_configuration_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "setContentTaste:forMediaItem:storeIdentifier:persistentID:timeStamp:configuration:withCompletionHandler:");
}

id objc_msgSend_setContentTaste_forPlaylistGlobalID_persistentID_timeStamp_configuration_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "setContentTaste:forPlaylistGlobalID:persistentID:timeStamp:configuration:withCompletionHandler:");
}

id objc_msgSend_setContentTasteItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentTasteItem:");
}

id objc_msgSend_setContentTasteItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentTasteItems:");
}

id objc_msgSend_setContentTasteType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentTasteType:");
}

id objc_msgSend_setConvertedPlaylistCloudLibraryID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConvertedPlaylistCloudLibraryID:");
}

id objc_msgSend_setConvertedPlaylistGlobalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConvertedPlaylistGlobalID:");
}

id objc_msgSend_setCookies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCookies:");
}

id objc_msgSend_setCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCountryCode:");
}

id objc_msgSend_setCuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCuid:");
}

id objc_msgSend_setCumulativePlayCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCumulativePlayCount:");
}

id objc_msgSend_setCumulativeSkipCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCumulativeSkipCount:");
}

id objc_msgSend_setCurrentDatabaseRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentDatabaseRevision:");
}

id objc_msgSend_setCurrentStoreFrontID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentStoreFrontID:");
}

id objc_msgSend_setCurrentUpdateOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentUpdateOperation:");
}

id objc_msgSend_setDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataType:");
}

id objc_msgSend_setDatabaseRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatabaseRevision:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateLastSynced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateLastSynced:");
}

id objc_msgSend_setDatePurchased_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatePurchased:");
}

id objc_msgSend_setDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDay:");
}

id objc_msgSend_setDebugReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDebugReason:");
}

id objc_msgSend_setDecodingFailurePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDecodingFailurePolicy:");
}

id objc_msgSend_setDefaultButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultButtonTitle:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDeleteDB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeleteDB:");
}

id objc_msgSend_setDeveloperToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeveloperToken:");
}

id objc_msgSend_setDeviceGUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceGUID:");
}

id objc_msgSend_setDifferentValues_forProperties_forEntityPersistentIDs_inLibrary_usingConnection_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:");
}

id objc_msgSend_setDisableActiveLockerAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableActiveLockerAccount:");
}

id objc_msgSend_setDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomain:");
}

id objc_msgSend_setDownloadManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadManager:");
}

id objc_msgSend_setDsid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDsid:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEngagementPushTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEngagementPushTopic:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventType:");
}

id objc_msgSend_setExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationDate:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setFailedToConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailedToConnect:");
}

id objc_msgSend_setFilteringDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilteringDisabled:");
}

id objc_msgSend_setFirstName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstName:");
}

id objc_msgSend_setFollowupUpdateOpertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFollowupUpdateOpertion:");
}

id objc_msgSend_setForceModalAlertAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceModalAlertAppearance:");
}

id objc_msgSend_setGenre_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGenre:");
}

id objc_msgSend_setGetResultsRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGetResultsRequest:");
}

id objc_msgSend_setGlobalIDToSagaIDMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalIDToSagaIDMap:");
}

id objc_msgSend_setGlobalPlaylistID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalPlaylistID:");
}

id objc_msgSend_setGlobalPresentationPolicyGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalPresentationPolicyGroup:");
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPBody:");
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPMethod:");
}

id objc_msgSend_setHTTPShouldUsePipelining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHTTPShouldUsePipelining:");
}

id objc_msgSend_setHasAddToLibraryWhenFavoritingBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAddToLibraryWhenFavoritingBehavior:");
}

id objc_msgSend_setHasAddToPlaylistBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAddToPlaylistBehavior:");
}

id objc_msgSend_setHasBeenPlayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasBeenPlayed:");
}

id objc_msgSend_setHasClientFeaturesVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasClientFeaturesVersion:");
}

id objc_msgSend_setHasCloseButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasCloseButton:");
}

id objc_msgSend_setHasNeedsResetSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasNeedsResetSync:");
}

id objc_msgSend_setHomeUserIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeUserIDs:");
}

id objc_msgSend_setHour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHour:");
}