id sub_100006348()
{
  return +[NSBundle bundleWithPath:]( &OBJC_CLASS___NSBundle,  "bundleWithPath:",  @"/System/Library/PrivateFrameworks/AppleMediaServicesUI.framework");
}

uint64_t sub_10000635C()
{
  return os_variant_has_internal_content("com.apple.AppleMediaServicesUIDynamic");
}

uint64_t sub_100006368()
{
  return 1LL;
}

uint64_t start()
{
  v0 = objc_opt_new(&OBJC_CLASS____TtC14amsengagementd7RunLoop);
  -[RunLoop runUntilIdleExit](v0, "runUntilIdleExit");

  return 0LL;
}

void sub_1000063F0(void *a1)
{
  id v2 = objc_begin_catch(a1);
  if (v1) {
    void *v1 = v2;
  }
  objc_end_catch();
  JUMPOUT(0x1000063D8LL);
}

void sub_100006454(uint64_t a1)
{
}

void sub_100006460(uint64_t a1)
{
}

void sub_10000646C(uint64_t a1)
{
}

void sub_100006494(uint64_t a1)
{
}

void sub_1000064A0(uint64_t a1)
{
}

void sub_1000064AC()
{
}

void sub_1000064C4()
{
}

void sub_1000064DC(uint64_t a1)
{
}

void sub_1000064E8(char a1)
{
}

void sub_1000064F4(char a1)
{
}

void sub_100006500(uint64_t a1)
{
}

void sub_10000650C()
{
}

void sub_100006524(uint64_t a1)
{
}

void sub_100006558(uint64_t a1)
{
}

void sub_100006564(uint64_t a1)
{
}

void sub_100006570(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = a2(a1);
  sub_100008FE0((uint64_t)v5, v4);
  sub_100009020();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_1000065B8(char a1)
{
}

void sub_1000065C4(char a1)
{
}

void sub_1000065D0(char a1)
{
}

void sub_1000065DC(uint64_t a1)
{
}

void sub_100006604(uint64_t a1)
{
}

void sub_100006610(uint64_t a1)
{
  v1 = sub_100009028(a1);
  sub_1000090EC((uint64_t)v1);
  sub_100008FE8();
  sub_100008FD4();
}

Swift::Int sub_10000663C(Swift::UInt a1)
{
  return Hasher._finalize()();
}

void sub_100006680(int a1, Swift::UInt a2)
{
}

uint64_t sub_1000066A0(uint64_t a1)
{
  return sub_10000903C(a1, 16LL, 0x800000010016AD00LL);
}

void sub_1000066B8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1000066F8(uint64_t a1)
{
  return sub_100008FCC(0xE600000000000000LL);
}

void sub_100006778(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_1000067B8(uint64_t a1)
{
  return sub_100008FCC(0xE100000000000000LL);
}

void sub_1000067E8(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_10000682C(uint64_t a1)
{
  return sub_100008FCC(0xE800000000000000LL);
}

void sub_10000688C(uint64_t a1, unsigned __int8 a2)
{
}

void sub_1000068AC(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_1000068E4(uint64_t a1)
{
  return sub_100008FCC(0xE700000000000000LL);
}

uint64_t sub_100006940(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x73644961657261LL;
  }
  else {
    uint64_t v3 = 25705LL;
  }
  if (v2) {
    uint64_t v4 = 0xE200000000000000LL;
  }
  else {
    uint64_t v4 = 0xE700000000000000LL;
  }
  sub_100008FE0(a1, v3);
  return sub_100008FCC(v4);
}

uint64_t sub_100006984(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 25705LL;
  }
  else {
    uint64_t v3 = 0x73644961657261LL;
  }
  if (v2) {
    uint64_t v4 = 0xE700000000000000LL;
  }
  else {
    uint64_t v4 = 0xE200000000000000LL;
  }
  sub_100008FE0(a1, v3);
  return sub_100008FCC(v4);
}

uint64_t sub_1000069C8(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 25705LL;
  }
  else {
    uint64_t v3 = 0x7374656B637562LL;
  }
  if (v2) {
    uint64_t v4 = 0xE700000000000000LL;
  }
  else {
    uint64_t v4 = 0xE200000000000000LL;
  }
  sub_100008FE0(a1, v3);
  return sub_100008FCC(v4);
}

void sub_100006A0C(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_100006A4C(uint64_t a1)
{
  return sub_100008FCC(0xE200000000000000LL);
}

void sub_100006ABC(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_100006B00(uint64_t a1)
{
  return sub_100008FCC(0xEB0000000073746ELL);
}

uint64_t sub_100006B58(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0) {
    uint64_t v2 = 0x656372756F73LL;
  }
  else {
    uint64_t v2 = 0x74757074756FLL;
  }
  String.hash(into:)(a1, v2, 0xE600000000000000LL);
  return swift_bridgeObjectRelease(0xE600000000000000LL);
}

uint64_t sub_100006B94(uint64_t a1)
{
  return sub_10000903C(a1, 22LL, 0x800000010016ABD0LL);
}

uint64_t sub_100006BAC(uint64_t a1)
{
  return sub_10000903C(a1, 34LL, 0x800000010016ABA0LL);
}

uint64_t sub_100006BC4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = sub_10011217C(a2);
  sub_100008FF8(v3, v4);
  return sub_100008FCC(v2);
}

uint64_t sub_100006BEC(uint64_t a1, unsigned __int8 a2)
{
  int v3 = a2;
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v4 = 0x696577746867696CLL;
    }
    else {
      uint64_t v4 = 1668184435LL;
    }
    if (v3 == 1) {
      uint64_t v2 = 0xEF636E7953746867LL;
    }
    else {
      uint64_t v2 = 0xE400000000000000LL;
    }
  }

  else
  {
    sub_100009094();
  }

  sub_100008FE0(a1, v4);
  return sub_100008FCC(v2);
}

void sub_100006C50(uint64_t a1, char a2)
{
  __asm { BR              X10 }

uint64_t sub_100006C94(uint64_t a1)
{
  return sub_100008FCC(0xE800000000000000LL);
}

void sub_100006D60()
{
}

uint64_t sub_100006D80(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x566B63617074656ALL;
  }
  else {
    uint64_t v3 = 0x6B63617074656ALL;
  }
  if (v2) {
    uint64_t v4 = 0xE700000000000000LL;
  }
  else {
    uint64_t v4 = 0xE900000000000032LL;
  }
  sub_100008FE0(a1, v3);
  return sub_100008FCC(v4);
}

void sub_100006DD4(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  sub_100008FF0(a1, a2);
  if ((v2 & 1) != 0) {
    uint64_t v3 = 0x566B63617074656ALL;
  }
  else {
    uint64_t v3 = 0x6B63617074656ALL;
  }
  sub_100008FE0((uint64_t)v4, v3);
  sub_100009020();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_100006E3C(uint64_t a1, uint64_t a2)
{
}

void sub_100006E64(uint64_t a1, uint64_t a2)
{
}

void sub_100006E70(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  sub_100008FF0(a1, a2);
  if (v2)
  {
    if (v2 == 1) {
      uint64_t v3 = 0x696577746867696CLL;
    }
    else {
      uint64_t v3 = 1668184435LL;
    }
  }

  else
  {
    sub_100009094();
  }

  sub_100008FE0((uint64_t)v4, v3);
  sub_100009020();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_100006EE8(uint64_t a1, uint64_t a2)
{
}

void sub_100006EF4(uint64_t a1)
{
}

void sub_100006F0C(uint64_t a1)
{
}

void sub_100006F24(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  sub_100008FF0(a1, a2);
  if ((v2 & 1) != 0) {
    uint64_t v3 = 0x656372756F73LL;
  }
  else {
    uint64_t v3 = 0x74757074756FLL;
  }
  String.hash(into:)(v4, v3, 0xE600000000000000LL);
  swift_bridgeObjectRelease();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_100006F7C(uint64_t a1, uint64_t a2)
{
}

void sub_100006F88(uint64_t a1, uint64_t a2)
{
}

void sub_100006F94(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  sub_100008FF0(a1, a2);
  if ((v2 & 1) != 0) {
    uint64_t v3 = 25705LL;
  }
  else {
    uint64_t v3 = 0x7374656B637562LL;
  }
  sub_100008FE0((uint64_t)v4, v3);
  sub_100009020();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_100006FEC(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  sub_100008FF0(a1, a2);
  if ((v2 & 1) != 0) {
    uint64_t v3 = 25705LL;
  }
  else {
    uint64_t v3 = 0x73644961657261LL;
  }
  sub_100008FE0((uint64_t)v4, v3);
  sub_100009020();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_100007044(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  sub_100008FF0(a1, a2);
  if ((v2 & 1) != 0) {
    uint64_t v3 = 0x73644961657261LL;
  }
  else {
    uint64_t v3 = 25705LL;
  }
  sub_100008FE0((uint64_t)v4, v3);
  sub_100009020();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_10000709C(uint64_t a1, uint64_t a2)
{
}

void sub_1000070A8(uint64_t a1, uint64_t a2)
{
}

void sub_1000070D0(uint64_t a1, uint64_t a2)
{
}

void sub_1000070DC(uint64_t a1, uint64_t a2)
{
}

void sub_1000070E8(uint64_t a1, uint64_t a2)
{
  char v2 = sub_100008FF0(a1, a2);
  sub_1000090EC((uint64_t)v2);
  sub_100008FE8();
  sub_100008FD4();
}

void sub_100007114(uint64_t a1, uint64_t a2)
{
}

void sub_100007120(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = a3(a2);
  sub_100008FE0((uint64_t)v6, v5);
  sub_100009020();
  sub_100008FE8();
  sub_100008FD4();
}

void sub_100007168(uint64_t a1)
{
}

void sub_100007180(uint64_t a1, uint64_t a2)
{
}

void sub_1000071B4(uint64_t a1, Swift::UInt a2)
{
}

uint64_t sub_1000071E8(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t sub_1000071F4(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_1000071FC(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_100007228(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t sub_10000724C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

void sub_100007264(uint64_t a1)
{
}

void sub_100007270(uint64_t a1)
{
}

void sub_10000727C(uint64_t a1)
{
}

uint64_t sub_100007288(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_100007290(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_10000729C(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1000072A8(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_1000072B4(uint64_t a1)
{
  return a1 == 0;
}

void sub_1000072C0(uint64_t a1)
{
}

uint64_t variable initialization expression of AppConfiguration.destinationComponents()
{
  return -1LL;
}

unint64_t variable initialization expression of AppConfiguration.mediaClient()
{
  return 0xD000000000000018LL;
}

uint64_t variable initialization expression of AppConfiguration.qualityOfService()
{
  return 25LL;
}

uint64_t variable initialization expression of AppConfiguration.storageCapacityGrace()
{
  return 10485760LL;
}

uint64_t variable initialization expression of PriorityQueue.runningWorkers()
{
  uint64_t v0 = type metadata accessor for Worker();
  return Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  v0,  &protocol witness table for String);
}

void *variable initialization expression of SQLDatabase.statements()
{
  return &_swiftEmptyArrayStorage;
}

void type metadata accessor for AMSBagKey(uint64_t a1)
{
}

void type metadata accessor for AMSSubscriptionEntitlementsMediaType(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void type metadata accessor for AMSExplicitContentSetting(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
}

void type metadata accessor for AMSEngagementDestinationComponents(uint64_t a1)
{
}

void type metadata accessor for AMSAccountMediaType(uint64_t a1)
{
}

void type metadata accessor for UNShowPreviewsSetting(uint64_t a1)
{
}

void type metadata accessor for UNNotificationSetting(uint64_t a1)
{
}

void type metadata accessor for UNNotificationGroupingSetting(uint64_t a1)
{
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for UNAlertStyle(uint64_t a1)
{
}

void sub_100007454(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  a2(v3);
  sub_100009070();
  sub_100009044();
}

uint64_t sub_100007484(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000905C(a1, a2);
  sub_100008FF8(v3, v4);
  return sub_100008FCC(v2);
}

void sub_1000074A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_10000905C(a1, a2);
  uint64_t v3 = sub_100009078(v2);
  sub_1000090AC((uint64_t)v3);
  sub_100008FE8();
  sub_1000090CC();
  sub_10000904C();
}

uint64_t sub_1000074DC(uint64_t a1, id *a2)
{
  return sub_100008604(a1, a2);
}

uint64_t sub_1000074F0(uint64_t a1, id *a2)
{
  return sub_100008598(a1, a2) & 1;
}

void sub_100007508()
{
}

uint64_t sub_100007528@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_100007530(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = v3;
}

void sub_100007554()
{
}

uint64_t sub_100007574(uint64_t a1)
{
  return sub_100007484(a1, *v1);
}

void sub_10000758C(uint64_t a1)
{
}

id sub_1000075A4()
{
  return *v0;
}

void sub_1000075AC()
{
  uint64_t v1 = sub_10000910C();
  void *v0 = nullsub_1(v1);
  sub_100009044();
}

uint64_t sub_1000075CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = variable initialization expression of SQLRow.stmt();
  *a1 = result;
  return result;
}

uint64_t sub_1000075F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000071E8(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_10000761C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000071F0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_100007648@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000071F4(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_100007674(void *a1, uint64_t *a2)
{
  return sub_1000071FC(a1, *a2);
}

uint64_t sub_10000767C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100007228(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1000076AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10000724C(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1000076DC(uint64_t *a1)
{
}

void sub_1000076E4(uint64_t *a1)
{
}

void sub_1000076EC(uint64_t *a1)
{
}

uint64_t sub_1000076F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100007288(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_100007720(uint64_t *a1)
{
  return sub_100007290(*a1, *v1);
}

BOOL sub_10000772C(uint64_t *a1)
{
  return sub_10000729C(*a1, *v1);
}

BOOL sub_100007738(uint64_t *a1)
{
  return sub_1000072A8(*a1, *v1);
}

BOOL sub_100007744()
{
  return sub_1000072B4(*v0);
}

uint64_t sub_10000774C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void sub_100007764(uint64_t *a1)
{
}

uint64_t sub_10000776C(void *a1, void *a2)
{
  return sub_100020C70(*a1, *a2);
}

Swift::Int sub_100007778()
{
  return sub_10000663C(*v0);
}

void sub_100007780(int a1)
{
}

void sub_100007788(uint64_t a1)
{
}

BOOL sub_100007790(uint64_t *a1, uint64_t *a2)
{
  return sub_10000858C(*a1, *a2);
}

Swift::Int sub_10000779C(uint64_t a1)
{
  return sub_100035F50(a1, *v1);
}

void sub_1000077A8()
{
  uint64_t v1 = sub_10000910C();
  void *v0 = j_j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  v0[1] = v2;
  sub_100009044();
}

uint64_t sub_1000077C8(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C86D8,  (uint64_t (*)(uint64_t))type metadata accessor for AMSEngagementSyncRequestOrigin,  (uint64_t)&unk_100163598);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100007850()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(AMSErrorDomain);
}

uint64_t sub_100007860(uint64_t a1)
{
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_1000078A0(uint64_t a1)
{
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000078E0(void *a1, uint64_t a2)
{
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_100007944(uint64_t a1, uint64_t a2)
{
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t sub_100007998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1000079C0(uint64_t *a1, uint64_t *a2)
{
  return sub_100008510(*a1, *a2) & 1;
}

uint64_t sub_1000079E4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CKErrorDomain);
}

uint64_t sub_1000079F4(uint64_t a1)
{
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100007A34(uint64_t a1)
{
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100007A74(void *a1, uint64_t a2)
{
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_100007AD8()
{
  return sub_100008668(*v0);
}

uint64_t sub_100007AE0(uint64_t a1, uint64_t a2)
{
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

void sub_100007B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[9] = *v3;
  Hasher.init(_seed:)(v6, a1);
  dispatch thunk of Hashable.hash(into:)(v6, a2, a3);
  Hasher._finalize()();
  sub_10000904C();
}

void sub_100007B80(uint64_t a1@<X8>)
{
  *(void *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

  ;
}

uint64_t sub_100007BB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100008EF8(a1);
  *a2 = result;
  return result;
}

void *sub_100007BDC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100007BE8(uint64_t *a1, uint64_t *a2)
{
  return sub_100035FBC(*a1, *a2);
}

uint64_t sub_100007BF4(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C8238,  (uint64_t (*)(uint64_t))type metadata accessor for AMSAccountMediaType,  (uint64_t)&unk_100162C0C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

void sub_100007C78()
{
}

void sub_100007CA4()
{
}

void sub_100007CD0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = a2(255LL);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  sub_100009044();
}

void sub_100007D0C()
{
}

uint64_t sub_100007D38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100007D60(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C86C8,  (uint64_t (*)(uint64_t))type metadata accessor for Name,  (uint64_t)&unk_100163758);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100007DE4(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C8218,  (uint64_t (*)(uint64_t))type metadata accessor for AMSBagKey,  (uint64_t)&unk_100163154);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100007E68(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C8228,  (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType,  (uint64_t)&unk_100162F50);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100007EF0(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C86E8,  (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey,  (uint64_t)&unk_100163484);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_100007F74(uint64_t a1)
{
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100007FB4(uint64_t a1)
{
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100007FF8(uint64_t a1)
{
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100008038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

void sub_100008090()
{
  uint64_t v1 = sub_10000910C();
  void *v0 = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(v1);
  v0[1] = v2;
  sub_100009044();
}

uint64_t sub_1000080B0(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C87F8,  (uint64_t (*)(uint64_t))type metadata accessor for AMSMetricsLoggingSubsystem,  (uint64_t)&unk_100163D28);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

void sub_100008134()
{
}

void sub_100008160()
{
}

void sub_10000818C()
{
}

void sub_1000081B8()
{
}

void sub_1000081E4()
{
}

void sub_100008210()
{
}

void sub_10000823C()
{
}

uint64_t sub_100008268@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = sub_100009070();
  *a1 = v2;
  return result;
}

uint64_t sub_1000082A8(uint64_t a1)
{
  uint64_t v3 = v2;
  sub_100007CD0( &qword_1001C86B8,  (uint64_t (*)(uint64_t))type metadata accessor for AMSAccountFlag,  (uint64_t)&unk_1001639A4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v3, v4, &protocol witness table for String);
}

uint64_t sub_10000832C(uint64_t a1)
{
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10000836C(uint64_t a1)
{
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000083AC(uint64_t a1)
{
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_1000083EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

void *sub_100008444@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_100008454(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_100008460()
{
}

void sub_10000848C()
{
}

void sub_1000084B8()
{
}

void sub_1000084E4()
{
}

uint64_t sub_100008510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v3 == v6 && v5 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0LL);
  }
  sub_100009020();
  sub_100009070();
  return v9 & 1;
}

BOOL sub_10000858C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_100008598(uint64_t a1, id *a2)
{
  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  char v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(v3, &v7);
  if (v8)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    sub_1000090CC();
  }

  else
  {
    NSString v5 = 0LL;
  }

  *uint64_t v2 = v5;
  return v4 & 1;
}

uint64_t sub_100008604(uint64_t a1, id *a2)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = 0LL;
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)(v3, &v6);
  if (v7)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    uint64_t result = sub_100009070();
  }

  else
  {
    NSString v5 = 0LL;
  }

  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_100008668(void *a1)
{
  id v1 = a1;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

void sub_100008698(uint64_t a1)
{
}

void type metadata accessor for AMSAccountFlag(uint64_t a1)
{
}

void type metadata accessor for FAEligibilityResponse(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void type metadata accessor for CFRunLoopRunResult(uint64_t a1)
{
}

void type metadata accessor for AMSServerDataCacheNetworkPolicy(uint64_t a1)
{
}

void type metadata accessor for ASDSubscriptionEntitlementsSegment(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for AMSSubscriptionEntitlementsCachePolicy(uint64_t a1)
{
}

void type metadata accessor for AMSEngagementSyncRequestOrigin(uint64_t a1)
{
}

void type metadata accessor for AMSTreatmentsCachePolicy(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void sub_1000087B4()
{
}

void sub_1000087E0()
{
}

void sub_10000880C()
{
}

void sub_100008838()
{
}

void sub_100008864()
{
}

void sub_100008890()
{
}

void sub_1000088BC()
{
}

void sub_1000088E8()
{
}

void sub_100008914()
{
}

void sub_100008940()
{
}

void sub_10000896C()
{
}

void sub_100008998()
{
}

void sub_1000089C4()
{
}

void sub_1000089F0()
{
}

void sub_100008A1C()
{
}

void sub_100008A48()
{
}

void type metadata accessor for Code(uint64_t a1)
{
}

void sub_100008A88()
{
}

unint64_t sub_100008AB8()
{
  unint64_t result = qword_1001C8688;
  if (!qword_1001C8688)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1001C8688);
  }

  return result;
}

void sub_100008AF4()
{
}

void sub_100008B20()
{
}

void sub_100008B4C()
{
}

void sub_100008B78()
{
}

void type metadata accessor for ReadingOptions(uint64_t a1)
{
}

void type metadata accessor for AMSError(uint64_t a1)
{
}

void type metadata accessor for AMSMetricsLoggingSubsystem(uint64_t a1)
{
}

void sub_100008BE0()
{
}

void sub_100008C0C()
{
}

void sub_100008C38()
{
}

void sub_100008C64()
{
}

void sub_100008C90()
{
}

void sub_100008CBC()
{
}

void sub_100008CE8()
{
}

void sub_100008D14()
{
}

void sub_100008D40()
{
}

void sub_100008D6C()
{
}

void sub_100008D98()
{
}

void sub_100008DC4()
{
}

void sub_100008DF0()
{
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

void sub_100008E30(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, a3);
    if (!v5) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }

void sub_100008E74()
{
}

void sub_100008EA0()
{
}

void sub_100008ECC()
{
}

uint64_t sub_100008EF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0LL;
    uint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if ((v5 & ~v2) == 0) {
        uint64_t v4 = 0LL;
      }
      v2 |= v4;
      --v1;
    }

    while (v1);
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  swift_bridgeObjectRelease(a1);
  return v2;
}

uint64_t sub_100008FCC(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

  ;
}

uint64_t sub_100008FE0(uint64_t a1, uint64_t a2)
{
  return String.hash(into:)(a1, a2, v2);
}

Swift::Int sub_100008FE8()
{
  return Hasher._finalize()();
}

void *sub_100008FF0(uint64_t a1, uint64_t a2, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, a1);
}

uint64_t sub_100008FF8(uint64_t a1, uint64_t a2)
{
  return String.hash(into:)(v2, a1, a2);
}

uint64_t _s14amsengagementd6SQLRowC4stmt33_F2506DABEDFA21EB58948A62CB0DBA13LLs13OpaquePointerVSgvpfi_0()
{
  return 0LL;
}

void sub_100009018(uint64_t a1)
{
}

uint64_t sub_100009020()
{
  return swift_bridgeObjectRelease(v0);
}

void *sub_100009028(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, 0LL);
}

void sub_100009034(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10000903C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return String.hash(into:)(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL, a3);
}

  ;
}

  ;
}

uint64_t sub_10000905C(uint64_t a1, uint64_t a2)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
}

uint64_t sub_100009068(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_100009070()
{
  return swift_bridgeObjectRelease(v0);
}

void *sub_100009078(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, v1);
}

void sub_10000908C(uint64_t a1@<X8>)
{
  void *v1 = a1;
}

  ;
}

uint64_t sub_1000090AC(uint64_t a1, ...)
{
  return String.hash(into:)(va, v1, v2);
}

void sub_1000090BC(uint64_t a1, id *a2)
{
}

uint64_t sub_1000090CC()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_1000090D4()
{
}

void sub_1000090E0()
{
}

uint64_t sub_1000090EC(uint64_t a1, ...)
{
  return v1(va, v2);
}

uint64_t _s14amsengagementd16AppConfigurationV6logKeySSSgvpfi_0()
{
  return 0LL;
}

uint64_t _s14amsengagementd16AppConfigurationV14allowsResponseSbvpfi_0()
{
  return 0LL;
}

uint64_t sub_10000910C()
{
  return *(void *)v0;
}

void sub_100009118(void *a1@<X8>)
{
  *a1 = variable initialization expression of SQLRow.stmt();
  sub_100009044();
}

BOOL sub_100009138(uint64_t *a1)
{
  return sub_100008F6C(*a1, *v1);
}

void sub_100009144(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = sub_1000071F0(*a1, *v2);
  sub_100009044();
}

void sub_10000916C(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_1000071F4(*a1, *v2);
  sub_100009044();
}

uint64_t sub_100009194@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000072CC(a1);
  *a2 = result;
  return result;
}

void *sub_1000091B8()
{
  id v1 = [objc_allocWithZone(NSNumberFormatter) init];
  v0[2] = v1;
  uint64_t v2 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
  v0[3] = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v2,  &protocol witness table for String);
  v0[4] = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  &type metadata for Bool,  &protocol witness table for String);
  v0[5] = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
  uint64_t v3 = sub_10000D33C(&qword_1001C8BA8);
  v0[6] = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v3,  &protocol witness table for String);
  uint64_t v4 = sub_10000D33C(&qword_1001C8BB0);
  v0[7] = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v4,  &protocol witness table for String);
  v0[8] = 0LL;
  v0[9] = [objc_allocWithZone(NSLock) init];
  uint64_t v5 = sub_10000D33C(&qword_1001C8BB8);
  uint64_t v6 = swift_allocObject(v5, 40LL, 7LL);
  *(_OWORD *)(v6 + 16) = xmmword_100164220;
  uint64_t v7 = (void *)AMSAccountMediaTypeProduction;
  *(void *)(v6 + 32) = AMSAccountMediaTypeProduction;
  v0[10] = v6;
  id v8 = v7;
  [v1 setNumberStyle:1];
  sub_10000A37C();
  return v0;
}

uint64_t sub_100009334()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0LL);
  sub_10000D8C4(v0, qword_1001C8990);
  sub_10000D7B8(v0, (uint64_t)qword_1001C8990);
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(5LL);
}

void sub_100009380()
{
  uint64_t v0 = type metadata accessor for AccountsObserver();
  sub_10000DDDC(v0, 88LL);
  qword_1001C89A8 = (uint64_t)sub_1000091B8();
  sub_100009044();
}

uint64_t sub_1000093B0()
{
  *(void *)(v1 + 176) = v0;
  return swift_task_switch(sub_1000093C8, 0LL, 0LL);
}

uint64_t sub_1000093C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 2;
  uint64_t v3 = sub_10000D33C(&qword_1001C8C68);
  uint64_t inited = swift_initStackObject(v3, v1 + 10);
  v1[23] = inited;
  *(_OWORD *)(inited + 16) = xmmword_100164220;
  id v5 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  id v6 = objc_msgSend(v5, "ams_activeiCloudAccount");

  *(void *)(inited + 32) = v6;
  specialized Array._endMutation()(v7);
  v1[24] = inited;
  v1[20] = inited;
  id v8 = sub_100009F3C();
  v1[25] = v8;
  v1[7] = v1 + 21;
  v1[2] = v1;
  v1[3] = sub_100009510;
  uint64_t v9 = swift_continuation_init(v2, 1LL);
  v1[15] = _NSConcreteStackBlock;
  v1 += 15;
  v1[1] = 0x40000000LL;
  v1[2] = sub_10009B9A8;
  v1[3] = &unk_1001A81C8;
  v1[4] = v9;
  [v8 resultWithCompletion:v1];
  return swift_continuation_await(v2);
}

uint64_t sub_100009510()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 208) = v2;
  if (v2) {
    swift_bridgeObjectRelease(*(void *)(v1 + 192));
  }
  return sub_10000DD48();
}

void sub_100009570()
{
  uint64_t v1 = *(void **)(v0 + 168);

  v37 = v1;
  unint64_t v2 = sub_100009814(v1);
  uint64_t v3 = sub_1000A0A88(v2);
  sub_100009020();
  uint64_t v4 = sub_1000A0E5C((uint64_t)v3);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = sub_10000DE08(v4, (unint64_t *)&qword_1001C8C70, &OBJC_CLASS___ACAccount_ptr);
  sub_10000DEB4();
  uint64_t v7 = Dictionary.init(dictionaryLiteral:)( &_swiftEmptyArrayStorage,  &type metadata for String,  v6,  &protocol witness table for String);
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
LABEL_17:

    sub_10000DDF8();
    swift_bridgeObjectRelease(*(void *)(v0 + 160));
    (*(void (**)(uint64_t))(v0 + 8))(v7);
    return;
  }

  uint64_t v36 = v0;
  sub_10000DEB4();
  uint64_t v9 = 0LL;
  uint64_t v38 = v8;
  while (1)
  {
    v10 = *(void **)(v5 + 8 * v9 + 32);
    if (!v10) {
      goto LABEL_15;
    }
    id v11 = v10;
    id v12 = [v11 identifier];
    if (!v12)
    {

      goto LABEL_15;
    }

    v13 = v12;
    uint64_t v14 = v5;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v17 = v16;

    id v18 = v11;
    char v19 = sub_10000DF00();
    unint64_t v20 = sub_10000DF7C();
    uint64_t v22 = *(void *)(v7 + 16);
    BOOL v23 = (v21 & 1) == 0;
    Swift::Int v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    unint64_t v25 = v20;
    char v26 = v21;
    sub_10000D33C(&qword_1001C8C78);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v19, v24))
    {
      unint64_t v27 = sub_10000DF7C();
      if ((v26 & 1) != (v28 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }

      unint64_t v25 = v27;
    }

    if ((v26 & 1) != 0)
    {
      uint64_t v29 = *(void *)(v7 + 56);
      v30 = *(void **)(v29 + 8 * v25);
      *(void *)(v29 + 8 * v25) = v18;
    }

    else
    {
      sub_10000DF20(v7 + 8 * (v25 >> 6));
      v32 = (uint64_t *)(v31 + 16 * v25);
      uint64_t *v32 = v15;
      v32[1] = v17;
      *(void *)(*(void *)(v7 + 56) + 8 * v25) = v18;
      uint64_t v33 = *(void *)(v7 + 16);
      BOOL v34 = __OFADD__(v33, 1LL);
      uint64_t v35 = v33 + 1;
      if (v34) {
        goto LABEL_20;
      }
      *(void *)(v7 + 16) = v35;
      sub_10000DD9C();
    }

    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_10000DCFC();

    uint64_t v5 = v14;
    uint64_t v8 = v38;
LABEL_15:
    if (v8 == ++v9)
    {
      sub_10000DDF8();
      uint64_t v0 = v36;
      goto LABEL_17;
    }
  }

  __break(1u);
LABEL_20:
  __break(1u);
}

uint64_t sub_1000097D4()
{
  uint64_t v1 = *(void **)(v0 + 200);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100009814(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator(0LL);
  uint64_t v16 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v22 = (unint64_t)&_swiftEmptyArrayStorage;
  id v5 = a1;
  NSArray.makeIterator()();

  sub_10000D904( (unint64_t *)&qword_1001C8C80,  (uint64_t (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  uint64_t v7 = v6;
  dispatch thunk of IteratorProtocol.next()(&v20, v2, v6);
  while (v21)
  {
    sub_10000DA58(&v20, v19);
    sub_10000DA1C((uint64_t)v19, (uint64_t)v17);
    uint64_t v8 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001C8C70, &OBJC_CLASS___ACAccount_ptr);
    uint64_t v9 = sub_10000D3A0(v19);
    uint64_t v10 = v18;
    if (v18)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      unint64_t v12 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v11 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v12 >= v11 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1);
      }
      uint64_t v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
      specialized Array._endMutation()(v13);
    }

    dispatch thunk of IteratorProtocol.next()(&v20, v2, v7);
  }

  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  return v22;
}

uint64_t sub_1000099EC(void *a1, void *a2, void *a3)
{
  id v4 = a2;
  uint64_t v5 = NSDictionary.makeIterator()();

  uint64_t v57 = v5;
  uint64_t v6 = type metadata accessor for NSDictionary.Iterator(0LL);
  sub_10000D904(&qword_1001C8C58, (uint64_t (*)(uint64_t))&type metadata accessor for NSDictionary.Iterator);
  uint64_t v8 = v7;
  dispatch thunk of IteratorProtocol.next()(&v53, v6, v7);
  if (!*((void *)&v54 + 1))
  {
LABEL_24:
    swift_release(v57);

    return (uint64_t)a1;
  }

  uint64_t v9 = (char *)&type metadata for Any + 8;
  uint64_t v43 = v6;
  while (1)
  {
    v51[0] = v53;
    v51[1] = v54;
    v52[0] = v55;
    v52[1] = v56;
    sub_10000DA1C((uint64_t)v51, (uint64_t)v47);
    sub_10000DA1C((uint64_t)v52, (uint64_t)v48);
    sub_10000DA58(v47, v50);
    sub_10000DA58(v48, v49);
    sub_10000DA1C((uint64_t)v50, (uint64_t)v47);
    sub_10000D3A0(v49);
    sub_10000D3A0(v50);
LABEL_23:
    sub_10000DA68((uint64_t)v51, &qword_1001C8C60);
    dispatch thunk of IteratorProtocol.next()(&v53, v6, v8);
    if (!*((void *)&v54 + 1)) {
      goto LABEL_24;
    }
  }

  uint64_t v10 = (uint64_t)v45;
  uint64_t v58 = v46;
  sub_10000DA1C((uint64_t)v49, (uint64_t)v47);
  uint64_t v11 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
  if ((swift_dynamicCast(&v45, v47, (char *)&type metadata for Any + 8, v11, 6LL) & 1) != 0)
  {
    id v12 = v45;
  }

  else
  {
    sub_10000DA1C((uint64_t)v49, (uint64_t)v47);
    if ((swift_dynamicCast(&v45, v47, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0
      || (uint64_t v13 = v46,
          NSString v14 = String._bridgeToObjectiveC()(),
          swift_bridgeObjectRelease(v13),
          id v12 = [a3 numberFromString:v14],
          v14,
          !v12))
    {
      swift_bridgeObjectRetain(a1);
      uint64_t v30 = v58;
      unint64_t v31 = sub_100030CCC(v10, v58);
      char v33 = v32;
      swift_bridgeObjectRelease(a1);
      if ((v33 & 1) != 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
        *(void *)&v47[0] = a1;
        Swift::Int v35 = a1[3];
        sub_10000D33C((uint64_t *)&unk_1001C9DD0);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v35);
        a1 = *(void **)&v47[0];
        swift_bridgeObjectRelease(*(void *)(*(void *)(*(void *)&v47[0] + 48LL) + 16 * v31 + 8));
        uint64_t v36 = *(void **)(a1[7] + 8 * v31);
        _NativeDictionary._delete(at:)(v31, a1);

        swift_bridgeObjectRelease(v30);
        unint64_t v37 = 0x8000000000000000LL;
      }

      else
      {
        unint64_t v37 = v30;
      }

      swift_bridgeObjectRelease(v37);
      uint64_t v6 = v43;
LABEL_22:
      sub_10000D3A0(v49);
      sub_10000D3A0(v50);
      uint64_t v9 = (char *)&type metadata for Any + 8;
      goto LABEL_23;
    }
  }

  uint64_t v15 = v8;
  uint64_t v16 = v6;
  id v17 = v12;
  char v18 = swift_isUniquelyReferenced_nonNull_native(a1);
  *(void *)&v47[0] = a1;
  unint64_t v19 = sub_100030CCC(v10, v58);
  uint64_t v21 = a1[2];
  BOOL v22 = (v20 & 1) == 0;
  Swift::Int v23 = v21 + v22;
  if (!__OFADD__(v21, v22))
  {
    unint64_t v24 = v19;
    char v25 = v20;
    sub_10000D33C((uint64_t *)&unk_1001C9DD0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v18, v23))
    {
      unint64_t v26 = sub_100030CCC(v10, v58);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_27;
      }
      unint64_t v24 = v26;
    }

    a1 = *(void **)&v47[0];
    if ((v25 & 1) != 0)
    {
      uint64_t v28 = *(void *)(*(void *)&v47[0] + 56LL);

      *(void *)(v28 + 8 * v24) = v17;
      uint64_t v29 = v58;
    }

    else
    {
      *(void *)(*(void *)&v47[0] + 8 * (v24 >> 6) + 64) |= 1LL << v24;
      uint64_t v38 = (uint64_t *)(a1[6] + 16 * v24);
      *uint64_t v38 = v10;
      uint64_t v29 = v58;
      v38[1] = v58;
      *(void *)(a1[7] + 8 * v24) = v17;
      uint64_t v39 = a1[2];
      BOOL v40 = __OFADD__(v39, 1LL);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_26;
      }
      a1[2] = v41;
      swift_bridgeObjectRetain(v29);
    }

    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(0x8000000000000000LL);
    uint64_t v6 = v16;
    uint64_t v8 = v15;
    goto LABEL_22;
  }

  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100009E88(void *a1)
{
  id v2 = objc_msgSend(a1, "ams_privacyAcknowledgement");
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = v2;
  id v4 = *(void **)(v1 + 16);
  uint64_t v5 = sub_10000DE08((uint64_t)v2, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
  uint64_t v6 = (void *)Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v5,  &protocol witness table for String);
  uint64_t v7 = sub_1000099EC(v6, v3, v4);

  if (!*(void *)(v7 + 16))
  {
    sub_100009070();
    return 0LL;
  }

  return v7;
}

id sub_100009F3C()
{
  id v1 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  uint64_t v2 = swift_bridgeObjectRetain(*(void *)(v0 + 80));
  sub_10013E15C(v2);
  sub_10000DFE0();
  sub_10000D904(&qword_1001C8230, (uint64_t (*)(uint64_t))type metadata accessor for AMSAccountMediaType);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  sub_100009070();
  id v4 = objc_msgSend(v1, "ams_iTunesAccountsForMediaTypes:", isa);

  return v4;
}

void sub_100009FF8(void *a1)
{
  uint64_t v2 = v1;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v4);
  sub_10000DC74();
  uint64_t v5 = sub_10000D6DC(a1, (SEL *)&selRef_identifier);
  if (v6)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    id v9 = objc_msgSend(a1, "ams_DSID");
    sub_10000DBEC((uint64_t)v9, (uint64_t)v65);
    if (v9)
    {
      sub_10000DF5C();
      sub_100033E64(v10, v11, v12, v13, v14, v15, v16, v17, v62, v63);
    }

    else
    {
      uint64_t v28 = sub_10000DFC8();
    }

    sub_10000DD54();
    sub_10000DEE0();
    [a1 isActive];
    sub_10000DBFC(v1 + 32, (uint64_t)v65);
    sub_10000DF5C();
    sub_100033EFC();
    sub_10000DD54();
    sub_100009020();
    uint64_t v30 = sub_10000D6DC(a1, (SEL *)&selRef_ams_creditsString);
    uint64_t v32 = v31;
    sub_10000DBEC(v30, (uint64_t)v65);
    swift_bridgeObjectRetain(v8);
    if (v32)
    {
      sub_100033EA0(v30, v32, v7, v8);
      uint64_t v33 = v8;
    }

    else
    {
      sub_10000DFC8();
      sub_100032D54();
      uint64_t v35 = v34;
      sub_100009020();
      uint64_t v33 = v35;
    }

    swift_bridgeObjectRelease(v33);
    sub_10000DD54();
    uint64_t v36 = sub_100009E88(a1);
    if (v36)
    {
      sub_10000DBEC(v36, (uint64_t)v65);
      sub_10000DEE0();
      sub_10000DF5C();
      sub_100033E8C(v37, v38, v39, v40, v41, v42, v43, v44, v62, v63);
      sub_10000DD54();
      uint64_t v45 = v8;
    }

    else
    {
      sub_10000DBEC(0LL, (uint64_t)v65);
      uint64_t v46 = sub_10000DFC8();
      uint64_t v48 = sub_100032D40(v46, v47);
      sub_10000DD54();
      uint64_t v45 = v48;
    }

    swift_bridgeObjectRelease(v45);
    sub_10000AF98(a1);
    sub_10000DBFC(v2 + 56, (uint64_t)v65);
    sub_10000DF5C();
    sub_100033E78(v49, v50, v51, v52, v53, v54, v55, v56, v62, v63);
    sub_10000DD54();
  }

  else
  {
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v18 = sub_10000DC98();
    unint64_t v19 = (__n128 *)sub_10000DCF0( ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL))
                    + 2LL * *(void *)(*(void *)(v18 - 8) + 72LL),
                      *(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL));
    uint64_t v66 = sub_10000DF50(v19, (__n128)xmmword_100164230);
    v65[0] = v1;
    uint64_t v20 = sub_10000DFF4();
    id v21 = (id)AMSLogKey(v20);
    if (v21)
    {
      BOOL v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      uint64_t v25 = v24;

      sub_10000DED8();
      sub_10000DC34();
      sub_10000DC08();
      uint64_t v26 = v66;
      char v27 = sub_10000D37C(v65, v66);
      sub_10000DC54((uint64_t)v27, v26);
      MetatypeMetadata = (void *)sub_10000DDAC();
      uint64_t v62 = v26;
      sub_10000DCE8();
      sub_10000DD04((uint64_t)&v62);
      sub_10000DC14();
      MetatypeMetadata = &type metadata for String;
      uint64_t v62 = v23;
      uint64_t v63 = v25;
      sub_10000DCE8();
      sub_10000DD04((uint64_t)&v62);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_1000090CC();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      uint64_t v57 = v66;
      uint64_t v58 = sub_10000D37C(v65, v66);
      uint64_t v59 = sub_10000DC54((uint64_t)v58, v57);
      MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v62 = v59;
      uint64_t v60 = sub_10000DCE8();
      sub_10000DF18(v60, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000DF34();
    sub_10000DD38(25LL);
    if (qword_1001C7F80 != -1) {
      swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v61 = static os_log_type_t.error.getter();
    sub_10000DE24(v61);
  }

  sub_100009020();
  sub_10000DE10();
}

void sub_10000A37C()
{
  uint64_t v2 = v0;
  sub_10000D33C(&qword_1001C8BD0);
  sub_10000DC64();
  __chkstk_darwin(v3);
  sub_10000DE8C();
  sub_10000DBEC(v4, (uint64_t)v12);
  sub_10000D33C(&qword_1001C8C28);
  sub_10000DD2C();
  uint64_t v5 = sub_10000DEAC();
  sub_10000DBEC(v5, (uint64_t)v12);
  sub_10000D33C(&qword_1001C8C30);
  sub_10000DD2C();
  uint64_t v6 = sub_10000DEAC();
  sub_10000DBEC(v6, (uint64_t)v12);
  sub_10000D33C(&qword_1001C8C38);
  sub_10000DD2C();
  uint64_t v7 = sub_10000DEAC();
  sub_10000DBEC(v7, (uint64_t)v12);
  sub_10000D33C(&qword_1001C8C40);
  sub_10000DD2C();
  sub_10000DEAC();
  uint64_t v8 = type metadata accessor for TaskPriority(0LL);
  sub_10000DFB0(v1, v9, v10, v8);
  uint64_t v11 = (void *)sub_10000DDDC((uint64_t)&unk_1001A81B0, 40LL);
  v11[2] = 0LL;
  v11[3] = 0LL;
  v11[4] = v2;
  swift_retain(v2);
  sub_100116BA0(v1, (uint64_t)&unk_1001C8C50, (uint64_t)v11);
  swift_release();
  sub_10000DFE8();
}

uint64_t sub_10000A490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a4;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  v4[32] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (void *)swift_task_alloc(dword_1001C89DC);
  v4[33] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10000A4FC;
  return sub_1000093B0();
}

uint64_t sub_10000A4FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 264);
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v1;
  swift_task_dealloc(v4);
  return sub_10000DD48();
}

uint64_t sub_10000A560()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  int64_t v3 = *(void *)(v0 + 40);
  unint64_t v4 = *(void *)(v0 + 48);
  int64_t v5 = (unint64_t)(*(void *)(v0 + 32) + 64LL) >> 6;
  id v6 = (id)sub_10000DF08();
  if (!v4) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  unint64_t v8 = v7 | (v3 << 6);
  while (1)
  {
    id v13 = *(id *)(*(void *)(v1 + 56) + 8 * v8);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
    unint64_t v15 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v14 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v15 >= v14 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1);
    }
    uint64_t v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
    id v6 = (id)specialized Array._endMutation()(v16);
    if (v4) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1LL))
    {
      __break(1u);
      goto LABEL_35;
    }

    if (v9 >= v5) {
      goto LABEL_25;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v5) {
        goto LABEL_25;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v5) {
          goto LABEL_25;
        }
        unint64_t v10 = *(void *)(v2 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v3 + 4;
          if (v3 + 4 >= v5) {
            goto LABEL_25;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v3 + 5;
            if (v3 + 5 >= v5) {
              goto LABEL_25;
            }
            unint64_t v10 = *(void *)(v2 + 8 * v11);
            if (!v10)
            {
              int64_t v11 = v3 + 6;
              if (v3 + 6 >= v5) {
                goto LABEL_25;
              }
              unint64_t v10 = *(void *)(v2 + 8 * v11);
              if (!v10) {
                break;
              }
            }
          }
        }
      }
    }

LABEL_20:
    unint64_t v4 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v3 = v11;
  }

  int64_t v12 = v3 + 7;
  while (v12 < v5)
  {
    unint64_t v10 = *(void *)(v2 + 8 * v12++);
    if (v10)
    {
      int64_t v11 = v12 - 1;
      goto LABEL_20;
    }
  }

  int64_t v9 = String.UTF8View._foreignCount()();
LABEL_13:
  int64_t v5 = __OFADD__(v2, v9);
  uint64_t result = v2 + v9;
  if (v5) {
    __break(1u);
  }
  return result;
}

  uint64_t v31 = 0LL;
  uint64_t v32 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(30LL);
  v28._object = (void *)0x800000010016BA50LL;
  v28._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v28);
  _print_unlocked<A, B>(_:_:)( &v34,  &v31,  &type metadata for Int32,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v29._countAndFlagsBits = 39LL;
  v29._object = (void *)0xE100000000000000LL;
  String.append(_:)(v29);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v31,  v32,  "Swift/NativeDictionary.swift",  28LL,  2LL,  783LL,  0);
  __break(1u);
  return result;
}

      sub_10003788C();
    }
  }

  sub_100037230();
LABEL_40:
  *int64_t v3 = v12;
  sub_10000DD84();
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    int64_t v5 = (v10 - 1) & v10;
  }

  int64_t v11 = v9 + 4;
  if (v11 >= v32) {
    return swift_release();
  }
  unint64_t v10 = *(void *)(v31 + 8 * v11);
  if (v10)
  {
    id v6 = v11;
    goto LABEL_20;
  }

  while (1)
  {
    id v6 = v11 + 1;
    if (__OFADD__(v11, 1LL)) {
      break;
    }
    if (v6 >= v32) {
      return swift_release();
    }
    unint64_t v10 = *(void *)(v31 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_20;
    }
  }

          int64_t v11 = (v17 - 1) & v17;
          int64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }

        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48LL) + 16 * v12);
        id v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)(v41, *(void *)(a3 + 40));
        swift_bridgeObjectRetain(v20);
        String.hash(into:)(v41, v21, v20);
        uint64_t v22 = Hasher._finalize()();
        uint64_t v23 = -1LL << *(_BYTE *)(a3 + 32);
        uint64_t v24 = v22 & ~v23;
        uint64_t v25 = v24 >> 6;
        uint64_t v26 = 1LL << v24;
        if (((1LL << v24) & *(void *)(v42 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_38:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }

      char v27 = *(void *)(a3 + 48);
      uint64_t v28 = (void *)(v27 + 16 * v24);
      uint64_t v29 = v28[1];
      uint64_t v30 = *v28 == v21 && v29 == v20;
      if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v21, v20, 0LL) & 1) == 0)
      {
        uint64_t v32 = ~v23;
        for (i = v24 + 1; ; i = v34 + 1)
        {
          uint64_t v34 = i & v32;
          uint64_t v35 = (void *)(v27 + 16 * v34);
          uint64_t v36 = v35[1];
          uint64_t v37 = *v35 == v21 && v36 == v20;
          if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v35, v36, v21, v20, 0LL) & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            uint64_t v25 = v34 >> 6;
            uint64_t v26 = 1LL << v34;
            goto LABEL_28;
          }
        }

        goto LABEL_38;
      }

      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_28:
      uint64_t v31 = v40[v25];
      v40[v25] = v31 & ~v26;
    }

    while ((v26 & v31) == 0);
    unint64_t v8 = v39 - 1;
    if (__OFSUB__(v39, 1LL))
    {
LABEL_46:
      __break(1u);
      return result;
    }

    if (v39 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }

    unint64_t v7 = (v12 - 1) & v12;
  }

  id v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    sub_10001A2D8();
    return v15;
  }

  int64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_20;
  }

  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    int64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }

  if (v15)
  {
    if (qword_1001C7FD0 != -1) {
      swift_once(&qword_1001C7FD0, sub_1000BD660);
    }
    sub_10002588C();
    sub_100067984();
    sub_1000BB8AC();
    sub_100037230();
    goto LABEL_29;
  }

LABEL_25:
  swift_release(v1);
  uint64_t v1 = (uint64_t)_swiftEmptyArrayStorage;
  sub_100009070();
  id v6 = *(id *)(v0 + 248);
  uint64_t v17 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_retain(v6);
  sub_10000DEE0();
  for (; v17; uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v24))
  {
    uint64_t v18 = 0LL;
    while (1)
    {
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v19 = sub_10000DFC8();
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v20);
      }

      else
      {
        id v6 = *(id *)(v1 + 8 * v18 + 32);
      }

      id v21 = v6;
      uint64_t v22 = v18 + 1;
      if (__OFADD__(v18, 1LL)) {
        break;
      }
      sub_100009FF8(v6);

      ++v18;
      if (v22 == v17) {
        goto LABEL_33;
      }
    }

    sub_1000676B4();
  }

  sub_1000372A0();
  while (++v24 != v25 || (v23 & 1) == 0)
  {
    uint64_t v26 = v24 == v25;
    if (v24 == v25) {
      uint64_t v24 = 0LL;
    }
    v23 |= v26;
    if (v8[v24] != -1LL)
    {
      sub_100037254();
      goto LABEL_35;
    }
  }

  __break(1u);
  __break(1u);
LABEL_39:
  __break(1u);
}

  __break(1u);
  return result;
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
  return result;
}

      uint64_t v18 = (v29 - 1) & v29;
      char v27 = __clz(__rbit64(v29)) + (v30 << 6);
      uint64_t v25 = v30;
LABEL_26:
      uint64_t v32 = *(_DWORD *)(*(void *)(v23 + 48) + 4 * v27);
      uint64_t v33 = *(void **)(*(void *)(v23 + 56) + 8 * v27);
      swift_unknownObjectRetain(v33);
      sub_1000E32D4(v32, v33, v2, a1);
      swift_unknownObjectRelease(v33);
      if (v18) {
        goto LABEL_9;
      }
    }

    uint64_t v31 = v25 + 6;
    while (v31 < v10)
    {
      uint64_t v29 = *(void *)(v24 + 8 * v31++);
      if (v29)
      {
        uint64_t v30 = v31 - 1;
        goto LABEL_25;
      }
    }

  __break(1u);
}

  __break(1u);
  return result;
}

    id v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    id v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

    uint64_t v16 = (v21 - 1) & v21;
  }

  uint64_t v22 = v20 + 3;
  if (v22 >= v17)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_30;
  }

  id v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    id v13 = v22;
    goto LABEL_25;
  }

  while (1)
  {
    id v13 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    id v21 = *(void *)(v10 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }

    id v13 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }

  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    uint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }

LABEL_35:
    __break(1u);
LABEL_36:
    if (v1 < 0) {
      uint64_t v24 = v1;
    }
    else {
      uint64_t v24 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_retain(v6);
    sub_10000DEE0();
  }

  __break(1u);
LABEL_36:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v57._countAndFlagsBits = 10LL;
    v57._object = (void *)0xE100000000000000LL;
    String.append(_:)(v57);
  }

  __break(1u);
  return result;
}

                swift_release(v67);
                uint64_t v55 = sub_1000D1328((uint64_t)v17, v59);
                uint64_t v56 = sub_1000105E8((uint64_t)[v60 stringValue]);
                uint64_t v58 = v57;

                sub_1000D2398(v55, v56, v58);
                swift_bridgeObjectRelease();
                sub_10000DE2C();
                sub_10000DD84();
                return;
              }
            }
          }
        }
      }
    }

  __break(1u);
LABEL_36:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

LABEL_33:
  swift_release(*(void *)(v0 + 248));
  sub_10000E014(v1);
  swift_task_dealloc(*(void *)(v0 + 256));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

  sub_100037230();
LABEL_35:
  if ((v40 & 1) != 0)
  {
    sub_100037240();
    if (v36 != v37) {
      *uint64_t v17 = -1LL << v35;
    }
    else {
      sub_100037550(v35);
    }
    v3[2] = 0LL;
  }

    uint64_t v20 = 0LL;
    LOBYTE(a2) = 1;
    goto LABEL_46;
  }

  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_10000A7DC()
{
  uint64_t v3 = *(void *)(v0 + 248);
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v4 = sub_10000DC98();
  *(_OWORD *)(sub_10000DCC0(v4) + 16) = xmmword_100164240;
  uint64_t v5 = type metadata accessor for AccountsObserver();
  *(void *)(v0 + 56) = v3;
  uint64_t v6 = sub_10000DD0C(v5);
  id v7 = (id)AMSLogKey(v6);
  if (v7)
  {
    id v8 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    sub_10000DE34();
    sub_10000DF9C();
    sub_10000DC34();
    sub_10000DC08();
    int64_t v9 = sub_10000D37C((void *)(v0 + 56), v5);
    sub_10000DC54((uint64_t)v9, v5);
    *(void *)(v0 + 208) = sub_10000DDAC();
    *(void *)(v0 + 184) = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 184);
    sub_10000DD04(v0 + 184);
    sub_10000DC14();
    *(void *)(v0 + 152) = v1;
    sub_10000DE64((uint64_t)&type metadata for String);
    sub_10000DD04(v0 + 152);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DF90();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    unint64_t v10 = sub_10000D37C((void *)(v0 + 56), v5);
    sub_10000DC54((uint64_t)v10, v5);
    uint64_t v11 = sub_10000DF48();
    *(void *)(v0 + 88) = v1;
    sub_10000DF70(v11);
    sub_10000DA68(v0 + 88, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0((void *)(v0 + 56));
  sub_10000E008();
  uint64_t v12 = sub_10000DD38(35LL);
  sub_10000DE44(v12, v13, v14, v15, v16, v17, v18, v19, v24, v25, v26);
  *(void *)(v0 + 144) = *(void *)(v0 + 224);
  uint64_t v20 = sub_10000D63C(v2);
  sub_10000DDB4((uint64_t)v20);
  sub_10000DF3C();
  sub_10000DA68((uint64_t)v2, &qword_1001CAAD0);
  if (qword_1001C7F80 != -1) {
    swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v21 = *(void *)(v0 + 280);
  uint64_t v22 = static os_log_type_t.error.getter();
  sub_10000DE24(v22);
  sub_100009020();
  swift_errorRelease(v21);
  swift_task_dealloc(*(void *)(v0 + 256));
  return sub_10000DCA4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10000A9D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v48 = v52[0];
  int64_t v7 = v52[3];
  unint64_t v8 = v52[4];
  uint64_t v44 = v52[1];
  int64_t v45 = (unint64_t)(v52[2] + 64LL) >> 6;
  swift_bridgeObjectRetain(a1);
  uint64_t v46 = a2;
  if (!v8) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v10 = v9 | (v7 << 6);
  while (1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v48 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(v48 + 56) + 8 * v10);
    uint64_t v19 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain(v16);
    id v20 = v18;
    if (v19)
    {
      swift_bridgeObjectRetain(a2);
      sub_100030CCC(v17, v16);
      char v22 = v21;
      swift_bridgeObjectRelease(a2);
      if ((v22 & 1) != 0) {
        goto LABEL_30;
      }
    }

    unint64_t v50 = v8;
    uint64_t v51 = v7;
    swift_bridgeObjectRetain(v16);
    id v49 = v20;
    id v23 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
    uint64_t v53 = (void *)*a3;
    uint64_t v25 = v53;
    uint64_t v26 = a3;
    *a3 = 0x8000000000000000LL;
    unint64_t v27 = sub_100030CCC(v17, v16);
    uint64_t v29 = v25[2];
    BOOL v30 = (v28 & 1) == 0;
    Swift::Int v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    unint64_t v32 = v27;
    char v33 = v28;
    sub_10000D33C(&qword_1001C8BF0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v31))
    {
      unint64_t v34 = sub_100030CCC(v17, v16);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_36;
      }
      unint64_t v32 = v34;
    }

    uint64_t v36 = v53;
    if ((v33 & 1) != 0)
    {
      uint64_t v37 = v53[7];

      *(void *)(v37 + 8 * v32) = v23;
    }

    else
    {
      v53[(v32 >> 6) + 8] |= 1LL << v32;
      uint64_t v38 = (uint64_t *)(v36[6] + 16 * v32);
      *uint64_t v38 = v17;
      v38[1] = v16;
      *(void *)(v36[7] + 8 * v32) = v23;
      uint64_t v39 = v36[2];
      BOOL v40 = __OFADD__(v39, 1LL);
      uint64_t v41 = v39 + 1;
      if (v40) {
        goto LABEL_35;
      }
      v36[2] = v41;
      swift_bridgeObjectRetain(v16);
    }

    a3 = v26;
    uint64_t v42 = *v26;
    *uint64_t v26 = v36;
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v42);
    sub_10000AECC(v17);
    a2 = v46;
    unint64_t v8 = v50;
    int64_t v7 = v51;
    id v20 = v49;
LABEL_30:

    swift_bridgeObjectRelease(v16);
    if (v8) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1LL)) {
      goto LABEL_34;
    }
    if (v11 >= v45) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v44 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v45) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v44 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v45) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v44 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v7 + 4;
          if (v7 + 4 >= v45) {
            goto LABEL_32;
          }
          unint64_t v12 = *(void *)(v44 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v7 + 5;
            if (v7 + 5 >= v45) {
              goto LABEL_32;
            }
            unint64_t v12 = *(void *)(v44 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v7 + 6;
              while (v14 < v45)
              {
                unint64_t v12 = *(void *)(v44 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }

LABEL_32:
              swift_bridgeObjectRelease(a2);
              swift_release(v48);
              return swift_release(a4);
            }
          }
        }
      }
    }

  __break(1u);
}

              Swift::Int v31 = sub_1000BEC68();
              sub_10004844C(v31);
              return;
            }
          }
        }
      }
    }

              char v35 = sub_1000BEC7C();
              sub_10004844C(v35);
              return;
            }
          }
        }
      }
    }

        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }

      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_22:
      Swift::Int v31 = v41[v25];
      v41[v25] = v31 & ~v26;
    }

    while ((v26 & v31) == 0);
    unint64_t v8 = v40 - 1;
    if (__OFSUB__(v40, 1LL))
    {
LABEL_48:
      __break(1u);
      return result;
    }

    if (v40 != 1) {
      continue;
    }
    return (unint64_t *)&_swiftEmptySetSingleton;
  }

  __break(1u);
  return result;
}

LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v7 = v13;
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

    int64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    uint64_t v6 = v13;
  }

  __break(1u);
}

    sub_10001A044();
    uint64_t v25 = "Division by zero";
    uint64_t v26 = 16LL;
    goto LABEL_20;
  }

    char v21 = 0LL;
    memset(v37, 0, sizeof(v37));
    uint64_t v36 = 0u;
LABEL_19:
    sub_1000288E8((uint64_t)&v36, (uint64_t)&v38, &qword_1001C9900);
    Swift::Int v31 = v39;
    if (!v39) {
      return swift_release(a1);
    }
    unint64_t v32 = v38;
    sub_10000DA58(&v40, &v36);
    uint64_t v3 = objc_autoreleasePoolPush();
    sub_100029B70((uint64_t)&v36, v41, v32, v31);
    if (v2)
    {
      objc_autoreleasePoolPop(v3);
      swift_bridgeObjectRelease();
      swift_release(a1);
      return sub_10002C774();
    }

    objc_autoreleasePoolPop(v3);
    swift_bridgeObjectRelease();
    uint64_t result = sub_10002C774();
    if (v21) {
      goto LABEL_8;
    }
  }

  BOOL v30 = *(void *)(v34 + 8 * (v29 + 2));
  if (v30)
  {
    v29 += 2LL;
    goto LABEL_13;
  }

  char v33 = v29 + 3;
  if (v29 + 3 >= v35)
  {
    id v23 = v29 + 2;
    goto LABEL_18;
  }

  BOOL v30 = *(void *)(v34 + 8 * v33);
  if (v30)
  {
    v29 += 3LL;
LABEL_13:
    char v21 = (v30 - 1) & v30;
    uint64_t v25 = __clz(__rbit64(v30)) + (v29 << 6);
    id v23 = v29;
LABEL_9:
    uint64_t v26 = *(void *)(a1 + 56);
    unint64_t v27 = (void *)(*(void *)(a1 + 48) + 16 * v25);
    char v28 = v27[1];
    *(void *)&uint64_t v36 = *v27;
    *((void *)&v36 + 1) = v28;
    sub_10000DA1C(v26 + 32 * v25, (uint64_t)v37);
    swift_bridgeObjectRetain(v28);
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v29 = v33 + 1;
    if (__OFADD__(v33, 1LL)) {
      break;
    }
    if (v29 >= v35)
    {
      id v23 = v35 - 1;
      goto LABEL_18;
    }

    BOOL v30 = *(void *)(v34 + 8 * v29);
    ++v33;
    if (v30) {
      goto LABEL_13;
    }
  }

  __break(1u);
  return result;
}

      sub_1000376E8();
      int64_t v11 = v19 & v18;
    }
  }

  sub_100037230();
LABEL_40:
  *uint64_t v2 = v6;
  sub_1000371F0();
}

    sub_1000376E8();
    int64_t v11 = v20 & v19;
  }

  uint64_t v18 = v16 + 2;
  if (v18 < v38)
  {
    if (!v39[v18])
    {
      while (1)
      {
        int64_t v13 = v18 + 1;
        if (__OFADD__(v18, 1LL)) {
          goto LABEL_43;
        }
        if (v13 >= v38) {
          goto LABEL_33;
        }
        ++v18;
        if (v39[v13]) {
          goto LABEL_18;
        }
      }
    }

    int64_t v13 = v18;
    goto LABEL_18;
  }

      sub_10003788C();
    }
  }

  sub_100037230();
  *uint64_t v4 = v6;
}

      sub_1000376E8();
      int64_t v13 = v22 & v21;
    }

    sub_100037230();
    uint64_t v2 = v36;
    uint64_t v19 = v37;
    if ((v4 & 1) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    sub_100037240();
    if (v34 != v35) {
      *uint64_t v19 = -1LL << v33;
    }
    else {
      sub_100037550(v33);
    }
    v1[2] = 0LL;
  }

  __break(1u);
  return result;
}

    uint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    uint64_t v5 = v11;
  }

  __break(1u);
}

    int64_t v13 = (v17 - 1) & v17;
  }

  uint64_t v18 = v16 + 3;
  if (v18 >= v31) {
    return (uint64_t)v6;
  }
  uint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v7 >= v31) {
      return (uint64_t)v6;
    }
    uint64_t v17 = *(void *)(v30 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }

    unint64_t v8 = (v12 - 1) & v12;
  }

  int64_t v13 = v11 + 3;
  if (v13 >= v29) {
    return;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v13);
  if (v12)
  {
    uint64_t v4 = v13;
    goto LABEL_18;
  }

  while (1)
  {
    uint64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v4 >= v29) {
      return;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }

    unint64_t v9 = (v14 - 1) & v14;
  }

  uint64_t v15 = v13 + 3;
  if (v15 >= v27)
  {
LABEL_22:

    return;
  }

  int64_t v14 = *(void *)(v26 + 8 * v15);
  if (v14)
  {
    uint64_t v5 = v15;
    goto LABEL_18;
  }

  while (1)
  {
    uint64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v5 >= v27) {
      goto LABEL_22;
    }
    int64_t v14 = *(void *)(v26 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }

    unint64_t v10 = (v15 - 1) & v15;
  }

  uint64_t v16 = v14 + 3;
  if (v16 >= v28) {
    return;
  }
  uint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    uint64_t v4 = v16;
    goto LABEL_18;
  }

  while (1)
  {
    uint64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v4 >= v28) {
      return;
    }
    uint64_t v15 = *(void *)(v27 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }

    uint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    uint64_t v5 = v12;
  }

  __break(1u);
  return result;
}

    int64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    uint64_t v6 = v13;
  }

  __break(1u);
}

    int64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    uint64_t v6 = v13;
  }

  __break(1u);
}

    unint64_t v10 = (v15 - 1) & v15;
  }

  uint64_t v16 = v14 + 3;
  if (v16 >= v28) {
    return;
  }
  uint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    uint64_t v4 = v16;
    goto LABEL_18;
  }

  while (1)
  {
    uint64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v4 >= v28) {
      return;
    }
    uint64_t v15 = *(void *)(v27 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }

    __break(1u);
    goto LABEL_19;
  }

  __break(1u);
  return result;
}

    uint64_t v44 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    goto LABEL_10;
  }

  __break(1u);
}

    int64_t v7 = (v13 - 1) & v13;
    int64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    uint64_t v6 = v14;
  }

  __break(1u);
  return result;
}

    sub_100116B44();
  }

  unint64_t v10 = v9 + 4;
  if (v10 >= v3)
  {
LABEL_21:
    swift_release(a1);
    return;
  }

  if (*(void *)(v7 + 8 * v10))
  {
    uint64_t v6 = v10;
    goto LABEL_18;
  }

  while (1)
  {
    uint64_t v6 = v10 + 1;
    if (__OFADD__(v10, 1LL)) {
      break;
    }
    if (v6 >= v3) {
      goto LABEL_21;
    }
    ++v10;
    if (*(void *)(v7 + 8 * v6)) {
      goto LABEL_18;
    }
  }

    uint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    uint64_t v5 = v11;
  }

  __break(1u);
}

    int64_t v7 = (v10 - 1) & v10;
    uint64_t v6 = v11;
  }

  __break(1u);
  return result;
}

    v136 = (v33 - 1) & v33;
    v137 = v32;
  }

  v103 = 0LL;
  v144 = _swiftEmptyArrayStorage;
  v131 = v45;
  specialized ContiguousArray.reserveCapacity(_:)(v45);
  uint64_t v46 = sub_10014B0A0(v44);
  uint64_t v48 = v47;
  unint64_t v50 = v49 & 1;
  v118 = v44;
  v119 = v44 + 56;
  v117 = a2;
  while ((v46 & 0x8000000000000000LL) == 0 && v46 < 1LL << *(_BYTE *)(v44 + 32))
  {
    if (*(_DWORD *)(v44 + 36) != (_DWORD)v48) {
      goto LABEL_54;
    }
    v129 = v50;
    uint64_t v51 = v125;
    sub_100112854(*(void *)(v44 + 48) + *(void *)(v126 + 72) * v46, v125, type metadata accessor for Treatment);
    sub_10014B27C(v51, (uint64_t)v16);
    v130 = v48;
    if ((v127 & 1) != 0)
    {
      uint64_t v52 = sub_10000D33C(&qword_1001C8EA0);
      uint64_t v53 = swift_allocObject(v52, 48LL, 7LL);
      *(_OWORD *)(v53 + 16) = v115;
      uint64_t v54 = &v16[*(int *)(v128 + 20)];
      uint64_t v55 = *((void *)v54 + 1);
      *(void *)(v53 + 32) = *(void *)v54;
      *(void *)(v53 + 40) = v55;
      swift_bridgeObjectRetain();
      uint64_t v56 = v114;
      swift_bridgeObjectRetain();
      sub_100013F14();
      uint64_t v58 = v57;
      v57[2] = 2LL;
      v57[6] = v113;
      v57[7] = v56;
      uint64_t v59 = __dst[7];
      uint64_t v60 = __dst[8];
      uint64_t v62 = __dst[9];
      uint64_t v61 = __dst[10];
      uint64_t v63 = v57[3];
      swift_bridgeObjectRetain();
      if (v63 <= 5)
      {
        sub_100013F14();
        uint64_t v58 = v96;
      }

      v58[2] = 3LL;
      v58[8] = v59;
      v58[9] = v60;
      v64 = v58[3];
      swift_bridgeObjectRetain();
      if (v64 <= 7)
      {
        sub_100013F14();
        uint64_t v58 = v97;
      }

      v58[2] = 4LL;
      v58[10] = v62;
      v58[11] = v61;
      v138 = (void *)v112;
      v65 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
      v67 = v66;
      v68 = v58[2];
      if (v68 >= v58[3] >> 1)
      {
        sub_100013F14();
        uint64_t v58 = v98;
      }

      v58[2] = v68 + 1;
      v69 = &v58[2 * v68];
      v69[4] = v65;
      v69[5] = v67;
      v138 = v58;
      v70 = sub_10000D33C(&qword_1001CDF50);
      sub_10000D890((unint64_t *)&qword_1001C90E8, &qword_1001CDF50);
      v116 = BidirectionalCollection<>.joined(separator:)(58LL, 0xE100000000000000LL, v70);
      v72 = v71;
      swift_bridgeObjectRelease();
      v73 = v124;
      v74 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
      v75 = (uint64_t)v121;
      uint64_t v16 = v134;
      v74(v121, v134, v124);
      v76 = (uint64_t)v122;
      v74(v122, &v16[*(int *)(v128 + 24)], v73);
      v77 = objc_allocWithZone(&OBJC_CLASS___AMSTreatment);
      v78 = sub_1001475B0(v75, v116, v72, v76);
      a2 = v117;
      uint64_t inited = v120;
    }

    else
    {
      v79 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
      v80 = v121;
      v81 = v16;
      v82 = v124;
      v79(v121, v81, v124);
      v83 = (uint64_t *)&v134[*(int *)(v128 + 20)];
      v84 = *v83;
      v85 = v83[1];
      v86 = v122;
      v87 = v82;
      uint64_t v16 = v134;
      v79(v122, &v134[*(int *)(v128 + 24)], v87);
      objc_allocWithZone(&OBJC_CLASS___AMSTreatment);
      swift_bridgeObjectRetain();
      v88 = (uint64_t)v80;
      a2 = v117;
      v89 = (uint64_t)v86;
      uint64_t inited = v120;
      v78 = sub_1001475B0(v88, v84, v85, v89);
    }

    sub_100019EC0((uint64_t)v16, type metadata accessor for Treatment);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v90);
    v91 = v144[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v91);
    v92 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v78);
    specialized ContiguousArray._endMutation()(v92);
    uint64_t v44 = v118;
    v93 = sub_10014AFB8(v46, v130, v129 & 1, v118);
    uint64_t v46 = v93;
    uint64_t v48 = v94;
    unint64_t v50 = v95 & 1;
    if (!--v131)
    {
      sub_1000B7E70(v93, v94, v50);
      v99 = v144;
      sub_10014B22C(v141);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v7 = v103;
      goto LABEL_48;
    }
  }

  id v23 = *v29;
  *(void *)(*v29 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  uint64_t result = sub_10014B27C(a1, *(void *)(v23 + 48) + *(void *)(v30 + 72) * a2);
  uint64_t v25 = *(void *)(v23 + 16);
  uint64_t v26 = __OFADD__(v25, 1LL);
  unint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }

  __break(1u);
LABEL_21:
  sub_100019EC0((uint64_t)v9, type metadata accessor for Treatment);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v7);
  __break(1u);
  return result;
}

    unint64_t v9 = (v15 - 1) & v15;
    int64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    unint64_t v8 = v16;
  }

  __break(1u);
  return result;
}

void sub_10000AD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v19[0];
  uint64_t v5 = v19[1];
  int64_t v6 = v19[3];
  unint64_t v7 = v19[4];
  int64_t v8 = (unint64_t)(v19[2] + 64LL) >> 6;
  swift_bridgeObjectRetain(a1);
  if (!v7) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  unint64_t v10 = v9 | (v6 << 6);
  while (1)
  {
    uint64_t v15 = *(void **)(*(void *)(v4 + 56) + 8 * v10);
    id v16 = v15;
    sub_10000CEB8(v15);
    uint64_t v18 = v17;
    swift_retain(a2);
    sub_100052990();
    swift_release(a2);
    swift_release(v18);

    if (v7) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1LL)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_21;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    int64_t v13 = v6 + 1;
    if (!v12)
    {
      int64_t v13 = v6 + 2;
      if (v6 + 2 >= v8) {
        goto LABEL_21;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v6 + 3;
        if (v6 + 3 >= v8) {
          goto LABEL_21;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v6 + 4;
          if (v6 + 4 >= v8) {
            goto LABEL_21;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v6 + 5;
            if (v6 + 5 >= v8) {
              goto LABEL_21;
            }
            unint64_t v12 = *(void *)(v5 + 8 * v13);
            if (!v12)
            {
              int64_t v14 = v6 + 6;
              while (v14 < v8)
              {
                unint64_t v12 = *(void *)(v5 + 8 * v14++);
                if (v12)
                {
                  int64_t v13 = v14 - 1;
                  goto LABEL_18;
                }
              }

LABEL_21:
              swift_release(v4);
              swift_release(a2);
              return;
            }
          }
        }
      }
    }

    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v34 = v13;
  }

  int64_t v14 = v3 + 4;
  if (v3 + 4 >= v33) {
    return 1LL;
  }
  unint64_t v12 = *(void *)(v32 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 4;
    goto LABEL_21;
  }

  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v13 >= v33) {
      return 1LL;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_21;
    }
  }

  swift_release(v26);
  swift_bridgeObjectRelease(v10);
LABEL_23:
  swift_bridgeObjectRelease(a2);
  return v8;
}

    swift_once(&qword_1001C7FB8, sub_1000BD55C);
    goto LABEL_15;
  }

  if (v27 < 0) {
    int64_t v45 = v27;
  }
  else {
    int64_t v45 = v27 & 0xFFFFFFFFFFFFFF8LL;
  }
  sub_10000DED8();
  char v35 = _CocoaArrayWrapper.endIndex.getter(v45);
  sub_1000090CC();
  if (!v35) {
    goto LABEL_14;
  }
LABEL_3:
  if (v35 < 1)
  {
    __break(1u);
    goto LABEL_21;
  }

  v65 = a22;
  uint64_t v66 = a21;
  uint64_t v63 = v32 + 7;
  v64 = v27 & 0xC000000000000001LL;
  sub_10000DED8();
  uint64_t v36 = 0LL;
  v67 = v35;
  v68 = v27;
  do
  {
    if (v64) {
      specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v27);
    }
    else {
      sub_100048DB4();
    }
    ++v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v70, v30);
    uint64_t v37 = *(unsigned __int8 *)(v31 + 80);
    uint64_t v38 = (v37 + 16) & ~v37;
    uint64_t v39 = (v63 + v38) & 0xFFFFFFFFFFFFFFF8LL;
    BOOL v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v41 = swift_allocObject(v71, v40 + 16, v37 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v41 + v38, v33, v30);
    uint64_t v42 = v72;
    *(void *)(v41 + v39) = v72;
    uint64_t v43 = (void *)(v41 + v40);
    *uint64_t v43 = v69;
    v43[1] = v29;
    uint64_t v44 = v42;
    sub_10000DD9C();
    v65(0LL, 1LL, v66, v41);
    sub_100020B68();
    sub_1000292C4();
    unint64_t v27 = v68;
  }

  while (v67 != v36);
LABEL_19:
  swift_bridgeObjectRelease();
  sub_10000DD84();
}

              swift_release(v4);
              return;
            }
          }
        }
      }
    }

    unint64_t v7 = (v11 - 1) & v11;
  }

  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

    int64_t v14 = (v20 - 1) & v20;
    uint64_t v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_22:
    if (!*(void *)(a2 + 16))
    {
      sub_10000D5C0((uint64_t)v6, 1LL, 1LL, updated);
      goto LABEL_28;
    }

    char v22 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v18);
    id v23 = *v22;
    uint64_t v24 = v22[1];
    swift_bridgeObjectRetain(v24);
    uint64_t v25 = sub_100030CCC(v23, v24);
    if ((v26 & 1) != 0)
    {
      sub_1000CCDCC( *(void *)(a2 + 56) + *(void *)(v40 + 72) * v25,  (uint64_t)v6,  type metadata accessor for MercuryCacheUpdateData.DataKind);
      unint64_t v27 = 0LL;
    }

    else
    {
      unint64_t v27 = 1LL;
    }

    sub_10000D5C0((uint64_t)v6, v27, 1LL, updated);
    swift_bridgeObjectRelease();
    if (sub_1000102D4((uint64_t)v6, 1LL, updated) == 1)
    {
LABEL_28:
      sub_100019E6C((uint64_t)v6, &qword_1001C9D80);
    }

    else
    {
      char v28 = v37;
      sub_1000CCDAC((uint64_t)v6, v37, type metadata accessor for MercuryCacheUpdateData.DataKind);
      sub_1000CCDAC(v28, v38, type metadata accessor for MercuryCacheUpdateData.DataKind);
      if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
      {
        sub_10001408C();
        uint64_t v39 = v33;
      }

      uint64_t v29 = v39[2];
      BOOL v30 = v29 + 1;
      if (v29 >= v39[3] >> 1)
      {
        uint64_t v36 = v29 + 1;
        sub_10001408C();
        BOOL v30 = v36;
        uint64_t v39 = v34;
      }

      Swift::Int v31 = v38;
      unint64_t v32 = v39;
      v39[2] = v30;
      sub_1000CCDAC( v31,  (uint64_t)v32 + ((*(unsigned __int8 *)(v40 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))
      + *(void *)(v40 + 72) * v29,
        type metadata accessor for MercuryCacheUpdateData.DataKind);
    }
  }

  char v21 = v19 + 4;
  if (v21 >= v15)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    swift_release(a1);
    return;
  }

  id v20 = *(void *)(v11 + 8 * v21);
  if (v20)
  {
    id v16 = v21;
    goto LABEL_21;
  }

  while (1)
  {
    id v16 = v21 + 1;
    if (__OFADD__(v21, 1LL)) {
      break;
    }
    if (v16 >= v15) {
      goto LABEL_34;
    }
    id v20 = *(void *)(v11 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_21;
    }
  }

    uint64_t v17 = (v24 - 1) & v24;
    char v22 = __clz(__rbit64(v24)) + (v25 << 6);
    id v16 = v25;
LABEL_22:
    swift_bridgeObjectRetain(*(void *)(*(void *)(v15 + 56) + 8 * v22));
    sub_1000CF518();
    if (sub_1000102D4((uint64_t)v4, 1LL, v5) == 1)
    {
      uint64_t result = sub_1000102E0((uint64_t)v4, &qword_1001CC218);
    }

    else
    {
      unint64_t v27 = v33;
      sub_1000D2EE4((uint64_t)v4, v33);
      sub_1000D2EE4(v27, v35);
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      {
        sub_100014064();
        id v20 = v30;
      }

      char v28 = v20[2];
      uint64_t v29 = v20;
      if (v28 >= v20[3] >> 1)
      {
        sub_100014064();
        uint64_t v29 = v31;
      }

      v29[2] = v28 + 1;
      id v20 = v29;
      uint64_t result = sub_1000D2EE4( v35,  (uint64_t)v29 + ((*(unsigned __int8 *)(v34 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))
               + *(void *)(v34 + 72) * v28);
    }
  }

  __break(1u);
  return result;
}

    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_22:
    int64_t v14 = (void *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = v14[1];
    v57[0] = *v14;
    id v16 = v57[0];
    v57[1] = v15;
    swift_bridgeObjectRetain_n(v15, 2LL);
    AnyHashable.init<A>(_:)(v57);
    *(void *)&uint64_t v55 = v16;
    *((void *)&v55 + 1) = v15;
    swift_bridgeObjectRetain(v15);
    AnyHashable.init<A>(_:)(&v55);
    if (*(void *)(a3 + 16) && (uint64_t v17 = sub_100030D24((uint64_t)v57), (v18 & 1) != 0))
    {
      sub_10000DA1C(*(void *)(a3 + 56) + 32 * v17, (uint64_t)&v55);
    }

    else
    {
      uint64_t v55 = 0u;
      uint64_t v56 = 0u;
    }

    sub_10000E854((uint64_t)v57);
    if (*((void *)&v56 + 1))
    {
      uint64_t v19 = v7;
      id v20 = v8;
      sub_10000DA58(&v55, v54);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
      uint64_t v59 = (void *)*a2;
      char v22 = v59;
      id v23 = a2;
      *a2 = 0x8000000000000000LL;
      uint64_t v24 = sub_100030D24((uint64_t)v58);
      uint64_t v26 = v22[2];
      unint64_t v27 = (v25 & 1) == 0;
      char v28 = v26 + v27;
      if (__OFADD__(v26, v27))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }

      uint64_t v29 = v24;
      BOOL v30 = v25;
      sub_10000D33C(qword_1001C9918);
      Swift::Int v31 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v28);
      int64_t v8 = v20;
      unint64_t v7 = v19;
      if (v31)
      {
        unint64_t v32 = sub_100030D24((uint64_t)v58);
        if ((v30 & 1) != (v33 & 1)) {
          goto LABEL_45;
        }
        uint64_t v29 = v32;
      }

      unint64_t v34 = v59;
      if ((v30 & 1) != 0)
      {
        char v35 = (void *)(v59[7] + 32 * v29);
        sub_10000D3A0(v35);
        sub_10000DA58(v54, v35);
      }

      else
      {
        v59[(v29 >> 6) + 8] |= 1LL << v29;
        sub_10002C644((uint64_t)v58, v34[6] + 40 * v29);
        sub_10000DA58(v54, (_OWORD *)(v34[7] + 32 * v29));
        uint64_t v46 = v34[2];
        uint64_t v47 = __OFADD__(v46, 1LL);
        uint64_t v48 = v46 + 1;
        if (v47) {
          goto LABEL_43;
        }
        v34[2] = v48;
      }

      a2 = v23;
      *id v23 = v34;
      swift_bridgeObjectRelease();
      sub_10000E854((uint64_t)v58);
      swift_bridgeObjectRelease();
      a3 = v51;
    }

    else
    {
      sub_10000E888((uint64_t)&v55);
      swift_bridgeObjectRetain(*a2);
      uint64_t v36 = a2;
      uint64_t v37 = sub_100030D24((uint64_t)v58);
      uint64_t v39 = v38;
      swift_bridgeObjectRelease();
      if ((v39 & 1) != 0)
      {
        BOOL v40 = swift_isUniquelyReferenced_nonNull_native(*v36);
        uint64_t v59 = (void *)*v36;
        uint64_t v41 = v59;
        *uint64_t v36 = 0x8000000000000000LL;
        uint64_t v42 = v8;
        uint64_t v43 = v41[3];
        sub_10000D33C(qword_1001C9918);
        uint64_t v44 = v43;
        int64_t v8 = v42;
        _NativeDictionary.ensureUnique(isUnique:capacity:)(v40, v44);
        int64_t v45 = v59;
        sub_10000E854(v59[6] + 40 * v37);
        sub_10000DA58((_OWORD *)(v45[7] + 32 * v37), v54);
        _NativeDictionary._delete(at:)(v37, v45);
        *uint64_t v36 = v45;
        swift_bridgeObjectRelease();
      }

      else
      {
        memset(v54, 0, sizeof(v54));
      }

      a2 = v36;
      sub_10000E854((uint64_t)v58);
      sub_10000E888((uint64_t)v54);
      swift_bridgeObjectRelease();
    }
  }

  int64_t v13 = v11 + 4;
  if (v13 >= v52) {
    goto LABEL_40;
  }
  unint64_t v12 = *(void *)(v50 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }

  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v8 >= v52) {
      goto LABEL_40;
    }
    unint64_t v12 = *(void *)(v50 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }

              sub_10001A2D8();
              return (void *)v15;
            }
          }
        }
      }
    }

    int64_t v11 = (v16 - 1) & v16;
    v68 = v17;
    int64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_22:
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    char v21 = *v19;
    id v20 = v19[1];
    Hasher.init(_seed:)(v71, *(void *)(v5 + 40));
    swift_bridgeObjectRetain(v20);
    String.hash(into:)(v71, v21, v20);
    char v22 = Hasher._finalize()();
    id v23 = -1LL << *(_BYTE *)(v5 + 32);
    uint64_t v24 = v22 & ~v23;
    uint64_t v25 = v24 >> 6;
    uint64_t v26 = 1LL << v24;
    if (((1LL << v24) & *(void *)(v12 + 8 * (v24 >> 6))) == 0) {
      goto LABEL_36;
    }
    unint64_t v27 = *(void *)(a3 + 48);
    char v28 = (void *)(v27 + 16 * v24);
    uint64_t v29 = v28[1];
    BOOL v30 = *v28 == v21 && v29 == v20;
    if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v21, v20, 0LL) & 1) != 0)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v8 = v68;
      uint64_t v5 = a3;
      v63[v25] |= v26;
      uint64_t v37 = __OFADD__(v67++, 1LL);
      uint64_t v4 = v72;
      if (v37) {
        goto LABEL_82;
      }
    }

    else
    {
      Swift::Int v31 = ~v23;
      for (i = v24 + 1; ; i = v33 + 1)
      {
        char v33 = i & v31;
        unint64_t v34 = (void *)(v27 + 16 * v33);
        char v35 = v34[1];
        uint64_t v36 = *v34 == v21 && v35 == v20;
        if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v34, v35, v21, v20, 0LL) & 1) != 0)
        {
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v25 = v33 >> 6;
          uint64_t v26 = 1LL << v33;
          goto LABEL_38;
        }
      }

              swift_release(v4);
              return;
            }
          }
        }
      }
    }

              swift_release(v4);
              return;
            }
          }
        }
      }
    }

              swift_release();
              return;
            }
          }
        }
      }
    }

  BOOL v40 = sub_100020AF8((uint64_t)&unk_1001B2BF8);
  *(void *)(v40 + 16) = &_swiftEmptySetSingleton;
  uint64_t v41 = sub_10013B00C();
  uint64_t v42 = __chkstk_darwin(v41);
  uint64_t v43 = v49;
  v47[-6] = v42;
  v47[-5] = v43;
  v47[-4] = v13;
  v47[-3] = inited;
  v47[-2] = sub_10013D30C;
  v47[-1] = v40;
  sub_100129A28((void (*)(void))sub_10001BBE0, (uint64_t)&v47[-8]);
  if (a3)
  {
    sub_10001A2D8();
    sub_100020AD8();
    sub_10000DE2C();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_100020AD8();
    sub_10000DE2C();
    swift_bridgeObjectRelease();
    sub_100020A94(v40 + 16, (uint64_t)&v55);
    uint64_t inited = *(void *)(v40 + 16);
    sub_10000DF10();
    sub_10001A2D8();
  }

  return inited;
}

              sub_10001A2D8();
              return (void *)v14;
            }
          }
        }
      }
    }

              swift_release(v6);
              return (id)swift_release(a3);
            }
          }
        }
      }
    }

uint64_t sub_10000AECC(uint64_t a1)
{
  uint64_t v1 = sub_10000DECC();
  uint64_t v3 = (void *)sub_100032D10(v1, v2);
  sub_10000DDA4((uint64_t)v3);

  sub_10000DBEC(v4, (uint64_t)v17);
  sub_10000DECC();
  uint64_t v5 = sub_100032DFC();
  uint64_t v6 = sub_10000DDA4(v5);
  sub_10000DBEC(v6, (uint64_t)v17);
  sub_10000DECC();
  uint64_t v7 = sub_100032D54();
  sub_10000DDA4(v7);
  uint64_t v8 = sub_100009070();
  sub_10000DBEC(v8, (uint64_t)v17);
  uint64_t v9 = sub_10000DECC();
  uint64_t v11 = sub_100032D40(v9, v10);
  sub_10000DDA4(v11);
  uint64_t v12 = sub_100009070();
  sub_10000DBEC(v12, (uint64_t)v17);
  uint64_t v13 = sub_10000DECC();
  uint64_t v15 = sub_100032D2C(v13, v14);
  sub_10000DDA4(v15);
  return sub_100009020();
}

void *sub_10000AF98(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v34 = *(void *)(v2 + 16);
  if (!v34)
  {
    swift_bridgeObjectRetain(v2);
LABEL_19:
    sub_100009020();
    return _swiftEmptyDictionarySingleton;
  }

  swift_bridgeObjectRetain_n(v2, 2LL);
  uint64_t v3 = 0LL;
  while (1)
  {
    id v4 = *(id *)(v2 + 8 * v3 + 32);
    id v5 = objc_msgSend(a1, "ams_storefrontForMediaType:", v4);
    if (v5) {
      break;
    }
    sub_10000DF08();
    uint64_t v21 = sub_10000DF88();
    char v23 = v22;
    sub_100009070();
    if ((v23 & 1) == 0)
    {

      goto LABEL_15;
    }

    char v24 = sub_10000DF00();
    Swift::Int v25 = _swiftEmptyDictionarySingleton[3];
    sub_10000D33C(&qword_1001C8C20);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(v24, v25);

    sub_10000DFE0();
    sub_10000D904(&qword_1001C8230, (uint64_t (*)(uint64_t))type metadata accessor for AMSAccountMediaType);
    _NativeDictionary._delete(at:)(v21, _swiftEmptyDictionarySingleton);
    sub_10000DE2C();
LABEL_14:

    swift_bridgeObjectRelease(0x8000000000000000LL);
LABEL_15:
    if (v34 == ++v3)
    {
      sub_100009020();
      goto LABEL_19;
    }
  }

  uint64_t v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  uint64_t v9 = v8;

  char v10 = sub_10000DF00();
  uint64_t v11 = sub_10000DF88();
  uint64_t v13 = _swiftEmptyDictionarySingleton[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (!__OFADD__(v13, v14))
  {
    unint64_t v16 = v11;
    char v17 = v12;
    sub_10000D33C(&qword_1001C8C20);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v15))
    {
      uint64_t v18 = sub_10000DF88();
      if ((v17 & 1) != (v19 & 1)) {
        goto LABEL_22;
      }
      unint64_t v16 = v18;
    }

    if ((v17 & 1) != 0)
    {
      id v20 = (uint64_t *)(_swiftEmptyDictionarySingleton[7] + 16 * v16);
      swift_bridgeObjectRelease(v20[1]);
      *id v20 = v7;
      v20[1] = v9;
    }

    else
    {
      sub_10000DF20((uint64_t)&_swiftEmptyDictionarySingleton[v16 >> 6]);
      *(void *)(v26 + 8 * v16) = v4;
      unint64_t v27 = (uint64_t *)(_swiftEmptyDictionarySingleton[7] + 16 * v16);
      *unint64_t v27 = v7;
      v27[1] = v9;
      uint64_t v28 = _swiftEmptyDictionarySingleton[2];
      BOOL v29 = __OFADD__(v28, 1LL);
      uint64_t v30 = v28 + 1;
      if (v29) {
        goto LABEL_21;
      }
      _swiftEmptyDictionarySingleton[2] = v30;
      id v31 = v4;
    }

    goto LABEL_14;
  }

  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_10000DFE0();
  uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v33);
  __break(1u);
  return result;
}

uint64_t sub_10000B218()
{
  uint64_t v55 = v4;
  uint64_t v56 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0LL);
  uint64_t v5 = *(void *)(v56 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v6);
  sub_10000DE8C();
  uint64_t v7 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  sub_10000DC8C();
  __chkstk_darwin(v8);
  sub_10000DE7C();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10000D33C(&qword_1001C8BF8);
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  sub_10000DC8C();
  __chkstk_darwin(v13);
  sub_10000DD5C();
  uint64_t v57 = v14;
  uint64_t v15 = sub_10000D33C(&qword_1001C8C00);
  uint64_t v61 = *(void *)(v15 - 8);
  uint64_t v62 = v15;
  sub_10000DC8C();
  __chkstk_darwin(v16);
  sub_10000DD5C();
  uint64_t v60 = v17;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v18);
  sub_10000DC74();
  sub_10000D33C(&qword_1001C9C70);
  sub_10000DC98();
  sub_10000DD70();
  uint64_t v21 = sub_10000DCF0((v20 & ~v19) + 2 * v2, v19);
  *(_OWORD *)(v21 + 16) = xmmword_100164230;
  uint64_t v67 = type metadata accessor for AccountsObserver();
  v66[0] = v0;
  uint64_t v63 = v0;
  uint64_t v22 = swift_retain(v0);
  id v23 = (id)AMSLogKey(v22);
  if (v23)
  {
    char v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    uint64_t v27 = v26;

    sub_10000DEB4();
    sub_10000DC34();
    sub_10000DC08();
    uint64_t v28 = v67;
    BOOL v29 = sub_10000D37C(v66, v67);
    uint64_t v30 = sub_10000DC54((uint64_t)v29, v28);
    MetatypeMetadata = (void *)swift_getMetatypeMetadata(v30);
    v64[0] = v30;
    sub_10000DF68();
    sub_10000DD40((uint64_t)v64);
    sub_10000DC14();
    MetatypeMetadata = &type metadata for String;
    v64[0] = v25;
    v64[1] = v27;
    sub_10000DF68();
    sub_10000DD40((uint64_t)v64);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DDF8();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    uint64_t v31 = v67;
    unint64_t v32 = sub_10000D37C(v66, v67);
    uint64_t v33 = sub_10000DC54((uint64_t)v32, v31);
    MetatypeMetadata = (void *)swift_getMetatypeMetadata(v33);
    v64[0] = v33;
    sub_10000DF68();
    sub_10000DA68((uint64_t)v64, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(v66);
  uint64_t v34 = sub_10000DD38(40LL);
  if (qword_1001C7F80 != -1) {
    uint64_t v34 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v35 = static os_log_type_t.info.getter(v34);
  sub_1000BD1B0(v35, v21);
  sub_10000DCFC();
  id v36 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  NSNotificationCenter.publisher(for:object:)(ACDAccountStoreDidChangeNotification, 0LL);

  if (qword_1001C7EF0 != -1) {
    swift_once(&qword_1001C7EF0, sub_100009334);
  }
  uint64_t v37 = sub_10000D7B8(v56, (uint64_t)qword_1001C8990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v37, v56);
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  uint64_t v38 = (void *)qword_1001DBBB8;
  v66[0] = (id)qword_1001DBBB8;
  type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
  uint64_t v39 = sub_10000DDC8();
  uint64_t v40 = sub_10000DE08(v39, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  sub_10000D904( &qword_1001C8C08,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  uint64_t v42 = v41;
  unint64_t v43 = sub_10000D7D0();
  id v44 = v38;
  Publisher.debounce<A>(for:scheduler:options:)(v1, v66, v55, v54, v40, v42, v43);
  sub_10000DA68(v55, (uint64_t *)&unk_1001CD380);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v56);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v11, v54);
  int64_t v45 = (void *)qword_1001DBBB8;
  v66[0] = (id)qword_1001DBBB8;
  sub_10000DDC8();
  sub_10000D890(&qword_1001C8C10, &qword_1001C8BF8);
  uint64_t v47 = v46;
  id v48 = v45;
  Publisher.receive<A>(on:options:)(v66, v55, v59, v40, v47, v43);
  sub_10000DA68(v55, (uint64_t *)&unk_1001CD380);

  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
  uint64_t v49 = sub_10000DDDC((uint64_t)&unk_1001A8188, 24LL);
  swift_weakInit(v49 + 16, v63);
  sub_10000D890(&qword_1001C8C18, &qword_1001C8C00);
  uint64_t v51 = Publisher<>.sink(receiveValue:)(sub_10000D888, v49, v62, v50);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
  v63[8] = v51;
  return swift_release();
}

uint64_t sub_10000B7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v31[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a2 += 16LL;
  swift_beginAccess(a2, v35, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a2);
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v9 = type metadata accessor for LogMessage(0LL);
    uint64_t v10 = swift_allocObject( v8,  ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v9 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v10 + 16) = xmmword_100164230;
    uint64_t v34 = type metadata accessor for AccountsObserver();
    v33[0] = v7;
    uint64_t v11 = swift_retain(v7);
    id v12 = (id)AMSLogKey(v11);
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      uint64_t v16 = v15;

      swift_bridgeObjectRetain(v16);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v17._countAndFlagsBits = 0LL;
      v17._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t v18 = v34;
      uint64_t v19 = sub_10000D37C(v33, v34);
      uint64_t DynamicType = swift_getDynamicType(v19, v18, 1LL);
      MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v31[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v31);
      sub_10000DA68((uint64_t)v31, &qword_1001CAAD0);
      v21._countAndFlagsBits = 5972026LL;
      v21._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      MetatypeMetadata = &type metadata for String;
      v31[0] = v14;
      v31[1] = v16;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v31);
      sub_10000DA68((uint64_t)v31, &qword_1001CAAD0);
      v22._countAndFlagsBits = 93LL;
      v22._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      LogMessage.init(stringInterpolation:)(v5);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v23._countAndFlagsBits = 0LL;
      v23._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      uint64_t v24 = v34;
      uint64_t v25 = sub_10000D37C(v33, v34);
      uint64_t v26 = swift_getDynamicType(v25, v24, 1LL);
      MetatypeMetadata = (void *)swift_getMetatypeMetadata(v26);
      v31[0] = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v31);
      sub_10000DA68((uint64_t)v31, &qword_1001CAAD0);
      v27._countAndFlagsBits = 58LL;
      v27._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)(v5);
    }

    sub_10000D3A0(v33);
    uint64_t v28 = LogMessage.init(stringLiteral:)(0xD000000000000021LL);
    if (qword_1001C7F80 != -1) {
      uint64_t v28 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v29 = static os_log_type_t.default.getter(v28);
    sub_1000BD1B0(v29, v10);
    swift_bridgeObjectRelease();
    sub_10000BEB4();
    return swift_release();
  }

  return result;
}

void sub_10000BA7C(void *a1)
{
  uint64_t v5 = sub_10000D6DC(a1, (SEL *)&selRef_identifier);
  if (v6)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v6;
    sub_10000DC44((uint64_t)(v1 + 4), (uint64_t)v45, 0LL);
    uint64_t v9 = v1[4];
    sub_10000DD9C();
    sub_10000DED8();
    sub_1000306E4(v7, v8, v9);
    sub_10000DCFC();
    sub_1000090CC();
    sub_10000DFFC(0x1001C3000LL);
    uint64_t v21 = sub_10000D6DC(a1, (SEL *)&selRef_ams_creditsString);
    uint64_t v23 = v22;
    sub_10000DC44((uint64_t)(v1 + 5), (uint64_t)v44, 0LL);
    uint64_t v24 = v1[5];
    sub_10000DED8();
    sub_10000DF9C();
    uint64_t v25 = sub_10003071C(v7, v8, v24);
    uint64_t v27 = v26;
    swift_bridgeObjectRelease(v24);
    sub_1000090CC();
    if (v23)
    {
      if (v27)
      {
        if (v21 != v25 || v23 != v27) {
          _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v27, 0LL);
        }
        sub_10000DE74();
        sub_10000DCFC();
        goto LABEL_20;
      }
    }

    else if (!v27)
    {
LABEL_20:
      uint64_t v33 = sub_100009E88(a1);
      if (v33)
      {
        uint64_t v34 = v33;
        sub_10000DC44((uint64_t)(v1 + 6), (uint64_t)v42, 0LL);
        uint64_t v35 = v1[6];
        sub_10000DED8();
        swift_bridgeObjectRetain(v35);
        uint64_t v36 = sub_100030768(v7, v8, v35);
        sub_10000DE74();
        sub_1000090CC();
        if (v36)
        {
          uint64_t v37 = sub_10000DD9C();
          sub_10004AC48(v37, v36);
          swift_bridgeObjectRelease(v36);
          sub_10000E014(v34);
        }

        else
        {
          sub_10000DCFC();
        }
      }

      sub_10000DC44((uint64_t)(v1 + 7), (uint64_t)v43, 0LL);
      uint64_t v38 = v1[7];
      sub_10000DD9C();
      uint64_t v39 = sub_100030768(v7, v8, v38);
      sub_10000DCFC();
      sub_1000090CC();
      uint64_t v40 = sub_10000AF98(a1);
      if (v39)
      {
        uint64_t v41 = sub_10000DF10();
        sub_10004AE20(v41, (uint64_t)v40);
        sub_100009020();
        sub_10000E014(v39);
      }

      else
      {
        sub_100009020();
      }

      goto LABEL_27;
    }

    sub_10000DE74();
    goto LABEL_20;
  }

  sub_10000D33C(&qword_1001C9C70);
  sub_10000DC98();
  sub_10000DD70();
  *(_OWORD *)(sub_10000DCF0((v11 & ~v10) + 2 * v2, v10) + 16) = xmmword_100164230;
  uint64_t v46 = type metadata accessor for AccountsObserver();
  v45[0] = v1;
  uint64_t v12 = swift_retain(v1);
  id v13 = (id)AMSLogKey(v12);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    uint64_t v17 = v16;

    sub_10000DF10();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    sub_10000DEBC();
    uint64_t v18 = v46;
    uint64_t v19 = sub_10000D37C(v45, v46);
    sub_10000DC54((uint64_t)v19, v18);
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
    sub_10000DDE4(MetatypeMetadata);
    sub_10000DD40((uint64_t)v44);
    sub_10000DC14();
    v44[3] = &type metadata for String;
    v44[0] = v15;
    v44[1] = v17;
    sub_10000DEA4();
    sub_10000DD40((uint64_t)v44);
    sub_10000DC4C(93LL);
    sub_10000DFA4();
    sub_10000DE2C();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    sub_10000DEBC();
    uint64_t v29 = v46;
    uint64_t v30 = sub_10000D37C(v45, v46);
    sub_10000DC54((uint64_t)v30, v29);
    uint64_t v31 = swift_getMetatypeMetadata();
    sub_10000DDE4(v31);
    sub_10000DA68((uint64_t)v44, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DFA4();
  }

  sub_10000D3A0(v45);
  sub_10000DD38(25LL);
  if (qword_1001C7F80 != -1) {
    swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v32 = static os_log_type_t.error.getter();
  sub_10000DE24(v32);
  sub_100009020();
LABEL_27:
  sub_10000DD84();
}

void sub_10000BEB4()
{
  uint64_t v1 = *v0;
  sub_10000D33C(&qword_1001C8BD0);
  sub_10000DC64();
  __chkstk_darwin(v2);
  sub_10000DE7C();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  sub_10000DFB0(v5, v7, v8, v6);
  uint64_t v9 = (void *)sub_10000DDDC((uint64_t)&unk_1001A8110, 48LL);
  v9[2] = 0LL;
  v9[3] = 0LL;
  v9[4] = v0;
  v9[5] = v1;
  swift_retain(v0);
  sub_100116BA0(v5, (uint64_t)&unk_1001C8BE0, (uint64_t)v9);
  swift_release();
  sub_10000DFE8();
}

uint64_t sub_10000BF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[26] = a4;
  v5[27] = a5;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  v5[28] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = (void *)swift_task_alloc(dword_1001C89DC);
  v5[29] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10000BFB8;
  return sub_1000093B0();
}

uint64_t sub_10000BFB8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 232);
  *(void *)(*v2 + 240) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = sub_10000C08C;
  }

  else
  {
    *(void *)(v4 + 248) = a1;
    uint64_t v6 = sub_10000C02C;
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_10000C02C()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 208);
  sub_10000DFF4();
  sub_10000DF08();
  sub_10000CE4C(v2, v2, v1);
  sub_100009070();
  swift_task_dealloc(*(void *)(v0 + 224));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10000C08C()
{
  uint64_t v3 = *(void *)(v0 + 208);
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v4 = sub_10000DC98();
  *(_OWORD *)(sub_10000DCC0(v4) + 16) = xmmword_100164240;
  uint64_t v5 = type metadata accessor for AccountsObserver();
  *(void *)(v0 + 16) = v3;
  uint64_t v6 = sub_10000DD0C(v5);
  id v7 = (id)AMSLogKey(v6);
  if (v7)
  {
    id v8 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    sub_10000DE34();
    sub_10000DF9C();
    sub_10000DC34();
    sub_10000DC08();
    uint64_t v9 = sub_10000D37C((void *)(v0 + 16), v5);
    sub_10000DC54((uint64_t)v9, v5);
    *(void *)(v0 + 168) = sub_10000DDAC();
    *(void *)(v0 + 144) = v8;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 144);
    sub_10000DD04(v0 + 144);
    sub_10000DC14();
    *(void *)(v0 + 112) = v1;
    sub_10000DE64((uint64_t)&type metadata for String);
    sub_10000DD04(v0 + 112);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DF90();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    uint64_t v10 = sub_10000D37C((void *)(v0 + 16), v5);
    sub_10000DC54((uint64_t)v10, v5);
    uint64_t v11 = sub_10000DF48();
    *(void *)(v0 + 48) = v1;
    sub_10000DF70(v11);
    sub_10000DA68(v0 + 48, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0((void *)(v0 + 16));
  uint64_t v12 = sub_10000DD38(40LL);
  sub_10000DE44(v12, v13, v14, v15, v16, v17, v18, v19, v24, v25, v26);
  *(void *)(v0 + 104) = *(void *)(v0 + 184);
  uint64_t v20 = sub_10000D63C(v2);
  sub_10000DDB4((uint64_t)v20);
  sub_10000DF3C();
  sub_10000DA68((uint64_t)v2, &qword_1001CAAD0);
  if (qword_1001C7F80 != -1) {
    swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v21 = *(void *)(v0 + 240);
  uint64_t v22 = static os_log_type_t.error.getter();
  sub_10000DE24(v22);
  sub_100009020();
  swift_errorRelease(v21);
  swift_task_dealloc(*(void *)(v0 + 224));
  return sub_10000DCA4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10000C28C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v45[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_10000D33C(&qword_1001C8BE8);
  uint64_t v51 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v7,  &protocol witness table for String);
  char v50 = 0;
  swift_beginAccess(a1 + 24, v49, 0LL, 0LL);
  uint64_t v8 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain(a2);
  swift_retain(a1);
  uint64_t v9 = swift_bridgeObjectRetain(v8);
  sub_10000A9D8(v9, a2, &v51, a1);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = swift_bridgeObjectRetain(a2);
  sub_10000C704(v10, (uint64_t (*)(void))sub_10000D678);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease(a2);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain(v12);
    uint64_t v14 = (uint64_t *)(v12 + 40);
    do
    {
      uint64_t v15 = *v14;
      id v16 = (id)*(v14 - 1);
      sub_10000C8D4(v16, v15, (uint64_t)&v51, &v50);

      v14 += 2;
      --v13;
    }

    while (v13);
    swift_bridgeObjectRelease_n(v12, 2LL);
    char v17 = v50;
  }

  else
  {
    swift_bridgeObjectRelease(v12);
    char v17 = 0;
  }

  uint64_t v18 = v51;
  swift_retain(a1);
  uint64_t v19 = swift_bridgeObjectRetain(v18);
  sub_10000AD30(v19, a1);
  swift_bridgeObjectRelease(v18);
  if ((v17 & 1) != 0)
  {
    sub_10000CEB8(0LL);
    uint64_t v21 = v20;
    swift_retain(a1);
    sub_100052990();
    swift_release(a1);
    swift_release(v21);
  }

  if (!*(void *)(v18 + 16))
  {
    uint64_t v22 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v23 = type metadata accessor for LogMessage(0LL);
    uint64_t v24 = swift_allocObject( v22,  ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v23 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v24 + 16) = xmmword_100164230;
    uint64_t v48 = type metadata accessor for AccountsObserver();
    v47[0] = a1;
    uint64_t v25 = swift_retain(a1);
    id v26 = (id)AMSLogKey(v25);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      uint64_t v30 = v29;

      swift_bridgeObjectRetain(v30);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v31._countAndFlagsBits = 0LL;
      v31._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      uint64_t v32 = v48;
      uint64_t v33 = sub_10000D37C(v47, v48);
      uint64_t DynamicType = swift_getDynamicType(v33, v32, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v45[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
      sub_10000DA68((uint64_t)v45, &qword_1001CAAD0);
      v35._countAndFlagsBits = 5972026LL;
      v35._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t MetatypeMetadata = &type metadata for String;
      v45[0] = v28;
      v45[1] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
      sub_10000DA68((uint64_t)v45, &qword_1001CAAD0);
      v36._countAndFlagsBits = 93LL;
      v36._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)(v6);
      swift_bridgeObjectRelease(v30);
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v37._countAndFlagsBits = 0LL;
      v37._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      uint64_t v38 = v48;
      uint64_t v39 = sub_10000D37C(v47, v48);
      uint64_t v40 = swift_getDynamicType(v39, v38, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      v45[0] = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
      sub_10000DA68((uint64_t)v45, &qword_1001CAAD0);
      v41._countAndFlagsBits = 58LL;
      v41._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      LogMessage.init(stringInterpolation:)(v6);
    }

    sub_10000D3A0(v47);
    LogMessage.init(stringLiteral:)(0xD00000000000001ELL);
    if (qword_1001C7F80 != -1) {
      swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v42 = static os_log_type_t.default.getter();
    sub_1000BD1B0(v42, v24);
    swift_bridgeObjectRelease(v24);
    uint64_t v18 = v51;
  }

  return swift_bridgeObjectRelease(v18);
}

id sub_10000C6D4(void *a1)
{
  id v1 = a1;
  sub_10000BA7C(v1);
  return v1;
}

void sub_10000C704(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100016EFC();
    uint64_t v4 = sub_10000D738(a1);
    if ((v4 & 0x8000000000000000LL) == 0)
    {
      unint64_t v6 = v4;
      if (v4 < 1LL << *(_BYTE *)(a1 + 32))
      {
        uint64_t v7 = a1 + 64;
        uint64_t v16 = a1 + 64;
        while ((*(void *)(v7 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
        {
          if (v5 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v18 = v2;
          int v19 = v5;
          id v8 = *(id *)(*(void *)(a1 + 56) + 8 * v6);
          uint64_t v9 = a2();
          uint64_t v11 = v10;

          unint64_t v12 = _swiftEmptyArrayStorage[2];
          if (v12 >= _swiftEmptyArrayStorage[3] >> 1) {
            sub_100016EFC();
          }
          _swiftEmptyArrayStorage[2] = v12 + 1;
          uint64_t v13 = (char *)&_swiftEmptyArrayStorage[2 * v12];
          *((void *)v13 + 4) = v9;
          *((void *)v13 + 5) = v11;
          uint64_t v14 = -1LL << *(_BYTE *)(a1 + 32);
          uint64_t v7 = a1 + 64;
          if ((*(void *)(v16 + 8 * (v6 >> 6)) & (1LL << v6)) == 0) {
            goto LABEL_20;
          }
          if (v19 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v15 = _HashTable.occupiedBucket(after:)(v6, v16, ~v14);
          uint64_t v2 = v18 - 1;
          if (v18 == 1) {
            return;
          }
          unint64_t v6 = v15;
          if ((v15 & 0x8000000000000000LL) == 0)
          {
            int v5 = *(_DWORD *)(a1 + 36);
            if (v15 < 1LL << *(_BYTE *)(a1 + 32)) {
              continue;
            }
          }

          goto LABEL_22;
        }

        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }

LABEL_22:
    __break(1u);
  }

    uint64_t v7 = (v13 - 1) & v13;
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

    uint64_t v38 = (v14 - 1) & v14;
    uint64_t v39 = v15;
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

    uint64_t v7 = (v13 - 1) & v13;
    uint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    unint64_t v6 = v14;
LABEL_23:
    sub_10002C644(*(void *)(v5 + 48) + 40 * v11, (uint64_t)&v65);
    uint64_t v60 = v65;
    uint64_t v61 = v66;
    uint64_t v62 = v67;
    sub_10002C644((uint64_t)&v60, (uint64_t)v58);
    if ((sub_100010BA4( (uint64_t)&v54,  (uint64_t)v58,  (uint64_t)&type metadata for AnyHashable,  (uint64_t)&type metadata for String) & 1) == 0)
    {
      uint64_t v54 = 0LL;
      uint64_t v55 = 0LL;
    }

    sub_10000E854((uint64_t)&v60);
    uint64_t v20 = v55;
    if (v55)
    {
      uint64_t v21 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      {
        sub_1000DDDF4();
        uint64_t v9 = v24;
      }

      uint64_t v22 = v9[2];
      if (v22 >= v9[3] >> 1)
      {
        sub_1000DDDF4();
        uint64_t v9 = v25;
      }

      v9[2] = v22 + 1;
      uint64_t v23 = &v9[2 * v22];
      v23[4] = v21;
      v23[5] = v20;
    }
  }

  int v19 = v6 + 7;
  while (v19 < v8)
  {
    uint64_t v13 = *(void *)(v52 + 8 * v19++);
    if (v13)
    {
      uint64_t v14 = v19 - 1;
      goto LABEL_22;
    }
  }

      uint64_t v7 = (v13 - 1) & v13;
      uint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      uint64_t v9 = v14;
    }

    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    uint64_t v24 = v23[1];
    uint64_t v25 = *v23 == v18 && v24 == v17;
    if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v23, v24, v18, v17, 0LL) & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      unint64_t v43 = a1;
      id v44 = v41;
      int64_t v45 = v39;
      uint64_t v46 = v9;
      uint64_t v47 = v7;
    }

    else
    {
      id v26 = ~v20;
      do
      {
        uint64_t v21 = (v21 + 1) & v26;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0) {
          goto LABEL_37;
        }
        uint64_t v27 = (void *)(v22 + 16 * v21);
        uint64_t v28 = v27[1];
        uint64_t v29 = *v27 == v18 && v28 == v17;
      }

      while (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v27, v28, v18, v17, 0LL) & 1) == 0);
      unint64_t v43 = a1;
      id v44 = v41;
      int64_t v45 = v39;
      uint64_t v46 = v9;
      uint64_t v47 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }

    Swift::String v31 = *(_BYTE *)(v2 + 32);
    uint64_t v32 = v31 & 0x3F;
    uint64_t v33 = (1LL << v31) + 63;
    uint64_t v34 = v33 >> 6;
    Swift::String v35 = 8 * (v33 >> 6);
    if (v32 < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v33 >> 6), 8LL), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0LL), (const void *)(v2 + 56), v35);
      Swift::String v36 = sub_1000DFC58((unint64_t *)((char *)&v39 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v34, v2, v21, &v43);
      swift_release(v2);
      sub_10004844C(v43);
    }

    else
    {
      Swift::String v37 = (void *)swift_slowAlloc(v35, -1LL);
      memcpy(v37, (const void *)(v2 + 56), v35);
      Swift::String v36 = sub_1000DFC58((unint64_t *)v37, v34, v2, v21, &v43);
      swift_release(v2);
      sub_10004844C(v43);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    return v36;
  }

  else
  {
    swift_release(a2);
    return (unint64_t *)&_swiftEmptySetSingleton;
  }

    unint64_t v6 = (v10 - 1) & v10;
    id v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int v5 = v11;
  }

  uint64_t v15 = v5 + 6;
  while (v15 < v42)
  {
    uint64_t v10 = *(void *)(v43 + 8 * v15++);
    if (v10)
    {
      uint64_t v11 = v15 - 1;
      goto LABEL_22;
    }
  }

    __break(1u);
  }

    __break(1u);
  }

  if (v91)
  {
    uint64_t v52 = (void *)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
    uint64_t v53 = Dictionary._bridgeToObjectiveC()().super.isa;
    *(void *)&v105 = 0LL;
    uint64_t v29 = [v52 dataWithJSONObject:v53 options:0 error:&v105];

    uint64_t v54 = (id)v105;
    if (!v29)
    {
      uint64_t v60 = v54;
      unint64_t v43 = _convertNSErrorToError(_:)(v54);

      swift_willThrow(v61);
      sub_10000DE74();
      goto LABEL_28;
    }

    static Data._unconditionallyBridgeFromObjectiveC(_:)(v29);
    sub_100131CFC();
    uint64_t v55 = type metadata accessor for JSONDecoder(0LL);
    sub_100029350(v55);
    JSONDecoder.init()();
    uint64_t v56 = sub_1000285DC();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&unk_1001A8FF8, a2, v5, &unk_1001A8FF8, v56);
    if (v33)
    {
      unint64_t v43 = v33;
      sub_100131CF0();
      sub_10000DE74();
      sub_1000292C4();
LABEL_28:
      uint64_t v62 = swift_allocObject(v90, v88, v87);
      *(_OWORD *)(v62 + 16) = v86;
      v107 = (void *)v85;
      uint64_t v63 = sub_100131CD8();
      v64 = (id)AMSLogKey(v63);
      if (v64)
      {
        v65 = sub_100048C54((uint64_t)v64);
        uint64_t v67 = v66;

        swift_bridgeObjectRetain(v67);
        sub_100131CC8();
        sub_10001A224();
        sub_100131C6C();
        v68 = sub_1000258E8();
        sub_100131C90(v68);
        sub_100131CA0();
        sub_10000DC14();
        v102 = &type metadata for String;
        v100 = (void *)v65;
        v101 = v67;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v100);
        sub_100131CA0();
        sub_10000DC4C(93LL);
        sub_10001A410();
        swift_bridgeObjectRelease();
      }

      else
      {
        sub_10001A21C(1LL);
        sub_10001A224();
        sub_100131C6C();
        v69 = sub_1000258E8();
        sub_100131C90(v69);
        sub_1000102E0((uint64_t)&v100, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_10001A410();
      }

      sub_10000D3A0(&v105);
      sub_10001A21C(12LL);
      v70._countAndFlagsBits = 0x6C696166202E2E2ELL;
      v70._object = (void *)0xEC000000203A6465LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      swift_getErrorValue(v43, v99, &v97);
      v71 = v97;
      v72 = v98;
      v107 = v98;
      v73 = sub_10000D63C(&v105);
      (*(void (**)(void *, uint64_t, void *))(*(v72 - 1) + 16LL))(v73, v71, v72);
      v74 = LogMessage.StringInterpolation.appendInterpolation(safe:)(&v105);
      sub_10008E49C(v74, &qword_1001CAAD0);
      v75._countAndFlagsBits = 0LL;
      v75._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v75);
      v76 = sub_10001A410();
      v77 = static os_log_type_t.error.getter(v76);
      sub_1000BD1B0(v77, v62);
      sub_1000090CC();
      swift_errorRelease(v43);
      return sub_10000D3A0(v104);
    }

    sub_100131CF0();
    sub_1000292C4();
    uint64_t v59 = v105;
    uint64_t v57 = *((void *)&v105 + 1);
    uint64_t v58 = v106;
  }

  else
  {
    uint64_t v57 = 0LL;
    uint64_t v58 = 0;
    uint64_t v59 = 2LL;
  }

  v78 = [(id)objc_opt_self(AMSDevice) buildVersion];
  v79 = sub_100048C54((uint64_t)v78);
  v81 = v80;

  *(void *)&v105 = v30;
  *((void *)&v105 + 1) = v59;
  v106 = v57;
  LOBYTE(v107) = v58;
  v108 = v79;
  v109 = v81;
  v82 = v84;
  v110 = v84;
  sub_10000D37C(v104, v104[3]);
  swift_bridgeObjectRetain(v82);
  sub_1000272A8((uint64_t *)&v105, v92);
  swift_bridgeObjectRelease();
  sub_1000090CC();
  sub_10000DE74();
  return sub_10000D3A0(v104);
}

    uint64_t v13 = (v20 - 1) & v20;
  }

  uint64_t v21 = v19 + 3;
  if (v21 < v34)
  {
    uint64_t v20 = v35[v21];
    if (!v20)
    {
      while (1)
      {
        uint64_t v16 = v21 + 1;
        if (__OFADD__(v21, 1LL)) {
          goto LABEL_41;
        }
        if (v16 >= v34) {
          goto LABEL_34;
        }
        uint64_t v20 = v35[v16];
        ++v21;
        if (v20) {
          goto LABEL_22;
        }
      }
    }

    uint64_t v16 = v21;
    goto LABEL_22;
  }

  uint64_t v23 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1LL << a3;
  uint64_t v24 = (uint64_t *)(*(void *)(v23 + 48) + 16 * a3);
  *uint64_t v24 = v8;
  v24[1] = a2;
  uint64_t v25 = *(void *)(v23 + 16);
  id v26 = __OFADD__(v25, 1LL);
  uint64_t v27 = v25 + 1;
  if (v26) {
    __break(1u);
  }
  else {
    *(void *)(v23 + 16) = v27;
  }
  return result;
}

    uint64_t v13 = (v20 - 1) & v20;
  }

  uint64_t v21 = v19 + 3;
  if (v21 >= v34)
  {
LABEL_34:
    uint64_t result = swift_release_n(v7, 2LL);
    uint64_t v2 = v32;
    goto LABEL_36;
  }

  uint64_t v20 = *(void *)(v33 + 8 * v21);
  if (v20)
  {
    uint64_t v16 = v21;
    goto LABEL_22;
  }

  while (1)
  {
    uint64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1LL)) {
      break;
    }
    if (v16 >= v34) {
      goto LABEL_34;
    }
    uint64_t v20 = *(void *)(v33 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }

              swift_release(v5);
              return 0LL;
            }
          }
        }
      }
    }

void sub_10000C8D4(void *a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  if (a2)
  {
    char v5 = a2;
    uint64_t v7 = sub_10000D6DC(a1, (SEL *)&selRef_identifier);
    if (v8)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v8;
      id v11 = objc_msgSend(a1, "ams_DSID");
      if (v11)
      {
        uint64_t v12 = (uint64_t)v11;
        id v13 = v11;
        sub_100033F88(v12, v9, v10, v14, v15, v16, v17, v18, v19, v20);
        swift_bridgeObjectRelease(v10);

        if ((v5 & 1) == 0)
        {
LABEL_6:
          sub_100009FF8(a1);
          return;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v10);
        *a4 = 1;
        if ((v5 & 1) == 0) {
          goto LABEL_6;
        }
      }

      sub_10000C9A8(a1);
      goto LABEL_6;
    }
  }

void sub_10000C9A8(void *a1)
{
  if (objc_msgSend(a1, "ams_isiTunesAccount"))
  {
    if (qword_1001C7F20 != -1) {
      swift_once(&qword_1001C7F20, sub_10001DBA4);
    }
    uint64_t v2 = *(void **)(qword_1001DBAC0 + 16);
    uint64_t v3 = sub_10000DDDC((uint64_t)&unk_1001A8138, 24LL);
    *(void *)(v3 + 16) = a1;
    v8[4] = sub_10000D6BC;
    uint64_t v9 = v3;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256LL;
    v8[2] = sub_100116CD8;
    v8[3] = &unk_1001A8150;
    uint64_t v4 = _Block_copy(v8);
    uint64_t v5 = v9;
    id v6 = v2;
    id v7 = a1;
    swift_release(v5);
    [v6 setUpCacheForAccount:v7 completion:v4];
    _Block_release(v4);
  }

void sub_10000CAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = v7 & ~v6;
  uint64_t v9 = v6 | 7;
  if (a2)
  {
    uint64_t v10 = (__n128 *)swift_allocObject(v2, v8 + 3 * v3, v9);
    uint64_t v11 = sub_10000DF50(v10, (__n128)xmmword_100164240);
    uint64_t v12 = sub_10000DE54(v11);
    id v13 = (id)AMSLogKey(v12);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      uint64_t v17 = v16;

      sub_10000DEB4();
      sub_10000DC34();
      sub_10000DC08();
      uint64_t v18 = v49;
      uint64_t v19 = sub_10000D37C(v48, v49);
      uint64_t v20 = sub_10000DC54((uint64_t)v19, v18);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v45 = v20;
      sub_10000DCE8();
      sub_10000DD40((uint64_t)&v45);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v45 = v15;
      uint64_t v46 = v17;
      sub_10000DCE8();
      sub_10000DD40((uint64_t)&v45);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DDF8();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      uint64_t v30 = v49;
      Swift::String v31 = sub_10000D37C(v48, v49);
      sub_10000DC54((uint64_t)v31, v30);
      uint64_t MetatypeMetadata = (void *)sub_10000DF48();
      uint64_t v45 = v30;
      uint64_t v32 = sub_10000DCE8();
      sub_10000DF18(v32, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000DF34();
    sub_10000E008();
    sub_10000DD38(33LL);
    swift_getErrorValue(a2, v44, &v42);
    uint64_t v33 = v42;
    uint64_t v34 = v43;
    uint64_t v49 = v43;
    Swift::String v35 = sub_10000D63C(v48);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16LL))(v35, v33, v34);
    static LogMessage.safe(_:)(v48);
    sub_10000DA68((uint64_t)v48, &qword_1001CAAD0);
    if (qword_1001C7F80 != -1) {
      swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v36 = static os_log_type_t.error.getter();
  }

  else
  {
    *(_OWORD *)(swift_allocObject(v2, v8 + 2 * v3, v9) + 16) = xmmword_100164230;
    uint64_t v21 = type metadata accessor for AccountsObserver();
    uint64_t v22 = sub_10000DE54(v21);
    id v23 = (id)AMSLogKey(v22);
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      uint64_t v27 = v26;

      sub_10000DF10();
      sub_10000DC34();
      sub_10000DC08();
      uint64_t v28 = v49;
      uint64_t v29 = sub_10000D37C(v48, v49);
      sub_10000DC54((uint64_t)v29, v28);
      uint64_t MetatypeMetadata = (void *)sub_10000DDAC();
      uint64_t v45 = v28;
      sub_10000DCE8();
      sub_10000DD04((uint64_t)&v45);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v45 = v25;
      uint64_t v46 = v27;
      sub_10000DCE8();
      sub_10000DD04((uint64_t)&v45);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DE2C();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      uint64_t v37 = v49;
      uint64_t v38 = sub_10000D37C(v48, v49);
      uint64_t v39 = sub_10000DC54((uint64_t)v38, v37);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      uint64_t v45 = v39;
      uint64_t v40 = sub_10000DCE8();
      sub_10000DF18(v40, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000DF34();
    sub_10000E008();
    LogMessage.init(stringLiteral:)(v41);
    if (qword_1001C7F80 != -1) {
      swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v36 = static os_log_type_t.default.getter();
  }

  sub_10000DE24(v36);
  sub_100009020();
  sub_10000DE10();
}

uint64_t sub_10000CE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRelease(a3);
}

void sub_10000CEB8(void *a1)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v5 = type metadata accessor for LogMessage(0LL);
  uint64_t v6 = swift_allocObject( v4,  ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL))
       + 2LL * *(void *)(*(void *)(v5 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v6 + 16) = xmmword_100164230;
  uint64_t v31 = type metadata accessor for AccountsObserver();
  v30[0] = v1;
  uint64_t v7 = sub_10000DFF4();
  id v8 = (id)AMSLogKey(v7);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    uint64_t v12 = v11;

    sub_10000DD9C();
    sub_10000DC34();
    sub_10000DC08();
    uint64_t v13 = v31;
    uint64_t v14 = sub_10000D37C(v30, v31);
    sub_10000DC54((uint64_t)v14, v13);
    swift_getMetatypeMetadata();
    sub_10000DEA4();
    sub_10000DFBC();
    sub_10000DC14();
    uint64_t v29 = &type metadata for String;
    v28[0] = v10;
    v28[1] = v12;
    sub_10000DEA4();
    sub_10000DFBC();
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DCFC();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    uint64_t v15 = v31;
    uint64_t v16 = sub_10000D37C(v30, v31);
    sub_10000DC54((uint64_t)v16, v15);
    uint64_t v29 = (void *)sub_10000DDAC();
    v28[0] = v15;
    sub_10000DEA4();
    sub_10000DA68((uint64_t)v28, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(v30);
  sub_10000E008();
  sub_10000DD38(38LL);
  if (qword_1001C7F80 != -1) {
    swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_1000BD1B0(v17, v6);
  sub_10000DE2C();
  uint64_t v18 = sub_10000D33C(&qword_1001C8BC0);
  uint64_t inited = swift_initStackObject(v18, v27);
  *(_OWORD *)(inited + 16) = xmmword_100164230;
  *(void *)(inited + 32) = 0x707954746E657665LL;
  *(void *)(inited + 40) = 0xE900000000000065LL;
  strcpy((char *)(inited + 48), "AccountChanged");
  *(_BYTE *)(inited + 63) = -18;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x656372756F73LL;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 88) = 0xE600000000000000LL;
  strcpy((char *)(inited + 96), "amsengagementd");
  *(_BYTE *)(inited + 111) = -18;
  uint64_t v20 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  v28[0] = v20;
  if (a1)
  {
    uint64_t v31 = sub_10000DE08(v20, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
    v30[0] = a1;
    id v21 = a1;
    sub_100030118((uint64_t)v30, 1684632420LL, 0xE400000000000000LL);
  }

  uint64_t v22 = sub_10000D33C(&qword_1001C8BC8);
  sub_10000DE08(v22, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
  id v23 = sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
  id v24 = [objc_allocWithZone(AMSEngagement) initWithBag:v23];

  sub_100054044(v28[0]);
  sub_100009070();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  sub_10000DDF8();
  id v26 = [v24 enqueueData:isa];

  Promise<A>.init(_:)(v26);
  sub_10000DD84();
}

uint64_t sub_10000D2A0()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 64));

  swift_bridgeObjectRelease(*(void *)(v0 + 80));
  return v0;
}

uint64_t sub_10000D2FC()
{
  return swift_deallocClassInstance(v0, 88LL, 7LL);
}

uint64_t type metadata accessor for AccountsObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd16AccountsObserver);
}

uint64_t sub_10000D33C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

void *sub_10000D37C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t sub_10000D3A0(void *a1)
{
  uint64_t v1 = *(void *)(a1[3] - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release(*a1);
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10000D3C0(char a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v7 = type metadata accessor for LogMessage(0LL);
  uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
       + 5LL * *(void *)(*(void *)(v7 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v8 + 16) = xmmword_100164250;
  LogMessage.init(stringLiteral:)(0xD000000000000018LL);
  id v9 = objc_msgSend(a3, "ams_DSID");
  if (v9)
  {
    id v10 = v9;
    *((void *)&v20 + 1) = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
    *(void *)&__int128 v19 = v10;
  }

  else
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
  }

  static LogMessage.sensitive(_:)(&v19);
  sub_10000DA68((uint64_t)&v19, &qword_1001CAAD0);
  LogMessage.init(stringLiteral:)(8250LL);
  *((void *)&v20 + 1) = &type metadata for Bool;
  LOBYTE(v19) = a1 & 1;
  static LogMessage.safe(_:)(&v19);
  sub_10000DA68((uint64_t)&v19, &qword_1001CAAD0);
  if (a2)
  {
    swift_getErrorValue(a2, v18, &v16);
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    *((void *)&v20 + 1) = v17;
    uint64_t v13 = sub_10000D63C(&v19);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16LL))(v13, v11, v12);
  }

  else
  {
    __int128 v19 = 0u;
    __int128 v20 = 0u;
  }

  static LogMessage.safe(_:)(&v19);
  sub_10000DA68((uint64_t)&v19, &qword_1001CAAD0);
  if (qword_1001C7F80 != -1) {
    swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_1000BD1B0(v14, v8);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_10000D5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56LL))();
}

uint64_t sub_10000D5CC()
{
  return sub_10000D940(48LL);
}

uint64_t sub_10000D5D4()
{
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc(dword_1001C8BDC);
  *(void *)(v1 + 16) = v4;
  uint64_t v5 = sub_10000DEE8(v4);
  return sub_10000BF4C(v5, v6, v7, v3, v2);
}

void *sub_10000D63C(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

id sub_10000D678(void *a1)
{
  return sub_10000C6D4(a1);
}

void sub_10000D680(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10000D698()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10000D6BC(char a1, uint64_t a2)
{
  return sub_10000D3C0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10000D6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10000D6D4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10000D6DC(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v4;
}

uint64_t sub_10000D738(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  uint64_t v2 = 64LL;
  for (uint64_t i = 10LL; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64LL;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_10000D7B8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(void *)(a1 - 8) + 82LL) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_10000D7D0()
{
  unint64_t result = qword_1001CACE0;
  if (!qword_1001CACE0)
  {
    uint64_t v1 = sub_10000DAA0(255LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1001CACE0);
  }

  return result;
}

uint64_t sub_10000D820(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2( 255LL,  (char *)a1 + (int)result,  -(result >> 32),  0LL,  0LL);
    *a1 = result;
  }

  return result;
}

uint64_t sub_10000D864()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10000D888(uint64_t a1)
{
  return sub_10000B7A4(a1, v1);
}

void sub_10000D890(unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = sub_10000D820(a2);
    atomic_store(sub_10000DFD4(v3), a1);
  }

  sub_100009044();
}

uint64_t *sub_10000D8C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    uint64_t v4 = swift_slowAlloc(*(void *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }

  return a2;
}

void sub_10000D904(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  if (!*a1)
  {
    uint64_t v3 = a2(255LL);
    atomic_store(sub_10000DFD4(v3), a1);
  }

  sub_100009044();
}

uint64_t sub_10000D938()
{
  return sub_10000D940(40LL);
}

uint64_t sub_10000D940(uint64_t a1)
{
  return swift_deallocObject(v1, a1, 7LL);
}

uint64_t sub_10000D978()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc(dword_1001C8C4C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  uint64_t v4 = sub_10000DEE8(v3);
  return sub_10000A490(v4, v5, v6, v2);
}

uint64_t sub_10000D9D4()
{
  uint64_t v4 = *v0;
  uint64_t v1 = *(void *)(v4 + 16);
  uint64_t v2 = *v0;
  uint64_t v4 = v2;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10000DA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_10000DA58(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_10000DA68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000D33C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  sub_100009044();
}

uint64_t sub_10000DAA0(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

ValueMetadata *type metadata accessor for AccountsObserver.AccountChangeType()
{
  return &type metadata for AccountsObserver.AccountChangeType;
}

unint64_t sub_10000DAEC()
{
  unint64_t result = qword_1001C8C88;
  if (!qword_1001C8C88)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164334, &type metadata for AccountsObserver.AccountChangeType);
    atomic_store(result, (unint64_t *)&qword_1001C8C88);
  }

  return result;
}

unint64_t sub_10000DB2C()
{
  unint64_t result = qword_1001C8C90;
  if (!qword_1001C8C90)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164304, &type metadata for AccountsObserver.AccountChangeType);
    atomic_store(result, (unint64_t *)&qword_1001C8C90);
  }

  return result;
}

unint64_t sub_10000DB6C()
{
  unint64_t result = qword_1001C8C98;
  if (!qword_1001C8C98)
  {
    unint64_t result = swift_getWitnessTable(&unk_10016435C, &type metadata for AccountsObserver.AccountChangeType);
    atomic_store(result, (unint64_t *)&qword_1001C8C98);
  }

  return result;
}

unint64_t sub_10000DBAC()
{
  unint64_t result = qword_1001C8CA0;
  if (!qword_1001C8CA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164394, &type metadata for AccountsObserver.AccountChangeType);
    atomic_store(result, (unint64_t *)&qword_1001C8CA0);
  }

  return result;
}

uint64_t sub_10000DBEC(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(v2, a2, 33LL, 0LL);
}

uint64_t sub_10000DBFC(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 33LL, 0LL);
}

void sub_10000DC08()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

void sub_10000DC14()
{
  v0._countAndFlagsBits = 5972026LL;
  v0._object = (void *)0xE300000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_10000DC24()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_10000DC34()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
}

uint64_t sub_10000DC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_beginAccess(a1, a2, a3, 0LL);
}

void sub_10000DC4C(uint64_t a1)
{
  unint64_t v1 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

uint64_t sub_10000DC54(uint64_t a1, uint64_t a2)
{
  return swift_getDynamicType(a1, a2, 1LL);
}

uint64_t sub_10000DC5C()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10000DC98()
{
  return type metadata accessor for LogMessage(0LL);
}

uint64_t sub_10000DCA4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10000DCC0(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + 3LL * *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t sub_10000DCE8()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 128);
}

uint64_t sub_10000DCF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return swift_allocObject(v2, a1, a2 | 7);
}

uint64_t sub_10000DCFC()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_10000DD04(uint64_t a1)
{
}

uint64_t sub_10000DD0C(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  return swift_retain(v1);
}

void sub_10000DD2C()
{
}

uint64_t sub_10000DD38(uint64_t a1)
{
  return LogMessage.init(stringLiteral:)(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL);
}

void sub_10000DD40(uint64_t a1)
{
}

uint64_t sub_10000DD48()
{
  return ((uint64_t (*)(void))swift_task_switch)();
}

uint64_t sub_10000DD54()
{
  return swift_endAccess(v0 - 96);
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10000DD9C()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10000DDA4(uint64_t a1, ...)
{
  return swift_endAccess(va);
}

uint64_t sub_10000DDAC()
{
  return swift_getMetatypeMetadata();
}

uint64_t sub_10000DDB4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v1, v2);
}

uint64_t sub_10000DDC8()
{
  return sub_10000D5C0(v1, 1LL, 1LL, v0);
}

uint64_t sub_10000DDDC(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, 7LL);
}

uint64_t sub_10000DDE4(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 144);
}

uint64_t sub_10000DDF8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10000DE00()
{
  return type metadata accessor for LogMessage.StringInterpolation(0LL);
}

uint64_t sub_10000DE08(uint64_t a1, unint64_t *a2, void *a3)
{
  return sub_10000DAA0(0LL, a2, a3);
}

  ;
}

uint64_t sub_10000DE24(uint64_t a1)
{
  return sub_1000BD1B0(a1, v1);
}

uint64_t sub_10000DE2C()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_10000DE34()
{
}

uint64_t sub_10000DE44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return swift_getErrorValue(v11, a10, a11);
}

uint64_t sub_10000DE54(uint64_t a1)
{
  *(void *)(v2 - 72) = a1;
  *(void *)(v2 - 96) = v1;
  return swift_retain(v1);
}

uint64_t sub_10000DE64@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 8) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v1);
}

uint64_t sub_10000DE74()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

  ;
}

uint64_t sub_10000DEA4()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 144);
}

uint64_t sub_10000DEAC()
{
  return swift_endAccess(v0 - 56);
}

uint64_t sub_10000DEB4()
{
  return swift_bridgeObjectRetain(v0);
}

void sub_10000DEBC()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_10000DECC()
{
  return v0;
}

uint64_t sub_10000DED8()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10000DEE0()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10000DEE8(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_10000DF00()
{
  return swift_isUniquelyReferenced_nonNull_native(v0);
}

uint64_t sub_10000DF08()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10000DF10()
{
  return swift_bridgeObjectRetain(v0);
}

void sub_10000DF18(uint64_t a1, uint64_t *a2)
{
}

void sub_10000DF20(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_10000DF34()
{
  return sub_10000D3A0((void *)(v0 - 96));
}

uint64_t sub_10000DF3C()
{
  return static LogMessage.safe(_:)(v0);
}

uint64_t sub_10000DF48()
{
  return swift_getMetatypeMetadata();
}

uint64_t sub_10000DF50(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for AccountsObserver();
}

  ;
}

uint64_t sub_10000DF68()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 152);
}

uint64_t sub_10000DF70(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v1);
}

unint64_t sub_10000DF7C()
{
  return sub_100030CCC(v1, v0);
}

uint64_t sub_10000DF88()
{
  return sub_100030D20(v0);
}

uint64_t sub_10000DF90()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10000DF9C()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10000DFA4()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_10000DFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D5C0(a1, 1LL, 1LL, a4);
}

void sub_10000DFBC()
{
}

uint64_t sub_10000DFC8()
{
  return v0;
}

uint64_t sub_10000DFD4(uint64_t a1)
{
  return swift_getWitnessTable(v1, a1);
}

void sub_10000DFE0()
{
}

  ;
}

uint64_t sub_10000DFF4()
{
  return swift_retain(v0);
}

id sub_10000DFFC@<X0>(uint64_t a1@<X8>)
{
  return [v1 *(SEL *)(a1 + 944)];
}

  ;
}

uint64_t sub_10000E014(uint64_t a1)
{
  return swift_bridgeObjectRelease_n(a1, 2LL);
}

id sub_10000E01C(uint64_t a1)
{
  id v2 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  id v3 = sub_10000E070(a1);

  return v3;
}

id sub_10000E070(uint64_t a1)
{
  id v2 = [objc_allocWithZone(NSNumber) initWithInteger:a1];
  id v3 = objc_msgSend(v1, "ams_iTunesAccountWithDSID:", v2);

  return v3;
}

id sub_10000E0D8()
{
  return objc_msgSend(v0, "ams_activeiTunesAccount");
}

id sub_10000E0FC()
{
  return sub_10000E0D8();
}

ValueMetadata *type metadata accessor for AMPAccountFinder()
{
  return &type metadata for AMPAccountFinder;
}

unint64_t sub_10000E12C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A6C20, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 8) {
    return 8LL;
  }
  else {
    return v3;
  }
}

void *sub_10000E174(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v20 = *(void *)(a1 + 16);
  if (!v20) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain(a1);
  for (uint64_t i = 0LL; i != v20; ++i)
  {
    uint64_t v6 = *(void *)(a1 + 8 * i + 32);
    v21._countAndFlagsBits = 0x6C436E6F69746361LL;
    v21._object = (void *)0xEB00000000737361LL;
    swift_bridgeObjectRetain(v6);
    AnyHashable.init<A>(_:)(&v21);
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_100030D24((uint64_t)v22), (v8 & 1) != 0))
    {
      sub_10000DA1C(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v24);
    }

    else
    {
      __int128 v24 = 0u;
      __int128 v25 = 0u;
    }

    sub_10000E854((uint64_t)v22);
    if (*((void *)&v25 + 1))
    {
      if ((swift_dynamicCast(&v21, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
      {
        id v9 = (char *)&loc_10000E318 + *((int *)qword_10000E7E0 + sub_10000E12C(v21));
        __asm { BR              X9 }
      }

      sub_10000DDF8();
    }

    else
    {
      sub_10000DDF8();
      sub_10000E8FC();
    }

    sub_10000D33C(&qword_1001C9C70);
    uint64_t v10 = sub_10000DC98();
    uint64_t v11 = sub_10000E8D8(v10);
    *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v23 = sub_10000D33C(&qword_1001C8D40);
    v22[0] = v1;
    id v12 = (id)AMSLogKey(v23);
    if (v12)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      sub_10000E9A8();
      swift_bridgeObjectRetain(v2);
      sub_10000E970();
      sub_10000E8C8();
      uint64_t v13 = sub_10000E918();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v13);
      sub_10000E904(MetatypeMetadata);
      sub_10000E8FC();
      sub_10000DC14();
      sub_10000E998((uint64_t)&type metadata for String);
      sub_10000E8FC();
      sub_10000DC4C(93LL);
      sub_10000E990();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10000E980();
      sub_10000E8C8();
      uint64_t v15 = sub_10000E93C();
      uint64_t v16 = swift_getMetatypeMetadata(v15);
      sub_10000E960(v16);
      sub_10000E8FC();
      sub_10000DC4C(58LL);
      sub_10000E990();
    }

    sub_10000D3A0(v22);
    uint64_t v17 = LogMessage.init(stringLiteral:)(0xD00000000000002ALL);
    if (qword_1001C7F80 != -1) {
      uint64_t v17 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v18 = static os_log_type_t.error.getter(v17);
    sub_1000BD1B0(v18, v11);
    sub_10000DDF8();
  }

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10000E824()
{
  return swift_deallocClassInstance(v0, 16LL, 7LL);
}

uint64_t type metadata accessor for ActionRunner()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd12ActionRunner);
}

uint64_t sub_10000E854(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000E888(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001CAAD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

void sub_10000E8C8()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_10000E8D8(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + 2LL * *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t sub_10000E8FC()
{
  return sub_10000E888(v0 - 128);
}

uint64_t sub_10000E904(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 128);
}

uint64_t sub_10000E918()
{
  uint64_t v1 = *(void *)(v0 - 144);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 168), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_10000E93C()
{
  uint64_t v1 = *(void *)(v0 - 144);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 168), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_10000E960(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 128);
}

uint64_t sub_10000E970()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
}

uint64_t sub_10000E980()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_10000E990()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_10000E998@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 104) = a1;
  *(void *)(v3 - 128) = v1;
  *(void *)(v3 - 120) = v2;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v3 - 128);
}

void sub_10000E9A8()
{
}

double sub_10000E9B4()
{
  uint64_t v1 = v0;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_10000DC8C();
  __chkstk_darwin(v2);
  sub_10000DE7C();
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
  id v3 = sub_100010500();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 doubleForKey:v4];

  id v6 = [v5 valuePromise];
  v36[0] = 0LL;
  id v7 = [v6 resultWithError:v36];

  id v8 = v36[0];
  if (v7)
  {
    id v9 = v36[0];
    [v7 doubleValue];
    double v11 = v10;
  }

  else
  {
    id v12 = v36[0];
    uint64_t v13 = _convertNSErrorToError(_:)(v8);

    swift_willThrow(v14);
    if (qword_1001C7F98 != -1) {
      swift_once(&qword_1001C7F98, sub_1000BD408);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v15 = *(void *)(*(void *)(sub_100010570() - 8) + 72LL);
    sub_100010678();
    uint64_t v18 = sub_10001059C((v17 & ~v16) + 3 * v15, v16);
    *(_OWORD *)(v18 + swift_weakDestroy(v0 + 16) = xmmword_100164240;
    uint64_t v37 = type metadata accessor for ActivityObserver();
    v36[0] = v1;
    uint64_t v19 = swift_retain(v1);
    id v20 = (id)AMSLogKey(v19);
    if (v20)
    {
      uint64_t v31 = sub_1000105E8((uint64_t)v20);
      uint64_t v22 = v21;

      swift_bridgeObjectRetain(v22);
      sub_100010564();
      sub_100010608();
      sub_1000104C0(v36);
      uint64_t v23 = sub_100010530();
      sub_1000105C0(v23);
      sub_10001069C();
      sub_10000DC14();
      v35[3] = &type metadata for String;
      v35[0] = v31;
      v35[1] = v22;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v35);
      sub_10001069C();
      sub_10000DC4C(93LL);
      sub_100010684();
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      sub_100010608();
      sub_1000104C0(v36);
      uint64_t v24 = sub_100010530();
      sub_1000105C0(v24);
      sub_1000102E0((uint64_t)v35, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_100010684();
    }

    sub_10000D3A0(v36);
    sub_1000105B4(0xD00000000000004BLL);
    swift_getErrorValue(v13, v34, &v32);
    uint64_t v25 = v32;
    uint64_t v26 = v33;
    uint64_t v37 = v33;
    uint64_t v27 = sub_10000D63C(v36);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16LL))(v27, v25, v26);
    static LogMessage.safe(_:)(v36);
    uint64_t v28 = sub_1000102E0((uint64_t)v36, &qword_1001CAAD0);
    uint64_t v29 = static os_log_type_t.debug.getter(v28);
    sub_1000BD1B0(v29, v18);

    swift_errorRelease(v13);
    swift_bridgeObjectRelease();
    return 900.0;
  }

  return v11;
}

uint64_t sub_10000ED48(uint64_t a1)
{
  id v2 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = sub_1000105D4();
  [v2 setValue:isa forKey:v4];

  uint64_t v5 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
}

uint64_t sub_10000EDF8()
{
  id v0 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v1 = sub_1000105D4();
  [v0 doubleForKey:v1];
  double v3 = v2;

  return Date.init(timeIntervalSince1970:)(v3);
}

void sub_10000EE80()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_10000DE7C();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_10000DE7C();
  uint64_t v10 = v9 - v8;
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  aBlock[4] = sub_100010488;
  aBlock[5] = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100021A3C;
  aBlock[3] = &unk_1001A83E8;
  double v11 = _Block_copy(aBlock);
  uint64_t v12 = swift_retain(v0);
  static DispatchQoS.unspecified.getter(v12);
  uint64_t v16 = _swiftEmptyArrayStorage;
  unint64_t v13 = sub_100010404();
  uint64_t v14 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
  unint64_t v15 = sub_100010444();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v14, v15, v1, v13);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v5, v11);
  _Block_release(v11);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  swift_release();
  sub_10000DD84();
}

uint64_t sub_10000F020()
{
  return sub_10000F8D4();
}

uint64_t sub_10000F048()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_1000105F0();
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  uint64_t v10 = qword_1001DBBB8;
  void *v0 = qword_1001DBBB8;
  sub_10001063C( enum case for DispatchPredicate.onQueue(_:),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 104));
  id v11 = (id)v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v0);
  uint64_t result = sub_100010630(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  if ((v10 & 1) != 0)
  {
    if (sub_10000E9B4() == 0.0)
    {
      return 0LL;
    }

    else
    {
      static Date.now.getter(v13);
      sub_10000EDF8();
      double v14 = Date.timeIntervalSince(_:)(v5);
      unint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
      v15(v5, v1);
      v15(v7, v1);
      return sub_10000E9B4() <= v14;
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_10000F1D8(char a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v74 = *(void *)(v5 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v6);
  sub_10000DE7C();
  uint64_t v73 = v8 - v7;
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v72 = v9;
  sub_10000DC8C();
  __chkstk_darwin(v10);
  sub_10000DE7C();
  uint64_t v13 = v12 - v11;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_10000DC8C();
  __chkstk_darwin(v14);
  sub_10000DE7C();
  unint64_t v15 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v16 = *(v15 - 1);
  __chkstk_darwin(v15);
  sub_1000105F0();
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  uint64_t v17 = (void *)qword_1001DBBB8;
  *uint64_t v2 = qword_1001DBBB8;
  sub_10001063C( enum case for DispatchPredicate.onQueue(_:),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 104));
  id v18 = v17;
  char v19 = _dispatchPreconditionTest(_:)(v2);
  sub_100010630(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }

  unint64_t v15 = v3;
  if ((sub_10000F048() & 1) != 0)
  {
    if ((a1 & 1) == 0)
    {
      uint64_t v70 = v5;
      if (qword_1001C7F98 != -1) {
        swift_once(&qword_1001C7F98, sub_1000BD408);
      }
      sub_10000D33C(&qword_1001C9C70);
      uint64_t v20 = *(void *)(*(void *)(sub_100010570() - 8) + 72LL);
      sub_100010678();
      uint64_t v23 = sub_10001059C((v22 & ~v21) + 2 * v20, v21);
      *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      uint64_t v24 = type metadata accessor for ActivityObserver();
      uint64_t v25 = sub_10001057C(v24);
      id v26 = (id)AMSLogKey(v25);
      if (v26)
      {
        uint64_t v69 = sub_1000105E8((uint64_t)v26);
        uint64_t v28 = v27;

        swift_bridgeObjectRetain(v28);
        sub_100010564();
        sub_1000104F0();
        sub_10001049C();
        uint64_t v29 = sub_100010530();
        sub_1000104DC(v29);
        sub_1000102E0((uint64_t)&v77, &qword_1001CAAD0);
        sub_10000DC14();
        v79 = &type metadata for String;
        v77 = (void *)v69;
        uint64_t v78 = v28;
        sub_10001065C();
        sub_1000102E0((uint64_t)&v77, &qword_1001CAAD0);
        sub_10000DC4C(93LL);
        sub_100010558();
        swift_bridgeObjectRelease();
      }

      else
      {
        sub_10001058C();
        sub_1000104F0();
        sub_10001049C();
        uint64_t v57 = sub_100010530();
        uint64_t v58 = sub_1000104DC(v57);
        sub_100010654(v58, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_100010558();
      }

      sub_100010670();
      uint64_t v59 = sub_1000105B4(0xD000000000000012LL);
      uint64_t v55 = static os_log_type_t.info.getter(v59);
      uint64_t v56 = v23;
      goto LABEL_22;
    }

LABEL_11:
    uint64_t v70 = v5;
    if (qword_1001C7F98 == -1)
    {
LABEL_12:
      sub_10000D33C(&qword_1001C9C70);
      uint64_t v30 = *(void *)(*(void *)(sub_100010570() - 8) + 72LL);
      sub_100010678();
      uint64_t v33 = sub_10001059C((v32 & ~v31) + 2 * v30, v31);
      *(_OWORD *)(v33 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      uint64_t v34 = type metadata accessor for ActivityObserver();
      uint64_t v35 = sub_10001057C(v34);
      id v36 = (id)AMSLogKey(v35);
      if (v36)
      {
        uint64_t v37 = sub_1000105E8((uint64_t)v36);
        uint64_t v39 = v38;

        swift_bridgeObjectRetain(v39);
        sub_100010564();
        sub_1000104F0();
        sub_10001049C();
        uint64_t v40 = sub_100010530();
        sub_1000104DC(v40);
        sub_100010664();
        sub_10000DC14();
        v79 = &type metadata for String;
        v77 = (void *)v37;
        uint64_t v78 = v39;
        sub_10001065C();
        sub_100010664();
        sub_10000DC4C(93LL);
        sub_100010558();
        swift_bridgeObjectRelease();
      }

      else
      {
        sub_10001058C();
        sub_1000104F0();
        sub_10001049C();
        uint64_t v52 = sub_100010530();
        uint64_t v53 = sub_1000104DC(v52);
        sub_100010654(v53, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_100010558();
      }

      sub_100010670();
      uint64_t v54 = LogMessage.init(stringLiteral:)(0xD000000000000010LL);
      uint64_t v55 = static os_log_type_t.info.getter(v54);
      uint64_t v56 = v33;
LABEL_22:
      sub_1000BD1B0(v55, v56);
      swift_bridgeObjectRelease();
      aBlock[4] = sub_1000103E4;
      v76 = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100021A3C;
      aBlock[3] = &unk_1001A83C0;
      uint64_t v60 = _Block_copy(aBlock);
      uint64_t v61 = swift_retain(v3);
      static DispatchQoS.unspecified.getter(v61);
      v77 = _swiftEmptyArrayStorage;
      unint64_t v62 = sub_100010404();
      uint64_t v63 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
      unint64_t v64 = sub_100010444();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v77, v63, v64, v70, v62);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v13, v73, v60);
      _Block_release(v60);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v70);
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v13, v72);
      swift_release(v76);
      goto LABEL_25;
    }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

      uint64_t v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10) {
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
      goto LABEL_5;
    }

    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v16 + v8, v9 - v8);
  }

  swift_bridgeObjectRelease(a3);
  return 0LL;
}

    uint64_t v34 = v138;
LABEL_12:
    if (v27 < v18)
    {
      if (__OFSUB__(v27, v19)) {
        goto LABEL_141;
      }
      if (v27 - v19 < v125)
      {
        if (__OFADD__(v19, v125)) {
          goto LABEL_143;
        }
        if (v19 + v125 >= v18) {
          uint64_t v35 = v18;
        }
        else {
          uint64_t v35 = v19 + v125;
        }
        if (v35 < v19) {
          goto LABEL_144;
        }
        if (v27 != v35)
        {
          v124 = v17;
          v128 = v2;
          v129 = v35;
          id v36 = *(void *)(v4 + 72);
          uint64_t v37 = v36 * (v27 - 1);
          v134 = v36;
          v141 = v27 * v36;
          do
          {
            uint64_t v38 = 0LL;
            uint64_t v39 = v19;
            v137 = v27;
            while (1)
            {
              uint64_t v40 = *v34;
              uint64_t v41 = v135;
              sub_1000D6C30(v141 + v38 + *v34, v135);
              uint64_t v42 = v37;
              uint64_t v43 = v37 + v38 + v40;
              uint64_t v44 = v136;
              sub_1000D6C30(v43, v136);
              LOBYTE(v40) = static Date.< infix(_:_:)(v41 + *(int *)(v139 + 48), v44 + *(int *)(v139 + 48));
              sub_1000102E0(v44, &qword_1001C8F20);
              sub_1000102E0(v41, &qword_1001C8F20);
              if ((v40 & 1) == 0) {
                break;
              }
              uint64_t v45 = *v34;
              if (!*v34) {
                goto LABEL_147;
              }
              uint64_t v46 = v45 + v141 + v38;
              uint64_t v37 = v42;
              id v47 = v45 + v42 + v38;
              sub_1000D6C78(v46, v140);
              uint64_t v48 = v137;
              swift_arrayInitWithTakeFrontToBack(v46, v47, 1LL, v139);
              sub_1000D6C78(v140, v47);
              v38 -= v134;
              ++v39;
              uint64_t v34 = v138;
              if (v48 == v39) {
                goto LABEL_28;
              }
            }

            uint64_t v48 = v137;
            uint64_t v37 = v42;
LABEL_28:
            uint64_t v27 = v48 + 1;
            v37 += v134;
            v141 += v134;
            char v19 = v131;
          }

          while (v27 != v129);
          uint64_t v27 = v129;
          uint64_t v2 = v128;
          uint64_t v17 = v124;
        }
      }
    }

    if (v27 < v19) {
      goto LABEL_140;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
    {
      sub_100065514(0, *((void *)v17 + 2) + 1LL, 1, v17);
      uint64_t v17 = v113;
    }

    uint64_t v50 = *((void *)v17 + 2);
    uint64_t v49 = *((void *)v17 + 3);
    uint64_t v51 = v50 + 1;
    uint64_t v52 = v2;
    if (v50 >= v49 >> 1)
    {
      sub_100065514(v49 > 1, v50 + 1, 1, v17);
      uint64_t v17 = v114;
    }

    *((void *)v17 + 2) = v51;
    uint64_t v53 = v17 + 32;
    uint64_t v54 = (uint64_t *)&v17[16 * v50 + 32];
    *uint64_t v54 = v19;
    v54[1] = v27;
    v137 = v27;
    if (v50) {
      break;
    }
    uint64_t v51 = 1LL;
LABEL_78:
    id v18 = v138[1];
    uint64_t v16 = v137;
    uint64_t v2 = v52;
    uint64_t v4 = v133;
    if (v137 >= v18) {
      goto LABEL_107;
    }
  }

  while (1)
  {
    uint64_t v55 = v51 - 1;
    if (v51 >= 4)
    {
      uint64_t v60 = &v53[2 * v51];
      uint64_t v61 = *(v60 - 8);
      unint64_t v62 = *(v60 - 7);
      uint64_t v66 = __OFSUB__(v62, v61);
      uint64_t v63 = v62 - v61;
      if (v66) {
        goto LABEL_125;
      }
      uint64_t v65 = *(v60 - 6);
      unint64_t v64 = *(v60 - 5);
      uint64_t v66 = __OFSUB__(v64, v65);
      uint64_t v58 = v64 - v65;
      uint64_t v59 = v66;
      if (v66) {
        goto LABEL_126;
      }
      uint64_t v67 = v51 - 2;
      uint64_t v68 = &v53[2 * v51 - 4];
      uint64_t v70 = *v68;
      uint64_t v69 = v68[1];
      uint64_t v66 = __OFSUB__(v69, v70);
      uint64_t v71 = v69 - v70;
      if (v66) {
        goto LABEL_127;
      }
      uint64_t v66 = __OFADD__(v58, v71);
      uint64_t v72 = v58 + v71;
      if (v66) {
        goto LABEL_129;
      }
      if (v72 >= v63)
      {
        v90 = &v53[2 * v55];
        v92 = *v90;
        v91 = v90[1];
        uint64_t v66 = __OFSUB__(v91, v92);
        v93 = v91 - v92;
        if (v66) {
          goto LABEL_135;
        }
        v83 = v58 < v93;
        goto LABEL_67;
      }
    }

    else
    {
      if (v51 != 3)
      {
        v84 = *((void *)v17 + 4);
        v85 = *((void *)v17 + 5);
        uint64_t v66 = __OFSUB__(v85, v84);
        v77 = v85 - v84;
        uint64_t v78 = v66;
        goto LABEL_61;
      }

      uint64_t v57 = *((void *)v17 + 4);
      uint64_t v56 = *((void *)v17 + 5);
      uint64_t v66 = __OFSUB__(v56, v57);
      uint64_t v58 = v56 - v57;
      uint64_t v59 = v66;
    }

    if ((v59 & 1) != 0) {
      goto LABEL_128;
    }
    uint64_t v67 = v51 - 2;
    uint64_t v73 = &v53[2 * v51 - 4];
    v75 = *v73;
    uint64_t v74 = v73[1];
    v76 = __OFSUB__(v74, v75);
    v77 = v74 - v75;
    uint64_t v78 = v76;
    if (v76) {
      goto LABEL_130;
    }
    v79 = &v53[2 * v55];
    v81 = *v79;
    v80 = v79[1];
    uint64_t v66 = __OFSUB__(v80, v81);
    v82 = v80 - v81;
    if (v66) {
      goto LABEL_132;
    }
    if (__OFADD__(v77, v82)) {
      goto LABEL_134;
    }
    if (v77 + v82 >= v58)
    {
      v83 = v58 < v82;
LABEL_67:
      if (v83) {
        uint64_t v55 = v67;
      }
      goto LABEL_69;
    }

    uint64_t v13 = *a2;
    uint64_t v14 = a2[2];
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v14;
    *(_OWORD *)a1 = v13;
    return a1;
  }

  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40)) {
      sub_10000D3A0((void *)(a1 + 16));
    }
    goto LABEL_11;
  }

  *(void *)a1 = *(void *)a2;
  uint64_t v5 = *((void *)a2 + 1);
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a1 + 16);
  uint64_t v8 = a2 + 1;
  uint64_t v9 = *((void *)a2 + 5);
  if (!*(void *)(a1 + 40))
  {
    if (v9)
    {
      *(void *)(a1 + 40) = v9;
      (**(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v9 - 8))(a1 + 16, (uint64_t)(a2 + 1), v9, v6);
      return a1;
    }

    goto LABEL_16;
  }

  if (!v9)
  {
    sub_10000D3A0((void *)(a1 + 16));
    goto LABEL_16;
  }

  sub_10003A0D0((void *)(a1 + 16), (void *)a2 + 2);
  return a1;
}

  sub_10002877C(v86, (uint64_t)v14);
  if (sub_1000102D4((uint64_t)v14, 1LL, v15) == 1)
  {
    sub_100019E6C((uint64_t)v14, &qword_1001CB180);
    if (qword_1001C7F90 != -1) {
      swift_once(&qword_1001C7F90, sub_1000BD3BC);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v37 = sub_10000DC98();
    uint64_t v38 = sub_10000DCF0( ((*(unsigned __int8 *)(*(void *)(v37 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v37 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v37 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v37 - 8) + 80LL));
    *(_OWORD *)(v38 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v39 = sub_1001256E8();
    uint64_t v40 = (id)AMSLogKey(v39);
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      uint64_t v44 = v43;

      swift_bridgeObjectRetain(v44);
      sub_10000DC34();
      sub_10000DC08();
      sub_10010A634();
      uint64_t v45 = sub_1000258E8();
      sub_1001256CC(v45);
      sub_1001256DC();
      sub_10000DC14();
      v94 = &type metadata for String;
      v92 = v42;
      v93 = v44;
      sub_10001065C();
      sub_1001256DC();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      sub_10010A634();
      unint64_t v62 = sub_1000258E8();
      uint64_t v63 = sub_1001256CC(v62);
      sub_10008BDD4(v63, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_100010670();
    unint64_t v64 = sub_1000105B4(0xD000000000000041LL);
    uint64_t v60 = static os_log_type_t.error.getter(v64);
    uint64_t v61 = v38;
    goto LABEL_24;
  }

  v85[0] = *(void *)(v87 + 32);
  ((void (*)(char *, char *, uint64_t))v85[0])(v22, v14, v15);
  if (qword_1001C7F90 != -1) {
    swift_once(&qword_1001C7F90, sub_1000BD3BC);
  }
  v85[2] = qword_1001DBB10;
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v46 = *(void *)(sub_10000DC98() - 8);
  id v47 = *(void *)(v46 + 72);
  uint64_t v48 = *(unsigned __int8 *)(v46 + 80);
  v85[1] = v47;
  uint64_t v49 = sub_10000DCF0(((v48 + 32) & ~v48) + 2 * v47, v48);
  *(_OWORD *)(v49 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v50 = sub_1001256E8();
  uint64_t v51 = (id)AMSLogKey(v50);
  if (v51)
  {
    uint64_t v52 = v51;
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    uint64_t v55 = v54;

    swift_bridgeObjectRetain(v55);
    sub_10000DC34();
    sub_10000DC08();
    sub_10010A634();
    uint64_t v56 = sub_1000258E8();
    sub_1001256CC(v56);
    sub_1001256DC();
    sub_10000DC14();
    v94 = &type metadata for String;
    v92 = v53;
    v93 = v55;
    unint64_t v15 = v88;
    sub_10001065C();
    sub_1001256DC();
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    sub_10010A634();
    uint64_t v68 = sub_1000258E8();
    uint64_t v69 = sub_1001256CC(v68);
    sub_10008BDD4(v69, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_100010670();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(26LL, 1LL);
  v70._object = (void *)0x8000000100177610LL;
  v70._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v70);
  sub_10002877C(v86, v11);
  if (sub_1000102D4(v11, 1LL, v15) == 1)
  {
    sub_100019E6C(v11, &qword_1001CB180);
    v89 = 0u;
    v90 = 0u;
  }

  else
  {
    *((void *)&v90 + 1) = v15;
    sub_1001256F8();
    ((void (*)(void))v85[0])();
  }

  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v89);
  sub_100019E6C((uint64_t)&v89, &qword_1001CAAD0);
  sub_10000DC08();
  uint64_t v71 = LogMessage.init(stringInterpolation:)(v6);
  uint64_t v72 = static os_log_type_t.info.getter(v71);
  sub_1000BD1B0(v72, v49);
  swift_bridgeObjectRelease();
  uint64_t v73 = sub_10000D33C((uint64_t *)&unk_1001CE720);
  uint64_t v67 = Promise.__allocating_init()(v73);
  sub_100123F94((uint64_t)v22);
  uint64_t v74 = type metadata accessor for SyncTaskScheduler(0LL);
  *((void *)&v90 + 1) = v74;
  v91 = &protocol witness table for SyncTaskScheduler;
  sub_1001256F8();
  SyncTaskScheduler.init()(v75);
  v76 = type metadata accessor for URLRequest(0LL);
  Promise.map<A>(on:_:)(&v89, sub_10012420C, 0LL, v76);
  swift_release();
  sub_100010670();
  *((void *)&v90 + 1) = v74;
  v91 = &protocol witness table for SyncTaskScheduler;
  sub_1001256F8();
  v77 = swift_retain(v1);
  SyncTaskScheduler.init()(v77);
  uint64_t v78 = sub_10000D33C((uint64_t *)&unk_1001CF2E0);
  sub_100125564();
  Promise.flatMap<A>(on:_:)(&v89, sub_100125560, v1, v78);
  swift_release();
  swift_release();
  sub_100010670();
  v79 = sub_1000671CC((uint64_t)&unk_1001B1CD0);
  *(void *)(v79 + swift_weakDestroy(v0 + 16) = v1;
  *(void *)(v79 + 24) = v67;
  v80 = sub_1000671CC((uint64_t)&unk_1001B1CF8);
  *(void *)(v80 + swift_weakDestroy(v0 + 16) = v67;
  *(void *)(v80 + 24) = v1;
  v81 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  swift_retain_n(v2, 2LL);
  v82 = swift_retain_n(v67, 2LL);
  v83 = static OS_dispatch_queue.main.getter(v82);
  *((void *)&v90 + 1) = v81;
  v91 = &protocol witness table for OS_dispatch_queue;
  *(void *)&v89 = v83;
  Promise.then(perform:orCatchError:on:)(sub_1001255AC, v79, sub_1001255B8, v80, &v89);
  swift_release();
  swift_release();
  swift_release();
  sub_100010670();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v22, v15);
  return v67;
}

  if (v2 <= 0xFFFFFFFFFFFFFFC0LL) {
    return 0LL;
  }
  return v5 << -(char)v2;
}

  uint64_t result = v124;
  uint64_t v24 = *(void *)(v124 + 16);
  if (v24)
  {
    uint64_t v25 = v124 + 32;
    swift_bridgeObjectRetain(v124);
    id v26 = 0LL;
    v107 = v24;
    v106 = v25;
    while (1)
    {
      v109 = v26;
      uint64_t v27 = (char *)(v25 + 96 * v26);
      uint64_t v29 = *((void *)v27 + 1);
      uint64_t v28 = *((void *)v27 + 2);
      uint64_t v30 = *((void *)v27 + 10);
      uint64_t v31 = *((void *)v27 + 11);
      uint64_t v32 = *((void *)v27 + 9);
      uint64_t v34 = *((void *)v27 + 3);
      uint64_t v33 = *((void *)v27 + 4);
      v147[0] = *v27;
      v132 = v28;
      v148 = v28;
      v149 = v34;
      v150 = v33;
      uint64_t v35 = *(_OWORD *)(v27 + 56);
      v151 = *(_OWORD *)(v27 + 40);
      v152 = v35;
      v153 = v32;
      v154 = v30;
      v155 = v31;
      id v36 = v151;
      uint64_t v37 = v35;
      swift_bridgeObjectRetain_n(v35, 2LL);
      swift_bridgeObjectRetain_n(v32, 2LL);
      swift_bridgeObjectRetain_n(v31, 2LL);
      swift_bridgeObjectRetain_n(v34, 2LL);
      swift_bridgeObjectRetain_n(v36, 2LL);
      swift_bridgeObjectRetain(v29);
      sub_10013C4D8((uint64_t)v147);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n(v31, 2LL);
        swift_bridgeObjectRelease_n(v32, 2LL);
        swift_bridgeObjectRelease_n(v37, 2LL);
        swift_bridgeObjectRelease_n(v36, 2LL);
        swift_bridgeObjectRelease_n(v34, 2LL);
        return swift_bridgeObjectRelease();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v110 = *(void *)(v29 + 16);
      if (v110) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_62:
      id v26 = v109 + 1;
      uint64_t v25 = v106;
      if (v109 + 1 == v107) {
        return swift_bridgeObjectRelease();
      }
    }

    uint64_t v38 = v29 + ((*(unsigned __int8 *)(v123 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
    uint64_t result = swift_bridgeObjectRetain(v29);
    uint64_t v39 = 0LL;
    v116 = v29;
    v134 = v34;
    v115 = v36;
    v114 = v37;
    v113 = v32;
    v112 = v31;
    v108 = v38;
    while (v39 < *(void *)(v29 + 16))
    {
      uint64_t v40 = *(void *)(v123 + 72);
      v111 = v39;
      uint64_t v41 = v126;
      sub_100112854(v38 + v40 * v39, v126, type metadata accessor for TreatmentsConfiguration.Area.Experiment);
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 16);
      uint64_t v43 = v139;
      v42(v137, v41, v139);
      uint64_t v44 = v122;
      uint64_t v45 = v41 + *(int *)(v122 + 24);
      v133 = v42;
      v42(v138, v45, v43);
      uint64_t v46 = *(void *)(v41 + *(int *)(v44 + 32));
      v117 = *(void *)(v46 + 16);
      if (v117)
      {
        v120 = *(int *)(v44 + 28);
        v119 = v46 + 32;
        uint64_t result = swift_bridgeObjectRetain(v46);
        id v47 = 0LL;
        uint64_t v48 = (uint64_t)v144;
        v118 = result;
        while (v47 < *(void *)(result + 16))
        {
          v121 = v47;
          uint64_t v49 = (uint64_t *)(v119 + 24 * v47);
          uint64_t v50 = *v49;
          v135 = v49[1];
          uint64_t v51 = v49[2];
          uint64_t v52 = *(void *)(v126 + v120);
          v140 = v51;
          v131 = v50;
          v130 = v52;
          if (v52 && (v141 = *(void *)(v52 + 16)) != 0)
          {
            v142 = v5;
            v129 = *(void *)(v50 + 16);
            if (v129)
            {
              v128 = v50 + 32;
              swift_bridgeObjectRetain_n(v50, 2LL);
              swift_bridgeObjectRetain(v51);
              uint64_t result = swift_bridgeObjectRetain(v52);
              uint64_t v53 = 0LL;
              v127 = (uint64_t *)(v52 + 40);
              uint64_t v54 = _swiftEmptyArrayStorage;
              while (v53 < *(void *)(v50 + 16))
              {
                uint64_t v55 = *(void *)(v128 + 8 * v53);
                swift_bridgeObjectRetain(v52);
                swift_bridgeObjectRetain(v55);
                uint64_t v56 = v127;
                uint64_t v57 = v141;
                do
                {
                  uint64_t v58 = *(v56 - 1);
                  uint64_t v59 = *v56;
                  swift_bridgeObjectRetain(v55);
                  swift_bridgeObjectRetain(v59);
                  if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0)
                  {
                    sub_1000147B4();
                    uint64_t v54 = v62;
                  }

                  uint64_t v60 = v54[2];
                  if (v60 >= v54[3] >> 1)
                  {
                    sub_1000147B4();
                    uint64_t v54 = v63;
                  }

                  v56 += 2;
                  v54[2] = v60 + 1;
                  uint64_t v61 = &v54[3 * v60];
                  v61[4] = v55;
                  v61[5] = v58;
                  v61[6] = v59;
                  --v57;
                }

                while (v57);
                swift_bridgeObjectRelease();
                uint64_t v52 = v130;
                uint64_t result = swift_bridgeObjectRelease();
                ++v53;
                uint64_t v48 = (uint64_t)v144;
                uint64_t v50 = v131;
                if (v53 == v129)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_41;
                }
              }

              goto LABEL_71;
            }

            swift_bridgeObjectRetain(v50);
            swift_bridgeObjectRetain(v51);
            swift_bridgeObjectRetain(v52);
            uint64_t v54 = _swiftEmptyArrayStorage;
LABEL_41:
            uint64_t v72 = v54[2];
            if (v72)
            {
              v156 = _swiftEmptyArrayStorage;
              sub_1000171FC();
              uint64_t v66 = v156;
              uint64_t v73 = v54 + 6;
              do
              {
                uint64_t v74 = *(v73 - 1);
                v75 = *v73;
                v145[0] = *(v73 - 2);
                v145[1] = v74;
                v145[2] = v75;
                swift_bridgeObjectRetain_n(v145[0], 2LL);
                swift_bridgeObjectRetain_n(v75, 2LL);
                v76 = sub_10000D33C((uint64_t *)&unk_1001CFB10);
                v77 = sub_10000D33C(&qword_1001C8EE0);
                swift_dynamicCast(v146, v145, v76, v77, 7LL);
                uint64_t v78 = v146[0];
                v79 = v146[1];
                v80 = v146[2];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
                v141 = v80;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1000171FC();
                  uint64_t v66 = v156;
                }

                v82 = v66[2];
                if (v82 >= v66[3] >> 1)
                {
                  sub_1000171FC();
                  uint64_t v66 = v156;
                }

                v73 += 3;
                v66[2] = v82 + 1;
                v83 = &v66[3 * v82];
                v83[4] = v78;
                v83[5] = v79;
                v83[6] = v141;
                --v72;
                uint64_t v48 = (uint64_t)v144;
              }

              while (v72);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v5 = v142;
            }

            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v66 = _swiftEmptyArrayStorage;
              uint64_t v5 = v142;
            }
          }

          else
          {
            unint64_t v64 = *(void *)(v50 + 16);
            if (v64)
            {
              uint64_t v65 = v5;
              v146[0] = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain(v50);
              swift_bridgeObjectRetain(v51);
              swift_bridgeObjectRetain(v52);
              sub_1000171FC();
              uint64_t v66 = (void *)v146[0];
              uint64_t v67 = (uint64_t *)(v50 + 32);
              do
              {
                uint64_t v68 = *v67;
                v146[0] = v66;
                uint64_t v70 = v66[2];
                uint64_t v69 = v66[3];
                swift_bridgeObjectRetain(v68);
                if (v70 >= v69 >> 1)
                {
                  sub_1000171FC();
                  uint64_t v66 = (void *)v146[0];
                }

                v66[2] = v70 + 1;
                uint64_t v71 = &v66[3 * v70];
                v71[5] = 0LL;
                v71[6] = 0LL;
                v71[4] = v68;
                ++v67;
                --v64;
              }

              while (v64);
              swift_bridgeObjectRelease();
              uint64_t v5 = v65;
              uint64_t v48 = (uint64_t)v144;
            }

            else
            {
              swift_bridgeObjectRetain(v50);
              swift_bridgeObjectRetain(v51);
              uint64_t v66 = _swiftEmptyArrayStorage;
            }
          }

          v84 = v66[2];
          if (v84)
          {
            v142 = v5;
            swift_bridgeObjectRetain(v66);
            v85 = v66 + 6;
            while (1)
            {
              v87 = (void *)*(v85 - 2);
              v86 = *(v85 - 1);
              v88 = *v85;
              v89 = v48;
              v90 = v139;
              v91 = (uint64_t (*)(char *, char *, uint64_t))v133;
              v133((char *)v89, (uint64_t)v137, v139);
              v92 = v136;
              v93 = v90;
              uint64_t v48 = (uint64_t)v144;
              uint64_t result = v91(&v144[*(int *)(v136 + 24)], v138, v93);
              v94 = (void *)(v48 + *(int *)(v92 + 20));
              v95 = v140;
              *v94 = v135;
              v94[1] = v95;
              if (v87[2] < 2uLL) {
                break;
              }
              v97 = v87[4];
              v96 = v87[5];
              swift_bridgeObjectRetain(v88);
              swift_bridgeObjectRetain(v95);
              swift_bridgeObjectRetain(v87);
              v98 = v96;
              v99 = v142;
              sub_10013C784(v48, v132, v134, v98, v97, v86, v88);
              v142 = v99;
              if (v99)
              {
                sub_100019EC0(v48, type metadata accessor for Treatment);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n(v66, 2LL);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_100019EC0(v126, type metadata accessor for TreatmentsConfiguration.Area.Experiment);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n(v116, 2LL);
                v103 = *(void (**)(char *, uint64_t))(v125 + 8);
                v104 = v139;
                v103(v138, v139);
                v103(v137, v104);
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }

              v85 += 3;
              sub_100019EC0(v48, type metadata accessor for Treatment);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (!--v84)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v5 = v142;
                goto LABEL_56;
              }
            }

            __break(1u);
LABEL_71:
            __break(1u);
            break;
          }

          swift_bridgeObjectRelease();
LABEL_56:
          id v47 = v121 + 1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = v118;
          if (v47 == v117)
          {
            swift_bridgeObjectRelease();
            goto LABEL_59;
          }
        }

        __break(1u);
        break;
      }

LABEL_27:
    swift_once(&qword_1001C7F98, sub_1000BD408);
    goto LABEL_12;
  }

  if ((a1 & 1) != 0) {
    goto LABEL_11;
  }
  if (qword_1001C7F98 != -1) {
    swift_once(&qword_1001C7F98, sub_1000BD408);
  }
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v41 = *(void *)(*(void *)(sub_100010570() - 8) + 72LL);
  sub_100010678();
  uint64_t v44 = sub_10001059C((v43 & ~v42) + 2 * v41, v42);
  *(_OWORD *)(v44 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v45 = type metadata accessor for ActivityObserver();
  uint64_t v46 = sub_10001057C(v45);
  id v47 = (id)AMSLogKey(v46);
  if (v47)
  {
    uint64_t v48 = sub_1000105E8((uint64_t)v47);
    uint64_t v50 = v49;

    swift_bridgeObjectRetain(v50);
    sub_100010564();
    sub_1000104F0();
    sub_10001049C();
    uint64_t v51 = sub_100010530();
    sub_1000104DC(v51);
    sub_100010648();
    sub_10000DC14();
    v79 = &type metadata for String;
    v77 = (void *)v48;
    uint64_t v78 = v50;
    sub_10001065C();
    sub_100010648();
    sub_10000DC4C(93LL);
    sub_100010690();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001058C();
    sub_1000104F0();
    sub_10001049C();
    uint64_t v65 = sub_100010530();
    uint64_t v66 = sub_1000104DC(v65);
    sub_100010654(v66, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_100010690();
  }

  sub_100010670();
  uint64_t v67 = sub_1000105B4(0xD000000000000021LL);
  uint64_t v68 = static os_log_type_t.info.getter(v67);
  sub_1000BD1B0(v68, v44);
  swift_bridgeObjectRelease();
LABEL_25:
  sub_10000DD84();
}

        sub_1000677B4();
        uint64_t v7 = v21 & v20;
        uint64_t v9 = v22;
      }

      sub_100067A88();
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      uint64_t v28 = (void *)(v27 + 16 * v26);
      uint64_t v29 = v28[1];
      v51[0] = *v28;
      v51[1] = v29;
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v29);
      uint64_t v30 = sub_10000D33C(v11);
      sub_100037684((uint64_t)&v52, (uint64_t)v51, (uint64_t)v10, v30);
      uint64_t v31 = v52;
      uint64_t v32 = sub_100030CCC(v25, v24);
      uint64_t v33 = v32;
      if ((v34 & 1) == 0) {
        break;
      }
      uint64_t v50 = v31;
      uint64_t v35 = v7;
      id v36 = v3;
      uint64_t v37 = v9;
      uint64_t v38 = v11;
      uint64_t v39 = v10;
      uint64_t v40 = (uint64_t *)(v4[6] + 16 * v32);
      swift_bridgeObjectRelease();
      *uint64_t v40 = v25;
      v40[1] = v24;
      uint64_t v10 = v39;
      uint64_t v11 = v38;
      uint64_t v9 = v37;
      uint64_t v3 = v36;
      uint64_t v7 = v35;
      uint64_t v41 = v4[7];
      swift_unknownObjectRelease(*(void *)(v41 + 8 * v33));
      *(void *)(v41 + 8 * v33) = v50;
    }

    if (v4[2] >= v4[3]) {
      break;
    }
    sub_1000677D0((v32 >> 3) & 0x1FFFFFFFFFFFFFF8LL, v47, v48);
    uint64_t v43 = (uint64_t *)(v42 + 16 * v33);
    *uint64_t v43 = v25;
    v43[1] = v24;
    *(void *)(v4[7] + 8 * v33) = v31;
    uint64_t v44 = v4[2];
    uint64_t v13 = __OFADD__(v44, 1LL);
    uint64_t v45 = v44 + 1;
    if (v13) {
      goto LABEL_35;
    }
    v4[2] = v45;
  }

  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

        sub_1000677B4();
        uint64_t v4 = v16 & v15;
        uint64_t v6 = v17;
      }

      sub_100067A88();
      uint64_t v20 = *v18;
      char v19 = v18[1];
      sub_100019EEC(v22 + 40 * v21, (uint64_t)v49);
      *(void *)&uint64_t v48 = v20;
      *((void *)&v48 + 1) = v19;
      v45[2] = v48;
      v46[0] = v49[0];
      v46[1] = v49[1];
      id v47 = v50;
      uint64_t v40 = v20;
      uint64_t v41 = v19;
      sub_100019F60(v46, (uint64_t)v39);
      sub_10000DED8();
      uint64_t v23 = sub_10000D33C(&qword_1001C9A88);
      sub_100037684((uint64_t)v42, (uint64_t)v39, v23, (uint64_t)&type metadata for Any + 8);
      uint64_t v25 = v40;
      uint64_t v24 = v41;
      sub_10000DA58(v42, v44);
      sub_10000DA58(v44, v45);
      sub_10000DA58(v45, &v43);
      id v26 = sub_100030CCC(v25, v24);
      uint64_t v27 = v26;
      if ((v28 & 1) == 0) {
        break;
      }
      uint64_t v29 = (uint64_t *)(v1[6] + 16 * v26);
      swift_bridgeObjectRelease();
      *uint64_t v29 = v25;
      v29[1] = v24;
      uint64_t v30 = (void *)(v1[7] + 32 * v27);
      sub_10000D3A0(v30);
      sub_10000DA58(&v43, v30);
    }

    if (v1[2] >= v1[3]) {
      break;
    }
    sub_1000677D0((v26 >> 3) & 0x1FFFFFFFFFFFFFF8LL, v36, v37);
    uint64_t v32 = (uint64_t *)(v31 + 16 * v27);
    void *v32 = v25;
    v32[1] = v24;
    sub_10000DA58(&v43, (_OWORD *)(v1[7] + 32 * v27));
    uint64_t v33 = v1[2];
    uint64_t v8 = __OFADD__(v33, 1LL);
    uint64_t v34 = v33 + 1;
    if (v8) {
      goto LABEL_35;
    }
    v1[2] = v34;
  }

  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

              swift_release(v3);
              return;
            }
          }
        }
      }
    }

uint64_t sub_10000F86C()
{
  uint64_t v0 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100018D04(0);
  static Date.now.getter(v3);
  return sub_10000ED48((uint64_t)v2);
}

uint64_t sub_10000F8D4()
{
  return swift_release();
}

void sub_10000F968(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = sub_10000D33C(&qword_1001C8BD0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a4 & 1) != 0)
  {
    if (qword_1001C7F98 != -1) {
      swift_once(&qword_1001C7F98, sub_1000BD408);
    }
    uint64_t v13 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v14 = type metadata accessor for LogMessage(0LL);
    uint64_t v15 = swift_allocObject( v13,  ((*(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v14 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v14 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v15 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v43 = type metadata accessor for ActivityObserver();
    v42[0] = a5;
    uint64_t v16 = swift_retain(a5);
    id v17 = (id)AMSLogKey(v16);
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      uint64_t v21 = v20;

      swift_bridgeObjectRetain(v21);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v22._countAndFlagsBits = 0LL;
      v22._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v22);
      uint64_t v23 = v43;
      uint64_t v24 = sub_10000D37C(v42, v43);
      uint64_t DynamicType = swift_getDynamicType(v24, v23, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v40[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
      sub_1000102E0((uint64_t)v40, &qword_1001CAAD0);
      v26._countAndFlagsBits = 5972026LL;
      v26._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t MetatypeMetadata = &type metadata for String;
      v40[0] = v19;
      v40[1] = v21;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
      sub_1000102E0((uint64_t)v40, &qword_1001CAAD0);
      v27._countAndFlagsBits = 93LL;
      v27._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      LogMessage.init(stringInterpolation:)(v12);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v28._countAndFlagsBits = 0LL;
      v28._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t v29 = v43;
      uint64_t v30 = sub_10000D37C(v42, v43);
      uint64_t v31 = swift_getDynamicType(v30, v29, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v31);
      v40[0] = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
      sub_1000102E0((uint64_t)v40, &qword_1001CAAD0);
      v32._countAndFlagsBits = 58LL;
      v32._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      LogMessage.init(stringInterpolation:)(v12);
    }

    sub_10000D3A0(v42);
    uint64_t v33 = LogMessage.init(stringLiteral:)(0xD000000000000016LL);
    uint64_t v34 = static os_log_type_t.default.getter(v33);
    sub_1000BD1B0(v34, v15);
    swift_bridgeObjectRelease();
    id v35 = [objc_allocWithZone(AMSEngagementSyncRequest) init];
    if (qword_1001C7F50 != -1) {
      swift_once(&qword_1001C7F50, sub_100055FD4);
    }
    sub_1000551CC();
    swift_release();
    type metadata accessor for DynamicUICache();
    sub_10004CB9C();
    sub_10004D0CC();
    if (qword_1001C8070 != -1) {
      swift_once(&qword_1001C8070, sub_1000E4144);
    }
    sub_1000E5F6C();
    uint64_t v36 = type metadata accessor for PodcastsEventManager();
    swift_initStaticObject(v36, &unk_1001C8120);
    sub_1000FEA9C();
    uint64_t v37 = type metadata accessor for TaskPriority(0LL);
    sub_10000D5C0((uint64_t)v9, 1LL, 1LL, v37);
    uint64_t v38 = swift_allocObject(&unk_1001A8380, 32LL, 7LL);
    *(void *)(v38 + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(v38 + 24) = 0LL;
    sub_100116BA0((uint64_t)v9, (uint64_t)&unk_1001C8E28, v38);
    swift_release();
    sub_10000D5C0((uint64_t)v9, 1LL, 1LL, v37);
    uint64_t v39 = swift_allocObject(&unk_1001A83A8, 32LL, 7LL);
    *(void *)(v39 + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(v39 + 24) = 0LL;
    sub_10001006C((uint64_t)v9, (uint64_t)&unk_1001C8E38, v39);
    swift_release();
    if (qword_1001C8088 != -1) {
      swift_once(&qword_1001C8088, sub_1000F5440);
    }
    sub_1000F5510();
  }

uint64_t sub_10000FDE0()
{
  return swift_task_switch(sub_10000FDF4, 0LL, 0LL);
}

uint64_t sub_10000FDF4()
{
  id v1 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
  id v2 = sub_100010500();
  id v3 = [objc_allocWithZone(AMSEngagement) initWithBag:v2];

  id v4 = [(id)objc_opt_self(NSFileManager) defaultManager];
  uint64_t v5 = type metadata accessor for NotificationSettingsEventManager();
  uint64_t v6 = (void *)swift_allocObject(v5, 152LL, 7LL);
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = sub_10001031C((uint64_t)v1, (uint64_t)v3, (uint64_t)v4, v6);
  uint64_t v7 = (void *)swift_task_alloc(dword_1001CD76C);
  *(void *)(v0 + 24) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10000FEFC;
  return sub_1000FAAD8();
}

uint64_t sub_10000FEFC()
{
  uint64_t v1 = *(void *)(*v0 + 16);
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 24));
  swift_release(v1);
  return sub_1000105A8(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_10000FF44(uint64_t a1)
{
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = a1;
  return swift_task_switch(sub_10000FF5C, 0LL, 0LL);
}

uint64_t sub_10000FF5C()
{
  if (qword_1001C80F0 != -1) {
    swift_once(&qword_1001C80F0, sub_100140BBC);
  }
  uint64_t v1 = (void *)swift_task_alloc(dword_1001CFA2C);
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_10000FFD4;
  return sub_10013E58C(2LL);
}

uint64_t sub_10000FFD4(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 24);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (v1) {
    return (*(uint64_t (**)(void))(v6 + 8))();
  }
  *(_BYTE *)(v4 + 32) = a1 & 1;
  return swift_task_switch(sub_100010054, 0LL, 0LL);
}

uint64_t sub_100010054()
{
  **(_BYTE **)(v0 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10001006C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t v7 = sub_1000102D4(a1, 1LL, v6);
  if ((_DWORD)v7 == 1)
  {
    sub_1000102E0(a1, &qword_1001C8BD0);
    uint64_t v8 = 7168LL;
  }

  else
  {
    unsigned __int8 v9 = TaskPriority.rawValue.getter(v7);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
    uint64_t v8 = v9 | 0x1C00LL;
  }

  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(a3 + 24);
    uint64_t ObjectType = swift_getObjectType(*(void *)(a3 + 16));
    swift_unknownObjectRetain(v10);
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
    uint64_t v15 = v14;
    swift_unknownObjectRelease(v10);
  }

  else
  {
    uint64_t v13 = 0LL;
    uint64_t v15 = 0LL;
  }

  if (v15 | v13)
  {
    v18[0] = 0LL;
    v18[1] = 0LL;
    uint64_t v16 = v18;
    v18[2] = v13;
    v18[3] = v15;
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  return swift_task_create(v8, v16, &type metadata for Bool, a2, a3);
}

uint64_t type metadata accessor for ActivityObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd16ActivityObserver);
}

void sub_1000101B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1000101B8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000101DC()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_1001C8E24);
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  sub_100010618(v1);
  return sub_10000FDE0();
}

uint64_t sub_100010230()
{
  return sub_1000105A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100010254()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_1001C8E34);
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v2 = sub_100010618(v1);
  return sub_10000FF44(v2);
}

uint64_t sub_1000102A8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000102D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48LL))();
}

uint64_t sub_1000102E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000D33C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

void *sub_10001031C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[5] = sub_10000DAA0(0LL, &qword_1001C8E40, &OBJC_CLASS___ACAccountStore_ptr);
  a4[6] = &off_1001A8320;
  a4[2] = a1;
  a4[12] = sub_10000DAA0(0LL, &qword_1001C8E48, &OBJC_CLASS___AMSEngagement_ptr);
  a4[13] = &off_1001B05C0;
  a4[9] = a2;
  a4[17] = sub_10000DAA0(0LL, (unint64_t *)&qword_1001C8E50, &OBJC_CLASS___NSFileManager_ptr);
  a4[18] = &off_1001AB750;
  a4[14] = a3;
  a4[7] = 0xD000000000000014LL;
  a4[8] = 0x800000010016B2D0LL;
  return a4;
}

uint64_t sub_1000103E4()
{
  return sub_10000F86C();
}

uint64_t sub_1000103EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000103FC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_100010404()
{
  unint64_t result = qword_1001CD3E0;
  if (!qword_1001CD3E0)
  {
    uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1001CD3E0);
  }

  return result;
}

unint64_t sub_100010444()
{
  unint64_t result = qword_1001CD3F0;
  if (!qword_1001CD3F0)
  {
    uint64_t v1 = sub_10000D820((uint64_t *)&unk_1001CAB00);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1001CD3F0);
  }

  return result;
}

uint64_t sub_100010488()
{
  return sub_10000F020();
}

uint64_t sub_10001049C()
{
  uint64_t v1 = *(void *)(v0 - 136);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 160), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_1000104C0(void *a1)
{
  uint64_t v2 = sub_10000D37C(a1, v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_1000104DC(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 112);
}

void sub_1000104F0()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

id sub_100010500()
{
  return sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
}

uint64_t sub_100010530()
{
  return swift_getMetatypeMetadata();
}

uint64_t sub_100010538()
{
  uint64_t v2 = *v0;
  *(void *)(v1 - 8) = *v0;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v1 - 8) = *v0;
  return swift_task_dealloc(v3);
}

uint64_t sub_100010558()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100010564()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
}

uint64_t sub_100010570()
{
  return type metadata accessor for LogMessage(0LL);
}

uint64_t sub_10001057C(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return swift_retain(v1);
}

uint64_t sub_10001058C()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_10001059C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return swift_allocObject(v2, a1, a2 | 7);
}

uint64_t sub_1000105A8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000105B4(uint64_t a1)
{
  return LogMessage.init(stringLiteral:)(a1);
}

uint64_t sub_1000105C0(uint64_t a1)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 168) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 168);
}

NSString sub_1000105D4()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000105E8(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

  ;
}

void sub_100010608()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_100010618(void *a1)
{
  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_100010630@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_10001063C@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(v3, a1, v2);
}

uint64_t sub_100010648()
{
  return sub_1000102E0(v1 - 112, v0);
}

uint64_t sub_100010654(uint64_t a1, uint64_t *a2)
{
  return sub_1000102E0(v2 - 112, a2);
}

uint64_t sub_10001065C()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 112);
}

uint64_t sub_100010664()
{
  return sub_1000102E0(v1 - 112, v0);
}

uint64_t sub_100010670()
{
  return sub_10000D3A0((void *)(v0 - 160));
}

  ;
}

uint64_t sub_100010684()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100010690()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_10001069C()
{
  return sub_1000102E0(v1 - 168, v0);
}

uint64_t sub_1000106A8(uint64_t result)
{
  return result;
}

unint64_t sub_1000106B0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A6DA8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6) {
    return 6LL;
  }
  else {
    return v3;
  }
}

id sub_1000106F8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_10000D33C(&qword_1001CB180);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)) init];
  [v12 setAccount:a3];
  [v12 setFailOnDismiss:a2 & 1];
  strcpy((char *)v27, "clientData");
  BYTE3(v27[1]) = 0;
  HIDWORD(v27[1]) = -369098752;
  sub_100010B6C();
  sub_100010B5C();
  sub_100010B9C();
  if (*((void *)&v30 + 1))
  {
    uint64_t v13 = sub_10000D33C(&qword_1001C8E58);
    uint64_t v14 = sub_100010B78(v13);
    if ((v14 & 1) != 0)
    {
      sub_100010BC4();
      uint64_t v14 = sub_100010BB8();
      goto LABEL_6;
    }
  }

  else
  {
    uint64_t v14 = sub_100010B94();
  }

  a2 = 0LL;
LABEL_6:
  sub_100010BAC(v14, "setClientData:");

  strcpy((char *)v27, "metricsOverlay");
  HIBYTE(v27[1]) = -18;
  sub_100010B6C();
  sub_100010B5C();
  sub_100010B9C();
  if (*((void *)&v30 + 1))
  {
    uint64_t v15 = sub_10000D33C(&qword_1001C8E58);
    uint64_t v16 = sub_100010B78(v15);
    if ((v16 & 1) != 0)
    {
      sub_100010BC4();
      uint64_t v16 = sub_100010BB8();
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v16 = sub_100010B94();
  }

  a2 = 0LL;
LABEL_11:
  sub_100010BAC(v16, "setMetricsOverlay:");

  v27[0] = 0xD000000000000010LL;
  v27[1] = 0x800000010016B410LL;
  sub_100010B6C();
  sub_100010B5C();
  sub_100010B9C();
  if (*((void *)&v30 + 1))
  {
    if ((sub_100010BA4( (uint64_t)v27,  (uint64_t)&v29,  (uint64_t)&type metadata for Any + 8,  (uint64_t)&type metadata for Int) & 1) != 0) {
      [v12 setDestinationStyle:v27[0]];
    }
  }

  else
  {
    sub_100010B94();
  }

  v27[0] = 7107189LL;
  v27[1] = 0xE300000000000000LL;
  sub_100010B6C();
  sub_100010B5C();
  swift_bridgeObjectRelease();
  sub_100010B9C();
  if (*((void *)&v30 + 1))
  {
    if ((sub_100010BA4( (uint64_t)v27,  (uint64_t)&v29,  (uint64_t)&type metadata for Any + 8,  (uint64_t)&type metadata for String) & 1) != 0)
    {
      URL.init(string:)(v27[0], v27[1]);
      swift_bridgeObjectRelease();
      uint64_t v17 = type metadata accessor for URL(0LL);
      uint64_t v18 = sub_1000102D4((uint64_t)v11, 1LL, v17);
      uint64_t v20 = 0LL;
      if ((_DWORD)v18 != 1)
      {
        URL._bridgeToObjectiveC()(v19);
        uint64_t v20 = v21;
        uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8LL))(v11, v17);
      }

      sub_100010BAC(v18, "setURL:");
    }
  }

  else
  {
    sub_100010B94();
  }

  uint64_t v22 = sub_100010AF4(v12);
  if (!v22)
  {
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    goto LABEL_27;
  }

  uint64_t v23 = v22;
  v27[0] = 0x656C797473LL;
  v27[1] = 0xE500000000000000LL;
  sub_100010B6C();
  sub_10003079C((uint64_t)v28, v23, &v29);
  sub_100010B9C();
  swift_bridgeObjectRelease();
  if (!*((void *)&v30 + 1))
  {
LABEL_27:
    sub_100010B94();
    goto LABEL_28;
  }

  if ((sub_100010BA4( (uint64_t)v28,  (uint64_t)&v29,  (uint64_t)&type metadata for Any + 8,  (uint64_t)&type metadata for String) & 1) != 0)
  {
    unint64_t v24 = sub_1000106B0(v28[0]);
  }

LABEL_28:
  [v12 setPresentationStyle:a4];
  return v12;
}

    sub_10000DE2C();
    unint64_t result = v15;
    unint64_t v3 = v34;
    if (v7) {
      goto LABEL_7;
    }
LABEL_8:
    uint64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1LL))
    {
      __break(1u);
      goto LABEL_42;
    }

    if (v11 >= v33) {
      return 1LL;
    }
    id v12 = *(void *)(v32 + 8 * v11);
    uint64_t v13 = v3 + 1;
    if (!v12)
    {
      uint64_t v13 = v3 + 2;
      if (v3 + 2 >= v33) {
        return 1LL;
      }
      id v12 = *(void *)(v32 + 8 * v13);
      if (!v12)
      {
        uint64_t v13 = v3 + 3;
        if (v3 + 3 >= v33) {
          return 1LL;
        }
        id v12 = *(void *)(v32 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }

    sub_10004B058();
LABEL_29:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 16 * v6 + 8);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    sub_100030CCC(v15, v16);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      sub_1000090CC();
      goto LABEL_39;
    }

    uint64_t v20 = sub_10004B0A4();
    uint64_t v22 = v22 && v21 == v17;
    if (v22)
    {
      sub_1000090CC();
    }

    else
    {
      uint64_t v23 = sub_10004B070(v20, v21);
      sub_1000090CC();
      if ((v23 & 1) == 0) {
        goto LABEL_39;
      }
    }
  }

  sub_10004B098();
  if (v8 == v9) {
    goto LABEL_39;
  }
  if (*(void *)(v2 + 8 * v12))
  {
    uint64_t v4 = v12;
    goto LABEL_28;
  }

  while (1)
  {
    uint64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1LL)) {
      break;
    }
    sub_10004B03C();
    if (v8 == v9) {
      goto LABEL_39;
    }
    id v12 = v13 + 1;
    if (*(void *)(v2 + 8 * v4)) {
      goto LABEL_28;
    }
  }

    sub_10004B058();
LABEL_29:
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 16 * v6 + 8);
    uint64_t v15 = *(id *)(*(void *)(a1 + 48) + 8 * v6);
    swift_bridgeObjectRetain(v14);
    sub_100030D20(v15);
    uint64_t v17 = v16;

    if ((v17 & 1) == 0)
    {
      sub_1000090CC();
      goto LABEL_39;
    }

    uint64_t v18 = sub_10004B0A4();
    uint64_t v20 = v20 && v19 == v14;
    if (v20)
    {
      sub_1000090CC();
    }

    else
    {
      uint64_t v21 = sub_10004B070(v18, v19);
      sub_1000090CC();
      if ((v21 & 1) == 0) {
        goto LABEL_39;
      }
    }
  }

  sub_10004B098();
  if (v8 == v9) {
    goto LABEL_39;
  }
  if (*(void *)(v2 + 8 * v12))
  {
    uint64_t v4 = v12;
    goto LABEL_28;
  }

  while (1)
  {
    uint64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1LL)) {
      break;
    }
    sub_10004B03C();
    if (v8 == v9) {
      goto LABEL_39;
    }
    id v12 = v13 + 1;
    if (*(void *)(v2 + 8 * v4)) {
      goto LABEL_28;
    }
  }

    sub_1000676B4();
  }

  sub_1000372A0();
  while (++v24 != v25 || (v23 & 1) == 0)
  {
    Swift::String v26 = v24 == v25;
    if (v24 == v25) {
      unint64_t v24 = 0LL;
    }
    v23 |= v26;
    if (v6[v24] != -1LL)
    {
      sub_100037254();
      goto LABEL_38;
    }
  }

  __break(1u);
  __break(1u);
LABEL_42:
  __break(1u);
}

    swift_release();
    return swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    id v35 = swift_allocObject(v53, v51, v50);
    *(_OWORD *)(v35 + swift_weakDestroy(v0 + 16) = v49;
    uint64_t v58 = v48;
    v57[0] = v2;
    uint64_t v36 = (id)AMSLogKey(v35);
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      uint64_t v40 = v39;

      swift_bridgeObjectRetain(v40);
      sub_1000E3618();
      sub_100037DD0();
      sub_10008E3CC();
      uint64_t v41 = sub_100010530();
      sub_1000E35F4(v41);
      sub_10008F0E0();
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v54 = v38;
      uint64_t v55 = v40;
      uint64_t v18 = 0xD000000000000014LL;
      sub_10000DF68();
      sub_10008F0E0();
      sub_10000DC4C(93LL);
      sub_10006796C();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_1000E3608();
      sub_100037DD0();
      uint64_t v42 = v58;
      uint64_t v43 = sub_10000D37C(v57, v58);
      uint64_t DynamicType = swift_getDynamicType(v43, v42, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v54 = DynamicType;
      sub_10000DF68();
      sub_10008F0E0();
      sub_10000DC4C(58LL);
      sub_10006796C();
    }

    sub_10000D3A0(v57);
    uint64_t v45 = LogMessage.init(stringLiteral:)(v18 + 12);
    uint64_t v46 = static os_log_type_t.default.getter(v45);
    sub_1000BD1B0(v46, v35);
    return swift_bridgeObjectRelease();
  }

  __break(1u);
  return result;
}

uint64_t sub_100010AF4(void *a1)
{
  id v1 = [a1 clientData];
  if (!v1) {
    return 0LL;
  }
  Swift::String v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v1,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  return v3;
}

void sub_100010B5C()
{
}

uint64_t sub_100010B6C()
{
  return AnyHashable.init<A>(_:)(v0 - 152);
}

uint64_t sub_100010B78(uint64_t a1)
{
  return swift_dynamicCast(v2 - 152, v2 - 96, v1 + 8, a1, 6LL);
}

uint64_t sub_100010B94()
{
  return sub_10000E888(v0 - 96);
}

uint64_t sub_100010B9C()
{
  return sub_10000E854(v0 - 136);
}

uint64_t sub_100010BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(a1, a2, a3, a4, 6LL);
}

id sub_100010BAC(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_100010BB8()
{
  return swift_bridgeObjectRelease(v0);
}

NSDictionary sub_100010BC4()
{
  return Dictionary._bridgeToObjectiveC()();
}

_BYTE *initializeBufferWithCopyOfBuffer for SyncError(_BYTE *result, _BYTE *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SyncError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }

LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  v153 = v12;
  v182 = 2 * v171;
  v184 = 4 * v171;
  v81 = qword_1001DBB20;
  v82 = sub_100048784(v165, v163, (uint64_t)v191);
  *(_OWORD *)(v82 + swift_weakDestroy(v0 + 16) = v161;
  v192 = v160;
  v191[0] = v60;
  v83 = swift_retain(v60);
  v84 = (id)AMSLogKey(v83);
  if (v84)
  {
    v177 = (char *)sub_1000105E8((uint64_t)v84);
    v86 = v85;

    sub_10000DED8();
    v178 = v81;
    v87 = v169;
    sub_100010564();
    sub_100048C74();
    v88 = v192;
    sub_1000104C0(v191);
    v190 = (void *)sub_100010530();
    v188 = v88;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v188);
    sub_1000485FC((uint64_t)&v188);
    sub_10000DC14();
    v190 = &type metadata for String;
    v188 = v177;
    v189 = v86;
    sub_10000DF68();
    sub_1000485FC((uint64_t)&v188);
    sub_10000DC4C(93LL);
    LogMessage.init(stringInterpolation:)(v87);
    unint64_t v62 = (uint64_t)v167;
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A1BC();
    sub_10000DC08();
    v89 = v192;
    v90 = sub_10000D37C(v191, (uint64_t)v192);
    sub_10000DC54((uint64_t)v90, (uint64_t)v89);
    v190 = (void *)sub_1000258E8();
    v188 = v89;
    v91 = sub_10000DF68();
    sub_100048740(v91, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(v191);
  sub_10000E008();
  sub_10000DD38(26LL);
  v192 = &type metadata for String;
  sub_100048E94();
  sub_1000487EC();
  sub_1000485FC((uint64_t)v191);
  sub_1000105B4(0xD00000000000001DLL);
  v192 = (void *)sub_10000D33C(&qword_1001CA2A8);
  v191[0] = v62;
  sub_10000DED8();
  sub_100048650();
  v92 = sub_1000485FC((uint64_t)v191);
  v93 = static os_log_type_t.info.getter(v92);
  sub_1000BD1B0(v93, v82);
  sub_100020AB8();
  if (v3) {
    sub_10003C3F8();
  }
  v94 = (uint64_t)v153;
  v95 = (uint64_t)v166;
  if (v63)
  {
    v96 = v62 + ((*(unsigned __int8 *)(v157 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80));
    v97 = *(void *)(v157 + 72);
    sub_10000DED8();
    v98 = _swiftEmptyArrayStorage;
    do
    {
      v99 = v185;
      sub_100048454(v96, v185, &qword_1001C8FE0);
      sub_100048498(v99, v28);
      sub_100048918(v28, 1LL, v94);
      if (v117)
      {
        sub_100048258(v28, &qword_1001C8FE0);
      }

      else
      {
        v100 = v179;
        sub_1000206E0(v28, v179);
        sub_1000206E0(v100, v95);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v98);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000488C8();
          sub_100013D20();
          v98 = v105;
        }

        v102 = v98[2];
        if (v102 >= v98[3] >> 1)
        {
          sub_100013D20();
          v98 = v106;
        }

        v98[2] = v102 + 1;
        sub_100048B54();
        sub_1000206E0(v95, v104 + *(void *)(v103 + 72) * v102);
      }

      v96 += v97;
      --v63;
    }

    while (v63);
    sub_1000090CC();
  }

  else
  {
    v98 = _swiftEmptyArrayStorage;
  }

  sub_1000090CC();
  v107 = v98[2];
  v108 = (uint64_t)v180;
  if (!v107) {
    goto LABEL_81;
  }
  sub_100048B54();
  v185 = v109;
  v111 = *(void *)(v110 + 72);
  sub_10000DEE0();
  v112 = 0LL;
  while (1)
  {
    sub_100039F1C(v185 + v111 * v112, v108);
    v113 = *(void **)v108;
    v114 = *(void *)(*(void *)v108 + 16LL);
    if (!v114) {
      goto LABEL_44;
    }
    v115 = v113[4];
    v116 = v113[5];
    v117 = v115 == v186 && v116 == v187;
    if (!v117 && (sub_100025718(v115, v116, v186, v187) & 1) == 0)
    {
      if (v114 == 1) {
        goto LABEL_44;
      }
      v124 = v113[6];
      v125 = v113[7];
      v126 = v124 == v186 && v125 == v187;
      if (!v126 && (sub_100025718(v124, v125, v186, v187) & 1) == 0) {
        break;
      }
    }

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

    uint64_t v14 = 0LL;
LABEL_18:
    sub_100068D28();
    swift_bridgeObjectRetain(a1);
    return sub_1000106F8(v15, 0LL, v14, 0LL);
  }

  v35[0] = v33;
  v35[1] = v34 & 0xFFFFFFFFFFFFFFLL;
  if (v33 == 43)
  {
    if (!v7) {
      goto LABEL_65;
    }
    uint64_t v11 = (BYTE1(v33) - 48);
    if (v7 != 2)
    {
      uint64_t v11 = 10LL * (BYTE1(v33) - 48) + (BYTE2(v33) - 48);
      uint64_t v16 = v7 - 3;
      if (v16)
      {
        uint64_t v17 = (unsigned __int8 *)v35 + 3;
        while (1)
        {
          uint64_t v18 = *v17 - 48;
          if (v18 > 9) {
            goto LABEL_40;
          }
          uint64_t v19 = 10 * v11;
          uint64_t v11 = v19 + v18;
          uint64_t v13 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_53;
          }
        }
      }
    }

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  __break(1u);
  return result;
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

    uint64_t v14 = (v19 - 1) & v19;
  }

  __break(1u);
LABEL_29:
  __break(1u);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v5 = v6 - 31;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  uint64_t v8 = v6 - 3;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return sub_10013A5F0(v8);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  uint64_t v8 = v6 - 2;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return sub_10013A5F0(v8);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  uint64_t v8 = v6 - 5;
  if (!v7) {
    uint64_t v8 = -1;
  }
  return sub_10013A5F0(v8);
}

uint64_t storeEnumTagSinglePayload for SyncError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100010CB4 + 4 * byte_100164559[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100010CE8 + 4 * asc_100164554[v4]))();
}

uint64_t sub_100010CE8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100010CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100010CF8LL);
  }
  return result;
}

uint64_t sub_100010D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100010D0CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_100010D10(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100010D18(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100010D24(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_100010D2C(_BYTE *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SyncError()
{
  return &type metadata for SyncError;
}

unint64_t sub_100010D4C()
{
  unint64_t result = qword_1001C8E60;
  if (!qword_1001C8E60)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001645B8, &type metadata for SyncError);
    atomic_store(result, (unint64_t *)&qword_1001C8E60);
  }

  return result;
}

void sub_100010D88()
{
}

void sub_100010DAC(uint64_t a1)
{
}

Swift::Int sub_100010DE4(uint64_t a1)
{
  return Hasher._finalize()();
}

BOOL static HeapType.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void HeapType.hash(into:)(uint64_t a1, char a2)
{
}

void sub_100010E60(uint64_t a1)
{
  char v1 = a1;
  sub_100009028(a1);
  Hasher._combine(_:)(v1 & 1);
  Hasher._finalize()();
  sub_100008FD4();
}

BOOL sub_100010E94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static HeapType.__derived_enum_equals(_:_:)(*a1, *a2);
}

void sub_100010EA0()
{
}

void sub_100010EA8(uint64_t a1)
{
}

Swift::Int sub_100010EB0(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_100010EF0(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001C8BC8);
  uint64_t v3 = Promise.__allocating_init()(v2);
  swift_retain(v3);
  sub_100010FF4(a1, (uint64_t)sub_100010F7C, v3);
  swift_release();
  return v3;
}

void sub_100010F58(void *a1, char a2)
{
}

void sub_100010F7C(void *a1, char a2)
{
}

void sub_100010F88(void *a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    Promise.reject(_:)(a1);
    sub_100011260(a1, 1);
  }

  else
  {
    uint64_t v4 = a1;
    id v3 = a1;
    Promise.resolve(_:)(&v4);
    sub_100011260(a1, 0);
  }

void sub_100010FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(&unk_1001A84B0, 32LL, 7LL);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  v9[4] = sub_100011190;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256LL;
  v9[2] = sub_100011198;
  v9[3] = &unk_1001A84C8;
  uint64_t v8 = _Block_copy(v9);
  swift_retain(a3);
  swift_release();
  [v3 enqueueWithRequest:a1 completion:v8];
  _Block_release(v8);
}

void sub_1000110C0(void *a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    id v8 = a1;
    a3(a1, 0LL);
  }

  else
  {
    if (a2)
    {
      uint64_t v6 = a2;
    }

    else
    {
      unint64_t v7 = sub_100011224();
      uint64_t v6 = swift_allocError(&type metadata for EnqueueError, v7, 0LL, 0LL);
    }

    swift_errorRetain(a2);
    a3((void *)v6, 1LL);
    swift_errorRelease(v6);
  }

uint64_t sub_10001116C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100011190(void *a1, uint64_t a2)
{
}

void sub_100011198(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = *(void (**)(void *, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  id v8 = a2;
  id v7 = a3;
  v6(a2, a3);
  swift_release(v5);
}

uint64_t sub_10001120C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001121C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_100011224()
{
  unint64_t result = qword_1001C8E68;
  if (!qword_1001C8E68)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164698, &type metadata for EnqueueError);
    atomic_store(result, (unint64_t *)&qword_1001C8E68);
  }

  return result;
}

void sub_100011260(void *a1, char a2)
{
  if ((a2 & 1) != 0) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t getEnumTagSinglePayload for EnqueueError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  else {
    int v2 = 2;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for EnqueueError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100011300 + 4 * byte_10016455E[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100011320 + 4 * byte_100164563[v4]))();
  }
}

_BYTE *sub_100011300(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_100011320(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100011328(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100011330(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100011338(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100011340(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EnqueueError()
{
  return &type metadata for EnqueueError;
}

unint64_t sub_100011360()
{
  unint64_t result = qword_1001C8E70;
  if (!qword_1001C8E70)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164670, &type metadata for EnqueueError);
    atomic_store(result, (unint64_t *)&qword_1001C8E70);
  }

  return result;
}

uint64_t sub_10001139C(void *a1)
{
  id v61 = a1;
  uint64_t v1 = sub_10000D33C(&qword_1001CF970);
  __chkstk_darwin(v1);
  int v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v63 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  unint64_t v62 = (char *)&v60 - v7;
  uint64_t v8 = sub_10000D33C(&qword_1001C8BC0);
  uint64_t inited = swift_initStackObject(v8, &v68);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1001646E0;
  *(void *)(inited + 32) = 0x657669746361LL;
  *(void *)(inited + 40) = 0xE600000000000000LL;
  id v10 = sub_100011A20(inited, "active");
  *(_BYTE *)(inited + 48) = (_BYTE)v10;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000011LL;
  *(void *)(inited + 88) = 0x800000010016B470LL;
  id v11 = sub_100011A20((uint64_t)v10, "backingIdentifier");
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v14 = v13;

  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v14;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x47656C6261736964LL;
  *(void *)(inited + 136) = 0xEF676E6970756F72LL;
  id v16 = sub_100011A20(v15, "disableGrouping");
  *(_BYTE *)(inited + 144) = (_BYTE)v16;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(void *)(inited + 176) = 0xD000000000000014LL;
  *(void *)(inited + 184) = 0x800000010016B490LL;
  id v17 = sub_100011A20((uint64_t)v16, "isExpirationDateHidden");
  *(_BYTE *)(inited + 192) = (_BYTE)v17;
  *(void *)(inited + 2swift_weakDestroy(v0 + 16) = &type metadata for Bool;
  strcpy((char *)(inited + 224), "displayStyle");
  *(_BYTE *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  id v18 = sub_100011A20((uint64_t)v17, "displayStyle");
  *(void *)(inited + 240) = v18;
  *(void *)(inited + 264) = &type metadata for Int;
  *(void *)(inited + 272) = 0x65644970756F7267LL;
  *(void *)(inited + 280) = 0xEF7265696669746ELL;
  id v19 = sub_100011A20((uint64_t)v18, "groupIdentifier");
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  uint64_t v22 = v21;

  *(void *)(inited + 288) = v20;
  *(void *)(inited + 296) = v22;
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 320) = 0x696669746E656469LL;
  *(void *)(inited + 328) = 0xEA00000000007265LL;
  id v24 = sub_100011A20(v23, "identifier");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  sub_100011A44();
  *(void *)(inited + 336) = v19;
  *(void *)(inited + 344) = v20;
  *(void *)(inited + 360) = &type metadata for String;
  *(void *)(inited + 368) = 0x79654B676F6CLL;
  *(void *)(inited + 376) = 0xE600000000000000LL;
  id v26 = sub_100011A20(v25, "logKey");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  sub_100011A44();
  *(void *)(inited + 384) = v19;
  *(void *)(inited + 392) = v20;
  *(void *)(inited + 408) = &type metadata for String;
  *(void *)(inited + 4swift_weakDestroy(v0 + 16) = 0x797469726F697270LL;
  *(void *)(inited + 424) = 0xE800000000000000LL;
  id v28 = sub_100011A20(v27, "priority");
  *(void *)(inited + 432) = v28;
  *(void *)(inited + 456) = &type metadata for Int;
  *(void *)(inited + 464) = 0xD000000000000016LL;
  *(void *)(inited + 472) = 0x800000010016B4B0LL;
  id v29 = sub_100011A20((uint64_t)v28, "shouldPostNotification");
  *(_BYTE *)(inited + 480) = (_BYTE)v29;
  *(void *)(inited + 504) = &type metadata for Bool;
  *(void *)(inited + 512) = 0x6F666E4972657375LL;
  *(void *)(inited + 520) = 0xE800000000000000LL;
  id v30 = sub_100011A20((uint64_t)v29, "userInfo");
  *(void *)(inited + 552) = sub_10000DAA0(0LL, &qword_1001C8E78, &OBJC_CLASS___NSMutableDictionary_ptr);
  *(void *)(inited + 528) = v30;
  uint64_t v69 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  id v31 = sub_100011A20(v69, "account");
  if (v31)
  {
    Swift::String v32 = v31;
    id v33 = objc_msgSend(v31, "ams_DSID");

    if (v33)
    {
      uint64_t v67 = (void *)sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
      v66[0] = v33;
      sub_100030118((uint64_t)v66, 1684632420LL, 0xE400000000000000LL);
    }
  }

  unsigned __int8 v34 = sub_100011A20((uint64_t)v31, "isHardwareOffer");
  uint64_t v67 = &type metadata for Bool;
  LOBYTE(v66[0]) = v34;
  sub_100030118((uint64_t)v66, 0x6572617764726168LL, 0xED0000726566664FLL);
  id v36 = sub_100011A20(v35, "expirationDate");
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = v63;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v36);

    uint64_t v39 = v64;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    uint64_t v41 = v38;
    uint64_t v42 = v65;
    v40(v3, v41, v65);
    sub_10000D5C0((uint64_t)v3, 0LL, 1LL, v42);
    if (sub_1000102D4((uint64_t)v3, 1LL, v42) != 1)
    {
      uint64_t v43 = v62;
      v40(v62, v3, v42);
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v45 = [v61 stringFromDate:isa];

      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      uint64_t v48 = v47;

      uint64_t v67 = &type metadata for String;
      v66[0] = v46;
      v66[1] = v48;
      sub_100030118((uint64_t)v66, 0x6974617269707865LL, 0xEE00657461446E6FLL);
      uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v43, v42);
      goto LABEL_9;
    }
  }

  else
  {
    sub_10000D5C0((uint64_t)v3, 1LL, 1LL, v65);
  }

  uint64_t v49 = sub_1000119E0((uint64_t)v3);
LABEL_9:
  uint64_t v50 = sub_100011A3C(v49, (SEL *)&selRef_footer);
  if (v51)
  {
    uint64_t v52 = sub_100011A28(v50, v51);
    sub_100030118((uint64_t)v52, 0x7265746F6F66LL, 0xE600000000000000LL);
  }

  uint64_t v53 = sub_100011A3C(v50, (SEL *)&selRef_informativeText);
  if (v54)
  {
    uint64_t v55 = sub_100011A28(v53, v54);
    sub_100030118((uint64_t)v55, 0x74616D726F666E69LL, 0xEF74786554657669LL);
  }

  uint64_t v56 = sub_100011A3C(v53, (SEL *)&selRef_title);
  if (v57)
  {
    uint64_t v58 = sub_100011A28(v56, v57);
    sub_100030118((uint64_t)v58, 0x656C746974LL, 0xE500000000000000LL);
  }

  return v69;
}

uint64_t sub_1000119E0(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001CF970);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

id sub_100011A20(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

void *sub_100011A28(uint64_t a1, uint64_t a2)
{
  void v2[9] = v3;
  v2[6] = a1;
  v2[7] = a2;
  return v2 + 6;
}

uint64_t sub_100011A3C(uint64_t a1, SEL *a2)
{
  return sub_10000D6DC(v2, a2);
}

void sub_100011A44()
{
}

void sub_100011A50()
{
  uint64_t v0 = sub_100011B34(0x45534D41u);
  id v2 = sub_100067AF4(v0, v1 | 0xED00007400000000LL, (void *)0x31);
  id v3 = objc_allocWithZone(&OBJC_CLASS___AMSMetrics);
  sub_100011B34(0x65736D61u);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithContainerID:v4 bag:v2];

  qword_1001DBAB0 = (uint64_t)v5;
}

unint64_t sub_100011AF8()
{
  unint64_t result = qword_1001CD670;
  if (!qword_1001CD670)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___AMSBag);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001CD670);
  }

  return result;
}

uint64_t sub_100011B34(unsigned int a1)
{
  return a1 | 0x6761676E00000000LL;
}

uint64_t sub_100011B48(char *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v43 = a3;
  int v5 = a2 & 1;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1001C7FD8 != -1) {
    swift_once(&qword_1001C7FD8, sub_1000BD6C0);
  }
  uint64_t v42 = qword_1001DBB58;
  uint64_t v9 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v10 = type metadata accessor for LogMessage(0LL);
  uint64_t v11 = swift_allocObject( v9,  ((*(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v10 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v10 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v48 = (void *)sub_10000D33C(&qword_1001C8E80);
  v47[0] = &type metadata for AppActivityManager;
  id v12 = (id)AMSLogKey(v48);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    HIDWORD(v41) = v5;
    uint64_t v16 = v15;

    swift_bridgeObjectRetain(v16);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v17._countAndFlagsBits = 0LL;
    v17._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    id v18 = v48;
    id v19 = sub_10000D37C(v47, (uint64_t)v48);
    uint64_t DynamicType = swift_getDynamicType(v19, v18, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    *(void *)&__int128 v45 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v45);
    sub_100019E6C((uint64_t)&v45, &qword_1001CAAD0);
    v21._countAndFlagsBits = 5972026LL;
    v21._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&__int128 v45 = v14;
    *((void *)&v45 + 1) = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v45);
    sub_100019E6C((uint64_t)&v45, &qword_1001CAAD0);
    v22._countAndFlagsBits = 93LL;
    v22._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    LogMessage.init(stringInterpolation:)(v8);
    int v5 = HIDWORD(v41);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v23._countAndFlagsBits = 0LL;
    v23._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    id v24 = v48;
    uint64_t v25 = sub_10000D37C(v47, (uint64_t)v48);
    uint64_t v26 = swift_getDynamicType(v25, v24, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v26);
    *(void *)&__int128 v45 = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v45);
    sub_100019E6C((uint64_t)&v45, &qword_1001CAAD0);
    v27._countAndFlagsBits = 58LL;
    v27._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)(v8);
  }

  sub_10000D3A0(v47);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(34LL, 2LL);
  v28._object = (void *)0x800000010016B740LL;
  v28._countAndFlagsBits = 0xD000000000000016LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v28);
  uint64_t v48 = (void *)type metadata accessor for ScheduleInfo.Metadata(0LL);
  id v29 = sub_10000D63C(v47);
  sub_100019DF8((uint64_t)a1, (uint64_t)v29, type metadata accessor for ScheduleInfo.Metadata);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v47);
  sub_100019E6C((uint64_t)v47, &qword_1001CAAD0);
  v30._countAndFlagsBits = 0x7974206874697720LL;
  v30._object = (void *)0xEC000000203A6570LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  uint64_t v48 = &unk_1001B3EA0;
  LOBYTE(v47[0]) = v5;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v47);
  sub_100019E6C((uint64_t)v47, &qword_1001CAAD0);
  v31._countAndFlagsBits = 0LL;
  v31._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v31);
  uint64_t v32 = LogMessage.init(stringInterpolation:)(v8);
  uint64_t v33 = static os_log_type_t.default.getter(v32);
  sub_1000BD1B0(v33, v11);
  swift_bridgeObjectRelease();
  char v34 = *a1;
  sub_100111D74();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_10010FFE8((uint64_t)v47);
  sub_100019EEC(v43, (uint64_t)&v45);
  sub_100019EEC(v49, (uint64_t)v44);
  uint64_t v39 = swift_allocObject(&unk_1001A8640, 120LL, 7LL);
  *(void *)(v39 + swift_weakDestroy(v0 + 16) = v36;
  *(void *)(v39 + 24) = v38;
  sub_100019F60(&v45, v39 + 32);
  *(_BYTE *)(v39 + 72) = v34;
  sub_100019F60(v44, v39 + 80);
  swift_bridgeObjectRetain(v38);
  if (v5) {
    sub_100152004();
  }
  else {
    sub_100151D58();
  }
  swift_release(v39);
  return swift_bridgeObjectRelease();
}

void sub_100011F98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TimeZone(0LL);
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  sub_10000DC8C();
  __chkstk_darwin(v5);
  sub_10000DD5C();
  uint64_t v62 = v6;
  sub_10000D33C(&qword_1001CF970);
  sub_10000DC8C();
  __chkstk_darwin(v7);
  sub_10001A284();
  uint64_t v60 = v8;
  sub_10001A210();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v67 = *(void *)(v12 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v13);
  sub_10001A284();
  uint64_t v69 = v14;
  sub_10001A210();
  __chkstk_darwin(v15);
  sub_10001A3B0();
  uint64_t v59 = v16;
  sub_10001A210();
  __chkstk_darwin(v17);
  sub_10001A3B0();
  uint64_t v61 = v18;
  sub_10001A210();
  __chkstk_darwin(v19);
  sub_10001A3B0();
  uint64_t v70 = v20;
  sub_10001A210();
  __chkstk_darwin(v21);
  uint64_t v68 = (char *)&v55 - v22;
  Swift::String v23 = (int *)type metadata accessor for ScheduleInfo.Metadata(0LL);
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = __chkstk_darwin(v23);
  Swift::String v27 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  sub_10001A3B0();
  uint64_t v65 = v28;
  sub_10001A210();
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v55 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = *(void *)(a1 + 16);
  if (!v34)
  {
    sub_10000D5C0(a2, 1LL, 1LL, (uint64_t)v23);
    return;
  }

  uint64_t v55 = a2;
  unint64_t v35 = (*(unsigned __int8 *)(v24 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v71 = (uint64_t)&v55 - v33;
  sub_100019DF8(a1 + v35, (uint64_t)&v55 - v33, type metadata accessor for ScheduleInfo.Metadata);
  uint64_t v56 = a1;
  swift_bridgeObjectRetain(a1);
  uint64_t v36 = v34 - 1;
  if (!v36)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v54 = v55;
    sub_100019E94(v71, v55, type metadata accessor for ScheduleInfo.Metadata);
    sub_10000D5C0(v54, 0LL, 1LL, (uint64_t)v23);
    sub_10001A30C();
    return;
  }

  uint64_t v57 = *(void *)(v24 + 72);
  uint64_t v37 = v56 + v57 + v35;
  uint64_t v58 = v11;
  uint64_t v66 = v27;
  while (1)
  {
    sub_10001A580(v37, (uint64_t)v32);
    sub_100019E24((uint64_t)&v32[v23[8]], (uint64_t)v11);
    uint64_t v38 = v65;
    sub_10001A580((uint64_t)v32, v65);
    if (sub_1000102D4((uint64_t)v11, 1LL, v12) == 1)
    {
      uint64_t v39 = v67;
      sub_10001A47C(v70, v38 + v23[6], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 16));
      sub_10001A37C(v38);
      sub_100019E6C((uint64_t)v11, &qword_1001CF970);
    }

    else
    {
      sub_10001A37C(v38);
      uint64_t v39 = v67;
      sub_10001A47C(v70, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 32));
    }

    double v40 = *(double *)&v32[v23[10]];
    double v41 = 0.0;
    uint64_t v42 = v71;
    if (v32[v23[9]] == 1) {
      break;
    }
LABEL_10:
    uint64_t v45 = v70;
    Date.addingTimeInterval(_:)(v40 + v41);
    sub_10001A2E0(v45);
    uint64_t v46 = v60;
    sub_100019E24(v42 + v23[8], v60);
    sub_10001A580(v42, (uint64_t)v27);
    if (sub_1000102D4(v46, 1LL, v12) == 1)
    {
      sub_10001A47C(v69, (uint64_t)&v27[v23[6]], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16));
      sub_10001A37C((uint64_t)v27);
      sub_100019E6C(v46, &qword_1001CF970);
    }

    else
    {
      sub_10001A37C((uint64_t)v27);
      sub_10001A47C(v69, v46, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32));
    }

    uint64_t v47 = v71;
    double v48 = *(double *)(v71 + v23[10]);
    double v49 = 0.0;
    if (*(_BYTE *)(v71 + v23[9]) == 1)
    {
      sub_10001A678();
      sub_10001A3FC();
      uint64_t v50 = sub_10001A3F4();
      sub_10001A2A0();
      sub_10001A51C();
      sub_10001A3FC();
      uint64_t v51 = sub_10001A3F4();
      sub_10001A2A0();
      if (__OFSUB__(v50, v51)) {
        goto LABEL_23;
      }
      double v49 = (double)(v50 - v51);
    }

    uint64_t v52 = v59;
    uint64_t v53 = v69;
    Date.addingTimeInterval(_:)(v48 + v49);
    sub_10001A2E0(v53);
    LOBYTE(v53) = static Date.< infix(_:_:)(v68, v52);
    sub_10001A2E0(v52);
    sub_10001A2A0();
    if ((v53 & 1) != 0)
    {
      sub_10001A37C(v47);
      sub_100019E94((uint64_t)v32, v47, type metadata accessor for ScheduleInfo.Metadata);
    }

    else
    {
      sub_10001A37C((uint64_t)v32);
    }

    uint64_t v11 = v58;
    v37 += v57;
    --v36;
    Swift::String v27 = v66;
    if (!v36) {
      goto LABEL_20;
    }
  }

  sub_10001A678();
  sub_10001A3FC();
  uint64_t v43 = sub_10001A3F4();
  sub_10001A2A0();
  sub_10001A51C();
  sub_10001A3FC();
  uint64_t v44 = sub_10001A3F4();
  sub_10001A2A0();
  if (!__OFSUB__(v43, v44))
  {
    double v41 = (double)(v43 - v44);
    Swift::String v27 = v66;
    uint64_t v39 = v67;
    goto LABEL_10;
  }

  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t sub_1000124C0(unsigned __int8 *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = sub_10010FDAC(v7);
  if ((result & 1) != 0)
  {
    if (qword_1001C7FD8 != -1) {
      swift_once(&qword_1001C7FD8, sub_1000BD6C0);
    }
    uint64_t v44 = qword_1001DBB58;
    uint64_t v11 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v12 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v13 = *(void *)(v12 + 72);
    uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v39 = v13;
    uint64_t v15 = swift_allocObject(v11, ((v14 + 32) & ~v14) + 2 * v13, v14 | 7);
    *(_OWORD *)(v15 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v43 = sub_10000D33C(&qword_1001C8E80);
    v42[0] = &type metadata for AppActivityManager;
    id v16 = (id)AMSLogKey(v43);
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      uint64_t v38 = a2;
      uint64_t v19 = v18;

      swift_bridgeObjectRetain(v19);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v20._countAndFlagsBits = 0LL;
      v20._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t v21 = v43;
      uint64_t v22 = sub_10000D37C(v42, v43);
      uint64_t DynamicType = swift_getDynamicType(v22, v21, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v40[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
      sub_100019E6C((uint64_t)v40, &qword_1001CAAD0);
      v24._countAndFlagsBits = 5972026LL;
      v24._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t MetatypeMetadata = &type metadata for String;
      v40[0] = v37;
      v40[1] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
      sub_100019E6C((uint64_t)v40, &qword_1001CAAD0);
      v25._countAndFlagsBits = 93LL;
      v25._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)(v9);
      a2 = v38;
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v26._countAndFlagsBits = 0LL;
      v26._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t v27 = v43;
      uint64_t v28 = sub_10000D37C(v42, v43);
      uint64_t v29 = swift_getDynamicType(v28, v27, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v29);
      v40[0] = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
      sub_100019E6C((uint64_t)v40, &qword_1001CAAD0);
      v30._countAndFlagsBits = 58LL;
      v30._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)(v9);
    }

    sub_10000D3A0(v42);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(39LL, 1LL);
    v31._object = (void *)0x800000010016B660LL;
    v31._countAndFlagsBits = 0xD000000000000027LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    uint64_t v43 = type metadata accessor for ScheduleInfo.Metadata(0LL);
    uint64_t v32 = sub_10000D63C(v42);
    sub_100019DF8((uint64_t)a1, (uint64_t)v32, type metadata accessor for ScheduleInfo.Metadata);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
    sub_100019E6C((uint64_t)v42, &qword_1001CAAD0);
    v33._countAndFlagsBits = 0LL;
    v33._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    uint64_t v34 = LogMessage.init(stringInterpolation:)(v9);
    uint64_t v35 = static os_log_type_t.default.getter(v34);
    sub_1000BD1B0(v35, v15);
    swift_bridgeObjectRelease();
    sub_10000D37C(a2, a2[3]);
    sub_10000D37C(a3, a3[3]);
    return sub_100017958(a1);
  }

  return result;
}

uint64_t sub_100012844()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0LL);
  __chkstk_darwin(v0);
  id v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(2LL);
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  id v3 = (void *)qword_1001DBBB8;
  uint64_t v4 = type metadata accessor for Debouncer();
  swift_allocObject(v4, 32LL, 7LL);
  uint64_t result = sub_100049804((uint64_t)v2, v3, (uint64_t)sub_100012914, 0LL);
  qword_1001DBAB8 = result;
  return result;
}

void sub_100012914()
{
}

uint64_t sub_10001291C()
{
  return sub_100131D08(0, (void (*)(void))sub_100019FA8);
}

uint64_t sub_1000129BC( char a1, void **a2, uint64_t a3, void *a4, unsigned int a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v132 = a7;
  uint64_t v133 = a8;
  v126 = a6;
  unsigned int v131 = a5;
  v130 = a4;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v129 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v134 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_10000D33C(&qword_1001C9E00);
  __chkstk_darwin(v18);
  Swift::String v20 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for ScheduleInfo(0LL);
  __chkstk_darwin(v21);
  uint64_t v125 = (uint64_t)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v23);
  Swift::String v25 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a1 & 1) != 0)
  {
    uint64_t v123 = v13;
    v127 = a2;
    if (qword_1001C7FD8 != -1) {
      swift_once(&qword_1001C7FD8, sub_1000BD6C0);
    }
    uint64_t v121 = v16;
    v122 = v15;
    uint64_t v124 = v12;
    uint64_t v120 = a9;
    uint64_t v26 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v27 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v28 = *(void *)(v27 + 72);
    uint64_t v29 = *(unsigned __int8 *)(v27 + 80);
    uint64_t v30 = (v29 + 32) & ~v29;
    uint64_t v128 = v28;
    uint64_t v119 = v26;
    uint64_t v117 = v30 + 2 * v28;
    uint64_t v116 = v29 | 7;
    uint64_t v31 = swift_allocObject(v26, v117, v29 | 7);
    __int128 v115 = xmmword_100164230;
    *(_OWORD *)(v31 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v118 = v30;
    v114 = (void *)sub_10000D33C(&qword_1001C8E80);
    v138 = v114;
    aBlock = (void **)&type metadata for AppActivityManager;
    id v32 = (id)AMSLogKey(v114);
    if (v32)
    {
      Swift::String v33 = v32;
      uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      uint64_t v35 = v34;

      swift_bridgeObjectRetain(v35);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v36._countAndFlagsBits = 0LL;
      v36._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t v37 = v138;
      uint64_t v38 = sub_10000D37C(&aBlock, (uint64_t)v138);
      uint64_t DynamicType = swift_getDynamicType(v38, v37, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v141 = (void *)DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
      sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
      v40._countAndFlagsBits = 5972026LL;
      v40._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      uint64_t MetatypeMetadata = &type metadata for String;
      v141 = (void *)v113;
      uint64_t v142 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
      sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
      v41._countAndFlagsBits = 93LL;
      v41._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      LogMessage.init(stringInterpolation:)(v25);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v59._countAndFlagsBits = 0LL;
      v59._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      uint64_t v60 = v138;
      uint64_t v61 = sub_10000D37C(&aBlock, (uint64_t)v138);
      uint64_t v62 = swift_getDynamicType(v61, v60, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v62);
      v141 = (void *)v62;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
      sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
      v63._countAndFlagsBits = 58LL;
      v63._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      LogMessage.init(stringInterpolation:)(v25);
    }

    sub_10000D3A0(&aBlock);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(42LL, 1LL);
    v64._countAndFlagsBits = 0xD000000000000029LL;
    v64._object = (void *)0x800000010016B790LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v64);
    v138 = &type metadata for String;
    uint64_t v65 = (uint64_t)v127;
    aBlock = v127;
    uint64_t v136 = a3;
    swift_bridgeObjectRetain(a3);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock);
    sub_100019E6C((uint64_t)&aBlock, &qword_1001CAAD0);
    v66._countAndFlagsBits = 41LL;
    v66._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v66);
    uint64_t v67 = LogMessage.init(stringInterpolation:)(v25);
    uint64_t v68 = static os_log_type_t.default.getter(v67);
    sub_1000BD1B0(v68, v31);
    swift_bridgeObjectRelease();
    sub_10000D37C(v130, v130[3]);
    sub_10010F90C(v65, a3, v131, (uint64_t)v20);
    int v79 = sub_1000102D4((uint64_t)v20, 1LL, v21);
    if (v79 == 1)
    {
      sub_100019E6C((uint64_t)v20, &qword_1001C9E00);
      uint64_t v80 = swift_allocObject(v119, v117, v116);
      *(_OWORD *)(v80 + swift_weakDestroy(v0 + 16) = v115;
      v138 = v114;
      aBlock = (void **)&type metadata for AppActivityManager;
      id v81 = (id)AMSLogKey(v80);
      if (v81)
      {
        v82 = v81;
        uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v81);
        uint64_t v85 = v84;

        swift_bridgeObjectRetain(v85);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v86._countAndFlagsBits = 0LL;
        v86._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v86);
        v87 = v138;
        v88 = sub_10000D37C(&aBlock, (uint64_t)v138);
        uint64_t v89 = swift_getDynamicType(v88, v87, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v89);
        v141 = (void *)v89;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
        sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
        v90._countAndFlagsBits = 5972026LL;
        v90._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v90);
        uint64_t MetatypeMetadata = &type metadata for String;
        v141 = (void *)v83;
        uint64_t v142 = v85;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
        sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
        v91._countAndFlagsBits = 93LL;
        v91._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v91);
        LogMessage.init(stringInterpolation:)(v25);
        uint64_t v65 = (uint64_t)v127;
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v92._countAndFlagsBits = 0LL;
        v92._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v92);
        v93 = v138;
        v94 = sub_10000D37C(&aBlock, (uint64_t)v138);
        uint64_t v95 = swift_getDynamicType(v94, v93, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v95);
        v141 = (void *)v95;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
        sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
        v96._countAndFlagsBits = 58LL;
        v96._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v96);
        LogMessage.init(stringInterpolation:)(v25);
      }

      uint64_t v97 = v129;
      sub_10000D3A0(&aBlock);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(65LL, 1LL);
      v98._countAndFlagsBits = 0xD000000000000040LL;
      v98._object = (void *)0x800000010016B7C0LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v98);
      v138 = &type metadata for String;
      aBlock = (void **)v65;
      uint64_t v136 = a3;
      swift_bridgeObjectRetain(a3);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock);
      sub_100019E6C((uint64_t)&aBlock, &qword_1001CAAD0);
      v99._countAndFlagsBits = 41LL;
      v99._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v99);
      uint64_t v100 = LogMessage.init(stringInterpolation:)(v25);
      uint64_t v101 = static os_log_type_t.error.getter(v100);
      sub_1000BD1B0(v101, v80);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v112 = v125;
      sub_100019E94((uint64_t)v20, v125, type metadata accessor for ScheduleInfo);
      sub_10000D37C(v126, v126[3]);
      sub_100051BA0(v112);
      sub_100019EC0(v112, type metadata accessor for ScheduleInfo);
      uint64_t v97 = v129;
    }

    sub_100151904();
    uint64_t v102 = v121;
    if (qword_1001C80A8 != -1) {
      swift_once(&qword_1001C80A8, sub_10010D4CC);
    }
    v139 = sub_1000135A0;
    uint64_t v140 = 0LL;
    aBlock = _NSConcreteStackBlock;
    uint64_t v136 = 1107296256LL;
    v137 = sub_100021A3C;
    v138 = &unk_1001A8658;
    v103 = _Block_copy(&aBlock);
    v104 = v134;
    static DispatchQoS.unspecified.getter(v103);
    v141 = _swiftEmptyArrayStorage;
    sub_10000D904( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v106 = v105;
    uint64_t v107 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
    sub_10000D890((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
    v108 = v122;
    uint64_t v109 = v107;
    uint64_t v110 = v124;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v141, v109, v111, v124, v106);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v104, v108, v103);
    _Block_release(v103);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v108, v110);
    return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v104, v102);
  }

  else
  {
    if (qword_1001C7FD8 != -1) {
      swift_once(&qword_1001C7FD8, sub_1000BD6C0);
    }
    uint64_t v42 = qword_1001DBB58;
    uint64_t v43 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v44 = type metadata accessor for LogMessage(0LL);
    uint64_t v45 = swift_allocObject( v43,  ((*(unsigned __int8 *)(*(void *)(v44 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v44 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v44 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v44 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v45 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    v138 = (void *)sub_10000D33C(&qword_1001C8E80);
    aBlock = (void **)&type metadata for AppActivityManager;
    id v46 = (id)AMSLogKey(v138);
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = a3;
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v134 = (char *)v42;
      uint64_t v50 = a2;
      uint64_t v52 = v51;

      swift_bridgeObjectRetain(v52);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v53._countAndFlagsBits = 0LL;
      v53._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      uint64_t v54 = v138;
      uint64_t v55 = sub_10000D37C(&aBlock, (uint64_t)v138);
      uint64_t v56 = swift_getDynamicType(v55, v54, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v56);
      v141 = (void *)v56;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
      sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
      v57._countAndFlagsBits = 5972026LL;
      v57._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      uint64_t MetatypeMetadata = &type metadata for String;
      v141 = (void *)v49;
      a3 = v48;
      uint64_t v142 = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
      sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
      v58._countAndFlagsBits = 93LL;
      v58._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      LogMessage.init(stringInterpolation:)(v25);
      a2 = v50;
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v69._countAndFlagsBits = 0LL;
      v69._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v69);
      uint64_t v70 = v138;
      uint64_t v71 = sub_10000D37C(&aBlock, (uint64_t)v138);
      uint64_t v72 = swift_getDynamicType(v71, v70, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v72);
      v141 = (void *)v72;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v141);
      sub_100019E6C((uint64_t)&v141, &qword_1001CAAD0);
      v73._countAndFlagsBits = 58LL;
      v73._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v73);
      LogMessage.init(stringInterpolation:)(v25);
    }

    sub_10000D3A0(&aBlock);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(39LL, 1LL);
    v74._object = (void *)0x800000010016B760LL;
    v74._countAndFlagsBits = 0xD000000000000026LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v74);
    v138 = &type metadata for String;
    aBlock = a2;
    uint64_t v136 = a3;
    swift_bridgeObjectRetain(a3);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock);
    sub_100019E6C((uint64_t)&aBlock, &qword_1001CAAD0);
    v75._countAndFlagsBits = 41LL;
    v75._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v75);
    uint64_t v76 = LogMessage.init(stringInterpolation:)(v25);
    uint64_t v77 = static os_log_type_t.default.getter(v76);
    sub_1000BD1B0(v77, v45);
    return swift_bridgeObjectRelease();
  }

uint64_t sub_1000135A0()
{
  uint64_t v0 = type metadata accessor for ActivityObserver();
  swift_initStaticObject(v0, &unk_1001C8108);
  return sub_10000F1D8(1LL);
}

uint64_t sub_1000135D8(uint64_t a1)
{
  if (qword_1001C7FD8 != -1) {
    swift_once(&qword_1001C7FD8, sub_1000BD6C0);
  }
  sub_10000D33C(&qword_1001C9C70);
  sub_100010570();
  sub_10001A5F8();
  uint64_t v6 = v5 & ~v4;
  uint64_t v31 = v7;
  uint64_t v8 = swift_allocObject(v1, v6 + 2 * v7, v4 | 7);
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v33 = sub_10000D33C(&qword_1001C8E80);
  id v9 = (id)sub_10001A560((uint64_t)&type metadata for AppActivityManager);
  if (v9)
  {
    sub_1000105E8((uint64_t)v9);
    uint64_t v11 = v10;

    swift_bridgeObjectRetain(v11);
    sub_100010564();
    sub_1000104F0();
    sub_1000104C0(&v32);
    uint64_t v12 = sub_100010530();
    sub_10001A0CC(v12);
    sub_10001A634();
    sub_10000DC14();
    sub_10000DF68();
    sub_10001A634();
    sub_10000DC4C(93LL);
    sub_10001A298();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A1BC();
    sub_1000104F0();
    sub_1000104C0(&v32);
    uint64_t v13 = sub_100010530();
    uint64_t v14 = sub_10001A0CC(v13);
    sub_10001A62C(v14, &qword_1001CAAD0);
    sub_10001A1B0();
    sub_10001A298();
  }

  sub_10000D3A0(&v32);
  sub_10001A21C(21LL);
  v34._object = (void *)0x800000010016B4D0LL;
  v34._countAndFlagsBits = 0xD000000000000015LL;
  sub_10001A2AC(v34);
  uint64_t v15 = type metadata accessor for ScheduleInfo(0LL);
  uint64_t v33 = v15;
  uint64_t v16 = sub_10001A658();
  sub_100019DF8(a1, (uint64_t)v16, type metadata accessor for ScheduleInfo);
  sub_10001A66C();
  sub_100019E6C((uint64_t)&v32, &qword_1001CAAD0);
  sub_10000DC08();
  uint64_t v17 = sub_10001A298();
  uint64_t v18 = static os_log_type_t.default.getter(v17);
  sub_1000BD1B0(v18, v8);
  swift_bridgeObjectRelease();
  BOOL v19 = sub_10010EAD4((unsigned __int8 *)(a1 + *(int *)(v15 + 20)));
  if ((*(_BYTE *)(a1 + *(int *)(v15 + 24)) & 1) != 0 || !v19)
  {
    sub_10010ED38(a1);
    if (qword_1001C7F08 != -1) {
      swift_once(&qword_1001C7F08, sub_100012844);
    }
    swift_retain(qword_1001DBAB8);
    uint64_t v29 = sub_10000D33C((uint64_t *)&unk_1001CD390);
    sub_10000D890((unint64_t *)&unk_1001CACF0, (uint64_t *)&unk_1001CD390);
    Subject<>.send()(v29, v30);
    return sub_10001A2D8();
  }

  else
  {
    Swift::String v20 = (__n128 *)sub_10001A5C0();
    sub_10001A460(v20);
    id v21 = (id)sub_10001A560((uint64_t)&type metadata for AppActivityManager);
    if (v21)
    {
      sub_1000105E8((uint64_t)v21);
      sub_10001A5B8();
      sub_10000DD9C();
      sub_100010564();
      sub_1000104F0();
      sub_1000104C0(&v32);
      uint64_t v22 = sub_100010530();
      sub_10001A0CC(v22);
      sub_10001A620();
      sub_10000DC14();
      sub_10000DF68();
      sub_10001A620();
      sub_10000DC4C(93LL);
      sub_10001A1F4();
      sub_10000DCFC();
    }

    else
    {
      sub_10001A1BC();
      sub_1000104F0();
      sub_1000104C0(&v32);
      uint64_t v23 = sub_100010530();
      uint64_t v24 = sub_10001A0CC(v23);
      sub_10001A62C(v24, &qword_1001CAAD0);
      sub_10001A1B0();
      sub_10001A1F4();
    }

    sub_10000D3A0(&v32);
    sub_10001A21C(25LL);
    v35._countAndFlagsBits = 0xD000000000000019LL;
    v35._object = (void *)0x800000010016B520LL;
    sub_10001A2AC(v35);
    uint64_t v33 = v15;
    Swift::String v25 = sub_10001A658();
    sub_100019DF8(a1, (uint64_t)v25, type metadata accessor for ScheduleInfo);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v32);
    sub_100019E6C((uint64_t)&v32, &qword_1001CAAD0);
    sub_10000DC08();
    uint64_t v26 = sub_10001A1F4();
    uint64_t v27 = static os_log_type_t.debug.getter(v26);
    sub_1000BD1B0(v27, v8 + v6 + v31);
    return sub_10000DE2C();
  }

void sub_100013C00()
{
}

void sub_100013C1C()
{
}

void sub_100013C30()
{
}

void sub_100013C44()
{
  if ((v4 & 1) != 0)
  {
    sub_10001A068();
    if (v5 != v6)
    {
      sub_10001A0E0();
      if (v5)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A53C();
  if (v3)
  {
    uint64_t v12 = sub_10001A1C8(v7, v8, v9, v10, v11);
    uint64_t v13 = (char *)sub_10001A0C0(v12, 8 * v3);
    size_t v14 = j__malloc_size(v13);
    sub_10001A454((uint64_t)(v14 - 32) / 8);
  }

  else
  {
    uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  }

  if ((v1 & 1) != 0)
  {
    sub_100016004((char *)(v0 + 32), v2, v13 + 32);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v15 = sub_10001A3BC();
    sub_1000154BC(v15, v16, v17, v18, v19);
  }

  sub_10001A094();
}

void sub_100013CE8()
{
}

void sub_100013D04()
{
}

void sub_100013D20()
{
}

void sub_100013D34()
{
  if ((v5 & 1) != 0)
  {
    sub_10001A068();
    if (v6 != v7)
    {
      sub_10001A0E0();
      if (v6)
      {
        __break(1u);
        goto LABEL_18;
      }

      sub_10001A058();
    }
  }

  sub_10001A52C();
  if (v4)
  {
    sub_10001A1C8(v8, v9, v10, v11, v12);
    uint64_t v13 = sub_10001A514();
    size_t v14 = (const void *)sub_10001A10C(v13);
    sub_10001A618(v14);
    if (v3)
    {
      sub_10001A4DC();
      BOOL v16 = v16 && v3 == -1;
      if (!v16)
      {
        sub_10001A454(v15 / v3);
        goto LABEL_13;
      }

      sub_10001A044();
      Swift::String v25 = "Division results in an overflow";
      uint64_t v26 = 31LL;
LABEL_20:
      sub_10001A5AC((uint64_t)"Fatal error", 11LL, 2LL, (uint64_t)v25, v26, v24, (uint64_t)"Swift/IntegerTypes.swift");
      __break(1u);
      return;
    }

LABEL_13:
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(sub_10001A514() - 8) + 80LL);
  uint64_t v18 = (v17 + 32) & ~v17;
  if ((v1 & 1) != 0)
  {
    sub_1000160CC(v0 + v18, v2);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v19 = sub_10001A3BC();
    sub_100015650(v19, v20, v21, v22, v23);
  }

  sub_10001A398();
}

  BOOL v16 = sub_10001A514();
  uint64_t v17 = sub_10001A348(v16);
  if ((v1 & 1) != 0)
  {
    sub_1000160CC(v17, v18);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_100016BC0(v17, v18, v19, v20);
  }

  sub_10001A2D8();
  sub_10000DE10();
}

  uint64_t v17 = sub_10000D33C(v1);
  uint64_t v18 = sub_10001A348(v17);
  if ((v2 & 1) != 0)
  {
    sub_100015D68(v18, v19);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_1000167F4(v18, v19, v20, v21);
  }

  sub_10001A2D8();
  sub_10000DE10();
}

  sub_100029188();
}

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

    uint64_t v11 = (v15 - 1) & v15;
    uint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v10 = v14;
  }

  __break(1u);
}

    uint64_t v9 = (v15 - 1) & v15;
    uint64_t v13 = __clz(__rbit64(v15)) + (v14 << 6);
    uint64_t v8 = v14;
  }

  __break(1u);
  return result;
}

void sub_100013E64()
{
}

void sub_100013E80()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A200();
  if (v1)
  {
    uint64_t v10 = sub_10001A1C8(v5, v6, v7, v8, v9);
    uint64_t v11 = (void *)sub_10001A0C0(v10, 32 * v1);
    size_t v12 = j__malloc_size(v11);
    sub_10001A3E4(v12 - 32);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  if ((v0 & 1) != 0)
  {
    sub_10001A448();
    sub_10001A0B4();
  }

  else
  {
    sub_10001A36C(v5, v6, (uint64_t)(v11 + 4));
  }

  sub_10001A094();
}

void sub_100013F14()
{
}

void sub_100013F30()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A200();
  if (v1)
  {
    uint64_t v10 = sub_10001A1C8(v5, v6, v7, v8, v9);
    uint64_t v11 = (void *)sub_10001A0C0(v10, 16 * v1);
    size_t v12 = j__malloc_size(v11);
    sub_10001A3E4(v12 - 32);
  }

  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }

  if ((v0 & 1) != 0)
  {
    sub_10001A448();
    sub_10001A0B4();
  }

  else
  {
    sub_10001A36C(v5, v6, (uint64_t)(v11 + 4));
  }

  sub_10001A094();
}

void sub_100013FC4()
{
  if ((v3 & 1) != 0)
  {
    sub_10001A068();
    if (v4 != v5)
    {
      sub_10001A0E0();
      if (v4)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v2)
  {
    uint64_t v6 = sub_10000D33C(&qword_1001C8FC0);
    uint64_t v7 = (void *)sub_10000DDDC(v6, v2 + 32);
    size_t v8 = j__malloc_size(v7);
    v7[2] = v1;
    v7[3] = 2 * v8 - 64;
  }

  if ((v0 & 1) != 0)
  {
    uint64_t v9 = (char *)sub_10001A2C0();
    sub_100015C50(v9, v10, v11);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v12 = sub_10001A140();
    sub_100014D50(v12, v13, v14, v15);
  }

  sub_10000DFE8();
}

void sub_100014064()
{
}

void sub_100014078()
{
}

void sub_10001408C()
{
}

void sub_1000140A0()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C8F48);
    uint64_t v6 = (void *)sub_10000DDDC(v5, 40 * v1 + 32);
    sub_10001A1D0(v6);
  }

  if ((v0 & 1) != 0)
  {
    uint64_t v7 = (char *)sub_10001A2C0();
    sub_100015CD0(v7, v8, v9);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v10 = sub_10001A140();
    sub_100014E3C(v10, v11, v12, v13);
  }

  sub_10001A094();
}

void sub_10001413C()
{
  if ((v3 & 1) != 0)
  {
    sub_10001A068();
    if (v5 != v6)
    {
      sub_10001A0E0();
      if (v5)
      {
        __break(1u);
LABEL_22:
        sub_10001A044();
        uint64_t v24 = "Division by zero";
        uint64_t v25 = 16LL;
LABEL_24:
        sub_10001A5AC((uint64_t)"Fatal error", 11LL, 2LL, (uint64_t)v24, v25, v23, (uint64_t)"Swift/IntegerTypes.swift");
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  else
  {
    uint64_t v4 = v2;
  }

  uint64_t v7 = *(void *)(v0 + 16);
  if (v4 <= v7) {
    uint64_t v8 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v8 = v4;
  }
  if (!v8) {
    goto LABEL_17;
  }
  uint64_t v9 = sub_10000D33C(&qword_1001C8F28);
  uint64_t v10 = *(void *)(sub_10000D33C(&qword_1001C8F20) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  size_t v14 = (const void *)swift_allocObject(v9, v13 + v11 * v8, v12 | 7);
  size_t v15 = j__malloc_size(v14);
  if (!v11) {
    goto LABEL_22;
  }
  if (v15 - v13 == 0x8000000000000000LL && v11 == -1)
  {
    sub_10001A044();
    uint64_t v24 = "Division results in an overflow";
    uint64_t v25 = 31LL;
    goto LABEL_24;
  }

  sub_10001A2CC((uint64_t)(v15 - v13) / v11);
LABEL_17:
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(sub_10000D33C(&qword_1001C8F20) - 8) + 80LL);
  uint64_t v18 = (v17 + 32) & ~v17;
  if ((v1 & 1) != 0)
  {
    sub_100015D68(v0 + v18, v7);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v19 = sub_10001A140();
    sub_100014F58(v19, v20, v21, v22);
  }

  sub_10001A398();
}

void sub_1000142BC()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C8EA8);
    char v6 = (void *)sub_10000DDDC(v5, 80 * v1 + 32);
    sub_10001A1D0(v6);
  }

  if ((v0 & 1) != 0)
  {
    uint64_t v7 = (char *)sub_10001A2C0();
    sub_100015DFC(v7, v8, v9);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v10 = sub_10001A140();
    sub_10001507C(v10, v11, v12, v13);
  }

  sub_10001A094();
}

void sub_100014358()
{
}

void sub_10001436C()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C8E98);
    char v6 = (const void *)sub_10001A0C0(v5, 8 * v1);
    size_t v7 = j__malloc_size(v6);
    sub_10001A2CC((uint64_t)(v7 - 32) / 8);
  }

  if ((v0 & 1) != 0)
  {
    uint64_t v8 = (char *)sub_10001A2C0();
    sub_100016004(v8, v9, v10);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v11 = sub_10001A140();
    sub_100015178(v11, v12, v13, v14);
  }

  sub_10000DFE8();
}

void sub_100014410()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C8BC0);
    char v6 = (void *)sub_10000DDDC(v5, 48 * v1 + 32);
    sub_10001A1D0(v6);
  }

  if ((v0 & 1) != 0)
  {
    size_t v7 = (char *)sub_10001A2C0();
    sub_100015F74(v7, v8, v9);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v10 = sub_10001A140();
    sub_10001528C(v10, v11, v12, v13);
  }

  sub_10001A094();
}

void sub_1000144AC()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C8FA0);
    char v6 = (const void *)sub_10001A0C0(v5, 16 * v1);
    size_t v7 = j__malloc_size(v6);
    sub_10001A2CC((uint64_t)(v7 - 32) / 16);
  }

  if ((v0 & 1) != 0)
  {
    uint64_t v8 = (char *)sub_10001A2C0();
    sub_100015BEC(v8, v9, v10);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v11 = sub_10001A140();
    sub_1000153A8(v11, v12, v13, v14);
  }

  sub_10000DFE8();
}

void sub_100014550()
{
}

void sub_100014564()
{
}

void sub_100014578()
{
}

void sub_10001458C()
{
  if ((v4 & 1) != 0)
  {
    sub_10001A068();
    if (v5 != v6)
    {
      sub_10001A0E0();
      if (v5)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A53C();
  if (v3)
  {
    uint64_t v12 = sub_10001A1C8(v7, v8, v9, v10, v11);
    unint64_t v13 = (char *)sub_10001A0C0(v12, 32 * v3);
    size_t v14 = j__malloc_size(v13);
    sub_10001A454((uint64_t)(v14 - 32) / 32);
  }

  else
  {
    unint64_t v13 = (char *)_swiftEmptyArrayStorage;
  }

  if ((v1 & 1) != 0)
  {
    sub_100016068((char *)(v0 + 32), v2, v13 + 32);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v15 = sub_10001A3BC();
    sub_100015594(v15, v16, v17, v18);
  }

  sub_10001A094();
}

void sub_100014630()
{
}

void sub_100014644()
{
}

void sub_100014658()
{
}

void sub_10001466C()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C9018);
    char v6 = (const void *)sub_10001A0C0(v5, 8 * v1);
    size_t v7 = j__malloc_size(v6);
    sub_10001A2CC((uint64_t)(v7 - 32) / 8);
  }

  if ((v0 & 1) != 0)
  {
    unint64_t v8 = sub_10001A2C0();
    sub_100016164(v8, v9, v10);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v11 = sub_10001A140();
    sub_10001573C(v11, v12, v13, v14);
  }

  sub_10000DFE8();
}

void sub_100014710()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C8EF0);
    char v6 = (const void *)sub_10001A0C0(v5, 2 * v1);
    size_t v7 = j__malloc_size(v6);
    sub_10001A2CC((uint64_t)(v7 - 32) / 2);
  }

  if ((v0 & 1) != 0)
  {
    unint64_t v8 = (char *)sub_10001A2C0();
    sub_10001625C(v8, v9, v10);
    sub_10001A0B4();
  }

  else
  {
    uint64_t v11 = sub_10001A140();
    sub_100015850(v11, v12, v13, v14);
  }

  sub_10000DFE8();
}

void sub_1000147B4()
{
}

void sub_1000147D0()
{
  if ((v2 & 1) != 0)
  {
    sub_10001A068();
    if (v3 != v4)
    {
      sub_10001A0E0();
      if (v3)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A200();
  if (v1)
  {
    uint64_t v10 = sub_10001A1C8(v5, v6, v7, v8, v9);
    uint64_t v11 = (void *)sub_10000DDDC(v10, 24LL * (void)v1 + 32);
    size_t v5 = sub_10001A588(v11);
  }

  else
  {
    uint64_t v1 = _swiftEmptyArrayStorage;
  }

  if ((v0 & 1) != 0)
  {
    sub_10001A448();
    sub_10001A0B4();
  }

  else
  {
    sub_10001A36C(v5, v6, (uint64_t)(v1 + 4));
  }

  sub_10000DE10();
}

uint64_t sub_100014860(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    sub_10000D33C(&qword_1001C8FF0);
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100014974(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 32 * a1 + 32;
  unint64_t v7 = a3 + 32 * v4;
  if (v6 >= v7 || v6 + 32 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100014A68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 24 * a1 + 32;
  unint64_t v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100014B64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 32 * a1 + 32;
  unint64_t v7 = a3 + 32 * v4;
  if (v6 >= v7 || v6 + 32 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100014C5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100014D50(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if ((v4 & 0x8000000000000000LL) != 0)
  {
LABEL_9:
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = (char *)(a4 + a1 + 32);
  unint64_t v7 = &__dst[v4];
  if (v6 >= &__dst[v4] || &v6[v4] <= __dst)
  {
    memcpy(__dst, v6, v4);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100014E3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 40 * a1 + 32;
  unint64_t v7 = a3 + 40 * v4;
  if (v6 >= v7 || v6 + 40 * v4 <= a3)
  {
    sub_10000D33C(&qword_1001C8F50);
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100014F58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v8 = *(void *)(sub_10000D33C(&qword_1001C8F20) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  uint64_t v12 = v10 * v4;
  unint64_t v13 = a3 + v12;
  unint64_t v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v13;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10001507C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 80 * a1 + 32;
  unint64_t v7 = a3 + 80 * v4;
  if (v6 >= v7 || v6 + 80 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100015178(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 8 * a1 + 32;
  unint64_t v7 = a3 + 8 * v4;
  if (v6 >= v7 || v6 + 8 * v4 <= a3)
  {
    sub_10000D33C((uint64_t *)&unk_1001CE740);
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10001528C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 48 * a1 + 32;
  unint64_t v7 = a3 + 48 * v4;
  if (v6 >= v7 || v6 + 48 * v4 <= a3)
  {
    sub_10000D33C(&qword_1001CFB00);
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000153A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 16 * a1 + 32;
  unint64_t v7 = a3 + 16 * v4;
  if (v6 >= v7 || v6 + 16 * v4 <= a3)
  {
    sub_10000D33C(&qword_1001C8FA8);
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease();
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000154BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v5 < 0)
  {
LABEL_9:
    sub_10001A044();
    sub_10001A0FC();
    goto LABEL_11;
  }

  unint64_t v7 = a4 + 8 * a1 + 32;
  unint64_t v8 = a3 + 8 * v5;
  if (v7 >= v8 || v7 + 8 * v5 <= a3)
  {
    sub_10001A1C8(a1, a2, a3, a4, a5);
    swift_arrayInitWithCopy(a3);
    sub_100009020();
    return v8;
  }

  sub_10001A044();
  sub_10001A0EC();
LABEL_11:
  uint64_t result = sub_10001A078(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  __break(1u);
  return result;
}

uint64_t sub_100015594(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    sub_10001A044();
    sub_10001A0FC();
    goto LABEL_11;
  }

  unint64_t v5 = a4 + 32 * a1 + 32;
  unint64_t v6 = a3 + 32 * v4;
  if (v5 >= v6 || v5 + 32 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    sub_100009020();
    return v6;
  }

  sub_10001A044();
  sub_10001A0EC();
LABEL_11:
  uint64_t result = sub_10001A078(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  __break(1u);
  return result;
}

uint64_t sub_100015650( uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v5 < 0)
  {
LABEL_9:
    sub_10001A044();
    sub_10001A0FC();
    goto LABEL_11;
  }

  uint64_t v9 = *(void *)(a5(0LL) - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  uint64_t v13 = v11 * v5;
  unint64_t v14 = a3 + v13;
  unint64_t v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    sub_100009020();
    return v14;
  }

  sub_10001A044();
  sub_10001A0EC();
LABEL_11:
  uint64_t result = sub_10001A078(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  __break(1u);
  return result;
}

uint64_t sub_10001573C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v7 = a4 + 8 * a1 + 32;
  unint64_t v8 = a3 + 8 * v4;
  if (v7 >= v8 || v7 + 8 * v4 <= a3)
  {
    sub_10000D33C(&qword_1001C9010);
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v8;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100015850(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = (char *)(a4 + 2 * a1 + 32);
  unint64_t v7 = &__dst[2 * v4];
  if (v6 >= v7 || &v6[2 * v4] <= __dst)
  {
    memcpy(__dst, v6, 2 * v4);
    swift_bridgeObjectRelease(a4);
    return v7;
  }

  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100015940(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v7 = a4 + 24 * a1 + 32;
  unint64_t v8 = a3 + 24 * v4;
  if (v7 >= v8 || v7 + 24 * v4 <= a3)
  {
    sub_10000D33C((uint64_t *)&unk_1001CFB10);
    swift_arrayInitWithCopy(a3);
    swift_bridgeObjectRelease(a4);
    return v8;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100015A5C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }

  return __src;
}

char *sub_100015AE0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }

  return __src;
}

char *sub_100015B64(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }

  return __src;
}

char *sub_100015BEC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001A044();
    uint64_t result = (char *)sub_10001A078( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v4,  (uint64_t)"Swift/UnsafePointer.swift",  v5,  v6,  v7,  v8);
    __break(1u);
  }

  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_10001A084(a3, result);
  }

  return result;
}

char *sub_100015C50(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000LL) != 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }

  return __src;
}

char *sub_100015CD0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }

  return __src;
}

void sub_100015D5C(uint64_t a1, uint64_t a2)
{
}

void sub_100015D68(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A078( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v7,  (uint64_t)"Swift/UnsafePointer.swift",  v8,  v9,  v10,  v11);
    __break(1u);
  }

  else
  {
    sub_10001A49C();
    if (v5 && (sub_10000D33C(v4), sub_10001A5E4(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_10001A504();
      }

      else
      {
        sub_10001A270();
        sub_10001A328();
      }
    }

    else
    {
      sub_10000D33C(v4);
      sub_10001A270();
      sub_10001A338();
    }
  }

char *sub_100015DFC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001A044();
    uint64_t result = (char *)sub_10001A078( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v4,  (uint64_t)"Swift/UnsafePointer.swift",  v5,  v6,  v7,  v8);
    __break(1u);
  }

  else if (a3 != result || &result[80 * a2] <= a3)
  {
    return (char *)sub_10001A084(a3, result);
  }

  return result;
}

char *sub_100015E68(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }

  return __src;
}

char *sub_100015EEC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }

  return __src;
}

char *sub_100015F74(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }

  return __src;
}

char *sub_100016004(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001A044();
    uint64_t result = (char *)sub_10001A078( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v4,  (uint64_t)"Swift/UnsafePointer.swift",  v5,  v6,  v7,  v8);
    __break(1u);
  }

  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_10001A084(a3, result);
  }

  return result;
}

char *sub_100016068(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10001A044();
    uint64_t result = (char *)sub_10001A078( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v4,  (uint64_t)"Swift/UnsafePointer.swift",  v5,  v6,  v7,  v8);
    __break(1u);
  }

  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_10001A084(a3, result);
  }

  return result;
}

void sub_1000160CC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A078( (uint64_t)"Fatal error",  11LL,  2LL,  (uint64_t)"UnsafeMutablePointer.moveInitialize with negative count",  55LL,  v7,  (uint64_t)"Swift/UnsafePointer.swift",  v8,  v9,  v10,  v11);
    __break(1u);
  }

  else
  {
    sub_10001A49C();
    if (v5 && (v4(0LL), sub_10001A5E4(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_10001A504();
      }

      else
      {
        sub_10001A270();
        sub_10001A328();
      }
    }

    else
    {
      v4(0LL);
      sub_10001A270();
      sub_10001A338();
    }
  }

unint64_t sub_100016164(unint64_t result, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    char v9 = 2;
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v9,  1046LL,  0);
    __break(1u);
  }

  else
  {
    unint64_t v5 = result;
    if (a3 >= result && result + 8 * a2 > a3)
    {
      if (a3 != result)
      {
        uint64_t v8 = sub_10000D33C(&qword_1001C9010);
        return swift_arrayInitWithTakeBackToFront(a3, v5, a2, v8);
      }
    }

    else
    {
      uint64_t v7 = sub_10000D33C(&qword_1001C9010);
      return swift_arrayInitWithTakeFrontToBack(a3, v5, a2, v7);
    }
  }

  return result;
}

char *sub_10001625C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[2 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 2 * a2);
  }

  return __src;
}

char *sub_1000162E0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    char v4 = 2;
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v4,  1046LL,  0);
    __break(1u);
  }

  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }

  return __src;
}

uint64_t sub_10001636C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A0FC();
  }

  else
  {
    sub_10001A164();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      BOOL v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      BOOL v5 = 0;
    }

    if (v5 || !v4)
    {
      sub_10000D33C(&qword_1001C9008);
      uint64_t v6 = sub_10001A150();
      return sub_10001A0A4(v6);
    }

    sub_10001A044();
    sub_10001A0EC();
  }

  uint64_t result = sub_10001A078(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  __break(1u);
  return result;
}

uint64_t sub_1000163FC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
    {
      sub_10000D33C(&qword_1001C9000);
      return swift_arrayInitWithCopy(a3);
    }

    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

uint64_t sub_1000164E8(uint64_t a1, uint64_t a2)
{
  return sub_100016CF0(a1, a2);
}

uint64_t sub_1000164F4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A0FC();
  }

  else
  {
    if (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3) {
      return swift_arrayInitWithCopy(a3);
    }
    sub_10001A044();
    sub_10001A0EC();
  }

  uint64_t result = sub_10001A078(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  __break(1u);
  return result;
}

uint64_t sub_100016594(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3) {
      return swift_arrayInitWithCopy(a3);
    }
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

uint64_t sub_100016660(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3) {
      return swift_arrayInitWithCopy(a3);
    }
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

void *sub_100016730(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000LL) != 0)
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst) {
      return memcpy(__dst, __src, __n);
    }
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

uint64_t sub_1000167F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A0FC();
  }

  else
  {
    sub_10000D33C(a4);
    sub_10001A42C();
    if (!v7 && v6)
    {
      BOOL v6 = v5 >= a3;
      BOOL v7 = v5 == a3;
    }

    else
    {
      BOOL v6 = 0;
      BOOL v7 = 0;
    }

    if (v7 || !v6)
    {
      uint64_t v8 = sub_10001A150();
      return sub_10001A0A4(v8);
    }

    sub_10001A044();
    sub_10001A0EC();
  }

  uint64_t result = sub_10001A078(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  __break(1u);
  return result;
}

uint64_t sub_10001688C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (a3 + 80 * a2 <= a1 || a1 + 80 * a2 <= a3) {
      return swift_arrayInitWithCopy(a3);
    }
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

uint64_t sub_10001695C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3) {
      return swift_arrayInitWithCopy(a3);
    }
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

void *sub_100016A28(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (&__dst[8 * a2] <= __src || &__src[8 * a2] <= __dst) {
      return memcpy(__dst, __src, 8 * a2);
    }
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

uint64_t sub_100016AF0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (a3 + 40 * a2 <= a1 || a1 + 40 * a2 <= a3) {
      return swift_arrayInitWithCopy(a3);
    }
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

uint64_t sub_100016BC0(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A0FC();
  }

  else
  {
    a4(0LL);
    sub_10001A42C();
    if (!v7 & v6) {
      BOOL v8 = v5 > a3;
    }
    else {
      BOOL v8 = 0;
    }
    if (!v8)
    {
      uint64_t v9 = sub_10001A150();
      return sub_10001A0A4(v9);
    }

    sub_10001A044();
    sub_10001A0EC();
  }

  uint64_t result = sub_10001A078(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  __break(1u);
  return result;
}

uint64_t sub_100016C58(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A0FC();
  }

  else
  {
    sub_10001A164();
    if (!v6 && v5)
    {
      BOOL v5 = v4 >= v2;
      BOOL v6 = v4 == v2;
    }

    else
    {
      BOOL v5 = 0;
      BOOL v6 = 0;
    }

    if (v6 || !v5)
    {
      sub_10000D33C(v3);
      uint64_t v7 = sub_10001A150();
      return sub_10001A0A4(v7);
    }

    sub_10001A044();
    sub_10001A0EC();
  }

  uint64_t result = sub_10001A078(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
  __break(1u);
  return result;
}

uint64_t sub_100016CE4(uint64_t a1, uint64_t a2)
{
  return sub_100016CF0(a1, a2);
}

uint64_t sub_100016CF0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A0FC();
  }

  else
  {
    sub_10001A164();
    if (!v6 & v5) {
      BOOL v7 = v4 > v2;
    }
    else {
      BOOL v7 = 0;
    }
    if (!v7)
    {
      v3(0LL);
      uint64_t v8 = sub_10001A150();
      return sub_10001A0A4(v8);
    }

    sub_10001A044();
    sub_10001A0EC();
  }

  uint64_t result = sub_10001A078(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  __break(1u);
  return result;
}

uint64_t sub_100016D7C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_10001A044();
    sub_10001A0FC();
  }

  else
  {
    sub_10001A164();
    if (!v5 && v4)
    {
      BOOL v4 = v3 >= v2;
      BOOL v5 = v3 == v2;
    }

    else
    {
      BOOL v4 = 0;
      BOOL v5 = 0;
    }

    if (v5 || !v4)
    {
      sub_10000D33C(&qword_1001C9010);
      uint64_t v6 = sub_10001A150();
      return sub_10001A0A4(v6);
    }

    sub_10001A044();
    sub_10001A0EC();
  }

  uint64_t result = sub_10001A078(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  __break(1u);
  return result;
}

uint64_t sub_100016E0C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
  }

  else
  {
    if (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3)
    {
      sub_10000D33C(&qword_1001C8EE0);
      return swift_arrayInitWithCopy(a3);
    }

    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
  }

  __break(1u);
  return result;
}

void sub_100016EFC()
{
  void *v0 = v1;
}

void sub_100016F30()
{
  void *v0 = v1;
}

void sub_100016F5C()
{
  void *v0 = v1;
}

void sub_100016F88()
{
  void *v0 = v1;
}

void sub_100016FBC()
{
  void *v0 = v1;
}

void sub_100016FF0()
{
  void *v0 = v1;
}

void sub_10001701C()
{
  void *v0 = v1;
}

void sub_100017048()
{
  void *v0 = v1;
}

void sub_100017074()
{
  void *v0 = v1;
}

void sub_1000170A0()
{
  void *v0 = v1;
}

void sub_1000170BC()
{
  void *v0 = v1;
}

void sub_1000170F0()
{
  void *v0 = v1;
}

char *sub_10001711C(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100017590(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_100017138(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100017664(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_100017154(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100017744(a1, a2, a3, *v3);
  *unint64_t v3 = (uint64_t)result;
  return result;
}

void sub_100017170()
{
  void *v0 = v1;
}

void sub_10001719C()
{
  void *v0 = v1;
}

void sub_1000171C8()
{
  void *v0 = v1;
}

void sub_1000171FC()
{
  void *v0 = v1;
}

void sub_100017230()
{
  if ((v5 & 1) != 0)
  {
    sub_10001A068();
    if (v6 != v7)
    {
      sub_10001A0E0();
      if (v6)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A200();
  if (v4)
  {
    uint64_t v13 = sub_10001A1C8(v8, v9, v10, v11, v12);
    uint64_t v14 = (const void *)sub_10001A0C0(v13, 16 * v4);
    size_t v15 = j__malloc_size(v14);
    sub_10001A3E4(v15 - 32);
  }

  uint64_t v16 = sub_10001A4B4();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    v1(v16);
  }

  sub_10001A2D8();
  sub_10001A094();
}

void sub_1000172C8()
{
  if ((v4 & 1) != 0)
  {
    sub_10001A068();
    if (v5 != v6)
    {
      sub_10001A0E0();
      if (v5) {
        goto LABEL_19;
      }
      sub_10001A058();
    }
  }

  sub_10001A52C();
  if (v3)
  {
    sub_10001A1C8(v7, v8, v9, v10, v11);
    uint64_t v12 = sub_10001A514();
    uint64_t v13 = (const void *)sub_10001A10C(v12);
    sub_10001A618(v13);
    if (v2)
    {
      sub_10001A4DC();
      BOOL v15 = v15 && v2 == -1;
      if (!v15)
      {
        sub_10001A454(v14 / v2);
        goto LABEL_13;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }

void sub_10001737C()
{
}

void sub_100017390()
{
  if ((v5 & 1) != 0)
  {
    sub_10001A068();
    if (v6 != v7)
    {
      sub_10001A0E0();
      if (v6) {
        goto LABEL_19;
      }
      sub_10001A058();
    }
  }

  sub_10001A52C();
  if (v4)
  {
    sub_10001A1C8(v8, v9, v10, v11, v12);
    uint64_t v13 = sub_10000D33C(v1);
    uint64_t v14 = (const void *)sub_10001A10C(v13);
    sub_10001A618(v14);
    if (v3)
    {
      sub_10001A4DC();
      BOOL v16 = v16 && v3 == -1;
      if (!v16)
      {
        sub_10001A454(v15 / v3);
        goto LABEL_13;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }

void sub_10001744C()
{
  if ((v3 & 1) != 0)
  {
    sub_10001A068();
    if (v4 != v5)
    {
      sub_10001A0E0();
      if (v4)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A130();
  if (v2)
  {
    uint64_t v6 = sub_10000D33C(&qword_1001C8EA8);
    char v7 = (void *)sub_10000DDDC(v6, 80 * v2 + 32);
    sub_10001A1D0(v7);
  }

  uint64_t v8 = (char *)sub_10001A2C0();
  if ((v1 & 1) != 0)
  {
    sub_100015DFC(v8, v9, v10);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_10001688C((unint64_t)v8, v9, (unint64_t)v10);
  }

  sub_10001A2D8();
  sub_10001A094();
}

void sub_1000174E8()
{
  if ((v4 & 1) != 0)
  {
    sub_10001A068();
    if (v5 != v6)
    {
      sub_10001A0E0();
      if (v5)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A53C();
  if (v3)
  {
    uint64_t v12 = sub_10001A1C8(v7, v8, v9, v10, v11);
    uint64_t v13 = (char *)sub_10001A0C0(v12, 8 * v3);
    size_t v14 = j__malloc_size(v13);
    sub_10001A454((uint64_t)(v14 - 32) / 8);
  }

  else
  {
    uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v15 = (char *)(v0 + 32);
  if ((v1 & 1) != 0)
  {
    sub_100016004(v15, v2, v13 + 32);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_100016C58((uint64_t)v15, v2);
  }

  sub_10001A2D8();
  sub_10001A094();
}

char *sub_100017590(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_10000D33C(&qword_1001C8FC0);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  size_t v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_100015C50(v14, v8, v13);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_100016730(v14, v8, v13);
  }

  swift_release(a4);
  return v11;
}

char *sub_100017664(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_10000D33C(&qword_1001C8EC8);
    uint64_t v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 8);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  size_t v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_100015E68(v14, v8, v13);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_100016A28(v14, v8, v13);
  }

  swift_release(a4);
  return v11;
}

char *sub_100017744(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_10000D33C(&qword_1001C8FB8);
    uint64_t v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  size_t v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_100015EEC(v14, v8, v13);
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_100016AF0((unint64_t)v14, v8, (unint64_t)v13);
  }

  swift_release(a4);
  return v11;
}

void sub_10001782C()
{
  if ((v5 & 1) != 0)
  {
    sub_10001A068();
    if (v6 != v7)
    {
      sub_10001A0E0();
      if (v6)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A200();
  if (v4)
  {
    uint64_t v13 = sub_10001A1C8(v8, v9, v10, v11, v12);
    size_t v14 = (const void *)sub_10001A0C0(v13, 32 * v4);
    size_t v15 = j__malloc_size(v14);
    sub_10001A3E4(v15 - 32);
  }

  uint64_t v16 = sub_10001A4B4();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    v1(v16);
  }

  sub_10001A2D8();
  sub_10001A094();
}

void sub_1000178C4()
{
  if ((v5 & 1) != 0)
  {
    sub_10001A068();
    if (v6 != v7)
    {
      sub_10001A0E0();
      if (v6)
      {
        __break(1u);
        return;
      }

      sub_10001A058();
    }
  }

  sub_10001A200();
  if (v4)
  {
    uint64_t v13 = sub_10001A1C8(v8, v9, v10, v11, v12);
    size_t v14 = (void *)sub_10000DDDC(v13, 24 * v4 + 32);
    sub_10001A588(v14);
  }

  uint64_t v15 = sub_10001A4B4();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    v1(v15);
  }

  sub_10001A2D8();
  sub_10000DE10();
}

uint64_t sub_100017958(unsigned __int8 *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_10000D33C(&qword_1001C9E00);
  __chkstk_darwin(v5);
  char v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ScheduleInfo(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v45[3] = &type metadata for ScheduleDatabase;
  v45[4] = &off_1001B0D60;
  uint64_t v43 = &type metadata for EngagementScheduleRunner;
  uint64_t v44 = &off_1001AA0A0;
  sub_10000D37C(v45, (uint64_t)&type metadata for ScheduleDatabase);
  uint64_t v11 = (uint64_t *)&a1[*(int *)(type metadata accessor for ScheduleInfo.Metadata(0LL) + 44)];
  sub_10010F90C(*v11, v11[1], *a1, (uint64_t)v7);
  if (sub_1000102D4((uint64_t)v7, 1LL, v8) == 1)
  {
    sub_100019E6C((uint64_t)v7, &qword_1001C9E00);
    if (qword_1001C7FD8 != -1) {
      swift_once(&qword_1001C7FD8, sub_1000BD6C0);
    }
    uint64_t v12 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v13 = type metadata accessor for LogMessage(0LL);
    uint64_t v14 = swift_allocObject( v12,  ((*(unsigned __int8 *)(*(void *)(v13 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v13 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v13 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    Swift::String v41 = (void *)sub_10000D33C(&qword_1001C8E80);
    v40[0] = &type metadata for AppActivityManager;
    id v15 = (id)AMSLogKey(v41);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      uint64_t v19 = v18;

      swift_bridgeObjectRetain(v19);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v20._countAndFlagsBits = 0LL;
      v20._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      int v21 = v41;
      uint64_t v22 = sub_10000D37C(v40, (uint64_t)v41);
      uint64_t DynamicType = swift_getDynamicType(v22, v21, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v38[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v38);
      sub_100019E6C((uint64_t)v38, &qword_1001CAAD0);
      v24._countAndFlagsBits = 5972026LL;
      v24._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t MetatypeMetadata = &type metadata for String;
      v38[0] = v17;
      v38[1] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v38);
      sub_100019E6C((uint64_t)v38, &qword_1001CAAD0);
      v25._countAndFlagsBits = 93LL;
      v25._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      LogMessage.init(stringInterpolation:)(v4);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v26._countAndFlagsBits = 0LL;
      v26._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t v27 = v41;
      int v28 = sub_10000D37C(v40, (uint64_t)v41);
      uint64_t v29 = swift_getDynamicType(v28, v27, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v29);
      v38[0] = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v38);
      sub_100019E6C((uint64_t)v38, &qword_1001CAAD0);
      v30._countAndFlagsBits = 58LL;
      v30._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)(v4);
    }

    sub_10000D3A0(v40);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(39LL, 1LL);
    v31._object = (void *)0x800000010016B690LL;
    v31._countAndFlagsBits = 0xD000000000000026LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    uint64_t v33 = *v11;
    uint64_t v32 = v11[1];
    Swift::String v41 = &type metadata for String;
    v40[0] = v33;
    v40[1] = v32;
    swift_bridgeObjectRetain(v32);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_100019E6C((uint64_t)v40, &qword_1001CAAD0);
    v34._countAndFlagsBits = 41LL;
    v34._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t v35 = LogMessage.init(stringInterpolation:)(v4);
    uint64_t v36 = static os_log_type_t.error.getter(v35);
    sub_1000BD1B0(v36, v14);
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_100019E94((uint64_t)v7, (uint64_t)v10, type metadata accessor for ScheduleInfo);
    sub_10000D37C(v42, (uint64_t)v43);
    sub_100051BA0((uint64_t)v10);
    sub_100019EC0((uint64_t)v10, type metadata accessor for ScheduleInfo);
  }

  sub_10000D3A0(v45);
  return sub_10000D3A0(v42);
}

uint64_t sub_100017DB8(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v67[3] = &type metadata for ScheduleDatabase;
  v67[4] = &off_1001B0D60;
  void v66[3] = &type metadata for EngagementScheduleRunner;
  v66[4] = &off_1001AA0A0;
  if (qword_1001C7FD8 != -1) {
    swift_once(&qword_1001C7FD8, sub_1000BD6C0);
  }
  uint64_t v4 = qword_1001DBB58;
  uint64_t v5 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v6 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v60 = v7;
  uint64_t v58 = v5;
  uint64_t v57 = ((v8 + 32) & ~v8) + 2 * v7;
  uint64_t v56 = v8 | 7;
  uint64_t v9 = swift_allocObject(v5, v57, v8 | 7);
  __int128 v55 = xmmword_100164230;
  *(_OWORD *)(v9 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v54 = sub_10000D33C(&qword_1001C8E80);
  uint64_t v65 = v54;
  v64[0] = &type metadata for AppActivityManager;
  id v10 = (id)AMSLogKey(v54);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v53 = v4;
    uint64_t v14 = v13;

    swift_bridgeObjectRetain(v14);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v15._countAndFlagsBits = 0LL;
    v15._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    uint64_t v16 = v65;
    uint64_t v17 = sub_10000D37C(v64, v65);
    uint64_t DynamicType = swift_getDynamicType(v17, v16, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    uint64_t v61 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
    sub_100019E6C((uint64_t)&v61, &qword_1001CAAD0);
    v19._countAndFlagsBits = 5972026LL;
    v19._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v61 = v12;
    uint64_t v62 = v14;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
    sub_100019E6C((uint64_t)&v61, &qword_1001CAAD0);
    v20._countAndFlagsBits = 93LL;
    v20._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    LogMessage.init(stringInterpolation:)(v3);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v21._countAndFlagsBits = 0LL;
    v21._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t v22 = v65;
    uint64_t v23 = sub_10000D37C(v64, v65);
    uint64_t v24 = swift_getDynamicType(v23, v22, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v24);
    uint64_t v61 = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
    sub_100019E6C((uint64_t)&v61, &qword_1001CAAD0);
    v25._countAndFlagsBits = 58LL;
    v25._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    LogMessage.init(stringInterpolation:)(v3);
  }

  sub_10000D3A0(v64);
  uint64_t v26 = LogMessage.init(stringLiteral:)(0xD00000000000001ELL);
  uint64_t v27 = static os_log_type_t.default.getter(v26);
  sub_1000BD1B0(v27, v9);
  swift_bridgeObjectRelease();
  uint64_t v28 = v59;
  uint64_t v29 = *(void *)(v59 + 16);
  if (v29)
  {
    uint64_t v30 = *(void *)(type metadata accessor for ScheduleInfo.Metadata(0LL) - 8);
    Swift::String v31 = (unsigned __int8 *)(v28
                            + ((*(unsigned __int8 *)(v30 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)));
    uint64_t v32 = *(void *)(v30 + 72);
    swift_bridgeObjectRetain(v28);
    do
    {
      sub_1000124C0(v31, v67, v66);
      v31 += v32;
      --v29;
    }

    while (v29);
    swift_bridgeObjectRelease();
  }

  uint64_t v33 = swift_allocObject(v58, v57, v56);
  *(_OWORD *)(v33 + swift_weakDestroy(v0 + 16) = v55;
  uint64_t v65 = v54;
  v64[0] = &type metadata for AppActivityManager;
  id v34 = (id)AMSLogKey(v33);
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    uint64_t v38 = v37;

    swift_bridgeObjectRetain(v38);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v39._countAndFlagsBits = 0LL;
    v39._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    uint64_t v40 = v65;
    Swift::String v41 = sub_10000D37C(v64, v65);
    uint64_t v42 = swift_getDynamicType(v41, v40, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v42);
    uint64_t v61 = v42;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
    sub_100019E6C((uint64_t)&v61, &qword_1001CAAD0);
    v43._countAndFlagsBits = 5972026LL;
    v43._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v61 = v36;
    uint64_t v62 = v38;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
    sub_100019E6C((uint64_t)&v61, &qword_1001CAAD0);
    v44._countAndFlagsBits = 93LL;
    v44._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v44);
    LogMessage.init(stringInterpolation:)(v3);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v45._countAndFlagsBits = 0LL;
    v45._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    uint64_t v46 = v65;
    uint64_t v47 = sub_10000D37C(v64, v65);
    uint64_t v48 = swift_getDynamicType(v47, v46, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v48);
    uint64_t v61 = v48;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
    sub_100019E6C((uint64_t)&v61, &qword_1001CAAD0);
    v49._countAndFlagsBits = 58LL;
    v49._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    LogMessage.init(stringInterpolation:)(v3);
  }

  sub_10000D3A0(v64);
  uint64_t v50 = LogMessage.init(stringLiteral:)(0xD00000000000001DLL);
  uint64_t v51 = static os_log_type_t.default.getter(v50);
  sub_1000BD1B0(v51, v33);
  swift_bridgeObjectRelease();
  sub_10000D3A0(v67);
  return sub_10000D3A0(v66);
}

uint64_t sub_10001835C(unsigned __int8 *a1, char a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = &type metadata for EngagementScheduleRunner;
  uint64_t v77 = &off_1001AA0A0;
  if (qword_1001C7FD8 != -1) {
    swift_once(&qword_1001C7FD8, sub_1000BD6C0);
  }
  uint64_t v67 = qword_1001DBB58;
  uint64_t v7 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v8 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v66 = v7;
  uint64_t v63 = ((v10 + 32) & ~v10) + 2 * v9;
  uint64_t v65 = v10 | 7;
  uint64_t v11 = swift_allocObject(v7, v63, v10 | 7);
  __int128 v64 = xmmword_100164230;
  *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v62 = (ValueMetadata *)sub_10000D33C(&qword_1001C8E80);
  Swift::String v73 = v62;
  uint64_t v72 = &type metadata for AppActivityManager;
  id v12 = (id)AMSLogKey(v62);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v61[1] = v9;
    Swift::String v15 = a1;
    uint64_t v16 = v14;
    uint64_t v18 = v17;

    swift_bridgeObjectRetain(v18);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v19._countAndFlagsBits = 0LL;
    v19._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v19);
    Swift::String v20 = v73;
    Swift::String v21 = sub_10000D37C(&v72, (uint64_t)v73);
    uint64_t DynamicType = swift_getDynamicType(v21, v20, 1LL);
    uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata(DynamicType);
    uint64_t v68 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v68);
    sub_100019E6C((uint64_t)&v68, &qword_1001CAAD0);
    v23._countAndFlagsBits = 5972026LL;
    v23._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t MetatypeMetadata = (ValueMetadata *)&type metadata for String;
    uint64_t v68 = v16;
    uint64_t v69 = v18;
    a1 = v15;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v68);
    sub_100019E6C((uint64_t)&v68, &qword_1001CAAD0);
    v24._countAndFlagsBits = 93LL;
    v24._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    LogMessage.init(stringInterpolation:)(v6);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v25._countAndFlagsBits = 0LL;
    v25._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v26 = v73;
    uint64_t v27 = sub_10000D37C(&v72, (uint64_t)v73);
    uint64_t v28 = swift_getDynamicType(v27, v26, 1LL);
    uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata(v28);
    uint64_t v68 = v28;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v68);
    sub_100019E6C((uint64_t)&v68, &qword_1001CAAD0);
    v29._countAndFlagsBits = 58LL;
    v29._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    LogMessage.init(stringInterpolation:)(v6);
  }

  sub_10000D3A0(&v72);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(22LL, 1LL);
  v30._object = (void *)0x800000010016B620LL;
  v30._countAndFlagsBits = 0xD000000000000016LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v30);
  Swift::String v31 = (ValueMetadata *)type metadata accessor for ScheduleInfo.Metadata(0LL);
  Swift::String v73 = v31;
  uint64_t v32 = sub_10000D63C(&v72);
  sub_100019DF8((uint64_t)a1, (uint64_t)v32, type metadata accessor for ScheduleInfo.Metadata);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v72);
  sub_100019E6C((uint64_t)&v72, &qword_1001CAAD0);
  v33._countAndFlagsBits = 0LL;
  v33._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v34 = LogMessage.init(stringInterpolation:)(v6);
  uint64_t v35 = static os_log_type_t.default.getter(v34);
  sub_1000BD1B0(v35, v11);
  uint64_t v36 = swift_bridgeObjectRelease();
  if ((sub_10010FDAC(v36) & 1) != 0)
  {
    uint64_t v37 = swift_allocObject(v66, v63, v65);
    *(_OWORD *)(v37 + swift_weakDestroy(v0 + 16) = v64;
    Swift::String v73 = v62;
    uint64_t v72 = &type metadata for AppActivityManager;
    id v38 = (id)AMSLogKey(v37);
    if (v38)
    {
      Swift::String v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      uint64_t v67 = (uint64_t)v31;
      uint64_t v41 = v40;
      uint64_t v43 = v42;

      swift_bridgeObjectRetain(v43);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v44._countAndFlagsBits = 0LL;
      v44._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      Swift::String v45 = v73;
      uint64_t v46 = sub_10000D37C(&v72, (uint64_t)v73);
      uint64_t v47 = swift_getDynamicType(v46, v45, 1LL);
      uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata(v47);
      uint64_t v68 = v47;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v68);
      sub_100019E6C((uint64_t)&v68, &qword_1001CAAD0);
      v48._countAndFlagsBits = 5972026LL;
      v48._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      uint64_t MetatypeMetadata = (ValueMetadata *)&type metadata for String;
      uint64_t v68 = v41;
      uint64_t v69 = v43;
      Swift::String v31 = (ValueMetadata *)v67;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v68);
      sub_100019E6C((uint64_t)&v68, &qword_1001CAAD0);
      v49._countAndFlagsBits = 93LL;
      v49._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      LogMessage.init(stringInterpolation:)(v6);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v50._countAndFlagsBits = 0LL;
      v50._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      uint64_t v51 = v73;
      uint64_t v52 = sub_10000D37C(&v72, (uint64_t)v73);
      uint64_t v53 = swift_getDynamicType(v52, v51, 1LL);
      uint64_t MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata(v53);
      uint64_t v68 = v53;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v68);
      sub_100019E6C((uint64_t)&v68, &qword_1001CAAD0);
      v54._countAndFlagsBits = 58LL;
      v54._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v54);
      LogMessage.init(stringInterpolation:)(v6);
    }

    sub_10000D3A0(&v72);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(39LL, 1LL);
    v55._countAndFlagsBits = 0xD000000000000027LL;
    v55._object = (void *)0x800000010016B660LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    Swift::String v73 = v31;
    uint64_t v56 = sub_10000D63C(&v72);
    sub_100019DF8((uint64_t)a1, (uint64_t)v56, type metadata accessor for ScheduleInfo.Metadata);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v72);
    sub_100019E6C((uint64_t)&v72, &qword_1001CAAD0);
    v57._countAndFlagsBits = 0LL;
    v57._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    uint64_t v58 = LogMessage.init(stringInterpolation:)(v6);
    uint64_t v59 = static os_log_type_t.default.getter(v58);
    sub_1000BD1B0(v59, v37);
    swift_bridgeObjectRelease();
    sub_10000D37C(v75, (uint64_t)v76);
    sub_100017958(a1);
  }

  else
  {
    Swift::String v73 = &type metadata for ScheduleDatabase;
    Swift::String v74 = &off_1001B0D60;
    uint64_t MetatypeMetadata = &type metadata for EngagementScheduleRunner;
    uint64_t v71 = &off_1001AA0A0;
    sub_100011B48((char *)a1, a2 & 1, (uint64_t)&v72, (uint64_t)&v68);
    sub_10000D3A0(&v68);
    sub_10000D3A0(&v72);
  }

  return sub_10000D3A0(v75);
}

void sub_100018D04(int a1)
{
  LODWORD(v1) = a1;
  uint64_t v166 = type metadata accessor for TimeZone(0LL);
  uint64_t v165 = *(void *)(v166 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v2);
  sub_10000DD5C();
  uint64_t v164 = v3;
  sub_10000D33C(&qword_1001CF970);
  sub_10000DC8C();
  __chkstk_darwin(v4);
  sub_10000DD5C();
  uint64_t v6 = sub_10001A4F4(v5);
  uint64_t v7 = type metadata accessor for Date(v6);
  uint64_t v176 = *(void *)(v7 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v8);
  sub_10001A284();
  v163 = v9;
  sub_10001A210();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = &v152[-v12];
  __chkstk_darwin(v11);
  sub_10001A3B0();
  uint64_t v169 = v14;
  sub_10001A210();
  __chkstk_darwin(v15);
  v175 = &v152[-v16];
  sub_10000D33C(&qword_1001C8E88);
  sub_10000DC8C();
  __chkstk_darwin(v17);
  sub_10000DD5C();
  uint64_t v19 = sub_10001A4F4(v18);
  v177 = (ValueMetadata *)type metadata accessor for ScheduleInfo.Metadata(v19);
  Description = v177[-1].Description;
  sub_10000DC8C();
  __chkstk_darwin(v20);
  sub_10001A284();
  uint64_t v168 = v21;
  sub_10001A210();
  __chkstk_darwin(v22);
  sub_10001A3B0();
  uint64_t v171 = v23;
  sub_10001A210();
  __chkstk_darwin(v24);
  sub_10001A3B0();
  v155 = (unsigned __int8 *)v25;
  sub_10001A210();
  __chkstk_darwin(v26);
  v178 = &v152[-v27];
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_10000DC8C();
  __chkstk_darwin(v28);
  sub_10000DD5C();
  uint64_t v30 = sub_10001A4F4(v29);
  Swift::String v31 = (void *)type metadata accessor for DispatchPredicate(v30);
  uint64_t v32 = *(v31 - 1);
  __chkstk_darwin(v31);
  uint64_t v34 = (uint64_t)&v152[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v35 = &type metadata for ScheduleDatabase;
  uint64_t v36 = (uint64_t (*)(uint64_t))&off_1001B0D60;
  v185[3] = &type metadata for ScheduleDatabase;
  v185[4] = &off_1001B0D60;
  if (qword_1001C80A8 != -1) {
    goto LABEL_84;
  }
  while (1)
  {
    uint64_t v37 = qword_1001DBBB8;
    *(void *)uint64_t v34 = qword_1001DBBB8;
    (*(void (**)(uint64_t, void, void *))(v32 + 104))( v34,  enum case for DispatchPredicate.onQueue(_:),  v31);
    id v38 = (id)v37;
    LOBYTE(v37) = _dispatchPreconditionTest(_:)(v34);
    (*(void (**)(uint64_t, void *))(v32 + 8))(v34, v31);
    if ((v37 & 1) != 0)
    {

      if (qword_1001C7FD8 == -1) {
        goto LABEL_4;
      }
    }

    else
    {
      __break(1u);
    }

    swift_once(&qword_1001C7FD8, sub_1000BD6C0);
LABEL_4:
    int v153 = v1;
    sub_10000D33C(&qword_1001C9C70);
    sub_100010570();
    sub_10001A5F8();
    uint64_t v41 = v40 & ~v39;
    uint64_t v162 = v42;
    uint64_t v160 = v34;
    uint64_t v157 = v41 + 2 * v42;
    uint64_t v159 = v39 | 7;
    uint64_t v43 = swift_allocObject(v34, v157, v39 | 7);
    __int128 v158 = xmmword_100164230;
    *(_OWORD *)(v43 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v161 = v41;
    uint64_t v156 = sub_10000D33C(&qword_1001C8E80);
    v183 = (ValueMetadata *)v156;
    id v44 = (id)sub_10001A4EC((uint64_t)&type metadata for AppActivityManager);
    if (v44)
    {
      uint64_t v173 = sub_1000105E8((uint64_t)v44);
      uint64_t v46 = v45;

      swift_bridgeObjectRetain(v46);
      sub_100010564();
      sub_10000DC08();
      uint64_t v47 = (uint64_t)v183;
      Swift::String v48 = sub_10000D37C(&v182, (uint64_t)v183);
      sub_10000DC54((uint64_t)v48, v47);
      uint64_t MetatypeMetadata = (void *)sub_10000DF48();
      *(void *)&__int128 v180 = v47;
      sub_10001A2E8();
      sub_10001A404();
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&__int128 v180 = v173;
      *((void *)&v180 + 1) = v46;
      sub_10001A2E8();
      sub_100019E6C((uint64_t)&v180, &qword_1001CAAD0);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      uint64_t v49 = (uint64_t)v183;
      Swift::String v50 = sub_10000D37C(&v182, (uint64_t)v183);
      sub_10000DC54((uint64_t)v50, v49);
      uint64_t MetatypeMetadata = (void *)sub_10000DF48();
      *(void *)&__int128 v180 = v49;
      uint64_t v51 = sub_10001A2E8();
      sub_10001A484(v51, &qword_1001CAAD0);
      sub_10001A1B0();
      sub_10000DC5C();
    }

    sub_10001A2F0();
    uint64_t v52 = LogMessage.init(stringLiteral:)(0xD000000000000014LL);
    uint64_t v53 = static os_log_type_t.default.getter(v52);
    sub_1000BD1B0(v53, v43);
    sub_10000DE2C();
    Swift::String v54 = sub_10001C8FC();
    sub_10001A554();
    v183 = v35;
    v184 = v36;
    sub_100019EEC((uint64_t)&v182, (uint64_t)&v180);
    uint64_t v55 = sub_10000DDDC((uint64_t)&unk_1001A85F0, 56LL);
    sub_100019F60(&v180, v55 + 16);
    sub_10000D3A0(&v182);
    uint64_t v32 = (uint64_t)v54[2];
    uint64_t v34 = (uint64_t)_swiftEmptyArrayStorage;
    if (v32)
    {
      uint64_t v173 = v55;
      sub_10000DEE0();
      for (uint64_t i = 0LL; i != v32; ++i)
      {
        uint64_t v57 = *((unsigned __int8 *)v54 + i + 32);
        uint64_t v58 = sub_10000DDDC((uint64_t)&unk_1001A8618, 24LL);
        *(void *)(v58 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
        sub_10010F1D4(v57);
        swift_beginAccess(v58 + 16, v179, 0LL, 0LL);
        uint64_t v59 = *(void *)(v58 + 16);
        if (*(void *)(v59 + 16))
        {
          swift_bridgeObjectRetain(*(void *)(v58 + 16));
          swift_release(v58);
          if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
          {
            sub_100013C44();
            uint64_t v34 = v61;
          }

          unint64_t v60 = *(void *)(v34 + 16);
          if (v60 >= *(void *)(v34 + 24) >> 1)
          {
            sub_100013C44();
            uint64_t v34 = v62;
          }

          *(void *)(v34 + swift_weakDestroy(v0 + 16) = v60 + 1;
          *(void *)(v34 + 8 * v60 + 32) = v59;
        }

        else
        {
          swift_release(v58);
        }
      }

      sub_100009020();
      uint64_t v55 = v173;
    }

    sub_100009020();
    swift_release(v55);
    uint64_t v1 = *(void *)(v34 + 16);
    if (v1)
    {
      swift_bridgeObjectRetain(v34);
      uint64_t v35 = 0LL;
      Swift::String v31 = _swiftEmptyArrayStorage;
      while (1)
      {
        uint64_t v63 = v34 + 8LL * (void)v35;
        uint64_t v64 = *(void *)(v63 + 32);
        uint64_t v65 = *(void *)(v64 + 16);
        uint64_t v36 = (uint64_t (*)(uint64_t))v31[2];
        uint64_t v32 = (uint64_t)v36 + v65;
        if (__OFADD__(v36, v65)) {
          break;
        }
        swift_bridgeObjectRetain(*(void *)(v63 + 32));
        if (!swift_isUniquelyReferenced_nonNull_native(v31) || v32 > v31[3] >> 1)
        {
          sub_100013D34();
          Swift::String v31 = v66;
        }

        if (*(void *)(v64 + 16))
        {
          uint64_t v67 = v31[2];
          if ((v31[3] >> 1) - v67 < v65) {
            goto LABEL_81;
          }
          unint64_t v68 = (*((unsigned __int8 *)Description + 80) + 32LL) & ~(unint64_t)*((unsigned __int8 *)Description
                                                                                     + 80);
          uint64_t v69 = Description[9];
          uint64_t v70 = (char *)v31 + v68 + v69 * v67;
          if (v64 + v68 < (unint64_t)&v70[v69 * v65] && (unint64_t)v70 < v64 + v68 + v69 * v65)
          {
            sub_10001A044();
            sub_10001A0EC();
            sub_10001A078(v141, v142, v143, v144, v145, v146, v147, v148, v149, v150, v151);
            __break(1u);
            return;
          }

          swift_arrayInitWithCopy(v70);
          if (v65)
          {
            uint64_t v72 = v31[2];
            BOOL v73 = __OFADD__(v72, v65);
            uint64_t v74 = v72 + v65;
            if (v73) {
              goto LABEL_83;
            }
            v31[2] = v74;
          }
        }

        else if (v65)
        {
          goto LABEL_79;
        }

        sub_10000DE2C();
        uint64_t v35 = (ValueMetadata *)((char *)v35 + 1);
        if ((ValueMetadata *)v1 == v35)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
      }

      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }

    Swift::String v31 = _swiftEmptyArrayStorage;
LABEL_38:
    swift_bridgeObjectRelease();
    sub_10001A554();
    sub_100017DB8((uint64_t)v31);
    v182 = _swiftEmptyArrayStorage;
    uint64_t v34 = v31[2];
    sub_10000DEE0();
    uint64_t v1 = v170;
    uint64_t v75 = v171;
    v167 = (ValueMetadata *)v34;
    if (!v34) {
      break;
    }
    uint64_t v35 = 0LL;
    uint64_t v36 = type metadata accessor for ScheduleInfo.Metadata;
    while ((unint64_t)v35 < v31[2])
    {
      sub_10001A4C4();
      uint64_t v77 = *(void *)(v76 + 72);
      uint64_t v172 = v78;
      uint64_t v173 = v77;
      int v79 = v178;
      sub_100019DF8( (uint64_t)v31 + v78 + v77 * (void)v35,  (uint64_t)v178,  type metadata accessor for ScheduleInfo.Metadata);
      static Date.now.getter(v80);
      uint64_t v81 = (uint64_t)v177;
      sub_100019E24((uint64_t)&v79[SLODWORD(v177[2].Kind)], v1);
      sub_100019DF8((uint64_t)v79, v75, type metadata accessor for ScheduleInfo.Metadata);
      if (sub_1000102D4(v1, 1LL, v7) == 1)
      {
        sub_10001A574();
        (*(void (**)(_BYTE *))(v82 + 16))(v13);
        sub_10001A5CC();
        sub_100019E6C(v1, &qword_1001CF970);
      }

      else
      {
        sub_10001A5CC();
        sub_10001A574();
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v83 + 32))(v13, v1, v7);
      }

      double v84 = *(double *)&v178[*(int *)(v81 + 40)];
      double v85 = 0.0;
      if (v178[*(int *)(v81 + 36)] == 1)
      {
        uint64_t v32 = v7;
        Swift::String v86 = v13;
        uint64_t v87 = v164;
        sub_10001A678();
        uint64_t v13 = v163;
        sub_10001A3FC();
        uint64_t v1 = sub_10001A3F4();
        sub_10001A574();
        sub_10001A64C();
        (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v87, v166);
        sub_10001A3FC();
        uint64_t v34 = sub_10001A3F4();
        sub_10001A64C();
        if (__OFSUB__(v1, v34)) {
          goto LABEL_82;
        }
        double v85 = (double)(v1 - v34);
        uint64_t v13 = v86;
      }

      uint64_t v88 = v169;
      Date.addingTimeInterval(_:)(v84 + v85);
      sub_10001A574();
      sub_10001A54C((uint64_t)v13);
      sub_10000D904( (unint64_t *)&qword_1001C8E90,  (uint64_t (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v32 = (uint64_t)v175;
      uint64_t v34 = dispatch thunk of static Comparable.< infix(_:_:)(v175, v88, v7, v89);
      sub_10001A54C(v88);
      sub_10001A54C(v32);
      if ((v34 & 1) != 0)
      {
        sub_100019E94((uint64_t)v178, v168, type metadata accessor for ScheduleInfo.Metadata);
        uint64_t v34 = (uint64_t)v182;
        if ((swift_isUniquelyReferenced_nonNull_native(v182) & 1) == 0)
        {
          sub_100016F30();
          uint64_t v34 = (uint64_t)v182;
        }

        uint64_t v75 = v171;
        uint64_t v32 = v172;
        unint64_t v90 = *(void *)(v34 + 16);
        if (v90 >= *(void *)(v34 + 24) >> 1)
        {
          sub_100016F30();
          uint64_t v34 = (uint64_t)v182;
        }

        *(void *)(v34 + swift_weakDestroy(v0 + 16) = v90 + 1;
        sub_100019E94(v168, v34 + v32 + v90 * v173, type metadata accessor for ScheduleInfo.Metadata);
      }

      else
      {
        sub_100019EC0((uint64_t)v178, type metadata accessor for ScheduleInfo.Metadata);
        uint64_t v75 = v171;
      }

      uint64_t v35 = (ValueMetadata *)((char *)v35 + 1);
      uint64_t v1 = v170;
      if (v167 == v35) {
        goto LABEL_55;
      }
    }

LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }

LABEL_55:
  sub_100009020();
  Swift::String v91 = v182;
  uint64_t v92 = v154;
  sub_100011F98((uint64_t)v182, v154);
  swift_release(v91);
  if (sub_1000102D4(v92, 1LL, (uint64_t)v177) == 1)
  {
    sub_100009020();
    sub_100019E6C(v92, &qword_1001C8E88);
    v93 = (__n128 *)sub_10001A194();
    sub_10001A244(v93);
    id v94 = (id)sub_10001A4EC((uint64_t)&type metadata for AppActivityManager);
    if (v94)
    {
      uint64_t v95 = v94;
      uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v94);
      uint64_t v98 = v97;

      swift_bridgeObjectRetain(v98);
      sub_100010564();
      sub_10000DC08();
      uint64_t v99 = (uint64_t)v183;
      uint64_t v100 = sub_10000D37C(&v182, (uint64_t)v183);
      uint64_t v101 = sub_10000DC54((uint64_t)v100, v99);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v101);
      *(void *)&__int128 v180 = v101;
      sub_10001A2E8();
      sub_10001A404();
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&__int128 v180 = v96;
      *((void *)&v180 + 1) = v98;
      sub_10001A2E8();
      sub_10001A404();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      uint64_t v111 = (uint64_t)v183;
      uint64_t v112 = sub_10000D37C(&v182, (uint64_t)v183);
      sub_10000DC54((uint64_t)v112, v111);
      uint64_t MetatypeMetadata = (void *)sub_10000DF48();
      *(void *)&__int128 v180 = v111;
      uint64_t v113 = sub_10001A2E8();
      sub_10001A484(v113, &qword_1001CAAD0);
      sub_10001A1B0();
      sub_10000DC5C();
    }

    sub_10001A2F0();
    uint64_t v114 = sub_1000105B4(0xD000000000000018LL);
    uint64_t v115 = static os_log_type_t.default.getter(v114);
    sub_10001A5D8(v115);
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_100019E94(v92, (uint64_t)v155, type metadata accessor for ScheduleInfo.Metadata);
    uint64_t v102 = sub_10001A194();
    *(_OWORD *)(v102 + swift_weakDestroy(v0 + 16) = v158;
    uint64_t v103 = v102 + v161;
    v183 = (ValueMetadata *)v156;
    id v104 = (id)sub_10001A4EC((uint64_t)&type metadata for AppActivityManager);
    if (v104)
    {
      uint64_t v105 = sub_1000105E8((uint64_t)v104);
      uint64_t v107 = v106;

      swift_bridgeObjectRetain(v107);
      sub_100010564();
      sub_10001A224();
      sub_1000104C0(&v182);
      uint64_t v108 = sub_100010530();
      sub_10001A180(v108);
      sub_100019E6C((uint64_t)&v180, &qword_1001CAAD0);
      v109._countAndFlagsBits = 5972026LL;
      v109._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v109);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&__int128 v180 = v105;
      *((void *)&v180 + 1) = v107;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v180);
      sub_100019E6C((uint64_t)&v180, &qword_1001CAAD0);
      v110._countAndFlagsBits = 93LL;
      v110._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v110);
      sub_10001A410();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_10001A224();
      sub_1000104C0(&v182);
      uint64_t v116 = sub_100010530();
      uint64_t v117 = sub_10001A180(v116);
      sub_10001A484(v117, &qword_1001CAAD0);
      sub_10001A1B0();
      sub_10001A410();
    }

    sub_10001A2F0();
    uint64_t v118 = sub_1000105B4(0xD00000000000001BLL);
    uint64_t v119 = static os_log_type_t.default.getter(v118);
    sub_1000BD1B0(v119, v102);
    sub_10000DE2C();
    uint64_t v120 = v31[2];
    if (v120)
    {
      sub_10001A4C4();
      v122 = (char *)v31 + v121;
      uint64_t v123 = &v155[SHIDWORD(v177[2].Description)];
      uint64_t v124 = *(void *)v123;
      uint64_t v125 = *((void *)v123 + 1);
      uint64_t v127 = *(void *)(v126 + 72);
      sub_10000DEE0();
      do
      {
        uint64_t v128 = &v122[SHIDWORD(v177[2].Description)];
        uint64_t v103 = *((void *)v128 + 1);
        BOOL v129 = *(void *)v128 == v124 && v103 == v125;
        if (!v129
          && (_stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v128, *((void *)v128 + 1), v124, v125, 0LL) & 1) == 0)
        {
          sub_100111D74();
          sub_10015169C();
          sub_10000DE2C();
        }

        v122 += v127;
        --v120;
      }

      while (v120);
      sub_100009020();
    }

    sub_100009020();
    v130 = (__n128 *)sub_10001A194();
    sub_10001A244(v130);
    id v131 = (id)sub_10001A4EC((uint64_t)&type metadata for AppActivityManager);
    if (v131)
    {
      uint64_t v132 = sub_1000105E8((uint64_t)v131);
      sub_10001A5B8();
      sub_10000DD9C();
      sub_100010564();
      sub_10001A224();
      sub_1000104C0(&v182);
      uint64_t v133 = sub_100010530();
      sub_10001A180(v133);
      sub_10001A568();
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&__int128 v180 = v132;
      *((void *)&v180 + 1) = v103;
      sub_10001A2E8();
      sub_10001A568();
      sub_10000DC4C(93LL);
      sub_10001A410();
      sub_10000DCFC();
    }

    else
    {
      sub_10001A1BC();
      sub_10001A224();
      sub_1000104C0(&v182);
      uint64_t v134 = sub_100010530();
      uint64_t v135 = sub_10001A180(v134);
      sub_10001A484(v135, &qword_1001CAAD0);
      sub_10001A1B0();
      sub_10001A410();
    }

    sub_10001A2F0();
    sub_10001A21C(30LL);
    v136._countAndFlagsBits = 0xD00000000000001ELL;
    v136._object = (void *)0x800000010016B5A0LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v136);
    v183 = v177;
    v137 = sub_10000D63C(&v182);
    v138 = v155;
    sub_100019DF8((uint64_t)v155, (uint64_t)v137, type metadata accessor for ScheduleInfo.Metadata);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v182);
    sub_100019E6C((uint64_t)&v182, &qword_1001CAAD0);
    sub_10000DC08();
    uint64_t v139 = sub_10001A410();
    uint64_t v140 = static os_log_type_t.default.getter(v139);
    sub_10001A5D8(v140);
    swift_bridgeObjectRelease();
    sub_10001835C(v138, v153 & 1);
    sub_100019EC0((uint64_t)v138, type metadata accessor for ScheduleInfo.Metadata);
  }

  sub_10000D3A0(v185);
  sub_10001A30C();
}

          uint64_t v95 = sub_10000DDF8();
          sub_1000841B8(v95, v96);
LABEL_57:
          uint64_t v97 = sub_100083F30();
          uint64_t v14 = sub_100020C48((uint64_t)&type metadata for AppBacklogPredicateError, v97);
          Swift::String v48 = xmmword_100166690;
          goto LABEL_87;
        }

        goto LABEL_69;
      }

      goto LABEL_68;
    }

    uint64_t v98 = v147 == 1701538156 && v161 == 0xE400000000000000LL;
    if (v98 || (sub_10008416C(1701538156LL, 0xE400000000000000LL) & 1) != 0)
    {
      uint64_t v99 = swift_bridgeObjectRelease();
      sub_10008417C(v99, v100, v101, v102, v103, v104, v105, v106, v147, v161, v170);
      if (v171)
      {
        if ((sub_100084158( v107,  v108,  v109,  (uint64_t)&type metadata for String,  v110,  v111,  v112,  v113,  v156,  v167,  v170) & 1) != 0)
        {
          uint64_t v27 = v157;
          uint64_t v26 = v168;
          sub_100084198(0x6E726574746170LL, 0xE700000000000000LL, &v170);
          uint64_t v114 = sub_100009070();
          if (v171)
          {
            if ((sub_100084158( v114,  v115,  v116,  (uint64_t)&type metadata for String,  v117,  v118,  v119,  v120,  v157,  v168,  v170) & 1) != 0)
            {
              uint64_t v42 = v158;
              uint64_t v43 = v169;
              id v44 = 4;
              goto LABEL_32;
            }

            sub_10000DDF8();
          }

          else
          {
            uint64_t v141 = sub_10000DDF8();
            sub_1000841B8(v141, v142);
          }

          uint64_t v143 = sub_100083F30();
          uint64_t v14 = sub_100020C48((uint64_t)&type metadata for AppBacklogPredicateError, v143);
          Swift::String v48 = xmmword_100166670;
          goto LABEL_87;
        }

uint64_t sub_100019DA8()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_100019DCC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100019DF0(uint64_t a1)
{
  return sub_10010F86C(a1, v1);
}

void sub_100019DF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_10001A48C(a1, a2, a3);
  sub_10001A60C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL));
  sub_100009044();
}

uint64_t sub_100019E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001CF970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_100019E6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = sub_10000D33C(a2);
  sub_10001A418(v2);
  sub_100009044();
}

void sub_100019E94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_10001A48C(a1, a2, a3);
  sub_10001A60C(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 32LL));
  sub_100009044();
}

void sub_100019EC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2(0LL);
  sub_10001A418(v2);
  sub_100009044();
}

void sub_100019EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v2;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_100009044();
}

uint64_t sub_100019F2C()
{
  return swift_deallocObject(v0, 120LL, 7LL);
}

uint64_t sub_100019F60(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = v3;
  return a2;
}

uint64_t sub_100019F78()
{
  return sub_10001291C();
}

uint64_t sub_100019FA8()
{
  return sub_1000129BC( *(_BYTE *)(v0 + 16),  *(void ***)(v0 + 24),  *(void *)(v0 + 32),  *(void **)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void **)(v0 + 56),  *(void *)(v0 + 64),  *(void *)(v0 + 72),  *(void *)(v0 + 80));
}

uint64_t sub_100019FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100019FF0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_100019FF8()
{
  unint64_t result = qword_1001C8F78;
  if (!qword_1001C8F78)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___AMSMetricsEvent);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001C8F78);
  }

  return result;
}

ValueMetadata *type metadata accessor for AppActivityManager()
{
  return &type metadata for AppActivityManager;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10001A078( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11)
{
  return _fatalErrorMessage(_:_:file:line:flags:)(a1, a2, a3, a4, a5, 2LL, a7, 25LL, a9, a10, a11);
}

void *sub_10001A084@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

  ;
}

uint64_t sub_10001A0A4(uint64_t a1)
{
  return swift_arrayInitWithCopy(a1);
}

uint64_t sub_10001A0B4()
{
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = 0LL;
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10001A0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return swift_allocObject(a1, a2 + 32, 7LL);
}

uint64_t sub_10001A0CC(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 152);
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10001A10C(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + *(void *)(*(void *)(a1 - 8) + 72LL) * v2,
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

  ;
}

uint64_t sub_10001A140()
{
  return 0LL;
}

uint64_t sub_10001A150()
{
  return v0;
}

  ;
}

uint64_t sub_10001A180(uint64_t a1)
{
  *(void *)(v2 - 200) = a1;
  *(void *)(v2 - 224) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 224);
}

uint64_t sub_10001A194()
{
  return swift_allocObject(*(void *)(v0 - 408), *(void *)(v0 - 440), *(void *)(v0 - 416));
}

void sub_10001A1B0()
{
  v0._countAndFlagsBits = 58LL;
  v0._object = (void *)0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_10001A1BC()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_10001A1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_10000D33C(a5);
}

size_t sub_10001A1D0(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_10001A1F4()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

  ;
}

  ;
}

uint64_t sub_10001A21C(uint64_t a1)
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(a1, 1LL);
}

void sub_10001A224()
{
  v0._countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

  ;
}

__n128 sub_10001A244(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 432);
  a1[1] = result;
  *(void *)(v1 - 160) = *(void *)(v1 - 448);
  return result;
}

uint64_t sub_10001A270()
{
  return v0;
}

  ;
}

uint64_t sub_10001A298()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_10001A2A0()
{
  return v2(v0, v1);
}

void sub_10001A2AC(Swift::String a1)
{
}

  ;
}

uint64_t sub_10001A2C0()
{
  return v0 + 32;
}

void sub_10001A2CC(uint64_t a1@<X8>)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t sub_10001A2D8()
{
  return swift_release(v0);
}

uint64_t sub_10001A2E0(uint64_t a1)
{
  return v2(a1, v1);
}

uint64_t sub_10001A2E8()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 224);
}

uint64_t sub_10001A2F0()
{
  return sub_10000D3A0((void *)(v0 - 184));
}

  ;
}

uint64_t sub_10001A328()
{
  return ((uint64_t (*)(void))swift_arrayInitWithTakeBackToFront)();
}

uint64_t sub_10001A338()
{
  return ((uint64_t (*)(void))swift_arrayInitWithTakeFrontToBack)();
}

uint64_t sub_10001A348(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL);
  return v1 + ((v2 + 32) & ~v2);
}

uint64_t sub_10001A36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return v4(0LL, v5, a3, v3);
}

void sub_10001A37C(uint64_t a1)
{
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10001A3BC()
{
  return 0LL;
}

  ;
}

void sub_10001A3E4(uint64_t a1@<X8>)
{
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_10001A3F4()
{
  return TimeZone.secondsFromGMT(for:)(v0);
}

uint64_t sub_10001A3FC()
{
  return Date.init()();
}

void sub_10001A404()
{
}

uint64_t sub_10001A410()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_10001A418(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8LL))(v1, a1);
}

  ;
}

uint64_t sub_10001A448()
{
  return v1(v0 + 32, v2);
}

void sub_10001A454(uint64_t a1@<X8>)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

__n128 sub_10001A460(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 240);
  a1[1] = result;
  *(void *)(v1 - 96) = *(void *)(v1 - 256);
  return result;
}

uint64_t sub_10001A47C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

void sub_10001A484(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_10001A48C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0LL);
}

  ;
}

uint64_t sub_10001A4B4()
{
  return v0 + 32;
}

  ;
}

  ;
}

uint64_t sub_10001A4EC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 184) = a1;
  return AMSLogKey();
}

uint64_t sub_10001A4F4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0LL;
}

  ;
}

uint64_t sub_10001A514()
{
  return v0(0LL);
}

uint64_t sub_10001A51C()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 176) + 8LL))(v0, *(void *)(v1 - 168));
}

  ;
}

  ;
}

uint64_t sub_10001A54C(uint64_t a1)
{
  return v2(a1, v1);
}

void *sub_10001A554()
{
  return sub_10000D37C((void *)(v0 - 144), *(void *)(v0 - 120));
}

uint64_t sub_10001A560@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 120) = a1;
  return AMSLogKey();
}

void sub_10001A568()
{
}

  ;
}

void sub_10001A580(uint64_t a1, uint64_t a2)
{
}

size_t sub_10001A588(void *a1)
{
  size_t result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_10001A5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return _assertionFailure(_:_:file:line:flags:)(a1, a2, a3, a4, a5, 2LL, a7, 24LL);
}

void sub_10001A5B8()
{
}

uint64_t sub_10001A5C0()
{
  return swift_allocObject(*(void *)(v0 - 208), *(void *)(v0 - 248), *(void *)(v0 - 216));
}

void sub_10001A5CC()
{
}

uint64_t sub_10001A5D8(uint64_t a1)
{
  return sub_1000BD1B0(a1, v1);
}

  ;
}

  ;
}

uint64_t sub_10001A60C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v1, v2);
}

size_t sub_10001A618(const void *ptr)
{
  return j__malloc_size(ptr);
}

void sub_10001A620()
{
}

void sub_10001A62C(uint64_t a1, uint64_t *a2)
{
}

void sub_10001A634()
{
}

void sub_10001A640()
{
}

uint64_t sub_10001A64C()
{
  return v2(v0, v1);
}

void *sub_10001A658()
{
  return sub_10000D63C((void *)(v0 - 120));
}

void sub_10001A660()
{
}

uint64_t sub_10001A66C()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 120);
}

uint64_t sub_10001A678()
{
  return static TimeZone.current.getter();
}

uint64_t sub_10001A680(uint64_t a1)
{
  uint64_t v3 = v1;
  _StringGuts.grow(_:)(28LL);
  swift_bridgeObjectRelease();
  sub_10001C0A8();
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  swift_bridgeObjectRetain(*(void *)(v1 + 32));
  sub_10001C29C();
  sub_10000DCFC();
  v7._countAndFlagsBits = sub_10001C1F0();
  v7._object = (void *)(v8 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000LL);
  String.append(_:)(v7);
  sub_10001C0A0(1701669236LL);
  uint64_t v10 = v16;
  uint64_t v9 = v17;
  uint64_t v11 = sub_10000DDDC((uint64_t)&unk_1001A86D8, 24LL);
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = 0LL;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = (void *)sub_10000DDDC((uint64_t)&unk_1001A8700, 40LL);
  v13[2] = v3;
  v13[3] = v11;
  v13[4] = a1;
  v15[2] = v12;
  v15[3] = v10;
  v15[4] = v9;
  v15[5] = _swiftEmptyArrayStorage;
  v15[6] = sub_10001BE48;
  v15[7] = v13;
  swift_retain(v3);
  sub_100129A28((void (*)(void))sub_10001BBE0, (uint64_t)v15);
  if (v2)
  {
    sub_10000DCFC();
  }

  else
  {
    swift_retain(v11);
    swift_release(v13);
    sub_10000DCFC();
    swift_beginAccess(v11 + 16, &v16, 0LL, 0LL);
    uint64_t v12 = *(void *)(v11 + 16);
    uint64_t v13 = (void *)v11;
  }

  swift_release(v13);
  return v12;
}

uint64_t sub_10001A7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10012B3A8();
  if (v4) {
    return v5;
  }
  if ((v10 & 1) != 0) {
    return 1;
  }
  uint64_t v12 = v9;
  uint64_t v13 = sub_10012B3A8();
  BOOL v5 = 1;
  if ((v14 & 1) != 0) {
    return v5;
  }
  uint64_t v31 = v13;
  _StringGuts.grow(_:)(27LL);
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "DELETE FROM ");
  BYTE5(v29[1]) = 0;
  HIWORD(v29[1]) = -5120;
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v16 = *(void **)(a2 + 32);
  swift_bridgeObjectRetain(v16);
  v17._countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x20455245485720LL;
  v18._object = (void *)0xE700000000000000LL;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x696669746E656469LL;
  v19._object = (void *)0xEA00000000007265LL;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 1059077408LL;
  v20._object = (void *)0xE400000000000000LL;
  String.append(_:)(v20);
  uint64_t v22 = v29[0];
  uint64_t v21 = (void *)v29[1];
  uint64_t v23 = sub_10000D33C(&qword_1001C8EE8);
  v24._rawValue = (void *)swift_initStackObject(v23, v30);
  *((_OWORD *)v24._rawValue + 1) = xmmword_100164220;
  *((void *)v24._rawValue + 4) = v12;
  *((void *)v24._rawValue + 5) = 0LL;
  *((_BYTE *)v24._rawValue + 48) = 1;
  v25._countAndFlagsBits = v22;
  v25._object = v21;
  SQLDatabase.execute(sql:parameters:)(v25, v24);
  if (v26)
  {
    swift_setDeallocating(v24._rawValue);
    sub_10012A65C();
    swift_bridgeObjectRelease();
    return v5;
  }

  uint64_t v27 = (void *)(a3 + 16);
  swift_bridgeObjectRelease();
  swift_setDeallocating(v24._rawValue);
  sub_10012A65C();
  uint64_t result = swift_beginAccess(v27, v29, 1LL, 0LL);
  uint64_t v28 = *v27 + v31;
  if (!__OFADD__(*v27, v31))
  {
    *uint64_t v27 = v28;
    return v28 < a4;
  }

  __break(1u);
  return result;
}

uint64_t sub_10001AA14(void *a1)
{
  uint64_t v15 = 0LL;
  unint64_t v16 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(54LL);
  v3._countAndFlagsBits = 0x4920545245534E49LL;
  v3._object = (void *)0xEC000000204F544ELL;
  String.append(_:)(v3);
  swift_bridgeObjectRetain(*(void *)(v1 + 32));
  sub_10001C29C();
  sub_10000DCFC();
  sub_10001C318();
  sub_10001C270();
  sub_10001C0E8();
  sub_10001C170();
  sub_10001C0E8();
  sub_10001C0A0(1702521203LL);
  sub_10001C0E8();
  sub_10001C0A0(1701669236LL);
  sub_10001C0E8();
  sub_10001C0A0(1701869940LL);
  v4._object = (void *)0x800000010016B900LL;
  v4._countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v4);
  uint64_t v5 = sub_10000D33C(&qword_1001C8EE8);
  v6._rawValue = (void *)swift_initStackObject(v5, v14);
  *((_OWORD *)v6._rawValue + 1) = xmmword_100164250;
  uint64_t v7 = a1[1];
  *((void *)v6._rawValue + 4) = *a1;
  *((void *)v6._rawValue + 5) = v7;
  *((_BYTE *)v6._rawValue + 48) = 3;
  uint64_t v9 = a1[2];
  unint64_t v8 = a1[3];
  *((void *)v6._rawValue + 7) = v9;
  *((void *)v6._rawValue + 8) = v8;
  *((_BYTE *)v6._rawValue + 72) = 0;
  swift_bridgeObjectRetain(v7);
  sub_10001BDC8(v9, v8);
  *((void *)v6._rawValue + 10) = sub_10001ABC8();
  *((void *)v6._rawValue + 11) = 0LL;
  *((_BYTE *)v6._rawValue + 96) = 1;
  *((_BYTE *)v6._rawValue + 120) = 2;
  uint64_t v10 = a1[5];
  *((void *)v6._rawValue + 13) = a1[4];
  *((void *)v6._rawValue + 14) = 0LL;
  uint64_t v11 = a1[6];
  *((void *)v6._rawValue + swift_weakDestroy(v0 + 16) = v10;
  *((void *)v6._rawValue + 17) = v11;
  *((_BYTE *)v6._rawValue + 144) = 3;
  swift_bridgeObjectRetain(v11);
  v12._countAndFlagsBits = 0LL;
  v12._object = (void *)0xE000000000000000LL;
  SQLDatabase.execute(sql:parameters:)(v12, v6);
  swift_setDeallocating(v6._rawValue);
  sub_10012A65C();
  return sub_10000DCFC();
}

Swift::Int sub_10001ABC8()
{
  unint64_t v1 = v0[1];
  if ((v1 & 0x1000000000000000LL) != 0)
  {
    Swift::Int v2 = String.UTF8View._foreignCount()();
  }

  else if ((v1 & 0x2000000000000000LL) != 0)
  {
    Swift::Int v2 = HIBYTE(v1) & 0xF;
  }

  else
  {
    Swift::Int v2 = *v0 & 0xFFFFFFFFFFFFLL;
  }

  uint64_t v3 = Data.count.getter(v0[2], v0[3]);
  Swift::Int v4 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
    goto LABEL_17;
  }

  BOOL v5 = __OFADD__(v4, 8LL);
  Swift::Int v6 = v4 + 8;
  if (v5)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  BOOL v5 = __OFADD__(v6, 8LL);
  Swift::Int v7 = v6 + 8;
  if (v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  Swift::Int v2 = v7 + 8;
  if (__OFADD__(v7, 8LL))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  unint64_t v8 = v0[6];
  if ((v8 & 0x1000000000000000LL) == 0)
  {
    if ((v8 & 0x2000000000000000LL) != 0) {
      uint64_t v9 = HIBYTE(v8) & 0xF;
    }
    else {
      uint64_t v9 = v0[5] & 0xFFFFFFFFFFFFLL;
    }
    goto LABEL_13;
  }

uint64_t sub_10001AC68(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = v11;
  uint64_t v45 = v12;
  uint64_t v13 = v5[3];
  char v14 = (void *)v5[4];
  swift_bridgeObjectRetain(v14);
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  String.append(_:)(v15);
  sub_10001C258();
  uint64_t v40 = v44;
  uint64_t v41 = v45;
  sub_10001BB58(a1, (uint64_t)v42);
  if (v43 == 255)
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
  }

  else
  {
    sub_10001BBF4(v42, (uint64_t)&v44);
    uint64_t v38 = 0x20455245485720LL;
    unint64_t v39 = 0xE700000000000000LL;
    uint64_t v16 = sub_10001BCF4(a1, (void (*)(void, void, void, void, void))sub_10001BC0C);
    sub_10001AEB0(v16, v17, v18, v19);
    String.append(_:)(v20);
    sub_10001C258();
    v21._countAndFlagsBits = 0x20455245485720LL;
    v21._object = (void *)0xE700000000000000LL;
    String.append(_:)(v21);
    uint64_t v22 = sub_10001C258();
    sub_10001B12C(v22, v23, v24, v25);
    uint64_t v27 = v26;
    sub_10001BCF4(a1, (void (*)(void, void, void, void, void))sub_10001BC80);
  }

  v28._countAndFlagsBits = sub_10001C1F0();
  v28._object = (void *)(v29 | 0xEE00656D69740000LL);
  String.append(_:)(v28);
  if ((a3 & 1) == 0)
  {
    uint64_t v38 = 0x2054494D494C20LL;
    unint64_t v39 = 0xE700000000000000LL;
    uint64_t v46 = a2;
    v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    v31._countAndFlagsBits = 0x2054494D494C20LL;
    v31._object = (void *)0xE700000000000000LL;
    String.append(_:)(v31);
    swift_bridgeObjectRelease();
  }

  uint64_t v32 = v5[2];
  uint64_t v34 = v40;
  uint64_t v33 = v41;
  uint64_t v35 = sub_10000DDDC((uint64_t)&unk_1001A86B0, 32LL);
  *(void *)(v35 + swift_weakDestroy(v0 + 16) = a4;
  *(void *)(v35 + 24) = a5;
  v37[2] = v32;
  v37[3] = v34;
  v37[4] = v33;
  v37[5] = v27;
  v37[6] = sub_10001BBC4;
  v37[7] = __chkstk_darwin(v35);
  swift_retain(a5);
  sub_100129A28((void (*)(void))sub_10001BBE0, (uint64_t)v37);
  sub_10000DCFC();
  sub_10001C258();
  return swift_release(v35);
}

void sub_10001AEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }

uint64_t sub_10001AF04()
{
  uint64_t v0 = *(void *)(v26 + 16);
  if (*(void *)(v0 + 16))
  {
    sub_10001C188();
    unint64_t v1 = (__int128 *)(v0 + 32);
    do
    {
      uint64_t v2 = sub_10001BBF4(v1, (uint64_t)&v27);
      uint64_t v10 = sub_10001C0CC(v2, v3, v4, v5, v6, v7, v8, v9, v24);
      v28._countAndFlagsBits = ((uint64_t (*)(uint64_t))sub_10001AEB0)(v10);
      sub_10001C2D8(v28);
      swift_bridgeObjectRelease();
      sub_10001C238();
      sub_10001C2E4(v11, v12, v13, v14, v15, v16, v17, v18, v25);
      sub_10001C220();
      if (v19) {
        sub_10001C138();
      }
      sub_10001C208();
    }

    while (!v20);
  }

  uint64_t v21 = sub_10000D33C(&qword_1001CDF50);
  sub_10001BD2C();
  uint64_t v22 = BidirectionalCollection<>.joined(separator:)(0x20444E4120LL, 0xE500000000000000LL, v21);
  swift_bridgeObjectRelease();
  return v22;
}

void sub_10001B12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }

uint64_t sub_10001B17C()
{
  uint64_t v0 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t result = sub_10001C1C8(v0);
  *(_OWORD *)(result + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(result + 32) = v2;
  *(void *)(result + 40) = 0LL;
  *(_BYTE *)(result + 48) = 2;
  return result;
}

uint64_t sub_10001B49C(char a1, uint64_t (*a2)(void *))
{
  uint64_t v5 = sub_10012B3C4();
  if (!v2)
  {
    uint64_t v7 = v6;
    if (v6)
    {
      uint64_t v8 = v5;
      sub_10012B4A8(&v17);
      unint64_t v10 = *((void *)&v17 + 1);
      if (*((void *)&v17 + 1) >> 60 != 15LL)
      {
        uint64_t v11 = v17;
        uint64_t v12 = sub_10012B560();
        if ((v13 & 1) == 0)
        {
          uint64_t v14 = v12;
          uint64_t v15 = sub_10012B3C4();
          if (v16)
          {
            v18[0] = v8;
            v18[1] = v7;
            v18[2] = v11;
            v18[3] = v10;
            void v18[4] = v14;
            v18[5] = v15;
            v18[6] = v16;
            sub_10001BDC8(v11, v10);
            a1 = a2(v18);
            swift_bridgeObjectRelease();
            sub_10001BD84(v11, v10);
            swift_bridgeObjectRelease();
            sub_10001BD70(v11, v10);
            return a1 & 1;
          }
        }

        sub_10001BD70(v11, v10);
      }

      swift_bridgeObjectRelease();
    }

    a1 = 1;
  }

  return a1 & 1;
}

uint64_t sub_10001B638()
{
  uint64_t v0 = sub_10002FB40();
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t type metadata accessor for AppBacklogTable()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd15AppBacklogTable);
}

uint64_t sub_10001B674@<X0>(double *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = 7368801LL;
  unint64_t v31 = 0xE300000000000000LL;
  sub_10001C1D4();
  sub_10001C0F4();
  uint64_t v6 = sub_10001C294();
  if (v33)
  {
    if (sub_10001C104(v6, v7, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String))
    {
      unint64_t v8 = v31;
      uint64_t v29 = v30;
      goto LABEL_6;
    }
  }

  else
  {
    sub_10001C304();
  }

  uint64_t v29 = 0LL;
  unint64_t v8 = 0xE000000000000000LL;
LABEL_6:
  uint64_t v9 = (void *)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v32[0] = 0LL;
  id v11 = [v9 dataWithJSONObject:isa options:0 error:v32];

  id v12 = v32[0];
  if (!v11)
  {
    char v19 = v12;
    sub_10000DCFC();
    sub_10000DDF8();
    _convertNSErrorToError(_:)(v19);

    return swift_willThrow(v20);
  }

  uint64_t v28 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v14 = v13;

  uint64_t v30 = 0x6D6954746E657665LL;
  unint64_t v31 = 0xE900000000000065LL;
  sub_10001C1D4();
  sub_10001C0F4();
  uint64_t v15 = sub_10001C294();
  if (v33)
  {
    uint64_t v17 = sub_10001C104(v15, v16, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Double);
    if ((_DWORD)v17)
    {
      double v18 = *(double *)&v30;
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v17 = sub_10001C304();
  }

  uint64_t v22 = Date.init()(v17);
  double v18 = Date.timeIntervalSince1970.getter(v22);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_13:
  uint64_t v30 = 0x707954746E657665LL;
  unint64_t v31 = 0xE900000000000065LL;
  sub_10001C1D4();
  sub_10001C0F4();
  sub_10000DDF8();
  uint64_t v23 = sub_10001C294();
  if (!v33)
  {
    uint64_t result = sub_10001C304();
    goto LABEL_17;
  }

  uint64_t result = sub_10001C104(v23, v24, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for String);
  if (!(_DWORD)result)
  {
LABEL_17:
    uint64_t v25 = 0LL;
    unint64_t v26 = 0xE000000000000000LL;
    goto LABEL_18;
  }

  uint64_t v25 = v30;
  unint64_t v26 = v31;
LABEL_18:
  *(void *)a1 = v29;
  *((void *)a1 + 1) = v8;
  *((void *)a1 + 2) = v28;
  *((void *)a1 + 3) = v14;
  a1[4] = v18;
  *((void *)a1 + 5) = v25;
  *((void *)a1 + 6) = v26;
  return result;
}

void sub_10001B950()
{
  v0._countAndFlagsBits = 0x5420455441455243LL;
  v0._object = (void *)0xED000020454C4241LL;
  String.append(_:)(v0);
  sub_10001C260();
  sub_10001C318();
  sub_10001C270();
  v1._countAndFlagsBits = sub_10001C2F0() & 0xFFFFFFFFFFFFLL | 0x2C47000000000000LL;
  v1._object = (void *)0xE900000000000020LL;
  String.append(_:)(v1);
  sub_10001C170();
  sub_10001C2C0(0x2C424F4C4220LL);
  sub_10001C0A0(1701669236LL);
  sub_10001C2C0(0x2C4C41455220LL);
  v2._countAndFlagsBits = 0x696669746E656469LL;
  v2._object = (void *)0xEA00000000007265LL;
  String.append(_:)(v2);
  v3._object = (void *)0x800000010016B8E0LL;
  v3._countAndFlagsBits = 0xD000000000000016LL;
  String.append(_:)(v3);
  sub_10001C0A0(1701869940LL);
  v4._countAndFlagsBits = sub_10001C2F0() & 0xFFFFFFFFFFFFLL | 0x2947000000000000LL;
  v4._object = (void *)0xE800000000000000LL;
  String.append(_:)(v4);
  v5._rawValue = _swiftEmptyArrayStorage;
  sub_10001C248(v7, v6, v5);
  sub_10000DDF8();
  sub_10001C1A0();
}

void sub_10001BA94()
{
  v0._countAndFlagsBits = 0x4C4F432044444120LL;
  v0._object = (void *)0xEC000000204E4D55LL;
  String.append(_:)(v0);
  sub_10001C0A0(1702521203LL);
  v1._countAndFlagsBits = 0x52454745544E4920LL;
  v1._object = (void *)0xE800000000000000LL;
  String.append(_:)(v1);
  v2._rawValue = _swiftEmptyArrayStorage;
  sub_10001C248(v4[0], v3, v2);
  sub_10000DDF8();
  sub_10001C1A0();
}

uint64_t sub_10001BB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C90E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001BBA0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10001BBC4(char a1)
{
  return sub_10001B49C(a1, *(uint64_t (**)(void *))(v1 + 16)) & 1;
}

uint64_t sub_10001BBE0()
{
  return sub_10001BE68();
}

uint64_t sub_10001BBF4(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = v3;
  return a2;
}

uint64_t sub_10001BC0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_10001BC20(result, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_10001BC20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 5:
      uint64_t result = swift_retain(result);
      break;
    case 1:
    case 2:
    case 3:
      uint64_t result = swift_bridgeObjectRetain(a2);
      break;
    case 4:
      swift_bridgeObjectRetain(a2);
      uint64_t result = swift_bridgeObjectRetain(a4);
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_10001BC80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_10001BC94(result, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_10001BC94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 5:
      uint64_t result = swift_release(result);
      break;
    case 1:
    case 2:
    case 3:
      uint64_t result = swift_bridgeObjectRelease(a2);
      break;
    case 4:
      swift_bridgeObjectRelease(a2);
      uint64_t result = swift_bridgeObjectRelease(a4);
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_10001BCF4(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

unint64_t sub_10001BD2C()
{
  unint64_t result = qword_1001C90E8;
  if (!qword_1001C90E8)
  {
    uint64_t v1 = sub_10000D820(&qword_1001CDF50);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1001C90E8);
  }

  return result;
}

uint64_t sub_10001BD70(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10001BD84(result, a2);
  }
  return result;
}

uint64_t sub_10001BD84(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release(result);
  }

  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10001BDC8(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain(result);
  }

  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_10001BE0C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10001BE1C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10001BE48(uint64_t a1)
{
  return sub_10001A7F0(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_10001BE68()
{
  v1._rawValue = *(void **)(v0 + 40);
  return sub_100127CAC( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  v1,  *(uint64_t (**)(void *))(v0 + 48),  *(void *)(v0 + 56));
}

uint64_t initializeBufferWithCopyOfBuffer for AppBacklogPredicate(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for AppBacklogPredicate(uint64_t a1)
{
  return sub_10001BC94( *(void *)a1,  *(void *)(a1 + 8),  *(void *)(a1 + 16),  *(void *)(a1 + 24),  *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(_BYTE *)(a2 + 32);
  sub_10001BC20(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(_BYTE *)(a2 + 32);
  sub_10001BC20(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_10001BC94(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AppBacklogPredicate(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  __int128 v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v8;
  char v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_10001BC94(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppBacklogPredicate(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 250;
    }

    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 5) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppBacklogPredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(_BYTE *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 251;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xFB) {
      *(_BYTE *)(result + 33) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFB) {
      *(_BYTE *)(result + 33) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 32) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_10001C080(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_10001C088(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AppBacklogPredicate()
{
  return &type metadata for AppBacklogPredicate;
}

void sub_10001C0A0(uint64_t a1)
{
  unint64_t v1 = 0xE400000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

  ;
}

uint64_t sub_10001C0CC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  return sub_10001BCF4((uint64_t)va, v9);
}

void sub_10001C0E8()
{
  v0._countAndFlagsBits = 8236LL;
  v0._object = (void *)0xE200000000000000LL;
  String.append(_:)(v0);
}

void sub_10001C0F4()
{
}

uint64_t sub_10001C104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(v4 - 176, v4 - 120, a3, a4, 6LL);
}

uint64_t sub_10001C114@<X0>(uint64_t a1@<X8>)
{
  return v1 + 24 * a1 + 32;
}

void sub_10001C138()
{
}

  ;
}

void sub_10001C170()
{
  v0._countAndFlagsBits = 0x64616F6C796170LL;
  v0._object = (void *)0xE700000000000000LL;
  String.append(_:)(v0);
}

void sub_10001C188()
{
}

  ;
}

void sub_10001C1B4()
{
}

uint64_t sub_10001C1C8(uint64_t a1)
{
  return swift_allocObject(a1, 56LL, 7LL);
}

uint64_t sub_10001C1D4()
{
  return AnyHashable.init<A>(_:)(v0 - 176);
}

uint64_t sub_10001C1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  return sub_10001BBF4(v4, (uint64_t)va);
}

uint64_t sub_10001C1F0()
{
  return 0x4220524544524F20LL;
}

void sub_10001C208()
{
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v5 = v0 + 16 * v3;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v2;
}

  ;
}

void sub_10001C238()
{
  v0._countAndFlagsBits = 41LL;
  v0._object = (void *)0xE100000000000000LL;
  String.append(_:)(v0);
}

void sub_10001C248(uint64_t a1, uint64_t a2, Swift::OpaquePointer a3)
{
  uint64_t v4 = v3;
  SQLDatabase.execute(sql:parameters:)(*(Swift::String *)&a1, a3);
}

uint64_t sub_10001C258()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_10001C260()
{
  v2._countAndFlagsBits = v1;
  v2._object = v0;
  String.append(_:)(v2);
}

void sub_10001C270()
{
  v0._countAndFlagsBits = 7368801LL;
  v0._object = (void *)0xE300000000000000LL;
  String.append(_:)(v0);
}

  ;
}

uint64_t sub_10001C294()
{
  return sub_10000E854(v0 - 160);
}

void sub_10001C29C()
{
  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

uint64_t sub_10001C2A8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  return sub_10001BCF4((uint64_t)va, v14);
}

uint64_t sub_10001C2B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  return sub_10001BCF4((uint64_t)va, v14);
}

void sub_10001C2C0(uint64_t a1)
{
  v1._countAndFlagsBits = a1 & 0xFFFFFFFFFFFFLL | 0x20000000000000LL;
  v1._object = (void *)0xE700000000000000LL;
  String.append(_:)(v1);
}

uint64_t sub_10001C2CC(uint64_t a1)
{
  return swift_bridgeObjectRetain(a1);
}

void sub_10001C2D8(Swift::String a1)
{
}

uint64_t sub_10001C2E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  return sub_10001BCF4((uint64_t)va, v9);
}

uint64_t sub_10001C2F0()
{
  return 0x4E4952545320LL;
}

uint64_t sub_10001C304()
{
  return sub_10000E888(v0 - 120);
}

uint64_t sub_10001C30C()
{
  return swift_bridgeObjectRetain(v0);
}

void sub_10001C318()
{
  v0._countAndFlagsBits = 10272LL;
  v0._object = (void *)0xE200000000000000LL;
  String.append(_:)(v0);
}

uint64_t destroy for AppConfiguration(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 48));
}

uint64_t initializeWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  id v8 = v3;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void *initializeWithTake for AppConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for AppConfiguration(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease(v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppConfiguration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0LL;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 80) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for AppConfiguration()
{
}

uint64_t getEnumTagSinglePayload for AppEventInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }

uint64_t sub_10001C62C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_10001C678 + 4 * byte_100164795[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10001C6AC + 4 * asc_100164790[v4]))();
}

uint64_t sub_10001C6AC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001C6B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10001C6BCLL);
  }
  return result;
}

uint64_t sub_10001C6C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10001C6D0LL);
  }
  *(_BYTE *)__n128 result = a2 + 2;
  return result;
}

uint64_t sub_10001C6D4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001C6DC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_10001C6E8(_BYTE *result, char a2)
{
  *__n128 result = a2;
  return result;
}

void type metadata accessor for RequestType()
{
}

uint64_t getEnumTagSinglePayload for AppDefaults.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }

uint64_t sub_10001C784(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_10001C7D0 + 4 * byte_10016479F[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10001C804 + 4 * byte_10016479A[v4]))();
}

uint64_t sub_10001C804(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001C80C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10001C814LL);
  }
  return result;
}

uint64_t sub_10001C820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10001C828LL);
  }
  *(_BYTE *)__n128 result = a2 + 3;
  return result;
}

uint64_t sub_10001C82C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10001C834(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for App()
{
}

uint64_t sub_10001C84C()
{
  return sub_10001D34C(&qword_1001C9100, &qword_1001C9108, (uint64_t)&protocol conformance descriptor for [A]);
}

uint64_t sub_10001C878(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10001C8B0 + 4 * byte_1001647A4[a1]))( 0x636974796C616E61LL,  0xE900000000000073LL);
}

uint64_t sub_10001C8B0()
{
  return sub_10001D42C();
}

uint64_t sub_10001C8C4()
{
  return sub_10001D418();
}

uint64_t sub_10001C8D8()
{
  return 0x6E656D6D6F636572LL;
}

_UNKNOWN **sub_10001C8FC()
{
  return &off_1001A6D80;
}

void sub_10001C908(char a1)
{
  uint64_t v2 = type metadata accessor for URL(0LL);
  __chkstk_darwin(v2);
  sub_10000DE8C();
  sub_10014F220();
  sub_10001D3E4();
  __asm { BR              X10 }

uint64_t sub_10001C974()
{
  uint64_t v1 = sub_10001D42C();
  URL.appendingPathComponent(_:isDirectory:)(v1, 0xE800000000000000LL, 1LL);
  swift_bridgeObjectRelease();
  return sub_10001D454(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
}

unint64_t sub_10001C9CC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A6BA0, v2);
  sub_100009020();
  if (v3 >= 4) {
    return 4LL;
  }
  else {
    return v3;
  }
}

void sub_10001CA10(char *a1)
{
}

void sub_10001CA1C()
{
}

void sub_10001CA24(uint64_t a1)
{
}

void sub_10001CA2C(uint64_t a1)
{
}

unint64_t sub_10001CA34@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10001C9CC(*a1);
  *a2 = result;
  return result;
}

void sub_10001CA60(uint64_t *a1@<X8>)
{
  *a1 = sub_10001C878(*v1);
  a1[1] = v3;
  sub_100009044();
}

void sub_10001CA84(void *a1@<X8>)
{
  *a1 = &off_1001A6D80;
}

unint64_t sub_10001CA98()
{
  unint64_t result = qword_1001C9110;
  if (!qword_1001C9110)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164894, &unk_1001A8968);
    atomic_store(result, (unint64_t *)&qword_1001C9110);
  }

  return result;
}

double sub_10001CAD4(char a1)
{
  if ((sub_100049C68() & 1) != 0) {
    double v2 = 600.0;
  }
  else {
    double v2 = dbl_100164960[a1];
  }
  double v3 = (double)sub_100049D4C();
  if ((v4 & 1) != 0) {
    double v3 = -0.0;
  }
  return v2 + v3;
}

unint64_t sub_10001CB4C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A6ED0, v2);
  sub_100009020();
  if (v3 >= 3) {
    return 3LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_10001CB90(char a1)
{
  if (!a1) {
    return 0x65756575716E65LL;
  }
  if (a1 == 1) {
    return 0x696577746867696CLL;
  }
  return 1668184435LL;
}

void sub_10001CBEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

void sub_10001CBF8()
{
}

uint64_t sub_10001CC00(uint64_t a1)
{
  return sub_100006BEC(a1, *v1);
}

void sub_10001CC08(uint64_t a1)
{
}

unint64_t sub_10001CC10@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10001CB4C(*a1);
  *a2 = result;
  return result;
}

void sub_10001CC3C(uint64_t *a1@<X8>)
{
  *a1 = sub_10001CB90(*v1);
  a1[1] = v3;
  sub_100009044();
}

unint64_t sub_10001CC64()
{
  unint64_t result = qword_1001C9118;
  if (!qword_1001C9118)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164934, &unk_1001A88D8);
    atomic_store(result, (unint64_t *)&qword_1001C9118);
  }

  return result;
}

uint64_t sub_10001CCA0()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_10000DE8C();
  if (*(unsigned __int8 *)(v0 + 64) - 1 > 1)
  {
    uint64_t v5 = sub_10000D33C(&qword_1001C8EA0);
    *(_OWORD *)(swift_allocObject(v5, 64LL, 7LL) + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    __asm { BR              X12 }
  }

  uint64_t v3 = UUID.init()();
  uint64_t v4 = UUID.uuidString.getter(v3);
  sub_10001D454(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return v4;
}

NSString sub_10001CE6C()
{
  return ((NSString (*)())((char *)sub_10001CE88 + 4 * byte_1001647B0[*(unsigned __int8 *)(v0 + 1)]))();
}

NSString sub_10001CE88()
{
  return sub_10001D3D0();
}

NSString sub_10001CEA0()
{
  return String._bridgeToObjectiveC()();
}

NSString sub_10001CEC8()
{
  return String._bridgeToObjectiveC()();
}

NSString sub_10001CEEC()
{
  return sub_10001D3DC();
}

NSString sub_10001CF04()
{
  return ((NSString (*)())((char *)sub_10001CF20 + 4 * byte_1001647B4[*(unsigned __int8 *)(v0 + 1)]))();
}

NSString sub_10001CF20()
{
  return sub_10001D3D0();
}

NSString sub_10001CF38()
{
  return sub_10001D3DC();
}

NSString sub_10001CF50()
{
  return String._bridgeToObjectiveC()();
}

void sub_10001CF94()
{
  qword_1001C90F0 = (uint64_t)sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
  sub_100009044();
}

id sub_10001CFE8()
{
  if (qword_1001C7F00 != -1) {
    swift_once(&qword_1001C7F00, sub_100011A50);
  }
  qword_1001C90F8 = qword_1001DBAB0;
  return (id)qword_1001DBAB0;
}

void sub_10001D030()
{
  uint64_t v0 = sub_10000D33C(&qword_1001CF970);
  __chkstk_darwin(v0);
  sub_10000DE8C();
  type metadata accessor for Defaults();
  CFPropertyListRef v1 = sub_100049E28();
  if (!v1
    || (CFPropertyListRef v6 = v1,
        uint64_t v2 = sub_10000D33C(&qword_1001C9120),
        !swift_dynamicCast(&v5, &v6, (char *)&type metadata for Swift.AnyObject + 8, v2, 6LL)))
  {
    uint64_t v3 = type metadata accessor for Date(0LL);
    Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v3,  &protocol witness table for String);
  }

  sub_10001D3E4();
  __asm { BR              X10 }

uint64_t sub_10001D114()
{
  uint64_t v3 = sub_10001D42C();
  sub_1000307DC(v3, 0xE800000000000000LL, v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Date(0LL);
  ((void (*)(void))static Date.distantPast.getter)();
  return sub_1000119E0(v2);
}

uint64_t sub_10001D1B4()
{
  BOOL v1 = (*v0 & 1) == 0;
  sub_100016F88();
  uint64_t v2 = sub_10001D44C();
  uint64_t v4 = v3;
  unint64_t v5 = _swiftEmptyArrayStorage[2];
  unint64_t v6 = v5 + 1;
  if (v5 >= _swiftEmptyArrayStorage[3] >> 1) {
    sub_10001D394();
  }
  _swiftEmptyArrayStorage[2] = v6;
  BOOL v7 = &_swiftEmptyArrayStorage[2 * v5];
  v7[4] = v2;
  v7[5] = v4;
  sub_10001D44C();
  sub_10001D400();
  if (v8) {
    sub_10001D394();
  }
  _swiftEmptyArrayStorage[2] = v6;
  uint64_t v9 = &_swiftEmptyArrayStorage[2 * v1];
  v9[4] = v2;
  v9[5] = v4;
  sub_10001D44C();
  sub_10001D400();
  if (v8) {
    sub_10001D394();
  }
  _swiftEmptyArrayStorage[2] = v6;
  uint64_t v10 = &_swiftEmptyArrayStorage[2 * v1];
  v10[4] = v2;
  v10[5] = v4;
  sub_10000D33C(&qword_1001CDF50);
  sub_10001D34C( (unint64_t *)&qword_1001C90E8,  &qword_1001CDF50,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v11 = sub_10001D440(46LL);
  swift_release(_swiftEmptyArrayStorage);
  return v11;
}

uint64_t sub_10001D34C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = sub_10000D820(a2);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

void sub_10001D394()
{
}

uint64_t sub_10001D3AC()
{
  return 0x6E656D6D6F636572LL;
}

NSString sub_10001D3D0()
{
  return String._bridgeToObjectiveC()();
}

NSString sub_10001D3DC()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10001D3E4()
{
  return 0x636974796C616E61LL;
}

  ;
}

uint64_t sub_10001D418()
{
  return 0x7379656E72756F6ALL;
}

uint64_t sub_10001D42C()
{
  return 0x6C616E7265746E69LL;
}

uint64_t sub_10001D440(uint64_t a1)
{
  return BidirectionalCollection<>.joined(separator:)(a1, 0xE100000000000000LL, v1);
}

uint64_t sub_10001D44C()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10001D454@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

  ;
}

void *sub_10001D468(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
    for (uint64_t i = 4LL; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1)
         : *(id *)(a1 + 8 * i);
      BOOL v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1LL)) {
        break;
      }
      unsigned int v9 = [v6 processIdentifier];
      uint64_t v10 = swift_allocObject(&unk_1001A8A00, 28LL, 7LL);
      *(void *)(v10 + swift_weakDestroy(v0 + 16) = a2;
      *(_DWORD *)(v10 + 24) = v9;
      unint64_t v26 = sub_10001E4C0;
      uint64_t v27 = v10;
      *(void *)&__int128 aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256LL;
      uint64_t v24 = sub_1000B1D04;
      uint64_t v25 = &unk_1001A8A18;
      uint64_t v11 = _Block_copy(&aBlock);
      swift_retain(a2);
      swift_release();
      id v12 = [v7 remoteObjectProxyWithErrorHandler:v11];
      _Block_release(v11);
      _bridgeAnyObjectToAny(_:)(v12);
      swift_unknownObjectRelease(v12);
      sub_10000DA58(&v28, &aBlock);
      uint64_t v13 = sub_10000D33C(&qword_1001C92A8);
      if (swift_dynamicCast(&v22, &aBlock, (char *)&type metadata for Any + 8, v13, 6LL))
      {
        uint64_t v14 = v22;

        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        {
          sub_100013C00();
          uint64_t v4 = v17;
        }

        unint64_t v15 = v4[2];
        if (v15 >= v4[3] >> 1)
        {
          sub_100013C00();
          uint64_t v4 = v18;
        }

        uint64_t v4[2] = v15 + 1;
        uint64_t v16 = &v4[2 * v15];
        *((_DWORD *)v16 + 8) = v9;
        v16[5] = v14;
      }

      else
      {
      }

      if (v8 == v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v4;
      }
    }

    __break(1u);
LABEL_18:
    if (a1 < 0) {
      uint64_t v19 = a1;
    }
    else {
      uint64_t v19 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
  }

  swift_release();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10001D718()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(AMSEngagementServiceName);
  sub_1000307D8(v2, v3, v1);
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    id v6 = *(void **)&v5[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connectionsLock];
    BOOL v7 = v5;
    [v6 lock];
    uint64_t v8 = (uint64_t *)&v7[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connections];
    swift_beginAccess(&v7[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_connections], v14, 0LL, 0LL);
    uint64_t v9 = *v8;
    objc_msgSend(v6, "unlock", swift_bridgeObjectRetain(v9).n128_f64[0]);

    swift_retain(v0);
    uint64_t v10 = sub_10001D468(v9, v0);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_10001DAFC((uint64_t)v10);

    return (uint64_t)v11;
  }

  else
  {
    uint64_t v13 = sub_10000D33C(&qword_1001C92A8);
    return Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for Int32,  v13,  &protocol witness table for Int32);
  }

uint64_t sub_10001D848(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v5);
  BOOL v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v9 = type metadata accessor for LogMessage(0LL);
  uint64_t v10 = swift_allocObject( v8,  ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v9 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = xmmword_100164240;
  uint64_t v34 = (void *)type metadata accessor for AppConnection();
  v33[0] = a2;
  uint64_t v11 = swift_retain(a2);
  id v12 = (id)AMSLogKey(v11);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v16 = v15;

    swift_bridgeObjectRetain(v16);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v17._countAndFlagsBits = 0LL;
    v17._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    double v18 = v34;
    uint64_t v19 = sub_10000D37C(v33, (uint64_t)v34);
    uint64_t DynamicType = swift_getDynamicType(v19, v18, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v31[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v31);
    sub_10000E888((uint64_t)v31);
    v21._countAndFlagsBits = 5972026LL;
    v21._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t MetatypeMetadata = &type metadata for String;
    v31[0] = v14;
    v31[1] = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v31);
    sub_10000E888((uint64_t)v31);
    v22._countAndFlagsBits = 93LL;
    v22._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    LogMessage.init(stringInterpolation:)(v7);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v23._countAndFlagsBits = 0LL;
    v23._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v23);
    uint64_t v24 = v34;
    uint64_t v25 = sub_10000D37C(v33, (uint64_t)v34);
    uint64_t v26 = swift_getDynamicType(v25, v24, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v26);
    v31[0] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v31);
    sub_10000E888((uint64_t)v31);
    v27._countAndFlagsBits = 58LL;
    v27._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)(v7);
  }

  sub_10000D3A0(v33);
  LogMessage.init(stringLiteral:)(0xD000000000000029LL);
  uint64_t v34 = &type metadata for Int32;
  LODWORD(v33[0]) = a3;
  static LogMessage.safe(_:)(v33);
  uint64_t v28 = sub_10000E888((uint64_t)v33);
  if (qword_1001C7F80 != -1) {
    uint64_t v28 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v29 = static os_log_type_t.default.getter(v28);
  sub_1000BD1B0(v29, v10);
  return swift_bridgeObjectRelease();
}

void *sub_10001DAFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_10000D33C(&qword_1001C92B0);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
  }

  uint64_t v6 = v3;
  swift_bridgeObjectRetain(a1);
  sub_10001DD90(v4, 1, &v6);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10001DBA4()
{
  uint64_t v0 = type metadata accessor for AppConnection();
  uint64_t v1 = swift_allocObject(v0, 32LL, 7LL);
  uint64_t result = sub_10001DBDC();
  qword_1001DBAC0 = v1;
  return result;
}

uint64_t sub_10001DBDC()
{
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = [objc_allocWithZone((Class)type metadata accessor for ServerDataCacheService()) init];
  static String._unconditionallyBridgeFromObjectiveC(_:)(AMSEngagementServiceName);
  uint64_t v2 = v1;
  if (qword_1001C7F50 != -1) {
    swift_once(&qword_1001C7F50, sub_100055FD4);
  }
  sub_10001E044(qword_1001DBAC8);
  swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  sub_100034910();
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  static String._unconditionallyBridgeFromObjectiveC(_:)(AMSServerDataCacheServiceName);
  uint64_t v4 = v3;
  id v5 = *(id *)(v0 + 16);
  sub_10001E2E8((uint64_t)v5);

  swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
  sub_100034910();
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  *(void *)(v0 + 24) = _swiftEmptyDictionarySingleton;
  return v0;
}

uint64_t sub_10001DD2C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  return v0;
}

uint64_t sub_10001DD50()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for AppConnection()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd13AppConnection);
}

uint64_t sub_10001DD90(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain(a1);
  uint64_t v30 = v6;
  for (uint64_t i = (void *)(v6 + 40); ; i += 2)
  {
    unsigned int v8 = *((_DWORD *)i - 2);
    uint64_t v9 = *i;
    unsigned int v34 = v8;
    uint64_t v10 = (void *)*a3;
    unint64_t v11 = sub_100030D68(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v12 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int32);
      __break(1u);
      goto LABEL_20;
    }

    unint64_t v16 = v11;
    char v17 = v12;
    uint64_t v18 = v10[3];
    swift_unknownObjectRetain(v9);
    if (v18 < v15) {
      break;
    }
    if ((a2 & 1) != 0)
    {
      if ((v17 & 1) != 0) {
        goto LABEL_14;
      }
    }

    else
    {
      sub_10000D33C(&qword_1001C92B8);
      _NativeDictionary.copy()();
      if ((v17 & 1) != 0) {
        goto LABEL_14;
      }
    }

LABEL_10:
    Swift::String v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v16 >> 6) + 64) |= 1LL << v16;
    *(_DWORD *)(v21[6] + 4 * vswift_weakDestroy(v0 + 16) = v8;
    *(void *)(v21[7] + 8 * vswift_weakDestroy(v0 + 16) = v9;
    uint64_t v22 = v21[2];
    BOOL v23 = __OFADD__(v22, 1LL);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_18;
    }
    v21[2] = v24;
    a2 = 1;
    if (!--v3) {
      return swift_bridgeObjectRelease_n(v30, 2LL);
    }
  }

  sub_1000321E8();
  unint64_t v19 = sub_100030D68(v8);
  if ((v17 & 1) != (v20 & 1)) {
    goto LABEL_19;
  }
  unint64_t v16 = v19;
  if ((v17 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v25 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0LL, 0LL);
  swift_willThrow(v25);
  uint64_t v33 = v25;
  swift_errorRetain(v25);
  uint64_t v26 = sub_10000D33C((uint64_t *)&unk_1001CE740);
  if ((swift_dynamicCast(v26, &v33, v26, &type metadata for _MergeError, 0LL) & 1) == 0)
  {
    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease_n(v30, 2LL);
    return swift_errorRelease(v33);
  }

    swift_once(&qword_1001C7FD0, sub_1000BD660);
    goto LABEL_4;
  }

  uint64_t v30 = *(__int128 *)((char *)a1 + 24);
  unint64_t v16 = type metadata accessor for Worker();
  uint64_t v2 = sub_10000DDDC(v16, 104LL);
  char v17 = *a1;
  *(_OWORD *)(v2 + 64) = a1[1];
  *(void *)(v2 + 80) = *((void *)a1 + 4);
  *(_OWORD *)(v2 + 88) = xmmword_100168510;
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 24) = &_swiftEmptyArrayStorage[4];
  *(_OWORD *)(v2 + 32) = xmmword_100167500;
  *(_OWORD *)(v2 + 48) = v17;
  sub_10000DF10();
  sub_1000288A4((uint64_t)&v30);
  uint64_t v18 = qword_1001C7FD0;
  sub_10000DFF4();
  if (v18 != -1) {
    swift_once(&qword_1001C7FD0, sub_1000BD660);
  }
  sub_10002588C();
  sub_10000DFF4();
  sub_1000BB4D4();
  sub_10000DC44((uint64_t)(v4 + 2), (uint64_t)v28, 33LL);
  sub_10000DF10();
  unint64_t v19 = sub_10000DFF4();
  sub_100034310(v19, v10, v11, v20, v21, v22, v23, v24, v28[0], v28[1]);
  sub_1001058C4();
  sub_10000DE2C();
  sub_10000DC44((uint64_t)(v4 + 3), (uint64_t)v28, 33LL);
  uint64_t v25 = (uint64_t (*)(uint64_t *, uint64_t *))v4[5];
  uint64_t v26 = v4[6];
  swift_retain(v26);
  sub_100101598(v4 + 4, v25, v26, v2);
  sub_1001058C4();
  sub_100037230();
  uint64_t v15 = v26;
LABEL_8:
  swift_release(v15);
  return v2;
}

      v12(v16, v15);
      uint64_t result = sub_1001225E0(v16, v15);
      break;
    default:
      sub_100122FB8();
      uint64_t result = sub_100122F34( (uint64_t)"Fatal error",  11LL,  2LL,  0xD000000000000011LL,  0x8000000100176E00LL,  (uint64_t)"amsengagementd/ServerDataCacheService.swift",  v18,  v19,  v20,  v21);
      __break(1u);
      break;
  }

  return result;
}

      sub_10011DA1C(v17, v15, a3, a4, a5, a6, a7, a8, v13, a10, a11, a12, a13);
      uint64_t result = sub_1001225E0((uint64_t)v17, v15);
      break;
    default:
      uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000011LL,  0x8000000100176E00LL,  "amsengagementd/ServerDataCacheService.swift",  43LL,  2LL,  588LL,  0);
      __break(1u);
      break;
  }

  return result;
}

char *sub_10001E044(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(AMSEngagementServiceName);
  uint64_t v4 = v3;
  id v5 = objc_allocWithZone((Class)type metadata accessor for XPCServiceProvider());
  uint64_t v6 = sub_100153FC0(v2, v4);
  BOOL v7 = (void *)objc_opt_self(&OBJC_CLASS___NSXPCInterface);
  id v8 = [v7 interfaceWithProtocol:&OBJC_PROTOCOL___AMSEngagementServiceProtocol];
  id v20 = [v7 interfaceWithProtocol:&OBJC_PROTOCOL___AMSTreatmentStoreServiceProtocol];
  [v8 setInterface:v20 forSelector:"treatmentStoreServiceWithReply:" argumentIndex:0 ofReply:1];
  id v9 = [(id)objc_opt_self(AMSEngagementEnqueueRequest) archiveClasses];
  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  [v8 setClasses:isa forSelector:"enqueueWithRequest:completion:" argumentIndex:0 ofReply:0];

  id v12 = [(id)objc_opt_self(AMSEngagementSyncRequest) archiveClasses];
  uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  Class v14 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  [v8 setClasses:v14 forSelector:"syncWithRequest:completion:" argumentIndex:0 ofReply:0];

  id v15 = v8;
  sub_100153FA8((uint64_t)v8);
  void v22[3] = swift_getObjectType(a1);
  v22[0] = a1;
  uint64_t v16 = (uint64_t)&v6[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject];
  swift_beginAccess(&v6[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject], v21, 33LL, 0LL);
  swift_unknownObjectRetain(a1);
  sub_10001E454((uint64_t)v22, v16);
  swift_endAccess(v21);
  id v17 = [v7 interfaceWithProtocol:&OBJC_PROTOCOL___AMSEngagementClientProtocol];
  id v18 = v17;
  sub_100153FB4((uint64_t)v17);

  return v6;
}

char *sub_10001E2E8(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(AMSServerDataCacheServiceName);
  uint64_t v4 = v3;
  id v5 = objc_allocWithZone((Class)type metadata accessor for XPCServiceProvider());
  uint64_t v6 = sub_100153FC0(v2, v4);
  id v7 =  [(id)objc_opt_self(NSXPCInterface) interfaceWithProtocol:&OBJC_PROTOCOL___AMSServerDataCacheServiceProtocol];
  unint64_t v8 = sub_10001E418();
  [v7 setClass:swift_getObjCClassFromMetadata(v8) forSelector:"setUpCacheForAccount:completion:" argumentIndex:0 ofReply:0];
  id v9 = v7;
  sub_100153FA8((uint64_t)v7);
  v13[3] = swift_getObjectType(a1);
  v13[0] = a1;
  uint64_t v10 = (uint64_t)&v6[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject];
  swift_beginAccess(&v6[OBJC_IVAR____TtC14amsengagementd18XPCServiceProvider_exportedObject], v12, 33LL, 0LL);
  swift_unknownObjectRetain(a1);
  sub_10001E454((uint64_t)v13, v10);
  swift_endAccess(v12);

  return v6;
}

unint64_t sub_10001E418()
{
  unint64_t result = qword_1001C8C70;
  if (!qword_1001C8C70)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___ACAccount);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001C8C70);
  }

  return result;
}

uint64_t sub_10001E454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001CAAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001E49C()
{
  return swift_deallocObject(v0, 28LL, 7LL);
}

uint64_t sub_10001E4C0(uint64_t a1)
{
  return sub_10001D848(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24));
}

uint64_t sub_10001E4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10001E4DC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

Swift::Int sub_10001E4E4()
{
  return Hasher._finalize()();
}

uint64_t sub_10001E528(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  sub_100020BB4();
  sub_100020B9C();
  sub_100020AB8();
  sub_100020B4C();
  uint64_t v8 = v13;
  uint64_t v7 = v14;
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = swift_allocObject(&unk_1001A8AA0, 32LL, 7LL);
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  v12[2] = v9;
  v12[3] = v8;
  v12[4] = v7;
  v12[5] = _swiftEmptyArrayStorage;
  v12[6] = sub_1000207C8;
  v12[7] = v10;
  swift_retain(a2);
  sub_100129A28((void (*)(void))sub_10001BBE0, (uint64_t)v12);
  sub_100020AB8();
  return sub_100020AD8();
}

uint64_t sub_10001E62C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = type metadata accessor for ContentInfo(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10012B4A8(&v13);
  if (!v2)
  {
    unint64_t v7 = *((void *)&v13 + 1);
    if (*((void *)&v13 + 1) >> 60 != 15LL)
    {
      uint64_t v8 = v13;
      sub_100021A68(6, &v13);
      if (v14)
      {
        uint64_t v9 = sub_10000D33C(&qword_1001C8F18);
        if ((swift_dynamicCast(&v15, &v13, (char *)&type metadata for Any + 8, v9, 6LL) & 1) != 0)
        {
          sub_1000388A0(v15, v6);
          a2(v6);
          sub_1000207E4((uint64_t)v6);
          sub_10001BD70(v8, v7);
          return 1LL;
        }

        sub_10001BD70(v8, v7);
      }

      else
      {
        sub_10001BD70(v8, v7);
        sub_10000E888((uint64_t)&v13);
      }
    }

    unint64_t v10 = sub_10002061C();
    uint64_t v11 = swift_allocError(&type metadata for AppContentTable.ContentError, v10, 0LL, 0LL);
    swift_willThrow(v11);
  }

  return 1LL;
}

uint64_t sub_10001E7C4(uint64_t a1, uint64_t a2)
{
  v5._countAndFlagsBits = 0x3F20454B494C20LL;
  v5._object = (void *)0xE700000000000000LL;
  String.append(_:)(v5);
  sub_100020B18(v6, v7, v8, v9, v10, v11, v12, v13, v34, 0xE000000000000000LL, 0LL, v2, 0LL, 0xE000000000000000LL);
  uint64_t v14 = v42;
  uint64_t v15 = v43;
  sub_10000DF10();
  sub_1000209A0(9516LL);
  sub_100020B18(v16, v17, v18, v19, v20, v21, v22, v23, v35, v36, v38, v40, a1, a2);
  sub_1000209A0(9516LL);
  uint64_t v24 = v42;
  uint64_t v25 = v43;
  uint64_t v26 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v26, v44);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1001649D0;
  *(void *)(inited + 32) = v14;
  *(void *)(inited + 40) = v15;
  uint64_t v28 = sub_100020B80(inited);
  *(void *)(v28 + 56) = a1;
  *(void *)(v28 + 64) = a2;
  *(_BYTE *)(v28 + 72) = v29;
  *(void *)(v28 + 80) = v24;
  *(void *)(v28 + 88) = v25;
  *(_BYTE *)(v28 + 96) = v29;
  *(void *)(v28 + 104) = a1;
  *(void *)(v28 + 112) = a2;
  *(_BYTE *)(v28 + 120) = v29;
  uint64_t v30 = sub_100020AF8((uint64_t)&unk_1001A8A78);
  *(void *)(v30 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v31 = *(void *)(v41 + 16);
  swift_bridgeObjectRetain(a2);
  uint64_t v32 = v45;
  sub_100048EAC(v39, v37, inited, (uint64_t)sub_1000206C4, v30);
  if (v32)
  {
    sub_100020AD8();
    sub_100020C68();
    sub_100020C60();
    sub_10000DE2C();
  }

  else
  {
    swift_retain(v30);
    sub_10000DE2C();
    sub_100020C68();
    sub_100020C60();
    sub_100020AD8();
    sub_100020A94(v30 + 16, (uint64_t)&v42);
    uint64_t v31 = *(void *)(v30 + 16);
    sub_10000DF08();
    sub_100020AD8();
  }

  return v31;
}

uint64_t sub_10001EA08()
{
  unsigned __int8 v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  sub_100020C20();
  sub_100020C00();
  sub_100020BC8();
  uint64_t v28 = v12;
  uint64_t v29 = v13;
  sub_10000DEB4();
  sub_100020BA8();
  sub_10000DDF8();
  sub_10001C2C0(0x455245485720LL);
  sub_1000208FC();
  sub_100020B70();
  uint64_t v27 = v29;
  uint64_t v14 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v14, v30);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v9;
  *(_BYTE *)(inited + 48) = 3;
  swift_bridgeObjectRetain(v9);
  if (v5)
  {
    sub_100020BB4();
    v16._object = (void *)0x800000010016BC40LL;
    v16._countAndFlagsBits = 0xD000000000000010LL;
    String.append(_:)(v16);
    sub_100020C54();
    uint64_t inited = v17;
    *(void *)(v17 + swift_weakDestroy(v0 + 16) = 2LL;
    *(void *)(v17 + 56) = v7;
    *(void *)(v17 + 64) = v5;
    *(_BYTE *)(v17 + 72) = 3;
  }

  if (v3 != 4)
  {
    sub_100020A2C();
    unint64_t v18 = *(void *)(inited + 16);
    if (v18 >= *(void *)(inited + 24) >> 1)
    {
      sub_100020C54();
      uint64_t inited = v26;
    }

    *(void *)(inited + swift_weakDestroy(v0 + 16) = v18 + 1;
    uint64_t v19 = inited + 24 * v18;
    *(void *)(v19 + 32) = v3;
    *(void *)(v19 + 40) = 0LL;
    *(_BYTE *)(v19 + 48) = 1;
  }

  sub_100020B4C();
  uint64_t v20 = sub_100020AF8((uint64_t)&unk_1001A8A78);
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v21 = *(void *)(v1 + 16);
  __chkstk_darwin(v20);
  sub_100020BD4();
  *(void *)(v22 - 32) = v27;
  *(void *)(v22 - 24) = inited;
  *(void *)(v22 - swift_weakDestroy(v0 + 16) = sub_100020788;
  *(void *)(v22 - 8) = v23;
  sub_100129A28((void (*)(void))sub_10001BBE0, v24);
  if (v0)
  {
    sub_100020AD8();
    sub_10000DE2C();
    sub_10000DDF8();
  }

  else
  {
    sub_10000DE2C();
    sub_10000DDF8();
    sub_100020A94(v20 + 16, (uint64_t)&v28);
    uint64_t v21 = *(void *)(v20 + 16);
    sub_10000DF08();
    sub_100020AD8();
  }

  return v21;
}

uint64_t sub_10001EC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10012B4A8(&v17);
  if (!v2)
  {
    unint64_t v8 = *((void *)&v17 + 1);
    if (*((void *)&v17 + 1) >> 60 != 15LL)
    {
      uint64_t v9 = v17;
      sub_100021A68(6, &v17);
      if (v18)
      {
        uint64_t v10 = sub_10000D33C(&qword_1001C8F18);
        if ((swift_dynamicCast(&v19, &v17, (char *)&type metadata for Any + 8, v10, 6LL) & 1) != 0)
        {
          sub_1000388A0(v19, v7);
          uint64_t v11 = (uint64_t *)(a2 + 16);
          swift_beginAccess(a2 + 16, &v17, 33LL, 0LL);
          sub_100063EBC();
          uint64_t v12 = *(void *)(*(void *)(a2 + 16) + 16LL);
          sub_100063F74(v12);
          uint64_t v13 = *v11;
          *(void *)(v13 + swift_weakDestroy(v0 + 16) = v12 + 1;
          sub_1000206E0( (uint64_t)v7,  v13 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
          + *(void *)(v5 + 72) * v12);
          swift_endAccess(&v17);
          sub_10001BD70(v9, v8);
          return 0LL;
        }

        sub_10001BD70(v9, v8);
      }

      else
      {
        sub_10001BD70(v9, v8);
        sub_10000E888((uint64_t)&v17);
      }
    }

    unint64_t v14 = sub_10002061C();
    uint64_t v15 = swift_allocError(&type metadata for AppContentTable.ContentError, v14, 0LL, 0LL);
    swift_willThrow(v15);
  }

  return 0LL;
}

uint64_t sub_10001EE4C()
{
  uint64_t v3 = v2;
  _StringGuts.grow(_:)(23LL);
  swift_bridgeObjectRelease();
  sub_100020BC8();
  uint64_t v17 = v4;
  uint64_t v18 = v5;
  sub_10000DEB4();
  sub_100020BA8();
  sub_10000DDF8();
  sub_100020A54(0x455245485720LL);
  uint64_t v7 = v17;
  uint64_t v6 = v18;
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(v3 + 16);
  if (v8)
  {
    sub_10000DD9C();
    uint64_t v9 = 0LL;
    uint64_t v10 = (void **)(v3 + 40);
    do
    {
      uint64_t v11 = (uint64_t)*(v10 - 1);
      uint64_t v12 = *v10;
      sub_10000DEB4();
      sub_10001EFFC(v9, v11, v12, (uint64_t)&v19, (uint64_t *)&v21);
      sub_10000DDF8();
      v10 += 2;
      ++v9;
    }

    while (v8 != v9);
    sub_10000DCFC();
    uint64_t v7 = v19;
    uint64_t v6 = v20;
    uint64_t v13 = v21;
  }

  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }

  uint64_t v14 = sub_100020AF8((uint64_t)&unk_1001A8A78);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(v1 + 16);
  sub_10000DEB4();
  sub_10000DD9C();
  sub_100048EAC(v7, v6, (uint64_t)v13, (uint64_t)sub_1000206C4, v14);
  if (v0)
  {
    sub_100020B68();
    sub_10000DDF8();
    swift_bridgeObjectRelease_n(v13, 2LL);
    sub_10000DDF8();
  }

  else
  {
    sub_10000DDF8();
    sub_10000DCFC();
    sub_100020A94(v14 + 16, (uint64_t)&v17);
    uint64_t v15 = *(void *)(v14 + 16);
    sub_10000DF08();
    sub_10000DCFC();
    sub_100020B68();
    sub_10000DDF8();
  }

  return v15;
}

void sub_10001EFFC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
  if (a1 >= 1)
  {
    v8._countAndFlagsBits = 0x20444E4120LL;
    v8._object = (void *)0xE500000000000000LL;
    String.append(_:)(v8);
  }

  _StringGuts.grow(_:)(50LL);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x800000010016BBF0LL;
  v9._countAndFlagsBits = 0xD00000000000004ALL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = a2;
  v10._object = a3;
  String.append(_:)(v10);
  swift_bridgeObjectRetain(a3);
  v11._countAndFlagsBits = 9516LL;
  v11._object = (void *)0xE200000000000000LL;
  String.append(_:)(v11);
  v12._countAndFlagsBits = a2;
  v12._object = a3;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 9516LL;
  v13._object = (void *)0xE200000000000000LL;
  String.append(_:)(v13);
  uint64_t v14 = *(void *)(*a5 + 16);
  uint64_t v15 = v14 + 4;
  if (__OFADD__(v14, 4LL))
  {
    __break(1u);
  }

  else
  {
    swift_bridgeObjectRetain(a3);
    sub_100020724(v15);
    swift_bridgeObjectRetain(0xE200000000000000LL);
    sub_100063EB0();
    uint64_t v16 = *(void *)(*a5 + 16);
    sub_100063F68(v16);
    uint64_t v17 = *a5;
    *(void *)(v17 + swift_weakDestroy(v0 + 16) = v16 + 1;
    uint64_t v18 = v17 + 24 * v16;
    *(void *)(v18 + 32) = 11301LL;
    *(void *)(v18 + 40) = 0xE200000000000000LL;
    *(_BYTE *)(v18 + 48) = 3;
    swift_bridgeObjectRetain(a3);
    sub_100063EB0();
    uint64_t v19 = *(void *)(*a5 + 16);
    sub_100063F68(v19);
    uint64_t v20 = *a5;
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = v19 + 1;
    uint64_t v21 = v20 + 24 * v19;
    *(void *)(v21 + 32) = a2;
    *(void *)(v21 + 40) = a3;
    *(_BYTE *)(v21 + 48) = 3;
    swift_bridgeObjectRetain(0xE200000000000000LL);
    sub_100063EB0();
    uint64_t v22 = *(void *)(*a5 + 16);
    sub_100063F68(v22);
    uint64_t v23 = *a5;
    *(void *)(v23 + swift_weakDestroy(v0 + 16) = v22 + 1;
    uint64_t v24 = v23 + 24 * v22;
    *(void *)(v24 + 32) = 11301LL;
    *(void *)(v24 + 40) = 0xE200000000000000LL;
    *(_BYTE *)(v24 + 48) = 3;
    swift_bridgeObjectRetain(a3);
    sub_100063EB0();
    uint64_t v25 = *(void *)(*a5 + 16);
    sub_100063F68(v25);
    uint64_t v26 = *a5;
    *(void *)(v26 + swift_weakDestroy(v0 + 16) = v25 + 1;
    uint64_t v27 = v26 + 24 * v25;
    *(void *)(v27 + 32) = a2;
    *(void *)(v27 + 40) = a3;
    *(_BYTE *)(v27 + 48) = 3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

uint64_t sub_10001F240(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_100020C40();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (void *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_10000D37C(a1, a1[3]);
  sub_10012B4A8(&v16);
  if (!v2)
  {
    if (*((void *)&v16 + 1) >> 60 != 15LL)
    {
      sub_100021A68(6, &v16);
      if (v17)
      {
        uint64_t v9 = sub_10000D33C(&qword_1001C8F18);
        if ((swift_dynamicCast(&v18, &v16, (char *)&type metadata for Any + 8, v9, 6LL) & 1) != 0)
        {
          sub_1000388A0(v18, v8);
          Swift::String v10 = (uint64_t *)(a2 + 16);
          swift_beginAccess(a2 + 16, &v16, 33LL, 0LL);
          sub_100063EBC();
          uint64_t v11 = *(void *)(*(void *)(a2 + 16) + 16LL);
          sub_100063F74(v11);
          uint64_t v12 = *v10;
          *(void *)(v12 + swift_weakDestroy(v0 + 16) = v11 + 1;
          sub_1000206E0( (uint64_t)v8,  v12 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
          + *(void *)(v6 + 72) * v11);
          swift_endAccess(&v16);
          sub_100020B40();
          return 1LL;
        }

        sub_100020B40();
      }

      else
      {
        sub_100020B40();
        sub_10000E888((uint64_t)&v16);
      }
    }

    unint64_t v13 = sub_10002061C();
    uint64_t v14 = sub_100020C48((uint64_t)&type metadata for AppContentTable.ContentError, v13);
    swift_willThrow(v14);
  }

  return 1LL;
}

uint64_t sub_10001F404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  int v7 = a3;
  sub_100020C20();
  sub_100020C00();
  sub_10000DD9C();
  sub_10001C29C();
  sub_10000DCFC();
  sub_10001C2C0(0x455245485720LL);
  sub_100020948();
  sub_100020B70();
  uint64_t v8 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v8, v24);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_100020B80(inited);
  swift_bridgeObjectRetain(a2);
  if (v7 != 4)
  {
    sub_100020A2C();
    sub_100013D04();
    uint64_t inited = v10;
    *(void *)(v10 + swift_weakDestroy(v0 + 16) = 2LL;
    *(void *)(v10 + 56) = a3;
    *(void *)(v10 + 64) = 0LL;
    *(_BYTE *)(v10 + 72) = 1;
  }

  v23[0] = 0LL;
  v23[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(18LL);
  sub_100020C00();
  v11._countAndFlagsBits = 0xD00000000000001CLL;
  v11._object = (void *)0x800000010016BBD0LL;
  String.append(_:)(v11);
  uint64_t v12 = sub_10000D33C(&qword_1001C8FE0);
  uint64_t v13 = swift_allocBox(v12);
  uint64_t v15 = v14;
  uint64_t v16 = sub_100020C40();
  uint64_t v17 = sub_10000D5C0(v15, 1LL, 1LL, v16);
  __chkstk_darwin(v17);
  sub_100020BD4();
  *(void *)(v18 - 32) = 0x800000010016BBB0LL;
  *(void *)(v18 - 24) = inited;
  *(void *)(v18 - swift_weakDestroy(v0 + 16) = sub_1000205B8;
  *(void *)(v18 - 8) = v13;
  sub_100129A28((void (*)(void))sub_10001BBE0, v19);
  if (v22)
  {
    sub_100020B68();
    sub_10000DDF8();
    return sub_10000DCFC();
  }

  else
  {
    sub_10000DDF8();
    sub_10000DCFC();
    sub_100020A94(v15, (uint64_t)v23);
    sub_1000205D4(v15, a4);
    return sub_100020B68();
  }

uint64_t sub_10001F63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C8FE0);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = swift_projectBox(a2);
  sub_10012B4A8(&v15);
  if (!v2)
  {
    unint64_t v8 = *((void *)&v15 + 1);
    if (*((void *)&v15 + 1) >> 60 != 15LL)
    {
      uint64_t v9 = v15;
      sub_100021A68(6, &v15);
      if (v16)
      {
        uint64_t v10 = sub_10000D33C(&qword_1001C8F18);
        if ((swift_dynamicCast(&v17, &v15, (char *)&type metadata for Any + 8, v10, 6LL) & 1) != 0)
        {
          sub_1000388A0(v17, v6);
          sub_10001BD70(v9, v8);
          uint64_t v11 = type metadata accessor for ContentInfo(0LL);
          sub_10000D5C0((uint64_t)v6, 0LL, 1LL, v11);
          swift_beginAccess(v7, &v15, 1LL, 0LL);
          sub_100020658((uint64_t)v6, v7);
          return 0LL;
        }

        sub_10001BD70(v9, v8);
      }

      else
      {
        sub_10001BD70(v9, v8);
        sub_10000E888((uint64_t)&v15);
      }
    }

    unint64_t v12 = sub_10002061C();
    uint64_t v13 = swift_allocError(&type metadata for AppContentTable.ContentError, v12, 0LL, 0LL);
    swift_willThrow(v13);
  }

  return 0LL;
}

uint64_t sub_10001F7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BYTE5(v21[1]) = 0;
  HIWORD(v21[1]) = -5120;
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = *(void **)(v4 + 32);
  swift_bridgeObjectRetain(v10);
  v11._countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  sub_10001C2C0(0x455245485720LL);
  sub_1000208FC();
  sub_100020A70();
  sub_100020914();
  sub_100020A54(0x3B3F203D2120LL);
  uint64_t v12 = v21[0];
  uint64_t v13 = (void *)v21[1];
  uint64_t v14 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v14, &v20);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  uint64_t v16 = sub_100020B80(inited);
  *(void *)(v16 + 56) = a3;
  *(void *)(v16 + 64) = a4;
  *(_BYTE *)(v16 + 72) = v17;
  sub_10000DD9C();
  sub_10000DEB4();
  v22._countAndFlagsBits = v12;
  v22._object = v13;
  v18._rawValue = (void *)inited;
  sub_100020BF4(v22, v18);
  sub_100020C14();
  sub_10012A65C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001F960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    v20[3] = v4;
    swift_bridgeObjectRetain(a4);
    _StringGuts.grow(_:)(39LL);
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "DELETE FROM ");
    BYTE5(v20[1]) = 0;
    HIWORD(v20[1]) = -5120;
    sub_10000DD9C();
    sub_10001C29C();
    sub_10000DCFC();
    sub_10001C2C0(0x455245485720LL);
    sub_1000208FC();
    sub_100020A70();
    sub_100020914();
    sub_100020A8C(0x3B3F203D20LL);
    uint64_t v9 = v20[0];
    uint64_t v10 = (void *)v20[1];
    uint64_t v11 = sub_10000D33C(&qword_1001C8EE8);
    uint64_t inited = swift_initStackObject(v11, v18);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    uint64_t v13 = sub_100020B80(inited);
    *(void *)(v13 + 56) = a3;
    *(void *)(v13 + 64) = a4;
    *(_BYTE *)(v13 + 72) = v14;
    sub_10000DF10();
  }

  else
  {
    _StringGuts.grow(_:)(28LL);
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "DELETE FROM ");
    BYTE5(v20[1]) = 0;
    HIWORD(v20[1]) = -5120;
    sub_10000DD9C();
    sub_10001C29C();
    sub_10000DCFC();
    sub_10001C2C0(0x455245485720LL);
    sub_1000208FC();
    sub_100020A8C(0x3B3F203D20LL);
    uint64_t v9 = v20[0];
    uint64_t v10 = (void *)v20[1];
    uint64_t v16 = sub_10000D33C(&qword_1001C8EE8);
    uint64_t inited = swift_initStackObject(v16, v19);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    sub_100020B80(inited);
    sub_10000DF10();
  }

  v15._countAndFlagsBits = v9;
  v15._object = v10;
  SQLDatabase.execute(sql:parameters:)(v15, (Swift::OpaquePointer)inited);
  sub_100020C14();
  sub_10012A65C();
  return sub_10000DCFC();
}

uint64_t sub_10001FB50()
{
  uint64_t v2 = v1;
  uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
  sub_100038FBC();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v32 = 0LL;
  id v5 = [v3 dataWithPropertyList:isa format:100 options:0 error:&v32];

  id v6 = v32;
  if (v5)
  {
    uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);
    unint64_t v9 = v8;

    id v32 = 0LL;
    unint64_t v33 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(84LL);
    v10._object = (void *)0x800000010016BB70LL;
    v10._countAndFlagsBits = 0xD000000000000017LL;
    String.append(_:)(v10);
    uint64_t v11 = *(void *)(v0 + 24);
    uint64_t v12 = *(void **)(v0 + 32);
    swift_bridgeObjectRetain(v12);
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    sub_1000209A0(10272LL);
    sub_1000208FC();
    sub_10002096C();
    sub_100020914();
    sub_10002096C();
    sub_1000209E8();
    sub_10002096C();
    sub_100020948();
    sub_10002096C();
    sub_100020A5C();
    sub_10002096C();
    sub_1000209C8();
    sub_10002096C();
    sub_10002092C();
    sub_10002096C();
    sub_100020AE0();
    v14._countAndFlagsBits = 0xD00000000000001BLL;
    v14._object = (void *)0x800000010016BB90LL;
    String.append(_:)(v14);
    uint64_t v30 = (void *)v33;
    uint64_t v31 = (uint64_t)v32;
    uint64_t v15 = sub_10000D33C(&qword_1001C8EE8);
    v16._rawValue = (void *)swift_initStackObject(v15, v34);
    *((_OWORD *)v16._rawValue + 1) = xmmword_1001649E0;
    uint64_t v17 = *(void *)(v2 + 24);
    *((void *)v16._rawValue + 4) = *(void *)(v2 + 16);
    *((void *)v16._rawValue + 5) = v17;
    *((_BYTE *)v16._rawValue + 48) = 3;
    Swift::OpaquePointer v18 = (int *)sub_100020C40();
    uint64_t v19 = (void *)(v2 + v18[12]);
    uint64_t v20 = v19[1];
    *((void *)v16._rawValue + 7) = *v19;
    *((void *)v16._rawValue + 8) = v20;
    *((_BYTE *)v16._rawValue + 72) = 3;
    *((void *)v16._rawValue + 10) = v7;
    *((void *)v16._rawValue + 11) = v9;
    *((_BYTE *)v16._rawValue + 96) = 0;
    uint64_t v21 = (void *)(v2 + v18[11]);
    uint64_t v22 = v21[1];
    *((void *)v16._rawValue + 13) = *v21;
    *((void *)v16._rawValue + 14) = v22;
    *((_BYTE *)v16._rawValue + 120) = 3;
    *((void *)v16._rawValue + swift_weakDestroy(v0 + 16) = *(unsigned __int8 *)(v2 + v18[10]);
    *((void *)v16._rawValue + 17) = 0LL;
    *((_BYTE *)v16._rawValue + 144) = 1;
    sub_10000DF08();
    swift_bridgeObjectRetain(v20);
    sub_10001BDC8(v7, v9);
    swift_bridgeObjectRetain(v22);
    *((double *)v16._rawValue + 19) = static Date.timeIntervalSinceReferenceDate.getter(v23);
    *((void *)v16._rawValue + 20) = 0LL;
    *((_BYTE *)v16._rawValue + 168) = 2;
    sub_100020BBC();
    sub_10000D33C(&qword_1001CDF50);
    sub_10001BD2C();
    uint64_t v24 = sub_100020AC0();
    sub_100020BE8();
    *((void *)v16._rawValue + 22) = v24;
    *((void *)v16._rawValue + 23) = v0;
    *((_BYTE *)v16._rawValue + 192) = 3;
    sub_100020BBC();
    uint64_t v25 = sub_100020AC0();
    sub_100020BE8();
    *((void *)v16._rawValue + 25) = v25;
    *((void *)v16._rawValue + 26) = v0;
    v26._countAndFlagsBits = v31;
    *((_BYTE *)v16._rawValue + 2swift_weakDestroy(v0 + 16) = 3;
    v26._object = v30;
    SQLDatabase.execute(sql:parameters:)(v26, v16);
    sub_100020C68();
    sub_100020C60();
    sub_10000DE2C();
    return sub_10001BD84(v7, v9);
  }

  else
  {
    uint64_t v28 = v6;
    _convertNSErrorToError(_:)(v6);

    return swift_willThrow(v29);
  }

uint64_t type metadata accessor for AppContentTable()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd15AppContentTable);
}

uint64_t sub_10001FED4()
{
  v2._countAndFlagsBits = 0LL;
  v0._rawValue = _swiftEmptyArrayStorage;
  v2._object = (void *)0xE000000000000000LL;
  sub_100020BF4(v2, v0);
  return sub_10000DDF8();
}

uint64_t sub_10001FFFC()
{
  v14._countAndFlagsBits = v9;
  v14._object = v10;
  sub_10001C260();
  sub_100020B4C();
  v11._rawValue = _swiftEmptyArrayStorage;
  sub_100020C2C(v14, v11);
  uint64_t result = sub_100020AB8();
  if (!v0)
  {
    _StringGuts.grow(_:)(95LL);
    sub_1000209FC();
    sub_10001C260();
    sub_1000209A0(10272LL);
    sub_1000208FC();
    sub_10001C2C0(0x2C5458455420LL);
    sub_100020914();
    sub_10001C2C0(0x2C5458455420LL);
    sub_1000209E8();
    sub_10001C2C0(0x2C424F4C4220LL);
    sub_100020948();
    sub_10001C2C0(0x2C5458455420LL);
    sub_100020A5C();
    sub_1000209A8();
    sub_1000209C8();
    sub_100020AA0((uint64_t)" REAL, PRIMARY KEY (");
    sub_1000208FC();
    sub_10001C0E8();
    sub_100020914();
    sub_1000209A0(10537LL);
    v15._countAndFlagsBits = 0LL;
    v13._rawValue = _swiftEmptyArrayStorage;
    v15._object = (void *)0xE000000000000000LL;
    sub_100020C2C(v15, v13);
    return sub_10000DDF8();
  }

  return result;
}

uint64_t sub_10002019C()
{
  int v9 = sub_100020C38(v1, v2, v3, v4, v5, v6, v7, v8, v42, v47);
  sub_100020B04(v9, v10, v11, v12, v13, v14, v15, v16, v43, v48);
  sub_100020A8C(0x2044444120LL);
  sub_10002092C();
  sub_100020A54(0x3B5458455420LL);
  v17._rawValue = _swiftEmptyArrayStorage;
  sub_100020B58(v44, v18, v17);
  if (v0) {
    swift_errorRelease(v0);
  }
  sub_100020AB8();
  sub_100020B8C();
  int v27 = sub_100020C38(v19, v20, v21, v22, v23, v24, v25, v26, v44, v49);
  sub_100020B04(v27, v28, v29, v30, v31, v32, v33, v34, v45, v50);
  sub_100020A8C(0x2044444120LL);
  sub_100020AE0();
  sub_100020A54(0x3B5458455420LL);
  v35._rawValue = _swiftEmptyArrayStorage;
  sub_100020B58(v46, v36, v35);
  if (v0) {
    swift_errorRelease(v0);
  }
  sub_100020AB8();
  uint64_t result = sub_100020B2C(0x79654B6863746162LL, (void *)0xE900000000000073LL);
  if (!v0)
  {
    int v38 = result;
    uint64_t result = sub_100020B2C(0x617461646174656DLL, (void *)0xE800000000000000LL);
    if ((v38 & result & 1) == 0)
    {
      unint64_t v39 = sub_100020550();
      uint64_t v40 = sub_100020C48((uint64_t)&type metadata for SQLite3Status, v39);
      *uint64_t v41 = 6;
      return swift_willThrow(v40);
    }
  }

  return result;
}

uint64_t sub_100020350(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  LOBYTE(v6) = v5;
  uint64_t v11 = swift_allocObject(&unk_1001A8A50, 17LL, 7LL);
  *(_BYTE *)(v11 + swift_weakDestroy(v0 + 16) = 0;
  v25[0] = 0LL;
  v25[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(71LL);
  v12._object = (void *)0x800000010016BB30LL;
  v12._countAndFlagsBits = 0xD000000000000032LL;
  String.append(_:)(v12);
  v13._countAndFlagsBits = a3;
  v13._object = a4;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x4552454857202927LL;
  v14._object = (void *)0xEF273D656D616E20LL;
  String.append(_:)(v14);
  v15._countAndFlagsBits = a1;
  v15._object = a2;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 15143LL;
  v16._object = (void *)0xE200000000000000LL;
  String.append(_:)(v16);
  uint64_t v19 = v4;
  uint64_t v20 = 0LL;
  unint64_t v21 = 0xE000000000000000LL;
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v23 = sub_10002059C;
  uint64_t v24 = v11;
  sub_100129A28((void (*)(void))sub_10001BBE0, (uint64_t)&v18);
  if (v5)
  {
    swift_release(v11);
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess(v11 + 16, v25, 0LL, 0LL);
    uint64_t v6 = *(unsigned __int8 *)(v11 + 16);
    swift_release(v11);
  }

  return v6 & 1;
}

uint64_t sub_1000204E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012AEE4(0LL);
  if (!v2)
  {
    BOOL v7 = (v5 & 1) == 0 && v4 > 0;
    swift_beginAccess(a2 + 16, v9, 1LL, 0LL);
    *(_BYTE *)(a2 + swift_weakDestroy(v0 + 16) = v7;
  }

  return 1LL;
}

unint64_t sub_100020550()
{
  unint64_t result = qword_1001C93A8;
  if (!qword_1001C93A8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SQLite3Status, &type metadata for SQLite3Status);
    atomic_store(result, (unint64_t *)&qword_1001C93A8);
  }

  return result;
}

uint64_t sub_10002058C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_10002059C(uint64_t a1)
{
  return sub_1000204E0(a1, v1) & 1;
}

uint64_t sub_1000205B8(uint64_t a1)
{
  return sub_10001F63C(a1, v1) & 1;
}

uint64_t sub_1000205D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C8FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_10002061C()
{
  unint64_t result = qword_1001C93B0;
  if (!qword_1001C93B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164A84, &type metadata for AppContentTable.ContentError);
    atomic_store(result, (unint64_t *)&qword_1001C93B0);
  }

  return result;
}

uint64_t sub_100020658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C8FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000206A0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1000206C4(void *a1)
{
  return sub_10001F240(a1, v1) & 1;
}

uint64_t sub_1000206E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

void sub_100020724(uint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  void *v1 = v3;
  if (!isUniquelyReferenced_nonNull_native || a1 > *(void *)(v3 + 24) >> 1)
  {
    sub_100013D04();
    void *v1 = v5;
  }

uint64_t sub_100020788(uint64_t a1)
{
  return sub_10001EC74(a1, v1) & 1;
}

uint64_t sub_1000207A4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000207C8(uint64_t a1)
{
  return sub_10001E62C(a1, *(void (**)(void *))(v1 + 16)) & 1;
}

uint64_t sub_1000207E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentInfo(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for AppContentTable.ContentError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100020860 + 4 * byte_1001649F0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100020880 + 4 * byte_1001649F5[v4]))();
  }
}

_BYTE *sub_100020860(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_100020880(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100020888(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100020890(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100020898(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1000208A0(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppContentTable.ContentError()
{
  return &type metadata for AppContentTable.ContentError;
}

unint64_t sub_1000208C0()
{
  unint64_t result = qword_1001C93B8;
  if (!qword_1001C93B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164A5C, &type metadata for AppContentTable.ContentError);
    atomic_store(result, (unint64_t *)&qword_1001C93B8);
  }

  return result;
}

void sub_1000208FC()
{
  v0._countAndFlagsBits = 0x79654B6568636163LL;
  v0._object = (void *)0xE800000000000000LL;
  String.append(_:)(v0);
}

void sub_100020914()
{
  v0._countAndFlagsBits = 0x6E6F6973726576LL;
  v0._object = (void *)0xE700000000000000LL;
  String.append(_:)(v0);
}

void sub_10002092C()
{
  v0._countAndFlagsBits = 0x79654B6863746162LL;
  v0._object = (void *)0xE900000000000073LL;
  String.append(_:)(v0);
}

void sub_100020948()
{
  v0._countAndFlagsBits = 0x6E6564496B736174LL;
  v0._object = (void *)0xEE00726569666974LL;
  String.append(_:)(v0);
}

void sub_10002096C()
{
  v0._countAndFlagsBits = 8236LL;
  v0._object = (void *)0xE200000000000000LL;
  String.append(_:)(v0);
}

void sub_10002097C()
{
  v0._countAndFlagsBits = 0x203F20454B494C20LL;
  v0._object = (void *)0xEB0000000020524FLL;
  String.append(_:)(v0);
}

void sub_1000209A0(uint64_t a1)
{
  unint64_t v1 = 0xE200000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_1000209A8()
{
  v0._countAndFlagsBits = 0x52454745544E4920LL;
  v0._object = (void *)0xEA0000000000202CLL;
  String.append(_:)(v0);
}

void sub_1000209C8()
{
  v0._countAndFlagsBits = 0x69646F4D7473616CLL;
  v0._object = (void *)0xEC00000064656966LL;
  String.append(_:)(v0);
}

void sub_1000209E8()
{
  v0._countAndFlagsBits = 0x7463656A626FLL;
  v0._object = (void *)0xE600000000000000LL;
  String.append(_:)(v0);
}

void sub_1000209FC()
{
  v0._countAndFlagsBits = 0x5420455441455243LL;
  v0._object = (void *)0xED000020454C4241LL;
  String.append(_:)(v0);
}

void sub_100020A2C()
{
  v0._countAndFlagsBits = 0x61747320444E4120LL;
  v0._object = (void *)0xEE003F203D206574LL;
  String.append(_:)(v0);
}

void sub_100020A54(uint64_t a1)
{
  unint64_t v1 = 0xE600000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_100020A5C()
{
  v0._countAndFlagsBits = 0x6574617473LL;
  v0._object = (void *)0xE500000000000000LL;
  String.append(_:)(v0);
}

void sub_100020A70()
{
  v0._countAndFlagsBits = 0x444E41203F203D20LL;
  v0._object = (void *)0xE900000000000020LL;
  String.append(_:)(v0);
}

void sub_100020A8C(uint64_t a1)
{
  unint64_t v1 = 0xE500000000000000LL;
  String.append(_:)(*(Swift::String *)&a1);
}

uint64_t sub_100020A94(uint64_t a1, uint64_t a2)
{
  return swift_beginAccess(a1, a2, 0LL, 0LL);
}

void sub_100020AA0(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v1);
}

uint64_t sub_100020AB8()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100020AC0()
{
  return BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v0);
}

uint64_t sub_100020AD8()
{
  return swift_release(v0);
}

void sub_100020AE0()
{
  v0._countAndFlagsBits = 0x617461646174656DLL;
  v0._object = (void *)0xE800000000000000LL;
  String.append(_:)(v0);
}

uint64_t sub_100020AF8(uint64_t a1)
{
  return swift_allocObject(a1, 24LL, 7LL);
}

void sub_100020B04(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  v12._countAndFlagsBits = v11;
  v12._object = v10;
  String.append(_:)(v12);
}

void sub_100020B18( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  v16._countAndFlagsBits = v15;
  v16._object = v14;
  String.append(_:)(v16);
}

uint64_t sub_100020B2C(uint64_t a1, void *a2)
{
  return sub_100020350(a1, a2, v3, v2);
}

uint64_t sub_100020B40()
{
  return sub_10001BD70(v1, v0);
}

void sub_100020B4C()
{
  v0._countAndFlagsBits = 59LL;
  v0._object = (void *)0xE100000000000000LL;
  String.append(_:)(v0);
}

void sub_100020B58(uint64_t a1, uint64_t a2, Swift::OpaquePointer a3)
{
  uint64_t v4 = v3;
  SQLDatabase.execute(sql:parameters:)(*(Swift::String *)&a1, a3);
}

uint64_t sub_100020B68()
{
  return swift_release(v0);
}

void sub_100020B70()
{
  v0._countAndFlagsBits = 1059077408LL;
  v0._object = (void *)0xE400000000000000LL;
  String.append(_:)(v0);
}

uint64_t sub_100020B80(uint64_t result)
{
  *(_BYTE *)(result + 48) = 3;
  return result;
}

void sub_100020B8C()
{
}

void sub_100020B9C()
{
  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

void sub_100020BA8()
{
  v2._countAndFlagsBits = v0;
  v2._object = v1;
  String.append(_:)(v2);
}

uint64_t sub_100020BB4()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100020BBC()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

  ;
}

uint64_t sub_100020BE8()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_100020BF4(Swift::String sql, Swift::OpaquePointer parameters)
{
}

uint64_t sub_100020C00()
{
  return swift_bridgeObjectRelease(*(void *)(v0 - 160));
}

  ;
}

uint64_t sub_100020C14()
{
  return swift_setDeallocating(v0);
}

void sub_100020C20()
{
}

void sub_100020C2C(Swift::String sql, Swift::OpaquePointer parameters)
{
}

uint64_t sub_100020C38( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return swift_bridgeObjectRelease(a10);
}

uint64_t sub_100020C40()
{
  return type metadata accessor for ContentInfo(0LL);
}

uint64_t sub_100020C48(uint64_t a1, uint64_t a2)
{
  return swift_allocError(a1, a2, 0LL, 0LL);
}

void sub_100020C54()
{
}

uint64_t sub_100020C60()
{
  return sub_10012A65C();
}

uint64_t sub_100020C68()
{
  return swift_setDeallocating(v0);
}

void sub_100020C74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  if (v3 == v6 && v5 == v7) {
    sub_1000257E4();
  }
  else {
    sub_100025708(v3, v7, v6);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_100020CDC(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100020D2C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100020DBC + 4 * byte_100164AD0[a2]))(0x4554454C4544LL);
}

void sub_100020DBC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4554454C4544LL && v2 == 0xE600000000000000LL) {
    sub_1000257E4();
  }
  else {
    sub_100025708(a1, a2, 0x4554454C4544LL);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_100020E5C(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100020EAC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100020EEC + 4 * byte_100164ADC[a2]))(65LL);
}

void sub_100020EEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 65 && v2 == 0xE100000000000000LL) {
    sub_1000257E4();
  }
  else {
    sub_100025708(a1, a2, 65LL);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_100020F3C(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100020F98(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100021004 + 4 * byte_100164AE4[a2]))(0x6C616E7265746E69LL);
}

void sub_100021004(uint64_t a1)
{
  if (a1 != 0x6C616E7265746E69LL || v1 != 0xE800000000000000LL) {
    sub_100025718(a1, v1, 0x6C616E7265746E69LL, 0xE800000000000000LL);
  }
  sub_100009070();
  sub_100009020();
  sub_10000DFE8();
}

BOOL static SQLite3Status.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void sub_1000210A0(char a1)
{
  __asm { BR              X10 }

uint64_t sub_1000210E0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10002114C + 4 * byte_100164AED[a2]))(0x52454745544E49LL);
}

void sub_10002114C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x52454745544E49LL && v2 == 0xE700000000000000LL) {
    sub_1000257E4();
  }
  else {
    sub_100025708(a1, a2, 0x52454745544E49LL);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_1000211C8(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x73644961657261LL;
  }
  else {
    uint64_t v3 = 25705LL;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000LL;
  }
  else {
    unint64_t v4 = 0xE700000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x73644961657261LL;
  }
  else {
    uint64_t v5 = 25705LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE700000000000000LL;
  }
  else {
    unint64_t v6 = 0xE200000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    sub_1000257E4();
  }
  else {
    sub_100025708(v3, a2, v5);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_10002123C(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 25705LL;
  }
  else {
    uint64_t v3 = 0x73644961657261LL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000LL;
  }
  else {
    unint64_t v4 = 0xE200000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 25705LL;
  }
  else {
    uint64_t v5 = 0x73644961657261LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE200000000000000LL;
  }
  else {
    unint64_t v6 = 0xE700000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    sub_1000257E4();
  }
  else {
    sub_100025708(v3, a2, v5);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_1000212B0(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 25705LL;
  }
  else {
    uint64_t v3 = 0x7374656B637562LL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000LL;
  }
  else {
    unint64_t v4 = 0xE200000000000000LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 25705LL;
  }
  else {
    uint64_t v5 = 0x7374656B637562LL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE200000000000000LL;
  }
  else {
    unint64_t v6 = 0xE700000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    sub_1000257E4();
  }
  else {
    sub_100025708(v3, a2, v5);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_100021324(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100021374(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000213F4 + 4 * byte_100164AF7[a2]))(25705LL);
}

void sub_1000213F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 25705 && v2 == 0xE200000000000000LL) {
    sub_1000257E4();
  }
  else {
    sub_100025708(a1, a2, 25705LL);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_100021484(char a1)
{
  __asm { BR              X10 }

uint64_t sub_1000214E0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100021544 + 4 * byte_100164B01[a2]))(0x656D697265707865LL);
}

void sub_100021544(uint64_t a1)
{
  if (a1 != 0x656D697265707865LL || v1 != 0xEB0000000073746ELL) {
    sub_100025718(a1, v1, 0x656D697265707865LL, 0xEB0000000073746ELL);
  }
  sub_100009070();
  sub_100009020();
  sub_10000DFE8();
}

uint64_t sub_1000215C8(char a1, char a2)
{
  if ((a1 & 1) != 0) {
    uint64_t v2 = 0x656372756F73LL;
  }
  else {
    uint64_t v2 = 0x74757074756FLL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x656372756F73LL;
  }
  else {
    uint64_t v3 = 0x74757074756FLL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_100025718(v2, 0xE600000000000000LL, v3, 0xE600000000000000LL);
  }
  swift_bridgeObjectRelease_n(0xE600000000000000LL, 2LL);
  return v4 & 1;
}

void sub_100021638(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v3 = sub_10011217C(a1);
  uint64_t v5 = v4;
  uint64_t v6 = sub_10011217C(a2);
  if (v3 == v6 && v5 == v7) {
    sub_1000257E4();
  }
  else {
    sub_100025708(v3, v7, v6);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_10002169C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = 0x65756575716E65LL;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x696577746867696CLL;
    }
    else {
      uint64_t v4 = 1668184435LL;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xEF636E7953746867LL;
    }
    else {
      unint64_t v5 = 0xE400000000000000LL;
    }
  }

  else
  {
    unint64_t v5 = 0xE700000000000000LL;
    uint64_t v4 = 0x65756575716E65LL;
  }

  if ((_BYTE)a2)
  {
    else {
      uint64_t v2 = 1668184435LL;
    }
    else {
      unint64_t v6 = 0xE400000000000000LL;
    }
  }

  else
  {
    unint64_t v6 = 0xE700000000000000LL;
  }

  if (v4 == v2 && v5 == v6) {
    sub_1000257E4();
  }
  else {
    sub_100025708(v4, a2, v2);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

void sub_10002178C(char a1)
{
  __asm { BR              X10 }

uint64_t sub_1000217E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1000218C0 + 4 * byte_100164B0F[a2]))(0x79654B6568636163LL);
}

void sub_1000218C0(uint64_t a1)
{
  if (a1 != 0x79654B6568636163LL || v1 != 0xE800000000000000LL) {
    sub_100025718(a1, v1, 0x79654B6568636163LL, 0xE800000000000000LL);
  }
  sub_100009070();
  sub_100009020();
  sub_10000DFE8();
}

void sub_1000219B8(char a1, uint64_t a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x566B63617074656ALL;
  }
  else {
    uint64_t v3 = 0x6B63617074656ALL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000LL;
  }
  else {
    unint64_t v4 = 0xE900000000000032LL;
  }
  if ((a2 & 1) != 0) {
    uint64_t v5 = 0x566B63617074656ALL;
  }
  else {
    uint64_t v5 = 0x6B63617074656ALL;
  }
  if ((a2 & 1) != 0) {
    unint64_t v6 = 0xE900000000000032LL;
  }
  else {
    unint64_t v6 = 0xE700000000000000LL;
  }
  if (v3 == v5 && v4 == v6) {
    sub_1000257E4();
  }
  else {
    sub_100025708(v3, a2, v5);
  }
  sub_100009020();
  sub_100009070();
  sub_10000DFE8();
}

uint64_t sub_100021A3C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_100021A68(char a1@<W2>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for String.Encoding(0LL);
  __chkstk_darwin(v5);
  sub_1000105F0();
  *a2 = 0u;
  a2[1] = 0u;
  __asm { BR              X10 }

void sub_100021B2C()
{
  id v6 = [objc_allocWithZone(NSNull) init];
  *(void *)(v5 - 120) = sub_10000DAA0(0LL, qword_1001C9528, &OBJC_CLASS___NSNull_ptr);
  *(void *)(v5 - 144) = v6;
  sub_100025858();
  sub_1000254B4(v5 - 144, v4, &qword_1001CAAD0);
  sub_10002546C(v4, v5 - 144);
  uint64_t v7 = *(void *)(v5 - 120);
  sub_10000DA68(v5 - 144, &qword_1001CAAD0);
  if (!v7)
  {
    if (qword_1001C7F88 != -1) {
      swift_once(&qword_1001C7F88, sub_1000BD368);
    }
    uint64_t v8 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v9 = type metadata accessor for LogMessage(0LL);
    uint64_t v10 = swift_allocObject( v8,  ((*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL))
          + *(void *)(*(void *)(v9 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v9 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = xmmword_100164220;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(12LL, 1LL);
    v11._countAndFlagsBits = 0x5252452045505954LL;
    v11._object = (void *)0xEC000000203A524FLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v11);
    sub_100025850();
    uint64_t v12 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))String.init(data:encoding:))(v2, v1, v3);
    if (v13)
    {
      *(void *)(v5 - 120) = &type metadata for String;
      *(void *)(v5 - 144) = v12;
      *(void *)(v5 - 136) = v13;
    }

    else
    {
      v14.n128_f64[0] = sub_10002594C();
    }

    ((void (*)(uint64_t, __n128))LogMessage.StringInterpolation.appendInterpolation(sensitive:))( v5 - 144,  v14);
    sub_10000DA68(v5 - 144, &qword_1001CAAD0);
    sub_10000DC08();
    uint64_t v15 = LogMessage.init(stringInterpolation:)(v0);
    uint64_t v16 = static os_log_type_t.error.getter(v15);
    sub_1000BD1B0(v16, v10);
    sub_100020AB8();
  }

uint64_t sub_10002201C(uint64_t a1)
{
  return String.init<A>(describing:)(a1, &type metadata for AppDatabase.DatabaseError);
}

BOOL sub_100022028(uint64_t a1)
{
  return a1 != 0;
}

BOOL sub_100022040@<W0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_100022028(*a1);
  *a2 = result;
  return result;
}

void sub_100022070(void *a1@<X8>)
{
  *a1 = 0LL;
}

uint64_t sub_10002207C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000256A0();
  unint64_t v5 = sub_100008AB8();
  return CustomNSError<>.errorCode.getter(a1, a2, v4, v5);
}

uint64_t sub_1000220D4(uint64_t a1)
{
  unint64_t v2 = sub_100025664();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000220FC(uint64_t a1)
{
  unint64_t v2 = sub_100025664();
  unint64_t v3 = sub_1000256A0();
  unint64_t v4 = sub_100008AB8();
  return Error<>._code.getter(a1, v2, v3, v4);
}

uint64_t sub_100022144()
{
  uint64_t v0 = sub_10000D33C(&qword_1001C9500);
  uint64_t result = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v0,  &protocol witness table for String);
  qword_1001C93C0 = result;
  return result;
}

uint64_t sub_100022188()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v0);
  unint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v6);
  if (qword_1001C80B0 != -1) {
    swift_once(&qword_1001C80B0, sub_10010D4EC);
  }
  uint64_t v10 = qword_1001DBBC0;
  static DispatchQoS.unspecified.getter((id)qword_1001DBBC0);
  Swift::OpaquePointer v17 = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CAAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v12 = v11;
  uint64_t v13 = sub_10000D33C((uint64_t *)&unk_1001CD3A0);
  sub_1000253B0((unint64_t *)&qword_1001CAAC0, (uint64_t *)&unk_1001CD3A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v13, v14, v0, v12);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD00000000000001FLL,  0x800000010016BD40LL,  v5,  v2,  v9,  v10);
  qword_1001C93C8 = result;
  return result;
}

void *sub_100022384(uint64_t a1, char a2)
{
  uint64_t v4 = (void *)v2;
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v23 - v12;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  uint64_t v14 = a1;
  uint64_t v16 = v15;
  sub_10002256C(v14, a2);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v16);
  Swift::OpaquePointer v17 = *(void **)*(&off_1001A8CF0 + a2);
  type metadata accessor for SQLDatabase();
  id v18 = v17;
  uint64_t v19 = SQLDatabase.__allocating_init(url:readonly:fileProtection:schemaBlock:corruptionBlock:)( (uint64_t)v11,  0,  v17,  (uint64_t)sub_100022944,  0LL,  0LL,  0LL);
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v16);
    swift_release(v4[3]);
    swift_release(v4[4]);
    swift_release(v4[5]);
    swift_release(v4[6]);
    uint64_t v20 = type metadata accessor for AppDatabase();
    swift_deallocPartialClassInstance(v4, v20, 56LL, 7LL);
  }

  else
  {
    uint64_t v4[2] = v19;
    uint64_t v21 = swift_retain(v19);
    sub_100128FD0(v21, v21);
    sub_100129D84();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v16);
  }

  return v4;
}

void sub_10002256C(uint64_t a1, char a2)
{
  uint64_t v3 = sub_10000D33C(&qword_1001CB180);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  __asm { BR              X10 }

uint64_t sub_100022688()
{
  uint64_t v6 = 0LL;
  if ((v3 & 1) == 0)
  {
    *(void *)(v5 - 96) = 7368801LL;
    *(void *)(v5 - 88) = 0xE300000000000000LL;
    unint64_t v12 = 0xE000000000000000LL;
    String.append(_:)(*(Swift::String *)&v6);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 6448174LL;
    v13._object = (void *)0xE300000000000000LL;
    String.append(_:)(v13);
    sub_10014F588();
    if (sub_1000102D4(v2, 1LL, v0) == 1)
    {
      sub_10014F220();
      sub_10000DA68(v2, &qword_1001CB180);
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 104) + 32LL))(v1, v2, v0);
    }

    __asm { BR              X10 }
  }

  *(void *)(v5 - 96) = 7566955LL;
  *(void *)(v5 - 88) = 0xE300000000000000LL;
  unint64_t v7 = 0xE000000000000000LL;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 6448174LL;
  v8._object = (void *)0xE300000000000000LL;
  String.append(_:)(v8);
  uint64_t v9 = *(void *)(v5 - 96);
  uint64_t v10 = *(void *)(v5 - 88);
  sub_10014F220();
  URL.appendingPathComponent(_:)(v9, v10);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 104) + 8LL))(v4, v0);
}

void sub_100022944(uint64_t a1, uint64_t a2)
{
}

void sub_10002298C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1001C7F88 != -1) {
    swift_once(&qword_1001C7F88, sub_1000BD368);
  }
  uint64_t v10 = qword_1001DBB08;
  uint64_t v11 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v12 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v44 = v13;
  uint64_t v15 = swift_allocObject(v11, ((v14 + 32) & ~v14) + 2 * v13, v14 | 7);
  *(_OWORD *)(v15 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v43 = (void *)sub_10000D33C(&qword_1001C9508);
  v42[0] = v5;
  id v16 = (id)AMSLogKey(v43);
  if (v16)
  {
    Swift::OpaquePointer v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v39[1] = v10;
    uint64_t v19 = v18;
    uint64_t v21 = v20;

    swift_bridgeObjectRetain(v21);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v22._countAndFlagsBits = 0LL;
    v22._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = v43;
    uint64_t v24 = sub_10000D37C(v42, (uint64_t)v43);
    uint64_t DynamicType = swift_getDynamicType(v24, v23, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v40[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_10000DA68((uint64_t)v40, &qword_1001CAAD0);
    v26._countAndFlagsBits = 5972026LL;
    v26._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t MetatypeMetadata = &type metadata for String;
    v40[0] = v19;
    v40[1] = v21;
    uint64_t v4 = v3;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_10000DA68((uint64_t)v40, &qword_1001CAAD0);
    v27._countAndFlagsBits = 93LL;
    v27._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)(v9);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v28._countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    int v29 = v43;
    int v30 = sub_10000D37C(v42, (uint64_t)v43);
    uint64_t v31 = swift_getDynamicType(v30, v29, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v31);
    v40[0] = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v40);
    sub_10000DA68((uint64_t)v40, &qword_1001CAAD0);
    v32._countAndFlagsBits = 58LL;
    v32._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)(v9);
  }

  sub_10000D3A0(v42);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(48LL, 1LL);
  v33._object = (void *)0x800000010016BD10LL;
  v33._countAndFlagsBits = 0xD00000000000002FLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v43 = &type metadata for Int;
  v42[0] = a2;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
  sub_10000DA68((uint64_t)v42, &qword_1001CAAD0);
  v34._countAndFlagsBits = 41LL;
  v34._object = (void *)0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  uint64_t v35 = LogMessage.init(stringInterpolation:)(v9);
  uint64_t v36 = static os_log_type_t.debug.getter(v35);
  sub_1000BD1B0(v36, v15);
  swift_bridgeObjectRelease();
  switch(a2)
  {
    case 0LL:
      sub_10002935C(7566955LL, (void *)0xE300000000000000LL);
      break;
    case 1LL:
      sub_10001B950();
      if (!v4)
      {
        sub_10001FED4();
        sub_10002D0C0(0x656C756465686373LL, (void *)0xE900000000000073LL);
      }

      break;
    case 2LL:
      sub_10001FFFC();
      break;
    case 3LL:
      sub_10001BA94();
      break;
    case 4LL:
    case 7LL:
      return;
    case 5LL:
      sub_10002FB64(0x676F6C6B636162LL, (void *)0xE700000000000000LL);
      if (!v4) {
        sub_10002FB64(0x746E65746E6F63LL, (void *)0xE700000000000000LL);
      }
      break;
    case 6LL:
      sub_10002019C();
      break;
    default:
      unint64_t v37 = sub_100025374();
      uint64_t v38 = swift_allocError(&type metadata for AppDatabase.DatabaseError, v37, 0LL, 0LL);
      swift_willThrow(v38);
      break;
  }

void *sub_100022EEC()
{
  uint64_t v1 = swift_retain(v0[2]);
  sub_100128B6C(v1, v1);
  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return v0;
}

uint64_t sub_100022F54()
{
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

uint64_t type metadata accessor for AppDatabase()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd11AppDatabase);
}

void sub_100022F94()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for AppBacklogTable();
    uint64_t v4 = (void *)sub_10002581C(v3);
    uint64_t v4[2] = v2;
    v4[3] = 0x676F6C6B636162LL;
    v4[4] = 0xE700000000000000LL;
    *(void *)(v0 + 24) = v4;
    sub_10000DFF4();
    sub_10002588C();
    uint64_t v1 = 0LL;
  }

  swift_retain(v1);
  sub_10000DFE8();
}

void sub_100023000()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (!v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for AppContentTable();
    uint64_t v4 = (void *)sub_10002581C(v3);
    uint64_t v4[2] = v2;
    v4[3] = 0x746E65746E6F63LL;
    v4[4] = 0xE700000000000000LL;
    *(void *)(v0 + 32) = v4;
    sub_10000DFF4();
    sub_10002588C();
    uint64_t v1 = 0LL;
  }

  swift_retain(v1);
  sub_10000DFE8();
}

void sub_10002306C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (!v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for AppKeyValueTable();
    uint64_t v4 = (void *)sub_10002581C(v3);
    uint64_t v4[2] = v2;
    v4[3] = 7566955LL;
    v4[4] = 0xE300000000000000LL;
    *(void *)(v0 + 40) = v4;
    sub_10000DFF4();
    sub_10002588C();
    uint64_t v1 = 0LL;
  }

  swift_retain(v1);
  sub_10000DFE8();
}

void sub_1000230D0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (!v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for AppSchedulesTable();
    uint64_t v4 = (void *)sub_10002581C(v3);
    uint64_t v4[2] = v2;
    v4[3] = 0x656C756465686373LL;
    v4[4] = 0xE900000000000073LL;
    *(void *)(v0 + 48) = v4;
    sub_10000DFF4();
    sub_10002588C();
    uint64_t v1 = 0LL;
  }

  swift_retain(v1);
  sub_10000DFE8();
}

uint64_t sub_100023140(uint64_t a1, char a2)
{
  char v5 = a1;
  if (qword_1001C7F30 != -1) {
    a1 = swift_once(&qword_1001C7F30, sub_100022188);
  }
  __chkstk_darwin(a1);
  v8[16] = v5;
  v8[17] = a2;
  uint64_t v9 = v2;
  uint64_t v6 = type metadata accessor for AppDatabase();
  uint64_t result = OS_dispatch_queue.sync<A>(execute:)(sub_100023888, v8, v6);
  if (!v3) {
    return v10;
  }
  return result;
}

void sub_100023210(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchTimeInterval(0LL);
  __chkstk_darwin(v2);
  __asm { BR              X10 }

uint64_t sub_1000232B8()
{
  v1._countAndFlagsBits = 0x6C616E7265746E69LL;
  v1._object = (void *)0xE800000000000000LL;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 45LL;
  v2._object = (void *)0xE100000000000000LL;
  String.append(_:)(v2);
  return ((uint64_t (*)(uint64_t))((char *)sub_10002334C + 4 * byte_100164B24[v0]))(65LL);
}

uint64_t sub_10002334C()
{
  v6._countAndFlagsBits = 0x746C7561666564LL;
  v6._object = (void *)0xE700000000000000LL;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v5 - 128);
  uint64_t v8 = *(void *)(v5 - 120);
  if (qword_1001C7F28 != -1) {
    swift_once(&qword_1001C7F28, sub_100022144);
  }
  swift_beginAccess(&qword_1001C93C0, v5 - 128, 32LL, 0LL);
  uint64_t v9 = qword_1001C93C0;
  swift_bridgeObjectRetain(v8);
  sub_10003086C(v7, v8, v9, v5 - 96);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v5 - 88) == 1)
  {
    sub_10000DA68(v5 - 96, (uint64_t *)&unk_1001C9CA0);
    swift_endAccess(v5 - 128);
  }

  else
  {
    uint64_t Strong = swift_weakLoadStrong(v5 - 96);
    sub_10000DA68(v5 - 96, (uint64_t *)&unk_1001C9CA0);
    swift_endAccess(v5 - 128);
    if (Strong)
    {
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }

  uint64_t v11 = type metadata accessor for AppDatabase();
  swift_allocObject(v11, 56LL, 7LL);
  uint64_t v12 = sub_100022384(v4, v3);
  if (v0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t Strong = (uint64_t)v12;
  uint64_t v14 = swift_weakInit(v5 - 128, 0LL);
  uint64_t v15 = swift_weakAssign(v14, Strong);
  sub_1000254B4(v15, v5 - 96, &qword_1001C9500);
  *(_BYTE *)(v5 - 88) = 0;
  swift_beginAccess(&qword_1001C93C0, v5 - 128, 33LL, 0LL);
  sub_1000302B8(v5 - 96, v7, v8);
  swift_endAccess(v5 - 128);
LABEL_10:
  *(void *)(v5 - 104) = type metadata accessor for AppDatabase();
  *(void *)(v5 - 128) = Strong;
  *Swift::String v2 = 500LL;
  uint64_t v16 = *(void *)(v5 - 144);
  (*(void (**)(void *, void, uint64_t))(v1 + 104))( v2,  enum case for DispatchTimeInterval.milliseconds(_:),  v16);
  swift_retain(Strong);
  sub_100023578(v5 - 128, (uint64_t)v2);
  (*(void (**)(void *, uint64_t))(v1 + 8))(v2, v16);
  uint64_t result = sub_10000D3A0((void *)(v5 - 128));
  **(void **)(v5 - 72) = Strong;
  return result;
}

uint64_t sub_100023578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchTime(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  Swift::OpaquePointer v17 = (char *)&v26 - v16;
  if (qword_1001C7F30 != -1) {
    uint64_t v15 = swift_once(&qword_1001C7F30, sub_100022188);
  }
  uint64_t v26 = qword_1001C93C8;
  static DispatchTime.now()(v15);
  + infix(_:_:)(v14, a2);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  sub_10000DA1C(a1, (uint64_t)v34);
  sub_10000DA1C((uint64_t)v34, (uint64_t)v33);
  uint64_t v19 = swift_allocObject(&unk_1001A8BC8, 48LL, 7LL);
  sub_10000DA58(v33, (_OWORD *)(v19 + 16));
  aBlock[4] = nullsub_1;
  uint64_t v32 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100021A3C;
  aBlock[3] = &unk_1001A8BE0;
  uint64_t v20 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v20);
  int v30 = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v22 = v21;
  uint64_t v23 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
  sub_1000253B0((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v23, v24, v4, v22);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v9, v6, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  sub_10000D3A0(v34);
  v18(v17, v10);
  return swift_release(v32);
}

void sub_10002383C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(void *)(v3 + 16);
  v6[3] = a1;
  v6[4] = a2;
  char v7 = a3 & 1;
  uint64_t v5 = sub_10002588C();
  sub_100128C44(v5, v4, (uint64_t (*)(void))sub_1000254F4, (uint64_t)v6);
}

void sub_100023888()
{
}

void sub_1000238A8(uint64_t a1, uint64_t *a2, Swift::Int a3, int a4)
{
  LODWORD(v106) = a4;
  Swift::Int v105 = a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1001C7F88 != -1) {
    swift_once(&qword_1001C7F88, sub_1000BD368);
  }
  uint64_t v107 = qword_1001DBB08;
  uint64_t v9 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v10 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 32) & ~v12;
  uint64_t v114 = v11;
  uint64_t v104 = v9;
  uint64_t v101 = v12 | 7;
  uint64_t v102 = v13 + 2 * v11;
  uint64_t v14 = swift_allocObject(v9, v102, v12 | 7);
  __int128 v100 = xmmword_100164230;
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v103 = v13;
  uint64_t v99 = (void *)type metadata accessor for AppDatabase();
  uint64_t v113 = v99;
  *(void *)&__int128 v112 = a1;
  uint64_t v15 = swift_retain(a1);
  id v16 = (id)AMSLogKey(v15);
  if (v16)
  {
    Swift::OpaquePointer v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    uint64_t v20 = v19;

    swift_bridgeObjectRetain(v20);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v21._countAndFlagsBits = 0LL;
    v21._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t v22 = v113;
    uint64_t v23 = sub_10000D37C(&v112, (uint64_t)v113);
    uint64_t DynamicType = swift_getDynamicType(v23, v22, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    uint64_t v109 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
    sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
    v25._countAndFlagsBits = 5972026LL;
    v25._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v109 = v18;
    uint64_t v110 = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
    sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
    v26._countAndFlagsBits = 93LL;
    v26._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)(v8);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v27._countAndFlagsBits = 0LL;
    v27._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v28 = v113;
    uint64_t v29 = sub_10000D37C(&v112, (uint64_t)v113);
    uint64_t v30 = swift_getDynamicType(v29, v28, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v30);
    uint64_t v109 = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
    sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
    v31._countAndFlagsBits = 58LL;
    v31._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    LogMessage.init(stringInterpolation:)(v8);
  }

  sub_10000D3A0(&v112);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(37LL, 2LL);
  v32._object = (void *)0x800000010016BDF0LL;
  v32._countAndFlagsBits = 0xD000000000000017LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v32);
  uint64_t v34 = *a2;
  uint64_t v33 = a2[1];
  uint64_t v113 = &type metadata for String;
  *(void *)&__int128 v112 = v34;
  *((void *)&v112 + 1) = v33;
  swift_bridgeObjectRetain(v33);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v112);
  sub_10000DA68((uint64_t)&v112, &qword_1001CAAD0);
  v35._countAndFlagsBits = 0x54746E657665203BLL;
  v35._object = (void *)0xED0000203A657079LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  uint64_t v37 = a2[5];
  uint64_t v36 = a2[6];
  uint64_t v113 = &type metadata for String;
  *(void *)&__int128 v112 = v37;
  *((void *)&v112 + 1) = v36;
  swift_bridgeObjectRetain(v36);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v112);
  sub_10000DA68((uint64_t)&v112, &qword_1001CAAD0);
  v38._countAndFlagsBits = 41LL;
  v38._object = (void *)0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v39 = LogMessage.init(stringInterpolation:)(v8);
  uint64_t v40 = static os_log_type_t.info.getter(v39);
  sub_1000BD1B0(v40, v14);
  swift_bridgeObjectRelease();
  Swift::Int v41 = sub_10001ABC8();
  sub_10002306C();
  uint64_t v43 = v42;
  uint64_t v44 = v108;
  sub_10002AF6C(0, &v112);
  swift_release(v43);
  if (!v44)
  {
    if (v113)
    {
      if (swift_dynamicCast( &v109,  &v112,  (char *)&type metadata for Any + 8,  &type metadata for Int,  6LL))
      {
        uint64_t v45 = v109;
        goto LABEL_12;
      }
    }

    else
    {
      sub_10000DA68((uint64_t)&v112, &qword_1001CAAD0);
    }

    uint64_t v45 = 0LL;
LABEL_12:
    Swift::Int v46 = v45 + v41;
    if (__OFADD__(v45, v41))
    {
      __break(1u);
    }

    else
    {
      if ((v106 & 1) != 0 || v46 <= v105)
      {
LABEL_20:
        sub_100022F94();
        uint64_t v75 = v74;
        sub_10001AA14(a2);
        swift_release(v75);
        sub_10002306C();
        uint64_t v77 = v76;
        uint64_t v113 = &type metadata for Int;
        *(void *)&__int128 v112 = v46;
        sub_10002950C((uint64_t)&v112, 0);
        swift_release(v77);
        sub_10000DA68((uint64_t)&v112, &qword_1001CAAD0);
        uint64_t v78 = swift_allocObject(v104, v102, v101);
        *(_OWORD *)(v78 + swift_weakDestroy(v0 + 16) = v100;
        uint64_t v113 = v99;
        *(void *)&__int128 v112 = a1;
        uint64_t v79 = swift_retain(a1);
        id v80 = (id)AMSLogKey(v79);
        if (v80)
        {
          uint64_t v81 = v80;
          uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(v80);
          uint64_t v84 = v83;

          swift_bridgeObjectRetain(v84);
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
          v85._countAndFlagsBits = 0LL;
          v85._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v85);
          Swift::String v86 = v113;
          uint64_t v87 = sub_10000D37C(&v112, (uint64_t)v113);
          uint64_t v88 = swift_getDynamicType(v87, v86, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v88);
          uint64_t v109 = v88;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
          sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
          v89._countAndFlagsBits = 5972026LL;
          v89._object = (void *)0xE300000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v89);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v109 = v82;
          uint64_t v110 = v84;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
          sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
          v90._countAndFlagsBits = 93LL;
          v90._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v90);
          LogMessage.init(stringInterpolation:)(v8);
          swift_bridgeObjectRelease();
        }

        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
          v91._countAndFlagsBits = 0LL;
          v91._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v91);
          uint64_t v92 = v113;
          v93 = sub_10000D37C(&v112, (uint64_t)v113);
          uint64_t v94 = swift_getDynamicType(v93, v92, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v94);
          uint64_t v109 = v94;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
          sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
          v95._countAndFlagsBits = 58LL;
          v95._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v95);
          LogMessage.init(stringInterpolation:)(v8);
        }

        sub_10000D3A0(&v112);
        uint64_t v96 = LogMessage.init(stringLiteral:)(0xD00000000000001CLL);
        uint64_t v97 = static os_log_type_t.info.getter(v96);
        sub_1000BD1B0(v97, v78);
        swift_bridgeObjectRelease();
        return;
      }

      if (!__OFSUB__(v46, v105))
      {
        uint64_t v108 = v46 - v105;
        uint64_t v107 = qword_1001DBB08;
        uint64_t v47 = swift_allocObject(v104, v102, v101);
        *(_OWORD *)(v47 + swift_weakDestroy(v0 + 16) = v100;
        uint64_t v106 = v47;
        uint64_t v113 = v99;
        *(void *)&__int128 v112 = a1;
        uint64_t v48 = swift_retain(a1);
        id v49 = (id)AMSLogKey(v48);
        if (v49)
        {
          uint64_t v50 = v49;
          uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
          Swift::Int v105 = v46;
          uint64_t v53 = v52;

          swift_bridgeObjectRetain(v53);
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
          v54._countAndFlagsBits = 0LL;
          v54._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v54);
          uint64_t v55 = v113;
          uint64_t v56 = sub_10000D37C(&v112, (uint64_t)v113);
          uint64_t v57 = swift_getDynamicType(v56, v55, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v57);
          uint64_t v109 = v57;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
          sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
          v58._countAndFlagsBits = 5972026LL;
          v58._object = (void *)0xE300000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v58);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v109 = v51;
          uint64_t v110 = v53;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
          sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
          v59._countAndFlagsBits = 93LL;
          v59._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v59);
          LogMessage.init(stringInterpolation:)(v8);
          Swift::Int v46 = v105;
          swift_bridgeObjectRelease();
        }

        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
          v60._countAndFlagsBits = 0LL;
          v60._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v60);
          uint64_t v61 = v113;
          uint64_t v62 = sub_10000D37C(&v112, (uint64_t)v113);
          uint64_t v63 = swift_getDynamicType(v62, v61, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v63);
          uint64_t v109 = v63;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v109);
          sub_10000DA68((uint64_t)&v109, &qword_1001CAAD0);
          v64._countAndFlagsBits = 58LL;
          v64._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v64);
          LogMessage.init(stringInterpolation:)(v8);
        }

        sub_10000D3A0(&v112);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(17LL, 1LL);
        v65._countAndFlagsBits = 0x676E6970706F7244LL;
        v65._object = (void *)0xE900000000000020LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v65);
        uint64_t v113 = &type metadata for Int;
        uint64_t v66 = v108;
        *(void *)&__int128 v112 = v108;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v112);
        sub_10000DA68((uint64_t)&v112, &qword_1001CAAD0);
        v67._countAndFlagsBits = 0x2973286574796220LL;
        v67._object = (void *)0xE800000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v67);
        uint64_t v68 = LogMessage.init(stringInterpolation:)(v8);
        uint64_t v69 = static os_log_type_t.default.getter(v68);
        sub_1000BD1B0(v69, v106);
        swift_bridgeObjectRelease();
        sub_100022F94();
        uint64_t v71 = v70;
        uint64_t v72 = sub_10001A680(v66);
        swift_release(v71);
        BOOL v73 = __OFSUB__(v46, v72);
        v46 -= v72;
        if (!v73) {
          goto LABEL_20;
        }
LABEL_27:
        __break(1u);
        return;
      }
    }

    __break(1u);
    goto LABEL_27;
  }

uint64_t sub_100024208()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10002422C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10002423C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void *sub_100024244()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v2);
  uint64_t v74 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v71 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v63 - v7;
  uint64_t result = (void *)objc_opt_self(&OBJC_CLASS___NSFileManager);
  id v77 = result;
  unint64_t v10 = 0LL;
  uint64_t v11 = 0LL;
  __int128 v75 = xmmword_100164240;
  unint64_t v70 = 0x800000010016BD60LL;
  unint64_t v63 = 0x800000010016BDB0LL;
  uint64_t v69 = v0;
  uint64_t v72 = v4;
  while (1)
  {
    if (v10 >= 4)
    {
      __break(1u);
      return result;
    }

    char v12 = *((_BYTE *)&off_1001A6EA8 + v10 + 32);
    sub_10002256C(1LL, v12);
    id v13 = [v77 defaultManager];
    URL.path.getter(v13, v14);
    NSString v15 = String._bridgeToObjectiveC()();
    sub_100009070();
    unsigned int v16 = [v13 fileExistsAtPath:v15];

    if (v16) {
      break;
    }
    uint64_t result = (void *)sub_100025770();
LABEL_12:
    if (++v10 == 4) {
      return result;
    }
  }

  if (qword_1001C7F88 != -1) {
    swift_once(&qword_1001C7F88, sub_1000BD368);
  }
  uint64_t v76 = qword_1001DBB08;
  uint64_t v17 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v18 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (v20 + 32) & ~v20;
  uint64_t v78 = v19;
  uint64_t v68 = v17;
  uint64_t v66 = v21 + 3 * v19;
  uint64_t v65 = v20 | 7;
  uint64_t v22 = swift_allocObject(v17, v66, v20 | 7);
  *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = v75;
  uint64_t v67 = v21;
  uint64_t v64 = sub_10000D33C(&qword_1001C9508);
  uint64_t v87 = v64;
  v86[0] = v1;
  id v23 = (id)AMSLogKey(v64);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    uint64_t v26 = v25;

    swift_bridgeObjectRetain(v26);
    uint64_t v73 = 0LL;
    Swift::String v27 = v8;
    uint64_t v28 = v74;
    sub_100010564();
    v29._countAndFlagsBits = 0LL;
    v29._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    uint64_t v30 = v87;
    Swift::String v31 = sub_10000D37C(v86, v87);
    uint64_t DynamicType = swift_getDynamicType(v31, v30, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    uint64_t v83 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
    sub_1000258CC((uint64_t)&v83);
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v83 = v17;
    uint64_t v84 = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
    sub_1000258CC((uint64_t)&v83);
    sub_10000DC4C(93LL);
    uint64_t v33 = v28;
    uint64_t v8 = v27;
    uint64_t v11 = v73;
    LogMessage.init(stringInterpolation:)(v33);
    sub_100020AB8();
  }

  else
  {
    sub_100025864();
    sub_10000DC08();
    sub_100025784();
    uint64_t v34 = sub_1000258E8();
    sub_100025828(v34);
    sub_1000258CC((uint64_t)&v83);
    sub_10000DC4C(58LL);
    LogMessage.init(stringInterpolation:)(v21);
  }

  sub_10000D3A0(v86);
  LogMessage.init(stringLiteral:)(0xD000000000000013LL);
  uint64_t v87 = v72;
  Swift::String v35 = sub_10000D63C(v86);
  uint64_t v36 = *(void *)(v79 + 16);
  sub_10002591C((uint64_t)v35);
  static LogMessage.safe(_:)(v86);
  sub_1000258CC((uint64_t)v86);
  uint64_t v38 = static os_log_type_t.default.getter(v37);
  sub_1000BD1B0(v38, v22);
  swift_bridgeObjectRelease();
  uint64_t v39 = v71;
  sub_10002591C(v71);
  uint64_t v40 = *(void **)*(&off_1001A8CF0 + v12);
  uint64_t v41 = type metadata accessor for SQLDatabase();
  id v42 = v40;
  uint64_t v43 = SQLDatabase.__allocating_init(url:readonly:fileProtection:schemaBlock:corruptionBlock:)( v39,  0,  v40,  0LL,  0LL,  0LL,  0LL);
  if (!v11)
  {
    uint64_t v44 = v43;
    uint64_t v45 = swift_retain(v43);
    sub_100128FD0(v45, v45);
    sub_100129D84();
    __chkstk_darwin(v46);
    *(&v63 - 6) = v44;
    *(&v63 - 5) = 0xD00000000000003DLL;
    *(&v63 - 4) = v63;
    *(&v63 - 3) = (unint64_t)_swiftEmptyArrayStorage;
    *(&v63 - 2) = (unint64_t)sub_10002497C;
    *(&v63 - 1) = 0LL;
    sub_100129A28((void (*)(void))sub_10001BE68, (uint64_t)(&v63 - 8));
    uint64_t v47 = swift_retain(v44);
    sub_100128B6C(v47, v44);
    uint64_t v1 = v69;
    URL.path.getter(v48, v49);
    static SQLDatabase.removeDatabase(path:)();
    sub_100025770();
    sub_100025894();
    uint64_t result = (void *)sub_100020AB8();
    goto LABEL_12;
  }

  sub_1000257F0();
  sub_100025770();
  uint64_t v50 = swift_allocObject(v17, v10, v36);
  *(_OWORD *)(v50 + swift_weakDestroy(v0 + 16) = v75;
  uint64_t v87 = v41;
  v86[0] = v69;
  id v51 = (id)AMSLogKey(v50);
  if (v51)
  {
    uint64_t v52 = v51;
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    uint64_t v55 = v54;

    swift_bridgeObjectRetain(v55);
    sub_100010564();
    sub_10000DC08();
    sub_100025784();
    uint64_t v56 = sub_1000258E8();
    sub_100025828(v56);
    sub_100025958();
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v83 = v53;
    uint64_t v84 = v55;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
    sub_100025958();
    sub_10000DC4C(93LL);
    sub_100025910();
    sub_100020AB8();
  }

  else
  {
    sub_100025864();
    sub_10000DC08();
    sub_100025784();
    uint64_t v57 = sub_1000258E8();
    sub_100025828(v57);
    sub_10000DA68((uint64_t)&v83, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_100025910();
  }

  sub_10000D3A0(v86);
  LogMessage.init(stringLiteral:)(0xD000000000000021LL);
  swift_getErrorValue(v11, v82);
  uint64_t v58 = v80;
  uint64_t v59 = v81;
  uint64_t v87 = v81;
  Swift::String v60 = sub_10000D63C(v86);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16LL))(v60, v58, v59);
  static LogMessage.safe(_:)(v86);
  sub_10000DA68((uint64_t)v86, &qword_1001CAAD0);
  uint64_t v62 = static os_log_type_t.error.getter(v61);
  sub_1000BD1B0(v62, v50);
  swift_bridgeObjectRelease();
  return (void *)sub_1000258D4();
}

uint64_t sub_10002497C()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v1);
  uint64_t v3 = (unint64_t *)((char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = sub_10000D33C(&qword_1001C9E00);
  __chkstk_darwin(v4);
  uint64_t v6 = (unint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = type metadata accessor for ScheduleInfo(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_10012B3C4();
  if (!v0)
  {
    uint64_t v12 = v10;
    id v13 = v11;
    uint64_t v14 = sub_10012B3C4();
    uint64_t v16 = v15;
    uint64_t v41 = v14;
    sub_10012B4A8(v44);
    uint64_t v39 = *(void *)&v44[0];
    uint64_t v40 = v16;
    unint64_t v17 = *((void *)&v44[0] + 1);
    unint64_t v18 = sub_10012B3A8();
    unint64_t v38 = v17;
    if ((v19 & 1) != 0) {
      unint64_t v18 = -1LL;
    }
    char v21 = sub_100024F58(v18);
    if (!v40)
    {
      sub_10001BD70(v39, v38);
      goto LABEL_3;
    }

    char v22 = v21;
    if (v13) {
      v23._countAndFlagsBits = v12;
    }
    else {
      v23._countAndFlagsBits = 0LL;
    }
    if (v13) {
      v23._object = v13;
    }
    else {
      v23._object = (void *)0xE000000000000000LL;
    }
    char v24 = sub_100024F68(v23);
    uint64_t v25 = v39;
    if (v24 == 3)
    {
      uint64_t v26 = v39;
      unint64_t v27 = v38;
LABEL_16:
      sub_10001BD70(v26, v27);
LABEL_3:
      swift_bridgeObjectRelease();
      return 1LL;
    }

    unint64_t v27 = v38;
    if (v38 >> 60 == 15) {
      goto LABEL_3;
    }
    if (v22 == 7)
    {
      uint64_t v26 = v39;
      goto LABEL_16;
    }

    char v28 = v24;
    char v29 = v22;
    unint64_t v30 = v38;
    sub_10001BDC8(v39, v38);
    sub_100021A68(v29, &v42);
    if (!v43)
    {
      sub_10001BD70(v25, v30);
      sub_10001BD70(v25, v30);
      swift_bridgeObjectRelease();
      sub_10000DA68((uint64_t)&v42, &qword_1001CAAD0);
      return 1LL;
    }

    sub_10000DA58(&v42, v44);
    if (v28)
    {
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        type metadata accessor for AppDatabase();
        sub_100023140(2LL, 0);
        sub_10000DA1C((uint64_t)v44, (uint64_t)&v42);
        uint64_t v32 = sub_10000D33C(&qword_1001C8F18);
        uint64_t v33 = swift_dynamicCast(&v45, &v42, (char *)&type metadata for Any + 8, v32, 6LL);
        if ((v33 & 1) != 0)
        {
          uint64_t v34 = v45;
          Date.init()(v33);
          sub_100110090(v34, v3, v6);
          sub_10000D5C0((uint64_t)v6, 0LL, 1LL, v7);
          sub_1000253EC((uint64_t)v6, (uint64_t)v9);
          sub_1000230D0();
          sub_10002F3F0((uint64_t)v9);
          unint64_t v36 = v38;
          uint64_t v37 = v39;
          sub_10001BD70(v39, v38);
          swift_release();
          swift_release();
          sub_10001BD70(v37, v36);
          sub_100025430((uint64_t)v9);
        }

        else
        {
          unint64_t v35 = v38;
          sub_10001BD70(v25, v38);
          swift_release();
          sub_10001BD70(v25, v35);
        }

        goto LABEL_32;
      }

      type metadata accessor for AppDatabase();
      uint64_t v31 = 2LL;
    }

    else
    {
      type metadata accessor for AppDatabase();
      uint64_t v31 = 1LL;
    }

    sub_100023140(v31, 0);
    sub_10002306C();
    sub_10000DA1C((uint64_t)v44, (uint64_t)&v42);
    sub_10002957C((uint64_t)&v42, v41, v40);
    swift_bridgeObjectRelease();
    sub_10001BD70(v25, v30);
    swift_release();
    swift_release();
    sub_10001BD70(v25, v30);
    sub_10000DA68((uint64_t)&v42, &qword_1001CAAD0);
LABEL_32:
    sub_10000D3A0(v44);
  }

  return 1LL;
}

unint64_t sub_100024F58(unint64_t result)
{
  if (result >= 7) {
    return 7LL;
  }
  return result;
}

unint64_t sub_100024F68(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A7030, v2);
  sub_100009020();
  if (v3 >= 3) {
    return 3LL;
  }
  else {
    return v3;
  }
}

id sub_100024FAC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3));
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 initWithData:isa encoding:a3];
  sub_10001BD84(a1, a2);

  return v9;
}

uint64_t sub_100025030()
{
  uint64_t v1 = type metadata accessor for String.Encoding(0LL);
  __chkstk_darwin(v1);
  sub_1000105F0();
  uint64_t v2 = sub_1000257A8();
  if ((sub_10002575C(v2, v3, v4, (uint64_t)&type metadata for String) & 1) == 0
    || (uint64_t isa = (uint64_t)v28,
        static String.Encoding.utf8.getter(),
        sub_100025720(),
        sub_1000257B4(),
        sub_1000257D4(),
        sub_100025940(),
        v5))
  {
    uint64_t v6 = sub_1000257A8();
    id v29 = v28;
    uint64_t isa = (uint64_t)&v29;
    dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
    sub_1000258B4();
    sub_100025720();
    sub_1000257B4();
    sub_1000257D4();
    sub_100025940();
    if (v5)
    {
LABEL_26:
      uint64_t v9 = sub_1000257A8();
      if ((sub_10002575C(v9, v10, v11, (uint64_t)&type metadata for Double) & 1) == 0
        || (((void (*)())Double.description.getter)(),
            sub_1000258B4(),
            sub_100025720(),
            sub_1000257B4(),
            sub_1000257D4(),
            sub_100025940(),
            v5))
      {
        uint64_t v12 = sub_1000257A8();
        if ((sub_10002575C(v12, v13, v14, (uint64_t)&type metadata for Bool) & 1) == 0
          || (!(_BYTE)v28 ? (uint64_t isa = 0x65736C6166LL) : (uint64_t isa = 1702195828LL),
              static String.Encoding.utf8.getter(),
              sub_100025720(),
              sub_1000257B4(),
              sub_1000257D4(),
              sub_100025940(),
              v5))
        {
          sub_1000257A8();
          uint64_t v15 = sub_10000D33C(&qword_1001C9518);
          if (sub_100025878(v15, v16, v17, v15))
          {
            unint64_t v18 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
            uint64_t isa = (uint64_t)Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v29 = 0LL;
            id v19 = sub_100025904(v18, "dataWithPropertyList:format:options:error:", isa);

            id v20 = v29;
            if (v19)
            {
LABEL_18:
              static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
              sub_1000258F8();
              return isa;
            }
          }

          else
          {
            sub_1000257A8();
            uint64_t v21 = sub_10000D33C(&qword_1001C8E58);
            uint64_t isa = (uint64_t)v28;
            char v24 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
            Class v25 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v29 = 0LL;
            id v19 = sub_100025904(v24, "dataWithPropertyList:format:options:error:", (uint64_t)v25);

            id v20 = v29;
            if (v19) {
              goto LABEL_18;
            }
          }

          uint64_t isa = (uint64_t)v20;
          _convertNSErrorToError(_:)(v20);

          swift_willThrow(v26);
        }
      }
    }
  }

  return isa;
}

unint64_t sub_100025374()
{
  unint64_t result = qword_1001C9510;
  if (!qword_1001C9510)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164CD8, &type metadata for AppDatabase.DatabaseError);
    atomic_store(result, (unint64_t *)&qword_1001C9510);
  }

  return result;
}

void sub_1000253B0(unint64_t *a1, uint64_t *a2)
{
  if (!*a1)
  {
    uint64_t v3 = sub_10000D820(a2);
    atomic_store(swift_getWitnessTable(&protocol conformance descriptor for [A], v3), a1);
  }

  sub_100009044();
}

uint64_t sub_1000253EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100025430(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduleInfo(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10002546C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001CAAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void sub_1000254B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000D33C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  sub_100009044();
}

void sub_1000254F4()
{
}

uint64_t storeEnumTagSinglePayload for AppDatabase.DatabaseError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100025554 + 4 * byte_100164B28[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100025574 + 4 * byte_100164B2D[v4]))();
  }
}

_BYTE *sub_100025554(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_100025574(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_10002557C(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100025584(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_10002558C(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100025594(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppDatabase.DatabaseError()
{
  return &type metadata for AppDatabase.DatabaseError;
}

uint64_t sub_1000255B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16LL);
}

uint64_t sub_1000255CC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000255EC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for AppDatabase.Weak(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000256DC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppDatabase.Weak);
}

unint64_t sub_100025628()
{
  unint64_t result = qword_1001C95B0;
  if (!qword_1001C95B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164CB0, &type metadata for AppDatabase.DatabaseError);
    atomic_store(result, (unint64_t *)&qword_1001C95B0);
  }

  return result;
}

unint64_t sub_100025664()
{
  unint64_t result = qword_1001C95B8;
  if (!qword_1001C95B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164BF8, &type metadata for AppDatabase.DatabaseError);
    atomic_store(result, (unint64_t *)&qword_1001C95B8);
  }

  return result;
}

unint64_t sub_1000256A0()
{
  unint64_t result = qword_1001C95C0;
  if (!qword_1001C95C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164C38, &type metadata for AppDatabase.DatabaseError);
    atomic_store(result, (unint64_t *)&qword_1001C95C0);
  }

  return result;
}

uint64_t sub_1000256DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_100025708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, v3, a3, v4, 0LL);
}

uint64_t sub_100025718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
}

uint64_t sub_100025720()
{
  return String.data(using:allowLossyConversion:)(v1, 0LL, v0, v2);
}

uint64_t sub_100025734()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

id sub_100025748()
{
  return sub_100024FAC(v2, v1, v0);
}

uint64_t sub_10002575C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(v5 - 136, v5 - 120, v4 + 8, a4, 6LL);
}

uint64_t sub_100025770()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 200) + 8LL))(v0, v1);
}

uint64_t sub_100025784()
{
  uint64_t v1 = *(void *)(v0 - 96);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 120), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_1000257A8()
{
  return sub_10000DA1C(v0, v1 - 120);
}

uint64_t sub_1000257B4()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000257C4()
{
  return sub_10001BDC8(v1, v0);
}

uint64_t sub_1000257D4()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

  ;
}

  ;
}

uint64_t sub_10002581C(uint64_t a1)
{
  return swift_allocObject(a1, 40LL, 7LL);
}

uint64_t sub_100025828(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 152);
}

id sub_100025838(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3, 0, 0, v4 - 144);
}

uint64_t sub_100025850()
{
  return static String.Encoding.utf8.getter();
}

void sub_100025858()
{
}

uint64_t sub_100025864()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
}

uint64_t sub_100025878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(v5 - 136, v5 - 120, v4, a4, 6LL);
}

uint64_t sub_10002588C()
{
  return swift_retain(v0);
}

uint64_t sub_100025894()
{
  return swift_release(v0);
}

void sub_10002589C()
{
}

NSData sub_1000258A4()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1000258B4()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_1000258C4()
{
  return String.Encoding.rawValue.getter();
}

void sub_1000258CC(uint64_t a1)
{
}

uint64_t sub_1000258D4()
{
  return swift_errorRelease(v0);
}

uint64_t sub_1000258DC()
{
  return _bridgeAnyObjectToAny(_:)(v0);
}

uint64_t sub_1000258E8()
{
  return swift_getMetatypeMetadata();
}

void sub_1000258F0(uint64_t a1@<X8>)
{
  *(void *)(v2 - 120) = a1;
}

void sub_1000258F8()
{
}

id sub_100025904(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 100, 0);
}

uint64_t sub_100025910()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_10002591C(uint64_t a1)
{
  return v2(a1, v1, v3);
}

void sub_100025928()
{
}

uint64_t sub_100025934()
{
  return sub_10002546C(v0 - 144, v0 - 176);
}

  ;
}

double sub_10002594C()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

void sub_100025958()
{
}

uint64_t sub_100025964(uint64_t a1, uint64_t a2)
{
  if ((v4 & 1) == 0) {
    return 0LL;
  }
  uint64_t v5 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 8);
  if (v5 == 2)
  {
    if (v6 != 2) {
      return 0LL;
    }
  }

  else
  {
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + 24) & 1) == 0) {
        return 0LL;
      }
    }

    else
    {
      uint64_t result = 0LL;
      if ((*(_BYTE *)(a2 + 24) & 1) != 0 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
        return result;
      }
    }
  }

  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a2 + 40);
  if (!v7)
  {
    if (v8) {
      return 0LL;
    }
LABEL_19:
    uint64_t v14 = *(void **)(a1 + 48);
    uint64_t v15 = *(void **)(a2 + 48);
    if (v14)
    {
      if (v15 && (sub_10004AA14(v14, v15) & 1) != 0) {
        return 1LL;
      }
    }

    else if (!v15)
    {
      return 1LL;
    }

    return 0LL;
  }

  if (!v8) {
    return 0LL;
  }
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a2 + 32);
  if (v9 == v10 && v7 == v8) {
    goto LABEL_19;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v7, v10, v8, 0LL);
  uint64_t result = 0LL;
  if ((v12 & 1) != 0) {
    goto LABEL_19;
  }
  return result;
}

void SQLite3Status.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_100025A84(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x456465776F6C6C61LL && a2 == 0xED000073746E6576LL)
  {
    unint64_t v5 = 0xED000073746E6576LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x456465776F6C6C61LL, 0xED000073746E6576LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x44676F6C6B636162LL && a2 == 0xEF73746C75616665LL)
  {
    unint64_t v8 = 0xEF73746C75616665LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x44676F6C6B636162LL, 0xEF73746C75616665LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0xD000000000000014LL)
  {
    unint64_t v9 = 0x800000010016BEF0LL;
    if (a2 == 0x800000010016BEF0LL) {
      goto LABEL_21;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000014LL, 0x800000010016BEF0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return 2LL;
  }

  if (a1 == 0xD000000000000016LL && a2 == 0x800000010016BF10LL)
  {
    swift_bridgeObjectRelease(0x800000010016BF10LL);
    return 3LL;
  }

  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x800000010016BF10LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0) {
      return 3LL;
    }
    else {
      return 4LL;
    }
  }

uint64_t sub_100025C74()
{
  return 4LL;
}

uint64_t sub_100025C7C()
{
  return 0LL;
}

uint64_t sub_100025C88(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100025CC8 + 4 * byte_100164D20[a1]))( 0x456465776F6C6C61LL,  0xED000073746E6576LL);
}

uint64_t sub_100025CC8()
{
  return 0x44676F6C6B636162LL;
}

unint64_t sub_100025CEC()
{
  return 0xD000000000000014LL;
}

unint64_t sub_100025D08()
{
  return 0xD000000000000016LL;
}

uint64_t sub_100025D28(void *a1)
{
  unint64_t v5 = v1;
  uint64_t v7 = sub_10000D33C(&qword_1001C9718);
  sub_1000291D4();
  __chkstk_darwin(v8);
  sub_100029170();
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10000D37C(a1, v9);
  unint64_t v11 = sub_100028564();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for AppDefaults.CodingKeys,  &type metadata for AppDefaults.CodingKeys,  v11,  v9,  v10);
  v26[0] = *v5;
  char v27 = 0;
  sub_10000D33C(&qword_1001C96F0);
  sub_100028618(&qword_1001C9720, (void (*)(void))sub_100028674, (uint64_t)&protocol conformance descriptor for <A> [A]);
  uint64_t v12 = sub_10002920C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v12, v13, v14, v15, v16);
  if (!v2)
  {
    sub_100029260((uint64_t)(v5 + 1), (uint64_t)v29);
    sub_100029260((uint64_t)v29, (uint64_t)v26);
    char v27 = 1;
    unint64_t v17 = sub_1000286B0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v27, v7, &unk_1001A8FF8, v17);
    uint64_t v18 = v5[4];
    uint64_t v19 = v5[5];
    LOBYTE(v26[0]) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v18, v19, v26, v7);
    sub_100029260((uint64_t)(v5 + 6), (uint64_t)v28);
    sub_100029260((uint64_t)v28, (uint64_t)v26);
    char v27 = 3;
    sub_10000D33C(&qword_1001CDF50);
    sub_1000286EC( &qword_1001C9748,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    uint64_t v20 = sub_10002920C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v20, v21, v22, v23, v24);
  }

  return sub_1000292FC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void sub_100025F00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24)
{
  a23 = v25;
  a24 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = sub_10000D33C(&qword_1001C96E0);
  __chkstk_darwin(v31);
  sub_10000DE7C();
  uint64_t v32 = *(void *)(v28 + 24);
  uint64_t v33 = *(void *)(v28 + 32);
  sub_100029290();
  unint64_t v34 = sub_100028564();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for AppDefaults.CodingKeys,  &type metadata for AppDefaults.CodingKeys,  v34,  v32,  v33);
  if (v24)
  {
    sub_1000291BC();
  }

  else
  {
    sub_10000D33C(&qword_1001C96F0);
    a14 = 0;
    sub_100028618( &qword_1001C96F8,  (void (*)(void))sub_1000285A0,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    uint64_t v35 = sub_100029268();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v35);
    uint64_t v36 = v51[0];
    a14 = 1;
    unint64_t v37 = sub_1000285DC();
    swift_bridgeObjectRetain(v51[0]);
    sub_100029250((uint64_t)&unk_1001A8FF8, (uint64_t)&a14, v31, (uint64_t)&unk_1001A8FF8);
    if (v37)
    {
      sub_1000291A0();
      sub_100020AB8();
    }

    else
    {
      uint64_t v49 = v51[1];
      uint64_t v50 = v51[0];
      a10 = v52;
      LOBYTE(v51[0]) = 2;
      uint64_t v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v51, v31);
      uint64_t v40 = v39;
      uint64_t v48 = v38;
      sub_10000D33C(&qword_1001CDF50);
      a14 = 3;
      sub_1000286EC( &qword_1001C9710,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> [A]);
      uint64_t v42 = v41;
      swift_bridgeObjectRetain(v40);
      uint64_t v43 = sub_100029268();
      sub_100029250(v43, v44, v45, v46);
      sub_1000291A0();
      if (!v42)
      {
        uint64_t v47 = v51[0];
        swift_bridgeObjectRetain(v51[0]);
        sub_1000291BC();
        swift_bridgeObjectRelease();
        sub_10001C258();
        sub_100020AB8();
        *(void *)uint64_t v30 = v36;
        *(void *)(v30 + 8) = v50;
        *(void *)(v30 + swift_weakDestroy(v0 + 16) = v49;
        *(_BYTE *)(v30 + 24) = a10;
        *(void *)(v30 + 32) = v48;
        *(void *)(v30 + 40) = v40;
        *(void *)(v30 + 48) = v47;
        goto LABEL_4;
      }

      sub_100020AB8();
      sub_10001C258();
    }

    sub_1000291BC();
    sub_10001C258();
    sub_100020AB8();
  }

LABEL_4:
  sub_100029188();
}

  uint64_t v15 = 0LL;
  uint64_t v16 = 0;
LABEL_5:
  unint64_t v17 = static TimeZone.current.getter(v14);
  Date.init()(v17);
  uint64_t v18 = TimeZone.secondsFromGMT(for:)(v7);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v7, v69);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v16 && v15 == v18)
  {
    uint64_t v19 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v20 = type metadata accessor for LogMessage(0LL);
    uint64_t v21 = swift_allocObject( v19,  ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v20 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v21 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    *((void *)&v77 + 1) = sub_10000D33C(&qword_1001CD728);
    *(void *)&uint64_t v76 = v70;
    uint64_t v22 = (id)AMSLogKey(*((void *)&v77 + 1));
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      uint64_t v26 = v25;

      swift_bridgeObjectRetain(v26);
      uint64_t v27 = v71;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v28._countAndFlagsBits = 0LL;
      v28._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t v29 = *((void *)&v77 + 1);
      uint64_t v30 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t DynamicType = swift_getDynamicType(v30, v29, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v73 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
      sub_10000E888((uint64_t)&v73);
      v32._countAndFlagsBits = 5972026LL;
      v32._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v73 = v24;
      uint64_t v74 = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
      sub_10000E888((uint64_t)&v73);
      v33._countAndFlagsBits = 93LL;
      v33._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)(v27);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v50 = v71;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v51._countAndFlagsBits = 0LL;
      v51._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v51);
      char v52 = *((void *)&v77 + 1);
      uint64_t v53 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t v54 = swift_getDynamicType(v53, v52, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v54);
      uint64_t v73 = v54;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
      sub_10000E888((uint64_t)&v73);
      v55._countAndFlagsBits = 58LL;
      v55._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      LogMessage.init(stringInterpolation:)(v50);
    }

    sub_10000D3A0(&v76);
    uint64_t v56 = LogMessage.init(stringLiteral:)(0xD000000000000024LL);
    if (qword_1001C7F80 != -1) {
      uint64_t v56 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v57 = static os_log_type_t.default.getter(v56);
    sub_1000BD1B0(v57, v21);
    swift_bridgeObjectRelease();
  }

  else
  {
    if ((v13 & 1) == 0)
    {
      swift_retain(v72);
      sub_10002306C();
      swift_release();
      *((void *)&v77 + 1) = &type metadata for Int;
      *(void *)&uint64_t v76 = v18;
      sub_10002950C((uint64_t)&v76, 1);
      swift_release();
      sub_10000E888((uint64_t)&v76);
    }

    unint64_t v34 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v35 = type metadata accessor for LogMessage(0LL);
    uint64_t v36 = swift_allocObject( v34,  ((*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v35 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    *((void *)&v77 + 1) = sub_10000D33C(&qword_1001CD728);
    *(void *)&uint64_t v76 = v70;
    unint64_t v37 = (id)AMSLogKey(*((void *)&v77 + 1));
    if (v37)
    {
      uint64_t v38 = v37;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      uint64_t v41 = v40;

      swift_bridgeObjectRetain(v41);
      uint64_t v42 = v71;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v43._countAndFlagsBits = 0LL;
      v43._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v43);
      uint64_t v44 = *((void *)&v77 + 1);
      uint64_t v45 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t v46 = swift_getDynamicType(v45, v44, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v46);
      uint64_t v73 = v46;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
      sub_10000E888((uint64_t)&v73);
      v47._countAndFlagsBits = 5972026LL;
      v47._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v73 = v39;
      uint64_t v74 = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
      sub_10000E888((uint64_t)&v73);
      v48._countAndFlagsBits = 93LL;
      v48._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      LogMessage.init(stringInterpolation:)(v42);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v58 = v71;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v59._countAndFlagsBits = 0LL;
      v59._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      Swift::String v60 = *((void *)&v77 + 1);
      uint64_t v61 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t v62 = swift_getDynamicType(v61, v60, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v62);
      uint64_t v73 = v62;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
      sub_10000E888((uint64_t)&v73);
      v63._countAndFlagsBits = 58LL;
      v63._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      LogMessage.init(stringInterpolation:)(v58);
    }

    sub_10000D3A0(&v76);
    uint64_t v64 = LogMessage.init(stringLiteral:)(0x100000000000001DLL);
    if (qword_1001C7F80 != -1) {
      uint64_t v64 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v65 = static os_log_type_t.default.getter(v64);
    sub_1000BD1B0(v65, v36);
    swift_bridgeObjectRelease();
    sub_100018D04(1);
  }

  return swift_release();
}

BOOL sub_100026138(char *a1, char *a2)
{
  return static SQLite3Status.__derived_enum_equals(_:_:)(*a1, *a2);
}

void sub_100026144()
{
}

void sub_10002615C(uint64_t a1)
{
}

uint64_t sub_100026168()
{
  return sub_100025C88(*v0);
}

uint64_t sub_100026170@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_100025A84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100026194()
{
  return sub_100025C7C();
}

uint64_t sub_1000261B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_100025C74();
  *a1 = result;
  return result;
}

uint64_t sub_1000261D4(uint64_t a1)
{
  unint64_t v2 = sub_100028564();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000261FC(uint64_t a1)
{
  unint64_t v2 = sub_100028564();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100026224@<D0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  if (!v9)
  {
    *(_OWORD *)a9 = v14;
    *(_OWORD *)(a9 + swift_weakDestroy(v0 + 16) = v18;
    double result = *(double *)&v21;
    *(_OWORD *)(a9 + 32) = v21;
    *(void *)(a9 + 48) = v24;
  }

  return result;
}

uint64_t sub_100026270(void *a1)
{
  return sub_100025D28(a1);
}

uint64_t sub_1000262B4(int a1, uint64_t a2, char a3, int a4, uint64_t a5, char a6)
{
  if (((a1 ^ a4) & 1) != 0) {
    return 0LL;
  }
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) == 0) {
      return 0LL;
    }
  }

  else if ((a6 & 1) != 0 || a2 != a5)
  {
    return 0LL;
  }

  return 1LL;
}

uint64_t sub_1000262E4(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x64656C62616E65LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v5 = 0xE700000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x64656C62616E65LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x696D694C657A6973LL && a2 == 0xE900000000000074LL)
  {
    swift_bridgeObjectRelease(0xE900000000000074LL);
    return 1LL;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x696D694C657A6973LL, 0xE900000000000074LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_1000263DC()
{
  return 2LL;
}

Swift::Int HeapType.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_100026428(char a1)
{
  if ((a1 & 1) != 0) {
    return 0x696D694C657A6973LL;
  }
  else {
    return 0x64656C62616E65LL;
  }
}

void sub_100026464( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23)
{
  a22 = v25;
  a23 = v26;
  char v28 = v27;
  uint64_t v39 = v29;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = sub_10000D33C(&qword_1001C97C8);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  sub_1000292E4();
  uint64_t v36 = v33[3];
  uint64_t v37 = v33[4];
  sub_10000D37C(v33, v36);
  unint64_t v38 = sub_100028D8C();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for AppBacklogDefaults.CodingKeys,  &type metadata for AppBacklogDefaults.CodingKeys,  v38,  v36,  v37);
  a13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v31, &a13, v34);
  if (!v23)
  {
    a12 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v39, v28 & 1, &a12, v34);
  }

  sub_1000292FC(v24, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
  sub_100029188();
}

uint64_t sub_10002655C(uint64_t a1)
{
  uint64_t v3 = sub_10000D33C(&qword_1001C97A8);
  sub_1000291D4();
  __chkstk_darwin(v4);
  uint64_t v5 = *(void *)(a1 + 24);
  sub_100029290();
  unint64_t v6 = sub_100028D8C();
  sub_100029330( (uint64_t)&type metadata for AppBacklogDefaults.CodingKeys,  (uint64_t)&type metadata for AppBacklogDefaults.CodingKeys,  v6);
  if (v1)
  {
    sub_1000291BC();
  }

  else
  {
    char v9 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v9, v3);
    uint64_t v7 = sub_10002933C();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v7, v3);
    sub_100029240();
    sub_1000291BC();
  }

  return v5 & 1;
}

void sub_100026668(int a1, uint64_t a2, char a3, uint64_t a4, int a5, uint64_t a6, char a7, uint64_t a8)
{
  if (((a1 ^ a5) & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      if ((a7 & 1) == 0) {
        return;
      }
    }

    else if ((a7 & 1) != 0 || a2 != a6)
    {
      return;
    }

    sub_10004AAE0(a4, a8);
  }

uint64_t sub_10002669C(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x655273776F6C6C61LL && a2 == 0xEE0065736E6F7073LL)
  {
    unint64_t v5 = 0xEE0065736E6F7073LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x655273776F6C6C61LL, 0xEE0065736E6F7073LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6E656E6F706D6F63LL && a2 == 0xEA00000000007374LL)
  {
    unint64_t v8 = 0xEA00000000007374LL;
    goto LABEL_16;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E656E6F706D6F63LL, 0xEA00000000007374LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
LABEL_16:
    swift_bridgeObjectRelease(v8);
    return 1LL;
  }

  if (a1 == 0x7265746C6966LL && a2 == 0xE600000000000000LL)
  {
    swift_bridgeObjectRelease(0xE600000000000000LL);
    return 2LL;
  }

  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7265746C6966LL, 0xE600000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0) {
      return 2LL;
    }
    else {
      return 3LL;
    }
  }

uint64_t sub_100026810()
{
  return 3LL;
}

void _s14amsengagementd13SQLite3StatusO9hashValueSivg_0(unsigned __int8 a1)
{
}

uint64_t sub_100026854(char a1)
{
  if (!a1) {
    return 0x655273776F6C6C61LL;
  }
  if (a1 == 1) {
    return 0x6E656E6F706D6F63LL;
  }
  return 0x7265746C6966LL;
}

void sub_1000268B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, char a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25)
{
  a24 = v27;
  a25 = v28;
  uint64_t v30 = v29;
  a10 = v31;
  uint64_t v44 = v32;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = sub_10000D33C(&qword_1001C97B8);
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  sub_100029170();
  uint64_t v40 = v36[3];
  uint64_t v39 = v36[4];
  sub_10000D37C(v36, v40);
  unint64_t v41 = sub_100028D50();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for AppEventInfo.CodingKeys,  &type metadata for AppEventInfo.CodingKeys,  v41,  v40,  v39);
  a15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v34, &a15, v37);
  if (!v25)
  {
    a14 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v44, a10 & 1, &a14, v37);
    uint64_t v45 = v30;
    a13 = 2;
    uint64_t v42 = sub_10000D33C(&qword_1001C9798);
    sub_100028DC8( &qword_1001C97C0,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v45, &a13, v37, v42, v43);
  }

  sub_1000292FC(v26, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
  sub_100029188();
}

uint64_t sub_100026A18()
{
  uint64_t v12 = v1;
  uint64_t v13 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10000D33C(&qword_1001C9788);
  __chkstk_darwin(v5);
  uint64_t v6 = *(void *)(v4 + 24);
  sub_100029290();
  unint64_t v7 = sub_100028D50();
  sub_100029330( (uint64_t)&type metadata for AppEventInfo.CodingKeys,  (uint64_t)&type metadata for AppEventInfo.CodingKeys,  v7);
  if (v0)
  {
    sub_1000291BC();
  }

  else
  {
    char v11 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v11, v5);
    uint64_t v8 = sub_10002933C();
    ((void (*)(uint64_t, uint64_t))KeyedDecodingContainer.decodeIfPresent(_:forKey:))(v8, v5);
    uint64_t v10 = sub_10000D33C(&qword_1001C9798);
    sub_100028DC8( &qword_1001C97A0,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10);
    sub_1000257D4();
    sub_1000291BC();
  }

  return v6 & 1;
}

Swift::Int sub_100026B94()
{
  return HeapType.hashValue.getter(*v0);
}

uint64_t sub_100026B9C()
{
  return sub_100026428(*v0);
}

uint64_t sub_100026BA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1000262E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100026BC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_1000263DC();
  *a1 = result;
  return result;
}

uint64_t sub_100026BEC(uint64_t a1)
{
  unint64_t v2 = sub_100028D8C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100026C14(uint64_t a1)
{
  unint64_t v2 = sub_100028D8C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100026C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10002655C(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + swift_weakDestroy(v0 + 16) = v6 & 1;
  }

  return result;
}

#error "100026C88: call analysis failed (funcsize=8)"
uint64_t sub_100026C94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000262B4(*a1, *((void *)a1 + 1), a1[16], *a2, *((void *)a2 + 1), a2[16]);
}

void sub_100026CB8(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  Hasher._combine(_:)(v2);
  Hasher._finalize()();
  sub_100008FD4();
}

uint64_t sub_100026CF0()
{
  return sub_100026854(*v0);
}

uint64_t sub_100026CF8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_10002669C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100026D1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_100026810();
  *a1 = result;
  return result;
}

uint64_t sub_100026D40(uint64_t a1)
{
  unint64_t v2 = sub_100028D50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100026D68(uint64_t a1)
{
  unint64_t v2 = sub_100028D50();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100026D90@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100026A18();
  if (!v1)
  {
    *(_BYTE *)a1 = result & 1;
    *(void *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v5 & 1;
    *(void *)(a1 + 24) = v6;
  }

  return result;
}

#error "100026DE8: call analysis failed (funcsize=11)"
void sub_100026DF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_100026668( *a1,  *((void *)a1 + 1),  a1[16],  *((void *)a1 + 3),  *a2,  *((void *)a2 + 1),  a2[16],  *((void *)a2 + 3));
}

uint64_t sub_100026E2C()
{
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  uint64_t v6 = v0;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  sub_10000DC64();
  __chkstk_darwin(v10);
  sub_100029170();
  type metadata accessor for DispatchQoS(0LL);
  sub_10000DC64();
  __chkstk_darwin(v11);
  sub_1000292E4();
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  sub_1000291D4();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v16 = (*(uint64_t (**)(char *, void, uint64_t))(v3 + 104))( v15,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v12);
  ((void (*)(uint64_t))static DispatchQoS.unspecified.getter)(v16);
  uint64_t v22 = _swiftEmptyArrayStorage;
  unint64_t v17 = sub_1000284E0();
  uint64_t v18 = sub_10000D33C((uint64_t *)&unk_1001CD3A0);
  unint64_t v19 = sub_100028520();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v18, v19, v9, v17);
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD00000000000001FLL,  0x800000010016BE90LL,  v2,  v1,  v15,  0LL);
  *(void *)(v6 + 24) = _swiftEmptyDictionarySingleton;
  strcpy((char *)(v6 + 32), "defaults.json");
  *(_WORD *)(v6 + 46) = -4864;
  sub_1000288E8(v8, v6 + OBJC_IVAR____TtC14amsengagementd19AppDefaultsProvider_directoryURL, &qword_1001CB180);
  return v6;
}

double sub_100026FDC@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  _BYTE v8[24] = a1;
  uint64_t v3 = sub_10000D33C(&qword_1001C9768);
  OS_dispatch_queue.sync<A>(execute:)(sub_1000288CC, v8, v3);
  uint64_t v4 = v12;
  double result = *(double *)&v9;
  __int128 v6 = v10;
  __int128 v7 = v11;
  *(_OWORD *)a2 = v9;
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  *(void *)(a2 + 48) = v4;
  return result;
}

uint64_t sub_100027058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  __int128 v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = a1 + 24;
  swift_beginAccess(a1 + 24, v39, 0LL, 0LL);
  uint64_t v19 = *(void *)(a1 + 24);
  if (*(void *)(v19 + 16))
  {
    swift_bridgeObjectRetain(*(void *)(a1 + 24));
    uint64_t v20 = sub_100030E20(a2);
    if ((v21 & 1) != 0)
    {
      uint64_t v22 = *(void *)(v19 + 56) + 56 * v20;
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v53 = *(void *)(v22 + 16);
      uint64_t v25 = *(unsigned __int8 *)(v22 + 24);
      uint64_t v27 = *(void *)(v22 + 32);
      uint64_t v26 = *(void *)(v22 + 40);
      uint64_t v28 = *(void *)(v22 + 48);
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v26);
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v24;
      a3[1] = v23;
      a3[2] = v53;
      a3[3] = v25;
      a3[4] = v27;
      a3[5] = v26;
      a3[6] = v28;
      return result;
    }

    swift_bridgeObjectRelease();
  }

  uint64_t v53 = v3;
  sub_100027A68( a2,  v12,  v13,  v14,  v15,  v16,  v17,  v18,  v34,  v35,  v36,  (uint64_t)a3,  v38[0],  v38[1],  v38[2],  v39[0],  v39[1],  v39[2],  v40,  v41);
  sub_100027564();
  uint64_t v30 = v40;
  uint64_t v31 = v41;
  uint64_t v34 = v42;
  uint64_t v36 = v43;
  uint64_t v32 = v45;
  uint64_t v35 = v44;
  uint64_t v33 = v46;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess(v11, v38, 33LL, 0LL);
  sub_1000288E8((uint64_t)&v40, (uint64_t)v47, &qword_1001C9768);
  if (v47[0])
  {
    v48[0] = v30;
    v48[1] = v31;
    _OWORD v48[2] = v34;
    char v49 = v36;
    uint64_t v50 = v35;
    uint64_t v51 = v32;
    uint64_t v52 = v33;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v32);
    sub_100034104();
  }

  else
  {
    sub_100033434(v48, a2);
    sub_10002892C(v48);
  }

  swift_endAccess(v38);
  return sub_1000288E8((uint64_t)&v40, v37, &qword_1001C9768);
}

uint64_t sub_1000272A8(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  __int128 v6 = *(dispatch_queue_s **)(v2 + 16);
  uint64_t v7 = swift_allocObject(&unk_1001A8E98, 81LL, 7LL);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = v3;
  __int128 v8 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 40) = v8;
  *(_OWORD *)(v7 + 56) = *((_OWORD *)a1 + 2);
  *(void *)(v7 + 72) = a1[6];
  *(_BYTE *)(v7 + 80) = a2;
  uint64_t v9 = swift_allocObject(&unk_1001A8EC0, 32LL, 7LL);
  *(void *)(v9 + swift_weakDestroy(v0 + 16) = sub_10002883C;
  *(void *)(v9 + 24) = v7;
  void v13[4] = sub_10002885C;
  uint64_t v14 = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256LL;
  v13[2] = sub_100131DB8;
  v13[3] = &unk_1001A8ED8;
  __int128 v10 = _Block_copy(v13);
  uint64_t v17 = *a1;
  sub_1000288E8((uint64_t)(a1 + 4), (uint64_t)v16, &qword_1001C9760);
  sub_1000288E8((uint64_t)(a1 + 6), (uint64_t)&v15, &qword_1001C9740);
  uint64_t v11 = v14;
  swift_retain(v3);
  sub_10002887C(&v17);
  sub_1000288A4((uint64_t)v16);
  sub_10002887C(&v15);
  swift_retain(v9);
  swift_release(v11);
  dispatch_sync(v6, v10);
  _Block_release(v10);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v9, "", 107LL, 74LL, 31LL, 1LL);
  swift_release(v7);
  uint64_t result = swift_release(v9);
  return result;
}

uint64_t sub_100027450(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100027A68( a3,  v10,  v11,  v12,  v13,  v14,  v15,  v16,  v18,  v19[0],  v19[1],  v19[2],  v20,  v21[0],  v21[1],  v22[0],  v22[1],  v22[2],  v22[3],  v22[4]);
  sub_100027C68();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess(a1 + 24, v19, 33LL, 0LL);
  v22[0] = *a2;
  sub_1000288E8((uint64_t)(a2 + 4), (uint64_t)v21, &qword_1001C9760);
  sub_1000288E8((uint64_t)(a2 + 6), (uint64_t)&v20, &qword_1001C9740);
  sub_10002887C(v22);
  sub_1000288A4((uint64_t)v21);
  sub_10002887C(&v20);
  sub_100034104();
  return swift_endAccess(v19);
}

void sub_100027564()
{
  uint64_t v2 = v1;
  uint64_t v30 = v3;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_10000DC64();
  __chkstk_darwin(v4);
  sub_100029170();
  uint64_t v5 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v6 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v7 = swift_allocObject( v5,  ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 2LL * *(void *)(v6 + 72),
         *(unsigned __int8 *)(v6 + 80) | 7LL);
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v33 = sub_100029304();
  uint64_t v31 = v0;
  uint64_t v8 = swift_retain(v0);
  id v9 = (id)AMSLogKey(v8);
  if (v9)
  {
    uint64_t v10 = sub_1000105E8((uint64_t)v9);
    uint64_t v12 = v11;

    swift_bridgeObjectRetain(v12);
    sub_100010564();
    sub_100010608();
    sub_1000104C0(&v31);
    uint64_t v13 = sub_100010530();
    sub_100029148(v13);
    sub_1000291B0();
    sub_10000DC14();
    uint64_t v38 = &type metadata for String;
    uint64_t v36 = v10;
    uint64_t v37 = v12;
    sub_100029288();
    sub_1000291B0();
    sub_10000DC4C(93LL);
    sub_1000291E4();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A21C(1LL);
    sub_100010608();
    sub_1000104C0(&v31);
    uint64_t v14 = sub_100010530();
    uint64_t v15 = sub_100029148(v14);
    sub_100029280(v15, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_1000291E4();
  }

  sub_10000D3A0(&v31);
  sub_10001A21C(30LL);
  v16._object = (void *)0x800000010016BED0LL;
  v16._countAndFlagsBits = 0xD000000000000019LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v17 = sub_100029328();
  uint64_t v33 = v17;
  uint64_t v18 = sub_10000D63C(&v31);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16LL))(v18, v2, v17);
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)(&v31);
  sub_1000102E0((uint64_t)&v31, &qword_1001CAAD0);
  sub_10002922C();
  uint64_t v19 = sub_1000291E4();
  if (qword_1001C7F80 != -1) {
    uint64_t v19 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v20 = static os_log_type_t.info.getter(v19);
  sub_1000BD1B0(v20, v7);
  swift_bridgeObjectRelease();
  uint64_t v21 = Data.init(contentsOf:options:)(v2, 0LL);
  unint64_t v23 = v22;
  uint64_t v24 = type metadata accessor for JSONDecoder(0LL);
  sub_100029350(v24);
  JSONDecoder.init()();
  unint64_t v25 = sub_1000287C4();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&unk_1001A8E50, v21, v23, &unk_1001A8E50, v25);
  sub_10001BD84(v21, v23);
  sub_1000292C4();
  __int128 v26 = v32;
  uint64_t v27 = v33;
  __int128 v28 = v34;
  uint64_t v29 = v35;
  *(void *)uint64_t v30 = v31;
  *(_OWORD *)(v30 + 8) = v26;
  *(void *)(v30 + 24) = v27;
  *(_OWORD *)(v30 + 32) = v28;
  *(void *)(v30 + 48) = v29;
  sub_10000DD84();
}

void sub_100027A68( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  unsigned __int8 v26 = v25;
  sub_10000D33C(&qword_1001CB180);
  sub_10000DC64();
  __chkstk_darwin(v27);
  sub_10000DE7C();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_100029328();
  sub_1000291D4();
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = __chkstk_darwin(v33);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&a9 - v37;
  sub_10002877C(v24 + OBJC_IVAR____TtC14amsengagementd19AppDefaultsProvider_directoryURL, v30);
  if (sub_1000102D4(v30, 1LL, v31) == 1)
  {
    sub_1000102E0(v30, &qword_1001CB180);
    sub_10001C908(v26);
    URL.appendingPathComponent(_:)(*(void *)(v24 + 32), *(void *)(v24 + 40));
    (*(void (**)(char *, uint64_t))(v21 + 8))(v35, v31);
    sub_10000DD84();
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v38, v30, v31);
    ((void (*)(uint64_t))((char *)&loc_100027BC8 + 4 * byte_100164D24[v26]))(0x636974796C616E61LL);
  }

void sub_100027C68()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  type metadata accessor for LogMessage.StringInterpolation(0LL);
  sub_10000DC64();
  __chkstk_darwin(v5);
  sub_10000DE7C();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v10 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v11 = swift_allocObject( v9,  ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
        + 2LL * *(void *)(v10 + 72),
          *(unsigned __int8 *)(v10 + 80) | 7LL);
  *(_OWORD *)(v11 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  *((void *)&v32 + 1) = sub_100029304();
  *(void *)&__int128 v31 = v0;
  uint64_t v12 = swift_retain(v0);
  id v13 = (id)AMSLogKey(v12);
  if (v13)
  {
    uint64_t v14 = sub_1000105E8((uint64_t)v13);
    uint64_t v16 = v15;

    swift_bridgeObjectRetain(v16);
    sub_100010564();
    sub_1000104F0();
    sub_1000104C0(&v31);
    uint64_t v17 = sub_100010530();
    sub_10002915C(v17);
    sub_10002931C();
    sub_10000DC14();
    uint64_t v37 = &type metadata for String;
    uint64_t v35 = v14;
    uint64_t v36 = v16;
    sub_100029288();
    sub_10002931C();
    sub_10000DC4C(93LL);
    sub_100010690();
    sub_10000DDF8();
  }

  else
  {
    sub_10001A21C(1LL);
    sub_1000104F0();
    sub_1000104C0(&v31);
    uint64_t v18 = sub_100010530();
    uint64_t v19 = sub_10002915C(v18);
    sub_100029280(v19, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_100010690();
  }

  sub_10000D3A0(&v31);
  sub_10001A21C(29LL);
  v20._object = (void *)0x800000010016BEB0LL;
  v20._countAndFlagsBits = 0xD000000000000018LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = sub_100029328();
  *((void *)&v32 + 1) = v21;
  uint64_t v22 = sub_10000D63C(&v31);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16LL))(v22, v2, v21);
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)(&v31);
  sub_1000102E0((uint64_t)&v31, &qword_1001CAAD0);
  sub_10002922C();
  uint64_t v23 = LogMessage.init(stringInterpolation:)(v8);
  if (qword_1001C7F80 != -1) {
    uint64_t v23 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v24 = static os_log_type_t.info.getter(v23);
  sub_1000BD1B0(v24, v11);
  swift_bridgeObjectRelease();
  uint64_t v25 = type metadata accessor for JSONEncoder(0LL);
  sub_100029350(v25);
  JSONEncoder.init()();
  __int128 v26 = v4[1];
  __int128 v31 = *v4;
  __int128 v32 = v26;
  __int128 v33 = v4[2];
  uint64_t v34 = *((void *)v4 + 6);
  unint64_t v27 = sub_100028740();
  uint64_t v28 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v31, &unk_1001A8E50, v27);
  unint64_t v30 = v29;
  sub_1000292C4();
  Data.write(to:options:)(v2, 0LL, v28, v30);
  sub_10001BD84(v28, v30);
  sub_10000DD84();
}

uint64_t sub_100028118()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000102E0(v0 + OBJC_IVAR____TtC14amsengagementd19AppDefaultsProvider_directoryURL, &qword_1001CB180);
  return v0;
}

uint64_t sub_10002815C()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100028180()
{
  return type metadata accessor for AppDefaultsProvider(0LL);
}

uint64_t type metadata accessor for AppDefaultsProvider(uint64_t a1)
{
  uint64_t result = qword_1001C95F8;
  if (!qword_1001C95F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AppDefaultsProvider);
  }
  return result;
}

void sub_1000281C0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v4[2] = &unk_100164D98;
  sub_100028254(319LL);
  if (v3 <= 0x3F)
  {
    v4[3] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 80);
  }

void sub_100028254(uint64_t a1)
{
  if (!qword_1001C9608)
  {
    uint64_t v2 = type metadata accessor for URL(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1001C9608);
    }
  }

uint64_t sub_1000282A8(void *a1)
{
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t sub_1000282D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  uint64_t v4 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = a2[6];
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *sub_10002833C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  __int128 v6 = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *(_OWORD *)(a1 + 1) = v6;
  a1[4] = a2[4];
  uint64_t v7 = a2[5];
  uint64_t v8 = a1[5];
  a1[5] = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = a1[6];
  uint64_t v10 = a2[6];
  a1[6] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v9);
  return a1;
}

__n128 sub_1000283C8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *sub_1000283E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  a1[4] = a2[4];
  swift_bridgeObjectRelease(a1[5]);
  uint64_t v5 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t sub_100028448(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      uint64_t v2 = *a1;
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_100028488(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for AppDefaults()
{
}

unint64_t sub_1000284E0()
{
  unint64_t result = qword_1001CAAB0;
  if (!qword_1001CAAB0)
  {
    uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_1001CAAB0);
  }

  return result;
}

unint64_t sub_100028520()
{
  unint64_t result = qword_1001CAAC0;
  if (!qword_1001CAAC0)
  {
    uint64_t v1 = sub_10000D820((uint64_t *)&unk_1001CD3A0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1001CAAC0);
  }

  return result;
}

unint64_t sub_100028564()
{
  unint64_t result = qword_1001C96E8;
  if (!qword_1001C96E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165018, &type metadata for AppDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C96E8);
  }

  return result;
}

unint64_t sub_1000285A0()
{
  unint64_t result = qword_1001C9700;
  if (!qword_1001C9700)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164FF0, &unk_1001A9078);
    atomic_store(result, (unint64_t *)&qword_1001C9700);
  }

  return result;
}

unint64_t sub_1000285DC()
{
  unint64_t result = qword_1001C9708;
  if (!qword_1001C9708)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164FC8, &unk_1001A8FF8);
    atomic_store(result, (unint64_t *)&qword_1001C9708);
  }

  return result;
}

void sub_100028618(unint64_t *a1, void (*a2)(void), uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v6 = sub_10000D820(&qword_1001C96F0);
    a2();
    atomic_store(swift_getWitnessTable(a3, v6), a1);
  }

  sub_1000291C4();
}

unint64_t sub_100028674()
{
  unint64_t result = qword_1001C9728;
  if (!qword_1001C9728)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164FA0, &unk_1001A9078);
    atomic_store(result, (unint64_t *)&qword_1001C9728);
  }

  return result;
}

unint64_t sub_1000286B0()
{
  unint64_t result = qword_1001C9738;
  if (!qword_1001C9738)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164F78, &unk_1001A8FF8);
    atomic_store(result, (unint64_t *)&qword_1001C9738);
  }

  return result;
}

void sub_1000286EC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = sub_10000D820(&qword_1001CDF50);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  sub_1000291C4();
}

unint64_t sub_100028740()
{
  unint64_t result = qword_1001C9750;
  if (!qword_1001C9750)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164DE4, &unk_1001A8E50);
    atomic_store(result, (unint64_t *)&qword_1001C9750);
  }

  return result;
}

uint64_t sub_10002877C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001CB180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000287C4()
{
  unint64_t result = qword_1001C9758;
  if (!qword_1001C9758)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164E0C, &unk_1001A8E50);
    atomic_store(result, (unint64_t *)&qword_1001C9758);
  }

  return result;
}

uint64_t sub_100028800()
{
  return swift_deallocObject(v0, 81LL, 7LL);
}

uint64_t sub_10002883C()
{
  return sub_100027450(*(void *)(v0 + 16), (uint64_t *)(v0 + 24), *(unsigned __int8 *)(v0 + 80));
}

uint64_t sub_10002884C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10002885C()
{
}

uint64_t sub_100028864(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100028874(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void *sub_10002887C(void *a1)
{
  return a1;
}

uint64_t sub_1000288A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000288CC@<X0>(void *a1@<X8>)
{
  return sub_100027058(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1000288E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000D33C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

uint64_t *sub_10002892C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100028960( uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_bridgeObjectRelease(a6);
    return swift_bridgeObjectRelease(a7);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for AppDefaults.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1000289E4 + 4 * byte_100164D2D[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100028A18 + 4 * byte_100164D28[v4]))();
}

uint64_t sub_100028A18(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100028A20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100028A28LL);
  }
  return result;
}

uint64_t sub_100028A34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100028A3CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_100028A40(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100028A48(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppDefaults.CodingKeys()
{
  return &type metadata for AppDefaults.CodingKeys;
}

__n128 initializeWithTake for SQLParameter(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_100028A78(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[17])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }

    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }

  else
  {
    int v2 = -1;
  }

  return (v2 + 1);
}

uint64_t sub_100028AC4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2) {
      *(_BYTE *)__n128 result = a2 + 1;
    }
  }

  return result;
}

void type metadata accessor for AppBacklogDefaults()
{
}

uint64_t sub_100028B14(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 24));
}

uint64_t sub_100028B1C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t sub_100028B60(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  return a1;
}

__n128 initializeWithTake for JSExtension.Response(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100028BBC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSExtension.Response(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSExtension.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for AppEventInfo()
{
}

unint64_t sub_100028C94()
{
  unint64_t result = qword_1001C9770;
  if (!qword_1001C9770)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164F50, &type metadata for AppDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C9770);
  }

  return result;
}

unint64_t sub_100028CD4()
{
  unint64_t result = qword_1001C9778;
  if (!qword_1001C9778)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164EC0, &type metadata for AppDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C9778);
  }

  return result;
}

unint64_t sub_100028D14()
{
  unint64_t result = qword_1001C9780;
  if (!qword_1001C9780)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164EE8, &type metadata for AppDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C9780);
  }

  return result;
}

unint64_t sub_100028D50()
{
  unint64_t result = qword_1001C9790;
  if (!qword_1001C9790)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165228, &type metadata for AppEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C9790);
  }

  return result;
}

unint64_t sub_100028D8C()
{
  unint64_t result = qword_1001C97B0;
  if (!qword_1001C97B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001651D8, &type metadata for AppBacklogDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C97B0);
  }

  return result;
}

void sub_100028DC8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (!*a1)
  {
    uint64_t v5 = sub_10000D820(&qword_1001C9798);
    atomic_store(swift_getWitnessTable(a3, v5), a1);
  }

  sub_1000291C4();
}

uint64_t storeEnumTagSinglePayload for AppBacklogDefaults.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100028E68 + 4 * byte_100164D37[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100028E9C + 4 * byte_100164D32[v4]))();
}

uint64_t sub_100028E9C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100028EA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100028EACLL);
  }
  return result;
}

uint64_t sub_100028EB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100028EC0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_100028EC4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100028ECC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppBacklogDefaults.CodingKeys()
{
  return &type metadata for AppBacklogDefaults.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AppEventInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_100028F34 + 4 * byte_100164D41[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100028F68 + 4 * byte_100164D3C[v4]))();
}

uint64_t sub_100028F68(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100028F70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100028F78LL);
  }
  return result;
}

uint64_t sub_100028F84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100028F8CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_100028F90(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100028F98(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppEventInfo.CodingKeys()
{
  return &type metadata for AppEventInfo.CodingKeys;
}

unint64_t sub_100028FB8()
{
  unint64_t result = qword_1001C97D0;
  if (!qword_1001C97D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001650F8, &type metadata for AppEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C97D0);
  }

  return result;
}

unint64_t sub_100028FF8()
{
  unint64_t result = qword_1001C97D8;
  if (!qword_1001C97D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001651B0, &type metadata for AppBacklogDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C97D8);
  }

  return result;
}

unint64_t sub_100029038()
{
  unint64_t result = qword_1001C97E0;
  if (!qword_1001C97E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165120, &type metadata for AppBacklogDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C97E0);
  }

  return result;
}

unint64_t sub_100029078()
{
  unint64_t result = qword_1001C97E8;
  if (!qword_1001C97E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165148, &type metadata for AppBacklogDefaults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C97E8);
  }

  return result;
}

unint64_t sub_1000290B8()
{
  unint64_t result = qword_1001C97F0;
  if (!qword_1001C97F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165068, &type metadata for AppEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C97F0);
  }

  return result;
}

unint64_t sub_1000290F8()
{
  unint64_t result = qword_1001C97F8;
  if (!qword_1001C97F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165090, &type metadata for AppEventInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1001C97F8);
  }

  return result;
}

uint64_t sub_100029148(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 120);
}

uint64_t sub_10002915C(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 120);
}

  ;
}

  ;
}

uint64_t sub_1000291A0()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1000291B0()
{
  return sub_1000102E0(v1 - 120, v0);
}

uint64_t sub_1000291BC()
{
  return sub_10000D3A0(v0);
}

  ;
}

  ;
}

uint64_t sub_1000291E4()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_1000291EC()
{
  return 0x6C696166202E2E2ELL;
}

uint64_t sub_10002920C()
{
  return v0 - 120;
}

void sub_10002922C()
{
  v0._countAndFlagsBits = 0x2E2E2E2029LL;
  v0._object = (void *)0xE500000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_100029240()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100029250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(a1, a2, a3, a4, v4);
}

uint64_t sub_100029260(uint64_t a1, uint64_t a2)
{
  return sub_1000288E8(a1, a2, v2);
}

uint64_t sub_100029268()
{
  return v0;
}

uint64_t sub_100029280(uint64_t a1, uint64_t *a2)
{
  return sub_1000102E0(v2 - 120, a2);
}

uint64_t sub_100029288()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 120);
}

void *sub_100029290()
{
  return sub_10000D37C(v0, v1);
}

  ;
}

uint64_t sub_1000292C4()
{
  return swift_release(v0);
}

  ;
}

  ;
}

uint64_t sub_1000292FC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_100029304()
{
  return type metadata accessor for AppDefaultsProvider(0LL);
}

uint64_t sub_100029310()
{
  return sub_1000102E0(v1 - 120, v0);
}

uint64_t sub_10002931C()
{
  return sub_1000102E0(v1 - 120, v0);
}

uint64_t sub_100029328()
{
  return type metadata accessor for URL(0LL);
}

uint64_t sub_100029330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)(a1, a2, a3, v3, v4);
}

uint64_t sub_10002933C()
{
  *(_BYTE *)(v0 - 66) = 1;
  return v0 - 66;
}

uint64_t sub_100029350(uint64_t a1)
{
  return swift_allocObject(a1, *(unsigned int *)(a1 + 48), *(unsigned __int16 *)(a1 + 52));
}

uint64_t sub_10002935C(uint64_t a1, void *a2)
{
  v4._countAndFlagsBits = 0x5420455441455243LL;
  v4._object = (void *)0xED000020454C4241LL;
  String.append(_:)(v4);
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  String.append(_:)(v5);
  sub_1000209A0(10272LL);
  sub_10002C70C();
  sub_10001C2C0(0x2C5458455420LL);
  sub_10002C6A4();
  sub_10001C2C0(0x2C5458455420LL);
  sub_100020A8C(0x65756C6176LL);
  sub_10001C2C0(0x2C424F4C4220LL);
  v6._countAndFlagsBits = sub_10002C724();
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0x52454745544E4920LL;
  v7._object = (void *)0xEA0000000000202CLL;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 0x69646F4D7473616CLL;
  v8._object = (void *)0xEC00000064656966LL;
  String.append(_:)(v8);
  v9._object = (void *)0x800000010016BAF0LL;
  v9._countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v9);
  sub_10002C6A4();
  sub_1000209A0(8236LL);
  sub_10002C70C();
  sub_1000209A0(10537LL);
  v12._countAndFlagsBits = 0LL;
  v10._rawValue = _swiftEmptyArrayStorage;
  v12._object = (void *)0xE000000000000000LL;
  sub_100020BF4(v12, v10);
  return sub_10000DDF8();
}

uint64_t sub_10002950C(uint64_t a1, char a2)
{
  BOOL v2 = (a2 & 1) == 0;
  if ((a2 & 1) != 0) {
    uint64_t v3 = 0x656D69547473616CLL;
  }
  else {
    uint64_t v3 = 0x53676F6C6B636162LL;
  }
  if (v2) {
    uint64_t v4 = 0xEB00000000657A69LL;
  }
  else {
    uint64_t v4 = 0xEC000000656E6F5ALL;
  }
  sub_10002957C(a1, v3, v4);
  return sub_100009020();
}

uint64_t sub_10002957C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (v13)
  {
    unint64_t v6 = sub_10002C608();
    if (swift_dynamicCast(&v17, v12, (char *)&type metadata for Any + 8, v6, 6LL))
    {

      __int128 v14 = 0u;
      __int128 v15 = 0u;
      goto LABEL_7;
    }
  }

  else
  {
    sub_1000102E0((uint64_t)v12, &qword_1001CAAD0);
  }

  sub_10002546C(a1, (uint64_t)&v14);
  if (*((void *)&v15 + 1))
  {
    sub_10000DA58(&v14, v16);
    uint64_t v7 = sub_10000D33C(&qword_1001C8BC0);
    uint64_t inited = swift_initStackObject(v7, &v11);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
    *(void *)(inited + 32) = a2;
    *(void *)(inited + 40) = a3;
    sub_10000DA1C((uint64_t)v16, inited + 48);
    sub_10000DF10();
    uint64_t v9 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    sub_1000296D8(v9);
    sub_10000D3A0(v16);
    return sub_10000DE2C();
  }

LABEL_7:
  sub_1000102E0((uint64_t)&v14, &qword_1001CAAD0);
  return sub_10002C3C4(a2, a3);
}

    Swift::String v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v5;
    goto LABEL_8;
  }

  if (!v4)
  {
    sub_10000D3A0((void *)a1);
    goto LABEL_7;
  }

  sub_10003A0D0((void *)a1, (void *)a2);
LABEL_8:
  sub_10003A0D0((void *)(a1 + 32), (void *)(a2 + 32));
  return a1;
}

  char v49 = v6;
  sub_100039F1C(v1, (uint64_t)v10);
  uint64_t v16 = *v10;
  sub_10000DD9C();
  id v17 = sub_100048A30();
  uint64_t v18 = sub_100047FD8(v17, v5, (uint64_t)v3);
  Swift::String v20 = v19;
  sub_10001C258();
  if ((v20 & 1) != 0) {
    goto LABEL_13;
  }
  uint64_t v21 = v18 + 1;
  if (!__OFADD__(v18, 1LL))
  {
    uint64_t v47 = v1;
    uint64_t v22 = *(void *)(v16 + 16);
    if (v21 == v22)
    {
      uint64_t v23 = v18 + 1;
LABEL_11:
      uint64_t v1 = v47;
      __break(1u);
LABEL_13:
      uint64_t v18 = *(void *)(v16 + 16);
      uint64_t v23 = v18;
LABEL_14:
      sub_100092734((char *)v18, v23);
      if (*(void *)(*v10 + 16LL) || *((_BYTE *)v10 + *(int *)(v49 + 40)) != 3)
      {
        sub_100040A80(v5, v3, v1);
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        v10[1] = v25;
        sub_100040CB8();
      }

      else
      {
        sub_10000DED8();
        sub_10000DEB4();
        sub_100040AD4();
        sub_1000090CC();
        sub_10000DDF8();
      }

      sub_1000207E4((uint64_t)v10);
      goto LABEL_19;
    }

    uint64_t v35 = 16 * v18;
    uint64_t v23 = v18 + 1;
    uint64_t v48 = v10;
    while ((v21 & 0x8000000000000000LL) == 0)
    {
      if (v23 >= v22) {
        goto LABEL_54;
      }
      uint64_t v36 = v16 + v35;
      uint64_t v37 = *(void *)(v16 + v35 + 48);
      uint64_t v38 = *(void *)(v16 + v35 + 56);
      uint64_t v39 = v37 == v5 && v38 == (void)v3;
      if (!v39 && (sub_100025718(v37, v38, v5, (uint64_t)v3) & 1) == 0)
      {
        if (v23 != v18)
        {
          if (v18 >= v22) {
            goto LABEL_56;
          }
          uint64_t v40 = (uint64_t *)(v16 + 32 + 16 * v18);
          uint64_t v41 = v40[1];
          uint64_t v42 = *(void *)(v36 + 56);
          uint64_t v50 = *v40;
          uint64_t v51 = *(void *)(v36 + 48);
          sub_10000DF9C();
          sub_10000DEE0();
          if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
          {
            sub_10015524C();
            uint64_t v16 = v46;
          }

          uint64_t v43 = v16 + 16 * v18;
          *(void *)(v43 + 32) = v51;
          *(void *)(v43 + 40) = v42;
          swift_bridgeObjectRelease();
          if (v23 >= *(void *)(v16 + 16)) {
            goto LABEL_57;
          }
          uint64_t v44 = v16 + v35;
          *(void *)(v44 + 48) = v50;
          *(void *)(v44 + 56) = v41;
          swift_bridgeObjectRelease();
          Swift::OpaquePointer v10 = v48;
          *uint64_t v48 = v16;
        }

        if (__OFADD__(v18++, 1LL)) {
          goto LABEL_55;
        }
      }

      ++v23;
      uint64_t v22 = *(void *)(v16 + 16);
      v35 += 16LL;
      if (v23 == v22) {
        goto LABEL_11;
      }
    }

    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }

  __break(1u);
LABEL_59:
  __break(1u);
}

  uint64_t v13 = sub_100072504(v9, v10, a3);
  sub_100009070();
  return v13;
}

    memcpy(__dst, __src, 0x50uLL);
    goto LABEL_8;
  }

  if (!v7)
  {
    sub_1000796D4((uint64_t)__dst);
    goto LABEL_7;
  }

  *(_BYTE *)__dst = *(_BYTE *)__src;
  *((_BYTE *)__dst + 1) = *((_BYTE *)__src + 1);
  Swift::String v8 = (void *)__src[1];
  __dst[1] = v8;
  uint64_t v9 = v8;

  __dst[2] = __src[2];
  __dst[3] = __src[3];
  Swift::OpaquePointer v10 = __src[4];
  __dst[4] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease();
  __dst[5] = __src[5];
  uint64_t v11 = __src[6];
  __dst[6] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease();
  __dst[7] = __src[7];
  *((_BYTE *)__dst + 64) = *((_BYTE *)__src + 64);
  __dst[9] = __src[9];
LABEL_8:
  uint64_t v16 = a3[5];
  id v17 = (char *)__dst + v16;
  uint64_t v18 = (char *)__src + v16;
  uint64_t v19 = type metadata accessor for URL(0LL);
  Swift::String v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24LL);
  v20(v17, v18, v19);
  v20((char *)__dst + a3[6], (char *)__src + a3[6], v19);
  *((_BYTE *)__dst + a3[7]) = *((_BYTE *)__src + a3[7]);
  return __dst;
}

uint64_t sub_1000296D8(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v5);
  if (qword_1001C7F88 == -1) {
    goto LABEL_2;
  }
LABEL_38:
  swift_once(&qword_1001C7F88, sub_1000BD368);
LABEL_2:
  uint64_t v6 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v7 = *(void *)(sub_10002C79C() - 8);
  uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
       + 2LL * *(void *)(v7 + 72),
         *(unsigned __int8 *)(v7 + 80) | 7LL);
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  *((void *)&v40 + 1) = type metadata accessor for AppKeyValueTable();
  uint64_t v38 = (uint64_t)v3;
  uint64_t v41 = (uint64_t)v3;
  uint64_t v9 = swift_retain(v3);
  id v10 = (id)AMSLogKey(v9);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v3 = v13;

    swift_bridgeObjectRetain(v3);
    sub_10000DC34();
    sub_10000DC08();
    uint64_t v14 = sub_10002C740();
    *((void *)&v37[0] + 1) = swift_getMetatypeMetadata(v14);
    *(void *)&__int128 v36 = v14;
    sub_10002C704();
    sub_10002C7B0();
    sub_10000DC14();
    *((void *)&v37[0] + 1) = &type metadata for String;
    *(void *)&__int128 v36 = v12;
    *((void *)&v36 + 1) = v3;
    sub_10002C704();
    sub_10002C7B0();
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10002C764();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    uint64_t v15 = sub_10002C740();
    *((void *)&v37[0] + 1) = swift_getMetatypeMetadata(v15);
    *(void *)&__int128 v36 = v15;
    sub_10002C704();
    sub_1000102E0((uint64_t)&v36, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(&v38);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(8LL, 1LL);
  v16._countAndFlagsBits = 0x203A676E69766153LL;
  v16._object = (void *)0xE800000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v16);
  *((void *)&v40 + 1) = sub_10000D33C(&qword_1001C8F18);
  uint64_t v38 = a1;
  sub_10000DF10();
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)(&v38);
  sub_1000102E0((uint64_t)&v38, &qword_1001CAAD0);
  sub_10000DC08();
  uint64_t v17 = sub_10000DC5C();
  uint64_t v18 = static os_log_type_t.info.getter(v17);
  sub_1000BD1B0(v18, v8);
  swift_bridgeObjectRelease();
  uint64_t v34 = a1 + 64;
  uint64_t v19 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v20 = -1LL;
  if (v19 < 64) {
    uint64_t v20 = ~(-1LL << v19);
  }
  unint64_t v21 = v20 & *(void *)(a1 + 64);
  int64_t v35 = (unint64_t)(v19 + 63) >> 6;
  uint64_t result = sub_10000DF10();
  int64_t v23 = 0LL;
  if (v21)
  {
LABEL_8:
    unint64_t v24 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    unint64_t v25 = v24 | (v23 << 6);
    goto LABEL_9;
  }

  while (1)
  {
    int64_t v29 = v23 + 1;
    if (__OFADD__(v23, 1LL))
    {
      __break(1u);
      goto LABEL_38;
    }

    if (v29 < v35)
    {
      unint64_t v30 = *(void *)(v34 + 8 * v29);
      if (v30) {
        goto LABEL_13;
      }
      v23 += 2LL;
      if (v29 + 1 >= v35)
      {
        int64_t v23 = v29;
        goto LABEL_18;
      }

      unint64_t v30 = *(void *)(v34 + 8 * v23);
      if (v30)
      {
        ++v29;
        goto LABEL_13;
      }

      if (v29 + 2 < v35) {
        break;
      }
    }

void sub_100029B70(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v113 = a4;
  uint64_t v112 = a3;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = objc_autoreleasePoolPush();
  sub_10002A578(a1, a2, (uint64_t)&v121);
  if (v4)
  {
    objc_autoreleasePoolPop(v14);
  }

  else
  {
    uint64_t v111 = v13;
    uint64_t v110 = v10;
    objc_autoreleasePoolPop(v14);
    uint64_t v15 = v123;
    if (v123 == 7LL)
    {
      if (qword_1001C7F88 != -1) {
        swift_once(&qword_1001C7F88, sub_1000BD368);
      }
      uint64_t v16 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v17 = type metadata accessor for LogMessage(0LL);
      uint64_t v18 = swift_allocObject( v16,  ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL))
            + 2LL * *(void *)(*(void *)(v17 - 8) + 72LL),
              *(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) | 7LL);
      *(_OWORD *)(v18 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      uint64_t v120 = (void *)type metadata accessor for AppKeyValueTable();
      uint64_t v118 = a2;
      uint64_t v19 = swift_retain(a2);
      id v20 = (id)AMSLogKey(v19);
      if (v20)
      {
        unint64_t v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        uint64_t v24 = v23;

        swift_bridgeObjectRetain(v24);
        unint64_t v25 = v111;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v26._countAndFlagsBits = 0LL;
        v26._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v26);
        unint64_t v27 = v120;
        uint64_t v28 = sub_10000D37C(&v118, (uint64_t)v120);
        uint64_t DynamicType = swift_getDynamicType(v28, v27, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
        uint64_t v115 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
        sub_1000102E0((uint64_t)&v115, &qword_1001CAAD0);
        v30._countAndFlagsBits = 5972026LL;
        v30._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v30);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v115 = v22;
        uint64_t v116 = v24;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
        sub_1000102E0((uint64_t)&v115, &qword_1001CAAD0);
        v31._countAndFlagsBits = 93LL;
        v31._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v31);
        LogMessage.init(stringInterpolation:)(v25);
        swift_bridgeObjectRelease();
      }

      else
      {
        uint64_t v56 = v111;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v57._countAndFlagsBits = 0LL;
        v57._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v57);
        uint64_t v58 = v120;
        uint64_t v59 = sub_10000D37C(&v118, (uint64_t)v120);
        uint64_t v60 = swift_getDynamicType(v59, v58, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v60);
        uint64_t v115 = v60;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
        sub_1000102E0((uint64_t)&v115, &qword_1001CAAD0);
        v61._countAndFlagsBits = 58LL;
        v61._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v61);
        LogMessage.init(stringInterpolation:)(v56);
      }

      sub_10000D3A0(&v118);
      uint64_t v62 = LogMessage.init(stringLiteral:)(0x65756C6176206F4ELL);
      uint64_t v63 = static os_log_type_t.error.getter(v62);
      sub_1000BD1B0(v63, v18);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v108 = v8;
      uint64_t v109 = v7;
      uint64_t v33 = v121;
      unint64_t v32 = v122;
      sub_10001BDC8(v121, v122);
      uint64_t v34 = a2;
      if (sub_10000635C())
      {
        sub_10001BDC8(v33, v32);
        uint64_t v35 = Data.count.getter(v33, v32);
        sub_10002C5F4(v33, v32, v15);
        if ((double)v35 / 1000.0 / 1000.0 > 0.1)
        {
          uint64_t v107 = v33;
          uint64_t v103 = v15;
          unint64_t v102 = v32;
          id v36 = [objc_allocWithZone(NSByteCountFormatter) init];
          [v36 setAllowedUnits:4];
          id v101 = v36;
          id v37 = [v36 stringFromByteCount:v35];
          uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
          unint64_t v104 = v38;

          if (qword_1001C7F88 != -1) {
            swift_once(&qword_1001C7F88, sub_1000BD368);
          }
          uint64_t v106 = qword_1001DBB08;
          uint64_t v39 = sub_10000D33C(&qword_1001C9C70);
          uint64_t v40 = type metadata accessor for LogMessage(0LL);
          uint64_t v41 = swift_allocObject( v39,  ((*(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL))
                + 2LL * *(void *)(*(void *)(v40 - 8) + 72LL),
                  *(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL) | 7LL);
          *(_OWORD *)(v41 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
          uint64_t v100 = v41;
          uint64_t v120 = (void *)type metadata accessor for AppKeyValueTable();
          uint64_t v118 = a2;
          uint64_t v42 = swift_retain(a2);
          id v43 = (id)AMSLogKey(v42);
          uint64_t v44 = v112;
          if (v43)
          {
            uint64_t v45 = v43;
            uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
            uint64_t v48 = v47;

            swift_bridgeObjectRetain(v48);
            char v49 = v111;
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
            v50._countAndFlagsBits = 0LL;
            v50._object = (void *)0xE000000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v50);
            uint64_t v51 = v120;
            uint64_t v52 = sub_10000D37C(&v118, (uint64_t)v120);
            uint64_t v53 = swift_getDynamicType(v52, v51, 1LL);
            uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v53);
            uint64_t v115 = v53;
            LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
            sub_1000102E0((uint64_t)&v115, &qword_1001CAAD0);
            v54._countAndFlagsBits = 5972026LL;
            v54._object = (void *)0xE300000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v54);
            uint64_t MetatypeMetadata = &type metadata for String;
            uint64_t v115 = v46;
            uint64_t v116 = v48;
            LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
            sub_1000102E0((uint64_t)&v115, &qword_1001CAAD0);
            v55._countAndFlagsBits = 93LL;
            v55._object = (void *)0xE100000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v55);
            LogMessage.init(stringInterpolation:)(v49);
            swift_bridgeObjectRelease();
          }

          else
          {
            char v49 = v111;
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
            v64._countAndFlagsBits = 0LL;
            v64._object = (void *)0xE000000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v64);
            uint64_t v65 = v120;
            uint64_t v66 = sub_10000D37C(&v118, (uint64_t)v120);
            uint64_t v67 = swift_getDynamicType(v66, v65, 1LL);
            uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v67);
            uint64_t v115 = v67;
            LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
            sub_1000102E0((uint64_t)&v115, &qword_1001CAAD0);
            v68._countAndFlagsBits = 58LL;
            v68._object = (void *)0xE100000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v68);
            LogMessage.init(stringInterpolation:)(v49);
          }

          sub_10000D3A0(&v118);
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(33LL, 2LL);
          v69._object = (void *)0x800000010016BFF0LL;
          v69._countAndFlagsBits = 0xD000000000000011LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v69);
          uint64_t v120 = &type metadata for String;
          uint64_t v118 = v44;
          unint64_t v119 = v113;
          swift_bridgeObjectRetain(v113);
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v118);
          sub_1000102E0((uint64_t)&v118, &qword_1001CAAD0);
          v70._countAndFlagsBits = 0x7469772079656B20LL;
          v70._object = (void *)0xEA00000000002068LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v70);
          uint64_t v120 = &type metadata for String;
          uint64_t v118 = v105;
          unint64_t v119 = v104;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v118);
          sub_1000102E0((uint64_t)&v118, &qword_1001CAAD0);
          v71._countAndFlagsBits = 0x65756C617620LL;
          v71._object = (void *)0xE600000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v71);
          uint64_t v72 = LogMessage.init(stringInterpolation:)(v49);
          uint64_t v73 = static os_log_type_t.default.getter(v72);
          sub_1000BD1B0(v73, v100);

          swift_bridgeObjectRelease();
          unint64_t v32 = v102;
          uint64_t v15 = v103;
          uint64_t v33 = v107;
          uint64_t v34 = a2;
        }
      }

      uint64_t v118 = 0LL;
      unint64_t v119 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(66LL);
      v74._countAndFlagsBits = 0xD000000000000017LL;
      v74._object = (void *)0x800000010016BB70LL;
      String.append(_:)(v74);
      uint64_t v75 = *(void *)(v34 + 24);
      uint64_t v76 = *(void **)(v34 + 32);
      swift_bridgeObjectRetain(v76);
      v77._countAndFlagsBits = v75;
      v77._object = v76;
      String.append(_:)(v77);
      swift_bridgeObjectRelease();
      v78._countAndFlagsBits = 10272LL;
      v78._object = (void *)0xE200000000000000LL;
      String.append(_:)(v78);
      v79._countAndFlagsBits = 7955819LL;
      v79._object = (void *)0xE300000000000000LL;
      String.append(_:)(v79);
      v80._countAndFlagsBits = 8236LL;
      v80._object = (void *)0xE200000000000000LL;
      String.append(_:)(v80);
      v81._countAndFlagsBits = 0x6E69616D6F64LL;
      v81._object = (void *)0xE600000000000000LL;
      String.append(_:)(v81);
      v82._countAndFlagsBits = 8236LL;
      v82._object = (void *)0xE200000000000000LL;
      String.append(_:)(v82);
      v83._countAndFlagsBits = 0x65756C6176LL;
      v83._object = (void *)0xE500000000000000LL;
      String.append(_:)(v83);
      v84._countAndFlagsBits = 8236LL;
      v84._object = (void *)0xE200000000000000LL;
      String.append(_:)(v84);
      v85._countAndFlagsBits = 0x70795465756C6176LL;
      v85._object = (void *)0xE900000000000065LL;
      String.append(_:)(v85);
      v86._countAndFlagsBits = 8236LL;
      v86._object = (void *)0xE200000000000000LL;
      String.append(_:)(v86);
      v87._countAndFlagsBits = 0x69646F4D7473616CLL;
      v87._object = (void *)0xEC00000064656966LL;
      String.append(_:)(v87);
      v88._countAndFlagsBits = 0xD000000000000015LL;
      v88._object = (void *)0x800000010016BFD0LL;
      String.append(_:)(v88);
      uint64_t v89 = v118;
      Swift::String v90 = (void *)v119;
      uint64_t v91 = sub_10000D33C(&qword_1001C8EE8);
      v92._rawValue = (void *)swift_initStackObject(v91, v114);
      *((_OWORD *)v92._rawValue + 1) = xmmword_100164250;
      unint64_t v93 = v113;
      *((void *)v92._rawValue + 4) = v112;
      *((void *)v92._rawValue + 5) = v93;
      *((_BYTE *)v92._rawValue + 48) = 3;
      *(_OWORD *)((char *)v92._rawValue + 56) = xmmword_100165280;
      *((_BYTE *)v92._rawValue + 72) = 3;
      *((void *)v92._rawValue + 10) = v33;
      *((void *)v92._rawValue + 11) = v32;
      *((_BYTE *)v92._rawValue + 96) = 0;
      *((void *)v92._rawValue + 13) = v15;
      *((void *)v92._rawValue + 14) = 0LL;
      *((_BYTE *)v92._rawValue + 120) = 1;
      sub_10002C5E0(v33, v32, v15);
      swift_bridgeObjectRetain(v93);
      uint64_t v94 = v110;
      uint64_t v96 = Date.init()(v95);
      double v97 = Date.timeIntervalSince1970.getter(v96);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v94, v109);
      *((double *)v92._rawValue + swift_weakDestroy(v0 + 16) = v97;
      *((void *)v92._rawValue + 17) = 0LL;
      *((_BYTE *)v92._rawValue + 144) = 2;
      v98._countAndFlagsBits = v89;
      v98._object = v90;
      SQLDatabase.execute(sql:parameters:)(v98, v92);
      swift_setDeallocating(v92._rawValue);
      sub_10012A65C();
      swift_bridgeObjectRelease();
      sub_10002C5F4(v33, v32, v15);
      sub_10002C5F4(v33, v32, v15);
    }
  }

uint64_t sub_10002A578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DA1C(a1, (uint64_t)v43);
  sub_10002A940((uint64_t)v43, &v44);
  sub_1000102E0((uint64_t)v43, &qword_1001CAAD0);
  if (MetatypeMetadata)
  {
    sub_10000DA58(&v44, &v46);
    uint64_t v10 = sub_100025030();
    if (v3)
    {
      return sub_10000D3A0(&v46);
    }

    else
    {
      uint64_t v30 = v10;
      uint64_t v31 = v11;
      char v32 = v12;
      uint64_t result = sub_10000D3A0(&v46);
      *(void *)a3 = v30;
      *(void *)(a3 + 8) = v31;
      *(_BYTE *)(a3 + swift_weakDestroy(v0 + 16) = v32;
    }
  }

  else
  {
    sub_1000102E0((uint64_t)&v44, &qword_1001CAAD0);
    if (qword_1001C7F88 != -1) {
      swift_once(&qword_1001C7F88, sub_1000BD368);
    }
    uint64_t v48 = qword_1001DBB08;
    uint64_t v14 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v15 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v16 = *(void *)(v15 + 72);
    uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
    v42[1] = v16;
    uint64_t v18 = swift_allocObject(v14, ((v17 + 32) & ~v17) + 2 * v16, v17 | 7);
    *(_OWORD *)(v18 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v47 = type metadata accessor for AppKeyValueTable();
    *(void *)&__int128 v46 = a2;
    uint64_t v19 = swift_retain(a2);
    id v20 = (id)AMSLogKey(v19);
    if (v20)
    {
      unint64_t v21 = v20;
      v42[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      uint64_t v23 = v22;

      swift_bridgeObjectRetain(v23);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v24._countAndFlagsBits = 0LL;
      v24._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t v25 = v47;
      Swift::String v26 = sub_10000D37C(&v46, v47);
      uint64_t DynamicType = swift_getDynamicType(v26, v25, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      *(void *)&__int128 v44 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v44);
      sub_1000102E0((uint64_t)&v44, &qword_1001CAAD0);
      v28._countAndFlagsBits = 5972026LL;
      v28._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&__int128 v44 = v42[0];
      *((void *)&v44 + 1) = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v44);
      sub_1000102E0((uint64_t)&v44, &qword_1001CAAD0);
      v29._countAndFlagsBits = 93LL;
      v29._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)(v9);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v33._countAndFlagsBits = 0LL;
      v33._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      uint64_t v34 = v47;
      uint64_t v35 = sub_10000D37C(&v46, v47);
      uint64_t v36 = swift_getDynamicType(v35, v34, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v36);
      *(void *)&__int128 v44 = v36;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v44);
      sub_1000102E0((uint64_t)&v44, &qword_1001CAAD0);
      v37._countAndFlagsBits = 58LL;
      v37._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)(v9);
    }

    sub_10000D3A0(&v46);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(26LL, 1LL);
    v38._object = (void *)0x800000010016C010LL;
    v38._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    sub_10000DA1C(a1, (uint64_t)&v46);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v46);
    sub_1000102E0((uint64_t)&v46, &qword_1001CAAD0);
    v39._countAndFlagsBits = 0LL;
    v39._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    uint64_t v40 = LogMessage.init(stringInterpolation:)(v9);
    uint64_t v41 = static os_log_type_t.error.getter(v40);
    sub_1000BD1B0(v41, v18);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a3 = 0LL;
    *(void *)(a3 + 8) = 0LL;
    *(_BYTE *)(a3 + swift_weakDestroy(v0 + 16) = 7;
  }

  return result;
}

void sub_10002A940(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (*((void *)&v53 + 1))
  {
    uint64_t v4 = sub_10000D33C(&qword_1001C9518);
    if ((swift_dynamicCast(&v48, &v52, (char *)&type metadata for Any + 8, v4, 6LL) & 1) != 0)
    {
      uint64_t v5 = a2;
      uint64_t v6 = *(void *)(v48 + 16);
      if (v6)
      {
        uint64_t v7 = v48 + 32;
        uint64_t v8 = _swiftEmptyArrayStorage;
        do
        {
          sub_10000DA1C(v7, (uint64_t)&v52);
          sub_10002A940(&v48, &v52);
          sub_1000102E0((uint64_t)&v52, &qword_1001CAAD0);
          if (*((void *)&v49 + 1))
          {
            sub_10000DA58(&v48, &v52);
            sub_10000DA1C((uint64_t)&v52, (uint64_t)&v48);
            if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            {
              sub_100013E64();
              uint64_t v8 = v10;
            }

            unint64_t v9 = v8[2];
            if (v9 >= v8[3] >> 1)
            {
              sub_100013E64();
              uint64_t v8 = v11;
            }

            v8[2] = v9 + 1;
            sub_10000DA58(&v48, &v8[4 * v9 + 4]);
            sub_10000D3A0(&v52);
          }

          else
          {
            sub_1000102E0((uint64_t)&v48, &qword_1001CAAD0);
          }

          v7 += 32LL;
          --v6;
        }

        while (v6);
        swift_bridgeObjectRelease();
      }

      else
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = _swiftEmptyArrayStorage;
      }

      v5[3] = v4;
      *uint64_t v5 = v8;
      return;
    }
  }

  else
  {
    sub_1000102E0((uint64_t)&v52, &qword_1001CAAD0);
  }

  sub_10002546C(a1, (uint64_t)&v52);
  if (*((void *)&v53 + 1))
  {
    uint64_t v12 = sub_10000D33C(&qword_1001C8E58);
    if ((swift_dynamicCast(&v48, &v52, (char *)&type metadata for Any + 8, v12, 6LL) & 1) != 0)
    {
      uint64_t v39 = v12;
      uint64_t v40 = (uint64_t *)a2;
      uint64_t v13 = v48;
      uint64_t v14 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
      int64_t v15 = 0LL;
      uint64_t v41 = v13 + 64;
      uint64_t v16 = 1LL << *(_BYTE *)(v13 + 32);
      uint64_t v17 = -1LL;
      if (v16 < 64) {
        uint64_t v17 = ~(-1LL << v16);
      }
      unint64_t v18 = v17 & *(void *)(v13 + 64);
      int64_t v42 = (unint64_t)(v16 + 63) >> 6;
      while (v18)
      {
        unint64_t v19 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v20 = v19 | (v15 << 6);
LABEL_22:
        sub_10002C644(*(void *)(v13 + 48) + 40 * v20, (uint64_t)&v48);
        sub_10000DA1C(*(void *)(v13 + 56) + 32 * v20, (uint64_t)v50 + 8);
LABEL_41:
        sub_1000288E8((uint64_t)&v48, (uint64_t)&v52, &qword_1001C9910);
        if (!*((void *)&v53 + 1))
        {
          swift_release(v13);
          void v40[3] = v39;
          *uint64_t v40 = v14;
          return;
        }

        __int128 v48 = v52;
        __int128 v49 = v53;
        *(void *)&v50[0] = v54;
        sub_10000DA58(v55, v46);
        sub_10002A940(&v44, v46);
        sub_1000102E0((uint64_t)v46, &qword_1001CAAD0);
        if (v45)
        {
          sub_10000DA58(&v44, v47);
          sub_10002C644((uint64_t)&v48, (uint64_t)&v44);
          sub_10000DA1C((uint64_t)v47, (uint64_t)v46);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
          id v43 = (void *)v14;
          unint64_t v25 = sub_100030D24((uint64_t)&v44);
          uint64_t v27 = *(void *)(v14 + 16);
          BOOL v28 = (v26 & 1) == 0;
          Swift::Int v29 = v27 + v28;
          if (__OFADD__(v27, v28))
          {
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }

          unint64_t v30 = v25;
          char v31 = v26;
          sub_10000D33C(qword_1001C9918);
          if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v29))
          {
            unint64_t v32 = sub_100030D24((uint64_t)&v44);
            if ((v31 & 1) != (v33 & 1)) {
              goto LABEL_66;
            }
            unint64_t v30 = v32;
          }

          uint64_t v14 = (uint64_t)v43;
          if ((v31 & 1) != 0)
          {
            uint64_t v34 = (void *)(v43[7] + 32 * v30);
            sub_10000D3A0(v34);
            sub_10000DA58(v46, v34);
          }

          else
          {
            v43[(v30 >> 6) + 8] |= 1LL << v30;
            sub_10002C644((uint64_t)&v44, v43[6] + 40 * v30);
            sub_10000DA58(v46, (_OWORD *)(v43[7] + 32 * v30));
            uint64_t v35 = v43[2];
            BOOL v36 = __OFADD__(v35, 1LL);
            uint64_t v37 = v35 + 1;
            if (v36) {
              goto LABEL_64;
            }
            v43[2] = v37;
          }

          swift_bridgeObjectRelease();
          sub_10000E854((uint64_t)&v44);
          sub_10000D3A0(v47);
          sub_10000E854((uint64_t)&v48);
        }

        else
        {
          sub_10000E854((uint64_t)&v48);
          sub_1000102E0((uint64_t)&v44, &qword_1001CAAD0);
        }
      }

      int64_t v21 = v15 + 1;
      if (__OFADD__(v15, 1LL)) {
        goto LABEL_63;
      }
      if (v21 >= v42)
      {
LABEL_40:
        unint64_t v18 = 0LL;
        uint64_t v51 = 0LL;
        memset(v50, 0, sizeof(v50));
        __int128 v48 = 0u;
        __int128 v49 = 0u;
        goto LABEL_41;
      }

      unint64_t v22 = *(void *)(v41 + 8 * v21);
      if (!v22)
      {
        int64_t v23 = v15 + 2;
        ++v15;
        if (v21 + 1 >= v42) {
          goto LABEL_40;
        }
        unint64_t v22 = *(void *)(v41 + 8 * v23);
        if (!v22)
        {
          int64_t v15 = v21 + 1;
          if (v21 + 2 >= v42) {
            goto LABEL_40;
          }
          unint64_t v22 = *(void *)(v41 + 8 * (v21 + 2));
          if (v22)
          {
            v21 += 2LL;
            goto LABEL_26;
          }

          int64_t v23 = v21 + 3;
          int64_t v15 = v21 + 2;
          if (v21 + 3 >= v42) {
            goto LABEL_40;
          }
          unint64_t v22 = *(void *)(v41 + 8 * v23);
          if (!v22)
          {
            while (1)
            {
              int64_t v21 = v23 + 1;
              if (__OFADD__(v23, 1LL)) {
                break;
              }
              if (v21 >= v42)
              {
                int64_t v15 = v42 - 1;
                goto LABEL_40;
              }

              unint64_t v22 = *(void *)(v41 + 8 * v21);
              ++v23;
              if (v22) {
                goto LABEL_26;
              }
            }

LABEL_65:
            __break(1u);
LABEL_66:
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
            __break(1u);
            return;
          }
        }

        int64_t v21 = v23;
      }

LABEL_26:
      unint64_t v18 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
      int64_t v15 = v21;
      goto LABEL_22;
    }
  }

  else
  {
    sub_1000102E0((uint64_t)&v52, &qword_1001CAAD0);
  }

  sub_10002546C(a1, (uint64_t)&v52);
  if (*((void *)&v53 + 1))
  {
    unint64_t v38 = sub_10002C608();
    if (swift_dynamicCast(&v48, &v52, (char *)&type metadata for Any + 8, v38, 6LL))
    {

      *a2 = 0u;
      a2[1] = 0u;
      return;
    }
  }

  else
  {
    sub_1000102E0((uint64_t)&v52, &qword_1001CAAD0);
  }

  sub_10002546C(a1, (uint64_t)a2);
}

    sub_1000677B4();
    uint64_t v7 = v19 & v18;
    unint64_t v9 = v20;
  }

  while (!__OFADD__(v16, 1LL))
  {
    sub_1000674F8();
    if (v10 == v11) {
      goto LABEL_38;
    }
    sub_1000677C4();
    if (v17) {
      goto LABEL_26;
    }
  }

              swift_release();
              return;
            }
          }
        }
      }
    }

  __break(1u);
  return result;
}

              sub_100020AD8();
              return;
            }
          }
        }
      }
    }

  __chkstk_darwin(v20);
  v54[-2] = a1;
  sub_1000D93EC( (uint64_t (*)(char *))sub_1000DA4E4,  (uint64_t)&v54[-4],  v53,  type metadata accessor for CacheUpdateRun,  (uint64_t)sub_100017048);
}

      swift_bridgeObjectRelease();
      swift_release();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_10006675C((uint64_t)a4, v26);
      return;
    }

  __break(1u);
  return result;
}

  type metadata accessor for AMSAccountMediaType(0LL);
  uint64_t result = (id)ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10002AF6C@<X0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  BOOL v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0) {
    uint64_t v3 = 0x656D69547473616CLL;
  }
  else {
    uint64_t v3 = 0x53676F6C6B636162LL;
  }
  if (v2) {
    uint64_t v4 = 0xEB00000000657A69LL;
  }
  else {
    uint64_t v4 = 0xEC000000656E6F5ALL;
  }
  sub_10002AFDC(v3, v4, a2);
  return sub_100009020();
}

uint64_t sub_10002AFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v7 = sub_10000D33C(&qword_1001C8EA0);
  unint64_t v8 = sub_10000DDDC(v7, 48LL);
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  sub_10000DEE0();
  sub_10002B080(v8);
  uint64_t v10 = v9;
  uint64_t result = sub_100020AB8();
  if (!v3)
  {
    sub_10000DEE0();
    sub_1000308B8(a1, a2, v10, a3);
    sub_100009020();
    return sub_10000DCFC();
  }

  return result;
}

void sub_10002B080(unint64_t a1)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    v35[1] = v5;
    uint64_t v49 = v2;
    uint64_t v7 = sub_10000DDDC((uint64_t)&unk_1001A9278, 24LL);
    *(void *)(v7 + swift_weakDestroy(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    v35[0] = v7 + 16;
    unint64_t v8 = (void *)v1[4];
    uint64_t v39 = v1[3];
    uint64_t v40 = v8;
    uint64_t v41 = v1;
    uint64_t v38 = v1[2];
    sub_10000DF10();
    unint64_t v42 = a1;
    uint64_t v9 = (uint64_t *)(a1 + 40);
    unint64_t v37 = 0x800000010016BF60LL;
    __int128 v36 = xmmword_100164220;
    do
    {
      uint64_t v43 = v6;
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      unint64_t v45 = 0LL;
      unint64_t v46 = 0xE000000000000000LL;
      sub_10000DEB4();
      _StringGuts.grow(_:)(39LL);
      swift_bridgeObjectRelease();
      unint64_t v45 = 0xD000000000000022LL;
      unint64_t v46 = v37;
      uint64_t v12 = v40;
      sub_10000DF10();
      v13._countAndFlagsBits = v39;
      v13._object = v12;
      String.append(_:)(v13);
      sub_10000DE2C();
      sub_10002C6B4();
      sub_10002C6A4();
      sub_100020A8C(0x3F203D3D20LL);
      unint64_t v15 = v45;
      unint64_t v14 = v46;
      uint64_t v16 = sub_10000D33C(&qword_1001C8EE8);
      uint64_t inited = swift_initStackObject(v16, v48);
      *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = v36;
      *(void *)(inited + 32) = v10;
      *(void *)(inited + 40) = v11;
      *(_BYTE *)(inited + 48) = 3;
      unint64_t v18 = (void *)sub_10000DDDC((uint64_t)&unk_1001A92C8, 40LL);
      v18[2] = v1;
      v18[3] = v7;
      unint64_t v19 = v42;
      void v18[4] = v42;
      uint64_t v20 = __chkstk_darwin(v19);
      v35[-6] = v38;
      v35[-5] = v15;
      v35[-4] = v14;
      v35[-3] = inited;
      v35[-2] = sub_10002C5C0;
      v35[-1] = v18;
      swift_bridgeObjectRetain(v20);
      sub_10002C7D4();
      uint64_t v21 = v49;
      sub_100129A28((void (*)(void))sub_10001BBE0, (uint64_t)&v35[-8]);
      uint64_t v49 = v21;
      if (v21)
      {
        sub_10002C7E8();
        sub_10000DCFC();
        sub_10000DE2C();
        swift_release(v18);
        swift_bridgeObjectRelease();
        swift_release(v7);
        goto LABEL_13;
      }

      v9 += 2;
      sub_10002C7E8();
      sub_10000DCFC();
      sub_10000DE2C();
      swift_release(v18);
      uint64_t v6 = v43 - 1;
    }

    while (v43 != 1);
    swift_bridgeObjectRelease();
    if (qword_1001C7F88 != -1) {
      swift_once(&qword_1001C7F88, sub_1000BD368);
    }
    uint64_t v43 = qword_1001DBB08;
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v22 = sub_10002C79C();
    uint64_t v23 = sub_10001059C( ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v22 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL));
    *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v47 = type metadata accessor for AppKeyValueTable();
    unint64_t v45 = (unint64_t)v41;
    uint64_t v24 = swift_retain(v41);
    id v25 = (id)AMSLogKey(v24);
    if (v25)
    {
      char v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      uint64_t v29 = v28;

      swift_bridgeObjectRetain(v29);
      sub_10000DC34();
      sub_10000DC08();
      sub_10002C680();
      uint64_t v30 = sub_1000258E8();
      sub_10002C6D8(v30);
      sub_10002C7A4();
      sub_10000DC14();
      v44[3] = &type metadata for String;
      v44[0] = v27;
      v44[1] = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v44);
      sub_10002C7A4();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DCFC();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      sub_10002C680();
      uint64_t v31 = sub_1000258E8();
      sub_10002C6D8(v31);
      sub_1000102E0((uint64_t)v44, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10002C774();
    sub_10002C77C();
    sub_10002C6E8();
    sub_10002C78C((uint64_t)v44, (uint64_t)&v50);
    unint64_t v32 = *(void *)(v7 + 16);
    uint64_t v47 = sub_10000D33C(&qword_1001C98F8);
    unint64_t v45 = v32;
    sub_10000DF10();
    sub_10002C704();
    sub_10002C7C8();
    sub_10002C7DC(0x79654B6D6F726620LL, 14963LL);
    uint64_t v47 = sub_10000D33C(&qword_1001CDF50);
    unint64_t v45 = v42;
    swift_bridgeObjectRetain(v42);
    sub_10002C704();
    sub_10002C7C8();
    sub_10000DC08();
    uint64_t v33 = sub_10000DC5C();
    uint64_t v34 = static os_log_type_t.debug.getter(v33);
    sub_1000BD1B0(v34, v23);
    sub_10002C764();
    swift_bridgeObjectRetain(*(void *)(v7 + 16));
    sub_10002C76C();
  }

  else
  {
    Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  }

uint64_t sub_10002B54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10002C210((uint64_t)&v48);
  if (!v4)
  {
    uint64_t v11 = v49;
    if (v49)
    {
      uint64_t v12 = a3 + 16;
      uint64_t v13 = v48;
      v51[0] = v48;
      v51[1] = v49;
      sub_10000DA58(v50, v52);
      uint64_t v48 = v13;
      uint64_t v49 = v11;
      sub_10000DA1C((uint64_t)v52, (uint64_t)v50);
      uint64_t v44 = v13;
      uint64_t v45 = v11;
      sub_10000DA1C((uint64_t)v52, (uint64_t)v46);
      sub_10000DA58(v46, v47);
      swift_beginAccess(v12, v43, 33LL, 0LL);
      swift_bridgeObjectRetain(v11);
      sub_100030118((uint64_t)v47, v13, v11);
      swift_endAccess(v43);
      sub_1000102E0((uint64_t)v51, &qword_1001C9908);
      sub_10000D3A0(v50);
    }

    else
    {
      sub_1000102E0((uint64_t)&v48, &qword_1001C9900);
      if (qword_1001C7F88 != -1) {
        swift_once(&qword_1001C7F88, sub_1000BD368);
      }
      uint64_t v14 = qword_1001DBB08;
      uint64_t v15 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v16 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v17 = *(void *)(v16 + 72);
      uint64_t v18 = swift_allocObject( v15,  ((*(unsigned __int8 *)(v16 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)) + 2 * v17,  *(unsigned __int8 *)(v16 + 80) | 7LL);
      *(_OWORD *)(v18 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      *((void *)&v52[0] + 1) = type metadata accessor for AppKeyValueTable();
      v51[0] = a2;
      uint64_t v19 = swift_retain(a2);
      id v20 = (id)AMSLogKey(v19);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v42[1] = v17;
        uint64_t v23 = v22;
        uint64_t v53 = v14;
        uint64_t v25 = v24;

        swift_bridgeObjectRetain(v25);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v26._countAndFlagsBits = 0LL;
        v26._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v26);
        uint64_t v27 = *((void *)&v52[0] + 1);
        uint64_t v28 = sub_10000D37C(v51, *((uint64_t *)&v52[0] + 1));
        uint64_t DynamicType = swift_getDynamicType(v28, v27, 1LL);
        *((void *)&v50[0] + 1) = swift_getMetatypeMetadata(DynamicType);
        uint64_t v48 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
        sub_1000102E0((uint64_t)&v48, &qword_1001CAAD0);
        v30._countAndFlagsBits = 5972026LL;
        v30._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v30);
        *((void *)&v50[0] + 1) = &type metadata for String;
        uint64_t v48 = v23;
        uint64_t v49 = v25;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
        sub_1000102E0((uint64_t)&v48, &qword_1001CAAD0);
        v31._countAndFlagsBits = 93LL;
        v31._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v31);
        LogMessage.init(stringInterpolation:)(v10);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v32._countAndFlagsBits = 0LL;
        v32._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        uint64_t v33 = *((void *)&v52[0] + 1);
        uint64_t v34 = sub_10000D37C(v51, *((uint64_t *)&v52[0] + 1));
        uint64_t v35 = swift_getDynamicType(v34, v33, 1LL);
        *((void *)&v50[0] + 1) = swift_getMetatypeMetadata(v35);
        uint64_t v48 = v35;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
        sub_1000102E0((uint64_t)&v48, &qword_1001CAAD0);
        v36._countAndFlagsBits = 58LL;
        v36._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v36);
        LogMessage.init(stringInterpolation:)(v10);
      }

      sub_10000D3A0(v51);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(21LL, 1LL);
      v37._object = (void *)0x800000010016BFB0LL;
      v37._countAndFlagsBits = 0xD000000000000015LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      *((void *)&v52[0] + 1) = sub_10000D33C(&qword_1001CDF50);
      v51[0] = a4;
      swift_bridgeObjectRetain(a4);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v51);
      sub_1000102E0((uint64_t)v51, &qword_1001CAAD0);
      v38._countAndFlagsBits = 0LL;
      v38._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      uint64_t v39 = LogMessage.init(stringInterpolation:)(v10);
      uint64_t v40 = static os_log_type_t.error.getter(v39);
      sub_1000BD1B0(v40, v18);
      swift_bridgeObjectRelease();
    }
  }

  return 1LL;
}

void sub_10002B97C(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v6);
  sub_10000DD5C();
  _StringGuts.grow(_:)(41LL);
  swift_bridgeObjectRelease();
  unint64_t v40 = 0xD000000000000022LL;
  unint64_t v41 = 0x800000010016BF60LL;
  uint64_t v7 = v2[3];
  uint64_t v8 = (void *)v2[4];
  sub_10000DEB4();
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  sub_10000DDF8();
  sub_10002C6B4();
  sub_10002C6A4();
  v10._countAndFlagsBits = 0x3F20454B494C20LL;
  v10._object = (void *)0xE700000000000000LL;
  String.append(_:)(v10);
  uint64_t v11 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v11, v43);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = 3;
  uint64_t v13 = sub_10000DDDC((uint64_t)&unk_1001A9278, 24LL);
  sub_10000DEE0();
  *(void *)(v13 + swift_weakDestroy(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v14 = v2[2];
  uint64_t v15 = (void *)sub_10000DDDC((uint64_t)&unk_1001A92A0, 48LL);
  v15[2] = v3;
  v15[3] = v13;
  unint64_t v16 = a1;
  v15[4] = a1;
  v15[5] = a2;
  uint64_t v33 = v14;
  unint64_t v34 = 0xD000000000000022LL;
  unint64_t v35 = 0x800000010016BF60LL;
  uint64_t v36 = inited;
  Swift::String v37 = sub_10002C56C;
  Swift::String v38 = v15;
  sub_10000DEE0();
  sub_10002C7D4();
  uint64_t v17 = v44;
  sub_100129A28((void (*)(void))sub_10001BBE0, (uint64_t)v32);
  if (v17)
  {
    sub_10002C764();
    sub_10000DDF8();
    sub_10002C76C();
  }

  else
  {
    uint64_t v44 = v13;
    sub_10002C7E8();
    sub_10002C76C();
    sub_10002C764();
    sub_10000DDF8();
    if (qword_1001C7F88 != -1) {
      swift_once(&qword_1001C7F88, sub_1000BD368);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v18 = *(void *)(sub_10002C79C() - 8);
    uint64_t v19 = sub_10001059C( ((*(unsigned __int8 *)(v18 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))
          + 2LL * *(void *)(v18 + 72),
            *(unsigned __int8 *)(v18 + 80));
    *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    unint64_t v42 = (void *)type metadata accessor for AppKeyValueTable();
    unint64_t v40 = (unint64_t)v3;
    uint64_t v20 = sub_10002C7D4();
    id v21 = (id)AMSLogKey(v20);
    unint64_t v22 = a2;
    if (v21)
    {
      uint64_t v23 = v21;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      uint64_t v26 = v25;

      sub_10000DEB4();
      sub_10000DC34();
      sub_10000DC08();
      sub_10002C680();
      uint64_t v27 = sub_1000258E8();
      sub_10002C6D8(v27);
      sub_1000102E0((uint64_t)v39, &qword_1001CAAD0);
      sub_10000DC14();
      uint64_t v39[3] = &type metadata for String;
      v39[0] = v24;
      v39[1] = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v39);
      sub_1000102E0((uint64_t)v39, &qword_1001CAAD0);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DDF8();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      sub_10002C680();
      uint64_t v28 = sub_1000258E8();
      sub_10002C6D8(v28);
      sub_1000102E0((uint64_t)v39, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10002C774();
    sub_10002C77C();
    sub_10002C6E8();
    sub_10002C78C((uint64_t)v39, (uint64_t)&v45);
    unint64_t v29 = *(void *)(v44 + 16);
    unint64_t v42 = (void *)sub_10000D33C(&qword_1001C98F8);
    unint64_t v40 = v29;
    sub_10000DEE0();
    sub_10002C704();
    sub_10002C7BC();
    sub_10002C7DC(0x6E69686374616D20LL, 14951LL);
    unint64_t v42 = &type metadata for String;
    unint64_t v40 = v16;
    unint64_t v41 = v22;
    swift_bridgeObjectRetain(v22);
    sub_10002C704();
    sub_10002C7BC();
    sub_10000DC08();
    uint64_t v30 = sub_10000DC5C();
    uint64_t v31 = static os_log_type_t.debug.getter(v30);
    sub_1000BD1B0(v31, v19);
    sub_10002C764();
    sub_10000DEE0();
    sub_10002C76C();
  }

  sub_100029188();
}

uint64_t sub_10002BDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10002C210((uint64_t)&v48);
  if (!v5)
  {
    uint64_t v13 = v49;
    if (v49)
    {
      uint64_t v14 = v48;
      uint64_t v51 = v48;
      uint64_t v52 = v49;
      sub_10000DA58(v50, v53);
      uint64_t v48 = v14;
      uint64_t v49 = v13;
      sub_10000DA1C((uint64_t)v53, (uint64_t)v50);
      uint64_t v44 = v14;
      uint64_t v45 = v13;
      sub_10000DA1C((uint64_t)v53, (uint64_t)v46);
      sub_10000DA58(v46, v47);
      swift_beginAccess(a3 + 16, v43, 33LL, 0LL);
      swift_bridgeObjectRetain(v13);
      sub_100030118((uint64_t)v47, v14, v13);
      swift_endAccess(v43);
      sub_1000102E0((uint64_t)&v51, &qword_1001C9908);
      sub_10000D3A0(v50);
    }

    else
    {
      sub_1000102E0((uint64_t)&v48, &qword_1001C9900);
      if (qword_1001C7F88 != -1) {
        swift_once(&qword_1001C7F88, sub_1000BD368);
      }
      uint64_t v15 = qword_1001DBB08;
      uint64_t v16 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v17 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v18 = *(void *)(v17 + 72);
      uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
      uint64_t v54 = v18;
      uint64_t v20 = swift_allocObject(v16, ((v19 + 32) & ~v19) + 2 * v18, v19 | 7);
      *(_OWORD *)(v20 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      *((void *)&v53[0] + 1) = type metadata accessor for AppKeyValueTable();
      uint64_t v51 = a2;
      uint64_t v21 = swift_retain(a2);
      id v22 = (id)AMSLogKey(v21);
      if (v22)
      {
        uint64_t v23 = v22;
        v42[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v42[1] = v15;
        uint64_t v25 = v24;

        swift_bridgeObjectRetain(v25);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v26._countAndFlagsBits = 0LL;
        v26._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v26);
        uint64_t v27 = *((void *)&v53[0] + 1);
        uint64_t v28 = sub_10000D37C(&v51, *((uint64_t *)&v53[0] + 1));
        uint64_t DynamicType = swift_getDynamicType(v28, v27, 1LL);
        *((void *)&v50[0] + 1) = swift_getMetatypeMetadata(DynamicType);
        uint64_t v48 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
        sub_1000102E0((uint64_t)&v48, &qword_1001CAAD0);
        v30._countAndFlagsBits = 5972026LL;
        v30._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v30);
        *((void *)&v50[0] + 1) = &type metadata for String;
        uint64_t v48 = v42[0];
        uint64_t v49 = v25;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
        sub_1000102E0((uint64_t)&v48, &qword_1001CAAD0);
        v31._countAndFlagsBits = 93LL;
        v31._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v31);
        LogMessage.init(stringInterpolation:)(v12);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v32._countAndFlagsBits = 0LL;
        v32._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        uint64_t v33 = *((void *)&v53[0] + 1);
        unint64_t v34 = sub_10000D37C(&v51, *((uint64_t *)&v53[0] + 1));
        uint64_t v35 = swift_getDynamicType(v34, v33, 1LL);
        *((void *)&v50[0] + 1) = swift_getMetatypeMetadata(v35);
        uint64_t v48 = v35;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
        sub_1000102E0((uint64_t)&v48, &qword_1001CAAD0);
        v36._countAndFlagsBits = 58LL;
        v36._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v36);
        LogMessage.init(stringInterpolation:)(v12);
      }

      sub_10000D3A0(&v51);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(24LL, 1LL);
      v37._object = (void *)0x800000010016BF90LL;
      v37._countAndFlagsBits = 0xD000000000000018LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      *((void *)&v53[0] + 1) = &type metadata for String;
      uint64_t v51 = a4;
      uint64_t v52 = a5;
      swift_bridgeObjectRetain(a5);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v51);
      sub_1000102E0((uint64_t)&v51, &qword_1001CAAD0);
      v38._countAndFlagsBits = 0LL;
      v38._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      uint64_t v39 = LogMessage.init(stringInterpolation:)(v12);
      uint64_t v40 = static os_log_type_t.error.getter(v39);
      sub_1000BD1B0(v40, v20);
      swift_bridgeObjectRelease();
    }
  }

  return 1LL;
}

_OWORD *sub_10002C210@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (_OWORD *)sub_10012B3C4();
  if (!v1)
  {
    uint64_t v5 = (uint64_t)result;
    uint64_t v6 = v4;
    sub_10012B4A8(v15);
    __int128 v7 = v15[0];
    sub_10002C724();
    unint64_t v8 = sub_10012B3A8();
    if ((v9 & 1) != 0) {
      unint64_t v8 = -1LL;
    }
    char v10 = sub_100024F58(v8);
    if (v6)
    {
      char v11 = v10;
      if (*((void *)&v7 + 1) >> 60 != 15LL && v10 != 7)
      {
        sub_10001BDC8(v7, *((unint64_t *)&v7 + 1));
        sub_100021A68(v11, &v13);
        sub_10002C6CC();
        if (v14)
        {
          sub_10002C6CC();
          sub_10000DA58(&v13, v15);
          *(void *)a1 = v5;
          *(void *)(a1 + 8) = v6;
          return sub_10000DA58(v15, (_OWORD *)(a1 + 16));
        }

        sub_1000102E0((uint64_t)&v13, &qword_1001CAAD0);
      }

      memset(v15, 0, sizeof(v15));
      sub_10002957C((uint64_t)v15, v5, v6);
      sub_1000102E0((uint64_t)v15, &qword_1001CAAD0);
      sub_10002C6CC();
      uint64_t result = (_OWORD *)sub_10000DDF8();
    }

    else
    {
      uint64_t result = (_OWORD *)sub_10002C6CC();
    }

    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }

  return result;
}

uint64_t sub_10002C3C4(uint64_t a1, uint64_t a2)
{
  BYTE5(v15[1]) = 0;
  HIWORD(v15[1]) = -5120;
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void **)(v2 + 32);
  swift_bridgeObjectRetain(v6);
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  sub_100020AB8();
  sub_10002C6B4();
  sub_10002C6A4();
  sub_100020A8C(0x3B3F203D20LL);
  uint64_t v8 = v15[0];
  char v9 = (void *)v15[1];
  uint64_t v10 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v10, v14);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = 3;
  sub_10000DEB4();
  v16._countAndFlagsBits = v8;
  v16._object = v9;
  v12._rawValue = (void *)inited;
  sub_100020BF4(v16, v12);
  swift_setDeallocating(inited);
  sub_10012A65C();
  return sub_100020AB8();
}

uint64_t type metadata accessor for AppKeyValueTable()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd16AppKeyValueTable);
}

uint64_t sub_10002C514()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10002C538()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10002C56C(uint64_t a1)
{
  return sub_10002BDD4(a1, v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t sub_10002C58C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10002C5C0(uint64_t a1)
{
  return sub_10002B54C(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_10002C5E0(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != 7) {
    return sub_10001BDC8(result, a2);
  }
  return result;
}

uint64_t sub_10002C5F4(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != 7) {
    return sub_10001BD84(result, a2);
  }
  return result;
}

unint64_t sub_10002C608()
{
  unint64_t result = qword_1001C9528[0];
  if (!qword_1001C9528[0])
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSNull);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_1001C9528);
  }

  return result;
}

uint64_t sub_10002C644(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10002C680()
{
  uint64_t v1 = *(void *)(v0 - 152);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 176), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

void sub_10002C6A4()
{
  v0._countAndFlagsBits = 7955819LL;
  v0._object = (void *)0xE300000000000000LL;
  String.append(_:)(v0);
}

void sub_10002C6B4()
{
  v0._countAndFlagsBits = 0x20455245485720LL;
  v0._object = (void *)0xE700000000000000LL;
  String.append(_:)(v0);
}

uint64_t sub_10002C6CC()
{
  return sub_10001BD70(v1, v0);
}

uint64_t sub_10002C6D8(uint64_t a1)
{
  *(void *)(v2 - 184) = a1;
  *(void *)(v2 - 208) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 208);
}

void sub_10002C6E8()
{
  v0._countAndFlagsBits = 0x3A64656863746546LL;
  v0._object = (void *)0xE900000000000020LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_10002C704()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 176);
}

void sub_10002C70C()
{
  v0._countAndFlagsBits = 0x6E69616D6F64LL;
  v0._object = (void *)0xE600000000000000LL;
  String.append(_:)(v0);
}

uint64_t sub_10002C724()
{
  return 0x70795465756C6176LL;
}

uint64_t sub_10002C740()
{
  uint64_t v1 = *(void *)(v0 - 104);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 128), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_10002C764()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_10002C76C()
{
  return swift_release(v0);
}

uint64_t sub_10002C774()
{
  return sub_10000D3A0((void *)(v0 - 176));
}

uint64_t sub_10002C77C()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(20LL, 2LL);
}

uint64_t sub_10002C78C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return swift_beginAccess(*(void *)(a2 - 256), a1, 0LL, 0LL);
}

uint64_t sub_10002C79C()
{
  return type metadata accessor for LogMessage(0LL);
}

uint64_t sub_10002C7A4()
{
  return sub_1000102E0(v1 - 208, v0);
}

uint64_t sub_10002C7B0()
{
  return sub_1000102E0(v1 - 176, v0);
}

uint64_t sub_10002C7BC()
{
  return sub_1000102E0(v1 - 176, v0);
}

uint64_t sub_10002C7C8()
{
  return sub_1000102E0(v1 - 176, v0);
}

uint64_t sub_10002C7D4()
{
  return swift_retain(v0);
}

void sub_10002C7DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = a2 & 0xFFFF0000FFFFLL | 0xEB00000000200000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

uint64_t sub_10002C7E8()
{
  return swift_retain(v0);
}

uint64_t sub_10002C7F0(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = v4[0];
    uint64_t v4[2] = v4[0];
    v4[3] = v4[0];
    swift_initEnumMetadataMultiPayload(a1, 0LL, 4LL, v4);
    return 0LL;
  }

  return result;
}

void *sub_10002C85C(void *a1, void *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    switch(*((_BYTE *)a2 + v5))
    {
      case 0:
        (*(void (**)(void *))(v4 + 16))(a1);
        *((_BYTE *)v3 + v5) = 0;
        return v3;
      case 1:
        (*(void (**)(void *))(v4 + 16))(a1);
        char v11 = 1;
        goto LABEL_19;
      case 2:
        (*(void (**)(void *))(v4 + 16))(a1);
        char v11 = 2;
        goto LABEL_19;
      case 3:
        (*(void (**)(void *))(v4 + 16))(a1);
        char v11 = 3;
LABEL_19:
        *((_BYTE *)v3 + v5) = v11;
        break;
      default:
        else {
          uint64_t v10 = 4LL;
        }
        __asm { BR              X13 }

        return result;
    }
  }

  else
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain(v9);
  }

  return v3;
}

uint64_t sub_10002C9A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8LL) + 8LL))();
}

uint64_t sub_10002C9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  uint64_t v5 = *(void *)(v4 + 64);
  unsigned int v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 4)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X12 }
  }

  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(_BYTE *)(a1 + v5) = v6;
  return a1;
}

uint64_t sub_10002CA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 4)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X11 }
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v8;
  }

  return a1;
}

uint64_t sub_10002CB44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  uint64_t v5 = *(void *)(v4 + 64);
  unsigned int v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 4)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X12 }
  }

  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(_BYTE *)(a1 + v5) = v6;
  return a1;
}

uint64_t sub_10002CBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 4)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X11 }
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v8;
  }

  return a1;
}

uint64_t sub_10002CCD8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!a2) {
    return 0LL;
  }
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  if (a2 < 0xFD) {
    goto LABEL_19;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 252) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)(a1 + v4);
      if (!v6) {
        goto LABEL_19;
      }
      goto LABEL_12;
    }

    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4)) {
        goto LABEL_19;
      }
      goto LABEL_12;
    }

    if (v8 < 2)
    {
LABEL_19:
      unsigned int v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 4) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0LL;
      }
    }
  }

  int v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4)) {
    goto LABEL_19;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (!(_DWORD)v4) {
    return (v9 + 253);
  }
  return ((uint64_t (*)(void))((char *)&loc_10002CD90 + 4 * byte_1001652D5[(v4 - 1)]))();
}

void sub_10002CDDC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFD)
  {
    unsigned int v8 = 0;
  }

  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v10))
    {
      unsigned int v8 = &dword_100000004;
    }

    else if (v10 >= 0x100)
    {
      unsigned int v8 = 2;
    }

    else
    {
      unsigned int v8 = v10 > 1;
    }
  }

  else
  {
    unsigned int v8 = &_mh_execute_header.magic + 1;
  }

  if (a2 <= 0xFC) {
    __asm { BR              X11 }
  }

  unsigned int v9 = a2 - 253;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      int v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }

      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }

      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }

  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }

  __asm { BR              X10 }

uint64_t sub_10002CF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8LL) + 64LL);
  else {
    uint64_t v3 = 4LL;
  }
  return ((uint64_t (*)(void))((char *)&loc_10002CFB0 + 4 * byte_1001652E3[v3]))();
}

void sub_10002CFF8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  if (a2 > 3)
  {
    unsigned int v5 = a2 - 4;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 4;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }

      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }

      else
      {
        *a1 = v7;
      }
    }

    else
    {
      a1[v4] = 4;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }

  else
  {
    a1[v4] = a2;
  }

uint64_t type metadata accessor for AppReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000256DC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppReference);
}

uint64_t sub_10002D0C0(uint64_t a1, void *a2)
{
  v4._countAndFlagsBits = 0x5420455441455243LL;
  v4._object = (void *)0xED000020454C4241LL;
  String.append(_:)(v4);
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  String.append(_:)(v5);
  sub_1000209A0(10272LL);
  sub_10002F918();
  sub_10002FA60();
  v6._countAndFlagsBits = 0xD000000000000013LL;
  String.append(_:)(v6);
  sub_10002F970();
  v7._countAndFlagsBits = 0x202C4C41455220LL;
  v7._object = (void *)0xE700000000000000LL;
  String.append(_:)(v7);
  sub_10002F9F8();
  v8._countAndFlagsBits = 0x29424F4C4220LL;
  v8._object = (void *)0xE600000000000000LL;
  String.append(_:)(v8);
  v11._countAndFlagsBits = 0LL;
  v9._rawValue = _swiftEmptyArrayStorage;
  v11._object = (void *)0xE000000000000000LL;
  sub_10002FAFC(v11, v9);
  return swift_bridgeObjectRelease();
}

void sub_10002D1E4()
{
  int v8 = sub_10002F9C0();
  sub_10002F994(v8, v9, v10, v11, v12, v13, v14, v15, v25, v28, v30, v32, v34, v36, v38, v40, v42);
  sub_100020AB8();
  *(_BYTE *)(sub_10000DDDC((uint64_t)&unk_1001A9438, 17LL) + swift_weakDestroy(v0 + 16) = 0;
  Swift::String v16 = (void *)sub_10000DDDC((uint64_t)&unk_1001A9488, 48LL);
  sub_10002FB2C(v16);
  sub_10002FAEC();
  sub_10002FAA0();
  sub_10002FB04((void (*)(void))sub_10001BBE0, v17, v18, v19, v20, v21, v22, v23, v26);
  sub_100020AB8();
  sub_10002C76C();
  sub_10002F9A4();
}

void sub_10002D298()
{
  int v8 = sub_10002F9C0();
  sub_10002F994(v8, v9, v10, v11, v12, v13, v14, v15, v25, v28, v30, v32, v34, v36, v38, v40, v42);
  sub_100020AB8();
  *(_BYTE *)(sub_10000DDDC((uint64_t)&unk_1001A9438, 17LL) + swift_weakDestroy(v0 + 16) = 0;
  Swift::String v16 = (void *)sub_10000DDDC((uint64_t)&unk_1001A9460, 48LL);
  sub_10002FB2C(v16);
  sub_10002FAEC();
  sub_10002FAA0();
  sub_10002FB04((void (*)(void))sub_10001BBE0, v17, v18, v19, v20, v21, v22, v23, v26);
  sub_100020AB8();
  sub_10002C76C();
  sub_10002F9A4();
}

uint64_t sub_10002D34C( char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_BYTE *), uint64_t a5, uint64_t (*a6)(void), void (*a7)(uint64_t, _BYTE *))
{
  uint64_t v96 = a7;
  uint64_t v97 = a5;
  uint64_t v100 = a3;
  uint64_t v98 = a2;
  uint64_t v99 = a4;
  LOBYTE(v8) = a1;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v9);
  int v11 = &v84[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = a6(0LL);
  __chkstk_darwin(v12);
  int v14 = &v84[-v13];
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v84[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = &v84[-v21];
  __chkstk_darwin(v20);
  uint64_t v24 = &v84[-v23];
  uint64_t v25 = v101;
  uint64_t v26 = sub_10012B3C4();
  if (!v25)
  {
    uint64_t v89 = v22;
    uint64_t v91 = v19;
    uint64_t v28 = v98;
    Swift::OpaquePointer v92 = v24;
    Swift::String v90 = v14;
    uint64_t v29 = v99;
    uint64_t v93 = v16;
    uint64_t v95 = v26;
    uint64_t v94 = v11;
    uint64_t v101 = v27;
    uint64_t v30 = v100;
    sub_10012B4A8(&v104);
    __int128 v31 = v104;
    uint64_t v32 = sub_10012B560();
    uint64_t v88 = 0LL;
    unint64_t v86 = *((void *)&v31 + 1);
    uint64_t v87 = v31;
    if (*((void *)&v31 + 1) >> 60 != 15LL)
    {
      double v35 = *(double *)&v32;
      int v85 = v33;
      uint64_t v36 = v87;
      sub_10001BDC8(v87, *((unint64_t *)&v31 + 1));
      sub_100021A68(6, &v104);
      if (v105)
      {
        uint64_t v37 = sub_10000D33C(&qword_1001C8F18);
        if ((swift_dynamicCast(v102, &v104, (char *)&type metadata for Any + 8, v37, 6LL) & 1) != 0)
        {
          uint64_t v38 = swift_bridgeObjectRelease();
          uint64_t v39 = v102[0];
          if ((v85 & 1) != 0)
          {
            Swift::String v74 = v89;
            uint64_t v75 = static Date.now.getter(v38);
            double v40 = Date.timeIntervalSinceReferenceDate.getter(v75);
            uint64_t v42 = v93;
            uint64_t v41 = v15;
            (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v74, v15);
          }

          else
          {
            double v40 = v35;
            uint64_t v41 = v15;
            uint64_t v42 = v93;
          }

          uint64_t v76 = v90;
          Swift::String v77 = v96;
          Swift::String v78 = v92;
          Date.init(timeIntervalSinceReferenceDate:)(v40);
          Swift::String v79 = v91;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v42 + 16))(v91, v78, v41);
          uint64_t v80 = v88;
          v77(v39, v79);
          uint64_t v8 = v97;
          if (!v80)
          {
            LOBYTE(v8) = v29(v76);
            uint64_t v82 = v87;
            unint64_t v83 = v86;
            sub_10001BD70(v87, v86);
            sub_10001BD70(v82, v83);
            sub_10002FB18();
            sub_10002FA10();
            return v8 & 1;
          }

          (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v78, v41);
          uint64_t v81 = v87;
          sub_10002FA90(v87);
          uint64_t v72 = v81;
          unint64_t v73 = v8;
          goto LABEL_26;
        }

        sub_10002FA28();
      }

      else
      {
        sub_10001BD70(v36, *((unint64_t *)&v31 + 1));
        sub_10000E888((uint64_t)&v104);
      }
    }

    uint64_t v43 = (_BYTE *)(v28 + 16);
    sub_100020A94(v28 + 16, (uint64_t)v107);
    if ((*(_BYTE *)(v28 + 16) & 1) == 0)
    {
      swift_beginAccess(v43, v106, 1LL, 0LL);
      *uint64_t v43 = 1;
      if (qword_1001C7F88 != -1) {
        swift_once(&qword_1001C7F88, sub_1000BD368);
      }
      uint64_t v44 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v45 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      unint64_t v46 = *(uint64_t (**)(_BYTE *))(v45 + 72);
      uint64_t v47 = swift_allocObject( v44,  ((*(unsigned __int8 *)(v45 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
            + 2LL * (void)v46,
              *(unsigned __int8 *)(v45 + 80) | 7LL);
      *(_OWORD *)(v47 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      uint64_t v105 = type metadata accessor for AppSchedulesTable();
      *(void *)&__int128 v104 = v30;
      uint64_t v48 = swift_retain(v30);
      id v49 = (id)AMSLogKey(v48);
      if (v49)
      {
        uint64_t v50 = v49;
        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        uint64_t v99 = v46;
        uint64_t v52 = v51;
        uint64_t v54 = v53;

        swift_bridgeObjectRetain(v54);
        Swift::String v55 = v94;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v56._countAndFlagsBits = 0LL;
        v56._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v56);
        uint64_t v57 = v105;
        uint64_t v58 = sub_10000D37C(&v104, v105);
        uint64_t DynamicType = swift_getDynamicType(v58, v57, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
        v102[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v102);
        sub_10002FB24();
        v60._countAndFlagsBits = 5972026LL;
        v60._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v60);
        uint64_t MetatypeMetadata = &type metadata for String;
        v102[0] = v52;
        v102[1] = v54;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v102);
        sub_10002FB24();
        v61._countAndFlagsBits = 93LL;
        v61._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v61);
        LogMessage.init(stringInterpolation:)(v55);
        swift_bridgeObjectRelease();
      }

      else
      {
        uint64_t v62 = v94;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v63._countAndFlagsBits = 0LL;
        v63._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v63);
        uint64_t v64 = v105;
        uint64_t v65 = sub_10000D37C(&v104, v105);
        uint64_t v66 = swift_getDynamicType(v65, v64, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v66);
        v102[0] = v66;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v102);
        sub_10002FB24();
        v67._countAndFlagsBits = 58LL;
        v67._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v67);
        LogMessage.init(stringInterpolation:)(v62);
      }

      sub_10000D3A0(&v104);
      uint64_t v68 = LogMessage.init(stringLiteral:)(0xD000000000000022LL);
      uint64_t v69 = static os_log_type_t.error.getter(v68);
      sub_1000BD1B0(v69, v47);
      sub_10000DE2C();
    }

    if (v101)
    {
      uint64_t v70 = v88;
      sub_10002F0BC(v95, v101);
      unint64_t v71 = v86;
      uint64_t v8 = v87;
      if (v70)
      {
        sub_10000DE2C();
        uint64_t v72 = v8;
        unint64_t v73 = v71;
LABEL_26:
        sub_10001BD70(v72, v73);
        return v8 & 1;
      }

      sub_10001BD70(v87, v86);
      sub_10000DE2C();
      LOBYTE(v8) = 1;
    }

    else
    {
      sub_10002FA28();
      LOBYTE(v8) = 1;
    }
  }

  return v8 & 1;
}

uint64_t sub_10002DA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  _StringGuts.grow(_:)(39LL);
  swift_bridgeObjectRelease();
  sub_10002FAE0();
  v29[0] = v7;
  v29[1] = 0x800000010016C0E0LL;
  uint64_t v8 = v3[3];
  swift_bridgeObjectRetain(v3[4]);
  sub_10002FAC0(v8);
  sub_100009020();
  sub_10002F934(0x570Au);
  sub_10002F918();
  sub_10002FA3C();
  uint64_t v9 = v29[0];
  uint64_t v10 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v10, v30);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = 3;
  uint64_t v12 = sub_10000D33C(&qword_1001C9E00);
  uint64_t v13 = swift_allocBox(v12);
  uint64_t v15 = v14;
  uint64_t v16 = sub_10002FA78();
  sub_10000D5C0(v15, 1LL, 1LL, v16);
  uint64_t v17 = v3[2];
  uint64_t v18 = sub_10000DDDC((uint64_t)&unk_1001A9410, 32LL);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(v18 + 24) = v13;
  uint64_t v23 = v17;
  uint64_t v24 = v9;
  unint64_t v25 = 0x800000010016C0E0LL;
  uint64_t v26 = inited;
  uint64_t v27 = sub_10002F780;
  uint64_t v28 = v18;
  sub_10000DD9C();
  sub_10002FAEC();
  sub_10002FB10((void (*)(void))sub_10001BBE0, (uint64_t)v22);
  if (v8)
  {
    sub_100020AB8();
    sub_10000DE74();
    uint64_t v19 = v18;
  }

  else
  {
    swift_retain(v13);
    swift_release(v18);
    sub_100020AB8();
    sub_10000DE74();
    sub_100020A94(v15, (uint64_t)v29);
    sub_10002F79C(v15, a3);
    uint64_t v19 = v13;
  }

  return swift_release(v19);
}

uint64_t sub_10002DC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v76 = a2;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_10000D33C(&qword_1001C9E00);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v68 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v68 - v18;
  uint64_t v20 = swift_projectBox(a3);
  uint64_t v21 = v77;
  sub_10012B4A8(&v80);
  if (v21) {
    return 0LL;
  }
  uint64_t v70 = v17;
  unint64_t v71 = v14;
  uint64_t v72 = v19;
  uint64_t v73 = v11;
  uint64_t v69 = v20;
  Swift::String v74 = v9;
  uint64_t v75 = v6;
  uint64_t v22 = v76;
  __int128 v23 = v80;
  uint64_t v24 = sub_10012B560();
  uint64_t v77 = 0LL;
  uint64_t v68 = v23;
  if (*((void *)&v23 + 1) >> 60 != 15LL)
  {
    double v26 = *(double *)&v24;
    char v27 = v25;
    sub_10001BDC8(v68, *((unint64_t *)&v23 + 1));
    sub_100021A68(6, &v80);
    if (v81)
    {
      uint64_t v28 = sub_10000D33C(&qword_1001C8F18);
      uint64_t v29 = swift_dynamicCast(v78, &v80, (char *)&type metadata for Any + 8, v28, 6LL);
      if ((v29 & 1) != 0)
      {
        uint64_t v30 = v78[0];
        if ((v27 & 1) != 0)
        {
          uint64_t v59 = v70;
          uint64_t v60 = static Date.now.getter(v29);
          double v31 = Date.timeIntervalSinceReferenceDate.getter(v60);
          uint64_t v32 = v73;
          Swift::String v61 = v59;
          uint64_t v34 = v10;
          (*(void (**)(char *, uint64_t))(v73 + 8))(v61, v10);
          int v33 = v74;
        }

        else
        {
          double v31 = v26;
          uint64_t v32 = v73;
          int v33 = v74;
          uint64_t v34 = v10;
        }

        uint64_t v62 = v71;
        Swift::String v63 = v72;
        Date.init(timeIntervalSinceReferenceDate:)(v31);
        (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v62, v63, v34);
        uint64_t v64 = v77;
        sub_100110090(v30, v62, v33);
        uint64_t v65 = v68;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v63, v34);
        sub_10001BD70(v65, *((unint64_t *)&v23 + 1));
        sub_10001BD70(v65, *((unint64_t *)&v23 + 1));
        if (!v64)
        {
          uint64_t v66 = type metadata accessor for ScheduleInfo(0LL);
          sub_10000D5C0((uint64_t)v33, 0LL, 1LL, v66);
          uint64_t v67 = v69;
          swift_beginAccess(v69, &v80, 1LL, 0LL);
          sub_10002F7E4((uint64_t)v33, v67);
        }

        return 0LL;
      }

      sub_10001BD70(v68, *((unint64_t *)&v23 + 1));
    }

    else
    {
      sub_10001BD70(v23, *((unint64_t *)&v23 + 1));
      sub_10000E888((uint64_t)&v80);
    }
  }

  if (qword_1001C7F88 != -1) {
    swift_once(&qword_1001C7F88, sub_1000BD368);
  }
  uint64_t v35 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v36 = type metadata accessor for LogMessage(0LL);
  uint64_t v37 = swift_allocObject( v35,  ((*(unsigned __int8 *)(*(void *)(v36 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v36 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v36 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v36 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v37 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v81 = type metadata accessor for AppSchedulesTable();
  *(void *)&__int128 v80 = v22;
  uint64_t v38 = swift_retain(v22);
  id v39 = (id)AMSLogKey(v38);
  double v40 = v75;
  if (v39)
  {
    uint64_t v41 = v39;
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    uint64_t v44 = v43;

    swift_bridgeObjectRetain(v44);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v45._countAndFlagsBits = 0LL;
    v45._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v45);
    uint64_t v46 = v81;
    uint64_t v47 = sub_10000D37C(&v80, v81);
    uint64_t DynamicType = swift_getDynamicType(v47, v46, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v78[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v78);
    sub_10000E888((uint64_t)v78);
    v49._countAndFlagsBits = 5972026LL;
    v49._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    uint64_t MetatypeMetadata = &type metadata for String;
    v78[0] = v42;
    v78[1] = v44;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v78);
    sub_10000E888((uint64_t)v78);
    v50._countAndFlagsBits = 93LL;
    v50._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    LogMessage.init(stringInterpolation:)(v40);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v51._countAndFlagsBits = 0LL;
    v51._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    uint64_t v52 = v81;
    uint64_t v53 = sub_10000D37C(&v80, v81);
    uint64_t v54 = swift_getDynamicType(v53, v52, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v54);
    v78[0] = v54;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v78);
    sub_10000E888((uint64_t)v78);
    v55._countAndFlagsBits = 58LL;
    v55._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v55);
    LogMessage.init(stringInterpolation:)(v40);
  }

  sub_10000D3A0(&v80);
  uint64_t v56 = LogMessage.init(stringLiteral:)(0xD000000000000016LL);
  uint64_t v57 = static os_log_type_t.error.getter(v56);
  sub_1000BD1B0(v57, v37);
  sub_10001BD70(v68, *((unint64_t *)&v23 + 1));
  swift_bridgeObjectRelease();
  return 0LL;
}

uint64_t sub_10002E1DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v27 = a1;
    v31[4] = v1;
    sub_100016F88();
    uint64_t v3 = 0LL;
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = _swiftEmptyArrayStorage[2];
    uint64_t v6 = 2 * v5;
    do
    {
      v31[0] = v4;
      uint64_t v7 = v5 + v3 + 1;
      if ((unint64_t)(v5 + v3) >= v4[3] >> 1)
      {
        sub_10002FAC8();
        uint64_t v4 = (void *)v31[0];
      }

      ++v3;
      uint64_t v4[2] = v7;
      uint64_t v8 = &v4[v6];
      v8[4] = 63LL;
      void v8[5] = 0xE100000000000000LL;
      v6 += 2LL;
    }

    while (v2 != v3);
    sub_10000D33C(&qword_1001CDF50);
    sub_10001BD2C();
    uint64_t v28 = sub_10002FA50();
    uint64_t v29 = v9;
    sub_10002FAF4();
    v31[0] = _swiftEmptyArrayStorage;
    sub_100016FBC();
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v11 = (uint64_t *)(v27 + 40);
    do
    {
      uint64_t v12 = *(v11 - 1);
      uint64_t v13 = *v11;
      v31[0] = v10;
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      swift_bridgeObjectRetain(v13);
      if (v15 >= v14 >> 1)
      {
        sub_10002FAD4();
        uint64_t v10 = (void *)v31[0];
      }

      v11 += 2;
      v10[2] = v15 + 1;
      uint64_t v16 = &v10[3 * v15];
      v16[4] = v12;
      v16[5] = v13;
      *((_BYTE *)v16 + 48) = 3;
      --v2;
    }

    while (v2);
    _StringGuts.grow(_:)(43LL);
    swift_bridgeObjectRelease();
    sub_10002FAE0();
    v31[0] = v17;
    v31[1] = 0x800000010016C0E0LL;
    uint64_t v18 = v30;
    sub_10000DD9C();
    sub_10001C29C();
    sub_10000DCFC();
    sub_10002F934(0x570Au);
    sub_10002F918();
    sub_10002FA80(18698LL);
    sub_10002FAC0(v28);
    sub_100009020();
    sub_1000209A0(15145LL);
    uint64_t v19 = v31[0];
    uint64_t v20 = sub_10000DDDC((uint64_t)&unk_1001A93C0, 24LL);
    uint64_t v21 = sub_10002FA78();
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v21,  &protocol witness table for String);
    uint64_t v22 = *(void *)(v18 + 16);
    uint64_t v23 = sub_10000DDDC((uint64_t)&unk_1001A93E8, 32LL);
    *(void *)(v23 + swift_weakDestroy(v0 + 16) = v18;
    *(void *)(v23 + 24) = v20;
    void v26[2] = v22;
    v26[3] = v19;
    v26[4] = 0x800000010016C0E0LL;
    v26[5] = v10;
    v26[6] = sub_10002F6F0;
    v26[7] = __chkstk_darwin(v23);
    sub_10002FAA0();
    sub_10002FB10((void (*)(void))sub_10001BBE0, (uint64_t)v26);
    if (v26)
    {
      sub_10002FAF4();
      sub_100020AB8();
      sub_10002C76C();
    }

    else
    {
      swift_retain(v20);
      sub_10002C76C();
      sub_100020AB8();
      sub_10002FAF4();
      sub_100020A94(v20 + 16, (uint64_t)v31);
      uint64_t v22 = *(void *)(v20 + 16);
      swift_bridgeObjectRetain(v22);
      sub_100020AD8();
    }

    return v22;
  }

  else
  {
    uint64_t v24 = sub_10002FA78();
    return Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v24,  &protocol witness table for String);
  }

uint64_t sub_10002E50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v85 = a2;
  uint64_t v84 = a3;
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v3);
  unint64_t v83 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_10000D33C(&qword_1001C9E00);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ScheduleInfo(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v73 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v73 - v19;
  uint64_t v21 = v86;
  uint64_t v22 = sub_10012B3C4();
  if (v21) {
    return v8 & 1;
  }
  uint64_t v77 = v18;
  Swift::String v78 = v15;
  uint64_t v75 = v22;
  uint64_t v76 = v8;
  Swift::String v79 = v20;
  __int128 v80 = v7;
  uint64_t v86 = v23;
  uint64_t v24 = v84;
  uint64_t v25 = v85;
  uint64_t v81 = v12;
  uint64_t v82 = v10;
  sub_10012B4A8(&v89);
  __int128 v26 = v89;
  uint64_t v27 = sub_10012B560();
  __int128 v74 = v26;
  if (*((void *)&v26 + 1) >> 60 != 15LL)
  {
    if (!v86) {
      goto LABEL_12;
    }
    double v30 = *(double *)&v27;
    char v31 = v28;
    unint64_t v32 = *((void *)&v74 + 1);
    uint64_t v33 = v74;
    sub_10001BDC8(v74, *((unint64_t *)&v74 + 1));
    sub_100021A68(6, &v89);
    if (!v90)
    {
      sub_10001BD70(v33, v32);
      swift_bridgeObjectRelease();
      sub_10000E888((uint64_t)&v89);
      goto LABEL_12;
    }

    uint64_t v34 = sub_10000D33C(&qword_1001C8F18);
    uint64_t v35 = swift_dynamicCast(v87, &v89, (char *)&type metadata for Any + 8, v34, 6LL);
    if ((v35 & 1) != 0)
    {
      uint64_t v85 = v87[0];
      if ((v31 & 1) != 0)
      {
        uint64_t v64 = v77;
        uint64_t v65 = static Date.now.getter(v35);
        double v36 = Date.timeIntervalSinceReferenceDate.getter(v65);
        uint64_t v38 = v81;
        uint64_t v37 = v11;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v64, v11);
      }

      else
      {
        double v36 = v30;
        uint64_t v37 = v11;
        uint64_t v38 = v81;
      }

      uint64_t v67 = v79;
      uint64_t v66 = (uint64_t)v80;
      uint64_t v68 = v78;
      Date.init(timeIntervalSinceReferenceDate:)(v36);
      (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v68, v67, v37);
      uint64_t v69 = v82;
      sub_100110090(v85, v68, v82);
      uint64_t v8 = v74;
      uint64_t v70 = v24 + 16;
      sub_10002F70C((uint64_t)v69, v66);
      uint64_t v71 = v8;
      LOBYTE(v8) = 1;
      sub_10000D5C0(v66, 0LL, 1LL, v76);
      swift_beginAccess(v70, &v89, 33LL, 0LL);
      sub_100030334();
      swift_endAccess(&v89);
      unint64_t v72 = *((void *)&v74 + 1);
      sub_10001BD70(v71, *((unint64_t *)&v74 + 1));
      sub_10001BD70(v71, v72);
      sub_10002F870((uint64_t)v69, type metadata accessor for ScheduleInfo);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v67, v37);
      return v8 & 1;
    }

    sub_10001BD70(v74, *((unint64_t *)&v74 + 1));
  }

  swift_bridgeObjectRelease();
LABEL_12:
  if (qword_1001C7F88 != -1) {
    swift_once(&qword_1001C7F88, sub_1000BD368);
  }
  uint64_t v39 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v40 = type metadata accessor for LogMessage(0LL);
  uint64_t v8 = swift_allocObject( v39,  ((*(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL))
       + 2LL * *(void *)(*(void *)(v40 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v90 = type metadata accessor for AppSchedulesTable();
  *(void *)&__int128 v89 = v25;
  uint64_t v41 = swift_retain(v25);
  id v42 = (id)AMSLogKey(v41);
  unint64_t v43 = *((void *)&v74 + 1);
  if (v42)
  {
    uint64_t v44 = v42;
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    uint64_t v47 = v46;

    swift_bridgeObjectRetain(v47);
    uint64_t v48 = v83;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v49._countAndFlagsBits = 0LL;
    v49._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v49);
    uint64_t v50 = v90;
    Swift::String v51 = sub_10000D37C(&v89, v90);
    uint64_t DynamicType = swift_getDynamicType(v51, v50, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v87[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v87);
    sub_10000E888((uint64_t)v87);
    v53._countAndFlagsBits = 5972026LL;
    v53._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    uint64_t MetatypeMetadata = &type metadata for String;
    v87[0] = v45;
    v87[1] = v47;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v87);
    sub_10000E888((uint64_t)v87);
    v54._countAndFlagsBits = 93LL;
    v54._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v54);
    Swift::String v55 = v48;
    unint64_t v43 = *((void *)&v74 + 1);
    LogMessage.init(stringInterpolation:)(v55);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v56 = v83;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v57._countAndFlagsBits = 0LL;
    v57._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v57);
    uint64_t v58 = v90;
    uint64_t v59 = sub_10000D37C(&v89, v90);
    uint64_t v60 = swift_getDynamicType(v59, v58, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v60);
    v87[0] = v60;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v87);
    sub_10000E888((uint64_t)v87);
    v61._countAndFlagsBits = 58LL;
    v61._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v61);
    LogMessage.init(stringInterpolation:)(v56);
  }

  sub_10000D3A0(&v89);
  uint64_t v62 = LogMessage.init(stringLiteral:)(0xD000000000000016LL);
  uint64_t v63 = static os_log_type_t.error.getter(v62);
  sub_1000BD1B0(v63, v8);
  sub_10001BD70(v74, v43);
  swift_bridgeObjectRelease();
  LOBYTE(v8) = 0;
  return v8 & 1;
}

uint64_t sub_10002EB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  _StringGuts.grow(_:)(36LL);
  sub_10002FA70( v6,  v7,  v8,  v9,  v10,  v11,  v12,  v13,  v22[0],  v22[1],  v23,  v24,  v25,  v26,  (uint64_t)v27,  v28,  0LL,  0xE000000000000000LL);
  v29[0] = 0xD000000000000017LL;
  v29[1] = 0x800000010016C0A0LL;
  uint64_t v14 = *(void *)(v2 + 24);
  sub_10000DD9C();
  sub_10001C29C();
  sub_10000DCFC();
  sub_10002F934(0x570Au);
  sub_10002F918();
  v15._countAndFlagsBits = 0x3F2820454B494C0ALL;
  v15._object = (void *)0xEA00000000003B29LL;
  String.append(_:)(v15);
  uint64_t v16 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v16, v30);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = 3;
  uint64_t v18 = sub_10000DDDC((uint64_t)&unk_1001A9370, 24LL);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(v2 + 16);
  uint64_t v20 = sub_10000DDDC((uint64_t)&unk_1001A9398, 32LL);
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = v3;
  *(void *)(v20 + 24) = v18;
  uint64_t v23 = v19;
  uint64_t v24 = 0xD000000000000017LL;
  uint64_t v25 = 0x800000010016C0A0LL;
  uint64_t v26 = inited;
  uint64_t v27 = sub_10002F6D0;
  uint64_t v28 = v20;
  swift_bridgeObjectRetain(a2);
  sub_10002FAA0();
  sub_10002FB10((void (*)(void))sub_10001BBE0, (uint64_t)v22);
  if (v14)
  {
    sub_10000DCFC();
    sub_100020AB8();
  }

  else
  {
    swift_retain(v18);
    swift_release();
    sub_10000DCFC();
    sub_100020AB8();
    sub_100020A94(v18 + 16, (uint64_t)v29);
    uint64_t v19 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain(v19);
  }

  swift_release();
  return v19;
}

BOOL sub_10002ED68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_10012B3C4();
  if (!v3)
  {
    uint64_t v12 = v11;
    BOOL v4 = v11 != 0;
    if (v11)
    {
      uint64_t v13 = v10;
      swift_beginAccess(a3 + 16, v44, 33LL, 0LL);
      sub_100063EC8();
      uint64_t v14 = *(void *)(*(void *)(a3 + 16) + 16LL);
      sub_100063F80(v14);
      uint64_t v15 = *(void *)(a3 + 16);
      *(void *)(v15 + swift_weakDestroy(v0 + 16) = v14 + 1;
      uint64_t v16 = v15 + 16 * v14;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v12;
      swift_endAccess(v44);
    }

    else
    {
      if (qword_1001C7F88 != -1) {
        swift_once(&qword_1001C7F88, sub_1000BD368);
      }
      uint64_t v17 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v18 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v19 = *(void *)(v18 + 72);
      uint64_t v20 = swift_allocObject( v17,  ((*(unsigned __int8 *)(v18 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)) + 2 * v19,  *(unsigned __int8 *)(v18 + 80) | 7LL);
      *(_OWORD *)(v20 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      uint64_t v45 = type metadata accessor for AppSchedulesTable();
      v44[0] = a2;
      uint64_t v21 = swift_retain(a2);
      id v22 = (id)AMSLogKey(v21);
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        uint64_t v46 = v19;
        uint64_t v25 = v24;
        uint64_t v27 = v26;

        swift_bridgeObjectRetain(v27);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v28._countAndFlagsBits = 0LL;
        v28._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v28);
        uint64_t v29 = v45;
        double v30 = sub_10000D37C(v44, v45);
        uint64_t DynamicType = swift_getDynamicType(v30, v29, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
        v42[0] = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
        sub_10000E888((uint64_t)v42);
        v32._countAndFlagsBits = 5972026LL;
        v32._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        uint64_t MetatypeMetadata = &type metadata for String;
        v42[0] = v25;
        v42[1] = v27;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
        sub_10000E888((uint64_t)v42);
        v33._countAndFlagsBits = 93LL;
        v33._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v33);
        LogMessage.init(stringInterpolation:)(v9);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v34._countAndFlagsBits = 0LL;
        v34._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v34);
        uint64_t v35 = v45;
        double v36 = sub_10000D37C(v44, v45);
        uint64_t v37 = swift_getDynamicType(v36, v35, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v37);
        v42[0] = v37;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
        sub_10000E888((uint64_t)v42);
        v38._countAndFlagsBits = 58LL;
        v38._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v38);
        LogMessage.init(stringInterpolation:)(v9);
      }

      sub_10000D3A0(v44);
      uint64_t v39 = LogMessage.init(stringLiteral:)(0xD000000000000016LL);
      uint64_t v40 = static os_log_type_t.error.getter(v39);
      sub_1000BD1B0(v40, v20);
      swift_bridgeObjectRelease();
    }
  }

  return v4;
}

uint64_t sub_10002F0BC(uint64_t a1, uint64_t a2)
{
  *(void *)Swift::String v38 = v13;
  uint64_t v39 = v14;
  swift_bridgeObjectRetain(*(void *)(v2 + 32));
  sub_10002F994(v15, v16, v17, v18, v19, v20, v21, v22, v30, v31, v32, v33, v34, v35, v36, v37, v38[0]);
  sub_100020AB8();
  sub_10002F934(0x5720u);
  sub_10002F918();
  sub_10002FA3C();
  uint64_t v23 = *(void *)v38;
  uint64_t v24 = v39;
  uint64_t v25 = sub_10000D33C(&qword_1001C8EE8);
  uint64_t inited = swift_initStackObject(v25, &v31);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = 3;
  swift_bridgeObjectRetain(a2);
  v40._countAndFlagsBits = v23;
  v40._object = v24;
  v27._rawValue = (void *)inited;
  sub_10002FAFC(v40, v27);
  swift_setDeallocating(inited);
  sub_10012A65C();
  return sub_100020AB8();
}

uint64_t sub_10002F1C4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v19 = result;
    sub_10002FAA8();
    sub_100016F88();
    uint64_t v2 = 0LL;
    v3._rawValue = v22;
    uint64_t v4 = v22[2];
    uint64_t v5 = 2 * v4;
    do
    {
      uint64_t v6 = v4 + v2 + 1;
      ++v2;
      uint64_t v22[2] = v6;
      uint64_t v7 = &v22[v5];
      v7[4] = 63LL;
      v7[5] = 0xE100000000000000LL;
      v5 += 2LL;
    }

    while (v1 != v2);
    sub_10000D33C(&qword_1001CDF50);
    sub_10001BD2C();
    uint64_t v20 = sub_10002FA50();
    sub_100020AD8();
    sub_10002FAA8();
    sub_100016FBC();
    uint64_t v8 = (void *)(v19 + 40);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      unint64_t v12 = v22[2];
      unint64_t v11 = v22[3];
      swift_bridgeObjectRetain(*v8);
      if (v12 >= v11 >> 1) {
        sub_10002FAD4();
      }
      v8 += 2;
      uint64_t v22[2] = v12 + 1;
      uint64_t v13 = &v22[3 * v12];
      void v13[4] = v9;
      void v13[5] = v10;
      *((_BYTE *)v13 + 48) = 3;
      --v1;
    }

    while (v1);
    _StringGuts.grow(_:)(32LL);
    swift_bridgeObjectRelease();
    sub_10002F9D8();
    v23._countAndFlagsBits = v14;
    v23._object = v15;
    uint64_t v16 = *(void *)(v21 + 24);
    int v17 = *(void **)(v21 + 32);
    swift_bridgeObjectRetain(v17);
    v18._countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    sub_10000DE2C();
    sub_10002F934(0x5720u);
    sub_10002F918();
    sub_10002FA80(18720LL);
    sub_10002FAC0(v20);
    sub_100009020();
    sub_1000209A0(15145LL);
    SQLDatabase.execute(sql:parameters:)(v23, v3);
    sub_100020AD8();
    return sub_10000DE2C();
  }

  return result;
}

uint64_t sub_10002F3F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
  sub_100110F20();
  sub_10000D33C(&qword_1001C9A88);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v28 = 0LL;
  id v6 = [v4 dataWithPropertyList:isa format:100 options:0 error:&v28];

  id v7 = v28;
  if (v6)
  {
    uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v6);
    unint64_t v10 = v9;

    id v28 = 0LL;
    unint64_t v29 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(54LL);
    sub_10002FA60();
    String.append(_:)(v11);
    uint64_t v12 = *(void *)(v2 + 24);
    uint64_t v13 = *(void **)(v2 + 32);
    swift_bridgeObjectRetain(v13);
    v14._countAndFlagsBits = v12;
    v14._object = v13;
    String.append(_:)(v14);
    sub_10000DE74();
    sub_1000209A0(10272LL);
    sub_10002F918();
    sub_1000209A0(8236LL);
    sub_10002F9F8();
    sub_1000209A0(8236LL);
    sub_10002F970();
    sub_10002FA60();
    v15._countAndFlagsBits = 0xD000000000000011LL;
    String.append(_:)(v15);
    uint64_t v17 = (uint64_t)v28;
    uint64_t v16 = (void *)v29;
    uint64_t v18 = sub_10000D33C(&qword_1001C8EE8);
    uint64_t inited = swift_initStackObject(v18, v30);
    *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164240;
    uint64_t v20 = a1 + *(int *)(sub_10002FA78() + 20);
    uint64_t v21 = (void *)(v20 + *(int *)(type metadata accessor for ScheduleInfo.Metadata(0LL) + 44));
    uint64_t v22 = v21[1];
    *(void *)(inited + 32) = *v21;
    *(void *)(inited + 40) = v22;
    *(_BYTE *)(inited + 48) = 3;
    *(void *)(inited + 56) = v8;
    *(void *)(inited + 64) = v10;
    *(_BYTE *)(inited + 72) = 0;
    swift_bridgeObjectRetain(v22);
    uint64_t v23 = sub_10001BDC8(v8, v10);
    *(double *)(inited + 80) = static Date.timeIntervalSinceReferenceDate.getter(v23);
    *(void *)(inited + 88) = 0LL;
    *(_BYTE *)(inited + 96) = 2;
    v31._countAndFlagsBits = v17;
    v31._object = v16;
    v24._rawValue = (void *)inited;
    sub_10002FAFC(v31, v24);
    swift_setDeallocating(inited);
    sub_10012A65C();
    sub_10000DE74();
    return sub_10001BD84(v8, v10);
  }

  else
  {
    uint64_t v26 = v7;
    _convertNSErrorToError(_:)(v7);

    return swift_willThrow(v27);
  }

uint64_t type metadata accessor for AppSchedulesTable()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd17AppSchedulesTable);
}

uint64_t sub_10002F6A8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

BOOL sub_10002F6D0(uint64_t a1)
{
  return sub_10002ED68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10002F6F0(uint64_t a1)
{
  return sub_10002E50C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_10002F70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F754()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10002F780(uint64_t a1)
{
  return sub_10002DC24(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_10002F79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C9E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C9E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F82C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_10002F840(char a1)
{
  return sub_10002D34C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(uint64_t (**)(_BYTE *))(v1 + 32),  *(void *)(v1 + 40),  type metadata accessor for ScheduleInfo.Metadata,  (void (*)(uint64_t, _BYTE *))sub_1001102C0) & 1;
}

uint64_t sub_10002F870(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t sub_10002F8B0()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10002F8E4(char a1)
{
  return sub_10002D34C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(uint64_t (**)(_BYTE *))(v1 + 32),  *(void *)(v1 + 40),  type metadata accessor for ScheduleInfo,  (void (*)(uint64_t, _BYTE *))sub_100110090) & 1;
}

void sub_10002F918()
{
  v0._countAndFlagsBits = 0x696669746E656469LL;
  v0._object = (void *)0xEA00000000007265LL;
  String.append(_:)(v0);
}

void sub_10002F934(unsigned __int16 a1)
{
  v1._countAndFlagsBits = a1 | 0x20455245480000LL;
  v1._object = (void *)0xE700000000000000LL;
  String.append(_:)(v1);
}

void sub_10002F948()
{
}

void sub_10002F970()
{
  v0._countAndFlagsBits = 0x69646F4D7473616CLL;
  v0._object = (void *)0xEC00000064656966LL;
  String.append(_:)(v0);
}

void sub_10002F994( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
}

  ;
}

uint64_t sub_10002F9C0()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 32));
}

  ;
}

void sub_10002F9F8()
{
  v0._countAndFlagsBits = 0x7463656A626FLL;
  v0._object = (void *)0xE600000000000000LL;
  String.append(_:)(v0);
}

uint64_t sub_10002FA10()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 272) + 8LL))(v0, v1);
}

uint64_t sub_10002FA28()
{
  return sub_10001BD70(*(void *)(v0 - 320), *(void *)(v0 - 328));
}

void sub_10002FA3C()
{
  v0._countAndFlagsBits = 0x3B3F203D20LL;
  v0._object = (void *)0xE500000000000000LL;
  String.append(_:)(v0);
}

uint64_t sub_10002FA50()
{
  return BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v0);
}

  ;
}

uint64_t sub_10002FA70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return swift_bridgeObjectRelease(a18);
}

uint64_t sub_10002FA78()
{
  return type metadata accessor for ScheduleInfo(0LL);
}

void sub_10002FA80(uint64_t a1)
{
  v1._countAndFlagsBits = a1 & 0xFFFF00000000FFFFLL | 0x28204E0000LL;
  v1._object = (void *)0xE500000000000000LL;
  String.append(_:)(v1);
}

uint64_t sub_10002FA90(uint64_t a1)
{
  return sub_10001BD70(a1, *(void *)(v1 - 328));
}

uint64_t sub_10002FAA0()
{
  return swift_retain(v0);
}

uint64_t sub_10002FAA8()
{
  return 0LL;
}

void sub_10002FAC0(uint64_t a1)
{
  uint64_t v2 = v1;
  String.append(_:)(*(Swift::String *)&a1);
}

void sub_10002FAC8()
{
}

void sub_10002FAD4()
{
}

  ;
}

uint64_t sub_10002FAEC()
{
  return swift_retain(v0);
}

uint64_t sub_10002FAF4()
{
  return swift_release(v0);
}

void sub_10002FAFC(Swift::String sql, Swift::OpaquePointer parameters)
{
}

void sub_10002FB04( void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10002FB10(void (*a1)(void), uint64_t a2)
{
}

uint64_t sub_10002FB18()
{
  return sub_10002F870(v0, v1);
}

uint64_t sub_10002FB24()
{
  return sub_10000E888(v0 - 200);
}

void *sub_10002FB2C(void *result)
{
  result[2] = v4;
  result[3] = v2;
  result[4] = v3;
  result[5] = v1;
  return result;
}

uint64_t sub_10002FB40()
{
  return v0;
}

uint64_t sub_10002FB64(uint64_t a1, void *a2)
{
  v12._uint64_t countAndFlagsBits = 95LL;
  v12._object = (void *)0xE100000000000000LL;
  String.append(_:)(v12);
  uint64_t v13 = swift_bridgeObjectRelease();
  sub_10002FD10(v13, v14, v15, v16, v17, v18, v19, v20, v29._countAndFlagsBits, (uint64_t)v29._object);
  sub_10001C260();
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v29._countAndFlagsBits;
  object = v29._object;
  _StringGuts.grow(_:)(26LL);
  swift_bridgeObjectRelease();
  strcpy((char *)&v29, "CREATE INDEX ");
  HIWORD(v29._object) = -4864;
  v23._uint64_t countAndFlagsBits = countAndFlagsBits;
  v23._object = object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 542002976LL;
  v24._object = (void *)0xE400000000000000LL;
  String.append(_:)(v24);
  v25._uint64_t countAndFlagsBits = a1;
  v25._object = a2;
  String.append(_:)(v25);
  v26._uint64_t countAndFlagsBits = 40LL;
  v26._object = (void *)0xE100000000000000LL;
  String.append(_:)(v26);
  sub_10001C260();
  v27._uint64_t countAndFlagsBits = 15145LL;
  v27._object = (void *)0xE200000000000000LL;
  String.append(_:)(v27);
  SQLDatabase.execute(sql:parameters:)(v29, (Swift::OpaquePointer)_swiftEmptyArrayStorage);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002FCD0()
{
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t type metadata accessor for AppTable()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd8AppTable);
}

uint64_t sub_10002FD10( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return swift_bridgeObjectRetain(a10);
}

id sub_10002FD20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___NSURLSessionConfiguration);
  id v5 = [(id)objc_opt_self(AMSProcessInfo) currentProcess];
  id v6 = objc_msgSend(v4, "ams_configurationWithProcessInfo:bag:", v5, 0);

  sub_1000F7664(0xD000000000000012LL, 0x800000010016C1F0LL, v6);
  id v7 = objc_allocWithZone(&OBJC_CLASS___NSURLCache);
  id v8 = sub_10002FEF8(0LL, 10000000LL, 0LL, 0LL);
  [v6 setURLCache:v8];

  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for AppURLSession();
  id v9 = objc_msgSendSuper2(&v11, "initWithConfiguration:delegate:delegateQueue:", v6, 0, 0);
  sub_10002FF78(a1);

  return v9;
}

void sub_10002FE50()
{
}

id sub_10002FEA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppURLSession();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AppURLSession()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd13AppURLSession);
}

id sub_10002FEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }

  else
  {
    NSString v8 = 0LL;
  }

  id v9 = [v4 initWithMemoryCapacity:a1 diskCapacity:a2 diskPath:v8];

  return v9;
}

void *sub_10002FF78(void *a1)
{
  objc_super v2 = (void *)a1[1];
  uint64_t v3 = a1[4];
  swift_bridgeObjectRelease(a1[6]);

  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t sub_10002FFBC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  v21[0] = a1;
  uint64_t v11 = type metadata accessor for Optional(0LL, a4);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v21 - v14;
  uint64_t v16 = *(void *)(a4 - 8);
  __chkstk_darwin(v13);
  uint64_t v18 = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if (sub_1000102D4((uint64_t)v15, 1LL, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    a6[3] = a3;
    a6[4] = a5;
    uint64_t v19 = sub_10000D63C(a6);
    return (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(a3 - 8) + 16LL))(v19, v21[1], a3);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a4);
    AsyncObjectGraphBuilder.satisfying<A>(_:with:)(v21[0], v18, a3, a4, a5);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, a4);
  }

void sub_100030118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000DA58((_OWORD *)a1, v6);
    sub_100033F44(v6, a2, a3);
    sub_100009020();
  }

  else
  {
    sub_1000376C0(a1);
    uint64_t v5 = sub_10000DECC();
    sub_100032E94(v5);
    sub_100009020();
    sub_1000376C0((uint64_t)v6);
  }

  sub_10001A504();
}

void sub_100030188(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000DA58((_OWORD *)a1, v3);
    sub_100033F94();
    sub_10000E854(a2);
  }

  else
  {
    sub_100037418(a1);
    sub_100032F3C(v3, a2);
    sub_10000E854(a2);
    sub_100037418((uint64_t)v3);
  }

  sub_10001A504();
}

void sub_1000301F8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100019F60((__int128 *)a1, (uint64_t)v3);
    sub_100033FE4(v3, a2);
  }

  else
  {
    sub_100037418(a1);
    sub_100032FE0(a2, (uint64_t)v3);
    sub_100037418((uint64_t)v3);
  }

  sub_100037664();
}

void sub_100030258(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000DA58((_OWORD *)a1, v3);
    sub_100034050();
  }

  else
  {
    sub_100037418(a1);
    sub_1000331F0(a2, v3);
    sub_100037418((uint64_t)v3);
  }

  sub_10001A504();
}

void sub_1000302B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_1000376C0(a1);
    uint64_t v5 = sub_10000DECC();
    sub_10003330C(v5, v6, v7);
    sub_100009020();
    sub_1000376C0((uint64_t)v8);
  }

  else
  {
    sub_100036E10(a1, (uint64_t)v8);
    sub_100034088((uint64_t)v8, a2, a3);
    sub_100009020();
  }

void sub_100030334()
{
}

void sub_100030350(uint64_t a1, double a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000DA58((_OWORD *)a1, v18);
    sub_10003413C(v18, a2);
  }

  else
  {
    sub_10000DA68(a1, &qword_1001CAAD0);
    unint64_t v4 = sub_100030E6C(a2);
    if ((v5 & 1) != 0)
    {
      unint64_t v6 = v4;
      sub_100037238();
      sub_1000370C4();
      int v7 = sub_10000D33C(&qword_1001C9CB8);
      sub_100037104(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
      sub_10000DA58((_OWORD *)(*(void *)(v17 + 56) + 32 * v6), v18);
      _NativeDictionary._delete(at:)(v6, v17);
      *objc_super v2 = v17;
      swift_bridgeObjectRelease();
    }

    else
    {
      memset(v18, 0, sizeof(v18));
    }

    sub_10000DA68((uint64_t)v18, &qword_1001CAAD0);
  }

void sub_100030450( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  a17 = v19;
  a18 = v20;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = sub_10000D33C(&qword_1001CF970);
  __chkstk_darwin(v27);
  Swift::String v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_1000378A0();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  sub_10003772C();
  if (sub_1000102D4(v26, 1LL, v30) == 1)
  {
    sub_10000DA68(v26, &qword_1001CF970);
    uint64_t v32 = sub_10000DECC();
    sub_1000335CC(v32, v33, v34);
    sub_100009020();
    sub_10000DA68((uint64_t)v29, &qword_1001CF970);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v18, v26, v30);
    sub_1000341D8(v18, v24, v22);
    sub_100009020();
  }

  sub_10000DE10();
}

void sub_10003054C(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 32) == 1LL)
  {
    sub_100037418(a1);
    sub_100033714((uint64_t)a2, (uint64_t)v4);

    sub_100037418((uint64_t)v4);
  }

  else
  {
    __int128 v3 = *(_OWORD *)(a1 + 16);
    v4[0] = *(_OWORD *)a1;
    v4[1] = v3;
    uint64_t v5 = *(void *)(a1 + 32);
    sub_100034254((uint64_t)v4, a2);
  }

  sub_100037664();
}

void sub_1000305C0()
{
}

void sub_1000305DC()
{
  uint64_t v24 = v1;
  uint64_t v25 = v2;
  uint64_t v4 = v3;
  unint64_t v6 = v5;
  int v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = sub_10000D33C(v7);
  __chkstk_darwin(v15);
  sub_10003772C();
  uint64_t v16 = sub_100037704();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v23 - v17;
  if (sub_1000102D4(v14, 1LL, v19) == 1)
  {
    sub_10000DA68(v14, v8);
    sub_100033840();
    sub_100009020();
    sub_10000DA68(v0, v8);
  }

  else
  {
    sub_100036FD0(v14, (uint64_t)v18, v6);
    sub_1000342C0((uint64_t)v18, v12, v10, v4, (uint64_t)v6, v20, v21, v22, v23[0], v23[1]);
    sub_100009020();
  }

  sub_10000DD84();
}

uint64_t sub_1000306E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_100037344(a1, a2), (v5 & 1) != 0)) {
    return *(unsigned __int8 *)(*(void *)(v3 + 56) + v4);
  }
  else {
    return 2LL;
  }
}

uint64_t sub_10003071C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0LL;
  }
  unint64_t v4 = sub_100037344(a1, a2);
  if ((v5 & 1) == 0) {
    return 0LL;
  }
  uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 16 * v4);
  sub_10000DF08();
  return v6;
}

void sub_10003076C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    unint64_t v3 = sub_100037344(a1, a2);
    if ((v4 & 1) != 0) {
      sub_100037790(v3);
    }
  }

  sub_100009044();
}

void sub_10003079C(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_1000377B4(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = sub_1000375CC(v4);
    sub_10003733C(v6, v7);
  }

  else
  {
    *a3 = 0u;
    a3[1] = 0u;
    sub_100009044();
  }

uint64_t sub_1000307DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_100037344(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v4 + 56);
    uint64_t v10 = sub_1000378A0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))( a4,  v9 + *(void *)(*(void *)(v10 - 8) + 72LL) * v8,  v10);
    uint64_t v11 = a4;
    uint64_t v12 = 0LL;
    uint64_t v13 = 1LL;
    uint64_t v14 = v10;
  }

  else
  {
    sub_1000378A0();
    uint64_t v11 = sub_1000378B4();
  }

  return sub_10000D5C0(v11, v12, v13, v14);
}

void sub_100030858(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
}

void sub_10003086C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_100037344(a1, a2), (v7 & 1) != 0))
  {
    sub_100036E58(*(void *)(v4 + 56) + 8 * v6, a4);
    char v8 = 0;
  }

  else
  {
    *(void *)a4 = 0LL;
    char v8 = 1;
  }

  *(_BYTE *)(a4 + 8) = v8;
  sub_100009044();
}

void sub_1000308B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v5 = sub_100037344(a1, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = sub_1000375CC(v5);
    sub_10003733C(v7, v8);
  }

  else
  {
    *a4 = 0u;
    a4[1] = 0u;
    sub_100009044();
  }

void sub_1000308F4(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
}

void sub_100030908( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t (*a4)(uint64_t, Swift::Int)@<X3>, _OWORD *a5@<X8>)
{
  if (*(void *)(a2 + 16) && (uint64_t v6 = sub_100030DB0(a1, a3, a4), (v7 & 1) != 0))
  {
    uint64_t v8 = sub_1000375CC(v6);
    sub_10003733C(v8, v9);
  }

  else
  {
    *a5 = 0u;
    a5[1] = 0u;
    sub_100009044();
  }

void sub_100030950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    unint64_t v3 = sub_100037344(a1, a2);
    if ((v4 & 1) != 0) {
      sub_10003779C(v3);
    }
  }

  sub_100009044();
}

void sub_100030984(void *a1, unint64_t a2)
{
  if ((a2 & 0xC000000000000001LL) != 0)
  {
    id v3 = sub_1000376C8(a1);
    uint64_t v4 = sub_100037760((uint64_t)v3);

    if (v4)
    {
      uint64_t v8 = v4;
      uint64_t updated = type metadata accessor for MercuryCacheUpdateCoordinator();
      swift_unknownObjectRetain(v4);
      sub_100037684((uint64_t)v9, (uint64_t)&v8, (uint64_t)&type metadata for Swift.AnyObject + 8, updated);
      sub_1000377A8();
    }
  }

  else if (*(void *)(a2 + 16))
  {
    unint64_t v6 = sub_100030EA0((uint64_t)a1);
    if ((v7 & 1) != 0) {
      sub_1000375BC(v6);
    }
  }

  sub_1000378A8();
}

void sub_100030A18(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v2 = sub_100030E20(a1);
    if ((v3 & 1) != 0) {
      sub_10003779C(v2);
    }
  }

  sub_100009044();
}

void sub_100030A54(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v2 = sub_1000377B4(a1);
    if ((v3 & 1) != 0) {
      sub_100037790(v2);
    }
  }

  sub_100009044();
}

void sub_100030A84(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v3 = sub_1000377B4(a1);
    if ((v4 & 1) != 0) {
      swift_errorRetain(*(void *)(*(void *)(v2 + 56) + 8 * v3));
    }
  }

  sub_100009044();
}

void sub_100030AC8(void *a1, unint64_t a2)
{
  if ((a2 & 0xC000000000000001LL) != 0)
  {
    id v3 = sub_1000376C8(a1);
    uint64_t v4 = sub_100037760((uint64_t)v3);

    if (v4)
    {
      uint64_t v8 = v4;
      swift_unknownObjectRetain(v4);
      uint64_t v5 = sub_10000D33C(&qword_1001C9D48);
      sub_100037684((uint64_t)v9, (uint64_t)&v8, (uint64_t)&type metadata for Swift.AnyObject + 8, v5);
      sub_1000377A8();
    }
  }

  else if (*(void *)(a2 + 16))
  {
    unint64_t v6 = sub_100030EA0((uint64_t)a1);
    if ((v7 & 1) != 0) {
      sub_1000375BC(v6);
    }
  }

  sub_1000378A8();
}

uint64_t sub_100030B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_100037344(a1, a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(v3 + 56) + 8 * v4);
  }
  else {
    return 0LL;
  }
}

void sub_100030B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    unint64_t v4 = sub_100037344(a1, a2);
    if ((v5 & 1) != 0) {
      swift_retain(*(void *)(*(void *)(v3 + 56) + 8 * v4));
    }
  }

  sub_100009044();
}

uint64_t sub_100030BD4()
{
  uint64_t v1 = type metadata accessor for BadgingNotifier();
  uint64_t v2 = swift_allocObject(v1, 16LL, 7LL);
  uint64_t v3 = sub_10000DECC();
  sub_100036030(v3, v4, v2, v0);
  return swift_release(v2);
}

id sub_100030C28()
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0));
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  sub_100009020();
  id v3 = [v1 initWithPayload:isa];

  return v3;
}

uint64_t type metadata accessor for BadgingAction()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd13BadgingAction);
}

unint64_t sub_100030CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100037874();
  return sub_100030FD4(v4, v5, v6);
}

unint64_t sub_100030D24(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_1000310B4(a1, v4);
}

uint64_t sub_100030D54(uint64_t a1)
{
  return sub_100030DB0(a1, (uint64_t (*)(uint64_t))sub_10011217C, sub_100031178);
}

unint64_t sub_100030D68(unsigned int a1)
{
  uint64_t v3 = static Hasher._hash(seed:bytes:count:)(*(void *)(v1 + 40), a1, 4LL);
  return sub_1000314EC(a1, v3);
}

uint64_t sub_100030D9C(uint64_t a1)
{
  return sub_100030DB0(a1, (uint64_t (*)(uint64_t))sub_100039200, sub_100031588);
}

uint64_t sub_100030DB0( uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, Swift::Int))
{
  uint64_t v5 = a2(a1);
  String.hash(into:)(v10, v5, v6);
  sub_100009020();
  Swift::Int v7 = sub_100008FE8();
  return a3(a1, v7);
}

uint64_t sub_100030E20(uint64_t a1)
{
  Swift::Int v2 = sub_100008FE8();
  return sub_100031844(a1, v2);
}

unint64_t sub_100030E6C(double a1)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    double v3 = a1;
  }
  else {
    double v3 = 0.0;
  }
  uint64_t v4 = static Hasher._hash(seed:_:)(*(void *)(v1 + 40), *(void *)&v3);
  return sub_100031A28(v4, a1);
}

unint64_t sub_100030EA0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100031AC0(a1, v4);
}

uint64_t sub_100030ED0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v5 = v4;
  Hasher.init(_seed:)(v7, v2);
  String.hash(into:)(v7, v3, v5);
  sub_100008FE8();
  swift_bridgeObjectRelease();
  return sub_100031C74();
}

unint64_t sub_100030F58(uint64_t a1)
{
  uint64_t v3 = static Hasher._hash(seed:_:)(*(void *)(v1 + 40), a1);
  return sub_100031BD8(a1, v3);
}

unint64_t sub_100030F88(Swift::UInt a1)
{
  Swift::Int v2 = sub_100008FE8();
  return sub_100031BD8(a1, v2);
}

unint64_t sub_100030FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    uint64_t v11 = v10[1];
    BOOL v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0LL) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v13;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v14 = (void *)(v9 + 16 * v6);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == a1 && v15 == a2;
      }

      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0LL) & 1) == 0);
    }
  }

  return v6;
}

unint64_t sub_1000310B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0)
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_10002C644(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10000E854((uint64_t)v9);
      if ((v7 & 1) != 0) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }

    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0);
  }

  return v4;
}

uint64_t sub_100031178(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
  if (((*(void *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v3) & 1) != 0) {
    __asm { BR              X9 }
  }

  return a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1000314EC(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }

  return result;
}

uint64_t sub_100031588(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
  if (((*(void *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v3) & 1) != 0) {
    __asm { BR              X9 }
  }

  return a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
}

uint64_t sub_100031844(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
  if (((*(void *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v3) & 1) != 0) {
    __asm { BR              X9 }
  }

  return a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
}

unint64_t sub_100031A28(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
      }
    }
  }

  return result;
}

unint64_t sub_100031AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0)
  {
    sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
    id v7 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v8 = static NSObject.== infix(_:_:)(v7, a1);

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8LL)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = static NSObject.== infix(_:_:)(v10, a1);

        if ((v11 & 1) != 0) {
          break;
        }
      }
    }
  }

  return i;
}

unint64_t sub_100031BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }

  return result;
}

uint64_t sub_100031C74()
{
  uint64_t v2 = -1LL << *(_BYTE *)(v0 + 32);
  uint64_t v4 = v3 & ~v2;
  sub_10003745C();
  if ((v5 & 1) != 0)
  {
    uint64_t v6 = sub_100037754();
    uint64_t v7 = sub_1000378DC();
    if (v6 == v7 && v1 == v8)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v1, 2LL);
      return v4;
    }

    char v10 = sub_100025718(v6, v1, v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = ~v2;
      uint64_t v4 = (v4 + 1) & v11;
      sub_10003745C();
      if ((v12 & 1) != 0)
      {
        while (1)
        {
          uint64_t v13 = sub_100037754();
          if (v13 == sub_1000378DC() && v1 == v14) {
            break;
          }
          uint64_t v16 = v14;
          uint64_t v17 = sub_10003768C();
          char v20 = sub_100025718(v17, v18, v19, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            uint64_t v4 = (v4 + 1) & v11;
            sub_10003745C();
            if ((v21 & 1) != 0) {
              continue;
            }
          }

          return v4;
        }

        goto LABEL_16;
      }
    }
  }

  return v4;
}

Swift::Int sub_100031D94(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  if (!a2)
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }

  sub_10003786C(a1, a2, a3);
  uint64_t v7 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
  uint64_t v31 = v7;
  uint64_t v8 = __CocoaDictionary.makeIterator()(a1);
  uint64_t v9 = __CocoaDictionary.Iterator.next()();
  if (!v9)
  {
LABEL_16:
    swift_release(v8);
    return v7;
  }

  uint64_t v11 = v9;
  uint64_t v12 = v10;
  uint64_t v13 = sub_10000DE08(v9, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
  while (1)
  {
    uint64_t v29 = v11;
    sub_100037684((uint64_t)&v30, (uint64_t)&v29, (uint64_t)&type metadata for Swift.AnyObject + 8, v13);
    uint64_t v28 = v12;
    uint64_t v14 = a4(0LL);
    sub_100037684((uint64_t)&v29, (uint64_t)&v28, (uint64_t)&type metadata for Swift.AnyObject + 8, v14);
    uint64_t v7 = v31;
    if (*(void *)(v31 + 24) <= *(void *)(v31 + 16))
    {
      sub_100032B38();
      uint64_t v7 = v31;
    }

    uint64_t v16 = v29;
    uint64_t v15 = v30;
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v18 = v7 + 64;
    uint64_t v19 = -1LL << *(_BYTE *)(v7 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1LL << v20) & ~*(void *)(v7 + 64 + 8 * (v20 >> 6))) == 0) {
      break;
    }
    unint64_t v22 = __clz(__rbit64((-1LL << v20) & ~*(void *)(v7 + 64 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_15:
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v22;
    *(void *)(*(void *)(v7 + 48) + 8 * v22) = v15;
    *(void *)(*(void *)(v7 + 56) + 8 * v22) = v16;
    ++*(void *)(v7 + 16);
    uint64_t v11 = __CocoaDictionary.Iterator.next()();
    uint64_t v12 = v27;
    if (!v11) {
      goto LABEL_16;
    }
  }

  char v23 = 0;
  unint64_t v24 = (unint64_t)(63 - v19) >> 6;
  while (++v21 != v24 || (v23 & 1) == 0)
  {
    BOOL v25 = v21 == v24;
    if (v21 == v24) {
      unint64_t v21 = 0LL;
    }
    v23 |= v25;
    uint64_t v26 = *(void *)(v18 + 8 * v21);
    if (v26 != -1)
    {
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
      goto LABEL_15;
    }
  }

  __break(1u);
  return result;
}

Swift::Int sub_100031FB0(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }

  sub_10000D33C(&qword_1001C9D70);
  uint64_t v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
  uint64_t v27 = v4;
  __CocoaDictionary.makeIterator()(a1);
  uint64_t v5 = __CocoaDictionary.Iterator.next()();
  if (!v5)
  {
LABEL_16:
    swift_release();
    return v4;
  }

  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
  while (1)
  {
    uint64_t v25 = v7;
    swift_dynamicCast(&v26, &v25, (char *)&type metadata for Swift.AnyObject + 8, v9, 7LL);
    uint64_t v24 = v8;
    uint64_t v10 = sub_10000D33C(&qword_1001C9D48);
    swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v10, 7LL);
    uint64_t v4 = v27;
    if (*(void *)(v27 + 24) <= *(void *)(v27 + 16))
    {
      sub_100032B38();
      uint64_t v4 = v27;
    }

    uint64_t v12 = v25;
    uint64_t v11 = v26;
    Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
    uint64_t v14 = v4 + 64;
    uint64_t v15 = -1LL << *(_BYTE *)(v4 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1LL << v16) & ~*(void *)(v4 + 64 + 8 * (v16 >> 6))) == 0) {
      break;
    }
    unint64_t v18 = __clz(__rbit64((-1LL << v16) & ~*(void *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_15:
    *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v18;
    *(void *)(*(void *)(v4 + 48) + 8 * v18) = v11;
    *(void *)(*(void *)(v4 + 56) + 8 * v18) = v12;
    ++*(void *)(v4 + 16);
    uint64_t v7 = __CocoaDictionary.Iterator.next()();
    uint64_t v8 = v23;
    if (!v7) {
      goto LABEL_16;
    }
  }

  char v19 = 0;
  unint64_t v20 = (unint64_t)(63 - v15) >> 6;
  while (++v17 != v20 || (v19 & 1) == 0)
  {
    BOOL v21 = v17 == v20;
    if (v17 == v20) {
      unint64_t v17 = 0LL;
    }
    v19 |= v21;
    uint64_t v22 = *(void *)(v14 + 8 * v17);
    if (v22 != -1)
    {
      unint64_t v18 = __clz(__rbit64(~v22)) + (v17 << 6);
      goto LABEL_15;
    }
  }

  __break(1u);
  return result;
}

void sub_1000321E8()
{
  uint64_t v2 = v0;
  char v4 = v3;
  sub_100037328();
  sub_10000D33C(&qword_1001C92B0);
  uint64_t v5 = sub_1000374CC();
  uint64_t v6 = (void *)v5;
  if (*(void *)(v1 + 16))
  {
    int64_t v7 = 0LL;
    uint64_t v8 = *(void *)(v1 + 64);
    uint64_t v34 = v2;
    uint64_t v35 = v1 + 64;
    uint64_t v9 = 1LL << *(_BYTE *)(v1 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1LL << v9);
    }
    else {
      uint64_t v10 = -1LL;
    }
    unint64_t v11 = v10 & v8;
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v5 + 64;
    if ((v10 & v8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = v20 + (v7 << 6))
    {
      uint64_t v21 = *(void *)(v1 + 56);
      uint64_t v22 = *(unsigned int *)(*(void *)(v1 + 48) + 4 * i);
      uint64_t v23 = *(void *)(v21 + 8 * i);
      if ((v4 & 1) == 0) {
        swift_unknownObjectRetain(*(void *)(v21 + 8 * i));
      }
      static Hasher._hash(seed:bytes:count:)(v6[5], v22, 4LL);
      sub_100037578();
      if (v24)
      {
        sub_1000372A0();
        while (1)
        {
          sub_1000376F8();
          if (v24)
          {
            if ((v26 & 1) != 0) {
              break;
            }
          }

          if (v27 == v28) {
            uint64_t v27 = 0LL;
          }
          if (*(void *)(v13 + 8 * v27) != -1LL)
          {
            sub_100037254();
            goto LABEL_31;
          }
        }

        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }

      sub_100037268();
LABEL_31:
      sub_10003749C(v25);
      *(_DWORD *)(v6[6] + 4 * v29) = v22;
      *(void *)(v6[7] + 8 * v29) = v23;
      ++v6[2];
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v7 + 1;
      if (__OFADD__(v7, 1LL)) {
        goto LABEL_42;
      }
      if (v16 >= v12) {
        goto LABEL_33;
      }
      ++v7;
      if (!*(void *)(v35 + 8 * v16))
      {
        int64_t v7 = v16 + 1;
        if (v16 + 1 >= v12) {
          goto LABEL_33;
        }
        if (!*(void *)(v35 + 8 * v7))
        {
          int64_t v17 = v16 + 2;
          if (v17 >= v12)
          {
LABEL_33:
            if ((v4 & 1) == 0)
            {
              sub_100037230();
              uint64_t v2 = v34;
              goto LABEL_40;
            }

            sub_100037240();
            if (v32 != v33) {
              void *v30 = -1LL << v31;
            }
            else {
              sub_100037654(v30, v31);
            }
            uint64_t v2 = v34;
            *(void *)(v1 + swift_weakDestroy(v0 + 16) = 0LL;
            break;
          }

          if (!*(void *)(v35 + 8 * v17))
          {
            while (1)
            {
              int64_t v7 = v17 + 1;
              if (__OFADD__(v17, 1LL)) {
                goto LABEL_43;
              }
              if (v7 >= v12) {
                goto LABEL_33;
              }
              ++v17;
              if (*(void *)(v35 + 8 * v7)) {
                goto LABEL_18;
              }
            }
          }

          int64_t v7 = v17;
        }
      }

void sub_1000323D8(uint64_t a1, uint64_t a2)
{
  char v4 = v2;
  sub_100037328();
  sub_10000D33C(&qword_1001C9DA0);
  char v40 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)(v3, v2, a2);
  if (!v3[2]) {
    goto LABEL_40;
  }
  sub_1000373D0();
  uint64_t v39 = v9;
  if (v7 < 64) {
    uint64_t v10 = ~(-1LL << v7);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & v8;
  int64_t v38 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  sub_10000DFF4();
  int64_t v13 = 0LL;
  if (!v11) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = v21 + (v13 << 6))
  {
    uint64_t v22 = (uint64_t *)(v3[6] + 16 * i);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v25 = *(void *)(v3[7] + 8 * i);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain(v22[1]);
      sub_100020BB4();
    }

    Hasher.init(_seed:)(v41, *(void *)(v6 + 40));
    String.hash(into:)(v41, v24, v23);
    unint64_t v26 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v6 + 32));
    if (((-1LL << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) == 0)
    {
      sub_1000372A0();
      while (1)
      {
        sub_1000376F8();
        if (v30)
        {
          if ((v27 & 1) != 0) {
            break;
          }
        }

        if (v28 == v29) {
          uint64_t v28 = 0LL;
        }
        if (*(void *)(v12 + 8 * v28) != -1LL)
        {
          sub_100037254();
          goto LABEL_31;
        }
      }

      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }

    sub_100037268();
LABEL_31:
    sub_100037488();
    *(void *)(v12 + v31) |= v32;
    uint64_t v34 = (void *)(*(void *)(v6 + 48) + 16 * v33);
    *uint64_t v34 = v24;
    v34[1] = v23;
    *(void *)(*(void *)(v6 + 56) + 8 * v33) = v25;
    sub_10003770C();
    if (v11) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      goto LABEL_42;
    }
    if (v16 >= v38)
    {
      sub_100037230();
      int64_t v17 = v39;
      goto LABEL_35;
    }

    int64_t v17 = v39;
    ++v13;
    if (!v39[v16])
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v38) {
        goto LABEL_33;
      }
      if (!v39[v13]) {
        break;
      }
    }

LABEL_40:
  sub_100037230();
  *char v4 = v6;
}

  sub_100037230();
  *uint64_t v2 = v8;
  sub_1000371F0();
}

  sub_10001A044();
  unint64_t v43 = "Range requires lowerBound <= upperBound";
  uint64_t v44 = "Swift/Range.swift";
  uint64_t v45 = 39LL;
  uint64_t v46 = 17LL;
LABEL_42:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11LL, 2LL, v43, v45, 2LL, v44, v46);
  __break(1u);
  return result;
}

    unint64_t v11 = 0LL;
    int64_t v13 = 1;
    goto LABEL_53;
  }

  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

      swift_bridgeObjectRelease_n(v17, 2LL);
      swift_bridgeObjectRelease();
    }

    else
    {
      swift_bridgeObjectRelease();
      sub_10000E888((uint64_t)v49);
LABEL_29:
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(a1);
      uint64_t v20 = sub_100030CCC(v16, v17);
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
        v49[0] = a1;
        uint64_t v24 = a1[3];
        sub_10000D33C(&qword_1001C9DE8);
        _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v24);
        a1 = (void *)v49[0];
        swift_bridgeObjectRelease();
        _NativeDictionary._delete(at:)(v20, a1);
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }

      swift_bridgeObjectRelease_n(v17, 2LL);
    }
  }

  uint64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1LL))
  {
    __break(1u);
    goto LABEL_43;
  }

  if (v12 >= v50) {
    goto LABEL_41;
  }
  int64_t v13 = *(void *)(v46 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_21;
  }
  uint64_t v9 = v12 + 1;
  if (v12 + 1 >= v50) {
    goto LABEL_41;
  }
  int64_t v13 = *(void *)(v46 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  uint64_t v9 = v12 + 2;
  if (v12 + 2 >= v50) {
    goto LABEL_41;
  }
  int64_t v13 = *(void *)(v46 + 8 * v9);
  if (v13) {
    goto LABEL_21;
  }
  uint64_t v9 = v12 + 3;
  if (v12 + 3 >= v50) {
    goto LABEL_41;
  }
  int64_t v13 = *(void *)(v46 + 8 * v9);
  if (v13)
  {
LABEL_21:
    uint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_22;
  }

  unint64_t v14 = v12 + 4;
  if (v14 >= v50)
  {
LABEL_41:
    swift_release(a2);

    return (uint64_t)a1;
  }

  int64_t v13 = *(void *)(v46 + 8 * v14);
  if (v13)
  {
    uint64_t v9 = v14;
    goto LABEL_21;
  }

  while (1)
  {
    uint64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v9 >= v50) {
      goto LABEL_41;
    }
    int64_t v13 = *(void *)(v46 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }

  __break(1u);
}

  __break(1u);
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

void sub_10003264C(uint64_t a1, char a2)
{
  char v4 = v2;
  sub_100037328();
  sub_10000D33C(&qword_1001C9DC8);
  uint64_t v6 = sub_1000374E4();
  if (v3[2])
  {
    sub_1000373D0();
    char v36 = v9;
    if (v7 < 64) {
      uint64_t v10 = ~(-1LL << v7);
    }
    else {
      uint64_t v10 = -1LL;
    }
    uint64_t v11 = v10 & v8;
    int64_t v35 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    sub_10000DFF4();
    int64_t v13 = 0LL;
    if (!v11) {
      goto LABEL_7;
    }
LABEL_6:
    sub_10003782C();
    for (int64_t i = v14 | (v13 << 6); ; int64_t i = v18 + (v13 << 6))
    {
      uint64_t v19 = (uint64_t *)(v3[6] + 16 * i);
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = (_OWORD *)(v3[7] + 32 * i);
      if ((a2 & 1) != 0)
      {
        sub_10000DA58(v22, v38);
      }

      else
      {
        sub_10000DA1C((uint64_t)v22, (uint64_t)v38);
        sub_100020BB4();
      }

      Hasher.init(_seed:)(v37, *(void *)(v6 + 40));
      String.hash(into:)(v37, v21, v20);
      unint64_t v23 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v6 + 32));
      if (((-1LL << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) == 0)
      {
        sub_1000372A0();
        while (1)
        {
          sub_1000376F8();
          if (v27)
          {
            if ((v24 & 1) != 0) {
              break;
            }
          }

          if (v25 == v26) {
            uint64_t v25 = 0LL;
          }
          if (*(void *)(v12 + 8 * v25) != -1LL)
          {
            sub_100037254();
            goto LABEL_32;
          }
        }

        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }

      sub_100037268();
LABEL_32:
      sub_100037488();
      *(void *)(v12 + v28) |= v29;
      uint64_t v31 = (void *)(*(void *)(v6 + 48) + 16 * v30);
      *uint64_t v31 = v21;
      v31[1] = v20;
      sub_10000DA58(v38, (_OWORD *)(*(void *)(v6 + 56) + 32 * v30));
      sub_10003770C();
      if (v11) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1LL)) {
        goto LABEL_41;
      }
      if (v16 >= v35) {
        goto LABEL_34;
      }
      ++v13;
      if (!v36[v16])
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v35) {
          goto LABEL_34;
        }
        if (!v36[v13])
        {
          int64_t v17 = v16 + 2;
          if (v17 >= v35)
          {
LABEL_34:
            sub_100037230();
            char v4 = v2;
            if ((a2 & 1) != 0)
            {
              sub_100037240();
              if (v33 != v34) {
                *char v36 = -1LL << v32;
              }
              else {
                sub_100149C08(0LL, (unint64_t)(v32 + 63) >> 6, v36);
              }
              _OWORD v3[2] = 0LL;
            }

            break;
          }

          if (!v36[v17])
          {
            while (1)
            {
              int64_t v13 = v17 + 1;
              if (__OFADD__(v17, 1LL)) {
                goto LABEL_42;
              }
              if (v13 >= v35) {
                goto LABEL_34;
              }
              ++v17;
              if (v36[v13]) {
                goto LABEL_18;
              }
            }
          }

          int64_t v13 = v17;
        }
      }

void sub_1000328A4()
{
  uint64_t v45 = v1;
  uint64_t v46 = v2;
  char v3 = v0;
  int v5 = v4;
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v0;
  sub_10000D33C(&qword_1001C9E68);
  uint64_t v11 = sub_1000374CC();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    char v40 = v3;
    int64_t v13 = 0LL;
    uint64_t v14 = *(void *)(v10 + 64);
    uint64_t v43 = v10 + 64;
    uint64_t v15 = 1LL << *(_BYTE *)(v10 + 32);
    if (v15 < 64) {
      uint64_t v16 = ~(-1LL << v15);
    }
    else {
      uint64_t v16 = -1LL;
    }
    uint64_t v17 = v16 & v14;
    int64_t v42 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v18 = v11 + 64;
    int v41 = v5;
    uint64_t v19 = 16LL;
    if ((v5 & 1) != 0) {
      uint64_t v19 = 32LL;
    }
    uint64_t v44 = v19;
    if (!v17) {
      goto LABEL_9;
    }
LABEL_8:
    sub_10003782C();
    for (int64_t i = v20 | (v13 << 6); ; int64_t i = v24 + (v13 << 6))
    {
      uint64_t v25 = *(void *)(*(void *)(v10 + 48) + 8 * i);
      uint64_t v26 = *(void *)(v7 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + v44))(v9, *(void *)(v10 + 56) + v26 * i, v6);
      unint64_t v27 = static Hasher._hash(seed:_:)(*(void *)(v12 + 40), v25) & ~(-1LL << *(_BYTE *)(v12 + 32));
      if (((-1LL << v27) & ~*(void *)(v18 + 8 * (v27 >> 6))) == 0)
      {
        sub_1000372A0();
        while (1)
        {
          sub_1000376F8();
          if (v31)
          {
            if ((v28 & 1) != 0) {
              break;
            }
          }

          if (v29 == v30) {
            uint64_t v29 = 0LL;
          }
          if (*(void *)(v18 + 8 * v29) != -1LL)
          {
            sub_100037254();
            goto LABEL_31;
          }
        }

        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }

      sub_100037268();
LABEL_31:
      sub_100037488();
      *(void *)(v18 + v32) |= v33;
      *(void *)(*(void *)(v12 + 48) + 8 * v34) = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(*(void *)(v12 + 56) + v26 * v34, v9, v6);
      ++*(void *)(v12 + 16);
      if (v17) {
        goto LABEL_8;
      }
LABEL_9:
      int64_t v22 = v13 + 1;
      if (__OFADD__(v13, 1LL)) {
        goto LABEL_42;
      }
      if (v22 >= v42) {
        goto LABEL_33;
      }
      ++v13;
      if (!*(void *)(v43 + 8 * v22))
      {
        int64_t v13 = v22 + 1;
        if (v22 + 1 >= v42) {
          goto LABEL_33;
        }
        if (!*(void *)(v43 + 8 * v13))
        {
          int64_t v23 = v22 + 2;
          if (v23 >= v42)
          {
LABEL_33:
            if ((v41 & 1) == 0)
            {
              sub_100037230();
              char v3 = v40;
              goto LABEL_40;
            }

            sub_100037240();
            if (v37 != v38) {
              *int64_t v35 = -1LL << v36;
            }
            else {
              sub_100037654(v35, v36);
            }
            char v3 = v40;
            *(void *)(v10 + swift_weakDestroy(v0 + 16) = 0LL;
            break;
          }

          if (!*(void *)(v43 + 8 * v23))
          {
            while (1)
            {
              int64_t v13 = v23 + 1;
              if (__OFADD__(v23, 1LL)) {
                goto LABEL_43;
              }
              if (v13 >= v42) {
                goto LABEL_33;
              }
              ++v23;
              if (*(void *)(v43 + 8 * v13)) {
                goto LABEL_20;
              }
            }
          }

          int64_t v13 = v23;
        }
      }

void sub_100032B38()
{
  uint64_t v2 = v0;
  char v4 = v3;
  sub_100037328();
  sub_10003786C(v5, v6, v7);
  uint64_t v8 = (Swift::Int *)sub_1000374E4();
  if (v1[2])
  {
    sub_1000373D0();
    uint64_t v36 = v0;
    char v37 = v11;
    if (v9 < 64) {
      uint64_t v12 = ~(-1LL << v9);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v13 = v12 & v10;
    int64_t v14 = (unint64_t)(v9 + 63) >> 6;
    sub_10000DFF4();
    int64_t v15 = 0LL;
    if (!v13) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = v23 + (v15 << 6))
    {
      uint64_t v24 = *(void **)(v1[6] + 8 * i);
      uint64_t v25 = *(void *)(v1[7] + 8 * i);
      if ((v4 & 1) == 0)
      {
        id v26 = v24;
        swift_retain(v25);
      }

      NSObject._rawHashValue(seed:)(v8[5]);
      sub_100037578();
      if (v27)
      {
        sub_1000372A0();
        while (1)
        {
          sub_1000376F8();
          if (v27)
          {
            if ((v29 & 1) != 0) {
              break;
            }
          }

          if (v30 == v31) {
            uint64_t v30 = 0LL;
          }
          if (v8[v30 + 8] != -1)
          {
            sub_100037254();
            goto LABEL_31;
          }
        }

        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }

      sub_100037268();
LABEL_31:
      sub_10003749C(v28);
      *(void *)(v8[6] + 8 * v32) = v24;
      *(void *)(v8[7] + 8 * v32) = v25;
      sub_10003770C();
      if (v13) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v15 + 1;
      if (__OFADD__(v15, 1LL)) {
        goto LABEL_42;
      }
      if (v18 >= v14) {
        break;
      }
      uint64_t v19 = v37;
      ++v15;
      if (!v37[v18])
      {
        int64_t v15 = v18 + 1;
        if (v18 + 1 >= v14) {
          goto LABEL_33;
        }
        if (!v37[v15])
        {
          int64_t v20 = v18 + 2;
          if (v20 >= v14)
          {
LABEL_33:
            sub_100037230();
            uint64_t v2 = v36;
            if ((v4 & 1) == 0) {
              goto LABEL_40;
            }
            goto LABEL_36;
          }

          if (!v37[v20])
          {
            while (1)
            {
              int64_t v15 = v20 + 1;
              if (__OFADD__(v20, 1LL)) {
                goto LABEL_43;
              }
              if (v15 >= v14) {
                goto LABEL_33;
              }
              ++v20;
              if (v37[v15]) {
                goto LABEL_18;
              }
            }
          }

          int64_t v15 = v20;
        }
      }

uint64_t sub_100032D10(uint64_t a1, uint64_t a2)
{
  return sub_100033128(a1, a2, &unk_1001C9DD0, &qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
}

uint64_t sub_100032D2C(uint64_t a1, uint64_t a2)
{
  return sub_10003354C(a1, a2, &unk_1001C9E40, &unk_1001C8BB0);
}

uint64_t sub_100032D40(uint64_t a1, uint64_t a2)
{
  return sub_10003354C(a1, a2, &unk_1001C9E50, &unk_1001C8BA8);
}

uint64_t sub_100032D54()
{
  if ((v0 & 1) == 0) {
    return 0LL;
  }
  sub_100037238();
  sub_1000370C4();
  int v2 = sub_10000D33C(&qword_1001C9DE8);
  sub_100037104(v2, v3, v4, v5, v6, v7, v8, v9, v12, v13);
  sub_100037410(*(void *)(v14 + 48) + 16 * v1);
  uint64_t v10 = *(void *)(*(void *)(v14 + 56) + 16 * v1);
  _NativeDictionary._delete(at:)(v1, v14);
  sub_100037538();
  return v10;
}

uint64_t sub_100032DFC()
{
  if ((v0 & 1) == 0) {
    return 2LL;
  }
  sub_100037238();
  sub_1000370C4();
  int v2 = sub_10000D33C(&qword_1001C9E60);
  sub_100037104(v2, v3, v4, v5, v6, v7, v8, v9, v12, v13);
  sub_100037410(*(void *)(v14 + 48) + 16 * v1);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v14 + 56) + v1);
  sub_100037854();
  sub_100037544();
  return v10;
}

#error "100032EE4: call analysis failed (funcsize=41)"
#error "100032F84: call analysis failed (funcsize=40)"
double sub_100032FE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  Swift::Int v10;
  double result;
  uint64_t v12;
  int v3 = v2;
  swift_bridgeObjectRetain(*v3);
  int v6 = sub_100030DB0(a1, (uint64_t (*)(uint64_t))sub_10011217C, sub_100031178);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v12 = *v3;
    int v9 = *v3;
    *int v3 = 0x8000000000000000LL;
    uint64_t v10 = *(void *)(v9 + 24);
    sub_10000D33C((uint64_t *)&unk_1001C9DB0);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    sub_100019F60((__int128 *)(*(void *)(v12 + 56) + 40 * v6), a2);
    sub_10000D33C(&qword_1001C9A88);
    sub_100036F94();
    _NativeDictionary._delete(at:)(v6, v12);
    *int v3 = v12;
    swift_bridgeObjectRelease();
  }

  else
  {
    *(void *)(a2 + 32) = 0LL;
    Swift::Int result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = 0u;
  }

  return result;
}

uint64_t sub_10003310C(uint64_t a1, uint64_t a2)
{
  return sub_100033128(a1, a2, &unk_1001C9DF0, &qword_1001C9DF8, &OBJC_CLASS___NSURLSessionDownloadTask_ptr);
}

#error "100033184: call analysis failed (funcsize=50)"
double sub_1000331F0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  char v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  Swift::Int v10;
  double result;
  uint64_t v12;
  int v3 = v2;
  swift_bridgeObjectRetain(*v3);
  int v6 = sub_100030DB0(a1, (uint64_t (*)(uint64_t))sub_100039200, sub_100031588);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v12 = *v3;
    int v9 = *v3;
    *int v3 = 0x8000000000000000LL;
    uint64_t v10 = *(void *)(v9 + 24);
    sub_10000D33C(&qword_1001C9E18);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    sub_10000DA58((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    sub_100037024();
    _NativeDictionary._delete(at:)(v6, v12);
    *int v3 = v12;
    swift_bridgeObjectRelease();
  }

  else
  {
    Swift::Int result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }

  return result;
}

uint64_t sub_10003330C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3;
  swift_bridgeObjectRetain(*v4);
  unint64_t v8 = sub_100030CCC(a1, a2);
  char v10 = v9;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    uint64_t v15 = *v4;
    uint64_t v13 = *v4;
    *int v4 = 0x8000000000000000LL;
    Swift::Int v14 = *(void *)(v13 + 24);
    sub_10000D33C(&qword_1001C9CB0);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v14);
    swift_bridgeObjectRelease();
    sub_100036E10(*(void *)(v15 + 56) + 8 * v8, a3);
    sub_10000D33C(&qword_1001C9500);
    _NativeDictionary._delete(at:)(v8, v15);
    *int v4 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }

  else
  {
    *(void *)a3 = 0LL;
  }

  *(_BYTE *)(a3 + 8) = (v10 & 1) == 0;
  return result;
}

#error "100033494: call analysis failed (funcsize=55)"
uint64_t sub_10003351C(uint64_t a1)
{
  return sub_1000339DC(a1, &unk_1001C9D30, type metadata accessor for MercuryCacheUpdateCoordinator, &unk_1001C9D40);
}

uint64_t sub_100033538(uint64_t a1, uint64_t a2)
{
  return sub_10003354C(a1, a2, &unk_1001C9D90, &qword_1001C9D98);
}

#error "100033578: call analysis failed (funcsize=32)"
uint64_t sub_1000335CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  unint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  int v4 = v3;
  swift_bridgeObjectRetain(*v4);
  unint64_t v8 = sub_100030CCC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    uint64_t v17 = *v4;
    uint64_t v11 = *v4;
    *int v4 = 0x8000000000000000LL;
    uint64_t v12 = *(void *)(v11 + 24);
    sub_10000D33C(&qword_1001C9DE0);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v17 + 56);
    Swift::Int v14 = type metadata accessor for Date(0LL);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL))( a3,  v13 + *(void *)(*(void *)(v14 - 8) + 72LL) * v8,  v14);
    _NativeDictionary._delete(at:)(v8, v17);
    *int v4 = v17;
    swift_bridgeObjectRelease();
    return sub_10000D5C0(a3, 0LL, 1LL, v14);
  }

  else
  {
    unint64_t v16 = type metadata accessor for Date(0LL);
    return sub_10000D5C0(a3, 1LL, 1LL, v16);
  }

double sub_100033714@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = v2;
  swift_bridgeObjectRetain(*v3);
  uint64_t v6 = sub_100030ED0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v14 = *v3;
    uint64_t v9 = *v3;
    *int v3 = 0x8000000000000000LL;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_10000D33C(&qword_1001C9D18);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);

    uint64_t v11 = *(void *)(v14 + 56) + 40 * v6;
    __int128 v12 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v11;
    *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = v12;
    *(void *)(a2 + 32) = *(void *)(v11 + 32);
    type metadata accessor for Name(0LL);
    sub_10000D33C((uint64_t *)&unk_1001C9D20);
    sub_100036F04();
    _NativeDictionary._delete(at:)(v6, v14);
    *int v3 = v14;
    swift_bridgeObjectRelease();
  }

  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = 0u;
    *(void *)(a2 + 32) = 1LL;
  }

  return result;
}

uint64_t sub_100033840()
{
  int v2 = v1;
  int v3 = v0;
  char v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_100020BB4();
  sub_100037698();
  sub_10003771C();
  if ((v5 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native(*v3);
    sub_1000377D4();
    int v10 = sub_100037818();
    sub_100037524(v10, v11, v12, v13, v14, v15, v16, v17, v25, v26);
    sub_100037410(*(void *)(v27 + 48) + 16 * v7);
    uint64_t v18 = *(void *)(v27 + 56);
    uint64_t v19 = v2(0LL);
    sub_100036FD0(v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v7, v9, v2);
    _NativeDictionary._delete(at:)(v7, v27);
    sub_1000377E8();
    uint64_t v20 = v9;
    uint64_t v21 = 0LL;
    uint64_t v22 = 1LL;
    uint64_t v23 = v19;
  }

  else
  {
    v2(0LL);
    uint64_t v20 = sub_1000378B4();
  }

  return sub_10000D5C0(v20, v21, v22, v23);
}

uint64_t sub_100033930(uint64_t a1, uint64_t a2)
{
  return sub_100033944(a1, a2, &unk_1001C9D78, type metadata accessor for Worker);
}

#error "100033970: call analysis failed (funcsize=31)"
uint64_t sub_1000339C0(uint64_t a1)
{
  return sub_1000339DC(a1, &unk_1001C9D58, &type metadata accessor for AnyCancellable, &unk_1001C9D60);
}

#error "100033AFC: call analysis failed (funcsize=98)"
#error "100033C90: call analysis failed (funcsize=96)"
uint64_t sub_100033D10(uint64_t a1, uint64_t a2)
{
  return sub_100033944(a1, a2, &unk_1001C9CF0, &type metadata accessor for OSSignpostIntervalState);
}

#error "100033D5C: call analysis failed (funcsize=34)"
#error "100033E04: call analysis failed (funcsize=40)"
uint64_t sub_100033E64( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10)
{
  return sub_1000344AC(a1, a2, a3, (uint64_t)&unk_1001C9DD0, (uint64_t)sub_10003491C, a6, a7, a8, a9, a10);
}

uint64_t sub_100033E78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1000344AC(a1, a2, a3, (uint64_t)&unk_1001C9E40, (uint64_t)sub_100034590, a6, a7, a8, a9, a10);
}

uint64_t sub_100033E8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1000344AC(a1, a2, a3, (uint64_t)&unk_1001C9E50, (uint64_t)sub_100034590, a6, a7, a8, a9, a10);
}

#error "100033EF0: call analysis failed (funcsize=23)"
#error "100033F38: call analysis failed (funcsize=18)"
#error "100033F7C: call analysis failed (funcsize=17)"
uint64_t sub_100033F88( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10)
{
  return sub_100034504(a1, a2, a3, (uint64_t)sub_100034880, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_100033F94()
{
  uint64_t v14 = *v0;
  uint64_t *v0 = 0x8000000000000000LL;
  uint64_t v1 = sub_100037874();
  sub_100034998(v1, v2);
  uint64_t v11 = sub_100037184(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
  return sub_1000370E0(v11);
}

uint64_t sub_100033FE4(__int128 *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000LL;
  sub_100034A8C(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100034050()
{
  uint64_t v8 = sub_100037184(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11);
  return sub_1000370E0(v8);
}

uint64_t sub_100034088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  uint64_t v9 = *v3;
  *uint64_t v3 = 0x8000000000000000LL;
  sub_100034C9C(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100034104()
{
  uint64_t v0 = sub_1000371CC();
  unint64_t v3 = sub_100034DB8(v0, v1, v2);
  uint64_t v11 = sub_100037184(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
  return sub_1000370E0(v11);
}

uint64_t sub_10003413C(_OWORD *a1, double a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  uint64_t v7 = *v2;
  *char v2 = 0x8000000000000000LL;
  sub_100034EE4(a1, isUniquelyReferenced_nonNull_native, a2);
  *char v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000341B0(uint64_t a1, uint64_t a2)
{
  return sub_100034340(a1, a2, &unk_1001C9D30, &unk_1001C9D40, type metadata accessor for MercuryCacheUpdateCoordinator);
}

uint64_t sub_1000341CC()
{
  return sub_10003443C();
}

uint64_t sub_1000341D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  uint64_t v9 = *v3;
  *unint64_t v3 = 0x8000000000000000LL;
  sub_1000350F4(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v9;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100034254(uint64_t a1, void *a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  uint64_t v7 = *v2;
  *char v2 = 0x8000000000000000LL;
  sub_1000352D8(a1, a2, isUniquelyReferenced_nonNull_native);
  *char v2 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000342C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *v10;
  uint64_t *v10 = a10;
  return sub_100037154(v11);
}

uint64_t sub_100034310( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1000344AC(a1, a2, a3, (uint64_t)&unk_1001C9D78, (uint64_t)sub_1000356CC, a6, a7, a8, a9, a10);
}

uint64_t sub_100034324(uint64_t a1, uint64_t a2)
{
  return sub_100034340(a1, a2, &unk_1001C9D58, &unk_1001C9D60, &type metadata accessor for AnyCancellable);
}

#error "1000343AC: call analysis failed (funcsize=32)"
#error "10003441C: call analysis failed (funcsize=27)"
uint64_t sub_100034430()
{
  return sub_10003443C();
}

uint64_t sub_10003443C()
{
  char v2 = v1;
  sub_1000372CC();
  uint64_t v6 = *v0;
  uint64_t *v0 = 0x8000000000000000LL;
  uint64_t v3 = sub_10003768C();
  v2(v3);
  uint64_t v4 = *v0;
  uint64_t *v0 = v6;
  return sub_100037060(v4);
}

uint64_t sub_100034498( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1000344AC(a1, a2, a3, (uint64_t)&unk_1001C9CF0, (uint64_t)sub_1000356CC, a6, a7, a8, a9, a10);
}

uint64_t sub_1000344AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v12 = v11;
  sub_1000372CC();
  uint64_t v13 = sub_100037360();
  v12(v13);
  uint64_t v14 = *v10;
  uint64_t *v10 = a10;
  return sub_100037154(v14);
}

uint64_t sub_1000344F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100034504(a1, a2, a3, (uint64_t)sub_100035750, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_100034504( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  sub_1000372CC();
  sub_1000372E4();
  v12(v18, v16, v14);
  uint64_t v19 = *v10;
  uint64_t *v10 = a10;
  return sub_100037060(v19);
}

uint64_t sub_100034558()
{
  uint64_t v0 = sub_1000371CC();
  sub_100035870(v0, v1, v2);
  uint64_t v11 = sub_100037184(v3, v4, v5, v6, v7, v8, v9, v10, v13, v14);
  return sub_1000370E0(v11);
}

void sub_100034590()
{
  if (v8)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  sub_10003743C();
  if (sub_1000370F0())
  {
    sub_10003720C();
    sub_1000373C0();
    if (!v10) {
      goto LABEL_10;
    }
    uint64_t v3 = v9;
  }

  if ((v4 & 1) != 0)
  {
    uint64_t v11 = *(void *)(*(void *)v2 + 56LL);
    swift_bridgeObjectRelease(*(void *)(v11 + 8 * v3));
    *(void *)(v11 + 8 * v3) = v0;
    sub_10000DD84();
  }

  else
  {
    sub_1000374BC();
    sub_100035A64(v12, v13, v14, v15, v16);
    sub_100037098(v1);
  }

void sub_100034620()
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100037840(v5, v6, v7);
  sub_100030CCC(v8, v9);
  sub_1000370B0();
  if (v12)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  uint64_t v13 = v10;
  char v14 = v11;
  sub_10000D33C(&qword_1001C9DE8);
  if (sub_1000374FC())
  {
    sub_100037634();
    sub_1000373C0();
    if (!v16) {
      goto LABEL_10;
    }
    uint64_t v13 = v15;
  }

  if ((v14 & 1) != 0)
  {
    uint64_t v17 = (void *)(*(void *)(*(void *)v1 + 56LL) + 16 * v13);
    swift_bridgeObjectRelease(v17[1]);
    *uint64_t v17 = v2;
    v17[1] = v0;
    sub_10000DD84();
  }

  else
  {
    sub_1000375EC();
    sub_10003596C(v18, v19, v20, v21, v0, v22);
    sub_100037098(v4);
  }

uint64_t sub_1000346DC(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100030CCC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v16 = v11;
  char v17 = v12;
  sub_10000D33C(&qword_1001C9E60);
  uint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_100030CCC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }

  unint64_t v16 = result;
LABEL_5:
  uint64_t v20 = *v5;
  if ((v17 & 1) != 0)
  {
    *(_BYTE *)(v20[7] + vswift_weakDestroy(v0 + 16) = a1 & 1;
  }

  else
  {
    sub_1000359B8(v16, a2, a3, a1 & 1, v20);
    return swift_bridgeObjectRetain(a3);
  }

  return result;
}

_OWORD *sub_1000347EC()
{
  if (v5)
  {
    __break(1u);
LABEL_9:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }

  char v6 = v4;
  sub_10000D33C(&qword_1001C9CC0);
  if (sub_1000370F0())
  {
    sub_10003720C();
    sub_100037644();
    if (!v7) {
      goto LABEL_9;
    }
  }

  if ((v6 & 1) != 0)
  {
    uint64_t v8 = (_OWORD *)sub_1000375FC();
    return sub_1000373E8(v8, v9);
  }

  else
  {
    sub_1000374BC();
    sub_100035A00(v11, v12, v13, v14, v15);
    return (_OWORD *)sub_1000373FC(v0);
  }

void sub_100034880()
{
  if (v9)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  BOOL v10 = v7;
  char v11 = v8;
  sub_10000D33C(&qword_1001C8BF0);
  BOOL v12 = sub_1000370F0();
  if (v12)
  {
    sub_10003720C();
    sub_1000373C0();
    if (!v16) {
      goto LABEL_10;
    }
    BOOL v10 = v12;
  }

  if ((v11 & 1) != 0)
  {
    sub_1000377C8(v12, v13, v14, v15, *v3);
    *(void *)(v1 + 8 * v10) = v0;
    sub_10000DE10();
  }

  else
  {
    sub_1000374BC();
    sub_100035A64(v17, v18, v19, v20, v21);
    sub_1000373FC(v2);
  }

void sub_100034910()
{
}

void sub_10003491C()
{
  if (v8)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  sub_10003743C();
  BOOL v9 = sub_1000370F0();
  if (v9)
  {
    sub_10003720C();
    sub_1000373C0();
    if (!v13) {
      goto LABEL_10;
    }
    BOOL v3 = v9;
  }

  uint64_t v14 = *v2;
  if ((v4 & 1) != 0)
  {
    sub_1000377C8(v9, v10, v11, v12, v14);
    *(void *)(v1 + 8 * sub_100037074(v1, v2, v3) = v0;
    sub_10000DD84();
  }

  else
  {
    uint64_t v15 = sub_1000377F4(v9, v10, v11, v12, v14);
    sub_100037098(v15);
  }

void sub_100034998(uint64_t a1, uint64_t a2)
{
  if (v7)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return;
  }

  unint64_t v8 = v5;
  char v9 = v6;
  sub_10000D33C(qword_1001C9918);
  if (sub_100037510())
  {
    sub_100030D24(a2);
    sub_100037644();
    if (!v11) {
      goto LABEL_10;
    }
    unint64_t v8 = v10;
  }

  uint64_t v12 = *v2;
  if ((v9 & 1) != 0)
  {
    char v13 = (_OWORD *)sub_1000375FC();
    sub_10000DA58(v13, v14);
  }

  else
  {
    sub_10002C644(a2, (uint64_t)v15);
    sub_100035A7C(v8, (uint64_t)v15, a1, v12);
  }

uint64_t sub_100034A8C(__int128 *a1, uint64_t a2, char a3)
{
  char v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  uint64_t v9 = sub_100030DB0(a2, (uint64_t (*)(uint64_t))sub_10011217C, sub_100031178);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  sub_10000D33C((uint64_t *)&unk_1001C9DB0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  uint64_t v16 = sub_100030DB0(a2, (uint64_t (*)(uint64_t))sub_10011217C, sub_100031178);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for ScheduleInfo.CodingPropertyKey);
    __break(1u);
    return result;
  }

  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if ((v15 & 1) == 0) {
    return sub_100035AC0(v14, a2, a1, v18);
  }
  uint64_t v19 = (void *)(v18[7] + 40 * v14);
  sub_10000D3A0(v19);
  return sub_100019F60(a1, (uint64_t)v19);
}

void sub_100034BB4()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100030DB0(v1, (uint64_t (*)(uint64_t))sub_100039200, sub_100031588);
  sub_1000370B0();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v8 = v5;
  char v9 = v6;
  sub_10000D33C(&qword_1001C9E18);
  if (!sub_100037510()) {
    goto LABEL_5;
  }
  uint64_t v10 = sub_100030DB0(v2, (uint64_t (*)(uint64_t))sub_100039200, sub_100031588);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&unk_1001A96B0);
    __break(1u);
    return;
  }

  unint64_t v8 = v10;
LABEL_5:
  if ((v9 & 1) != 0)
  {
    BOOL v12 = (_OWORD *)sub_1000375FC();
    sub_1000373E8(v12, v13);
  }

  else
  {
    sub_100035B28(v8, v2, v4, *v0);
  }

void sub_100034C9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100030CCC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v16 = v11;
  char v17 = v12;
  sub_10000D33C(&qword_1001C9CB0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_100030CCC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if ((v17 & 1) != 0)
  {
    sub_100036EDC(a1, v20[7] + 8 * v16, &qword_1001C9500);
  }

  else
  {
    sub_100035B58(v16, a2, a3, a1, v20);
    swift_bridgeObjectRetain(a3);
  }

unint64_t sub_100034DB8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  uint64_t v9 = sub_100030E20(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  sub_10000D33C(&qword_1001C9E10);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  uint64_t v16 = sub_100030E20(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&unk_1001A8968);
    __break(1u);
    return result;
  }

  unint64_t v14 = v16;
LABEL_5:
  unint64_t v18 = *v4;
  if ((v15 & 1) == 0) {
    return sub_100035BC0(v14, a2, a1, v18);
  }
  uint64_t v19 = v18[7] + 56 * v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  __int128 v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
  *(_OWORD *)(v19 + swift_weakDestroy(v0 + 16) = v21;
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(v19 + 48) = *(void *)(a1 + 48);
  return result;
}

_OWORD *sub_100034EE4(_OWORD *a1, char a2, double a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_100030E6C(a3);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  sub_10000D33C(&qword_1001C9CB8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a2 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_100030E6C(a3);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    unint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Double);
    __break(1u);
    return result;
  }

  unint64_t v14 = v16;
LABEL_5:
  unint64_t v18 = *v4;
  if ((v15 & 1) == 0) {
    return sub_100035C20(v14, a1, v18, a3);
  }
  uint64_t v19 = (void *)(v18[7] + 32 * v14);
  sub_10000D3A0(v19);
  return sub_10000DA58(a1, v19);
}

void sub_100034FE4()
{
}

id sub_100034FF0(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = (void *)*v3;
  uint64_t v8 = sub_100030ED0((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v9 & 1) == 0;
  Swift::Int v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v13 = v8;
  char v14 = v9;
  sub_10000D33C((uint64_t *)&unk_1001C9E30);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v12)) {
    goto LABEL_5;
  }
  uint64_t v15 = sub_100030ED0((uint64_t)a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    type metadata accessor for AMSBagKey(0LL);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
    __break(1u);
    return result;
  }

  unint64_t v13 = v15;
LABEL_5:
  char v17 = *v4;
  if ((v14 & 1) != 0)
  {
    uint64_t v18 = v17[7];
    id result = (id)swift_unknownObjectRelease(*(void *)(v18 + 8 * v13));
    *(void *)(v18 + 8 * v13) = a1;
  }

  else
  {
    sub_100035C88(v13, (uint64_t)a2, a1, v17);
    return a2;
  }

  return result;
}

void sub_1000350F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100030CCC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v16 = v11;
  char v17 = v12;
  sub_10000D33C(&qword_1001C9DE0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_100030CCC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if ((v17 & 1) != 0)
  {
    uint64_t v21 = v20[7];
    uint64_t v22 = type metadata accessor for Date(0LL);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40LL))( v21 + *(void *)(*(void *)(v22 - 8) + 72LL) * v16,  a1,  v22);
  }

  else
  {
    sub_100035CCC(v16, a2, a3, a1, v20);
    swift_bridgeObjectRetain(a3);
  }

void sub_10003521C()
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_100037840(v5, v6, v3);
  sub_100030F58(v7);
  sub_1000370B0();
  if (v10)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
    __break(1u);
    return;
  }

  uint64_t v11 = v8;
  char v12 = v9;
  sub_10000D33C((uint64_t *)&unk_1001C9E70);
  if (sub_1000370F0())
  {
    sub_100030F58(v4);
    sub_100037644();
    if (!v14) {
      goto LABEL_10;
    }
    uint64_t v11 = v13;
  }

  if ((v12 & 1) != 0)
  {
    Swift::Int v15 = (void *)(*(void *)(*(void *)v1 + 56LL) + 16 * v11);
    swift_bridgeObjectRelease();
    *Swift::Int v15 = v2;
    v15[1] = v0;
    sub_10000DE10();
  }

  else
  {
    sub_1000374BC();
    sub_100035D5C(v16, v17, v18, v19, v20);
  }

void sub_1000352D8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  uint64_t v8 = sub_100030ED0((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v9 & 1) == 0;
  Swift::Int v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v13 = v8;
  char v14 = v9;
  sub_10000D33C(&qword_1001C9D18);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v12)) {
    goto LABEL_5;
  }
  uint64_t v15 = sub_100030ED0((uint64_t)a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    type metadata accessor for Name(0LL);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v19);
    __break(1u);
    return;
  }

  unint64_t v13 = v15;
LABEL_5:
  uint64_t v17 = *v4;
  if ((v14 & 1) != 0)
  {
    sub_100036EDC(a1, v17[7] + 40 * v13, (uint64_t *)&unk_1001C9D20);
  }

  else
  {
    sub_100035DA4(v13, (uint64_t)a2, a1, v17);
    id v18 = a2;
  }

void sub_1000353E8()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_100030CCC(v9, v5);
  sub_1000370B0();
  if (v12)
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v13 = v10;
  char v14 = v11;
  sub_10000D33C(v4);
  if (!sub_1000374FC()) {
    goto LABEL_5;
  }
  unint64_t v15 = sub_100037634();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  unint64_t v13 = v15;
LABEL_5:
  if ((v14 & 1) != 0)
  {
    uint64_t v17 = *(void *)(*(void *)v0 + 56LL);
    uint64_t v18 = v2(0LL);
    sub_100037004(v8, v17 + *(void *)(*(void *)(v18 - 8) + 72LL) * v13, v2);
    sub_10000DD84();
  }

  else
  {
    sub_1000375EC();
    sub_100035DFC(v19, v20, v21, v22, v23, v2);
    sub_100037098(v6);
  }

id sub_1000354C8( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v22 = v21;
  uint64_t v23 = v20;
  char v25 = v24;
  uint64_t v27 = v26;
  Swift::Int v28 = *v20;
  char v40 = (void *)v29;
  sub_100030EA0(v29);
  sub_1000370B0();
  if (v32)
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v33 = v30;
  char v34 = v31;
  sub_10000D33C(v22);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(v25 & 1, v28)) {
    goto LABEL_5;
  }
  unint64_t v30 = sub_100030EA0((uint64_t)v40);
  if ((v34 & 1) != (v35 & 1))
  {
LABEL_9:
    uint64_t v39 = sub_10000DE08(v30, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v39);
    __break(1u);
    return result;
  }

  unint64_t v33 = v30;
LABEL_5:
  uint64_t v36 = *v23;
  if ((v34 & 1) != 0)
  {
    uint64_t v37 = *(void *)(v36 + 56);
    id result = (id)swift_release(*(void *)(v37 + 8 * v33));
    *(void *)(v37 + 8 * v33) = v27;
  }

  else
  {
    sub_100035E94(v33, (uint64_t)v40, v27, v36);
    return v40;
  }

  return result;
}

void sub_1000355D0(uint64_t a1, Swift::UInt a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_100030F88(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  sub_10000D33C(&qword_1001C9D08);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_100030F88(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    type metadata accessor for AMSSubscriptionEntitlementsMediaType(0LL);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
    __break(1u);
    return;
  }

  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if ((v15 & 1) != 0)
  {
    uint64_t v19 = v18[7];

    *(void *)(v19 + 8 * v14) = a1;
  }

  else
  {
    sub_100035C88(v14, a2, a1, v18);
  }

void sub_1000356CC()
{
  if (v7)
  {
    __break(1u);
LABEL_10:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return;
  }

  sub_10003743C();
  BOOL v8 = sub_1000370F0();
  if (v8)
  {
    sub_10003720C();
    sub_1000373C0();
    if (!v12) {
      goto LABEL_10;
    }
    BOOL v2 = v8;
  }

  uint64_t v13 = *v1;
  if ((v3 & 1) != 0)
  {
    uint64_t v14 = *(void *)(v13 + 56);
    swift_release(*(void *)(v14 + 8 * v2));
    *(void *)(v14 + 8 * v2) = v0;
    sub_10000DD84();
  }

  else
  {
    uint64_t v15 = sub_1000377F4(v8, v9, v10, v11, v13);
    sub_100037098(v15);
  }

uint64_t sub_100035750(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100030CCC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v16 = v11;
  char v17 = v12;
  sub_10000D33C(&qword_1001C9CF8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_100030CCC(a2, a3);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_9:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
    return result;
  }

  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if ((v17 & 1) != 0)
  {
    uint64_t v21 = v20[7];
    uint64_t result = swift_unknownObjectRelease(*(void *)(v21 + 8 * v16));
    *(void *)(v21 + 8 * vswift_weakDestroy(v0 + 16) = a1;
  }

  else
  {
    sub_100035EC4(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain(a3);
  }

  return result;
}

void sub_100035864()
{
}

void sub_100035870(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  BOOL v8 = (void *)*v3;
  uint64_t v9 = sub_100030E20(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v14 = v9;
  char v15 = v10;
  sub_10000D33C(&qword_1001C9CD0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  uint64_t v16 = sub_100030E20(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&unk_1001A8968);
    __break(1u);
    return;
  }

  unint64_t v14 = v16;
LABEL_5:
  unint64_t v18 = *v4;
  if ((v15 & 1) != 0)
  {
    uint64_t v19 = v18[7];

    *(void *)(v19 + 8 * v14) = a1;
  }

  else
  {
    sub_100035F0C(v14, a2, a1, v18);
  }

unint64_t sub_10003596C( unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1LL << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  char v7 = (void *)(a6[7] + 16 * result);
  *char v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_1000359B8(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1LL << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

void sub_100035A00(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  sub_10000DA58(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v7 = a5[2];
  BOOL v8 = __OFADD__(v7, 1LL);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }

  else
  {
    a5[2] = v9;
    sub_100009044();
  }

void sub_100035A64(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (v7) {
    __break(1u);
  }
  else {
    sub_100037824(v5, v6);
  }
}

void sub_100035A7C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = sub_10003727C(a1, a2, a3, a4);
  uint64_t v7 = v6 + 40 * v5;
  __int128 v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  sub_10003776C(v5, v8, v10, v11);
  if (v13)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = v12;
    sub_100009044();
  }

uint64_t sub_100035AC0(unint64_t a1, char a2, __int128 *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  uint64_t result = sub_100019F60(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void sub_100035B28(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = sub_10003727C(a1, a2, a3, a4);
  *(_BYTE *)(v7 + v5) = v6;
  sub_10003776C(v5, v6, v8, v9);
  if (v11)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a4 + swift_weakDestroy(v0 + 16) = v10;
    sub_100009044();
  }

uint64_t sub_100035B58(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100036E10(a4, a5[7] + 8 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_100035BC0(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1LL << result;
  *(_BYTE *)(a4[6] + result) = a2;
  uint64_t v4 = a4[7] + 56 * result;
  __int128 v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + swift_weakDestroy(v0 + 16) = v5;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a3 + 32);
  *(void *)(v4 + 48) = *(void *)(a3 + 48);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_100035C20(unint64_t a1, _OWORD *a2, void *a3, double a4)
{
  a3[(a1 >> 6) + 8] |= 1LL << a1;
  *(double *)(a3[6] + 8 * a1) = a4;
  uint64_t result = sub_10000DA58(a2, (_OWORD *)(a3[7] + 32 * a1));
  uint64_t v6 = a3[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a3[2] = v8;
  }
  return result;
}

unint64_t sub_100035C88(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1LL << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1LL);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_100035CCC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))( v9 + *(void *)(*(void *)(v10 - 8) + 72LL) * a1,  a4,  v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1LL);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_100035D5C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1LL << result;
  *(void *)(a5[6] + 8 * result) = a2;
  BOOL v5 = (void *)(a5[7] + 16 * result);
  *BOOL v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_100035DA4(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1LL << result;
  *(void *)(a4[6] + 8 * result) = a2;
  uint64_t v4 = a4[7] + 40 * result;
  __int128 v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a3 + 32);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void sub_100035DFC( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void))
{
  a5[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v10 = (void *)(a5[6] + 16 * a1);
  void *v10 = a2;
  v10[1] = a3;
  uint64_t v11 = a5[7];
  uint64_t v12 = a6(0LL);
  sub_100036FD0(a4, v11 + *(void *)(*(void *)(v12 - 8) + 72LL) * a1, a6);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1LL);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
}

unint64_t sub_100035E94(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = sub_10003727C(a1, a2, a3, a4);
  *(void *)(v7 + 8 * result) = v6;
  *(void *)(*(void *)(v5 + 56) + 8 * result) = v8;
  uint64_t v9 = *(void *)(v5 + 16);
  BOOL v10 = __OFADD__(v9, 1LL);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(v5 + swift_weakDestroy(v0 + 16) = v11;
  }
  return result;
}

unint64_t sub_100035EC4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1LL << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_100035F0C(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1LL << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1LL);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

Swift::Int sub_100035F50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  uint64_t v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  Swift::Int v6 = sub_100008FE8();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_100035FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)(a2) && v5 == v6)
  {
    char v12 = 1;
  }

  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = sub_10000DECC();
    char v12 = sub_100025718(v9, v10, v11, v8);
  }

  sub_100009020();
  sub_100009070();
  return v12 & 1;
}

uint64_t sub_100036030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v106 = type metadata accessor for BadgingNotifier();
  uint64_t v107 = &off_1001A94C8;
  v105[0] = a3;
  v99[0] = 0x6369706F74LL;
  v99[1] = 0xE500000000000000LL;
  swift_retain(a3);
  AnyHashable.init<A>(_:)(v99);
  sub_10003079C((uint64_t)&v100, a1, &v103);
  sub_10000E854((uint64_t)&v100);
  if (!MetatypeMetadata)
  {
    sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
    goto LABEL_9;
  }

  if ((swift_dynamicCast(v99, &v103, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0)
  {
LABEL_9:
    uint64_t v14 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v15 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(v15 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
          + 2LL * *(void *)(v15 + 72),
            *(unsigned __int8 *)(v15 + 80) | 7LL);
    *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v102 = sub_10000D33C(&qword_1001C9C78);
    uint64_t v100 = a4;
    uint64_t v17 = *(void *)(a2 + 32);
    if (v17)
    {
      uint64_t v18 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain(*(void *)(a2 + 32));
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v19._uint64_t countAndFlagsBits = 0LL;
      v19._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      uint64_t v20 = v102;
      uint64_t v21 = sub_10000D37C(&v100, v102);
      uint64_t DynamicType = swift_getDynamicType(v21, v20, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&__int128 v103 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
      sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
      v23._uint64_t countAndFlagsBits = 5972026LL;
      v23._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&__int128 v103 = v18;
      *((void *)&v103 + 1) = v17;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
      sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
      uint64_t v24 = 93LL;
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v25._uint64_t countAndFlagsBits = 0LL;
      v25._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v26 = v102;
      uint64_t v27 = sub_10000D37C(&v100, v102);
      uint64_t v28 = swift_getDynamicType(v27, v26, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
      *(void *)&__int128 v103 = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
      sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
      uint64_t v24 = 58LL;
    }

    unint64_t v29 = 0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v24);
    LogMessage.init(stringInterpolation:)(v10);
    sub_10000D3A0(&v100);
    unint64_t v30 = 0xD00000000000002CLL;
    goto LABEL_19;
  }

  uint64_t v12 = v99[0];
  uint64_t v11 = v99[1];
  strcpy((char *)v99, "badgeID");
  v99[1] = 0xE700000000000000LL;
  AnyHashable.init<A>(_:)(v99);
  sub_10003079C((uint64_t)&v100, a1, &v103);
  sub_10000E854((uint64_t)&v100);
  if (MetatypeMetadata)
  {
    if ((swift_dynamicCast(v99, &v103, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      uint64_t v97 = v11;
      uint64_t v93 = v99[0];
      uint64_t v92 = v99[1];
      *(void *)&__int128 v103 = 0x64656C62616E65LL;
      *((void *)&v103 + 1) = 0xE700000000000000LL;
      AnyHashable.init<A>(_:)(&v103);
      sub_10003079C((uint64_t)&v100, a1, &v103);
      sub_10000E854((uint64_t)&v100);
      uint64_t v96 = v12;
      if (MetatypeMetadata)
      {
        if ((swift_dynamicCast(v99, &v103, (char *)&type metadata for Any + 8, &type metadata for Bool, 6LL) & 1) != 0)
        {
          char v13 = v99[0];
LABEL_25:
          uint64_t v94 = sub_10000D33C((uint64_t *)&unk_1001C9C80);
          uint64_t v49 = swift_allocObject(v94, 176LL, 7LL);
          __int128 v95 = xmmword_100164230;
          *(_OWORD *)(v49 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
          uint64_t v100 = 0x64496567646162LL;
          unint64_t v101 = 0xE700000000000000LL;
          AnyHashable.init<A>(_:)(&v100);
          *(void *)(v49 + 96) = &type metadata for String;
          uint64_t v50 = v92;
          *(void *)(v49 + 72) = v93;
          *(void *)(v49 + 80) = v50;
          uint64_t v100 = 0x64656C62616E65LL;
          unint64_t v101 = 0xE700000000000000LL;
          AnyHashable.init<A>(_:)(&v100);
          *(void *)(v49 + 168) = &type metadata for Bool;
          *(_BYTE *)(v49 + 144) = v13;
          uint64_t v98 = Dictionary.init(dictionaryLiteral:)( v49,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
          v99[0] = 0xD000000000000012LL;
          v99[1] = 0x800000010016C2F0LL;
          AnyHashable.init<A>(_:)(v99);
          sub_10003079C((uint64_t)&v100, a1, &v103);
          sub_10000E854((uint64_t)&v100);
          if (MetatypeMetadata)
          {
            uint64_t v51 = sub_10000D33C(&qword_1001C8E58);
            if ((swift_dynamicCast(v99, &v103, (char *)&type metadata for Any + 8, v51, 6LL) & 1) != 0)
            {
              uint64_t v52 = v99[0];
              *(void *)&__int128 v103 = 0xD000000000000012LL;
              *((void *)&v103 + 1) = 0x800000010016C2F0LL;
              AnyHashable.init<A>(_:)(&v103);
              uint64_t MetatypeMetadata = (void *)v51;
              *(void *)&__int128 v103 = v52;
              sub_100030188((uint64_t)&v103, (uint64_t)&v100);
            }
          }

          else
          {
            sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
          }

          strcpy((char *)v99, "metricsEvent");
          BYTE5(v99[1]) = 0;
          HIWORD(v99[1]) = -5120;
          AnyHashable.init<A>(_:)(v99);
          sub_10003079C((uint64_t)&v100, a1, &v103);
          sub_10000E854((uint64_t)&v100);
          if (MetatypeMetadata)
          {
            uint64_t v53 = sub_10000D33C(&qword_1001C8E58);
            if ((swift_dynamicCast(v99, &v103, (char *)&type metadata for Any + 8, v53, 6LL) & 1) != 0)
            {
              uint64_t v54 = v99[0];
              *(void *)&__int128 v103 = 0x7363697274656DLL;
              *((void *)&v103 + 1) = 0xE700000000000000LL;
              AnyHashable.init<A>(_:)(&v103);
              uint64_t MetatypeMetadata = (void *)v53;
              *(void *)&__int128 v103 = v54;
              sub_100030188((uint64_t)&v103, (uint64_t)&v100);
            }
          }

          else
          {
            sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
          }

          uint64_t v55 = swift_allocObject(v94, 248LL, 7LL);
          *(_OWORD *)(v55 + swift_weakDestroy(v0 + 16) = xmmword_100164240;
          uint64_t v100 = 49LL;
          unint64_t v101 = 0xE100000000000000LL;
          AnyHashable.init<A>(_:)(&v100);
          *(void *)(v55 + 96) = &type metadata for Int;
          *(void *)(v55 + 72) = 35LL;
          uint64_t v100 = 50LL;
          unint64_t v101 = 0xE100000000000000LL;
          AnyHashable.init<A>(_:)(&v100);
          *(void *)(v55 + 168) = &type metadata for String;
          uint64_t v56 = v97;
          *(void *)(v55 + 144) = v96;
          *(void *)(v55 + 152) = v56;
          uint64_t v100 = 7565409LL;
          unint64_t v101 = 0xE300000000000000LL;
          AnyHashable.init<A>(_:)(&v100);
          uint64_t v57 = v98;
          *(void *)(v55 + 240) = sub_10000D33C(&qword_1001C8E58);
          *(void *)(v55 + 2swift_weakDestroy(v0 + 16) = v57;
          Dictionary.init(dictionaryLiteral:)( v55,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
          sub_10000DAA0(0LL, (unint64_t *)&unk_1001C9C90, &OBJC_CLASS___AMSPushPayload_ptr);
          id v58 = sub_100030C28();
          sub_10000D37C(v105, v106);
          LOBYTE(v55) = sub_1000378E8(v58);
          uint64_t v59 = sub_10000D33C(&qword_1001C9C70);
          uint64_t v60 = type metadata accessor for LogMessage(0LL);
          uint64_t v61 = swift_allocObject( v59,  ((*(unsigned __int8 *)(*(void *)(v60 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v60 - 8) + 80LL))
                + 2LL * *(void *)(*(void *)(v60 - 8) + 72LL),
                  *(unsigned __int8 *)(*(void *)(v60 - 8) + 80LL) | 7LL);
          *(_OWORD *)(v61 + swift_weakDestroy(v0 + 16) = v95;
          if ((v55 & 1) != 0)
          {
            uint64_t v102 = sub_10000D33C(&qword_1001C9C78);
            uint64_t v100 = a4;
            uint64_t v62 = *(void *)(a2 + 32);
            if (v62)
            {
              uint64_t v63 = *(void *)(a2 + 24);
              swift_bridgeObjectRetain(*(void *)(a2 + 32));
              LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
              v64._uint64_t countAndFlagsBits = 0LL;
              v64._object = (void *)0xE000000000000000LL;
              LogMessage.StringInterpolation.appendLiteral(_:)(v64);
              uint64_t v65 = v102;
              uint64_t v66 = sub_10000D37C(&v100, v102);
              uint64_t v67 = swift_getDynamicType(v66, v65, 1LL);
              uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
              *(void *)&__int128 v103 = v67;
              LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
              sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
              v68._uint64_t countAndFlagsBits = 5972026LL;
              v68._object = (void *)0xE300000000000000LL;
              LogMessage.StringInterpolation.appendLiteral(_:)(v68);
              uint64_t MetatypeMetadata = &type metadata for String;
              *(void *)&__int128 v103 = v63;
              *((void *)&v103 + 1) = v62;
              LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
              sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
              uint64_t v69 = 93LL;
            }

            else
            {
              LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
              v78._uint64_t countAndFlagsBits = 0LL;
              v78._object = (void *)0xE000000000000000LL;
              LogMessage.StringInterpolation.appendLiteral(_:)(v78);
              uint64_t v79 = v102;
              __int128 v80 = sub_10000D37C(&v100, v102);
              uint64_t v81 = swift_getDynamicType(v80, v79, 1LL);
              uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
              *(void *)&__int128 v103 = v81;
              LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
              sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
              uint64_t v69 = 58LL;
            }

            unint64_t v82 = 0xE100000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v69);
            LogMessage.init(stringInterpolation:)(v10);
            sub_10000D3A0(&v100);
            uint64_t v83 = LogMessage.init(stringLiteral:)(0xD000000000000021LL);
            if (qword_1001C7F80 != -1) {
              uint64_t v83 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
            }
            uint64_t v84 = static os_log_type_t.default.getter(v83);
          }

          else
          {
            uint64_t v102 = sub_10000D33C(&qword_1001C9C78);
            uint64_t v100 = a4;
            uint64_t v70 = *(void *)(a2 + 32);
            if (v70)
            {
              uint64_t v71 = *(void *)(a2 + 24);
              swift_bridgeObjectRetain(*(void *)(a2 + 32));
              LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
              v72._uint64_t countAndFlagsBits = 0LL;
              v72._object = (void *)0xE000000000000000LL;
              LogMessage.StringInterpolation.appendLiteral(_:)(v72);
              uint64_t v73 = v102;
              __int128 v74 = sub_10000D37C(&v100, v102);
              uint64_t v75 = swift_getDynamicType(v74, v73, 1LL);
              uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
              *(void *)&__int128 v103 = v75;
              LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
              sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
              v76._uint64_t countAndFlagsBits = 5972026LL;
              v76._object = (void *)0xE300000000000000LL;
              LogMessage.StringInterpolation.appendLiteral(_:)(v76);
              uint64_t MetatypeMetadata = &type metadata for String;
              *(void *)&__int128 v103 = v71;
              *((void *)&v103 + 1) = v70;
              LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
              sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
              uint64_t v77 = 93LL;
            }

            else
            {
              LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
              v85._uint64_t countAndFlagsBits = 0LL;
              v85._object = (void *)0xE000000000000000LL;
              LogMessage.StringInterpolation.appendLiteral(_:)(v85);
              uint64_t v86 = v102;
              uint64_t v87 = sub_10000D37C(&v100, v102);
              uint64_t v88 = swift_getDynamicType(v87, v86, 1LL);
              uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
              *(void *)&__int128 v103 = v88;
              LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
              sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
              uint64_t v77 = 58LL;
            }

            unint64_t v89 = 0xE100000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v77);
            LogMessage.init(stringInterpolation:)(v10);
            sub_10000D3A0(&v100);
            uint64_t v90 = LogMessage.init(stringLiteral:)(0xD00000000000001CLL);
            if (qword_1001C7F80 != -1) {
              uint64_t v90 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
            }
            uint64_t v84 = static os_log_type_t.error.getter(v90);
          }

          sub_1000BD1B0(v84, v61);
          swift_bridgeObjectRelease();

          return sub_10000D3A0(v105);
        }
      }

      else
      {
        sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
      }

      char v13 = 1;
      goto LABEL_25;
    }

    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRelease();
    sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
  }

  uint64_t v31 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v32 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v16 = swift_allocObject( v31,  ((*(unsigned __int8 *)(v32 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))
        + 2LL * *(void *)(v32 + 72),
          *(unsigned __int8 *)(v32 + 80) | 7LL);
  *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v102 = sub_10000D33C(&qword_1001C9C78);
  uint64_t v100 = a4;
  uint64_t v33 = *(void *)(a2 + 32);
  if (v33)
  {
    uint64_t v34 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain(*(void *)(a2 + 32));
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v35._uint64_t countAndFlagsBits = 0LL;
    v35._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v36 = v102;
    uint64_t v37 = sub_10000D37C(&v100, v102);
    uint64_t v38 = swift_getDynamicType(v37, v36, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&__int128 v103 = v38;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
    sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
    v39._uint64_t countAndFlagsBits = 5972026LL;
    v39._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    uint64_t MetatypeMetadata = &type metadata for String;
    *(void *)&__int128 v103 = v34;
    *((void *)&v103 + 1) = v33;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
    sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
    uint64_t v40 = 93LL;
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v41._uint64_t countAndFlagsBits = 0LL;
    v41._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v41);
    uint64_t v42 = v102;
    uint64_t v43 = sub_10000D37C(&v100, v102);
    uint64_t v44 = swift_getDynamicType(v43, v42, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata();
    *(void *)&__int128 v103 = v44;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
    sub_10000DA68((uint64_t)&v103, &qword_1001CAAD0);
    uint64_t v40 = 58LL;
  }

  unint64_t v45 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v40);
  LogMessage.init(stringInterpolation:)(v10);
  sub_10000D3A0(&v100);
  unint64_t v30 = 0xD000000000000025LL;
LABEL_19:
  uint64_t v46 = LogMessage.init(stringLiteral:)(v30);
  if (qword_1001C7F80 != -1) {
    uint64_t v46 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v47 = static os_log_type_t.error.getter(v46);
  sub_1000BD1B0(v47, v16);
  swift_bridgeObjectRelease();
  return sub_10000D3A0(v105);
}

uint64_t sub_100036E10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C9500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100036E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C9500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_100036EA0()
{
  unint64_t result = qword_1001C9CE0;
  if (!qword_1001C9CE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100164854, &unk_1001A8968);
    atomic_store(result, (unint64_t *)&qword_1001C9CE0);
  }

  return result;
}

void sub_100036EDC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_10003786C(a1, a2, a3);
  sub_100037470(v3);
  sub_100009044();
}

unint64_t sub_100036F04()
{
  unint64_t result = qword_1001C86C0;
  if (!qword_1001C86C0)
  {
    type metadata accessor for Name(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100163BA4, v1);
    atomic_store(result, (unint64_t *)&qword_1001C86C0);
  }

  return result;
}

unint64_t sub_100036F44()
{
  unint64_t result = qword_1001C9D50;
  if (!qword_1001C9D50)
  {
    uint64_t v1 = sub_10000DAA0(255LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1001C9D50);
  }

  return result;
}

unint64_t sub_100036F94()
{
  unint64_t result = qword_1001C9DC0;
  if (!qword_1001C9DC0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100168850, &type metadata for ScheduleInfo.CodingPropertyKey);
    atomic_store(result, (unint64_t *)&qword_1001C9DC0);
  }

  return result;
}

void sub_100036FD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = sub_10001A48C(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(v3, v4, v5);
  sub_100009044();
}

void sub_100037004(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = sub_10001A48C(a1, a2, a3);
  sub_100037470(v3);
  sub_100009044();
}

unint64_t sub_100037024()
{
  unint64_t result = qword_1001C9E20;
  if (!qword_1001C9E20)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165640, &unk_1001A96B0);
    atomic_store(result, (unint64_t *)&qword_1001C9E20);
  }

  return result;
}

uint64_t sub_100037060(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

unint64_t sub_100037074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100030CCC(a2, a3);
}

uint64_t sub_100037098(uint64_t a1)
{
  return swift_bridgeObjectRetain(a1);
}

  ;
}

void sub_1000370C4()
{
  void *v0 = 0x8000000000000000LL;
}

uint64_t sub_1000370E0(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

BOOL sub_1000370F0()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

BOOL sub_100037104(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

unint64_t sub_100037118(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + 8 * (result >> 6) + 64) |= 1LL << result;
  uint64_t v5 = (void *)(*(void *)(a5 + 48) + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(*(void *)(a5 + 56) + 8 * result) = a4;
  return result;
}

uint64_t sub_100037154(uint64_t a1)
{
  return swift_bridgeObjectRelease(a1);
}

  ;
}

uint64_t sub_100037184( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  uint64_t *v10 = a10;
  return result;
}

uint64_t sub_100037194()
{
  void *v0 = 0x8000000000000000LL;
  return sub_10000D33C(v1);
}

  ;
}

uint64_t sub_1000371CC()
{
  void *v0 = 0x8000000000000000LL;
  return v1;
}

  ;
}

unint64_t sub_10003720C()
{
  return sub_100030CCC(v1, v0);
}

  ;
}

uint64_t sub_100037230()
{
  return swift_release(v0);
}

uint64_t sub_100037238()
{
  return swift_isUniquelyReferenced_nonNull_native(*v0);
}

  ;
}

  ;
}

  ;
}

unint64_t sub_10003727C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1LL << result;
  return result;
}

  ;
}

uint64_t sub_1000372B4()
{
  return swift_bridgeObjectRetain(*v0);
}

uint64_t sub_1000372CC()
{
  return swift_isUniquelyReferenced_nonNull_native(*v0);
}

uint64_t sub_1000372D4()
{
  return swift_bridgeObjectRelease(v0);
}

void sub_1000372E4()
{
  void *v0 = 0x8000000000000000LL;
}

BOOL sub_100037300(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

BOOL sub_100037314(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

  ;
}

uint64_t sub_10003733C(uint64_t a1, uint64_t a2)
{
  return sub_10000DA1C(a1, a2);
}

unint64_t sub_100037344(uint64_t a1, uint64_t a2)
{
  return sub_100030CCC(a1, a2);
}

  ;
}

uint64_t sub_100037360()
{
  void *v0 = 0x8000000000000000LL;
  return v1;
}

  ;
}

uint64_t sub_1000373A0()
{
  return swift_bridgeObjectRetain(*v0);
}

  ;
}

  ;
}

_OWORD *sub_1000373E8(_OWORD *a1, _OWORD *a2)
{
  return sub_10000DA58(a1, a2);
}

uint64_t sub_1000373FC(uint64_t a1)
{
  return swift_bridgeObjectRetain(a1);
}

uint64_t sub_100037410@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 8));
}

void sub_100037418(uint64_t a1)
{
}

void *sub_100037420(uint64_t a1, ...)
{
  return Hasher.init(_seed:)((uint64_t *)va, *(void *)(v1 + 40));
}

unint64_t sub_10003742C()
{
  return sub_100030CCC(v1, v0);
}

uint64_t sub_10003743C()
{
  return sub_10000D33C(v0);
}

uint64_t sub_10003744C()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

uint64_t sub_100037470(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 40LL))(v1, v2, a1);
}

  ;
}

void sub_10003749C(unint64_t a1@<X8>)
{
  *(void *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << a1;
}

  ;
}

uint64_t sub_1000374CC()
{
  return static _DictionaryStorage.resize(original:capacity:move:)(v1, v0, v2);
}

uint64_t sub_1000374E4()
{
  return static _DictionaryStorage.resize(original:capacity:move:)(v1, v0, v2);
}

BOOL sub_1000374FC()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

BOOL sub_100037510()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1 & 1, v0);
}

BOOL sub_100037524(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v10, v11);
}

uint64_t sub_100037538()
{
  uint64_t v2 = *v0;
  uint64_t *v0 = v1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_100037544()
{
  uint64_t v2 = *v0;
  uint64_t *v0 = v1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_100037550@<X0>(uint64_t a1@<X8>)
{
  return sub_100149C08(0LL, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_100037564(uint64_t a1)
{
  if (a1 < 0) {
    return __CocoaDictionary.count.getter(a1);
  }
  else {
    return __CocoaDictionary.count.getter(a1 & 0xFFFFFFFFFFFFFF8LL);
  }
}

  ;
}

uint64_t sub_100037594()
{
  return _NativeDictionary._delete(at:)(v1, v0);
}

void sub_1000375A0()
{
  void *v0 = 0x8000000000000000LL;
}

uint64_t sub_1000375BC(uint64_t a1)
{
  return swift_retain(*(void *)(*(void *)(v1 + 56) + 8 * a1));
}

uint64_t sub_1000375CC(uint64_t a1)
{
  return *(void *)(v1 + 56) + 32 * a1;
}

_OWORD *sub_1000375DC()
{
  return sub_10000DA58((_OWORD *)(*(void *)(v0 + 56) + 32 * v2), v1);
}

  ;
}

uint64_t sub_1000375FC()
{
  return v0;
}

  ;
}

unint64_t sub_100037634()
{
  return sub_100030CCC(v1, v0);
}

  ;
}

uint64_t sub_100037654@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  return sub_100149C08(0LL, (unint64_t)(a2 + 63) >> 6, a1);
}

  ;
}

uint64_t sub_100037674()
{
  return swift_bridgeObjectRetain(*v0);
}

uint64_t sub_100037684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(a1, a2, a3, a4, 7LL);
}

uint64_t sub_10003768C()
{
  return v0;
}

unint64_t sub_100037698()
{
  return sub_100030CCC(v1, v0);
}

void sub_1000376A8()
{
  void *v0 = 0x8000000000000000LL;
}

void sub_1000376C0(uint64_t a1)
{
}

id sub_1000376C8(id a1)
{
  return a1;
}

unint64_t sub_1000376D8()
{
  return sub_100030CCC(v1, v0);
}

  ;
}

  ;
}

uint64_t sub_100037704()
{
  return v0(0LL);
}

void sub_10003770C()
{
}

uint64_t sub_10003771C()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

uint64_t sub_100037744()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100037754()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(*(void *)(*(void *)(v1 + 48) + 8 * v0));
}

uint64_t sub_100037760(uint64_t a1)
{
  return __CocoaDictionary.lookup(_:)(a1, v1);
}

_OWORD *sub_10003776C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  return sub_10000DA58(a3, (_OWORD *)(*(void *)(a4 + 56) + 32 * a1));
}

uint64_t sub_100037790(uint64_t a1)
{
  return swift_bridgeObjectRetain(*(void *)(*(void *)(v1 + 56) + 8 * a1));
}

id sub_10003779C(uint64_t a1)
{
  return *(id *)(*(void *)(v1 + 56) + 8 * a1);
}

uint64_t sub_1000377A8()
{
  return swift_unknownObjectRelease(v0);
}

unint64_t sub_1000377B4(uint64_t a1)
{
  return sub_100030D24(a1);
}

uint64_t sub_1000377BC(uint64_t a1, uint64_t a2)
{
  return _NativeDictionary._delete(at:)(a1, a2);
}

void sub_1000377C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1000377D4()
{
  void *v0 = 0x8000000000000000LL;
}

uint64_t sub_1000377E8()
{
  uint64_t v2 = *v1;
  uint64_t *v1 = v0;
  return swift_bridgeObjectRelease(v2);
}

uint64_t sub_1000377F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return v6;
}

uint64_t sub_100037818()
{
  return sub_10000D33C(v0);
}

void sub_100037824(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + ++*(void *)(v0 + 16) = a2;
}

  ;
}

uint64_t sub_100037840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_100037854()
{
  return _NativeDictionary._delete(at:)(v0, v1);
}

uint64_t sub_100037860(uint64_t a1, uint64_t a2)
{
  return _NativeDictionary._delete(at:)(a1, a2);
}

uint64_t sub_10003786C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10000D33C(a3);
}

uint64_t sub_100037874()
{
  return v0;
}

uint64_t sub_100037880()
{
  return _NativeDictionary._delete(at:)(v0, v1);
}

  ;
}

uint64_t sub_1000378A0()
{
  return type metadata accessor for Date(0LL);
}

  ;
}

uint64_t sub_1000378B4()
{
  return v0;
}

  ;
}

uint64_t sub_1000378DC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(v0);
}

BOOL sub_1000378E8(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_100037D2C(a1);
  uint64_t v7 = v6;
  if (v6)
  {
    unint64_t v30 = 0xD000000000000029LL;
    unint64_t v31 = 0x800000010016C390LL;
    String.append(_:)(*(Swift::String *)&v5);
    swift_bridgeObjectRelease();
    id v8 = [a1 payload];
    uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v8,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

    sub_100037C00(0xD000000000000029LL, 0x800000010016C390LL, v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v11 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v12 = swift_allocObject( v10,  ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
          + 2LL * *(void *)(v11 + 72),
            *(unsigned __int8 *)(v11 + 80) | 7LL);
    *(_OWORD *)(v12 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v32 = (void *)type metadata accessor for BadgingNotifier();
    unint64_t v30 = v2;
    uint64_t v13 = swift_retain(v2);
    id v14 = (id)AMSLogKey(v13);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      uint64_t v18 = v17;

      swift_bridgeObjectRetain(v18);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      sub_100037DD0();
      sub_100037DAC();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_100037D8C(MetatypeMetadata);
      sub_100037DE0();
      v20._uint64_t countAndFlagsBits = 5972026LL;
      v20._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      void v29[3] = &type metadata for String;
      v29[0] = v16;
      v29[1] = v18;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v29);
      sub_100037DE0();
      v21._uint64_t countAndFlagsBits = 93LL;
      v21._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      sub_100037DA0();
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      sub_100037DD0();
      sub_100037DAC();
      uint64_t v22 = swift_getMetatypeMetadata();
      sub_100037D8C(v22);
      sub_100037DE0();
      v23._uint64_t countAndFlagsBits = 58LL;
      v23._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      sub_100037DA0();
    }

    sub_10000D3A0(&v30);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(42LL, 1LL);
    v24._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v24._object = (void *)0x800000010016C3C0LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t v32 = &type metadata for String;
    unint64_t v30 = 0xD000000000000029LL;
    unint64_t v31 = 0x800000010016C390LL;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v30);
    sub_10000E888((uint64_t)&v30);
    v25._uint64_t countAndFlagsBits = 0LL;
    v25._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v26 = sub_100037DA0();
    if (qword_1001C7F80 != -1) {
      uint64_t v26 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v27 = static os_log_type_t.default.getter(v26);
    sub_1000BD1B0(v27, v12);
    swift_bridgeObjectRelease();
  }

  return v7 != 0;
}

void sub_100037C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = [(id)objc_opt_self(NSDistributedNotificationCenter) defaultCenter];
  id v5 = String._bridgeToObjectiveC()();
  sub_100037CA4((uint64_t)v5, 0LL, a3, 1, v4);
}

uint64_t type metadata accessor for BadgingNotifier()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd15BadgingNotifier);
}

void sub_100037CA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  [a5 postNotificationName:a1 object:a2 userInfo:isa deliverImmediately:a4 & 1];
}

uint64_t sub_100037D2C(void *a1)
{
  id v1 = [a1 clientIdentifier];
  if (!v1) {
    return 0LL;
  }
  unint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t sub_100037D8C(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 144) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 144);
}

uint64_t sub_100037DA0()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100037DAC()
{
  uint64_t v1 = *(void *)(v0 - 88);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 112), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

void sub_100037DD0()
{
  v0._uint64_t countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_100037DE0()
{
  return sub_10000E888(v0 - 144);
}

uint64_t type metadata accessor for BagProvider()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd11BagProvider);
}

uint64_t sub_100037E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v64 = 7955819LL;
  unint64_t v65 = 0xE300000000000000LL;
  sub_100038860();
  sub_1000387D4();
  uint64_t v9 = sub_100038858();
  if (!v72)
  {
    sub_10000E8FC();
    goto LABEL_11;
  }

  if ((sub_100038808(v9, v10, v11, (uint64_t)&type metadata for String) & 1) == 0)
  {
LABEL_11:
    uint64_t v21 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v22 = type metadata accessor for LogMessage(0LL);
    uint64_t v23 = swift_allocObject( v21,  ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v22 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v23 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v24 = sub_10000D33C(&qword_1001CA060);
    sub_100038870(v24);
    if (v2)
    {
      uint64_t v25 = *(void *)(a2 + 24);
      sub_10000DEB4();
      sub_10000DC34();
      sub_10000DC08();
      sub_1000387A0();
      uint64_t v26 = sub_10003881C();
      sub_1000387C4(v26);
      sub_10000E8FC();
      sub_10000DC14();
      Swift::String v72 = &type metadata for String;
      uint64_t v70 = v25;
      unint64_t v71 = v2;
      sub_10000DCE8();
      sub_10000E8FC();
      uint64_t v27 = 93LL;
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      sub_1000387A0();
      uint64_t v28 = sub_10003881C();
      sub_1000387C4(v28);
      sub_10000E8FC();
      uint64_t v27 = 58LL;
    }

    sub_10000DC4C(v27);
    sub_10000DC5C();
    sub_10000D3A0(&v66);
    uint64_t v29 = LogMessage.init(stringLiteral:)(0xD00000000000001ELL);
    if (qword_1001C7F80 != -1) {
      uint64_t v29 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v30 = static os_log_type_t.error.getter(v29);
    sub_1000BD1B0(v30, v23);
    return swift_bridgeObjectRelease();
  }

  uint64_t v62 = v64;
  unint64_t v63 = v65;
  uint64_t v64 = 0x7265746C6966LL;
  unint64_t v65 = 0xE600000000000000LL;
  sub_100038860();
  sub_1000387D4();
  sub_100038858();
  if (!v72)
  {
    sub_10000E8FC();
    goto LABEL_18;
  }

  uint64_t v61 = sub_10000D33C(&qword_1001C9798);
  if ((swift_dynamicCast(&v64, &v70, (char *)&type metadata for Any + 8, v61, 6LL) & 1) == 0)
  {
LABEL_18:
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v31 = sub_100038894();
    uint64_t v32 = sub_1000387E4(v31);
    *(_OWORD *)(v32 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v33 = sub_10000D33C(&qword_1001CA060);
    sub_100038870(v33);
    if (v2)
    {
      uint64_t v34 = *(void *)(a2 + 24);
      sub_10000DEB4();
      sub_10000DC34();
      sub_10000DC08();
      sub_1000387A0();
      uint64_t v35 = sub_10003881C();
      sub_1000387C4(v35);
      sub_10000E8FC();
      sub_10000DC14();
      Swift::String v72 = &type metadata for String;
      uint64_t v70 = v34;
      unint64_t v71 = v2;
      sub_10000DCE8();
      sub_10000E8FC();
      uint64_t v36 = 93LL;
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      sub_1000387A0();
      uint64_t v37 = sub_10003881C();
      sub_1000387C4(v37);
      sub_10000E8FC();
      uint64_t v36 = 58LL;
    }

    sub_10000DC4C(v36);
    sub_10000DC5C();
    sub_10000D3A0(&v66);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(43LL, 1LL);
    sub_100038838((uint64_t)"Skipping cached data for key: ");
    Swift::String v68 = (ValueMetadata *)&type metadata for String;
    sub_100038824();
    sub_10000E888((uint64_t)&v66);
    uint64_t v38 = 0x6966206F6E28202ELL;
    unint64_t v39 = 0xED0000297265746CLL;
    goto LABEL_28;
  }

  uint64_t v12 = v64;
  uint64_t v64 = 1635017060LL;
  unint64_t v65 = 0xE400000000000000LL;
  AnyHashable.init<A>(_:)(&v64);
  sub_1000387D4();
  sub_100038858();
  if (!v72)
  {
    sub_100020AB8();
    sub_10000E8FC();
LABEL_24:
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v40 = sub_100038894();
    uint64_t v32 = sub_1000387E4(v40);
    *(_OWORD *)(v32 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v41 = sub_10000D33C(&qword_1001CA060);
    sub_100038870(v41);
    if (v2)
    {
      uint64_t v42 = *(void *)(a2 + 24);
      sub_10000DEB4();
      sub_10000DC34();
      sub_10000DC08();
      sub_1000387A0();
      uint64_t v43 = sub_10003881C();
      sub_1000387C4(v43);
      sub_10000E8FC();
      sub_10000DC14();
      Swift::String v72 = &type metadata for String;
      uint64_t v70 = v42;
      unint64_t v71 = v2;
      sub_10000DCE8();
      sub_10000E8FC();
      uint64_t v44 = 93LL;
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      sub_1000387A0();
      uint64_t v45 = sub_10003881C();
      sub_1000387C4(v45);
      sub_10000E8FC();
      uint64_t v44 = 58LL;
    }

    sub_10000DC4C(v44);
    sub_10000DC5C();
    sub_10000D3A0(&v66);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(41LL, 1LL);
    sub_100038838((uint64_t)"Skipping cached data for key: ");
    Swift::String v68 = (ValueMetadata *)&type metadata for String;
    sub_100038824();
    sub_10000E888((uint64_t)&v66);
    uint64_t v38 = 0x6164206F6E28202ELL;
    unint64_t v39 = 0xEB00000000296174LL;
LABEL_28:
    LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v38);
    uint64_t v46 = sub_10000DC5C();
    if (qword_1001C7F80 != -1) {
      uint64_t v46 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v47 = static os_log_type_t.error.getter(v46);
    sub_1000BD1B0(v47, v32);
    return swift_bridgeObjectRelease();
  }

  uint64_t v13 = sub_10000D33C(&qword_1001C8E58);
  if ((sub_100038808(v13, v14, v15, v13) & 1) == 0)
  {
    sub_100020AB8();
    goto LABEL_24;
  }

  sub_100038880();
  uint64_t v70 = v16;
  unint64_t v71 = 0xE800000000000000LL;
  AnyHashable.init<A>(_:)(&v70);
  sub_1000387D4();
  uint64_t v17 = sub_100038858();
  if (!v72)
  {
    sub_10000E8FC();
    goto LABEL_33;
  }

  if (!sub_100038808(v17, v18, v19, (uint64_t)&type metadata for Double))
  {
LABEL_33:
    double v20 = 3600.0;
    goto LABEL_34;
  }

  double v20 = *(double *)&v64;
LABEL_34:
  Swift::String v68 = &type metadata for AMSFlags;
  unint64_t v69 = sub_100038728();
  LOBYTE(v66) = 0;
  char v49 = isFeatureEnabled(_:)(&v66);
  sub_10000D3A0(&v66);
  if ((v49 & 1) == 0)
  {
    id v54 = [(id)objc_opt_self(AMSEngagementClientData) loadFromDisk];
    v60[1] = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_10000DDF8();
    uint64_t v55 = sub_10000D33C((uint64_t *)&unk_1001C9C80);
    uint64_t v56 = swift_allocObject(v55, 248LL, 7LL);
    *(_OWORD *)(v56 + ++*(void *)(v0 + 16) = xmmword_100164240;
    sub_100038880();
    uint64_t v66 = v57;
    unint64_t v67 = 0xE800000000000000LL;
    sub_10003884C((uint64_t)&v66);
    id v58 = [objc_allocWithZone(NSNumber) initWithDouble:v20];
    *(void *)(v56 + 96) = sub_100038764();
    *(void *)(v56 + 72) = v58;
    uint64_t v66 = 0x7265746C6966LL;
    unint64_t v67 = 0xE600000000000000LL;
    sub_10003884C((uint64_t)&v66);
    *(void *)(v56 + 168) = v61;
    *(void *)(v56 + 144) = v12;
    uint64_t v66 = 7955819LL;
    unint64_t v67 = 0xE300000000000000LL;
    sub_10003884C((uint64_t)&v66);
    *(void *)(v56 + 240) = &type metadata for String;
    unint64_t v59 = v63;
    *(void *)(v56 + 2++*(void *)(v0 + 16) = v62;
    *(void *)(v56 + 224) = v59;
    Dictionary.init(dictionaryLiteral:)( v56,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    Dictionary._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }

  swift_bridgeObjectRelease();
  id v50 = [(id)objc_opt_self(AMSEngagementCache) sharedInstance];
  Date.init(timeIntervalSinceNow:)(v20);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  sub_10000DDF8();
  Class v52 = Dictionary._bridgeToObjectiveC()().super.isa;
  sub_100020AB8();
  Class v53 = Date._bridgeToObjectiveC()().super.isa;
  [v50 cacheResponse:isa filter:v52 expiration:v53];

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for CacheDataAction()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd15CacheDataAction);
}

unint64_t sub_100038728()
{
  unint64_t result = qword_1001CA068;
  if (!qword_1001CA068)
  {
    unint64_t result = swift_getWitnessTable(&unk_100166018, &type metadata for AMSFlags);
    atomic_store(result, (unint64_t *)&qword_1001CA068);
  }

  return result;
}

unint64_t sub_100038764()
{
  unint64_t result = qword_1001CD450;
  if (!qword_1001CD450)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSNumber);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001CD450);
  }

  return result;
}

uint64_t sub_1000387A0()
{
  uint64_t v1 = *(void *)(v0 - 144);
  unint64_t v2 = sub_10000D37C((void *)(v0 - 168), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_1000387C4(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 128);
}

void sub_1000387D4()
{
}

uint64_t sub_1000387E4(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + 2LL * *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t sub_100038808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(v5 - 184, v5 - 128, v4 + 8, a4, 6LL);
}

uint64_t sub_10003881C()
{
  return swift_getMetatypeMetadata();
}

uint64_t sub_100038824()
{
  uint64_t v1 = *(void *)(v0 - 192);
  *(void *)(v0 - 168) = *(void *)(v0 - 200);
  *(void *)(v0 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 168);
}

void sub_100038838(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v1);
}

uint64_t sub_10003884C(uint64_t a1)
{
  return AnyHashable.init<A>(_:)(a1);
}

uint64_t sub_100038858()
{
  return sub_10000E854(v0 - 168);
}

uint64_t sub_100038860()
{
  return AnyHashable.init<A>(_:)(v0 - 184);
}

uint64_t sub_100038870(uint64_t result)
{
  *(void *)(v2 - 144) = result;
  *(void *)(v2 - 168) = v1;
  return result;
}

  ;
}

uint64_t sub_100038894()
{
  return type metadata accessor for LogMessage(0LL);
}

uint64_t sub_1000388A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (int *)type metadata accessor for ContentInfo(0LL);
  uint64_t v6 = (void *)((char *)a2 + v5[9]);
  *uint64_t v6 = 0LL;
  v6[1] = 0LL;
  int v7 = sub_10004B5EC(a1);
  swift_bridgeObjectRelease();
  sub_10003AD98(0LL, &v97);
  if (v98)
  {
    a1 = &type metadata for String;
    if ((swift_dynamicCast(&v95, &v97, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      double v8 = v95;
      unint64_t v9 = v96;
      *((void *)&v100 + 1) = &type metadata for String;
      if (v96) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }

  else
  {
    sub_100037DE0();
  }

  *((void *)&v100 + 1) = &type metadata for String;
LABEL_7:
  double v8 = 0.0;
  unint64_t v9 = 0xE000000000000000LL;
LABEL_8:
  *(double *)&__int128 v99 = v8;
  *((void *)&v99 + 1) = v9;
  uint64_t v10 = sub_10003ADEC();
  if (!v2)
  {
    uint64_t v12 = v10;
    unint64_t v13 = v11;
    uint64_t v92 = v6;
    uint64_t v93 = v5;
    sub_10003AD7C();
    sub_10003AE54();
    __chkstk_darwin(v14);
    sub_10003AEB0();
    swift_bridgeObjectRetain(v13);
    uint64_t v15 = sub_10003AE34();
    uint64_t v19 = sub_100047AFC(v15, v16, v17, v18, v12, v13);
    sub_10001C258();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v94 = a2;
    if (v20)
    {
      int v90 = v7;
      *(void *)&__int128 v99 = _swiftEmptyArrayStorage;
      sub_100016F88();
      uint64_t v21 = (void *)v99;
      uint64_t v22 = (uint64_t *)(v19 + 56);
      do
      {
        uint64_t v2 = *(v22 - 3);
        a1 = (void *)*(v22 - 1);
        uint64_t v23 = *v22;
        sub_10000DD9C();
        uint64_t v24 = sub_10003AE20();
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        sub_10003AE78();
        if (v27)
        {
          sub_10003ADD4();
          uint64_t v21 = (void *)v99;
        }

        void v21[2] = a1;
        uint64_t v28 = &v21[2 * v23];
        v28[4] = v24;
        v28[5] = v26;
        v22 += 4;
        --v20;
      }

      while (v20);
      swift_bridgeObjectRelease();
      a2 = v94;
      int v7 = v90;
    }

    else
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = _swiftEmptyArrayStorage;
    }

    *a2 = v21;
    sub_10003AD98(4LL, &v97);
    if (v98)
    {
      if ((swift_dynamicCast(&v95, &v97, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
      {
        double v29 = v95;
        unint64_t v30 = v96;
        *((void *)&v100 + 1) = &type metadata for String;
        if (v96) {
          goto LABEL_24;
        }
        goto LABEL_23;
      }
    }

    else
    {
      sub_100037DE0();
    }

    *((void *)&v100 + 1) = &type metadata for String;
LABEL_23:
    double v29 = 0.0;
    unint64_t v30 = 0xE000000000000000LL;
LABEL_24:
    *(double *)&__int128 v99 = v29;
    *((void *)&v99 + 1) = v30;
    uint64_t v31 = sub_10003AE6C();
    uint64_t v33 = v2;
    if (v2)
    {
      sub_10000DDF8();
      sub_10003AD7C();
      sub_10003AE44();
      uint64_t v5 = v93;
LABEL_49:
      swift_bridgeObjectRelease();
      if (!v33) {
        swift_bridgeObjectRelease();
      }
      if ((_DWORD)a1)
      {
        Swift::String v68 = (char *)a2 + v5[7];
        uint64_t v69 = type metadata accessor for Date(0LL);
        (*(void (**)(char *, uint64_t))(*(void *)(v69 - 8) + 8LL))(v68, v69);
      }

      goto LABEL_53;
    }

    uint64_t v34 = v31;
    unint64_t v35 = v32;
    sub_10003AD7C();
    sub_10003AE54();
    __chkstk_darwin(v36);
    sub_10003AEB0();
    sub_10000DF08();
    uint64_t v37 = sub_10003AE34();
    uint64_t v41 = sub_100047AFC(v37, v38, v39, v40, v34, v35);
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v41 + 16);
    if (v42)
    {
      int v91 = v7;
      *(void *)&__int128 v99 = _swiftEmptyArrayStorage;
      sub_100016F88();
      uint64_t v43 = (void *)v99;
      uint64_t v44 = (uint64_t *)(v41 + 56);
      do
      {
        uint64_t v2 = *(v44 - 3);
        a1 = (void *)*(v44 - 1);
        uint64_t v45 = *v44;
        sub_10000DD9C();
        uint64_t v46 = sub_10003AE20();
        uint64_t v48 = v47;
        swift_bridgeObjectRelease();
        sub_10003AE78();
        if (v27)
        {
          sub_10003ADD4();
          uint64_t v43 = (void *)v99;
        }

        v43[2] = a1;
        char v49 = &v43[2 * v45];
        v49[4] = v46;
        v49[5] = v48;
        v44 += 4;
        --v42;
      }

      while (v42);
      sub_10001C258();
      int v7 = v91;
    }

    else
    {
      sub_10001C258();
      uint64_t v43 = _swiftEmptyArrayStorage;
    }

    a2 = v94;
    v94[1] = v43;
    sub_10003AD98(1LL, &v99);
    uint64_t v50 = sub_10003AE6C();
    uint64_t v5 = v93;
    uint64_t v33 = 0LL;
    if (v2)
    {
      sub_10003AD7C();
      sub_10000DDF8();
      sub_10003AE44();
      goto LABEL_49;
    }

    uint64_t v52 = v50;
    uint64_t v53 = v51;
    sub_10003AD7C();
    v94[2] = v52;
    v94[3] = v53;
    sub_10003AD98(6LL, &v97);
    if (v98)
    {
      else {
        unint64_t v57 = -1LL;
      }
    }

    else
    {
      sub_100037DE0();
      unint64_t v57 = -1LL;
    }

    char v58 = sub_1000391B0(v57);
    if (v58 == 4)
    {
      __int128 v99 = 0u;
      __int128 v100 = 0u;
    }

    else
    {
      *((void *)&v100 + 1) = &unk_1001A9620;
      LOBYTE(v99) = v58;
    }

    char v59 = sub_1000396E0((uint64_t)&v99);
    sub_10003AD7C();
    *((_BYTE *)v94 + v93[10]) = v59;
    sub_10003AD98(7LL, &v97);
    if (v98)
    {
      if (sub_10003AD84(v60, v61, v62, (uint64_t)&type metadata for String))
      {
        double v64 = v95;
        unint64_t v65 = v96;
LABEL_48:
        *(double *)&__int128 v97 = v64;
        *((void *)&v97 + 1) = v65;
        uint64_t v66 = String.init<A>(_:)( &v97,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String,  v63);
        *((void *)&v100 + 1) = &type metadata for String;
        *(void *)&__int128 v99 = v66;
        *((void *)&v99 + 1) = v67;
        uint64_t v71 = sub_10003ADEC();
        uint64_t v73 = v72;
        sub_10003AD7C();
        __int128 v74 = (void *)((char *)v94 + v93[11]);
        *__int128 v74 = v71;
        v74[1] = v73;
        sub_10003AD98(8LL, &v99);
        uint64_t v75 = sub_10003ADEC();
        uint64_t v77 = v76;
        sub_10003AD7C();
        Swift::String v78 = (void *)((char *)v94 + v93[12]);
        *Swift::String v78 = v75;
        v78[1] = v77;
        sub_10003AD98(5LL, &v99);
        uint64_t v79 = sub_10003979C((uint64_t)&v99);
        uint64_t v81 = v80;
        sub_10003AD7C();
        swift_bridgeObjectRelease();
        *uint64_t v92 = v79;
        v92[1] = v81;
        sub_10003AD98(2LL, &v97);
        if (v98)
        {
          if (sub_10003AD84(v82, v83, v84, (uint64_t)&type metadata for Double))
          {
            double v85 = v95;
            goto LABEL_61;
          }
        }

        else
        {
          sub_100037DE0();
        }

        double v85 = 0.0;
LABEL_61:
        sub_10003ADF8(v85);
        sub_10003AD7C();
        sub_10003AE98();
        sub_10003AD98(3LL, &v97);
        uint64_t v86 = sub_10000DDF8();
        if (v98)
        {
          if (sub_10003AD84(v86, v87, v88, (uint64_t)&type metadata for Double))
          {
            double v89 = v95;
LABEL_66:
            sub_10003ADF8(v89);
            sub_10003AD7C();
            return sub_10003AE98();
          }
        }

        else
        {
          sub_100037DE0();
        }

        double v89 = 0.0;
        goto LABEL_66;
      }
    }

    else
    {
      sub_100037DE0();
    }

    double v64 = 0.0;
    unint64_t v65 = 0xE000000000000000LL;
    goto LABEL_48;
  }

  sub_10000DDF8();
  sub_10003AD7C();
  int v7 = 0;
LABEL_53:
  uint64_t result = swift_bridgeObjectRelease();
  if (v7) {
    return sub_10003AE8C(v5[12]);
  }
  return result;
}

#error "100039188: call analysis failed (funcsize=123)"
unint64_t sub_1000391B0(unint64_t result)
{
  if (result >= 4) {
    return 4LL;
  }
  return result;
}

unint64_t sub_1000391C0(Swift::String string)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A6F38, v3);
  sub_10003AEA4();
  if (v1 >= 9) {
    return 9LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100039200(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100039238 + 4 * byte_100165468[a1]))( 0x79654B6863746162LL,  0xE900000000000073LL);
}

uint64_t sub_100039238()
{
  return 0x79654B6568636163LL;
}

uint64_t sub_100039250()
{
  return 0x64657461657263LL;
}

uint64_t sub_100039268()
{
  return 0x73657269707865LL;
}

uint64_t sub_100039280()
{
  return 0x617461646174656DLL;
}

uint64_t sub_100039298()
{
  return 1752457584LL;
}

uint64_t sub_1000392A8()
{
  return 0x6574617473LL;
}

uint64_t sub_1000392BC()
{
  return 0x6E6564496B736174LL;
}

uint64_t sub_1000392E0()
{
  return 0x6E6F6973726576LL;
}

uint64_t sub_1000392F8()
{
  return sub_100006490(*v0);
}

uint64_t sub_100039300(uint64_t a1)
{
  return sub_100008F70(a1, *v1);
}

uint64_t sub_100039308(uint64_t a1)
{
  return sub_100006E60(a1, *v1);
}

unint64_t sub_100039310@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1000391B0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100039338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000106A8(*v1);
  *a1 = result;
  return result;
}

void sub_100039360(char *a1)
{
}

void sub_10003936C()
{
}

void sub_100039374(uint64_t a1)
{
}

void sub_10003937C(uint64_t a1)
{
}

unint64_t sub_100039384@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1000391C0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000393B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100039200(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000393D8@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11)
{
  uint64_t v18 = a10;
  uint64_t v19 = sub_100020C40();
  uint64_t v20 = (int *)v19;
  uint64_t v21 = (void *)((char *)a9 + *(int *)(v19 + 36));
  *uint64_t v21 = 0LL;
  v21[1] = 0LL;
  if (a2)
  {
    uint64_t v46 = a7;
    __chkstk_darwin(v19);
    swift_bridgeObjectRetain(a2);
    uint64_t v22 = sub_10003AE34();
    uint64_t v26 = sub_100047AFC(v22, v23, v24, v25, a1, a2);
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v43 = a8;
      uint64_t v44 = a5;
      uint64_t v45 = a6;
      sub_100016F88();
      uint64_t v28 = (void *)(v26 + 56);
      do
      {
        uint64_t v29 = *(v28 - 3);
        uint64_t v30 = *(v28 - 2);
        uint64_t v31 = *(v28 - 1);
        uint64_t v32 = *v28;
        swift_bridgeObjectRetain(*v28);
        uint64_t v33 = static String._fromSubstring(_:)(v29, v30, v31, v32);
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        unint64_t v36 = _swiftEmptyArrayStorage[2];
        if (v36 >= _swiftEmptyArrayStorage[3] >> 1) {
          sub_100016F88();
        }
        _swiftEmptyArrayStorage[2] = v36 + 1;
        uint64_t v37 = &_swiftEmptyArrayStorage[2 * v36];
        v37[4] = v33;
        v37[5] = v35;
        v28 += 4;
        --v27;
      }

      while (v27);
      uint64_t v19 = swift_bridgeObjectRelease();
      a5 = v44;
      a6 = v45;
      a8 = v43;
      a7 = v46;
      uint64_t v18 = a10;
    }

    else
    {
      uint64_t v19 = sub_1000090CC();
      uint64_t v18 = a10;
    }
  }

  *a9 = _swiftEmptyArrayStorage;
  a9[2] = a3;
  a9[3] = a4;
  Date.init()(v19);
  unsigned __int8 v38 = (char *)a9 + v20[8];
  uint64_t v39 = sub_1000378A0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32LL))(v38, a7, v39);
  a9[1] = _swiftEmptyArrayStorage;
  *((_BYTE *)a9 + v20[10]) = a11;
  uint64_t v41 = (void *)((char *)a9 + v20[11]);
  *uint64_t v41 = a8;
  v41[1] = v18;
  uint64_t v42 = (void *)((char *)a9 + v20[12]);
  *uint64_t v42 = a5;
  v42[1] = a6;
  return result;
}

uint64_t sub_100039624(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001CAAD0);
  if ((swift_dynamicCast(&v8, v9, v2, &type metadata for String, 6LL) & 1) != 0) {
    return v8;
  }
  unint64_t v4 = sub_100039F7C();
  swift_allocError(&unk_1001A9590, v4, 0LL, 0LL);
  uint64_t v6 = v5;
  sub_10002546C(a1, v5);
  uint64_t v7 = sub_10000D33C(&qword_1001CA098);
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 32) = &type metadata for String;
  return swift_willThrow(v7);
}

uint64_t sub_1000396E0(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001CAAD0);
  if ((swift_dynamicCast(&v8, v9, v2, &unk_1001A9620, 6LL) & 1) != 0) {
    return v8;
  }
  unint64_t v4 = sub_100039F7C();
  swift_allocError(&unk_1001A9590, v4, 0LL, 0LL);
  uint64_t v6 = v5;
  sub_10002546C(a1, v5);
  uint64_t v7 = sub_10000D33C(&qword_1001CA090);
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 32) = &unk_1001A9620;
  return swift_willThrow(v7);
}

uint64_t sub_10003979C(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001CAAD0);
  uint64_t v3 = sub_10000D33C(&qword_1001C9760);
  if ((swift_dynamicCast(&v9, v10, v2, v3, 6LL) & 1) != 0) {
    return v9;
  }
  unint64_t v5 = sub_100039F7C();
  swift_allocError(&unk_1001A9590, v5, 0LL, 0LL);
  uint64_t v7 = v6;
  sub_10002546C(a1, v6);
  uint64_t v8 = sub_10000D33C(&qword_1001CA088);
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 32) = v3;
  return swift_willThrow(v8);
}

uint64_t sub_100039864(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001CAAD0);
  uint64_t result = swift_dynamicCast(&v8, v9, v2, &type metadata for Double, 6LL);
  if ((result & 1) == 0)
  {
    unint64_t v4 = sub_100039F7C();
    swift_allocError(&unk_1001A9590, v4, 0LL, 0LL);
    uint64_t v6 = v5;
    sub_10002546C(a1, v5);
    uint64_t v7 = sub_10000D33C(&qword_1001CA080);
    *(void *)(v6 + 56) = v7;
    *(void *)(v6 + 32) = &type metadata for Double;
    return swift_willThrow(v7);
  }

  return result;
}

uint64_t sub_100039920(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v2;
  uint64_t v6 = *(void *)(*v2 + 16);
  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v7 = v5[4];
  uint64_t v8 = v5[5];
  if (v7 == a1 && v8 == a2) {
    return 0LL;
  }
  char v10 = sub_10003ADAC(v7, v8);
  uint64_t result = 0LL;
  if ((v10 & 1) != 0) {
    return result;
  }
  if (v6 == 1)
  {
LABEL_8:
    swift_bridgeObjectRetain(a2);
    sub_100063EC8();
    uint64_t v12 = *(void *)(*v2 + 16);
    sub_100063F80(v12);
    uint64_t v13 = *v2;
    *(void *)(v13 + ++*(void *)(v0 + 16) = v12 + 1;
    uint64_t v14 = v13 + 16 * v12;
    *(void *)(v14 + 32) = a1;
    *(void *)(v14 + 40) = a2;
    *uint64_t v2 = v13;
    return 1LL;
  }

  uint64_t v15 = v5[6];
  uint64_t v16 = v5[7];
  if (v15 == a1 && v16 == a2) {
    return 0LL;
  }
  char v18 = sub_10003ADAC(v15, v16);
  uint64_t result = 0LL;
  if ((v18 & 1) == 0)
  {
    if (v6 == 2) {
      goto LABEL_8;
    }
    uint64_t v19 = v5 + 9;
    uint64_t v20 = 2LL;
    while (1)
    {
      uint64_t v21 = v20 + 1;
      if (__OFADD__(v20, 1LL)) {
        break;
      }
      uint64_t v22 = *(v19 - 1);
      uint64_t v23 = *v19;
      if (v22 == a1 && v23 == a2) {
        return 0LL;
      }
      uint64_t result = sub_10003ADAC(v22, v23);
      if ((result & 1) != 0) {
        return 0LL;
      }
      v19 += 2;
      ++v20;
      if (v21 == v6) {
        goto LABEL_8;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_100039A34(uint64_t a1)
{
  uint64_t v2 = sub_1000378A0();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  uint64_t v54 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = sub_100020C40();
  uint64_t v4 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v6 = (void *)((char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = sub_10000D33C(&qword_1001C8F18);
    uint64_t v9 = (void *)Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v8,  &protocol witness table for String);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v11 = *(void *)(v4 + 72);
    v49[1] = a1;
    uint64_t v50 = v11;
    sub_10000DF10();
    __int128 v52 = xmmword_100165680;
    uint64_t v51 = (char *)&type metadata for Any + 8;
    while (1)
    {
      uint64_t v57 = v10;
      uint64_t v58 = v7;
      sub_100039F1C(v10, (uint64_t)v6);
      uint64_t v12 = sub_10000D33C(&qword_1001C8BC0);
      uint64_t inited = swift_initStackObject(v12, &v60);
      *(_OWORD *)(inited + ++*(void *)(v0 + 16) = v52;
      *(void *)(inited + 32) = 0x64657461657263LL;
      *(void *)(inited + 40) = 0xE700000000000000LL;
      uint64_t v14 = (int *)v53;
      *(double *)(inited + 48) = Date.timeIntervalSince1970.getter(inited) * 1000.0;
      *(void *)(inited + 72) = &type metadata for Double;
      *(void *)(inited + 80) = 0x617461646174656DLL;
      *(void *)(inited + 88) = 0xE800000000000000LL;
      uint64_t v15 = v6[1];
      uint64_t v16 = sub_10000D33C(&qword_1001CDF50);
      *(void *)(inited + 96) = v15;
      *(void *)(inited + 120) = v16;
      *(void *)(inited + 128) = 0x73657269707865LL;
      *(void *)(inited + 136) = 0xE700000000000000LL;
      uint64_t v17 = (char *)v6 + v14[8];
      uint64_t v18 = sub_10000DF08();
      *(double *)(inited + 144) = Date.timeIntervalSince1970.getter(v18) * 1000.0;
      *(void *)(inited + 168) = &type metadata for Double;
      *(void *)(inited + 176) = 0x64657269707865LL;
      *(void *)(inited + 184) = 0xE700000000000000LL;
      uint64_t v19 = v54;
      Date.init()(v20);
      LOBYTE(v15) = static Date.< infix(_:_:)(v17, v19);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v19, v56);
      *(_BYTE *)(inited + 192) = v15 & 1;
      *(void *)(inited + 2++*(void *)(v0 + 16) = &type metadata for Bool;
      *(void *)(inited + 224) = 1752457584LL;
      *(void *)(inited + 232) = 0xE400000000000000LL;
      uint64_t v21 = (uint64_t *)((char *)v6 + v14[9]);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = sub_10000D33C(&qword_1001C9760);
      *(void *)(inited + 240) = v23;
      *(void *)(inited + 248) = v22;
      *(void *)(inited + 264) = v24;
      *(void *)(inited + 272) = 0x6574617473LL;
      *(void *)(inited + 280) = 0xE500000000000000LL;
      *(void *)(inited + 288) = *((unsigned __int8 *)v6 + v14[10]);
      *(void *)(inited + 312) = &type metadata for Int;
      *(void *)(inited + 320) = 0x6E6F6973726576LL;
      *(void *)(inited + 328) = 0xE700000000000000LL;
      uint64_t v25 = (uint64_t *)((char *)v6 + v14[12]);
      uint64_t v26 = v25[1];
      *(void *)(inited + 336) = *v25;
      *(void *)(inited + 344) = v26;
      *(void *)(inited + 360) = &type metadata for String;
      *(void *)(inited + 368) = 0x79654B6863746162LL;
      uint64_t v27 = *v6;
      *(void *)(inited + 376) = 0xE900000000000073LL;
      *(void *)(inited + 384) = v27;
      *(void *)(inited + 408) = v16;
      *(void *)(inited + 4++*(void *)(v0 + 16) = 0x79654B6568636163LL;
      uint64_t v29 = v6[2];
      uint64_t v28 = v6[3];
      *(void *)(inited + 456) = &type metadata for String;
      *(void *)(inited + 424) = 0xE800000000000000LL;
      *(void *)(inited + 432) = v29;
      *(void *)(inited + 440) = v28;
      sub_10000DF08();
      swift_bridgeObjectRetain(v26);
      sub_10000DD9C();
      sub_10000DF10();
      uint64_t v30 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  v51,  &protocol witness table for String);
      sub_10000DF10();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
      char v59 = v9;
      unint64_t v32 = sub_100030CCC(v29, v28);
      uint64_t v34 = v9[2];
      BOOL v35 = (v33 & 1) == 0;
      Swift::Int v36 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        break;
      }
      unint64_t v37 = v32;
      char v38 = v33;
      sub_10000D33C(&qword_1001CA070);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v36))
      {
        unint64_t v39 = sub_100030CCC(v29, v28);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_17;
        }
        unint64_t v37 = v39;
      }

      uint64_t v9 = v59;
      if ((v38 & 1) != 0)
      {
        uint64_t v41 = v59[7];
        swift_bridgeObjectRelease();
        *(void *)(v41 + 8 * v37) = v30;
      }

      else
      {
        v59[(v37 >> 6) + 8] |= 1LL << v37;
        uint64_t v42 = (uint64_t *)(v9[6] + 16 * v37);
        *uint64_t v42 = v29;
        v42[1] = v28;
        *(void *)(v9[7] + 8 * v37) = v30;
        uint64_t v43 = v9[2];
        BOOL v44 = __OFADD__(v43, 1LL);
        uint64_t v45 = v43 + 1;
        if (v44) {
          goto LABEL_16;
        }
        v9[2] = v45;
        sub_10000DF10();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000207E4((uint64_t)v6);
      uint64_t v10 = v57 + v50;
      uint64_t v7 = v58 - 1;
      if (v58 == 1)
      {
        swift_bridgeObjectRelease();
        sub_100054328((uint64_t)v9);
        uint64_t v47 = v46;
        sub_1000090CC();
        return v47;
      }
    }

    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
  }

  else
  {
    return 0LL;
  }

  return result;
}

uint64_t type metadata accessor for ContentInfo(uint64_t a1)
{
  uint64_t result = qword_1001CA0F8;
  if (!qword_1001CA0F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContentInfo);
  }
  return result;
}

uint64_t sub_100039F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100039F60(uint64_t *a1)
{
  return sub_100048414(a1, *(uint64_t **)(v1 + 16)) & 1;
}

unint64_t sub_100039F7C()
{
  unint64_t result = qword_1001CA078;
  if (!qword_1001CA078)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165600, &unk_1001A9590);
    atomic_store(result, (unint64_t *)&qword_1001CA078);
  }

  return result;
}

uint64_t sub_100039FB8(void *a1)
{
  if (a1[3]) {
    sub_10000D3A0(a1);
  }
  return sub_10000D3A0(a1 + 4);
}

uint64_t sub_100039FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    *(void *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v5;
  }

  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
  return a1;
}

uint64_t sub_10003A054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }

void *sub_10003A0D0(void *result, void *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v11 = *result;
        uint64_t v12 = *a2;
        swift_retain(*a2);
        unint64_t result = (void *)swift_release(v11);
        *uint64_t v3 = v12;
      }

      else
      {
        return (void *)(*(uint64_t (**)(void *, void *, void))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        uint64_t v10 = *result;
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v14 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v14);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (void *)swift_release(v10);
      }

      else
      {
        (*(void (**)(_BYTE *, void *, uint64_t))(v6 + 32))(v15, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          uint64_t v13 = *a2;
          *uint64_t v3 = *a2;
          swift_retain(v13);
        }

        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (void *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v15, v4);
      }
    }
  }

  return result;
}

__n128 sub_10003A230(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v3;
  return result;
}

uint64_t sub_10003A244(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 24)) {
    sub_10000D3A0((void *)a1);
  }
  __int128 v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = v4;
  sub_10000D3A0((void *)(a1 + 32));
  __int128 v5 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t sub_10003A290(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_10003A2D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 64) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for ContentInfo.InfoError()
{
}

uint64_t sub_10003A32C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_10003A378 + 4 * byte_100165476[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10003A3AC + 4 * byte_100165471[v4]))();
}

uint64_t sub_10003A3AC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003A3B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10003A3BCLL);
  }
  return result;
}

uint64_t sub_10003A3C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10003A3D0LL);
  }
  *(_BYTE *)__n128 result = a2 + 3;
  return result;
}

uint64_t sub_10003A3D4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003A3DC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContentInfo.State()
{
}

uint64_t sub_10003A3F4(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }

uint64_t sub_10003A47C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF7) {
    return ((uint64_t (*)(void))((char *)&loc_10003A4C8 + 4 * byte_100165480[v4]))();
  }
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_10003A4FC + 4 * byte_10016547B[v4]))();
}

uint64_t sub_10003A4FC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003A504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10003A50CLL);
  }
  return result;
}

uint64_t sub_10003A518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10003A520LL);
  }
  *(_BYTE *)__n128 result = a2 + 8;
  return result;
}

uint64_t sub_10003A524(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10003A52C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ContentInfo.ExportKey()
{
}

char *sub_10003A544(char *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v7 = (char *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    BOOL v7 = a1;
    uint64_t v9 = *((void *)a2 + 1);
    uint64_t v8 = *((void *)a2 + 2);
    *((void *)a1 + 1) = v9;
    *((void *)a1 + 2) = v8;
    uint64_t v10 = *((void *)a2 + 3);
    *((void *)a1 + 3) = v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = type metadata accessor for Date(0LL);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v15(v12, v13, v14);
    v15(&v7[a3[8]], &a2[a3[8]], v14);
    uint64_t v16 = a3[9];
    uint64_t v17 = a3[10];
    uint64_t v18 = &v7[v16];
    uint64_t v19 = &a2[v16];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    v7[v17] = a2[v17];
    uint64_t v21 = a3[11];
    uint64_t v22 = a3[12];
    uint64_t v23 = &v7[v21];
    uint64_t v24 = &a2[v21];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = &v7[v22];
    uint64_t v27 = &a2[v22];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v28);
  }

  return v7;
}

uint64_t sub_10003A67C(char *a1, int *a2)
{
  uint64_t v4 = &a1[a2[7]];
  uint64_t v5 = type metadata accessor for Date(0LL);
  unsigned int v6 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v6(v4, v5);
  v6(&a1[a2[8]], v5);
  swift_bridgeObjectRelease(*(void *)&a1[a2[9] + 8]);
  swift_bridgeObjectRelease(*(void *)&a1[a2[11] + 8]);
  return swift_bridgeObjectRelease(*(void *)&a1[a2[12] + 8]);
}

char *sub_10003A728(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v7;
  uint64_t v8 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v13(v10, v11, v12);
  v13(&a1[a3[8]], &a2[a3[8]], v12);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  a1[v15] = a2[v15];
  uint64_t v19 = a3[11];
  uint64_t v20 = a3[12];
  uint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  uint64_t v24 = &a1[v20];
  uint64_t v25 = &a2[v20];
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  return a1;
}

char *sub_10003A830(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a1 + 1);
  *((void *)a1 + 1) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  uint64_t v10 = *((void *)a2 + 3);
  uint64_t v11 = *((void *)a1 + 3);
  *((void *)a1 + 3) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24LL);
  v16(v13, v14, v15);
  v16(&a1[a3[8]], &a2[a3[8]], v15);
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  uint64_t v21 = *((void *)v18 + 1);
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  a1[a3[10]] = a2[a3[10]];
  uint64_t v22 = a3[11];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  uint64_t v26 = *((void *)v23 + 1);
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v26);
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  uint64_t v31 = *((void *)v28 + 1);
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v31);
  return a1;
}

char *sub_10003A994(char *a1, char *a2, int *a3)
{
  __int128 v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL);
  v11(v8, v9, v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v12 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

char *sub_10003AA48(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *((void *)a1 + 1);
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *((void *)a2 + 3);
  uint64_t v9 = *((void *)a1 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40LL);
  v14(v11, v12, v13);
  v14(&a1[a3[8]], &a2[a3[8]], v13);
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  uint64_t v20 = *((void *)v16 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease(v20);
  uint64_t v21 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (uint64_t *)&a2[v21];
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  uint64_t v26 = *((void *)v22 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease(v26);
  uint64_t v27 = a3[12];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (uint64_t *)&a2[v27];
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  uint64_t v32 = *((void *)v28 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease(v32);
  return a1;
}

uint64_t sub_10003AB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003AB64);
}

uint64_t sub_10003AB64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_1000378A0();
    return sub_1000102D4((uint64_t)a1 + *(int *)(a3 + 28), a2, v8);
  }

uint64_t sub_10003ABD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003ABE0);
}

void *sub_10003ABE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_1000378A0();
    return (void *)sub_10000D5C0((uint64_t)v5 + *(int *)(a4 + 28), a2, a2, v7);
  }

  return result;
}

uint64_t sub_10003AC48(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  _OWORD v4[2] = &unk_1001654B8;
  uint64_t result = type metadata accessor for Date(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64LL;
    uint64_t v6 = v5;
    uint64_t v7 = &unk_1001654D0;
    uint64_t v8 = &unk_1001654E8;
    uint64_t v9 = &unk_1001654B8;
    uint64_t v10 = &unk_1001654B8;
    swift_initStructMetadata(a1, 256LL, 9LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

unint64_t sub_10003ACE8()
{
  unint64_t result = qword_1001CA150;
  if (!qword_1001CA150)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001655D8, &unk_1001A9620);
    atomic_store(result, (unint64_t *)&qword_1001CA150);
  }

  return result;
}

unint64_t sub_10003AD28()
{
  unint64_t result = qword_1001CA158;
  if (!qword_1001CA158)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165538, &unk_1001A96B0);
    atomic_store(result, (unint64_t *)&qword_1001CA158);
  }

  return result;
}

uint64_t sub_10003AD64(uint64_t *a1)
{
  return sub_100039F60(a1) & 1;
}

uint64_t sub_10003AD7C()
{
  return sub_10000E888(v0 - 112);
}

uint64_t sub_10003AD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(v5 - 160, v5 - 144, v4 + 8, a4, 6LL);
}

void sub_10003AD98(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
}

uint64_t *sub_10003ADA0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t sub_10003ADAC(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

uint64_t sub_10003ADBC()
{
  return BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v0);
}

void sub_10003ADD4()
{
}

uint64_t sub_10003ADEC()
{
  return sub_100039624(v0 - 112);
}

uint64_t sub_10003ADF8(double a1)
{
  *(void *)(v2 - 88) = v1;
  *(double *)(v2 - 112) = a1;
  return sub_100039864(v2 - 112);
}

uint64_t sub_10003AE0C@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRetain(*(void *)(v1 + a1 + 8));
}

uint64_t sub_10003AE20()
{
  return static String._fromSubstring(_:)(v1, v0, v2, v3);
}

uint64_t sub_10003AE34()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

  ;
}

void sub_10003AE54()
{
  *(void *)(v0 - 112) = 44LL;
  *(void *)(v0 - 104) = 0xE100000000000000LL;
}

uint64_t sub_10003AE6C()
{
  return sub_100039624(v0 - 112);
}

void sub_10003AE78()
{
  *(void *)(v1 - 112) = v0;
}

uint64_t sub_10003AE8C@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(v1 + a1 + 8));
}

uint64_t sub_10003AE98()
{
  return Date.init(timeIntervalSinceReferenceDate:)(v0);
}

uint64_t sub_10003AEA4()
{
  return swift_bridgeObjectRelease(v0);
}

  ;
}

void *sub_10003AEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    sub_100016F88();
    uint64_t v7 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v7 - 1);
      unint64_t v9 = *v7;
      swift_bridgeObjectRetain_n(*v7, 2LL);
      unint64_t v10 = String.count.getter(a2, a3);
      unint64_t v11 = sub_100101144(v10, v8, v9);
      uint64_t v15 = static String._fromSubstring(_:)(v11, v12, v13, v14);
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      if (v18 >= _swiftEmptyArrayStorage[3] >> 1) {
        sub_100016F88();
      }
      v7 += 2;
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[2 * v18];
      v19[4] = v15;
      void v19[5] = v17;
      --v4;
    }

    while (v4);
  }

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_10003B008(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000D33C(&qword_1001C8FE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v24 = v2;
    uint64_t v26 = _swiftEmptyArrayStorage;
    sub_100016FF0();
    unint64_t v10 = v26;
    uint64_t v11 = *(void *)(type metadata accessor for JSContent.CacheRequest(0LL) - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v25 = *(void *)(v11 + 72);
    uint64_t v13 = ((v12 + 32) & ~v12) + a1 + 16;
    do
    {
      uint64_t v14 = a2;
      sub_1000400D0();
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = type metadata accessor for ContentInfo(0LL);
      uint64_t v19 = v18;
      if (v17)
      {
        uint64_t v20 = *(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL);
        sub_100039F1C(v16 + ((v20 + 32) & ~v20), (uint64_t)v8);
        uint64_t v21 = 0LL;
      }

      else
      {
        uint64_t v21 = 1LL;
      }

      sub_10000D5C0((uint64_t)v8, v21, 1LL, v19);
      swift_bridgeObjectRelease();
      uint64_t v26 = v10;
      unint64_t v22 = v10[2];
      if (v22 >= v10[3] >> 1)
      {
        sub_100016FF0();
        unint64_t v10 = v26;
      }

      v10[2] = v22 + 1;
      sub_100048498( (uint64_t)v8,  (uint64_t)v10 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + *(void *)(v6 + 72) * v22);
      v13 += v25;
      --v9;
      a2 = v14;
    }

    while (v9);
    swift_release(v14);
  }

  else
  {
    swift_release(a2);
    return _swiftEmptyArrayStorage;
  }

  return v10;
}

void sub_10003B1EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v7 = 0LL;
    uint64_t v8 = a1 + 40;
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v19 = a1 + 40;
    do
    {
      uint64_t v20 = v9;
      unint64_t v10 = (void *)(v8 + 16 * v7);
      unint64_t v11 = v7;
      while (1)
      {
        if (v11 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }

        uint64_t v13 = *(v10 - 1);
        uint64_t v12 = *v10;
        unint64_t v7 = v11 + 1;
        swift_bridgeObjectRetain(*v10);
        v14._uint64_t countAndFlagsBits = a2;
        v14._object = a3;
        if (String.hasPrefix(_:)(v14)) {
          break;
        }
        swift_bridgeObjectRelease();
        v10 += 2;
        ++v11;
        if (v5 == v7) {
          goto LABEL_13;
        }
      }

      uint64_t v9 = v20;
      unint64_t v22 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      {
        sub_100016F88();
        uint64_t v9 = v20;
      }

      unint64_t v15 = v9[2];
      unint64_t v16 = v15 + 1;
      if (v15 >= v9[3] >> 1)
      {
        unint64_t v21 = v15 + 1;
        unint64_t v18 = v9[2];
        sub_100016F88();
        unint64_t v16 = v21;
        unint64_t v15 = v18;
        uint64_t v9 = v22;
      }

      v9[2] = v16;
      uint64_t v17 = &v9[2 * v15];
      v17[4] = v13;
      v17[5] = v12;
      uint64_t v8 = v19;
    }

    while (v5 - 1 != v11);
  }

void sub_10003B378(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    unint64_t v7 = 0LL;
    uint64_t v8 = a1 + 40;
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v19 = a1 + 40;
    do
    {
      uint64_t v20 = v9;
      unint64_t v10 = (void *)(v8 + 16 * v7);
      unint64_t v11 = v7;
      while (1)
      {
        if (v11 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }

        uint64_t v13 = *(v10 - 1);
        uint64_t v12 = *v10;
        unint64_t v7 = v11 + 1;
        swift_bridgeObjectRetain(*v10);
        v14._uint64_t countAndFlagsBits = a2;
        v14._object = a3;
        if (!String.hasPrefix(_:)(v14)) {
          break;
        }
        swift_bridgeObjectRelease();
        v10 += 2;
        ++v11;
        if (v5 == v7) {
          goto LABEL_13;
        }
      }

      uint64_t v9 = v20;
      unint64_t v22 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      {
        sub_100016F88();
        uint64_t v9 = v20;
      }

      unint64_t v15 = v9[2];
      unint64_t v16 = v15 + 1;
      if (v15 >= v9[3] >> 1)
      {
        unint64_t v21 = v15 + 1;
        unint64_t v18 = v9[2];
        sub_100016F88();
        unint64_t v16 = v21;
        unint64_t v15 = v18;
        uint64_t v9 = v22;
      }

      v9[2] = v16;
      uint64_t v17 = &v9[2 * v15];
      v17[4] = v13;
      v17[5] = v12;
      uint64_t v8 = v19;
    }

    while (v5 - 1 != v11);
  }

void sub_10003B504()
{
  uint64_t v3 = v2;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v4);
  sub_10000DC74();
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v5 = *(void *)(*(void *)(sub_10002C79C() - 8) + 72LL);
  sub_10004892C();
  unint64_t v7 = (__n128 *)sub_100048E38(v1 + 2 * v5, v6);
  sub_100048E14(v7, (__n128)xmmword_100164230);
  uint64_t v29 = sub_10000D33C(&qword_1001CA290);
  v28[0] = v0;
  id v8 = (id)AMSLogKey(v29);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    uint64_t v12 = v11;

    sub_10000DD9C();
    sub_100010564();
    sub_10000DC08();
    uint64_t v13 = v29;
    Swift::String v14 = sub_10000D37C(v28, v29);
    uint64_t v15 = sub_10000DC54((uint64_t)v14, v13);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v15);
    v26[0] = v15;
    sub_10000DEA4();
    sub_100048704((uint64_t)v26);
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    v26[0] = v10;
    v26[1] = v12;
    sub_10000DEA4();
    sub_100048704((uint64_t)v26);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DCFC();
  }

  else
  {
    sub_10001A1BC();
    sub_10000DC08();
    uint64_t v16 = v29;
    uint64_t v17 = sub_10000D37C(v28, v29);
    uint64_t v18 = sub_10000DC54((uint64_t)v17, v16);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v18);
    v26[0] = v18;
    sub_10000DEA4();
    sub_100048258((uint64_t)v26, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(v28);
  sub_10000E008();
  uint64_t v19 = sub_10000DD38(21LL);
  uint64_t v20 = static os_log_type_t.default.getter(v19);
  sub_1000486E4(v20);
  sub_10000DE2C();
  unint64_t v21 = sub_10001C8FC();
  unint64_t v22 = (char *)v21[2];
  if (v22)
  {
    uint64_t v23 = (char *)(v21 + 4);
    uint64_t v24 = type metadata accessor for ContentManager();
    do
    {
      char v25 = *v23++;
      *(_BYTE *)(sub_10000DDDC(v24, 17LL) + ++*(void *)(v0 + 16) = v25;
      sub_100042604();
      sub_100043958(v3);
      sub_1000292C4();
      --v22;
    }

    while (v22);
  }

  sub_1000090CC();
  sub_10000DD84();
}

void sub_10003B740()
{
  uint64_t v3 = v2;
  uint64_t v170 = v4;
  uint64_t v168 = v5;
  uint64_t v7 = v6;
  uint64_t v186 = v8;
  uint64_t v187 = v9;
  uint64_t v158 = *v0;
  uint64_t v176 = sub_1000378A0();
  uint64_t v175 = *(void *)(v176 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v10);
  v174 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = (int *)sub_100020C40();
  uint64_t v181 = *((void *)v12 - 1);
  sub_10000DC8C();
  __chkstk_darwin(v13);
  uint64_t v166 = (char *)&v153 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001A210();
  __chkstk_darwin(v15);
  sub_10001A3B0();
  uint64_t v179 = v16;
  sub_10001A210();
  __chkstk_darwin(v17);
  sub_10001A3B0();
  __int128 v180 = v18;
  sub_10001A210();
  __chkstk_darwin(v19);
  v177 = (char *)&v153 - v20;
  sub_10001A210();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v153 - v22;
  uint64_t v24 = sub_10000D33C(&qword_1001C8FE0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  sub_10004895C();
  uint64_t v28 = v26 - v27;
  __chkstk_darwin(v29);
  sub_10001A3B0();
  uint64_t v185 = v30;
  sub_10001A210();
  __chkstk_darwin(v31);
  sub_10001A3B0();
  uint64_t v178 = v32;
  sub_10001A210();
  __chkstk_darwin(v33);
  sub_100048CE0();
  uint64_t v184 = v34;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v35);
  sub_10004893C(v36, (uint64_t)v153);
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v182 = qword_1001DBB20;
  unint64_t v37 = (void *)sub_10000D33C(&qword_1001C9C70);
  sub_10002C79C();
  sub_1000487D4();
  uint64_t v171 = v38;
  uint64_t v165 = (uint64_t)v37;
  uint64_t v163 = v1 + 5 * v38;
  uint64_t v40 = sub_100048B40((uint64_t)v37, v163, v39 | 7, (uint64_t)v191);
  __int128 v161 = xmmword_100164250;
  *(_OWORD *)(v40 + ++*(void *)(v0 + 16) = xmmword_100164250;
  uint64_t v164 = v1;
  uint64_t v173 = v40;
  uint64_t v160 = (void *)type metadata accessor for ContentManager();
  v192 = v160;
  v191[0] = v0;
  v183 = v0;
  uint64_t v41 = sub_100048DB4();
  id v42 = (id)AMSLogKey(v41);
  if (v42)
  {
    uint64_t v172 = sub_100048C54((uint64_t)v42);
    uint64_t v43 = v3;
    uint64_t v44 = v7;
    uint64_t v46 = v45;

    sub_10000DEB4();
    sub_100010564();
    sub_10000DC08();
    uint64_t v47 = v192;
    uint64_t v48 = sub_10000D37C(v191, (uint64_t)v192);
    sub_10000DC54((uint64_t)v48, (uint64_t)v47);
    v190 = (void *)sub_1000258E8();
    v188 = v47;
    sub_10000DF68();
    sub_1000485FC((uint64_t)&v188);
    sub_10000DC14();
    v190 = &type metadata for String;
    sub_100048B14();
    v188 = v49;
    uint64_t v189 = v46;
    sub_10000DF68();
    sub_1000485FC((uint64_t)&v188);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    uint64_t v7 = v44;
    uint64_t v3 = v43;
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A1BC();
    sub_10000DC08();
    uint64_t v50 = v192;
    uint64_t v51 = sub_10000D37C(v191, (uint64_t)v192);
    sub_10000DC54((uint64_t)v51, (uint64_t)v50);
    v190 = (void *)sub_1000258E8();
    v188 = v50;
    uint64_t v52 = sub_10000DF68();
    sub_100048740(v52, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(v191);
  uint64_t v53 = v171;
  sub_1000105B4(0xD000000000000022LL);
  v192 = &type metadata for String;
  sub_100048E94();
  sub_1000487EC();
  sub_1000485FC((uint64_t)v191);
  uint64_t v159 = 3 * v53;
  LogMessage.init(stringLiteral:)(0x3A736E6F6974706FLL);
  v191[2] = v3;
  v192 = &unk_1001AC400;
  int v54 = v168;
  LOBYTE(v191[0]) = v168;
  int v55 = v168;
  v191[1] = v170;
  sub_10000DD9C();
  sub_100048650();
  uint64_t v56 = sub_1000485FC((uint64_t)v191);
  uint64_t v57 = static os_log_type_t.info.getter(v56);
  uint64_t v58 = (char *)v182;
  sub_1000BD1B0(v57, v173);
  sub_100009020();
  int v59 = v54;
  if (v55 == 4) {
    int v59 = *((unsigned __int8 *)v183 + 16);
  }
  HIDWORD(v156) = v59;
  uint64_t v60 = (uint64_t)v183;
  swift_retain(v183);
  uint64_t v61 = sub_10003B008(v7, v60);
  uint64_t v62 = (uint64_t)v61;
  uint64_t v63 = v61[2];
  uint64_t v157 = v25;
  v167 = v61;
  if (v63)
  {
    uint64_t v155 = v7;
    uint64_t v154 = v3;
    uint64_t v58 = (char *)v61 + ((*(unsigned __int8 *)(v25 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    uint64_t v172 = *(void *)(v25 + 72);
    sub_10000DED8();
    uint64_t v64 = v63;
    unint64_t v65 = &qword_1001C8FE0;
    uint64_t v173 = v63;
    while (1)
    {
      uint64_t v66 = v184;
      sub_100048CA4((uint64_t)v58);
      uint64_t v67 = v66;
      uint64_t v68 = v178;
      sub_100048CA4(v67);
      sub_100048918(v68, 1LL, (uint64_t)v12);
      if (v117)
      {
        sub_100048258(v68, &qword_1001C8FE0);
        goto LABEL_71;
      }

      sub_1000206E0(v68, (uint64_t)v23);
      if (!*(void *)&v23[v12[9] + 8]) {
        goto LABEL_70;
      }
      uint64_t v182 = v64;
      uint64_t v69 = v65;
      int v70 = v23[v12[10]];
      uint64_t v71 = v177;
      sub_100048BAC((uint64_t)v23);
      if (v70 != 2)
      {
        sub_1000489EC();
        goto LABEL_70;
      }

      uint64_t v72 = v28;
      uint64_t v73 = v12;
      __int128 v74 = &v71[v12[8]];
      uint64_t v75 = sub_10000DEB4();
      uint64_t v76 = (uint64_t)v174;
      Date.init()(v75);
      LOBYTE(v74) = static Date.< infix(_:_:)(v74, v76);
      sub_100048DBC(v76, *(uint64_t (**)(uint64_t, void))(v175 + 8));
      sub_1000489EC();
      id v77 = [(id)objc_opt_self(NSFileManager) defaultManager];
      NSString v78 = String._bridgeToObjectiveC()();
      sub_10000DDF8();
      unsigned __int8 v79 = [v77 fileExistsAtPath:v78];

      sub_100048BB4();
      unint64_t v65 = v69;
      sub_100048704(v184);
      if ((v79 & 1) == 0) {
        goto LABEL_72;
      }
      sub_100048B14();
      v58 += v80;
      uint64_t v64 = v182 - 1;
      uint64_t v12 = v73;
      uint64_t v28 = v72;
      uint64_t v63 = v173;
      if (v182 == 1)
      {
        uint64_t v62 = (uint64_t)v167;
        sub_1000090CC();
        uint64_t v60 = (uint64_t)v183;
        uint64_t v3 = v154;
        goto LABEL_17;
      }
    }

    sub_10000DDF8();
LABEL_70:
    sub_100048BB4();
LABEL_71:
    sub_100048258(v184, &qword_1001C8FE0);
LABEL_72:
    sub_10000E014((uint64_t)v167);
    uint64_t v135 = v155;
    uint64_t v136 = *(void *)(v155 + 16);
    if (!v136)
    {
LABEL_82:
      sub_10000DD84();
      return;
    }

    uint64_t v137 = type metadata accessor for JSContent.CacheRequest(0LL);
    sub_100048C44();
    uint64_t v140 = v139 & ~v138;
    uint64_t v185 = v168;
    uint64_t v142 = *(void *)(v141 + 72);
    sub_10000DEB4();
    uint64_t v144 = v186;
    uint64_t v143 = v187;
    uint64_t v145 = v154;
    uint64_t v146 = v170;
    do
    {
      uint64_t v147 = (unsigned __int8 *)(v135 + v140 + *(int *)(v137 + 28));
      int v148 = *v147;
      int v149 = v147[1];
      if (v147[2]) {
        int v150 = 0x10000;
      }
      else {
        int v150 = 0;
      }
      if (v149) {
        int v151 = 256;
      }
      else {
        int v151 = 0;
      }
      sub_10003CC74( v144,  v143,  *(void *)(v135 + v140),  *(void *)(v135 + v140 + 8),  *(void *)(v135 + v140 + 16),  *(void *)(v135 + v140 + 24),  v135 + v140 + *(int *)(v137 + 24),  v151 | v148 | v150,  v185,  v146,  v145,  v152,  (uint64_t)v153,  v154,  v155,  v156,  v157,  v158,  v159,  (uint64_t)v160,  v161,  *((uint64_t *)&v161 + 1),  v162);
      v140 += v142;
      --v136;
    }

    while (v136);
LABEL_81:
    swift_bridgeObjectRelease();
    goto LABEL_82;
  }

LABEL_49:
    ++v112;
    sub_1000207E4(v108);
    if (v112 == v107)
    {
      sub_10000E014((uint64_t)v98);
      goto LABEL_82;
    }
  }

  if (v114 == 2)
  {
LABEL_44:
    uint64_t v118 = v187;
    sub_10000DD9C();
    if ((swift_isUniquelyReferenced_nonNull_native(v113) & 1) == 0)
    {
      sub_100048824();
      unint64_t v113 = v133;
    }

    unint64_t v120 = v113[2];
    unint64_t v119 = v113[3];
    uint64_t v121 = v186;
    if (v120 >= v119 >> 1)
    {
      sub_100048B48(v119);
      sub_100048824();
      unint64_t v113 = v134;
    }

    v113[2] = v120 + 1;
    unint64_t v122 = &v113[2 * v120];
    v122[4] = v121;
    v122[5] = v118;
    unsigned __int8 v123 = v180;
    *__int128 v180 = v113;
    sub_100040CB8();
    uint64_t v108 = (uint64_t)v123;
    goto LABEL_49;
  }

  uint64_t v127 = v113 + 9;
  uint64_t v128 = 2LL;
  while (1)
  {
    uint64_t v129 = v128 + 1;
    if (__OFADD__(v128, 1LL)) {
      break;
    }
    uint64_t v130 = *(v127 - 1);
    uint64_t v131 = *v127;
    BOOL v132 = v130 == v186 && v131 == v187;
    if (v132 || (sub_100025718(v130, v131, v186, v187) & 1) != 0) {
      goto LABEL_49;
    }
    v127 += 2;
    ++v128;
    if (v129 == v114) {
      goto LABEL_44;
    }
  }

  __break(1u);
}

    swift_bridgeObjectRelease();
    if (v86 >> 62)
    {
      sub_1000F78F8();
      uint64_t v66 = sub_1000F79A0();
      sub_100009070();
      unint64_t v65 = v86;
      if (!v66)
      {
LABEL_67:
        swift_bridgeObjectRelease();
        sub_10008BD98();
        sub_10003B504();
        swift_bridgeObjectRelease();
        uint64_t v82 = sub_1000F7948();
        sub_100133128(v82, v83);
        sub_10000DD84();
        return;
      }
    }

    else
    {
      unint64_t v65 = v86;
      uint64_t v66 = *(void *)((v86 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (!v66) {
        goto LABEL_67;
      }
    }

    uint64_t v88 = v65 & 0xC000000000000001LL;
    uint64_t v3 = 4LL;
    while (1)
    {
      uint64_t v0 = (void *)(v3 - 4);
      uint64_t v67 = v88 ? (id)sub_1000F7A64() : *(id *)(v65 + 8 * v3);
      uint64_t v68 = v67;
      if (__OFADD__(v0, 1LL)) {
        break;
      }
      uint64_t v91 = v3 - 3;
      uint64_t v69 = sub_1000F4F54();
      sub_1000F752C(v69, v68);
      sub_1000F7A90();
      int v70 = v68;
      uint64_t v71 = sub_1000F7A2C();
      v94[0] = v7;
      sub_1000F7A3C(v3 - 4, v2);
      sub_1000F798C();
      if (v42) {
        goto LABEL_73;
      }
      __int128 v74 = v72;
      uint64_t v75 = v73;
      sub_10000D33C(&qword_1001C9DF0);
      if (sub_1000F7A34(v71))
      {
        uint64_t v76 = sub_100030CCC(v3 - 4, v2);
        if ((v75 & 1) != (v77 & 1)) {
          goto LABEL_78;
        }
        __int128 v74 = v76;
      }

      uint64_t v7 = (void *)v94[0];
      if ((v75 & 1) != 0)
      {
        NSString v78 = *(void *)(v94[0] + 56LL);

        *(void *)(v78 + 8 * v74) = v70;
      }

      else
      {
        *(void *)(v94[0] + 8 * (v74 >> 6) + 64) |= 1LL << v74;
        unsigned __int8 v79 = (void *)(v7[6] + 16 * v74);
        char *v79 = v0;
        v79[1] = v2;
        *(void *)(v7[7] + 8 * v74) = v70;
        uint64_t v80 = v7[2];
        id v42 = __OFADD__(v80, 1LL);
        uint64_t v81 = v80 + 1;
        if (v42) {
          goto LABEL_76;
        }
        v7[2] = v81;
        sub_100020BB4();
      }

      sub_100020AB8();
      sub_10004C578();
      ++v3;
      unint64_t v65 = v86;
      if (v91 == v66) {
        goto LABEL_67;
      }
    }

void sub_10003C3F8()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v8);
  sub_100048A80();
  __chkstk_darwin(v9);
  sub_10001A3B0();
  uint64_t v77 = v10;
  sub_10001A210();
  __chkstk_darwin(v11);
  if (v1)
  {
    v75[2] = (char *)v75 - v12;
    uint64_t v76 = v7;
    uint64_t v13 = (void *)_convertErrorToNSError(_:)(v1);
    uint64_t v14 = sub_10000D33C(&qword_1001C8BC0);
    uint64_t inited = swift_initStackObject(v14, &v80);
    *(_OWORD *)(inited + ++*(void *)(v0 + 16) = xmmword_100164240;
    *(void *)(inited + 32) = 0x656372756F73LL;
    *(void *)(inited + 40) = 0xE600000000000000LL;
    uint64_t v16 = (void *)sub_100048794(inited);
    v16[9] = &type metadata for String;
    v16[10] = v17;
    v16[11] = v18;
    v16[12] = 0xD000000000000013LL;
    uint64_t v19 = (void *)sub_1000488E0((uint64_t)v16, (uint64_t)"BatchDownloadFailed");
    v19[15] = &type metadata for String;
    v19[16] = v20;
    v19[21] = &type metadata for String;
    v19[17] = 0xEA00000000007265LL;
    v19[18] = v5;
    uint64_t v78 = v5;
    uint64_t v79 = v3;
    v19[19] = v3;
    swift_bridgeObjectRetain(v3);
    uint64_t v88 = sub_100048A4C();
    uint64_t v21 = sub_10000DDDC(v14, 224LL);
    *(_OWORD *)(v21 + ++*(void *)(v0 + 16) = xmmword_1001649D0;
    *(void *)(v21 + 32) = 1701080931LL;
    *(void *)(v21 + 40) = 0xE400000000000000LL;
    *(void *)(v21 + 48) = [v13 code];
    *(void *)(v21 + 72) = &type metadata for Int;
    *(void *)(v21 + 80) = 0x6E69616D6F64LL;
    *(void *)(v21 + 88) = 0xE600000000000000LL;
    id v22 = [v13 domain];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    uint64_t v25 = v24;

    *(void *)(v21 + 96) = v23;
    *(void *)(v21 + 104) = v25;
    *(void *)(v21 + 120) = &type metadata for String;
    *(void *)(v21 + 128) = 0x656C746974LL;
    *(void *)(v21 + 136) = 0xE500000000000000LL;
    uint64_t v26 = sub_10000D6DC(v13, (SEL *)&selRef_ams_title);
    if (v27) {
      uint64_t v28 = v26;
    }
    else {
      uint64_t v28 = 0LL;
    }
    if (v27) {
      unint64_t v29 = v27;
    }
    else {
      unint64_t v29 = 0xE000000000000000LL;
    }
    *(void *)(v21 + 144) = v28;
    *(void *)(v21 + 152) = v29;
    *(void *)(v21 + 168) = &type metadata for String;
    *(void *)(v21 + 176) = 0x6567617373656DLL;
    *(void *)(v21 + 184) = 0xE700000000000000LL;
    uint64_t v30 = sub_10000D6DC(v13, (SEL *)&selRef_ams_message);
    *(void *)(v21 + 2++*(void *)(v0 + 16) = &type metadata for String;
    if (v31) {
      uint64_t v32 = v30;
    }
    else {
      uint64_t v32 = 0LL;
    }
    if (v31) {
      unint64_t v33 = v31;
    }
    else {
      unint64_t v33 = 0xE000000000000000LL;
    }
    *(void *)(v21 + 192) = v32;
    *(void *)(v21 + 200) = v33;
    uint64_t v34 = sub_100048A4C();
    uint64_t v86 = (void *)sub_10000D33C(&qword_1001C8F18);
    uint64_t v84 = v34;
    sub_100030118((uint64_t)&v84, 0x726F727265LL, 0xE500000000000000LL);
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    v75[1] = qword_1001DBB20;
    sub_10000D33C(&qword_1001C9C70);
    sub_100010570();
    sub_1000487D4();
    v75[0] = v35;
    *(_OWORD *)(sub_10001059C(2 * v35 - 0x2000000000000000LL, v36) + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v37 = sub_10000D33C(&qword_1001CA290);
    id v38 = (id)sub_100048B74(v37);
    if (v38)
    {
      uint64_t v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      uint64_t v42 = v41;

      sub_10000DD9C();
      sub_100010564();
      sub_10000DC08();
      uint64_t v43 = v86;
      uint64_t v44 = sub_10000D37C(&v84, (uint64_t)v86);
      uint64_t v45 = sub_10000DC54((uint64_t)v44, (uint64_t)v43);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v45);
      uint64_t v81 = (void *)v45;
      sub_1000488D8();
      sub_100048810((uint64_t)&v81);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v81 = (void *)v40;
      uint64_t v82 = v42;
      sub_1000488D8();
      sub_100048810((uint64_t)&v81);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DCFC();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      unint64_t v65 = v86;
      uint64_t v66 = sub_10000D37C(&v84, (uint64_t)v86);
      uint64_t v67 = sub_10000DC54((uint64_t)v66, (uint64_t)v65);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v67);
      uint64_t v81 = (void *)v67;
      uint64_t v68 = sub_1000488D8();
      sub_100048D1C(v68, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000D3A0(&v84);
    sub_1000485F4(66LL);
    sub_100048E08(0xD00000000000003BLL, (uint64_t)"Sending batch downloading failed event for notificationId: ");
    uint64_t v86 = &type metadata for String;
    uint64_t v84 = v78;
    uint64_t v85 = v79;
    swift_bridgeObjectRetain(v79);
    uint64_t v69 = sub_100048D48();
    sub_100048B6C(v69, &qword_1001CAAD0);
    sub_1000488B0();
    sub_100048CCC();
    __asm { BR              X12 }
  }

  uint64_t v46 = sub_10000D33C(&qword_1001C8BC0);
  uint64_t v47 = swift_initStackObject(v46, &v87);
  *(_OWORD *)(v47 + ++*(void *)(v0 + 16) = xmmword_1001649D0;
  *(void *)(v47 + 32) = 0x656372756F73LL;
  *(void *)(v47 + 40) = 0xE600000000000000LL;
  uint64_t v48 = (void *)sub_100048794(v47);
  v48[9] = &type metadata for String;
  v48[10] = v49;
  v48[11] = 0xE900000000000065LL;
  v48[12] = 0xD00000000000001ALL;
  uint64_t v50 = sub_1000488E0((uint64_t)v48, (uint64_t)"DisplayRestrictionsChanged");
  *(void *)(v50 + 120) = &type metadata for String;
  *(void *)(v50 + 128) = v51;
  *(void *)(v50 + 136) = 0xEA00000000007265LL;
  *(void *)(v50 + 144) = v5;
  *(void *)(v50 + 152) = v3;
  *(void *)(v50 + 168) = &type metadata for String;
  *(void *)(v50 + 176) = 0x6E65746E6F437369LL;
  *(void *)(v50 + 184) = 0xEF64656863614374LL;
  *(void *)(v50 + 2++*(void *)(v0 + 16) = &type metadata for Bool;
  *(_BYTE *)(v50 + 192) = 1;
  sub_100048A30();
  uint64_t v88 = Dictionary.init(dictionaryLiteral:)( v47,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v52 = v5;
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v77 = qword_1001DBB20;
  uint64_t v53 = sub_10000D33C(&qword_1001C9C70);
  sub_10002C79C();
  sub_1000487C4();
  uint64_t v76 = v54;
  *(_OWORD *)(swift_allocObject(v53, v5 + 2 * v54, v55 | 7) + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v56 = sub_10000D33C(&qword_1001CA290);
  id v57 = (id)sub_100048B74(v56);
  if (v57)
  {
    uint64_t v58 = v57;
    uint64_t v78 = v52;
    uint64_t v79 = v3;
    char v59 = v7;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    uint64_t v61 = v60;

    sub_10000DD9C();
    sub_100010564();
    sub_10000DC08();
    uint64_t v62 = v86;
    uint64_t v63 = sub_10000D37C(&v84, (uint64_t)v86);
    sub_10000DC54((uint64_t)v63, (uint64_t)v62);
    sub_100048E80();
    uint64_t v64 = sub_1000488D8();
    sub_100048D1C(v64, &qword_1001CAAD0);
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v81 = (void *)v7;
    uint64_t v82 = v61;
    LOBYTE(sub_100037074(v5, v6, v7) = v59;
    uint64_t v3 = v79;
    sub_1000488D8();
    sub_100048258((uint64_t)&v81, &qword_1001CAAD0);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A1BC();
    sub_10000DC08();
    int v70 = v86;
    uint64_t v71 = sub_10000D37C(&v84, (uint64_t)v86);
    sub_10000DC54((uint64_t)v71, (uint64_t)v70);
    uint64_t MetatypeMetadata = (void *)sub_100048E80();
    uint64_t v81 = v70;
    uint64_t v72 = sub_1000488D8();
    sub_100048D1C(v72, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(&v84);
  sub_1000485F4(68LL);
  sub_100048BA0();
  LogMessage.StringInterpolation.appendLiteral(_:)(v73);
  uint64_t v86 = &type metadata for String;
  uint64_t v84 = v52;
  uint64_t v85 = v3;
  sub_100048A30();
  uint64_t v74 = sub_100048D48();
  sub_100048B6C(v74, &qword_1001CAAD0);
  sub_1000488B0();
  sub_100048CCC();
  __asm { BR              X12 }

void sub_10003CC74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *a23)
{
  a19 = v25;
  a20 = v26;
  int v140 = v27;
  uint64_t v155 = v29;
  *(void *)&__int128 v156 = v28;
  *(void *)&__int128 v157 = v30;
  *((void *)&v157 + 1) = v31;
  *((void *)&v156 + 1) = v32;
  uint64_t v34 = v33;
  uint64_t v153 = v35;
  uint64_t v36 = sub_1000378A0();
  uint64_t v143 = *(void *)(v36 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v37);
  sub_10001A284();
  uint64_t v142 = v38;
  sub_10001A210();
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v134 - v40;
  sub_10000D33C(&qword_1001C8FE0);
  sub_10000DC64();
  __chkstk_darwin(v42);
  sub_10000DD5C();
  uint64_t v152 = v43;
  uint64_t v154 = (int *)sub_100020C40();
  sub_10000DC64();
  __chkstk_darwin(v44);
  uint64_t v141 = (char *)&v134 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001A210();
  __chkstk_darwin(v46);
  sub_100048CE0();
  uint64_t v146 = (void *)v47;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v48);
  sub_10004895C();
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v134 - v50;
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v151 = qword_1001DBB20;
  uint64_t v52 = sub_10000D33C(&qword_1001C9C70);
  sub_10002C79C();
  sub_1000487D4();
  id v159 = v53;
  uint64_t v148 = v52;
  uint64_t v136 = v24 + 2LL * (void)v53;
  uint64_t v55 = sub_100048B40(v52, v136, v54 | 7, (uint64_t)&a15);
  __int128 v138 = xmmword_100164230;
  *(_OWORD *)(v55 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v149 = v24;
  uint64_t v147 = type metadata accessor for ContentManager();
  *((void *)&v165 + 1) = v147;
  *(void *)&__int128 v164 = v23;
  uint64_t v160 = v23;
  uint64_t v56 = sub_100048DB4();
  id v57 = (id)AMSLogKey(v56);
  uint64_t v158 = v34;
  uint64_t v145 = v41;
  if (v57)
  {
    uint64_t v58 = sub_1000105E8((uint64_t)v57);
    sub_10004877C();
    sub_100020BB4();
    sub_100010564();
    sub_1000104F0();
    sub_1000104C0(&v164);
    uint64_t v59 = sub_100010530();
    sub_1000485E0(v59);
    sub_100048808((uint64_t)&v161);
    sub_10000DC14();
    uint64_t v163 = &type metadata for String;
    uint64_t v161 = v58;
    uint64_t v162 = (void *)v36;
    sub_100048640();
    uint64_t v34 = v158;
    sub_100048258((uint64_t)&v161, &qword_1001CAAD0);
    sub_10000DC4C(93LL);
    sub_10001A298();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A1BC();
    sub_1000104F0();
    sub_1000104C0(&v164);
    uint64_t v60 = sub_100010530();
    uint64_t v61 = sub_1000485E0(v60);
    sub_1000486DC(v61, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10001A298();
  }

  int v150 = a23;
  uint64_t v62 = a22;
  sub_100048738();
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(74LL, 4LL);
  sub_100048BA0();
  LogMessage.StringInterpolation.appendLiteral(_:)(v63);
  uint64_t v135 = v62;
  uint64_t v137 = v51;
  uint64_t v144 = v36;
  if (v34)
  {
    *((void *)&v165 + 1) = &type metadata for String;
    *(void *)&__int128 v164 = v153;
    *((void *)&v164 + 1) = v34;
  }

  else
  {
    __int128 v164 = 0u;
    __int128 v165 = 0u;
  }

  uint64_t v139 = a21;
  id v64 = v159;
  sub_10000DF10();
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v164);
  sub_100048648((uint64_t)&v164);
  sub_100048DFC(0x3A79656B090A202CLL);
  *((void *)&v165 + 1) = &type metadata for String;
  __int128 v164 = v156;
  sub_10000DEE0();
  sub_10000DCE8();
  sub_100048648((uint64_t)&v164);
  v65._uint64_t countAndFlagsBits = 0x73726576090A202CLL;
  v65._object = (void *)0xED0000203A6E6F69LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v65);
  *((void *)&v165 + 1) = &type metadata for String;
  __int128 v164 = v157;
  sub_10000DF10();
  sub_10000DCE8();
  sub_100048648((uint64_t)&v164);
  sub_100048DFC(0x3A6C7275090A202CLL);
  uint64_t v66 = type metadata accessor for URL(0LL);
  *((void *)&v165 + 1) = v66;
  uint64_t v67 = sub_100048BDC();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16LL))(v67, v155, v66);
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)(&v164);
  sub_100048648((uint64_t)&v164);
  v68._uint64_t countAndFlagsBits = 10506LL;
  v68._object = (void *)0xE200000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v68);
  uint64_t v69 = sub_10001A410();
  uint64_t v70 = static os_log_type_t.default.getter(v69);
  sub_1000BD1B0(v70, v55);
  sub_10000DE74();
  uint64_t v71 = v160;
  sub_1000400D0();
  uint64_t v72 = v152;
  sub_100101070(v73, v152);
  sub_100009070();
  uint64_t v74 = sub_1000102D4(v72, 1LL, (uint64_t)v154);
  uint64_t v75 = &qword_1001C8000;
  if ((_DWORD)v74 != 1)
  {
    uint64_t v79 = v146;
    sub_1000206E0(v72, (uint64_t)v146);
    uint64_t v80 = sub_100048784(v148, v149 + 3LL * (void)v64, (uint64_t)&a15);
    *(_OWORD *)(v80 + ++*(void *)(v0 + 16) = xmmword_100164240;
    uint64_t v81 = sub_1000486F0((uint64_t)&a14);
    id v82 = (id)AMSLogKey(v81);
    if (v82)
    {
      uint64_t v83 = sub_1000105E8((uint64_t)v82);
      sub_10004877C();
      sub_100020BB4();
      sub_100010564();
      sub_10004865C();
      sub_1000104C0(&v164);
      uint64_t v84 = sub_100010530();
      sub_100048604(v84);
      sub_100048704((uint64_t)&v161);
      sub_10000DC14();
      uint64_t v163 = &type metadata for String;
      uint64_t v161 = v83;
      uint64_t v162 = v71;
      sub_100048640();
      uint64_t v79 = v146;
      sub_100048258((uint64_t)&v161, &qword_1001CAAD0);
      sub_10000DC4C(93LL);
      sub_10004878C();
      uint64_t v71 = v160;
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_10004865C();
      sub_1000104C0(&v164);
      uint64_t v85 = sub_100010530();
      uint64_t v86 = sub_100048604(v85);
      sub_1000486DC(v86, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10004878C();
    }

    uint64_t v87 = v136;
    sub_10000D3A0(&v164);
    sub_10000E008();
    sub_10000DD38(19LL);
    uint64_t v88 = v154;
    *((void *)&v165 + 1) = v154;
    double v89 = sub_100048BDC();
    sub_100039F1C((uint64_t)v79, (uint64_t)v89);
    uint64_t v90 = sub_10004866C((uint64_t)&v164);
    uint64_t v91 = sub_100048774(v90, &qword_1001CAAD0);
    uint64_t v92 = static os_log_type_t.info.getter(v91);
    sub_1000487BC(v92, v80);
    sub_10000DCFC();
    if (*((_BYTE *)v79 + v88[10]) != 2) {
      goto LABEL_19;
    }
    uint64_t v93 = (void *)objc_opt_self(&OBJC_CLASS___NSFileManager);
    sub_10000DEE0();
    uint64_t v88 = (int *)[v93 defaultManager];
    NSString v94 = String._bridgeToObjectiveC()();
    sub_100009020();
    unsigned int v95 = [v88 fileExistsAtPath:v94];

    if (v95)
    {
      uint64_t v96 = (__n128 *)sub_100048784(v148, v87, (uint64_t)&a15);
      sub_1000489F4(v96);
      uint64_t v97 = sub_1000486F0((uint64_t)&a14);
      id v98 = (id)AMSLogKey(v97);
      if (v98)
      {
        uint64_t v99 = sub_1000105E8((uint64_t)v98);
        sub_100048890();
        sub_10000DEB4();
        sub_100010564();
        sub_10004865C();
        sub_1000104C0(&v164);
        uint64_t v100 = sub_100010530();
        sub_100048604(v100);
        uint64_t v71 = &qword_1001CAAD0;
        sub_100048648((uint64_t)&v161);
        sub_10000DC14();
        uint64_t v163 = &type metadata for String;
        uint64_t v161 = v99;
        uint64_t v162 = &type metadata for String;
        sub_100048640();
        sub_100048BCC();
        sub_10000DC4C(93LL);
        sub_10004878C();
        sub_10000DDF8();
      }

      else
      {
        sub_10001A1BC();
        sub_10004865C();
        sub_1000104C0(&v164);
        uint64_t v130 = sub_100010530();
        uint64_t v131 = sub_100048604(v130);
        sub_1000486DC(v131, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_10004878C();
      }

      sub_10000D3A0(&v164);
      uint64_t v113 = 0xD00000000000001BLL;
    }

    else
    {
LABEL_19:
      if (qword_1001C8088 != -1) {
        swift_once(&qword_1001C8088, sub_1000F5440);
      }
      char v101 = sub_1000F61E8((uint64_t)v79);
      unint64_t v102 = (__n128 *)sub_100048784(v148, v87, (uint64_t)&a15);
      sub_1000489F4(v102);
      if ((v101 & 1) == 0)
      {
        uint64_t v106 = sub_1000486F0((uint64_t)&a14);
        id v107 = (id)AMSLogKey(v106);
        if (v107)
        {
          uint64_t v108 = sub_1000105E8((uint64_t)v107);
          sub_10001A5B8();
          sub_10000DD9C();
          sub_100010564();
          sub_10004865C();
          sub_1000104C0(&v164);
          uint64_t v109 = sub_100010530();
          sub_100048604(v109);
          sub_100048648((uint64_t)&v161);
          sub_10000DC14();
          uint64_t v163 = &type metadata for String;
          uint64_t v161 = v108;
          uint64_t v162 = (void *)v80;
          sub_100048640();
          sub_100048648((uint64_t)&v161);
          sub_10000DC4C(93LL);
          sub_10004878C();
          sub_10000DCFC();
        }

        else
        {
          sub_10001A1BC();
          sub_10004865C();
          sub_1000104C0(&v164);
          uint64_t v114 = sub_100010530();
          uint64_t v115 = sub_100048604(v114);
          sub_1000486DC(v115, &qword_1001CAAD0);
          sub_10000DC4C(58LL);
          sub_10004878C();
        }

        sub_10000D3A0(&v164);
        sub_100048D64();
        uint64_t v117 = sub_1000105B4(v116 + 15);
        uint64_t v118 = static os_log_type_t.info.getter(v117);
        sub_1000487BC(v118, (uint64_t)v88);
        sub_1000090CC();
        uint64_t v78 = v141;
        if (v158)
        {
          sub_100039920(v153, v158);
          *(void *)&__int128 v164 = *v79;
          sub_10000DEE0();
          uint64_t v119 = sub_10000D33C(&qword_1001CDF50);
          sub_10001BD2C();
          uint64_t v76 = BidirectionalCollection<>.joined(separator:)(44LL, 0xE100000000000000LL, v119);
          unint64_t v77 = v120;
          sub_100009020();
          sub_1000207E4((uint64_t)v79);
        }

        else
        {
          sub_1000207E4((uint64_t)v79);
          uint64_t v76 = 0LL;
          unint64_t v77 = 0LL;
        }

        uint64_t v75 = &qword_1001C8000;
        goto LABEL_33;
      }

      uint64_t v103 = sub_1000486F0((uint64_t)&a14);
      id v104 = (id)AMSLogKey(v103);
      if (v104)
      {
        sub_1000105E8((uint64_t)v104);
        sub_100048DA8();
        sub_10000DF10();
        sub_100010564();
        sub_10004865C();
        sub_1000104C0(&v164);
        uint64_t v105 = sub_100010530();
        sub_100048604(v105);
        uint64_t v71 = &qword_1001CAAD0;
        sub_100048648((uint64_t)&v161);
        sub_10000DC14();
        uint64_t v163 = &type metadata for String;
        uint64_t v161 = v80;
        uint64_t v162 = (void *)v87;
        sub_100048640();
        sub_100048BCC();
        sub_10000DC4C(93LL);
        sub_10004878C();
        sub_10000DE2C();
      }

      else
      {
        sub_10001A1BC();
        sub_10004865C();
        sub_1000104C0(&v164);
        uint64_t v110 = sub_100010530();
        uint64_t v111 = sub_100048604(v110);
        sub_1000486DC(v111, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_10004878C();
      }

      sub_10000D3A0(&v164);
      sub_100048D64();
      uint64_t v113 = v112 + 6;
    }

    uint64_t v132 = sub_1000105B4(v113);
    uint64_t v133 = static os_log_type_t.info.getter(v132);
    sub_1000487BC(v133, (uint64_t)v88);
    sub_1000090CC();
    sub_10003DAC0((uint64_t)v79, v153, v158, v139, v135, v150, (uint64_t)v71);
    uint64_t v78 = v79;
    goto LABEL_43;
  }

  sub_100048D50(v74, &qword_1001C8FE0);
  uint64_t v76 = 0LL;
  unint64_t v77 = 0LL;
  uint64_t v78 = v141;
LABEL_33:
  if (v75[17] != -1) {
    swift_once(&qword_1001C8088, sub_1000F5440);
  }
  uint64_t v121 = sub_1000F5D64();
  uint64_t v123 = v122;
  id v159 = v124;
  if (!v77)
  {
    unint64_t v77 = v158;
    sub_10000DD9C();
    uint64_t v76 = v153;
  }

  uint64_t v125 = *((void *)&v156 + 1);
  sub_10000DED8();
  uint64_t v126 = *((void *)&v157 + 1);
  uint64_t v127 = sub_1000489DC();
  uint64_t v128 = v142;
  static Date.now.getter(v127);
  uint64_t v129 = (uint64_t)v145;
  Date.addingTimeInterval(_:)(2592000.0);
  sub_100048DBC(v128, *(uint64_t (**)(uint64_t, void))(v143 + 8));
  sub_10000DEE0();
  sub_1000393D8(v76, v77, v156, v125, v157, v126, v129, v121, v78, v123, 1);
  if (v150 != (void *)1) {
    __asm { BR              X10 }
  }

  sub_100040CB8();

  sub_100009020();
LABEL_43:
  sub_1000207E4((uint64_t)v78);
  sub_10000DD84();
}

uint64_t sub_10003DAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v37 = a4;
  uint64_t v38 = a7;
  uint64_t v36 = a5;
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = type metadata accessor for ContentInfo(0LL);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100039F1C(a1, (uint64_t)v20);
  static Date.now.getter(v21);
  Date.addingTimeInterval(_:)(2592000.0);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(&v20[*(int *)(v18 + 32)], v17, v11);
  if (a3)
  {
    sub_100039920(a2, a3);
    if (!a6) {
      goto LABEL_10;
    }
    if (a6 != (void *)1)
    {
      uint64_t v22 = sub_10003DE28(v36, a6, a2, a3);
      uint64_t v24 = v23;
      uint64_t v25 = *((void *)v20 + 1);
      swift_bridgeObjectRetain(v23);
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      {
        sub_100013F14();
        uint64_t v25 = v33;
      }

      unint64_t v26 = *(void *)(v25 + 16);
      if (v26 >= *(void *)(v25 + 24) >> 1)
      {
        sub_100013F14();
        uint64_t v25 = v34;
      }

      *(void *)(v25 + ++*(void *)(v0 + 16) = v26 + 1;
      uint64_t v27 = v25 + 16 * v26;
      *(void *)(v27 + 32) = v22;
      *(void *)(v27 + 40) = v24;
      swift_bridgeObjectRetain(v25);
      uint64_t v29 = sub_10013E21C(v28);
      sub_100104134(v29);
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *((void *)v20 + 1) = v31;
LABEL_10:
      __asm { BR              X10 }
    }
  }

  else if (a6 != (void *)1)
  {
    goto LABEL_10;
  }

  sub_100040CB8();
  return sub_1000207E4((uint64_t)v20);
}

uint64_t sub_10003DE28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v6._uint64_t countAndFlagsBits = 0xD000000000000019LL;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  String.append(_:)(v7);
  return a3;
}

void sub_10003DE94()
{
  uint64_t v96 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_100020C40();
  sub_10000DC64();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v12);
  sub_10000DC74();
  sub_10000D33C(&qword_1001CA280);
  sub_10000DC64();
  __chkstk_darwin(v13);
  sub_100048C04();
  uint64_t v14 = sub_10000D33C(&qword_1001CA288);
  sub_10000DC64();
  __chkstk_darwin(v15);
  sub_10004895C();
  uint64_t v18 = (_BYTE *)(v16 - v17);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v86 - v20;
  uint64_t v94 = type metadata accessor for ContentManager();
  sub_10003E4D4();
  sub_100048918((uint64_t)v0, 1LL, v14);
  if (v22)
  {
    sub_100048258((uint64_t)v0, &qword_1001CA280);
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v23 = *(void *)(*(void *)(sub_10002C79C() - 8) + 72LL);
    sub_10004892C();
    uint64_t v25 = (__n128 *)sub_10000DCF0(v3 + 3 * v23, v24);
    sub_100048E14(v25, (__n128)xmmword_100164240);
    uint64_t v26 = sub_10000D33C(&qword_1001CA290);
    id v27 = (id)sub_100048B30(v26);
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      uint64_t v31 = v30;

      sub_10000DEE0();
      sub_100010564();
      sub_10000DC08();
      uint64_t v32 = v105;
      uint64_t v33 = sub_10000D37C(&v103, (uint64_t)v105);
      uint64_t v34 = sub_10000DC54((uint64_t)v33, (uint64_t)v32);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v34);
      uint64_t v100 = (void *)v34;
      sub_10000DF68();
      sub_100048648((uint64_t)&v100);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v100 = (void *)v29;
      uint64_t v101 = v31;
      sub_10000DF68();
      sub_100048648((uint64_t)&v100);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_100009020();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      uint64_t v51 = v105;
      uint64_t v52 = sub_10000D37C(&v103, (uint64_t)v105);
      sub_10000DC54((uint64_t)v52, (uint64_t)v51);
      uint64_t MetatypeMetadata = (void *)sub_1000258E8();
      uint64_t v100 = v51;
      uint64_t v53 = sub_10000DF68();
      sub_100048740(v53, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_100048888();
    sub_1000105B4(0xD000000000000025LL);
    uint64_t v105 = &type metadata for String;
    uint64_t v103 = v7;
    uint64_t v104 = v5;
    sub_1000489DC();
    uint64_t v54 = sub_1000487EC();
    uint64_t v55 = sub_100048994(v54, &qword_1001CAAD0);
    uint64_t v56 = static os_log_type_t.error.getter(v55);
    sub_1000486E4(v56);
    sub_10000DE2C();
  }

  else
  {
    uint64_t v90 = v18;
    uint64_t v92 = v3;
    uint64_t v93 = v11;
    uint64_t v95 = v8;
    uint64_t v35 = v14;
    uint64_t v36 = *(int *)(v14 + 48);
    int v37 = *v0;
    *uint64_t v21 = v37;
    uint64_t v38 = (uint64_t)&v21[v36];
    sub_1000206E0((uint64_t)&v0[v36], (uint64_t)&v21[v36]);
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v89 = qword_1001DBB20;
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v39 = *(void *)(*(void *)(sub_10002C79C() - 8) + 72LL);
    sub_1000487C4();
    uint64_t v41 = sub_10000DCF0(v8 + 5 * v39, v40);
    *(_OWORD *)(v41 + ++*(void *)(v0 + 16) = xmmword_100164250;
    uint64_t v88 = v41;
    uint64_t v42 = sub_10000D33C(&qword_1001CA290);
    id v43 = (id)sub_100048B30(v42);
    uint64_t v91 = v21;
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      uint64_t v47 = v46;

      sub_10000DEE0();
      sub_100010564();
      sub_10000DC08();
      uint64_t v48 = v105;
      uint64_t v49 = sub_10000D37C(&v103, (uint64_t)v105);
      uint64_t v50 = sub_10000DC54((uint64_t)v49, (uint64_t)v48);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v50);
      uint64_t v100 = (void *)v50;
      sub_10000DF68();
      sub_100048810((uint64_t)&v100);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v100 = (void *)v45;
      uint64_t v101 = v47;
      sub_10000DF68();
      sub_100048810((uint64_t)&v100);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_100009020();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      id v57 = v105;
      uint64_t v58 = sub_10000D37C(&v103, (uint64_t)v105);
      sub_10000DC54((uint64_t)v58, (uint64_t)v57);
      uint64_t MetatypeMetadata = (void *)sub_1000258E8();
      uint64_t v100 = v57;
      uint64_t v59 = sub_10000DF68();
      sub_100048740(v59, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_100048888();
    sub_10000E008();
    sub_10000DD38(16LL);
    uint64_t v60 = *(int *)(v35 + 48);
    uint64_t v87 = v35;
    uint64_t v61 = v90;
    uint64_t v62 = (uint64_t)&v90[v60];
    *uint64_t v90 = v37;
    sub_100039F1C(v38, (uint64_t)&v61[v60]);
    uint64_t v64 = *(void *)(v62 + 16);
    uint64_t v63 = *(void *)(v62 + 24);
    sub_10000DF10();
    sub_1000207E4(v62);
    uint64_t v105 = &type metadata for String;
    uint64_t v103 = v64;
    uint64_t v104 = v63;
    sub_1000487EC();
    sub_1000485FC((uint64_t)&v103);
    uint64_t v65 = (uint64_t)&v61[*(int *)(v35 + 48)];
    *uint64_t v61 = v37;
    int v66 = v37;
    sub_100048D94(v38);
    uint64_t v67 = (uint64_t *)(v65 + *(int *)(v95 + 48));
    uint64_t v68 = *v67;
    uint64_t v69 = v67[1];
    sub_10000DF9C();
    sub_1000207E4(v65);
    uint64_t v105 = &type metadata for String;
    uint64_t v103 = v68;
    uint64_t v104 = v69;
    sub_100048650();
    sub_1000485FC((uint64_t)&v103);
    uint64_t v70 = v92;
    swift_getErrorValue(v92, &v99);
    uint64_t v105 = v98;
    uint64_t v71 = sub_10001A658();
    sub_100048A1C((uint64_t)v71);
    sub_100048650();
    uint64_t v72 = sub_1000485FC((uint64_t)&v103);
    uint64_t v73 = static os_log_type_t.error.getter(v72);
    sub_1000BD1B0(v73, v88);
    sub_100009020();
    sub_10003E67C(v66, v38, v70);
    char v74 = *v91;
    *(_BYTE *)(sub_10000DDDC(v94, 17LL) + ++*(void *)(v0 + 16) = v74;
    sub_100048D24();
    uint64_t v76 = (uint64_t)&v61[*(int *)(v75 + 48)];
    sub_100039F1C(v38, v76);
    uint64_t v77 = v76;
    uint64_t v78 = (uint64_t)v93;
    sub_1000206E0(v77, (uint64_t)v93);
    *(_BYTE *)(v78 + *(int *)(v95 + sub_1000238A8(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40)) = 3;
    sub_100040CB8();
    sub_1000460F4( v38,  0LL,  v79,  v80,  v81,  v82,  v83,  v84,  v86,  v87,  v88,  v89,  (uint64_t)v90,  (uint64_t)v91,  v92,  (uint64_t)v93,  v94,  v95,  v96,  v97);
    sub_1000292C4();
    uint64_t v85 = sub_1000207E4(v78);
    sub_100048D50(v85, &qword_1001CA288);
  }

  sub_10000DD84();
}

void sub_10003E4D4()
{
  unsigned __int8 v23 = v1;
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  uint64_t v20 = v4;
  sub_10000D33C(&qword_1001C8FE0);
  sub_10000DC64();
  __chkstk_darwin(v5);
  sub_10003772C();
  uint64_t v6 = sub_100020C40();
  sub_10000DC64();
  __chkstk_darwin(v7);
  sub_10000DD5C();
  uint64_t v19 = v8;
  uint64_t v9 = 4LL;
  type metadata accessor for AppDatabase();
  uint64_t v10 = &byte_1001A6DA0;
  while (1)
  {
    unsigned int v12 = *v10++;
    char v11 = v12;
    sub_100023140(v12, 0);
    sub_100023000();
    sub_1000292C4();
    sub_10001F404(v21, v22, v23, v0);
    swift_release();
    sub_100048918(v0, 1LL, v6);
    if (!v13) {
      break;
    }
    sub_1000485FC(v0);
    if (!--v9)
    {
      uint64_t v16 = sub_10000D33C(&qword_1001CA288);
      uint64_t v17 = (uint64_t)v20;
      uint64_t v18 = 1LL;
      goto LABEL_7;
    }
  }

  sub_1000206E0(v0, v19);
  uint64_t v14 = sub_10000D33C(&qword_1001CA288);
  uint64_t v15 = (uint64_t)&v20[*(int *)(v14 + 48)];
  *uint64_t v20 = v11;
  sub_1000206E0(v19, v15);
  uint64_t v17 = (uint64_t)v20;
  uint64_t v18 = 0LL;
  uint64_t v16 = v14;
LABEL_7:
  sub_10000D5C0(v17, v18, 1LL, v16);
  sub_10000DD84();
}

uint64_t sub_10003E67C(int a1, uint64_t a2, uint64_t a3)
{
  int v80 = a1;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_10000D33C(&qword_1001C8BC0);
  uint64_t inited = swift_initStackObject(v8, v88);
  uint64_t v10 = (void *)inited;
  __int128 v79 = xmmword_1001649D0;
  *(_OWORD *)(inited + ++*(void *)(v0 + 16) = xmmword_1001649D0;
  *(void *)(inited + 32) = 0x656372756F73LL;
  *(void *)(inited + 40) = 0xE600000000000000LL;
  strcpy((char *)(inited + 48), "amsengagementd");
  *(_BYTE *)(inited + 63) = -18;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x707954746E657665LL;
  unint64_t v11 = 0x800000010016C510LL;
  if (a3) {
    unint64_t v11 = 0xED000064656C6961LL;
  }
  unint64_t v12 = 0x46746E65746E6F43LL;
  if (!a3) {
    unint64_t v12 = 0xD000000000000010LL;
  }
  *(void *)(inited + 88) = 0xE900000000000065LL;
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x79654B6568636163LL;
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  *(void *)(inited + 136) = 0xE800000000000000LL;
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = v14;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x6E6F6973726576LL;
  *(void *)(inited + 184) = 0xE700000000000000LL;
  uint64_t v15 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ContentInfo(0LL) + 48));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v10[27] = &type metadata for String;
  v10[24] = v16;
  v10[25] = v17;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v17);
  v88[28] = Dictionary.init(dictionaryLiteral:)( v10,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  if (a3)
  {
    uint64_t v18 = (void *)_convertErrorToNSError(_:)(a3);
    uint64_t v19 = swift_initStackObject(v8, &v82);
    *(_OWORD *)(v19 + ++*(void *)(v0 + 16) = v79;
    *(void *)(v19 + 32) = 1701080931LL;
    *(void *)(v19 + 40) = 0xE400000000000000LL;
    *(void *)(v19 + 48) = [v18 code];
    *(void *)(v19 + 72) = &type metadata for Int;
    *(void *)(v19 + 80) = 0x6E69616D6F64LL;
    *(void *)(v19 + 88) = 0xE600000000000000LL;
    id v20 = [v18 domain];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    uint64_t v23 = v22;

    *(void *)(v19 + 96) = v21;
    *(void *)(v19 + 104) = v23;
    *(void *)(v19 + 120) = &type metadata for String;
    *(void *)(v19 + 128) = 0x656C746974LL;
    *(void *)(v19 + 136) = 0xE500000000000000LL;
    uint64_t v24 = sub_10000D6DC(v18, (SEL *)&selRef_ams_title);
    if (v25) {
      uint64_t v26 = v24;
    }
    else {
      uint64_t v26 = 0LL;
    }
    if (v25) {
      unint64_t v27 = v25;
    }
    else {
      unint64_t v27 = 0xE000000000000000LL;
    }
    *(void *)(v19 + 144) = v26;
    *(void *)(v19 + 152) = v27;
    *(void *)(v19 + 168) = &type metadata for String;
    *(void *)(v19 + 176) = 0x6567617373656DLL;
    *(void *)(v19 + 184) = 0xE700000000000000LL;
    uint64_t v28 = sub_10000D6DC(v18, (SEL *)&selRef_ams_message);
    *(void *)(v19 + 2++*(void *)(v0 + 16) = &type metadata for String;
    if (v29) {
      uint64_t v30 = v28;
    }
    else {
      uint64_t v30 = 0LL;
    }
    if (v29) {
      unint64_t v31 = v29;
    }
    else {
      unint64_t v31 = 0xE000000000000000LL;
    }
    *(void *)(v19 + 192) = v30;
    *(void *)(v19 + 200) = v31;
    uint64_t v32 = Dictionary.init(dictionaryLiteral:)( v19,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
    uint64_t v87 = sub_10000D33C(&qword_1001C8F18);
    v86[0] = v32;
    sub_100030118((uint64_t)v86, 0x726F727265LL, 0xE500000000000000LL);
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v33 = qword_1001DBB20;
    uint64_t v34 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v35 = type metadata accessor for LogMessage(0LL);
    uint64_t v36 = swift_allocObject( v34,  ((*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v35 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v36 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v87 = sub_10000D33C(&qword_1001CA290);
    v86[0] = v81;
    id v37 = (id)AMSLogKey(v87);
    if (v37)
    {
      uint64_t v38 = v37;
      uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      *(void *)&__int128 v79 = v33;
      uint64_t v40 = v39;

      swift_bridgeObjectRetain(v40);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v41._uint64_t countAndFlagsBits = 0LL;
      v41._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t v42 = v87;
      id v43 = sub_10000D37C(v86, v87);
      uint64_t DynamicType = swift_getDynamicType(v43, v42, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v83 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
      sub_100048258((uint64_t)&v83, &qword_1001CAAD0);
      v45._uint64_t countAndFlagsBits = 5972026LL;
      v45._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v83 = v78;
      uint64_t v84 = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
      sub_100048258((uint64_t)&v83, &qword_1001CAAD0);
      v46._uint64_t countAndFlagsBits = 93LL;
      v46._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      LogMessage.init(stringInterpolation:)(v7);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v62._uint64_t countAndFlagsBits = 0LL;
      v62._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v62);
      uint64_t v63 = v87;
      uint64_t v64 = sub_10000D37C(v86, v87);
      uint64_t v65 = swift_getDynamicType(v64, v63, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v65);
      uint64_t v83 = v65;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
      sub_100048258((uint64_t)&v83, &qword_1001CAAD0);
      v66._uint64_t countAndFlagsBits = 58LL;
      v66._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v66);
      LogMessage.init(stringInterpolation:)(v7);
    }

    sub_10000D3A0(v86);
    uint64_t v67 = LogMessage.init(stringLiteral:)(0xD00000000000001DLL);
    uint64_t v68 = static os_log_type_t.error.getter(v67);
    sub_1000BD1B0(v68, v36);
  }

  else
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v47 = qword_1001DBB20;
    uint64_t v48 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v49 = type metadata accessor for LogMessage(0LL);
    uint64_t v50 = swift_allocObject( v48,  ((*(unsigned __int8 *)(*(void *)(v49 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v49 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v49 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v49 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v50 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v87 = sub_10000D33C(&qword_1001CA290);
    v86[0] = v81;
    id v51 = (id)AMSLogKey(v87);
    if (v51)
    {
      uint64_t v52 = v51;
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      *(void *)&__int128 v79 = v47;
      uint64_t v55 = v54;

      swift_bridgeObjectRetain(v55);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v56._uint64_t countAndFlagsBits = 0LL;
      v56._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      uint64_t v57 = v87;
      uint64_t v58 = sub_10000D37C(v86, v87);
      uint64_t v59 = swift_getDynamicType(v58, v57, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v59);
      uint64_t v83 = v59;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
      sub_100048258((uint64_t)&v83, &qword_1001CAAD0);
      v60._uint64_t countAndFlagsBits = 5972026LL;
      v60._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v60);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v83 = v53;
      uint64_t v84 = v55;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
      sub_100048258((uint64_t)&v83, &qword_1001CAAD0);
      v61._uint64_t countAndFlagsBits = 93LL;
      v61._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v61);
      LogMessage.init(stringInterpolation:)(v7);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v69._uint64_t countAndFlagsBits = 0LL;
      v69._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v69);
      uint64_t v70 = v87;
      uint64_t v71 = sub_10000D37C(v86, v87);
      uint64_t v72 = swift_getDynamicType(v71, v70, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v72);
      uint64_t v83 = v72;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v83);
      sub_100048258((uint64_t)&v83, &qword_1001CAAD0);
      v73._uint64_t countAndFlagsBits = 58LL;
      v73._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v73);
      LogMessage.init(stringInterpolation:)(v7);
    }

    sub_10000D3A0(v86);
    uint64_t v74 = LogMessage.init(stringLiteral:)(0xD00000000000001FLL);
    uint64_t v75 = static os_log_type_t.default.getter(v74);
    sub_1000BD1B0(v75, v50);
  }

  swift_bridgeObjectRelease();
  sub_100045390(v80);
  return swift_bridgeObjectRelease();
}

void sub_10003EE7C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v203 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v210 = sub_100020C40();
  sub_10000DC64();
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t)&v189 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000D33C(&qword_1001CB180);
  sub_10000DC64();
  __chkstk_darwin(v34);
  sub_10001A284();
  uint64_t v207 = v35;
  sub_10001A210();
  __chkstk_darwin(v36);
  sub_100048CE0();
  uint64_t v38 = sub_1000487F8(v37);
  uint64_t v211 = *(void *)(v38 - 8);
  uint64_t v212 = v38;
  sub_10000DC8C();
  __chkstk_darwin(v39);
  sub_10000DD5C();
  uint64_t v213 = v40;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v41);
  sub_100048C04();
  sub_10000D33C(&qword_1001CA280);
  sub_10000DC64();
  __chkstk_darwin(v42);
  sub_10000DE7C();
  Swift::String v45 = (unsigned __int8 *)(v44 - v43);
  uint64_t v46 = sub_10000D33C(&qword_1001CA288);
  sub_10000DC64();
  __chkstk_darwin(v47);
  sub_10001A284();
  uint64_t v201 = v48;
  sub_10001A210();
  __chkstk_darwin(v49);
  sub_10001A3B0();
  v200 = v50;
  sub_10001A210();
  __chkstk_darwin(v51);
  v209 = (char *)&v189 - v52;
  sub_10001A210();
  __chkstk_darwin(v53);
  uint64_t v55 = (char *)&v189 - v54;
  uint64_t v205 = type metadata accessor for ContentManager();
  v215 = v30;
  sub_10003E4D4();
  if (sub_1000102D4((uint64_t)v45, 1LL, v46) != 1)
  {
    uint64_t v214 = (uint64_t)v21;
    uint64_t v190 = v33;
    uint64_t v62 = *(int *)(v46 + 48);
    uint64_t v63 = (uint64_t)&v55[v62];
    uint64_t v64 = (uint64_t)&v45[v62];
    LODWORD(v62) = *v45;
    uint64_t v65 = v63;
    v204 = v55;
    int v206 = v62;
    *uint64_t v55 = v62;
    sub_1000206E0(v64, v63);
    uint64_t v66 = v46;
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v193 = qword_1001DBB20;
    uint64_t v67 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v68 = *(void *)(sub_10002C79C() - 8);
    Swift::String v69 = *(void **)(v68 + 72);
    uint64_t v70 = *(unsigned __int8 *)(v68 + 80);
    uint64_t v71 = (v70 + 32) & ~v70;
    v215 = v69;
    uint64_t v196 = v67;
    uint64_t v72 = sub_100048B40(v67, v71 + 4LL * (void)v69, v70 | 7, (uint64_t)&v223);
    *(_OWORD *)(v72 + ++*(void *)(v0 + 16) = xmmword_1001649D0;
    uint64_t v198 = v71;
    uint64_t v192 = v72;
    v197 = (void *)sub_10000D33C(&qword_1001CA290);
    v224 = v197;
    id v73 = (id)sub_100048D3C();
    uint64_t v199 = v20;
    uint64_t v191 = v46;
    uint64_t v194 = v25;
    if (v73)
    {
      uint64_t v74 = sub_1000105E8((uint64_t)v73);
      sub_100048890();
      sub_10000DEB4();
      sub_100010564();
      sub_1000104F0();
      sub_1000104C0(&v221);
      uint64_t v75 = sub_100010530();
      sub_1000485E0(v75);
      sub_1000486B8((uint64_t)&v218);
      sub_10000DC14();
      v220 = &type metadata for String;
      uint64_t v218 = v74;
      uint64_t v219 = v46;
      sub_100048640();
      sub_1000486B8((uint64_t)&v218);
      sub_10000DC4C(93LL);
      sub_10001A298();
      uint64_t v66 = v191;
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_1000104F0();
      sub_1000104C0(&v221);
      uint64_t v81 = sub_100010530();
      uint64_t v82 = sub_1000485E0(v81);
      sub_1000486DC(v82, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10001A298();
    }

    sub_100048738();
    sub_10000E008();
    sub_10000DD38(18LL);
    uint64_t v83 = v209;
    uint64_t v84 = (uint64_t)&v209[*(int *)(v66 + 48)];
    char v85 = v206;
    _BYTE *v209 = v206;
    sub_100048D94(v65);
    uint64_t v202 = v65;
    uint64_t v86 = v66;
    uint64_t v88 = *(void **)(v84 + 16);
    uint64_t v87 = *(void *)(v84 + 24);
    sub_10000DEB4();
    sub_1000207E4(v84);
    v224 = &type metadata for String;
    id v221 = v88;
    uint64_t v222 = v87;
    sub_10004866C((uint64_t)&v221);
    sub_100048E68();
    uint64_t v89 = v202;
    uint64_t v90 = (uint64_t)&v83[*(int *)(v86 + 48)];
    *uint64_t v83 = v85;
    sub_100039F1C(v89, v90);
    uint64_t v91 = v90 + *(int *)(v210 + 48);
    uint64_t v93 = *(void **)v91;
    uint64_t v92 = *(void *)(v91 + 8);
    sub_100020BB4();
    sub_1000207E4(v90);
    v224 = &type metadata for String;
    id v221 = v93;
    uint64_t v222 = v92;
    static LogMessage.safe(_:)(&v221);
    uint64_t v94 = sub_100048E68();
    uint64_t v95 = static os_log_type_t.default.getter(v94);
    sub_100048B00(v95, v192);
    sub_1000090CC();
    uint64_t v205 = sub_10000DDDC(v205, 17LL);
    *(_BYTE *)(v205 + ++*(void *)(v0 + 16) = v85;
    uint64_t v96 = v207;
    sub_100048454(v194, v207, &qword_1001CB180);
    uint64_t v97 = v212;
    uint64_t v98 = sub_100048918(v96, 1LL, v212);
    if (v99)
    {
      sub_100048CB0(v98, &qword_1001CB180);
      uint64_t v100 = 0LL;
      uint64_t v102 = 0xE000000000000000LL;
    }

    else
    {
      uint64_t v100 = URL.pathExtension.getter(v98);
      uint64_t v102 = v101;
      sub_100048CB8(*(uint64_t (**)(uint64_t, uint64_t))(v211 + 8));
    }

    uint64_t v103 = (uint64_t)v204;
    uint64_t v104 = v208;
    uint64_t v105 = 2LL * (void)v215;
    uint64_t v106 = v213;
    sub_10003FD44(v89, v206, v100, v102, v208);
    sub_10000DE2C();
    sub_100048918(v104, 1LL, v97);
    if (v99)
    {
      uint64_t v107 = sub_100048258(v104, &qword_1001CB180);
      uint64_t v108 = (__n128 *)sub_100048748(v107, v198 + v105);
      sub_100048E14(v108, (__n128)xmmword_100164230);
      id v109 = (id)sub_1000489B4();
      if (v109)
      {
        uint64_t v110 = sub_1000105E8((uint64_t)v109);
        sub_10001A5B8();
        sub_10000DD9C();
        sub_100010564();
        sub_1000104F0();
        sub_1000104C0(&v221);
        uint64_t v111 = sub_100010530();
        sub_1000485E0(v111);
        sub_100048704((uint64_t)&v218);
        sub_10000DC14();
        v220 = &type metadata for String;
        uint64_t v218 = v110;
        uint64_t v219 = v103;
        sub_100048640();
        sub_100048704((uint64_t)&v218);
        sub_10000DC4C(93LL);
        sub_10001A298();
        swift_bridgeObjectRelease();
      }

      else
      {
        sub_10001A1BC();
        sub_1000104F0();
        sub_1000104C0(&v221);
        uint64_t v144 = sub_100010530();
        uint64_t v145 = sub_1000485E0(v144);
        sub_1000486DC(v145, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_10001A298();
      }

      sub_100048E44();
      uint64_t v147 = sub_1000105B4(v146 + 20);
      uint64_t v148 = static os_log_type_t.error.getter(v147);
      sub_1000486E4(v148);
      sub_10000DE2C();
      sub_1000489A8();
      uint64_t v149 = v103;
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 32))(v106, v104, v97);
      uint64_t v112 = (void *)objc_opt_self(&OBJC_CLASS___NSFileManager);
      id v113 = [v112 defaultManager];
      URL.path.getter(v113, v114);
      NSString v115 = sub_100048C6C();
      sub_100009070();
      id v221 = 0LL;
      unsigned int v116 = [v113 removeItemAtPath:v115 error:&v221];

      id v117 = v221;
      if (!v116)
      {
        uint64_t v118 = sub_100048A10();

        swift_willThrow(v119);
        swift_errorRelease(v118);
      }

      uint64_t v120 = v190;
      id v121 = [v112 defaultManager];
      URL._bridgeToObjectiveC()((NSURL *)&a13);
      uint64_t v123 = v122;
      uint64_t v124 = v213;
      URL._bridgeToObjectiveC()(v125);
      uint64_t v127 = v126;
      id v221 = 0LL;
      unsigned int v128 = [v121 moveItemAtURL:v123 toURL:v126 error:&v221];

      id v129 = v221;
      if (v128)
      {
        uint64_t v130 = (uint64_t)&v209[*(int *)(v191 + 48)];
        sub_100048B14();
        int v132 = *v131;
        sub_100048D94(v202);
        sub_1000206E0(v130, v120);
        id v133 = v129;
        uint64_t v135 = URL.path.getter(v133, v134);
        uint64_t v137 = v136;
        uint64_t v138 = v210;
        uint64_t v139 = (uint64_t *)(v120 + *(int *)(v210 + 36));
        swift_bridgeObjectRelease();
        *uint64_t v139 = v135;
        v139[1] = v137;
        *(_BYTE *)(v120 + *(int *)(v138 + sub_1000238A8(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40)) = 2;
        sub_100045328();
        sub_10001FB50();
        sub_1000292C4();
        sub_10003E67C(v132, v120, 0LL);
        sub_100045328();
        uint64_t v162 = v191;
        uint64_t v163 = &v200[*(int *)(v191 + 48)];
        _BYTE *v200 = v132;
        uint64_t v164 = v202;
        sub_100048BAC(v202);
        uint64_t v166 = *((void *)v163 + 2);
        uint64_t v165 = *((void *)v163 + 3);
        sub_10000DEB4();
        sub_1000489EC();
        uint64_t v167 = v201 + *(int *)(v162 + 48);
        sub_100048B14();
        *uint64_t v169 = *v168;
        sub_100048BAC(v164);
        uint64_t v170 = (uint64_t *)(v167 + *(int *)(v210 + 48));
        uint64_t v172 = *v170;
        uint64_t v171 = v170[1];
        sub_10000DD9C();
        sub_1000489EC();
        sub_10001F7FC(v166, v165, v172, v171);
        sub_10000DCFC();
        sub_1000292C4();
        sub_10000DDF8();
        uint64_t v173 = v205;
        sub_1000460F4( v164,  1LL,  v174,  v175,  v176,  v177,  v178,  v179,  v189,  v190,  v191,  v192,  v193,  v194,  v195,  v196,  (uint64_t)v197,  v198,  v199,  (uint64_t)v200);
        *(_OWORD *)(sub_100048748(v180, v198 + v105) + ++*(void *)(v0 + 16) = xmmword_100164230;
        v224 = v197;
        id v181 = (id)sub_100048D3C();
        if (v181)
        {
          uint64_t v182 = sub_1000105E8((uint64_t)v181);
          sub_10001A5B8();
          sub_10000DD9C();
          sub_100010564();
          sub_1000104F0();
          sub_1000104C0(&v221);
          uint64_t v183 = sub_100010530();
          sub_1000485E0(v183);
          sub_100048704((uint64_t)&v218);
          sub_10000DC14();
          v220 = &type metadata for String;
          uint64_t v218 = v182;
          uint64_t v219 = v173;
          sub_100048640();
          sub_100048704((uint64_t)&v218);
          sub_10000DC4C(93LL);
          sub_10001A298();
          swift_bridgeObjectRelease();
        }

        else
        {
          sub_10001A1BC();
          sub_1000104F0();
          sub_1000104C0(&v221);
          uint64_t v184 = sub_100010530();
          uint64_t v185 = sub_1000485E0(v184);
          sub_1000486DC(v185, &qword_1001CAAD0);
          sub_10000DC4C(58LL);
          sub_10001A298();
        }

        sub_100048E44();
        uint64_t v187 = sub_1000105B4(v186 + 10);
        uint64_t v188 = static os_log_type_t.default.getter(v187);
        sub_1000486E4(v188);
        swift_release();
        sub_10000DE2C();
        sub_100048C5C();
        sub_100048D8C(&qword_1001CA288, (uint64_t)&a14);
        sub_1000207E4(v190);
        goto LABEL_32;
      }

      id v140 = v221;
      uint64_t v141 = sub_100048A10();

      swift_willThrow(v142);
      sub_1000489A8();
      uint64_t v143 = sub_10004884C();
      uint64_t v150 = sub_100048748(v143, v198 + v105);
      *(_OWORD *)(v150 + ++*(void *)(v0 + 16) = xmmword_100164230;
      id v151 = (id)sub_1000489B4();
      if (v151)
      {
        sub_1000105E8((uint64_t)v151);
        sub_10004870C();
        sub_100020BB4();
        sub_100010564();
        sub_1000104F0();
        sub_1000104C0(&v221);
        uint64_t v152 = sub_100010530();
        sub_1000485E0(v152);
        sub_1000486B8((uint64_t)&v218);
        sub_10000DC14();
        v220 = &type metadata for String;
        uint64_t v218 = v120;
        uint64_t v219 = v124;
        sub_100048640();
        sub_1000486B8((uint64_t)&v218);
        sub_10000DC4C(93LL);
        sub_10001A298();
        sub_100020AB8();
      }

      else
      {
        sub_10001A1BC();
        sub_1000104F0();
        sub_1000104C0(&v221);
        uint64_t v153 = sub_100010530();
        uint64_t v154 = sub_1000485E0(v153);
        sub_1000486DC(v154, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_10001A298();
      }

      sub_10000D3A0(&v221);
      sub_10001A21C(29LL);
      sub_100048BA0();
      LogMessage.StringInterpolation.appendLiteral(_:)(v155);
      sub_100048C1C();
      uint64_t v156 = v216;
      __int128 v157 = v217;
      v224 = v217;
      uint64_t v158 = sub_100048BDC();
      (*(void (**)(void *, uint64_t, void *))(*(v157 - 1) + 16LL))(v158, v156, v157);
      uint64_t v159 = LogMessage.StringInterpolation.appendInterpolation(safe:)(&v221);
      sub_100048774(v159, &qword_1001CAAD0);
      sub_10000DC08();
      uint64_t v160 = sub_10001A298();
      uint64_t v161 = static os_log_type_t.error.getter(v160);
      sub_1000BD1B0(v161, v150);
      sub_10000DDF8();
      swift_errorRelease(v141);
      uint64_t v149 = (uint64_t)v204;
    }

    sub_100048258(v149, &qword_1001CA288);
    goto LABEL_32;
  }

  sub_100048258((uint64_t)v45, &qword_1001CA280);
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v56 = qword_1001DBB20;
  sub_10000D33C(&qword_1001C9C70);
  sub_10002C79C();
  sub_100048C2C();
  uint64_t v58 = sub_100048E38(v25 + 3 * v33, v57);
  *(_OWORD *)(v58 + ++*(void *)(v0 + 16) = xmmword_100164240;
  v224 = (void *)sub_10000D33C(&qword_1001CA290);
  id v221 = v21;
  id v59 = (id)AMSLogKey(v224);
  if (v59)
  {
    uint64_t v60 = sub_1000105E8((uint64_t)v59);
    uint64_t v214 = v56;
    sub_10004877C();
    sub_100020BB4();
    sub_100010564();
    sub_1000104F0();
    sub_1000104C0(&v221);
    uint64_t v61 = sub_100010530();
    sub_1000485E0(v61);
    sub_100048810((uint64_t)&v218);
    sub_10000DC14();
    v220 = &type metadata for String;
    uint64_t v218 = v60;
    uint64_t v219 = v56;
    sub_100048640();
    sub_100048258((uint64_t)&v218, &qword_1001CAAD0);
    sub_10000DC4C(93LL);
    sub_10001A298();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A1BC();
    sub_1000104F0();
    sub_1000104C0(&v221);
    uint64_t v76 = sub_100010530();
    uint64_t v77 = sub_1000485E0(v76);
    sub_1000486DC(v77, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10001A298();
  }

  sub_100048738();
  sub_1000105B4(0xD000000000000027LL);
  v224 = &type metadata for String;
  id v221 = v215;
  uint64_t v222 = v28;
  sub_10000DEB4();
  uint64_t v78 = sub_10004885C((uint64_t)&v221);
  uint64_t v79 = sub_100048774(v78, &qword_1001CAAD0);
  uint64_t v80 = static os_log_type_t.error.getter(v79);
  sub_1000BD1B0(v80, v58);
  sub_10000DE2C();
LABEL_32:
  sub_10000DD84();
}

uint64_t sub_10003FD44@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = sub_1000455C4(a1);
  if (!v17) {
    return sub_10000D5C0(a5, 1LL, 1LL, v9);
  }
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  sub_100043130(a2);
  URL.appendingPathComponent(_:)(v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v21 = v20(v13, v9);
  uint64_t v22 = URL.pathExtension.getter(v21);
  uint64_t v24 = v29;
  if (v22 == v29 && v23 == a4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }

  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v29, a4, 0LL);
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
  {
LABEL_10:
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v15, v9);
    return sub_10000D5C0(a5, 0LL, 1LL, v9);
  }

  URL.appendingPathExtension(_:)(v24, a4);
  v20(v15, v9);
  return sub_10000D5C0(a5, 0LL, 1LL, v9);
}

void sub_10003FEFC()
{
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v7);
  uint64_t v8 = sub_100048688();
  if (v1)
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v10 = sub_100010570();
    uint64_t v11 = (__n128 *)sub_100048618(v10);
    uint64_t v12 = sub_100048830(v11, (__n128)xmmword_100164240);
    uint64_t v13 = sub_100048718(v12);
    id v14 = (id)AMSLogKey(v13);
    if (v14)
    {
      sub_1000105E8((uint64_t)v14);
      sub_10004870C();
      sub_100020BB4();
      sub_100010564();
      sub_100010608();
      sub_1000104C0(v23);
      uint64_t v15 = sub_100010530();
      sub_1000485CC(v15);
      sub_1000486B8((uint64_t)v22);
      sub_10000DC14();
      void v22[3] = &type metadata for String;
      v22[0] = v2;
      v22[1] = v0;
      sub_10000DF68();
      sub_1000486B8((uint64_t)v22);
      sub_10000DC4C(93LL);
      sub_1000486D0();
      sub_100020AB8();
    }

    else
    {
      sub_10001A1BC();
      sub_100010608();
      sub_1000104C0(v23);
      uint64_t v16 = sub_100010530();
      uint64_t v17 = sub_1000485CC(v16);
      sub_100048740(v17, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_1000486D0();
    }

    sub_100048AE8();
    sub_10000DD38(28LL);
    sub_1000486C0();
    uint64_t v18 = sub_100048728();
    sub_1000486A4((uint64_t)v18);
    uint64_t v19 = sub_100048650();
    uint64_t v20 = sub_100048994(v19, &qword_1001CAAD0);
    uint64_t v21 = static os_log_type_t.error.getter(v20);
    sub_1000487BC(v21, (uint64_t)v11);
    sub_10000DDF8();
    sub_1000258D4();
    sub_10000DD84();
  }

  else
  {
    uint64_t v9 = v8;
    sub_10001E528(v6, v4);
    sub_10004875C(v9);
  }

void sub_1000400D0()
{
  uint64_t v3 = v2;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v4);
  sub_100048688();
  if (v1)
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v5 = sub_100010570();
    uint64_t v6 = (__n128 *)sub_100048618(v5);
    uint64_t v7 = sub_100048830(v6, (__n128)xmmword_100164240);
    uint64_t v8 = sub_100048718(v7);
    id v9 = (id)AMSLogKey(v8);
    if (v9)
    {
      sub_1000105E8((uint64_t)v9);
      sub_10004870C();
      sub_100020BB4();
      sub_100010564();
      sub_100010608();
      sub_1000104C0(v18);
      uint64_t v10 = sub_100010530();
      sub_1000485CC(v10);
      sub_1000486B8((uint64_t)v17);
      sub_10000DC14();
      v17[3] = &type metadata for String;
      v17[0] = v3;
      v17[1] = v0;
      sub_10000DF68();
      sub_1000486B8((uint64_t)v17);
      sub_10000DC4C(93LL);
      sub_1000486D0();
      sub_100020AB8();
    }

    else
    {
      sub_10001A1BC();
      sub_100010608();
      sub_1000104C0(v18);
      uint64_t v11 = sub_100010530();
      uint64_t v12 = sub_1000485CC(v11);
      sub_100048740(v12, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_1000486D0();
    }

    sub_100048AE8();
    sub_10000DD38(28LL);
    sub_1000486C0();
    uint64_t v13 = sub_100048728();
    sub_1000486A4((uint64_t)v13);
    uint64_t v14 = sub_100048650();
    uint64_t v15 = sub_100048994(v14, &qword_1001CAAD0);
    uint64_t v16 = static os_log_type_t.error.getter(v15);
    sub_1000487BC(v16, (uint64_t)v6);
    sub_10000DDF8();
    sub_1000258D4();
  }

  else
  {
    sub_10001EA08();
    sub_1000292C4();
  }

  sub_10000DD84();
}

void sub_1000402C4()
{
  uint64_t v1 = v0;
  uint64_t v4 = v2;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v3);
  sub_10003772C();
  sub_100045328();
  sub_10001E7C4(v4, v1);
  sub_1000292C4();
  sub_10000DD84();
}

void sub_10004050C()
{
}

void sub_100040774()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_100020C40();
  sub_10000DC64();
  __chkstk_darwin(v7);
  sub_10000DE7C();
  uint64_t v10 = (void *)(v9 - v8);
  uint64_t v11 = *(void **)v1;
  uint64_t v12 = *(void *)(*(void *)v1 + 16LL);
  if (!v12) {
    goto LABEL_19;
  }
  uint64_t v13 = v11[4];
  uint64_t v14 = v11[5];
  BOOL v15 = v13 == v5 && v14 == (void)v3;
  if (v12 == 1)
  {
LABEL_19:
    sub_10000DD84();
    return;
  }

  uint64_t v26 = v11[6];
  uint64_t v27 = v11[7];
  BOOL v28 = v26 == v5 && v27 == (void)v3;
  if (!v28 && (sub_100025718(v26, v27, v5, (uint64_t)v3) & 1) == 0)
  {
    if (v12 != 2)
    {
      uint64_t v29 = v11 + 9;
      uint64_t v30 = 2LL;
      while (1)
      {
        uint64_t v31 = v30 + 1;
        if (__OFADD__(v30, 1LL)) {
          goto LABEL_59;
        }
        uint64_t v32 = *(v29 - 1);
        uint64_t v33 = *v29;
        BOOL v34 = v32 == v5 && v33 == (void)v3;
        v29 += 2;
        ++v30;
        if (v31 == v12) {
          goto LABEL_19;
        }
      }
    }

    goto LABEL_19;
  }

void sub_100040A80(uint64_t a1, void *a2, uint64_t a3)
{
}

void sub_100040AD4()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_100048688();
  if (v1)
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v13 = sub_100010570();
    uint64_t v14 = (__n128 *)sub_100048618(v13);
    uint64_t v15 = sub_100048830(v14, (__n128)xmmword_100164240);
    uint64_t v16 = sub_100048718(v15);
    id v17 = (id)AMSLogKey(v16);
    if (v17)
    {
      sub_1000105E8((uint64_t)v17);
      sub_10004870C();
      sub_100020BB4();
      sub_100010564();
      sub_100010608();
      sub_1000104C0(v26);
      uint64_t v18 = sub_100010530();
      sub_1000485CC(v18);
      sub_1000486B8((uint64_t)v25);
      sub_10000DC14();
      void v25[3] = &type metadata for String;
      v25[0] = v9;
      v25[1] = v0;
      sub_10000DF68();
      sub_1000486B8((uint64_t)v25);
      sub_10000DC4C(93LL);
      sub_1000486D0();
      sub_100020AB8();
    }

    else
    {
      sub_10001A1BC();
      sub_100010608();
      sub_1000104C0(v26);
      uint64_t v19 = sub_100010530();
      uint64_t v20 = sub_1000485CC(v19);
      sub_100048740(v20, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_1000486D0();
    }

    sub_100048AE8();
    sub_10000DD38(25LL);
    sub_1000486C0();
    uint64_t v21 = sub_100048728();
    sub_1000486A4((uint64_t)v21);
    uint64_t v22 = sub_100048650();
    uint64_t v23 = sub_100048994(v22, &qword_1001CAAD0);
    uint64_t v24 = static os_log_type_t.error.getter(v23);
    sub_1000487BC(v24, (uint64_t)v14);
    sub_10000DDF8();
    sub_1000258D4();
    sub_10000DD84();
  }

  else
  {
    uint64_t v12 = v11;
    sub_10001F960(v9, v7, v5, v3);
    sub_10004875C(v12);
  }

uint64_t sub_100040CB8()
{
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100048688();
  if (v1)
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v8 = sub_100010570();
    uint64_t v9 = (__n128 *)sub_100048618(v8);
    uint64_t v10 = sub_100048830(v9, (__n128)xmmword_100164240);
    uint64_t v11 = sub_100048718(v10);
    id v12 = (id)AMSLogKey(v11);
    if (v12)
    {
      sub_1000105E8((uint64_t)v12);
      sub_10004870C();
      sub_100020BB4();
      sub_100010564();
      sub_100010608();
      sub_1000104C0(v22);
      uint64_t v13 = sub_100010530();
      sub_1000485CC(v13);
      sub_1000486B8((uint64_t)v21);
      sub_10000DC14();
      v21[3] = &type metadata for String;
      v21[0] = v2;
      v21[1] = v0;
      sub_10000DF68();
      sub_1000486B8((uint64_t)v21);
      sub_10000DC4C(93LL);
      sub_1000486D0();
      sub_100020AB8();
    }

    else
    {
      sub_10001A1BC();
      sub_100010608();
      sub_1000104C0(v22);
      uint64_t v14 = sub_100010530();
      uint64_t v15 = sub_1000485CC(v14);
      sub_100048740(v15, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_1000486D0();
    }

    sub_100048AE8();
    sub_10000DD38(25LL);
    sub_1000486C0();
    uint64_t v16 = sub_100048728();
    sub_1000486A4((uint64_t)v16);
    uint64_t v17 = sub_100048650();
    uint64_t v18 = sub_100048994(v17, &qword_1001CAAD0);
    uint64_t v19 = static os_log_type_t.error.getter(v18);
    sub_1000487BC(v19, (uint64_t)v9);
    sub_1000258D4();
    sub_10000DDF8();
    return 0LL;
  }

  else
  {
    uint64_t v7 = v6;
    sub_10001FB50();
    swift_release(v7);
    return 1LL;
  }

void sub_100040E9C()
{
  uint64_t v119 = v1;
  uint64_t v118 = v2;
  unint64_t v121 = v3;
  uint64_t v120 = v4;
  uint64_t v113 = v5;
  uint64_t v112 = v6;
  uint64_t v7 = *v0;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v8);
  sub_10000DD5C();
  uint64_t v114 = v9;
  sub_10000D33C(&qword_1001CB180);
  sub_10000DC64();
  __chkstk_darwin(v10);
  uint64_t v123 = sub_1000487F8((uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v115 = *(void *)(v123 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v12);
  sub_10004893C(v13, v109);
  uint64_t v14 = sub_1000378A0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_100048A9C();
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v109 - v17);
  uint64_t v19 = (int *)sub_100020C40();
  sub_10000DC64();
  __chkstk_darwin(v20);
  sub_10000DD5C();
  uint64_t v125 = (char *)v21;
  uint64_t v135 = 7107700LL;
  unint64_t v136 = 0xE300000000000000LL;
  sub_100048CF8();
  sub_100048BF4();
  uint64_t v22 = sub_10000E854((uint64_t)&v131);
  uint64_t v124 = v0;
  uint64_t v116 = v7;
  if (v137)
  {
    if (sub_100048C94(v22, v23, (uint64_t)&type metadata for Any + 8, (uint64_t)&type metadata for Int))
    {
      uint64_t v24 = (uint64_t)v130;
      goto LABEL_6;
    }
  }

  else
  {
    sub_100048774(v22, &qword_1001CAAD0);
  }

  uint64_t v24 = 30LL;
LABEL_6:
  unint64_t v25 = v121;
  swift_bridgeObjectRetain(v121);
  uint64_t v26 = v119;
  uint64_t v27 = sub_10000DF9C();
  static Date.now.getter(v27);
  Date.addingTimeInterval(_:)((double)(86400 * v24));
  sub_100048CB8(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  BOOL v28 = v125;
  uint64_t v29 = (uint64_t *)&v125[v19[9]];
  *uint64_t v29 = 0LL;
  v29[1] = 0LL;
  uint64_t v110 = v29;
  *(void *)BOOL v28 = _swiftEmptyArrayStorage;
  sub_100048B14();
  *((void *)v28 + 2) = v30;
  *((void *)v28 + 3) = v25;
  Date.init()(v31);
  (*(void (**)(char *, void *, uint64_t))(v15 + 32))(&v28[v19[8]], v18, v14);
  *((void *)v28 + 1) = _swiftEmptyArrayStorage;
  v28[v19[10]] = 2;
  uint64_t v32 = &v28[v19[11]];
  *(void *)uint64_t v32 = 0LL;
  *((void *)v32 + 1) = 0xE000000000000000LL;
  uint64_t v33 = &v28[v19[12]];
  *(void *)uint64_t v33 = v118;
  *((void *)v33 + 1) = v26;
  uint64_t v135 = 0x617461646174656DLL;
  unint64_t v136 = 0xE800000000000000LL;
  sub_100048CF8();
  sub_100048BF4();
  uint64_t v34 = sub_10000E854((uint64_t)&v131);
  if (v137)
  {
    uint64_t v35 = sub_10000D33C(&qword_1001CDF50);
    int v37 = sub_100048C94(v35, v36, (uint64_t)&type metadata for Any + 8, v35);
    uint64_t v38 = v122;
    if (v37) {
      BOOL v39 = v130;
    }
    else {
      BOOL v39 = _swiftEmptyArrayStorage;
    }
  }

  else
  {
    sub_100048774(v34, &qword_1001CAAD0);
    BOOL v39 = _swiftEmptyArrayStorage;
    uint64_t v38 = v122;
  }

  uint64_t v127 = v39[2];
  if (v127)
  {
    uint64_t v126 = v39 + 4;
    uint64_t v40 = (void *)*((void *)v28 + 1);
    uint64_t v111 = v39;
    swift_bridgeObjectRetain(v39);
    uint64_t v41 = 0LL;
    while (1)
    {
      uint64_t v42 = &v126[2 * v41];
      uint64_t v43 = *v42;
      uint64_t v19 = (int *)v42[1];
      swift_bridgeObjectRetain_n(v19, 2LL);
      if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
      {
        sub_100048824();
        uint64_t v40 = v54;
      }

      unint64_t v45 = v40[2];
      unint64_t v44 = v40[3];
      if (v45 >= v44 >> 1)
      {
        sub_100048B48(v44);
        sub_100048824();
        uint64_t v40 = v55;
      }

      v40[2] = v45 + 1;
      uint64_t v46 = &v40[2 * v45];
      v46[4] = v43;
      v46[5] = v19;
      sub_100020BB4();
      uint64_t v135 = Set.init(minimumCapacity:)(v45 + 1, &type metadata for String, &protocol witness table for String);
      uint64_t v47 = v40[2];
      if (v47)
      {
        uint64_t v48 = (void **)(v40 + 5);
        do
        {
          uint64_t v49 = (uint64_t)*(v48 - 1);
          uint64_t v18 = *v48;
          sub_1000489DC();
          sub_100148020((uint64_t *)&v131, v49, (uint64_t)v18);
          swift_bridgeObjectRelease();
          v48 += 2;
          --v47;
        }

        while (v47);
      }

      sub_100020AB8();
      uint64_t v50 = v135;
      uint64_t v15 = *(void *)(v135 + 16);
      if (v15)
      {
        unsigned int v128 = v19;
        uint64_t v51 = sub_10000D33C(&qword_1001C8EA0);
        uint64_t v18 = (void *)sub_10000DDDC(v51, 16 * v15 + 32);
        size_t v52 = j__malloc_size(v18);
        _OWORD v18[2] = v15;
        v18[3] = 2 * ((uint64_t)(v52 - 32) / 16);
        uint64_t v129 = sub_100104224((uint64_t)&v131, v18 + 4, v15, v50);
        uint64_t v53 = (uint64_t)v131;
        unint64_t v25 = v132;
        uint64_t v19 = v134;
        sub_10000DF08();
        sub_10004844C(v53);
        if (v129 != v15)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          swift_once(&qword_1001C7FA0, sub_1000BD448);
LABEL_31:
          sub_10000D33C(&qword_1001C9C70);
          uint64_t v62 = *(void *)(sub_10002C79C() - 8);
          *(_OWORD *)(sub_10000DCF0( ((*(unsigned __int8 *)(v62 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
                      + 2LL * *(void *)(v62 + 72),
          uint64_t v63 = type metadata accessor for ContentManager();
          uint64_t v64 = sub_100048A38(v63);
          id v65 = (id)AMSLogKey(v64);
          if (v65)
          {
            sub_100048C54((uint64_t)v65);
            sub_100048A60();
            sub_10000DD9C();
            sub_100010564();
            sub_10000DC08();
            uint64_t v66 = v133;
            uint64_t v67 = sub_10000D37C(&v131, (uint64_t)v133);
            sub_10000DC54((uint64_t)v67, (uint64_t)v66);
            uint64_t v68 = sub_1000258E8();
            sub_10000E960(v68);
            sub_1000485FC((uint64_t)&v135);
            sub_10000DC14();
            uint64_t v137 = &type metadata for String;
            uint64_t v135 = (uint64_t)v18;
            unint64_t v136 = (unint64_t)v19;
            sub_10000DCE8();
            sub_1000485FC((uint64_t)&v135);
            sub_10000DC4C(93LL);
            sub_10000DC5C();
            sub_10000DCFC();
          }

          else
          {
            sub_10001A1BC();
            sub_10000DC08();
            uint64_t v78 = v133;
            uint64_t v79 = sub_10000D37C(&v131, (uint64_t)v133);
            sub_10000DC54((uint64_t)v79, (uint64_t)v78);
            uint64_t v80 = sub_1000258E8();
            uint64_t v81 = sub_10000E960(v80);
            sub_100048774(v81, &qword_1001CAAD0);
            sub_10000DC4C(58LL);
            sub_10000DC5C();
          }

          sub_100048CC4();
          uint64_t v82 = sub_1000105B4(v25 + 17);
          uint64_t v83 = static os_log_type_t.error.getter(v82);
          sub_1000486E4(v83);
          sub_10000DE2C();
          goto LABEL_45;
        }

        swift_bridgeObjectRelease();
        sub_100020AB8();
        sub_100009070();
        uint64_t v40 = v18;
      }

      else
      {
        sub_10000DCFC();
        sub_100020AB8();
        sub_100009070();
        uint64_t v40 = _swiftEmptyArrayStorage;
      }

      if (++v41 == v127)
      {
        sub_10000E014((uint64_t)v111);
        uint64_t v56 = (uint64_t)v125;
        *((void *)v125 + 1) = v40;
        BOOL v28 = (char *)v56;
        uint64_t v38 = v122;
        goto LABEL_28;
      }
    }
  }

  swift_bridgeObjectRelease();
LABEL_28:
  unint64_t v25 = 0xD000000000000015LL;
  sub_100048D24();
  sub_10003FD44((uint64_t)v28, *(_BYTE *)(v57 + 16), 1852797802LL, 0xE400000000000000LL, v38);
  sub_100048DE0();
  uint64_t v60 = sub_100048918(v58, v59, v15);
  if (v61)
  {
    sub_100048D50(v60, &qword_1001CB180);
    if (qword_1001C7FA0 != -1) {
      goto LABEL_48;
    }
    goto LABEL_31;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 32))(v117, v38, v15);
  id v69 = [(id)objc_opt_self(NSFileManager) defaultManager];
  ((void (*)(void))URL.path.getter)();
  NSString v70 = sub_100048C6C();
  sub_100009070();
  id v131 = 0LL;
  unsigned int v71 = [v69 removeItemAtPath:v70 error:&v131];

  id v72 = v131;
  if (v71)
  {
    id v73 = v131;
  }

  else
  {
    id v74 = v131;
    uint64_t v75 = _convertNSErrorToError(_:)(v72);

    swift_willThrow(v76);
    swift_errorRelease(v75);
  }

  uint64_t v77 = Data.write(to:options:)(v117, 0LL, v112, v113);
  uint64_t v84 = URL.path.getter(v77, v123);
  uint64_t v86 = v85;
  uint64_t v87 = v110;
  swift_bridgeObjectRelease();
  uint64_t *v87 = v84;
  v87[1] = v86;
  uint64_t v88 = v124;
  sub_100040CB8();
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v89 = *(void *)(sub_10002C79C() - 8);
  uint64_t v90 = (__n128 *)sub_10000DCF0( ((*(unsigned __int8 *)(v89 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))
                  + 2LL * *(void *)(v89 + 72),
                    *(unsigned __int8 *)(v89 + 80));
  id v133 = (void *)sub_100048E20(v90, (__n128)xmmword_100164230);
  id v131 = v88;
  uint64_t v91 = swift_retain(v88);
  id v92 = (id)AMSLogKey(v91);
  if (v92)
  {
    sub_100048C54((uint64_t)v92);
    sub_100048A60();
    sub_10000DD9C();
    sub_100010564();
    sub_10000DC08();
    uint64_t v93 = v133;
    uint64_t v94 = sub_10000D37C(&v131, (uint64_t)v133);
    sub_10000DC54((uint64_t)v94, (uint64_t)v93);
    uint64_t v95 = sub_1000258E8();
    sub_10000E960(v95);
    sub_1000485FC((uint64_t)&v135);
    sub_10000DC14();
    uint64_t v137 = &type metadata for String;
    uint64_t v135 = (uint64_t)v18;
    unint64_t v136 = (unint64_t)v88;
    sub_10000DCE8();
    sub_1000485FC((uint64_t)&v135);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DCFC();
  }

  else
  {
    sub_10001A1BC();
    sub_100048C74();
    uint64_t v96 = v133;
    uint64_t v97 = sub_10000D37C(&v131, (uint64_t)v133);
    sub_10000DC54((uint64_t)v97, (uint64_t)v96);
    uint64_t v98 = sub_1000258E8();
    uint64_t v99 = sub_10000E960(v98);
    sub_100048774(v99, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_100048D04();
  }

  sub_100048CC4();
  sub_1000485F4(25LL);
  sub_100048BA0();
  v100._uint64_t countAndFlagsBits = 0xD000000000000015LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v100);
  id v133 = &type metadata for String;
  sub_100048898();
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v131);
  sub_1000485FC((uint64_t)&v131);
  v101._uint64_t countAndFlagsBits = 544175136LL;
  v101._object = (void *)0xE400000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v101);
  uint64_t v102 = v117;
  uint64_t v105 = (void *)URL.path.getter(v103, v104);
  id v133 = &type metadata for String;
  id v131 = v105;
  unint64_t v132 = v106;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v131);
  sub_1000485FC((uint64_t)&v131);
  sub_10000DC08();
  uint64_t v107 = sub_100048D04();
  uint64_t v108 = static os_log_type_t.default.getter(v107);
  sub_1000BD1B0(v108, (uint64_t)v90);
  sub_100020AB8();
  sub_100048DBC(v102, *(uint64_t (**)(uint64_t, void))(v115 + 8));
LABEL_45:
  sub_1000207E4((uint64_t)v125);
  sub_10000DD84();
}

void sub_100041B68( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v23;
  a20 = v24;
  uint64_t v145 = v25;
  uint64_t v146 = v20;
  uint64_t v139 = v26;
  uint64_t v28 = v27;
  uint64_t v144 = v29;
  uint64_t v140 = v30;
  uint64_t v141 = v31;
  uint64_t v137 = *(void *)v20;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v32);
  sub_10000DD5C();
  uint64_t v34 = sub_1000487F8(v33);
  uint64_t v35 = *(char **)(v34 - 8);
  uint64_t v142 = v34;
  uint64_t v143 = v35;
  sub_10000DC8C();
  __chkstk_darwin(v36);
  sub_10000DD5C();
  uint64_t v135 = v37;
  sub_10000D33C(&qword_1001CB180);
  sub_10000DC64();
  __chkstk_darwin(v38);
  sub_100048A9C();
  __chkstk_darwin(v39);
  sub_10001A3B0();
  uint64_t v136 = v40;
  sub_10001A210();
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)v134 - v42;
  uint64_t v44 = sub_1000378A0();
  uint64_t v45 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  sub_10004895C();
  uint64_t v48 = v46 - v47;
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)v134 - v50;
  size_t v52 = (int *)sub_100020C40();
  sub_10000DC64();
  __chkstk_darwin(v53);
  sub_100048A80();
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)v134 - v55;
  sub_10000DEE0();
  swift_bridgeObjectRetain(v145);
  static Date.now.getter(v57);
  Date.addingTimeInterval(_:)(2592000.0);
  uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v48, v44);
  uint64_t v59 = &v56[v52[9]];
  *(void *)uint64_t v59 = 0LL;
  *((void *)v59 + 1) = 0LL;
  v134[0] = v59;
  *(void *)uint64_t v56 = _swiftEmptyArrayStorage;
  *((void *)v56 + 2) = v144;
  *((void *)v56 + 3) = v28;
  v134[1] = v28;
  Date.init()(v58);
  uint64_t v60 = v51;
  uint64_t v61 = v142;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v56[v52[8]], v60, v44);
  *((void *)v56 + 1) = _swiftEmptyArrayStorage;
  v56[v52[10]] = 2;
  uint64_t v62 = &v56[v52[11]];
  *(void *)uint64_t v62 = 0LL;
  *((void *)v62 + 1) = 0xE000000000000000LL;
  uint64_t v63 = &v56[v52[12]];
  uint64_t v64 = v145;
  *(void *)uint64_t v63 = v139;
  *((void *)v63 + 1) = v64;
  URL.init(string:)(v140, v141);
  sub_100048BAC((uint64_t)v56);
  char v65 = v146[16];
  uint64_t v138 = v43;
  sub_100048454((uint64_t)v43, v22, &qword_1001CB180);
  uint64_t v66 = sub_100048918(v22, 1LL, v61);
  if (v91)
  {
    sub_100048CB0(v66, &qword_1001CB180);
    uint64_t v67 = 0LL;
    uint64_t v69 = 0xE000000000000000LL;
    NSString v70 = v143;
  }

  else
  {
    uint64_t v67 = URL.pathExtension.getter(v66);
    uint64_t v69 = v68;
    NSString v70 = v143;
    (*((void (**)(uint64_t, uint64_t))v143 + 1))(v22, v61);
  }

  uint64_t v71 = v136;
  sub_10003FD44(v21, v65, v67, v69, v136);
  sub_10000DE2C();
  sub_1000489EC();
  uint64_t v72 = sub_100048918(v71, 1LL, v61);
  if (v91)
  {
    sub_100048CB0(v72, &qword_1001CB180);
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v73 = *(void *)(sub_100010570() - 8);
    *(_OWORD *)(sub_10001059C( ((*(unsigned __int8 *)(v73 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))
                + 2LL * *(void *)(v73 + 72),
    uint64_t v74 = type metadata accessor for ContentManager();
    uint64_t v75 = sub_100048BE4(v74);
    id v76 = (id)AMSLogKey(v75);
    if (v76)
    {
      uint64_t v77 = sub_1000105E8((uint64_t)v76);
      sub_10001A5B8();
      sub_10000DD9C();
      sub_100010564();
      sub_10000DC08();
      uint64_t v78 = v152;
      uint64_t v79 = sub_10000D37C(v151, (uint64_t)v152);
      sub_10000DC54((uint64_t)v79, (uint64_t)v78);
      uint64_t v150 = (void *)sub_1000258E8();
      uint64_t v148 = v78;
      sub_100048640();
      sub_1000486B8((uint64_t)&v148);
      sub_10000DC14();
      uint64_t v150 = &type metadata for String;
      uint64_t v148 = (void *)v77;
      uint64_t v149 = v70;
      sub_100048640();
      sub_100048BBC();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DCFC();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      uint64_t v98 = v152;
      uint64_t v99 = sub_10000D37C(v151, (uint64_t)v152);
      sub_10000DC54((uint64_t)v99, (uint64_t)v98);
      uint64_t v150 = (void *)sub_1000258E8();
      uint64_t v148 = v98;
      uint64_t v100 = sub_100048640();
      sub_1000486DC(v100, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_100048738();
    uint64_t v101 = sub_1000105B4(0xD000000000000026LL);
    uint64_t v102 = static os_log_type_t.error.getter(v101);
    sub_1000486E4(v102);
    sub_10000DE2C();
    goto LABEL_27;
  }

  uint64_t v80 = v135;
  (*((void (**)(uint64_t, uint64_t, uint64_t))v70 + 4))(v135, v71, v61);
  uint64_t v81 = sub_1000489E4();
  uint64_t v83 = v82;
  uint64_t v84 = (uint64_t *)v134[0];
  swift_bridgeObjectRelease();
  *uint64_t v84 = v81;
  v84[1] = v83;
  objc_opt_self(&OBJC_CLASS___NSFileManager);
  id v85 = sub_100048CEC();
  sub_1000489E4();
  NSString v86 = sub_100048C6C();
  sub_100009070();
  unsigned __int8 v87 = [v85 fileExistsAtPath:v86];

  uint64_t v88 = v146;
  if ((v87 & 1) != 0) {
    goto LABEL_21;
  }
  uint64_t v89 = sub_1000489E4();
  BOOL v91 = v89 == v140 && v90 == v141;
  if (v91)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }

  char v92 = sub_100025718(v89, v90, v140, v141);
  sub_100009070();
  if ((v92 & 1) != 0)
  {
LABEL_21:
    sub_100040CB8();
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v103 = *(void *)(sub_100010570() - 8);
    uint64_t v104 = (__n128 *)sub_10001059C( ((*(unsigned __int8 *)(v103 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))
                     + 2LL * *(void *)(v103 + 72),
                       *(unsigned __int8 *)(v103 + 80));
    uint64_t v152 = (void *)sub_100048E2C(v104, (__n128)xmmword_100164230);
    v151[0] = v88;
    uint64_t v105 = swift_retain(v88);
    id v106 = (id)AMSLogKey(v105);
    if (v106)
    {
      uint64_t v107 = sub_1000105E8((uint64_t)v106);
      sub_100048890();
      sub_10000DEB4();
      sub_100010564();
      sub_10000DC08();
      uint64_t v108 = v152;
      uint64_t v109 = sub_10000D37C(v151, (uint64_t)v152);
      sub_10000DC54((uint64_t)v109, (uint64_t)v108);
      uint64_t v150 = (void *)sub_1000258E8();
      uint64_t v148 = v108;
      sub_100048640();
      sub_1000486B8((uint64_t)&v148);
      sub_10000DC14();
      uint64_t v150 = &type metadata for String;
      uint64_t v148 = (void *)v107;
      uint64_t v149 = v88;
      uint64_t v80 = v135;
      sub_100048640();
      sub_100048BBC();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DDF8();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      uint64_t v110 = v152;
      uint64_t v111 = sub_10000D37C(v151, (uint64_t)v152);
      sub_10000DC54((uint64_t)v111, (uint64_t)v110);
      uint64_t v150 = (void *)sub_1000258E8();
      uint64_t v148 = v110;
      uint64_t v112 = sub_100048640();
      sub_1000486DC(v112, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_100048738();
    sub_10001A21C(30LL);
    sub_100048E08(0xD00000000000001ELL, (uint64_t)"Saved filePath with cacheKey: ");
    uint64_t v152 = &type metadata for String;
    sub_1000489C8();
    uint64_t v113 = sub_10000DCE8();
    sub_100048774(v113, &qword_1001CAAD0);
    sub_10000DC08();
    uint64_t v114 = sub_10000DC5C();
    uint64_t v115 = static os_log_type_t.default.getter(v114);
    sub_1000486E4(v115);
    sub_10000DE2C();
    (*((void (**)(uint64_t, uint64_t))v143 + 1))(v80, v142);
LABEL_27:
    sub_100048D8C(&qword_1001CB180, (uint64_t)&a16);
    sub_100048DF4();
    goto LABEL_28;
  }

  id v93 = sub_100048CEC();
  NSString v94 = String._bridgeToObjectiveC()();
  sub_1000489E4();
  NSString v95 = sub_100048C6C();
  sub_100009070();
  v151[0] = 0LL;
  unsigned int v96 = [v93 moveItemAtPath:v94 toPath:v95 error:v151];

  if (v96)
  {
    id v97 = v151[0];
    uint64_t v88 = v146;
    goto LABEL_21;
  }

  id v116 = v151[0];
  uint64_t v117 = sub_100048A10();

  swift_willThrow(v118);
  (*((void (**)(uint64_t, uint64_t))v143 + 1))(v80, v61);
  sub_100048D8C(&qword_1001CB180, (uint64_t)&a16);
  sub_100048DF4();
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v119 = qword_1001DBB20;
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v120 = sub_100010570();
  unint64_t v121 = (__n128 *)sub_10001059C( ((*(unsigned __int8 *)(*(void *)(v120 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v120 - 8) + 80LL))
                   + 5LL * *(void *)(*(void *)(v120 - 8) + 72LL),
                     *(unsigned __int8 *)(*(void *)(v120 - 8) + 80LL));
  uint64_t v122 = sub_100048E2C(v121, (__n128)xmmword_100164250);
  uint64_t v123 = sub_100048BE4(v122);
  id v124 = (id)AMSLogKey(v123);
  if (v124)
  {
    sub_1000105E8((uint64_t)v124);
    sub_10004870C();
    sub_100020BB4();
    sub_100010564();
    sub_10000DC08();
    uint64_t v125 = v152;
    uint64_t v126 = sub_10000D37C(v151, (uint64_t)v152);
    sub_10000DC54((uint64_t)v126, (uint64_t)v125);
    uint64_t v150 = (void *)sub_1000258E8();
    uint64_t v148 = v125;
    sub_100048640();
    sub_1000486B8((uint64_t)&v148);
    sub_10000DC14();
    uint64_t v150 = &type metadata for String;
    uint64_t v148 = (void *)v119;
    uint64_t v149 = v43;
    sub_100048640();
    sub_1000486B8((uint64_t)&v148);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_100020AB8();
  }

  else
  {
    sub_10001A1BC();
    sub_10000DC08();
    uint64_t v127 = v152;
    unsigned int v128 = sub_10000D37C(v151, (uint64_t)v152);
    sub_10000DC54((uint64_t)v128, (uint64_t)v127);
    uint64_t v150 = (void *)sub_1000258E8();
    uint64_t v148 = v127;
    uint64_t v129 = sub_100048640();
    sub_1000486DC(v129, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_100048738();
  sub_10000E008();
  sub_10000DD38(24LL);
  uint64_t v152 = &type metadata for String;
  sub_1000489C8();
  sub_10004885C((uint64_t)v151);
  sub_1000485FC((uint64_t)v151);
  uint64_t v152 = &type metadata for String;
  sub_100048D24();
  v151[0] = v130;
  v151[1] = v145;
  swift_bridgeObjectRetain(v145);
  sub_10004866C((uint64_t)v151);
  sub_1000485FC((uint64_t)v151);
  sub_100048C1C();
  uint64_t v152 = v147;
  id v131 = sub_100048BDC();
  sub_100048A6C((uint64_t)v131);
  sub_10004866C((uint64_t)v151);
  uint64_t v132 = sub_1000485FC((uint64_t)v151);
  uint64_t v133 = static os_log_type_t.error.getter(v132);
  sub_1000BD1B0(v133, (uint64_t)v121);
  sub_10000DDF8();
  swift_errorRelease(v117);
LABEL_28:
  sub_10000DD84();
}

void sub_100042604()
{
  uint64_t v76 = v1;
  uint64_t v77 = v2;
  uint64_t v3 = *v0;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  sub_10000DC8C();
  __chkstk_darwin(v6);
  sub_10001A284();
  uint64_t v62 = v7;
  sub_10001A210();
  __chkstk_darwin(v8);
  sub_100048CE0();
  uint64_t v61 = v9;
  char v60 = *((_BYTE *)v0 + 16);
  uint64_t v66 = v3;
  uint64_t v10 = sub_100042C50(v60);
  uint64_t v11 = v10[2];
  if (v11)
  {
    uint64_t v12 = v10 + 5;
    sub_100048B94();
    sub_100048B94();
    while (1)
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      sub_10000DED8();
      sub_100043130(v60);
      URL.appendingPathComponent(_:)(v13, v14);
      sub_1000090CC();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v15(v62, v64);
      uint64_t v16 = sub_1000489E4();
      uint64_t v18 = v17;
      v15(v61, v64);
      uint64_t v19 = sub_100043720(v16, v18);
      if (!v20) {
        break;
      }
      uint64_t v23 = v19;
      uint64_t v24 = v20;
      uint64_t v25 = v21;
      uint64_t v26 = v22;
      uint64_t v65 = v16;
      swift_bridgeObjectRetain(v22);
      sub_1000400D0();
      uint64_t v28 = v27;
      sub_100009020();
      uint64_t v29 = v28[2];
      sub_100009070();
      if (!v29)
      {
        if (qword_1001C7FA0 != -1) {
          swift_once(&qword_1001C7FA0, sub_1000BD448);
        }
        sub_10000D33C(&qword_1001C9C70);
        sub_100010570();
        sub_100048C2C();
        uint64_t v39 = sub_10001059C(2 * v23, v38);
        *(_OWORD *)(v39 + ++*(void *)(v0 + 16) = xmmword_100164230;
        uint64_t v40 = sub_100048D10(v39);
        uint64_t v41 = sub_100048B20(v40);
        id v42 = (id)AMSLogKey(v41);
        if (v42)
        {
          uint64_t v57 = sub_1000105E8((uint64_t)v42);
          uint64_t v58 = v23;
          uint64_t v44 = v43;

          sub_10000DED8();
          sub_100010564();
          sub_100010608();
          sub_1000104C0(&v70);
          uint64_t v45 = sub_100010530();
          sub_1000485CC(v45);
          sub_100048808((uint64_t)&v67);
          sub_10000DC14();
          uint64_t v69 = &type metadata for String;
          uint64_t v67 = v57;
          uint64_t v68 = v44;
          sub_10000DF68();
          sub_100048808((uint64_t)&v67);
          sub_10000DC4C(93LL);
          uint64_t v46 = v59;
          sub_1000291E4();
          uint64_t v23 = v58;
          swift_bridgeObjectRelease();
        }

        else
        {
          sub_10001A1BC();
          sub_100010608();
          sub_1000104C0(&v70);
          uint64_t v51 = sub_100010530();
          sub_1000485CC(v51);
          sub_100048808((uint64_t)&v67);
          sub_10000DC4C(58LL);
          uint64_t v46 = v59;
          sub_1000291E4();
        }

        sub_100048888();
        uint64_t v59 = v46 + v23;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(63LL, 3LL);
        sub_100048D78(0xD00000000000002DLL, (uint64_t)&v74);
        uint64_t v72 = &type metadata for String;
        uint64_t v70 = v65;
        uint64_t v71 = v18;
        sub_10000DF9C();
        sub_100029288();
        sub_100048808((uint64_t)&v70);
        v52._uint64_t countAndFlagsBits = 0x203A79656B2820LL;
        v52._object = (void *)0xE700000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v52);
        uint64_t v72 = &type metadata for String;
        sub_100048D24();
        uint64_t v70 = v53;
        uint64_t v71 = v24;
        sub_1000489DC();
        sub_100029288();
        sub_100048808((uint64_t)&v70);
        v54._uint64_t countAndFlagsBits = 0x6F6973726576202CLL;
        v54._object = (void *)0xEB00000000203A6ELL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        sub_10000DE74();
        uint64_t v72 = &type metadata for String;
        uint64_t v70 = v25;
        uint64_t v71 = v26;
        sub_100029288();
        sub_100048808((uint64_t)&v70);
        sub_10000DC08();
        uint64_t v55 = sub_1000291E4();
        static os_log_type_t.error.getter(v55);
        sub_100048DE0();
        sub_1000BD1B0(v56, v26);
        sub_100009020();
        uint64_t v50 = v65;
LABEL_18:
        sub_100043340(v50, v18, 0LL, 0LL);
        goto LABEL_19;
      }

      swift_bridgeObjectRelease();
      sub_100009020();
LABEL_19:
      swift_bridgeObjectRelease();
      v12 += 2;
      if (!--v11)
      {
        sub_100048D84((uint64_t)&v73);
        sub_10000DD84();
        return;
      }
    }

    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    sub_10000D33C(&qword_1001C9C70);
    sub_100010570();
    sub_10004892C();
    uint64_t v32 = (__n128 *)sub_10001059C(v66 + 2 * v30, v31);
    sub_100048E14(v32, (__n128)xmmword_100164230);
    uint64_t v33 = type metadata accessor for ContentManager();
    uint64_t v34 = sub_100048B20(v33);
    id v35 = (id)AMSLogKey(v34);
    if (v35)
    {
      uint64_t v36 = sub_1000105E8((uint64_t)v35);
      sub_10001A5B8();
      sub_10000DD9C();
      sub_100010564();
      sub_100010608();
      sub_1000104C0(&v70);
      uint64_t v37 = sub_100010530();
      sub_1000485CC(v37);
      sub_100048704((uint64_t)&v67);
      sub_10000DC14();
      uint64_t v69 = &type metadata for String;
      uint64_t v67 = v36;
      uint64_t v68 = v16;
      sub_10000DF68();
      sub_100048704((uint64_t)&v67);
      sub_10000DC4C(93LL);
      sub_1000291E4();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_100010608();
      sub_1000104C0(&v70);
      uint64_t v47 = sub_100010530();
      sub_1000485CC(v47);
      sub_100048704((uint64_t)&v67);
      sub_10000DC4C(58LL);
      sub_1000291E4();
    }

    sub_100048888();
    sub_10001A21C(54LL);
    sub_100048D78(0xD000000000000036LL, (uint64_t)&v75);
    uint64_t v72 = &type metadata for String;
    uint64_t v70 = v16;
    uint64_t v71 = v18;
    sub_10000DF9C();
    sub_100029288();
    sub_100048704((uint64_t)&v70);
    sub_10000DC08();
    uint64_t v48 = sub_1000291E4();
    uint64_t v49 = static os_log_type_t.error.getter(v48);
    sub_1000BD1B0(v49, (uint64_t)v32);
    sub_1000090CC();
    uint64_t v50 = v16;
    goto LABEL_18;
  }

  swift_bridgeObjectRelease();
}

void *sub_100042C50(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = [(id)objc_opt_self(NSFileManager) defaultManager];
  sub_100043130(a1);
  URL.path.getter(v12, v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v60[0] = 0LL;
  id v15 = [v11 contentsOfDirectoryAtPath:v14 error:v60];

  id v16 = v60[0];
  if (v15)
  {
    uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);
  }

  else
  {
    uint64_t v18 = v16;
    uint64_t v19 = _convertNSErrorToError(_:)(v16);

    swift_willThrow(v20);
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v21 = qword_1001DBB20;
    uint64_t v22 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v23 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v24 = *(void *)(v23 + 72);
    uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
    uint64_t v54 = v24;
    uint64_t v26 = swift_allocObject(v22, ((v25 + 32) & ~v25) + 2 * v24, v25 | 7);
    *(_OWORD *)(v26 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v61 = sub_10000D33C(&qword_1001CA290);
    v60[0] = v2;
    id v27 = (id)AMSLogKey(v61);
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      uint64_t v53 = v21;
      uint64_t v30 = v29;

      swift_bridgeObjectRetain(v30);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v31._uint64_t countAndFlagsBits = 0LL;
      v31._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      uint64_t v32 = v61;
      uint64_t v33 = sub_10000D37C(v60, v61);
      uint64_t DynamicType = swift_getDynamicType(v33, v32, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v58[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v58);
      sub_100048258((uint64_t)v58, &qword_1001CAAD0);
      v35._uint64_t countAndFlagsBits = 5972026LL;
      v35._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t MetatypeMetadata = &type metadata for String;
      v58[0] = v52;
      v58[1] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v58);
      sub_100048258((uint64_t)v58, &qword_1001CAAD0);
      v36._uint64_t countAndFlagsBits = 93LL;
      v36._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)(v6);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v37._uint64_t countAndFlagsBits = 0LL;
      v37._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      uint64_t v38 = v61;
      uint64_t v39 = sub_10000D37C(v60, v61);
      uint64_t v40 = swift_getDynamicType(v39, v38, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v40);
      v58[0] = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v58);
      sub_100048258((uint64_t)v58, &qword_1001CAAD0);
      v41._uint64_t countAndFlagsBits = 58LL;
      v41._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      LogMessage.init(stringInterpolation:)(v6);
    }

    sub_10000D3A0(v60);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(41LL, 2LL);
    v42._object = (void *)0x800000010016CA70LL;
    v42._uint64_t countAndFlagsBits = 0xD000000000000027LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    uint64_t v61 = v7;
    sub_10000D63C(v60);
    sub_100043130(a1);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v60);
    sub_100048258((uint64_t)v60, &qword_1001CAAD0);
    v43._uint64_t countAndFlagsBits = 8238LL;
    v43._object = (void *)0xE200000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    swift_getErrorValue(v19, v57);
    uint64_t v44 = v55;
    uint64_t v45 = v56;
    uint64_t v61 = v56;
    uint64_t v46 = sub_10000D63C(v60);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16LL))(v46, v44, v45);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v60);
    sub_100048258((uint64_t)v60, &qword_1001CAAD0);
    v47._uint64_t countAndFlagsBits = 0LL;
    v47._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    uint64_t v48 = LogMessage.init(stringInterpolation:)(v6);
    uint64_t v49 = static os_log_type_t.error.getter(v48);
    sub_1000BD1B0(v49, v26);
    swift_bridgeObjectRelease();
    swift_errorRelease(v19);
    return _swiftEmptyArrayStorage;
  }

  return (void *)v17;
}

void sub_100043130(char a1)
{
  uint64_t v2 = type metadata accessor for URL(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10001C908(a1);
  URL.appendingPathComponent(_:)(0x64616F6C6E776F64LL, 0xEA00000000002F73LL);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___NSFileManager);
  id v7 = [v6 defaultManager];
  URL.path.getter();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v9 = [v7 fileExistsAtPath:v8 isDirectory:0];

  if ((v9 & 1) == 0)
  {
    id v10 = [v6 defaultManager];
    URL.path.getter();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = 0LL;
    unsigned int v12 = [v10 createDirectoryAtPath:v11 withIntermediateDirectories:1 attributes:0 error:&v18];

    if (v12)
    {
      id v13 = v18;
    }

    else
    {
      id v17 = v18;
      id v14 = v18;
      uint64_t v15 = _convertNSErrorToError(_:)(v17);

      swift_willThrow(v16);
      swift_errorRelease(v15);
    }
  }

uint64_t sub_100043340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v44 = a1;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v9);
  NSString v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v43 = qword_1001DBB20;
  uint64_t v12 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v13 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v14 = swift_allocObject( v12,  ((*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
        + 2LL * *(void *)(v13 + 72),
          *(unsigned __int8 *)(v13 + 80) | 7LL);
  *(_OWORD *)(v14 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v48 = (void *)sub_10000D33C(&qword_1001CA290);
  v47[0] = v5;
  id v15 = (id)AMSLogKey(v48);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v42 = v5;
    uint64_t v18 = a3;
    uint64_t v19 = a4;
    uint64_t v21 = v20;

    swift_bridgeObjectRetain(v21);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v22._uint64_t countAndFlagsBits = 0LL;
    v22._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = v48;
    uint64_t v24 = sub_10000D37C(v47, (uint64_t)v48);
    uint64_t DynamicType = swift_getDynamicType(v24, v23, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v45[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
    sub_100048258((uint64_t)v45, &qword_1001CAAD0);
    v26._uint64_t countAndFlagsBits = 5972026LL;
    v26._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t MetatypeMetadata = &type metadata for String;
    v45[0] = v17;
    v45[1] = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
    sub_100048258((uint64_t)v45, &qword_1001CAAD0);
    v27._uint64_t countAndFlagsBits = 93LL;
    v27._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)(v11);
    a4 = v19;
    a3 = v18;
    uint64_t v5 = v42;
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v28._uint64_t countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = v48;
    uint64_t v30 = sub_10000D37C(v47, (uint64_t)v48);
    uint64_t v31 = swift_getDynamicType(v30, v29, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v31);
    v45[0] = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
    sub_100048258((uint64_t)v45, &qword_1001CAAD0);
    v32._uint64_t countAndFlagsBits = 58LL;
    v32._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)(v11);
  }

  sub_10000D3A0(v47);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(32LL, 1LL);
  v33._object = (void *)0x800000010016C950LL;
  v33._uint64_t countAndFlagsBits = 0xD000000000000020LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v48 = &type metadata for String;
  uint64_t v34 = v44;
  v47[0] = v44;
  v47[1] = a2;
  swift_bridgeObjectRetain(a2);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v47);
  sub_100048258((uint64_t)v47, &qword_1001CAAD0);
  v35._uint64_t countAndFlagsBits = 0LL;
  v35._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v35);
  uint64_t v36 = LogMessage.init(stringInterpolation:)(v11);
  uint64_t v37 = static os_log_type_t.error.getter(v36);
  sub_1000BD1B0(v37, v14);
  swift_bridgeObjectRelease();
  if (qword_1001C7F50 != -1) {
    swift_once(&qword_1001C7F50, sub_100055FD4);
  }
  uint64_t v38 = *(void *)(qword_1001DBAC8 + OBJC_IVAR____TtC14amsengagementd17EngagementService_priorityQueue);
  uint64_t v39 = (void *)swift_allocObject(&unk_1001A9840, 56LL, 7LL);
  void v39[2] = v34;
  uint64_t v39[3] = a2;
  void v39[4] = v5;
  v39[5] = a3;
  v39[6] = a4;
  swift_bridgeObjectRetain(a2);
  swift_retain(v38);
  sub_100048404(a3, a4);
  sub_10010220C((uint64_t)sub_1000483F4, (uint64_t)v39);
  swift_release();
  return swift_release();
}

uint64_t sub_100043720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  NSString v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v34[-v9];
  uint64_t v12 = URL.init(fileURLWithPath:)(a1, a2, v11);
  URL.deletingPathExtension()(v12);
  uint64_t v13 = *(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8);
  uint64_t v14 = v13(v8, v4);
  uint64_t v15 = URL.lastPathComponent.getter(v14);
  unint64_t v17 = v16;
  v13(v10, v4);
  uint64_t v35 = v15;
  unint64_t v36 = v17;
  unint64_t v18 = sub_10004828C();
  uint64_t v19 = StringProtocol.removingPercentEncoding.getter(&type metadata for String, v18);
  if (v20)
  {
    uint64_t v21 = v19;
    unint64_t v22 = v20;
    uint64_t v19 = swift_bridgeObjectRelease();
    uint64_t v15 = v21;
    unint64_t v17 = v22;
  }

  uint64_t v35 = 43LL;
  unint64_t v36 = 0xE100000000000000LL;
  __chkstk_darwin(v19);
  *(void *)&v34[-16] = &v35;
  swift_bridgeObjectRetain(v17);
  uint64_t v23 = (void *)sub_100047AFC(1LL, 1u, sub_100039F60, (uint64_t)&v34[-32], v15, v17);
  swift_bridgeObjectRelease();
  if (v23[2] != 2LL)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  uint64_t v24 = v23[8];
  uint64_t v25 = v23[9];
  uint64_t v26 = v23[10];
  uint64_t v27 = v23[11];
  swift_bridgeObjectRetain(v27);
  uint64_t v28 = static String._fromSubstring(_:)(v24, v25, v26, v27);
  uint64_t result = swift_bridgeObjectRelease();
  if (v23[2])
  {
    uint64_t v30 = v23[4];
    uint64_t v31 = v23[5];
    uint64_t v32 = v23[6];
    uint64_t v33 = v23[7];
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRelease();
    static String._fromSubstring(_:)(v30, v31, v32, v33);
    swift_bridgeObjectRelease();
    return v28;
  }

  __break(1u);
  return result;
}

uint64_t sub_100043958(uint64_t a1)
{
  uint64_t v3 = sub_10000DDDC((uint64_t)&unk_1001A9750, 24LL);
  *(void *)(v3 + ++*(void *)(v0 + 16) = a1;
  uint64_t v4 = sub_10000DDDC((uint64_t)&unk_1001A9778, 24LL);
  *(void *)(v4 + ++*(void *)(v0 + 16) = &_swiftEmptySetSingleton;
  uint64_t v5 = v4 + 16;
  uint64_t v6 = sub_10000DDDC((uint64_t)&unk_1001A97A0, 24LL);
  *(void *)(v6 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v24 = sub_10000DDDC((uint64_t)&unk_1001A97A0, 24LL);
  *(void *)(v24 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v23 = v24 + 16;
  uint64_t v7 = (void *)sub_10000DDDC((uint64_t)&unk_1001A97C8, 48LL);
  v7[2] = v1;
  v7[3] = v3;
  v7[4] = v4;
  v7[5] = v6;
  sub_100020BB4();
  sub_100048DB4();
  sub_10003FEFC();
  swift_retain(v3);
  swift_retain(v4);
  sub_100048DEC();
  sub_100048DCC();
  sub_100020A94(v6 + 16, (uint64_t)v27);
  uint64_t v8 = *(void *)(v6 + 16);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    sub_100020C40();
    sub_100048C44();
    uint64_t v12 = v11 & ~v10;
    uint64_t v13 = sub_100048E74();
    sub_100048A30();
    uint64_t v14 = v12 + v8 + 24;
    do
    {
      *(_BYTE *)(sub_10000DDDC(v13, 17LL) + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
      sub_100040AD4();
      sub_1000292C4();
      v14 += v4;
      --v9;
    }

    while (v9);
    sub_10001C258();
  }

  sub_100020A94(v5, (uint64_t)v26);
  if (*(void *)(*(void *)v5 + 16LL))
  {
    uint64_t v15 = sub_10000DDDC((uint64_t)&unk_1001A97F0, 32LL);
    *(void *)(v15 + ++*(void *)(v0 + 16) = v4;
    *(void *)(v15 + 24) = v24;
    sub_10003FEFC();
    sub_100048DEC();
    swift_retain(v24);
    swift_release();
  }

  sub_100020A94(v23, (uint64_t)v25);
  uint64_t v16 = *(void *)v23;
  uint64_t v17 = *(void *)(*(void *)v23 + 16LL);
  if (v17)
  {
    sub_100020C40();
    sub_100048C44();
    uint64_t v20 = v16 + (v19 & ~v18);
    uint64_t v21 = sub_100048E74();
    sub_100020BB4();
    do
    {
      *(_BYTE *)(sub_10000DDDC(v21, 17LL) + ++*(void *)(v0 + 16) = v23;
      sub_100040CB8();
      sub_1000292C4();
      v20 += v4;
      --v17;
    }

    while (v17);
    swift_release();
    sub_100048DCC();
    sub_100020AB8();
  }

  else
  {
    swift_release();
    sub_100048DCC();
  }

  swift_release();
  return swift_release();
}

id sub_100043BDC(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v224 = a5;
  uint64_t v223 = a4;
  uint64_t v231 = a2;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v227 = *(void *)(v7 - 8);
  uint64_t v228 = v7;
  __chkstk_darwin(v7);
  v226 = (char *)v218 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = (int *)type metadata accessor for ContentInfo(0LL);
  uint64_t v225 = *((void *)v9 - 1);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v229 = (uint64_t)v218 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v218 - v12;
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v15 = __chkstk_darwin(v14);
  v220 = (char *)v218 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v218 - v17;
  uint64_t v19 = v9[10];
  int v20 = *((unsigned __int8 *)a1 + v19);
  BOOL v21 = *((_BYTE *)a1 + v19) == 0;
  v230 = v9;
  if (!v20)
  {
    uint64_t v222 = a3;
    uint64_t v221 = v19;
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v219 = qword_1001DBB20;
    uint64_t v22 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v23 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v24 = *(void *)(v23 + 72);
    uint64_t v25 = swift_allocObject( v22,  ((*(unsigned __int8 *)(v23 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)) + 2 * v24,  *(unsigned __int8 *)(v23 + 80) | 7LL);
    *(_OWORD *)(v25 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v237 + 1) = type metadata accessor for ContentManager();
    *(void *)&__int128 v236 = v231;
    uint64_t v26 = swift_retain(v231);
    id v27 = (id)AMSLogKey(v26);
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v218[1] = v24;
      uint64_t v31 = v30;

      swift_bridgeObjectRetain(v31);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v32._uint64_t countAndFlagsBits = 0LL;
      v32._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v33 = *((void *)&v237 + 1);
      uint64_t v34 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t DynamicType = swift_getDynamicType(v34, v33, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v233 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v36._uint64_t countAndFlagsBits = 5972026LL;
      v36._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v233 = v29;
      uint64_t v234 = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v37._uint64_t countAndFlagsBits = 93LL;
      v37._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      LogMessage.init(stringInterpolation:)(v18);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v38._uint64_t countAndFlagsBits = 0LL;
      v38._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      uint64_t v39 = *((void *)&v237 + 1);
      uint64_t v40 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t v41 = swift_getDynamicType(v40, v39, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v41);
      uint64_t v233 = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v42._uint64_t countAndFlagsBits = 58LL;
      v42._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)(v18);
    }

    sub_10000D3A0(&v236);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(41LL, 2LL);
    v43._object = (void *)0x800000010016C8C0LL;
    v43._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    uint64_t v45 = a1[2];
    uint64_t v44 = a1[3];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v45;
    *((void *)&v236 + 1) = v44;
    swift_bridgeObjectRetain(v44);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v46._uint64_t countAndFlagsBits = 0x6E6F697372657620LL;
    v46._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v46);
    uint64_t v9 = v230;
    Swift::String v47 = (void *)((char *)a1 + v230[12]);
    uint64_t v49 = *v47;
    uint64_t v48 = v47[1];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v49;
    *((void *)&v236 + 1) = v48;
    swift_bridgeObjectRetain(v48);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v50._uint64_t countAndFlagsBits = 41LL;
    v50._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v50);
    uint64_t v51 = LogMessage.init(stringInterpolation:)(v18);
    uint64_t v52 = static os_log_type_t.error.getter(v51);
    sub_1000BD1B0(v52, v25);
    swift_bridgeObjectRelease();
    uint64_t v19 = v221;
    int v20 = *((unsigned __int8 *)a1 + v221);
    a3 = v222;
  }

  uint64_t v53 = a3 + 2;
  sub_100039F1C((uint64_t)a1, (uint64_t)v13);
  uint64_t v222 = v53;
  if (v20 != 1)
  {
    uint64_t v59 = sub_1000207E4((uint64_t)v13);
    goto LABEL_20;
  }

  swift_beginAccess(v53, v232, 0LL, 0LL);
  uint64_t v54 = *v53;
  if (*(void *)(*v53 + 16))
  {
    uint64_t v55 = (uint64_t *)&v13[v9[11]];
    uint64_t v57 = *v55;
    uint64_t v56 = v55[1];
    swift_bridgeObjectRetain(v54);
    swift_bridgeObjectRetain(v56);
    sub_100030CCC(v57, v56);
    LOBYTE(v57) = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = sub_1000207E4((uint64_t)v13);
    if ((v57 & 1) != 0) {
      goto LABEL_20;
    }
  }

  else
  {
    sub_1000207E4((uint64_t)v13);
  }

  uint64_t v221 = v19;
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v219 = qword_1001DBB20;
  uint64_t v60 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v61 = type metadata accessor for LogMessage(0LL);
  uint64_t v62 = swift_allocObject( v60,  ((*(unsigned __int8 *)(*(void *)(v61 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v61 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v61 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v61 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v62 + ++*(void *)(v0 + 16) = xmmword_100164230;
  *((void *)&v237 + 1) = type metadata accessor for ContentManager();
  *(void *)&__int128 v236 = v231;
  uint64_t v63 = swift_retain(v231);
  id v64 = (id)AMSLogKey(v63);
  if (v64)
  {
    uint64_t v65 = v64;
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
    uint64_t v68 = v67;

    swift_bridgeObjectRetain(v68);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v69._uint64_t countAndFlagsBits = 0LL;
    v69._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v69);
    uint64_t v70 = *((void *)&v237 + 1);
    uint64_t v71 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
    uint64_t v72 = swift_getDynamicType(v71, v70, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v72);
    uint64_t v233 = v72;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
    sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
    v73._uint64_t countAndFlagsBits = 5972026LL;
    v73._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v73);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v233 = v66;
    uint64_t v234 = v68;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
    sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
    v74._uint64_t countAndFlagsBits = 93LL;
    v74._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v74);
    LogMessage.init(stringInterpolation:)(v18);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v75._uint64_t countAndFlagsBits = 0LL;
    v75._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v75);
    uint64_t v76 = *((void *)&v237 + 1);
    uint64_t v77 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
    uint64_t v78 = swift_getDynamicType(v77, v76, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v78);
    uint64_t v233 = v78;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
    sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
    v79._uint64_t countAndFlagsBits = 58LL;
    v79._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v79);
    LogMessage.init(stringInterpolation:)(v18);
  }

  sub_10000D3A0(&v236);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(62LL, 2LL);
  v80._uint64_t countAndFlagsBits = 0xD000000000000033LL;
  v80._object = (void *)0x800000010016C880LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v80);
  uint64_t v82 = a1[2];
  uint64_t v81 = a1[3];
  *((void *)&v237 + 1) = &type metadata for String;
  *(void *)&__int128 v236 = v82;
  *((void *)&v236 + 1) = v81;
  swift_bridgeObjectRetain(v81);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
  sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
  v83._uint64_t countAndFlagsBits = 0x6E6F697372657620LL;
  v83._object = (void *)0xEA0000000000203ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v83);
  uint64_t v84 = (void *)((char *)a1 + v9[12]);
  uint64_t v86 = *v84;
  uint64_t v85 = v84[1];
  *((void *)&v237 + 1) = &type metadata for String;
  *(void *)&__int128 v236 = v86;
  *((void *)&v236 + 1) = v85;
  swift_bridgeObjectRetain(v85);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
  sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
  v87._uint64_t countAndFlagsBits = 41LL;
  v87._object = (void *)0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v87);
  uint64_t v88 = LogMessage.init(stringInterpolation:)(v18);
  uint64_t v89 = static os_log_type_t.error.getter(v88);
  sub_1000BD1B0(v89, v62);
  uint64_t v59 = swift_bridgeObjectRelease();
  BOOL v21 = 1;
  uint64_t v19 = v221;
LABEL_20:
  int v90 = *((unsigned __int8 *)a1 + v19);
  uint64_t v91 = v229;
  if (v90 == 2)
  {
    char v92 = v9;
    id v93 = (void *)((char *)a1 + v9[9]);
    uint64_t v94 = v93[1];
    sub_100039F1C((uint64_t)a1, v229);
    if (v94)
    {
      id result = [(id)objc_opt_self(NSFileManager) defaultManager];
      if (!*(void *)(v91 + v92[9] + 8))
      {
        __break(1u);
        return result;
      }

      unsigned int v96 = result;
      NSString v97 = String._bridgeToObjectiveC()();
      unsigned __int8 v98 = [v96 fileExistsAtPath:v97];

      uint64_t v59 = sub_1000207E4(v91);
      if ((v98 & 1) != 0) {
        goto LABEL_35;
      }
    }

    else
    {
      sub_1000207E4(v91);
    }

    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v229 = qword_1001DBB20;
    uint64_t v99 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v100 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v101 = *(void *)(v100 + 72);
    uint64_t v102 = *(unsigned __int8 *)(v100 + 80);
    uint64_t v221 = v101;
    uint64_t v103 = swift_allocObject(v99, ((v102 + 32) & ~v102) + 2 * v101, v102 | 7);
    *(_OWORD *)(v103 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v237 + 1) = type metadata accessor for ContentManager();
    *(void *)&__int128 v236 = v231;
    uint64_t v104 = swift_retain(v231);
    id v105 = (id)AMSLogKey(v104);
    if (v105)
    {
      id v106 = v105;
      uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v105);
      uint64_t v108 = v19;
      uint64_t v110 = v109;

      swift_bridgeObjectRetain(v110);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v111._uint64_t countAndFlagsBits = 0LL;
      v111._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v111);
      uint64_t v112 = *((void *)&v237 + 1);
      uint64_t v113 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t v114 = swift_getDynamicType(v113, v112, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v114);
      uint64_t v233 = v114;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v115._uint64_t countAndFlagsBits = 5972026LL;
      v115._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v115);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v233 = v107;
      uint64_t v234 = v110;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v116._uint64_t countAndFlagsBits = 93LL;
      v116._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v116);
      LogMessage.init(stringInterpolation:)(v18);
      uint64_t v19 = v108;
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v117._uint64_t countAndFlagsBits = 0LL;
      v117._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v117);
      uint64_t v118 = *((void *)&v237 + 1);
      uint64_t v119 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t v120 = swift_getDynamicType(v119, v118, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v120);
      uint64_t v233 = v120;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v121._uint64_t countAndFlagsBits = 58LL;
      v121._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v121);
      LogMessage.init(stringInterpolation:)(v18);
    }

    sub_10000D3A0(&v236);
    uint64_t v122 = v220;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(63LL, 3LL);
    v123._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v123._object = (void *)0x800000010016C850LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v123);
    uint64_t v125 = a1[2];
    uint64_t v124 = a1[3];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v125;
    *((void *)&v236 + 1) = v124;
    swift_bridgeObjectRetain(v124);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v126._uint64_t countAndFlagsBits = 0x6E6F697372657620LL;
    v126._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v126);
    uint64_t v127 = (void *)((char *)a1 + v230[12]);
    uint64_t v129 = *v127;
    uint64_t v128 = v127[1];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v129;
    *((void *)&v236 + 1) = v128;
    swift_bridgeObjectRetain(v128);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v130._uint64_t countAndFlagsBits = 0x203A6874617020LL;
    v130._object = (void *)0xE700000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v130);
    uint64_t v131 = v93[1];
    if (v131)
    {
      uint64_t v132 = *v93;
      *((void *)&v237 + 1) = &type metadata for String;
      *(void *)&__int128 v236 = v132;
      *((void *)&v236 + 1) = v131;
    }

    else
    {
      __int128 v236 = 0u;
      __int128 v237 = 0u;
    }

    swift_bridgeObjectRetain(v131);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v133._uint64_t countAndFlagsBits = 41LL;
    v133._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v133);
    uint64_t v134 = LogMessage.init(stringInterpolation:)(v122);
    uint64_t v135 = static os_log_type_t.error.getter(v134);
    sub_1000BD1B0(v135, v103);
    uint64_t v59 = swift_bridgeObjectRelease();
    BOOL v21 = 1;
LABEL_35:
    int v90 = *((unsigned __int8 *)a1 + v19);
    uint64_t v9 = v230;
  }

  if (v90 == 3)
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v136 = qword_1001DBB20;
    uint64_t v137 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v138 = type metadata accessor for LogMessage(0LL);
    uint64_t v139 = swift_allocObject( v137,  ((*(unsigned __int8 *)(*(void *)(v138 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v138 - 8) + 80LL))
           + 2LL * *(void *)(*(void *)(v138 - 8) + 72LL),
             *(unsigned __int8 *)(*(void *)(v138 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v139 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v237 + 1) = type metadata accessor for ContentManager();
    *(void *)&__int128 v236 = v231;
    uint64_t v140 = swift_retain(v231);
    id v141 = (id)AMSLogKey(v140);
    if (v141)
    {
      uint64_t v142 = v141;
      uint64_t v143 = static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
      uint64_t v229 = v136;
      uint64_t v145 = v144;

      swift_bridgeObjectRetain(v145);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v146._uint64_t countAndFlagsBits = 0LL;
      v146._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v146);
      uint64_t v147 = *((void *)&v237 + 1);
      uint64_t v148 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t v149 = swift_getDynamicType(v148, v147, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v149);
      uint64_t v233 = v149;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v150._uint64_t countAndFlagsBits = 5972026LL;
      v150._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v150);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v233 = v143;
      uint64_t v234 = v145;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      uint64_t v9 = v230;
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v151._uint64_t countAndFlagsBits = 93LL;
      v151._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v151);
      LogMessage.init(stringInterpolation:)(v18);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v152._uint64_t countAndFlagsBits = 0LL;
      v152._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v152);
      uint64_t v153 = *((void *)&v237 + 1);
      uint64_t v154 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t v155 = swift_getDynamicType(v154, v153, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v155);
      uint64_t v233 = v155;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v156._uint64_t countAndFlagsBits = 58LL;
      v156._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v156);
      LogMessage.init(stringInterpolation:)(v18);
    }

    sub_10000D3A0(&v236);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(40LL, 2LL);
    v157._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v157._object = (void *)0x800000010016C830LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v157);
    uint64_t v159 = a1[2];
    uint64_t v158 = a1[3];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v159;
    *((void *)&v236 + 1) = v158;
    swift_bridgeObjectRetain(v158);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v160._uint64_t countAndFlagsBits = 0x6E6F697372657620LL;
    v160._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v160);
    uint64_t v161 = (void *)((char *)a1 + v9[12]);
    uint64_t v163 = *v161;
    uint64_t v162 = v161[1];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v163;
    *((void *)&v236 + 1) = v162;
    swift_bridgeObjectRetain(v162);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v164._uint64_t countAndFlagsBits = 41LL;
    v164._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v164);
    uint64_t v165 = LogMessage.init(stringInterpolation:)(v18);
    uint64_t v166 = static os_log_type_t.error.getter(v165);
    sub_1000BD1B0(v166, v139);
    uint64_t v59 = swift_bridgeObjectRelease();
    BOOL v21 = 1;
  }

  uint64_t v167 = (char *)a1 + v9[8];
  uint64_t v168 = v226;
  Date.init()(v59);
  LOBYTE(v167) = static Date.< infix(_:_:)(v167, v168);
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v227 + 8))(v168, v228);
  if ((v167 & 1) != 0)
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v169 = qword_1001DBB20;
    uint64_t v170 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v171 = type metadata accessor for LogMessage(0LL);
    uint64_t v172 = swift_allocObject( v170,  ((*(unsigned __int8 *)(*(void *)(v171 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v171 - 8) + 80LL))
           + 2LL * *(void *)(*(void *)(v171 - 8) + 72LL),
             *(unsigned __int8 *)(*(void *)(v171 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v172 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v237 + 1) = type metadata accessor for ContentManager();
    *(void *)&__int128 v236 = v231;
    uint64_t v173 = swift_retain(v231);
    id v174 = (id)AMSLogKey(v173);
    if (v174)
    {
      uint64_t v175 = v174;
      uint64_t v176 = static String._unconditionallyBridgeFromObjectiveC(_:)(v174);
      uint64_t v231 = v169;
      uint64_t v178 = v177;

      swift_bridgeObjectRetain(v178);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v179._uint64_t countAndFlagsBits = 0LL;
      v179._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v179);
      uint64_t v180 = *((void *)&v237 + 1);
      id v181 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t v182 = swift_getDynamicType(v181, v180, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v182);
      uint64_t v233 = v182;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v183._uint64_t countAndFlagsBits = 5972026LL;
      v183._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v183);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v233 = v176;
      uint64_t v234 = v178;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      uint64_t v9 = v230;
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v184._uint64_t countAndFlagsBits = 93LL;
      v184._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v184);
      LogMessage.init(stringInterpolation:)(v18);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v185._uint64_t countAndFlagsBits = 0LL;
      v185._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v185);
      uint64_t v186 = *((void *)&v237 + 1);
      uint64_t v187 = sub_10000D37C(&v236, *((uint64_t *)&v237 + 1));
      uint64_t v188 = swift_getDynamicType(v187, v186, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v188);
      uint64_t v233 = v188;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v233);
      sub_100048258((uint64_t)&v233, &qword_1001CAAD0);
      v189._uint64_t countAndFlagsBits = 58LL;
      v189._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v189);
      LogMessage.init(stringInterpolation:)(v18);
    }

    sub_10000D3A0(&v236);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(41LL, 2LL);
    v190._object = (void *)0x800000010016C810LL;
    v190._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v190);
    uint64_t v192 = a1[2];
    uint64_t v191 = a1[3];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v192;
    *((void *)&v236 + 1) = v191;
    swift_bridgeObjectRetain(v191);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v193._uint64_t countAndFlagsBits = 0x6E6F697372657620LL;
    v193._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v193);
    uint64_t v194 = (void *)((char *)a1 + v9[12]);
    uint64_t v196 = *v194;
    uint64_t v195 = v194[1];
    *((void *)&v237 + 1) = &type metadata for String;
    *(void *)&__int128 v236 = v196;
    *((void *)&v236 + 1) = v195;
    swift_bridgeObjectRetain(v195);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v236);
    sub_100048258((uint64_t)&v236, &qword_1001CAAD0);
    v197._uint64_t countAndFlagsBits = 41LL;
    v197._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v197);
    uint64_t v198 = LogMessage.init(stringInterpolation:)(v18);
    uint64_t v199 = static os_log_type_t.error.getter(v198);
    sub_1000BD1B0(v199, v172);
    swift_bridgeObjectRelease();
    v200 = (void *)((char *)a1 + v9[11]);
    uint64_t v201 = *v200;
    uint64_t v202 = v200[1];
    uint64_t v203 = v222;
    swift_beginAccess(v222, &v236, 32LL, 0LL);
    v204 = v203;
    uint64_t v205 = *v203;
    swift_bridgeObjectRetain(v202);
    sub_1000307D8(v201, v202, v205);
    uint64_t v207 = v206;
    swift_bridgeObjectRelease();
    swift_endAccess(&v236);
    if (v207)
    {
      [v207 cancel];
    }

    swift_beginAccess(v204, &v236, 33LL, 0LL);
    swift_bridgeObjectRetain(v202);
    uint64_t v208 = (void *)sub_10003310C(v201, v202);
    swift_endAccess(&v236);
    swift_bridgeObjectRelease();

    goto LABEL_54;
  }

  if (v21)
  {
LABEL_54:
    v209 = (uint64_t *)(v223 + 16);
    uint64_t v210 = (uint64_t *)(v224 + 16);
    swift_beginAccess(v223 + 16, &v236, 0LL, 0LL);
    uint64_t v211 = *v209;
    uint64_t v212 = *a1;
    swift_bridgeObjectRetain(*v209);
    swift_bridgeObjectRetain(v212);
    uint64_t v214 = sub_10013E21C(v213);
    uint64_t v215 = sub_1000E0580(v214, v211);
    swift_beginAccess(v209, &v233, 1LL, 0LL);
    uint64_t *v209 = v215;
    swift_bridgeObjectRelease();
    swift_beginAccess(v210, v238, 33LL, 0LL);
    sub_100063EBC();
    uint64_t v216 = *(void *)(*v210 + 16);
    sub_100063F74(v216);
    uint64_t v217 = *v210;
    *(void *)(v217 + ++*(void *)(v0 + 16) = v216 + 1;
    sub_100039F1C( (uint64_t)a1,  v217 + ((*(unsigned __int8 *)(v225 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80))
    + *(void *)(v225 + 72) * v216);
    return (id)swift_endAccess(v238);
  }

  return result;
}

uint64_t sub_10004502C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContentInfo(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  sub_100039F1C(a1, (uint64_t)v9);
  uint64_t v10 = *v9;
  swift_bridgeObjectRetain(*v9);
  uint64_t v12 = sub_10013E21C(v11);
  swift_beginAccess(a2 + 16, v48, 0LL, 0LL);
  uint64_t v13 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain_n(v13, 3LL);
  swift_bridgeObjectRetain(v10);
  uint64_t v15 = sub_100048074(v14, v13);
  char v17 = v16;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) != 0) {
    goto LABEL_7;
  }
  uint64_t v19 = v15 + 1;
  if (__OFADD__(v15, 1LL))
  {
LABEL_33:
    __break(1u);
    return result;
  }

  uint64_t v42 = v12;
  uint64_t v43 = a3;
  uint64_t v44 = v7;
  unint64_t v20 = *(void *)(v10 + 16);
  if (v19 != v20)
  {
    uint64_t v27 = 16 * v15;
    unint64_t v21 = v15 + 1;
    uint64_t v45 = v13;
    Swift::String v46 = v9;
    while ((v19 & 0x8000000000000000LL) == 0)
    {
      if (v21 >= v20) {
        goto LABEL_27;
      }
      uint64_t v28 = v10 + v27;
      uint64_t v29 = *(void *)(v10 + v27 + 48);
      uint64_t v30 = *(void *)(v10 + v27 + 56);
      swift_bridgeObjectRetain(v30);
      sub_1000F4E34(v29, v30, v13);
      LOBYTE(v29) = v31;
      uint64_t result = swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        if (v21 != v15)
        {
          if (v15 < 0) {
            goto LABEL_29;
          }
          unint64_t v32 = *(void *)(v10 + 16);
          if (v15 >= v32) {
            goto LABEL_30;
          }
          if (v21 >= v32) {
            goto LABEL_31;
          }
          uint64_t v33 = (uint64_t *)(v10 + 32 + 16 * v15);
          uint64_t v34 = *v33;
          uint64_t v35 = v33[1];
          uint64_t v36 = *(void *)(v28 + 48);
          uint64_t v37 = *(void *)(v28 + 56);
          swift_bridgeObjectRetain(v35);
          swift_bridgeObjectRetain(v37);
          if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
          {
            sub_10015524C();
            uint64_t v10 = v41;
          }

          uint64_t v38 = v10 + 16 * v15;
          *(void *)(v38 + 32) = v36;
          *(void *)(v38 + 40) = v37;
          uint64_t result = swift_bridgeObjectRelease();
          if (v21 >= *(void *)(v10 + 16)) {
            goto LABEL_32;
          }
          uint64_t v39 = v10 + v27;
          *(void *)(v39 + 48) = v34;
          *(void *)(v39 + 56) = v35;
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v13 = v45;
          uint64_t v9 = v46;
          *Swift::String v46 = v10;
        }

        if (__OFADD__(v15++, 1LL)) {
          goto LABEL_28;
        }
      }

      ++v21;
      unint64_t v20 = *(void *)(v10 + 16);
      v27 += 16LL;
      if (v21 == v20) {
        goto LABEL_5;
      }
    }

    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }

  unint64_t v21 = v15 + 1;
LABEL_5:
  a3 = v43;
  uint64_t v7 = v44;
  uint64_t v12 = v42;
  __break(1u);
LABEL_7:
  uint64_t v15 = *(void *)(v10 + 16);
  unint64_t v21 = v15;
LABEL_8:
  sub_100092734((char *)v15, v21);
  swift_bridgeObjectRelease_n(v13, 2LL);
  swift_bridgeObjectRetain(*v9);
  uint64_t v23 = sub_10013E21C(v22);
  char v24 = sub_100047848(v12, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
    swift_beginAccess(a3 + 16, v47, 33LL, 0LL);
    sub_100063EBC();
    uint64_t v25 = *(void *)(*(void *)(a3 + 16) + 16LL);
    sub_100063F74(v25);
    uint64_t v26 = *(void *)(a3 + 16);
    *(void *)(v26 + ++*(void *)(v0 + 16) = v25 + 1;
    sub_100039F1C( (uint64_t)v9,  v26 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
    + *(void *)(v7 + 72) * v25);
    swift_endAccess(v47);
  }

  return sub_1000207E4((uint64_t)v9);
}

uint64_t sub_100045328()
{
  uint64_t result = sub_100023140(*(unsigned __int8 *)(v0 + 16), 0);
  if (!v1)
  {
    uint64_t v3 = result;
    sub_100023000();
    uint64_t v5 = v4;
    swift_release(v3);
    return v5;
  }

  return result;
}

void sub_100045390(char a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001CD430);
  *(_OWORD *)(swift_allocObject(v2, 40LL, 7LL) + ++*(void *)(v0 + 16) = xmmword_100165690;
  __asm { BR              X10 }

void sub_100045428( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  id v21 = sub_100067A94((void *)0x6C616E7265746E69LL);
  *(void *)(v20 + 32) = v21;
  specialized Array._endMutation()(v21);
  sub_10006842C(v20);
  uint64_t v22 = sub_10000D33C(&qword_1001C8F00);
  uint64_t v23 = swift_allocObject(v22, 40LL, 7LL);
  *(_OWORD *)(v23 + ++*(void *)(v0 + 16) = xmmword_100164220;
  sub_100054044(v19);
  *(void *)(v23 + 32) = v24;
  sub_1000683E8();
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
  id v25 = sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
  id v27 = [objc_allocWithZone(AMSEngagement) initWithBag:v25];

  id v26 = [v27 _enqueue:v18];
}

uint64_t sub_1000455C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CharacterSet(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ContentInfo(0LL) + 48));
  uint64_t v7 = v6[1];
  uint64_t v16 = *v6;
  uint64_t v17 = v7;
  swift_bridgeObjectRetain(v7);
  v8._uint64_t countAndFlagsBits = 43LL;
  v8._object = (void *)0xE100000000000000LL;
  String.append(_:)(v8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v9 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain(v17);
  v11._uint64_t countAndFlagsBits = v10;
  v11._object = v9;
  String.append(_:)(v11);
  uint64_t v12 = swift_bridgeObjectRelease();
  static CharacterSet.urlHostAllowed.getter(v12);
  unint64_t v13 = sub_10004828C();
  uint64_t v14 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v5, &type metadata for String, v13);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  return v14;
}

id sub_1000456DC(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v109 = a5;
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = (void *)objc_opt_self(&OBJC_CLASS___NSFileManager);
  id v13 = [v12 defaultManager];
  uint64_t v111 = a2;
  NSString v14 = String._bridgeToObjectiveC()();
  unsigned int v15 = [v13 fileExistsAtPath:v14];

  if (!v15)
  {
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v108 = qword_1001DBB20;
    uint64_t v33 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v34 = type metadata accessor for LogMessage(0LL);
    uint64_t v35 = swift_allocObject( v33,  ((*(unsigned __int8 *)(*(void *)(v34 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v34 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v34 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v34 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v35 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v120 = (void *)sub_10000D33C(&qword_1001CA290);
    id v118 = a3;
    id v36 = (id)AMSLogKey(v120);
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      uint64_t v110 = a4;
      uint64_t v40 = v39;

      swift_bridgeObjectRetain(v40);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v41._uint64_t countAndFlagsBits = 0LL;
      v41._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t v42 = v120;
      uint64_t v43 = sub_10000D37C(&v118, (uint64_t)v120);
      uint64_t DynamicType = swift_getDynamicType(v43, v42, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v115 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
      sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
      v45._uint64_t countAndFlagsBits = 5972026LL;
      v45._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v115 = v38;
      uint64_t v116 = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
      sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
      v46._uint64_t countAndFlagsBits = 93LL;
      v46._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      LogMessage.init(stringInterpolation:)(v11);
      a4 = v110;
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v76._uint64_t countAndFlagsBits = 0LL;
      v76._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v76);
      uint64_t v77 = v120;
      uint64_t v78 = sub_10000D37C(&v118, (uint64_t)v120);
      uint64_t v79 = swift_getDynamicType(v78, v77, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v79);
      uint64_t v115 = v79;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
      sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
      v80._uint64_t countAndFlagsBits = 58LL;
      v80._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v80);
      LogMessage.init(stringInterpolation:)(v11);
    }

    sub_10000D3A0(&v118);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(26LL, 1LL);
    v81._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v81._object = (void *)0x800000010016C980LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v81);
    uint64_t v120 = &type metadata for String;
    id v118 = a1;
    uint64_t v119 = v111;
    swift_bridgeObjectRetain(v111);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v118);
    sub_100048258((uint64_t)&v118, &qword_1001CAAD0);
    v82._uint64_t countAndFlagsBits = 0LL;
    v82._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v82);
    uint64_t v83 = LogMessage.init(stringInterpolation:)(v11);
    uint64_t v84 = static os_log_type_t.error.getter(v83);
    sub_1000BD1B0(v84, v35);
    id result = (id)swift_bridgeObjectRelease();
    if (!a4) {
      return result;
    }
    return (id)a4(result);
  }

  uint64_t v110 = a4;
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v108 = qword_1001DBB20;
  uint64_t v16 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v17 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (v19 + 32) & ~v19;
  uint64_t v106 = v16;
  uint64_t v104 = v20 + 2 * v18;
  uint64_t v103 = v19 | 7;
  uint64_t v21 = swift_allocObject(v16, v104, v19 | 7);
  __int128 v102 = xmmword_100164230;
  *(_OWORD *)(v21 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v105 = v20;
  uint64_t v101 = (void *)sub_10000D33C(&qword_1001CA290);
  uint64_t v120 = v101;
  uint64_t v107 = a3;
  id v118 = a3;
  id v22 = (id)AMSLogKey(v101);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    uint64_t v26 = v25;

    swift_bridgeObjectRetain(v26);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v27._uint64_t countAndFlagsBits = 0LL;
    v27._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v28 = v120;
    uint64_t v29 = sub_10000D37C(&v118, (uint64_t)v120);
    uint64_t v30 = swift_getDynamicType(v29, v28, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v30);
    uint64_t v115 = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
    sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
    v31._uint64_t countAndFlagsBits = 5972026LL;
    v31._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v115 = v24;
    uint64_t v116 = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
    sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
    v32._uint64_t countAndFlagsBits = 93LL;
    v32._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)(v11);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v47._uint64_t countAndFlagsBits = 0LL;
    v47._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    uint64_t v48 = v120;
    uint64_t v49 = sub_10000D37C(&v118, (uint64_t)v120);
    uint64_t v50 = swift_getDynamicType(v49, v48, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v50);
    uint64_t v115 = v50;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
    sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
    v51._uint64_t countAndFlagsBits = 58LL;
    v51._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v51);
    LogMessage.init(stringInterpolation:)(v11);
  }

  sub_10000D3A0(&v118);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(19LL, 1LL);
  v52._object = (void *)0x800000010016C9A0LL;
  v52._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v52);
  uint64_t v120 = &type metadata for String;
  id v118 = a1;
  uint64_t v119 = v111;
  swift_bridgeObjectRetain(v111);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v118);
  sub_100048258((uint64_t)&v118, &qword_1001CAAD0);
  v53._uint64_t countAndFlagsBits = 0LL;
  v53._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v53);
  uint64_t v54 = LogMessage.init(stringInterpolation:)(v11);
  uint64_t v55 = static os_log_type_t.error.getter(v54);
  sub_1000BD1B0(v55, v21);
  swift_bridgeObjectRelease();
  id v56 = [v12 defaultManager];
  NSString v57 = String._bridgeToObjectiveC()();
  id v118 = 0LL;
  unsigned int v58 = [v56 removeItemAtPath:v57 error:&v118];

  id v59 = v118;
  if (v58)
  {
    id result = v118;
    a4 = v110;
    if (!v110) {
      return result;
    }
    return (id)a4(result);
  }

  uint64_t v108 = v18;
  id v61 = v118;
  uint64_t v62 = _convertNSErrorToError(_:)(v59);

  uint64_t v100 = v62;
  swift_willThrow(v63);
  v99[1] = qword_1001DBB20;
  uint64_t v64 = swift_allocObject(v106, v104, v103);
  *(_OWORD *)(v64 + ++*(void *)(v0 + 16) = v102;
  uint64_t v120 = v101;
  id v118 = v107;
  id v65 = (id)AMSLogKey(v64);
  if (v65)
  {
    uint64_t v66 = v65;
    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    uint64_t v69 = v68;

    swift_bridgeObjectRetain(v69);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v70._uint64_t countAndFlagsBits = 0LL;
    v70._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v70);
    uint64_t v71 = v120;
    uint64_t v72 = sub_10000D37C(&v118, (uint64_t)v120);
    uint64_t v73 = swift_getDynamicType(v72, v71, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v73);
    uint64_t v115 = v73;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
    sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
    v74._uint64_t countAndFlagsBits = 5972026LL;
    v74._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v74);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v115 = v67;
    uint64_t v116 = v69;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
    sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
    v75._uint64_t countAndFlagsBits = 93LL;
    v75._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v75);
    LogMessage.init(stringInterpolation:)(v11);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v85._uint64_t countAndFlagsBits = 0LL;
    v85._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v85);
    uint64_t v86 = v120;
    Swift::String v87 = sub_10000D37C(&v118, (uint64_t)v120);
    uint64_t v88 = swift_getDynamicType(v87, v86, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v88);
    uint64_t v115 = v88;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v115);
    sub_100048258((uint64_t)&v115, &qword_1001CAAD0);
    v89._uint64_t countAndFlagsBits = 58LL;
    v89._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v89);
    LogMessage.init(stringInterpolation:)(v11);
  }

  a4 = v110;
  sub_10000D3A0(&v118);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(26LL, 2LL);
  v90._uint64_t countAndFlagsBits = 0xD000000000000018LL;
  v90._object = (void *)0x800000010016C9C0LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v90);
  uint64_t v120 = &type metadata for String;
  id v118 = a1;
  uint64_t v119 = v111;
  swift_bridgeObjectRetain(v111);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v118);
  sub_100048258((uint64_t)&v118, &qword_1001CAAD0);
  v91._uint64_t countAndFlagsBits = 8238LL;
  v91._object = (void *)0xE200000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v91);
  uint64_t v92 = v100;
  swift_getErrorValue(v100, v114);
  uint64_t v93 = v112;
  uint64_t v94 = v113;
  uint64_t v120 = v113;
  NSString v95 = sub_10000D63C(&v118);
  (*(void (**)(void *, uint64_t, void *))(*(v94 - 1) + 16LL))(v95, v93, v94);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v118);
  sub_100048258((uint64_t)&v118, &qword_1001CAAD0);
  v96._uint64_t countAndFlagsBits = 0LL;
  v96._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v96);
  uint64_t v97 = LogMessage.init(stringInterpolation:)(v11);
  uint64_t v98 = static os_log_type_t.error.getter(v97);
  sub_1000BD1B0(v98, v64);
  swift_bridgeObjectRelease();
  id result = (id)swift_errorRelease(v92);
  if (a4) {
    return (id)a4(result);
  }
  return result;
}

void sub_1000460F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  int v156 = v25;
  uint64_t v27 = v26;
  unint64_t v144 = *v20;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)v142 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_100020C40();
  uint64_t v170 = *(void *)(v31 - 8);
  uint64_t v171 = v31;
  sub_10000DC8C();
  __chkstk_darwin(v32);
  sub_10001A284();
  uint64_t v165 = v33;
  sub_10001A210();
  __chkstk_darwin(v34);
  sub_10001A3B0();
  uint64_t v167 = v35;
  sub_10001A210();
  __chkstk_darwin(v36);
  sub_10001A3B0();
  uint64_t v169 = v37;
  sub_10001A210();
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)v142 - v39;
  uint64_t v163 = (uint64_t *)v27;
  uint64_t v41 = *(void *)(v27 + 8);
  unint64_t v42 = *(void *)(v41 + 16);
  uint64_t v43 = _swiftEmptyArrayStorage;
  Swift::String v157 = v30;
  if (v42)
  {
    swift_bridgeObjectRetain_n(v41, 2LL);
    uint64_t v44 = (void **)(v41 + 40);
    do
    {
      uint64_t v45 = (uint64_t)*(v44 - 1);
      Swift::String v46 = *v44;
      sub_100020BB4();
      v47._uint64_t countAndFlagsBits = v45;
      v47._object = v46;
      unint64_t v48 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A71F0, v47);
      sub_100020AB8();
      if (v48 <= 3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v43) & 1) == 0)
        {
          sub_1000488C8();
          sub_100013FC4();
          uint64_t v43 = v50;
        }

        unint64_t v21 = v43[2];
        unint64_t v49 = v43[3];
        if (v21 >= v49 >> 1)
        {
          sub_100048B48(v49);
          sub_100013FC4();
          uint64_t v43 = v51;
        }

        v43[2] = v21 + 1;
        *((_BYTE *)v43 + v21 + 32) = v48;
      }

      v44 += 2;
      --v42;
    }

    while (v42);
    sub_10000E014(v41);
    sub_100048B08();
  }

  else
  {
    unint64_t v42 = (unint64_t)v30;
  }

  if (v43[2]) {
    Swift::String v52 = (unsigned __int8 *)(v43 + 4);
  }
  else {
    Swift::String v52 = (unsigned __int8 *)(v24 + 2);
  }
  unsigned int v53 = *v52;
  sub_100009070();
  uint64_t v54 = *v163;
  uint64_t v150 = *(void *)(*v163 + 16);
  if (!v150) {
    goto LABEL_85;
  }
  unsigned int v143 = v53;
  uint64_t v149 = v54 + 32;
  sub_10000DEE0();
  unint64_t v55 = 0LL;
  __int128 v162 = xmmword_100164240;
  sub_100048B94();
  v142[1] = v56;
  sub_100048B94();
  uint64_t v147 = v57;
  sub_100048B94();
  uint64_t v146 = v58;
  uint64_t v145 = v40;
  Swift::String v164 = v24;
  uint64_t v148 = v54;
  while (1)
  {
    if (v55 >= *(void *)(v54 + 16)) {
      goto LABEL_87;
    }
    unint64_t v161 = v55;
    id v59 = (uint64_t *)(v149 + 16 * v55);
    uint64_t v61 = *v59;
    uint64_t v60 = (void *)v59[1];
    sub_10000DEE0();
    uint64_t v166 = v60;
    sub_1000402C4();
    __chkstk_darwin(v62);
    v142[-2] = v163;
    sub_1000D93C8((uint64_t (*)(char *))sub_1000482C8, (uint64_t)&v142[-4], v63);
    uint64_t v65 = v64;
    uint64_t v66 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v175 = _swiftEmptyArrayStorage;
    uint64_t v67 = *(void *)(v64 + 16);
    uint64_t v168 = v64;
    if (v67)
    {
      uint64_t v68 = v61;
      unint64_t v69 = 0LL;
      while (v69 < *(void *)(v65 + 16))
      {
        unint64_t v42 = (*(unsigned __int8 *)(v170 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80);
        unint64_t v21 = *(void *)(v170 + 72);
        sub_100039F1C(v65 + v42 + v21 * v69, (uint64_t)v40);
        if (v40[*(int *)(v171 + 40)] == 1)
        {
          sub_1000206E0((uint64_t)v40, v169);
          if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0) {
            sub_10001701C();
          }
          uint64_t v66 = (uint64_t)v175;
          unint64_t v71 = v175[2];
          unint64_t v70 = v175[3];
          if (v71 >= v70 >> 1)
          {
            sub_100048B48(v70);
            sub_10001701C();
            uint64_t v66 = (uint64_t)v175;
          }

          *(void *)(v66 + ++*(void *)(v0 + 16) = v71 + 1;
          sub_1000206E0(v169, v66 + v42 + v71 * v21);
          uint64_t v65 = v168;
        }

        else
        {
          sub_1000207E4((uint64_t)v40);
        }

        if (v67 == ++v69)
        {
          sub_100048B08();
          uint64_t v61 = v68;
          goto LABEL_31;
        }
      }

      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }

    uint64_t v72 = _swiftEmptyArrayStorage;
LABEL_31:
    uint64_t v73 = v72[2];
    swift_release();
    uint64_t v160 = v73;
    if (v67) {
      break;
    }
LABEL_36:
    if ((v156 & 1) == 0)
    {
      if (qword_1001C7FA0 != -1) {
        swift_once(&qword_1001C7FA0, sub_1000BD448);
      }
      uint64_t v158 = qword_1001DBB20;
      sub_10000D33C(&qword_1001C9C70);
      sub_100010570();
      sub_1000487C4();
      uint64_t v154 = v79;
      uint64_t v81 = sub_10001059C(v21 + 3 * v79, v80);
      *(_OWORD *)(v81 + ++*(void *)(v0 + 16) = v162;
      uint64_t v155 = v81;
      uint64_t v82 = sub_100048D10(v81 + v21);
      uint64_t v83 = sub_10004883C(v82);
      id v84 = (id)AMSLogKey(v83);
      if (v84)
      {
        uint64_t v85 = sub_1000105E8((uint64_t)v84);
        sub_100048890();
        sub_10000DEB4();
        sub_100010564();
        sub_10001A224();
        sub_1000104C0(&v175);
        uint64_t v86 = sub_100010530();
        sub_100048674(v86);
        sub_100048648((uint64_t)&v172);
        sub_10000DC14();
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v172 = (void *)v85;
        uint64_t v173 = v65;
        sub_100048640();
        sub_100048648((uint64_t)&v172);
        sub_10000DC4C(93LL);
        sub_10001A410();
        sub_10004899C();
      }

      else
      {
        sub_10001A1BC();
        sub_10001A224();
        sub_1000104C0(&v175);
        uint64_t v87 = sub_100010530();
        sub_100048674(v87);
        sub_100048648((uint64_t)&v172);
        sub_10000DC4C(58LL);
        sub_10001A410();
      }

      sub_100048738();
      uint64_t v88 = v154;
      uint64_t v73 = v159;
      sub_100048DC4(0xD000000000000025LL);
      uint64_t v177 = &type metadata for String;
      uint64_t v66 = v73 + 2 * v88;
      Swift::String v89 = v166;
      uint64_t v175 = (void *)v61;
      uint64_t v176 = v166;
      sub_10000DF10();
      sub_10004866C((uint64_t)&v175);
      uint64_t v90 = sub_100048648((uint64_t)&v175);
      uint64_t v91 = static os_log_type_t.error.getter(v90);
      sub_100048B00(v91, v155);
      sub_100020AB8();
      sub_10004705C((uint64_t)v163, v61, v89);
      unint64_t v21 = *(void *)(v92 + 16);
      if (v21)
      {
        uint64_t v73 = v61;
        uint64_t v159 = v92;
        uint64_t v93 = (void **)(v92 + 40);
        uint64_t v94 = (uint64_t)v164;
        unint64_t v42 = v144;
        uint64_t v66 = v143;
        uint64_t v95 = (uint64_t)v166;
        do
        {
          Swift::String v96 = *v93;
          uint64_t v175 = *(v93 - 1);
          uint64_t v176 = v96;
          sub_10000DEB4();
          sub_1000470E0((uint64_t *)&v175, v94, v73, v95, v66);
          sub_10000DDF8();
          v93 += 2;
          --v21;
        }

        while (v21);
        sub_100048D84((uint64_t)&a16);
        sub_100048B08();
        uint64_t v40 = v145;
        uint64_t v61 = v73;
        uint64_t v65 = v168;
      }

      else
      {
        swift_bridgeObjectRelease();
      }

      goto LABEL_50;
    }

    if (v73) {
      goto LABEL_79;
    }
LABEL_51:
    if (qword_1001C7FA0 != -1) {
      swift_once(&qword_1001C7FA0, sub_1000BD448);
    }
    uint64_t v160 = qword_1001DBB20;
    sub_10000D33C(&qword_1001C9C70);
    sub_100010570();
    sub_1000487C4();
    uint64_t v158 = v97;
    uint64_t v155 = v66;
    uint64_t v153 = v21 + 3 * v97;
    uint64_t v99 = sub_100048B40(v66, v153, v98 | 7, (uint64_t)&a9);
    *(_OWORD *)(v99 + ++*(void *)(v0 + 16) = v162;
    uint64_t v154 = v21;
    uint64_t v159 = v99;
    Swift::String v152 = (void *)type metadata accessor for ContentManager();
    uint64_t v100 = sub_10004883C((uint64_t)v152);
    id v101 = (id)AMSLogKey(v100);
    if (v101)
    {
      uint64_t v151 = sub_1000105E8((uint64_t)v101);
      sub_100048890();
      sub_10000DEB4();
      sub_100010564();
      sub_10001A224();
      sub_1000104C0(&v175);
      uint64_t v102 = sub_100010530();
      sub_100048674(v102);
      sub_100048648((uint64_t)&v172);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v172 = (void *)v151;
      uint64_t v173 = v65;
      sub_100048640();
      sub_100048648((uint64_t)&v172);
      sub_10000DC4C(93LL);
      sub_10001A410();
      sub_10004899C();
    }

    else
    {
      sub_10001A1BC();
      sub_10001A224();
      sub_1000104C0(&v175);
      uint64_t v103 = sub_100010530();
      sub_100048674(v103);
      sub_100048648((uint64_t)&v172);
      sub_10000DC4C(58LL);
      sub_10001A410();
    }

    sub_100048738();
    sub_100048DC4(0xD00000000000001FLL);
    uint64_t v177 = &type metadata for String;
    sub_100048D9C();
    sub_10004866C((uint64_t)&v175);
    uint64_t v104 = sub_100048648((uint64_t)&v175);
    uint64_t v105 = static os_log_type_t.info.getter(v104);
    sub_100048B00(v105, v159);
    sub_10000DE2C();
    if ((v156 & 1) == 0) {
      goto LABEL_67;
    }
    if (v67)
    {
      uint64_t v106 = v170;
      uint64_t v107 = v65 + ((*(unsigned __int8 *)(v170 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80));
      sub_10000DEB4();
      uint64_t v108 = *(void *)(v106 + 72);
      while (1)
      {
        uint64_t v109 = v165;
        sub_100039F1C(v107, v165);
        int v110 = *(unsigned __int8 *)(v109 + *(int *)(v171 + 40));
        sub_100048BB4();
        if (v110 != 2) {
          break;
        }
        v107 += v108;
        if (!--v67)
        {
          sub_10000DDF8();
          goto LABEL_62;
        }
      }

      uint64_t v65 = v168;
      sub_10000DDF8();
LABEL_67:
      uint64_t v159 = qword_1001DBB20;
      uint64_t v117 = sub_100048784(v155, v153, (uint64_t)&a9);
      *(_OWORD *)(v117 + ++*(void *)(v0 + 16) = v162;
      uint64_t v155 = v117;
      uint64_t v160 = v117 + v154;
      uint64_t v177 = v152;
      uint64_t v175 = v164;
      uint64_t v118 = swift_retain(v164);
      id v119 = (id)AMSLogKey(v118);
      if (v119)
      {
        uint64_t v154 = sub_1000105E8((uint64_t)v119);
        sub_100048890();
        sub_10000DEB4();
        sub_100010564();
        sub_10001A224();
        sub_1000104C0(&v175);
        uint64_t v120 = sub_100010530();
        sub_100048674(v120);
        sub_100048648((uint64_t)&v172);
        sub_10000DC14();
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v172 = (void *)v154;
        uint64_t v173 = v65;
        sub_100048640();
        sub_100048648((uint64_t)&v172);
        sub_10000DC4C(93LL);
        sub_10001A410();
        sub_10004899C();
      }

      else
      {
        sub_10001A1BC();
        sub_10001A224();
        sub_1000104C0(&v175);
        uint64_t v121 = sub_100010530();
        sub_100048674(v121);
        sub_100048648((uint64_t)&v172);
        sub_10000DC4C(58LL);
        sub_10001A410();
      }

      sub_100048738();
      unint64_t v42 = v160;
      sub_100048DC4(0xD00000000000003ALL);
      uint64_t v177 = &type metadata for String;
      sub_100048D9C();
      sub_10004866C((uint64_t)&v175);
      uint64_t v122 = sub_100048648((uint64_t)&v175);
      uint64_t v123 = static os_log_type_t.info.getter(v122);
      sub_100048B00(v123, v155);
      sub_100009020();
      unint64_t v21 = *(void *)(v65 + 16);
      if (v21)
      {
        uint64_t v124 = v170;
        uint64_t v125 = v65;
        unint64_t v126 = v65 + ((*(unsigned __int8 *)(v170 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80));
        swift_bridgeObjectRetain(v125);
        uint64_t v127 = *(void *)(v124 + 72);
        do
        {
          sub_100040774();
          v126 += v127;
          --v21;
        }

        while (v21);
        sub_10000E014(v168);
        uint64_t v40 = v145;
      }

      else
      {
        sub_10000DDF8();
      }

      sub_100048B08();
      sub_100040774();
      uint64_t v54 = v148;
      goto LABEL_76;
    }

LABEL_62:
    sub_10000DDF8();
    sub_10004705C((uint64_t)v163, v61, v166);
    unint64_t v21 = *(void *)(v111 + 16);
    uint64_t v112 = (uint64_t)v164;
    if (v21)
    {
      uint64_t v168 = v111;
      uint64_t v113 = (void **)(v111 + 40);
      unint64_t v42 = v143;
      uint64_t v114 = v61;
      uint64_t v115 = (uint64_t)v166;
      do
      {
        uint64_t v116 = *v113;
        uint64_t v175 = *(v113 - 1);
        uint64_t v176 = v116;
        sub_10000DF08();
        sub_100047490((uint64_t *)&v175, v112, v114, v115, v42);
        sub_100009070();
        v113 += 2;
        --v21;
      }

      while (v21);
      swift_bridgeObjectRelease();
      uint64_t v54 = v148;
      sub_100048B08();
    }

    else
    {
      swift_bridgeObjectRelease();
      uint64_t v54 = v148;
    }

LABEL_76:
    unint64_t v55 = v161 + 1;
    sub_10000DE74();
    if (v55 == v150) {
      goto LABEL_84;
    }
  }

  uint64_t v73 = v61;
  unint64_t v74 = v42;
  uint64_t v75 = v170;
  uint64_t v66 = v65 + ((*(unsigned __int8 *)(v170 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80));
  sub_10000DEB4();
  unint64_t v21 = *(void *)(v75 + 72);
  uint64_t v76 = v67;
  while (1)
  {
    uint64_t v77 = v167;
    sub_100039F1C(v66, v167);
    int v78 = *(unsigned __int8 *)(v77 + *(int *)(v171 + 40));
    sub_100048DF4();
    if (v78 == 3) {
      break;
    }
    v66 += v21;
    if (!--v76)
    {
      uint64_t v65 = v168;
      sub_10000DDF8();
      unint64_t v42 = v74;
      uint64_t v61 = v73;
      sub_100048DE0();
      goto LABEL_36;
    }
  }

  uint64_t v65 = v168;
  sub_10000DDF8();
  unint64_t v42 = v74;
  uint64_t v61 = v73;
LABEL_50:
  sub_100048DE0();
  if (!v73) {
    goto LABEL_51;
  }
LABEL_79:
  swift_bridgeObjectRelease();
  sub_10000DDF8();
  sub_100048D84((uint64_t)&v176);
  if (qword_1001C7FA0 == -1) {
    goto LABEL_80;
  }
LABEL_88:
  swift_once(&qword_1001C7FA0, sub_1000BD448);
LABEL_80:
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v128 = *(void *)(*(void *)(sub_100010570() - 8) + 72LL);
  sub_1000487C4();
  uint64_t v130 = sub_10001059C(v21 + 2 * v128, v129);
  *(_OWORD *)(v130 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v131 = type metadata accessor for ContentManager();
  uint64_t v132 = sub_10004883C(v131);
  id v133 = (id)AMSLogKey(v132);
  if (v133)
  {
    sub_1000105E8((uint64_t)v133);
    sub_100048DA8();
    sub_10000DF10();
    sub_100010564();
    sub_10000DC08();
    uint64_t v134 = v177;
    uint64_t v135 = sub_10000D37C(&v175, (uint64_t)v177);
    uint64_t v136 = sub_10000DC54((uint64_t)v135, (uint64_t)v134);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v136);
    uint64_t v172 = (void *)v136;
    sub_100048640();
    sub_100048648((uint64_t)&v172);
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v172 = v40;
    uint64_t v173 = v21;
    sub_100048640();
    sub_100048648((uint64_t)&v172);
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DE2C();
  }

  else
  {
    sub_10001A1BC();
    sub_10000DC08();
    uint64_t v137 = v177;
    uint64_t v138 = sub_10000D37C(&v175, (uint64_t)v177);
    sub_10000DC54((uint64_t)v138, (uint64_t)v137);
    uint64_t MetatypeMetadata = (void *)sub_100048E80();
    uint64_t v172 = v137;
    uint64_t v139 = sub_100048640();
    sub_1000486DC(v139, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_100048738();
  uint64_t v140 = sub_1000105B4(0xD000000000000026LL);
  uint64_t v141 = static os_log_type_t.debug.getter(v140);
  sub_1000487BC(v141, v130);
LABEL_84:
  swift_bridgeObjectRelease();
LABEL_85:
  sub_10000DD84();
}

uint64_t sub_100046F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentInfo(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v24 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  if (v10 == v12 && v11 == v13)
  {
    sub_100039F1C(a1, (uint64_t)v24 - v8);
    sub_100039F1C(a2, (uint64_t)v7);
  }

  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0LL);
    sub_100039F1C(a1, (uint64_t)v9);
    sub_100039F1C(a2, (uint64_t)v7);
    if ((v15 & 1) == 0)
    {
      char v16 = 1;
      goto LABEL_14;
    }
  }

  uint64_t v17 = *(int *)(v4 + 48);
  uint64_t v18 = *(void *)&v9[v17];
  uint64_t v19 = *(void *)&v9[v17 + 8];
  uint64_t v20 = &v7[v17];
  uint64_t v21 = *((void *)v20 + 1);
  if (v18 == *(void *)v20 && v19 == v21) {
    char v16 = 0;
  }
  else {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, *(void *)v20, v21, 0LL) ^ 1;
  }
LABEL_14:
  sub_1000207E4((uint64_t)v9);
  sub_1000207E4((uint64_t)v7);
  return v16 & 1;
}

void sub_10004705C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = sub_10000DEE0();
  sub_10003B1EC(v3, a2, a3);
  uint64_t v5 = v4;
  sub_10000DF10();
  sub_10003AEC4(v5, a2, (uint64_t)a3);
  sub_10000DE2C();
  sub_100009020();
  sub_10001A504();
}

uint64_t sub_1000470E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = *a1;
  uint64_t v41 = a1[1];
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v38 = qword_1001DBB20;
  uint64_t v11 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v12 = type metadata accessor for LogMessage(0LL);
  uint64_t v13 = swift_allocObject( v11,  ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL))
        + 5LL * *(void *)(*(void *)(v12 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v13 + ++*(void *)(v0 + 16) = xmmword_100164250;
  Swift::String v46 = (void *)type metadata accessor for ContentManager();
  uint64_t v44 = a2;
  uint64_t v14 = swift_retain(a2);
  id v15 = (id)AMSLogKey(v14);
  if (v15)
  {
    char v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v37[1] = a5;
    uint64_t v18 = v17;
    uint64_t v20 = v19;

    swift_bridgeObjectRetain(v20);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v21._uint64_t countAndFlagsBits = 0LL;
    v21._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t v22 = v46;
    uint64_t v23 = sub_10000D37C(&v44, (uint64_t)v46);
    uint64_t DynamicType = swift_getDynamicType(v23, v22, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v42[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
    sub_100048258((uint64_t)v42, &qword_1001CAAD0);
    v25._uint64_t countAndFlagsBits = 5972026LL;
    v25._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t MetatypeMetadata = &type metadata for String;
    v42[0] = v18;
    v42[1] = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
    sub_100048258((uint64_t)v42, &qword_1001CAAD0);
    v26._uint64_t countAndFlagsBits = 93LL;
    v26._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)(v10);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v27._uint64_t countAndFlagsBits = 0LL;
    v27._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v28 = v46;
    uint64_t v29 = sub_10000D37C(&v44, (uint64_t)v46);
    uint64_t v30 = swift_getDynamicType(v29, v28, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v30);
    v42[0] = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v42);
    sub_100048258((uint64_t)v42, &qword_1001CAAD0);
    v31._uint64_t countAndFlagsBits = 58LL;
    v31._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    LogMessage.init(stringInterpolation:)(v10);
  }

  sub_10000D3A0(&v44);
  LogMessage.init(stringLiteral:)(0xD000000000000019LL);
  Swift::String v46 = &type metadata for String;
  uint64_t v44 = v47;
  uint64_t v45 = v41;
  swift_bridgeObjectRetain(v41);
  static LogMessage.safe(_:)(&v44);
  sub_100048258((uint64_t)&v44, &qword_1001CAAD0);
  LogMessage.init(stringLiteral:)(0x3A6D6F7266LL);
  Swift::String v46 = &type metadata for String;
  uint64_t v44 = v39;
  uint64_t v45 = v40;
  swift_bridgeObjectRetain(v40);
  static LogMessage.safe(_:)(&v44);
  uint64_t v32 = sub_100048258((uint64_t)&v44, &qword_1001CAAD0);
  uint64_t v33 = static os_log_type_t.default.getter(v32);
  sub_1000BD1B0(v33, v13);
  swift_bridgeObjectRelease();
  unint64_t v34 = sub_1000482E4();
  uint64_t v35 = swift_allocError(&type metadata for ContentManager.BatchDownloadingError, v34, 0LL, 0LL);
  sub_10003C3F8();
  return swift_errorRelease(v35);
}

void sub_100047490(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = *a1;
  uint64_t v38 = a1[1];
  if (qword_1001C7FA0 != -1) {
    swift_once(&qword_1001C7FA0, sub_1000BD448);
  }
  uint64_t v35 = qword_1001DBB20;
  uint64_t v11 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v12 = type metadata accessor for LogMessage(0LL);
  uint64_t v13 = swift_allocObject( v11,  ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL))
        + 5LL * *(void *)(*(void *)(v12 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v13 + ++*(void *)(v0 + 16) = xmmword_100164250;
  uint64_t v43 = (void *)type metadata accessor for ContentManager();
  uint64_t v41 = a2;
  uint64_t v14 = swift_retain(a2);
  id v15 = (id)AMSLogKey(v14);
  if (v15)
  {
    char v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v34[1] = a5;
    uint64_t v18 = v17;
    uint64_t v20 = v19;

    swift_bridgeObjectRetain(v20);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v21._uint64_t countAndFlagsBits = 0LL;
    v21._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    uint64_t v22 = v43;
    uint64_t v23 = sub_10000D37C(&v41, (uint64_t)v43);
    uint64_t DynamicType = swift_getDynamicType(v23, v22, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v39[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v39);
    sub_100048258((uint64_t)v39, &qword_1001CAAD0);
    v25._uint64_t countAndFlagsBits = 5972026LL;
    v25._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t MetatypeMetadata = &type metadata for String;
    v39[0] = v18;
    v39[1] = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v39);
    sub_100048258((uint64_t)v39, &qword_1001CAAD0);
    v26._uint64_t countAndFlagsBits = 93LL;
    v26._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    LogMessage.init(stringInterpolation:)(v10);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v27._uint64_t countAndFlagsBits = 0LL;
    v27._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    uint64_t v28 = v43;
    uint64_t v29 = sub_10000D37C(&v41, (uint64_t)v43);
    uint64_t v30 = swift_getDynamicType(v29, v28, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v30);
    v39[0] = v30;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v39);
    sub_100048258((uint64_t)v39, &qword_1001CAAD0);
    v31._uint64_t countAndFlagsBits = 58LL;
    v31._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    LogMessage.init(stringInterpolation:)(v10);
  }

  sub_10000D3A0(&v41);
  LogMessage.init(stringLiteral:)(0xD000000000000019LL);
  uint64_t v43 = &type metadata for String;
  uint64_t v41 = v44;
  uint64_t v42 = v38;
  swift_bridgeObjectRetain(v38);
  static LogMessage.safe(_:)(&v41);
  sub_100048258((uint64_t)&v41, &qword_1001CAAD0);
  LogMessage.init(stringLiteral:)(0x3A6D6F7266LL);
  uint64_t v43 = &type metadata for String;
  uint64_t v41 = v36;
  uint64_t v42 = v37;
  swift_bridgeObjectRetain(v37);
  static LogMessage.safe(_:)(&v41);
  uint64_t v32 = sub_100048258((uint64_t)&v41, &qword_1001CAAD0);
  uint64_t v33 = static os_log_type_t.default.getter(v32);
  sub_1000BD1B0(v33, v13);
  swift_bridgeObjectRelease();
  sub_10003C3F8();
}

uint64_t sub_100047818()
{
  return swift_deallocClassInstance(v0, 17LL, 7LL);
}

uint64_t type metadata accessor for ContentManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd14ContentManager);
}

uint64_t sub_100047848(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1LL;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0LL;
  }
  int64_t v3 = 0LL;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v32 = result + 56;
  uint64_t v5 = 1LL << *(_BYTE *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1LL << v5);
  }
  else {
    uint64_t v6 = -1LL;
  }
  unint64_t v7 = v6 & v4;
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v34 = v3;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v15 = result;
    char v16 = (uint64_t *)(*(void *)(result + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    Hasher.init(_seed:)(v35, *(void *)(a2 + 40));
    sub_10000DF10();
    String.hash(into:)(v35, v18, v17);
    Swift::Int v19 = Hasher._finalize()();
    uint64_t v20 = -1LL << *(_BYTE *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v22 = *(void *)(a2 + 48);
    uint64_t v23 = (uint64_t *)(v22 + 16 * v21);
    uint64_t v24 = v23[1];
    BOOL v25 = *v23 == v18 && v24 == v17;
    if (!v25 && (sub_100025718(*v23, v24, v18, v17) & 1) == 0)
    {
      uint64_t v26 = ~v20;
      for (unint64_t j = v21 + 1; ; unint64_t j = v28 + 1)
      {
        uint64_t v28 = j & v26;
        uint64_t v29 = (uint64_t *)(v22 + 16 * v28);
        uint64_t v30 = v29[1];
        BOOL v31 = *v29 == v18 && v30 == v17;
        if (v31 || (sub_100025718(*v29, v30, v18, v17) & 1) != 0) {
          goto LABEL_28;
        }
      }

LABEL_39:
      sub_10000DE2C();
      return 0LL;
    }

  __break(1u);
  return result;
}

      __break(1u);
    }

    goto LABEL_15;
  }

  __break(1u);
  return result;
}

LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100047ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1LL;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL) & 1;
  }
}

uint64_t sub_100047AFC( uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  void v58[3] = a4;
  if (a1 < 0)
  {
    sub_10001A044();
    uint64_t v43 = "Must take zero or more splits";
    uint64_t v44 = "Swift/Collection.swift";
    uint64_t v45 = 29LL;
    uint64_t v46 = 22LL;
    goto LABEL_42;
  }

  uint64_t v10 = sub_100020AF8((uint64_t)&unk_1001A9868);
  *(void *)(v10 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  uint64_t v50 = v10 + 16;
  uint64_t v55 = sub_100020AF8((uint64_t)&unk_1001A9890);
  *(void *)(v55 + ++*(void *)(v0 + 16) = 15LL;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000LL) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000LL) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v31 = 7LL;
    if (((a6 >> 60) & ((a5 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v31 = 11LL;
    }
    sub_100047ED4(v31 | (v11 << 16), v55, a2 & 1, v10, a5, a6);
    sub_10000DCFC();
    uint64_t v14 = *(void **)(v10 + 16);
    sub_10000DF9C();
    swift_release(v10);
    uint64_t v32 = v55;
LABEL_38:
    swift_release(v32);
    return (uint64_t)v14;
  }

  uint64_t v48 = v10;
  uint64_t v49 = a1;
  uint64_t v13 = 7LL;
  if (((a6 >> 60) & ((a5 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v13 = 11LL;
  }
  uint64_t v47 = v13 | (v12 << 16);
  unint64_t v56 = 4 * v12;
  uint64_t v14 = _swiftEmptyArrayStorage;
  unint64_t v15 = 15LL;
  unint64_t v16 = 15LL;
  unint64_t v17 = 15LL;
  while (1)
  {
    v58[0] = String.subscript.getter(v15, a5, a6);
    v58[1] = v18;
    char v19 = a3(v58);
    if (v6)
    {
      swift_release(v48);
      swift_release(v55);
      swift_bridgeObjectRelease();
      sub_10000DCFC();
      return (uint64_t)v14;
    }

    char v20 = v19;
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      unint64_t v15 = sub_100048B84();
      goto LABEL_23;
    }

    int v21 = (v16 >> 14 == v15 >> 14) & a2;
    if (v21 != 1)
    {
      if (v15 >> 14 < v16 >> 14) {
        goto LABEL_40;
      }
      uint64_t v22 = sub_100048D30(v16, v15);
      uint64_t v51 = v24;
      uint64_t v52 = v23;
      uint64_t v53 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      {
        sub_1000488C8();
        sub_100013CE8();
        uint64_t v14 = v29;
      }

      unint64_t v26 = v14[2];
      if (v26 >= v14[3] >> 1)
      {
        sub_100013CE8();
        uint64_t v14 = v30;
      }

      v14[2] = v26 + 1;
      Swift::String v27 = &v14[4 * v26];
      v27[4] = v22;
      v27[5] = v53;
      v27[6] = v52;
      v27[7] = v51;
      *(void *)uint64_t v50 = v14;
    }

    uint64_t v28 = sub_100048B84();
    unint64_t v15 = v28;
    *(void *)(v55 + ++*(void *)(v0 + 16) = v28;
    if ((v21 & 1) == 0 && v14[2] == v49) {
      break;
    }
    unint64_t v16 = v28;
    unint64_t v17 = v28;
LABEL_23:
    if (v56 == v15 >> 14) {
      goto LABEL_32;
    }
  }

  unint64_t v17 = v28;
  unint64_t v16 = v28;
LABEL_32:
  if (v56 == v16 >> 14 && (a2 & 1) != 0)
  {
    sub_10000DCFC();
LABEL_37:
    sub_10000DF9C();
    swift_release(v48);
    uint64_t v32 = v55;
    goto LABEL_38;
  }

  if (v56 >= v17 >> 14)
  {
    uint64_t v33 = sub_100048D30(v17, v47);
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    sub_10000DCFC();
    sub_100063EA4();
    uint64_t v40 = *(void *)(*(void *)v50 + 16LL);
    sub_100063F5C(v40);
    uint64_t v14 = *(void **)v50;
    v14[2] = v40 + 1;
    uint64_t v41 = &v14[4 * v40];
    v41[4] = v33;
    v41[5] = v35;
    v41[6] = v37;
    v41[7] = v39;
    *(void *)uint64_t v50 = v14;
    goto LABEL_37;
  }

uint64_t sub_100047ED4( unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = *(void *)(a2 + 16);
  int v8 = (v7 >> 14 == a1 >> 14) & a3;
  if (v8 == 1) {
    return v8 ^ 1u;
  }
  if (a1 >> 14 >= v7 >> 14)
  {
    uint64_t v10 = String.subscript.getter(v7, a1, a5, a6);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    sub_100063EA4();
    uint64_t v17 = *(void *)(*(void *)(a4 + 16) + 16LL);
    sub_100063F5C(v17);
    uint64_t v18 = *(void *)(a4 + 16);
    *(void *)(v18 + ++*(void *)(v0 + 16) = v17 + 1;
    char v19 = (void *)(v18 + 32 * v17);
    v19[4] = v10;
    void v19[5] = v12;
    v19[6] = v14;
    v19[7] = v16;
    return v8 ^ 1u;
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Range requires lowerBound <= upperBound",  39LL,  2LL,  "Swift/Range.swift",  17LL);
  __break(1u);
  return result;
}

uint64_t sub_100047FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      BOOL v10 = v8 == a2 && v9 == a3;
      if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, a2, a3, 0LL) & 1) != 0) {
        break;
      }
      v7 += 2;
      if (v4 == ++v6) {
        goto LABEL_9;
      }
    }
  }

  else
  {
LABEL_9:
    uint64_t v6 = 0LL;
  }

  swift_bridgeObjectRelease(a3);
  return v6;
}

uint64_t sub_100048074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject(&unk_1001A9818, 24LL, 7LL);
  uint64_t v5 = v4;
  *(void *)(v4 + ++*(void *)(v0 + 16) = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    swift_bridgeObjectRetain(a2);
    swift_release(v5);
    uint64_t v8 = 0LL;
    goto LABEL_23;
  }

  uint64_t v26 = v4;
  uint64_t v29 = a1 + 32;
  uint64_t v7 = a2 + 56;
  swift_bridgeObjectRetain(a2);
  uint64_t v8 = 0LL;
  uint64_t v27 = v6;
  while (!*(void *)(a2 + 16))
  {
LABEL_19:
    if (++v8 == v6)
    {
      swift_release(v26);
      uint64_t v8 = 0LL;
      goto LABEL_23;
    }
  }

  uint64_t v9 = (uint64_t *)(v29 + 16 * v8);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  Hasher.init(_seed:)(v28, *(void *)(a2 + 40));
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(v28, v11, v10);
  Swift::Int v12 = Hasher._finalize()();
  uint64_t v13 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v14 = v12 & ~v13;
  if (((*(void *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v14) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v10);
    uint64_t v6 = v27;
    goto LABEL_19;
  }

  uint64_t v15 = *(void *)(a2 + 48);
  uint64_t v16 = (void *)(v15 + 16 * v14);
  uint64_t v17 = v16[1];
  BOOL v18 = *v16 == v11 && v17 == v10;
  if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v11, v10, 0LL) & 1) == 0)
  {
    uint64_t v19 = ~v13;
    for (unint64_t i = v14 + 1; ; unint64_t i = v21 + 1)
    {
      uint64_t v21 = i & v19;
      uint64_t v22 = (void *)(v15 + 16 * v21);
      uint64_t v23 = v22[1];
      BOOL v24 = *v22 == v11 && v23 == v10;
      if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v22, v23, v11, v10, 0LL) & 1) != 0) {
        goto LABEL_21;
      }
    }

    goto LABEL_18;
  }

uint64_t sub_100048258(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000D33C(a2);
  sub_100048DD4(*(void *)(v3 - 8));
  return a1;
}

unint64_t sub_10004828C()
{
  unint64_t result = qword_1001CD990;
  if (!qword_1001CD990)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1001CD990);
  }

  return result;
}

uint64_t sub_1000482C8(uint64_t a1)
{
  return sub_100046F20(a1, *(void *)(v1 + 16)) & 1;
}

unint64_t sub_1000482E4()
{
  unint64_t result = qword_1001CA2A0;
  if (!qword_1001CA2A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165770, &type metadata for ContentManager.BatchDownloadingError);
    atomic_store(result, (unint64_t *)&qword_1001CA2A0);
  }

  return result;
}

uint64_t sub_100048320()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100048344()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

id sub_100048380(void *a1)
{
  return sub_100043BDC(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10004838C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1000483B8(uint64_t a1)
{
  return sub_10004502C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000483C0()
{
  if (v0[5]) {
    swift_release(v0[6]);
  }
  return swift_deallocObject(v0, 56LL, 7LL);
}

id sub_1000483F4()
{
  return sub_1000456DC( *(void **)(v0 + 16),  *(void *)(v0 + 24),  *(void **)(v0 + 32),  *(uint64_t (**)(void))(v0 + 40),  *(void *)(v0 + 48));
}

uint64_t sub_100048404(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

uint64_t sub_100048414(uint64_t *a1, uint64_t *a2)
{
  return sub_100047ABC(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_10004843C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10004844C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100048454(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000D33C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_100048498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C8FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for ContentManager.BatchDownloadingError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100048520 + 4 * byte_1001656B5[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100048540 + 4 * byte_1001656BA[v4]))();
  }
}

_BYTE *sub_100048520(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_100048540(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100048548(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100048550(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100048558(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100048560(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContentManager.BatchDownloadingError()
{
  return &type metadata for ContentManager.BatchDownloadingError;
}

unint64_t sub_100048580()
{
  unint64_t result = qword_1001CA2B0;
  if (!qword_1001CA2B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165748, &type metadata for ContentManager.BatchDownloadingError);
    atomic_store(result, (unint64_t *)&qword_1001CA2B0);
  }

  return result;
}

uint64_t sub_1000485CC(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 152);
}

uint64_t sub_1000485E0(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 160);
}

uint64_t sub_1000485F4(uint64_t a1)
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(a1, 2LL);
}

uint64_t sub_1000485FC(uint64_t a1)
{
  return sub_100048258(a1, v1);
}

uint64_t sub_100048604(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 160);
}

uint64_t sub_100048618(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + 3LL * *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t sub_100048640()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 160);
}

uint64_t sub_100048648(uint64_t a1)
{
  return sub_100048258(a1, v1);
}

uint64_t sub_100048650()
{
  return static LogMessage.safe(_:)(v0 - 120);
}

void sub_10004865C()
{
  v0._uint64_t countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_10004866C(uint64_t a1)
{
  return static LogMessage.safe(_:)(a1);
}

uint64_t sub_100048674(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 160);
}

uint64_t sub_100048688()
{
  return sub_100045328();
}

uint64_t sub_1000486A4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v1, v2);
}

uint64_t sub_1000486B8(uint64_t a1)
{
  return sub_100048258(a1, v1);
}

uint64_t sub_1000486C0()
{
  return swift_getErrorValue(v0, v1 - 160, v1 - 184);
}

uint64_t sub_1000486D0()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_1000486DC(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2 - 160, a2);
}

uint64_t sub_1000486E4(uint64_t a1)
{
  return sub_1000BD1B0(a1, v1);
}

uint64_t sub_1000486F0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = *(void *)(a1 - 256);
  *(void *)(v2 - 128) = v1;
  return swift_retain(v1);
}

uint64_t sub_100048704(uint64_t a1)
{
  return sub_100048258(a1, v1);
}

void sub_10004870C()
{
}

uint64_t sub_100048718(uint64_t a1)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 120) = v1;
  return swift_retain(v1);
}

void *sub_100048728()
{
  *(void *)(v0 - 96) = *(void *)(v0 - 176);
  return sub_10000D63C((void *)(v0 - 120));
}

uint64_t sub_100048738()
{
  return sub_10000D3A0((void *)(v0 - 128));
}

uint64_t sub_100048740(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2 - 152, a2);
}

uint64_t sub_100048748(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(*(void *)(v2 - 360), a2, *(void *)(v2 - 368));
}

uint64_t sub_10004875C(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t sub_100048774(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2 - 128, a2);
}

void sub_10004877C()
{
}

uint64_t sub_100048784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return swift_allocObject(a1, a2, *(void *)(a3 - 256));
}

uint64_t sub_10004878C()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100048794(uint64_t result)
{
  *(void *)(result + 48) = v1;
  *(void *)(result + 56) = 0xEE0064746E656D65LL;
  return result;
}

uint64_t sub_1000487BC(uint64_t a1, uint64_t a2)
{
  return sub_1000BD1B0(a1, a2);
}

  ;
}

  ;
}

uint64_t sub_1000487EC()
{
  return static LogMessage.safe(_:)(v0 - 120);
}

uint64_t sub_1000487F8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return type metadata accessor for URL(0LL);
}

uint64_t sub_100048808(uint64_t a1)
{
  return sub_100048258(a1, v1);
}

uint64_t sub_100048810(uint64_t a1)
{
  return sub_100048258(a1, v1);
}

void sub_100048818()
{
}

void sub_100048824()
{
}

uint64_t sub_100048830(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for ContentManager();
}

uint64_t sub_10004883C(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  uint64_t v2 = *(void *)(v1 - 224);
  *(void *)(v1 - 128) = v2;
  return swift_retain(v2);
}

uint64_t sub_10004884C()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 240) + 8LL))(v0, *(void *)(v1 - 232));
}

uint64_t sub_10004885C(uint64_t a1)
{
  return static LogMessage.safe(_:)(a1);
}

  ;
}

uint64_t sub_100048888()
{
  return sub_10000D3A0((void *)(v0 - 120));
}

void sub_100048890()
{
}

uint64_t sub_100048898()
{
  uint64_t v1 = *(void *)(v0 - 288);
  *(void *)(v0 - 168) = *(void *)(v0 - 296);
  *(void *)(v0 - 160) = v1;
  return swift_bridgeObjectRetain(v1);
}

void sub_1000488B0()
{
  v0._uint64_t countAndFlagsBits = 0x203A707061202CLL;
  v0._object = (void *)0xE700000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_1000488C8()
{
  return 0LL;
}

uint64_t sub_1000488D8()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 240);
}

uint64_t sub_1000488E0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(result + 104) = (a2 - 32) | 0x8000000000000000LL;
  return result;
}

void sub_100048900(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._uint64_t countAndFlagsBits = 0xD000000000000019LL;
  String.append(_:)(v1);
}

uint64_t sub_100048918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000102D4(a1, a2, a3);
}

  ;
}

void sub_10004893C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 320) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
}

  ;
}

uint64_t sub_10004896C(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 152);
}

uint64_t sub_100048980(uint64_t a1)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 152) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 152);
}

uint64_t sub_100048994(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2 - 120, a2);
}

uint64_t sub_10004899C()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000489A8()
{
  return swift_release(*(void *)(v0 - 288));
}

uint64_t sub_1000489B4()
{
  *(void *)(v1 - 104) = *(void *)(v1 - 352);
  *(void *)(v1 - 128) = v0;
  return AMSLogKey();
}

uint64_t sub_1000489C8()
{
  uint64_t v1 = *(void *)(v0 - 312);
  *(void *)(v0 - 128) = *(void *)(v0 - 224);
  *(void *)(v0 - 120) = v1;
  return swift_bridgeObjectRetain(v1);
}

uint64_t sub_1000489DC()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_1000489E4()
{
  return URL.path.getter();
}

uint64_t sub_1000489EC()
{
  return sub_1000207E4(v0);
}

__n128 sub_1000489F4(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 384);
  a1[1] = result;
  return result;
}

uint64_t sub_100048A10()
{
  return _convertNSErrorToError(_:)(v0);
}

uint64_t sub_100048A1C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v1, v2);
}

uint64_t sub_100048A30()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_100048A38(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  uint64_t v2 = *(void *)(v1 - 264);
  *(void *)(v1 - 168) = v2;
  return swift_retain(v2);
}

uint64_t sub_100048A4C()
{
  return Dictionary.init(dictionaryLiteral:)(v2, v3, v0, v1);
}

void sub_100048A60()
{
}

uint64_t sub_100048A6C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v1, v2);
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_100048AE8()
{
  return sub_10000D3A0((void *)(v0 - 120));
}

uint64_t sub_100048B00(uint64_t a1, uint64_t a2)
{
  return sub_1000BD1B0(a1, a2);
}

  ;
}

  ;
}

uint64_t sub_100048B20(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  uint64_t v2 = *(void *)(v1 - 176);
  *(void *)(v1 - 120) = v2;
  return swift_retain(v2);
}

uint64_t sub_100048B30(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  *(void *)(v1 - 120) = *(void *)(v1 - 192);
  return AMSLogKey();
}

uint64_t sub_100048B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)(a4 - 256) = a3;
  return swift_allocObject(a1, a2, a3);
}

BOOL sub_100048B48@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

  ;
}

uint64_t sub_100048B6C(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2 + 272, a2);
}

uint64_t sub_100048B74(uint64_t a1)
{
  v1[37] = a1;
  v1[34] = v1[7];
  return AMSLogKey();
}

uint64_t sub_100048B84()
{
  return String.index(after:)(v2, v1, v0);
}

  ;
}

  ;
}

uint64_t sub_100048BAC(uint64_t a1)
{
  return sub_100039F1C(a1, v1);
}

uint64_t sub_100048BB4()
{
  return sub_1000207E4(v0);
}

uint64_t sub_100048BBC()
{
  return sub_100048258(v1 - 160, v0);
}

uint64_t sub_100048BCC()
{
  return sub_100048258(v1 - 160, v0);
}

void *sub_100048BDC()
{
  return sub_10000D63C((void *)(v0 - 128));
}

uint64_t sub_100048BE4(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  uint64_t v2 = *(void *)(v1 - 208);
  *(void *)(v1 - 128) = v2;
  return swift_retain(v2);
}

void sub_100048BF4()
{
}

  ;
}

uint64_t sub_100048C1C()
{
  return swift_getErrorValue(v0, v1 - 176, v1 - 200);
}

  ;
}

  ;
}

uint64_t sub_100048C54(uint64_t a1)
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t sub_100048C5C()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0 - 240) + 8LL))( *(void *)(v0 - 224),  *(void *)(v0 - 232));
}

NSString sub_100048C6C()
{
  return String._bridgeToObjectiveC()();
}

void sub_100048C74()
{
  v0._uint64_t countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

void sub_100048C84()
{
  v0._uint64_t countAndFlagsBits = 0LL;
  v0._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v0);
}

uint64_t sub_100048C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_dynamicCast(v4 - 216, v4 - 128, a3, a4, 6LL);
}

uint64_t sub_100048CA4(uint64_t a1)
{
  return sub_100048454(a1, v1, v2);
}

uint64_t sub_100048CB0(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2, a2);
}

uint64_t sub_100048CB8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_100048CC4()
{
  return sub_10000D3A0((void *)(v0 - 168));
}

  ;
}

  ;
}

id sub_100048CEC()
{
  return [v1 *(SEL *)(v0 + 1040)];
}

uint64_t sub_100048CF8()
{
  return AnyHashable.init<A>(_:)(v0 - 128);
}

uint64_t sub_100048D04()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100048D10@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 280) = a1;
  return type metadata accessor for ContentManager();
}

uint64_t sub_100048D1C(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2 + 240, a2);
}

  ;
}

uint64_t sub_100048D30(uint64_t a1, uint64_t a2)
{
  return String.subscript.getter(a1, a2, v3, v2);
}

uint64_t sub_100048D3C()
{
  *(void *)(v0 - 128) = *(void *)(v0 - 216);
  return AMSLogKey();
}

uint64_t sub_100048D48()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 272);
}

uint64_t sub_100048D50(uint64_t a1, uint64_t *a2)
{
  return sub_100048258(v2, a2);
}

uint64_t sub_100048D58()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

  ;
}

void sub_100048D78(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a2 - 256);
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

uint64_t sub_100048D84@<X0>(uint64_t a1@<X8>)
{
  return swift_bridgeObjectRelease(*(void *)(a1 - 256));
}

uint64_t sub_100048D8C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_100048258(*(void *)(a2 - 256), a1);
}

uint64_t sub_100048D94(uint64_t a1)
{
  return sub_100039F1C(a1, v1);
}

uint64_t sub_100048D9C()
{
  uint64_t v2 = *(void *)(v1 - 208);
  *(void *)(v1 - 128) = v0;
  *(void *)(v1 - 120) = v2;
  return swift_bridgeObjectRetain(v2);
}

void sub_100048DA8()
{
}

uint64_t sub_100048DB4()
{
  return swift_retain(v0);
}

uint64_t sub_100048DBC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void)@<X8>)
{
  return a2(a1, *(void *)(v2 - 256));
}

uint64_t sub_100048DC4(uint64_t a1)
{
  return LogMessage.init(stringLiteral:)(a1);
}

uint64_t sub_100048DCC()
{
  return swift_release(v0);
}

uint64_t sub_100048DD4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

  ;
}

uint64_t sub_100048DEC()
{
  return swift_retain(v0);
}

uint64_t sub_100048DF4()
{
  return sub_1000207E4(v0);
}

void sub_100048DFC(uint64_t a1)
{
  unint64_t v1 = 0xE900000000000020LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

void sub_100048E08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = (a2 - 32) | 0x8000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

__n128 *sub_100048E14(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_100048E20(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for ContentManager();
}

uint64_t sub_100048E2C(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for ContentManager();
}

uint64_t sub_100048E38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return swift_allocObject(v2, a1, a2 | 7);
}

uint64_t sub_100048E44()
{
  return sub_10000D3A0((void *)(v0 - 128));
}

uint64_t sub_100048E68()
{
  return sub_100048258(v1 - 128, v0);
}

uint64_t sub_100048E74()
{
  return type metadata accessor for ContentManager();
}

uint64_t sub_100048E80()
{
  return swift_getMetatypeMetadata();
}

uint64_t sub_100048E88()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100048E94()
{
  uint64_t v1 = *(void *)(v0 - 176);
  *(void *)(v0 - 120) = *(void *)(v0 - 184);
  *(void *)(v0 - 112) = v1;
  return swift_bridgeObjectRetain(v1);
}

uint64_t sub_100048EA0()
{
  return sub_100048258(v1 - 152, v0);
}

uint64_t sub_100048EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = swift_allocObject(&unk_1001A9A28, 32LL, 7LL);
  *(void *)(v11 + ++*(void *)(v0 + 16) = a4;
  *(void *)(v11 + 24) = a5;
  uint64_t v14 = v5;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  BOOL v18 = sub_100049188;
  uint64_t v19 = v11;
  swift_retain(a5);
  sub_100129A28((void (*)(void))sub_10001BE68, (uint64_t)&v13);
  return swift_release(v11);
}

unint64_t sub_100048F58(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A7270, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5) {
    return 5LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_100048FA0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100048FCC + 4 * byte_1001657B0[a1]))( 1415071060LL,  0xE400000000000000LL);
}

uint64_t sub_100048FCC()
{
  return 0x52454745544E49LL;
}

uint64_t sub_100048FE4()
{
  return 1112493122LL;
}

uint64_t sub_100048FF0()
{
  return 1279346002LL;
}

uint64_t sub_100048FFC()
{
  return 0x205952414D495250LL;
}

void sub_10004901C(char *a1)
{
}

void sub_100049028()
{
}

void sub_100049030(uint64_t a1)
{
}

void sub_100049038(uint64_t a1)
{
}

unint64_t sub_100049040@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_100048F58(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10004906C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100048FA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100049094(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + ++*(void *)(v0 + 16) = 1;
  return 0LL;
}

uint64_t sub_1000490E8(uint64_t a1, uint64_t (*a2)(void *))
{
  void v6[3] = type metadata accessor for SQLRow();
  v6[4] = &off_1001A9998;
  v6[0] = a1;
  swift_retain(a1);
  char v4 = a2(v6);
  sub_10000D3A0(v6);
  return v4 & 1;
}

uint64_t sub_100049164()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100049188(uint64_t a1)
{
  return sub_1000490E8(a1, *(uint64_t (**)(void *))(v1 + 16)) & 1;
}

uint64_t destroy for MediaClient(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 8));
}

uint64_t sub_1000491B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + ++*(void *)(v0 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t sub_1000491E4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + ++*(void *)(v0 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t sub_100049238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + ++*(void *)(v0 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t sub_100049274(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_1000492B4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + ++*(void *)(v0 + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for DatabaseCreationParameter()
{
}

uint64_t sub_100049300(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return swift_bridgeObjectRetain(a2);
  }
  if (!a3) {
    return sub_10001BDC8(result, a2);
  }
  return result;
}

uint64_t sub_100049320(uint64_t a1)
{
  return sub_10004934C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_10004934C(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3) {
    return swift_bridgeObjectRelease(a2);
  }
  if (!a3) {
    return sub_10001BD84(result, a2);
  }
  return result;
}

uint64_t sub_10004936C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  sub_100049300(v4, v5, v6);
  *(void *)(a1 + ++*(void *)(v0 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t sub_1000493C0(uint64_t a1, void *a2)
{
  unint64_t v2 = a2;
  *(void *)a1 = *a2;
  uint64_t v4 = a2[1];
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = v2[2];
  unint64_t v6 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_100049300(v5, v6, (char)v2);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + ++*(void *)(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_10004934C(v7, v8, v9);
  return a1;
}

uint64_t sub_100049438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(_BYTE *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + ++*(void *)(v0 + 16) = *(_OWORD *)(a2 + 16);
  char v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_10004934C(v6, v7, v8);
  return a1;
}

uint64_t sub_100049488(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }

    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }

  else
  {
    LODWORD(v2) = -1;
  }

  return (v2 + 1);
}

uint64_t sub_1000494C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + ++*(void *)(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(_BYTE *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 33) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

void type metadata accessor for DatabaseCriteriaParameter()
{
}

uint64_t getEnumTagSinglePayload for MercuryCacheUpdateTask.UpdateError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }

  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }

    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }

    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }

    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }

uint64_t sub_1000495A0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_1000495EC + 4 * byte_1001657BA[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100049620 + 4 * byte_1001657B5[v4]))();
}

uint64_t sub_100049620(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100049628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100049630LL);
  }
  return result;
}

uint64_t sub_10004963C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100049644LL);
  }
  *(_BYTE *)uint64_t result = a2 + 4;
  return result;
}

uint64_t sub_100049648(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100049650(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for DatabaseCreationParameter.ValueType()
{
}

unint64_t sub_10004966C()
{
  unint64_t result = qword_1001CA2B8;
  if (!qword_1001CA2B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001658CC, &unk_1001A9BC0);
    atomic_store(result, (unint64_t *)&qword_1001CA2B8);
  }

  return result;
}

id sub_1000496A8()
{
  uint64_t v0 = sub_10000D33C(&qword_1001CA2C0);
  __chkstk_darwin(v0);
  int v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v3 = [objc_allocWithZone(NSDateFormatter) init];
  sub_1000497B4(0xD00000000000001DLL, 0x800000010016CD10LL, v3);
  TimeZone.init(identifier:)(5524807LL, 0xE300000000000000LL);
  uint64_t v4 = type metadata accessor for TimeZone(0LL);
  Class isa = 0LL;
  if (sub_1000102D4((uint64_t)v2, 1LL, v4) != 1)
  {
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8LL))(v2, v4);
  }

  [v3 setTimeZone:isa];

  return v3;
}

void sub_1000497B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setDateFormat:v5];
}

uint64_t sub_100049804(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = sub_10000D33C((uint64_t *)&unk_1001CD380);
  __chkstk_darwin(v7);
  sub_10000DE7C();
  uint64_t v10 = v9 - v8;
  uint64_t v29 = sub_10000D33C((uint64_t *)&unk_1001CACC0);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  sub_10000DE7C();
  uint64_t v13 = v12 - v11;
  uint64_t v31 = sub_10000D33C(&qword_1001CA390);
  uint64_t v35 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  sub_10000DE7C();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10000D33C((uint64_t *)&unk_1001CD390);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v18 = PassthroughSubject.init()();
  uint64_t v32 = v5;
  *(void *)(v5 + ++*(void *)(v0 + 16) = v18;
  *(void *)(v5 + 24) = 0LL;
  uint64_t v37 = a2;
  uint64_t v38 = v18;
  type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
  sub_100049C54();
  unint64_t v19 = sub_100049B94();
  uint64_t v20 = sub_10001D34C( &qword_1001CA398,  (uint64_t *)&unk_1001CD390,  (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  unint64_t v21 = sub_10000D7D0();
  swift_retain(v18);
  Publisher.debounce<A>(for:scheduler:options:)(a1, &v37, v10, v17, v19, v20, v21);
  sub_100049BD0(v10);
  swift_release(v38);
  uint64_t v38 = (uint64_t)a2;
  sub_100049C54();
  uint64_t v22 = sub_10001D34C( &qword_1001CA3A0,  (uint64_t *)&unk_1001CACC0,  (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  Publisher.receive<A>(on:options:)(&v38, v10, v29, v19, v22, v21);
  sub_100049BD0(v10);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v13, v29);
  uint64_t v23 = swift_allocObject(&unk_1001A9C38, 32LL, 7LL);
  *(void *)(v23 + ++*(void *)(v0 + 16) = a3;
  *(void *)(v23 + 24) = a4;
  uint64_t v24 = sub_10001D34C( &qword_1001CA3A8,  &qword_1001CA390,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  swift_retain(a4);
  uint64_t v25 = Publisher<>.sink(receiveValue:)(sub_100049C34, v23, v31, v24);

  swift_release(a4);
  swift_release(v23);
  uint64_t v26 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8LL))(a1, v26);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v16, v31);
  uint64_t v27 = *(void *)(v32 + 24);
  *(void *)(v32 + 24) = v25;
  swift_release(v27);
  return v32;
}

uint64_t sub_100049AD4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100049AF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 24);
  if (v2)
  {
    swift_retain(v2);
    AnyCancellable.cancel()();
    swift_release(v2);
    uint64_t v3 = *(void *)(v1 + 24);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  *(void *)(v1 + 24) = 0LL;
  swift_release(v3);
  swift_release(*(void *)(v1 + 16));
  swift_release(*(void *)(v1 + 24));
  return v1;
}

uint64_t sub_100049B54()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for Debouncer()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd9Debouncer);
}

unint64_t sub_100049B94()
{
  unint64_t result = qword_1001CACD0;
  if (!qword_1001CACD0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001CACD0);
  }

  return result;
}

uint64_t sub_100049BD0(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C((uint64_t *)&unk_1001CD380);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100049C10()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100049C34()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100049C54()
{
  return sub_10000D5C0(v1, 1LL, 1LL, v0);
}

uint64_t sub_100049C68()
{
  uint64_t v0 = (__CFString *)sub_10004A21C();
  sub_1000090CC();
  sub_10004A26C();

  Boolean keyExistsAndHasValidFormat = 0;
  sub_10004A234();
  sub_10004A228();
  uint64_t v1 = (__CFString *)sub_10004A21C();
  sub_1000090CC();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppBooleanValue != 0;
  }
  else {
    return 2LL;
  }
}

CFIndex sub_100049D4C()
{
  uint64_t v0 = (__CFString *)sub_10004A21C();
  sub_1000090CC();
  sub_10004A26C();

  Boolean keyExistsAndHasValidFormat = 0;
  sub_10004A234();
  sub_10004A228();
  uint64_t v1 = (__CFString *)sub_10004A21C();
  sub_1000090CC();
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(v0, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppIntegerValue;
  }
  else {
    return 0LL;
  }
}

CFPropertyListRef sub_100049E28()
{
  uint64_t v0 = (__CFString *)sub_10004A21C();
  sub_1000090CC();
  sub_10004A26C();

  sub_10004A234();
  sub_10004A228();
  uint64_t v1 = (__CFString *)sub_10004A21C();
  sub_1000090CC();
  CFPropertyListRef v2 = CFPreferencesCopyAppValue(v0, v1);

  return v2;
}

uint64_t sub_100049EBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100049EF8
                                                                     + 4 * aI[a1]))( 0xD000000000000012LL,  0x800000010016CEC0LL);
}

uint64_t sub_100049EF8()
{
  return v0 - 10;
}

void sub_10004A020(const void *a1, unsigned __int8 a2)
{
  uint64_t v3 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v4 = (__CFString *)sub_10004A274();
  swift_bridgeObjectRelease();
  CFPreferencesSetAppValue(v3, a1, v4);

  applicationID = (__CFString *)sub_10004A274();
  swift_bridgeObjectRelease();
  CFPreferencesAppSynchronize(applicationID);
}

id sub_10004A0F0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Defaults();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_10004A140()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Defaults();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Defaults()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd8Defaults);
}

void sub_10004A190(const void *a1, unsigned __int8 a2)
{
}

CFPropertyListRef sub_10004A1A4()
{
  return sub_100049E28();
}

CFPropertyListRef sub_10004A1B8()
{
  CFPropertyListRef result = sub_100049E28();
  if (result)
  {
    CFPropertyListRef v2 = result;
    if (swift_dynamicCast( &v1,  &v2,  (char *)&type metadata for Swift.AnyObject + 8,  &type metadata for String,  6LL)) {
      return (CFPropertyListRef)v1;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

NSString sub_10004A21C()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004A228()
{
  return swift_bridgeObjectRelease(v0);
}

NSString sub_10004A234()
{
  return String._bridgeToObjectiveC()();
}

  ;
}

  ;
}

uint64_t sub_10004A26C()
{
  return CFPreferencesAppSynchronize(v0);
}

NSString sub_10004A274()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10004A284(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 2LL, v4, a1 + 96);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10004A300()
{
  return v0;
}

uint64_t sub_10004A338()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for StateTracker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000256DC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateTracker);
}

uint64_t sub_10004A35C()
{
  return v0;
}

uint64_t sub_10004A368(uint64_t a1, uint64_t a2)
{
  if (a1 && a2) {
    return sub_10004A584(a1, a2);
  }
  else {
    return (a1 | a2) == 0;
  }
}

uint64_t sub_10004A388()
{
  return sub_10004A35C();
}

uint64_t sub_10004A3A0(uint64_t *a1, uint64_t *a2)
{
  return sub_10004A368(*a1, *a2);
}

uint64_t sub_10004A3AC()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd42DeviceAccountPrivacyAcknowledgementHandler);
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceAccountPrivacyAcknowledgementHandler.State( uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for DeviceAccountPrivacyAcknowledgementHandler.State(void *a1)
{
  return swift_bridgeObjectRelease(*a1);
}

uint64_t *assignWithCopy for DeviceAccountPrivacyAcknowledgementHandler.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

void *initializeWithTake for DeviceAccountPrivacyAcknowledgementHandler.State(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t *assignWithTake for DeviceAccountPrivacyAcknowledgementHandler.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceAccountPrivacyAcknowledgementHandler.State( uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for DeviceAccountPrivacyAcknowledgementHandler.State( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0LL;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }

  return result;
}

uint64_t sub_10004A53C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  return (v1 + 1);
}

void *sub_10004A554(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }

  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }

  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for DeviceAccountPrivacyAcknowledgementHandler.State()
{
  return &type metadata for DeviceAccountPrivacyAcknowledgementHandler.State;
}

uint64_t sub_10004A584(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v25 = a1;
    }
    else {
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0) {
      uint64_t v26 = a2;
    }
    else {
      uint64_t v26 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  if (v5 != v6) {
    return 0LL;
  }
  if (!v5) {
    return 1LL;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8LL) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v4) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8LL) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if (v8 == v10) {
    return 1LL;
  }
  if (v5 < 0)
  {
LABEL_47:
    __break(1u);
  }

  else
  {
    sub_100063D14(0LL, (a1 & 0xC000000000000001LL) == 0);
    unint64_t v27 = a1 & 0xC000000000000001LL;
    if ((a1 & 0xC000000000000001LL) == 0)
    {
      id v11 = *(id *)(a1 + 32);
      goto LABEL_19;
    }
  }

  id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
LABEL_19:
  uint64_t v12 = v11;
  sub_100063D14(0LL, (a2 & 0xC000000000000001LL) == 0);
  if ((a2 & 0xC000000000000001LL) != 0) {
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a2);
  }
  else {
    id v13 = *(id *)(a2 + 32);
  }
  uint64_t v14 = v13;
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001C8C70, &OBJC_CLASS___ACAccount_ptr);
  char v15 = static NSObject.== infix(_:_:)(v12, v14);

  if ((v15 & 1) == 0) {
    return 0LL;
  }
  uint64_t v16 = 1 - v5;
  uint64_t v17 = 5LL;
  do
  {
    uint64_t v5 = v16 + v17 == 5;
    if (v16 + v17 == 5) {
      break;
    }
    unint64_t v18 = v17 - 4;
    if (v27)
    {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, a1);
    }

    else
    {
      if (v18 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
      {
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }

      id v19 = *(id *)(a1 + 8 * v17);
    }

    uint64_t v20 = v19;
    if ((a2 & 0xC000000000000001LL) != 0)
    {
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, a2);
    }

    else
    {
      if (v18 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_46;
      }
      id v21 = *(id *)(a2 + 8 * v17);
    }

    uint64_t v22 = v21;
    char v23 = static NSObject.== infix(_:_:)(v20, v21);

    ++v17;
  }

  while ((v23 & 1) != 0);
  return v5;
}

BOOL sub_10004A7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      return 1;
    }

    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_10004AF7C(a1 + v12, (uint64_t)v10);
        sub_10004AF7C(a2 + v12, (uint64_t)v7);
        BOOL v15 = sub_1000CF214();
        sub_10004AFC0((uint64_t)v7);
        sub_10004AFC0((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if (!v15) {
          break;
        }
        v12 += v13;
      }

      while (v17);
    }
  }

  else
  {
    return 0;
  }

  return v15;
}

void sub_10004A918()
{
  if (v3 && v2 && v0 != v1 && *(unsigned __int8 *)(v0 + 32) == *(unsigned __int8 *)(v1 + 32))
  {
    uint64_t v4 = (uint64_t *)(v0 + 56);
    uint64_t v5 = (unsigned __int8 *)(v1 + 64);
    for (uint64_t i = v2 - 1; ; --i)
    {
      uint64_t v7 = *((void *)v5 - 1);
      int v8 = *(v5 - 16);
      uint64_t v9 = *v4;
      char v10 = *((_BYTE *)v4 - 8);
      uint64_t v11 = *(v4 - 2);
      uint64_t v12 = *((void *)v5 - 3);
      swift_bridgeObjectRetain(*v4);
      swift_bridgeObjectRetain(v7);
      if ((v10 & 1) != 0)
      {
        if (!v8) {
          goto LABEL_20;
        }
      }

      else
      {
        if (v11 == v12) {
          char v13 = v8;
        }
        else {
          char v13 = 1;
        }
        if ((v13 & 1) != 0)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        }
      }

      sub_10004AAE0(v9, v7);
      char v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 += 32;
      v4 += 4;
    }
  }

  sub_10000DD84();
}

uint64_t sub_10004AA14(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0LL;
  }
  if (!v2 || a1 == a2) {
    return 1LL;
  }
  uint64_t result = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  if (result != v7 || v6 != v8)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(result, v6, v7, v8, 0LL);
    uint64_t result = 0LL;
    if ((v10 & 1) == 0) {
      return result;
    }
  }

  if (v2 == 1) {
    return 1LL;
  }
  uint64_t v11 = a1 + 7;
  uint64_t v12 = a2 + 7;
  unint64_t v13 = 1LL;
  while (v13 < v2)
  {
    uint64_t result = *(v11 - 1);
    uint64_t v14 = *v11;
    uint64_t v15 = *(v12 - 1);
    uint64_t v16 = *v12;
    if (result != v15 || v14 != v16)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v14, v15, v16, 0LL);
      if ((result & 1) == 0) {
        return 0LL;
      }
    }

    ++v13;
    v11 += 2;
    v12 += 2;
    if (v2 == v13) {
      return 1LL;
    }
  }

  __break(1u);
  return result;
}

void sub_10004AAE0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || (sub_10004B048(), !v22))
  {
LABEL_39:
    sub_1000371F0();
    return;
  }

  sub_10004B000();
  while (1)
  {
    if (v3)
    {
      sub_10004B080();
      goto LABEL_29;
    }

    if (__OFADD__(v4, 1LL))
    {
      __break(1u);
      goto LABEL_41;
    }

    sub_10004B098();
    if (v8 == v9) {
      goto LABEL_39;
    }
    uint64_t v4 = v7;
    if (!*(void *)(v2 + 8 * v7))
    {
      uint64_t v4 = v7 + 1;
      sub_10004B03C();
      if (v8 == v9) {
        goto LABEL_39;
      }
      if (!*(void *)(v2 + 8 * v4))
      {
        uint64_t v4 = v10 + 2;
        sub_10004B03C();
        if (v8 == v9) {
          goto LABEL_39;
        }
        if (!*(void *)(v2 + 8 * v4))
        {
          uint64_t v4 = v11 + 3;
          sub_10004B03C();
          if (v8 == v9) {
            goto LABEL_39;
          }
          if (!*(void *)(v2 + 8 * v4)) {
            break;
          }
        }
      }
    }

LABEL_41:
  __break(1u);
}

  __break(1u);
}

  __break(1u);
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

void sub_10004AC48(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || (sub_10004B048(), !v4))
  {
LABEL_30:
    sub_10000DD84();
    return;
  }

  int64_t v5 = 0LL;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v8 = -1LL;
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_25;
    }

    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1LL))
    {
      __break(1u);
      goto LABEL_32;
    }

    if (v13 >= v10) {
      goto LABEL_30;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        goto LABEL_30;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          goto LABEL_30;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14)
        {
          int64_t v5 = v13 + 3;
          if (v13 + 3 >= v10) {
            goto LABEL_30;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v5);
          if (!v14) {
            break;
          }
        }
      }
    }

LABEL_24:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_25:
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain(v18);
    id v20 = v19;
    unint64_t v21 = sub_100030CCC(v17, v18);
    char v23 = v22;
    swift_bridgeObjectRelease(v18);
    if ((v23 & 1) == 0)
    {

      goto LABEL_30;
    }

    sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD450, &OBJC_CLASS___NSNumber_ptr);
    id v24 = *(id *)(*(void *)(a2 + 56) + 8 * v21);
    char v25 = static NSObject.== infix(_:_:)();

    if ((v25 & 1) == 0) {
      goto LABEL_30;
    }
  }

  int64_t v15 = v13 + 4;
  if (v15 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_24;
  }

  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_30;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }

    uint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    unint64_t v9 = v14;
  }

  int64_t v15 = v9 + 5;
  if (v9 + 5 >= v31)
  {
LABEL_36:
    swift_release(v3);
    sub_10004844C(a1);
    return (uint64_t)v3;
  }

  int64_t v13 = *(void *)(v32 + 8 * v15);
  if (v13)
  {
    unint64_t v14 = v9 + 5;
    goto LABEL_24;
  }

  while (1)
  {
    unint64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1LL)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_36;
    }
    int64_t v13 = *(void *)(v32 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_24;
    }
  }

          swift_release(a2);
          swift_release(v9);
          swift_release(a4);
          return;
        }
      }
    }

        __break(1u);
        goto LABEL_25;
      }

    uint64_t v61 = sub_10000D33C(&qword_1001CC210);
    sub_10000D5C0((uint64_t)v41, 1LL, 1LL, v61);
    uint64_t v173 = 0LL;
LABEL_25:
    sub_1000CCE00((uint64_t)v41, (uint64_t)v57, &qword_1001CC208);
    uint64_t v62 = sub_10000D33C(&qword_1001CC210);
    uint64_t v63 = v36;
    uint64_t v64 = (uint64_t)v33;
    uint64_t v65 = v15;
    uint64_t v66 = *v57;
    uint64_t v67 = v57[1];
    sub_1000CCDAC((uint64_t)v57 + *(int *)(v62 + 48), (uint64_t)v178, type metadata accessor for MercuryCacheMetadata);
    uint64_t v68 = (int *)type metadata accessor for MercuryCacheDataUpdateHandler(0LL);
    unint64_t v69 = v166;
    unint64_t v70 = v166 + v68[6];
    unint64_t v71 = *(void *)(v70 + 8);
    uint64_t v72 = *(void *)(v70 + 16);
    swift_bridgeObjectRetain(v71);
    swift_bridgeObjectRetain(v72);
    unint64_t v74 = sub_1000E0580(v73, v71);
    sub_1000F4E34(v66, v67, v74);
    uint64_t v76 = v75;
    swift_bridgeObjectRelease();
    uint64_t v77 = *(void *)(v69 + v68[8]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v174, v69 + v68[9], v177);
    int v78 = *(double *)(v69 + v68[10]);
    if (*(void *)(v44 + 16))
    {
      uint64_t v79 = sub_100030CCC(v66, v67);
      uint64_t v36 = v63;
      if ((v80 & 1) != 0)
      {
        sub_1000CCDCC( *(void *)(v44 + 56) + *(void *)(v155 + 72) * v79,  v170,  type metadata accessor for MercuryCacheUpdateData.DataKind);
        uint64_t v81 = 0LL;
      }

      else
      {
        uint64_t v81 = 1LL;
      }

      uint64_t v50 = v179;
    }

    else
    {
      uint64_t v81 = 1LL;
      uint64_t v50 = v179;
      uint64_t v36 = v63;
    }

    uint64_t v82 = v170;
    sub_10000D5C0(v170, v81, 1LL, v172);
    swift_bridgeObjectRelease();
    uint64_t v83 = v76 & 1;
    id v84 = v174;
    sub_1000CBEC8(v178, v83, v77, v174, v82, (uint64_t)v36, v78);
    sub_100019E6C(v82, &qword_1001C9D80);
    int64_t v15 = v171;
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v84, v177);
    uint64_t v33 = (char *)v64;
    sub_1000CCDCC((uint64_t)v36, v64, type metadata accessor for MercuryCacheMetadata);
    if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
    {
      sub_100014064();
      uint64_t v50 = v86;
    }

    uint64_t v41 = v165;
    uint64_t v85 = v50[2];
    if (v85 >= v50[3] >> 1)
    {
      sub_100014064();
      uint64_t v50 = v87;
    }

    _OWORD v50[2] = v85 + 1;
    sub_1000CCDAC( (uint64_t)v33,  (uint64_t)v50 + ((*(unsigned __int8 *)(v175 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80))
    + *(void *)(v175 + 72) * v85,
      type metadata accessor for MercuryCacheMetadata);
    sub_100019EC0((uint64_t)v36, type metadata accessor for MercuryCacheMetadata);
    sub_100019EC0((uint64_t)v178, type metadata accessor for MercuryCacheMetadata);
    uint64_t v49 = v173;
  }

  swift_release(v163);
  uint64_t v88 = swift_retain(v44);
  Swift::String v89 = sub_10013E2B8(v88);
  swift_bridgeObjectRetain(*(void *)(v166 + 8));
  uint64_t v91 = sub_1000DF8D8(v90, (uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_retain(v44);
  sub_1000C9B48((uint64_t)v91, v44);
  uint64_t v93 = v92;
  swift_release(v91);
  swift_release(v44);
  uint64_t v94 = *(uint64_t **)(v93 + 16);
  uint64_t v95 = v179;
  if (v94)
  {
    Swift::String v96 = *(unsigned __int8 *)(v155 + 80);
    uint64_t v168 = v93;
    uint64_t v97 = v93 + ((v96 + 32) & ~v96);
    id v174 = *(void *)(v155 + 72);
    uint64_t v98 = v157;
    uint64_t v99 = (uint64_t)v156;
    uint64_t v100 = v164;
    id v101 = v176;
    do
    {
      Swift::String v179 = v95;
      sub_1000CCDCC(v97, v100, type metadata accessor for MercuryCacheUpdateData.DataKind);
      sub_1000CCDCC(v100, v99, type metadata accessor for MercuryCacheUpdateData.DataKind);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v99, v172);
      uint64_t v178 = v94;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v103 = v99;
        uint64_t v104 = v162;
        sub_1000CCDAC(v103, (uint64_t)v162, type metadata accessor for MercuryCacheUpdateData.Failure);
        uint64_t v173 = *v104;
        uint64_t v170 = v104[1];
        uint64_t v105 = v152;
        uint64_t v106 = v15;
        uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
        uint64_t v108 = v177;
        v107(v160, (char *)v104 + *(int *)(v152 + 20), v177);
        v107(v161, (char *)v104 + *(int *)(v105 + 28), v108);
        uint64_t v109 = (uint64_t)v104;
        int v110 = v151;
        sub_1000CCDCC(v109, v151, type metadata accessor for MercuryCacheUpdateData.Failure);
        uint64_t v111 = v110 + *(int *)(v105 + 24);
        if ((*(_BYTE *)(v111 + 32) & 1) != 0)
        {
          uint64_t v112 = v170;
          swift_bridgeObjectRetain(v170);
          sub_100019EC0(v110, type metadata accessor for MercuryCacheUpdateData.Failure);
          uint64_t v113 = type metadata accessor for RetryConfiguration(0LL);
          sub_10000D5C0((uint64_t)v98, 1LL, 1LL, v113);
        }

        else
        {
          uint64_t v128 = v105;
          uint64_t v129 = *(void *)(v111 + 16);
          uint64_t v130 = v110 + *(int *)(v128 + 28);
          if ((*(void *)(v111 + 8) & 1LL) != 0) {
            v111 += 24LL;
          }
          uint64_t v131 = *(void *)v111;
          uint64_t v132 = v110;
          id v133 = v147;
          v107(v147, (char *)v130, v108);
          *(void *)uint64_t v98 = 0LL;
          *((void *)v98 + 1) = v129;
          *((void *)v98 + 2) = v131;
          uint64_t v134 = type metadata accessor for RetryConfiguration(0LL);
          (*(void (**)(char *, char *, uint64_t))(v106 + 32))(&v98[*(int *)(v134 + 28)], v133, v108);
          uint64_t v112 = v170;
          swift_bridgeObjectRetain(v170);
          sub_100019EC0(v132, type metadata accessor for MercuryCacheUpdateData.Failure);
          sub_10000D5C0((uint64_t)v98, 0LL, 1LL, v134);
        }

        sub_100019EC0(v164, type metadata accessor for MercuryCacheUpdateData.DataKind);
        sub_100019EC0((uint64_t)v162, type metadata accessor for MercuryCacheUpdateData.Failure);
        *id v101 = v173;
        v101[1] = v112;
        uint64_t v135 = v159;
        uint64_t v136 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
        v136((char *)v176 + *(int *)(v159 + 20), v160, v108);
        v136((char *)v176 + *(int *)(v135 + 24), v161, v108);
        uint64_t v137 = *(int *)(v135 + 28);
        id v101 = v176;
        sub_1000CCE00((uint64_t)v98, (uint64_t)v176 + v137, &qword_1001CC200);
        uint64_t v99 = (uint64_t)v156;
        int64_t v15 = v106;
      }

      else
      {
        sub_100019EC0(v100, type metadata accessor for MercuryCacheUpdateData.DataKind);
        uint64_t v114 = v153;
        sub_1000CCDAC(v99, (uint64_t)v153, type metadata accessor for MercuryCacheUpdateData.Success);
        uint64_t v115 = *v114;
        uint64_t v116 = v114[1];
        uint64_t v117 = updated;
        uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v171 + 16);
        id v119 = v149;
        uint64_t v120 = v177;
        v118(v149, (char *)v114 + *(int *)(updated + 20), v177);
        uint64_t v121 = v150;
        v118(v150, (char *)v114 + *(int *)(v117 + 28), v120);
        swift_bridgeObjectRetain(v116);
        sub_100019EC0((uint64_t)v114, type metadata accessor for MercuryCacheUpdateData.Success);
        uint64_t v122 = v159;
        uint64_t v123 = (char *)v176 + *(int *)(v159 + 28);
        uint64_t v124 = type metadata accessor for RetryConfiguration(0LL);
        uint64_t v125 = (uint64_t)v123;
        int64_t v15 = v171;
        sub_10000D5C0(v125, 1LL, 1LL, v124);
        *uint64_t v176 = v115;
        v176[1] = v116;
        unint64_t v126 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        uint64_t v127 = v119;
        id v101 = v176;
        v126((char *)v176 + *(int *)(v122 + 20), v127, v120);
        v126((char *)v101 + *(int *)(v122 + 24), v121, v120);
        uint64_t v98 = v157;
      }

      sub_1000CCDCC((uint64_t)v101, v169, type metadata accessor for MercuryCacheMetadata);
      uint64_t v138 = v179;
      if ((swift_isUniquelyReferenced_nonNull_native(v179) & 1) == 0)
      {
        sub_100014064();
        uint64_t v138 = v142;
      }

      uint64_t v100 = v164;
      uint64_t v139 = v178;
      uint64_t v140 = v138[2];
      uint64_t v141 = v138;
      if (v140 >= v138[3] >> 1)
      {
        sub_100014064();
        uint64_t v141 = v143;
      }

      uint64_t v95 = v141;
      v141[2] = v140 + 1;
      sub_1000CCDAC( v169,  (uint64_t)v141 + ((*(unsigned __int8 *)(v175 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80))
      + *(void *)(v175 + 72) * v140,
        type metadata accessor for MercuryCacheMetadata);
      sub_100019EC0((uint64_t)v101, type metadata accessor for MercuryCacheMetadata);
      v97 += v174;
      uint64_t v94 = (uint64_t *)((char *)v139 - 1);
    }

    while (v94);
  }

  swift_bridgeObjectRelease();
}

    int64_t v13 = (v21 - 1) & v21;
    uint64_t v46 = v22;
    char v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_25:
    id v24 = a4[7];
    char v25 = (uint64_t *)(a4[6] + 16 * v19);
    uint64_t v26 = *v25;
    unint64_t v27 = v25[1];
    uint64_t v28 = *(void *)(v45 + 72);
    sub_1000CCDCC(v24 + v28 * v19, v17, type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_1000CCDAC(v17, v16, type metadata accessor for MercuryCacheUpdateData.DataKind);
    Hasher.init(_seed:)(v47, *(void *)(v12 + 40));
    swift_bridgeObjectRetain(v27);
    String.hash(into:)(v47, v26, v27);
    uint64_t v29 = Hasher._finalize()();
    uint64_t v30 = -1LL << *(_BYTE *)(v12 + 32);
    uint64_t v31 = v29 & ~v30;
    uint64_t v32 = v31 >> 6;
    if (((-1LL << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) == 0)
    {
      uint64_t v34 = 0;
      uint64_t v35 = (unint64_t)(63 - v30) >> 6;
      uint64_t v16 = v43;
      while (++v32 != v35 || (v34 & 1) == 0)
      {
        uint64_t v36 = v32 == v35;
        if (v32 == v35) {
          uint64_t v32 = 0LL;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v32);
        if (v37 != -1)
        {
          uint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
          goto LABEL_34;
        }
      }

      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    uint64_t v33 = __clz(__rbit64((-1LL << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0LL;
    uint64_t v16 = v43;
LABEL_34:
    *(void *)(v15 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v33;
    uint64_t v38 = (void *)(*(void *)(v12 + 48) + 16 * v33);
    *uint64_t v38 = v26;
    v38[1] = v27;
    sub_1000CCDAC(v16, *(void *)(v12 + 56) + v33 * v28, type metadata accessor for MercuryCacheUpdateData.DataKind);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1LL)) {
      goto LABEL_38;
    }
    a4 = v42;
    unint64_t v14 = v46;
    if (!a3) {
      return;
    }
  }

  char v23 = v14 + 4;
  if (v14 + 4 >= v40) {
    return;
  }
  unint64_t v21 = v41[v23];
  if (v21)
  {
    char v22 = v14 + 4;
    goto LABEL_24;
  }

  while (1)
  {
    char v22 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v22 >= v40) {
      return;
    }
    unint64_t v21 = v41[v22];
    ++v23;
    if (v21) {
      goto LABEL_24;
    }
  }

      int64_t v10 = (v16 - 1) & v16;
      uint64_t v39 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }

    char v19 = v4;
    id v20 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    char v22 = *v20;
    unint64_t v21 = v20[1];
    char v23 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v14);
    id v24 = *v23;
    char v25 = v23[1];
    Hasher.init(_seed:)(v40, *(void *)(v9 + 40));
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v25);
    String.hash(into:)(v40, v22, v21);
    uint64_t result = Hasher._finalize()();
    uint64_t v26 = -1LL << *(_BYTE *)(v9 + 32);
    unint64_t v27 = result & ~v26;
    uint64_t v28 = v27 >> 6;
    if (((-1LL << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) == 0) {
      break;
    }
    uint64_t v29 = __clz(__rbit64((-1LL << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_34:
    *(void *)(v12 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v29;
    uint64_t v34 = (void *)(*(void *)(v9 + 48) + 16 * v29);
    *uint64_t v34 = v22;
    v34[1] = v21;
    uint64_t v35 = (void *)(*(void *)(v9 + 56) + 16 * v29);
    *uint64_t v35 = v24;
    v35[1] = v25;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1LL)) {
      goto LABEL_39;
    }
    char v4 = v19;
    unint64_t v11 = v39;
    if (!v5) {
      return v9;
    }
  }

  uint64_t v30 = 0;
  uint64_t v31 = (unint64_t)(63 - v26) >> 6;
  while (++v28 != v31 || (v30 & 1) == 0)
  {
    uint64_t v32 = v28 == v31;
    if (v28 == v31) {
      uint64_t v28 = 0LL;
    }
    v30 |= v32;
    uint64_t v33 = *(void *)(v12 + 8 * v28);
    if (v33 != -1)
    {
      uint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
      goto LABEL_34;
    }
  }

  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

    uint64_t v68 = v21;
    unint64_t v69 = (v20 - 1) & v20;
  }

  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

          swift_release(v7);
          return v25;
        }
      }
    }

  sub_10000DC44(v27, (uint64_t)v28, 33LL);
  unint64_t v21 = *(void *)(v3 + 32);
  swift_retain(v21);
  char v22 = sub_100153D3C(v12, v21);
  id v24 = v23;
  sub_10002FAF4();
  if ((v24 & 1) == 0)
  {
    char v25 = sub_100101A10(v22);
    swift_release(v25);
  }

  swift_endAccess(v28);
  uint64_t v33 = v12;
LABEL_27:
  if (qword_1001C7FD0 != -1) {
LABEL_31:
  }
    swift_once(&qword_1001C7FD0, sub_1000BD660);
  sub_10002588C();
  sub_100067984();
  sub_1000BBC2C();
LABEL_29:
  swift_release(v31);
  swift_release(v32);
  sub_10000DD84();
}

void sub_10004AE20(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || (sub_10004B048(), !v20))
  {
LABEL_39:
    sub_1000371F0();
    return;
  }

  sub_10004B000();
  while (1)
  {
    if (v3)
    {
      sub_10004B080();
      goto LABEL_29;
    }

    if (__OFADD__(v4, 1LL))
    {
      __break(1u);
      goto LABEL_41;
    }

    sub_10004B098();
    if (v8 == v9) {
      goto LABEL_39;
    }
    uint64_t v4 = v7;
    if (!*(void *)(v2 + 8 * v7))
    {
      uint64_t v4 = v7 + 1;
      sub_10004B03C();
      if (v8 == v9) {
        goto LABEL_39;
      }
      if (!*(void *)(v2 + 8 * v4))
      {
        uint64_t v4 = v10 + 2;
        sub_10004B03C();
        if (v8 == v9) {
          goto LABEL_39;
        }
        if (!*(void *)(v2 + 8 * v4))
        {
          uint64_t v4 = v11 + 3;
          sub_10004B03C();
          if (v8 == v9) {
            goto LABEL_39;
          }
          if (!*(void *)(v2 + 8 * v4)) {
            break;
          }
        }
      }
    }

uint64_t sub_10004AF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MercuryCacheMetadata(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004AFC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MercuryCacheMetadata(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_10004B070(uint64_t a1, uint64_t a2)
{
  return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v3, v2, 0LL);
}

  ;
}

  ;
}

uint64_t sub_10004B0A4()
{
  return *(void *)(*(void *)(v0 + 56) + 16 * v1);
}

uint64_t sub_10004B0B8(uint64_t a1)
{
  uint64_t v2 = sub_10000D33C(&qword_1001C9A88);
  uint64_t v3 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v2,  &protocol witness table for String);
  uint64_t v17 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v18 = (unint64_t)(63 - v4) >> 6;
  uint64_t v19 = a1;
  sub_10004C6A0();
  if (v6)
  {
    unint64_t v7 = __clz(__rbit64(v6));
LABEL_6:
    uint64_t v8 = *(void *)(v19 + 56);
    LOBYTE(v20[0]) = *(_BYTE *)(*(void *)(v19 + 48) + v7);
    sub_10004C420(v8 + 40 * v7, (uint64_t)v20 + 8);
    goto LABEL_24;
  }

  if (v18 > 1)
  {
    if (*(void *)(a1 + 72))
    {
LABEL_9:
      sub_10004C608();
      goto LABEL_6;
    }

    sub_10004C5C8();
    if (v9 != v10)
    {
      sub_10004C5BC();
      if (v11) {
        goto LABEL_9;
      }
      if (v18 > 3)
      {
        if (*(void *)(a1 + 88)) {
          goto LABEL_9;
        }
        sub_10004C5C8();
        if (v9 != v10)
        {
          sub_10004C5BC();
          if (v13) {
            goto LABEL_9;
          }
          while (1)
          {
            int64_t v14 = v12 + 1;
            if (__OFADD__(v12, 1LL))
            {
              __break(1u);
              JUMPOUT(0x10004B5A8LL);
            }

            if (v14 >= v18) {
              break;
            }
            ++v12;
            if (*(void *)(v17 + 8 * v14)) {
              goto LABEL_9;
            }
          }
        }
      }
    }
  }

  memset(v20, 0, 48);
LABEL_24:
  sub_1000288E8((uint64_t)v20, (uint64_t)v22, &qword_1001CA510);
  if (v24)
  {
    uint64_t v15 = v22[0];
    sub_100019F60(&v23, (uint64_t)v21);
    __asm { BR              X8 }
  }

  sub_10004844C(v19);
  return v3;
}

#error "10004B648: call analysis failed (funcsize=163)"
void sub_10004B88C( uint64_t a1,  uint64_t a2,  uint64_t a3,  uint64_t a4,  uint64_t a5,  uint64_t a6,  uint64_t a7,  uint64_t a8,  uint64_t a9,  uint64_t a10,  uint64_t a11,  uint64_t a12,  uint64_t a13,  uint64_t a14,  uint64_t a15,  uint64_t a16,  uint64_t a17,  uint64_t a18,  uint64_t a19,  uint64_t a20,  uint64_t a21,  uint64_t a22,  uint64_t a23,  uint64_t a24,  uint64_t a25,  uint64_t a26,  uint64_t a27,  uint64_t a28,  uint64_t a29,  uint64_t a30,  uint64_t a31,  uint64_t a32,  uint64_t a33,  uint64_t a34,  __int128 a35,  __int128 a36,  uint64_t a37,  uint64_t a38,  uint64_t a39,  __int128 a40,  uint64_t a41,  uint64_t a42,  unsigned __int8 a43,  __int128 a44,  uint64_t a45,  uint64_t a46,  uint64_t a47,  uint64_t a48,  uint64_t a49,
        uint64_t a50,
        uint64_t a51,
        uint64_t a52,
        uint64_t a53,
        uint64_t a54,
        uint64_t a55,
        uint64_t a56,
        uint64_t a57,
        uint64_t a58,
        uint64_t a59,
        uint64_t a60)
{
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  _OWORD *v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  sub_10004C64C();
  a59 = v60;
  a60 = v61;
  uint64_t v63 = v62;
  Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  uint64_t v73 = v63 + 64;
  uint64_t v64 = -1LL << *(_BYTE *)(v63 + 32);
  if (-v64 < 64) {
    uint64_t v65 = ~(-1LL << -(char)v64);
  }
  else {
    uint64_t v65 = -1LL;
  }
  uint64_t v66 = v65 & *(void *)(v63 + 64);
  unint64_t v74 = (unint64_t)(63 - v64) >> 6;
  uint64_t v75 = v63;
  sub_10004C6A0();
  if (v66)
  {
    uint64_t v67 = __clz(__rbit64(v66));
LABEL_6:
    uint64_t v68 = *(void *)(v75 + 56);
    LOBYTE(a35) = *(_BYTE *)(*(void *)(v75 + 48) + v67);
    sub_10000DA1C(v68 + 32 * v67, (uint64_t)&a35 + 8);
    goto LABEL_22;
  }

  if (v74 > 1)
  {
    if (*(void *)(v63 + 72))
    {
LABEL_9:
      sub_10004C608();
      goto LABEL_6;
    }

    if (v74 > 2)
    {
      if (*(void *)(v63 + 80)) {
        goto LABEL_9;
      }
      if (v74 > 3)
      {
        if (*(void *)(v63 + 88)) {
          goto LABEL_9;
        }
        unint64_t v69 = 4LL;
        if (v74 > 4)
        {
          if (*(void *)(v63 + 96)) {
            goto LABEL_9;
          }
          while (1)
          {
            unint64_t v70 = v69 + 1;
            if (__OFADD__(v69, 1LL))
            {
              __break(1u);
              JUMPOUT(0x10004BCECLL);
            }

            if (v70 >= v74) {
              break;
            }
            ++v69;
            if (*(void *)(v73 + 8 * v70)) {
              goto LABEL_9;
            }
          }
        }
      }
    }
  }

  a37 = 0LL;
  a35 = 0u;
  a36 = 0u;
LABEL_22:
  sub_1000288E8((uint64_t)&a35, (uint64_t)&a43, &qword_1001CA528);
  if (a46)
  {
    unint64_t v71 = a43;
    uint64_t v72 = sub_10000DA58(&a44, &a40);
    ((void (*)(_OWORD *))((char *)&loc_10004BAA8 + dword_10004BCFC[v71]))(v72);
  }

  else
  {
    sub_10004C678(v75);
    sub_10004C4E0();
  }

#error "10004BD80: call analysis failed (funcsize=163)"
uint64_t sub_10004BFC4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  BOOL v25;
  Swift::Int v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t result;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v2 = sub_100038764();
  uint64_t v3 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v2,  &protocol witness table for String);
  uint64_t v38 = a1 + 64;
  uint64_t v39 = a1;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  uint64_t v37 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain(a1);
  uint64_t v40 = 0LL;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  uint64_t v8 = v7 | (v40 << 6);
  while (1)
  {
    uint64_t v13 = *(void **)(*(void *)(v39 + 48) + 8 * v8);
    int64_t v14 = *(void **)(*(void *)(v39 + 56) + 8 * v8);
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    uint64_t v17 = v16;
    int64_t v18 = v13;
    uint64_t v19 = v14;
    swift_bridgeObjectRetain(v17);
    BOOL v20 = v19;
    char v21 = sub_10000DF00();
    char v22 = sub_10004C6F8();
    uint64_t v24 = *(void *)(v3 + 16);
    char v25 = (v23 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }

    unint64_t v27 = v22;
    uint64_t v28 = v23;
    sub_10000D33C((uint64_t *)&unk_1001C9DD0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(v21, v26))
    {
      sub_10004C6F8();
      sub_10004C520();
      if (!v30) {
        goto LABEL_36;
      }
      unint64_t v27 = v29;
    }

    if ((v28 & 1) != 0)
    {
      uint64_t v31 = *(void *)(v3 + 56);

      *(void *)(v31 + 8 * v27) = v20;
    }

    else
    {
      sub_10000DF20(v3 + 8 * (v27 >> 6));
      uint64_t v33 = (uint64_t *)(v32 + 16 * v27);
      *uint64_t v33 = v15;
      v33[1] = v17;
      *(void *)(*(void *)(v3 + 56) + 8 * v27) = v20;
      sub_10004C638();
      if (v35) {
        goto LABEL_33;
      }
      *(void *)(v3 + ++*(void *)(v0 + 16) = v34;
      swift_bridgeObjectRetain(v17);
    }

    swift_bridgeObjectRelease_n(v17, 2LL);
    sub_10004C578();

    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    char v9 = v40 + 1;
    if (__OFADD__(v40, 1LL)) {
      goto LABEL_34;
    }
    if (v9 >= v37) {
      goto LABEL_31;
    }
    char v10 = *(void *)(v38 + 8 * v9);
    uint64_t v11 = v40 + 1;
    if (!v10)
    {
      uint64_t v11 = v40 + 2;
      if (v40 + 2 >= v37) {
        goto LABEL_31;
      }
      char v10 = *(void *)(v38 + 8 * v11);
      if (!v10)
      {
        uint64_t v11 = v40 + 3;
        if (v40 + 3 >= v37) {
          goto LABEL_31;
        }
        char v10 = *(void *)(v38 + 8 * v11);
        if (!v10) {
          break;
        }
      }
    }

LABEL_19:
    unint64_t v6 = (v10 - 1) & v10;
    uint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    uint64_t v40 = v11;
  }

  uint64_t v12 = v40 + 4;
  if (v40 + 4 >= v37)
  {
LABEL_31:
    sub_10004844C(v39);
    return v3;
  }

  char v10 = *(void *)(v38 + 8 * v12);
  if (v10)
  {
    uint64_t v11 = v40 + 4;
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1LL)) {
      break;
    }
    if (v11 >= v37) {
      goto LABEL_31;
    }
    char v10 = *(void *)(v38 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_19;
    }
  }

    uint64_t v5 = (v10 - 1) & v10;
    uint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    uint64_t v4 = v11;
LABEL_20:
    uint64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v15 = *v13;
    int64_t v14 = v13[1];
    swift_bridgeObjectRetain(v14);
    char v16 = String._bridgeToObjectiveC()();
    uint64_t v17 = [a2 evaluateWithObject:v16];

    if (v17)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
      uint64_t v24 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100016F88();
        unint64_t v6 = v24;
      }

      uint64_t v19 = v6[2];
      if (v19 >= v6[3] >> 1)
      {
        sub_100016F88();
        unint64_t v6 = v24;
      }

      _OWORD v6[2] = v19 + 1;
      BOOL v20 = &v6[2 * v19];
      _OWORD v20[4] = v15;
      v20[5] = v14;
    }

    else
    {
      swift_bridgeObjectRelease();
    }
  }

  __break(1u);
}

    unint64_t v6 = (v11 - 1) & v11;
    char v9 = __clz(__rbit64(v11)) + (v12 << 6);
    uint64_t v5 = v12;
LABEL_20:
    int64_t v14 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    char v16 = v14[1];
    sub_10000DA1C(*(void *)(v4 + 56) + 32 * v9, (uint64_t)v25);
    v24[0] = v15;
    v24[1] = v16;
    uint64_t v17 = swift_bridgeObjectRetain(v16);
    int64_t v18 = a2(v15, v16, v25, v17);
    sub_1000102E0((uint64_t)v24, &qword_1001C9908);
    if (v18)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
      {
        sub_100014564();
        __int128 v23 = v21;
      }

      uint64_t v19 = v23[2];
      BOOL v20 = v19 + 1;
      if (v19 >= v23[3] >> 1)
      {
        sub_100014564();
        BOOL v20 = v19 + 1;
        __int128 v23 = v22;
      }

      void v23[2] = v20;
      v23[v19 + 4] = v18;
    }
  }

  __break(1u);
}

    unint64_t v6 = (v10 - 1) & v10;
    uint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    uint64_t v5 = v11;
LABEL_20:
    sub_10002C644(*(void *)(v4 + 48) + 40 * v8, (uint64_t)v31);
    sub_10000DA1C(*(void *)(v4 + 56) + 32 * v8, (uint64_t)v32);
    uint64_t v13 = v34(v31, v32);
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    sub_10000DA68((uint64_t)v31, &qword_1001CBFA8);
    if (v19)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0) {
        uint64_t v28 = (void *)a4(0LL, v28[2] + 1LL, 1LL);
      }
      char v21 = v28[2];
      BOOL v20 = v28[3];
      char v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        char v25 = v28[2];
        uint64_t v26 = v21 + 1;
        uint64_t v24 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, void *))a4)(v20 > 1, v21 + 1, 1LL, v28);
        char v21 = v25;
        char v22 = v26;
        uint64_t v28 = (void *)v24;
      }

      Swift::String v28[2] = v22;
      __int128 v23 = &v28[4 * v21];
      v23[4] = v13;
      void v23[5] = v15;
      v23[6] = v17;
      v23[7] = v19;
    }
  }

  __break(1u);
}

    char v10 = (v15 - 1) & v15;
    uint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    char v9 = v16;
LABEL_20:
    int64_t v18 = v35;
    sub_1000CCDCC( *(void *)(v46 + 56) + *(void *)(v36 + 72) * v13,  v35,  type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_1000CCDAC(v18, (uint64_t)v7, type metadata accessor for MercuryCacheUpdateData.DataKind);
    sub_1000CCDCC((uint64_t)v7, (uint64_t)v4, type metadata accessor for MercuryCacheUpdateData.DataKind);
    if (swift_getEnumCaseMultiPayload(v4, updated) == 1)
    {
      uint64_t v43 = 0LL;
      uint64_t v41 = 0u;
      uint64_t v42 = 0u;
      sub_100019EC0((uint64_t)v4, type metadata accessor for MercuryCacheUpdateData.DataKind);
    }

    else
    {
      *((void *)&v42 + 1) = type metadata accessor for MercuryCacheUpdateData.Success(0LL);
      uint64_t v43 = &off_1001AF688;
      uint64_t v19 = sub_10000D63C(&v41);
      sub_1000CCDAC((uint64_t)v4, (uint64_t)v19, type metadata accessor for MercuryCacheUpdateData.Success);
    }

    sub_100019EC0((uint64_t)v7, type metadata accessor for MercuryCacheUpdateData.DataKind);
    if (*((void *)&v42 + 1))
    {
      BOOL v20 = v4;
      sub_100019F60(&v41, (uint64_t)v44);
      sub_100019F60(v44, (uint64_t)&v41);
      char v21 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      {
        sub_1000140A0();
        uint64_t v11 = v29;
      }

      char v22 = v11[2];
      __int128 v23 = v11;
      if (v22 >= v11[3] >> 1)
      {
        sub_1000140A0();
        __int128 v23 = v30;
      }

      uint64_t v24 = sub_1000665E8((uint64_t)&v41, *((uint64_t *)&v42 + 1));
      __chkstk_darwin(v24);
      uint64_t v26 = (char *)&v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v27 + 16))(v26);
      uint64_t v39 = type metadata accessor for MercuryCacheUpdateData.Success(0LL);
      uint64_t v40 = &off_1001AF688;
      uint64_t v28 = sub_10000D63C(&v38);
      sub_1000CCDAC((uint64_t)v26, (uint64_t)v28, type metadata accessor for MercuryCacheUpdateData.Success);
      void v23[2] = v22 + 1;
      uint64_t v11 = v23;
      sub_100019F60(&v38, (uint64_t)&v23[5 * v22 + 4]);
      sub_10000D3A0(&v41);
      char v9 = v21;
      uint64_t v4 = v20;
      unint64_t v7 = v33;
    }

    else
    {
      sub_100019E6C((uint64_t)&v41, &qword_1001CC1E8);
    }
  }

  __break(1u);
}

    unint64_t v69 = v17;
    int64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_20:
    uint64_t v19 = *(uint64_t **)(v0 + 128);
    BOOL v20 = *(void *)(v0 + 40);
    char v21 = *(void *)(v0 + 16);
    char v22 = *(void *)(v21 + updated[8]);
    __int128 v23 = (uint64_t *)(*(void *)(v65 + 48) + 16 * v14);
    uint64_t v24 = *(void *)(v21 + updated[10]);
    uint64_t v26 = *v23;
    char v25 = v23[1];
    unint64_t v27 = v21 + updated[9];
    uint64_t v28 = *(double *)(v21 + updated[7]);
    swift_bridgeObjectRetain_n(v25, 2LL);
    Date.addingTimeInterval(_:)(v28);
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))((char *)v19 + *(int *)(v63 + 28), v27, v20);
    *uint64_t v19 = v26;
    *(void *)(v64 + 8) = v25;
    uint64_t v29 = (char *)v19 + *(int *)(v63 + 24);
    *(_OWORD *)uint64_t v29 = xmmword_100167500;
    *((void *)v29 + 2) = v22;
    *((void *)v29 + 3) = v24;
    v29[32] = 0;
    uint64_t v30 = *(void *)(v62 + 8);
    if (*(void *)(v30 + 16))
    {
      uint64_t v31 = sub_100030CCC(v26, v25);
      if ((v32 & 1) != 0)
      {
        sub_1000CD960(*(void *)(v30 + 56) + *(void *)(v67 + 72) * v31, *(void *)(v0 + 64));
        uint64_t v33 = 0LL;
      }

      else
      {
        uint64_t v33 = 1LL;
      }

      char v9 = v69;
    }

    else
    {
      uint64_t v33 = 1LL;
      char v9 = v69;
    }

    uint64_t v35 = *(void *)(v0 + 64);
    uint64_t v34 = *(void *)(v0 + 72);
    sub_10000D5C0(v35, v33, 1LL, v34);
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_1000102D4(v35, 1LL, v34);
    uint64_t v37 = *(void *)(v0 + 128);
    uint64_t v38 = *(void *)(v0 + 64);
    if (v36 == 1)
    {
      uint64_t v40 = *(void *)(v0 + 88);
      uint64_t v39 = *(char **)(v0 + 96);
      uint64_t v12 = *(void *)(v0 + 24);
      uint64_t v41 = *(void *)(v0 + 32);
      sub_100019E6C(v38, &qword_1001CC218);
      sub_1000CCDCC(v37, v41, type metadata accessor for MercuryCacheUpdateData.Failure);
      swift_storeEnumTagMultiPayload(v41, v12, 1LL);
      sub_1000CE3F0(v41, v39);
      sub_1000CD960((uint64_t)v39, v40);
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      {
        sub_1000CD918();
        uint64_t v13 = v53;
      }

      sub_1000CD94C();
      if (v42)
      {
        sub_1000CD918();
        uint64_t v13 = v54;
      }

      uint64_t v43 = (uint64_t *)(v0 + 88);
      uint64_t v44 = (uint64_t *)(v0 + 96);
    }

    else
    {
      uint64_t v41 = *(void *)(v0 + 104);
      uint64_t v45 = *(void *)(v0 + 112);
      uint64_t v12 = *(void *)(v0 + 56);
      uint64_t v46 = *(void *)(v0 + 40);
      uint64_t v47 = *(unsigned __int8 *)(v0 + 152);
      sub_1000CCDAC(v38, v45, type metadata accessor for MercuryCacheMetadata);
      static Date.now.getter(v48);
      uint64_t v49 = v37;
      uint64_t v37 = v45;
      sub_1000CDA0C(v49, v47, v12);
      (*(void (**)(unint64_t, uint64_t))(v68 + 8))(v12, v46);
      sub_1000CD960(v45, v41);
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      {
        sub_1000CD918();
        uint64_t v13 = v55;
      }

      sub_1000CD94C();
      if (v42)
      {
        sub_1000CD918();
        uint64_t v13 = v56;
      }

      uint64_t v43 = (uint64_t *)(v0 + 104);
      uint64_t v44 = (uint64_t *)(v0 + 112);
    }

    uint64_t v50 = *v44;
    uint64_t v51 = *v43;
    uint64_t v52 = *(void *)(v0 + 128);
    v13[2] = v37;
    sub_1000CCDAC( v51,  (uint64_t)v13 + ((*(unsigned __int8 *)(v67 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))
    + *(void *)(v67 + 72) * v41,
      type metadata accessor for MercuryCacheMetadata);
    sub_100019EC0(v50, type metadata accessor for MercuryCacheMetadata);
    sub_100019EC0(v52, type metadata accessor for MercuryCacheUpdateData.Failure);
  }

  int64_t v18 = v9 + 4;
  if (v9 + 4 >= v61)
  {
LABEL_38:
    uint64_t v57 = *(uint64_t **)(v0 + 16);
    swift_release(v65);
    uint64_t v58 = *v57;
    id v59 = (void *)swift_task_alloc(dword_1001CC4F4);
    *(void *)(v0 + 144) = v59;
    *id v59 = v0;
    v59[1] = sub_1000CAD04;
    sub_1000D17E0((uint64_t)v13, v58);
    return;
  }

  char v16 = *(void *)(v60 + 8 * v18);
  if (v16)
  {
    uint64_t v17 = v9 + 4;
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v17 >= v61) {
      goto LABEL_38;
    }
    char v16 = *(void *)(v60 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_19;
    }
  }

  v56[58] = _swiftEmptyDictionarySingleton;
  sub_100009020();
  uint64_t v95 = (void *)swift_task_alloc(dword_1001CBFFC);
  v56[59] = v95;
  *uint64_t v95 = v56;
  v95[1] = sub_1000E159C;
  sub_1000E2D04();
  sub_1000E2CA8();
  return sub_1000BFC24(v96);
}

    uint64_t v3 = (v8 - 1) & v8;
    uint64_t v38 = v9;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 80);
    int64_t v14 = (uint64_t *)(*(void *)(v37 + 48) + 16 * v6);
    uint64_t v15 = *v14;
    char v16 = v14[1];
    uint64_t v17 = (void *)sub_10000DDDC((uint64_t)&unk_1001B0680, 56LL);
    v17[2] = 0LL;
    int64_t v18 = v17 + 2;
    v17[3] = 0LL;
    void v17[4] = v13;
    v17[5] = v15;
    v17[6] = v16;
    uint64_t v19 = type metadata accessor for TaskPriority(0LL);
    sub_10000D5C0(v11, 1LL, 1LL, v19);
    sub_1000254B4(v11, v12, &qword_1001C8BD0);
    LODWORD(v12) = sub_1000102D4(v12, 1LL, v19);
    sub_10000DD9C();
    BOOL v20 = swift_retain(v13);
    char v21 = *(void *)(v0 + 88);
    if ((_DWORD)v12 == 1)
    {
      sub_1000FDBC0(*(void *)(v0 + 88));
      char v22 = 0LL;
    }

    else
    {
      __int128 v23 = TaskPriority.rawValue.getter(v20);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(v21, v19);
      char v22 = v23;
    }

    uint64_t v24 = *v18;
    if (*v18)
    {
      char v25 = v17[3];
      uint64_t ObjectType = swift_getObjectType(*v18);
      swift_unknownObjectRetain(v24);
      unint64_t v27 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v25);
      uint64_t v29 = v28;
      swift_unknownObjectRelease(v24);
    }

    else
    {
      unint64_t v27 = 0LL;
      uint64_t v29 = 0LL;
    }

    uint64_t v30 = **(void **)(v0 + 72);
    uint64_t v31 = sub_10000DDDC((uint64_t)&unk_1001B06A8, 32LL);
    *(void *)(v31 + ++*(void *)(v0 + 16) = &unk_1001CD938;
    *(void *)(v31 + 24) = v17;
    uint64_t v32 = v29 | v27;
    if (v29 | v27)
    {
      uint64_t v32 = v0 + 16;
      *(void *)(v0 + ++*(void *)(v0 + 16) = 0LL;
      *(void *)(v0 + 24) = 0LL;
      *(void *)(v0 + 32) = v27;
      *(void *)(v0 + 40) = v29;
    }

    *(void *)(v0 + 48) = 1LL;
    *(void *)(v0 + 56) = v32;
    *(void *)(v0 + 64) = v30;
    swift_task_create(v22 | 0x7100, v0 + 48, (char *)&type metadata for () + 8, &unk_1001CD948, v31);
    swift_release();
    uint64_t v4 = v38;
    if (v3) {
      goto LABEL_5;
    }
  }

  char v10 = v4 + 4;
  if (v4 + 4 < v36)
  {
    uint64_t v8 = *(void *)(v35 + 8 * v10);
    if (!v8)
    {
      while (1)
      {
        char v9 = v10 + 1;
        if (__OFADD__(v10, 1LL)) {
          goto LABEL_32;
        }
        if (v9 >= v36) {
          goto LABEL_30;
        }
        uint64_t v8 = *(void *)(v35 + 8 * v9);
        ++v10;
        if (v8) {
          goto LABEL_19;
        }
      }
    }

    char v9 = v4 + 4;
    goto LABEL_19;
  }

        char v9 = (v13 - 1) & v13;
        uint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        uint64_t v45 = v14;
      }

      char v16 = *(void *)(*(void *)(v44 + 48) + 8 * v11);
      uint64_t v17 = (uint64_t *)(*(void *)(v44 + 56) + 16 * v11);
      int64_t v18 = *v17;
      uint64_t v19 = v17[1];
      BOOL v20 = (void *)objc_opt_self(&OBJC_CLASS___NSFileManager);
      char v21 = objc_msgSend(v20, "defaultManager", swift_bridgeObjectRetain(v19).n128_f64[0]);
      char v22 = String._bridgeToObjectiveC()();
      __int128 v23 = [v21 fileExistsAtPath:v22];

      if (v23) {
        break;
      }
      sub_10000D5C0((uint64_t)v4, 1LL, 1LL, v5);
LABEL_27:
      swift_bridgeObjectRelease();
      sub_10000DA68((uint64_t)v4, &qword_1001CB180);
    }

    URL.init(fileURLWithPath:)(v18, v19, v24);
    sub_10000D5C0((uint64_t)v4, 0LL, 1LL, v5);
    char v25 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    uint64_t v26 = v39;
    v25(v39, v4, v5);
    v25(v40, v26, v5);
    unint64_t v27 = v50;
    if (v50[3] <= v50[2])
    {
      sub_1000328A4();
      unint64_t v27 = v50;
    }

    uint64_t v28 = static Hasher._hash(seed:_:)(v27[5], v16);
    uint64_t v29 = v27 + 8;
    uint64_t v30 = -1LL << *((_BYTE *)v27 + 32);
    uint64_t v31 = v28 & ~v30;
    uint64_t v32 = v31 >> 6;
    if (((-1LL << v31) & ~v27[(v31 >> 6) + 8]) == 0) {
      break;
    }
    uint64_t v33 = __clz(__rbit64((-1LL << v31) & ~v27[(v31 >> 6) + 8])) | v31 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_35:
    *(void *)((char *)v29 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v33;
    *(void *)(v27[6] + 8 * v33) = v16;
    v25((char *)(v27[7] + *(void *)(v41 + 72) * v33), v40, v5);
    ++v27[2];
    swift_bridgeObjectRelease();
  }

  uint64_t v34 = 0;
  uint64_t v35 = (unint64_t)(63 - v30) >> 6;
  while (++v32 != v35 || (v34 & 1) == 0)
  {
    uint64_t v36 = v32 == v35;
    if (v32 == v35) {
      uint64_t v32 = 0LL;
    }
    v34 |= v36;
    uint64_t v37 = v29[v32];
    if (v37 != -1)
    {
      uint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
      goto LABEL_35;
    }
  }

  __break(1u);
LABEL_38:
  __break(1u);
}

    sub_100116B44();
  }

  uint64_t v12 = v11 + 4;
  if (v12 >= v4) {
    return swift_release(v6);
  }
  if (*(void *)(v7 + 8 * v12))
  {
    char v9 = v12;
    goto LABEL_19;
  }

  while (1)
  {
    char v9 = v12 + 1;
    if (__OFADD__(v12, 1LL)) {
      break;
    }
    if (v9 >= v4) {
      return swift_release(v6);
    }
    ++v12;
    if (*(void *)(v7 + 8 * v9)) {
      goto LABEL_19;
    }
  }

    unint64_t v7 = (v13 - 1) & v13;
    uint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    unint64_t v6 = v14;
LABEL_20:
    if (*(void **)(*(void *)(v5 + 56) + 8 * v11) == a2)
    {
      char v16 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v11);
      swift_release(v5);
      return v16;
    }
  }

  __break(1u);
  return result;
}

void sub_10004C2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
  BOOL v20 = &type metadata for String;
  uint64_t v21 = v12;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  swift_bridgeObjectRetain(a2);
  sub_100030118((uint64_t)&v18, 0x6567617373656DLL, 0xE700000000000000LL);
  BOOL v20 = &type metadata for String;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  swift_bridgeObjectRetain(a4);
  sub_100030118((uint64_t)&v18, 0x79726F6765746163LL, 0xE800000000000000LL);
  uint64_t v14 = static Date.now.getter(v13);
  double v15 = Date.timeIntervalSince1970.getter(v14);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v16 = v21;
  BOOL v20 = (void *)sub_10000D33C(&qword_1001C8F18);
  uint64_t v18 = v16;
  sub_100030350((uint64_t)&v18, v15);
}

uint64_t sub_10004C420(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10004C464()
{
  return swift_bridgeObjectRetain(v0);
}

  ;
}

uint64_t sub_10004C4FC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  return sub_10000DA1C((uint64_t)&a35, a19);
}

  ;
}

uint64_t sub_10004C530@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = *(void *)(a10 + 56);
  uint64_t v12 = (void *)(*(void *)(a10 + 48) + 16 * a1);
  uint64_t v13 = v12[1];
  *(void *)(v10 - 192) = *v12;
  *(void *)(v10 - 184) = v13;
  return sub_10000DA1C(v11 + 32 * a1, a9);
}

uint64_t sub_10004C54C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _OWORD *a15)
{
  *(_BYTE *)(v17 - 192) = v15;
  sub_10000DA58(v16, a15);
  return sub_10000DA1C((uint64_t)a15, (uint64_t)v16);
}

uint64_t sub_10004C578()
{
  return swift_bridgeObjectRelease(0x8000000000000000LL);
}

uint64_t sub_10004C580( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_10000DA1C(v14, a14);
}

uint64_t sub_10004C594(void *a1)
{
  return swift_bridgeObjectRelease();
}

BOOL sub_10004C5A8( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v20, v21);
}

  ;
}

  ;
}

  ;
}

double sub_10004C5F0()
{
  uint64_t v1 = (_OWORD *)(v0 - 192);
  double result = 0.0;
  v1[1] = 0u;
  v1[2] = 0u;
  _OWORD *v1 = 0u;
  return result;
}

  ;
}

  ;
}

  ;
}

unint64_t sub_10004C644(uint64_t a1)
{
  return sub_100030CCC(a1, v1);
}

  ;
}

uint64_t sub_10004C668()
{
  return sub_1000288E8(v1 - 192, v1 - 144, v0);
}

uint64_t sub_10004C678(uint64_t a1)
{
  return v1;
}

_OWORD *sub_10004C694( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, __int128 a21)
{
  return sub_10000DA58(&a21, v21);
}

uint64_t sub_10004C6A0()
{
  return swift_bridgeObjectRetain(v0);
}

uint64_t sub_10004C6AC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + ++*(void *)(v0 + 16) = a1;
  return swift_bridgeObjectRetain(v2);
}

BOOL sub_10004C6B8()
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(v1, v0);
}

  ;
}

  ;
}

  ;
}

unint64_t sub_10004C6F8()
{
  return sub_100030CCC(v1, v0);
}

uint64_t sub_10004C704()
{
  return swift_bridgeObjectRetain_n(v0, 2LL);
}

  ;
}

uint64_t sub_10004C724( uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v13 = sub_10000D33C(&qword_1001C8BD0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((a4 & 1) != 0)
  {
    if (qword_1001C80E8 != -1) {
      swift_once(&qword_1001C80E8, sub_100131F04);
    }
    sub_100132364(a5, a6);
    uint64_t v17 = sub_10000D37C(a7, a7[3]);
    swift_bridgeObjectRetain(v17[2]);
    sub_10015169C();
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for TaskPriority(0LL);
    sub_10000D5C0((uint64_t)v16, 1LL, 1LL, v18);
    sub_10004C420((uint64_t)a7, (uint64_t)v22);
    uint64_t v19 = (void *)swift_allocObject(&unk_1001A9E10, 96LL, 7LL);
    _OWORD v19[2] = 0LL;
    uint64_t v19[3] = 0LL;
    sub_100019F60(v22, (uint64_t)(v19 + 4));
    v19[9] = a8;
    v19[10] = a5;
    v19[11] = a6;
    swift_retain(a8);
    swift_bridgeObjectRetain(a6);
    uint64_t v20 = sub_100116BA0((uint64_t)v16, (uint64_t)&unk_1001CA5D8, (uint64_t)v19);
    return swift_release(v20);
  }

  return result;
}

uint64_t sub_10004C894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  return swift_task_switch(sub_10004C8B0, 0LL, 0LL);
}

uint64_t sub_10004C8B0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = (__int128 *)sub_10000D37C(*(void **)(v0 + 104), *(void *)(*(void *)(v0 + 104) + 24LL));
  *(void *)(v0 + 88) = type metadata accessor for DynamicActivityTaskScheduler();
  *(void *)(v0 + 96) = &off_1001A9DE8;
  *(void *)(v0 + 64) = v1;
  __int128 v4 = *v2;
  __int128 v3 = v2[1];
  *(_OWORD *)(v0 + 41) = *(__int128 *)((char *)v2 + 25);
  *(_OWORD *)(v0 + ++*(void *)(v0 + 16) = v4;
  *(_OWORD *)(v0 + 32) = v3;
  uint64_t v5 = dword_1001CC5E4;
  swift_retain(v1);
  unint64_t v6 = (void *)swift_task_alloc(v5);
  *(void *)(v0 + 136) = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_10004C948;
  return sub_1000D3098();
}

uint64_t sub_10004C948()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 136));
  if (v0)
  {
    swift_errorRelease(v0);
    __int128 v3 = sub_10004CA10;
  }

  else
  {
    sub_10000D3A0((void *)(v2 + 64));
    __int128 v3 = sub_10004C9B8;
  }

  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_10004C9B8()
{
  if (qword_1001C80E8 != -1) {
    swift_once(&qword_1001C80E8, sub_100131F04);
  }
  sub_100133128(*(void *)(v0 + 120), *(void *)(v0 + 128));
  return sub_1000105A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_10004CA10()
{
  if (qword_1001C80E8 != -1) {
    swift_once(&qword_1001C80E8, sub_100131F04);
  }
  sub_100133128(*(void *)(v0 + 120), *(void *)(v0 + 128));
  return sub_1000105A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for DynamicActivityTaskScheduler()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd28DynamicActivityTaskScheduler);
}

uint64_t sub_10004CA90()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_10004CACC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  uint64_t v10 = (void *)swift_task_alloc(dword_1001CA5D4);
  *(void *)(v2 + ++*(void *)(v0 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_10004CB5C;
  return sub_10004C894(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10004CB5C()
{
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 16));
  return sub_1000105A8(*(uint64_t (**)(void))(v2 + 8));
}

void sub_10004CB9C()
{
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100029328();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  sub_100051AEC();
  __chkstk_darwin(v10);
  sub_100051AD8();
  if (sub_1000102D4((uint64_t)v6, 1LL, v7) == 1)
  {
    sub_1000102E0((uint64_t)v6, &qword_1001CB180);
  }

  else
  {
    uint64_t v51 = v1;
    uint64_t v11 = sub_100051B40();
    uint64_t v48 = v12;
    uint64_t v49 = v2;
    ((void (*)(uint64_t))v12)(v11);
    uint64_t v13 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v14 = *(void *)(sub_10002C79C() - 8);
    uint64_t v15 = swift_allocObject( v13,  ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
          + 3LL * *(void *)(v14 + 72),
            *(unsigned __int8 *)(v14 + 80) | 7LL);
    *(_OWORD *)(v15 + ++*(void *)(v0 + 16) = xmmword_100164240;
    uint64_t v54 = sub_10000D33C(&qword_1001CA690);
    uint64_t v50 = v0;
    uint64_t v52 = v0;
    id v16 = (id)AMSLogKey(v54);
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      uint64_t v47 = v8;
      uint64_t v20 = v19;

      swift_bridgeObjectRetain(v20);
      sub_100010564();
      sub_100048C84();
      sub_100051A10();
      uint64_t v21 = sub_100010530();
      sub_100051A34(v21);
      sub_100051B68();
      sub_10000DC14();
      v57[3] = &type metadata for String;
      v57[0] = v18;
      v57[1] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v57);
      sub_100051B68();
      sub_10000DC4C(93LL);
      sub_100051AB4();
      uint64_t v8 = v47;
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_100048C84();
      sub_100051A10();
      uint64_t v22 = sub_100010530();
      sub_100051A34(v22);
      sub_1000102E0((uint64_t)v57, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_100051AB4();
    }

    sub_10000D3A0(&v52);
    LogMessage.init(stringLiteral:)(0x20676E6968636143LL);
    __int128 v23 = sub_100051B50();
    uint64_t v24 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
    v24(v23, v51, v7);
    sub_100051B80();
    uint64_t v25 = sub_1000102E0((uint64_t)&v52, &qword_1001CAAD0);
    if (qword_1001C7F80 != -1) {
      uint64_t v25 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v26 = static os_log_type_t.info.getter(v25);
    sub_1000BD1B0(v26, v15);
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_100020AF8((uint64_t)&unk_1001A9F28);
    *(void *)(v47 + ++*(void *)(v0 + 16) = _swiftEmptyDictionarySingleton;
    sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
    id v27 = sub_1000519E4();
    if (qword_1001C7F38 != -1) {
      swift_once(&qword_1001C7F38, sub_10004D500);
    }
    id v28 = [v27 stringForKey:qword_1001CA5E0];

    id v46 = [v28 valuePromise];
    id v29 = sub_1000519E4();
    if (qword_1001C7F40 != -1) {
      swift_once(&qword_1001C7F40, sub_10004D538);
    }
    id v30 = [v29 arrayForKey:qword_1001CA5E8];

    id v31 = [v30 valuePromise];
    uint64_t v32 = v49;
    uint64_t v33 = v51;
    v24(v49, v51, v7);
    uint64_t v34 = v7;
    uint64_t v35 = v8;
    uint64_t v36 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v37 = (v36 + 32) & ~v36;
    unint64_t v38 = (v9 + v37 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v39 = swift_allocObject(&unk_1001A9F50, v38 + 8, v36 | 7);
    uint64_t v41 = v47;
    uint64_t v40 = v48;
    *(void *)(v39 + ++*(void *)(v0 + 16) = v47;
    *(void *)(v39 + 2sub_10000D3A0(v0 + 4) = v31;
    v40(v39 + v37, (uint64_t)v32, v34);
    uint64_t v42 = v50;
    *(void *)(v39 + v38) = v50;
    uint64_t v55 = sub_100051850;
    uint64_t v56 = v39;
    uint64_t v52 = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256LL;
    sub_100051A7C((uint64_t)sub_1000B1D04);
    swift_retain(v41);
    id v43 = v31;
    swift_release();
    id v44 = v46;
    sub_100051B28(v46, "addSuccessBlock:");
    sub_100051B08();
    uint64_t v45 = sub_100020AF8((uint64_t)&unk_1001A9FA0);
    *(void *)(v45 + ++*(void *)(v0 + 16) = v42;
    uint64_t v55 = sub_100051894;
    uint64_t v56 = v45;
    uint64_t v52 = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256LL;
    sub_100051A7C((uint64_t)sub_1000B1D04);
    sub_100051ACC();
    sub_100051B28(v44, "addErrorBlock:");
    sub_100051B08();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    swift_release();
  }

  sub_10001A30C();
}

void sub_10004D0CC()
{
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100029328();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  sub_100051AEC();
  __chkstk_darwin(v10);
  sub_100051AD8();
  if (sub_1000102D4((uint64_t)v6, 1LL, v7) == 1)
  {
    sub_1000102E0((uint64_t)v6, &qword_1001CB180);
  }

  else
  {
    uint64_t v11 = sub_100051B40();
    uint64_t v37 = v12;
    uint64_t v38 = v2;
    ((void (*)(uint64_t))v12)(v11);
    uint64_t v13 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v14 = *(void *)(sub_10002C79C() - 8);
    uint64_t v15 = swift_allocObject( v13,  ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))
          + 3LL * *(void *)(v14 + 72),
            *(unsigned __int8 *)(v14 + 80) | 7LL);
    *(_OWORD *)(v15 + ++*(void *)(v0 + 16) = xmmword_100164240;
    uint64_t v42 = sub_10000D33C(&qword_1001CA690);
    uint64_t v39 = v0;
    uint64_t v40 = v0;
    id v16 = (id)AMSLogKey(v42);
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      uint64_t v36 = v8;
      uint64_t v19 = v18;

      swift_bridgeObjectRetain(v19);
      sub_100010564();
      sub_100048C84();
      sub_100051A10();
      uint64_t v20 = sub_100010530();
      sub_100051A34(v20);
      sub_100051B74();
      sub_10000DC14();
      void v45[3] = &type metadata for String;
      v45[0] = v35;
      v45[1] = v19;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v45);
      sub_100051B74();
      sub_10000DC4C(93LL);
      sub_100051AB4();
      uint64_t v8 = v36;
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_100048C84();
      sub_100051A10();
      uint64_t v21 = sub_100010530();
      sub_100051A34(v21);
      sub_1000102E0((uint64_t)v45, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_100051AB4();
    }

    sub_10000D3A0(&v40);
    LogMessage.init(stringLiteral:)(0xD000000000000012LL);
    uint64_t v22 = sub_100051B50();
    sub_100051B8C((uint64_t)v22);
    sub_100051B80();
    uint64_t v23 = sub_1000102E0((uint64_t)&v40, &qword_1001CAAD0);
    if (qword_1001C7F80 != -1) {
      uint64_t v23 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v24 = static os_log_type_t.info.getter(v23);
    sub_1000BD1B0(v24, v15);
    swift_bridgeObjectRelease();
    sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
    id v25 = sub_1000519E4();
    uint64_t v26 = v39;
    if (qword_1001C7F40 != -1) {
      swift_once(&qword_1001C7F40, sub_10004D538);
    }
    id v27 = [v25 arrayForKey:qword_1001CA5E8];

    id v28 = [v27 valuePromise];
    uint64_t v29 = v38;
    sub_100051B8C(v38);
    uint64_t v30 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v31 = (v30 + 24) & ~v30;
    uint64_t v32 = swift_allocObject(&unk_1001A9E38, v31 + v9, v30 | 7);
    *(void *)(v32 + ++*(void *)(v0 + 16) = v26;
    v37(v32 + v31, v29, v7);
    id v43 = sub_100051694;
    uint64_t v44 = v32;
    uint64_t v40 = _NSConcreteStackBlock;
    uint64_t v41 = 1107296256LL;
    sub_100051A7C((uint64_t)sub_1000B1D04);
    sub_100051ACC();
    sub_100051B28(v28, "addSuccessBlock:");
    sub_100051B08();
    uint64_t v33 = sub_100020AF8((uint64_t)&unk_1001A9E88);
    *(void *)(v33 + ++*(void *)(v0 + 16) = v26;
    id v43 = sub_1000516EC;
    uint64_t v44 = v33;
    uint64_t v40 = _NSConcreteStackBlock;
    uint64_t v41 = 1107296256LL;
    sub_100051A7C((uint64_t)sub_1000B1D04);
    sub_100051ACC();
    sub_100051B28(v28, "addErrorBlock:");
    sub_100051B08();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
  }

  sub_10001A30C();
}

NSString sub_10004D500()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1001CA5E0 = (uint64_t)result;
  return result;
}

NSString sub_10004D538()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1001CA5E8 = (uint64_t)result;
  return result;
}

void sub_10004D574()
{
  id v0 = [(id)objc_opt_self(NSURLSessionConfiguration) defaultSessionConfiguration];
  id v1 = [(id)objc_opt_self(NSURLSession) sessionWithConfiguration:v0];

  qword_1001CA5F0 = (uint64_t)v1;
}

CFPropertyListRef sub_10004D5E4()
{
  CFPropertyListRef result = sub_100049E28();
  if (result)
  {
    CFPropertyListRef v2 = result;
    if (swift_dynamicCast( &v1,  &v2,  (char *)&type metadata for Swift.AnyObject + 8,  &type metadata for String,  6LL)) {
      return (CFPropertyListRef)v1;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10004D65C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_10000D33C(&qword_1001CB180);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  id v16 = (char *)v44 - v15;
  id v17 = objc_msgSend((id)objc_opt_self(NSURL), "ams_dynamicUIDirectory");
  if (v17)
  {
    uint64_t v18 = v17;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v9, v14, v10);
    sub_10000D5C0((uint64_t)v9, 0LL, 1LL, v10);
    if (sub_1000102D4((uint64_t)v9, 1LL, v10) != 1)
    {
      v19(v16, v9, v10);
      id v20 = [(id)objc_opt_self(NSFileManager) defaultManager];
      sub_10014F918();

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
  }

  else
  {
    sub_10000D5C0((uint64_t)v9, 1LL, 1LL, v10);
  }

  sub_1000102E0((uint64_t)v9, &qword_1001CB180);
  uint64_t v22 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v23 = type metadata accessor for LogMessage(0LL);
  uint64_t v24 = swift_allocObject( v22,  ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v23 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v23 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v24 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v47 = sub_10000D33C(&qword_1001CA690);
  v46[0] = v2;
  id v25 = (id)AMSLogKey(v47);
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    uint64_t v29 = v28;

    swift_bridgeObjectRetain(v29);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v30._uint64_t countAndFlagsBits = 0LL;
    v30._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t v31 = v47;
    uint64_t v32 = sub_10000D37C(v46, v47);
    uint64_t DynamicType = swift_getDynamicType(v32, v31, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v44[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v44);
    sub_1000102E0((uint64_t)v44, &qword_1001CAAD0);
    v34._uint64_t countAndFlagsBits = 5972026LL;
    v34._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t MetatypeMetadata = &type metadata for String;
    v44[0] = v27;
    v44[1] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v44);
    sub_1000102E0((uint64_t)v44, &qword_1001CAAD0);
    v35._uint64_t countAndFlagsBits = 93LL;
    v35._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    LogMessage.init(stringInterpolation:)(v6);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v36._uint64_t countAndFlagsBits = 0LL;
    v36._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    uint64_t v37 = v47;
    uint64_t v38 = sub_10000D37C(v46, v47);
    uint64_t v39 = swift_getDynamicType(v38, v37, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v39);
    v44[0] = v39;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v44);
    sub_1000102E0((uint64_t)v44, &qword_1001CAAD0);
    v40._uint64_t countAndFlagsBits = 58LL;
    v40._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    LogMessage.init(stringInterpolation:)(v6);
  }

  sub_10000D3A0(v46);
  uint64_t v41 = LogMessage.init(stringLiteral:)(0xD000000000000021LL);
  if (qword_1001C7F80 != -1) {
    uint64_t v41 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v43 = static os_log_type_t.fault.getter(v41, v42);
  sub_1000BD1B0(v43, v24);
  swift_bridgeObjectRelease();
  return sub_10000D5C0(a1, 1LL, 1LL, v10);
}

void sub_10004DAA0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v25 = a3;
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1001C7F38 != -1) {
    swift_once(&qword_1001C7F38, sub_10004D500);
  }
  uint64_t v13 = (void *)qword_1001CA5E0;
  swift_beginAccess(a2 + 16, &aBlock, 33LL, 0LL);
  id v14 = v13;
  id v15 = a1;
  sub_1000341CC();
  swift_endAccess(&aBlock);

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a4,  v9);
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = (v16 + 24) & ~v16;
  unint64_t v18 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v19 = swift_allocObject(&unk_1001A9FF0, v18 + 8, v16 | 7);
  *(void *)(v19 + ++*(void *)(v0 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v12, v9);
  *(void *)(v19 + v18) = a5;
  Swift::String v30 = sub_100051904;
  uint64_t v31 = v19;
  __int128 aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256LL;
  uint64_t v28 = sub_1000B1D04;
  uint64_t v29 = &unk_1001AA008;
  id v20 = _Block_copy(&aBlock);
  swift_retain(a2);
  swift_release();
  id v21 = v25;
  [v25 addSuccessBlock:v20];
  _Block_release(v20);
  uint64_t v22 = swift_allocObject(&unk_1001AA040, 24LL, 7LL);
  *(void *)(v22 + ++*(void *)(v0 + 16) = a5;
  Swift::String v30 = sub_100051948;
  uint64_t v31 = v22;
  __int128 aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256LL;
  uint64_t v28 = sub_1000B1D04;
  uint64_t v29 = &unk_1001AA058;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_release();
  [v21 addErrorBlock:v23];
  _Block_release(v23);
}

uint64_t sub_10004DCE8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_1001C7F40 != -1) {
    swift_once(&qword_1001C7F40, sub_10004D538);
  }
  uint64_t v8 = (void *)qword_1001CA5E8;
  swift_beginAccess(a2 + 16, v14, 33LL, 0LL);
  id v9 = v8;
  id v10 = a1;
  sub_1000341CC();
  swift_endAccess(v14);

  URL.appendingPathComponent(_:isDirectory:)(0x2D656E696C66666FLL, 0xEB00000000676162LL, 0LL);
  swift_beginAccess(a2 + 16, v14, 0LL, 0LL);
  swift_bridgeObjectRetain(*(void *)(a2 + 16));
  sub_10004DE4C(v11, (uint64_t)v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10004DE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = (void *)objc_opt_self(&OBJC_CLASS___NSKeyedArchiver);
  type metadata accessor for AMSBagKey(0LL);
  sub_100051974();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v72[0] = 0LL;
  id v10 = [v8 archivedDataWithRootObject:isa requiringSecureCoding:1 error:v72];

  id v11 = v72[0];
  if (v10)
  {
    uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
    unint64_t v14 = v13;

    Data.write(to:options:)(a2, 0LL, v12, v14);
    uint64_t v43 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v44 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v45 = swift_allocObject( v43,  ((*(unsigned __int8 *)(v44 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))
          + 3LL * *(void *)(v44 + 72),
            *(unsigned __int8 *)(v44 + 80) | 7LL);
    *(_OWORD *)(v45 + ++*(void *)(v0 + 16) = xmmword_100164240;
    uint64_t v73 = sub_10000D33C(&qword_1001CA690);
    v72[0] = v3;
    id v46 = (id)AMSLogKey(v73);
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      uint64_t v50 = v49;

      swift_bridgeObjectRetain(v50);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v51._uint64_t countAndFlagsBits = 0LL;
      v51._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v51);
      uint64_t v52 = v73;
      uint64_t v53 = sub_10000D37C(v72, v73);
      uint64_t DynamicType = swift_getDynamicType(v53, v52, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v69 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_1000102E0((uint64_t)&v69, &qword_1001CAAD0);
      v55._uint64_t countAndFlagsBits = 5972026LL;
      v55._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v69 = v48;
      uint64_t v70 = v50;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_1000102E0((uint64_t)&v69, &qword_1001CAAD0);
      v56._uint64_t countAndFlagsBits = 93LL;
      v56._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      LogMessage.init(stringInterpolation:)(v7);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v57._uint64_t countAndFlagsBits = 0LL;
      v57._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      uint64_t v58 = v73;
      id v59 = sub_10000D37C(v72, v73);
      uint64_t v60 = swift_getDynamicType(v59, v58, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v60);
      uint64_t v69 = v60;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_1000102E0((uint64_t)&v69, &qword_1001CAAD0);
      v61._uint64_t countAndFlagsBits = 58LL;
      v61._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v61);
      LogMessage.init(stringInterpolation:)(v7);
    }

    sub_10000D3A0(v72);
    LogMessage.init(stringLiteral:)(0xD00000000000001BLL);
    uint64_t v62 = type metadata accessor for URL(0LL);
    uint64_t v73 = v62;
    uint64_t v63 = sub_10000D63C(v72);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16LL))(v63, a2, v62);
    static LogMessage.safe(_:)(v72);
    uint64_t v64 = sub_1000102E0((uint64_t)v72, &qword_1001CAAD0);
    if (qword_1001C7F80 != -1) {
      uint64_t v64 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v65 = static os_log_type_t.info.getter(v64);
    sub_1000BD1B0(v65, v45);
    swift_bridgeObjectRelease();
    return sub_10001BD84(v12, v14);
  }

  else
  {
    id v15 = v11;
    uint64_t v16 = _convertNSErrorToError(_:)(v11);

    swift_willThrow(v17);
    uint64_t v18 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v19 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v20 = swift_allocObject( v18,  ((*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
          + 3LL * *(void *)(v19 + 72),
            *(unsigned __int8 *)(v19 + 80) | 7LL);
    *(_OWORD *)(v20 + ++*(void *)(v0 + 16) = xmmword_100164240;
    uint64_t v73 = sub_10000D33C(&qword_1001CA690);
    v72[0] = v3;
    id v21 = (id)AMSLogKey(v73);
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      uint64_t v25 = v24;

      swift_bridgeObjectRetain(v25);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v26._uint64_t countAndFlagsBits = 0LL;
      v26._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t v27 = v73;
      uint64_t v28 = sub_10000D37C(v72, v73);
      uint64_t v29 = swift_getDynamicType(v28, v27, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v29);
      uint64_t v69 = v29;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_1000102E0((uint64_t)&v69, &qword_1001CAAD0);
      v30._uint64_t countAndFlagsBits = 5972026LL;
      v30._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v69 = v23;
      uint64_t v70 = v25;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_1000102E0((uint64_t)&v69, &qword_1001CAAD0);
      v31._uint64_t countAndFlagsBits = 93LL;
      v31._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)(v7);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v32._uint64_t countAndFlagsBits = 0LL;
      v32._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v33 = v73;
      Swift::String v34 = sub_10000D37C(v72, v73);
      uint64_t v35 = swift_getDynamicType(v34, v33, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v35);
      uint64_t v69 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v69);
      sub_1000102E0((uint64_t)&v69, &qword_1001CAAD0);
      v36._uint64_t countAndFlagsBits = 58LL;
      v36._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v36);
      LogMessage.init(stringInterpolation:)(v7);
    }

    sub_10000D3A0(v72);
    LogMessage.init(stringLiteral:)(0xD000000000000013LL);
    swift_getErrorValue(v16, v68);
    uint64_t v37 = v66;
    uint64_t v38 = v67;
    uint64_t v73 = v67;
    uint64_t v39 = sub_10000D63C(v72);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16LL))(v39, v37, v38);
    static LogMessage.safe(_:)(v72);
    uint64_t v40 = sub_1000102E0((uint64_t)v72, &qword_1001CAAD0);
    if (qword_1001C7F80 != -1) {
      uint64_t v40 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v41 = static os_log_type_t.error.getter(v40);
    sub_1000BD1B0(v41, v20);
    swift_bridgeObjectRelease();
    return swift_errorRelease(v16);
  }

uint64_t sub_10004E4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v8 = sub_10002C79C();
  uint64_t v9 = swift_allocObject( v7,  ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80LL))
       + 3LL * *(void *)(*(void *)(v8 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v8 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v9 + ++*(void *)(v0 + 16) = xmmword_100164240;
  uint64_t v30 = sub_10000D33C(&qword_1001CA690);
  v29[0] = a2;
  id v10 = (id)AMSLogKey(v30);
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v14 = v13;

    swift_bridgeObjectRetain(v14);
    sub_100010564();
    sub_10000DC08();
    uint64_t v15 = v30;
    uint64_t v16 = sub_10000D37C(v29, v30);
    uint64_t DynamicType = swift_getDynamicType(v16, v15, 1LL);
    swift_getMetatypeMetadata(DynamicType);
    sub_10000DEA4();
    sub_100051B5C();
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    v27[0] = v12;
    v27[1] = v14;
    sub_10000DEA4();
    sub_100051B5C();
    sub_10000DC4C(93LL);
    sub_100025910();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10001A1BC();
    sub_10000DC08();
    uint64_t v18 = v30;
    uint64_t v19 = sub_10000D37C(v29, v30);
    uint64_t v20 = swift_getDynamicType(v19, v18, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v20);
    v27[0] = v20;
    sub_10000DEA4();
    sub_1000102E0((uint64_t)v27, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_100025910();
  }

  sub_10000D3A0(v29);
  LogMessage.init(stringLiteral:)(a3);
  swift_getErrorValue(a1, v26);
  uint64_t v30 = v25;
  id v21 = sub_10000D63C(v29);
  (*(void (**)(void *))(*(void *)(v25 - 8) + 16LL))(v21);
  static LogMessage.safe(_:)(v29);
  uint64_t v22 = sub_1000102E0((uint64_t)v29, &qword_1001CAAD0);
  if (qword_1001C7F80 != -1) {
    uint64_t v22 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v23 = static os_log_type_t.error.getter(v22);
  sub_1000BD1B0(v23, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004E788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v143 = a3;
  uint64_t v156 = a2;
  uint64_t v142 = type metadata accessor for JetpackOutputWriter(0LL);
  uint64_t v3 = __chkstk_darwin(v142);
  uint64_t v146 = (char *)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v137 = (char *)&v134 - v5;
  uint64_t v6 = sub_10000D33C(&qword_1001CB180);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v151 = (char *)&v134 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v138 = (char *)&v134 - v9;
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v141 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v145 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v144 = (char *)&v134 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v140 = (char *)&v134 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v136 = (char *)&v134 - v18;
  __chkstk_darwin(v17);
  uint64_t v135 = (char *)&v134 - v19;
  uint64_t v20 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v150 = type metadata accessor for NSFastEnumerationIterator(0LL);
  uint64_t v149 = *(void *)(v150 - 8);
  uint64_t v23 = __chkstk_darwin(v150);
  uint64_t v25 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = NSArray.makeIterator()(v23);
  NSFastEnumerationIterator.next()(&v163, v26);
  if (v164)
  {
    uint64_t v139 = 0LL;
    uint64_t v155 = (char *)&type metadata for Any + 8;
    __int128 v154 = xmmword_100164240;
    unint64_t v152 = 0x800000010016D010LL;
    __int128 v148 = xmmword_100164230;
    unint64_t v147 = 0x800000010016D030LL;
    uint64_t v153 = v25;
    do
    {
      sub_10000DA58(&v163, &v162);
      sub_10000DA1C((uint64_t)&v162, (uint64_t)&v160);
      uint64_t v27 = sub_10000D33C(&qword_1001C8F18);
      if ((swift_dynamicCast(&v157, &v160, v155, v27, 6LL) & 1) == 0)
      {
        uint64_t v39 = sub_10000D33C(&qword_1001C9C70);
        uint64_t v40 = type metadata accessor for LogMessage(0LL);
        uint64_t v41 = swift_allocObject( v39,  ((*(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL))
              + 3LL * *(void *)(*(void *)(v40 - 8) + 72LL),
                *(unsigned __int8 *)(*(void *)(v40 - 8) + 80LL) | 7LL);
        *(_OWORD *)(v41 + ++*(void *)(v0 + 16) = v154;
        *((void *)&v161 + 1) = sub_10000D33C(&qword_1001CA690);
        *(void *)&__int128 v160 = v156;
        id v42 = (id)AMSLogKey(*((void *)&v161 + 1));
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
          uint64_t v46 = v45;

          swift_bridgeObjectRetain(v46);
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
          v47._uint64_t countAndFlagsBits = 0LL;
          v47._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v47);
          uint64_t v48 = *((void *)&v161 + 1);
          uint64_t v49 = sub_10000D37C(&v160, *((uint64_t *)&v161 + 1));
          uint64_t DynamicType = swift_getDynamicType(v49, v48, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
          uint64_t v157 = DynamicType;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
          sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
          v51._uint64_t countAndFlagsBits = 5972026LL;
          v51._object = (void *)0xE300000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v51);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v157 = v44;
          uint64_t v158 = v46;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
          sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
          v52._uint64_t countAndFlagsBits = 93LL;
          v52._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v52);
          LogMessage.init(stringInterpolation:)(v22);
          swift_bridgeObjectRelease();
        }

        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
          v67._uint64_t countAndFlagsBits = 0LL;
          v67._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v67);
          uint64_t v68 = *((void *)&v161 + 1);
          uint64_t v69 = sub_10000D37C(&v160, *((uint64_t *)&v161 + 1));
          uint64_t v70 = swift_getDynamicType(v69, v68, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v70);
          uint64_t v157 = v70;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
          sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
          v71._uint64_t countAndFlagsBits = 58LL;
          v71._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v71);
          LogMessage.init(stringInterpolation:)(v22);
        }

        sub_10000D3A0(&v160);
        LogMessage.init(stringLiteral:)(0x2064696C61766E49LL);
        sub_10000DA1C((uint64_t)&v162, (uint64_t)&v160);
        static LogMessage.safe(_:)(&v160);
        uint64_t v72 = sub_1000102E0((uint64_t)&v160, &qword_1001CAAD0);
        if (qword_1001C7F80 != -1) {
          uint64_t v72 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
        }
        uint64_t v73 = static os_log_type_t.error.getter(v72);
        sub_1000BD1B0(v73, v41);
        goto LABEL_23;
      }

      uint64_t v28 = v157;
      if (!*(void *)(v157 + 16)
        || (unint64_t v29 = sub_100030CCC(25705LL, 0xE200000000000000LL), (v30 & 1) == 0)
        || (sub_10000DA1C(*(void *)(v28 + 56) + 32 * v29, (uint64_t)&v160),
            (swift_dynamicCast(&v157, &v160, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0))
      {
        uint64_t v53 = sub_10000D33C(&qword_1001C9C70);
        uint64_t v54 = type metadata accessor for LogMessage(0LL);
        uint64_t v55 = swift_allocObject( v53,  ((*(unsigned __int8 *)(*(void *)(v54 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v54 - 8) + 80LL))
              + 3LL * *(void *)(*(void *)(v54 - 8) + 72LL),
                *(unsigned __int8 *)(*(void *)(v54 - 8) + 80LL) | 7LL);
        *(_OWORD *)(v55 + ++*(void *)(v0 + 16) = v154;
        *((void *)&v161 + 1) = sub_10000D33C(&qword_1001CA690);
        *(void *)&__int128 v160 = v156;
        id v56 = (id)AMSLogKey(*((void *)&v161 + 1));
        if (v56)
        {
          Swift::String v57 = v56;
          uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
          uint64_t v60 = v59;

          swift_bridgeObjectRetain(v60);
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
          v61._uint64_t countAndFlagsBits = 0LL;
          v61._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v61);
          uint64_t v62 = *((void *)&v161 + 1);
          uint64_t v63 = sub_10000D37C(&v160, *((uint64_t *)&v161 + 1));
          uint64_t v64 = swift_getDynamicType(v63, v62, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v64);
          uint64_t v157 = v64;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
          sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
          v65._uint64_t countAndFlagsBits = 5972026LL;
          v65._object = (void *)0xE300000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v65);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v157 = v58;
          uint64_t v158 = v60;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
          sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
          v66._uint64_t countAndFlagsBits = 93LL;
          v66._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v66);
          LogMessage.init(stringInterpolation:)(v22);
          swift_bridgeObjectRelease();
        }

        else
        {
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
          v75._uint64_t countAndFlagsBits = 0LL;
          v75._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v75);
          uint64_t v76 = *((void *)&v161 + 1);
          uint64_t v77 = sub_10000D37C(&v160, *((uint64_t *)&v161 + 1));
          uint64_t v78 = swift_getDynamicType(v77, v76, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v78);
          uint64_t v157 = v78;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
          sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
          v79._uint64_t countAndFlagsBits = 58LL;
          v79._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v79);
          LogMessage.init(stringInterpolation:)(v22);
        }

        sub_10000D3A0(&v160);
        LogMessage.init(stringLiteral:)(0xD000000000000012LL);
        *((void *)&v161 + 1) = v27;
        *(void *)&__int128 v160 = v28;
        static LogMessage.safe(_:)(&v160);
        uint64_t v80 = sub_1000102E0((uint64_t)&v160, &qword_1001CAAD0);
        if (qword_1001C7F80 != -1) {
          uint64_t v80 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
        }
        uint64_t v81 = static os_log_type_t.error.getter(v80);
        sub_1000BD1B0(v81, v55);
        swift_bridgeObjectRelease();
        uint64_t v74 = sub_10000D3A0(&v162);
        uint64_t v25 = v153;
        goto LABEL_29;
      }

      uint64_t v31 = v157;
      uint64_t v32 = v158;
      if (*(void *)(v28 + 16))
      {
        unint64_t v33 = sub_100030CCC(0x556B63617074656ALL, 0xEA00000000004C52LL);
        if ((v34 & 1) != 0)
        {
          sub_10000DA1C(*(void *)(v28 + 56) + 32 * v33, (uint64_t)&v160);
          if ((swift_dynamicCast(&v157, &v160, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
          {
            uint64_t v35 = (uint64_t)v138;
            URL.init(string:)(v157, v158);
            swift_bridgeObjectRelease();
            if (sub_1000102D4(v35, 1LL, v10) != 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v119 = v141;
              uint64_t v120 = (uint64_t)v135;
              (*(void (**)(char *, uint64_t, uint64_t))(v141 + 32))(v135, v35, v10);
              uint64_t v121 = v140;
              uint64_t v122 = v31;
              uint64_t v123 = v143;
              URL.appendingPathComponent(_:)(v122, v32);
              uint64_t v124 = swift_bridgeObjectRelease();
              uint64_t v125 = URL.pathExtension.getter(v124);
              uint64_t v126 = (uint64_t)v136;
              URL.appendingPathExtension(_:)(v125, v127);
              swift_bridgeObjectRelease();
              uint64_t v128 = *(void (**)(char *, uint64_t))(v119 + 8);
              v128(v121, v10);
              sub_10004F6E4(v120, v126);
              uint64_t v129 = v142;
              uint64_t v130 = v137;
              uint64_t v131 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 16);
              v131(&v137[*(int *)(v142 + 20)], v123, v10);
              v131(&v130[*(int *)(v129 + 24)], v126, v10);
              *((_OWORD *)v130 + 2) = 0u;
              *((_OWORD *)v130 + 3) = 0u;
              *((_OWORD *)v130 + sub_10000D3A0(v0 + 4) = 0u;
              *(_OWORD *)uint64_t v130 = 0u;
              *((_OWORD *)v130 + 1) = 0u;
              v130[*(int *)(v129 + 28)] = 1;
              uint64_t v132 = v139;
              sub_1000789D4();
              if (v132) {
                swift_errorRelease(v132);
              }
              uint64_t v139 = 0LL;
              uint64_t v25 = v153;
              sub_100051718((uint64_t)v137);
              v128(v136, v10);
              v128(v135, v10);
              goto LABEL_24;
            }

            sub_1000102E0(v35, &qword_1001CB180);
          }
        }
      }

      uint64_t v36 = (uint64_t)v151;
      if (*(void *)(v28 + 16))
      {
        unint64_t v37 = sub_100030CCC(7107189LL, 0xE300000000000000LL);
        if ((v38 & 1) != 0)
        {
          sub_10000DA1C(*(void *)(v28 + 56) + 32 * v37, (uint64_t)&v160);
        }

        else
        {
          __int128 v160 = 0u;
          __int128 v161 = 0u;
        }

        uint64_t v36 = (uint64_t)v151;
      }

      else
      {
        __int128 v160 = 0u;
        __int128 v161 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v161 + 1))
      {
        if ((swift_dynamicCast(&v157, &v160, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }

        URL.init(string:)(v157, v158);
        swift_bridgeObjectRelease();
        if (sub_1000102D4(v36, 1LL, v10) != 1)
        {
          uint64_t v105 = v141;
          uint64_t v106 = (uint64_t)v144;
          (*(void (**)(char *, uint64_t, uint64_t))(v141 + 32))(v144, v36, v10);
          uint64_t v107 = v140;
          uint64_t v108 = v31;
          uint64_t v109 = v143;
          URL.appendingPathComponent(_:)(v108, v32);
          uint64_t v110 = swift_bridgeObjectRelease();
          uint64_t v111 = URL.pathExtension.getter(v110);
          uint64_t v112 = (uint64_t)v145;
          URL.appendingPathExtension(_:)(v111, v113);
          swift_bridgeObjectRelease();
          uint64_t v114 = *(void (**)(char *, uint64_t))(v105 + 8);
          v114(v107, v10);
          sub_10004F6E4(v106, v112);
          uint64_t v115 = v142;
          uint64_t v116 = v146;
          uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
          v117(&v146[*(int *)(v142 + 20)], v109, v10);
          v117(&v116[*(int *)(v115 + 24)], v112, v10);
          *((_OWORD *)v116 + 2) = 0u;
          *((_OWORD *)v116 + 3) = 0u;
          *((_OWORD *)v116 + sub_10000D3A0(v0 + 4) = 0u;
          *(_OWORD *)uint64_t v116 = 0u;
          *((_OWORD *)v116 + 1) = 0u;
          v116[*(int *)(v115 + 28)] = 0;
          uint64_t v118 = v139;
          sub_1000789D4();
          if (v118) {
            swift_errorRelease(v118);
          }
          uint64_t v139 = 0LL;
          uint64_t v25 = v153;
          sub_100051718((uint64_t)v146);
          v114(v145, v10);
          v114(v144, v10);
          goto LABEL_24;
        }

        swift_bridgeObjectRelease();
        uint64_t v82 = (__int128 *)v36;
        uint64_t v83 = &qword_1001CB180;
      }

      else
      {
        swift_bridgeObjectRelease();
        uint64_t v82 = &v160;
        uint64_t v83 = &qword_1001CAAD0;
      }

      sub_1000102E0((uint64_t)v82, v83);
LABEL_41:
      uint64_t v84 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v85 = type metadata accessor for LogMessage(0LL);
      uint64_t v86 = swift_allocObject( v84,  ((*(unsigned __int8 *)(*(void *)(v85 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v85 - 8) + 80LL))
            + 2LL * *(void *)(*(void *)(v85 - 8) + 72LL),
              *(unsigned __int8 *)(*(void *)(v85 - 8) + 80LL) | 7LL);
      *(_OWORD *)(v86 + ++*(void *)(v0 + 16) = v148;
      *((void *)&v161 + 1) = sub_10000D33C(&qword_1001CA690);
      *(void *)&__int128 v160 = v156;
      id v87 = (id)AMSLogKey(*((void *)&v161 + 1));
      if (v87)
      {
        uint64_t v88 = v87;
        uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
        uint64_t v91 = v90;

        swift_bridgeObjectRetain(v91);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v92._uint64_t countAndFlagsBits = 0LL;
        v92._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v92);
        uint64_t v93 = *((void *)&v161 + 1);
        uint64_t v94 = sub_10000D37C(&v160, *((uint64_t *)&v161 + 1));
        uint64_t v95 = swift_getDynamicType(v94, v93, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v95);
        uint64_t v157 = v95;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
        sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
        v96._uint64_t countAndFlagsBits = 5972026LL;
        v96._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v96);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v157 = v89;
        uint64_t v158 = v91;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
        sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
        v97._uint64_t countAndFlagsBits = 93LL;
        v97._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v97);
        LogMessage.init(stringInterpolation:)(v22);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v98._uint64_t countAndFlagsBits = 0LL;
        v98._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v98);
        uint64_t v99 = *((void *)&v161 + 1);
        uint64_t v100 = sub_10000D37C(&v160, *((uint64_t *)&v161 + 1));
        uint64_t v101 = swift_getDynamicType(v100, v99, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v101);
        uint64_t v157 = v101;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v157);
        sub_1000102E0((uint64_t)&v157, &qword_1001CAAD0);
        v102._uint64_t countAndFlagsBits = 58LL;
        v102._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v102);
        LogMessage.init(stringInterpolation:)(v22);
      }

      sub_10000D3A0(&v160);
      uint64_t v103 = LogMessage.init(stringLiteral:)(0xD000000000000012LL);
      if (qword_1001C7F80 != -1) {
        uint64_t v103 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
      }
      uint64_t v104 = static os_log_type_t.error.getter(v103);
      sub_1000BD1B0(v104, v86);
LABEL_23:
      swift_bridgeObjectRelease();
LABEL_24:
      uint64_t v74 = sub_10000D3A0(&v162);
LABEL_29:
      NSFastEnumerationIterator.next()(&v163, v74);
    }

    while (v164);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v25, v150);
}

uint64_t sub_10004F6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = a2;
  uint64_t v4 = (void *)type metadata accessor for URL(0LL);
  uint64_t v93 = *(v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v87 = v5;
  Swift::String v92 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for URLRequest(0LL);
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v89 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v13 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (v15 + 32) & ~v15;
  uint64_t v90 = v14;
  uint64_t v86 = (char *)v12;
  uint64_t v84 = v15 | 7;
  uint64_t v17 = swift_allocObject(v12, v16 + 3 * v14, v15 | 7);
  *(_OWORD *)(v17 + ++*(void *)(v0 + 16) = xmmword_100164240;
  uint64_t v85 = v16;
  uint64_t v83 = (void *)sub_10000D33C(&qword_1001CA690);
  Swift::String v98 = v83;
  uint64_t v94 = v2;
  __int128 aBlock = v2;
  id v18 = (id)AMSLogKey(v83);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v4;
    uint64_t v21 = a1;
    uint64_t v22 = v8;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v25 = v24;

    swift_bridgeObjectRetain(v25);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v26._uint64_t countAndFlagsBits = 0LL;
    v26._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t v27 = v98;
    uint64_t v28 = sub_10000D37C(&aBlock, (uint64_t)v98);
    uint64_t DynamicType = swift_getDynamicType(v28, v27, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    uint64_t v101 = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v101);
    sub_1000102E0((uint64_t)&v101, &qword_1001CAAD0);
    v30._uint64_t countAndFlagsBits = 5972026LL;
    v30._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v101 = v23;
    uint64_t v102 = v25;
    uint64_t v8 = v22;
    a1 = v21;
    uint64_t v4 = v20;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v101);
    sub_1000102E0((uint64_t)&v101, &qword_1001CAAD0);
    v31._uint64_t countAndFlagsBits = 93LL;
    v31._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    LogMessage.init(stringInterpolation:)(v11);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v32._uint64_t countAndFlagsBits = 0LL;
    v32._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    unint64_t v33 = v98;
    char v34 = sub_10000D37C(&aBlock, (uint64_t)v98);
    uint64_t v35 = swift_getDynamicType(v34, v33, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v35);
    uint64_t v101 = v35;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v101);
    sub_1000102E0((uint64_t)&v101, &qword_1001CAAD0);
    v36._uint64_t countAndFlagsBits = 58LL;
    v36._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    LogMessage.init(stringInterpolation:)(v11);
  }

  sub_10000D3A0(&aBlock);
  LogMessage.init(stringLiteral:)(0xD000000000000017LL);
  Swift::String v98 = v4;
  unint64_t v37 = (char *)sub_10000D63C(&aBlock);
  char v38 = *(void (**)(char *, uint64_t, void *))(v93 + 16);
  v38(v37, a1, v4);
  static LogMessage.safe(_:)(&aBlock);
  uint64_t v39 = sub_1000102E0((uint64_t)&aBlock, &qword_1001CAAD0);
  if (qword_1001C7F80 != -1) {
    uint64_t v39 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v40 = static os_log_type_t.default.getter(v39);
  sub_1000BD1B0(v40, v17);
  swift_bridgeObjectRelease();
  uint64_t v41 = v92;
  v38(v92, a1, v4);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v41, 0LL, 60.0);
  id v42 = [(id)objc_opt_self(NSFileManager) defaultManager];
  URL.path.getter(v42, v43);
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v45 = [v42 fileExistsAtPath:v44];

  uint64_t v46 = (void **)sub_10004D5E4();
  if (v47)
  {
    uint64_t v48 = v47;
    if (v45)
    {
      uint64_t v82 = v46;
      uint64_t v49 = swift_allocObject(v86, v85 + 2 * v90, v84);
      *(_OWORD *)(v49 + ++*(void *)(v0 + 16) = xmmword_100164230;
      Swift::String v98 = v83;
      __int128 aBlock = v94;
      id v50 = (id)AMSLogKey(v49);
      if (v50)
      {
        Swift::String v51 = v50;
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
        uint64_t v86 = v8;
        uint64_t v53 = v52;

        swift_bridgeObjectRetain(v53);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v54._uint64_t countAndFlagsBits = 0LL;
        v54._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v54);
        uint64_t v55 = v98;
        id v56 = sub_10000D37C(&aBlock, (uint64_t)v98);
        uint64_t v57 = swift_getDynamicType(v56, v55, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v57);
        uint64_t v101 = v57;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v101);
        sub_1000102E0((uint64_t)&v101, &qword_1001CAAD0);
        v58._uint64_t countAndFlagsBits = 5972026LL;
        v58._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v58);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v101 = v85;
        uint64_t v102 = v53;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v101);
        sub_1000102E0((uint64_t)&v101, &qword_1001CAAD0);
        v59._uint64_t countAndFlagsBits = 93LL;
        v59._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v59);
        LogMessage.init(stringInterpolation:)(v11);
        uint64_t v8 = v86;
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v60._uint64_t countAndFlagsBits = 0LL;
        v60._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v60);
        Swift::String v61 = v98;
        uint64_t v62 = sub_10000D37C(&aBlock, (uint64_t)v98);
        uint64_t v63 = swift_getDynamicType(v62, v61, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v63);
        uint64_t v101 = v63;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v101);
        sub_1000102E0((uint64_t)&v101, &qword_1001CAAD0);
        v64._uint64_t countAndFlagsBits = 58LL;
        v64._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v64);
        LogMessage.init(stringInterpolation:)(v11);
      }

      sub_10000D3A0(&aBlock);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(19LL, 1LL);
      v65._uint64_t countAndFlagsBits = 0xD000000000000013LL;
      v65._object = (void *)0x800000010016D0A0LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v65);
      Swift::String v98 = &type metadata for String;
      uint64_t v66 = (uint64_t)v82;
      __int128 aBlock = v82;
      uint64_t v96 = (uint64_t)v48;
      swift_bridgeObjectRetain(v48);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&aBlock);
      sub_1000102E0((uint64_t)&aBlock, &qword_1001CAAD0);
      v67._uint64_t countAndFlagsBits = 0LL;
      v67._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v67);
      uint64_t v68 = LogMessage.init(stringInterpolation:)(v11);
      uint64_t v69 = static os_log_type_t.debug.getter(v68);
      sub_1000BD1B0(v69, v49);
      swift_bridgeObjectRelease();
      v70._object = (void *)0x800000010016D0C0LL;
      v71._uint64_t countAndFlagsBits = v66;
      v71._object = v48;
      v70._uint64_t countAndFlagsBits = 0xD000000000000011LL;
      URLRequest.addValue(_:forHTTPHeaderField:)(v71, v70);
    }

    swift_bridgeObjectRelease();
  }

  if (qword_1001C7F48 != -1) {
    swift_once(&qword_1001C7F48, sub_10004D574);
  }
  uint64_t v72 = (void *)qword_1001CA5F0;
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  uint64_t v74 = v92;
  v38(v92, v91, v4);
  uint64_t v75 = v93;
  uint64_t v76 = *(unsigned __int8 *)(v93 + 80);
  uint64_t v77 = (v76 + 25) & ~v76;
  uint64_t v78 = swift_allocObject(&unk_1001A9ED8, v77 + v87, v76 | 7);
  *(void *)(v78 + ++*(void *)(v0 + 16) = v94;
  *(_BYTE *)(v78 + 2sub_10000D3A0(v0 + 4) = v45;
  (*(void (**)(uint64_t, char *, void *))(v75 + 32))(v78 + v77, v74, v4);
  uint64_t v99 = sub_100051790;
  uint64_t v100 = v78;
  __int128 aBlock = _NSConcreteStackBlock;
  uint64_t v96 = 1107296256LL;
  Swift::String v97 = sub_10005152C;
  Swift::String v98 = &unk_1001A9EF0;
  Swift::String v79 = _Block_copy(&aBlock);
  swift_release();
  id v80 = [v72 downloadTaskWithRequest:isa completionHandler:v79];
  _Block_release(v79);

  [v80 resume];
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v8, v89);
}

void sub_10004FF0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v239 = a6;
  uint64_t v240 = a1;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v227 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v227 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  v241 = (char *)&v227 - v18;
  uint64_t v19 = sub_10000D33C(&qword_1001CB180);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v227 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for URL(0LL);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v227 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a3)
  {
    uint64_t v26 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v27 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v28 = swift_allocObject( v26,  ((*(unsigned __int8 *)(v27 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
          + 3LL * *(void *)(v27 + 72),
            *(unsigned __int8 *)(v27 + 80) | 7LL);
    *(_OWORD *)(v28 + ++*(void *)(v0 + 16) = xmmword_100164240;
    *((void *)&v252 + 1) = sub_10000D33C(&qword_1001CA690);
    *(void *)&__int128 v251 = a4;
    uint64_t v29 = swift_errorRetain(a3);
    id v30 = (id)AMSLogKey(v29);
    uint64_t v31 = a3;
    if (v30)
    {
      Swift::String v32 = v30;
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      uint64_t v35 = v34;

      swift_bridgeObjectRetain(v35);
      Swift::String v36 = v241;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v37._uint64_t countAndFlagsBits = 0LL;
      v37._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      uint64_t v38 = *((void *)&v252 + 1);
      uint64_t v39 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
      uint64_t DynamicType = swift_getDynamicType(v39, v38, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v248 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v41._uint64_t countAndFlagsBits = 5972026LL;
      v41._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v248 = v33;
      uint64_t v249 = v35;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v42._uint64_t countAndFlagsBits = 93LL;
      v42._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      LogMessage.init(stringInterpolation:)(v36);
      swift_bridgeObjectRelease();
    }

    else
    {
      NSString v44 = v241;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v45._uint64_t countAndFlagsBits = 0LL;
      v45._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      uint64_t v46 = *((void *)&v252 + 1);
      Swift::String v47 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
      uint64_t v48 = swift_getDynamicType(v47, v46, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v48);
      uint64_t v248 = v48;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v49._uint64_t countAndFlagsBits = 58LL;
      v49._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      LogMessage.init(stringInterpolation:)(v44);
    }

    sub_10000D3A0(&v251);
    LogMessage.init(stringLiteral:)(0x642064656C696146LL);
    swift_getErrorValue(v31, v244);
    uint64_t v50 = v242;
    uint64_t v51 = v243;
    *((void *)&v252 + 1) = v243;
    uint64_t v52 = sub_10000D63C(&v251);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16LL))(v52, v50, v51);
    static LogMessage.safe(_:)(&v251);
    uint64_t v53 = sub_1000102E0((uint64_t)&v251, &qword_1001CAAD0);
    if (qword_1001C7F80 != -1) {
      uint64_t v53 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v54 = static os_log_type_t.error.getter(v53);
    sub_1000BD1B0(v54, v28);
    swift_bridgeObjectRelease();
    swift_errorRelease(v31);
    return;
  }

  uint64_t v234 = v11;
  __int128 v236 = v17;
  int v235 = a5;
  uint64_t v238 = v23;
  __int128 v237 = v25;
  sub_10002877C(v240, (uint64_t)v21);
  if (sub_1000102D4((uint64_t)v21, 1LL, v22) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v238 + 32))(v237, v21, v22);
    uint64_t v43 = a2;
    if (!a2 || (uint64_t v55 = objc_opt_self(&OBJC_CLASS___NSHTTPURLResponse), (v56 = swift_dynamicCastObjCClass(a2, v55)) == 0))
    {
      (*(void (**)(char *, uint64_t))(v238 + 8))(v237, v22);
      goto LABEL_15;
    }

    uint64_t v57 = (void *)v56;
    __int128 v236 = (char *)v22;
    sub_10000DAA0(0LL, &qword_1001CE750, &OBJC_CLASS___NSDateFormatter_ptr);
    id v230 = v43;
    id v58 = sub_1000496A8();
    Date.init()(v58);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v234 + 8))(v13, v10);
    id v229 = v58;
    id v60 = [v58 stringForObjectValue:isa];

    type metadata accessor for Defaults();
    sub_10004A020(v60, 9u);

    id v61 = [v57 statusCode];
    uint64_t v62 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v63 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v64 = *(void *)(v63 + 72);
    uint64_t v65 = *(unsigned __int8 *)(v63 + 80);
    uint64_t v66 = (v65 + 32) & ~v65;
    uint64_t v233 = v62;
    uint64_t v228 = v66 + 2 * v64;
    uint64_t v232 = v65 | 7;
    uint64_t v67 = swift_allocObject(v62, v228, v65 | 7);
    __int128 v227 = xmmword_100164230;
    *(_OWORD *)(v67 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v234 = v66;
    uint64_t v231 = sub_10000D33C(&qword_1001CA690);
    *((void *)&v252 + 1) = v231;
    *(void *)&__int128 v251 = a4;
    id v68 = (id)AMSLogKey(v231);
    uint64_t v240 = v64;
    if (v68)
    {
      uint64_t v69 = v68;
      uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
      uint64_t v72 = v71;

      swift_bridgeObjectRetain(v72);
      uint64_t v73 = v241;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v74._uint64_t countAndFlagsBits = 0LL;
      v74._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      uint64_t v75 = *((void *)&v252 + 1);
      uint64_t v76 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
      uint64_t v77 = swift_getDynamicType(v76, v75, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v77);
      uint64_t v248 = v77;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v78._uint64_t countAndFlagsBits = 5972026LL;
      v78._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v78);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v248 = v70;
      uint64_t v249 = v72;
      Swift::String v79 = v73;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      uint64_t v64 = v240;
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v80._uint64_t countAndFlagsBits = 93LL;
      v80._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v80);
      LogMessage.init(stringInterpolation:)(v73);
      swift_bridgeObjectRelease();
    }

    else
    {
      Swift::String v79 = v241;
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v108._uint64_t countAndFlagsBits = 0LL;
      v108._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v108);
      uint64_t v109 = *((void *)&v252 + 1);
      uint64_t v110 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
      uint64_t v111 = swift_getDynamicType(v110, v109, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v111);
      uint64_t v248 = v111;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v112._uint64_t countAndFlagsBits = 58LL;
      v112._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v112);
      LogMessage.init(stringInterpolation:)(v79);
    }

    sub_10000D3A0(&v251);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(41LL, 1LL);
    v113._uint64_t countAndFlagsBits = 0xD000000000000029LL;
    v113._object = (void *)0x800000010016D100LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v113);
    *((void *)&v252 + 1) = &type metadata for Int;
    *(void *)&__int128 v251 = v61;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v251);
    sub_1000102E0((uint64_t)&v251, &qword_1001CAAD0);
    v114._uint64_t countAndFlagsBits = 0LL;
    v114._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v114);
    uint64_t v115 = LogMessage.init(stringInterpolation:)(v79);
    if (qword_1001C7F80 != -1) {
      uint64_t v115 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v116 = static os_log_type_t.debug.getter(v115);
    sub_1000BD1B0(v116, v67);
    swift_bridgeObjectRelease();
    if (v61 == (id)304)
    {
      uint64_t v117 = swift_allocObject(v233, v228, v232);
      *(_OWORD *)(v117 + ++*(void *)(v0 + 16) = v227;
      *((void *)&v252 + 1) = v231;
      *(void *)&__int128 v251 = a4;
      id v118 = (id)AMSLogKey(v117);
      id v119 = v230;
      if (v118)
      {
        uint64_t v120 = v118;
        uint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
        uint64_t v122 = v79;
        uint64_t v124 = v123;

        swift_bridgeObjectRetain(v124);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v125._uint64_t countAndFlagsBits = 0LL;
        v125._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v125);
        uint64_t v126 = *((void *)&v252 + 1);
        uint64_t v127 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
        uint64_t v128 = swift_getDynamicType(v127, v126, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v128);
        uint64_t v248 = v128;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
        sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
        v129._uint64_t countAndFlagsBits = 5972026LL;
        v129._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v129);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v248 = v121;
        uint64_t v249 = v124;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
        sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
        v130._uint64_t countAndFlagsBits = 93LL;
        v130._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v130);
        LogMessage.init(stringInterpolation:)(v122);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v145._uint64_t countAndFlagsBits = 0LL;
        v145._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v145);
        uint64_t v146 = *((void *)&v252 + 1);
        unint64_t v147 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
        uint64_t v148 = swift_getDynamicType(v147, v146, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v148);
        uint64_t v248 = v148;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
        sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
        v149._uint64_t countAndFlagsBits = 58LL;
        v149._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v149);
        LogMessage.init(stringInterpolation:)(v79);
      }

      sub_10000D3A0(&v251);
      uint64_t v150 = LogMessage.init(stringLiteral:)(0xD00000000000003DLL);
      uint64_t v151 = static os_log_type_t.info.getter(v150);
      sub_1000BD1B0(v151, v117);

      swift_bridgeObjectRelease();
LABEL_48:
      (*(void (**)(char *, char *))(v238 + 8))(v237, v236);
      return;
    }

    uint64_t v228 = 2 * v64;
    uint64_t v131 = v234 + 3 * v64;
    uint64_t v132 = a4;
    *(void *)&__int128 v227 = v131;
    if ((v235 & 1) != 0)
    {
      uint64_t v133 = swift_allocObject(v233, v131, v232);
      *(_OWORD *)(v133 + ++*(void *)(v0 + 16) = xmmword_100164240;
      *((void *)&v252 + 1) = v231;
      *(void *)&__int128 v251 = a4;
      id v134 = (id)AMSLogKey(v133);
      if (v134)
      {
        uint64_t v135 = v134;
        uint64_t v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v134);
        uint64_t v138 = v137;

        swift_bridgeObjectRetain(v138);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v139._uint64_t countAndFlagsBits = 0LL;
        v139._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v139);
        uint64_t v140 = *((void *)&v252 + 1);
        uint64_t v141 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
        uint64_t v142 = swift_getDynamicType(v141, v140, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v142);
        uint64_t v248 = v142;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
        sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
        v143._uint64_t countAndFlagsBits = 5972026LL;
        v143._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v143);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v248 = v136;
        uint64_t v249 = v138;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
        sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
        v144._uint64_t countAndFlagsBits = 93LL;
        v144._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v144);
        LogMessage.init(stringInterpolation:)(v79);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v152._uint64_t countAndFlagsBits = 0LL;
        v152._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v152);
        uint64_t v153 = *((void *)&v252 + 1);
        __int128 v154 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
        uint64_t v155 = swift_getDynamicType(v154, v153, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v155);
        uint64_t v248 = v155;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
        sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
        v156._uint64_t countAndFlagsBits = 58LL;
        v156._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v156);
        LogMessage.init(stringInterpolation:)(v79);
      }

      sub_10000D3A0(&v251);
      LogMessage.init(stringLiteral:)(0xD000000000000012LL);
      uint64_t v157 = v236;
      *((void *)&v252 + 1) = v236;
      uint64_t v158 = sub_10000D63C(&v251);
      (*(void (**)(void *, uint64_t, char *))(v238 + 16))(v158, v239, v157);
      static LogMessage.safe(_:)(&v251);
      uint64_t v159 = sub_1000102E0((uint64_t)&v251, &qword_1001CAAD0);
      uint64_t v160 = static os_log_type_t.info.getter(v159);
      sub_1000BD1B0(v160, v133);
      swift_bridgeObjectRelease();
      id v161 = [(id)objc_opt_self(NSFileManager) defaultManager];
      URL.path.getter(v161, v162);
      NSString v163 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)&__int128 v251 = 0LL;
      unsigned int v164 = [v161 removeItemAtPath:v163 error:&v251];

      uint64_t v165 = (void *)v251;
      if (!v164)
      {
LABEL_44:
        id v200 = v165;
        uint64_t v201 = _convertNSErrorToError(_:)(v165);

        swift_willThrow(v202);
        uint64_t v203 = swift_allocObject(v233, v227, v232);
        *(_OWORD *)(v203 + ++*(void *)(v0 + 16) = xmmword_100164240;
        *((void *)&v252 + 1) = v231;
        *(void *)&__int128 v251 = v132;
        id v204 = (id)AMSLogKey(v203);
        if (v204)
        {
          uint64_t v205 = v204;
          uint64_t v206 = static String._unconditionallyBridgeFromObjectiveC(_:)(v204);
          uint64_t v208 = v207;

          swift_bridgeObjectRetain(v208);
          v209 = v241;
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
          v210._uint64_t countAndFlagsBits = 0LL;
          v210._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v210);
          uint64_t v211 = *((void *)&v252 + 1);
          uint64_t v212 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
          uint64_t v213 = swift_getDynamicType(v212, v211, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v213);
          uint64_t v248 = v213;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
          sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
          v214._uint64_t countAndFlagsBits = 5972026LL;
          v214._object = (void *)0xE300000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v214);
          uint64_t MetatypeMetadata = &type metadata for String;
          uint64_t v248 = v206;
          uint64_t v249 = v208;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
          sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
          v215._uint64_t countAndFlagsBits = 93LL;
          v215._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v215);
          LogMessage.init(stringInterpolation:)(v209);
          swift_bridgeObjectRelease();
        }

        else
        {
          uint64_t v216 = v241;
          LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
          v217._uint64_t countAndFlagsBits = 0LL;
          v217._object = (void *)0xE000000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v217);
          uint64_t v218 = *((void *)&v252 + 1);
          uint64_t v219 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
          uint64_t v220 = swift_getDynamicType(v219, v218, 1LL);
          uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v220);
          uint64_t v248 = v220;
          LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
          sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
          v221._uint64_t countAndFlagsBits = 58LL;
          v221._object = (void *)0xE100000000000000LL;
          LogMessage.StringInterpolation.appendLiteral(_:)(v221);
          LogMessage.init(stringInterpolation:)(v216);
        }

        sub_10000D3A0(&v251);
        LogMessage.init(stringLiteral:)(0xD000000000000016LL);
        swift_getErrorValue(v201, v247);
        uint64_t v222 = v245;
        uint64_t v223 = v246;
        *((void *)&v252 + 1) = v246;
        uint64_t v224 = sub_10000D63C(&v251);
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v223 - 8) + 16LL))(v224, v222, v223);
        static LogMessage.safe(_:)(&v251);
        uint64_t v225 = sub_1000102E0((uint64_t)&v251, &qword_1001CAAD0);
        uint64_t v226 = static os_log_type_t.error.getter(v225);
        sub_1000BD1B0(v226, v203);
        swift_bridgeObjectRelease();

        swift_errorRelease(v201);
        goto LABEL_48;
      }

      id v166 = (id)v251;
      Swift::String v79 = v241;
      uint64_t v131 = v227;
    }

    uint64_t v167 = swift_allocObject(v233, v131, v232);
    *(_OWORD *)(v167 + ++*(void *)(v0 + 16) = xmmword_100164240;
    *((void *)&v252 + 1) = v231;
    *(void *)&__int128 v251 = a4;
    id v168 = (id)AMSLogKey(v167);
    if (v168)
    {
      uint64_t v169 = v168;
      uint64_t v170 = v79;
      uint64_t v171 = static String._unconditionallyBridgeFromObjectiveC(_:)(v168);
      uint64_t v173 = v172;

      swift_bridgeObjectRetain(v173);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v174._uint64_t countAndFlagsBits = 0LL;
      v174._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v174);
      uint64_t v175 = *((void *)&v252 + 1);
      uint64_t v176 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
      uint64_t v177 = swift_getDynamicType(v176, v175, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v177);
      uint64_t v248 = v177;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v178._uint64_t countAndFlagsBits = 5972026LL;
      v178._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v178);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v248 = v171;
      uint64_t v249 = v173;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v179._uint64_t countAndFlagsBits = 93LL;
      v179._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v179);
      LogMessage.init(stringInterpolation:)(v170);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v180._uint64_t countAndFlagsBits = 0LL;
      v180._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v180);
      uint64_t v181 = *((void *)&v252 + 1);
      uint64_t v182 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
      uint64_t v183 = swift_getDynamicType(v182, v181, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v183);
      uint64_t v248 = v183;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
      sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
      v184._uint64_t countAndFlagsBits = 58LL;
      v184._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v184);
      LogMessage.init(stringInterpolation:)(v79);
    }

    sub_10000D3A0(&v251);
    LogMessage.init(stringLiteral:)(0xD000000000000011LL);
    Swift::String v185 = v236;
    *((void *)&v252 + 1) = v236;
    uint64_t v186 = sub_10000D63C(&v251);
    uint64_t v187 = v238;
    (*(void (**)(void *, uint64_t, char *))(v238 + 16))(v186, v239, v185);
    static LogMessage.safe(_:)(&v251);
    uint64_t v188 = sub_1000102E0((uint64_t)&v251, &qword_1001CAAD0);
    uint64_t v189 = static os_log_type_t.info.getter(v188);
    sub_1000BD1B0(v189, v167);
    swift_bridgeObjectRelease();
    id v190 = [(id)objc_opt_self(NSFileManager) defaultManager];
    uint64_t v191 = v237;
    URL._bridgeToObjectiveC()((NSURL *)&v253);
    Swift::String v193 = v192;
    URL._bridgeToObjectiveC()(v194);
    uint64_t v196 = v195;
    *(void *)&__int128 v251 = 0LL;
    unsigned int v197 = [v190 moveItemAtURL:v193 toURL:v195 error:&v251];

    uint64_t v165 = (void *)v251;
    if (v197)
    {
      uint64_t v198 = *(void (**)(char *, char *))(v187 + 8);
      id v199 = (id)v251;
      v198(v191, v185);

      return;
    }

    uint64_t v132 = a4;
    goto LABEL_44;
  }

  sub_1000102E0((uint64_t)v21, &qword_1001CB180);
  uint64_t v43 = a2;
LABEL_15:
  uint64_t v81 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v82 = type metadata accessor for LogMessage(0LL);
  uint64_t v83 = swift_allocObject( v81,  ((*(unsigned __int8 *)(*(void *)(v82 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v82 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v82 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v82 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v83 + ++*(void *)(v0 + 16) = xmmword_100164230;
  *((void *)&v252 + 1) = sub_10000D33C(&qword_1001CA690);
  *(void *)&__int128 v251 = a4;
  id v84 = (id)AMSLogKey(*((void *)&v252 + 1));
  if (v84)
  {
    uint64_t v85 = v84;
    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
    uint64_t v88 = v87;

    swift_bridgeObjectRetain(v88);
    uint64_t v89 = v241;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v90._uint64_t countAndFlagsBits = 0LL;
    v90._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v90);
    uint64_t v91 = *((void *)&v252 + 1);
    Swift::String v92 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
    uint64_t v93 = swift_getDynamicType(v92, v91, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v93);
    uint64_t v248 = v93;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
    sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
    v94._uint64_t countAndFlagsBits = 5972026LL;
    v94._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v94);
    uint64_t MetatypeMetadata = &type metadata for String;
    uint64_t v248 = v86;
    uint64_t v249 = v88;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
    sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
    v95._uint64_t countAndFlagsBits = 93LL;
    v95._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v95);
    LogMessage.init(stringInterpolation:)(v89);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v96 = v241;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v97._uint64_t countAndFlagsBits = 0LL;
    v97._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v97);
    uint64_t v98 = *((void *)&v252 + 1);
    uint64_t v99 = sub_10000D37C(&v251, *((uint64_t *)&v252 + 1));
    uint64_t v100 = swift_getDynamicType(v99, v98, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v100);
    uint64_t v248 = v100;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v248);
    sub_1000102E0((uint64_t)&v248, &qword_1001CAAD0);
    v101._uint64_t countAndFlagsBits = 58LL;
    v101._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v101);
    LogMessage.init(stringInterpolation:)(v96);
  }

  sub_10000D3A0(&v251);
  uint64_t v102 = v236;
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(28LL, 1LL);
  v103._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v103._object = (void *)0x800000010016D0E0LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v103);
  if (v43)
  {
    *((void *)&v252 + 1) = sub_10000DAA0(0LL, &qword_1001CA698, &OBJC_CLASS___NSURLResponse_ptr);
    *(void *)&__int128 v251 = v43;
  }

  else
  {
    __int128 v251 = 0u;
    __int128 v252 = 0u;
  }

  id v104 = v43;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v251);
  sub_1000102E0((uint64_t)&v251, &qword_1001CAAD0);
  v105._uint64_t countAndFlagsBits = 41LL;
  v105._object = (void *)0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v105);
  uint64_t v106 = LogMessage.init(stringInterpolation:)(v102);
  if (qword_1001C7F80 != -1) {
    uint64_t v106 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v107 = static os_log_type_t.error.getter(v106);
  sub_1000BD1B0(v107, v83);
  swift_bridgeObjectRelease();
}

uint64_t sub_10005152C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_10000D33C(&qword_1001CB180);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void (**)(char *, void *, void *))(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    uint64_t v13 = type metadata accessor for URL(0LL);
    uint64_t v14 = 0LL;
  }

  else
  {
    uint64_t v13 = type metadata accessor for URL(0LL);
    uint64_t v14 = 1LL;
  }

  sub_10000D5C0((uint64_t)v10, v14, 1LL, v13);
  swift_retain(v11);
  id v15 = a3;
  id v16 = a4;
  v12(v10, a3, a4);

  swift_release();
  return sub_1000102E0((uint64_t)v10, &qword_1001CB180);
}

uint64_t type metadata accessor for DynamicUICache()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd14DynamicUICache);
}

uint64_t sub_100051658()
{
  uint64_t v3 = sub_100029328();
  sub_100051A88(*(void *)(v3 - 8));
  return sub_100051AC0(v1, v0, v2);
}

uint64_t sub_100051694(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(sub_100029328() - 8) + 80LL);
  return sub_10004E788(a1, *(void *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1000516D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000516E0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1000516EC(uint64_t a1)
{
  return sub_100051B98(a1, *(void *)(v1 + 16), 24LL);
}

uint64_t sub_100051718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for JetpackOutputWriter(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100051754()
{
  uint64_t v3 = sub_100029328();
  sub_100051A88(*(void *)(v3 - 8));
  return sub_100051AC0(v1, v0, v2);
}

void sub_100051790()
{
  uint64_t v0 = sub_100051B40();
  sub_10004FF0C(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1000517E0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100051804()
{
  sub_100051B30();
  return sub_100051AA4(v0, v2, v1);
}

void sub_100051850(void *a1)
{
}

uint64_t sub_100051894(uint64_t a1)
{
  return sub_100051B98(a1, *(void *)(v1 + 16), 26LL);
}

uint64_t sub_1000518C0()
{
  return sub_100051AA4(v0, v2, v1);
}

uint64_t sub_100051904(void *a1)
{
  return sub_10004DCE8(a1, *(void *)(v1 + 16));
}

uint64_t sub_100051948(uint64_t a1)
{
  return sub_100051B98(a1, *(void *)(v1 + 16), 21LL);
}

unint64_t sub_100051974()
{
  unint64_t result = qword_1001C8210;
  if (!qword_1001C8210)
  {
    type metadata accessor for AMSBagKey(255LL);
    unint64_t result = swift_getWitnessTable(&unk_1001631B4, v1);
    atomic_store(result, (unint64_t *)&qword_1001C8210);
  }

  return result;
}

id sub_1000519E4()
{
  return sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
}

uint64_t sub_100051A10()
{
  uint64_t v1 = *(void *)(v0 - 152);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 176), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_100051A34(uint64_t a1)
{
  *(void *)(v2 - 10sub_10000D3A0(v0 + 4) = a1;
  *(void *)(v2 - 128) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 128);
}

uint64_t sub_100051A48()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100051A58()
{
  return swift_release(*(void *)(v0 + 16));
}

void *sub_100051A7C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 160) = a1;
  *(void *)(v2 - 152) = v1;
  return _Block_copy((const void *)(v2 - 176));
}

uint64_t sub_100051A88@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v3 + (v2 & ~v1));
}

uint64_t sub_100051AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

uint64_t sub_100051AB4()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100051AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_deallocObject(a1, a2, a3);
}

uint64_t sub_100051ACC()
{
  return swift_release(*(void *)(v0 - 136));
}

uint64_t sub_100051AD8()
{
  return sub_10004D65C(v0);
}

  ;
}

void sub_100051B08()
{
}

  ;
}

id sub_100051B28(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_100051B30()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

uint64_t sub_100051B40()
{
  return v0;
}

void *sub_100051B50()
{
  *(void *)(v1 - 152) = v0;
  return sub_10000D63C((void *)(v1 - 176));
}

uint64_t sub_100051B5C()
{
  return sub_1000102E0(v1 - 144, v0);
}

uint64_t sub_100051B68()
{
  return sub_1000102E0(v1 - 128, v0);
}

uint64_t sub_100051B74()
{
  return sub_1000102E0(v1 - 128, v0);
}

uint64_t sub_100051B80()
{
  return static LogMessage.safe(_:)(v0 - 176);
}

uint64_t sub_100051B8C(uint64_t a1)
{
  return v3(a1, v2, v1);
}

uint64_t sub_100051B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004E4FC(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000LL);
}

void sub_100051BA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v2);
  if (qword_1001C7FD8 != -1) {
    swift_once(&qword_1001C7FD8, sub_1000BD6C0);
  }
  uint64_t v3 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v4 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v5 = swift_allocObject( v3,  ((*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
       + 2LL * *(void *)(v4 + 72),
         *(unsigned __int8 *)(v4 + 80) | 7LL);
  *(_OWORD *)(v5 + ++*(void *)(v0 + 16) = xmmword_100164230;
  id v30 = &type metadata for EngagementScheduleRunner;
  id v6 = (id)AMSLogKey(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v9 = v8;

    swift_bridgeObjectRetain(v9);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    sub_10000DC08();
    uint64_t v10 = v30;
    uint64_t v11 = sub_10000D37C(v29, (uint64_t)v30);
    uint64_t DynamicType = swift_getDynamicType(v11, v10, 1LL);
    swift_getMetatypeMetadata(DynamicType);
    sub_10000DEA4();
    sub_100037DE0();
    v13._uint64_t countAndFlagsBits = 5972026LL;
    v13._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    sub_10000DEA4();
    sub_100037DE0();
    v14._uint64_t countAndFlagsBits = 93LL;
    v14._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    sub_1000522A8();
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    sub_10000DC08();
    id v15 = v30;
    id v16 = sub_10000D37C(v29, (uint64_t)v30);
    uint64_t v17 = swift_getDynamicType(v16, v15, 1LL);
    swift_getMetatypeMetadata(v17);
    sub_10000DEA4();
    sub_100037DE0();
    v18._uint64_t countAndFlagsBits = 58LL;
    v18._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v18);
    sub_1000522A8();
  }

  sub_10000D3A0(v29);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(18LL, 1LL);
  v19._object = (void *)0x800000010016D2A0LL;
  v19._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v20 = (ValueMetadata *)type metadata accessor for ScheduleInfo(0LL);
  id v30 = v20;
  uint64_t v21 = sub_10000D63C(v29);
  sub_10002F70C(a1, (uint64_t)v21);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v29);
  sub_10000E888((uint64_t)v29);
  sub_10000DC08();
  uint64_t v22 = sub_1000522A8();
  uint64_t v23 = static os_log_type_t.default.getter(v22);
  sub_1000BD1B0(v23, v5);
  swift_bridgeObjectRelease();
  uint64_t v24 = a1 + SHIDWORD(v20[1].Kind);
  if (*(_BYTE *)(v24 + *(int *)(type metadata accessor for ScheduleInfo.Metadata(0LL) + 52)))
  {
    [objc_allocWithZone(AMSEngagementSyncRequest) init];
    uint64_t v25 = sub_10000D33C(&qword_1001C8EA0);
    *(_OWORD *)(swift_allocObject(v25, 48LL, 7LL) + ++*(void *)(v0 + 16) = xmmword_100164220;
    __asm { BR              X10 }
  }

  id v26 = [objc_allocWithZone(AMSEngagementEnqueueRequest) init];
  id v27 = [(id)objc_opt_self(AMSProcessInfo) currentProcess];
  [v26 setClientInfo:v27];

  uint64_t v28 = sub_10000D33C(&qword_1001CD430);
  *(_OWORD *)(swift_allocObject(v28, 40LL, 7LL) + ++*(void *)(v0 + 16) = xmmword_100165690;
  __asm { BR              X9 }

void sub_1000521C0(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  [a2 setApps:isa];
}

void sub_100052218(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [a2 setEvents:isa];
}

ValueMetadata *type metadata accessor for EngagementScheduleRunner()
{
  return &type metadata for EngagementScheduleRunner;
}

  ;
}

uint64_t sub_1000522A8()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

  ;
}

  ;
}

void *sub_1000522E4(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    id v6 = (uint64_t *)(v5 + 40);
    uint64_t v7 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v8 = *v6;
      v14[0] = *(v6 - 1);
      v14[1] = v8;
      swift_bridgeObjectRetain(v8);
      sub_100056714(v14, a2, &v15);
      if (v2) {
        break;
      }
      swift_bridgeObjectRelease();
      char v9 = v15;
      if (v15 != 4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
        {
          sub_100013FC4();
          uint64_t v7 = v11;
        }

        unint64_t v10 = v7[2];
        if (v10 >= v7[3] >> 1)
        {
          sub_100013FC4();
          uint64_t v7 = v12;
        }

        v7[2] = v10 + 1;
        *((_BYTE *)v7 + v10 + 32) = v9;
      }

      v6 += 2;
      if (!--v4)
      {

        swift_bridgeObjectRelease();
        return v7;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {

    return _swiftEmptyArrayStorage;
  }

  return v7;
}

void *sub_100052444(uint64_t a1, char *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  id v6 = _swiftEmptyArrayStorage;
  unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
  if (v5)
  {
    swift_bridgeObjectRetain(a1);
    uint64_t v8 = 0LL;
    while (1)
    {
      unsigned __int8 v17 = *(_BYTE *)(a1 + v8 + 32);
      sub_10005725C(&v17, a2, a3, &v16);
      if (v3) {
        break;
      }
      uint64_t v10 = v16;
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
        unint64_t v12 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v11 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v12 >= v11 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1);
        }
        uint64_t v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
        specialized Array._endMutation()(v13);
      }

      if (v5 == ++v8)
      {
        swift_bridgeObjectRelease();
        id v6 = (void *)v18;
        goto LABEL_11;
      }
    }

    swift_bridgeObjectRelease();
    id v6 = (void *)v18;

    swift_bridgeObjectRelease();
  }

  else
  {
LABEL_11:
  }

  return v6;
}

void *sub_100052590(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    unint64_t v22 = v4 & 0xC000000000000001LL;
    id v6 = _swiftEmptyArrayStorage;
    uint64_t v7 = 4LL;
    uint64_t v20 = v5;
    uint64_t v21 = v4;
    while (1)
    {
      id v8 = v22 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      Swift::String v37 = v8;
      sub_100056258(&v37, a2, (uint64_t)&v29);
      if (v3)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      uint64_t v11 = v30;
      if (v30)
      {
        __int16 v12 = v29;
        __int128 v26 = v32;
        __int128 v27 = v31;
        uint64_t v24 = v34;
        char v13 = v35;
        uint64_t v28 = v36;
        uint64_t v25 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        {
          sub_1000142BC();
          id v6 = v16;
        }

        unint64_t v14 = v6[2];
        if (v14 >= v6[3] >> 1)
        {
          sub_1000142BC();
          id v6 = v17;
        }

        _OWORD v6[2] = v14 + 1;
        char v15 = &v6[10 * v14];
        *((_BYTE *)v15 + 32) = v12 & 1;
        *((_BYTE *)v15 + 33) = HIBYTE(v12);
        v15[5] = v11;
        *((_OWORD *)v15 + 3) = v27;
        *((_OWORD *)v15 + sub_10000D3A0(v0 + 4) = v26;
        v15[10] = v25;
        v15[11] = v24;
        *((_BYTE *)v15 + 96) = v13;
        v15[13] = v28;
        uint64_t v5 = v20;
        uint64_t v4 = v21;
      }

      ++v7;
      if (v10 == v5)
      {

        swift_bridgeObjectRelease();
        return v6;
      }
    }

    __break(1u);
LABEL_19:
    if (v4 < 0) {
      uint64_t v18 = v4;
    }
    else {
      uint64_t v18 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
  }

  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1000527C0(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v5 = v4;
  id v6 = a2;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    uint64_t v8 = a1;
    swift_bridgeObjectRetain(a1);
    uint64_t v9 = 0LL;
    uint64_t v10 = _swiftEmptyArrayStorage;
    int v37 = a3 & 1;
    uint64_t v21 = v6;
    uint64_t v22 = v11;
    while (1)
    {
      unsigned __int8 v38 = *(_BYTE *)(v8 + v9 + 32);
      sub_100056A74(v6, &v38, v37, (uint64_t)a4, (uint64_t)&v29);
      if (v5) {
        break;
      }
      uint64_t v12 = v30;
      if (v30)
      {
        __int16 v13 = v29;
        __int128 v25 = v32;
        __int128 v26 = v31;
        uint64_t v15 = v33;
        uint64_t v14 = v34;
        uint64_t v27 = v36;
        char v28 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
        {
          sub_1000142BC();
          uint64_t v10 = v18;
        }

        unint64_t v16 = v10[2];
        if (v16 >= v10[3] >> 1)
        {
          sub_1000142BC();
          uint64_t v10 = v19;
        }

        v10[2] = v16 + 1;
        unsigned __int8 v17 = &v10[10 * v16];
        *((_BYTE *)v17 + 32) = v13 & 1;
        *((_BYTE *)v17 + 33) = HIBYTE(v13);
        v17[5] = v12;
        *((_OWORD *)v17 + 3) = v26;
        *((_OWORD *)v17 + sub_10000D3A0(v0 + 4) = v25;
        v17[10] = v15;
        v17[11] = v14;
        *((_BYTE *)v17 + 96) = v28;
        v17[13] = v27;
        id v6 = v21;
        uint64_t v8 = v22;
      }

      if (v23 == ++v9)
      {

        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {

    uint64_t v10 = _swiftEmptyArrayStorage;
LABEL_14:
  }

  return v10;
}

void sub_100052990()
{
  uint64_t v8 = sub_100067278();
  uint64_t v9 = sub_1000674AC(v8);
  __chkstk_darwin(v9);
  sub_1000672D0();
  uint64_t v11 = __chkstk_darwin(v10);
  sub_10006748C(v11, v12, v13, v14, v15, v16, v17, v18, v36);
  uint64_t v19 = sub_1000671CC((uint64_t)&unk_1001AADE8);
  sub_100067A3C(v19);
  id v20 = objc_allocWithZone(&OBJC_CLASS___NSLock);
  uint64_t v21 = sub_10006758C();
  id v22 = sub_100067888(v21, "init");
  if ((v0 & 1) != 0) {
    goto LABEL_9;
  }
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  sub_100067880();
  sub_100067670();
  if (v24)
  {
    __break(1u);
  }

  else if (v23 > -9.22337204e18)
  {
    sub_100067660();
    if (!v26) {
      goto LABEL_12;
    }
    sub_100067A08(v25);
    sub_100067410(v27, enum case for DispatchTimeInterval.seconds(_:));
    sub_10006736C();
    sub_100067400();
    sub_100067350();
    uint64_t v28 = sub_1000671CC((uint64_t)&unk_1001AAE60);
    *(void *)(v28 + ++*(void *)(v0 + 16) = v22;
    *(void *)(v28 + 2sub_10000D3A0(v0 + 4) = v1;
    sub_100067344((uint64_t)sub_100021A3C);
    sub_100067858();
    sub_10002FAA0();
    sub_100067578();
    sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    sub_100067990();
    sub_1000673F0();
    sub_1000673F8((unint64_t *)&qword_1001CD3F0);
    sub_1000671D8(v29);
    sub_1000672B8();
    sub_100067534();
    sub_100067330();
    sub_1000673D0();
    sub_10006753C();
    sub_10006752C();
LABEL_9:
    uint64_t v30 = sub_1000671CC((uint64_t)&unk_1001AAE10);
    sub_1000679D0(v30);
    uint64_t v31 = sub_1000671CC((uint64_t)&unk_1001AAE38);
    id v32 = sub_10006756C(v31);
    sub_1000672B0(v1);
    id v33 = v32;
    sub_1000673C0();
    sub_100025894();

    sub_10001A2D8();
    sub_100037230();
    sub_10000DD84();
    return;
  }

  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_100052BF8()
{
  uint64_t v8 = sub_100067278();
  uint64_t v9 = sub_1000674AC(v8);
  __chkstk_darwin(v9);
  sub_1000672D0();
  uint64_t v11 = __chkstk_darwin(v10);
  sub_10006748C(v11, v12, v13, v14, v15, v16, v17, v18, v36);
  uint64_t v19 = sub_1000671CC((uint64_t)&unk_1001AA938);
  sub_100067A3C(v19);
  id v20 = objc_allocWithZone(&OBJC_CLASS___NSLock);
  uint64_t v21 = sub_10006758C();
  id v22 = sub_100067888(v21, "init");
  if ((v0 & 1) != 0) {
    goto LABEL_9;
  }
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  sub_100067880();
  sub_100067670();
  if (v24)
  {
    __break(1u);
  }

  else if (v23 > -9.22337204e18)
  {
    sub_100067660();
    if (!v26) {
      goto LABEL_12;
    }
    sub_100067A08(v25);
    sub_100067410(v27, enum case for DispatchTimeInterval.seconds(_:));
    sub_10006736C();
    sub_100067400();
    sub_100067350();
    uint64_t v28 = sub_1000671CC((uint64_t)&unk_1001AA9B0);
    *(void *)(v28 + ++*(void *)(v0 + 16) = v22;
    *(void *)(v28 + 2sub_10000D3A0(v0 + 4) = v1;
    sub_100067344((uint64_t)sub_100021A3C);
    sub_100067858();
    sub_10002FAA0();
    sub_100067578();
    sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    sub_100067990();
    sub_1000673F0();
    sub_1000673F8((unint64_t *)&qword_1001CD3F0);
    sub_1000671D8(v29);
    sub_1000672B8();
    sub_100067534();
    sub_100067330();
    sub_1000673D0();
    sub_10006753C();
    sub_10006752C();
LABEL_9:
    uint64_t v30 = sub_1000671CC((uint64_t)&unk_1001AA960);
    sub_1000679D0(v30);
    uint64_t v31 = sub_1000671CC((uint64_t)&unk_1001AA988);
    id v32 = sub_10006756C(v31);
    sub_1000672B0(v1);
    id v33 = v32;
    sub_1000673C0();
    sub_100025894();

    sub_10001A2D8();
    sub_100037230();
    sub_10000DD84();
    return;
  }

  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_100052E60()
{
  uint64_t v8 = sub_100067278();
  uint64_t v9 = sub_1000674AC(v8);
  __chkstk_darwin(v9);
  sub_1000672D0();
  uint64_t v11 = __chkstk_darwin(v10);
  sub_10006748C(v11, v12, v13, v14, v15, v16, v17, v18, v36);
  uint64_t v19 = sub_1000671CC((uint64_t)&unk_1001AA758);
  sub_100067A3C(v19);
  id v20 = objc_allocWithZone(&OBJC_CLASS___NSLock);
  uint64_t v21 = sub_10006758C();
  id v22 = sub_100067888(v21, "init");
  if ((v0 & 1) != 0) {
    goto LABEL_9;
  }
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  sub_100067880();
  sub_100067670();
  if (v24)
  {
    __break(1u);
  }

  else if (v23 > -9.22337204e18)
  {
    sub_100067660();
    if (!v26) {
      goto LABEL_12;
    }
    sub_100067A08(v25);
    sub_100067410(v27, enum case for DispatchTimeInterval.seconds(_:));
    sub_10006736C();
    sub_100067400();
    sub_100067350();
    uint64_t v28 = sub_1000671CC((uint64_t)&unk_1001AA7D0);
    *(void *)(v28 + ++*(void *)(v0 + 16) = v22;
    *(void *)(v28 + 2sub_10000D3A0(v0 + 4) = v1;
    sub_100067344((uint64_t)sub_100021A3C);
    sub_100067858();
    sub_10002FAA0();
    sub_100067578();
    sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    sub_100067990();
    sub_1000673F0();
    sub_1000673F8((unint64_t *)&qword_1001CD3F0);
    sub_1000671D8(v29);
    sub_1000672B8();
    sub_100067534();
    sub_100067330();
    sub_1000673D0();
    sub_10006753C();
    sub_10006752C();
LABEL_9:
    uint64_t v30 = sub_1000671CC((uint64_t)&unk_1001AA780);
    sub_1000679D0(v30);
    uint64_t v31 = sub_1000671CC((uint64_t)&unk_1001AA7A8);
    id v32 = sub_10006756C(v31);
    sub_1000672B0(v1);
    id v33 = v32;
    sub_1000673C0();
    sub_100025894();

    sub_10001A2D8();
    sub_100037230();
    sub_10000DD84();
    return;
  }

  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t sub_1000530C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  double v52 = *(double *)&a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  __chkstk_darwin(v9);
  Swift::String v49 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v53 = type metadata accessor for DispatchTime(0LL);
  uint64_t v17 = *(void *)(v53 - 8);
  uint64_t v18 = __chkstk_darwin(v53);
  id v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  Swift::String v45 = (char *)v44 - v21;
  uint64_t v22 = swift_allocObject(&unk_1001AAD20, 32LL, 7LL);
  *(void *)(v22 + ++*(void *)(v0 + 16) = a3;
  *(void *)(v22 + 2sub_10000D3A0(v0 + 4) = a4;
  id v23 = objc_allocWithZone(&OBJC_CLASS___NSLock);
  swift_retain(a4);
  id v24 = [v23 init];
  double v25 = v24;
  if ((a2 & 1) != 0) {
    goto LABEL_8;
  }
  v44[1] = v5;
  if (qword_1001C80A8 != -1) {
    id v24 = (id)swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  uint64_t result = static DispatchTime.now()(v24);
  if ((~*(void *)&v52 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  if (v52 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  if (v52 < 9.22337204e18)
  {
    *uint64_t v16 = (uint64_t)v52;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))( v16,  enum case for DispatchTimeInterval.seconds(_:),  v13);
    uint64_t v27 = v45;
    + infix(_:_:)(v20, v16);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    double v52 = *(double *)(v17 + 8);
    (*(void (**)(char *, uint64_t))&v52)(v20, v53);
    uint64_t v28 = swift_allocObject(&unk_1001AAD98, 32LL, 7LL);
    *(void *)(v28 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v28 + 2sub_10000D3A0(v0 + 4) = v22;
    aBlock[4] = sub_1000663A8;
    uint64_t v56 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100021A3C;
    aBlock[3] = &unk_1001AADB0;
    uint64_t v29 = _Block_copy(aBlock);
    id v30 = v25;
    uint64_t v31 = swift_retain(v22);
    id v32 = v46;
    static DispatchQoS.unspecified.getter(v31);
    uint64_t v54 = _swiftEmptyArrayStorage;
    sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v34 = v33;
    uint64_t v35 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
    sub_1000253B0((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
    uint64_t v36 = v49;
    uint64_t v37 = v35;
    uint64_t v38 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v37, v39, v51, v34);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v27, v32, v36, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
    (*(void (**)(char *, uint64_t))&v52)(v27, v53);
    swift_release(v56);
LABEL_8:
    uint64_t v40 = swift_allocObject(&unk_1001AAD48, 32LL, 7LL);
    *(void *)(v40 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v40 + 2sub_10000D3A0(v0 + 4) = v22;
    uint64_t v41 = swift_allocObject(&unk_1001AAD70, 32LL, 7LL);
    *(void *)(v41 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v41 + 2sub_10000D3A0(v0 + 4) = v22;
    id v42 = v25;
    swift_retain_n(v22, 2LL);
    id v43 = v42;
    sub_100062574();
    swift_release(v22);

    swift_release(v40);
    return swift_release(v41);
  }

uint64_t sub_100053524(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  double v52 = *(double *)&a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  __chkstk_darwin(v9);
  Swift::String v49 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v53 = type metadata accessor for DispatchTime(0LL);
  uint64_t v17 = *(void *)(v53 - 8);
  uint64_t v18 = __chkstk_darwin(v53);
  id v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  Swift::String v45 = (char *)v44 - v21;
  uint64_t v22 = swift_allocObject(&unk_1001AA348, 32LL, 7LL);
  *(void *)(v22 + ++*(void *)(v0 + 16) = a3;
  *(void *)(v22 + 2sub_10000D3A0(v0 + 4) = a4;
  id v23 = objc_allocWithZone(&OBJC_CLASS___NSLock);
  swift_retain(a4);
  id v24 = [v23 init];
  double v25 = v24;
  if ((a2 & 1) != 0) {
    goto LABEL_8;
  }
  v44[1] = v5;
  if (qword_1001C80A8 != -1) {
    id v24 = (id)swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  uint64_t result = static DispatchTime.now()(v24);
  if ((~*(void *)&v52 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  if (v52 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  if (v52 < 9.22337204e18)
  {
    *uint64_t v16 = (uint64_t)v52;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))( v16,  enum case for DispatchTimeInterval.seconds(_:),  v13);
    uint64_t v27 = v45;
    + infix(_:_:)(v20, v16);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    double v52 = *(double *)(v17 + 8);
    (*(void (**)(char *, uint64_t))&v52)(v20, v53);
    uint64_t v28 = swift_allocObject(&unk_1001AA3C0, 32LL, 7LL);
    *(void *)(v28 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v28 + 2sub_10000D3A0(v0 + 4) = v22;
    aBlock[4] = sub_1000663A8;
    uint64_t v56 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100021A3C;
    aBlock[3] = &unk_1001AA3D8;
    uint64_t v29 = _Block_copy(aBlock);
    id v30 = v25;
    uint64_t v31 = swift_retain(v22);
    id v32 = v46;
    static DispatchQoS.unspecified.getter(v31);
    uint64_t v54 = _swiftEmptyArrayStorage;
    sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v34 = v33;
    uint64_t v35 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
    sub_1000253B0((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
    uint64_t v36 = v49;
    uint64_t v37 = v35;
    uint64_t v38 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v37, v39, v51, v34);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v27, v32, v36, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
    (*(void (**)(char *, uint64_t))&v52)(v27, v53);
    swift_release(v56);
LABEL_8:
    uint64_t v40 = swift_allocObject(&unk_1001AA370, 32LL, 7LL);
    *(void *)(v40 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v40 + 2sub_10000D3A0(v0 + 4) = v22;
    uint64_t v41 = swift_allocObject(&unk_1001AA398, 32LL, 7LL);
    *(void *)(v41 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v41 + 2sub_10000D3A0(v0 + 4) = v22;
    id v42 = v25;
    swift_retain_n(v22, 2LL);
    id v43 = v42;
    sub_100062574();
    swift_release(v22);

    swift_release(v40);
    return swift_release(v41);
  }

uint64_t sub_100053980(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  double v52 = *(double *)&a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  __chkstk_darwin(v9);
  Swift::String v49 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v53 = type metadata accessor for DispatchTime(0LL);
  uint64_t v17 = *(void *)(v53 - 8);
  uint64_t v18 = __chkstk_darwin(v53);
  id v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  Swift::String v45 = (char *)v44 - v21;
  uint64_t v22 = swift_allocObject(&unk_1001AA280, 32LL, 7LL);
  *(void *)(v22 + ++*(void *)(v0 + 16) = a3;
  *(void *)(v22 + 2sub_10000D3A0(v0 + 4) = a4;
  id v23 = objc_allocWithZone(&OBJC_CLASS___NSLock);
  swift_retain(a4);
  id v24 = [v23 init];
  double v25 = v24;
  if ((a2 & 1) != 0) {
    goto LABEL_8;
  }
  v44[1] = v5;
  if (qword_1001C80A8 != -1) {
    id v24 = (id)swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  uint64_t result = static DispatchTime.now()(v24);
  if ((~*(void *)&v52 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  if (v52 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  if (v52 < 9.22337204e18)
  {
    *uint64_t v16 = (uint64_t)v52;
    (*(void (**)(void *, void, uint64_t))(v14 + 104))( v16,  enum case for DispatchTimeInterval.seconds(_:),  v13);
    uint64_t v27 = v45;
    + infix(_:_:)(v20, v16);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
    double v52 = *(double *)(v17 + 8);
    (*(void (**)(char *, uint64_t))&v52)(v20, v53);
    uint64_t v28 = swift_allocObject(&unk_1001AA2F8, 32LL, 7LL);
    *(void *)(v28 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v28 + 2sub_10000D3A0(v0 + 4) = v22;
    aBlock[4] = sub_1000663A8;
    uint64_t v56 = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100021A3C;
    aBlock[3] = &unk_1001AA310;
    uint64_t v29 = _Block_copy(aBlock);
    id v30 = v25;
    uint64_t v31 = swift_retain(v22);
    id v32 = v46;
    static DispatchQoS.unspecified.getter(v31);
    uint64_t v54 = _swiftEmptyArrayStorage;
    sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v34 = v33;
    uint64_t v35 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
    sub_1000253B0((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
    uint64_t v36 = v49;
    uint64_t v37 = v35;
    uint64_t v38 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v37, v39, v51, v34);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v27, v32, v36, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
    (*(void (**)(char *, uint64_t))&v52)(v27, v53);
    swift_release(v56);
LABEL_8:
    uint64_t v40 = swift_allocObject(&unk_1001AA2A8, 32LL, 7LL);
    *(void *)(v40 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v40 + 2sub_10000D3A0(v0 + 4) = v22;
    uint64_t v41 = swift_allocObject(&unk_1001AA2D0, 32LL, 7LL);
    *(void *)(v41 + ++*(void *)(v0 + 16) = v25;
    *(void *)(v41 + 2sub_10000D3A0(v0 + 4) = v22;
    id v42 = v25;
    swift_retain_n(v22, 2LL);
    id v43 = v42;
    sub_100062574();
    swift_release(v22);

    swift_release(v40);
    return swift_release(v41);
  }

void sub_100053DDC()
{
  uint64_t v8 = sub_100067278();
  uint64_t v9 = sub_1000674AC(v8);
  __chkstk_darwin(v9);
  sub_1000672D0();
  uint64_t v11 = __chkstk_darwin(v10);
  sub_10006748C(v11, v12, v13, v14, v15, v16, v17, v18, v36);
  uint64_t v19 = sub_1000671CC((uint64_t)&unk_1001AAA00);
  sub_100067A3C(v19);
  id v20 = objc_allocWithZone(&OBJC_CLASS___NSLock);
  uint64_t v21 = sub_10006758C();
  id v22 = sub_100067888(v21, "init");
  if ((v0 & 1) != 0) {
    goto LABEL_9;
  }
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  sub_100067880();
  sub_100067670();
  if (v24)
  {
    __break(1u);
  }

  else if (v23 > -9.22337204e18)
  {
    sub_100067660();
    if (!v26) {
      goto LABEL_12;
    }
    sub_100067A08(v25);
    sub_100067410(v27, enum case for DispatchTimeInterval.seconds(_:));
    sub_10006736C();
    sub_100067400();
    sub_100067350();
    uint64_t v28 = sub_1000671CC((uint64_t)&unk_1001AAA78);
    *(void *)(v28 + ++*(void *)(v0 + 16) = v22;
    *(void *)(v28 + 2sub_10000D3A0(v0 + 4) = v1;
    sub_100067344((uint64_t)sub_100021A3C);
    sub_100067858();
    sub_10002FAA0();
    sub_100067578();
    sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    sub_100067990();
    sub_1000673F0();
    sub_1000673F8((unint64_t *)&qword_1001CD3F0);
    sub_1000671D8(v29);
    sub_1000672B8();
    sub_100067534();
    sub_100067330();
    sub_1000673D0();
    sub_10006753C();
    sub_10006752C();
LABEL_9:
    uint64_t v30 = sub_1000671CC((uint64_t)&unk_1001AAA28);
    sub_1000679D0(v30);
    uint64_t v31 = sub_1000671CC((uint64_t)&unk_1001AAA50);
    id v32 = sub_10006756C(v31);
    sub_1000672B0(v1);
    id v33 = v32;
    sub_1000673C0();
    sub_100025894();

    sub_10001A2D8();
    sub_100037230();
    sub_10000DD84();
    return;
  }

  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_100054044(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000D33C(&qword_1001CA758);
    uint64_t v4 = (void *)sub_100067310();
  }

  else
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
  }

  sub_1000675C4();
  uint64_t v7 = v6 & v5;
  sub_100067918();
  sub_100067904();
  uint64_t v8 = (char *)(v4 + 8);
  sub_10000DEE0();
  sub_10000DFF4();
  uint64_t v9 = 0LL;
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  v7 &= v7 - 1;
  while (1)
  {
    sub_100067A88();
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    sub_10000DA1C(v25 + 32 * v24, (uint64_t)v44);
    *(void *)&__int128 v43 = v23;
    *((void *)&v43 + 1) = v22;
    v41[2] = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    *(void *)&v41[0] = v23;
    *((void *)&v41[0] + 1) = v22;
    sub_10000DF08();
    sub_100037684( (uint64_t)&v35,  (uint64_t)v41,  (uint64_t)&type metadata for String,  (uint64_t)&type metadata for AnyHashable);
    sub_10000DA58(v42, v1);
    __int128 v38 = v35;
    __int128 v39 = v36;
    uint64_t v40 = v37;
    sub_10000DA58(v1, v2);
    __int128 v35 = v38;
    __int128 v36 = v39;
    uint64_t v37 = v40;
    sub_10000DA58(v2, v41);
    sub_10000DA58(v41, &v38);
    sub_100067790();
    sub_100067890();
    if (((v28 << v27) & ~*(void *)&v8[8 * v26]) == 0)
    {
      sub_1000372A0();
      while (++v31 != v32 || (v30 & 1) == 0)
      {
        BOOL v33 = v31 == v32;
        if (v31 == v32) {
          uint64_t v31 = 0LL;
        }
        v30 |= v33;
        if (*(void *)&v8[8 * v31] != -1LL)
        {
          sub_100037254();
          goto LABEL_36;
        }
      }

      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }

    sub_100037268();
LABEL_36:
    *(void *)&v8[(v29 >> 3) & 0x1FFFFFFFFFFFFFF8LL] |= 1LL << v29;
    uint64_t v34 = v4[6] + 40 * v29;
    *(_OWORD *)uint64_t v34 = v35;
    *(_OWORD *)(v34 + ++*(void *)(v0 + 16) = v36;
    *(void *)(v34 + 32) = v37;
    sub_10000DA58(&v38, (_OWORD *)(v4[7] + 32 * v29));
    sub_100067870();
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    if (__OFADD__(v9, 1LL)) {
      goto LABEL_40;
    }
    sub_1000678F8();
    if (v10 == v11) {
      goto LABEL_38;
    }
    sub_1000677E8();
    if (!v12)
    {
      sub_1000674F8();
      if (v10 == v11) {
        goto LABEL_38;
      }
      sub_1000676D0();
      if (!v13)
      {
        sub_1000674F8();
        if (v10 == v11) {
          goto LABEL_38;
        }
        sub_1000676D0();
        if (!v14)
        {
          sub_1000674F8();
          if (v10 == v11) {
            goto LABEL_38;
          }
          sub_1000676D0();
          if (!v15)
          {
            sub_1000678F8();
            if (v10 == v11)
            {
LABEL_38:
              sub_100037230();
              sub_100067640(a1);
              return;
            }

            if (!*(void *)(a1 + 64 + 8 * v16)) {
              break;
            }
          }
        }
      }
    }

void sub_100054328(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000D33C(&qword_1001CA758);
    uint64_t v2 = (void *)sub_100067310();
  }

  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }

  uint64_t v3 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1LL << -(char)v3);
  }
  else {
    uint64_t v4 = -1LL;
  }
  uint64_t v5 = v4 & *(void *)(a1 + 64);
  sub_100067918();
  uint64_t v6 = v2 + 8;
  sub_10000DEE0();
  sub_10000DFF4();
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  sub_100067840();
  while (1)
  {
    sub_100067A88();
    uint64_t v16 = v15[1];
    uint64_t v19 = *(void *)(v18 + 8 * v17);
    *(void *)&v37[0] = *v15;
    *((void *)&v37[0] + 1) = v16;
    swift_bridgeObjectRetain(v16);
    sub_10000DF08();
    sub_100037684( (uint64_t)&v29,  (uint64_t)v37,  (uint64_t)&type metadata for String,  (uint64_t)&type metadata for AnyHashable);
    uint64_t v28 = v19;
    uint64_t v20 = sub_10000D33C(&qword_1001C8F18);
    sub_100037684((uint64_t)v32, (uint64_t)&v28, v20, (uint64_t)&type metadata for Any + 8);
    __int128 v33 = v29;
    __int128 v34 = v30;
    uint64_t v35 = v31;
    sub_10000DA58(v32, v36);
    __int128 v29 = v33;
    __int128 v30 = v34;
    uint64_t v31 = v35;
    sub_10000DA58(v36, v37);
    sub_10000DA58(v37, &v33);
    unint64_t v21 = sub_100067790() & ~(-1LL << *((_BYTE *)v2 + 32));
    if (((-1LL << v21) & ~v6[v21 >> 6]) == 0) {
      break;
    }
    sub_100037268();
LABEL_38:
    *(void *)((char *)v6 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v22;
    uint64_t v27 = v2[6] + 40 * v22;
    *(_OWORD *)uint64_t v27 = v29;
    *(_OWORD *)(v27 + ++*(void *)(v0 + 16) = v30;
    *(void *)(v27 + 32) = v31;
    sub_10000DA58(&v33, (_OWORD *)(v2[7] + 32 * v22));
    sub_100067870();
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    sub_1000678F8();
    if (v7 == v8)
    {
LABEL_40:
      sub_100037230();
      sub_100067640(a1);
      return;
    }

    sub_1000677E8();
    if (!v9)
    {
      sub_1000674F8();
      if (v7 == v8) {
        goto LABEL_40;
      }
      sub_1000676D0();
      if (!v10)
      {
        sub_1000674F8();
        if (v7 == v8) {
          goto LABEL_40;
        }
        sub_1000676D0();
        if (!v11)
        {
          sub_1000674F8();
          if (v7 == v8) {
            goto LABEL_40;
          }
          sub_1000676D0();
          if (!v12)
          {
            sub_1000678F8();
            if (v7 == v8) {
              goto LABEL_40;
            }
            if (!*(void *)(a1 + 64 + 8 * v13))
            {
              while (!__OFADD__(v13, 1LL))
              {
                sub_1000674F8();
                if (v7 == v8) {
                  goto LABEL_40;
                }
                sub_1000677C4();
                if (v14) {
                  goto LABEL_28;
                }
              }

              goto LABEL_42;
            }
          }
        }
      }
    }

uint64_t sub_100054610(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_10000D33C(&qword_1001CA758);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
  }

  uint64_t v32 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(63 - v4) >> 6;
  char v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  uint64_t result = swift_retain(v3);
  int64_t v9 = 0LL;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  while (1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v11);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)&v42[0] = v18;
    *((void *)&v42[0] + 1) = v17;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v20);
    swift_dynamicCast(&v34, v42, &type metadata for String, &type metadata for AnyHashable, 7LL);
    v33[0] = v21;
    v33[1] = v20;
    swift_dynamicCast(v37, v33, &type metadata for String, (char *)&type metadata for Any + 8, 7LL);
    __int128 v38 = v34;
    __int128 v39 = v35;
    uint64_t v40 = v36;
    sub_10000DA58(v37, v41);
    __int128 v34 = v38;
    __int128 v35 = v39;
    uint64_t v36 = v40;
    sub_10000DA58(v41, v42);
    sub_10000DA58(v42, &v38);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v3[5]);
    uint64_t v22 = -1LL << *((_BYTE *)v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1LL << v23) & ~v7[v23 >> 6]) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0LL;
        }
        v26 |= v28;
        uint64_t v29 = v7[v24];
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_34;
        }
      }

      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    unint64_t v25 = __clz(__rbit64((-1LL << v23) & ~v7[v23 >> 6])) | v23 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_34:
    *(void *)((char *)v7 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v25;
    uint64_t v30 = v3[6] + 40 * v25;
    *(_OWORD *)uint64_t v30 = v34;
    *(_OWORD *)(v30 + ++*(void *)(v0 + 16) = v35;
    *(void *)(v30 + 32) = v36;
    uint64_t result = (uint64_t)sub_10000DA58(&v38, (_OWORD *)(v3[7] + 32 * v25));
    ++v3[2];
    if (v6) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1LL)) {
      goto LABEL_38;
    }
    if (v12 >= v31) {
      goto LABEL_36;
    }
    unint64_t v13 = *(void *)(v32 + 8 * v12);
    int64_t v14 = v9 + 1;
    if (!v13)
    {
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v31) {
        goto LABEL_36;
      }
      unint64_t v13 = *(void *)(v32 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 3;
        if (v9 + 3 >= v31) {
          goto LABEL_36;
        }
        unint64_t v13 = *(void *)(v32 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 4;
          if (v9 + 4 >= v31) {
            goto LABEL_36;
          }
          unint64_t v13 = *(void *)(v32 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }

void sub_1000549C4(void *a1)
{
  if (a1[2])
  {
    sub_10000D33C(&qword_1001CA758);
    uint64_t v4 = (void *)sub_100067310();
  }

  else
  {
    uint64_t v4 = _swiftEmptyDictionarySingleton;
  }

  sub_1000675C4();
  uint64_t v7 = v6 & v5;
  sub_100067904();
  char v8 = v4 + 8;
  sub_10000DEE0();
  sub_10000DFF4();
  if (!v7) {
    goto LABEL_6;
  }
LABEL_5:
  sub_100067840();
  while (1)
  {
    uint64_t v18 = *(void *)(a1[6] + 8 * v9);
    sub_10000DA1C(a1[7] + 32 * v9, (uint64_t)v37 + 8);
    *(void *)&v37[0] = v18;
    v35[0] = v37[0];
    v35[1] = v37[1];
    uint64_t v36 = v38;
    *(void *)&v34[0] = v18;
    sub_100037684( (uint64_t)&v28,  (uint64_t)v34,  (uint64_t)&type metadata for Double,  (uint64_t)&type metadata for AnyHashable);
    sub_10000DA58((_OWORD *)((char *)v35 + 8), v1);
    __int128 v31 = v28;
    __int128 v32 = v29;
    uint64_t v33 = v30;
    sub_10000DA58(v1, v2);
    __int128 v28 = v31;
    __int128 v29 = v32;
    uint64_t v30 = v33;
    sub_10000DA58(v2, v34);
    sub_10000DA58(v34, &v31);
    sub_100067790();
    sub_100067890();
    if (((v21 << v20) & ~v8[v19]) == 0) {
      break;
    }
    sub_100037268();
LABEL_35:
    *(void *)((char *)v8 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v22;
    uint64_t v27 = v4[6] + 40 * v22;
    *(_OWORD *)uint64_t v27 = v28;
    *(_OWORD *)(v27 + ++*(void *)(v0 + 16) = v29;
    *(void *)(v27 + 32) = v30;
    sub_10000DA58(&v31, (_OWORD *)(v4[7] + 32 * v22));
    sub_100067870();
    if (v7) {
      goto LABEL_5;
    }
LABEL_6:
    sub_1000676DC();
    if (v10 == v11)
    {
LABEL_37:
      sub_100037230();
      sub_100067640((uint64_t)a1);
      return;
    }

    sub_1000677E8();
    if (!v12)
    {
      sub_1000673B4();
      if (v10 == v11) {
        goto LABEL_37;
      }
      sub_1000674D4();
      if (!v13)
      {
        sub_1000673B4();
        if (v10 == v11) {
          goto LABEL_37;
        }
        sub_1000674D4();
        if (!v14)
        {
          sub_1000673B4();
          if (v10 == v11) {
            goto LABEL_37;
          }
          sub_1000674D4();
          if (!v15)
          {
            sub_1000676DC();
            if (v10 == v11) {
              goto LABEL_37;
            }
            if (!a1[v16 + 8])
            {
              while (!__OFADD__(v16, 1LL))
              {
                sub_1000673B4();
                if (v10 == v11) {
                  goto LABEL_37;
                }
                sub_1000677C4();
                if (v17) {
                  goto LABEL_25;
                }
              }

              goto LABEL_39;
            }
          }
        }
      }
    }

void sub_100054C98()
{
  uint64_t v53 = v0;
  uint64_t v54 = v1;
  uint64_t v3 = v2;
  if (*(void *)(v2 + 16))
  {
    sub_10000D33C(&qword_1001CA768);
    uint64_t v4 = (void *)sub_100067310();
  }

  else
  {
    uint64_t v4 = _swiftEmptyDictionarySingleton;
  }

  sub_100067428();
  uint64_t v7 = v6 & v5;
  sub_10006792C();
  uint64_t v47 = v8;
  uint64_t v48 = (uint64_t)(v4 + 8);
  sub_10000DEE0();
  uint64_t v9 = 0LL;
  char v10 = &type metadata for String;
  char v11 = (uint64_t *)&unk_1001CA770;
  while (1)
  {
    while (1)
    {
      if (v7)
      {
        v7 &= v7 - 1;
      }

      else
      {
        if (__OFADD__(v9, 1LL)) {
          goto LABEL_36;
        }
        sub_1000676DC();
        if (v12 == v13)
        {
LABEL_33:
          uint64_t v46 = sub_100067A14();
          sub_10004844C(v46);
          return;
        }

        sub_1000677E8();
        if (!v14)
        {
          sub_1000673B4();
          if (v12 == v13) {
            goto LABEL_33;
          }
          sub_1000674D4();
          if (!v15)
          {
            sub_1000673B4();
            if (v12 == v13) {
              goto LABEL_33;
            }
            sub_1000674D4();
            if (!v16)
            {
              sub_1000673B4();
              if (v12 == v13) {
                goto LABEL_33;
              }
              sub_1000674D4();
              if (!v17)
              {
                sub_1000676DC();
                if (v12 == v13) {
                  goto LABEL_33;
                }
                if (!*(void *)(v49 + 8 * v18))
                {
                  while (!__OFADD__(v18, 1LL))
                  {
                    sub_1000673B4();
                    if (v12 == v13) {
                      goto LABEL_33;
                    }
                    sub_1000677C4();
                    if (v19) {
                      goto LABEL_27;
                    }
                  }

                  goto LABEL_37;
                }
              }
            }
          }
        }

void sub_100054EFC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000D33C(&qword_1001C9DC8);
    uint64_t v1 = (void *)sub_100067310();
  }

  else
  {
    uint64_t v1 = _swiftEmptyDictionarySingleton;
  }

  sub_100067428();
  uint64_t v4 = v3 & v2;
  sub_10006792C();
  uint64_t v36 = v5;
  uint64_t v37 = (uint64_t)(v1 + 8);
  sub_10000DEE0();
  uint64_t v6 = 0LL;
  while (1)
  {
    while (1)
    {
      if (v4)
      {
        v4 &= v4 - 1;
      }

      else
      {
        if (__OFADD__(v6, 1LL)) {
          goto LABEL_36;
        }
        sub_1000676DC();
        if (v7 == v8)
        {
LABEL_33:
          uint64_t v35 = sub_100067A14();
          sub_10004844C(v35);
          return;
        }

        sub_1000677E8();
        if (!v9)
        {
          sub_1000673B4();
          if (v7 == v8) {
            goto LABEL_33;
          }
          sub_1000674D4();
          if (!v10)
          {
            sub_1000673B4();
            if (v7 == v8) {
              goto LABEL_33;
            }
            sub_1000674D4();
            if (!v11)
            {
              sub_1000673B4();
              if (v7 == v8) {
                goto LABEL_33;
              }
              sub_1000674D4();
              if (!v12)
              {
                sub_1000676DC();
                if (v7 == v8) {
                  goto LABEL_33;
                }
                if (!*(void *)(v38 + 8 * v13))
                {
                  while (!__OFADD__(v13, 1LL))
                  {
                    sub_1000673B4();
                    if (v7 == v8) {
                      goto LABEL_33;
                    }
                    sub_1000677C4();
                    if (v14) {
                      goto LABEL_27;
                    }
                  }

                  goto LABEL_37;
                }
              }
            }
          }
        }

void sub_1000551CC()
{
  uint64_t v3 = v2;
  uint64_t v17 = *(void *)(sub_100067420() - 8);
  sub_10000DC8C();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10006725C();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1000105F0();
  sub_10000D33C(&qword_1001CA718);
  uint64_t v7 = sub_100067A48();
  BOOL v8 = (void *)sub_10000DDDC((uint64_t)&unk_1001AA0C8, 40LL);
  v8[2] = v3;
  v8[3] = v7;
  v8[4] = v0;
  sub_100067344((uint64_t)sub_100021A3C);
  id v9 = v3;
  sub_10002FAEC();
  id v10 = v0;
  sub_100067A00();
  sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v12 = v11;
  sub_1000673F0();
  sub_1000673F8((unint64_t *)&qword_1001CD3F0);
  uint64_t v13 = sub_100067728();
  dispatch thunk of SetAlgebra.init<A>(_:)(v13, v14, v15, v16, v12);
  sub_10006769C();
  sub_100067704();
  sub_1000673E0(v17);
  sub_100067744(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_10006752C();
  sub_100060224();
  sub_10002FAF4();
  sub_10000DD84();
}

void sub_10005536C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    unint64_t v5 = 0LL;
    uint64_t v6 = (void *)(a1 + 56);
    uint64_t v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v8 = *(v6 - 2);
      char v9 = *((_BYTE *)v6 - 8);
      uint64_t v10 = *v6;
      char v11 = *((_BYTE *)v6 - 24);
      v21[0] = v11;
      uint64_t v22 = v8;
      char v23 = v9;
      uint64_t v24 = v10;
      swift_bridgeObjectRetain(v10);
      char v12 = sub_1000574F8((uint64_t)v21, a2, a3);
      if (v3)
      {

        swift_release(v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }

      if ((v12 & 1) != 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
        uint64_t v25 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000170BC();
          uint64_t v7 = v25;
        }

        unint64_t v14 = v7[2];
        unint64_t v15 = v14 + 1;
        if (v14 >= v7[3] >> 1)
        {
          sub_1000170BC();
          unint64_t v15 = v14 + 1;
          uint64_t v7 = v25;
        }

        v7[2] = v15;
        uint64_t v16 = &v7[4 * v14];
        *((_BYTE *)v16 + 32) = v11;
        v16[5] = v8;
        *((_BYTE *)v16 + 48) = v9;
        v16[7] = v10;
        uint64_t v4 = a1;
      }

      else
      {
        swift_bridgeObjectRelease();
      }

      ++v5;
      v6 += 4;
      if (v18 == v5) {
        goto LABEL_13;
      }
    }

    __break(1u);
  }

  else
  {
LABEL_13:

    swift_bridgeObjectRelease();
  }

uint64_t sub_10005552C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v9);
  char v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v59 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v49 = a1;
    }
    else {
      uint64_t v49 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v16 = sub_10000D33C(&qword_1001CA7A0);
  if (v15)
  {
    uint64_t v60 = v15;
    uint64_t v50 = v13;
    uint64_t v51 = v12;
    uint64_t v52 = v5;
    uint64_t v53 = v3;
    uint64_t v54 = v2;
    uint64_t v58 = Promise.__allocating_init()(v16);
    uint64_t v17 = dispatch_group_create();
    uint64_t v18 = swift_allocObject(&unk_1001AA410, 24LL, 7LL);
    *(void *)(v18 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
    uint64_t v55 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    if (qword_1001C80A8 != -1) {
      swift_once(&qword_1001C80A8, sub_10010D4CC);
    }
    uint64_t v19 = qword_1001DBBB8;
    id v20 = (id)qword_1001DBBB8;
    uint64_t v21 = v59;
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100007CD0( (unint64_t *)&qword_1001CAAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
    uint64_t v23 = v22;
    uint64_t v24 = sub_10000D33C((uint64_t *)&unk_1001CD3A0);
    sub_1000253B0((unint64_t *)&qword_1001CAAC0, (uint64_t *)&unk_1001CD3A0);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v9, v23);
    (*(void (**)(char *, void, uint64_t))(v56 + 104))( v8,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v57);
    unint64_t v26 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000022LL,  0x800000010016D6A0LL,  v21,  v11,  v8,  v19);
    uint64_t result = swift_allocObject(&unk_1001AAF28, 24LL, 7LL);
    *(void *)(result + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
    if (v60 < 1)
    {
      __break(1u);
    }

    else
    {
      uint64_t v28 = result;
      uint64_t v29 = v61;
      unint64_t v30 = v61 & 0xC000000000000001LL;
      swift_bridgeObjectRetain(v61);
      uint64_t v31 = 0LL;
      do
      {
        if (v30)
        {
          uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v29);
        }

        else
        {
          uint64_t v32 = *(void *)(v29 + 8 * v31 + 32);
          swift_retain(v32);
        }

        ++v31;
        dispatch_group_enter(v17);
        uint64_t v33 = (void *)swift_allocObject(&unk_1001AAF50, 48LL, 7LL);
        void v33[2] = v26;
        void v33[3] = v28;
        v33[4] = v18;
        v33[5] = v17;
        swift_retain(v28);
        swift_retain(v18);
        id v34 = v26;
        uint64_t v35 = v17;
        sub_100052990();
        swift_release(v32);
        swift_release(v33);
        uint64_t v29 = v61;
      }

      while (v60 != v31);
      swift_bridgeObjectRelease();
      uint64_t v36 = (void *)swift_allocObject(&unk_1001AAF78, 40LL, 7LL);
      uint64_t v37 = v58;
      _OWORD v36[2] = v18;
      id v36[3] = v37;
      v36[4] = v28;
      aBlock[4] = sub_1000671BC;
      uint64_t v64 = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100061FB8;
      aBlock[3] = &unk_1001AAF90;
      uint64_t v38 = _Block_copy(aBlock);
      swift_retain(v28);
      swift_retain(v18);
      uint64_t v39 = swift_retain(v37);
      uint64_t v40 = v59;
      static DispatchQoS.unspecified.getter(v39);
      uint64_t v62 = _swiftEmptyArrayStorage;
      sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v42 = v41;
      uint64_t v43 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
      sub_1000253B0((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
      uint64_t v44 = v52;
      uint64_t v45 = v43;
      uint64_t v46 = v54;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v45, v47, v54, v42);
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v40, v44, v34, v38);
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v46);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v51);
      __int128 v48 = v64;
      swift_release(v18);
      swift_release(v28);
      swift_release(v48);
      return v58;
    }
  }

  else
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    return Promise.__allocating_init(value:)(aBlock);
  }

  return result;
}

uint64_t sub_100055A80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v9);
  char v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v59 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v49 = a1;
    }
    else {
      uint64_t v49 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v16 = sub_10000D33C(&qword_1001CA730);
  if (v15)
  {
    uint64_t v60 = v15;
    uint64_t v50 = v13;
    uint64_t v51 = v12;
    uint64_t v52 = v5;
    uint64_t v53 = v3;
    uint64_t v54 = v2;
    uint64_t v58 = Promise.__allocating_init()(v16);
    uint64_t v17 = dispatch_group_create();
    uint64_t v18 = swift_allocObject(&unk_1001AA410, 24LL, 7LL);
    *(void *)(v18 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
    uint64_t v55 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    if (qword_1001C80A8 != -1) {
      swift_once(&qword_1001C80A8, sub_10010D4CC);
    }
    uint64_t v19 = qword_1001DBBB8;
    id v20 = (id)qword_1001DBBB8;
    uint64_t v21 = v59;
    static DispatchQoS.unspecified.getter(v20);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100007CD0( (unint64_t *)&qword_1001CAAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
    uint64_t v23 = v22;
    uint64_t v24 = sub_10000D33C((uint64_t *)&unk_1001CD3A0);
    sub_1000253B0((unint64_t *)&qword_1001CAAC0, (uint64_t *)&unk_1001CD3A0);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v9, v23);
    (*(void (**)(char *, void, uint64_t))(v56 + 104))( v8,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v57);
    unint64_t v26 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000022LL,  0x800000010016D6A0LL,  v21,  v11,  v8,  v19);
    uint64_t result = swift_allocObject(&unk_1001AA438, 24LL, 7LL);
    *(void *)(result + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
    if (v60 < 1)
    {
      __break(1u);
    }

    else
    {
      uint64_t v28 = result;
      uint64_t v29 = v61;
      unint64_t v30 = v61 & 0xC000000000000001LL;
      swift_bridgeObjectRetain(v61);
      uint64_t v31 = 0LL;
      do
      {
        if (v30)
        {
          uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v29);
        }

        else
        {
          uint64_t v32 = *(void *)(v29 + 8 * v31 + 32);
          swift_retain(v32);
        }

        ++v31;
        dispatch_group_enter(v17);
        uint64_t v33 = (void *)swift_allocObject(&unk_1001AA460, 48LL, 7LL);
        void v33[2] = v26;
        void v33[3] = v28;
        v33[4] = v18;
        v33[5] = v17;
        swift_retain(v28);
        swift_retain(v18);
        id v34 = v26;
        uint64_t v35 = v17;
        sub_100053980(0LL, 1, (uint64_t)sub_100066468, (uint64_t)v33);
        swift_release(v32);
        swift_release(v33);
        uint64_t v29 = v61;
      }

      while (v60 != v31);
      swift_bridgeObjectRelease();
      uint64_t v36 = (void *)swift_allocObject(&unk_1001AA488, 40LL, 7LL);
      uint64_t v37 = v58;
      _OWORD v36[2] = v18;
      id v36[3] = v37;
      v36[4] = v28;
      aBlock[4] = sub_100066478;
      uint64_t v64 = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100061FB8;
      aBlock[3] = &unk_1001AA4A0;
      uint64_t v38 = _Block_copy(aBlock);
      swift_retain(v28);
      swift_retain(v18);
      uint64_t v39 = swift_retain(v37);
      uint64_t v40 = v59;
      static DispatchQoS.unspecified.getter(v39);
      uint64_t v62 = _swiftEmptyArrayStorage;
      sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v42 = v41;
      uint64_t v43 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
      sub_1000253B0((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
      uint64_t v44 = v52;
      uint64_t v45 = v43;
      uint64_t v46 = v54;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v45, v47, v54, v42);
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v40, v44, v34, v38);
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v46);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v51);
      __int128 v48 = v64;
      swift_release(v18);
      swift_release(v28);
      swift_release(v48);
      return v58;
    }
  }

  else
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    return Promise.__allocating_init(value:)(aBlock);
  }

  return result;
}

id sub_100055FD4()
{
  id result = sub_100065FCC();
  qword_1001DBAC8 = (uint64_t)result;
  return result;
}

id sub_100055FF0()
{
  if (qword_1001C7F50 != -1) {
    swift_once(&qword_1001C7F50, sub_100055FD4);
  }
  return (id)qword_1001DBAC8;
}

uint64_t sub_100056044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer);
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer);
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer + 8);
  uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer + 16);
  *unint64_t v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  return sub_10006705C(v6, v7, v8);
}

uint64_t sub_100056074(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken + 8);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_100056090()
{
  if (qword_1001C7FB8 != -1) {
    swift_once(&qword_1001C7FB8, sub_1000BD55C);
  }
  return OSSignposter.init(logHandle:)(*(id *)(qword_1001DBB38 + 16));
}

void *sub_1000560E8(void *a1)
{
  unint64_t v2 = sub_100057144(a1);
  if (v2)
  {
    uint64_t v3 = sub_100052590(v2, v1);
  }

  else
  {
    unint64_t v5 = sub_10001C8FC();
    uint64_t v6 = (char *)v5[2];
    if (!v6)
    {
      sub_100009020();
      return _swiftEmptyArrayStorage;
    }

    sub_100067820();
    sub_1000170A0();
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___AMSProcessInfo);
    uint64_t v8 = 0LL;
    do
    {
      char v9 = v8[(void)v5 + 32];
      id v10 = [v7 currentProcess];
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
      {
        sub_100048B48(v11);
        sub_1000170A0();
      }

      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[10 * v12];
      *((_BYTE *)v13 + 32) = 0;
      ++v8;
      *((_BYTE *)v13 + 33) = v9;
      void v13[5] = v10;
      v13[6] = -1LL;
      v13[7] = 0LL;
      v13[8] = 0LL;
      v13[9] = 0xD000000000000018LL;
      v13[10] = 0x800000010016ADB0LL;
      v13[11] = 25LL;
      *((_BYTE *)v13 + 96) = 0;
      v13[13] = 10485760LL;
    }

    while (v6 != v8);
  }

  sub_100009020();
  return v3;
}

id sub_100056258@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v9 = *a1;
  id v10 = [v9 identifier];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  uint64_t v13 = v12;

  v51._uint64_t countAndFlagsBits = v11;
  v51._object = v13;
  unsigned __int8 v14 = sub_10001C9CC(v51);
  if (v14 == 4)
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v50 = qword_1001DBB38;
    uint64_t v15 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v16 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v17 = *(void *)(v16 + 72);
    uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
    v45[1] = v17;
    uint64_t v19 = swift_allocObject(v15, ((v18 + 32) & ~v18) + 2 * v17, v18 | 7);
    *(_OWORD *)(v19 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v49 = type metadata accessor for EngagementService();
    v48[0] = a2;
    id v20 = (id)AMSLogKey(a2);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      uint64_t v24 = v23;

      swift_bridgeObjectRetain(v24);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v25._uint64_t countAndFlagsBits = 0LL;
      v25._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v26 = v49;
      unint64_t v27 = sub_10000D37C(v48, v49);
      uint64_t DynamicType = swift_getDynamicType(v27, v26, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v46[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v46);
      sub_10000DA68((uint64_t)v46, &qword_1001CAAD0);
      v29._uint64_t countAndFlagsBits = 5972026LL;
      v29._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      uint64_t MetatypeMetadata = &type metadata for String;
      v46[0] = v22;
      v46[1] = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v46);
      sub_10000DA68((uint64_t)v46, &qword_1001CAAD0);
      v30._uint64_t countAndFlagsBits = 93LL;
      v30._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      LogMessage.init(stringInterpolation:)(v8);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v35._uint64_t countAndFlagsBits = 0LL;
      v35._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      uint64_t v36 = v49;
      uint64_t v37 = sub_10000D37C(v48, v49);
      uint64_t v38 = swift_getDynamicType(v37, v36, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v38);
      v46[0] = v38;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v46);
      sub_10000DA68((uint64_t)v46, &qword_1001CAAD0);
      v39._uint64_t countAndFlagsBits = 58LL;
      v39._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      LogMessage.init(stringInterpolation:)(v8);
    }

    sub_10000D3A0(v48);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(42LL, 1LL);
    v40._uint64_t countAndFlagsBits = 0LL;
    v40._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    uint64_t v49 = sub_10000DAA0(0LL, &qword_1001CA298, &OBJC_CLASS___AMSEngagementDestination_ptr);
    v48[0] = v9;
    id v41 = v9;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v48);
    sub_10000DA68((uint64_t)v48, &qword_1001CAAD0);
    v42._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v42._object = (void *)0x800000010016DDE0LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v42);
    uint64_t v43 = LogMessage.init(stringInterpolation:)(v8);
    uint64_t v44 = static os_log_type_t.error.getter(v43);
    sub_1000BD1B0(v44, v19);
    id result = (id)swift_bridgeObjectRelease();
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 6sub_10000D3A0(v0 + 4) = 0u;
    *(_OWORD *)(a3 + ++*(void *)(v0 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }

  else
  {
    unsigned __int8 v31 = v14;
    id v32 = [(id)objc_opt_self(AMSProcessInfo) currentProcess];
    unsigned int v33 = [v9 allowsResponse];
    id result = [v9 components];
    *(void *)a3 = v33 & 0xFFFF00FF | ((unint64_t)v31 << 8);
    *(void *)(a3 + 8) = v32;
    *(void *)(a3 + ++*(void *)(v0 + 16) = result;
    *(void *)(a3 + 2sub_10000D3A0(v0 + 4) = 0LL;
    *(void *)(a3 + 32) = 0LL;
    *(void *)(a3 + 40) = 0xD000000000000018LL;
    *(void *)(a3 + 48) = 0x800000010016ADB0LL;
    *(_OWORD *)(a3 + 56) = xmmword_100165B10;
    *(void *)(a3 + 72) = 10485760LL;
  }

  return result;
}

void *sub_100056678(void *a1, char a2)
{
  unint64_t v5 = sub_10001C8FC();
  uint64_t v6 = sub_1000656B4(a1);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_10000DDF8();
    unint64_t v5 = sub_1000522E4(v7, v2);
    sub_10000DCFC();
  }

  uint64_t v8 = sub_1000527C0((uint64_t)v5, a1, a2 & 1, v2);
  sub_10000DDF8();
  return v8;
}

unint64_t sub_100056714@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  char v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *a1;
  id v10 = (void *)a1[1];
  swift_bridgeObjectRetain(v10);
  v46._uint64_t countAndFlagsBits = v11;
  v46._object = v10;
  unint64_t result = sub_10001C9CC(v46);
  char v13 = result;
  if (result == 4)
  {
    Swift::String v40 = a3;
    uint64_t v45 = v3;
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    void v39[2] = qword_1001DBB38;
    uint64_t v14 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v15 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v16 = *(void *)(v15 + 72);
    uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
    v39[1] = v16;
    uint64_t v18 = swift_allocObject(v14, ((v17 + 32) & ~v17) + 2 * v16, v17 | 7);
    *(_OWORD *)(v18 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v44 = (void *)type metadata accessor for EngagementService();
    v43[0] = a2;
    id v19 = (id)AMSLogKey(a2);
    if (v19)
    {
      id v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      uint64_t v23 = v22;

      swift_bridgeObjectRetain(v23);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v24._uint64_t countAndFlagsBits = 0LL;
      v24._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      Swift::String v25 = v44;
      uint64_t v26 = sub_10000D37C(v43, (uint64_t)v44);
      uint64_t DynamicType = swift_getDynamicType(v26, v25, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v41[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
      sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
      v28._uint64_t countAndFlagsBits = 5972026LL;
      v28._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t MetatypeMetadata = &type metadata for String;
      v41[0] = v21;
      v41[1] = v23;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
      sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
      v29._uint64_t countAndFlagsBits = 93LL;
      v29._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v29);
      LogMessage.init(stringInterpolation:)(v9);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v30._uint64_t countAndFlagsBits = 0LL;
      v30._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      unsigned __int8 v31 = v44;
      id v32 = sub_10000D37C(v43, (uint64_t)v44);
      uint64_t v33 = swift_getDynamicType(v32, v31, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v33);
      v41[0] = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
      sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
      v34._uint64_t countAndFlagsBits = 58LL;
      v34._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      LogMessage.init(stringInterpolation:)(v9);
    }

    sub_10000D3A0(v43);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(31LL, 1LL);
    v35._uint64_t countAndFlagsBits = 0LL;
    v35._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v44 = &type metadata for String;
    v43[0] = v11;
    v43[1] = v10;
    swift_bridgeObjectRetain(v10);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v43);
    sub_10000DA68((uint64_t)v43, &qword_1001CAAD0);
    v36._object = (void *)0x800000010016DDC0LL;
    v36._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    uint64_t v37 = LogMessage.init(stringInterpolation:)(v9);
    uint64_t v38 = static os_log_type_t.error.getter(v37);
    sub_1000BD1B0(v38, v18);
    unint64_t result = swift_bridgeObjectRelease();
    a3 = v40;
  }

  *a3 = v13;
  return result;
}

double sub_100056A74@<D0>( id a1@<X1>, unsigned __int8 *a2@<X0>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a2;
  id v9 = [a1 origin];
  if (v9)
  {
    id v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    NSString v11 = String._bridgeToObjectiveC()();

    swift_bridgeObjectRelease();
    sub_10000D37C( (void *)(a4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider),  *(void *)(a4 + OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider + 24));
    sub_100026FDC(v8, (uint64_t)v20);
    sub_100066F5C((uint64_t)v20, (uint64_t)v21, &qword_1001C9768);
    if (!*(void *)&v21[0]) {
      goto LABEL_6;
    }
    __int128 v23 = v21[0];
    __int128 v24 = v21[1];
    __int128 v25 = v21[2];
    uint64_t v26 = v22;
    sub_100066F5C((uint64_t)&v26, (uint64_t)&v27, &qword_1001C9740);
    uint64_t v28 = v23;
    sub_10002887C(&v27);
    sub_100066EB0(&v28);
    sub_100066F5C((uint64_t)&v25, (uint64_t)v29, &qword_1001C9760);
    sub_1000662B4((uint64_t)v29);
    sub_100066EB0(&v27);
    sub_100066F5C((uint64_t)&v27, (uint64_t)&v30, &qword_1001C9740);
    unint64_t v12 = v30;
    if (!v30) {
      goto LABEL_6;
    }
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    char v15 = sub_10012D48C(v13, v14, v12);
    swift_bridgeObjectRelease();
    sub_100066EB0(&v27);
    if ((v15 & 1) != 0)
    {
      id v16 = [(id)objc_opt_self(AMSProcessInfo) currentProcess];

      *(void *)a5 = v8 << 8;
      *(void *)(a5 + 8) = v16;
      *(void *)(a5 + ++*(void *)(v0 + 16) = -1LL;
      *(void *)(a5 + 2sub_10000D3A0(v0 + 4) = 0LL;
      *(void *)(a5 + 32) = 0LL;
      *(void *)(a5 + 40) = 0xD000000000000018LL;
      *(void *)(a5 + 48) = 0x800000010016ADB0LL;
      *(void *)&double result = 25LL;
      *(_OWORD *)(a5 + 56) = xmmword_100165B20;
      *(void *)(a5 + 72) = 10485760LL;
    }

    else
    {
LABEL_6:

      double result = 0.0;
      *(_OWORD *)(a5 + 48) = 0u;
      *(_OWORD *)(a5 + 6sub_10000D3A0(v0 + 4) = 0u;
      *(_OWORD *)(a5 + ++*(void *)(v0 + 16) = 0u;
      *(_OWORD *)(a5 + 32) = 0u;
      *(_OWORD *)a5 = 0u;
    }
  }

  else
  {
    id v18 = [(id)objc_opt_self(AMSProcessInfo) currentProcess];
    uint64_t v19 = 25LL;
    if ((a3 & 1) != 0) {
      uint64_t v19 = 17LL;
    }
    *(void *)a5 = v8 << 8;
    *(void *)(a5 + 8) = v18;
    *(void *)(a5 + ++*(void *)(v0 + 16) = -1LL;
    *(void *)(a5 + 2sub_10000D3A0(v0 + 4) = 0LL;
    *(void *)(a5 + 32) = 0LL;
    *(void *)(a5 + 40) = 0xD000000000000018LL;
    *(void *)(a5 + 48) = 0x800000010016ADB0LL;
    *(void *)(a5 + 56) = v19;
    *(void *)&double result = 2LL;
    *(_OWORD *)(a5 + 6sub_10000D3A0(v0 + 4) = xmmword_100165B30;
  }

  return result;
}

uint64_t sub_100056CF4()
{
  uint64_t v51 = v1;
  uint64_t v52 = v2;
  uint64_t v4 = v3;
  sub_10000DE00();
  sub_10000DC8C();
  __chkstk_darwin(v5);
  sub_10000DE7C();
  uint64_t v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer);
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer + 8);
  if (!v7) {
    goto LABEL_8;
  }
  uint64_t v8 = *v6;
  uint64_t v9 = v6[2];
  sub_10000DD9C();
  swift_unknownObjectRetain(v9);
  uint64_t v10 = sub_10001CCA0();
  if (v8 == v10 && v7 == v11)
  {
    sub_100009070();
  }

  else
  {
    char v13 = sub_100025718(v8, v7, v10, v11);
    sub_100009070();
    if ((v13 & 1) == 0)
    {
      swift_unknownObjectRelease(v9);
      sub_10000DCFC();
LABEL_8:
      if (qword_1001C7FB8 != -1) {
        swift_once(&qword_1001C7FB8, sub_1000BD55C);
      }
      uint64_t v14 = (void *)sub_10000D33C(&qword_1001C9C70);
      uint64_t v15 = sub_10002C79C();
      id v16 = (__n128 *)sub_10001059C( ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
                      + 2LL * *(void *)(*(void *)(v15 - 8) + 72LL),
                        *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL));
      uint64_t v17 = sub_1000678E0(v16, (__n128)xmmword_100164230);
      id v18 = sub_1000678C0(v17);
      id v19 = (id)AMSLogKey(v18);
      if (v19)
      {
        sub_1000105E8((uint64_t)v19);

        sub_1000489DC();
        sub_100010564();
        sub_1000104F0();
        sub_100037DAC();
        uint64_t v20 = sub_100010530();
        sub_100067388(v20);
        sub_100067A7C();
        sub_10000DC14();
        sub_100067598((uint64_t)&type metadata for String);
        sub_100067A7C();
        sub_10000DC4C(93LL);
        sub_10001A298();
        swift_bridgeObjectRelease();
      }

      else
      {
        sub_10001A1BC();
        sub_1000104F0();
        sub_100037DAC();
        uint64_t v32 = sub_100010530();
        uint64_t v33 = sub_100067388(v32);
        sub_10006779C(v33, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_10001A298();
      }

      sub_1000677AC();
      uint64_t v50 = &type metadata for String;
      unint64_t v48 = 0xD00000000000001DLL;
      unint64_t v49 = 0x800000010016DD80LL;
      uint64_t v34 = static LogMessage.safe(_:)(&v48);
      sub_1000677A4(v34, &qword_1001CAAD0);
      uint64_t v36 = static os_log_type_t.debug.getter(v35);
      sub_1000BD1B0(v36, (uint64_t)v16);
      sub_10000DDF8();
      uint64_t v37 = type metadata accessor for JSAppEngine();
      uint64_t v9 = sub_10000DDDC(v37, 104LL);
      *(void *)(v9 + 96) = 0LL;
      memcpy((void *)(v9 + 16), v4, 0x50uLL);
      sub_100066268(v4);
      sub_10002FAA0();
      uint64_t v38 = sub_10001CCA0();
      sub_100056044(v38, v39, v9, (uint64_t)&off_1001ABDA8);
      return v9;
    }
  }

  if (qword_1001C7FB8 != -1) {
    swift_once(&qword_1001C7FB8, sub_1000BD55C);
  }
  uint64_t v21 = (void *)sub_10000D33C(&qword_1001C9C70);
  sub_10002C79C();
  sub_10001A5F8();
  uint64_t v25 = sub_10001059C((v23 & ~v22) + 2 * v24, v22);
  *(_OWORD *)(v25 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v26 = type metadata accessor for EngagementService();
  id v27 = sub_1000678C0(v26);
  id v28 = (id)AMSLogKey(v27);
  if (v28)
  {
    uint64_t v46 = sub_1000105E8((uint64_t)v28);
    uint64_t v30 = v29;

    sub_1000489DC();
    sub_100010564();
    sub_1000104F0();
    sub_100037DAC();
    uint64_t v31 = sub_100010530();
    sub_100067388(v31);
    sub_100037418((uint64_t)v47);
    sub_10000DC14();
    void v47[3] = &type metadata for String;
    v47[0] = v46;
    v47[1] = v30;
    sub_10000DEA4();
    sub_100037418((uint64_t)v47);
    sub_10000DC4C(93LL);
    sub_10001A298();
    sub_10000DE74();
  }

  else
  {
    sub_10001A1BC();
    sub_1000104F0();
    sub_100037DAC();
    uint64_t v40 = sub_100010530();
    uint64_t v41 = sub_100067388(v40);
    sub_10006779C(v41, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10001A298();
  }

  sub_1000677AC();
  uint64_t v50 = &type metadata for String;
  unint64_t v48 = 0xD00000000000001FLL;
  unint64_t v49 = 0x800000010016DDA0LL;
  uint64_t v42 = static LogMessage.safe(_:)(&v48);
  sub_1000677A4(v42, &qword_1001CAAD0);
  uint64_t v44 = static os_log_type_t.debug.getter(v43);
  sub_1000BD1B0(v44, v25);
  sub_10000DCFC();
  sub_100020AB8();
  return v9;
}

uint64_t sub_100057144(void *a1)
{
  uint64_t v3 = sub_100065648(a1);
  if (!v3)
  {
    char v13 = &type metadata for AMSFlags;
    unint64_t v14 = sub_100038728();
    v12[0] = 0;
    uint64_t v4 = isFeatureEnabled(_:)(v12);
    char v5 = v4;
    sub_100067868(v4);
    if ((v5 & 1) != 0)
    {
      sub_10006B680(a1);
      if (v6)
      {
        if (*(void *)(v6 + 16))
        {
          sub_10000DF10();
          sub_1000090CC();
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          sub_10000DE2C();
          uint64_t v8 = sub_10001C8FC();
          uint64_t v9 = v1;
          uint64_t v10 = isa;
          uint64_t v3 = (uint64_t)sub_100052444((uint64_t)v8, v9, v10);

          sub_10000DDF8();
          return v3;
        }

        sub_1000090CC();
      }
    }

    return 0LL;
  }

  return v3;
}

void sub_10005725C(unsigned __int8 *a1@<X0>, char *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  sub_10000D37C( &a2[OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider],  *(void *)&a2[OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider + 24]);
  sub_100026FDC(v7, (uint64_t)v10);
  sub_100066F5C((uint64_t)v10, (uint64_t)v11, &qword_1001C9768);
  if (*(void *)&v11[0])
  {
    __int128 v13 = v11[0];
    __int128 v14 = v11[1];
    __int128 v15 = v11[2];
    uint64_t v16 = v12;
    sub_10005536C(*(uint64_t *)&v11[0], a3, a2);
    uint64_t v9 = v8;
    sub_100066F5C((uint64_t)&v15, (uint64_t)v17, &qword_1001C9760);
    sub_1000662B4((uint64_t)v17);
    sub_100066F5C((uint64_t)&v16, (uint64_t)&v18, &qword_1001C9740);
    sub_100066EB0(&v18);
    if (*(void *)(v9 + 16)) {
      __asm { BR              X9 }
    }

    swift_bridgeObjectRelease();
  }

  *a4 = 0LL;
}

uint64_t sub_1000574F8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v10 = sub_10005787C(a2, *(void *)(a1 + 24));
  if (v3)
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v11 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v12 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v13 = *(void *)(v12 + 72);
    uint64_t v14 = swift_allocObject( v11,  ((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)) + 2 * v13,  *(unsigned __int8 *)(v12 + 80) | 7LL);
    *(_OWORD *)(v14 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v44 = type metadata accessor for EngagementService();
    v43[0] = a3;
    id v15 = (id)AMSLogKey(a3);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      uint64_t v38 = v13;
      uint64_t v18 = v17;
      uint64_t v20 = v19;

      swift_bridgeObjectRetain(v20);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v21._uint64_t countAndFlagsBits = 0LL;
      v21._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t v22 = v44;
      uint64_t v23 = sub_10000D37C(v43, v44);
      uint64_t DynamicType = swift_getDynamicType(v23, v22, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v41[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
      sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
      v25._uint64_t countAndFlagsBits = 5972026LL;
      v25._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t MetatypeMetadata = &type metadata for String;
      v41[0] = v18;
      v41[1] = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
      sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
      v26._uint64_t countAndFlagsBits = 93LL;
      v26._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      LogMessage.init(stringInterpolation:)(v9);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v27._uint64_t countAndFlagsBits = 0LL;
      v27._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t v28 = v44;
      uint64_t v29 = sub_10000D37C(v43, v44);
      uint64_t v30 = swift_getDynamicType(v29, v28, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v30);
      v41[0] = v30;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
      sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
      v31._uint64_t countAndFlagsBits = 58LL;
      v31._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      LogMessage.init(stringInterpolation:)(v9);
    }

    sub_10000D3A0(v43);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(35LL, 1LL);
    v32._object = (void *)0x800000010016DD10LL;
    v32._uint64_t countAndFlagsBits = 0xD000000000000023LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    swift_getErrorValue(v3, v45, &v39);
    uint64_t v33 = v40;
    uint64_t v44 = v40;
    sub_1000663D0(v43);
    (*(void (**)(void))(*(void *)(v33 - 8) + 16LL))();
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v43);
    sub_10000DA68((uint64_t)v43, &qword_1001CAAD0);
    v34._uint64_t countAndFlagsBits = 0LL;
    v34._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t v35 = LogMessage.init(stringInterpolation:)(v9);
    uint64_t v36 = static os_log_type_t.info.getter(v35);
    sub_1000BD1B0(v36, v14);
    swift_bridgeObjectRelease();
    swift_errorRelease(v3);
    char v10 = 0;
  }

  return v10 & 1;
}

uint64_t sub_10005787C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v81 = a1;
  uint64_t v5 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v6 = __chkstk_darwin(v5);
  Swift::String v80 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v67 - v8;
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v72 = a2 + 64;
  uint64_t v10 = 1LL << *(_BYTE *)(a2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v73 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v82 = a2;
  swift_bridgeObjectRetain(a2);
  int64_t v13 = 0LL;
  Swift::String v79 = (char *)&type metadata for Any + 8;
  __int128 v69 = xmmword_100164230;
  id v68 = (void *)0x800000010016DD40LL;
  while (v12)
  {
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_17:
    uint64_t v19 = (uint64_t *)(*(void *)(v82 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = (uint64_t *)(*(void *)(v82 + 56) + 16 * v15);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v24);
    NSString v25 = String._bridgeToObjectiveC()();
    *(void *)&__int128 v87 = 0LL;
    id v26 = [v81 valueForKeyPath:v25 exception:&v87];

    id v83 = (id)v87;
    _bridgeAnyObjectToAny(_:)(v26);
    swift_unknownObjectRelease(v26);
    if (swift_dynamicCast(&v84, &v87, v79, &type metadata for String, 6LL))
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = v84;
      uint64_t v27 = v85;
      id v29 = objc_allocWithZone(&OBJC_CLASS___NSRegularExpression);
      id v30 = sub_100063BA4(v23, v24, 0LL);
      if (v3)
      {

        swift_bridgeObjectRelease();
        swift_release(v82);
        return v23 & 1;
      }

      Swift::String v31 = v30;
      NSString v32 = String._bridgeToObjectiveC()();
      uint64_t v33 = String.count.getter(v28, v27);
      swift_bridgeObjectRelease();
      id v34 = objc_msgSend(v31, "firstMatchInString:options:range:", v32, 0, 0, v33);

      if (v34)
      {
        LOBYTE(v23) = 1;
        goto LABEL_36;
      }
    }

    else
    {
      int64_t v75 = v13;
      unint64_t v77 = v12;
      uint64_t v78 = v3;
      swift_bridgeObjectRelease();
      uint64_t v35 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v36 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      uint64_t v38 = *(unsigned __int8 *)(v36 + 80);
      uint64_t v76 = v37;
      uint64_t v39 = swift_allocObject(v35, ((v38 + 32) & ~v38) + 2 * v37, v38 | 7);
      *(_OWORD *)(v39 + ++*(void *)(v0 + 16) = v69;
      uint64_t v74 = v39;
      *((void *)&v88 + 1) = sub_10000D33C(&qword_1001CA7E8);
      *(void *)&__int128 v87 = v71;
      id v40 = (id)AMSLogKey(*((void *)&v88 + 1));
      if (v40)
      {
        uint64_t v41 = v40;
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        uint64_t v44 = v43;

        swift_bridgeObjectRetain(v44);
        uint64_t v45 = v70;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v46._uint64_t countAndFlagsBits = 0LL;
        v46._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v46);
        uint64_t v47 = *((void *)&v88 + 1);
        unint64_t v48 = sub_10000D37C(&v87, *((uint64_t *)&v88 + 1));
        uint64_t DynamicType = swift_getDynamicType(v48, v47, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
        uint64_t v84 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v84);
        sub_10000DA68((uint64_t)&v84, &qword_1001CAAD0);
        v50._uint64_t countAndFlagsBits = 5972026LL;
        v50._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v50);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v84 = v42;
        uint64_t v85 = v44;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v84);
        sub_10000DA68((uint64_t)&v84, &qword_1001CAAD0);
        v51._uint64_t countAndFlagsBits = 93LL;
        v51._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v51);
        LogMessage.init(stringInterpolation:)(v45);
        swift_bridgeObjectRelease();
      }

      else
      {
        uint64_t v52 = v70;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v53._uint64_t countAndFlagsBits = 0LL;
        v53._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v53);
        uint64_t v54 = *((void *)&v88 + 1);
        uint64_t v55 = sub_10000D37C(&v87, *((uint64_t *)&v88 + 1));
        uint64_t v56 = swift_getDynamicType(v55, v54, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v56);
        uint64_t v84 = v56;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v84);
        sub_10000DA68((uint64_t)&v84, &qword_1001CAAD0);
        v57._uint64_t countAndFlagsBits = 58LL;
        v57._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v57);
        LogMessage.init(stringInterpolation:)(v52);
      }

      sub_10000D3A0(&v87);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(66LL, 2LL);
      v58._uint64_t countAndFlagsBits = 0xD000000000000035LL;
      v58._object = v68;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      *((void *)&v88 + 1) = &type metadata for String;
      *(void *)&__int128 v87 = v21;
      *((void *)&v87 + 1) = v20;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v87);
      sub_10000DA68((uint64_t)&v87, &qword_1001CAAD0);
      v59._uint64_t countAndFlagsBits = 0x747065637865202CLL;
      v59._object = (void *)0xED0000203A6E6F69LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      id v60 = v83;
      if (v83)
      {
        *((void *)&v88 + 1) = sub_10000DAA0(0LL, &qword_1001CA7F0, &OBJC_CLASS___NSException_ptr);
        *(void *)&__int128 v87 = v60;
      }

      else
      {
        __int128 v87 = 0u;
        __int128 v88 = 0u;
      }

      unint64_t v12 = v77;
      id v61 = v60;
      uint64_t v62 = v80;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v87);
      sub_10000DA68((uint64_t)&v87, &qword_1001CAAD0);
      v63._uint64_t countAndFlagsBits = 0LL;
      v63._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      uint64_t v64 = LogMessage.init(stringInterpolation:)(v62);
      if (qword_1001C7F80 != -1) {
        uint64_t v64 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
      }
      uint64_t v65 = static os_log_type_t.debug.getter(v64);
      sub_1000BD1B0(v65, v74);

      swift_bridgeObjectRelease();
      uint64_t v3 = v78;
      int64_t v13 = v75;
    }
  }

  if (__OFADD__(v13++, 1LL))
  {
    __break(1u);
    goto LABEL_39;
  }

  if (v13 >= v73) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v72 + 8 * v13);
  if (v17)
  {
LABEL_16:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_17;
  }

  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v73) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v72 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v73) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v72 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v13 = v18;
    goto LABEL_16;
  }

  int64_t v18 = v13 + 3;
  if (v13 + 3 < v73)
  {
    unint64_t v17 = *(void *)(v72 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v13 = v18 + 1;
        if (__OFADD__(v18, 1LL)) {
          break;
        }
        if (v13 >= v73) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v72 + 8 * v13);
        ++v18;
        if (v17) {
          goto LABEL_16;
        }
      }

LABEL_34:
  LOBYTE(v23) = 0;
LABEL_36:
  swift_release(v82);
  return v23 & 1;
}

    uint64_t v23 = 0LL;
    LOBYTE(a2) = 1;
    goto LABEL_48;
  }

  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

              sub_10004844C(v30);
              return;
            }
          }
        }
      }
    }

    id v40 = (v45 - 1) & v45;
    uint64_t v43 = __clz(__rbit64(v45)) + (v46 << 6);
    uint64_t v39 = v46;
  }

  __break(1u);
}

  swift_release();
  uint64_t v2 = v33;
  Swift::String v31 = 1LL << *(_BYTE *)(v7 + 32);
  if (v31 > 63) {
    sub_100149C08(0LL, (unint64_t)(v31 + 63) >> 6, v35);
  }
  else {
    *uint64_t v35 = -1LL << v31;
  }
  *(void *)(v7 + ++*(void *)(v0 + 16) = 0LL;
LABEL_38:
  double result = swift_release();
  *uint64_t v2 = v9;
  return result;
}

void sub_100057FA0(void *a1)
{
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      unint64_t v4 = 0LL;
      uint64_t v5 = _swiftEmptyArrayStorage;
      while (v4 < *(void *)(v2 + 16))
      {
        uint64_t v6 = *(void *)(v2 + 32 + 8 * v4);
        uint64_t v19 = v6;
        swift_bridgeObjectRetain(v6);
        if ((sub_10005812C(&v19) & 1) != 0)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
          uint64_t v20 = v5;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100067810();
            uint64_t v5 = v20;
          }

          unint64_t v9 = v5[2];
          unint64_t v8 = v5[3];
          if (v9 >= v8 >> 1)
          {
            sub_100048B48(v8);
            sub_100067810();
            uint64_t v5 = v20;
          }

          v5[2] = v9 + 1;
          v5[v9 + 4] = v6;
        }

        else
        {
          sub_10000DDF8();
        }

        if (v3 == ++v4) {
          goto LABEL_16;
        }
      }

      __break(1u);
    }

    else
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_16:
      sub_10000DE2C();
      uint64_t v10 = v5[2];
      if (v10)
      {
        uint64_t v11 = type metadata accessor for PodcastsEventManager();
        sub_10002588C();
        swift_initStaticObject(v11, &unk_1001C8120);
        uint64_t v12 = 0LL;
        do
        {
          ++v12;
          uint64_t v13 = sub_10000DED8();
          sub_1000FF3D0(v13, v14, v15, v16, v17, v18);
          sub_1000090CC();
        }

        while (v10 != v12);
        sub_10001A2D8();
      }

      swift_release(v5);
    }
  }

uint64_t sub_10005812C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v10 = 7368801LL;
  unint64_t v11 = 0xE300000000000000LL;
  AnyHashable.init<A>(_:)(&v10);
  sub_10003079C((uint64_t)v12, v1, &v13);
  sub_10000E854((uint64_t)v12);
  if (!v14) {
    goto LABEL_9;
  }
  if ((swift_dynamicCast(&v10, &v13, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0)
  {
LABEL_10:
    char v6 = 0;
    return v6 & 1;
  }

  uint64_t v3 = v10;
  unint64_t v2 = v11;
  uint64_t v10 = 0x707954746E657665LL;
  unint64_t v11 = 0xE900000000000065LL;
  AnyHashable.init<A>(_:)(&v10);
  sub_10003079C((uint64_t)v12, v1, &v13);
  sub_10000E854((uint64_t)v12);
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    sub_10000DA68((uint64_t)&v13, &qword_1001CAAD0);
    goto LABEL_10;
  }

  if ((swift_dynamicCast(&v10, &v13, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }

  uint64_t v5 = v10;
  unint64_t v4 = v11;
  if (v3 != 0xD000000000000012LL || v2 != 0x800000010016ACC0LL)
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, 0xD000000000000012LL, 0x800000010016ACC0LL, 0LL);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0) {
      goto LABEL_14;
    }
    goto LABEL_20;
  }

  swift_bridgeObjectRelease();
LABEL_14:
  if (v5 == 0x6573616863727570LL && v4 == 0xE800000000000000LL)
  {
    swift_bridgeObjectRelease();
    char v6 = 1;
  }

  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, 0x6573616863727570LL, 0xE800000000000000LL, 0LL);
    swift_bridgeObjectRelease();
  }

  return v6 & 1;
}

uint64_t sub_100058354(uint64_t a1)
{
  if (a1)
  {
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = sub_10013E21C(v2);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  uint64_t v4 = sub_10000DDDC((uint64_t)&unk_1001AA208, 24LL);
  swift_unknownObjectWeakInit(v4 + 16, v1);
  sub_10002FAA0();
  sub_1000735A0(v3, (uint64_t)sub_100067018, v4);
  swift_release_n(v4, 2LL);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000583E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v6);
  char v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a3 += 16LL;
  swift_beginAccess(a3, v56, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    id v11 = [objc_allocWithZone(AMSEngagementSyncRequest) init];
    uint64_t v12 = sub_10000D33C(&qword_1001C8EA0);
    uint64_t v13 = swift_allocObject(v12, 48LL, 7LL);
    *(_OWORD *)(v13 + ++*(void *)(v0 + 16) = xmmword_100164220;
    *(void *)(v13 + 32) = a1;
    *(void *)(v13 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    sub_1000521C0(v13, v11);
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v14 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v15 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v16 = *(void *)(v15 + 72);
    uint64_t v17 = swift_allocObject( v14,  ((*(unsigned __int8 *)(v15 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)) + 2 * v16,  *(unsigned __int8 *)(v15 + 80) | 7LL);
    *(_OWORD *)(v17 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v52 = (void *)type metadata accessor for EngagementService();
    v51[0] = v10;
    id v18 = v10;
    id v19 = (id)AMSLogKey(v18);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      uint64_t v49 = v16;
      id v50 = v11;
      uint64_t v22 = v21;
      id v23 = v18;
      uint64_t v24 = a1;
      uint64_t v26 = v25;

      swift_bridgeObjectRetain(v26);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v27._uint64_t countAndFlagsBits = 0LL;
      v27._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t v28 = v52;
      id v29 = sub_10000D37C(v51, (uint64_t)v52);
      uint64_t DynamicType = swift_getDynamicType(v29, v28, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      v54[0] = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v54);
      sub_10000DA68((uint64_t)v54, &qword_1001CAAD0);
      v31._uint64_t countAndFlagsBits = 5972026LL;
      v31._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      uint64_t MetatypeMetadata = &type metadata for String;
      v54[0] = v22;
      v54[1] = v26;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v54);
      sub_10000DA68((uint64_t)v54, &qword_1001CAAD0);
      v32._uint64_t countAndFlagsBits = 93LL;
      v32._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      LogMessage.init(stringInterpolation:)(v8);
      a1 = v24;
      id v18 = v23;
      id v11 = v50;
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v37._uint64_t countAndFlagsBits = 0LL;
      v37._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      uint64_t v38 = v52;
      uint64_t v39 = sub_10000D37C(v51, (uint64_t)v52);
      uint64_t v40 = swift_getDynamicType(v39, v38, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v40);
      v54[0] = v40;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v54);
      sub_10000DA68((uint64_t)v54, &qword_1001CAAD0);
      v41._uint64_t countAndFlagsBits = 58LL;
      v41._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      LogMessage.init(stringInterpolation:)(v8);
    }

    sub_10000D3A0(v51);
    v51[0] = 0LL;
    v51[1] = 0xE000000000000000LL;
    _StringGuts.grow(_:)(16LL);
    swift_bridgeObjectRelease();
    strcpy((char *)v51, "Force syncing ");
    HIBYTE(v51[1]) = -18;
    v42._uint64_t countAndFlagsBits = a1;
    v42._object = a2;
    String.append(_:)(v42);
    uint64_t v52 = &type metadata for String;
    static LogMessage.safe(_:)(v51);
    sub_10000DA68((uint64_t)v51, &qword_1001CAAD0);
    uint64_t v44 = static os_log_type_t.default.getter(v43);
    sub_1000BD1B0(v44, v17);
    swift_bridgeObjectRelease();
    sub_1000551CC();
    uint64_t v46 = v45;
    uint64_t v52 = (void *)type metadata accessor for SyncTaskScheduler(0LL);
    Swift::String v53 = &protocol witness table for SyncTaskScheduler;
    sub_1000663D0(v51);
    SyncTaskScheduler.init()(v47);
    uint64_t v36 = Promise.map<A>(on:_:)(v51, nullsub_1, 0LL, (char *)&type metadata for () + 8);

    swift_release(v46);
    sub_10000D3A0(v51);
  }

  else
  {
    sub_10000D33C(&qword_1001CFAE0);
    unint64_t v33 = sub_100067020();
    uint64_t v34 = swift_allocError(&type metadata for SyncError, v33, 0LL, 0LL);
    *uint64_t v35 = 1;
    return Promise.__allocating_init(error:)(v34);
  }

  return v36;
}

uint64_t sub_100058860()
{
  CFPropertyListRef v0 = sub_10004A1B8();
  uint64_t v2 = v1;
  id v3 = [(id)objc_opt_self(AMSDevice) buildVersion];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  uint64_t v6 = v5;

  if (v2)
  {
    if (v0 == (CFPropertyListRef)v4 && v2 == v6)
    {
      sub_100009020();
      sub_1000090CC();
      char v11 = 0;
    }

    else
    {
      uint64_t v8 = sub_100067984();
      char v10 = sub_100025718(v8, v9, v4, v6);
      sub_100009020();
      sub_1000090CC();
      char v11 = v10 ^ 1;
    }
  }

  else
  {
    sub_1000090CC();
    char v11 = 1;
  }

  return v11 & 1;
}

BOOL sub_100058924(uint64_t a1)
{
  uint64_t v2 = v9;
  sub_100066F5C(a1, (uint64_t)__src, &qword_1001CA7D8);
  if (__src[1])
  {
    memcpy(__dst, __src, sizeof(__dst));
    sub_10000DF10();
    sub_10000DED8();
    id v3 = v2;
    uint64_t v4 = sub_100101E54();
    if (*(void *)(v4 + 16))
    {
      uint64_t v5 = __dst[1];
      swift_bridgeObjectRetain(v4);
      __asm { BR              X9 }
    }

    swift_bridgeObjectRelease();
    sub_100066F98(a1);
    return 0LL;
  }

  else
  {
    uint64_t v6 = *(void *)(sub_100101E54() + 16);
    swift_bridgeObjectRelease();
    return v6 != 0;
  }

void sub_100058B68( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void (*a22)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v71 = v23;
  id v72 = v22;
  uint64_t v69 = v24;
  uint64_t v70 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = sub_1000378A0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  __chkstk_darwin(v30);
  unint64_t v33 = (char *)&v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000DE00();
  sub_10000DC8C();
  __chkstk_darwin(v34);
  sub_10000DC74();
  if (!((unint64_t)v27 >> 62))
  {
    uint64_t v35 = *(void *)((v27 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v35) {
      goto LABEL_3;
    }
LABEL_14:
    if (qword_1001C7FB8 == -1)
    {
LABEL_15:
      uint64_t v46 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v47 = *(void *)(sub_10002C79C() - 8);
      uint64_t v48 = swift_allocObject( v46,  ((*(unsigned __int8 *)(v47 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))
            + 2LL * *(void *)(v47 + 72),
              *(unsigned __int8 *)(v47 + 80) | 7LL);
      *(_OWORD *)(v48 + ++*(void *)(v0 + 16) = xmmword_100164230;
      uint64_t v77 = type metadata accessor for EngagementService();
      v76[0] = v72;
      id v49 = (id)AMSLogKey(v72);
      if (v49)
      {
        id v50 = v49;
        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        uint64_t v53 = v52;

        sub_10000DED8();
        sub_100010564();
        sub_10000DC08();
        uint64_t v54 = v77;
        uint64_t v55 = sub_10000D37C(v76, v77);
        uint64_t v56 = sub_10000DC54((uint64_t)v55, v54);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v56);
        uint64_t v73 = v56;
        sub_10000DEA4();
        sub_100067A70();
        sub_10000DC14();
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v73 = v51;
        uint64_t v74 = v53;
        sub_10000DEA4();
        sub_100067A70();
        sub_10000DC4C(93LL);
        sub_10000DC5C();
        sub_1000090CC();
      }

      else
      {
        sub_10001A1BC();
        sub_10000DC08();
        uint64_t v57 = v77;
        Swift::String v58 = sub_10000D37C(v76, v77);
        uint64_t v59 = sub_10000DC54((uint64_t)v58, v57);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v59);
        uint64_t v73 = v59;
        uint64_t v60 = sub_10000DEA4();
        sub_10006779C(v60, &qword_1001CAAD0);
        sub_10000DC4C(58LL);
        sub_10000DC5C();
      }

      sub_1000677AC();
      uint64_t v61 = LogMessage.init(stringLiteral:)(0xD00000000000002BLL);
      uint64_t v62 = static os_log_type_t.error.getter(v61);
      sub_1000BD1B0(v62, v48);
      goto LABEL_19;
    }

void sub_100058EE8()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_10000DE00();
  sub_10000DC8C();
  __chkstk_darwin(v9);
  sub_10004895C();
  uint64_t v12 = v10 - v11;
  __chkstk_darwin(v13);
  uint64_t v14 = sub_10000D33C(&qword_1001CA728);
  uint64_t v15 = sub_10000DDDC(v14, 72LL);
  *(_OWORD *)(v15 + ++*(void *)(v0 + 16) = xmmword_100164220;
  double v16 = Date.timeIntervalSinceNow.getter(v15);
  *(void *)(v15 + 56) = &type metadata for Double;
  *(void *)(v15 + 6sub_10000D3A0(v0 + 4) = &protocol witness table for Double;
  *(double *)(v15 + 32) = fabs(v16);
  String.init(format:_:)(1714630181LL, 0xE400000000000000LL, v15);
  if (v8)
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    sub_10000D33C(&qword_1001C9C70);
    sub_10002C79C();
    sub_100067688();
    uint64_t v19 = sub_10000DCF0((v18 & ~v17) + 2 * v0, v17);
    *(_OWORD *)(v19 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v48 + 1) = type metadata accessor for EngagementService();
    *(void *)&__int128 v47 = v4;
    id v20 = v4;
    if (v2)
    {
      sub_1000489DC();
      sub_100010564();
      sub_100037DD0();
      sub_100037DAC();
      uint64_t v21 = sub_100010530();
      sub_100037D8C(v21);
      sub_1000675A8();
      sub_10000DC14();
      sub_100067598((uint64_t)&type metadata for String);
      sub_1000675A8();
      uint64_t v22 = 93LL;
    }

    else
    {
      sub_10001A1BC();
      sub_100037DD0();
      sub_100037DAC();
      uint64_t v30 = sub_100010530();
      uint64_t v31 = sub_100037D8C(v30);
      sub_10006779C(v31, &qword_1001CAAD0);
      uint64_t v22 = 58LL;
    }

    sub_100067A50(v22);
    sub_10006796C();
    sub_1000677AC();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(33LL, 1LL);
    sub_100048E08(0xD000000000000020LL, (uint64_t)"Request completed successfully (");
    uint64_t v32 = sub_10006770C((uint64_t)&type metadata for String);
    sub_1000677A4(v32, &qword_1001CAAD0);
    sub_10000DC4C(41LL);
    uint64_t v33 = sub_10006796C();
    uint64_t v34 = static os_log_type_t.default.getter(v33);
    uint64_t v35 = v19;
  }

  else
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    sub_10000D33C(&qword_1001C9C70);
    sub_10002C79C();
    sub_10001A5F8();
    uint64_t v26 = sub_10000DCF0((v24 & ~v23) + 2 * v25, v23);
    *(_OWORD *)(v26 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v48 + 1) = type metadata accessor for EngagementService();
    *(void *)&__int128 v47 = v4;
    id v27 = v4;
    if (v2)
    {
      sub_1000489DC();
      sub_100010564();
      sub_100037DD0();
      sub_100037DAC();
      uint64_t v28 = sub_100010530();
      sub_100037D8C(v28);
      sub_1000675A8();
      sub_10000DC14();
      sub_100067598((uint64_t)&type metadata for String);
      sub_1000675A8();
      uint64_t v29 = 93LL;
    }

    else
    {
      sub_10001A1BC();
      sub_100037DD0();
      sub_100037DAC();
      uint64_t v36 = sub_100010530();
      uint64_t v37 = sub_100037D8C(v36);
      sub_10006779C(v37, &qword_1001CAAD0);
      uint64_t v29 = 58LL;
    }

    sub_100067A50(v29);
    sub_10006796C();
    sub_1000677AC();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(32LL, 2LL);
    sub_100048BA0();
    v38._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v38);
    uint64_t v39 = sub_10006770C((uint64_t)&type metadata for String);
    sub_1000677A4(v39, &qword_1001CAAD0);
    v40._uint64_t countAndFlagsBits = 8233LL;
    v40._object = (void *)0xE200000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    if (v6)
    {
      swift_getErrorValue(v6, &v46, &v44);
      uint64_t v41 = v45;
      *((void *)&v48 + 1) = v45;
      sub_1000663D0(&v47);
      (*(void (**)(void))(*(void *)(v41 - 8) + 16LL))();
    }

    else
    {
      __int128 v47 = 0u;
      __int128 v48 = 0u;
    }

    uint64_t v42 = LogMessage.StringInterpolation.appendInterpolation(safe:)(&v47);
    sub_1000677A4(v42, &qword_1001CAAD0);
    sub_10000DC08();
    uint64_t v43 = LogMessage.init(stringInterpolation:)(v12);
    uint64_t v34 = static os_log_type_t.error.getter(v43);
    uint64_t v35 = v26;
  }

  sub_1000BD1B0(v34, v35);
  sub_100009020();
  sub_10000DD84();
}

uint64_t sub_1000592F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v130 = a2;
  uint64_t v131 = a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v136 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v133 = (char *)&v115 - v9;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v117 = *(void *)(v10 - 8);
  uint64_t v118 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v116 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = Date.init()(v11);
  id v14 = (id)AMSLogKey(v13);
  if (!v14) {
    id v14 = (id)AMSGenerateLogCorrelationKey();
  }
  uint64_t v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  uint64_t v138 = v15;

  if (qword_1001C80E8 != -1) {
    swift_once(&qword_1001C80E8, sub_100131F04);
  }
  sub_100132364(0xD000000000000013LL, 0x800000010016D530LL);
  if (qword_1001C7FB8 != -1) {
    swift_once(&qword_1001C7FB8, sub_1000BD55C);
  }
  uint64_t v16 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v17 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (v19 + 32) & ~v19;
  uint64_t v132 = v18;
  uint64_t v129 = v16;
  uint64_t v126 = v19 | 7;
  uint64_t v127 = v20 + 2 * v18;
  uint64_t v21 = swift_allocObject(v16, v127, v19 | 7);
  __int128 v125 = xmmword_100164230;
  *(_OWORD *)(v21 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v128 = v20;
  uint64_t v124 = (void *)type metadata accessor for EngagementService();
  *((void *)&v158 + 1) = v124;
  v157[0] = v4;
  id v142 = v4;
  id v22 = (id)AMSLogKey(v142);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    uint64_t v26 = v25;

    swift_bridgeObjectRetain(v26);
    id v27 = v133;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v28._uint64_t countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = *((void *)&v158 + 1);
    uint64_t v30 = sub_10000D37C(v157, *((uint64_t *)&v158 + 1));
    uint64_t DynamicType = swift_getDynamicType(v30, v29, 1LL);
    v156[3] = swift_getMetatypeMetadata(DynamicType);
    v156[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v156);
    sub_10000DA68((uint64_t)v156, &qword_1001CAAD0);
    v32._uint64_t countAndFlagsBits = 5972026LL;
    v32._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    v156[3] = &type metadata for String;
    v156[0] = v24;
    v156[1] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v156);
    sub_10000DA68((uint64_t)v156, &qword_1001CAAD0);
    v33._uint64_t countAndFlagsBits = 93LL;
    v33._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    LogMessage.init(stringInterpolation:)(v27);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v34 = v133;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v35._uint64_t countAndFlagsBits = 0LL;
    v35._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v36 = *((void *)&v158 + 1);
    uint64_t v37 = sub_10000D37C(v157, *((uint64_t *)&v158 + 1));
    uint64_t v38 = swift_getDynamicType(v37, v36, 1LL);
    v156[3] = swift_getMetatypeMetadata(v38);
    v156[0] = v38;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v156);
    sub_10000DA68((uint64_t)v156, &qword_1001CAAD0);
    v39._uint64_t countAndFlagsBits = 58LL;
    v39._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    LogMessage.init(stringInterpolation:)(v34);
  }

  sub_10000D3A0(v157);
  uint64_t v40 = LogMessage.init(stringLiteral:)(0xD000000000000012LL);
  uint64_t v41 = static os_log_type_t.default.getter(v40);
  sub_1000BD1B0(v41, v21);
  swift_bridgeObjectRelease();
  uint64_t v150 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v151 = (uint64_t)_swiftEmptyArrayStorage;
  v157[0] = a1;
  swift_bridgeObjectRetain(a1);
  sub_100064680(v157);
  uint64_t v42 = v157[0];
  uint64_t v135 = *(void *)(v157[0] + 16LL);
  if (v135)
  {
    uint64_t v43 = 0LL;
    uint64_t v144 = 0LL;
    uint64_t v122 = (__int128 *)&v152;
    uint64_t v123 = OBJC_IVAR____TtC14amsengagementd17EngagementService_priorityQueue;
    uint64_t v119 = 0x800000010016D590LL;
    uint64_t v120 = (void *)0x800000010016D570LL;
    uint64_t v121 = (__int128 *)&v153;
    uint64_t v134 = v157[0];
    while (1)
    {
      uint64_t v44 = v42 + v43;
      memcpy(v156, (const void *)(v42 + v43 + 32), sizeof(v156));
      uint64_t v45 = *(unsigned __int8 *)(v42 + v43 + 32);
      uint64_t v46 = *(unsigned __int8 *)(v42 + v43 + 33);
      uint64_t v47 = *(void *)(v44 + 40);
      __int128 v48 = *(_OWORD *)(v44 + 48);
      __int128 v49 = *(_OWORD *)(v44 + 64);
      uint64_t v51 = *(void *)(v44 + 80);
      uint64_t v50 = *(void *)(v44 + 88);
      uint64_t v52 = *(unsigned __int8 *)(v44 + 96);
      uint64_t v53 = *(void *)(v44 + 104);
      int v143 = LOBYTE(v156[8]);
      uint64_t v141 = v43;
      __int128 v139 = v49;
      __int128 v140 = v48;
      if (LOBYTE(v156[8]))
      {
        if (LOBYTE(v156[8]) != 1)
        {
          char v164 = v156[0];
          sub_100066268(v156);
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }

        uint64_t v54 = 0x696577746867696CLL;
        unint64_t v55 = 0xEF636E7953746867LL;
      }

      else
      {
        unint64_t v55 = 0xE700000000000000LL;
        uint64_t v54 = 0x65756575716E65LL;
      }

      char v164 = v156[0];
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, 1668184435LL, 0xE400000000000000LL, 0LL);
      sub_100066268(v156);
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0) {
        goto LABEL_21;
      }
LABEL_19:
      v157[0] = v45 | (v46 << 8);
      v157[1] = v47;
      __int128 v158 = v140;
      __int128 v159 = v139;
      uint64_t v160 = v51;
      uint64_t v161 = v50;
      uint64_t v162 = v52;
      uint64_t v163 = v53;
      sub_100066268(v156);
      BOOL v57 = sub_100058924((uint64_t)v157);
      sub_10002FF78(v156);
      if (!v57)
      {
LABEL_21:
        uint64_t v62 = swift_allocObject(v129, v127, v126);
        *(_OWORD *)(v62 + ++*(void *)(v0 + 16) = v125;
        Swift::String v149 = v124;
        uint64_t v63 = v142;
        uint64_t v147 = (uint64_t)v142;
        uint64_t v64 = v138;
        swift_bridgeObjectRetain_n(v138, 2LL);
        id v65 = v63;
        uint64_t v66 = v133;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v67._uint64_t countAndFlagsBits = 0LL;
        v67._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v67);
        uint64_t v68 = v149;
        uint64_t v69 = sub_10000D37C(&v147, (uint64_t)v149);
        uint64_t v70 = swift_getDynamicType(v69, v68, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v70);
        v145[0] = v70;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v145);
        sub_10000DA68((uint64_t)v145, &qword_1001CAAD0);
        v71._uint64_t countAndFlagsBits = 5972026LL;
        v71._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v71);
        uint64_t MetatypeMetadata = &type metadata for String;
        v145[0] = v137;
        v145[1] = v64;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v145);
        sub_10000DA68((uint64_t)v145, &qword_1001CAAD0);
        v72._uint64_t countAndFlagsBits = 93LL;
        v72._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v72);
        LogMessage.init(stringInterpolation:)(v66);
        swift_bridgeObjectRelease();
        sub_10000D3A0(&v147);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(56LL, 4LL);
        v73._uint64_t countAndFlagsBits = 0x6E69756575716E45LL;
        v73._object = (void *)0xEA00000000002067LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v73);
        if (v143)
        {
          if (v143 == 1)
          {
            uint64_t v74 = 0x696577746867696CLL;
            unint64_t v75 = 0xEF636E7953746867LL;
          }

          else
          {
            unint64_t v75 = 0xE400000000000000LL;
            uint64_t v74 = 1668184435LL;
          }
        }

        else
        {
          unint64_t v75 = 0xE700000000000000LL;
          uint64_t v74 = 0x65756575716E65LL;
        }

        Swift::String v149 = &type metadata for String;
        uint64_t v147 = v74;
        unint64_t v148 = v75;
        char v76 = BYTE1(v156[0]);
        uint64_t v77 = v136;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v78._uint64_t countAndFlagsBits = 0x7473657571657220LL;
        v78._object = (void *)0xEF203A7070612820LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v78);
        Swift::String v149 = &unk_1001A8968;
        LOBYTE(v147) = v76;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v79._uint64_t countAndFlagsBits = 0xD000000000000012LL;
        v79._object = v120;
        LogMessage.StringInterpolation.appendLiteral(_:)(v79);
        Swift::String v149 = &type metadata for Bool;
        LOBYTE(v147) = v164;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v80._uint64_t countAndFlagsBits = 0x69726F697270202CLL;
        v80._object = (void *)0xEC000000203A7974LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v80);
        uint64_t v81 = sub_10001D1B4();
        Swift::String v149 = &type metadata for String;
        uint64_t v147 = v81;
        unint64_t v148 = v82;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v83._uint64_t countAndFlagsBits = 41LL;
        v83._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v83);
        uint64_t v84 = LogMessage.init(stringInterpolation:)(v77);
        uint64_t v85 = static os_log_type_t.default.getter(v84);
        sub_1000BD1B0(v85, v62);
        swift_bridgeObjectRelease();
        sub_10001D1B4();
        uint64_t v87 = v86;
        uint64_t v88 = swift_allocObject(&unk_1001AAEB0, 152LL, 7LL);
        memcpy((void *)(v88 + 16), v156, 0x50uLL);
        uint64_t v89 = v138;
        *(void *)(v88 + 96) = v137;
        *(void *)(v88 + 10sub_10000D3A0(v0 + 4) = v89;
        *(void *)(v88 + 112) = v144;
        *(void *)(v88 + 120) = v65;
        *(_BYTE *)(v88 + 128) = v143;
        uint64_t v90 = v131;
        *(void *)(v88 + 136) = v130;
        *(void *)(v88 + 14sub_10000D3A0(v0 + 4) = v90;
        id v91 = v65;
        swift_bridgeObjectRetain(v89);
        sub_100066268(v156);
        swift_retain(v90);
        swift_bridgeObjectRetain(v87);
        sub_100102448(v76);
        sub_100062670();
        uint64_t v61 = v92;
        __int128 v155 = *v122;
        sub_1000662B4((uint64_t)&v155);
        __int128 v154 = *v121;
        sub_1000662B4((uint64_t)&v154);
        swift_bridgeObjectRelease();
        swift_release(v88);
        goto LABEL_27;
      }

      sub_10000D33C(&qword_1001C8BC8);
      NSString v58 = String._bridgeToObjectiveC()();
      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = (id)AMSError(11LL, v58, v59, 0LL);

      uint64_t v61 = Promise.__allocating_init(error:)(v60);
LABEL_27:
      uint64_t v42 = v134;
      uint64_t v93 = swift_retain(v61);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
      unint64_t v95 = *(void *)((v151 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v94 = *(void *)((v151 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v95 >= v94 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1);
      }
      uint64_t v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v61);
      uint64_t v97 = specialized Array._endMutation()(v96);
      if (v164 == 1)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97);
        unint64_t v99 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v98 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v99 >= v98 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1);
        }
        uint64_t v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v61);
        specialized Array._endMutation()(v100);
      }

      else
      {
        swift_release(v61);
      }

      uint64_t v101 = v144 + 1;
      sub_10002FF78(v156);
      uint64_t v43 = v141 + 80;
      uint64_t v144 = v101;
      if (v135 == v101)
      {
        swift_release(v42);
        uint64_t v102 = v150;
        goto LABEL_37;
      }
    }
  }

  swift_release(v157[0]);
  uint64_t v102 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_37:
  if (!((unint64_t)v102 >> 62))
  {
    if (*(void *)((v102 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_39;
    }
LABEL_46:
    uint64_t v103 = 0LL;
    goto LABEL_47;
  }

  if (v102 < 0) {
    uint64_t v104 = v102;
  }
  else {
    uint64_t v104 = v102 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v102);
  uint64_t v105 = _CocoaArrayWrapper.endIndex.getter(v104);
  swift_bridgeObjectRelease();
  if (!v105) {
    goto LABEL_46;
  }
LABEL_39:
  if ((v102 & 0xC000000000000001LL) != 0)
  {
    uint64_t v103 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v102);
    goto LABEL_47;
  }

  if (*(void *)((v102 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    uint64_t v103 = *(void *)(v102 + 32);
    swift_retain(v103);
LABEL_47:
    uint64_t v106 = v151;
    swift_retain(v103);
    swift_bridgeObjectRetain(v106);
    uint64_t v108 = sub_10005552C(v107);
    swift_bridgeObjectRelease();
    uint64_t v109 = swift_allocObject(&unk_1001AA208, 24LL, 7LL);
    swift_unknownObjectWeakInit(v109 + 16, v142);
    uint64_t v110 = (void *)swift_allocObject(&unk_1001AAED8, 40LL, 7LL);
    uint64_t v112 = v137;
    uint64_t v111 = v138;
    v110[2] = v109;
    v110[3] = v112;
    v110[4] = v111;
    swift_bridgeObjectRetain(v111);
    sub_1000530C8(0LL, 1, (uint64_t)sub_1000671C0, (uint64_t)v110);
    swift_release(v110);
    uint64_t v113 = v116;
    sub_100058B68( v112,  v111,  v106,  v108,  v102,  v103,  v116,  (uint64_t)&unk_1001AAF00,  (uint64_t)sub_100066B68,  (uint64_t)sub_100052990,  v115,  v116,  v117,  v118,  v119,  (uint64_t)v120,  (uint64_t)v121,  (uint64_t)v122,  v123,  (uint64_t)v124,  v125,  *((void (**)(void, uint64_t, uint64_t, uint64_t))&v125 + 1));
    swift_release(v103);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v113, v118);
    return v106;
  }

  __break(1u);
  uint64_t result = swift_release(v42);
  __break(1u);
  return result;
}

uint64_t sub_100059F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v130 = a2;
  uint64_t v131 = a3;
  uint64_t v6 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v136 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v133 = (char *)&v115 - v9;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v117 = *(void *)(v10 - 8);
  uint64_t v118 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v116 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = Date.init()(v11);
  id v14 = (id)AMSLogKey(v13);
  if (!v14) {
    id v14 = (id)AMSGenerateLogCorrelationKey();
  }
  uint64_t v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  uint64_t v138 = v15;

  if (qword_1001C80E8 != -1) {
    swift_once(&qword_1001C80E8, sub_100131F04);
  }
  sub_100132364(0xD000000000000013LL, 0x800000010016D530LL);
  if (qword_1001C7FB8 != -1) {
    swift_once(&qword_1001C7FB8, sub_1000BD55C);
  }
  uint64_t v16 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v17 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (v19 + 32) & ~v19;
  uint64_t v132 = v18;
  uint64_t v129 = v16;
  uint64_t v126 = v19 | 7;
  uint64_t v127 = v20 + 2 * v18;
  uint64_t v21 = swift_allocObject(v16, v127, v19 | 7);
  __int128 v125 = xmmword_100164230;
  *(_OWORD *)(v21 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v128 = v20;
  uint64_t v124 = (void *)type metadata accessor for EngagementService();
  *((void *)&v158 + 1) = v124;
  v157[0] = v4;
  id v142 = v4;
  id v22 = (id)AMSLogKey(v142);
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    uint64_t v26 = v25;

    swift_bridgeObjectRetain(v26);
    id v27 = v133;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v28._uint64_t countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = *((void *)&v158 + 1);
    uint64_t v30 = sub_10000D37C(v157, *((uint64_t *)&v158 + 1));
    uint64_t DynamicType = swift_getDynamicType(v30, v29, 1LL);
    v156[3] = swift_getMetatypeMetadata(DynamicType);
    v156[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v156);
    sub_10000DA68((uint64_t)v156, &qword_1001CAAD0);
    v32._uint64_t countAndFlagsBits = 5972026LL;
    v32._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    v156[3] = &type metadata for String;
    v156[0] = v24;
    v156[1] = v26;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v156);
    sub_10000DA68((uint64_t)v156, &qword_1001CAAD0);
    v33._uint64_t countAndFlagsBits = 93LL;
    v33._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    LogMessage.init(stringInterpolation:)(v27);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v34 = v133;
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v35._uint64_t countAndFlagsBits = 0LL;
    v35._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    uint64_t v36 = *((void *)&v158 + 1);
    uint64_t v37 = sub_10000D37C(v157, *((uint64_t *)&v158 + 1));
    uint64_t v38 = swift_getDynamicType(v37, v36, 1LL);
    v156[3] = swift_getMetatypeMetadata(v38);
    v156[0] = v38;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v156);
    sub_10000DA68((uint64_t)v156, &qword_1001CAAD0);
    v39._uint64_t countAndFlagsBits = 58LL;
    v39._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v39);
    LogMessage.init(stringInterpolation:)(v34);
  }

  sub_10000D3A0(v157);
  uint64_t v40 = LogMessage.init(stringLiteral:)(0xD000000000000012LL);
  uint64_t v41 = static os_log_type_t.default.getter(v40);
  sub_1000BD1B0(v41, v21);
  swift_bridgeObjectRelease();
  uint64_t v150 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v151 = (uint64_t)_swiftEmptyArrayStorage;
  v157[0] = a1;
  swift_bridgeObjectRetain(a1);
  sub_100064680(v157);
  uint64_t v42 = v157[0];
  uint64_t v135 = *(void *)(v157[0] + 16LL);
  if (v135)
  {
    uint64_t v43 = 0LL;
    uint64_t v144 = 0LL;
    uint64_t v122 = (__int128 *)&v152;
    uint64_t v123 = OBJC_IVAR____TtC14amsengagementd17EngagementService_priorityQueue;
    uint64_t v119 = 0x800000010016D590LL;
    uint64_t v120 = (void *)0x800000010016D570LL;
    uint64_t v121 = (__int128 *)&v153;
    uint64_t v134 = v157[0];
    while (1)
    {
      uint64_t v44 = v42 + v43;
      memcpy(v156, (const void *)(v42 + v43 + 32), sizeof(v156));
      uint64_t v45 = *(unsigned __int8 *)(v42 + v43 + 32);
      uint64_t v46 = *(unsigned __int8 *)(v42 + v43 + 33);
      uint64_t v47 = *(void *)(v44 + 40);
      __int128 v48 = *(_OWORD *)(v44 + 48);
      __int128 v49 = *(_OWORD *)(v44 + 64);
      uint64_t v51 = *(void *)(v44 + 80);
      uint64_t v50 = *(void *)(v44 + 88);
      uint64_t v52 = *(unsigned __int8 *)(v44 + 96);
      uint64_t v53 = *(void *)(v44 + 104);
      int v143 = LOBYTE(v156[8]);
      uint64_t v141 = v43;
      __int128 v139 = v49;
      __int128 v140 = v48;
      if (LOBYTE(v156[8]))
      {
        if (LOBYTE(v156[8]) != 1)
        {
          char v164 = v156[0];
          sub_100066268(v156);
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }

        uint64_t v54 = 0x696577746867696CLL;
        unint64_t v55 = 0xEF636E7953746867LL;
      }

      else
      {
        unint64_t v55 = 0xE700000000000000LL;
        uint64_t v54 = 0x65756575716E65LL;
      }

      char v164 = v156[0];
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, 1668184435LL, 0xE400000000000000LL, 0LL);
      sub_100066268(v156);
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0) {
        goto LABEL_21;
      }
LABEL_19:
      v157[0] = v45 | (v46 << 8);
      v157[1] = v47;
      __int128 v158 = v140;
      __int128 v159 = v139;
      uint64_t v160 = v51;
      uint64_t v161 = v50;
      uint64_t v162 = v52;
      uint64_t v163 = v53;
      sub_100066268(v156);
      BOOL v57 = sub_100058924((uint64_t)v157);
      sub_10002FF78(v156);
      if (!v57)
      {
LABEL_21:
        uint64_t v62 = swift_allocObject(v129, v127, v126);
        *(_OWORD *)(v62 + ++*(void *)(v0 + 16) = v125;
        Swift::String v149 = v124;
        uint64_t v63 = v142;
        uint64_t v147 = (uint64_t)v142;
        uint64_t v64 = v138;
        swift_bridgeObjectRetain_n(v138, 2LL);
        id v65 = v63;
        uint64_t v66 = v133;
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v67._uint64_t countAndFlagsBits = 0LL;
        v67._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v67);
        uint64_t v68 = v149;
        uint64_t v69 = sub_10000D37C(&v147, (uint64_t)v149);
        uint64_t v70 = swift_getDynamicType(v69, v68, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v70);
        v145[0] = v70;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v145);
        sub_10000DA68((uint64_t)v145, &qword_1001CAAD0);
        v71._uint64_t countAndFlagsBits = 5972026LL;
        v71._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v71);
        uint64_t MetatypeMetadata = &type metadata for String;
        v145[0] = v137;
        v145[1] = v64;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(v145);
        sub_10000DA68((uint64_t)v145, &qword_1001CAAD0);
        v72._uint64_t countAndFlagsBits = 93LL;
        v72._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v72);
        LogMessage.init(stringInterpolation:)(v66);
        swift_bridgeObjectRelease();
        sub_10000D3A0(&v147);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(56LL, 4LL);
        v73._uint64_t countAndFlagsBits = 0x6E69756575716E45LL;
        v73._object = (void *)0xEA00000000002067LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v73);
        if (v143)
        {
          if (v143 == 1)
          {
            uint64_t v74 = 0x696577746867696CLL;
            unint64_t v75 = 0xEF636E7953746867LL;
          }

          else
          {
            unint64_t v75 = 0xE400000000000000LL;
            uint64_t v74 = 1668184435LL;
          }
        }

        else
        {
          unint64_t v75 = 0xE700000000000000LL;
          uint64_t v74 = 0x65756575716E65LL;
        }

        Swift::String v149 = &type metadata for String;
        uint64_t v147 = v74;
        unint64_t v148 = v75;
        char v76 = BYTE1(v156[0]);
        uint64_t v77 = v136;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v78._uint64_t countAndFlagsBits = 0x7473657571657220LL;
        v78._object = (void *)0xEF203A7070612820LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v78);
        Swift::String v149 = &unk_1001A8968;
        LOBYTE(v147) = v76;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v79._uint64_t countAndFlagsBits = 0xD000000000000012LL;
        v79._object = v120;
        LogMessage.StringInterpolation.appendLiteral(_:)(v79);
        Swift::String v149 = &type metadata for Bool;
        LOBYTE(v147) = v164;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v80._uint64_t countAndFlagsBits = 0x69726F697270202CLL;
        v80._object = (void *)0xEC000000203A7974LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v80);
        uint64_t v81 = sub_10001D1B4();
        Swift::String v149 = &type metadata for String;
        uint64_t v147 = v81;
        unint64_t v148 = v82;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v147);
        sub_10000DA68((uint64_t)&v147, &qword_1001CAAD0);
        v83._uint64_t countAndFlagsBits = 41LL;
        v83._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v83);
        uint64_t v84 = LogMessage.init(stringInterpolation:)(v77);
        uint64_t v85 = static os_log_type_t.default.getter(v84);
        sub_1000BD1B0(v85, v62);
        swift_bridgeObjectRelease();
        sub_10001D1B4();
        uint64_t v87 = v86;
        uint64_t v88 = swift_allocObject(&unk_1001AA1E0, 152LL, 7LL);
        memcpy((void *)(v88 + 16), v156, 0x50uLL);
        uint64_t v89 = v138;
        *(void *)(v88 + 96) = v137;
        *(void *)(v88 + 10sub_10000D3A0(v0 + 4) = v89;
        *(void *)(v88 + 112) = v144;
        *(void *)(v88 + 120) = v65;
        *(_BYTE *)(v88 + 128) = v143;
        uint64_t v90 = v131;
        *(void *)(v88 + 136) = v130;
        *(void *)(v88 + 14sub_10000D3A0(v0 + 4) = v90;
        id v91 = v65;
        swift_bridgeObjectRetain(v89);
        sub_100066268(v156);
        swift_retain(v90);
        swift_bridgeObjectRetain(v87);
        sub_100102448(v76);
        sub_100062670();
        uint64_t v61 = v92;
        __int128 v155 = *v122;
        sub_1000662B4((uint64_t)&v155);
        __int128 v154 = *v121;
        sub_1000662B4((uint64_t)&v154);
        swift_bridgeObjectRelease();
        swift_release(v88);
        goto LABEL_27;
      }

      sub_10000D33C(&qword_1001CA718);
      NSString v58 = String._bridgeToObjectiveC()();
      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = (id)AMSError(11LL, v58, v59, 0LL);

      uint64_t v61 = Promise.__allocating_init(error:)(v60);
LABEL_27:
      uint64_t v42 = v134;
      uint64_t v93 = swift_retain(v61);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
      unint64_t v95 = *(void *)((v151 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v94 = *(void *)((v151 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v95 >= v94 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v94 > 1);
      }
      uint64_t v96 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v95, v61);
      uint64_t v97 = specialized Array._endMutation()(v96);
      if (v164 == 1)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97);
        unint64_t v99 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v98 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v99 >= v98 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1);
        }
        uint64_t v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v61);
        specialized Array._endMutation()(v100);
      }

      else
      {
        swift_release(v61);
      }

      uint64_t v101 = v144 + 1;
      sub_10002FF78(v156);
      uint64_t v43 = v141 + 80;
      uint64_t v144 = v101;
      if (v135 == v101)
      {
        swift_release(v42);
        uint64_t v102 = v150;
        goto LABEL_37;
      }
    }
  }

  swift_release(v157[0]);
  uint64_t v102 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_37:
  if (!((unint64_t)v102 >> 62))
  {
    if (*(void *)((v102 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_39;
    }
LABEL_46:
    uint64_t v103 = 0LL;
    goto LABEL_47;
  }

  if (v102 < 0) {
    uint64_t v104 = v102;
  }
  else {
    uint64_t v104 = v102 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v102);
  uint64_t v105 = _CocoaArrayWrapper.endIndex.getter(v104);
  swift_bridgeObjectRelease();
  if (!v105) {
    goto LABEL_46;
  }
LABEL_39:
  if ((v102 & 0xC000000000000001LL) != 0)
  {
    uint64_t v103 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v102);
    goto LABEL_47;
  }

  if (*(void *)((v102 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    uint64_t v103 = *(void *)(v102 + 32);
    swift_retain(v103);
LABEL_47:
    uint64_t v106 = v151;
    swift_retain(v103);
    swift_bridgeObjectRetain(v106);
    uint64_t v108 = sub_100055A80(v107);
    swift_bridgeObjectRelease();
    uint64_t v109 = swift_allocObject(&unk_1001AA208, 24LL, 7LL);
    swift_unknownObjectWeakInit(v109 + 16, v142);
    uint64_t v110 = (void *)swift_allocObject(&unk_1001AA230, 40LL, 7LL);
    uint64_t v112 = v137;
    uint64_t v111 = v138;
    v110[2] = v109;
    v110[3] = v112;
    v110[4] = v111;
    swift_bridgeObjectRetain(v111);
    sub_100053524(0LL, 1, (uint64_t)sub_10006631C, (uint64_t)v110);
    swift_release(v110);
    uint64_t v113 = v116;
    sub_100058B68( v112,  v111,  v106,  v108,  v102,  v103,  v116,  (uint64_t)&unk_1001AA258,  (uint64_t)sub_10006635C,  (uint64_t)sub_100053980,  v115,  v116,  v117,  v118,  v119,  (uint64_t)v120,  (uint64_t)v121,  (uint64_t)v122,  v123,  (uint64_t)v124,  v125,  *((void (**)(void, uint64_t, uint64_t, uint64_t))&v125 + 1));
    swift_release(v103);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v113, v118);
    return v106;
  }

  __break(1u);
  uint64_t result = swift_release(v42);
  __break(1u);
  return result;
}

void sub_10005ABE8()
{
  unint64_t v55 = v0;
  char v45 = v1;
  id v3 = v2;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  sub_10000DE00();
  sub_10000DC8C();
  __chkstk_darwin(v12);
  sub_10004895C();
  uint64_t v15 = v13 - v14;
  __chkstk_darwin(v16);
  char v48 = *v11;
  char v47 = v11[1];
  uint64_t v53 = (void *)*((void *)v11 + 1);
  uint64_t v46 = *((void *)v11 + 2);
  uint64_t v52 = *((void *)v11 + 5);
  uint64_t v54 = *((void *)v11 + 6);
  uint64_t v51 = *((void *)v11 + 7);
  char v50 = v11[64];
  uint64_t v49 = *((void *)v11 + 9);
  sub_100066F5C((uint64_t)(v11 + 24), (uint64_t)v58, &qword_1001C9760);
  NSString v59 = v9;
  unint64_t v60 = v7;
  sub_10000DF08();
  v17._uint64_t countAndFlagsBits = 95LL;
  v17._object = (void *)0xE100000000000000LL;
  String.append(_:)(v17);
  uint64_t v18 = v59;
  unint64_t v19 = v60;
  NSString v59 = v5;
  sub_100066268(v11);
  uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  id v22 = v21;
  NSString v59 = v18;
  unint64_t v60 = v19;
  sub_1000489DC();
  v23._uint64_t countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  sub_10000DE74();
  swift_bridgeObjectRelease();
  uint64_t v24 = v59;
  uint64_t v25 = v60;
  swift_bridgeObjectRetain_n(v60, 2LL);
  sub_1000662B4((uint64_t)v58);
  if (qword_1001C7FB8 != -1) {
    swift_once(&qword_1001C7FB8, sub_1000BD55C);
  }
  uint64_t v26 = sub_10000D33C(&qword_1001C9C70);
  sub_10002C79C();
  sub_10001A5F8();
  uint64_t v30 = (__n128 *)sub_10001059C((v28 & ~v27) + 2 * v29, v27);
  uint64_t v31 = sub_1000678D4(v30, (__n128)xmmword_100164230);
  uint64_t v62 = (void *)v31;
  NSString v59 = v3;
  swift_bridgeObjectRetain(v25);
  Swift::String v32 = v3;
  sub_100010564();
  sub_1000104F0();
  Swift::String v33 = sub_10000D37C(&v59, v31);
  sub_10000DC54((uint64_t)v33, v31);
  BOOL v57 = (void *)sub_100010530();
  v56[0] = v26;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
  sub_100037418((uint64_t)v56);
  sub_10000DC14();
  BOOL v57 = &type metadata for String;
  v56[0] = v24;
  v56[1] = v25;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
  sub_100037418((uint64_t)v56);
  sub_10000DC4C(93LL);
  sub_10001A298();
  sub_100020AB8();
  sub_10000D3A0(&v59);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(54LL, 4LL);
  v34._uint64_t countAndFlagsBits = 0x20676E696E6E7552LL;
  v34._object = (void *)0xE800000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  if (v45)
  {
    if (v45 == 1)
    {
      unint64_t v35 = 0xEF636E7953746867LL;
      uint64_t v36 = 0x696577746867696CLL;
    }

    else
    {
      unint64_t v35 = 0xE400000000000000LL;
      uint64_t v36 = 1668184435LL;
    }
  }

  else
  {
    unint64_t v35 = 0xE700000000000000LL;
    uint64_t v36 = 0x65756575716E65LL;
  }

  uint64_t v62 = &type metadata for String;
  NSString v59 = (void *)v36;
  unint64_t v60 = v35;
  sub_100067940();
  sub_100037418((uint64_t)&v59);
  v37._uint64_t countAndFlagsBits = 0x7473657571657220LL;
  v37._object = (void *)0xEF203A7070612820LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  uint64_t v62 = &unk_1001A8968;
  LOBYTE(v59) = v47;
  sub_1000675BC();
  sub_100037418((uint64_t)&v59);
  sub_100048BA0();
  v38._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v38);
  uint64_t v62 = &type metadata for Bool;
  LOBYTE(v59) = v48;
  sub_1000675BC();
  sub_100037418((uint64_t)&v59);
  v39._uint64_t countAndFlagsBits = 0x69726F697270202CLL;
  v39._object = (void *)0xEC000000203A7974LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v39);
  uint64_t v40 = sub_10001D1B4();
  uint64_t v62 = &type metadata for String;
  NSString v59 = (void *)v40;
  unint64_t v60 = v41;
  sub_100067940();
  sub_100037418((uint64_t)&v59);
  sub_10000DC4C(41LL);
  uint64_t v42 = LogMessage.init(stringInterpolation:)(v15);
  uint64_t v43 = static os_log_type_t.default.getter(v42);
  sub_1000BD1B0(v43, (uint64_t)v30);
  swift_bridgeObjectRelease();
  LOBYTE(v59) = v48;
  BYTE1(v59) = v47;
  unint64_t v60 = (unint64_t)v53;
  uint64_t v61 = v46;
  uint64_t v62 = v24;
  uint64_t v63 = v25;
  uint64_t v64 = v52;
  uint64_t v65 = v54;
  uint64_t v66 = v51;
  char v67 = v50;
  uint64_t v68 = v49;
  id v44 = v53;
  sub_10000DED8();
  v55(&v59);
  sub_10000E014(v54);
  sub_10000E014(v25);

  sub_10000DD84();
}

void sub_10005B09C()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_10000DE00();
  sub_10000DC8C();
  __chkstk_darwin(v8);
  sub_10000DC74();
  v5 += 16LL;
  sub_10000DC44(v5, (uint64_t)&v34, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    if (v7)
    {
      uint64_t v11 = (void *)_convertErrorToNSError(_:)(v7);
      if (qword_1001C7FB8 != -1) {
        swift_once(&qword_1001C7FB8, sub_1000BD55C);
      }
      sub_10000D33C(&qword_1001C9C70);
      sub_10002C79C();
      sub_100067688();
      uint64_t v14 = (__n128 *)sub_1000678EC((v13 & ~v12) - 0x5FFFFFFFFFFFFFDALL, v12);
      uint64_t v15 = sub_1000678D4(v14, (__n128)xmmword_100164230);
      sub_100067A28(v15);
      sub_10000DF10();
      sub_100010564();
      sub_10000DC08();
      uint64_t v16 = sub_10000D37C(v33, v15);
      uint64_t v17 = sub_10000DC54((uint64_t)v16, v15);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v17);
      uint64_t v30 = v17;
      sub_1000675BC();
      sub_100067788((uint64_t)&v30);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v30 = v3;
      uint64_t v31 = v1;
      sub_1000675BC();
      sub_100067788((uint64_t)&v30);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000D3A0(v33);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(41LL, 1LL);
      sub_100048E08(0xD000000000000029LL, (uint64_t)"All scheduled work completed with error: ");
      void v33[3] = sub_10000DE08(v18, (unint64_t *)&qword_1001CF9A0, &OBJC_CLASS___NSError_ptr);
      v33[0] = v11;
      id v19 = v11;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v33);
      sub_100067788((uint64_t)v33);
      sub_10000DC08();
      uint64_t v20 = sub_10000DC5C();
      uint64_t v21 = static os_log_type_t.error.getter(v20);
      sub_10006797C(v21, (uint64_t)v14);
    }

    else
    {
      if (qword_1001C7FB8 != -1) {
        swift_once(&qword_1001C7FB8, sub_1000BD55C);
      }
      sub_10000D33C(&qword_1001C9C70);
      uint64_t v22 = sub_10002C79C();
      Swift::String v23 = (__n128 *)sub_1000678EC( ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL))
                      + 2LL * *(void *)(*(void *)(v22 - 8) + 72LL),
                        *(unsigned __int8 *)(*(void *)(v22 - 8) + 80LL));
      uint64_t v24 = sub_1000678E0(v23, (__n128)xmmword_100164230);
      sub_100067A28(v24);
      sub_10000DF10();
      sub_100010564();
      sub_10000DC08();
      uint64_t v25 = sub_10000D37C(v33, v24);
      uint64_t v26 = sub_10000DC54((uint64_t)v25, v24);
      swift_getMetatypeMetadata(v26);
      sub_1000675BC();
      sub_10006794C();
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v30 = v3;
      uint64_t v31 = v1;
      sub_1000675BC();
      sub_10006794C();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000D3A0(v33);
      uint64_t v27 = LogMessage.init(stringLiteral:)(0xD00000000000001CLL);
      uint64_t v28 = static os_log_type_t.default.getter(v27);
      sub_10006797C(v28, (uint64_t)v23);
    }

    sub_1000090CC();
    sub_10005B404();
    if (qword_1001C80E8 != -1) {
      swift_once(&qword_1001C80E8, sub_100131F04);
    }
    sub_100048BA0();
    sub_100133128(0xD000000000000013LL, v29);
  }

  sub_10000DD84();
}

uint64_t sub_10005B404()
{
  uint64_t ObjectType = swift_getObjectType(v0);
  uint64_t v57 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v55 = *(void *)(v57 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v2);
  sub_10000DE7C();
  uint64_t v5 = (void *)(v4 - v3);
  uint64_t v58 = type metadata accessor for DispatchTime(0LL);
  uint64_t v56 = *(void *)(v58 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v6);
  sub_10004895C();
  uint64_t v53 = v7 - v8;
  __chkstk_darwin(v9);
  uint64_t v54 = (char *)&v45 - v10;
  uint64_t v11 = sub_100067420();
  uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v11 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v50 = *(void *)(v59 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v15);
  sub_1000674E0();
  uint64_t v16 = type metadata accessor for UUID(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_10000DC74();
  uint64_t v18 = UUID.init()();
  uint64_t v19 = UUID.uuidString.getter(v18);
  uint64_t v52 = v19;
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v0, v16);
  uint64_t v49 = *(void *)&v0[OBJC_IVAR____TtC14amsengagementd17EngagementService_serviceQueue];
  uint64_t v22 = (void *)sub_10000DDDC((uint64_t)&unk_1001AB1D0, 48LL);
  __int128 v22[2] = v0;
  void v22[3] = v19;
  uint64_t v23 = v21;
  uint64_t v24 = ObjectType;
  void v22[4] = v21;
  uint64_t v22[5] = v24;
  uint64_t v64 = sub_100066EF8;
  uint64_t v65 = v22;
  uint64_t v62 = _NSConcreteStackBlock;
  uint64_t v63 = 1107296256LL;
  uint64_t v25 = sub_10006799C((uint64_t)&unk_1001AB1E8);
  char v45 = v0;
  swift_bridgeObjectRetain(v21);
  static DispatchQoS.unspecified.getter(v26);
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v28 = v27;
  uint64_t v48 = v27;
  uint64_t v29 = sub_1000673F0();
  uint64_t v47 = v29;
  sub_1000673F8((unint64_t *)&qword_1001CD3F0);
  uint64_t v46 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v61, v29, v30, v11, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v1, v14, v25);
  _Block_release(v25);
  uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t))*((void *)v51 + 1);
  sub_100067744((uint64_t)v14, v51);
  sub_1000679E8();
  uint64_t v31 = swift_release(v65);
  uint64_t v32 = v53;
  static DispatchTime.now()(v31);
  *uint64_t v5 = 1LL;
  uint64_t v33 = v55;
  uint64_t v34 = v57;
  (*(void (**)(void *, void, uint64_t))(v55 + 104))( v5,  enum case for DispatchTimeInterval.seconds(_:),  v57);
  unint64_t v35 = v54;
  + infix(_:_:)(v32, v5);
  (*(void (**)(void *, uint64_t))(v33 + 8))(v5, v34);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  uint64_t v37 = v58;
  v36(v32, v58);
  uint64_t v38 = sub_10000DDDC((uint64_t)&unk_1001AA208, 24LL);
  swift_unknownObjectWeakInit(v38 + 16, v45);
  Swift::String v39 = (void *)sub_10000DDDC((uint64_t)&unk_1001AB220, 48LL);
  uint64_t v40 = v52;
  void v39[2] = v38;
  void v39[3] = v40;
  uint64_t v41 = ObjectType;
  void v39[4] = v23;
  v39[5] = v41;
  uint64_t v64 = sub_100066F50;
  uint64_t v65 = v39;
  uint64_t v62 = _NSConcreteStackBlock;
  uint64_t v63 = 1107296256LL;
  uint64_t v42 = sub_10006799C((uint64_t)&unk_1001AB238);
  uint64_t v43 = sub_10002FAEC();
  static DispatchQoS.unspecified.getter(v43);
  uint64_t v61 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v61, v47, v46, v11, v48);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v35, v1, v14, v42);
  sub_100067704();
  v51((uint64_t)v14, v11);
  sub_1000679E8();
  v36((uint64_t)v35, v37);
  sub_10002FAF4();
  return sub_10001A2D8();
}

uint64_t sub_10005B854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v40 - v12;
  swift_bridgeObjectRetain(a3);
  sub_100056074(a2, a3);
  if (qword_1001C7FB8 != -1) {
    swift_once(&qword_1001C7FB8, sub_1000BD55C);
  }
  v40[1] = qword_1001DBB38;
  uint64_t v14 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v15 = type metadata accessor for LogMessage(0LL);
  uint64_t v16 = swift_allocObject( v14,  ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL))
        + 4LL * *(void *)(*(void *)(v15 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v15 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v16 + ++*(void *)(v0 + 16) = xmmword_1001649D0;
  *((void *)&v44 + 1) = swift_getMetatypeMetadata(a4);
  *(void *)&__int128 v43 = a4;
  id v17 = (id)AMSLogKey(*((void *)&v44 + 1));
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    uint64_t v21 = v20;

    swift_bridgeObjectRetain(v21);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v22._uint64_t countAndFlagsBits = 0LL;
    v22._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = *((void *)&v44 + 1);
    uint64_t v24 = sub_10000D37C(&v43, *((uint64_t *)&v44 + 1));
    uint64_t DynamicType = swift_getDynamicType(v24, v23, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v41[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
    sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
    v26._uint64_t countAndFlagsBits = 5972026LL;
    v26._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t MetatypeMetadata = &type metadata for String;
    v41[0] = v19;
    v41[1] = v21;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
    sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
    v27._uint64_t countAndFlagsBits = 93LL;
    v27._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v27);
    LogMessage.init(stringInterpolation:)(v13);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v28._uint64_t countAndFlagsBits = 0LL;
    v28._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v28);
    uint64_t v29 = *((void *)&v44 + 1);
    uint64_t v30 = sub_10000D37C(&v43, *((uint64_t *)&v44 + 1));
    uint64_t v31 = swift_getDynamicType(v30, v29, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v31);
    v41[0] = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v41);
    sub_10000DA68((uint64_t)v41, &qword_1001CAAD0);
    v32._uint64_t countAndFlagsBits = 58LL;
    v32._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    LogMessage.init(stringInterpolation:)(v13);
  }

  sub_10000D3A0(&v43);
  *((void *)&v44 + 1) = &type metadata for String;
  *(void *)&__int128 v43 = 0xD000000000000018LL;
  *((void *)&v43 + 1) = 0x800000010016DC50LL;
  static LogMessage.safe(_:)(&v43);
  sub_10000DA68((uint64_t)&v43, &qword_1001CAAD0);
  LogMessage.init(stringLiteral:)(0xD000000000000015LL);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(22LL, 1LL);
  v33._object = (void *)0x800000010016DC90LL;
  v33._uint64_t countAndFlagsBits = 0xD000000000000015LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v33);
  uint64_t v34 = *(void *)(a1 + OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken + 8);
  if (v34)
  {
    uint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken);
    *((void *)&v44 + 1) = &type metadata for String;
    *(void *)&__int128 v43 = v35;
    *((void *)&v43 + 1) = v34;
  }

  else
  {
    __int128 v43 = 0u;
    __int128 v44 = 0u;
  }

  swift_bridgeObjectRetain(v34);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v43);
  sub_10000DA68((uint64_t)&v43, &qword_1001CAAD0);
  v36._uint64_t countAndFlagsBits = 41LL;
  v36._object = (void *)0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
  uint64_t v37 = LogMessage.init(stringInterpolation:)(v11);
  uint64_t v38 = static os_log_type_t.debug.getter(v37);
  sub_1000BD1B0(v38, v16);
  return swift_bridgeObjectRelease();
}

void sub_10005BC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LogMessage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v119[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v119[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v13);
  id v17 = &v119[-v16];
  a1 += 16LL;
  swift_beginAccess(a1, v129, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    uint64_t v19 = (char *)Strong;
    __int128 v133 = 0u;
    __int128 v134 = 0u;
    __int128 v131 = 0u;
    __int128 v132 = 0u;
    __int128 v130 = 0u;
    BOOL v20 = sub_100058924((uint64_t)&v130);
    uint64_t v21 = &v19[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken];
    uint64_t v22 = *(void *)&v19[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken + 8];
    uint64_t v123 = (uint64_t *)&v19[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken];
    if (!v22)
    {
LABEL_8:
      BOOL v120 = v20;
      *((void *)&v122 + 1) = a3;
      if (qword_1001C7FB8 != -1) {
        swift_once(&qword_1001C7FB8, sub_1000BD55C);
      }
      *(void *)&__int128 v122 = a2;
      uint64_t v121 = qword_1001DBB38;
      uint64_t v33 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v34 = swift_allocObject( v33,  ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
            + 4LL * *(void *)(v9 + 72),
              *(unsigned __int8 *)(v9 + 80) | 7LL);
      *(_OWORD *)(v34 + ++*(void *)(v0 + 16) = xmmword_1001649D0;
      *((void *)&v128 + 1) = swift_getMetatypeMetadata(a4);
      *(void *)&__int128 v127 = a4;
      id v35 = (id)AMSLogKey(*((void *)&v128 + 1));
      if (v35)
      {
        Swift::String v36 = v35;
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
        uint64_t v39 = v38;

        swift_bridgeObjectRetain(v39);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v40._uint64_t countAndFlagsBits = 0LL;
        v40._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v40);
        uint64_t v41 = *((void *)&v128 + 1);
        uint64_t v42 = sub_10000D37C(&v127, *((uint64_t *)&v128 + 1));
        uint64_t DynamicType = swift_getDynamicType(v42, v41, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
        uint64_t v124 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v124);
        sub_10000DA68((uint64_t)&v124, &qword_1001CAAD0);
        v44._uint64_t countAndFlagsBits = 5972026LL;
        v44._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v44);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v124 = v37;
        uint64_t v125 = v39;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v124);
        sub_10000DA68((uint64_t)&v124, &qword_1001CAAD0);
        v45._uint64_t countAndFlagsBits = 93LL;
        v45._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v45);
        LogMessage.init(stringInterpolation:)(v17);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v76._uint64_t countAndFlagsBits = 0LL;
        v76._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v76);
        uint64_t v77 = *((void *)&v128 + 1);
        Swift::String v78 = sub_10000D37C(&v127, *((uint64_t *)&v128 + 1));
        uint64_t v79 = swift_getDynamicType(v78, v77, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v79);
        uint64_t v124 = v79;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v124);
        sub_10000DA68((uint64_t)&v124, &qword_1001CAAD0);
        v80._uint64_t countAndFlagsBits = 58LL;
        v80._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v80);
        LogMessage.init(stringInterpolation:)(v17);
      }

      sub_10000D3A0(&v127);
      *((void *)&v128 + 1) = &type metadata for String;
      *(void *)&__int128 v127 = 0xD000000000000018LL;
      *((void *)&v127 + 1) = 0x800000010016DC50LL;
      static LogMessage.safe(_:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      LogMessage.init(stringLiteral:)(0xD000000000000018LL);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(50LL, 3LL);
      v81._uint64_t countAndFlagsBits = 0xD000000000000015LL;
      v81._object = (void *)0x800000010016DC90LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v81);
      uint64_t v82 = v123[1];
      if (v82)
      {
        uint64_t v83 = *v123;
        *((void *)&v128 + 1) = &type metadata for String;
        *(void *)&__int128 v127 = v83;
        *((void *)&v127 + 1) = v82;
      }

      else
      {
        __int128 v127 = 0u;
        __int128 v128 = 0u;
      }

      swift_bridgeObjectRetain(v82);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      v84._uint64_t countAndFlagsBits = 0xD000000000000013LL;
      v84._object = (void *)0x800000010016DCB0LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v84);
      *((void *)&v128 + 1) = &type metadata for Bool;
      LOBYTE(v127) = v120;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      v85._uint64_t countAndFlagsBits = 0x3A6E656B6F74202CLL;
      v85._object = (void *)0xE900000000000020LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v85);
      *((void *)&v128 + 1) = &type metadata for String;
      __int128 v127 = v122;
      swift_bridgeObjectRetain(*((void *)&v122 + 1));
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      v86._uint64_t countAndFlagsBits = 41LL;
      v86._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v86);
      uint64_t v87 = LogMessage.init(stringInterpolation:)(v15);
      uint64_t v88 = static os_log_type_t.debug.getter(v87);
      sub_1000BD1B0(v88, v34);
      swift_bridgeObjectRelease();

      return;
    }

    uint64_t v23 = *(void *)v21;
    if (*(void *)v21 == a2 && v22 == a3)
    {
      if (v20) {
        goto LABEL_8;
      }
    }

    else
    {
      *((void *)&v122 + 1) = v15;
      uint64_t v25 = a4;
      Swift::String v26 = v17;
      Swift::String v27 = v19;
      uint64_t v28 = v9;
      uint64_t v29 = v11;
      uint64_t v30 = v8;
      BOOL v31 = v20;
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v22, a2, a3, 0LL);
      BOOL v20 = v31;
      uint64_t v8 = v30;
      uint64_t v11 = v29;
      uint64_t v9 = v28;
      uint64_t v19 = v27;
      id v17 = v26;
      a4 = v25;
      uint64_t v15 = (_BYTE *)*((void *)&v122 + 1);
      if (v20 || (v32 & 1) == 0) {
        goto LABEL_8;
      }
    }

    uint64_t v59 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v60 = *(void *)(v9 + 72);
    uint64_t v61 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v62 = (v61 + 32) & ~v61;
    uint64_t v63 = swift_allocObject(v59, v62 + 3 * v60, v61 | 7);
    *(_OWORD *)(v63 + ++*(void *)(v0 + 16) = xmmword_100164240;
    *(void *)&__int128 v122 = v62;
    *((void *)&v128 + 1) = type metadata accessor for EngagementService();
    *(void *)&__int128 v127 = v19;
    *((void *)&v122 + 1) = v19;
    id v64 = (id)AMSLogKey(*((void *)&v122 + 1));
    if (v64)
    {
      uint64_t v65 = v64;
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      uint64_t v121 = v60;
      uint64_t v67 = v66;
      uint64_t v69 = v68;

      swift_bridgeObjectRetain(v69);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v70._uint64_t countAndFlagsBits = 0LL;
      v70._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v70);
      uint64_t v71 = *((void *)&v128 + 1);
      Swift::String v72 = sub_10000D37C(&v127, *((uint64_t *)&v128 + 1));
      uint64_t v73 = swift_getDynamicType(v72, v71, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v73);
      uint64_t v124 = v73;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v124);
      sub_10000DA68((uint64_t)&v124, &qword_1001CAAD0);
      v74._uint64_t countAndFlagsBits = 5972026LL;
      v74._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v74);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v124 = v67;
      uint64_t v60 = v121;
      uint64_t v125 = v69;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v124);
      sub_10000DA68((uint64_t)&v124, &qword_1001CAAD0);
      v75._uint64_t countAndFlagsBits = 93LL;
      v75._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v75);
      LogMessage.init(stringInterpolation:)(v17);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v96._uint64_t countAndFlagsBits = 0LL;
      v96._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v96);
      uint64_t v97 = *((void *)&v128 + 1);
      unint64_t v98 = sub_10000D37C(&v127, *((uint64_t *)&v128 + 1));
      uint64_t v99 = swift_getDynamicType(v98, v97, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v99);
      uint64_t v124 = v99;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v124);
      sub_10000DA68((uint64_t)&v124, &qword_1001CAAD0);
      v100._uint64_t countAndFlagsBits = 58LL;
      v100._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v100);
      LogMessage.init(stringInterpolation:)(v17);
    }

    sub_10000D3A0(&v127);
    *((void *)&v128 + 1) = &type metadata for String;
    *(void *)&__int128 v127 = 0xD000000000000018LL;
    *((void *)&v127 + 1) = 0x800000010016DC50LL;
    static LogMessage.safe(_:)(&v127);
    sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
    uint64_t v101 = LogMessage.init(stringLiteral:)(0xD000000000000012LL);
    if (qword_1001C7FB8 != -1) {
      uint64_t v101 = swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v102 = qword_1001DBB38;
    os_log_type_t v103 = static os_log_type_t.debug.getter(v101);
    uint64_t v104 = os_log_type_enabled(*(os_log_t *)(v102 + 16), v103);
    if ((_DWORD)v104)
    {
      *(void *)&__int128 v127 = 0LL;
      *((void *)&v127 + 1) = 0xE000000000000000LL;
      _StringGuts.grow(_:)(45LL);
      swift_bridgeObjectRelease();
      *(void *)&__int128 v127 = 0xD000000000000015LL;
      *((void *)&v127 + 1) = 0x800000010016DC90LL;
      uint64_t v105 = v123[1];
      if (v105)
      {
        uint64_t v106 = *v123;
        uint64_t v107 = (void *)v123[1];
      }

      else
      {
        uint64_t v107 = (void *)0xE400000000000000LL;
        uint64_t v106 = 1701736302LL;
      }

      swift_bridgeObjectRetain(v105);
      v108._uint64_t countAndFlagsBits = v106;
      v108._object = v107;
      String.append(_:)(v108);
      swift_bridgeObjectRelease();
      v109._uint64_t countAndFlagsBits = 0xD000000000000013LL;
      v109._object = (void *)0x800000010016DCB0LL;
      String.append(_:)(v109);
      v110._uint64_t countAndFlagsBits = 0x65736C6166LL;
      v110._object = (void *)0xE500000000000000LL;
      String.append(_:)(v110);
      v111._uint64_t countAndFlagsBits = 41LL;
      v111._object = (void *)0xE100000000000000LL;
      String.append(_:)(v111);
      *((void *)&v128 + 1) = &type metadata for String;
      static LogMessage.safe(_:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      unint64_t v112 = *(void *)(v63 + 16);
      if (v112 >= *(void *)(v63 + 24) >> 1)
      {
        sub_100014358();
        uint64_t v63 = v118;
      }

      *(void *)(v63 + ++*(void *)(v0 + 16) = v112 + 1;
      uint64_t v104 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v63 + v122 + v112 * v60, v11, v8);
    }

    uint64_t v113 = *(os_log_s **)(qword_1001DBB38 + 16);
    os_log_type_t v114 = static os_log_type_t.default.getter(v104);
    BOOL v115 = os_log_type_enabled(v113, v114);
    if (v115)
    {
      uint64_t v116 = static os_log_type_t.default.getter(v115);
      swift_bridgeObjectRetain(v63);
      sub_1000BD1B0(v116, v63);
      swift_bridgeObjectRelease();
    }

    uint64_t v117 = (void *)*((void *)&v122 + 1);
    sub_100056044(0LL, 0LL, 0LL, 0LL);
    swift_bridgeObjectRelease();
  }

  else
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v46 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v47 = swift_allocObject( v46,  ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + 2LL * *(void *)(v9 + 72),
            *(unsigned __int8 *)(v9 + 80) | 7LL);
    *(_OWORD *)(v47 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v131 + 1) = swift_getMetatypeMetadata(a4);
    *(void *)&__int128 v130 = a4;
    id v48 = (id)AMSLogKey(*((void *)&v131 + 1));
    if (v48)
    {
      uint64_t v49 = v48;
      uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
      uint64_t v52 = v51;

      swift_bridgeObjectRetain(v52);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v53._uint64_t countAndFlagsBits = 0LL;
      v53._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v53);
      uint64_t v54 = *((void *)&v131 + 1);
      uint64_t v55 = sub_10000D37C(&v130, *((uint64_t *)&v131 + 1));
      uint64_t v56 = swift_getDynamicType(v55, v54, 1LL);
      *((void *)&v128 + 1) = swift_getMetatypeMetadata(v56);
      *(void *)&__int128 v127 = v56;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      v57._uint64_t countAndFlagsBits = 5972026LL;
      v57._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v57);
      *((void *)&v128 + 1) = &type metadata for String;
      *(void *)&__int128 v127 = v50;
      *((void *)&v127 + 1) = v52;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      v58._uint64_t countAndFlagsBits = 93LL;
      v58._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v58);
      LogMessage.init(stringInterpolation:)(v17);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v89._uint64_t countAndFlagsBits = 0LL;
      v89._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v89);
      uint64_t v90 = *((void *)&v131 + 1);
      id v91 = sub_10000D37C(&v130, *((uint64_t *)&v131 + 1));
      uint64_t v92 = swift_getDynamicType(v91, v90, 1LL);
      *((void *)&v128 + 1) = swift_getMetatypeMetadata(v92);
      *(void *)&__int128 v127 = v92;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v127);
      sub_10000DA68((uint64_t)&v127, &qword_1001CAAD0);
      v93._uint64_t countAndFlagsBits = 58LL;
      v93._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v93);
      LogMessage.init(stringInterpolation:)(v17);
    }

    sub_10000D3A0(&v130);
    uint64_t v94 = LogMessage.init(stringLiteral:)(0xD00000000000002ALL);
    uint64_t v95 = static os_log_type_t.default.getter(v94);
    sub_1000BD1B0(v95, v47);
    swift_bridgeObjectRelease();
  }

void sub_10005C848()
{
  v44[1] = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v4 = [(id)objc_opt_self(AMSDevice) buildVersion];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  uint64_t v7 = v6;

  uint64_t v8 = sub_10001C8FC();
  uint64_t v9 = (char *)v8[2];
  uint64_t v10 = OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider;
  Swift::String v45 = v0;
  if (v9)
  {
    unint64_t v1 = 0LL;
    uint64_t v11 = &v0[v10];
    uint64_t v49 = &v62;
    uint64_t v50 = v8 + 4;
    id v48 = v9;
    uint64_t v46 = v9 - 1;
    uint64_t v47 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v12 = v1;
      while (1)
      {
        if (v12 >= (unint64_t)v8[2])
        {
          __break(1u);
          goto LABEL_33;
        }

        uint64_t v13 = v8;
        char v14 = v50[v12];
        unint64_t v1 = v12 + 1;
        sub_10000D37C(v11, *((void *)v11 + 3));
        sub_100026FDC(v14, (uint64_t)v55);
        sub_100066F5C((uint64_t)v55, (uint64_t)v56, &qword_1001C9768);
        if (!*(void *)&v56[0]) {
          break;
        }
        __int128 v60 = v56[1];
        __int128 v61 = v57;
        __int128 v59 = v56[0];
        uint64_t v62 = v58;
        uint64_t v15 = *((void *)&v57 + 1);
        uint64_t v16 = v57;
        uint64_t v63 = *(void *)&v56[0];
        sub_100066EB0(&v63);
        sub_100066F5C((uint64_t)v49, (uint64_t)v64, &qword_1001C9740);
        sub_100066EB0(v64);
        if (!v15) {
          break;
        }
        if (v16 == v5 && v15 == v7)
        {
          sub_100009070();
        }

        else
        {
          char v18 = sub_100025718(v16, v15, v5, v7);
          sub_100009070();
          if ((v18 & 1) == 0) {
            break;
          }
        }

        ++v12;
        uint64_t v8 = v13;
      }

      uint64_t v19 = v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v47);
      v53[0] = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10001711C(0LL, v19[2] + 1LL, 1);
        uint64_t v19 = (void *)v53[0];
      }

      unint64_t v22 = v19[2];
      unint64_t v21 = v19[3];
      uint64_t v23 = (void *)(v22 + 1);
      if (v22 >= v21 >> 1)
      {
        uint64_t v47 = (void *)(v22 + 1);
        sub_10001711C((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v23 = v47;
        uint64_t v19 = (void *)v53[0];
      }

      _OWORD v19[2] = v23;
      uint64_t v47 = v19;
      *((_BYTE *)v19 + v22 + 32) = v14;
      uint64_t v8 = v13;
    }

    while (v46 != (char *)v12);
  }

  else
  {
    uint64_t v47 = _swiftEmptyArrayStorage;
  }

LABEL_23:
  sub_10000DCFC();
  uint64_t v8 = (_UNKNOWN **)v45;

  sub_100009070();
  uint64_t v24 = v47;
  if (v47[2])
  {
    if (qword_1001C7FB8 != -1) {
LABEL_33:
    }
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    uint64_t v25 = (void *)sub_10000D33C(&qword_1001C9C70);
    sub_10002C79C();
    sub_100067688();
    uint64_t v28 = sub_10001059C((v27 & ~v26) + 2 * v1, v26);
    *(_OWORD *)(v28 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v54 = type metadata accessor for EngagementService();
    v53[0] = v8;
    uint64_t v50 = v8;
    id v29 = (id)AMSLogKey(v50);
    if (v29)
    {
      uint64_t v30 = sub_1000105E8((uint64_t)v29);
      uint64_t v32 = v31;

      sub_10000DED8();
      sub_100010564();
      sub_10000DC08();
      uint64_t v33 = v54;
      uint64_t v34 = sub_10000D37C(v53, v54);
      uint64_t v35 = sub_10000DC54((uint64_t)v34, v33);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v35);
      v51[0] = v35;
      sub_1000678CC();
      sub_100067788((uint64_t)v51);
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      v51[0] = v30;
      v51[1] = v32;
      sub_1000678CC();
      sub_100067788((uint64_t)v51);
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_1000090CC();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      uint64_t v36 = v54;
      uint64_t v37 = sub_10000D37C(v53, v54);
      uint64_t v38 = sub_10000DC54((uint64_t)v37, v36);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v38);
      v51[0] = v38;
      sub_1000678CC();
      sub_10000DA68((uint64_t)v51, &qword_1001CAAD0);
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000D3A0(v53);
    uint64_t v39 = LogMessage.init(stringLiteral:)(0xD000000000000017LL);
    uint64_t v40 = static os_log_type_t.info.getter(v39);
    sub_10006797C(v40, v28);
    sub_100020AB8();
    id v41 = [objc_allocWithZone(AMSEngagementSyncRequest) init];
    if (v47[2])
    {
      v53[0] = _swiftEmptyArrayStorage;
      sub_100067820();
      sub_100016F88();
      __asm { BR              X9 }
    }

    swift_release(v47);
    sub_1000521C0((uint64_t)_swiftEmptyArrayStorage, v41);
    sub_1000551CC();
    __int128 v43 = v42;

    uint64_t v24 = v43;
  }

  swift_release(v24);
  sub_10000DD84();
}

    *(void *)(v39 + 32) = v40;
    *(void *)(v39 + 40) = (unint64_t)(v41 - 32) | 0x8000000000000000LL;
    uint64_t v51 = (void *)JSCallable.call(_:)();

    swift_bridgeObjectRelease();
    if (!v7) {

    }
    return;
  }

  if (qword_1001C7FB0 != -1) {
    swift_once(&qword_1001C7FB0, sub_1000BD500);
  }
  uint64_t v24 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v25 = type metadata accessor for LogMessage(0LL);
  uint64_t v26 = swift_allocObject( v24,  ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v25 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v25 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v26 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t MetatypeMetadata = swift_getMetatypeMetadata(a7);
  *(void *)&Swift::String v76 = a7;
  uint64_t v27 = (id)AMSLogKey(MetatypeMetadata);
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    uint64_t v31 = v30;

    swift_bridgeObjectRetain(v31);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v32._uint64_t countAndFlagsBits = 0LL;
    v32._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v32);
    uint64_t v33 = MetatypeMetadata;
    uint64_t v34 = sub_10000D37C(&v76, MetatypeMetadata);
    uint64_t DynamicType = swift_getDynamicType(v34, v33, 1LL);
    Swift::String v75 = (void *)swift_getMetatypeMetadata(DynamicType);
    uint64_t v73 = (void *)DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
    sub_100048258((uint64_t)&v73, &qword_1001CAAD0);
    v36._uint64_t countAndFlagsBits = 5972026LL;
    v36._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v36);
    Swift::String v75 = &type metadata for String;
    uint64_t v73 = (void *)v29;
    Swift::String v74 = v31;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
    sub_100048258((uint64_t)&v73, &qword_1001CAAD0);
    v37._uint64_t countAndFlagsBits = 93LL;
    v37._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v37);
    LogMessage.init(stringInterpolation:)(v17);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v43._uint64_t countAndFlagsBits = 0LL;
    v43._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    Swift::String v44 = MetatypeMetadata;
    Swift::String v45 = sub_10000D37C(&v76, MetatypeMetadata);
    uint64_t v46 = swift_getDynamicType(v45, v44, 1LL);
    Swift::String v75 = (void *)swift_getMetatypeMetadata(v46);
    uint64_t v73 = (void *)v46;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v73);
    sub_100048258((uint64_t)&v73, &qword_1001CAAD0);
    v47._uint64_t countAndFlagsBits = 58LL;
    v47._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v47);
    LogMessage.init(stringInterpolation:)(v17);
  }

  sub_10000D3A0(&v76);
  id v48 = LogMessage.init(stringLiteral:)(0x6E617620666C6553LL);
  uint64_t v49 = static os_log_type_t.error.getter(v48);
  sub_1000BD1B0(v49, v26);
  swift_bridgeObjectRelease();
}

      __break(1u);
      goto LABEL_24;
    }

    __break(1u);
    goto LABEL_23;
  }

  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }

  if (a4 < 0) {
    uint64_t v8 = a4;
  }
  else {
    uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8LL;
  }
  uint64_t v9 = __CocoaSet.element(at:)(a1, a2, v8);
  unint64_t v21 = v9;
  uint64_t v10 = sub_10000DAA0(0LL, &qword_1001CF9F0, &OBJC_CLASS___AMSTreatment_ptr);
  swift_unknownObjectRetain(v9);
  swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v10, 7LL);
  swift_unknownObjectRelease(v9);
}

    uint64_t v9 = (v15 - 1) & v15;
    uint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    id v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    char v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    sub_1000489DC();
    String.hash(into:)(v32, v18, v19);
    uint64_t result = Hasher._finalize()();
    BOOL v20 = -1LL << *((_BYTE *)v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1LL << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      uint64_t v24 = 0;
      uint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        uint64_t v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0LL;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          uint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }

      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    uint64_t v23 = __clz(__rbit64((-1LL << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0LL;
LABEL_33:
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v23;
    uint64_t v28 = (void *)(v8[6] + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1LL)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }

  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_35;
  }
  uint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_35;
    }
    uint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }

    sub_1000EFDE4(a1);
    swift_beginAccess(v7, v30, 0LL, 0LL);
    uint64_t v26 = objc_msgSend(a1, "error", swift_bridgeObjectRetain(*v7).n128_f64[0]);
    sub_1000EDBBC();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v27 = [a1 error];
    if (v27)
    {
      uint64_t v28 = v27;
      sub_1000E902C();
    }

    id v29 = [(id)objc_opt_self(AMSPromise) promiseWithResult:a1];

    sub_1000EBB6C(a3, v6, v7);
    return v29;
  }

  else
  {
    if (a2)
    {
      id v17 = a2;
    }

    else
    {
      uint64_t v19 = String._bridgeToObjectiveC()();
      BOOL v20 = String._bridgeToObjectiveC()();
      id v17 = (id)AMSError(0LL, v19, v20, 0LL);
    }

    swift_errorRetain(a2);
    sub_1000E902C();
    unint64_t v21 = (void *)_convertErrorToNSError(_:)(v17);
    unint64_t v22 = [(id)objc_opt_self(AMSPromise) promiseWithError:v21];
    swift_errorRelease(v17);

    sub_1000EBB6C(a3, v6, v7);
    return v22;
  }

  __break(1u);
}

      uint64_t v9 = (v16 - 1) & v16;
    }
  }

  uint64_t result = swift_release(v3);
  *uint64_t v2 = v6;
  return result;
}

      uint64_t v9 = (v17 - 1) & v17;
    }
  }

  uint64_t result = swift_release(v3);
  *uint64_t v2 = v6;
  return result;
}

      uint64_t v10 = (v18 - 1) & v18;
    }
  }

  uint64_t result = swift_release();
  *uint64_t v2 = v6;
  return result;
}

    uint64_t v9 = (v16 - 1) & v16;
  }

  id v17 = v15 + 3;
  if (v17 >= v35)
  {
LABEL_35:
    uint64_t result = swift_release_n(v3, 2LL);
    uint64_t v2 = v33;
    goto LABEL_37;
  }

  uint64_t v16 = *(void *)(v34 + 8 * v17);
  if (v16)
  {
    unint64_t v12 = v17;
    goto LABEL_23;
  }

  while (1)
  {
    unint64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v12 >= v35) {
      goto LABEL_35;
    }
    uint64_t v16 = *(void *)(v34 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }

    uint64_t v10 = (v17 - 1) & v17;
  }

  char v18 = v16 + 3;
  if (v18 >= v32)
  {
LABEL_35:
    uint64_t result = swift_release_n(v3, 2LL);
    uint64_t v2 = v31;
    goto LABEL_37;
  }

  id v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    uint64_t v13 = v18;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v13 >= v32) {
      goto LABEL_35;
    }
    id v17 = *(void *)(v8 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }

    uint64_t v10 = (v18 - 1) & v18;
  }

  uint64_t v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_35:
    uint64_t result = swift_release_n(v3, 2LL);
    uint64_t v2 = v30;
    goto LABEL_37;
  }

  char v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    char v14 = v19;
    goto LABEL_23;
  }

  while (1)
  {
    char v14 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_35;
    }
    char v18 = *(void *)(v8 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }

void sub_10005CE00()
{
  uint64_t v2 = sub_100067420();
  uint64_t v15 = *(void *)(v2 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_10006725C();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1000292E4();
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  uint64_t v6 = sub_10000DDDC((uint64_t)&unk_1001AB180, 24LL);
  *(void *)(v6 + ++*(void *)(v0 + 16) = v0;
  v16[5] = sub_100066EA8;
  v16[6] = v6;
  v16[1] = _NSConcreteStackBlock;
  _OWORD v16[2] = 1107296256LL;
  sub_100067344((uint64_t)sub_100021A3C);
  static DispatchQoS.unspecified.getter(v0);
  v16[0] = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v8 = v7;
  uint64_t v9 = sub_1000673F0();
  sub_1000673F8((unint64_t *)&qword_1001CD3F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(v16, v9, v10, v2, v8);
  uint64_t v11 = sub_100067A5C();
  OS_dispatch_queue.async(group:qos:flags:execute:)(v11, v12, v13, v14);
  sub_100067704();
  sub_1000673E0(v15);
  sub_100067744(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_10006752C();
  sub_10000DD84();
}

void sub_10005CF84(void *a1)
{
  uint64_t v2 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for ActivityObserver();
  swift_initStaticObject(v5, &unk_1001C8108);
  if ((sub_10000F048() & 1) != 0)
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v6 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v7 = type metadata accessor for LogMessage(0LL);
    uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
         + 2LL * *(void *)(*(void *)(v7 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v8 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v52 = type metadata accessor for EngagementService();
    v51[0] = a1;
    id v9 = (id)AMSLogKey(a1);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      uint64_t v13 = v12;

      swift_bridgeObjectRetain(v13);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v14._uint64_t countAndFlagsBits = 0LL;
      v14._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v14);
      uint64_t v15 = v52;
      uint64_t v16 = sub_10000D37C(v51, v52);
      uint64_t DynamicType = swift_getDynamicType(v16, v15, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v48 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
      sub_10000DA68((uint64_t)&v48, &qword_1001CAAD0);
      v18._uint64_t countAndFlagsBits = 5972026LL;
      v18._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v48 = v11;
      uint64_t v49 = v13;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
      sub_10000DA68((uint64_t)&v48, &qword_1001CAAD0);
      v19._uint64_t countAndFlagsBits = 93LL;
      v19._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      LogMessage.init(stringInterpolation:)(v4);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v34._uint64_t countAndFlagsBits = 0LL;
      v34._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      uint64_t v35 = v52;
      uint64_t v36 = sub_10000D37C(v51, v52);
      uint64_t v37 = swift_getDynamicType(v36, v35, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v37);
      uint64_t v48 = v37;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
      sub_10000DA68((uint64_t)&v48, &qword_1001CAAD0);
      v38._uint64_t countAndFlagsBits = 58LL;
      v38._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      LogMessage.init(stringInterpolation:)(v4);
    }

    sub_10000D3A0(v51);
    uint64_t v39 = LogMessage.init(stringLiteral:)(0xD000000000000020LL);
    uint64_t v40 = static os_log_type_t.default.getter(v39);
    sub_1000BD1B0(v40, v8);
    swift_bridgeObjectRelease();
    swift_initStaticObject(v5, &unk_1001C8108);
    sub_10000F1D8(0);
  }

  else
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v20 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v21 = type metadata accessor for LogMessage(0LL);
    uint64_t v22 = swift_allocObject( v20,  ((*(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v21 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v22 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v52 = type metadata accessor for EngagementService();
    v51[0] = a1;
    id v23 = (id)AMSLogKey(a1);
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      uint64_t v27 = v26;

      swift_bridgeObjectRetain(v27);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v28._uint64_t countAndFlagsBits = 0LL;
      v28._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t v29 = v52;
      uint64_t v30 = sub_10000D37C(v51, v52);
      uint64_t v31 = swift_getDynamicType(v30, v29, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v31);
      uint64_t v48 = v31;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
      sub_10000DA68((uint64_t)&v48, &qword_1001CAAD0);
      v32._uint64_t countAndFlagsBits = 5972026LL;
      v32._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v48 = v25;
      uint64_t v49 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
      sub_10000DA68((uint64_t)&v48, &qword_1001CAAD0);
      v33._uint64_t countAndFlagsBits = 93LL;
      v33._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)(v4);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v41._uint64_t countAndFlagsBits = 0LL;
      v41._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      uint64_t v42 = v52;
      __int128 v43 = sub_10000D37C(v51, v52);
      uint64_t v44 = swift_getDynamicType(v43, v42, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v44);
      uint64_t v48 = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v48);
      sub_10000DA68((uint64_t)&v48, &qword_1001CAAD0);
      v45._uint64_t countAndFlagsBits = 58LL;
      v45._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      LogMessage.init(stringInterpolation:)(v4);
    }

    sub_10000D3A0(v51);
    uint64_t v46 = LogMessage.init(stringLiteral:)(0xD000000000000032LL);
    uint64_t v47 = static os_log_type_t.info.getter(v46);
    sub_1000BD1B0(v47, v22);
    swift_bridgeObjectRelease();
  }

BOOL sub_10005D4B8()
{
  uint64_t v0 = sub_1000378A0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  sub_10004895C();
  uint64_t v4 = (char *)(v2 - v3);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - v6;
  sub_10001D030();
  static Date.now.getter(v8);
  double v9 = Date.timeIntervalSince(_:)(v7);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v7, v0);
  return v9 <= 60.0;
}

void sub_10005D584(uint64_t a1)
{
  CFPropertyListRef v3 = sub_100049E28();
  if (v3
    && (uint64_t v8 = (uint64_t)v3,
        uint64_t v4 = sub_10000D33C(&qword_1001C9120),
        swift_dynamicCast(&v7, &v8, (char *)&type metadata for Swift.AnyObject + 8, v4, 6LL)))
  {
    uint64_t v5 = v7;
  }

  else
  {
    uint64_t v6 = sub_1000378A0();
    uint64_t v5 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  v6,  &protocol witness table for String);
  }

  uint64_t v8 = v5;
  __asm { BR              X10 }

#error "10005D70C: call analysis failed (funcsize=35)"
void *sub_10005D758(void *a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  void v13[2];
  _BYTE v14[40];
  __int128 v15;
  __int128 v16;
  void *v17;
  sub_10006B680(a1);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v5 = v3;
    id v17 = _swiftEmptyArrayStorage;
    uint64_t v6 = *(void *)(v3 + 16);
    if (v6)
    {
      uint64_t v7 = 0LL;
      sub_100067548();
      do
      {
        uint64_t v8 = *(void *)(v5 + 8 * v7 + 32);
        v13[0] = v1;
        v13[1] = v2;
        swift_bridgeObjectRetain(v8);
        AnyHashable.init<A>(_:)(v13);
        if (*(void *)(v8 + 16) && (double v9 = sub_100030D24((uint64_t)v14), (v10 & 1) != 0))
        {
          sub_10000DA1C(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v15);
        }

        else
        {
          uint64_t v15 = 0u;
          uint64_t v16 = 0u;
        }

        sub_10000E854((uint64_t)v14);
        if (*((void *)&v16 + 1))
        {
          if ((swift_dynamicCast(v13, &v15, (char *)&type metadata for Any + 8, &type metadata for Bool, 6LL) & 1) != 0
            && (v13[0] & 1) != 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0) {
              sub_100067810();
            }
            uint64_t v4 = v17;
            uint64_t v1 = v17[2];
            uint64_t v11 = v17[3];
            uint64_t v2 = v1 + 1;
            if (v1 >= v11 >> 1)
            {
              sub_100048B48(v11);
              sub_100067810();
              uint64_t v4 = v17;
            }

            void v4[2] = v2;
            v4[v1 + 4] = v8;
            sub_100067548();
            goto LABEL_18;
          }
        }

        else
        {
          sub_10000DA68((uint64_t)&v15, &qword_1001CAAD0);
        }

        swift_bridgeObjectRelease();
LABEL_18:
        ++v7;
      }

      while (v6 != v7);
    }

    sub_100009020();
  }

  return v4;
}

void sub_10005D8FC()
{
}

void sub_10005D934()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for EngagementService();
  objc_msgSendSuper2(&v1, "dealloc");
  sub_1000676F0();
}

uint64_t type metadata accessor for EngagementService()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd17EngagementService);
}

uint64_t sub_10005DA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  void v6[5] = a4;
  _OWORD v6[2] = a1;
  void v6[3] = a2;
  uint64_t v7 = type metadata accessor for ContentInfo(0LL);
  v6[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[9] = v8;
  void v6[10] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10005DA80, 0LL, 0LL);
}

uint64_t sub_10005DA80()
{
  v52._uint64_t countAndFlagsBits = sub_1000675EC();
  char v1 = sub_10001C9CC(v52);
  if (v1 == 4)
  {
    uint64_t v2 = v0[10];
    sub_100048BA0();
    NSString v3 = String._bridgeToObjectiveC()();
    sub_100048BA0();
    NSString v4 = String._bridgeToObjectiveC()();
    (id)AMSError(2LL, v3, v4, 0LL);

    swift_willThrow(v5);
    swift_task_dealloc(v2);
    sub_1000677F4();
    __asm { BR              X0 }
  }

  char v7 = v1;
  uint64_t v8 = type metadata accessor for ContentManager();
  uint64_t v9 = sub_10000DDDC(v8, 17LL);
  *(_BYTE *)(v9 + ++*(void *)(v0 + 16) = v7;
  sub_1000400D0();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_100020B68();
LABEL_19:
    swift_task_dealloc(v0[10]);
    sub_1000677F4();
    __asm { BR              X1 }
  }

  uint64_t v47 = v9;
  uint64_t v13 = v0[8];
  uint64_t v12 = v0[9];
  Swift::String v14 = _swiftEmptyDictionarySingleton;
  uint64_t v15 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v48 = *(void *)(v12 + 72);
  uint64_t v49 = v13;
  while (1)
  {
    uint64_t v16 = v0[10];
    sub_100039F1C(v15, v16);
    id v17 = [objc_allocWithZone(AMSContentInfo) init];
    sub_1000675EC();
    NSString v18 = String._bridgeToObjectiveC()();
    sub_100067480((uint64_t)v18, "setCacheKey:");

    Class isa = Date._bridgeToObjectiveC()().super.isa;
    sub_100067480((uint64_t)isa, "setCreated:");

    Class v20 = Date._bridgeToObjectiveC()().super.isa;
    sub_100067480((uint64_t)v20, "setExpires:");

    uint64_t v50 = v11;
    if (*(void *)(v16 + *(int *)(v13 + 36) + 8))
    {
      sub_10000DEE0();
      sub_100067984();
      NSString v22 = String._bridgeToObjectiveC()();
      uint64_t v21 = sub_100009020();
    }

    else
    {
      NSString v22 = 0LL;
    }

    uint64_t v23 = v0[10];
    sub_100067480(v21, "setPath:");

    uint64_t v24 = (uint64_t *)(v23 + *(int *)(v13 + 48));
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    sub_1000489DC();
    NSString v27 = String._bridgeToObjectiveC()();
    uint64_t v28 = sub_10000DE74();
    sub_100067480(v28, "setVersion:");

    sub_1000489DC();
    id v29 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
    uint64_t v51 = v14;
    uint64_t result = sub_100067830();
    uint64_t v33 = v14[2];
    BOOL v34 = (v32 & 1) == 0;
    Swift::Int v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    unint64_t v36 = result;
    char v37 = v32;
    sub_10000D33C(&qword_1001CA7D0);
    uint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v35);
    Swift::String v14 = v51;
    if ((result & 1) != 0)
    {
      uint64_t result = sub_100067830();
      if ((v37 & 1) != (v38 & 1))
      {
        sub_1000677F4();
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v46);
      }

      unint64_t v36 = result;
    }

    if ((v37 & 1) != 0)
    {
      uint64_t v39 = v51[7];

      *(void *)(v39 + 8 * v36) = v29;
    }

    else
    {
      v51[(v36 >> 6) + 8] |= 1LL << v36;
      uint64_t v40 = (void *)(v51[6] + 16 * v36);
      *uint64_t v40 = v26;
      v40[1] = v25;
      *(void *)(v51[7] + 8 * v36) = v29;
      uint64_t v41 = v51[2];
      BOOL v42 = __OFADD__(v41, 1LL);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_22;
      }
      void v51[2] = v43;
      sub_1000489DC();
    }

    uint64_t v44 = v0[10];
    swift_bridgeObjectRelease();
    sub_10000DE74();

    sub_1000207E4(v44);
    uint64_t v13 = v49;
    v15 += v48;
    uint64_t v11 = v50 - 1;
    if (v50 == 1)
    {
      swift_bridgeObjectRelease();
      swift_release(v47);
      goto LABEL_19;
    }
  }

  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_10005DED4(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[2] = a5;
  v5[3] = _Block_copy(aBlock);
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v12 = v11;
  v5[4] = v11;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  uint64_t v15 = v14;
  v5[5] = v14;
  if (a3)
  {
    a3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    uint64_t v17 = v16;
  }

  else
  {
    uint64_t v17 = 0LL;
  }

  v5[6] = v17;
  uint64_t v18 = dword_1001CA7C4;
  id v19 = a5;
  Class v20 = (void *)swift_task_alloc(v18);
  v5[7] = v20;
  *Class v20 = v5;
  v20[1] = sub_10005DFB8;
  return sub_10005DA18(v10, v12, v13, v15, a3, v17);
}

uint64_t sub_10005DFB8()
{
  uint64_t v11 = *v1;
  uint64_t v2 = v11;
  NSString v3 = *(void **)(v11 + 16);
  uint64_t v4 = *v1;
  sub_100067A34(*(void *)(v11 + 56), &v11);

  sub_1000090CC();
  sub_10000DDF8();
  uint64_t v5 = swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v6 = _convertErrorToNSError(_:)(v0);
    sub_100067974();
    Class isa = 0LL;
    uint64_t v8 = (void *)v6;
  }

  else
  {
    sub_10000DE08(v5, &qword_1001CA7C8, &OBJC_CLASS___AMSContentInfo_ptr);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_100009070();
    uint64_t v6 = 0LL;
    uint64_t v8 = isa;
  }

  uint64_t v9 = *(void (***)(void, void, void))(v2 + 24);
  ((void (**)(void, Class, uint64_t))v9)[2](v9, isa, v6);

  _Block_release(v9);
  return sub_1000676E8(*(uint64_t (**)(void))(v4 + 8));
}

void sub_10005E0A8()
{
  NSString v3 = v2;
  uint64_t v17 = *(void *)(sub_100067420() - 8);
  sub_10000DC8C();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10006725C();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1000105F0();
  sub_10000D33C(&qword_1001C8BC8);
  uint64_t v7 = sub_100067A48();
  uint64_t v8 = (void *)sub_10000DDDC((uint64_t)&unk_1001AAB90, 40LL);
  v8[2] = v3;
  v8[3] = v0;
  v8[4] = v7;
  sub_100067344((uint64_t)sub_100021A3C);
  id v9 = v3;
  id v10 = v0;
  sub_10002FAEC();
  sub_100067A00();
  sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v12 = v11;
  sub_1000673F0();
  sub_1000673F8((unint64_t *)&qword_1001CD3F0);
  uint64_t v13 = sub_100067728();
  dispatch thunk of SetAlgebra.init<A>(_:)(v13, v14, v15, v16, v12);
  sub_10006769C();
  sub_100067704();
  sub_1000673E0(v17);
  sub_100067744(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_10006752C();
  sub_100060224();
  sub_10002FAF4();
  sub_10000DD84();
}

void sub_10005E248(void *a1, void *a2, id *a3)
{
  id v52 = *a3;
  uint64_t v6 = type metadata accessor for DispatchQoS.QoSClass(0LL);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100065768(a1);
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v10 = 0LL;
  }

  __int128 v55[3] = &type metadata for AMSFlags;
  v55[4] = sub_100038728();
  LOBYTE(v55[0]) = 0;
  char v11 = isFeatureEnabled(_:)(v55);
  sub_10000D3A0(v55);
  if ((v11 & 1) != 0) {
    sub_10005C848();
  }
  uint64_t v12 = swift_allocObject(&unk_1001AA140, 24LL, 7LL);
  *(void *)(v12 + ++*(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for Double,  (char *)&type metadata for Any + 8,  &protocol witness table for Double);
  uint64_t v13 = swift_allocObject(&unk_1001AAC08, 32LL, 7LL);
  *(void *)(v13 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(v13 + 2sub_10000D3A0(v0 + 4) = 0xE000000000000000LL;
  id v14 = [objc_allocWithZone(NSLock) init];
  sub_100057FA0(a1);
  uint64_t v15 = sub_10005D758(a1)[2];
  swift_bridgeObjectRelease();
  if (v15)
  {
    id v16 = [objc_allocWithZone(AMSEngagementEnqueueResult) init];
    v55[0] = v16;
    Promise.resolve(_:)(v55);
    swift_release(v12);
    swift_release(v13);
  }

  else
  {
    uint64_t v51 = a3;
    sub_10004C2B8(0xD00000000000001CLL, 0x800000010016DA90LL, 0xD000000000000012LL, 0x800000010016DAB0LL);
    uint64_t v17 = sub_1000560E8(a1);
    uint64_t v18 = (void *)swift_allocObject(&unk_1001AAC30, 56LL, 7LL);
    _OWORD v18[2] = v14;
    v18[3] = v12;
    void v18[4] = v13;
    void v18[5] = a2;
    v18[6] = a1;
    id v46 = v14;
    swift_retain(v12);
    swift_retain(v13);
    id v19 = a2;
    id v20 = a1;
    uint64_t v21 = sub_1000592F8((uint64_t)v17, (uint64_t)sub_100066964, (uint64_t)v18);
    uint64_t v48 = v22;
    uint64_t v49 = v21;
    uint64_t v47 = v23;
    uint64_t v25 = v24;
    swift_release(v18);
    type metadata accessor for Defaults();
    char v26 = sub_100049C68();
    uint64_t v50 = v8;
    if (v25)
    {
      if ((v26 & 1) != 0) {
        double v27 = 600.0;
      }
      else {
        double v27 = AMSEngagementEnqueueDefaultTimeout;
      }
      swift_retain(v25);
      uint64_t v28 = sub_10008FAC8(0x2065756575716E45LL, 0xEF74756F656D6974LL, v27);
      uint64_t v29 = v25;
      uint64_t v30 = v28;
      uint64_t v45 = v29;
      swift_release(v29);
    }

    else
    {
      v55[0] = [objc_allocWithZone(AMSEngagementEnqueueResult) init];
      uint64_t v30 = Promise.__allocating_init(value:)(v55);
      uint64_t v45 = 0LL;
    }

    uint64_t v31 = swift_allocObject(&unk_1001AAC58, 32LL, 7LL);
    *(void *)(v31 + ++*(void *)(v0 + 16) = v19;
    *(void *)(v31 + 2sub_10000D3A0(v0 + 4) = v20;
    id v32 = v19;
    id v33 = v20;
    sub_100052990();
    swift_release(v31);
    uint64_t v34 = swift_allocObject(&unk_1001AA208, 24LL, 7LL);
    swift_unknownObjectWeakInit(v34 + 16, v32);
    uint64_t v35 = swift_allocObject(&unk_1001AAC80, 32LL, 7LL);
    *(void *)(v35 + ++*(void *)(v0 + 16) = v34;
    *(void *)(v35 + 2sub_10000D3A0(v0 + 4) = v17;
    uint64_t v36 = v48;
    sub_1000530C8(0LL, 1, (uint64_t)sub_1000669B8, v35);
    swift_release(v35);
    char v37 = (void *)swift_allocObject(&unk_1001AACA8, 40LL, 7LL);
    char v38 = v46;
    _OWORD v37[2] = v46;
    v37[3] = v12;
    v37[4] = v13;
    sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v40 = v53;
    uint64_t v39 = v54;
    uint64_t v41 = v50;
    (*(void (**)(char *, void, uint64_t))(v53 + 104))( v50,  enum case for DispatchQoS.QoSClass.default(_:),  v54);
    id v52 = v38;
    swift_retain(v12);
    swift_retain(v13);
    BOOL v42 = (void *)static OS_dispatch_queue.global(qos:)(v41);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v39);
    uint64_t v43 = sub_100066128( (uint64_t)sub_1000669E0,  (uint64_t)v37,  v42,  v30,  (uint64_t)&unk_1001AABE0,  (uint64_t)sub_100066094,  (uint64_t)sub_1000670A0);

    swift_release(v37);
    sub_10005FDB0();
    swift_release(v12);
    swift_release(v13);
    swift_release(v30);
    swift_release(v43);
    swift_release(v45);
    swift_bridgeObjectRelease();
    swift_release(v36);
    swift_bridgeObjectRelease();
  }

void sub_10005E790(_BYTE *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a6;
  unint64_t v24 = 0xE900000000000073LL;
  uint64_t v36 = type metadata accessor for OSSignposter(0LL);
  uint64_t v25 = *(void *)(v36 - 8);
  uint64_t v9 = __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v30 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  double v27 = (char *)&v24 - v15;
  __chkstk_darwin(v14);
  id v32 = (char *)&v24 - v16;
  uint64_t v31 = a3;
  uint64_t v17 = a3 + 16;
  unint64_t v18 = 0xE000000000000000LL;
  uint64_t v37 = 0LL;
  unint64_t v38 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(20LL);
  if ((*a1 & 1) != 0) {
    uint64_t v19 = 3041653LL;
  }
  else {
    uint64_t v19 = 0LL;
  }
  if ((*a1 & 1) != 0) {
    unint64_t v18 = 0xE300000000000000LL;
  }
  unint64_t v20 = v18;
  String.append(_:)(*(Swift::String *)&v19);
  swift_bridgeObjectRelease();
  v21._object = (void *)0x800000010016DAB0LL;
  v21._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v21);
  uint64_t v22 = v37;
  uint64_t v23 = v38;
  objc_msgSend(a2, "lock", v24, v25, v26);
  swift_beginAccess(v17, &v37, 33LL, 0LL);
  uint64_t v29 = v22;
  uint64_t v28 = v23;
  sub_10004C2B8(0xD000000000000017LL, 0x800000010016DB10LL, v22, v23);
  swift_endAccess(&v37);
  __asm { BR              X9 }

uint64_t sub_10005E9D8()
{
  *(void *)(v1 + ++*(void *)(v0 + 16) = 0x6C616E7265746E69LL;
  *(void *)(v1 + 2sub_10000D3A0(v0 + 4) = 0xE800000000000000LL;
  swift_bridgeObjectRelease();
  *(void *)(v7 - 280) = v4;
  [v4 unlock];
  uint64_t v8 = sub_100056CF4();
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for EnqueueRunner();
  swift_allocObject(v11, 153LL, 7LL);
  sub_100068DB4(v6, v8, v10);
  uint64_t v13 = v12;
  uint64_t v14 = OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider;
  *(void *)(v7 - 26sub_10000D3A0(v0 + 4) = v2;
  sub_100019EEC(v2 + v14, v7 - 152);
  sub_100066F5C(v7 - 152, v7 - 192, &qword_1001CA748);
  swift_beginAccess(v13 + 16, v7 - 216, 33LL, 0LL);
  sub_100066268(v6);
  swift_unknownObjectRetain(v8);
  sub_100066530(v7 - 192, v13 + 16);
  swift_endAccess(v7 - 216);
  *(void *)(v7 - 320) = sub_100068E04(*(void **)(v7 - 320));
  sub_100056090();
  uint64_t v15 = swift_retain(v13);
  uint64_t v16 = OSSignposter.logHandle.getter(v15);
  uint64_t v17 = *(void *)(v7 - 256);
  OSSignpostID.init(log:object:)(v16, v13);
  unint64_t v18 = *(void (**)(uint64_t, void))(*(void *)(v7 - 328) + 8LL);
  v18(v0, *(void *)(v7 - 224));
  sub_100056090();
  sub_100066268(v6);
  uint64_t v19 = sub_100066268(v6);
  unint64_t v20 = (void *)OSSignposter.logHandle.getter(v19);
  static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    (*(void (**)(void, uint64_t, void))(*(void *)(v7 - 248) + 16LL))( *(void *)(v7 - 312),  v17,  *(void *)(v7 - 240));
    Swift::String v21 = (_DWORD *)swift_slowAlloc(12LL, -1LL);
    *(void *)(v7 - 152) = swift_slowAlloc(32LL, -1LL);
    *Swift::String v21 = 136315138;
    *(void *)(v7 - 328) = v8;
    __asm { BR              X10 }
  }

  sub_10002FF78(v6);
  sub_10002FF78(v6);
  uint64_t v23 = *(void *)(v7 - 248);
  uint64_t v22 = *(void *)(v7 - 240);
  uint64_t v24 = *(void *)(v7 - 288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v17, v22);
  uint64_t v25 = type metadata accessor for OSSignpostIntervalState(0LL);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  uint64_t v26 = OSSignpostIntervalState.init(id:isOpen:)(v24, 1LL);
  v18(*(void *)(v7 - 232), *(void *)(v7 - 224));
  uint64_t v27 = v17;
  uint64_t v28 = (void *)swift_allocObject(&unk_1001AB0E0, 64LL, 7LL);
  uint64_t v29 = *(void **)(v7 - 280);
  uint64_t v30 = *(void *)(v7 - 272);
  Swift::String v28[2] = v29;
  void v28[3] = v30;
  uint64_t v31 = *(void *)(v7 - 304);
  v28[4] = *(void *)(v7 - 296);
  v28[5] = v31;
  id v32 = *(void **)(v7 - 264);
  v28[6] = v32;
  v28[7] = v26;
  id v33 = v29;
  swift_retain(v30);
  id v34 = v32;
  swift_retain(v26);
  uint64_t v35 = *(void *)(v7 - 320);
  sub_100052990();
  swift_unknownObjectRelease(v8);
  swift_release(v13);
  swift_release(v26);
  swift_release(v28);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, v22);
  return v35;
}

uint64_t sub_10005EEB0( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v62 = a8;
  uint64_t v63 = a2;
  uint64_t v12 = type metadata accessor for OSSignpostError(0LL);
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v18 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v60 = *(void *)(v18 - 8);
  uint64_t v61 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  Swift::String v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v55 - v22;
  uint64_t v24 = type metadata accessor for OSSignposter(0LL);
  uint64_t v58 = *(void *)(v24 - 8);
  uint64_t v59 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v55 - v28;
  [a3 lock];
  swift_beginAccess(a4 + 16, v64, 33LL, 0LL);
  sub_10004C2B8(0xD00000000000001BLL, 0x800000010016DB30LL, a5, a6);
  swift_endAccess(v64);
  [a3 unlock];
  if (v63)
  {
    uint64_t v30 = sub_100056090();
    uint64_t v31 = (os_log_s *)OSSignposter.logHandle.getter(v30);
    uint64_t v32 = v62;
    uint64_t v33 = OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v34 = static os_signpost_type_t.end.getter(v33);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      uint64_t v35 = swift_retain(v32);
      checkForErrorAndConsumeState(state:)(v35);
      swift_release(v32);
      uint64_t v37 = v56;
      uint64_t v36 = v57;
      if ((*(unsigned int (**)(char *, uint64_t))(v56 + 88))(v15, v57) == enum case for OSSignpostError.doubleEnd(_:))
      {
        unint64_t v38 = "[Error] Interval already ended";
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v36);
        unint64_t v38 = "Failed";
      }

      uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v51 = 0;
      os_signpost_id_t v52 = OSSignpostID.rawValue.getter(v51);
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v31, v34, v52, "Enqueue", v38, v51, 2u);
LABEL_14:
      uint64_t v48 = v60;
      uint64_t v47 = v61;
      uint64_t v50 = v58;
      uint64_t v49 = v59;
      swift_slowDealloc(v51, -1LL, -1LL);
      goto LABEL_15;
    }
  }

  else
  {
    uint64_t v39 = sub_100056090();
    uint64_t v31 = (os_log_s *)OSSignposter.logHandle.getter(v39);
    uint64_t v40 = v62;
    uint64_t v41 = OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v42 = static os_signpost_type_t.end.getter(v41);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      uint64_t v43 = swift_retain(v40);
      checkForErrorAndConsumeState(state:)(v43);
      swift_release(v40);
      uint64_t v45 = v56;
      uint64_t v44 = v57;
      if ((*(unsigned int (**)(char *, uint64_t))(v56 + 88))(v17, v57) == enum case for OSSignpostError.doubleEnd(_:))
      {
        id v46 = "[Error] Interval already ended";
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v44);
        id v46 = "Succeeded";
      }

      uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v51 = 0;
      os_signpost_id_t v53 = OSSignpostID.rawValue.getter(v51);
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v31, v42, v53, "Enqueue", v46, v51, 2u);
      Swift::String v21 = v23;
      uint64_t v27 = v29;
      goto LABEL_14;
    }

    Swift::String v21 = v23;
    uint64_t v27 = v29;
  }

  uint64_t v48 = v60;
  uint64_t v47 = v61;
  uint64_t v50 = v58;
  uint64_t v49 = v59;
LABEL_15:

  (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v27, v49);
}

uint64_t sub_10005F294(void **a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v76 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v76 - v15;
  uint64_t v17 = *a1;
  if (*a1)
  {
    uint64_t v18 = qword_1001C7FB8;
    id v19 = v17;
    if (v18 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v20 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v21 = type metadata accessor for LogMessage(0LL);
    uint64_t v22 = swift_allocObject( v20,  ((*(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v21 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v21 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v22 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v83 + 1) = type metadata accessor for EngagementService();
    *(void *)&__int128 v82 = a3;
    id v23 = a3;
    uint64_t v24 = sub_100065768(a4);
    if (v25)
    {
      uint64_t v26 = v24;
      uint64_t v27 = v25;
      swift_bridgeObjectRetain(v25);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v28._uint64_t countAndFlagsBits = 0LL;
      v28._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t v29 = *((void *)&v83 + 1);
      uint64_t v30 = sub_10000D37C(&v82, *((uint64_t *)&v83 + 1));
      uint64_t DynamicType = swift_getDynamicType(v30, v29, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
      uint64_t v79 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
      sub_10000DA68((uint64_t)&v79, &qword_1001CAAD0);
      v32._uint64_t countAndFlagsBits = 5972026LL;
      v32._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v79 = v26;
      uint64_t v80 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
      sub_10000DA68((uint64_t)&v79, &qword_1001CAAD0);
      v33._uint64_t countAndFlagsBits = 93LL;
      v33._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      LogMessage.init(stringInterpolation:)(v16);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v48._uint64_t countAndFlagsBits = 0LL;
      v48._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      uint64_t v49 = *((void *)&v83 + 1);
      uint64_t v50 = sub_10000D37C(&v82, *((uint64_t *)&v83 + 1));
      uint64_t v51 = swift_getDynamicType(v50, v49, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v51);
      uint64_t v79 = v51;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
      sub_10000DA68((uint64_t)&v79, &qword_1001CAAD0);
      v52._uint64_t countAndFlagsBits = 58LL;
      v52._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v52);
      LogMessage.init(stringInterpolation:)(v16);
    }

    sub_10000D3A0(&v82);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(46LL, 3LL);
    v53._uint64_t countAndFlagsBits = 0xD000000000000019LL;
    v53._object = (void *)0x800000010016DAF0LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v53);
    sub_1000657E4( v19,  (SEL *)&selRef_data,  (uint64_t)&type metadata for AnyHashable,  (uint64_t)&type metadata for Any + 8,  (uint64_t)&protocol witness table for AnyHashable);
    uint64_t v55 = v54;
    if (v54) {
      swift_bridgeObjectRelease();
    }
    *((void *)&v83 + 1) = &type metadata for Bool;
    LOBYTE(v82) = v55 != 0;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
    sub_10000DA68((uint64_t)&v82, &qword_1001CAAD0);
    v56._uint64_t countAndFlagsBits = 0x7473657571655220LL;
    v56._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v56);
    id v57 = [v19 request];
    id v58 = v57;
    if (v57) {

    }
    *((void *)&v83 + 1) = &type metadata for Bool;
    LOBYTE(v82) = v58 != 0LL;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
    sub_10000DA68((uint64_t)&v82, &qword_1001CAAD0);
    v59._uint64_t countAndFlagsBits = 0x736E6F6974634120LL;
    v59._object = (void *)0xEA0000000000203ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v59);
    uint64_t v60 = sub_100065708(v19);
    if (v60)
    {
      uint64_t v61 = *(void *)(v60 + 16);
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v61 = 0LL;
    }

    *((void *)&v83 + 1) = &type metadata for Int;
    *(void *)&__int128 v82 = v61;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
    sub_10000DA68((uint64_t)&v82, &qword_1001CAAD0);
    v62._uint64_t countAndFlagsBits = 41LL;
    v62._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v62);
    uint64_t v63 = LogMessage.init(stringInterpolation:)(v14);
    uint64_t v64 = static os_log_type_t.default.getter(v63);
    sub_1000BD1B0(v64, v22);
  }

  else
  {
    if (qword_1001C7FB8 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v34 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v35 = type metadata accessor for LogMessage(0LL);
    uint64_t v36 = swift_allocObject( v34,  ((*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v35 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v35 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v36 + ++*(void *)(v0 + 16) = xmmword_100164230;
    *((void *)&v83 + 1) = type metadata accessor for EngagementService();
    *(void *)&__int128 v82 = a3;
    id v37 = a3;
    uint64_t v38 = sub_100065768(a4);
    if (v39)
    {
      uint64_t v40 = v38;
      uint64_t v41 = v39;
      swift_bridgeObjectRetain(v39);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v42._uint64_t countAndFlagsBits = 0LL;
      v42._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      uint64_t v43 = *((void *)&v83 + 1);
      uint64_t v44 = sub_10000D37C(&v82, *((uint64_t *)&v83 + 1));
      uint64_t v45 = swift_getDynamicType(v44, v43, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v45);
      uint64_t v79 = v45;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
      sub_10000DA68((uint64_t)&v79, &qword_1001CAAD0);
      v46._uint64_t countAndFlagsBits = 5972026LL;
      v46._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v79 = v40;
      uint64_t v80 = v41;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
      sub_10000DA68((uint64_t)&v79, &qword_1001CAAD0);
      v47._uint64_t countAndFlagsBits = 93LL;
      v47._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      LogMessage.init(stringInterpolation:)(v16);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v65._uint64_t countAndFlagsBits = 0LL;
      v65._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v65);
      uint64_t v66 = *((void *)&v83 + 1);
      uint64_t v67 = sub_10000D37C(&v82, *((uint64_t *)&v83 + 1));
      uint64_t v68 = swift_getDynamicType(v67, v66, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v68);
      uint64_t v79 = v68;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v79);
      sub_10000DA68((uint64_t)&v79, &qword_1001CAAD0);
      v69._uint64_t countAndFlagsBits = 58LL;
      v69._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v69);
      LogMessage.init(stringInterpolation:)(v16);
    }

    sub_10000D3A0(&v82);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(16LL, 1LL);
    v70._object = (void *)0x800000010016DAD0LL;
    v70._uint64_t countAndFlagsBits = 0xD000000000000010LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v70);
    if (a2)
    {
      swift_getErrorValue(a2, v78, &v76);
      uint64_t v71 = v77;
      *((void *)&v83 + 1) = v77;
      sub_1000663D0(&v82);
      (*(void (**)(void))(*(void *)(v71 - 8) + 16LL))();
    }

    else
    {
      __int128 v82 = 0u;
      __int128 v83 = 0u;
    }

    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v82);
    sub_10000DA68((uint64_t)&v82, &qword_1001CAAD0);
    v72._uint64_t countAndFlagsBits = 0LL;
    v72._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v72);
    uint64_t v73 = LogMessage.init(stringInterpolation:)(v11);
    uint64_t v74 = static os_log_type_t.error.getter(v73);
    sub_1000BD1B0(v74, v36);
  }

  return swift_bridgeObjectRelease();
}

void sub_10005F9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    if (*(void *)(a4 + 16))
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      sub_100016F88();
      __asm { BR              X9 }
    }

    sub_100058354((uint64_t)_swiftEmptyArrayStorage);

    swift_bridgeObjectRelease();
  }

  swift_beginAccess(v5, &v10, 0LL, 0LL);
  uint64_t v8 = swift_unknownObjectWeakLoadStrong(v5);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_10005CE00();
  }

uint64_t sub_10005FB54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (uint64_t *)(a3 + 16);
  uint64_t v6 = (uint64_t *)(a4 + 16);
  uint64_t v8 = a1;
  swift_errorRetain(a1);
  [a2 lock];
  sub_10005FBC8(&v8, v5, v6);
  return swift_willThrow([a2 unlock]);
}

uint64_t sub_10005FBC8(void *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = *a1;
  swift_errorRetain(*a1);
  uint64_t v7 = (void *)_convertErrorToNSError(_:)(v6);
  swift_errorRelease(v6);
  uint64_t v8 = sub_10000D33C((uint64_t *)&unk_1001C9C80);
  uint64_t inited = swift_initStackObject(v8, v20);
  *(_OWORD *)(inited + ++*(void *)(v0 + 16) = xmmword_100164230;
  v19[0] = 0x7572636461657262LL;
  v19[1] = 0xEB0000000073626DLL;
  AnyHashable.init<A>(_:)(v19);
  swift_beginAccess(a2, v19, 0LL, 0LL);
  uint64_t v10 = *a2;
  *(void *)(inited + 96) = sub_10000D33C(&qword_1001CA798);
  *(void *)(inited + 72) = v10;
  uint64_t v17 = 0x74616E6974736564LL;
  unint64_t v18 = 0xEB000000006E6F69LL;
  swift_bridgeObjectRetain(v10);
  AnyHashable.init<A>(_:)(&v17);
  swift_beginAccess(a3, &v17, 0LL, 0LL);
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 14sub_10000D3A0(v0 + 4) = v12;
  *(void *)(inited + 152) = v11;
  swift_bridgeObjectRetain(v11);
  Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v7, "ams_errorByAddingUserInfo:", isa, v17, v18);

  uint64_t v15 = *a1;
  *a1 = v14;
  return swift_errorRelease(v15);
}

uint64_t sub_10005FDB0()
{
  uint64_t v1 = swift_allocObject(&unk_1001AACD0, 32LL, 7LL);
  *(void *)(v1 + ++*(void *)(v0 + 16) = sub_100066094;
  *(void *)(v1 + 2sub_10000D3A0(v0 + 4) = v0;
  swift_retain_n(v0, 2LL);
  sub_100062574();
  swift_release(v0);
  swift_release(v1);
  uint64_t v2 = swift_allocObject(&unk_1001AACF8, 32LL, 7LL);
  *(void *)(v2 + ++*(void *)(v0 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 2sub_10000D3A0(v0 + 4) = v0;
  swift_retain_n(v0, 2LL);
  sub_100062574();
  swift_release(v0);
  return swift_release(v2);
}

uint64_t sub_10005FE8C()
{
  uint64_t v1 = swift_allocObject(&unk_1001AA190, 32LL, 7LL);
  *(void *)(v1 + ++*(void *)(v0 + 16) = sub_100066094;
  *(void *)(v1 + 2sub_10000D3A0(v0 + 4) = v0;
  swift_retain_n(v0, 2LL);
  sub_100062574();
  swift_release(v0);
  swift_release(v1);
  uint64_t v2 = swift_allocObject(&unk_1001AA1B8, 32LL, 7LL);
  *(void *)(v2 + ++*(void *)(v0 + 16) = j_j___s9JetEngine7PromiseC6rejectyys5Error_pF;
  *(void *)(v2 + 2sub_10000D3A0(v0 + 4) = v0;
  swift_retain_n(v0, 2LL);
  sub_100062574();
  swift_release(v0);
  return swift_release(v2);
}

uint64_t sub_10005FF68()
{
  uint64_t v0 = sub_1000671CC((uint64_t)&unk_1001AAAC8);
  sub_100067200(v0, (uint64_t)j___s9JetEngine7PromiseC7resolveyyxF);
  sub_1000674A0();
  sub_10001A2D8();
  sub_100037230();
  uint64_t v1 = sub_1000671CC((uint64_t)&unk_1001AAAF0);
  sub_100067200(v1, (uint64_t)j___s9JetEngine7PromiseC6rejectyys5Error_pF);
  sub_100067454();
  sub_10001A2D8();
  return sub_100067250(v1);
}

uint64_t sub_10005FFF4()
{
  uint64_t v0 = sub_1000671CC((uint64_t)&unk_1001AA820);
  sub_100067200(v0, (uint64_t)sub_100066658);
  sub_1000674A0();
  sub_10001A2D8();
  sub_100037230();
  uint64_t v1 = sub_1000671CC((uint64_t)&unk_1001AA848);
  sub_100067200(v1, (uint64_t)j_j___s9JetEngine7PromiseC6rejectyys5Error_pF);
  sub_100067454();
  sub_10001A2D8();
  return sub_100067250(v1);
}

uint64_t sub_100060080()
{
  uint64_t v0 = sub_1000671CC((uint64_t)&unk_1001AA708);
  sub_100067200(v0, (uint64_t)sub_100066094);
  sub_1000674A0();
  sub_10001A2D8();
  sub_100037230();
  uint64_t v1 = sub_1000671CC((uint64_t)&unk_1001AA730);
  sub_100067200(v1, (uint64_t)j_j___s9JetEngine7PromiseC6rejectyys5Error_pF);
  sub_100067454();
  sub_10001A2D8();
  return sub_100067250(v1);
}

uint64_t sub_10006010C()
{
  uint64_t v0 = sub_1000671CC((uint64_t)&unk_1001AA6B8);
  sub_100067200(v0, (uint64_t)sub_100066094);
  sub_1000674A0();
  sub_10001A2D8();
  sub_100037230();
  uint64_t v1 = sub_1000671CC((uint64_t)&unk_1001AA6E0);
  sub_100067200(v1, (uint64_t)j_j___s9JetEngine7PromiseC6rejectyys5Error_pF);
  sub_100067454();
  sub_10001A2D8();
  return sub_100067250(v1);
}

uint64_t sub_100060198()
{
  uint64_t v0 = sub_1000671CC((uint64_t)&unk_1001AA668);
  sub_100067200(v0, (uint64_t)sub_100066094);
  sub_1000674A0();
  sub_10001A2D8();
  sub_100037230();
  uint64_t v1 = sub_1000671CC((uint64_t)&unk_1001AA690);
  sub_100067200(v1, (uint64_t)j_j___s9JetEngine7PromiseC6rejectyys5Error_pF);
  sub_100067454();
  sub_10001A2D8();
  return sub_100067250(v1);
}

void sub_100060224()
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = v0;
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000674E0();
  sub_10000DE08(v13, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  sub_1000679F4( enum case for DispatchQoS.QoSClass.default(_:),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 104));
  id v14 = (void *)static OS_dispatch_queue.global(qos:)(v1);
  sub_1000679DC(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  sub_100066128(v9, 0LL, v14, v10, v7, v5, v3);

  sub_10000DD84();
}

uint64_t sub_10006038C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    sub_100067820();
    sub_100016F5C();
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      uint64_t v7 = sub_10000D33C(&qword_1001C8BC0);
      uint64_t inited = swift_initStackObject(v7, v17);
      *(_OWORD *)(inited + ++*(void *)(v0 + 16) = xmmword_100164240;
      *(void *)(inited + 32) = 0x656372756F73LL;
      *(void *)(inited + 40) = 0xE600000000000000LL;
      strcpy((char *)(inited + 48), "amsengagementd");
      *(_BYTE *)(inited + 63) = -18;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 80) = 0x707954746E657665LL;
      *(void *)(inited + 88) = 0xE900000000000065LL;
      *(void *)(inited + 96) = 0xD000000000000013LL;
      *(void *)(inited + 10sub_10000D3A0(v0 + 4) = 0x800000010016DA70LL;
      *(void *)(inited + 120) = &type metadata for String;
      *(void *)(inited + 128) = 0x696669746E656469LL;
      *(void *)(inited + 168) = &type metadata for String;
      *(void *)(inited + 136) = 0xEA00000000007265LL;
      *(void *)(inited + 14sub_10000D3A0(v0 + 4) = v6;
      *(void *)(inited + 152) = v5;
      sub_10000DF08();
      uint64_t v9 = Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100016F5C();
        uint64_t v2 = v18;
      }

      unint64_t v11 = v2[2];
      unint64_t v10 = v2[3];
      if (v11 >= v10 >> 1)
      {
        sub_100048B48(v10);
        sub_100016F5C();
        uint64_t v2 = v18;
      }

      v4 += 2;
      v2[2] = v11 + 1;
      v2[v11 + 4] = v9;
      --v1;
    }

    while (v1);
  }

  id v12 = [objc_allocWithZone(AMSEngagementEnqueueRequest) init];
  uint64_t v13 = sub_10000D33C(&qword_1001CD430);
  id v14 = (void *)sub_10000DDDC(v13, 40LL);
  *((_OWORD *)v14 + 1) = xmmword_100165690;
  sub_10000DE08((uint64_t)v14, &qword_1001CA298, &OBJC_CLASS___AMSEngagementDestination_ptr);
  id v15 = sub_100067A94((void *)0x7379656E72756F6ALL);
  v14[4] = v15;
  unint64_t v18 = v14;
  specialized Array._endMutation()(v15);
  sub_10006842C((uint64_t)v18);
  sub_1000A0BF8((uint64_t)v2);
  sub_100009020();
  sub_1000683E8();
  if (qword_1001C7F50 != -1) {
    swift_once(&qword_1001C7F50, sub_100055FD4);
  }
  sub_10005E0A8();

  return sub_10001A2D8();
}

void sub_1000606A0(void *a1, uint64_t a2, void *a3)
{
  if (v5)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v6 = 0LL;
  }

  if ([(id)objc_opt_self(AMSProcessInfo) isBuddyRunning])
  {
    NSString v7 = String._bridgeToObjectiveC()();
    NSString v8 = String._bridgeToObjectiveC()();
    id v23 = (id)AMSError(11LL, v7, v8, 0LL);

    Promise.reject(_:)(v23);
LABEL_8:

    return;
  }

  uint64_t v9 = swift_allocObject(&unk_1001AA140, 24LL, 7LL);
  *(void *)(v9 + ++*(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for Double,  (char *)&type metadata for Any + 8,  &protocol witness table for Double);
  id v10 = [objc_allocWithZone(NSLock) init];
  char v11 = sub_100058860() & 1;
  id v12 = sub_100056678(a1, v11);
  uint64_t v13 = swift_allocObject(&unk_1001AA168, 56LL, 7LL);
  *(void *)(v13 + ++*(void *)(v0 + 16) = a3;
  *(void *)(v13 + 2sub_10000D3A0(v0 + 4) = v10;
  *(void *)(v13 + 32) = v9;
  *(_BYTE *)(v13 + 40) = v11;
  *(void *)(v13 + 48) = a1;
  id v14 = a3;
  id v23 = v10;
  swift_retain(v9);
  id v15 = a1;
  sub_100059F70((uint64_t)v12, (uint64_t)sub_1000660E4, v13);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_release(v13);
  swift_bridgeObjectRelease();
  if (v19)
  {
    swift_retain(v19);
    sub_10005FE8C();
    swift_release(v9);
    swift_release_n(v19, 2LL);
    swift_bridgeObjectRelease();
    swift_release(v17);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }

  v24[3] = type metadata accessor for SyncTaskScheduler(0LL);
  v24[4] = &protocol witness table for SyncTaskScheduler;
  sub_1000663D0(v24);
  SyncTaskScheduler.init()(v20);
  uint64_t v21 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CA720, &OBJC_CLASS___AMSEngagementSyncResult_ptr);
  uint64_t v22 = Promise.map<A>(on:_:)(v24, sub_100061FDC, 0LL, v21);
  sub_10000D3A0(v24);
  sub_10005FE8C();
  swift_release(v9);
  swift_release(v22);
  swift_bridgeObjectRelease();
  swift_release(v17);
  swift_bridgeObjectRelease();
}

uint64_t sub_1000609B4(_BYTE *a1, void *a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  id v102 = a2;
  uint64_t v101 = type metadata accessor for OSSignposter(0LL);
  uint64_t v11 = *(void *)(v101 - 8);
  uint64_t v12 = __chkstk_darwin(v101);
  Swift::String v100 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v95 = (char *)&v87 - v14;
  uint64_t v15 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  Swift::String v96 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  unint64_t v98 = (char *)&v87 - v19;
  uint64_t v20 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!sub_10005D4B8())
  {
    uint64_t v89 = v11;
    uint64_t v92 = a6;
    uint64_t v93 = a4;
    uint64_t v27 = a4 + 16;
    sub_10005D584((uint64_t)a1);
    uint64_t v97 = a3;
    unint64_t v28 = 0xE000000000000000LL;
    uint64_t v107 = 0LL;
    unint64_t v108 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(17LL);
    if ((*a1 & 1) != 0) {
      uint64_t v29 = 3041653LL;
    }
    else {
      uint64_t v29 = 0LL;
    }
    if ((*a1 & 1) != 0) {
      unint64_t v28 = 0xE300000000000000LL;
    }
    unint64_t v30 = v28;
    String.append(_:)(*(Swift::String *)&v29);
    uint64_t v31 = v97;
    swift_bridgeObjectRelease();
    v32._uint64_t countAndFlagsBits = 0x656D656761676E65LL;
    v32._object = (void *)0xEF636E79732E746ELL;
    String.append(_:)(v32);
    uint64_t v33 = v107;
    uint64_t v34 = v108;
    [v31 lock];
    swift_beginAccess(v27, &v107, 33LL, 0LL);
    uint64_t v91 = v33;
    uint64_t v90 = v34;
    sub_10004C2B8(0xD000000000000013LL, 0x800000010016D720LL, v33, v34);
    swift_endAccess(&v107);
    [v31 unlock];
    uint64_t v99 = v16;
    uint64_t v94 = v15;
    if ((a5 & 1) != 0)
    {
      if (qword_1001C7FB8 != -1) {
        swift_once(&qword_1001C7FB8, sub_1000BD55C);
      }
      uint64_t v35 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v36 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v37 = *(void *)(v36 + 72);
      uint64_t v38 = swift_allocObject( v35,  ((*(unsigned __int8 *)(v36 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80)) + 2 * v37,  *(unsigned __int8 *)(v36 + 80) | 7LL);
      *(_OWORD *)(v38 + ++*(void *)(v0 + 16) = xmmword_100164230;
      uint64_t v109 = type metadata accessor for EngagementService();
      uint64_t v107 = (uint64_t)v102;
      id v39 = (id)AMSLogKey(v102);
      if (v39)
      {
        uint64_t v40 = v39;
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        uint64_t v88 = v37;
        uint64_t v42 = v41;
        uint64_t v44 = v43;

        swift_bridgeObjectRetain(v44);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v45._uint64_t countAndFlagsBits = 0LL;
        v45._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v45);
        uint64_t v46 = v109;
        Swift::String v47 = sub_10000D37C(&v107, v109);
        uint64_t DynamicType = swift_getDynamicType(v47, v46, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
        uint64_t v104 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v104);
        sub_10000DA68((uint64_t)&v104, &qword_1001CAAD0);
        v49._uint64_t countAndFlagsBits = 5972026LL;
        v49._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v49);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v104 = v42;
        uint64_t v105 = v44;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v104);
        sub_10000DA68((uint64_t)&v104, &qword_1001CAAD0);
        v50._uint64_t countAndFlagsBits = 93LL;
        v50._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v50);
        LogMessage.init(stringInterpolation:)(v22);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v64._uint64_t countAndFlagsBits = 0LL;
        v64._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v64);
        uint64_t v65 = v109;
        uint64_t v66 = sub_10000D37C(&v107, v109);
        uint64_t v67 = swift_getDynamicType(v66, v65, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v67);
        uint64_t v104 = v67;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v104);
        sub_10000DA68((uint64_t)&v104, &qword_1001CAAD0);
        v68._uint64_t countAndFlagsBits = 58LL;
        v68._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v68);
        LogMessage.init(stringInterpolation:)(v22);
      }

      sub_10000D3A0(&v107);
      unint64_t v69 = 0xD00000000000001ALL;
    }

    else
    {
      if (qword_1001C7FB8 != -1) {
        swift_once(&qword_1001C7FB8, sub_1000BD55C);
      }
      uint64_t v51 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v52 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
      uint64_t v38 = swift_allocObject( v51,  ((*(unsigned __int8 *)(v52 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))
            + 2LL * *(void *)(v52 + 72),
              *(unsigned __int8 *)(v52 + 80) | 7LL);
      *(_OWORD *)(v38 + ++*(void *)(v0 + 16) = xmmword_100164230;
      uint64_t v109 = type metadata accessor for EngagementService();
      uint64_t v107 = (uint64_t)v102;
      id v53 = (id)AMSLogKey(v102);
      if (v53)
      {
        uint64_t v54 = v53;
        uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
        uint64_t v57 = v56;

        swift_bridgeObjectRetain(v57);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v58._uint64_t countAndFlagsBits = 0LL;
        v58._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v58);
        uint64_t v59 = v109;
        uint64_t v60 = sub_10000D37C(&v107, v109);
        uint64_t v61 = swift_getDynamicType(v60, v59, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v61);
        uint64_t v104 = v61;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v104);
        sub_10000DA68((uint64_t)&v104, &qword_1001CAAD0);
        v62._uint64_t countAndFlagsBits = 5972026LL;
        v62._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v62);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v104 = v55;
        uint64_t v105 = v57;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v104);
        sub_10000DA68((uint64_t)&v104, &qword_1001CAAD0);
        v63._uint64_t countAndFlagsBits = 93LL;
        v63._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v63);
        LogMessage.init(stringInterpolation:)(v22);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v70._uint64_t countAndFlagsBits = 0LL;
        v70._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v70);
        uint64_t v71 = v109;
        Swift::String v72 = sub_10000D37C(&v107, v109);
        uint64_t v73 = swift_getDynamicType(v72, v71, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v73);
        uint64_t v104 = v73;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v104);
        sub_10000DA68((uint64_t)&v104, &qword_1001CAAD0);
        v74._uint64_t countAndFlagsBits = 58LL;
        v74._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v74);
        LogMessage.init(stringInterpolation:)(v22);
      }

      sub_10000D3A0(&v107);
      unint64_t v69 = 0xD00000000000001BLL;
    }

    uint64_t v75 = LogMessage.init(stringLiteral:)(v69);
    uint64_t v76 = static os_log_type_t.default.getter(v75);
    sub_1000BD1B0(v76, v38);
    swift_bridgeObjectRelease();
    id v77 = v102;
    uint64_t v78 = sub_100056CF4();
    uint64_t v80 = v79;
    uint64_t v81 = type metadata accessor for SyncRunner();
    swift_allocObject(v81, 153LL, 7LL);
    sub_100068DB4(a1, v78, v80);
    uint64_t v83 = v82;
    sub_100019EEC( (uint64_t)v77 + OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider,  (uint64_t)&v107);
    sub_100066F5C((uint64_t)&v107, (uint64_t)&v104, &qword_1001CA748);
    swift_beginAccess(v83 + 16, v103, 33LL, 0LL);
    uint64_t v88 = v78;
    swift_unknownObjectRetain(v78);
    sub_100066268(a1);
    sub_100066530((uint64_t)&v104, v83 + 16);
    swift_endAccess(v103);
    Swift::String v84 = v95;
    sub_100056090();
    uint64_t v85 = swift_retain(v83);
    uint64_t v86 = OSSignposter.logHandle.getter(v85);
    uint64_t v87 = v83;
    OSSignpostID.init(log:object:)(v86, v83);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v84, v101);
    __asm { BR              X10 }
  }

  sub_10000D33C(&qword_1001CA718);
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = (id)AMSError(11LL, v23, v24, 0LL);

  return Promise.__allocating_init(error:)(v25);
}

id sub_100061570( uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)&__int128 v98 = a8;
  uint64_t v99 = a2;
  uint64_t v91 = type metadata accessor for OSSignpostError(0LL);
  uint64_t v90 = *(void *)(v91 - 8);
  uint64_t v14 = __chkstk_darwin(v91);
  uint64_t v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v88 - v17;
  uint64_t v95 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v94 = *(void *)(v95 - 8);
  uint64_t v19 = __chkstk_darwin(v95);
  uint64_t v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  NSString v23 = (char *)&v88 - v22;
  uint64_t v93 = type metadata accessor for OSSignposter(0LL);
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v24 = __chkstk_darwin(v93);
  uint64_t v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24);
  unint64_t v28 = (char *)&v88 - v27;
  a4 += 2;
  [a3 lock];
  swift_beginAccess(a4, &aBlock, 33LL, 0LL);
  uint64_t v97 = a4;
  sub_10004C2B8(0xD000000000000018LL, 0x800000010016D9D0LL, a5, a6);
  swift_endAccess(&aBlock);
  id v96 = a3;
  uint64_t v29 = a3;
  uint64_t v30 = v99;
  [v29 unlock];
  if (v30)
  {
    uint64_t v31 = a10;
    swift_errorRetain(v30);
    uint64_t v32 = sub_100056090();
    uint64_t v33 = (os_log_s *)OSSignposter.logHandle.getter(v32);
    uint64_t v34 = OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v35 = static os_signpost_type_t.end.getter(v34);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      uint64_t v89 = a10;
      uint64_t v36 = v30;
      uint64_t v37 = v98;
      uint64_t v38 = swift_retain(v98);
      checkForErrorAndConsumeState(state:)(v38);
      swift_release(v37);
      uint64_t v39 = v90;
      uint64_t v40 = v91;
      if ((*(unsigned int (**)(char *, uint64_t))(v90 + 88))(v18, v91) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v41 = "[Error] Interval already ended";
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v40);
        uint64_t v41 = "Failed";
      }

      uint64_t v52 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v52 = 0;
      os_signpost_id_t v53 = OSSignpostID.rawValue.getter(v52);
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v33, v35, v53, "Sync", v41, v52, 2u);
      swift_slowDealloc(v52, -1LL, -1LL);
      uint64_t v30 = v36;
      uint64_t v31 = v89;
    }

    (*(void (**)(char *, uint64_t))(v94 + 8))(v23, v95);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v28, v93);
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(AMSMetricsLoggingSubsystemEngagement);
    uint64_t v56 = v55;
    objc_allocWithZone(&OBJC_CLASS___AMSMetricsLoggingEvent);
    swift_errorRetain(v30);
    id v57 = sub_100063C7C(v54, v56, 0x656D656761676E65LL, 0xEF636E79732D746ELL, v30);
    uint64_t v58 = v30;
    uint64_t v59 = v57;
    swift_getErrorValue(v58, v109, v108);
    Error.localizedDescription.getter(v108[1], v108[2]);
    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v59 setErrorMessage:v60];

    id v61 = v96;
    [v96 lock];
    Swift::String v62 = v97;
    swift_beginAccess(v97, v107, 0LL, 0LL);
    swift_bridgeObjectRetain(*v62);
    sub_1000549C4(v63);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v59 setBreadcrumbs:isa];

    [v61 unlock];
    uint64_t v65 = sub_10000D33C(&qword_1001C8F70);
    uint64_t v66 = swift_allocObject(v65, 64LL, 7LL);
    __int128 v98 = xmmword_100164220;
    *(_OWORD *)(v66 + ++*(void *)(v0 + 16) = xmmword_100164220;
    *(void *)(v66 + 56) = &type metadata for String;
    *(void *)(v66 + 32) = a9;
    *(void *)(v66 + 40) = v31;
    swift_bridgeObjectRetain(v31);
    Class v67 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v59 setEventDestinations:v67];

    Swift::String v68 = (void *)objc_opt_self(&OBJC_CLASS___AMSDefaults);
    sub_1000657E4( v68,  (SEL *)&selRef_jsVersionMap,  (uint64_t)&type metadata for String,  (uint64_t)&type metadata for String,  (uint64_t)&protocol witness table for String);
    if (!v69) {
      uint64_t v69 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);
    }
    uint64_t v70 = v69;
    swift_bridgeObjectRetain(v31);
    uint64_t v71 = sub_10003071C(a9, v31, v70);
    uint64_t v73 = v72;
    swift_bridgeObjectRelease();
    if (v73)
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_10000D33C((uint64_t *)&unk_1001C9C80);
      uint64_t inited = swift_initStackObject(v74, v100);
      *(_OWORD *)(inited + ++*(void *)(v0 + 16) = v98;
      __int128 aBlock = (void **)a9;
      uint64_t v102 = v31;
      swift_bridgeObjectRetain(v31);
      AnyHashable.init<A>(_:)(&aBlock);
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 72) = v71;
      *(void *)(inited + 80) = v73;
      Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    }

    else
    {
      sub_100054610(v70);
      swift_bridgeObjectRelease();
    }

    Class v76 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v59 setJsVersions:v76];

    id v77 = (void *)objc_opt_self(&OBJC_CLASS___AMSMetricsLoggingEvent);
    sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
    id v78 = sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
    id v79 = [v77 shouldSampleErrorsWithBag:v78];

    uint64_t v80 = swift_allocObject(&unk_1001AA618, 24LL, 7LL);
    *(void *)(v80 + ++*(void *)(v0 + 16) = v59;
    uint64_t v105 = sub_1000665E0;
    uint64_t v106 = v80;
    __int128 aBlock = _NSConcreteStackBlock;
    uint64_t v102 = 1107296256LL;
    os_log_type_t v103 = sub_100061FB8;
    uint64_t v104 = &unk_1001AA630;
    uint64_t v81 = _Block_copy(&aBlock);
    uint64_t v82 = v106;
    id v83 = v59;
    swift_release(v82);
    [v79 addSuccessBlock:v81];
    _Block_release(v81);

    swift_errorRelease(v99);
  }

  else
  {
    uint64_t v42 = sub_100056090();
    uint64_t v43 = (os_log_s *)OSSignposter.logHandle.getter(v42);
    uint64_t v44 = OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v45 = static os_signpost_type_t.end.getter(v44);
    uint64_t v46 = v21;
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      uint64_t v47 = v98;
      uint64_t v48 = swift_retain(v98);
      checkForErrorAndConsumeState(state:)(v48);
      swift_release(v47);
      uint64_t v49 = v90;
      uint64_t v50 = v91;
      if ((*(unsigned int (**)(char *, uint64_t))(v90 + 88))(v16, v91) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v51 = "[Error] Interval already ended";
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v50);
        uint64_t v51 = "Succeeded";
      }

      Swift::String v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)Swift::String v84 = 0;
      os_signpost_id_t v85 = OSSignpostID.rawValue.getter(v84);
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v43, v45, v85, "Sync", v51, v84, 2u);
      swift_slowDealloc(v84, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v94 + 8))(v46, v95);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v26, v93);
    id v61 = v96;
    Swift::String v62 = v97;
  }

  [v61 lock];
  uint64_t v86 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for Double,  (char *)&type metadata for Any + 8,  &protocol witness table for Double);
  swift_beginAccess(v62, &aBlock, 1LL, 0LL);
  *Swift::String v62 = v86;
  swift_bridgeObjectRelease();
  return [v61 unlock];
}

void sub_100061EF4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___AMSMetrics);
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
  id v3 = sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
  id v4 = [v2 internalInstanceUsingBag:v3];

  [v4 enqueueEvent:a1];
}

uint64_t sub_100061FB8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = sub_100048DB4();
  v1(v3);
  return sub_100067720(v2);
}

id sub_100061FDC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    id result = (id)swift_bridgeObjectRetain(*a1);
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease(v3);
    id result = [objc_allocWithZone(AMSEngagementSyncResult) init];
    id v7 = result;
    goto LABEL_12;
  }

  if (v3 < 0) {
    uint64_t v8 = *a1;
  }
  else {
    uint64_t v8 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*a1);
  id result = (id)_CocoaArrayWrapper.endIndex.getter(v8);
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001LL) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v3);
    goto LABEL_6;
  }

  if (*(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    id v6 = *(id *)(v3 + 32);
LABEL_6:
    id v7 = v6;
    id result = (id)swift_bridgeObjectRelease(v3);
LABEL_12:
    *a2 = v7;
    return result;
  }

  __break(1u);
  return result;
}

uint64_t sub_1000620B4( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void (*a7)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = sub_1000671CC(a5);
  *(void *)(v12 + ++*(void *)(v0 + 16) = a2;
  *(void *)(v12 + 2sub_10000D3A0(v0 + 4) = a3;
  sub_10002FAEC();
  a7(0LL, 1LL, a6, v12);
  sub_1000292C4();
  return swift_release(v12);
}

void sub_1000621C8(uint64_t a1, uint64_t a2)
{
  if (a2) {
    _convertErrorToNSError(_:)(a2);
  }
  uint64_t v2 = sub_1000675EC();
  id v5 = v3;
  v4(v2);
}

void sub_10006221C()
{
  if (qword_1001C8070 != -1) {
    swift_once(&qword_1001C8070, sub_1000E4144);
  }
  sub_1000E6944();
  sub_100009044();
}

void sub_1000622C0(char a1, void (*a2)(void))
{
  if (qword_1001C8070 != -1) {
    swift_once(&qword_1001C8070, sub_1000E4144);
  }
  a2(a1 & 1);
  sub_10000DFE8();
}

uint64_t sub_10006234C()
{
  return swift_task_switch(sub_100062360, 0LL, 0LL);
}

uint64_t sub_100062360()
{
  if (qword_1001C80F0 != -1) {
    swift_once(&qword_1001C80F0, sub_100140BBC);
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v1 = swift_retain(qword_1001DBC00);
  return v3(v1);
}

uint64_t sub_100062424()
{
  uint64_t v1 = sub_100067630();
  return swift_deallocObject(v1, v2, v3);
}

void sub_100062448()
{
}

uint64_t sub_100062454(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100062464(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10006246C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  uint64_t v4 = dword_1001CA794;
  id v5 = a2;
  id v6 = (void *)swift_task_alloc(v4);
  v2[4] = v6;
  *id v6 = v2;
  v6[1] = sub_1000624C8;
  return sub_10006234C();
}

uint64_t sub_1000624C8(uint64_t a1)
{
  uint64_t v3 = v1;
  id v5 = (void *)*v2;
  uint64_t v13 = v5;
  id v6 = (void *)v5[2];
  id v7 = (void *)*v2;
  sub_100067A34(v5[4], &v13);

  uint64_t v8 = v5[3];
  if (v3)
  {
    uint64_t v9 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    (*(void (**)(uint64_t, void, void *))(v8 + 16))(v8, 0LL, v9);

    sub_100067534();
  }

  else
  {
    uint64_t v10 = sub_1000675EC();
    v11(v10);
    sub_100067534();
    swift_unknownObjectRelease(a1);
  }

  return sub_1000676E8((uint64_t (*)(void))v7[1]);
}

void sub_100062574()
{
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  sub_1000674E0();
  uint64_t v12 = sub_10000DE08(v11, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  sub_1000679F4( enum case for DispatchQoS.QoSClass.default(_:),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 104));
  uint64_t v13 = static OS_dispatch_queue.global(qos:)(v0);
  sub_1000679DC(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  v14[3] = v12;
  v14[4] = &protocol witness table for OS_dispatch_queue;
  v14[0] = v13;
  Promise.then(perform:orCatchError:on:)(v8, v6, v4, v2, v14);
  sub_10000D3A0(v14);
  sub_10000DD84();
}

void sub_10006264C()
{
}

void sub_100062670()
{
  uint64_t v31 = v2;
  uint64_t v32 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = sub_100067420();
  uint64_t v35 = *(void *)(v14 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v15);
  uint64_t v16 = sub_10006725C();
  uint64_t v33 = *(void *)(v16 - 8);
  uint64_t v34 = v16;
  sub_10000DC8C();
  __chkstk_darwin(v17);
  sub_1000292E4();
  sub_10000D33C(v7);
  uint64_t v18 = sub_100067A48();
  __int128 v19 = *(_OWORD *)(v13 + 8);
  __int128 v39 = *(_OWORD *)(v13 + 24);
  __int128 v40 = v19;
  uint64_t v20 = sub_10000DDDC(v5, 88LL);
  __int128 v21 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)(v20 + 2sub_10000D3A0(v0 + 4) = *(_OWORD *)v13;
  *(void *)(v20 + ++*(void *)(v0 + 16) = v0;
  *(_OWORD *)(v20 + 40) = v21;
  *(void *)(v20 + 56) = *(void *)(v13 + 32);
  *(void *)(v20 + 6sub_10000D3A0(v0 + 4) = v11;
  *(void *)(v20 + 72) = v9;
  *(void *)(v20 + 80) = v18;
  v37[4] = v31;
  uint64_t v38 = v20;
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 1107296256LL;
  _OWORD v37[2] = sub_100021A3C;
  v37[3] = v32;
  _Block_copy(v37);
  swift_retain(v0);
  sub_1000288A4((uint64_t)&v40);
  sub_1000288A4((uint64_t)&v39);
  swift_retain(v9);
  uint64_t v22 = sub_100067860();
  static DispatchQoS.unspecified.getter(v22);
  uint64_t v36 = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v24 = v23;
  uint64_t v25 = sub_1000673F0();
  sub_1000673F8((unint64_t *)&qword_1001CD3F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v25, v26, v14, v24);
  uint64_t v27 = sub_100067A5C();
  OS_dispatch_queue.async(group:qos:flags:execute:)(v27, v28, v29, v30);
  sub_100067704();
  sub_1000673E0(v35);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v1, v34);
  swift_release(v38);
  sub_10000DD84();
}

uint64_t sub_100062840(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_100102554(a2);
  if (qword_1001C7FD0 != -1) {
    swift_once(&qword_1001C7FD0, sub_1000BD660);
  }
  sub_10002588C();
  sub_10000DFF4();
  sub_100067984();
  sub_1000BC794();
  uint64_t v14 = (void *)sub_10000DDDC(a6, 48LL);
  uint64_t v14[2] = a1;
  v14[3] = a3;
  v14[4] = a4;
  void v14[5] = a5;
  sub_10002588C();
  sub_100067860();
  sub_10002FAEC();
  sub_100103670(a7, (uint64_t)v14);
  swift_release(v14);
  sub_100102D30();
  return swift_release(v13);
}

uint64_t sub_100062924( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (qword_1001C7FD0 != -1) {
    swift_once(&qword_1001C7FD0, sub_1000BD660);
  }
  sub_100067860();
  sub_1000BC9B8();
  a4();
  uint64_t v17 = (void *)sub_10000DDDC(a7, 48LL);
  v17[2] = a3;
  v17[3] = a6;
  void v17[4] = a1;
  v17[5] = a2;
  uint64_t v18 = (void *)sub_10000DDDC(a8, 48LL);
  _OWORD v18[2] = a3;
  v18[3] = a6;
  void v18[4] = a1;
  void v18[5] = a2;
  __int128 v19 = *(void **)(a3 + 72);
  void v23[3] = sub_10000DE08((uint64_t)v18, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  v23[4] = &protocol witness table for OS_dispatch_queue;
  v23[0] = v19;
  sub_1000672B0(a3);
  sub_1000672B0(a6);
  sub_1000672B0(a2);
  id v20 = v19;
  Promise.then(perform:orCatchError:on:)(a9, v17, a10, v18, v23);
  sub_1000292C4();
  sub_100020B68();
  uint64_t v21 = swift_release(v18);
  return sub_100067868(v21);
}

uint64_t sub_100062A78(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  char v8 = a1;
  if (qword_1001C7FD0 != -1) {
    swift_once(&qword_1001C7FD0, sub_1000BD660);
  }
  swift_retain(a2);
  sub_1000BCB34();
  uint64_t v6 = Promise.resolve(_:)(&v8);
  return a4(v6);
}

uint64_t sub_100062B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = a1;
  if (qword_1001C7FD0 != -1) {
    swift_once(&qword_1001C7FD0, sub_1000BD660);
  }
  sub_10002FAA0();
  sub_1000BCB34();
  uint64_t v5 = Promise.resolve(_:)(&v7);
  return a4(v5);
}

void sub_100062BA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (qword_1001C7FD0 != -1) {
    swift_once(&qword_1001C7FD0, sub_1000BD660);
  }
  sub_10002FAEC();
  sub_1000BCCA0();
  uint64_t v6 = Promise.reject(_:)(a1);
  a4(v6);
  sub_10001A094();
}

void sub_100062C24( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v51 = v35;
  uint64_t v36 = sub_100067420();
  uint64_t v54 = *(void *)(v36 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v37);
  sub_10000DE7C();
  uint64_t v40 = v39 - v38;
  uint64_t v41 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v52 = *(void *)(v41 - 8);
  uint64_t v53 = v41;
  sub_10000DC8C();
  __chkstk_darwin(v42);
  sub_1000105F0();
  uint64_t v58 = v34;
  uint64_t v43 = (void *)sub_10000DDDC(v24, 56LL);
  sub_100066F5C((uint64_t)&v58, (uint64_t)(v43 + 2), v51);
  void v43[3] = v30;
  v43[4] = v32;
  v43[5] = v28;
  v43[6] = v26;
  v56[4] = a21;
  id v57 = v43;
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 1107296256LL;
  _OWORD v56[2] = sub_100021A3C;
  void v56[3] = a22;
  uint64_t v44 = _Block_copy(v56);
  id v45 = v34;
  swift_retain(v30);
  swift_errorRetain(v32);
  swift_retain(v28);
  id v46 = v26;
  sub_100067A00();
  uint64_t v55 = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v48 = v47;
  uint64_t v49 = sub_1000673F0();
  sub_1000673F8((unint64_t *)&qword_1001CD3F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v49, v50, v36, v48);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v22, v40, v44);
  sub_100067534();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v40, v36);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v22, v53);
  swift_release(v57);
  sub_10000DD84();
}

void sub_100062DF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, dispatch_group_t group)
{
  if (a1)
  {
    sub_10000DC44(a2 + 16, (uint64_t)v15, 33LL);
    id v10 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    uint64_t v11 = *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFF8LL) + 0x10);
    sub_100063FE8(v11);
    uint64_t v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
    specialized Array._endMutation()(v12);
    swift_endAccess(v15);
  }

  if (a3)
  {
    sub_10000DC44(a4 + 16, (uint64_t)v15, 33LL);
    swift_errorRetain(a3);
    sub_100063EF8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10001436C);
    uint64_t v13 = *(void *)(*(void *)(a4 + 16) + 16LL);
    sub_100063FA4(v13, (uint64_t (*)(BOOL))sub_10001436C);
    uint64_t v14 = *(void *)(a4 + 16);
    *(void *)(v14 + ++*(void *)(v0 + 16) = v13 + 1;
    *(void *)(v14 + 8 * v13 + 32) = a3;
    swift_endAccess(v15);
  }

  dispatch_group_leave(group);
}

uint64_t sub_100062EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = *(void *)(v5 + 32);
    swift_errorRetain(v6);
    Promise.reject(_:)(v6);
    return sub_100067974();
  }

  else
  {
    sub_10000DC44(a3 + 16, (uint64_t)v9, 0LL);
    uint64_t v8 = *(void *)(a3 + 16);
    sub_10000DEE0();
    Promise.resolve(_:)(&v8);
    return sub_100009020();
  }

uint64_t sub_100062F84(uint64_t a1)
{
  uint64_t v2 = a1;
  return Promise.resolve(_:)(&v2);
}

uint64_t sub_100062FB4(uint64_t a1)
{
  return Promise.resolve(_:)(a1);
}

void sub_100062FD4(char a1)
{
  char v1 = a1;
  sub_100067818((uint64_t)&v1);
  sub_1000378A8();
}

void sub_100062FF8(uint64_t a1)
{
}

void sub_100063010(uint64_t a1)
{
  uint64_t v1 = a1;
  sub_100067818((uint64_t)&v1);
  sub_1000378A8();
}

void sub_100063034(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
}

void sub_100063080(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr), uint64_t a4)
{
  if (v4)
  {
    sub_100067474();
    sub_100067320(v4);
  }

  else
  {
    sub_100067758((uint64_t)&v5);

    sub_1000291C4();
  }

uint64_t sub_1000630C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for JSResponse(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_1000292E4();
  a3(a1);
  sub_100067758(v3);
  return sub_100067744(v3, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
}

void sub_10006316C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr), uint64_t a4)
{
  if (v4)
  {
    sub_100067474();
    sub_100067320(v4);
  }

  else
  {
    sub_100067758((uint64_t)&v5);
    swift_bridgeObjectRelease();
    sub_1000291C4();
  }

uint64_t sub_1000631B0(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr), uint64_t a4)
{
  if (v4)
  {
    sub_100067474();
    return swift_errorRelease(v4);
  }

  else
  {
    uint64_t v6 = sub_100067758((uint64_t)v7);
    return sub_100067868(v6);
  }

id sub_100063208(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  [a1 lock];
  swift_beginAccess(v4, v14, 0LL, 0LL);
  uint64_t v5 = *(void (**)(char *, id))(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess(v4, v13, 1LL, 0LL);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a2 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(a2 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_100048404((uint64_t)v5, v6);
  sub_10006675C(v7, v8);
  id result = [a1 unlock];
  if (v5)
  {
    char v12 = 1;
    swift_retain(v6);
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = (id)AMSError(1LL, v10, 0LL, 0LL);

    v5(&v12, v11);
    sub_10006675C((uint64_t)v5, v6);

    return (id)sub_10006675C((uint64_t)v5, v6);
  }

  return result;
}

id sub_100063334( void *a1, uint64_t a2, void (*a3)(void, uint64_t), void (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = a2 + 16;
  [a1 lock];
  sub_10000DC44(v8, (uint64_t)v18, 0LL);
  NSString v10 = *(void (**)(uint64_t *, id))(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  sub_10000DC44(v8, (uint64_t)v17, 1LL);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a2 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(a2 + 2sub_10000D3A0(v0 + 4) = 0LL;
  a3(v10, v9);
  a4(v11, v12);
  id result = [a1 unlock];
  if (v10)
  {
    uint64_t v16 = 0LL;
    sub_100048DB4();
    sub_100048BA0();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = (id)AMSError(1LL, v14, 0LL, 0LL);

    v10(&v16, v15);
    sub_100067960();
    return (id)sub_100067960();
  }

  return result;
}

void sub_100063444(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  [a1 lock];
  swift_beginAccess(v4, v13, 0LL, 0LL);
  uint64_t v5 = *(void (**)(_OWORD *, id))(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess(v4, v12, 1LL, 0LL);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a2 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(a2 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_100048404((uint64_t)v5, v6);
  sub_10006675C(v7, v8);
  [a1 unlock];
  if (v5)
  {
    memset(v11, 0, sizeof(v11));
    swift_retain(v6);
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = (id)AMSError(1LL, v9, 0LL, 0LL);

    v5(v11, v10);
    sub_10006675C((uint64_t)v5, v6);
    sub_10006675C((uint64_t)v5, v6);
    sub_10000DA68((uint64_t)v11, &qword_1001CA778);
  }

id sub_100063578(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  [a1 lock];
  swift_beginAccess(v4, v12, 0LL, 0LL);
  uint64_t v5 = *(void (**)(char *, void))(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  swift_beginAccess(v4, v11, 1LL, 0LL);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a2 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(a2 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_100048404((uint64_t)v5, v6);
  sub_10006675C(v7, v8);
  id result = [a1 unlock];
  if (v5)
  {
    char v10 = 0;
    swift_retain(v6);
    v5(&v10, 0LL);
    sub_10006675C((uint64_t)v5, v6);
    return (id)sub_10006675C((uint64_t)v5, v6);
  }

  return result;
}

void sub_100063650( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  a27 = v31;
  a28 = v32;
  sub_10006776C();
  sub_1000675E4(v33, "lock");
  sub_10000DC44(v30, (uint64_t)&a14, 0LL);
  uint64_t v34 = *(void (**)(void **, void))(v29 + 16);
  sub_10000DC44(v30, (uint64_t)&a11, 1LL);
  *(void *)(v29 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(v29 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_1000676F8();
  uint64_t v35 = sub_10006774C();
  sub_1000675E4(v35, "unlock");
  if (v34)
  {
    a10 = v28;
    sub_1000676F8();
    id v36 = v28;
    v34(&a10, 0LL);
    sub_100067504();
    sub_100067504();
  }

  sub_1000672F4();
}

void sub_1000636EC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  a27 = v28;
  a28 = v29;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v30 + 16;
  sub_1000675E4(v32, "lock");
  sub_10000DC44(v34, (uint64_t)&a14, 0LL);
  uint64_t v35 = *(void (**)(uint64_t *, void))(v31 + 16);
  sub_10000DC44(v34, (uint64_t)&a11, 1LL);
  *(void *)(v31 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(v31 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_1000679C4();
  uint64_t v36 = sub_10006774C();
  sub_1000675E4(v36, "unlock");
  if (v35)
  {
    a10 = v33;
    sub_1000679C4();
    sub_10000DED8();
    v35(&a10, 0LL);
    sub_1000679B8();
    sub_1000679B8();
    sub_1000090CC();
  }

  sub_1000672F4();
}

void sub_100063798(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v6 = a3 + 16;
  [a2 lock];
  swift_beginAccess(v6, v13, 0LL, 0LL);
  uint64_t v7 = *(void (**)(_BYTE *, void))(a3 + 16);
  uint64_t v8 = *(void *)(a3 + 24);
  swift_beginAccess(v6, v12, 1LL, 0LL);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  *(void *)(a3 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(a3 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_100048404((uint64_t)v7, v8);
  sub_10006675C(v9, v10);
  [a2 unlock];
  if (v7)
  {
    sub_10006676C(a1, (uint64_t)v11);
    swift_retain(v8);
    v7(v11, 0LL);
    sub_10006675C((uint64_t)v7, v8);
    sub_10006675C((uint64_t)v7, v8);
    sub_10000DA68((uint64_t)v11, &qword_1001CA778);
  }

id sub_100063898(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v6 = a3 + 16;
  [a2 lock];
  swift_beginAccess(v6, v14, 0LL, 0LL);
  uint64_t v8 = *(void (**)(char *, uint64_t))(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  swift_beginAccess(v6, v13, 1LL, 0LL);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  *(void *)(a3 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(a3 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_100048404((uint64_t)v8, v7);
  sub_10006675C(v9, v10);
  id result = [a2 unlock];
  if (v8)
  {
    char v12 = 1;
    swift_retain(v7);
    v8(&v12, a1);
    sub_10006675C((uint64_t)v8, v7);
    return (id)sub_10006675C((uint64_t)v8, v7);
  }

  return result;
}

void sub_100063984( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28)
{
  a27 = v31;
  a28 = v32;
  sub_10006776C();
  sub_1000675E4(v33, "lock");
  sub_10000DC44(v30, (uint64_t)&a14, 0LL);
  uint64_t v34 = *(void (**)(uint64_t *, uint64_t))(v29 + 16);
  sub_10000DC44(v30, (uint64_t)&a11, 1LL);
  *(void *)(v29 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(v29 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_1000676F8();
  uint64_t v35 = sub_10006774C();
  sub_1000675E4(v35, "unlock");
  if (v34)
  {
    a10 = 0LL;
    sub_10002FAA0();
    v34(&a10, v28);
    sub_100067504();
    sub_100067504();
  }

  sub_1000672F4();
}

void sub_100063A14(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v6 = a3 + 16;
  [a2 lock];
  swift_beginAccess(v6, v13, 0LL, 0LL);
  uint64_t v8 = *(void (**)(_OWORD *, uint64_t))(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  swift_beginAccess(v6, v12, 1LL, 0LL);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(a3 + 24);
  *(void *)(a3 + ++*(void *)(v0 + 16) = 0LL;
  *(void *)(a3 + 2sub_10000D3A0(v0 + 4) = 0LL;
  sub_100048404((uint64_t)v8, v7);
  sub_10006675C(v9, v10);
  [a2 unlock];
  if (v8)
  {
    memset(v11, 0, sizeof(v11));
    swift_retain(v7);
    v8(v11, a1);
    sub_10006675C((uint64_t)v8, v7);
    sub_10006675C((uint64_t)v8, v7);
    sub_10000DA68((uint64_t)v11, &qword_1001CA778);
  }

void sub_100063B10(void (*a1)(void))
{
}

uint64_t sub_100063B2C(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

uint64_t sub_100063B5C(uint64_t a1)
{
  id v1 = sub_10006B9D0(v3[1], v3[2]);
  return swift_willThrow(v1);
}

id sub_100063BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v12 = 0LL;
  id v7 = [v3 initWithPattern:v6 options:a3 error:&v12];

  id v8 = v12;
  if (v7)
  {
    id v9 = v12;
  }

  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }

  return v7;
}

id sub_100063C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  sub_10000DDF8();
  NSString v8 = String._bridgeToObjectiveC()();
  sub_1000090CC();
  id v9 = (void *)_convertErrorToNSError(_:)(a5);
  id v10 = [v5 initWithSubsystem:v7 category:v8 error:v9];
  sub_100067974();

  return v10;
}

unint64_t sub_100063D18(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > result)
    {
      return result;
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_100063D3C(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL);
    __break(1u);
  }

  else
  {
    if (a1)
    {
      uint64_t v2 = sub_10000D33C(&qword_1001C8F20);
      uint64_t v3 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, v2);
      _OWORD v3[2] = a1;
    }

    else
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }

    sub_10000D33C(&qword_1001C8F20);
    return (uint64_t)v3;
  }

  return result;
}

void *sub_100063E00(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL);
    __break(1u);
  }

  else if (a1)
  {
    uint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)( a1,  &type metadata for AppConfiguration);
    result[2] = a1;
  }

  else
  {
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

void sub_100063E98()
{
}

void sub_100063EA4()
{
}

void sub_100063EB0()
{
}

void sub_100063EBC()
{
}

void sub_100063EC8()
{
}

void sub_100063ED4()
{
}

void sub_100063EE0()
{
}

void sub_100063EEC()
{
}

void sub_100063EF8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  void *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native) {
    void *v1 = a1(isUniquelyReferenced_nonNull_native, *(void *)(v3 + 16) + 1LL, 1LL, v3);
  }
  sub_10000DFE8();
}

uint64_t sub_100063F44(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_100013C1C);
}

uint64_t sub_100063F50(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_100013C30);
}

uint64_t sub_100063F5C(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_100013CE8);
}

uint64_t sub_100063F68(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_100013D04);
}

uint64_t sub_100063F74(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_100013D20);
}

uint64_t sub_100063F80(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_100013F14);
}

uint64_t sub_100063F8C(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_1000144AC);
}

uint64_t sub_100063F98(uint64_t a1)
{
  return sub_100063FA4(a1, (uint64_t (*)(BOOL))sub_100014658);
}

uint64_t sub_100063FA4(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24LL);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }

  return result;
}

uint64_t sub_100063FE8(uint64_t result)
{
  unint64_t v2 = *(void *)((*v1 & 0xFFFFFFFFFFFFF8LL) + 0x18);
  return result;
}

uint64_t sub_100064014(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  NSString v6 = sub_1000640E0(v12, 0LL, 0LL, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    NSString v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10000DA1C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }

  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10000DA1C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }

    sub_10000DED8();
  }

  sub_10000D3A0(v12);
  return v7;
}

void *sub_1000640E0(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_100064234((char *)__src, HIBYTE(a6) & 0xF, __dst);
      UnsafeMutableRawBufferPointer.subscript.setter(0LL, HIBYTE(a6) & 0xF, __dst, a3);
      uint64_t result = 0LL;
      *a1 = __dst;
      return result;
    }

    goto LABEL_11;
  }

  if ((a6 & 0x1000000000000000LL) != 0)
  {
LABEL_11:
    uint64_t result = sub_1000642F8(a5, a6);
    *a1 = v12;
    return result;
  }

  if ((a5 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }

  else
  {
    uint64_t v8 = _StringObject.sharedUTF8.getter(a5, a6);
    if (!v8)
    {
      uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Unexpectedly found nil while unwrapping an Optional value",  57LL,  2LL,  "Swift/StringTesting.swift",  25LL);
      __break(1u);
      return result;
    }
  }

  *a1 = v8;
  if ((a6 & 0x8000000000000000LL) != 0) {
    return 0LL;
  }
  else {
    return (void *)swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
  }
}

void *sub_100064234(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000LL) != 0)
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory with negative count",  60LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  2,  1170LL,  0);
  }

  else
  {
    if (&__dst[__n] <= __src || &__src[__n] <= __dst) {
      return memcpy(__dst, __src, __n);
    }
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableRawPointer.initializeMemory overlapping range",  58LL,  2LL,  "Swift/UnsafeRawPointer.swift",  28LL,  2,  1173LL,  0);
  }

  __break(1u);
  return result;
}

void *sub_1000642F8(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = sub_10006438C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
    unint64_t v2 = sub_1000645AC(0LL, v2[2] + 1LL, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    unint64_t v2 = sub_1000645AC((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((_BYTE *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_10006438C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    Swift::Int v4 = String.UTF8View._foreignCount()();
    if (v4) {
      goto LABEL_6;
    }
    return _swiftEmptyArrayStorage;
  }

  if ((a2 & 0x2000000000000000LL) != 0) {
    Swift::Int v4 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
LABEL_6:
  sub_1000644FC(v4, 0LL);
  if (v4 < 0)
  {
    _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableBufferPointer with negative count",  46LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL,  2,  71LL,  0);
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v6 = v5;
  uint64_t v7 = _StringGuts.copyUTF8(into:)(v5 + 32, v4, a1, a2);
  if ((v8 & 1) != 0)
  {
LABEL_14:
    uint64_t v9 = "Insufficient space allocated to copy string contents";
    uint64_t v10 = "Swift/StringUTF8View.swift";
    uint64_t v11 = 52LL;
    uint64_t v12 = 26LL;
    goto LABEL_15;
  }

  if (v7 == v4) {
    return (void *)v6;
  }
  uint64_t v9 = "invalid Collection: less than 'count' elements in collection";
  uint64_t v10 = "Swift/ContiguousArrayBuffer.swift";
  uint64_t v11 = 60LL;
  uint64_t v12 = 33LL;
LABEL_15:
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11LL, 2LL, v9, v11, 2LL, v10, v12);
  __break(1u);
  return result;
}

void sub_1000644FC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (v2)
  {
    uint64_t v4 = sub_10000D33C(&qword_1001CA750);
    uint64_t v5 = (void *)sub_10000DDDC(v4, v2 + 32);
    size_t v6 = j__malloc_size(v5);
    v5[2] = a1;
    v5[3] = 2 * v6 - 64;
  }

  sub_100009044();
}

void sub_100064558(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1 >> 16;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v7 = String.UTF16View.index(_:offsetBy:)(15LL, v5, a2);
    sub_1000678A8(v7);
  }

  else
  {
    uint64_t v6 = String.UTF8View._foreignIndex(_:offsetBy:)(15LL, v5);
    sub_1000678A8(v6);
  }

  sub_100009044();
}

char *sub_1000645AC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_10000D33C(&qword_1001CA750);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  NSString v14 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_100015C50(v14, v8, v13);
    *(void *)(a4 + ++*(void *)(v0 + 16) = 0LL;
  }

  else
  {
    sub_100016730(v14, v8, v13);
  }

  swift_bridgeObjectRelease();
  return v11;
}

void sub_100064680(void *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
  {
    sub_100065620();
    uint64_t v2 = v3;
  }

  uint64_t v4 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1000646E8(v5);
  *a1 = v2;
}

void sub_1000646E8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000LL) == 0)
    {
      if (v3) {
        sub_100065038(0LL, (char *)v3, (char *)1, a1);
      }
      return;
    }

    goto LABEL_148;
  }

  Swift::Int v5 = v4;
  uint64_t v118 = sub_100063E00(v3 / 2);
  uint64_t v125 = v6;
  uint64_t v121 = v3;
  uint64_t v116 = a1;
  if (v3 <= 0)
  {
    int64_t v9 = (char *)_swiftEmptyArrayStorage;
    unint64_t v53 = _swiftEmptyArrayStorage[2];
LABEL_110:
    uint64_t v104 = (uint64_t)v9;
    if (v53 < 2)
    {
LABEL_125:
      swift_bridgeObjectRelease();
      if (v121 >= -1)
      {
LABEL_126:
        v118[2] = 0LL;
        swift_bridgeObjectRelease();
        return;
      }

      goto LABEL_152;
    }

    uint64_t v105 = *v116;
    while (1)
    {
      unint64_t v106 = v53 - 2;
      if (v53 < 2) {
        break;
      }
      if (!v105) {
        goto LABEL_156;
      }
      uint64_t v107 = *(void *)(v104 + 32 + 16 * v106);
      uint64_t v108 = *(void *)(v104 + 32 + 16 * (v53 - 1) + 8);
      sub_100065218( (char *)(v105 + 80 * v107),  (char *)(v105 + 80LL * *(void *)(v104 + 32 + 16 * (v53 - 1))),  v105 + 80 * v108,  v125);
      if (v1) {
        goto LABEL_122;
      }
      if (v108 < v107) {
        goto LABEL_143;
      }
      if ((swift_isUniquelyReferenced_nonNull_native(v104) & 1) == 0)
      {
        sub_1000655F8(v104);
        uint64_t v104 = v111;
      }

      if (v106 >= *(void *)(v104 + 16)) {
        goto LABEL_144;
      }
      uint64_t v109 = (void *)(v104 + 32 + 16 * v106);
      *uint64_t v109 = v107;
      v109[1] = v108;
      unint64_t v110 = *(void *)(v104 + 16);
      if (v53 > v110) {
        goto LABEL_145;
      }
      memmove((void *)(v104 + 32 + 16 * (v53 - 1)), (const void *)(v104 + 32 + 16 * v53), 16 * (v110 - v53));
      *(void *)(v104 + ++*(void *)(v0 + 16) = v110 - 1;
      unint64_t v53 = v110 - 1;
      if (v110 <= 2) {
        goto LABEL_125;
      }
    }

LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
    return;
  }

  Swift::Int v117 = v5;
  uint64_t v7 = 0LL;
  uint64_t v8 = *a1;
  uint64_t v115 = *a1 + 80;
  uint64_t v112 = *a1 + 72;
  int64_t v9 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v10 = v3;
  while (1)
  {
    uint64_t v11 = v7;
    uint64_t v12 = v7 + 1;
    uint64_t v122 = v7;
    if (v7 + 1 < v10)
    {
      memcpy(__dst, (const void *)(v8 + 80 * v12), 0x50uLL);
      memcpy(v141, (const void *)(v8 + 80 * v11), sizeof(v141));
      sub_100066268(__dst);
      sub_100066268(v141);
      uint64_t v13 = sub_10001D1B4();
      uint64_t v15 = v14;
      uint64_t v16 = sub_10001D1B4();
      if (v13 == v16 && v15 == v17) {
        int v19 = 0;
      }
      else {
        int v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 1LL);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10002FF78(v141);
      sub_10002FF78(__dst);
      Swift::Int v10 = v121;
      uint64_t v11 = v122;
      uint64_t v12 = v122 + 2;
      if (v122 + 2 < v121)
      {
        uint64_t v20 = v115 + 80 * v122;
        while (1)
        {
          uint64_t v21 = v12;
          memcpy(v140, (const void *)(v20 + 80), sizeof(v140));
          memcpy(v139, (const void *)v20, sizeof(v139));
          sub_100066268(v140);
          sub_100066268(v139);
          uint64_t v22 = sub_10001D1B4();
          uint64_t v24 = v23;
          uint64_t v25 = sub_10001D1B4();
          BOOL v27 = v22 == v25 && v24 == v26;
          int v28 = v27 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 1LL);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10002FF78(v139);
          sub_10002FF78(v140);
          if (((v19 ^ v28) & 1) != 0) {
            break;
          }
          uint64_t v12 = v21 + 1;
          v20 += 80LL;
          Swift::Int v10 = v121;
          if (v21 + 1 >= v121)
          {
            uint64_t v12 = v121;
            goto LABEL_23;
          }
        }

        Swift::Int v10 = v121;
        uint64_t v12 = v21;
LABEL_23:
        uint64_t v11 = v122;
      }

      if ((v19 & 1) != 0)
      {
        if (v12 < v11) {
          goto LABEL_149;
        }
        if (v11 < v12)
        {
          uint64_t v113 = v9;
          uint64_t v29 = 80 * v12;
          uint64_t v30 = 80 * v11;
          uint64_t v31 = v11;
          uint64_t v32 = v12;
          do
          {
            if (v31 != --v32)
            {
              if (!v8) {
                goto LABEL_155;
              }
              char v128 = *(_BYTE *)(v8 + v30);
              uint64_t v33 = v8 + v29;
              char v126 = *(_BYTE *)(v8 + v30 + 1);
              uint64_t v34 = *(void *)(v8 + v30 + 8);
              uint64_t v143 = *(void *)(v8 + v30 + 48);
              uint64_t v135 = *(void *)(v8 + v30 + 56);
              char v133 = *(_BYTE *)(v8 + v30 + 64);
              uint64_t v131 = *(void *)(v8 + v30 + 72);
              __int128 v123 = *(_OWORD *)(v8 + v30 + 16);
              __int128 v119 = *(_OWORD *)(v8 + v30 + 32);
              memmove((void *)(v8 + v30), (const void *)(v8 + v29 - 80), 0x50uLL);
              *(_BYTE *)(v33 - 80) = v128;
              *(_BYTE *)(v33 - 79) = v126;
              *(void *)(v33 - 72) = v34;
              *(_OWORD *)(v33 - 6sub_10000D3A0(v0 + 4) = v123;
              *(_OWORD *)(v33 - 48) = v119;
              *(void *)(v33 - 32) = v143;
              *(void *)(v33 - 2sub_10000D3A0(v0 + 4) = v135;
              *(_BYTE *)(v33 - ++*(void *)(v0 + 16) = v133;
              *(void *)(v33 - 8) = v131;
            }

            ++v31;
            v29 -= 80LL;
            v30 += 80LL;
          }

          while (v31 < v32);
          Swift::Int v10 = v121;
          uint64_t v11 = v122;
          int64_t v9 = v113;
        }
      }
    }

    if (v12 < v10)
    {
      if (__OFSUB__(v12, v11)) {
        goto LABEL_147;
      }
      if (v12 - v11 < v117)
      {
        if (__OFADD__(v11, v117)) {
          goto LABEL_150;
        }
        if (v11 + v117 >= v10) {
          Swift::Int v35 = v10;
        }
        else {
          Swift::Int v35 = v11 + v117;
        }
        if (v35 < v11) {
          goto LABEL_151;
        }
        if (v12 != v35)
        {
          uint64_t v127 = v8;
          os_log_type_t v114 = v9;
          uint64_t v36 = (void *)(v112 + 80 * v12);
          uint64_t v120 = v35;
          do
          {
            uint64_t v37 = v11;
            uint64_t v124 = v36;
            uint64_t v129 = v12;
            while (1)
            {
              memcpy(v138, v36 - 9, sizeof(v138));
              memcpy(v137, v36 - 19, sizeof(v137));
              sub_100066268(v138);
              sub_100066268(v137);
              uint64_t v38 = sub_10001D1B4();
              uint64_t v40 = v39;
              uint64_t v41 = sub_10001D1B4();
              if (v38 == v41 && v40 == v42) {
                break;
              }
              char v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v41, v42, 1LL);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10002FF78(v137);
              sub_10002FF78(v138);
              if ((v44 & 1) == 0) {
                goto LABEL_53;
              }
              if (!v127) {
                goto LABEL_153;
              }
              char v45 = *((_BYTE *)v36 - 72);
              char v46 = *((_BYTE *)v36 - 71);
              uint64_t v47 = *(v36 - 8);
              uint64_t v48 = *(v36 - 2);
              uint64_t v136 = *(v36 - 3);
              LODWORD(v143) = *((unsigned __int8 *)v36 - 8);
              uint64_t v49 = *v36;
              __int128 v132 = *(_OWORD *)(v36 - 5);
              __int128 v134 = *(_OWORD *)(v36 - 7);
              memcpy(v36 - 9, v36 - 19, 0x50uLL);
              *(v36 - 10) = v49;
              v36 -= 10;
              *((_BYTE *)v36 - 72) = v45;
              *((_BYTE *)v36 - 71) = v46;
              *(v36 - 8) = v47;
              *(_OWORD *)(v36 - 7) = v134;
              *(_OWORD *)(v36 - 5) = v132;
              *(v36 - 3) = v136;
              *(v36 - 2) = v48;
              ++v37;
              *((_BYTE *)v36 - 8) = v143;
              uint64_t v50 = v129;
              if (v129 == v37) {
                goto LABEL_54;
              }
            }

            swift_bridgeObjectRelease_n(v40, 2LL);
            sub_10002FF78(v137);
            sub_10002FF78(v138);
LABEL_53:
            uint64_t v50 = v129;
LABEL_54:
            uint64_t v12 = v50 + 1;
            uint64_t v11 = v122;
            uint64_t v36 = v124 + 10;
          }

          while (v12 != v120);
          uint64_t v12 = v120;
          int64_t v9 = v114;
          uint64_t v8 = v127;
        }
      }
    }

    if (v12 < v11) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
    {
      sub_100065514(0, *((void *)v9 + 2) + 1LL, 1, v9);
      int64_t v9 = v102;
    }

    unint64_t v52 = *((void *)v9 + 2);
    unint64_t v51 = *((void *)v9 + 3);
    unint64_t v53 = v52 + 1;
    if (v52 >= v51 >> 1)
    {
      sub_100065514(v51 > 1, v52 + 1, 1, v9);
      int64_t v9 = v103;
    }

    *((void *)v9 + 2) = v53;
    uint64_t v54 = v9 + 32;
    uint64_t v55 = &v9[16 * v52 + 32];
    *(void *)uint64_t v55 = v122;
    *((void *)v55 + 1) = v12;
    uint64_t v130 = v12;
    if (v52) {
      break;
    }
    unint64_t v53 = 1LL;
LABEL_104:
    Swift::Int v10 = v121;
    uint64_t v7 = v130;
    if (v130 >= v121) {
      goto LABEL_110;
    }
  }

  while (1)
  {
    unint64_t v56 = v53 - 1;
    if (v53 >= 4)
    {
      id v61 = &v54[2 * v53];
      uint64_t v62 = *(v61 - 8);
      uint64_t v63 = *(v61 - 7);
      BOOL v67 = __OFSUB__(v63, v62);
      uint64_t v64 = v63 - v62;
      if (v67) {
        goto LABEL_131;
      }
      uint64_t v66 = *(v61 - 6);
      uint64_t v65 = *(v61 - 5);
      BOOL v67 = __OFSUB__(v65, v66);
      uint64_t v59 = v65 - v66;
      char v60 = v67;
      if (v67) {
        goto LABEL_132;
      }
      unint64_t v68 = v53 - 2;
      uint64_t v69 = &v54[2 * v53 - 4];
      uint64_t v71 = *v69;
      uint64_t v70 = v69[1];
      BOOL v67 = __OFSUB__(v70, v71);
      uint64_t v72 = v70 - v71;
      if (v67) {
        goto LABEL_133;
      }
      BOOL v67 = __OFADD__(v59, v72);
      uint64_t v73 = v59 + v72;
      if (v67) {
        goto LABEL_135;
      }
      if (v73 >= v64)
      {
        uint64_t v91 = &v54[2 * v56];
        uint64_t v93 = *v91;
        uint64_t v92 = v91[1];
        BOOL v67 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v67) {
          goto LABEL_141;
        }
        BOOL v84 = v59 < v94;
        goto LABEL_93;
      }
    }

    else
    {
      if (v53 != 3)
      {
        uint64_t v85 = *((void *)v9 + 4);
        uint64_t v86 = *((void *)v9 + 5);
        BOOL v67 = __OFSUB__(v86, v85);
        uint64_t v78 = v86 - v85;
        char v79 = v67;
        goto LABEL_87;
      }

      uint64_t v58 = *((void *)v9 + 4);
      uint64_t v57 = *((void *)v9 + 5);
      BOOL v67 = __OFSUB__(v57, v58);
      uint64_t v59 = v57 - v58;
      char v60 = v67;
    }

    if ((v60 & 1) != 0) {
      goto LABEL_134;
    }
    unint64_t v68 = v53 - 2;
    uint64_t v74 = &v54[2 * v53 - 4];
    uint64_t v76 = *v74;
    uint64_t v75 = v74[1];
    BOOL v77 = __OFSUB__(v75, v76);
    uint64_t v78 = v75 - v76;
    char v79 = v77;
    if (v77) {
      goto LABEL_136;
    }
    uint64_t v80 = &v54[2 * v56];
    uint64_t v82 = *v80;
    uint64_t v81 = v80[1];
    BOOL v67 = __OFSUB__(v81, v82);
    uint64_t v83 = v81 - v82;
    if (v67) {
      goto LABEL_138;
    }
    if (__OFADD__(v78, v83)) {
      goto LABEL_140;
    }
    if (v78 + v83 >= v59)
    {
      BOOL v84 = v59 < v83;
LABEL_93:
      if (v84) {
        unint64_t v56 = v68;
      }
      goto LABEL_95;
    }

LABEL_87:
    if ((v79 & 1) != 0) {
      goto LABEL_137;
    }
    uint64_t v87 = &v54[2 * v56];
    uint64_t v89 = *v87;
    uint64_t v88 = v87[1];
    BOOL v67 = __OFSUB__(v88, v89);
    uint64_t v90 = v88 - v89;
    if (v67) {
      goto LABEL_139;
    }
    if (v90 < v78) {
      goto LABEL_104;
    }
LABEL_95:
    unint64_t v95 = v56 - 1;
    if (v56 - 1 >= v53)
    {
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }

    if (!v8) {
      goto LABEL_154;
    }
    id v96 = v9;
    uint64_t v97 = &v54[2 * v95];
    uint64_t v98 = *v97;
    uint64_t v99 = &v54[2 * v56];
    uint64_t v100 = v99[1];
    sub_100065218((char *)(v8 + 80 * *v97), (char *)(v8 + 80LL * *v99), v8 + 80 * v100, v125);
    if (v1) {
      break;
    }
    if (v100 < v98) {
      goto LABEL_128;
    }
    if (v56 > *((void *)v96 + 2)) {
      goto LABEL_129;
    }
    *uint64_t v97 = v98;
    v54[2 * v95 + 1] = v100;
    unint64_t v101 = *((void *)v96 + 2);
    if (v56 >= v101) {
      goto LABEL_130;
    }
    int64_t v9 = v96;
    unint64_t v53 = v101 - 1;
    memmove(&v54[2 * v56], v99 + 2, 16 * (v101 - 1 - v56));
    *((void *)v96 + 2) = v101 - 1;
    if (v101 <= 2) {
      goto LABEL_104;
    }
  }

LABEL_122:
  swift_bridgeObjectRelease();
  if (v121 >= -1) {
    goto LABEL_126;
  }
  __break(1u);
}

char *sub_100065038(char *result, char *a2, char *a3, uint64_t *a4)
{
  int v19 = result;
  uint64_t v22 = a3;
  if (a3 != a2)
  {
    uint64_t v21 = *a4;
    Swift::Int v4 = (void *)(*a4 + 80LL * (void)a3 + 72);
    while (2)
    {
      Swift::Int v5 = v19;
      uint64_t v20 = v4;
      while (1)
      {
        memcpy(__dst, v4 - 9, 0x50uLL);
        memcpy(v26, v4 - 19, sizeof(v26));
        sub_100066268(__dst);
        sub_100066268(v26);
        uint64_t v6 = sub_10001D1B4();
        uint64_t v8 = v7;
        uint64_t v9 = sub_10001D1B4();
        if (v6 == v9 && v8 == v10) {
          break;
        }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v9, v10, 1LL);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10002FF78(v26);
        uint64_t result = (char *)sub_10002FF78(__dst);
        if ((v12 & 1) != 0)
        {
          if (!v21)
          {
            __break(1u);
            return result;
          }

          char v13 = *((_BYTE *)v4 - 72);
          char v14 = *((_BYTE *)v4 - 71);
          uint64_t v15 = *(v4 - 8);
          uint64_t v16 = *(v4 - 2);
          uint64_t v25 = *(v4 - 3);
          int v28 = *((unsigned __int8 *)v4 - 8);
          uint64_t v17 = *v4;
          __int128 v23 = *(_OWORD *)(v4 - 5);
          __int128 v24 = *(_OWORD *)(v4 - 7);
          uint64_t result = (char *)memcpy(v4 - 9, v4 - 19, 0x50uLL);
          *(v4 - 10) = v17;
          v4 -= 10;
          *((_BYTE *)v4 - 72) = v13;
          *((_BYTE *)v4 - 71) = v14;
          *(v4 - 8) = v15;
          *(_OWORD *)(v4 - 7) = v24;
          *(_OWORD *)(v4 - 5) = v23;
          *(v4 - 3) = v25;
          *(v4 - 2) = v16;
          ++v5;
          *((_BYTE *)v4 - 8) = v28;
          if (v22 != v5) {
            continue;
          }
        }

        goto LABEL_13;
      }

      swift_bridgeObjectRelease_n(v8, 2LL);
      sub_10002FF78(v26);
      uint64_t result = (char *)sub_10002FF78(__dst);
LABEL_13:
      Swift::Int v4 = v20 + 10;
      if (++v22 != a2) {
        continue;
      }
      break;
    }
  }

  return result;
}

uint64_t sub_100065218(char *a1, char *a2, unint64_t a3, char *a4)
{
  Swift::Int v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 80;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 80;
  if (v9 >= v11)
  {
    sub_100015DFC(a2, (uint64_t)(a3 - (void)a2) / 80, a4);
    char v12 = &v4[80 * v11];
    if (v7 >= v6 || v10 < 80) {
      goto LABEL_46;
    }
    uint64_t v22 = (char *)(a3 - 80);
    uint64_t v37 = v4;
    while (1)
    {
      unint64_t v40 = (unint64_t)v12;
      __int128 v23 = v12 - 80;
      memcpy(__dst, v12 - 80, 0x50uLL);
      __int128 v24 = v6 - 80;
      memcpy(v38, v6 - 80, sizeof(v38));
      sub_100066268(__dst);
      sub_100066268(v38);
      uint64_t v25 = sub_10001D1B4();
      uint64_t v27 = v26;
      uint64_t v28 = sub_10001D1B4();
      if (v25 == v28 && v27 == v29) {
        char v31 = 0;
      }
      else {
        char v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v27, v28, v29, 1LL);
      }
      uint64_t v32 = v22 + 80;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10002FF78(v38);
      sub_10002FF78(__dst);
      if ((v31 & 1) != 0)
      {
        BOOL v33 = v32 != v6 || v22 >= v6;
        v6 -= 80;
        Swift::Int v4 = v37;
        char v12 = (char *)v40;
        if (!v33) {
          goto LABEL_42;
        }
      }

      else
      {
        BOOL v34 = v32 != (char *)v40 || (unint64_t)v22 >= v40;
        __int128 v24 = v23;
        char v12 = v23;
        Swift::Int v4 = v37;
        if (!v34) {
          goto LABEL_42;
        }
      }

      memmove(v22, v24, 0x50uLL);
LABEL_42:
      v22 -= 80;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_46;
      }
    }
  }

  sub_100015DFC(a1, (a2 - a1) / 80, a4);
  char v12 = &v4[80 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 80)
  {
    do
    {
      memcpy(__dst, v6, 0x50uLL);
      memcpy(v38, v4, sizeof(v38));
      sub_100066268(__dst);
      sub_100066268(v38);
      uint64_t v13 = sub_10001D1B4();
      uint64_t v15 = v14;
      uint64_t v16 = sub_10001D1B4();
      BOOL v18 = v13 == v16 && v15 == v17;
      if (v18)
      {
        swift_bridgeObjectRelease_n(v15, 2LL);
        sub_10002FF78(v38);
        sub_10002FF78(__dst);
      }

      else
      {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 1LL);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10002FF78(v38);
        sub_10002FF78(__dst);
        if ((v19 & 1) != 0)
        {
          uint64_t v20 = v6;
          BOOL v18 = v7 == v6;
          v6 += 80;
          if (v18) {
            goto LABEL_15;
          }
LABEL_14:
          memmove(v7, v20, 0x50uLL);
          goto LABEL_15;
        }
      }

      uint64_t v20 = v4;
      BOOL v18 = v7 == v4;
      v4 += 80;
      if (!v18) {
        goto LABEL_14;
      }
LABEL_15:
      v7 += 80;
    }

    while (v4 < v12 && (unint64_t)v6 < a3);
  }

  uint64_t v6 = v7;
LABEL_46:
  sub_100015DFC(v4, (v12 - v4) / 80, v6);
  return 1LL;
}

void sub_100065514(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_10000D33C(&qword_1001CA740);
    uint64_t v11 = (char *)sub_10000DDDC(v10, 16 * v9 + 32);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }

  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || &v14[16 * v8] <= v13) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 16 * v8);
  }

  sub_100009020();
  sub_10000DFE8();
}

void sub_1000655F8(uint64_t a1)
{
}

void sub_10006560C()
{
}

void sub_100065620()
{
}

uint64_t sub_100065634(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( 0LL,  *(void *)(a1 + 16),  0LL,  a1);
}

uint64_t sub_100065648(void *a1)
{
  id v1 = [a1 destinations];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_10000DAA0(0LL, &qword_1001CA298, &OBJC_CLASS___AMSEngagementDestination_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_1000656B4(void *a1)
{
  id v1 = [a1 apps];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String);

  return v3;
}

uint64_t sub_100065708(void *a1)
{
  id v1 = [a1 actions];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_10000D33C(&qword_1001C8E58);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  return v4;
}

uint64_t sub_100065768(void *a1)
{
  id v1 = [a1 logKey];
  if (v1)
  {
    uint64_t v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  }

  return sub_1000675EC();
}

void sub_1000657C4(void *a1)
{
}

void sub_1000657E4(void *a1, SEL *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = [a1 *a2];
  if (v8)
  {
    uint64_t v9 = v8;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, a3, a4, a5);
  }

  sub_10000DFE8();
}

#error "100065860: call analysis failed (funcsize=8)"
uint64_t sub_10006586C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void v26[5];
  void v27[5];
  __int128 v24 = a3;
  __int128 v23 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  int64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v10);
  size_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v27[3] = type metadata accessor for BagProvider();
  v27[4] = &off_1001A94E0;
  v27[0] = a1;
  void v26[3] = type metadata accessor for Defaults();
  v26[4] = &off_1001A9C50;
  v26[0] = a2;
  *(void *)(a4 + 10sub_10000D3A0(v0 + 4) = &_swiftEmptySetSingleton;
  sub_100019EEC((uint64_t)v27, a4 + 16);
  sub_100019EEC((uint64_t)v26, a4 + 56);
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CAAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v17 = v16;
  BOOL v18 = sub_10000D33C((uint64_t *)&unk_1001CD3A0);
  sub_1000253B0((unint64_t *)&qword_1001CAAC0, (uint64_t *)&unk_1001CD3A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v18, v19, v10, v17);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v23);
  uint64_t v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD00000000000002DLL,  0x800000010016DA40LL,  v15,  v12,  v9,  v24);
  sub_10000D3A0(v26);
  sub_10000D3A0(v27);
  *(void *)(a4 + 96) = v20;
  return a4;
}

uint64_t sub_100065AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = type metadata accessor for BagProvider();
  __int128 v23 = &off_1001A94E0;
  v21[0] = a1;
  uint64_t v19 = type metadata accessor for Defaults();
  uint64_t v20 = &off_1001A9C50;
  v18[0] = a2;
  uint64_t v6 = type metadata accessor for ForceSyncCoordinator();
  uint64_t v7 = swift_allocObject(v6, 112LL, 7LL);
  uint64_t v8 = sub_1000665E8((uint64_t)v21, v22);
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  uint64_t v12 = sub_1000665E8((uint64_t)v18, v19);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  uint64_t v16 = sub_10006586C(*v10, *v14, a3, v7);
  sub_10000D3A0(v18);
  sub_10000D3A0(v21);
  return v16;
}

id sub_100065C00(char *a1)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_10000D33C(&qword_1001CB180);
  __chkstk_darwin(v2);
  uint64_t v39 = (uint64_t)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v4 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  void v42[3] = &type metadata for JSEnginePerformerProvider;
  v42[4] = &off_1001AC6F0;
  uint64_t v37 = OBJC_IVAR____TtC14amsengagementd17EngagementService_serviceQueue;
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v13 = a1;
  static DispatchQoS.unspecified.getter(v13);
  uint64_t v41 = _swiftEmptyArrayStorage;
  sub_100007CD0( (unint64_t *)&qword_1001CAAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v15 = v14;
  uint64_t v16 = sub_10000D33C((uint64_t *)&unk_1001CD3A0);
  sub_1000253B0((unint64_t *)&qword_1001CAAC0, (uint64_t *)&unk_1001CD3A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v16, v17, v7, v15);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))( v6,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v38);
  BOOL v18 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD00000000000002ALL,  0x800000010016DA10LL,  v12,  v9,  v6,  0LL);
  *(void *)&v36[v37] = v18;
  uint64_t v19 = (uint64_t *)&v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_appDefaultsProvider];
  uint64_t v20 = type metadata accessor for URL(0LL);
  sub_10000D5C0(v39, 1LL, 1LL, v20);
  uint64_t v21 = type metadata accessor for AppDefaultsProvider(0LL);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  uint64_t v22 = sub_100026E2C();
  void v19[3] = v21;
  v19[4] = (uint64_t)&off_1001A8E70;
  *uint64_t v19 = v22;
  __int128 v23 = &v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_currentEnginePerformer];
  *(_OWORD *)__int128 v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *(void *)&v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseDelay] = 1LL;
  __int128 v24 = &v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_engineReleaseToken];
  *(void *)__int128 v24 = 0LL;
  *((void *)v24 + 1) = 0LL;
  uint64_t v25 = &v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_featureFlagProvider];
  *((void *)v25 + 3) = &type metadata for FeatureFlagProvider;
  *((void *)v25 + sub_10000D3A0(v0 + 4) = &off_1001AB738;
  *(void *)&v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_syncBackoff] = 0x404E000000000000LL;
  sub_100019EEC( (uint64_t)v42,  (uint64_t)&v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_enginePerformerProvider]);
  uint64_t v26 = type metadata accessor for PriorityQueue();
  swift_allocObject(v26, 96LL, 7LL);
  id v27 = v18;
  sub_100101C4C();
  *(void *)&v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_priorityQueue] = v28;
  uint64_t v29 = type metadata accessor for BagProvider();
  uint64_t v30 = swift_allocObject(v29, 16LL, 7LL);
  id v31 = objc_allocWithZone((Class)type metadata accessor for Defaults());
  id v32 = v27;
  *(void *)&v13[OBJC_IVAR____TtC14amsengagementd17EngagementService_forceSyncCoordinator] = sub_100065AB0( v30,  (uint64_t)[v31 init],  (uint64_t)v18);

  BOOL v33 = (objc_class *)type metadata accessor for EngagementService();
  v40.receiver = v13;
  v40.super_class = v33;
  id v34 = objc_msgSendSuper2(&v40, "init");
  sub_10000D3A0(v42);
  return v34;
}

id sub_100065FCC()
{
  v5[3] = &type metadata for JSEnginePerformerProvider;
  v5[4] = &off_1001AC6F0;
  uint64_t v0 = (char *)objc_allocWithZone((Class)type metadata accessor for EngagementService());
  uint64_t v1 = sub_1000665E8((uint64_t)v5, (uint64_t)&type metadata for JSEnginePerformerProvider);
  __chkstk_darwin(v1);
  (*(void (**)(void))(v2 + 16))();
  id v3 = sub_100065C00(v0);
  sub_10000D3A0(v5);
  return v3;
}

uint64_t sub_10006606C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100063B5C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100066098()
{
  return sub_100067380((void (*)(void))&_swift_release);
}

void sub_1000660A4(uint64_t a1)
{
  sub_100063080( a1,  *(void *)(v1 + 16),  *(void *(**)(uint64_t *__return_ptr))(v1 + 24),  *(void *)(v1 + 32));
}

uint64_t sub_1000660C0()
{
  uint64_t v0 = sub_100067600();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000660E4(_BYTE *a1)
{
  return sub_1000609B4( a1,  *(void **)(v1 + 16),  *(void **)(v1 + 24),  *(void *)(v1 + 32),  *(_BYTE *)(v1 + 40),  *(void *)(v1 + 48));
}

#error "100066114: call analysis failed (funcsize=8)"
uint64_t sub_100066120(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return sub_100062A78(*a1, a2, a3, a4);
}

uint64_t sub_100066128(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v17[3] = sub_10000DE08(a1, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  void v17[4] = &protocol witness table for OS_dispatch_queue;
  v17[0] = a3;
  uint64_t v13 = Promise.__allocating_init()(a3);
  uint64_t v14 = (void *)sub_10000DDDC(a5, 40LL);
  uint64_t v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  sub_1000672B0(v13);
  sub_100067860();
  Promise.then(perform:orCatchError:on:)(a6, v13, a7, v14, v17);
  swift_release(v13);
  uint64_t v15 = sub_10002FAF4();
  sub_100067868(v15);
  return v13;
}

#error "100066238: call analysis failed (funcsize=13)"
uint64_t sub_100066248(uint64_t *a1)
{
  return sub_100062F84(*a1);
}

uint64_t sub_100066250(uint64_t *a1, uint64_t (*a2)(uint64_t *))
{
  return sub_100063B2C(*a1, a2);
}

uint64_t sub_100066258(uint64_t *a1)
{
  return sub_100066250(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_100066260(uint64_t a1)
{
  return sub_100049AD4(a1, *(uint64_t (**)(void))(v1 + 16));
}

void *sub_100066268(void *a1)
{
  uint64_t v2 = (void *)a1[1];
  uint64_t v3 = a1[6];
  swift_bridgeObjectRetain(a1[4]);
  swift_bridgeObjectRetain(v3);
  id v4 = v2;
  return a1;
}

uint64_t sub_1000662B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000662DC()
{
  uint64_t v1 = sub_100067620();
  return swift_deallocObject(v1, v2, v3);
}

void sub_1000662F8()
{
}

uint64_t sub_100066310()
{
  return sub_100067380((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10006631C()
{
}

uint64_t sub_100066328(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return sub_100062B10(*a1, a2, a3, a4);
}

void sub_100066340()
{
}

uint64_t sub_10006635C(uint64_t a1, uint64_t a2)
{
  return sub_100066B74( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t, unint64_t, void, void, void))sub_100066340);
}

uint64_t sub_100066370(uint64_t a1)
{
  return sub_100065844(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

#error "100066398: call analysis failed (funcsize=8)"
id sub_1000663A8()
{
  uint64_t v0;
  return sub_100063334( *(void **)(v0 + 16),  *(void *)(v0 + 24),  (void (*)(void, uint64_t))sub_1000670A4,  (void (*)(uint64_t, uint64_t))sub_1000670A8);
}

void sub_1000663D0(void *a1)
{
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0) {
    *a1 = swift_allocBox();
  }
  sub_100009044();
}

uint64_t sub_100066410(uint64_t a1)
{
  return sub_1000660F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

#error "100066454: call analysis failed (funcsize=13)"
uint64_t sub_100066468(uint64_t a1, uint64_t a2)
{
  void *v2;
  return sub_100066420(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_100066478()
{
  return sub_100062EF0(v0[2], v0[3], v0[4]);
}

void sub_100066494(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, dispatch_group_s *a5)
{
}

uint64_t sub_1000664B0()
{
  return sub_100066CA4((uint64_t (*)(void *, void, void, void, void))sub_100066494);
}

uint64_t sub_1000664C0()
{
  return sub_100066680((uint64_t)&unk_1001AA578, (uint64_t)sub_1000664D8);
}

void sub_1000664D8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100066520(uint64_t *a1)
{
  return sub_100066328(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_100066530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001CA748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100066578()
{
  return swift_deallocObject(v0, 80LL, 7LL);
}

void sub_1000665B4(uint64_t a1, uint64_t a2)
{
}

void sub_1000665E0()
{
}

uint64_t sub_1000665E8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

uint64_t sub_100066610(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_100066618()
{
  uint64_t v0 = sub_1000673A4();
  return swift_deallocObject(v0, v1, v2);
}

id sub_100066638()
{
  return sub_100063578(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

id sub_100066644(uint64_t a1)
{
  return sub_100063898(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_100066650()
{
  return sub_100063208(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100066658()
{
  return sub_100062FB4(v0);
}

void sub_100066660(uint64_t a1)
{
}

uint64_t sub_10006666C()
{
  return sub_100066680((uint64_t)&unk_1001AA8C0, (uint64_t)sub_1000666B0);
}

uint64_t sub_100066680(uint64_t a1, uint64_t a2)
{
  return sub_100062840( *(void *)(v2 + 16),  (__int128 *)(v2 + 24),  *(void *)(v2 + 64),  *(void *)(v2 + 72),  *(void *)(v2 + 80),  a1,  a2);
}

void sub_1000666B0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1000666F8(char *a1)
{
  return sub_100066120(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

void sub_100066708(uint64_t a1)
{
}

void sub_10006673C(uint64_t a1)
{
}

void sub_100066748(uint64_t a1)
{
}

void sub_100066754()
{
}

uint64_t sub_10006675C(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_release(a2);
  }
  return result;
}

uint64_t sub_10006676C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1000667AC()
{
}

uint64_t sub_1000667CC()
{
  uint64_t v1 = sub_1000673A4();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_1000667EC()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_1001CA784);
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10006684C;
  uint64_t v2 = sub_1000675EC();
  return v3(v2);
}

uint64_t sub_10006684C()
{
  uint64_t v3 = *v0;
  uint64_t v1 = *v0;
  sub_100067A34(*(void *)(v3 + 16), &v3);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100066890()
{
  uint64_t v1 = sub_100067620();
  return swift_deallocObject(v1, v2, v3);
}

void sub_1000668AC(uint64_t a1, uint64_t a2)
{
}

void sub_1000668C4(void *a1)
{
}

uint64_t sub_1000668E4()
{
  uint64_t v0 = sub_100067630();
  return swift_deallocObject(v0, v1, v2);
}

void sub_100066904()
{
}

uint64_t sub_100066910()
{
  return sub_100067380((void (*)(void))&_swift_release);
}

uint64_t sub_10006691C()
{
  uint64_t v0 = sub_1000673A4();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100066938()
{
  sub_1000675B4();
  uint64_t v1 = sub_100067600();
  return swift_deallocObject(v1, v2, v3);
}

void sub_100066964(_BYTE *a1)
{
}

uint64_t sub_100066974()
{
  uint64_t v0 = sub_1000673A4();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100066990(void **a1, uint64_t a2)
{
  return sub_10005F294(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100066998()
{
  uint64_t v0 = sub_1000673A4();
  return swift_deallocObject(v0, v1, v2);
}

void sub_1000669B8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1000669C0()
{
  uint64_t v0 = sub_100067630();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_1000669E0(uint64_t a1)
{
  return sub_10005FB54(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100066A10()
{
  if (*(void *)(v0 + 16)) {
    sub_10006739C();
  }
  uint64_t v1 = sub_1000673A4();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100066A3C()
{
  uint64_t v0 = sub_1000673A4();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100066A5C()
{
  swift_release(*(void *)(v0 + 144));
  return swift_deallocObject(v0, 152LL, 7LL);
}

void sub_100066AA4()
{
}

uint64_t sub_100066ACC()
{
  return sub_100067380((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100066ADC()
{
  uint64_t v1 = sub_1000378A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 16, v5);
}

uint64_t sub_100066B68(uint64_t a1, uint64_t a2)
{
  return sub_100066B74( a1,  a2,  (uint64_t (*)(uint64_t, uint64_t, unint64_t, void, void, void))sub_100067090);
}

uint64_t sub_100066B74( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void, void, void))
{
  uint64_t v6 = *(void *)(sub_1000378A0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return a3( a1,  a2,  v3 + v7,  *(void *)(v3 + v8),  *(void *)(v3 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v3 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8));
}

uint64_t sub_100066BF0()
{
  uint64_t v0 = sub_100067620();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100066C10()
{
  uint64_t v1 = sub_100067610();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100066C38(uint64_t a1, uint64_t a2)
{
  return sub_100066204(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_100066C48()
{
  uint64_t v0 = sub_100067630();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100066C6C()
{
  uint64_t v1 = sub_100067600();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100066C98()
{
  return sub_100066CA4((uint64_t (*)(void *, void, void, void, void))sub_100067098);
}

uint64_t sub_100066CA4(uint64_t (*a1)(void *, void, void, void, void))
{
  return a1(v1 + 2, v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100066CBC()
{
  return swift_deallocObject(v0, 88LL, 7LL);
}

uint64_t sub_100066CF8()
{
  return sub_100066680((uint64_t)&unk_1001AB068, (uint64_t)sub_100066D30);
}

uint64_t sub_100066D10()
{
  uint64_t v0 = sub_100067610();
  return swift_deallocObject(v0, v1, v2);
}

void sub_100066D30(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100066D7C()
{
  uint64_t v0 = sub_100067610();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100066D9C()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100066DD0(uint64_t a1, uint64_t a2)
{
  return sub_10005EEB0( a1,  a2,  *(void **)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_100066DE0()
{
  _Block_release(*(const void **)(v0 + 40));
  sub_1000675B4();
  uint64_t v1 = sub_100067600();
  return swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100066E10()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  unint64_t v7 = (void *)swift_task_alloc(dword_1001CA7B4);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_1000670B0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, void *))((char *)&dword_1001CA7B0 + dword_1001CA7B0))( v2,  v3,  v4,  v5,  v6);
}

uint64_t sub_100066E90()
{
  uint64_t v0 = sub_100067620();
  return swift_deallocObject(v0, v1, v2);
}

void sub_100066EA8()
{
}

void *sub_100066EB0(void *a1)
{
  return a1;
}

uint64_t sub_100066ED8()
{
  uint64_t v0 = sub_100067610();
  return swift_deallocObject(v0, v1, v2);
}

uint64_t sub_100066EF8()
{
  return sub_10005B854(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100066F04()
{
  return sub_100066F14((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100066F14(void (*a1)(void))
{
  uint64_t v3 = sub_100067984();
  return swift_deallocObject(v3, v4, 7LL);
}

void sub_100066F50()
{
}

void sub_100066F5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = sub_1000675EC();
  v4(v3);
  sub_100009044();
}

uint64_t sub_100066F98(uint64_t a1)
{
  return a1;
}

uint64_t sub_100066FE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a2)
  {

    swift_bridgeObjectRelease(a7);
    return swift_bridgeObjectRelease(a5);
  }

  return result;
}

uint64_t sub_100067018(uint64_t a1, void *a2)
{
  return sub_1000583E4(a1, a2, v2);
}

unint64_t sub_100067020()
{
  unint64_t result = qword_1001CA7E0;
  if (!qword_1001CA7E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001645E0, &type metadata for SyncError);
    atomic_store(result, (unint64_t *)&qword_1001CA7E0);
  }

  return result;
}

uint64_t sub_10006705C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_unknownObjectRelease(a3);
  }

  return result;
}

uint64_t sub_1000671A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10006606C(a1, a2);
}

uint64_t sub_1000671CC(uint64_t a1)
{
  return swift_allocObject(a1, 32LL, 7LL);
}

uint64_t sub_1000671D8(uint64_t a1)
{
  return dispatch thunk of SetAlgebra.init<A>(_:)(v3 - 136, v2, a1, *(void *)(v3 - 160), v1);
}

uint64_t sub_100067200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(a1 + 2sub_10000D3A0(v0 + 4) = v2;
  return swift_retain_n(v2, 2LL);
}

uint64_t sub_100067210@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  return type metadata accessor for DispatchTimeInterval(0LL);
}

uint64_t sub_100067230@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  return type metadata accessor for DispatchQoS(0LL);
}

uint64_t sub_100067250(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t sub_10006725C()
{
  return type metadata accessor for DispatchQoS(0LL);
}

uint64_t sub_100067278()
{
  return type metadata accessor for DispatchTime(0LL);
}

uint64_t sub_100067294(uint64_t a1)
{
  *(void *)(v1 - 152) = a1;
  return type metadata accessor for DispatchWorkItemFlags(0LL);
}

uint64_t sub_1000672B0(uint64_t a1)
{
  return swift_retain_n(a1, 2LL);
}

uint64_t sub_1000672B8()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v3, v2, v1, v0);
}

  ;
}

void sub_1000672EC()
{
}

  ;
}

uint64_t sub_100067310()
{
  return static _DictionaryStorage.allocate(capacity:)(v0);
}

uint64_t sub_100067320(uint64_t a1)
{
  return swift_errorRelease(a1);
}

uint64_t sub_100067330()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 168) + 8LL))(v1, v0);
}

void *sub_100067344@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 10sub_10000D3A0(v0 + 4) = v1;
  return _Block_copy((const void *)(v2 - 128));
}

uint64_t sub_100067350()
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
  *(void *)(v2 - 152) = v3;
  return v3(v1, *(void *)(v2 - 144));
}

uint64_t sub_100067364(uint64_t *a1)
{
  return sub_100066248(a1);
}

uint64_t sub_10006736C()
{
  return + infix(_:_:)(v1, v0);
}

uint64_t sub_100067380(void (*a1)(void))
{
  return sub_100066F14(a1);
}

uint64_t sub_100067388(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 14sub_10000D3A0(v0 + 4) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 144);
}

uint64_t sub_10006739C()
{
  return swift_release(*(void *)(v0 + 24));
}

uint64_t sub_1000673A4()
{
  return v0;
}

  ;
}

void sub_1000673C0()
{
}

uint64_t sub_1000673D0()
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 - 192) + 8LL))(v0, *(void *)(v1 - 184));
}

uint64_t sub_1000673E0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1000673F0()
{
  return sub_10000D33C(v0);
}

void sub_1000673F8(unint64_t *a1)
{
}

uint64_t sub_100067400()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_100067410(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, a2, v2);
}

uint64_t sub_100067420()
{
  return type metadata accessor for DispatchWorkItemFlags(0LL);
}

  ;
}

void sub_100067454()
{
}

void *sub_100067460(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr), uint64_t a4, ...)
{
  return a3((uint64_t *)va);
}

uint64_t sub_100067474()
{
  return Promise.reject(_:)(v0);
}

id sub_100067480(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

void sub_10006748C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 208) = (char *)&a9 - v9;
}

void sub_1000674A0()
{
}

uint64_t sub_1000674AC(uint64_t result)
{
  *(void *)(v1 - 14sub_10000D3A0(v0 + 4) = result;
  return result;
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_100067504()
{
  return v0(v1, v2);
}

  ;
}

uint64_t sub_10006752C()
{
  return swift_release(*(void *)(v0 - 88));
}

void sub_100067534()
{
}

uint64_t sub_10006753C()
{
  return (*(uint64_t (**)(uint64_t, void))(v1 - 152))(v0, *(void *)(v1 - 144));
}

  ;
}

id sub_10006756C(uint64_t a1)
{
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(void *)(a1 + 2sub_10000D3A0(v0 + 4) = v1;
  return v2;
}

uint64_t sub_100067578()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_100067584()
{
  return swift_release(*(void *)(v0 + 32));
}

uint64_t sub_10006758C()
{
  return swift_retain(v0);
}

uint64_t sub_100067598@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v3 - 120) = a1;
  *(void *)(v3 - 14sub_10000D3A0(v0 + 4) = v2;
  *(void *)(v3 - 136) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v3 - 144);
}

void sub_1000675A8()
{
}

void sub_1000675B4()
{
}

uint64_t sub_1000675BC()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 168);
}

  ;
}

id sub_1000675E4(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_1000675EC()
{
  return v0;
}

uint64_t sub_1000675F8()
{
  return swift_release(*(void *)(v0 + 16));
}

uint64_t sub_100067600()
{
  return v0;
}

uint64_t sub_100067610()
{
  return v0;
}

uint64_t sub_100067620()
{
  return v0;
}

uint64_t sub_100067630()
{
  return v0;
}

uint64_t sub_100067640(uint64_t a1)
{
  return v1;
}

  ;
}

  ;
}

void sub_100067680()
{
}

  ;
}

uint64_t sub_10006769C()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v1, v0, v2);
}

  ;
}

  ;
}

  ;
}

uint64_t sub_1000676E8(uint64_t (*a1)(void))
{
  return a1();
}

  ;
}

uint64_t sub_1000676F8()
{
  return v2(v0, v1);
}

void sub_100067704()
{
}

uint64_t sub_10006770C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 88) = a1;
  uint64_t v3 = *(void *)(v2 - 184);
  *(void *)(v2 - 112) = v1;
  *(void *)(v2 - 10sub_10000D3A0(v0 + 4) = v3;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 112);
}

uint64_t sub_100067720(uint64_t a1)
{
  return swift_release(a1);
}

uint64_t sub_100067728()
{
  return v0 - 136;
}

uint64_t sub_100067744@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, v2);
}

uint64_t sub_10006774C()
{
  return v0(v1, v2);
}

uint64_t sub_100067758(uint64_t a1)
{
  return Promise.resolve(_:)(a1);
}

  ;
}

  ;
}

void sub_100067788(uint64_t a1)
{
}

Swift::Int sub_100067790()
{
  return AnyHashable._rawHashValue(seed:)(*(void *)(v0 + 40));
}

void sub_10006779C(uint64_t a1, uint64_t *a2)
{
}

void sub_1000677A4(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_1000677AC()
{
  return sub_10000D3A0((void *)(v0 - 112));
}

  ;
}

  ;
}

void sub_1000677D0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + a1) |= v3;
}

  ;
}

  ;
}

void sub_100067810()
{
}

uint64_t sub_100067818(uint64_t a1)
{
  return Promise.resolve(_:)(a1);
}

uint64_t sub_100067820()
{
  return 0LL;
}

unint64_t sub_100067830()
{
  return sub_100030CCC(v1, v0);
}

  ;
}

id sub_100067858()
{
  return v0;
}

uint64_t sub_100067860()
{
  return swift_retain(v0);
}

uint64_t sub_100067868(uint64_t a1, ...)
{
  return sub_10000D3A0((uint64_t *)va);
}

void sub_100067870()
{
}

uint64_t sub_100067880()
{
  return static DispatchTime.now()();
}

id sub_100067888(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

  ;
}

unint64_t sub_1000678A8(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

id sub_1000678C0(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return v1;
}

uint64_t sub_1000678CC()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 64);
}

uint64_t sub_1000678D4(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for EngagementService();
}

uint64_t sub_1000678E0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for EngagementService();
}

uint64_t sub_1000678EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return swift_allocObject(v2, a1, a2 | 7);
}

  ;
}

  ;
}

  ;
}

  ;
}

uint64_t sub_100067940()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 168);
}

void sub_10006794C()
{
}

uint64_t sub_100067958@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D3A0((void *)(v1 + a1));
}

uint64_t sub_100067960()
{
  return v0(v2, v1);
}

uint64_t sub_10006796C()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100067974()
{
  return swift_errorRelease(v0);
}

uint64_t sub_10006797C(uint64_t a1, uint64_t a2)
{
  return sub_1000BD1B0(a1, a2);
}

uint64_t sub_100067984()
{
  return v0;
}

  ;
}

void *sub_10006799C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 136) = v1;
  *(void *)(v2 - 128) = a1;
  return _Block_copy((const void *)(v2 - 152));
}

uint64_t sub_1000679A8()
{
  return swift_release(*(void *)(v0 + 40));
}

uint64_t sub_1000679B0()
{
  return swift_bridgeObjectRelease(*(void *)(v0 + 40));
}

uint64_t sub_1000679B8()
{
  return v0(v1, v2);
}

uint64_t sub_1000679C4()
{
  return v0(v1, v2);
}

uint64_t sub_1000679D0(uint64_t result)
{
  *(void *)(result + ++*(void *)(v0 + 16) = v2;
  *(void *)(result + 2sub_10000D3A0(v0 + 4) = v1;
  return result;
}

uint64_t sub_1000679DC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  return a1(v2, v1);
}

uint64_t sub_1000679E8()
{
  return v0(v1, *(void *)(v2 - 176));
}

uint64_t sub_1000679F4@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a2(v3, a1, v2);
}

uint64_t sub_100067A00()
{
  return static DispatchQoS.unspecified.getter();
}

void sub_100067A08(double a1)
{
  void *v1 = (uint64_t)a1;
}

uint64_t sub_100067A14()
{
  return v0;
}

id sub_100067A28(uint64_t a1)
{
  *(void *)(v2 - 112) = a1;
  *(void *)(v2 - 136) = v1;
  return v1;
}

uint64_t sub_100067A34@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = v2;
  return swift_task_dealloc(a1);
}

uint64_t sub_100067A3C(uint64_t result)
{
  *(void *)(result + ++*(void *)(v0 + 16) = v1;
  *(void *)(result + 2sub_10000D3A0(v0 + 4) = v2;
  return result;
}

uint64_t sub_100067A48()
{
  return Promise.__allocating_init()();
}

void sub_100067A50(uint64_t a1)
{
  unint64_t v1 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

uint64_t sub_100067A5C()
{
  return 0LL;
}

void sub_100067A70()
{
}

void sub_100067A7C()
{
}

  ;
}

id sub_100067A94(void *a1)
{
  id v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1));
  sub_10006859C();
  sub_1000685B4();
  id v4 = [v3 initWithIdentifier:a1];

  return v4;
}

id sub_100067AF4(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  sub_10006859C();
  sub_1000685B4();
  id v7 = [(id)swift_getObjCClassFromMetadata(v3) bagForProfile:v6 profileVersion:a3];

  return v7;
}

uint64_t sub_100067B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduleInfo(0LL);
  sub_10000DC64();
  __chkstk_darwin(v5);
  id v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10000D33C(&qword_1001C9E00);
  sub_10000DC64();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v54 - v16;
  id v18 = (id)AMSGenerateLogCorrelationKey(v15);
  uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  uint64_t v58 = v19;

  uint64_t v59 = 0x73746E657665LL;
  unint64_t v60 = 0xE600000000000000LL;
  sub_1000685A8();
  sub_100068574();
  uint64_t v20 = sub_10000E854((uint64_t)&v61);
  if (v66)
  {
    uint64_t v21 = sub_10000D33C(&qword_1001CA898);
    if (sub_10006855C(v21))
    {
      uint64_t v22 = (void *)v59;
      goto LABEL_6;
    }
  }

  else
  {
    sub_100010654(v20, &qword_1001CAAD0);
  }

  uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_6:
  sub_10000D5C0((uint64_t)v17, 1LL, 1LL, v4);
  uint64_t v59 = 0x656C756465686373LL;
  unint64_t v60 = 0xE800000000000000LL;
  sub_1000685A8();
  sub_100068574();
  uint64_t v23 = sub_10000E854((uint64_t)&v61);
  if (v66)
  {
    uint64_t v24 = sub_10000D33C(&qword_1001C8E58);
    if ((sub_10006855C(v24) & 1) != 0)
    {
      swift_bridgeObjectRetain(v22);
      sub_100111464();
      sub_1000102E0((uint64_t)v17, &qword_1001C9E00);
      sub_1000684C8((uint64_t)v14, (uint64_t)v17);
    }
  }

  else
  {
    sub_100010654(v23, &qword_1001CAAD0);
  }

  sub_10002F79C((uint64_t)v17, (uint64_t)v11);
  int v25 = sub_1000102D4((uint64_t)v11, 1LL, v4);
  uint64_t v57 = v17;
  if (v25 == 1)
  {
    sub_1000102E0((uint64_t)v11, &qword_1001C9E00);
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v26 = sub_1000685C0();
    uint64_t v27 = sub_1000678EC( ((*(unsigned __int8 *)(*(void *)(v26 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v26 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v26 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v26 - 8) + 80LL));
    *(_OWORD *)(v27 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v63 = (void *)sub_10000D33C(&qword_1001CA890);
    uint64_t v61 = v56;
    uint64_t v28 = *(void *)(a2 + 32);
    if (v28)
    {
      uint64_t v29 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain(*(void *)(a2 + 32));
      sub_10000DC34();
      sub_10000DC08();
      sub_100068510();
      uint64_t v30 = sub_10003881C();
      sub_100068534(v30);
      sub_100068544();
      sub_10000DC14();
      uint64_t v66 = &type metadata for String;
      uint64_t v64 = v29;
      uint64_t v65 = v28;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v64);
      sub_100068544();
      uint64_t v31 = 93LL;
    }

    else
    {
      sub_10001A21C(1LL);
      sub_10000DC08();
      sub_100068510();
      uint64_t v38 = sub_10003881C();
      uint64_t v39 = sub_100068534(v38);
      sub_100010654(v39, &qword_1001CAAD0);
      uint64_t v31 = 58LL;
    }

    sub_10000DC4C(v31);
    sub_10000DC5C();
    sub_10000D3A0(&v61);
    sub_10001A21C(34LL);
    v40._uint64_t countAndFlagsBits = 0xD000000000000021LL;
    v40._object = (void *)0x800000010016DE70LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v40);
    uint64_t v63 = &type metadata for String;
    uint64_t v61 = v55;
    uint64_t v62 = v58;
    swift_bridgeObjectRetain(v58);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
    sub_1000102E0((uint64_t)&v61, &qword_1001CAAD0);
    sub_10000DC4C(41LL);
    uint64_t v41 = sub_10000DC5C();
    if (qword_1001C7F80 != -1) {
      uint64_t v41 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v42 = static os_log_type_t.default.getter(v41);
    sub_1000BD1B0(v42, v27);
    swift_bridgeObjectRelease();
    [objc_allocWithZone(AMSEngagementEnqueueRequest) init];
    sub_1000683E8();
    uint64_t v43 = sub_10000D33C(&qword_1001CD430);
    *(_OWORD *)(swift_allocObject(v43, 40LL, 7LL) + ++*(void *)(v0 + 16) = xmmword_100165690;
    __asm { BR              X10 }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000253EC((uint64_t)v11, (uint64_t)v7);
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v32 = *(void *)(sub_1000685C0() - 8);
  uint64_t v33 = sub_1000678EC( ((*(unsigned __int8 *)(v32 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))
        + 2LL * *(void *)(v32 + 72),
          *(unsigned __int8 *)(v32 + 80));
  *(_OWORD *)(v33 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v63 = (void *)sub_10000D33C(&qword_1001CA890);
  uint64_t v61 = v56;
  uint64_t v34 = *(void *)(a2 + 32);
  if (v34)
  {
    uint64_t v35 = *(void *)(a2 + 24);
    swift_bridgeObjectRetain(v34);
    sub_10000DC34();
    sub_10000DC08();
    sub_100068510();
    uint64_t v36 = sub_10003881C();
    sub_100068534(v36);
    sub_100068544();
    sub_10000DC14();
    uint64_t v66 = &type metadata for String;
    uint64_t v64 = v35;
    uint64_t v65 = v34;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v64);
    sub_100068544();
    uint64_t v37 = 93LL;
  }

  else
  {
    sub_10001A21C(1LL);
    sub_10000DC08();
    sub_100068510();
    uint64_t v44 = sub_10003881C();
    uint64_t v45 = sub_100068534(v44);
    sub_100010654(v45, &qword_1001CAAD0);
    uint64_t v37 = 58LL;
  }

  sub_10000DC4C(v37);
  sub_10000DC5C();
  sub_10000D3A0(&v61);
  sub_10001A21C(27LL);
  v46._object = (void *)0x800000010016DEA0LL;
  v46._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v46);
  uint64_t v47 = *(int *)(v4 + 20);
  uint64_t v48 = &v7[v47 + *(int *)(type metadata accessor for ScheduleInfo.Metadata(0LL) + 44)];
  uint64_t v50 = *(void *)v48;
  uint64_t v49 = *((void *)v48 + 1);
  uint64_t v63 = &type metadata for String;
  uint64_t v61 = v50;
  uint64_t v62 = v49;
  swift_bridgeObjectRetain(v49);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v61);
  sub_1000102E0((uint64_t)&v61, &qword_1001CAAD0);
  sub_10000DC08();
  uint64_t v51 = sub_10000DC5C();
  if (qword_1001C7F80 != -1) {
    uint64_t v51 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v52 = static os_log_type_t.default.getter(v51);
  sub_1000BD1B0(v52, v33);
  swift_bridgeObjectRelease();
  sub_1000135D8((uint64_t)v7);
  sub_100025430((uint64_t)v7);
  return sub_1000102E0((uint64_t)v57, &qword_1001C9E00);
}

uint64_t type metadata accessor for EnqueueAction()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd13EnqueueAction);
}

void sub_1000683E8()
{
  int v0 = sub_1000685CC();
  sub_100068590(v0, "setEvents:", v1, v2, v3, v4, v5, v6, v7, v8);
  sub_100068550(v9);
}

void sub_10006842C(uint64_t a1)
{
  int v1 = sub_1000685CC();
  sub_100068590(v1, "setDestinations:", v2, v3, v4, v5, v6, v7, v8, v9);
  sub_100068550(v10);
}

void sub_100068478(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  [a3 setLogKey:v5];
}

uint64_t sub_1000684C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001C9E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100068510()
{
  uint64_t v1 = *(void *)(v0 - 128);
  int v2 = sub_10000D37C((void *)(v0 - 152), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_100068534(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 112);
}

uint64_t sub_100068544()
{
  return sub_1000102E0(v1 - 112, v0);
}

void sub_100068550(id a1)
{
}

uint64_t sub_10006855C(uint64_t a1)
{
  return swift_dynamicCast(v2 - 168, v2 - 112, v1 + 8, a1, 6LL);
}

void sub_100068574()
{
}

NSArray sub_100068584()
{
  return Array._bridgeToObjectiveC()();
}

id sub_100068590( int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  return objc_msgSend(v10, a2, a10);
}

NSString sub_10006859C()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1000685A8()
{
  return AnyHashable.init<A>(_:)(v0 - 168);
}

uint64_t sub_1000685B4()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000685C0()
{
  return type metadata accessor for LogMessage(0LL);
}

uint64_t sub_1000685CC()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1000685D8( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)&__int128 v140 = 0x736E6F69746361LL;
  *((void *)&v140 + 1) = 0xE700000000000000LL;
  uint64_t v9 = sub_100068DA8( a1,  (uint64_t)&type metadata for String,  (uint64_t)&protocol witness table for String,  a4,  a5,  a6,  a7,  a8);
  sub_100068D7C(v9, v10, v11, v12, v13, v14, v15, v16, v130, v134[0], v134[1], v135, v136, v137, v138, v139, v140);
  uint64_t v20 = sub_100068DA0(v17, v18, v19);
  if (v141)
  {
    uint64_t v28 = sub_10000D33C(&qword_1001CA898);
    else {
      uint64_t v30 = 0LL;
    }
  }

  else
  {
    sub_100068D8C(v20, v21, v22, v23, v24, v25, v26, v27);
    uint64_t v30 = 0LL;
  }

  strcpy((char *)v134, "allowedEvents");
  HIWORD(v134[1]) = -4864;
  *(void *)&double v31 = swift_bridgeObjectRetain(v30).n128_u64[0];
  uint64_t v33 = sub_100068D94(v32, &type metadata for String, &protocol witness table for String, v31);
  sub_100068D7C(v33, v34, v35, v36, v37, v38, v39, v40, v131, v134[0], v134[1], v135, v136, v137, v138, v139, v140);
  uint64_t v44 = sub_100068DA0(v41, v42, v43);
  if (!v141)
  {
    uint64_t v54 = sub_100068D8C(v44, v45, v46, v47, v48, v49, v50, v51);
LABEL_10:
    uint64_t v56 = sub_100068D94(v54, &type metadata for String, &protocol witness table for String);
    sub_100068D7C( v56,  v57,  v58,  v59,  v60,  v61,  v62,  v63,  v132,  0xD000000000000011LL,  0x800000010016DEC0LL,  v135,  v136,  v137,  v138,  v139,  v140);
    uint64_t v67 = sub_100068DA0(v64, v65, v66);
    if (v141)
    {
      uint64_t v75 = sub_10000D33C(&qword_1001CA898);
      else {
        uint64_t v55 = 0LL;
      }
    }

    else
    {
      sub_100068D8C(v67, v68, v69, v70, v71, v72, v73, v74);
      uint64_t v55 = 0LL;
    }

    goto LABEL_15;
  }

  uint64_t v52 = sub_10000D33C(&qword_1001CA898);
  uint64_t v54 = sub_100068D64(v52, v53);
  if (!(_DWORD)v54) {
    goto LABEL_10;
  }
  uint64_t v55 = v134[0];
LABEL_15:
  *(void *)&__int128 v140 = 1635017060LL;
  *((void *)&v140 + 1) = 0xE400000000000000LL;
  *(void *)&double v77 = swift_bridgeObjectRetain(v55).n128_u64[0];
  uint64_t v84 = sub_100068DA8( v78,  (uint64_t)&type metadata for String,  (uint64_t)&protocol witness table for String,  v79,  v80,  v81,  v82,  v83,  v77);
  sub_100068D7C(v84, v85, v86, v87, v88, v89, v90, v91, v132, v134[0], v134[1], v135, v136, v137, v138, v139, v140);
  uint64_t v95 = sub_100068DA0(v92, v93, v94);
  if (v141)
  {
    uint64_t v103 = sub_10000D33C(&qword_1001C8E58);
    else {
      uint64_t v105 = 0LL;
    }
  }

  else
  {
    sub_100068D8C(v95, v96, v97, v98, v99, v100, v101, v102);
    uint64_t v105 = 0LL;
  }

  *(void *)&double v106 = swift_bridgeObjectRetain(v105).n128_u64[0];
  uint64_t v108 = sub_100068D94(v107, &type metadata for String, &protocol witness table for String, v106);
  sub_100068D7C( v108,  v109,  v110,  v111,  v112,  v113,  v114,  v115,  v133,  0xD000000000000011LL,  0x800000010016DEE0LL,  v135,  v136,  v137,  v138,  v139,  v140);
  uint64_t v116 = swift_bridgeObjectRelease();
  sub_100068DA0(v116, v117, v118);
  if (v141)
  {
    uint64_t v119 = sub_10000D33C(&qword_1001C8E58);
    if ((sub_100068D64(v119, v120) & 1) != 0)
    {
      sub_10006887C(v134[0], a2);
      swift_bridgeObjectRelease();
    }
  }

  else
  {

    sub_100068D8C(v121, v122, v123, v124, v125, v126, v127, v128);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

id sub_10006887C(uint64_t a1, void *a2)
{
  if (!*(void *)(a1 + 16)) {
    return 0LL;
  }
  uint64_t v33 = 0x746E756F636361LL;
  unint64_t v34 = 0xE700000000000000LL;
  AnyHashable.init<A>(_:)(&v33);
  sub_10003079C((uint64_t)v35, a1, &v36);
  sub_10000E854((uint64_t)v35);
  if (!v37) {
    goto LABEL_16;
  }
  uint64_t v4 = sub_10000D33C(&qword_1001C8E58);
  uint64_t v5 = v33;
  uint64_t v33 = 1684632420LL;
  unint64_t v34 = 0xE400000000000000LL;
  AnyHashable.init<A>(_:)(&v33);
  sub_10003079C((uint64_t)v35, v5, &v36);
  swift_bridgeObjectRelease();
  sub_10000E854((uint64_t)v35);
  if (!v37)
  {
LABEL_16:
    sub_10000E888((uint64_t)&v36);
    goto LABEL_17;
  }

  id result = (id)v33;
  unint64_t v7 = HIBYTE(v34) & 0xF;
  uint64_t v8 = v33 & 0xFFFFFFFFFFFFLL;
  if ((v34 & 0x2000000000000000LL) != 0) {
    unint64_t v9 = HIBYTE(v34) & 0xF;
  }
  else {
    unint64_t v9 = v33 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }

  if ((v34 & 0x1000000000000000LL) != 0)
  {
    uint64_t v11 = (uint64_t)sub_100072428(v33, v34, 10LL);
    char v13 = v32;
    goto LABEL_53;
  }

  if ((v34 & 0x2000000000000000LL) == 0)
  {
    if ((v33 & 0x1000000000000000LL) != 0) {
      uint64_t v10 = (unsigned __int8 *)((v34 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v10 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v33, v34);
    }
    uint64_t v11 = (uint64_t)sub_1000723D8(v10, v8, 10LL);
    char v13 = v12 & 1;
LABEL_53:
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      uint64_t v25 = (void *)objc_opt_self(&OBJC_CLASS___ACAccountStore);
      id v26 = [a2 clientInfo];
      id v27 = objc_msgSend(v25, "ams_sharedAccountStoreForClient:", v26);

      id v28 = [objc_allocWithZone(NSNumber) initWithInteger:v11];
      id v14 = objc_msgSend(v27, "ams_iTunesAccountWithDSID:", v28);

      goto LABEL_18;
    }

LABEL_52:
    char v13 = 0;
    goto LABEL_53;
  }

  if (v33 != 45)
  {
    uint64_t v11 = (v33 - 48);
    if (v7 != 1)
    {
      uint64_t v11 = 10LL * (v33 - 48) + (BYTE1(v33) - 48);
      unint64_t v20 = v7 - 2;
      if (v20)
      {
        uint64_t v21 = (unsigned __int8 *)v35 + 2;
        while (1)
        {
          unsigned int v22 = *v21 - 48;
          if (v22 > 9) {
            goto LABEL_40;
          }
          uint64_t v23 = 10 * v11;
          uint64_t v11 = v23 + v22;
          char v13 = 0;
          ++v21;
          if (!--v20) {
            goto LABEL_53;
          }
        }
      }
    }

    goto LABEL_52;
  }

  if (v7)
  {
    if (v7 != 1 && (BYTE1(v33) - 48) <= 9u)
    {
      if (v7 == 2)
      {
        char v13 = 0;
        uint64_t v11 = -(uint64_t)(BYTE1(v33) - 48);
        goto LABEL_53;
      }

      if ((BYTE2(v33) - 48) <= 9u)
      {
        uint64_t v11 = -10LL * (BYTE1(v33) - 48) - (BYTE2(v33) - 48);
        unint64_t v24 = v7 - 3;
        if (!v24) {
          goto LABEL_52;
        }
        uint64_t v29 = (unsigned __int8 *)v35 + 3;
        while (1)
        {
          unsigned int v30 = *v29 - 48;
          if (v30 > 9) {
            break;
          }
          uint64_t v31 = 10 * v11;
          uint64_t v11 = v31 - v30;
          char v13 = 0;
          ++v29;
          if (!--v24) {
            goto LABEL_53;
          }
        }
      }
    }

  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
}

unint64_t sub_100068D28()
{
  unint64_t result = qword_1001CA8A0;
  if (!qword_1001CA8A0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___AMSEngagementRequest);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001CA8A0);
  }

  return result;
}

uint64_t sub_100068D64(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  return swift_dynamicCast((uint64_t *)va, va1, v2 + 8, a1, 6LL);
}

void sub_100068D7C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int128 a17)
{
}

uint64_t sub_100068D8C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  return sub_10000E888((uint64_t)va);
}

uint64_t sub_100068D94(uint64_t a1, ...)
{
  return AnyHashable.init<A>(_:)(va);
}

uint64_t sub_100068DA0(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  return sub_10000E854((uint64_t)va);
}

uint64_t sub_100068DA8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  return AnyHashable.init<A>(_:)(va);
}

void sub_100068DB4(void *__src, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = 0LL;
  *(_OWORD *)(v3 + ++*(void *)(v0 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  memcpy((void *)(v3 + 56), __src, 0x50uLL);
  char v7 = *((_BYTE *)__src + 1);
  *(void *)(v3 + 136) = a2;
  *(void *)(v3 + 14sub_10000D3A0(v0 + 4) = a3;
  *(_BYTE *)(v3 + 152) = v7;
  sub_10000DFE8();
}

uint64_t sub_100068E04(void *a1)
{
  uint64_t v105 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OSSignposter(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_10000DC74();
  uint64_t v7 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v104 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  char v12 = (char *)&v99 - v11;
  uint64_t v108 = a1;
  sub_10006B680(a1);
  id v14 = _swiftEmptyArrayStorage;
  if (v13) {
    id v14 = v13;
  }
  uint64_t v107 = v14;
  if (qword_1001C7FB8 != -1) {
    swift_once(&qword_1001C7FB8, sub_1000BD55C);
  }
  uint64_t v15 = OSSignposter.init(logHandle:)(*(id *)(qword_1001DBB38 + 16));
  uint64_t v16 = OSSignposter.logHandle.getter(v15);
  swift_unknownObjectRetain(v1);
  OSSignpostID.init(log:object:)(v16, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  uint64_t v17 = *(void *)(v1 + 72);
  if ((v17 & 2) != 0) {
    sub_10006ADE0((uint64_t)v107);
  }
  uint64_t v109 = v1;
  if ((v17 & 1) == 0)
  {
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v18 = *(void *)(sub_10002C79C() - 8);
    uint64_t v19 = *(void *)(v18 + 72);
    uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v21 = (v20 + 32) & ~v20;
    uint64_t v22 = sub_10001059C(v21 + 2 * v19, v20);
    *(_OWORD *)(v22 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v23 = type metadata accessor for EnqueueRunner();
    uint64_t v24 = sub_10006B944(v23);
    if (v21)
    {
      uint64_t v106 = v7;
      uint64_t v25 = *(void *)(v24 + 80);
      swift_retain(v24);
      swift_bridgeObjectRetain(v21);
      uint64_t v109 = v19;
      sub_100010564();
      v26._uint64_t countAndFlagsBits = 0LL;
      v26._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      id v27 = v113;
      sub_1000104C0(v112);
      *((void *)&v118 + 1) = sub_100010530();
      *(void *)&__int128 v117 = v27;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v117);
      sub_10006B98C();
      sub_10000DC14();
      *((void *)&v118 + 1) = &type metadata for String;
      *(void *)&__int128 v117 = v25;
      *((void *)&v117 + 1) = v21;
      uint64_t v7 = v106;
      sub_10000DCE8();
      sub_10006B98C();
      uint64_t v28 = 93LL;
    }

    else
    {
      swift_retain(v24);
      sub_10000DC24();
      sub_10000DC08();
      uint64_t v67 = (uint64_t)v113;
      uint64_t v68 = sub_10000D37C(v112, (uint64_t)v113);
      sub_10000DC54((uint64_t)v68, v67);
      *((void *)&v118 + 1) = sub_10000DF48();
      *(void *)&__int128 v117 = v67;
      sub_10000DCE8();
      sub_10000DA68((uint64_t)&v117, &qword_1001CAAD0);
      uint64_t v28 = 58LL;
    }

    sub_10000DC4C(v28);
    sub_10000DC5C();
    sub_10006B998();
    sub_10001A21C(63LL);
    sub_100048E08(0xD000000000000036LL, (uint64_t)"Destination components do not include 'app', dropping ");
    uint64_t v69 = v107[2];
    swift_bridgeObjectRelease();
    uint64_t v113 = &type metadata for Int;
    v112[0] = v69;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v112);
    sub_10000DA68((uint64_t)v112, &qword_1001CAAD0);
    v70._uint64_t countAndFlagsBits = 0x7328746E65766520LL;
    v70._object = (void *)0xE900000000000029LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v70);
    uint64_t v71 = sub_10000DC5C();
    if (qword_1001C7F80 != -1) {
      uint64_t v71 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v72 = static os_log_type_t.info.getter(v71);
    sub_1000BD1B0(v72, v22);
    sub_10000DE2C();
    sub_10000D33C(&qword_1001C8BC8);
    v112[0] = [objc_allocWithZone(AMSEngagementEnqueueResult) init];
    uint64_t v73 = Promise.__allocating_init(value:)(v112);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    return v73;
  }

  uint64_t v101 = v9;
  uint64_t v102 = v12;
  uint64_t v103 = v8;
  uint64_t v106 = v7;
  id v29 = [v108 clientInfo];
  uint64_t v30 = sub_10000D33C(&qword_1001C8BC0);
  uint64_t inited = swift_initStackObject(v30, v116);
  __int128 v99 = xmmword_100164230;
  *(_OWORD *)(inited + ++*(void *)(v0 + 16) = xmmword_100164230;
  *(void *)(inited + 32) = 0x746E65696C63LL;
  *(void *)(inited + 40) = 0xE600000000000000LL;
  uint64_t v32 = swift_initStackObject(v30, &v115);
  *(_OWORD *)(v32 + ++*(void *)(v0 + 16) = xmmword_1001649D0;
  *(void *)(v32 + 32) = 0x6449656C646E7562LL;
  *(void *)(v32 + 40) = 0xE800000000000000LL;
  uint64_t v33 = sub_100011A3C(v32, (SEL *)&selRef_bundleIdentifier);
  if (v34) {
    uint64_t v35 = v33;
  }
  else {
    uint64_t v35 = 0LL;
  }
  if (v34) {
    unint64_t v36 = v34;
  }
  else {
    unint64_t v36 = 0xE000000000000000LL;
  }
  *(void *)(v32 + 48) = v35;
  *(void *)(v32 + 56) = v36;
  *(void *)(v32 + 72) = &type metadata for String;
  *(void *)(v32 + 80) = 0x6E6F6973726576LL;
  *(void *)(v32 + 88) = 0xE700000000000000LL;
  uint64_t v37 = sub_100011A3C(v33, (SEL *)&selRef_clientVersion);
  if (v38) {
    uint64_t v39 = v37;
  }
  else {
    uint64_t v39 = 0LL;
  }
  if (v38) {
    unint64_t v40 = v38;
  }
  else {
    unint64_t v40 = 0xE000000000000000LL;
  }
  *(void *)(v32 + 96) = v39;
  *(void *)(v32 + 10sub_10000D3A0(v0 + 4) = v40;
  *(void *)(v32 + 120) = &type metadata for String;
  *(void *)(v32 + 128) = 1701667182LL;
  *(void *)(v32 + 136) = 0xE400000000000000LL;
  id v100 = v29;
  uint64_t v41 = sub_100011A3C(v37, (SEL *)&selRef_executableName);
  if (v42) {
    uint64_t v43 = v41;
  }
  else {
    uint64_t v43 = 0LL;
  }
  if (v42) {
    unint64_t v44 = v42;
  }
  else {
    unint64_t v44 = 0xE000000000000000LL;
  }
  *(void *)(v32 + 14sub_10000D3A0(v0 + 4) = v43;
  *(void *)(v32 + 152) = v44;
  *(void *)(v32 + 168) = &type metadata for String;
  *(void *)(v32 + 176) = 6580592LL;
  *(void *)(v32 + 18sub_10000D3A0(v0 + 4) = 0xE300000000000000LL;
  id v45 = [(id)objc_opt_self(NSProcessInfo) processInfo];
  unsigned int v46 = [v45 processIdentifier];

  *(void *)(v32 + 2++*(void *)(v0 + 16) = &type metadata for Int32;
  *(_DWORD *)(v32 + 192) = v46;
  uint64_t v47 = sub_10006B92C(v32);
  uint64_t v48 = sub_10000D33C(&qword_1001C8F18);
  *(void *)(inited + 48) = v47;
  *(void *)(inited + 72) = v48;
  *(void *)(inited + 80) = 0x73746E657665LL;
  *(void *)(inited + 88) = 0xE600000000000000LL;
  *(void *)(inited + 120) = sub_10000D33C(&qword_1001CA898);
  *(void *)(inited + 96) = v107;
  uint64_t v49 = sub_10006B92C(inited);
  int v50 = sub_10000635C();
  uint64_t v51 = v109;
  if (v50)
  {
    uint64_t v52 = objc_autoreleasePoolPush();
    sub_10006987C(v49, (void *)v51);
    objc_autoreleasePoolPop(v52);
  }

  uint64_t v53 = *(void *)(v51 + 136);
  uint64_t v54 = *(void *)(v51 + 144);
  uint64_t v55 = (void *)*(unsigned __int8 *)(v51 + 152);
  sub_10006B6DC(v53, v54, v55);
  uint64_t v107 = (void *)sub_10007CF50(v49);
  sub_10006B6F0(v53, v54, v55);
  sub_10000DE2C();
  sub_10006B680(v108);
  if (!v56)
  {
    char v65 = 0;
    uint64_t v66 = v106;
    goto LABEL_63;
  }

  uint64_t v57 = v56;
  uint64_t v58 = *(void *)(v56 + 16);
  if (!v58)
  {
LABEL_49:
    char v65 = 0;
    uint64_t v66 = v106;
    goto LABEL_62;
  }

  swift_bridgeObjectRetain(v56);
  uint64_t v59 = 0LL;
  sub_10006B9A8();
  while (1)
  {
    uint64_t v60 = *(void *)(v57 + 8 * v59 + 32);
    uint64_t v110 = v55;
    unint64_t v111 = 0xE900000000000065LL;
    swift_bridgeObjectRetain(v60);
    AnyHashable.init<A>(_:)(&v110);
    if (*(void *)(v60 + 16) && (unint64_t v61 = sub_100030D24((uint64_t)v112), (v62 & 1) != 0))
    {
      sub_10000DA1C(*(void *)(v60 + 56) + 32 * v61, (uint64_t)&v117);
    }

    else
    {
      __int128 v117 = 0u;
      __int128 v118 = 0u;
    }

    sub_10000E854((uint64_t)v112);
    if (!*((void *)&v118 + 1))
    {
      sub_10000DA68((uint64_t)&v117, &qword_1001CAAD0);
LABEL_46:
      sub_100009070();
      goto LABEL_47;
    }

    uint64_t v55 = &type metadata for String;
    if (v110 == (void *)0x526567617373654DLL && v111 == 0xEE00747365757165LL) {
      break;
    }
    char v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v110, v111, 0x526567617373654DLL, 0xEE00747365757165LL, 0LL);
    sub_100009070();
    sub_10002C764();
    sub_10006B9A8();
    if ((v64 & 1) != 0) {
      goto LABEL_56;
    }
LABEL_47:
    if (v58 == ++v59)
    {
      sub_1000090CC();
      goto LABEL_49;
    }
  }

  swift_bridgeObjectRelease_n(v57, 2LL);
LABEL_56:
  sub_100009070();
  sub_1000090CC();
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v74 = sub_10002C79C();
  *(_OWORD *)(sub_10001059C( ((*(unsigned __int8 *)(*(void *)(v74 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v74 - 8) + 80LL))
              + 2LL * *(void *)(*(void *)(v74 - 8) + 72LL),
  uint64_t v75 = type metadata accessor for EnqueueRunner();
  uint64_t v76 = sub_10006B944(v75);
  uint64_t v66 = v106;
  if (&type metadata for String)
  {
    uint64_t v77 = *(void *)(v76 + 80);
    swift_retain(v76);
    swift_bridgeObjectRetain(&type metadata for String);
    sub_100010564();
    sub_10000DC08();
    uint64_t v78 = (uint64_t)v113;
    uint64_t v79 = sub_10000D37C(v112, (uint64_t)v113);
    uint64_t v80 = sub_10000DC54((uint64_t)v79, v78);
    *((void *)&v118 + 1) = swift_getMetatypeMetadata(v80);
    *(void *)&__int128 v117 = v80;
    sub_10000DCE8();
    sub_10006B980();
    sub_10000DC14();
    *((void *)&v118 + 1) = &type metadata for String;
    *(void *)&__int128 v117 = v77;
    *((void *)&v117 + 1) = &type metadata for String;
    sub_10000DCE8();
    sub_10006B980();
    uint64_t v81 = 93LL;
  }

  else
  {
    swift_retain(v76);
    sub_10000DC24();
    sub_10000DC08();
    uint64_t v82 = (uint64_t)v113;
    uint64_t v83 = sub_10000D37C(v112, (uint64_t)v113);
    sub_10000DC54((uint64_t)v83, v82);
    *((void *)&v118 + 1) = sub_100048E80();
    *(void *)&__int128 v117 = v82;
    sub_10000DCE8();
    sub_10000DA68((uint64_t)&v117, &qword_1001CAAD0);
    uint64_t v81 = 58LL;
  }

  sub_10000DC4C(v81);
  sub_10000DC5C();
  sub_10006B998();
  uint64_t v84 = LogMessage.init(stringLiteral:)(0xD000000000000034LL);
  if (qword_1001C7F80 != -1) {
    uint64_t v84 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v85 = static os_log_type_t.default.getter(v84);
  sub_10006B93C(v85);
  char v65 = 1;
LABEL_62:
  sub_1000090CC();
LABEL_63:
  uint64_t v86 = v103;
  uint64_t v87 = v104;
  uint64_t v88 = (uint64_t)v102;
  sub_10006B9A0(v104, (uint64_t)v102, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 16));
  uint64_t v89 = *(unsigned __int8 *)(v86 + 80);
  uint64_t v90 = (v89 + 24) & ~v89;
  unint64_t v91 = (v101 + v90 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v92 = swift_allocObject(&unk_1001AB288, v91 + 9, v89 | 7);
  uint64_t v93 = v108;
  *(void *)(v92 + ++*(void *)(v0 + 16) = v108;
  sub_10006B9A0(v92 + v90, v87, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 32));
  unint64_t v94 = v92 + v91;
  uint64_t v95 = v109;
  *(void *)unint64_t v94 = v109;
  *(_BYTE *)(v94 + 8) = v65;
  uint64_t v113 = (void *)type metadata accessor for SyncTaskScheduler(0LL);
  uint64_t v114 = &protocol witness table for SyncTaskScheduler;
  sub_1000663D0(v112);
  swift_retain(v95);
  SyncTaskScheduler.init()(v93);
  unint64_t v96 = sub_10006B80C();
  uint64_t v97 = (uint64_t)v107;
  uint64_t v73 = Promise.map<A>(on:_:)(v112, sub_10006B794, v92, v96);

  swift_release(v97);
  swift_release(v92);
  sub_10006B998();
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v88, v66);
  return v73;
}

uint64_t sub_10006987C(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v74[0] = 0LL;
  id v8 = [v6 dataWithJSONObject:isa options:0 error:v74];

  id v9 = v74[0];
  if (v8)
  {
    uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
    unint64_t v12 = v11;

    uint64_t v13 = Data.count.getter(v10, v12);
    uint64_t result = sub_10001BD84(v10, v12);
    if ((double)v13 / 1000.0 / 1000.0 > 0.1)
    {
      id v15 = [objc_allocWithZone(NSByteCountFormatter) init];
      [v15 setAllowedUnits:4];
      id v70 = v15;
      id v16 = [v15 stringFromByteCount:v13];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      uint64_t v68 = v18;
      uint64_t v69 = (void *)v17;

      uint64_t v19 = sub_10000D33C(&qword_1001C9C70);
      uint64_t v20 = type metadata accessor for LogMessage(0LL);
      uint64_t v21 = swift_allocObject( v19,  ((*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL))
            + 2LL * *(void *)(*(void *)(v20 - 8) + 72LL),
              *(unsigned __int8 *)(*(void *)(v20 - 8) + 80LL) | 7LL);
      *(_OWORD *)(v21 + ++*(void *)(v0 + 16) = xmmword_100164230;
      uint64_t v75 = (void *)type metadata accessor for EnqueueRunner();
      v74[0] = a2;
      uint64_t v22 = swift_retain(a2);
      id v23 = (id)AMSLogKey(v22);
      if (v23)
      {
        uint64_t v24 = v23;
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
        uint64_t v27 = v26;

        swift_bridgeObjectRetain(v27);
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
        v28._uint64_t countAndFlagsBits = 0LL;
        v28._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v28);
        id v29 = v75;
        uint64_t v30 = sub_10000D37C(v74, (uint64_t)v75);
        uint64_t DynamicType = swift_getDynamicType(v30, v29, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
        uint64_t v71 = DynamicType;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v71);
        sub_10000DA68((uint64_t)&v71, &qword_1001CAAD0);
        v32._uint64_t countAndFlagsBits = 5972026LL;
        v32._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v32);
        uint64_t MetatypeMetadata = &type metadata for String;
        uint64_t v71 = v25;
        uint64_t v72 = v27;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v71);
        sub_10000DA68((uint64_t)&v71, &qword_1001CAAD0);
        v33._uint64_t countAndFlagsBits = 93LL;
        v33._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v33);
        LogMessage.init(stringInterpolation:)(v5);
        swift_bridgeObjectRelease();
      }

      else
      {
        LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
        v59._uint64_t countAndFlagsBits = 0LL;
        v59._object = (void *)0xE000000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v59);
        uint64_t v60 = v75;
        unint64_t v61 = sub_10000D37C(v74, (uint64_t)v75);
        uint64_t v62 = swift_getDynamicType(v61, v60, 1LL);
        uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v62);
        uint64_t v71 = v62;
        LogMessage.StringInterpolation.appendInterpolation(safe:)(&v71);
        sub_10000DA68((uint64_t)&v71, &qword_1001CAAD0);
        v63._uint64_t countAndFlagsBits = 58LL;
        v63._object = (void *)0xE100000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v63);
        LogMessage.init(stringInterpolation:)(v5);
      }

      sub_10000D3A0(v74);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(37LL, 1LL);
      v64._object = (void *)0x800000010016E0B0LL;
      v64._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v64);
      uint64_t v75 = &type metadata for String;
      v74[0] = v69;
      v74[1] = v68;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v74);
      sub_10000DA68((uint64_t)v74, &qword_1001CAAD0);
      v65._uint64_t countAndFlagsBits = 0x65756C617620LL;
      v65._object = (void *)0xE600000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v65);
      uint64_t v66 = LogMessage.init(stringInterpolation:)(v5);
      if (qword_1001C7F80 != -1) {
        uint64_t v66 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
      }
      uint64_t v67 = static os_log_type_t.default.getter(v66);
      sub_1000BD1B0(v67, v21);

      return swift_bridgeObjectRelease();
    }
  }

  else
  {
    unint64_t v34 = v9;
    uint64_t v35 = _convertNSErrorToError(_:)(v9);

    swift_willThrow(v36);
    uint64_t v37 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v38 = type metadata accessor for LogMessage(0LL);
    uint64_t v39 = swift_allocObject( v37,  ((*(unsigned __int8 *)(*(void *)(v38 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v38 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v38 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v39 + ++*(void *)(v0 + 16) = xmmword_100164230;
    uint64_t v75 = (void *)type metadata accessor for EnqueueRunner();
    v74[0] = a2;
    uint64_t v40 = swift_retain(a2);
    id v41 = (id)AMSLogKey(v40);
    if (v41)
    {
      unint64_t v42 = v41;
      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      uint64_t v45 = v44;

      swift_bridgeObjectRetain(v45);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v46._uint64_t countAndFlagsBits = 0LL;
      v46._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v46);
      uint64_t v47 = v75;
      uint64_t v48 = sub_10000D37C(v74, (uint64_t)v75);
      uint64_t v49 = swift_getDynamicType(v48, v47, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v49);
      uint64_t v71 = v49;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v71);
      sub_10000DA68((uint64_t)&v71, &qword_1001CAAD0);
      v50._uint64_t countAndFlagsBits = 5972026LL;
      v50._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      uint64_t MetatypeMetadata = &type metadata for String;
      uint64_t v71 = v43;
      uint64_t v72 = v45;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v71);
      sub_10000DA68((uint64_t)&v71, &qword_1001CAAD0);
      v51._uint64_t countAndFlagsBits = 93LL;
      v51._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v51);
      LogMessage.init(stringInterpolation:)(v5);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v52._uint64_t countAndFlagsBits = 0LL;
      v52._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v52);
      uint64_t v53 = v75;
      uint64_t v54 = sub_10000D37C(v74, (uint64_t)v75);
      uint64_t v55 = swift_getDynamicType(v54, v53, 1LL);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v55);
      uint64_t v71 = v55;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v71);
      sub_10000DA68((uint64_t)&v71, &qword_1001CAAD0);
      v56._uint64_t countAndFlagsBits = 58LL;
      v56._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v56);
      LogMessage.init(stringInterpolation:)(v5);
    }

    sub_10000D3A0(v74);
    uint64_t v57 = LogMessage.init(stringLiteral:)(0xD000000000000027LL);
    if (qword_1001C7F80 != -1) {
      uint64_t v57 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v58 = static os_log_type_t.default.getter(v57);
    sub_1000BD1B0(v58, v39);
    swift_bridgeObjectRelease();
    return swift_errorRelease(v35);
  }

  return result;
}

uint64_t sub_100069F44@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  int v55 = a5;
  uint64_t v59 = a4;
  uint64_t v49 = a3;
  Swift::String v56 = a6;
  uint64_t v54 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  Swift::String v50 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = type metadata accessor for OSSignposter(0LL);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  unint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100054044(*a1);
  uint64_t v14 = v13;
  id v15 = a2;
  uint64_t v22 = sub_1000685D8(v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  Swift::String v28 = v27;
  id v29 = [objc_allocWithZone(AMSEngagementEnqueueResult) init];
  [v29 setRequest:v28];
  if (v26)
  {
    swift_bridgeObjectRetain(v26);
    v30.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }

  else
  {
    v30.super.Class isa = 0LL;
  }

  [v29 setData:v30.super.isa];

  if (v22 && *(void *)(v22 + 16))
  {
    uint64_t v31 = qword_1001C7FB8;
    swift_bridgeObjectRetain(v22);
    if (v31 != -1) {
      swift_once(&qword_1001C7FB8, sub_1000BD55C);
    }
    uint64_t v48 = v7;
    OSSignposter.init(logHandle:)(*(id *)(qword_1001DBB38 + 16));
    swift_bridgeObjectRetain(v22);
    Swift::String v33 = (os_log_s *)OSSignposter.logHandle.getter(v32);
    int v34 = static os_signpost_type_t.event.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      uint64_t v35 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v50, v49, v54);
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      LODWORD(v49) = v34;
      uint64_t v37 = v36;
      *(_DWORD *)uint64_t v36 = 134217984;
      __dst[0] = *(void *)(v22 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(__dst, &__dst[1], v36 + 4, v36 + 12);
      uint64_t v38 = swift_bridgeObjectRelease();
      os_signpost_id_t v39 = OSSignpostID.rawValue.getter(v38);
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v33,  (os_signpost_type_t)v49,  v39,  "ActionRunner",  "Actions running: %ld",  v37,  0xCu);
      swift_slowDealloc(v37, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v52);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v54);
    }

    else
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v52);
    }

    type metadata accessor for ActionRunner();
    memcpy(__dst, (const void *)(v59 + 56), 0x50uLL);
    uint64_t v40 = sub_10000E174(v22);
    swift_bridgeObjectRelease();
    sub_10006B848((uint64_t)v40, v29);
  }

  id v41 = memcpy(v57, (const void *)(v59 + 56), sizeof(v57));
  sub_10006A340((uint64_t)v41, v24, v42, v43, (uint64_t)v57);
  sub_10006AB24(v44, v24, v45, v46, (uint64_t)v57);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *Swift::String v56 = v29;
  return result;
}

void sub_10006A340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v9);
  sub_10000DC74();
  sub_100020A94((uint64_t)v5 + 16, (uint64_t)&v90);
  uint64_t v10 = sub_10006B5EC((uint64_t)v5 + 16, (uint64_t)&v103);
  if (v105)
  {
    sub_100019F60((__int128 *)&v103, (uint64_t)v91);
    if (a2)
    {
      char v11 = *(_BYTE *)(a5 + 1);
      uint64_t v12 = *(void *)(a2 + 16);
      char v81 = v11;
      if (v12)
      {
        uint64_t v80 = v5;
        *(void *)uint64_t v98 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(a2);
        sub_1000170BC();
        uint64_t v85 = *(void **)v98;
        uint64_t v83 = (void *)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
        uint64_t v13 = 0LL;
        uint64_t v82 = a2;
        while (1)
        {
          swift_bridgeObjectRetain(*(void *)(a2 + 8 * v13 + 32));
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          id v103 = 0LL;
          id v15 = [v83 dataWithJSONObject:isa options:0 error:&v103];

          id v16 = v103;
          if (!v15) {
            break;
          }
          uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v15);
          uint64_t v19 = v18;

          uint64_t v20 = type metadata accessor for JSONDecoder(0LL);
          swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
          JSONDecoder.init()();
          unint64_t v21 = sub_1000285A0();
          dispatch thunk of JSONDecoder.decode<A>(_:from:)(&unk_1001A9078, v17, v19, &unk_1001A9078, v21);
          sub_10006B958();
          sub_10000DE74();
          sub_1000292C4();
          char v22 = (char)v103;
          uint64_t v23 = v104;
          char v24 = BYTE8(v104);
          uint64_t v25 = v105;
          uint64_t v26 = v85;
          *(void *)uint64_t v98 = v85;
          unint64_t v27 = v85[2];
          if (v27 >= v85[3] >> 1)
          {
            sub_1000170BC();
            uint64_t v26 = *(void **)v98;
          }

          void v26[2] = v27 + 1;
          uint64_t v85 = v26;
          Swift::String v28 = &v26[4 * v27];
          *((_BYTE *)v28 + 32) = v22;
          ++v13;
          v28[5] = v23;
          *((_BYTE *)v28 + 48) = v24;
          v28[7] = v25;
          a2 = v82;
          if (v12 == v13)
          {
            sub_10001C258();
            uint64_t v6 = v80;
            char v11 = v81;
            goto LABEL_14;
          }
        }

        id v29 = v16;
        uint64_t v30 = _convertNSErrorToError(_:)(v16);

        swift_willThrow(v31);
        sub_10001C258();
        swift_release(v85);
        sub_10000DE74();
        uint64_t v32 = sub_10000D33C(&qword_1001C9C70);
        sub_10002C79C();
        sub_10006B8C4();
        uint64_t v35 = (__n128 *)swift_allocObject(v32, v33, v34);
        uint64_t v105 = (void *)sub_10006B964(v35, (__n128)xmmword_100164230);
        id v103 = v80;
        uint64_t v36 = swift_retain(v80);
        id v37 = (id)AMSLogKey(v36);
        if (v37)
        {
          uint64_t v38 = v37;
          uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
          uint64_t v41 = v40;

          sub_10000DF10();
          sub_100010564();
          sub_10000DC08();
          uint64_t v42 = (uint64_t)v105;
          uint64_t v43 = sub_10000D37C(&v103, (uint64_t)v105);
          uint64_t v44 = sub_10000DC54((uint64_t)v43, v42);
          *(void *)&v98[24] = swift_getMetatypeMetadata(v44);
          *(void *)uint64_t v98 = v44;
          sub_10006B8E4();
          sub_10006B8AC();
          sub_10000DC14();
          *(void *)&v98[24] = &type metadata for String;
          *(void *)uint64_t v98 = v39;
          *(void *)&v98[8] = v41;
          sub_10006B8E4();
          sub_10006B8AC();
          sub_10000DC4C(93LL);
          sub_10000DC5C();
          sub_10000DE2C();
        }

        else
        {
          sub_10000DC24();
          sub_10000DC08();
          uint64_t v70 = (uint64_t)v105;
          uint64_t v71 = sub_10000D37C(&v103, (uint64_t)v105);
          sub_10000DC54((uint64_t)v71, v70);
          *(void *)&v98[24] = sub_100048E80();
          *(void *)uint64_t v98 = v70;
          uint64_t v72 = sub_10006B8E4();
          sub_10006B970(v72, &qword_1001CAAD0);
          sub_10000DC4C(58LL);
          sub_10000DC5C();
        }

        sub_10000D3A0(&v103);
        sub_10001A21C(12LL);
        v73._uint64_t countAndFlagsBits = 0x6C696166202E2E2ELL;
        v73._object = (void *)0xEC000000203A6465LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v73);
        swift_getErrorValue(v30, &v88, &v86);
        uint64_t v74 = v86;
        uint64_t v75 = v87;
        uint64_t v105 = v87;
        sub_1000663D0(&v103);
        sub_10006B9A0(v76, v74, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(v75 - 1) + 16LL));
        uint64_t v77 = LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
        sub_10006B9BC(v77, &qword_1001CAAD0);
        sub_10000DC08();
        uint64_t v78 = sub_10000DC5C();
        if (qword_1001C7F80 != -1) {
          uint64_t v78 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
        }
        uint64_t v79 = static os_log_type_t.error.getter(v78);
        sub_10006B93C(v79);
        sub_1000090CC();
        swift_errorRelease(v30);
      }

      else
      {
        uint64_t v85 = _swiftEmptyArrayStorage;
LABEL_14:
        uint64_t v45 = sub_10000D33C(&qword_1001C9C70);
        sub_10002C79C();
        sub_10006B8C4();
        uint64_t v48 = (__n128 *)swift_allocObject(v45, v46, v47);
        uint64_t v105 = (void *)sub_10006B964(v48, (__n128)xmmword_100164230);
        id v103 = v6;
        uint64_t v49 = swift_retain(v6);
        id v50 = (id)AMSLogKey(v49);
        if (v50)
        {
          uint64_t v51 = v50;
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          uint64_t v54 = v53;

          sub_10000DF10();
          sub_100010564();
          sub_10000DC08();
          uint64_t v55 = (uint64_t)v105;
          Swift::String v56 = sub_10000D37C(&v103, (uint64_t)v105);
          sub_10000DC54((uint64_t)v56, v55);
          *(void *)&v98[24] = sub_10000DF48();
          *(void *)uint64_t v98 = v55;
          sub_10006B8E4();
          sub_10006B8AC();
          sub_10000DC14();
          *(void *)&v98[24] = &type metadata for String;
          *(void *)uint64_t v98 = v52;
          *(void *)&v98[8] = v54;
          sub_10006B8E4();
          sub_10006B8AC();
          sub_10000DC4C(93LL);
          sub_10000DC5C();
          sub_10000DE2C();
        }

        else
        {
          sub_10000DC24();
          sub_10000DC08();
          uint64_t v57 = (uint64_t)v105;
          uint64_t v58 = sub_10000D37C(&v103, (uint64_t)v105);
          sub_10000DC54((uint64_t)v58, v57);
          *(void *)&v98[24] = sub_100048E80();
          *(void *)uint64_t v98 = v57;
          uint64_t v59 = sub_10006B8E4();
          sub_10006B970(v59, &qword_1001CAAD0);
          sub_10000DC4C(58LL);
          sub_10000DC5C();
        }

        sub_10000D3A0(&v103);
        sub_10001A21C(26LL);
        sub_10006B8F4((uint64_t)"Updating app defaults: ");
        uint64_t v105 = &unk_1001A8968;
        LOBYTE(v103) = v11;
        uint64_t v60 = LogMessage.StringInterpolation.appendInterpolation(safe:)(&v103);
        sub_10006B9BC(v60, &qword_1001CAAD0);
        v61._uint64_t countAndFlagsBits = 3026478LL;
        v61._object = (void *)0xE300000000000000LL;
        LogMessage.StringInterpolation.appendLiteral(_:)(v61);
        uint64_t v62 = sub_10000DC5C();
        if (qword_1001C7F80 != -1) {
          uint64_t v62 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
        }
        uint64_t v63 = static os_log_type_t.default.getter(v62);
        sub_10006B93C(v63);
        sub_1000090CC();
        sub_10000D37C(v91, v92);
        sub_100026FDC(v11, (uint64_t)v93);
        uint64_t v64 = v93[0];
        uint64_t v66 = v93[4];
        uint64_t v65 = v93[5];
        uint64_t v67 = v93[6];
        sub_1000254B4((uint64_t)v93, (uint64_t)&v94, &qword_1001C9768);
        if ((void)v94)
        {
          *(_OWORD *)uint64_t v98 = v94;
          *(_OWORD *)&v98[16] = v95;
          __int128 v99 = v96;
          uint64_t v100 = v97;
          __int128 v84 = *(_OWORD *)&v98[8];
          char v68 = BYTE8(v95);
          uint64_t v89 = v94;
          swift_bridgeObjectRetain(v67);
          swift_bridgeObjectRetain(v64);
          sub_10000DF10();
          sub_100066EB0(&v89);
          sub_1000254B4((uint64_t)&v99, (uint64_t)v101, &qword_1001C9760);
          sub_1000662B4((uint64_t)v101);
          sub_1000254B4((uint64_t)&v100, (uint64_t)&v102, &qword_1001C9740);
          sub_100066EB0(&v102);
          sub_100009070();
          __int128 v69 = v84;
        }

        else
        {
          uint64_t v67 = 0LL;
          uint64_t v66 = 0LL;
          uint64_t v65 = 0LL;
          char v68 = 0;
          __int128 v69 = xmmword_100165BF0;
        }

        id v103 = v85;
        __int128 v104 = v69;
        LOBYTE(v105) = v68;
        uint64_t v106 = v66;
        uint64_t v107 = v65;
        uint64_t v108 = v67;
        sub_10000D37C(v91, v92);
        sub_1000272A8((uint64_t *)&v103, v81);
        swift_bridgeObjectRelease();
        sub_10000DE2C();
        sub_1000090CC();
      }
    }

    sub_10000D3A0(v91);
  }

  else
  {
    sub_10006B9BC(v10, &qword_1001CA748);
  }

  sub_10000DD84();
}

void sub_10006AB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7 = [(id)objc_opt_self(AMSEngagementClientData) loadFromDisk];
  if (a2)
  {
    sub_10000D33C(&qword_1001C8E58);
    Array._bridgeToObjectiveC()();
    __asm { BR              X10 }
  }
}

id sub_10006AC70()
{
  NSString v0 = String._bridgeToObjectiveC()();
  if (qword_1001C7F10 != -1) {
    swift_once(&qword_1001C7F10, sub_10001CF94);
  }
  id v1 = [(id)qword_1001C90F0 integerForKey:v0];
  id v2 = [v1 valuePromise];

  id v10 = 0LL;
  id v3 = [v2 resultWithError:&v10];

  id v4 = v10;
  if (v3)
  {
    id v10 = 0LL;
    char v11 = 1;
    id v5 = v4;
    static Int._conditionallyBridgeFromObjectiveC(_:result:)(v3, &v10);

    return v10;
  }

  else
  {
    id v7 = v10;
    uint64_t v8 = _convertNSErrorToError(_:)(v4);

    swift_willThrow(v9);
    swift_errorRelease(v8);
    return 0LL;
  }

void sub_10006ADE0(uint64_t a1)
{
  double v2 = v1;
  sub_10000DE00();
  sub_10000DC64();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v7 = *(double *)(a1 + 16);
  if (v7 != 0.0)
  {
    sub_100020A94(*(void *)&v1 + 16LL, (uint64_t)&v59);
    uint64_t v8 = sub_10006B5EC(*(void *)&v1 + 16LL, (uint64_t)&v66);
    if (*((void *)&v67 + 1))
    {
      sub_100019F60(&v66, (uint64_t)v60);
      sub_10000D37C(v60, v60[3]);
      uint64_t v9 = *(unsigned __int8 *)(*(void *)&v1 + 57LL);
      sub_100026FDC(*(_BYTE *)(*(void *)&v1 + 57LL), (uint64_t)v61);
      sub_1000254B4((uint64_t)v61, (uint64_t)v64, &qword_1001C9768);
      if (*(void *)&v64[0])
      {
        __int128 v66 = v64[0];
        __int128 v67 = v64[1];
        __int128 v68 = v64[2];
        uint64_t v69 = v65;
        sub_1000254B4((uint64_t)&v66 + 8, (uint64_t)v70, &qword_1001C9730);
        uint64_t v71 = v66;
        sub_100066EB0(&v71);
        sub_1000254B4((uint64_t)&v68, (uint64_t)v72, &qword_1001C9760);
        sub_1000662B4((uint64_t)v72);
        sub_1000254B4((uint64_t)&v69, (uint64_t)&v73, &qword_1001C9740);
        sub_100066EB0(&v73);
        sub_1000254B4((uint64_t)v70, (uint64_t)v74, &qword_1001C9730);
        if (v74[0] != 2LL)
        {
          uint64_t v52 = v75;
          unsigned __int8 v77 = v76;
          if ((v74[0] & 1) != 0)
          {
            uint64_t v10 = sub_10000D33C(&qword_1001C9C70);
            uint64_t v11 = *(void *)(sub_10002C79C() - 8);
            uint64_t v12 = *(void *)(v11 + 72);
            uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
            uint64_t v14 = (v13 + 32) & ~v13;
            uint64_t v51 = v12;
            uint64_t v48 = v10;
            uint64_t v44 = v14 + 2 * v12;
            uint64_t v46 = v13 | 7;
            uint64_t v15 = swift_allocObject(v10, v44, v13 | 7);
            __int128 v47 = xmmword_100164230;
            *(_OWORD *)(v15 + ++*(void *)(v0 + 16) = xmmword_100164230;
            uint64_t v49 = v14;
            uint64_t v53 = v15;
            uint64_t v45 = (void *)type metadata accessor for EnqueueRunner();
            uint64_t v63 = v45;
            v62[0] = v2;
            uint64_t v16 = *(void *)(*(void *)&v2 + 80LL);
            uint64_t v17 = *(void *)(*(void *)&v2 + 88LL);
            uint64_t v54 = v16;
            uint64_t v50 = v17;
            swift_retain(*(void *)&v2);
            if (v17)
            {
              swift_bridgeObjectRetain(v17);
              sub_100010564();
              sub_100010608();
              uint64_t v18 = v63;
              sub_1000104C0(v62);
              uint64_t v58 = (void *)sub_100010530();
              v57[0] = v18;
              uint64_t v19 = sub_10006B8EC((uint64_t)v57);
              sub_10006B978(v19, &qword_1001CAAD0);
              sub_10000DC14();
              uint64_t v58 = &type metadata for String;
              v57[0] = v16;
              v57[1] = v17;
              LogMessage.StringInterpolation.appendInterpolation(safe:)(v57);
              sub_10000DA68((uint64_t)v57, &qword_1001CAAD0);
              uint64_t v20 = 93LL;
            }

            else
            {
              sub_10001A1BC();
              sub_100010608();
              unint64_t v21 = v63;
              sub_1000104C0(v62);
              uint64_t v58 = (void *)sub_100010530();
              v57[0] = v21;
              uint64_t v22 = sub_10006B8EC((uint64_t)v57);
              sub_10006B978(v22, &qword_1001CAAD0);
              uint64_t v20 = 58LL;
            }

            sub_10006B9C4(v20);
            sub_10006B908();
            sub_10000D3A0(v62);
            sub_10001A21C(34LL);
            v23._uint64_t countAndFlagsBits = 0x6965756575716E45LL;
            v23._object = (void *)0xEB0000000020676ELL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v23);
            uint64_t v63 = &type metadata for Int;
            v62[0] = v7;
            LogMessage.StringInterpolation.appendInterpolation(safe:)(v62);
            sub_10000DA68((uint64_t)v62, &qword_1001CAAD0);
            sub_10006B8F4((uint64_t)" event(s) to backlog...");
            uint64_t v24 = sub_10006B908();
            if (qword_1001C7F80 != -1) {
LABEL_25:
            }
              uint64_t v24 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
            uint64_t v25 = static os_log_type_t.default.getter(v24);
            sub_1000BD1B0(v25, v53);
            swift_bridgeObjectRelease();
            type metadata accessor for AppDatabase();
            uint64_t v26 = v9;
            uint64_t v9 = 0LL;
            uint64_t v27 = sub_100023140(v26, 0);
            uint64_t v43 = v6;
            swift_bridgeObjectRetain(a1);
            uint64_t v28 = 0LL;
            LODWORD(v53) = v77;
            do
            {
              uint64_t v29 = v28 + 1;
              if (__OFADD__(v28, 1LL))
              {
                __break(1u);
                goto LABEL_25;
              }

              swift_bridgeObjectRetain_n(*(void *)(a1 + 8 * v28 + 32), 2LL);
              sub_10001B674(v62);
              if ((v53 & 1) != 0)
              {
                id v30 = sub_10006AC70();
                char v32 = v31 & 1;
              }

              else
              {
                char v32 = 0;
                id v30 = v52;
              }

              uint64_t v6 = (char *)v27;
              sub_10002383C((uint64_t)v62, (uint64_t)v30, v32);
              sub_10006B634((uint64_t)v62);
              sub_10002C764();
              ++v28;
              BOOL v33 = v29 == *(void *)&v7;
              uint64_t v34 = v54;
            }

            while (!v33);
            sub_100020AB8();
            *(_OWORD *)(sub_10006B91C() + ++*(void *)(v0 + 16) = v47;
            uint64_t v35 = v50;
            uint64_t v58 = v45;
            *(double *)uint64_t v57 = v2;
            if (v50)
            {
              swift_retain(*(void *)&v2);
              swift_bridgeObjectRetain(v35);
              sub_100010564();
              sub_10000DC08();
              uint64_t v36 = v58;
              id v37 = sub_10000D37C(v57, (uint64_t)v58);
              sub_10000DC54((uint64_t)v37, (uint64_t)v36);
              Swift::String v56 = (void *)sub_10000DF48();
              v55[0] = v36;
              sub_10006B914();
              sub_10006B8B8();
              sub_10000DC14();
              Swift::String v56 = &type metadata for String;
              v55[0] = v34;
              v55[1] = v35;
              sub_10006B914();
              sub_10006B8B8();
              uint64_t v38 = 93LL;
            }

            else
            {
              swift_retain(*(void *)&v2);
              sub_10000DC24();
              sub_10000DC08();
              uint64_t v39 = v58;
              uint64_t v40 = sub_10000D37C(v57, (uint64_t)v58);
              sub_10000DC54((uint64_t)v40, (uint64_t)v39);
              Swift::String v56 = (void *)sub_10000DF48();
              v55[0] = v39;
              sub_10006B914();
              sub_10000DA68((uint64_t)v55, &qword_1001CAAD0);
              uint64_t v38 = 58LL;
            }

            sub_10000DC4C(v38);
            sub_10000DC5C();
            sub_10000D3A0(v57);
            uint64_t v41 = LogMessage.init(stringLiteral:)(0xD00000000000002ALL);
            uint64_t v42 = static os_log_type_t.default.getter(v41);
            sub_10006B93C(v42);
            swift_release(v27);
            sub_1000090CC();
          }
        }
      }

      sub_10000D3A0(v60);
    }

    else
    {
      sub_10006B970(v8, &qword_1001CA748);
    }
  }

  sub_10000DD84();
}

void sub_10006B558()
{
  double v1 = *(void **)(v0 + 64);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10006B6F0(*(void *)(v0 + 136), *(void *)(v0 + 144), *(_BYTE *)(v0 + 152));
  sub_10000DFE8();
}

uint64_t sub_10006B5AC()
{
  return swift_deallocClassInstance(v0, 153LL, 7LL);
}

uint64_t type metadata accessor for EnqueueRunner()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd13EnqueueRunner);
}

uint64_t sub_10006B5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000D33C(&qword_1001CA748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006B634(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_10001BD84(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_10006B680(void *a1)
{
  id v1 = [a1 events];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_10000D33C(&qword_1001C8E58);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  }

  sub_100009044();
}

uint64_t sub_10006B6DC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_10006B6F0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_unknownObjectRelease(result);
  }
  return result;
}

uint64_t sub_10006B704()
{
  uint64_t v1 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 9, v5);
}

uint64_t sub_10006B794@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for OSSignpostID(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_100069F44(a1, *(void **)(v2 + 16), v2 + v6, *(void *)v7, *(unsigned __int8 *)(v7 + 8), a2);
}

unint64_t sub_10006B80C()
{
  unint64_t result = qword_1001CA998;
  if (!qword_1001CA998)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___AMSEngagementEnqueueResult);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001CA998);
  }

  return result;
}

void sub_10006B848(uint64_t a1, void *a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setActions:isa];
}

void sub_10006B8AC()
{
}

void sub_10006B8B8()
{
}

  ;
}

uint64_t sub_10006B8E4()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 240);
}

uint64_t sub_10006B8EC(uint64_t a1)
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(a1);
}

void sub_10006B8F4(uint64_t a1@<X8>)
{
  v1._object = (void *)((a1 - 32) | 0x8000000000000000LL);
  v1._uint64_t countAndFlagsBits = 0xD000000000000017LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v1);
}

uint64_t sub_10006B908()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_10006B914()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 144);
}

uint64_t sub_10006B91C()
{
  return swift_allocObject(v0[7], v0[1], v0[3]);
}

uint64_t sub_10006B92C(uint64_t a1)
{
  return Dictionary.init(dictionaryLiteral:)(a1, v1, v2, v3);
}

uint64_t sub_10006B93C(uint64_t a1)
{
  return sub_1000BD1B0(a1, v1);
}

uint64_t sub_10006B944(uint64_t a1)
{
  v1[18] = a1;
  uint64_t result = v1[11];
  v1[15] = result;
  return result;
}

uint64_t sub_10006B958()
{
  return sub_10001BD84(v0, v1);
}

uint64_t sub_10006B964(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return type metadata accessor for EnqueueRunner();
}

void sub_10006B970(uint64_t a1, uint64_t *a2)
{
}

void sub_10006B978(uint64_t a1, uint64_t *a2)
{
}

void sub_10006B980()
{
}

void sub_10006B98C()
{
}

uint64_t sub_10006B998()
{
  return sub_10000D3A0((void *)(v0 + 120));
}

uint64_t sub_10006B9A0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a3(a1, a2, v3);
}

  ;
}

void sub_10006B9BC(uint64_t a1, uint64_t *a2)
{
}

void sub_10006B9C4(uint64_t a1)
{
  unint64_t v1 = 0xE100000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&a1);
}

id sub_10006B9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a1);
  uint64_t v8 = _getErrorEmbeddedNSError<A>(_:)(v6, a1, a2);
  if (v8)
  {
    uint64_t v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }

  else
  {
    uint64_t v9 = swift_allocError(a1, a2, 0LL, 0LL);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a1);
  }

  uint64_t v11 = (void *)_convertErrorToNSError(_:)(v9);
  swift_errorRelease(v9);
  id v12 = objc_msgSend(v11, "ams_sanitizedForSecureCoding");

  return v12;
}

uint64_t sub_10006BAD8(char a1)
{
  char v2 = a1;
  return String.init<A>(describing:)(&v2, &type metadata for ExtensionLoaderError);
}

unint64_t sub_10006BB04(unint64_t result)
{
  if (result >= 3) {
    return 3LL;
  }
  return result;
}

BOOL sub_10006BB14(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001A7308, v2);
  swift_bridgeObjectRelease(object);
  return v3 != 0;
}

unint64_t sub_10006BB58()
{
  return 0xD000000000000022LL;
}

unint64_t sub_10006BB74@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10006BB04(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10006BB9C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000701B8();
  unint64_t v5 = sub_100008AB8();
  return CustomNSError<>.errorCode.getter(a1, a2, v4, v5);
}

uint64_t sub_10006BBE0()
{
  return sub_10006BAD8(*v0);
}

uint64_t sub_10006BBE8(uint64_t a1)
{
  unint64_t v2 = sub_10007017C();
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10006BC10(uint64_t a1)
{
  unint64_t v2 = sub_10007017C();
  unint64_t v3 = sub_1000701B8();
  unint64_t v4 = sub_100008AB8();
  return Error<>._code.getter(a1, v2, v3, v4);
}

BOOL sub_10006BC68@<W0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  BOOL result = sub_10006BB14(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10006BC9C@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_10006BB58();
  *a1 = 0xD000000000000022LL;
  a1[1] = v3;
  return result;
}

uint64_t sub_10006BCC8()
{
  if (qword_1001C7FA8 != -1) {
    swift_once(&qword_1001C7FA8, sub_1000BD4A4);
  }
  return OSSignposter.init(logHandle:)(*(id *)(qword_1001DBB28 + 16));
}

uint64_t sub_10006BD20()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  sub_10000DC8C();
  __chkstk_darwin(v2);
  sub_10000DD5C();
  uint64_t v28 = v3;
  uint64_t v4 = sub_100070310();
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes(v4);
  sub_10000DC8C();
  __chkstk_darwin(v6);
  sub_10000DE7C();
  uint64_t v9 = v8 - v7;
  type metadata accessor for DispatchQoS(0LL);
  sub_10000DC8C();
  __chkstk_darwin(v10);
  sub_10000DE7C();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for DispatchQoS.QoSClass(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  sub_10000DE7C();
  uint64_t v18 = v17 - v16;
  *(void *)(v0 + ++*(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  sub_10000DE08(v19, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))( v18,  enum case for DispatchQoS.QoSClass.utility(_:),  v14);
  uint64_t v27 = static OS_dispatch_queue.global(qos:)(v18);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  static DispatchQoS.unspecified.getter(v20);
  char v31 = _swiftEmptyArrayStorage;
  uint64_t v21 = sub_10006FF54( (unint64_t *)&qword_1001CAAB0,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v22 = sub_10000D33C((uint64_t *)&unk_1001CD3A0);
  uint64_t v23 = sub_10006FF94((unint64_t *)&qword_1001CAAC0, (uint64_t *)&unk_1001CD3A0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v22, v23, v5, v21);
  (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))( v28,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v30);
  sub_100048BA0();
  uint64_t v25 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000030LL,  v24,  v13,  v9,  v28,  v27);
  *(void *)(v0 + 2sub_10000D3A0(v0 + 4) = v25;
  sub_10006F6D0(v25);
  return v0;
}

uint64_t sub_10006BF3C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = sub_100020BB4();
  uint64_t v6 = (uint64_t)sub_10006C318(v5, a1, a2);
  sub_100020AB8();
  if (v6)
  {
    uint64_t v42 = a1;
    if (qword_1001C7FA8 != -1) {
      swift_once(&qword_1001C7FA8, sub_1000BD4A4);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v7 = sub_100038894();
    uint64_t v8 = sub_1000702C8(v7);
    *(_OWORD *)(v8 + ++*(void *)(v0 + 16) = xmmword_100164240;
    uint64_t v9 = type metadata accessor for ExtensionLoader();
    uint64_t v10 = sub_100070388(v9);
    id v11 = (id)AMSLogKey(v10);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      uint64_t v15 = v14;

      swift_bridgeObjectRetain(v15);
      sub_10000DC34();
      sub_10000DC08();
      sub_100070254();
      uint64_t v16 = sub_100048E80();
      sub_1000702B8(v16);
      sub_100037DE0();
      sub_10000DC14();
      uint64_t v38 = &type metadata for String;
      uint64_t v36 = v13;
      uint64_t v37 = v15;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v36);
      sub_100037DE0();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      sub_100070254();
      uint64_t v26 = sub_100048E80();
      sub_1000702B8(v26);
      sub_100037DE0();
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000D3A0(&v39);
    sub_1000105B4(0xD000000000000028LL);
    uint64_t v41 = &type metadata for String;
    uint64_t v39 = v42;
    uint64_t v40 = a2;
    sub_10000DEE0();
    sub_1000703C0((uint64_t)&v39);
    uint64_t v27 = sub_10000E888((uint64_t)&v39);
    uint64_t v28 = static os_log_type_t.default.getter(v27);
    sub_1000BD1B0(v28, v8);
    swift_bridgeObjectRelease();
  }

  else
  {
    if (qword_1001C7FA8 != -1) {
      swift_once(&qword_1001C7FA8, sub_1000BD4A4);
    }
    sub_10000D33C(&qword_1001C9C70);
    uint64_t v17 = sub_100038894();
    uint64_t v6 = sub_1000702C8(v17);
    *(_OWORD *)(v6 + ++*(void *)(v0 + 16) = xmmword_100164240;
    uint64_t v18 = type metadata accessor for ExtensionLoader();
    uint64_t v19 = sub_100070388(v18);
    id v20 = (id)AMSLogKey(v19);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      uint64_t v42 = a1;
      uint64_t v24 = v23;

      swift_bridgeObjectRetain(v24);
      sub_10000DC34();
      sub_10000DC08();
      sub_100070254();
      uint64_t v25 = sub_100048E80();
      sub_1000702B8(v25);
      sub_100037DE0();
      sub_10000DC14();
      uint64_t v38 = &type metadata for String;
      uint64_t v36 = v22;
      uint64_t v37 = v24;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v36);
      sub_100037DE0();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      a1 = v42;
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A1BC();
      sub_10000DC08();
      sub_100070254();
      uint64_t v29 = sub_100048E80();
      sub_1000702B8(v29);
      sub_100037DE0();
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000D3A0(&v39);
    LogMessage.init(stringLiteral:)(0xD000000000000014LL);
    uint64_t v41 = &type metadata for String;
    uint64_t v39 = a1;
    uint64_t v40 = a2;
    sub_10000DEE0();
    sub_1000703C0((uint64_t)&v39);
    uint64_t v30 = sub_10000E888((uint64_t)&v39);
    uint64_t v31 = static os_log_type_t.error.getter(v30);
    sub_1000BD1B0(v31, v6);
    sub_10000DCFC();
    unint64_t v32 = sub_10006FD10();
    uint64_t v33 = sub_100020C48((uint64_t)&type metadata for ExtensionLoaderError, v32);
    *uint64_t v34 = 1;
    swift_willThrow(v33);
  }

  return v6;
}

void *sub_10006C318(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v20))
  {
    uint64_t v22 = v5;
    unint64_t v23 = v5 & 0xC000000000000001LL;
    uint64_t v7 = 4LL;
    while (1)
    {
      id v8 = v23 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      uint64_t v10 = v6;
      id v11 = v8;
      uint64_t v12 = a3;
      id v13 = [v8 bundleIdentifier];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      uint64_t v16 = v15;

      a3 = v12;
      BOOL v17 = v14 == a2 && v16 == v12;
      if (v17)
      {
        swift_bridgeObjectRelease(v22);
        uint64_t v19 = v12;
LABEL_18:
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v19);
        return v11;
      }

      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, a2, v12, 0LL);
      swift_bridgeObjectRelease(v16);
      if ((v18 & 1) != 0)
      {
        uint64_t v19 = v22;
        goto LABEL_18;
      }

      ++v7;
      uint64_t v6 = v10;
      BOOL v17 = v9 == v10;
      uint64_t v5 = v22;
      if (v17)
      {
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v22);
        return 0LL;
      }
    }

    __break(1u);
LABEL_20:
    if (v5 < 0) {
      uint64_t v20 = v5;
    }
    else {
      uint64_t v20 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
  }

  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v5);
  return 0LL;
}

uint64_t sub_10006C4CC( uint64_t a1, void *a2, int a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), double a6)
{
  uint64_t v272 = a4;
  v273 = a5;
  LODWORD(v27sub_10000D3A0(v0 + 4) = a3;
  uint64_t v293 = a1;
  uint64_t v9 = *v6;
  uint64_t v10 = type metadata accessor for OSSignpostError(0LL);
  uint64_t v258 = *(void *)(v10 - 8);
  v259 = (void **)v10;
  sub_10000DC8C();
  __chkstk_darwin(v11);
  sub_10000DD5C();
  uint64_t v257 = v12;
  uint64_t v13 = sub_100070310();
  uint64_t v260 = type metadata accessor for DispatchQoS.QoSClass(v13);
  uint64_t v270 = *(void *)(v260 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v14);
  sub_10000DD5C();
  uint64_t v269 = v15;
  uint64_t v16 = sub_100070310();
  uint64_t v280 = type metadata accessor for DispatchWorkItemFlags(v16);
  uint64_t v268 = *(void *)(v280 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v17);
  sub_10000DD5C();
  uint64_t v279 = v18;
  uint64_t v19 = sub_100070310();
  uint64_t v278 = type metadata accessor for DispatchQoS(v19);
  uint64_t v267 = *(void *)(v278 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v20);
  sub_10000DD5C();
  uint64_t v277 = v21;
  uint64_t v22 = sub_100070310();
  uint64_t v23 = type metadata accessor for DispatchTimeInterval(v22);
  uint64_t v264 = *(void *)(v23 - 8);
  uint64_t v265 = v23;
  sub_10000DC8C();
  __chkstk_darwin(v24);
  sub_10000DD5C();
  v263 = v25;
  uint64_t v26 = sub_100070310();
  uint64_t v276 = type metadata accessor for DispatchTime(v26);
  uint64_t v262 = *(void *)(v276 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v27);
  sub_10001A284();
  uint64_t v261 = v28;
  sub_10001A210();
  __chkstk_darwin(v29);
  v266 = (char *)&v256 - v30;
  uint64_t v31 = sub_100070310();
  type metadata accessor for LogMessage.StringInterpolation(v31);
  sub_10000DC8C();
  __chkstk_darwin(v32);
  sub_10000DD5C();
  uint64_t v295 = v33;
  uint64_t v34 = sub_100070310();
  uint64_t v35 = type metadata accessor for OSSignposter(v34);
  v300 = *(char **)(v35 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v36);
  sub_10001A284();
  v271 = v37;
  sub_10001A210();
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v256 - v40;
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v256 - v42;
  uint64_t v44 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v301 = *(void *)(v44 - 8);
  sub_10000DC8C();
  __chkstk_darwin(v45);
  sub_10001A284();
  uint64_t v275 = v46;
  sub_10001A210();
  __chkstk_darwin(v47);
  v299 = (char *)&v256 - v48;
  sub_10001A210();
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v256 - v50;
  *(void *)&__int128 v286 = a2;
  v303 = (void *)sub_1000105E8((uint64_t)[a2 bundleIdentifier]);
  uint64_t v53 = v52;

  uint64_t v54 = sub_10006BCC8();
  uint64_t v55 = OSSignposter.logHandle.getter(v54);
  OSSignpostID.init(log:)(v55);
  v291 = (void (*)(char *, uint64_t))*((void *)v300 + 1);
  uint64_t v292 = v35;
  v291(v43, v35);
  uint64_t v294 = v9;
  sub_10006BCC8();
  uint64_t v56 = swift_bridgeObjectRetain_n(v53, 2LL);
  v300 = v41;
  uint64_t v57 = (os_log_s *)OSSignposter.logHandle.getter(v56);
  os_signpost_type_t v58 = static os_signpost_type_t.begin.getter();
  char v59 = OS_os_log.signpostsEnabled.getter();
  uint64_t v297 = v44;
  v298 = v51;
  v304 = v53;
  if ((v59 & 1) != 0)
  {
    uint64_t v60 = v299;
    sub_1000703A0();
    Swift::String v61 = (uint8_t *)sub_100070408(12LL);
    uint64_t v62 = (void **)sub_100070408(32LL);
    v310 = v62;
    *(_DWORD *)Swift::String v61 = 136315138;
    swift_bridgeObjectRetain(v304);
    uint64_t v316 = sub_100064014((uint64_t)v303, (unint64_t)v304, (uint64_t *)&v310);
    uint64_t v63 = v297;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v316, v317, v61 + 4, v61 + 12);
    uint64_t v64 = swift_bridgeObjectRelease_n(v304, 3LL);
    os_signpost_id_t v65 = OSSignpostID.rawValue.getter(v64);
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v57,  v58,  v65,  "ExtensionLoader",  "Request to %s",  v61,  0xCu);
    swift_arrayDestroy(v62, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v66 = (uint64_t)v62;
    uint64_t v53 = v304;
    sub_100070354(v66);
    sub_100070354((uint64_t)v61);

    (*(void (**)(char *, uint64_t))(v301 + 8))(v60, v63);
  }

  else
  {
    swift_bridgeObjectRelease_n(v53, 2LL);

    uint64_t v60 = v299;
  }

  sub_1000703A0();
  uint64_t v67 = type metadata accessor for OSSignpostIntervalState(0LL);
  swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
  uint64_t v296 = OSSignpostIntervalState.init(id:isOpen:)(v60, 1LL);
  v291(v300, v292);
  __int128 v68 = (void *)sub_10000DDDC((uint64_t)&unk_1001AB390, 64LL);
  id v69 = AMSMetricsLoggingSubsystemEngagement;
  uint64_t v70 = Dictionary.init(dictionaryLiteral:)( _swiftEmptyArrayStorage,  &type metadata for Double,  (char *)&type metadata for Any + 8,  &protocol witness table for Double);
  id v71 = [objc_allocWithZone(NSLock) init];
  v68[2] = v69;
  v285 = v68 + 2;
  v68[6] = v70;
  v68[7] = v71;
  uint64_t v72 = v303;
  v68[3] = 0LL;
  v68[4] = v72;
  v300 = (char *)v68;
  v68[5] = v53;
  sub_100020BB4();
  [v71 lock];
  v284 = v68 + 6;
  sub_10004C2B8(0x6E69726170657250LL, 0xE900000000000067LL, 0x74736575716572LL, 0xE700000000000000LL);
  [v71 unlock];
  if (qword_1001C7FA8 != -1) {
    swift_once(&qword_1001C7FA8, sub_1000BD4A4);
  }
  sub_10000D33C(&qword_1001C9C70);
  uint64_t v73 = *(void *)(sub_100038894() - 8);
  uint64_t v74 = *(char **)(v73 + 72);
  uint64_t v75 = *(unsigned __int8 *)(v73 + 80);
  uint64_t v76 = (v75 + 32) & ~v75;
  uint64_t v289 = v70;
  uint64_t v281 = v76 + 2LL * (void)v74;
  uint64_t v287 = v75 | 7;
  uint64_t v77 = swift_allocObject(v70, v281, v75 | 7);
  __int128 v282 = xmmword_100164230;
  *(_OWORD *)(v77 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v290 = v76;
  v288 = (void *)type metadata accessor for ExtensionLoader();
  v313 = v288;
  v310 = v302;
  uint64_t v78 = swift_retain(v302);
  id v79 = (id)AMSLogKey(v78);
  v299 = v74;
  if (v79)
  {
    uint64_t v80 = sub_1000105E8((uint64_t)v79);
    sub_10001A5B8();
    sub_10000DD9C();
    sub_100010564();
    sub_100048C74();
    sub_10007021C();
    uint64_t v81 = sub_100010530();
    sub_100070240(v81);
    sub_1000702B0();
    sub_10000DC14();
    v318 = &type metadata for String;
    uint64_t v316 = v80;
    v317[0] = v74;
    uint64_t v53 = v304;
    sub_10007033C();
    sub_1000702B0();
    sub_10000DC4C(93LL);
    sub_1000702F8();
    sub_100070410();
  }

  else
  {
    sub_10001A1BC();
    sub_100048C74();
    sub_10007021C();
    uint64_t v82 = sub_100010530();
    sub_100070240(v82);
    sub_1000702B0();
    sub_10000DC4C(58LL);
    sub_1000702F8();
  }

  sub_10000D3A0(&v310);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(24LL, 2LL);
  sub_100048BA0();
  LogMessage.StringInterpolation.appendLiteral(_:)(v83);
  sub_10000DA1C(v293, (uint64_t)&v310);
  LogMessage.StringInterpolation.appendInterpolation(sensitive:)(&v310);
  sub_1000702F0();
  v84._uint64_t countAndFlagsBits = 544175136LL;
  v84._object = (void *)0xE400000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v84);
  v313 = &type metadata for String;
  uint64_t v85 = v303;
  v310 = (void **)v303;
  uint64_t v311 = (uint64_t)v53;
  sub_100020BB4();
  sub_1000703D4();
  sub_1000702F0();
  sub_10000DC4C(41LL);
  uint64_t v86 = sub_1000702F8();
  uint64_t v87 = static os_log_type_t.default.getter(v86);
  sub_1000BD1B0(v87, v77);
  swift_bridgeObjectRelease();
  v310 = 0LL;
  id v88 = [(id)v286 makeXPCConnectionWithError:&v310];
  uint64_t v89 = v310;
  if (v88)
  {
    uint64_t v90 = v88;
    unint64_t v91 = (void *)objc_opt_self(&OBJC_CLASS___NSXPCInterface);
    uint64_t v92 = v89;
    id v93 = v90;
    id v94 = [v91 interfaceWithProtocol:&OBJC_PROTOCOL___AMSEngagementExtensionRemoteContextProtocol];
    [v93 setRemoteObjectInterface:v94];

    [v93 resume];
    __int128 v95 = (void *)sub_10000DDDC((uint64_t)&unk_1001AB3B8, 40LL);
    __int128 v96 = v302;
    v95[2] = v302;
    v95[3] = v85;
    v95[4] = v53;
    v314 = sub_10006FE2C;
    v315 = v95;
    v310 = _NSConcreteStackBlock;
    uint64_t v311 = 1107296256LL;
    v312 = sub_1000B1D04;
    v313 = &unk_1001AB3D0;
    uint64_t v97 = _Block_copy(&v310);
    sub_100020BB4();
    sub_100067860();
    swift_release();
    id v98 = [v93 synchronousRemoteObjectProxyWithErrorHandler:v97];
    _Block_release(v97);
    _bridgeAnyObjectToAny(_:)(v98);
    swift_unknownObjectRelease(v98);
    sub_10000DA1C((uint64_t)&v316, (uint64_t)&v310);
    uint64_t v99 = sub_10000D33C((uint64_t *)&unk_1001CAAF0);
    int v100 = swift_dynamicCast(&v308, &v310, (char *)&type metadata for Any + 8, v99, 6LL);
    *(void *)&__int128 v286 = v93;
    if (v100)
    {
      uint64_t v101 = v308;
      sub_10006F7F8();
      uint64_t v102 = sub_10000DDDC((uint64_t)&unk_1001AB408, 17LL);
      *(_BYTE *)(v102 + ++*(void *)(v0 + 16) = 0;
      uint64_t v103 = sub_10000DDDC((uint64_t)&unk_1001AB430, 32LL);
      __int128 v104 = v273;
      *(void *)(v103 + ++*(void *)(v0 + 16) = v272;
      *(void *)(v103 + 2sub_10000D3A0(v0 + 4) = v104;
      id v105 = objc_allocWithZone(&OBJC_CLASS___NSLock);
      sub_100048DB4();
      id v106 = [v105 init];
      uint64_t v107 = (void *)sub_10000DDDC((uint64_t)&unk_1001AB458, 72LL);
      v107[2] = v102;
      v107[3] = v106;
      v107[4] = v93;
      v107[5] = v103;
      uint64_t v108 = v296;
      v107[6] = v300;
      v107[7] = v108;
      uint64_t v292 = (uint64_t)v107;
      char v107[8] = v294;
      double v109 = a6 * 1000.0;
      if ((~COERCE__INT64(a6 * 1000.0) & 0x7FF0000000000000LL) != 0)
      {
        if (v109 > -9.22337204e18)
        {
          if (v109 < 9.22337204e18)
          {
            uint64_t v275 = v101;
            uint64_t v110 = (uint64_t)v109;
            unint64_t v111 = v302;
            v273 = (void (*)(uint64_t, uint64_t))v302[3];
            sub_100067860();
            id v274 = v106;
            v291 = (void (*)(char *, uint64_t))v103;
            swift_retain(v103);
            swift_retain(v300);
            uint64_t v112 = swift_retain(v108);
            uint64_t v113 = v102;
            uint64_t v114 = v261;
            static DispatchTime.now()(v112);
            uint64_t v116 = v263;
            uint64_t v115 = v264;
            v259 = (void **)v110;
            uint64_t *v263 = v110;
            uint64_t v117 = v265;
            (*(void (**)(uint64_t *, void, uint64_t))(v115 + 104))( v116,  enum case for DispatchTimeInterval.milliseconds(_:),  v265);
            __int128 v118 = v266;
            + infix(_:_:)(v114, v116);
            (*(void (**)(uint64_t *, uint64_t))(v115 + 8))(v116, v117);
            v263 = *(uint64_t **)(v262 + 8);
            ((void (*)(uint64_t, uint64_t))v263)(v114, v276);
            uint64_t v119 = sub_10000DDDC((uint64_t)&unk_1001AB480, 24LL);
            swift_weakInit(v119 + 16, v111);
            uint64_t v120 = (void *)sub_10000DDDC((uint64_t)&unk_1001AB4A8, 72LL);
            v120[2] = v113;
            v120[3] = v119;
            uint64_t v121 = v304;
            v120[4] = v85;
            v120[5] = v121;
            uint64_t v122 = v292;
            v120[6] = sub_10006FEB8;
            v120[7] = v122;
            v120[8] = v294;
            v314 = sub_10006FF40;
            v315 = v120;
            v310 = _NSConcreteStackBlock;
            uint64_t v311 = 1107296256LL;
            uint64_t v123 = sub_100070378((uint64_t)&unk_1001AB4C0);
            sub_100020BB4();
            uint64_t v294 = v113;
            swift_retain(v113);
            swift_retain(v119);
            sub_100048DB4();
            sub_1000703DC();
            *(void *)&__int128 v308 = _swiftEmptyArrayStorage;
            uint64_t v124 = sub_10006FF54( (unint64_t *)&qword_1001CD3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
            uint64_t v125 = sub_10000D33C((uint64_t *)&unk_1001CAB00);
            uint64_t v126 = sub_10006FF94((unint64_t *)&qword_1001CD3F0, (uint64_t *)&unk_1001CAB00);
            uint64_t v127 = v279;
            uint64_t v264 = v126;
            uint64_t v265 = v125;
            uint64_t v128 = v125;
            uint64_t v129 = v280;
            uint64_t v272 = v124;
            dispatch thunk of SetAlgebra.init<A>(_:)(&v308, v128, v126, v280, v124);
            OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v118, v116, v127, v123);
            _Block_release(v123);
            uint64_t v130 = *(void (**)(uint64_t, uint64_t))(v268 + 8);
            v130(v127, v129);
            v271 = *(void (**)(uint64_t *, uint64_t))(v267 + 8);
            v271(v116, v278);
            ((void (*)(char *, uint64_t))v263)(v118, v276);
            swift_release();
            sub_1000292C4();
            uint64_t v276 = qword_1001DBB28;
            uint64_t v131 = sub_10007034C(v289, v281);
            *(_OWORD *)(v131 + ++*(void *)(v0 + 16) = v282;
            uint64_t v132 = sub_10007029C();
            id v133 = (id)AMSLogKey(v132);
            v273 = v130;
            if (v133)
            {
              uint64_t v134 = sub_1000105E8((uint64_t)v133);
              sub_10001A5B8();
              sub_10000DD9C();
              sub_10000DC34();
              sub_10000DC08();
              char v135 = v313;
              uint64_t v136 = sub_10000D37C(&v310, (uint64_t)v313);
              uint64_t v137 = sub_10000DC54((uint64_t)v136, (uint64_t)v135);
              uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v137);
              *(void *)&__int128 v308 = v137;
              sub_100070344();
              sub_100070334();
              sub_10000DC14();
              uint64_t MetatypeMetadata = &type metadata for String;
              *(void *)&__int128 v308 = v134;
              *((void *)&v308 + 1) = v123;
              sub_100070344();
              sub_100070334();
              sub_10000DC4C(93LL);
              sub_10000DC5C();
              sub_10000DCFC();
            }

            else
            {
              sub_10001A1BC();
              sub_10000DC08();
              id v199 = v313;
              id v200 = sub_10000D37C(&v310, (uint64_t)v313);
              uint64_t v201 = sub_10000DC54((uint64_t)v200, (uint64_t)v199);
              uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v201);
              *(void *)&__int128 v308 = v201;
              sub_100070344();
              sub_100070334();
              sub_10000DC4C(58LL);
              sub_10000DC5C();
            }

            uint64_t v202 = v260;
            sub_100070360();
            LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(37LL, 2LL);
            sub_100048BA0();
            LogMessage.StringInterpolation.appendLiteral(_:)(v203);
            v313 = &type metadata for String;
            id v204 = v303;
            uint64_t v205 = v304;
            v310 = (void **)v303;
            uint64_t v311 = (uint64_t)v304;
            swift_bridgeObjectRetain(v304);
            sub_1000703D4();
            sub_1000702F0();
            v206._uint64_t countAndFlagsBits = 0x756F656D69742820LL;
            v206._object = (void *)0xEB00000000203A74LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v206);
            v313 = &type metadata for Int;
            v310 = v259;
            sub_1000703D4();
            sub_1000702F0();
            v207._uint64_t countAndFlagsBits = 695430432LL;
            v207._object = (void *)0xE400000000000000LL;
            LogMessage.StringInterpolation.appendLiteral(_:)(v207);
            uint64_t v208 = sub_10000DC5C();
            uint64_t v209 = static os_log_type_t.default.getter(v208);
            sub_1000BD1B0(v209, v131);
            sub_10000DDF8();
            uint64_t v210 = swift_beginAccess(v285, &v310, 33LL, 0LL);
            sub_10007032C(v210, "lock");
            sub_100070278(0xD000000000000012LL, (uint64_t)"Performing request");
            sub_10007032C(v211, "unlock");
            swift_endAccess(&v310);
            sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
            uint64_t v213 = v269;
            uint64_t v212 = v270;
            (*(void (**)(uint64_t, void, uint64_t))(v270 + 104))( v269,  enum case for DispatchQoS.QoSClass.default(_:),  v202);
            Swift::String v214 = (void *)static OS_dispatch_queue.global(qos:)(v213);
            (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v213, v202);
            sub_10000DA1C(v293, (uint64_t)&v308);
            uint64_t v215 = sub_10000DDDC((uint64_t)&unk_1001AB4F8, 96LL);
            uint64_t v216 = v275;
            *(void *)(v215 + ++*(void *)(v0 + 16) = v275;
            sub_10000DA58(&v308, (_OWORD *)(v215 + 24));
            Swift::String v217 = v302;
            *(void *)(v215 + 56) = v302;
            *(void *)(v215 + 6sub_10000D3A0(v0 + 4) = v204;
            *(void *)(v215 + 72) = v205;
            *(void *)(v215 + 80) = sub_10006FEB8;
            uint64_t v218 = v292;
            *(void *)(v215 + 88) = v292;
            v314 = sub_100070014;
            v315 = (void *)v215;
            v310 = _NSConcreteStackBlock;
            uint64_t v311 = 1107296256LL;
            uint64_t v219 = sub_100070378((uint64_t)&unk_1001AB510);
            swift_retain(v217);
            swift_retain(v218);
            swift_unknownObjectRetain(v216);
            sub_1000703DC();
            v305[0] = _swiftEmptyArrayStorage;
            uint64_t v221 = v279;
            uint64_t v220 = v280;
            dispatch thunk of SetAlgebra.init<A>(_:)(v305, v265, v264, v280, v272);
            OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v202, v221, v219);

            _Block_release(v219);
            swift_release();
            swift_release();
            swift_unknownObjectRelease(v216);

            v273(v221, v220);
            v271((uint64_t *)v202, v278);
            sub_10000D3A0(&v316);
            sub_1000703B0();
            swift_release();
            swift_release();
            swift_release();
            return sub_1000292C4();
          }

LABEL_48:
          __break(1u);
        }
      }

      else
      {
        __break(1u);
      }

      __break(1u);
      goto LABEL_48;
    }

    sub_100020AB8();
    uint64_t v145 = sub_10007034C(v289, v281);
    *(_OWORD *)(v145 + ++*(void *)(v0 + 16) = v282;
    v313 = v288;
    v310 = v96;
    uint64_t v146 = sub_100067860();
    id v147 = (id)AMSLogKey(v146);
    if (v147)
    {
      unint64_t v148 = v147;
      uint64_t v149 = static String._unconditionallyBridgeFromObjectiveC(_:)(v147);
      uint64_t v151 = v150;

      sub_10000DD9C();
      sub_10000DC34();
      sub_10000DC08();
      uint64_t v152 = v313;
      uint64_t v153 = sub_10000D37C(&v310, (uint64_t)v313);
      uint64_t v154 = sub_10000DC54((uint64_t)v153, (uint64_t)v152);
      uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v154);
      *(void *)&__int128 v308 = v154;
      sub_100070344();
      sub_100070334();
      sub_10000DC14();
      uint64_t MetatypeMetadata = &type metadata for String;
      *(void *)&__int128 v308 = v149;
      *((void *)&v308 + 1) = v151;
      sub_100070344();
      sub_100070334();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DCFC();
    }

    else
    {
      sub_10001A1BC();
      sub_100048C74();
      sub_10007021C();
      uint64_t MetatypeMetadata = (void *)sub_100010530();
      *(void *)&__int128 v308 = v97;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v308);
      sub_100070334();
      sub_10000DC4C(58LL);
      sub_1000702F8();
    }

    uint64_t v184 = v301;
    Swift::String v185 = v271;
    sub_100070360();
    uint64_t v186 = sub_1000105B4(0xD000000000000029LL);
    uint64_t v187 = static os_log_type_t.error.getter(v186);
    sub_1000BD1B0(v187, v145);
    sub_100020AB8();
    uint64_t v188 = sub_10006BCC8();
    uint64_t v189 = (os_log_s *)OSSignposter.logHandle.getter(v188);
    uint64_t v190 = v275;
    uint64_t v191 = v296;
    uint64_t v192 = OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v193 = static os_signpost_type_t.end.getter(v192);
    if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
    {
      uint64_t v194 = swift_retain(v191);
      uint64_t v195 = v257;
      checkForErrorAndConsumeState(state:)(v194);
      swift_release();
      uint64_t v197 = v258;
      uint64_t v196 = v259;
      if ((*(unsigned int (**)(uint64_t, void **))(v258 + 88))(v195, v259) == enum case for OSSignpostError.doubleEnd(_:))
      {
        uint64_t v198 = "[Error] Interval already ended";
      }

      else
      {
        (*(void (**)(uint64_t, void **))(v197 + 8))(v195, v196);
        uint64_t v198 = "Proxy Object does not conform to protocol";
      }

      uint64_t v231 = (uint8_t *)sub_100070408(2LL);
      *(_WORD *)uint64_t v231 = 0;
      uint64_t v232 = v275;
      os_signpost_id_t v233 = OSSignpostID.rawValue.getter(v231);
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v189, v193, v233, "ExtensionLoader", v198, v231, 2u);
      uint64_t v234 = (uint64_t)v231;
      uint64_t v190 = v232;
      sub_100070354(v234);
    }

    v304 = *(void (**)(void, void))(v184 + 8);
    uint64_t v235 = v297;
    v304(v190, v297);
    uint64_t v236 = ((uint64_t (*)(void, uint64_t))v291)(v185, v292);
    __int128 v237 = v300;
    sub_10007032C(v236, "lock");
    sub_100070278(0xD000000000000026LL, (uint64_t)"Extension does not conform to protocol");
    sub_10007032C(v238, "unlock");
    unint64_t v239 = sub_10006FD10();
    uint64_t v240 = sub_100020C48((uint64_t)&type metadata for ExtensionLoaderError, v239);
    _BYTE *v241 = 0;
    sub_100070398(v240, "lock");
    uint64_t v242 = *((void *)v237 + 3);
    swift_errorRetain(v240);
    uint64_t v243 = swift_errorRelease(v242);
    *((void *)v237 + 3) = v240;
    sub_100070398(v243, "unlock");
    swift_errorRelease(v240);
    __int128 v244 = v285[1];
    v319[0] = *v285;
    v319[1] = v244;
    v319[2] = v285[2];
    sub_10006FD4C((uint64_t)v319);
    sub_1001145FC();
    sub_10006FDA8((uint64_t)v319);
    uint64_t v245 = sub_100020C48((uint64_t)&type metadata for ExtensionLoaderError, v239);
    sub_10007031C(v245, v246);
    swift_release();

    sub_10000D3A0(&v316);
    v304(v298, v235);
    return swift_release();
  }

  uint64_t v292 = 2LL * (void)v74;
  uint64_t v138 = v310;
  uint64_t v139 = _convertNSErrorToError(_:)(v89);

  swift_willThrow(v140);
  v291 = (void (*)(char *, uint64_t))qword_1001DBB28;
  *(_OWORD *)(sub_10007034C(v289, v290 + 5LL * (void)v74) + ++*(void *)(v0 + 16) = xmmword_100164250;
  uint64_t v141 = sub_10007029C();
  id v142 = (id)AMSLogKey(v141);
  if (v142)
  {
    uint64_t v143 = sub_1000105E8((uint64_t)v142);
    sub_10001A5B8();
    sub_10000DD9C();
    sub_100010564();
    sub_100048C74();
    sub_10007021C();
    uint64_t v144 = sub_100010530();
    sub_100070240(v144);
    sub_1000702B0();
    sub_10000DC14();
    v318 = &type metadata for String;
    uint64_t v316 = v143;
    v317[0] = v74;
    sub_10007033C();
    sub_1000702B0();
    sub_10000DC4C(93LL);
    sub_1000702F8();
    sub_100070410();
  }

  else
  {
    sub_10001A1BC();
    sub_100048C74();
    sub_10007021C();
    uint64_t v155 = sub_100010530();
    sub_100070240(v155);
    sub_1000702B0();
    sub_10000DC4C(58LL);
    sub_1000702F8();
  }

  sub_10000D3A0(&v310);
  sub_1000105B4(0xD00000000000002ALL);
  v313 = &type metadata for String;
  v310 = (void **)v303;
  uint64_t v311 = (uint64_t)v304;
  swift_bridgeObjectRetain(v304);
  sub_1000703C0((uint64_t)&v310);
  sub_1000702F0();
  uint64_t v156 = 3LL * (void)v74;
  LogMessage.init(stringLiteral:)(0x3A726F727265LL);
  swift_getErrorValue(v139, &v307);
  uint64_t v157 = v139;
  uint64_t v158 = v305[1];
  __int128 v159 = v306;
  v313 = v306;
  uint64_t v160 = sub_10000D63C(&v310);
  (*(void (**)(void *, uint64_t, void *))(*(v159 - 1) + 16LL))(v160, v158, v159);
  static LogMessage.safe(_:)(&v310);
  uint64_t v161 = sub_1000702F0();
  uint64_t v162 = static os_log_type_t.error.getter(v161);
  sub_1000703C8(v162);
  sub_10000DDF8();
  if ((v274 & 1) != 0)
  {
    uint64_t v163 = swift_bridgeObjectRelease();
    char v164 = v300;
    sub_10007032C(v163, "lock");
    sub_100070278(0xD000000000000011LL, (uint64_t)"Invalid extension");
    sub_10007032C(v165, "unlock");
    unint64_t v166 = sub_10006FD10();
    uint64_t v167 = sub_100020C48((uint64_t)&type metadata for ExtensionLoaderError, v166);
    *id v168 = 0;
    sub_100070398(v167, "lock");
    uint64_t v169 = *((void *)v164 + 3);
    swift_errorRetain(v167);
    uint64_t v170 = swift_errorRelease(v169);
    *((void *)v164 + 3) = v167;
    sub_100070398(v170, "unlock");
    swift_errorRelease(v167);
    __int128 v171 = v285[1];
    v320[0] = *v285;
    v320[1] = v171;
    v320[2] = v285[2];
    sub_10006FD4C((uint64_t)v320);
    sub_1001145FC();
    sub_10006FDA8((uint64_t)v320);
    uint64_t v172 = sub_100020C48((uint64_t)&type metadata for ExtensionLoaderError, v166);
    sub_10007031C(v172, v173);
    sub_100070300();
    swift_errorRelease(v157);
    sub_100025894();
    sub_1000703B0();
    return swift_release();
  }

  uint64_t v283 = v157;
  Swift::String v174 = (void *)_convertErrorToNSError(_:)(v157);
  id v175 = [v174 domain];
  uint64_t v176 = static String._unconditionallyBridgeFromObjectiveC(_:)(v175);
  Swift::String v178 = v177;

  uint64_t v179 = static String._unconditionallyBridgeFromObjectiveC(_:)(EXExtensionKitErrorDomain);
  BOOL v181 = v176 == v179 && v178 == v180;
  uint64_t v182 = v298;
  if (v181)
  {
    swift_bridgeObjectRelease_n(v178, 2LL);
  }

  else
  {
    id v175 = v180;
    char v183 = _stringCompareWithSmolCheck(_:_:expecting:)(v176, v178, v179, v180, 0LL);
    swift_bridgeObjectRelease();
    sub_10000DCFC();
    if ((v183 & 1) == 0) {
      goto LABEL_39;
    }
  }

  if ([v174 code] != (id)5)
  {
LABEL_39:
    uint64_t v230 = swift_bridgeObjectRelease();
    swift_willThrow(v230);

    sub_100070300();
    sub_100025894();
    (*(void (**)(char *, uint64_t))(v301 + 8))(v182, v297);
    return swift_release();
  }

  v291 = (void (*)(char *, uint64_t))qword_1001DBB28;
  uint64_t v223 = sub_10007034C(v289, v290 + v156);
  __int128 v286 = xmmword_100164240;
  *(_OWORD *)(v223 + ++*(void *)(v0 + 16) = xmmword_100164240;
  uint64_t v224 = sub_10007029C();
  id v225 = (id)AMSLogKey(v224);
  if (v225)
  {
    uint64_t v226 = sub_1000105E8((uint64_t)v225);
    sub_10001A5B8();
    sub_10000DD9C();
    sub_10000DC34();
    sub_10000DC08();
    __int128 v227 = v313;
    uint64_t v228 = sub_10000D37C(&v310, (uint64_t)v313);
    uint64_t v229 = sub_10000DC54((uint64_t)v228, (uint64_t)v227);
    v318 = (void *)swift_getMetatypeMetadata(v229);
    uint64_t v316 = v229;
    sub_10007033C();
    sub_1000702B0();
    sub_10000DC14();
    v318 = &type metadata for String;
    uint64_t v316 = v226;
    v317[0] = v175;
    sub_10007033C();
    sub_1000702B0();
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    sub_10000DCFC();
  }

  else
  {
    sub_10001A1BC();
    sub_100048C74();
    sub_10007021C();
    uint64_t v247 = sub_100010530();
    sub_100070240(v247);
    sub_1000702B0();
    sub_10000DC4C(58LL);
    sub_1000702F8();
  }

  sub_100070360();
  sub_1000105B4(0xD000000000000033LL);
  v313 = &type metadata for String;
  uint64_t v249 = (uint64_t)v303;
  uint64_t v248 = v304;
  v310 = (void **)v303;
  uint64_t v311 = (uint64_t)v304;
  sub_100020BB4();
  sub_1000703C0((uint64_t)&v310);
  uint64_t v250 = sub_1000702F0();
  uint64_t v251 = static os_log_type_t.default.getter(v250);
  sub_1000703C8(v251);
  uint64_t v252 = sub_10000DDF8();
  sub_10006F6D0(v252);
  uint64_t v253 = sub_10006BF3C(v249, (uint64_t)v248);
  uint64_t v254 = v301;
  v255 = (void *)v253;
  sub_10006C4CC(v293, v253, 1LL, v272, v273, a6);

  swift_bridgeObjectRelease();
  sub_10006DFC8(v296);
  swift_errorRelease(v283);
  sub_1000292C4();
  (*(void (**)(char *, uint64_t))(v254 + 8))(v298, v297);
  return swift_release();
}

uint64_t sub_10006DFC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostError(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6);
  id v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = type metadata accessor for OSSignposter(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v13 = sub_10006BCC8();
  uint64_t v14 = (os_log_s *)OSSignposter.logHandle.getter(v13);
  uint64_t v15 = OSSignpostIntervalState.signpostID.getter();
  int v22 = static os_signpost_type_t.end.getter(v15);
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    uint64_t v16 = swift_retain(a1);
    checkForErrorAndConsumeState(state:)(v16);
    swift_release(a1);
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v3 + 88))(v5, v2) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v17 = "[Error] Interval already ended";
    }

    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v17 = "Failed to make XPC connection";
    }

    uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v18 = 0;
    os_signpost_id_t v19 = OSSignpostID.rawValue.getter(v18);
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v14,  (os_signpost_type_t)v22,  v19,  "ExtensionLoader",  v17,  v18,  2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v8, v24);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10006E1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1001C7FA8 != -1) {
    swift_once(&qword_1001C7FA8, sub_1000BD4A4);
  }
  uint64_t v10 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v11 = type metadata accessor for LogMessage(0LL);
  uint64_t v12 = swift_allocObject( v10,  ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL))
        + 3LL * *(void *)(*(void *)(v11 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v12 + ++*(void *)(v0 + 16) = xmmword_100164240;
  uint64_t v37 = (void *)type metadata accessor for ExtensionLoader();
  v36[0] = a2;
  uint64_t v13 = swift_retain(a2);
  id v14 = (id)AMSLogKey(v13);
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = a3;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    uint64_t v19 = v18;

    swift_bridgeObjectRetain(v19);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v20._uint64_t countAndFlagsBits = 0LL;
    v20._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    uint64_t v21 = v37;
    int v22 = sub_10000D37C(v36, (uint64_t)v37);
    uint64_t DynamicType = swift_getDynamicType(v22, v21, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v34[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v34);
    sub_10000E888((uint64_t)v34);
    v24._uint64_t countAndFlagsBits = 5972026LL;
    v24._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v24);
    uint64_t MetatypeMetadata = &type metadata for String;
    v34[0] = v17;
    v34[1] = v19;
    a3 = v16;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v34);
    sub_10000E888((uint64_t)v34);
    v25._uint64_t countAndFlagsBits = 93LL;
    v25._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    LogMessage.init(stringInterpolation:)(v9);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v26._uint64_t countAndFlagsBits = 0LL;
    v26._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t v27 = v37;
    uint64_t v28 = sub_10000D37C(v36, (uint64_t)v37);
    uint64_t v29 = swift_getDynamicType(v28, v27, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v29);
    v34[0] = v29;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v34);
    sub_10000E888((uint64_t)v34);
    v30._uint64_t countAndFlagsBits = 58LL;
    v30._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)(v9);
  }

  sub_10000D3A0(v36);
  LogMessage.init(stringLiteral:)(0xD000000000000043LL);
  uint64_t v37 = &type metadata for String;
  v36[0] = a3;
  v36[1] = a4;
  swift_bridgeObjectRetain(a4);
  static LogMessage.safe(_:)(v36);
  uint64_t v31 = sub_10000E888((uint64_t)v36);
  uint64_t v32 = static os_log_type_t.error.getter(v31);
  sub_1000BD1B0(v32, v12);
  return swift_bridgeObjectRelease();
}

id sub_10006E4B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v82 = a8;
  uint64_t v78 = a7;
  uint64_t v81 = a6;
  id v79 = a5;
  id v84 = a4;
  uint64_t v80 = a2;
  uint64_t v83 = a1;
  uint64_t v77 = type metadata accessor for OSSignpostError(0LL);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for OSSignpostID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v68 - v16;
  uint64_t v18 = type metadata accessor for OSSignposter(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v22 = (_BYTE *)(a3 + 16);
  id result = (id)swift_beginAccess(a3 + 16, v93, 0LL, 0LL);
  if ((*(_BYTE *)(a3 + 16) & 1) == 0)
  {
    id v69 = v10;
    uint64_t v74 = v21;
    uint64_t v71 = v19;
    uint64_t v75 = v17;
    uint64_t v70 = v15;
    uint64_t v73 = v18;
    uint64_t v72 = v11;
    uint64_t v24 = v81;
    Swift::String v25 = (void *)(v81 + 16);
    [v84 lock];
    [v79 invalidate];
    swift_beginAccess(v22, v92, 1LL, 0LL);
    *int v22 = 1;
    swift_beginAccess(v24 + 16, v91, 0LL, 0LL);
    Swift::String v26 = *(void (**)(uint64_t, uint64_t))(v24 + 16);
    uint64_t v27 = v83;
    uint64_t v28 = v80;
    if (v26)
    {
      uint64_t v29 = *(void *)(v24 + 24);
      swift_retain(v29);
      v26(v27, v28);
      sub_10006675C((uint64_t)v26, v29);
    }

    swift_beginAccess(v24 + 16, v90, 1LL, 0LL);
    uint64_t v30 = *(void *)(v24 + 16);
    uint64_t v31 = *(void *)(v24 + 24);
    *Swift::String v25 = 0LL;
    *(void *)(v24 + 2sub_10000D3A0(v0 + 4) = 0LL;
    sub_10006675C(v30, v31);
    uint64_t v81 = v12;
    uint64_t v32 = v75;
    uint64_t v33 = v74;
    if (v28)
    {
      uint64_t v34 = v78;
      uint64_t v35 = (_OWORD *)(v78 + 16);
      swift_beginAccess(v78 + 16, v94, 33LL, 0LL);
      uint64_t v36 = *(void **)(v34 + 56);
      swift_errorRetain(v28);
      swift_errorRetain(v28);
      [v36 lock];
      uint64_t v37 = *(void *)(v34 + 24);
      swift_errorRetain(v28);
      swift_errorRelease(v37);
      *(void *)(v34 + 2sub_10000D3A0(v0 + 4) = v28;
      [v36 unlock];
      swift_errorRelease(v28);
      uint64_t v38 = *(void **)(v34 + 56);
      [v38 lock];
      sub_10004C2B8(0x64656873696E6946LL, 0xE800000000000000LL, 0x74736575716572LL, 0xE700000000000000LL);
      [v38 unlock];
      swift_endAccess(v94);
      swift_beginAccess(v35, v85, 0LL, 0LL);
      __int128 v39 = v35[1];
      v94[0] = *v35;
      v94[1] = v39;
      __int128 v40 = v35[2];
      uint64_t v27 = v83;
      v94[2] = v40;
      sub_10006FD4C((uint64_t)v94);
      sub_1001145FC();
      sub_10006FDA8((uint64_t)v94);
      swift_errorRelease(v28);
    }

    sub_10006BCC8();
    uint64_t v41 = sub_10002546C(v27, (uint64_t)v88);
    uint64_t v42 = (os_log_s *)OSSignposter.logHandle.getter(v41);
    uint64_t v43 = v82;
    uint64_t v44 = OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v45 = static os_signpost_type_t.end.getter(v44);
    char v46 = OS_os_log.signpostsEnabled.getter();
    uint64_t v47 = v73;
    if ((v46 & 1) != 0)
    {
      uint64_t v48 = swift_retain(v43);
      uint64_t v49 = v69;
      checkForErrorAndConsumeState(state:)(v48);
      swift_release();
      uint64_t v50 = v76;
      uint64_t v51 = v77;
      int v52 = (*(uint64_t (**)(char *, uint64_t))(v76 + 88))(v49, v77);
      uint64_t v53 = v72;
      uint64_t v54 = v70;
      if (v52 == enum case for OSSignpostError.doubleEnd(_:))
      {
        char v55 = 0;
        char v56 = 0;
        uint64_t v57 = "[Error] Interval already ended";
      }

      else
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
        uint64_t v57 = "%s";
        char v56 = 2;
        char v55 = 1;
      }

      uint64_t v59 = v81;
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v54, v32, v53);
      uint64_t v60 = v53;
      uint64_t v61 = swift_slowAlloc(12LL, -1LL);
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      uint64_t v87 = v62;
      *(_BYTE *)uint64_t v61 = v56;
      *(_BYTE *)(v61 + 1) = v55;
      *(_WORD *)(v61 + 2) = 2080;
      if (v89) {
        uint64_t v63 = 0x6564656563637553LL;
      }
      else {
        uint64_t v63 = 0x64656C696146LL;
      }
      if (v89) {
        unint64_t v64 = 0xE900000000000064LL;
      }
      else {
        unint64_t v64 = 0xE600000000000000LL;
      }
      uint64_t v86 = sub_100064014(v63, v64, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v61 + 4, v61 + 12);
      swift_bridgeObjectRelease();
      uint64_t v65 = sub_10000E888((uint64_t)v88);
      os_signpost_id_t v66 = OSSignpostID.rawValue.getter(v65);
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v42,  v45,  v66,  "ExtensionLoader",  v57,  (uint8_t *)v61,  0xCu);
      swift_arrayDestroy(v62, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v62, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);

      uint64_t v67 = *(void (**)(char *, uint64_t))(v59 + 8);
      v67(v75, v60);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v74, v73);
      v67(v54, v60);
      id v58 = v84;
    }

    else
    {

      sub_10000E888((uint64_t)v88);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v32, v72);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v33, v47);
      id v58 = v84;
    }

    return [v58 unlock];
  }

  return result;
}

uint64_t sub_10006EB28( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(__int128 *, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = a2 + 16;
  swift_beginAccess(a1 + 16, v78, 0LL, 0LL);
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    if (qword_1001C7FA8 != -1) {
      swift_once(&qword_1001C7FA8, sub_1000BD4A4);
    }
    uint64_t v17 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v18 = type metadata accessor for LogMessage(0LL);
    uint64_t v19 = swift_allocObject( v17,  ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v18 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v18 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v19 + ++*(void *)(v0 + 16) = xmmword_100164230;
    swift_beginAccess(a2 + 16, v73, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(a2 + 16);
    if (Strong)
    {
      uint64_t v21 = Strong;
      uint64_t v75 = (void *)type metadata accessor for ExtensionLoader();
      *(void *)&__int128 v74 = v21;
      uint64_t MetatypeMetadata = sub_10000DA58(&v74, &v76);
    }

    else
    {
      uint64_t MetatypeMetadata = (_OWORD *)swift_getMetatypeMetadata(a7);
      *((void *)&v77 + 1) = MetatypeMetadata;
      *(void *)&__int128 v76 = a7;
    }

    id v29 = (id)AMSLogKey(MetatypeMetadata);
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      uint64_t v33 = v32;

      swift_bridgeObjectRetain(v33);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v34._uint64_t countAndFlagsBits = 0LL;
      v34._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      uint64_t v35 = *((void *)&v77 + 1);
      uint64_t v36 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t DynamicType = swift_getDynamicType(v36, v35, 1LL);
      uint64_t v75 = (void *)swift_getMetatypeMetadata(DynamicType);
      *(void *)&__int128 v74 = DynamicType;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v74);
      sub_10000E888((uint64_t)&v74);
      v38._uint64_t countAndFlagsBits = 5972026LL;
      v38._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      uint64_t v75 = &type metadata for String;
      *(void *)&__int128 v74 = v31;
      *((void *)&v74 + 1) = v33;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v74);
      sub_10000E888((uint64_t)&v74);
      v39._uint64_t countAndFlagsBits = 93LL;
      v39._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      LogMessage.init(stringInterpolation:)(v15);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v51._uint64_t countAndFlagsBits = 0LL;
      v51._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v51);
      uint64_t v52 = *((void *)&v77 + 1);
      uint64_t v53 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t v54 = swift_getDynamicType(v53, v52, 1LL);
      uint64_t v75 = (void *)swift_getMetatypeMetadata(v54);
      *(void *)&__int128 v74 = v54;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v74);
      sub_10000E888((uint64_t)&v74);
      v55._uint64_t countAndFlagsBits = 58LL;
      v55._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v55);
      LogMessage.init(stringInterpolation:)(v15);
    }

    sub_10000D3A0(&v76);
    uint64_t v56 = LogMessage.init(stringLiteral:)(0xD00000000000001ELL);
    uint64_t v57 = static os_log_type_t.debug.getter(v56);
    sub_1000BD1B0(v57, v19);
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v72 = a5;
    if (qword_1001C7FA8 != -1) {
      swift_once(&qword_1001C7FA8, sub_1000BD4A4);
    }
    v71[1] = qword_1001DBB28;
    uint64_t v23 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v24 = type metadata accessor for LogMessage(0LL);
    uint64_t v25 = swift_allocObject( v23,  ((*(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL))
          + 2LL * *(void *)(*(void *)(v24 - 8) + 72LL),
            *(unsigned __int8 *)(*(void *)(v24 - 8) + 80LL) | 7LL);
    *(_OWORD *)(v25 + ++*(void *)(v0 + 16) = xmmword_100164230;
    swift_beginAccess(v16, v73, 0LL, 0LL);
    uint64_t v26 = swift_weakLoadStrong(v16);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v75 = (void *)type metadata accessor for ExtensionLoader();
      *(void *)&__int128 v74 = v27;
      uint64_t v28 = sub_10000DA58(&v74, &v76);
    }

    else
    {
      uint64_t v28 = (_OWORD *)swift_getMetatypeMetadata(a7);
      *((void *)&v77 + 1) = v28;
      *(void *)&__int128 v76 = a7;
    }

    id v40 = (id)AMSLogKey(v28);
    if (v40)
    {
      uint64_t v41 = v40;
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      uint64_t v44 = v43;

      swift_bridgeObjectRetain(v44);
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
      v45._uint64_t countAndFlagsBits = 0LL;
      v45._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v45);
      uint64_t v46 = *((void *)&v77 + 1);
      uint64_t v47 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t v48 = swift_getDynamicType(v47, v46, 1LL);
      uint64_t v75 = (void *)swift_getMetatypeMetadata(v48);
      *(void *)&__int128 v74 = v48;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v74);
      sub_10000E888((uint64_t)&v74);
      v49._uint64_t countAndFlagsBits = 5972026LL;
      v49._object = (void *)0xE300000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      uint64_t v75 = &type metadata for String;
      *(void *)&__int128 v74 = v42;
      *((void *)&v74 + 1) = v44;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v74);
      sub_10000E888((uint64_t)&v74);
      v50._uint64_t countAndFlagsBits = 93LL;
      v50._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v50);
      LogMessage.init(stringInterpolation:)(v15);
      swift_bridgeObjectRelease();
    }

    else
    {
      LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
      v59._uint64_t countAndFlagsBits = 0LL;
      v59._object = (void *)0xE000000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      uint64_t v60 = *((void *)&v77 + 1);
      uint64_t v61 = sub_10000D37C(&v76, *((uint64_t *)&v77 + 1));
      uint64_t v62 = swift_getDynamicType(v61, v60, 1LL);
      uint64_t v75 = (void *)swift_getMetatypeMetadata(v62);
      *(void *)&__int128 v74 = v62;
      LogMessage.StringInterpolation.appendInterpolation(safe:)(&v74);
      sub_10000E888((uint64_t)&v74);
      v63._uint64_t countAndFlagsBits = 58LL;
      v63._object = (void *)0xE100000000000000LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v63);
      LogMessage.init(stringInterpolation:)(v15);
    }

    sub_10000D3A0(&v76);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(40LL, 1LL);
    v64._uint64_t countAndFlagsBits = 0x2074736575716552LL;
    v64._object = (void *)0xEB00000000206F74LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v64);
    *((void *)&v77 + 1) = &type metadata for String;
    *(void *)&__int128 v76 = a3;
    *((void *)&v76 + 1) = a4;
    swift_bridgeObjectRetain(a4);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(&v76);
    sub_10000E888((uint64_t)&v76);
    v65._object = (void *)0x800000010016E380LL;
    v65._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v65);
    uint64_t v66 = LogMessage.init(stringInterpolation:)(v15);
    uint64_t v67 = static os_log_type_t.default.getter(v66);
    sub_1000BD1B0(v67, v25);
    swift_bridgeObjectRelease();
    unint64_t v68 = sub_10006FD10();
    __int128 v76 = 0u;
    __int128 v77 = 0u;
    uint64_t v69 = swift_allocError(&type metadata for ExtensionLoaderError, v68, 0LL, 0LL);
    *uint64_t v70 = 2;
    v72(&v76, v69);
    swift_errorRelease(v69);
    return sub_10000E888((uint64_t)&v76);
  }

uint64_t sub_10006F150(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a2[3];
  uint64_t v14 = sub_10000D37C(a2, v13);
  uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v13);
  uint64_t v16 = (void *)swift_allocObject(&unk_1001AB548, 56LL, 7LL);
  _OWORD v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  v19[4] = sub_10007005C;
  void v19[5] = v16;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256LL;
  _OWORD v19[2] = sub_10006F644;
  void v19[3] = &unk_1001AB560;
  uint64_t v17 = _Block_copy(v19);
  swift_retain(a3);
  swift_bridgeObjectRetain(a5);
  swift_retain(a7);
  swift_release();
  [a1 performRequestWithObject:v15 completion:v17];
  _Block_release(v17);
  return swift_unknownObjectRelease(v15);
}

uint64_t sub_10006F26C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v51 = a7;
  uint64_t v52 = a6;
  uint64_t v48 = a4;
  uint64_t v50 = a1;
  uint64_t v10 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v47 - v14;
  if (qword_1001C7FA8 != -1) {
    swift_once(&qword_1001C7FA8, sub_1000BD4A4);
  }
  uint64_t v49 = qword_1001DBB28;
  uint64_t v16 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v17 = type metadata accessor for LogMessage(0LL);
  uint64_t v18 = swift_allocObject( v16,  ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL))
        + 2LL * *(void *)(*(void *)(v17 - 8) + 72LL),
          *(unsigned __int8 *)(*(void *)(v17 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v18 + ++*(void *)(v0 + 16) = xmmword_100164230;
  *((void *)&v59 + 1) = type metadata accessor for ExtensionLoader();
  *(void *)&__int128 v58 = a3;
  uint64_t v19 = swift_retain(a3);
  id v20 = (id)AMSLogKey(v19);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    uint64_t v24 = v23;

    swift_bridgeObjectRetain(v24);
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    v25._uint64_t countAndFlagsBits = 0LL;
    v25._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v26 = *((void *)&v59 + 1);
    uint64_t v27 = sub_10000D37C(&v58, *((uint64_t *)&v59 + 1));
    uint64_t DynamicType = swift_getDynamicType(v27, v26, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(DynamicType);
    v56[0] = DynamicType;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
    sub_10000E888((uint64_t)v56);
    v29._uint64_t countAndFlagsBits = 5972026LL;
    v29._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v29);
    uint64_t MetatypeMetadata = &type metadata for String;
    v56[0] = v22;
    v56[1] = v24;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
    sub_10000E888((uint64_t)v56);
    v30._uint64_t countAndFlagsBits = 93LL;
    v30._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v30);
    LogMessage.init(stringInterpolation:)(v15);
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    v31._uint64_t countAndFlagsBits = 0LL;
    v31._object = (void *)0xE000000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    uint64_t v32 = *((void *)&v59 + 1);
    uint64_t v33 = sub_10000D37C(&v58, *((uint64_t *)&v59 + 1));
    uint64_t v34 = swift_getDynamicType(v33, v32, 1LL);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v34);
    v56[0] = v34;
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v56);
    sub_10000E888((uint64_t)v56);
    v35._uint64_t countAndFlagsBits = 58LL;
    v35._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v35);
    LogMessage.init(stringInterpolation:)(v15);
  }

  sub_10000D3A0(&v58);
  LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(39LL, 3LL);
  v36._object = (void *)0x800000010016E360LL;
  v36._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v36);
  *((void *)&v59 + 1) = &type metadata for String;
  *(void *)&__int128 v58 = v48;
  *((void *)&v58 + 1) = a5;
  swift_bridgeObjectRetain(a5);
  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v58);
  sub_10000E888((uint64_t)&v58);
  v37._uint64_t countAndFlagsBits = 0x6C75736572202D20LL;
  v37._object = (void *)0xEB00000000203A74LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v37);
  uint64_t v38 = v50;
  LogMessage.StringInterpolation.appendInterpolation(safe:)(v50);
  v39._uint64_t countAndFlagsBits = 0x726F727265202D20LL;
  v39._object = (void *)0xEA0000000000203ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v39);
  if (a2)
  {
    swift_getErrorValue(a2, v55);
    uint64_t v40 = v53;
    uint64_t v41 = v54;
    *((void *)&v59 + 1) = v54;
    uint64_t v42 = sub_10000D63C(&v58);
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16LL))(v42, v40, v41);
  }

  else
  {
    __int128 v58 = 0u;
    __int128 v59 = 0u;
  }

  LogMessage.StringInterpolation.appendInterpolation(safe:)(&v58);
  sub_10000E888((uint64_t)&v58);
  v43._uint64_t countAndFlagsBits = 0LL;
  v43._object = (void *)0xE000000000000000LL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v43);
  uint64_t v44 = LogMessage.init(stringInterpolation:)(v13);
  uint64_t v45 = static os_log_type_t.default.getter(v44);
  sub_1000BD1B0(v45, v18);
  swift_bridgeObjectRelease();
  return v52(v38, a2);
}

uint64_t sub_10006F644(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void (**)(__int128 *, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  if (a2)
  {
    *((void *)&v10 + 1) = swift_getObjectType(a2);
    *(void *)&__int128 v9 = a2;
  }

  else
  {
    __int128 v9 = 0u;
    __int128 v10 = 0u;
  }

  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  id v7 = a3;
  v6(&v9, a3);
  swift_release();

  return sub_10000E888((uint64_t)&v9);
}

uint64_t sub_10006F6D0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10000DE08(a1, &qword_1001CAAD8, &OBJC_CLASS____EXQuery_ptr);
  id v3 = sub_10006F788(0xD000000000000022LL, 0x800000010016ABA0LL);
  id v4 = [(id)objc_opt_self(_EXQueryController) executeQuery:v3];
  uint64_t v5 = sub_10000DE08((uint64_t)v4, &qword_1001CAAE0, &OBJC_CLASS____EXExtensionIdentity_ptr);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  *(void *)(v2 + ++*(void *)(v0 + 16) = v6;
  return swift_bridgeObjectRelease();
}

id sub_10006F788(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2));
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  id v6 = [v4 initWithExtensionPointIdentifier:v5];

  return v6;
}

void sub_10006F7F8()
{
  uint64_t v0 = sub_1000703E8((uint64_t)&unk_1001AB330, (uint64_t)_NSConcreteStackBlock, 1107296256LL, v4, v6);
  sub_100048DB4();
  uint64_t v1 = swift_release();
  sub_1000703FC(v1, "setInvalidationHandler:");
  _Block_release(v0);
  uint64_t v2 = sub_1000703E8((uint64_t)&unk_1001AB358, (uint64_t)_NSConcreteStackBlock, 1107296256LL, v5, v7);
  sub_100048DB4();
  uint64_t v3 = swift_release();
  sub_1000703FC(v3, "setInterruptionHandler:");
  _Block_release(v2);
}

uint64_t sub_10006F8DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (qword_1001C7FA8 != -1) {
    swift_once(&qword_1001C7FA8, sub_1000BD4A4);
  }
  uint64_t v6 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v7 = type metadata accessor for LogMessage(0LL);
  uint64_t v8 = swift_allocObject( v6,  ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL))
       + 2LL * *(void *)(*(void *)(v7 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v7 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v8 + ++*(void *)(v0 + 16) = xmmword_100164230;
  uint64_t v25 = type metadata accessor for ExtensionLoader();
  v24[0] = a1;
  uint64_t v9 = swift_retain(a1);
  id v10 = (id)AMSLogKey(v9);
  if (v10)
  {
    uint64_t v11 = v10;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v10);

    sub_100020BB4();
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
    sub_10000DC08();
    uint64_t v12 = v25;
    uint64_t v13 = sub_10000D37C(v24, v25);
    uint64_t DynamicType = swift_getDynamicType(v13, v12, 1LL);
    swift_getMetatypeMetadata(DynamicType);
    sub_10000DEA4();
    sub_100037DE0();
    v15._uint64_t countAndFlagsBits = 5972026LL;
    v15._object = (void *)0xE300000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    sub_10000DEA4();
    sub_100037DE0();
    v16._uint64_t countAndFlagsBits = 93LL;
    v16._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    sub_100025910();
    swift_bridgeObjectRelease();
  }

  else
  {
    LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(1LL, 1LL);
    sub_10000DC08();
    uint64_t v17 = v25;
    uint64_t v18 = sub_10000D37C(v24, v25);
    uint64_t v19 = swift_getDynamicType(v18, v17, 1LL);
    swift_getMetatypeMetadata(v19);
    sub_10000DEA4();
    sub_100037DE0();
    v20._uint64_t countAndFlagsBits = 58LL;
    v20._object = (void *)0xE100000000000000LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v20);
    sub_100025910();
  }

  sub_10000D3A0(v24);
  uint64_t v21 = LogMessage.init(stringLiteral:)(0xD000000000000021LL);
  uint64_t v22 = a3(v21);
  sub_1000BD1B0(v22, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006FB1C()
{
  return v0;
}

uint64_t sub_10006FB40()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for ExtensionLoader()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd15ExtensionLoader);
}

uint64_t storeEnumTagSinglePayload for ExtensionLoader.ExtensionPoint(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(vsub_10000D3A0(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_10006FBC0 + 4 * asc_100165C40[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_10006FBE0 + 4 * byte_100165C45[v4]))();
  }
}

_BYTE *sub_10006FBC0(_BYTE *result, char a2)
{
  *id result = a2;
  return result;
}

_BYTE *sub_10006FBE0(_BYTE *result)
{
  *id result = 0;
  return result;
}

_DWORD *sub_10006FBE8(_DWORD *result, int a2)
{
  *id result = a2;
  return result;
}

_WORD *sub_10006FBF0(_WORD *result, __int16 a2)
{
  *id result = a2;
  return result;
}

_WORD *sub_10006FBF8(_WORD *result)
{
  *id result = 0;
  return result;
}

_DWORD *sub_10006FC00(_DWORD *result)
{
  *id result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ExtensionLoader.ExtensionPoint()
{
  return &type metadata for ExtensionLoader.ExtensionPoint;
}

unint64_t sub_10006FC20()
{
  unint64_t result = qword_1001CAAA0;
  if (!qword_1001CAAA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165D18, &type metadata for ExtensionLoader.ExtensionPoint);
    atomic_store(result, (unint64_t *)&qword_1001CAAA0);
  }

  return result;
}

uint64_t sub_10006FC5C()
{
  return sub_10006F8DC(v0, v1, (uint64_t (*)(uint64_t))&static os_log_type_t.debug.getter);
}

uint64_t sub_10006FC88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10006FC98(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10006FCA0()
{
  return sub_10006F8DC(v0, v1, (uint64_t (*)(uint64_t))&static os_log_type_t.error.getter);
}

uint64_t sub_10006FCCC()
{
  swift_errorRelease(*(void *)(v0 + 24));
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));

  return swift_deallocObject(v0, 64LL, 7LL);
}

unint64_t sub_10006FD10()
{
  unint64_t result = qword_1001CAAE8;
  if (!qword_1001CAAE8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165E90, &type metadata for ExtensionLoaderError);
    atomic_store(result, (unint64_t *)&qword_1001CAAE8);
  }

  return result;
}

uint64_t sub_10006FD4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = *(id *)a1;
  swift_errorRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  id v7 = v5;
  return a1;
}

uint64_t sub_10006FDA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);

  swift_errorRelease(v2);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t sub_10006FE04()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10006FE2C(uint64_t a1)
{
  return sub_10006E1CC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10006FE38()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_10006FE48()
{
  if (*(void *)(v0 + 16)) {
    swift_release(*(void *)(v0 + 24));
  }
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10006FE74()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  sub_1000703F4();
  return swift_deallocObject(v0, 72LL, 7LL);
}

id sub_10006FEB8(uint64_t a1, uint64_t a2)
{
  return sub_10006E4B8( a1,  a2,  *(void *)(v2 + 16),  *(void **)(v2 + 24),  *(void **)(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56));
}

uint64_t sub_10006FEE8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10006FF0C()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_10006FF40()
{
  return sub_10006EB28( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(void (**)(__int128 *, uint64_t))(v0 + 48),  *(void *)(v0 + 56),  *(void *)(v0 + 64));
}

uint64_t sub_10006FF54(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2(255LL);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_10006FF94(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_10000D820(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_10006FFD4()
{
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_100070014()
{
  return sub_10006F150( *(void **)(v0 + 16),  (void *)(v0 + 24),  *(void *)(v0 + 56),  *(void *)(v0 + 64),  *(void *)(v0 + 72),  *(void *)(v0 + 80),  *(void *)(v0 + 88));
}

uint64_t sub_10007002C()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_10007005C(uint64_t a1, uint64_t a2)
{
  return sub_10006F26C( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40),  *(void *)(v2 + 48));
}

uint64_t storeEnumTagSinglePayload for ExtensionLoaderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(vsub_10000D3A0(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_10000D3A0(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1000700B8 + 4 * byte_100165C4F[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000700EC + 4 * byte_100165C4A[v4]))();
}

uint64_t sub_1000700EC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000700F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000700FCLL);
  }
  return result;
}

uint64_t sub_100070108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100070110LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_100070114(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10007011C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExtensionLoaderError()
{
  return &type metadata for ExtensionLoaderError;
}

unint64_t sub_100070140()
{
  unint64_t result = qword_1001CAB10;
  if (!qword_1001CAB10)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165E68, &type metadata for ExtensionLoaderError);
    atomic_store(result, (unint64_t *)&qword_1001CAB10);
  }

  return result;
}

unint64_t sub_10007017C()
{
  unint64_t result = qword_1001CAB18;
  if (!qword_1001CAB18)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165DB0, &type metadata for ExtensionLoaderError);
    atomic_store(result, (unint64_t *)&qword_1001CAB18);
  }

  return result;
}

unint64_t sub_1000701B8()
{
  unint64_t result = qword_1001CAB20;
  if (!qword_1001CAB20)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165DF0, &type metadata for ExtensionLoaderError);
    atomic_store(result, (unint64_t *)&qword_1001CAB20);
  }

  return result;
}

uint64_t sub_10007021C()
{
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = sub_10000D37C((void *)(v0 + 496), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_100070240(uint64_t a1)
{
  *(void *)(v2 - 232) = a1;
  *(void *)(v2 - 256) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 256);
}

uint64_t sub_100070254()
{
  uint64_t v1 = *(void *)(v0 - 88);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 112), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

void sub_100070278(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10007029C()
{
  v0[65] = v0[36];
  uint64_t v1 = v0[50];
  v0[62] = v1;
  return swift_retain(v1);
}

uint64_t sub_1000702B0()
{
  return sub_10000E888(v0 - 256);
}

uint64_t sub_1000702B8(uint64_t a1)
{
  *(void *)(v2 - 120) = a1;
  *(void *)(v2 - 14sub_10000D3A0(v0 + 4) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 144);
}

uint64_t sub_1000702C8(uint64_t a1)
{
  return swift_allocObject( v1,  ((*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL))
         + 3LL * *(void *)(*(void *)(a1 - 8) + 72LL),
           *(unsigned __int8 *)(*(void *)(a1 - 8) + 80LL) | 7LL);
}

uint64_t sub_1000702F0()
{
  return sub_10000E888(v0 + 496);
}

uint64_t sub_1000702F8()
{
  return LogMessage.init(stringInterpolation:)(v0);
}

uint64_t sub_100070300()
{
  return sub_10006DFC8(*(void *)(v0 + 352));
}

uint64_t sub_100070310()
{
  return 0LL;
}

uint64_t sub_10007031C(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

id sub_10007032C(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_100070334()
{
  return sub_10000E888(v0 + 464);
}

uint64_t sub_10007033C()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 - 256);
}

uint64_t sub_100070344()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 464);
}

uint64_t sub_10007034C(uint64_t a1, uint64_t a2)
{
  return swift_allocObject(a1, a2, *(void *)(v2 + 280));
}

uint64_t sub_100070354(uint64_t a1)
{
  return swift_slowDealloc(a1, -1LL, -1LL);
}

uint64_t sub_100070360()
{
  return sub_10000D3A0((void *)(v0 + 496));
}

void *sub_100070378@<X0>(uint64_t a1@<X8>)
{
  v2[64] = v1;
  v2[65] = a1;
  return _Block_copy(v2 + 62);
}

uint64_t sub_100070388(uint64_t a1)
{
  *(void *)(v2 - 88) = a1;
  *(void *)(v2 - 112) = v1;
  return swift_retain(v1);
}

id sub_100070398(uint64_t a1, const char *a2)
{
  return [v2 a2];
}

uint64_t sub_1000703A0()
{
  return v1(v0, v2, v3);
}

uint64_t sub_1000703B0()
{
  return (*(uint64_t (**)(void, void))(v0[49] + 8LL))(v0[46], v0[45]);
}

uint64_t sub_1000703C0(uint64_t a1)
{
  return static LogMessage.safe(_:)(a1);
}

uint64_t sub_1000703C8(uint64_t a1)
{
  return sub_1000BD1B0(a1, v1);
}

uint64_t sub_1000703D4()
{
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v0 + 496);
}

uint64_t sub_1000703DC()
{
  return static DispatchQoS.unspecified.getter();
}

void *sub_1000703E8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  a4 = v5;
  a5 = a1;
  return _Block_copy(&a2);
}

uint64_t sub_1000703F4()
{
  return swift_release(*(void *)(v0 + 56));
}

id sub_1000703FC(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_100070408(uint64_t a1)
{
  return swift_slowAlloc(a1, -1LL);
}

uint64_t sub_100070410()
{
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_100070488()
{
  uint64_t v0 = sub_10000D33C((uint64_t *)&unk_1001C9C80);
  uint64_t inited = swift_initStackObject(v0, v4);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_100164220;
  v3[0] = 0x707954746E657665LL;
  v3[1] = 0xE900000000000065LL;
  AnyHashable.init<A>(_:)(v3);
  *(void *)(inited + 96) = &type metadata for String;
  strcpy((char *)(inited + 72), "FamilyChanged");
  *(_WORD *)(inited + 86) = -4864;
  return Dictionary.init(dictionaryLiteral:)( inited,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
}

id sub_100070554()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent();
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1000705A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000705DC()
{
  uint64_t v0 = type metadata accessor for FamilyObserver();
  swift_allocObject(v0, 32LL, 7LL);
  uint64_t result = sub_100070660();
  qword_1001DBAD0 = result;
  return result;
}

uint64_t sub_100070614()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0LL);
  sub_10000D8C4(v0, qword_1001CAB30);
  sub_10000D7B8(v0, (uint64_t)qword_1001CAB30);
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(3LL);
}

uint64_t sub_100070660()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000D33C((uint64_t *)&unk_1001CD380);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_10000D33C((uint64_t *)&unk_1001CACC0);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_10000D33C((uint64_t *)&unk_1001CD390);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  uint64_t v13 = (void *)PassthroughSubject.init()();
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = v13;
  *(void *)(v0 + 2sub_10000D3A0(v0 + 4) = 0LL;
  v31[1] = v13;
  uint64_t v14 = qword_1001C7F60;
  swift_retain(v13);
  if (v14 != -1) {
    swift_once(&qword_1001C7F60, sub_100070614);
  }
  uint64_t v15 = sub_10000D7B8(v5, (uint64_t)qword_1001CAB30);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v15, v5);
  uint64_t v28 = v6;
  if (qword_1001C80A8 != -1) {
    swift_once(&qword_1001C80A8, sub_10010D4CC);
  }
  Swift::String v16 = (void *)qword_1001DBBB8;
  v31[0] = (id)qword_1001DBBB8;
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
  sub_10000D5C0((uint64_t)v4, 1LL, 1LL, v17);
  uint64_t v18 = sub_10000DAA0(0LL, (unint64_t *)&qword_1001CACD0, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v19 = sub_10001D34C( &qword_1001CA398,  (uint64_t *)&unk_1001CD390,  (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  unint64_t v20 = sub_10000D7D0();
  id v21 = v16;
  Publisher.debounce<A>(for:scheduler:options:)(v8, v31, v4, v12, v18, v19, v20);
  sub_1000102E0((uint64_t)v4, (uint64_t *)&unk_1001CD380);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
  swift_release();
  uint64_t v22 = swift_allocObject(&unk_1001AB700, 24LL, 7LL);
  swift_weakInit(v22 + 16, v1);
  uint64_t v23 = sub_10001D34C( &qword_1001CA3A0,  (uint64_t *)&unk_1001CACC0,  (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  uint64_t v24 = v30;
  uint64_t v25 = Publisher<>.sink(receiveValue:)(sub_100070F80, v22, v30, v23);
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v24);
  *(void *)(v1 + 2sub_10000D3A0(v0 + 4) = v25;
  swift_release();
  return v1;
}

uint64_t sub_100070954(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v2);
  if (result)
  {
    sub_100070C0C();
    return swift_release();
  }

  return result;
}

void sub_1000709A8()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v1);
  sub_10000DC74();
  uint64_t v2 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v3 = type metadata accessor for LogMessage(0LL);
  uint64_t v4 = swift_allocObject( v2,  ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80LL))
       + 2LL * *(void *)(*(void *)(v3 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v3 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v4 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v24 = type metadata accessor for FamilyObserver();
  v23[0] = v0;
  uint64_t v5 = swift_retain(v0);
  id v6 = (id)AMSLogKey(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v10 = v9;

    swift_bridgeObjectRetain(v10);
    sub_10000DC34();
    sub_10000DC08();
    uint64_t v11 = v24;
    uint64_t v12 = sub_10000D37C(v23, v24);
    uint64_t v13 = sub_10000DC54((uint64_t)v12, v11);
    swift_getMetatypeMetadata(v13);
    sub_10000DCE8();
    sub_100070F88();
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    v21[0] = v8;
    v21[1] = v10;
    sub_10000DCE8();
    sub_100070F88();
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    uint64_t v14 = v24;
    uint64_t v15 = sub_10000D37C(v23, v24);
    uint64_t v16 = sub_10000DC54((uint64_t)v15, v14);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v16);
    v21[0] = v16;
    sub_10000DCE8();
    sub_1000102E0((uint64_t)v21, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(v23);
  uint64_t v17 = LogMessage.init(stringLiteral:)(0xD000000000000024LL);
  if (qword_1001C7F80 != -1) {
    uint64_t v17 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v18 = static os_log_type_t.info.getter(v17);
  sub_1000BD1B0(v18, v4);
  swift_bridgeObjectRelease();
  swift_retain(*(void *)(v0 + 16));
  uint64_t v19 = sub_10000D33C((uint64_t *)&unk_1001CD390);
  uint64_t v20 = sub_10001D34C( (unint64_t *)&unk_1001CACF0,  (uint64_t *)&unk_1001CD390,  (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  Subject<>.send()(v19, v20);
  swift_release();
  sub_10000DE10();
}

void sub_100070C0C()
{
  uint64_t v1 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v1);
  sub_10000DC74();
  uint64_t v2 = sub_10000D33C(&qword_1001C9C70);
  uint64_t v3 = type metadata accessor for LogMessage(0LL);
  uint64_t v4 = swift_allocObject( v2,  ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80LL))
       + 2LL * *(void *)(*(void *)(v3 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v3 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v4 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
  uint64_t v26 = type metadata accessor for FamilyObserver();
  v25[0] = v0;
  uint64_t v5 = swift_retain(v0);
  id v6 = (id)AMSLogKey(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v10 = v9;

    swift_bridgeObjectRetain(v10);
    sub_10000DC34();
    sub_10000DC08();
    uint64_t v11 = v26;
    uint64_t v12 = sub_10000D37C(v25, v26);
    uint64_t v13 = sub_10000DC54((uint64_t)v12, v11);
    swift_getMetatypeMetadata(v13);
    sub_10000DCE8();
    sub_100070F94();
    sub_10000DC14();
    uint64_t MetatypeMetadata = &type metadata for String;
    v23[0] = v8;
    v23[1] = v10;
    sub_10000DCE8();
    sub_100070F94();
    sub_10000DC4C(93LL);
    sub_10000DC5C();
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10000DC24();
    sub_10000DC08();
    uint64_t v14 = v26;
    uint64_t v15 = sub_10000D37C(v25, v26);
    uint64_t v16 = sub_10000DC54((uint64_t)v15, v14);
    uint64_t MetatypeMetadata = (void *)swift_getMetatypeMetadata(v16);
    v23[0] = v16;
    sub_10000DCE8();
    sub_1000102E0((uint64_t)v23, &qword_1001CAAD0);
    sub_10000DC4C(58LL);
    sub_10000DC5C();
  }

  sub_10000D3A0(v25);
  uint64_t v17 = LogMessage.init(stringLiteral:)(0xD000000000000018LL);
  if (qword_1001C7F80 != -1) {
    uint64_t v17 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
  }
  uint64_t v18 = static os_log_type_t.info.getter(v17);
  sub_1000BD1B0(v18, v4);
  swift_bridgeObjectRelease();
  sub_10000DAA0(0LL, (unint64_t *)&qword_1001CD670, &OBJC_CLASS___AMSBag_ptr);
  id v19 = sub_100067AF4(0x6761676E45534D41LL, 0xED0000746E656D65LL, (void *)0x31);
  id v20 = objc_allocWithZone(&OBJC_CLASS___AMSEngagement);
  id v21 = objc_msgSend(v20, "initWithBag:", v19, v23[0]);

  id v22 = [objc_allocWithZone((Class)type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent()) init];
  sub_10000DE10();
}

uint64_t sub_100070ED8()
{
  return v0;
}

uint64_t sub_100070EFC()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for FamilyObserver()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd14FamilyObserver);
}

uint64_t type metadata accessor for FamilyObserver.EngagementFamilyChangedEvent()
{
  return objc_opt_self(&OBJC_CLASS____TtCC14amsengagementd14FamilyObserverP33_5AC962C082A44D0E9D412F22116DFDED28EngagementFamilyChangedEvent);
}

uint64_t sub_100070F5C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100070F80(uint64_t a1)
{
  return sub_100070954(a1, v1);
}

uint64_t sub_100070F88()
{
  return sub_1000102E0(v1 - 128, v0);
}

uint64_t sub_100070F94()
{
  return sub_1000102E0(v1 - 128, v0);
}

ValueMetadata *type metadata accessor for FeatureFlagProvider()
{
  return &type metadata for FeatureFlagProvider;
}

id sub_100070FB0@<X0>( uint64_t a1@<X0>, char a2@<W1>, objc_class *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v13 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = URL.path.getter(v14, v15);
  LOBYTE(a5) = (*(uint64_t (**)(uint64_t))(a5 + 24))(v16);
  swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
  {
    uint64_t v17 = type metadata accessor for URL(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16LL))(a6, a1, v17);
    return (id)sub_10000D5C0(a6, 0LL, 1LL, v17);
  }

  else
  {
    uint64_t v69 = a3;
    char v70 = a2;
    uint64_t v19 = sub_10000D33C(&qword_1001C9C70);
    uint64_t v20 = *(void *)(type metadata accessor for LogMessage(0LL) - 8);
    uint64_t v21 = *(void *)(v20 + 72);
    uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v66 = v19;
    uint64_t v65 = ((v22 + 32) & ~v22) + 2 * v21;
    uint64_t v64 = v22 | 7;
    uint64_t v23 = swift_allocObject(v19, v65, v22 | 7);
    *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v78 = a4;
    uint64_t v24 = sub_100048BDC();
    uint64_t v67 = v6;
    Swift::String v63 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16LL);
    uint64_t v25 = v63(v24, v6, a4);
    id v26 = (id)AMSLogKey(v25);
    uint64_t v68 = a6;
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      uint64_t v30 = v29;

      swift_bridgeObjectRetain(v30);
      sub_10007180C();
      sub_100010608();
      uint64_t v31 = sub_1000717E8();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v31);
      sub_1000717D4(MetatypeMetadata);
      sub_1000717A8();
      sub_10000DC14();
      __int128 v76 = &type metadata for String;
      uint64_t v74 = v28;
      uint64_t v75 = v30;
      sub_100048640();
      sub_1000717A8();
      sub_10000DC4C(93LL);
      sub_1000291E4();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_10001A21C(1LL);
      sub_100010608();
      uint64_t v33 = sub_1000717B0();
      __int128 v76 = (void *)swift_getMetatypeMetadata(v33);
      uint64_t v74 = v33;
      sub_100048640();
      sub_1000717A8();
      sub_10000DC4C(58LL);
      sub_1000291E4();
    }

    sub_10000D3A0(v77);
    sub_10001A21C(20LL);
    v34._object = (void *)0x800000010016E5A0LL;
    v34._uint64_t countAndFlagsBits = 0xD000000000000014LL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v34);
    uint64_t v35 = type metadata accessor for URL(0LL);
    uint64_t v78 = v35;
    Swift::String v36 = sub_100048BDC();
    sub_10007181C((uint64_t)v36);
    LogMessage.StringInterpolation.appendInterpolation(safe:)(v77);
    sub_10000E888((uint64_t)v77);
    sub_10000DC08();
    uint64_t v37 = sub_1000291E4();
    if (qword_1001C7F80 != -1) {
      uint64_t v37 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v38 = static os_log_type_t.debug.getter(v37);
    sub_1000BD1B0(v38, v23);
    swift_bridgeObjectRelease();
    id v39 = [(id)objc_opt_self(NSFileManager) defaultManager];
    URL._bridgeToObjectiveC()(v40);
    uint64_t v42 = v41;
    Class isa = v69;
    if (v69)
    {
      type metadata accessor for FileAttributeKey(0LL);
      sub_100071768();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    }

    v77[0] = 0LL;
    unsigned int v44 = [v39 createDirectoryAtURL:v42 withIntermediateDirectories:v70 & 1 attributes:isa error:v77];

    id v71 = v77[0];
    if (v44)
    {
      sub_10007181C(a6);
      sub_10000D5C0(a6, 0LL, 1LL, v35);
      return v71;
    }

    else
    {
      id v45 = v77[0];
      uint64_t v46 = _convertNSErrorToError(_:)(v71);

      swift_willThrow(v47);
      uint64_t v48 = swift_allocObject(v66, v65, v64);
      *(_OWORD *)(v48 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
      uint64_t v78 = a4;
      uint64_t v49 = sub_100048BDC();
      uint64_t v50 = v63(v49, v67, a4);
      id v51 = (id)AMSLogKey(v50);
      if (v51)
      {
        uint64_t v52 = v51;
        uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
        uint64_t v55 = v54;

        swift_bridgeObjectRetain(v55);
        sub_10007180C();
        sub_100010608();
        uint64_t v56 = sub_1000717E8();
        uint64_t v57 = swift_getMetatypeMetadata(v56);
        sub_1000717D4(v57);
        sub_1000717A8();
        sub_10000DC14();
        __int128 v76 = &type metadata for String;
        uint64_t v74 = v53;
        uint64_t v75 = v55;
        sub_100048640();
        sub_1000717A8();
        sub_10000DC4C(93LL);
        sub_1000291E4();
        swift_bridgeObjectRelease();
      }

      else
      {
        sub_10001A21C(1LL);
        sub_100010608();
        uint64_t v58 = sub_1000717B0();
        __int128 v76 = (void *)swift_getMetatypeMetadata(v58);
        uint64_t v74 = v58;
        sub_100048640();
        sub_1000717A8();
        sub_10000DC4C(58LL);
        sub_1000291E4();
      }

      sub_10000D3A0(v77);
      sub_10001A21C(28LL);
      v59._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
      v59._object = (void *)0x800000010016E5C0LL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v59);
      swift_getErrorValue(v46, v73);
      uint64_t v78 = v72;
      uint64_t v60 = sub_100048BDC();
      (*(void (**)(void *))(*(void *)(v72 - 8) + 16LL))(v60);
      LogMessage.StringInterpolation.appendInterpolation(safe:)(v77);
      sub_10000E888((uint64_t)v77);
      sub_10000DC08();
      uint64_t v61 = sub_1000291E4();
      uint64_t v62 = static os_log_type_t.error.getter(v61);
      sub_1000BD1B0(v62, v48);
      swift_errorRelease(v46);
      swift_bridgeObjectRelease();
      return (id)sub_10000D5C0(v68, 1LL, 1LL, v35);
    }
  }

void sub_100071624()
{
}

uint64_t sub_100071670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Data.write(to:options:)(a3, 1LL, a1, a2);
}

uint64_t sub_100071698()
{
  return sub_1000716B8();
}

uint64_t sub_1000716B8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 contentsAtPath:v1];

  if (!v2) {
    return 0LL;
  }
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);

  return v3;
}

unint64_t sub_100071730()
{
  return (unint64_t)sub_10014FF64() & 1;
}

uint64_t sub_100071754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100071670(a1, a2, a3);
}

unint64_t sub_100071768()
{
  unint64_t result = qword_1001C86E0;
  if (!qword_1001C86E0)
  {
    type metadata accessor for FileAttributeKey(255LL);
    unint64_t result = swift_getWitnessTable(&unk_100163BE8, v1);
    atomic_store(result, (unint64_t *)&qword_1001C86E0);
  }

  return result;
}

uint64_t sub_1000717A8()
{
  return sub_10000E888(v0 - 160);
}

uint64_t sub_1000717B0()
{
  uint64_t v1 = *(void *)(v0 - 104);
  id v2 = sub_10000D37C((void *)(v0 - 128), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_1000717D4(uint64_t a1)
{
  *(void *)(v2 - 136) = a1;
  *(void *)(v2 - 160) = v1;
  return LogMessage.StringInterpolation.appendInterpolation(safe:)(v2 - 160);
}

uint64_t sub_1000717E8()
{
  uint64_t v1 = *(void *)(v0 - 104);
  uint64_t v2 = sub_10000D37C((void *)(v0 - 128), v1);
  return swift_getDynamicType(v2, v1, 1LL);
}

uint64_t sub_10007180C()
{
  return LogMessage.StringInterpolation.init(literalCapacity:interpolationCount:)(4LL, 2LL);
}

uint64_t sub_10007181C(uint64_t a1)
{
  return v2(a1, v1, v3);
}

uint64_t storeEnumTagSinglePayload for AMSFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(vsub_10000D3A0(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_10000D3A0(v0 + 4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_100071874 + 4 * byte_100165F9D[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1000718A8 + 4 * asc_100165F98[v4]))();
}

uint64_t sub_1000718A8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000718B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1000718B8LL);
  }
  return result;
}

uint64_t sub_1000718C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1000718CCLL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_1000718D0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1000718D8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AMSFlags()
{
  return &type metadata for AMSFlags;
}

unint64_t sub_1000718F8()
{
  unint64_t result = qword_1001CAD00;
  if (!qword_1001CAD00)
  {
    unint64_t result = swift_getWitnessTable(&unk_100165FF0, &type metadata for AMSFlags);
    atomic_store(result, (unint64_t *)&qword_1001CAD00);
  }

  return result;
}

const char *sub_100071934(char a1)
{
  if (!a1) {
    return "EngagementDaemonAppData";
  }
  if (a1 == 1) {
    return "EngagementFamilyCircleDatasource";
  }
  return "EngagementNFCHandling";
}

Swift::Int sub_100071978(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_1000719BC()
{
  return sub_100071978(*v0);
}

const char *sub_1000719C4()
{
  return "AppleMediaServices";
}

const char *sub_1000719D8()
{
  return sub_100071934(*v0);
}

void sub_1000719F4(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for LogMessage.StringInterpolation(0LL);
  __chkstk_darwin(v4);
  *(void *)&__int128 v69 = 0x696669746E656469LL;
  *((void *)&v69 + 1) = 0xEA00000000007265LL;
  AnyHashable.init<A>(_:)(&v69);
  sub_100072CA8();
  sub_100072CE0();
  if (!v76)
  {
    sub_10003AD7C();
    goto LABEL_16;
  }

  uint64_t v2 = &type metadata for Any;
  if ((swift_dynamicCast(&v69, &v75, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0)
  {
LABEL_16:
    uint64_t v19 = sub_10000D33C(&qword_1001C9C70);
    type metadata accessor for LogMessage(0LL);
    sub_10000DD70();
    uint64_t v22 = swift_allocObject(v19, (v21 & ~v20) + 2LL * (void)v2, v20 | 7);
    *(_OWORD *)(v22 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v1);
    id v24 = (id)sub_100072CC8(MetatypeMetadata);
    if (v24)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      sub_100072CD4();
      sub_10000DF10();
      sub_10000DC34();
      sub_10000DC08();
      uint64_t v25 = sub_100072C74();
      __int128 v76 = (void *)swift_getMetatypeMetadata(v25);
      *(void *)&__int128 v75 = v25;
      sub_10001065C();
      sub_10003AD7C();
      sub_10000DC14();
      __int128 v76 = &type metadata for String;
      *(void *)&__int128 v75 = a1;
      *((void *)&v75 + 1) = v1;
      sub_10001065C();
      sub_10003AD7C();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DE2C();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      uint64_t v26 = v74;
      uint64_t v27 = sub_10000D37C(&v72, v74);
      uint64_t DynamicType = swift_getDynamicType(v27, v26, 1LL);
      __int128 v76 = (void *)swift_getMetatypeMetadata(DynamicType);
      *(void *)&__int128 v75 = DynamicType;
      sub_10001065C();
      sub_10003AD7C();
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000D3A0(&v72);
    uint64_t v29 = LogMessage.init(stringLiteral:)(0xD000000000000017LL);
    if (qword_1001C7F80 != -1) {
      uint64_t v29 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v30 = static os_log_type_t.error.getter(v29);
    sub_1000BD1B0(v30, v22);
    goto LABEL_30;
  }

  uint64_t v5 = *((void *)&v69 + 1);
  uint64_t v6 = v69;
  *(void *)&__int128 v69 = 1635017060LL;
  *((void *)&v69 + 1) = 0xE400000000000000LL;
  AnyHashable.init<A>(_:)(&v69);
  sub_100072CA8();
  sub_100072CE0();
  if (!v76)
  {
    swift_bridgeObjectRelease();
    sub_10003AD7C();
LABEL_24:
    uint64_t v31 = sub_10000D33C(&qword_1001C9C70);
    type metadata accessor for LogMessage(0LL);
    sub_10000DD70();
    uint64_t v34 = swift_allocObject(v31, (v33 & ~v32) + 2LL * (void)&type metadata for Any, v32 | 7);
    *(_OWORD *)(v34 + swift_weakDestroy(v0 + 16) = xmmword_100164230;
    uint64_t v35 = swift_getMetatypeMetadata(v1);
    id v36 = (id)sub_100072CC8(v35);
    if (v36)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      sub_100072CD4();
      sub_10000DF10();
      sub_10000DC34();
      sub_10000DC08();
      uint64_t v37 = sub_100072C74();
      __int128 v76 = (void *)swift_getMetatypeMetadata(v37);
      *(void *)&__int128 v75 = v37;
      sub_10001065C();
      sub_10003AD7C();
      sub_10000DC14();
      __int128 v76 = &type metadata for String;
      *(void *)&__int128 v75 = a1;
      *((void *)&v75 + 1) = v1;
      sub_10001065C();
      sub_10003AD7C();
      sub_10000DC4C(93LL);
      sub_10000DC5C();
      sub_10000DE2C();
    }

    else
    {
      sub_10000DC24();
      sub_10000DC08();
      uint64_t v38 = v74;
      id v39 = sub_10000D37C(&v72, v74);
      uint64_t v40 = swift_getDynamicType(v39, v38, 1LL);
      __int128 v76 = (void *)swift_getMetatypeMetadata(v40);
      *(void *)&__int128 v75 = v40;
      sub_10001065C();
      sub_10003AD7C();
      sub_10000DC4C(58LL);
      sub_10000DC5C();
    }

    sub_10000D3A0(&v72);
    uint64_t v41 = LogMessage.init(stringLiteral:)(0xD00000000000001BLL);
    if (qword_1001C7F80 != -1) {
      uint64_t v41 = swift_once(&qword_1001C7F80, sub_1000BB1B0);
    }
    uint64_t v42 = static os_log_type_t.error.getter(v41);
    sub_1000BD1B0(v42, v34);
    goto LABEL_30;
  }

  a1 = sub_10000D33C(&qword_1001C8E58);
  if ((swift_dynamicCast(&v69, &v75, (char *)&type metadata for Any + 8, a1, 6LL) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }

  uint64_t v7 = v69;
  uint64_t v8 = sub_10000D33C((uint64_t *)&unk_1001C9C80);
  uint64_t v9 = swift_allocObject(v8, 248LL, 7LL);
  *(_OWORD *)(v9 + swift_weakDestroy(v0 + 16) = xmmword_100164240;
  uint64_t v72 = 49LL;
  unint64_t v73 = 0xE100000000000000LL;
  sub_100072C40();
  *(void *)(v9 + 96) = &type metadata for Int;
  *(void *)(v9 + 72) = 25LL;
  uint64_t v72 = 50LL;
  unint64_t v73 = 0xE100000000000000LL;
  sub_100072C40();
  *(void *)(v9 + 168) = &type metadata for String;
  *(void *)(v9 + 14sub_10000D3A0(v0 + 4) = v6;
  *(void *)(v9 + 152) = v5;
  uint64_t v72 = 7565409LL;
  unint64_t v73 = 0xE300000000000000LL;
  sub_100072C40();
  *(void *)(v9 + 240) = a1;
  *(void *)(v9 + 2swift_weakDestroy(v0 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  uint64_t v71 = Dictionary.init(dictionaryLiteral:)( v9,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  *(void *)&__int128 v75 = 0x44746E756F636361LL;
  *((void *)&v75 + 1) = 0xEB00000000444953LL;
  AnyHashable.init<A>(_:)(&v75);
  sub_10003079C((uint64_t)&v72, v7, &v69);
  sub_100009070();
  sub_100072CE0();
  if (!*((void *)&v70 + 1))
  {
    sub_10000E888((uint64_t)&v69);
LABEL_80:
    if (qword_1001C7F10 != -1) {
      swift_once(&qword_1001C7F10, sub_10001CF94);
    }
    uint64_t v60 = qword_1001C90F0;
    id v61 = objc_allocWithZone(&OBJC_CLASS___AMSPushConfiguration);
    swift_unknownObjectRetain(v60);
    id v62 = [v61 init];
    sub_1000723EC();
    swift_unknownObjectRetain(v60);
    id v63 = v62;
    id v64 = sub_100072358(v62, v60);
    sub_10000DF10();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    sub_10000DE2C();
    unsigned int v66 = [v64 shouldHandleNotification:isa];

    if (v66)
    {
      Class v67 = Dictionary._bridgeToObjectiveC()().super.isa;
      sub_10000DE2C();
      [v64 handleNotification:v67];

      swift_unknownObjectRelease(v60);
      return;
    }

    swift_unknownObjectRelease(v60);
LABEL_30:
    swift_bridgeObjectRelease();
    return;
  }

  sub_10000DA58(&v69, &v75);
  *(void *)&__int128 v69 = 48LL;
  *((void *)&v69 + 1) = 0xE100000000000000LL;
  AnyHashable.init<A>(_:)(&v69);
  sub_10000DA1C((uint64_t)&v75, (uint64_t)&v69);
  uint64_t v10 = String.init<A>(describing:)(&v69, (char *)&type metadata for Any + 8);
  uint64_t v12 = v11;
  uint64_t v13 = HIBYTE(v11) & 0xF;
  uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
  if ((v12 & 0x2000000000000000LL) != 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }

  if ((v12 & 0x1000000000000000LL) != 0)
  {
    uint64_t v17 = (uint64_t)sub_100072428(v10, v12, 10LL);
    LOBYTE(v5) = v68;
    goto LABEL_68;
  }

  if ((v12 & 0x2000000000000000LL) == 0)
  {
    if ((v10 & 0x1000000000000000LL) != 0) {
      uint64_t v16 = (unsigned __int8 *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v16 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v10, v12);
    }
    uint64_t v17 = (uint64_t)sub_100072504(v16, v14, 10LL);
    LOBYTE(v5) = v18 & 1;
LABEL_68:
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      *((void *)&v70 + 1) = &type metadata for Int;
      *(void *)&__int128 v69 = v17;
LABEL_79:
      sub_100030188((uint64_t)&v69, (uint64_t)&v72);
      sub_10000D3A0(&v75);
      goto LABEL_80;
    }

LABEL_78:
    __int128 v69 = 0u;
    __int128 v70 = 0u;
    goto LABEL_79;
  }

  *(void *)&__int128 v69 = v10;
  *((void *)&v69 + 1) = v12 & 0xFFFFFFFFFFFFFFLL;
  if (v10 == 43)
  {
    if (!v13) {
      goto LABEL_88;
    }
    if (v13 == 1) {
      goto LABEL_54;
    }
    sub_100072C50();
    if (!v47 & v46) {
      goto LABEL_54;
    }
    uint64_t v17 = v49;
    if (v48 != 2)
    {
      sub_100072C50();
      if (!v47 & v46) {
        goto LABEL_54;
      }
      uint64_t v17 = 10LL * v17 + v51;
      if (v50 != 3)
      {
        while (1)
        {
          sub_100072CB8();
          if (!v47 & v46) {
            goto LABEL_54;
          }
          sub_100072C60();
          if (!v47) {
            goto LABEL_54;
          }
          uint64_t v17 = v53 + v52;
          if (__OFADD__(v53, v52)) {
            goto LABEL_54;
          }
          sub_100072C98();
          if (v47) {
            goto LABEL_68;
          }
        }
      }
    }

  __break(1u);
}

  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

LABEL_67:
    LOBYTE(v5) = 0;
    goto LABEL_68;
  }

  if (v10 != 45)
  {
    uint64_t v17 = (v10 - 48);
    if (v13 != 1)
    {
      sub_100072C50();
      if (!v47 & v46) {
        goto LABEL_54;
      }
      uint64_t v17 = 10LL * v17 + v55;
      if (v54 != 2)
      {
        while (1)
        {
          sub_100072CB8();
          if (!v47 & v46) {
            goto LABEL_54;
          }
          sub_100072C60();
          if (!v47) {
            goto LABEL_54;
          }
          uint64_t v17 = v57 + v56;
          if (__OFADD__(v57, v56)) {
            goto LABEL_54;
          }
          sub_100072C98();
          if (v47) {
            goto LABEL_68;
          }
        }
      }
    }

    goto LABEL_67;
  }

  if (v13)
  {
    if (v13 != 1)
    {
      sub_100072C50();
      if (!(!v47 & v46))
      {
        if (v44 == 2)
        {
          LOBYTE(v5) = 0;
          uint64_t v17 = -(uint64_t)v45;
          goto LABEL_68;
        }

        if ((v43 - 48) <= 9u)
        {
          uint64_t v17 = -10LL * v45 - (v43 - 48);
          if (v44 == 3) {
            goto LABEL_67;
          }
          while (1)
          {
            sub_100072CB8();
            if (!v47 & v46) {
              break;
            }
            sub_100072C60();
            if (!v47) {
              break;
            }
            uint64_t v17 = v59 - v58;
            if (__OFSUB__(v59, v58)) {
              break;
            }
            sub_100072C98();
            if (v47) {
              goto LABEL_68;
            }
          }
        }
      }
    }

LABEL_54:
    uint64_t v17 = 0LL;
    LOBYTE(v5) = 1;
    goto LABEL_68;
  }

  __break(1u);
LABEL_88:
  __break(1u);
}

            __break(1u);
            return;
          }
        }
      }
    }

id sub_100072358(void *a1, uint64_t a2)
{
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)) initWithConfiguration:a1 bag:a2];

  swift_unknownObjectRelease(a2);
  return v5;
}

uint64_t type metadata accessor for FollowUpNotificationAction()
{
  return objc_opt_self(&OBJC_CLASS____TtC14amsengagementd26FollowUpNotificationAction);
}

unsigned __int8 *sub_1000723D8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_100072504(a1, a2, a3);
}

unint64_t sub_1000723EC()
{
  unint64_t result = qword_1001CADA0;
  if (!qword_1001CADA0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___AMSPushHandler);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1001CADA0);
  }

  return result;
}

unsigned __int8 *sub_100072428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  __n128 v4 = swift_bridgeObjectRetain(a2);
  uint64_t v5 = String.init<A>(_:)( &v15,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String,  v4);
  uint64_t v7 = v5;
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000LL) == 0)
  {
    if ((v6 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }

  uint64_t v7 = sub_100072780(v5, v6);
  unint64_t v12 = v11;
  sub_100009070();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000LL) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v7, v8);
  }

unsigned __int8 *sub_100072504(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }

        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }

        if (result)
        {
          uint64_t v9 = 0LL;
          uint64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0LL;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }

              else
              {
                char v21 = -55;
              }
            }

            else
            {
              char v21 = -48;
            }

            uint64_t v22 = v9 * a3;
            uint64_t v9 = v22 + (v20 + v21);
            ++v19;
            --v15;
          }

          while (v15);
          return (unsigned __int8 *)v9;
        }

        return 0LL;
      }

      return 0LL;
    }
  }

  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }

        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }

        if (result)
        {
          uint64_t v26 = 0LL;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0LL;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }

              else
              {
                char v28 = -55;
              }
            }

            else
            {
              char v28 = -48;
            }

            uint64_t v29 = v26 * a3;
            uint64_t v26 = v29 + (v27 + v28);
            ++result;
            --v3;
          }

          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }

        return 0LL;
      }

      return 0LL;
    }

    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }

        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }

        if (result)
        {
          uint64_t v9 = 0LL;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0LL;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }

              else
              {
                char v12 = -55;
              }
            }

            else
            {
              char v12 = -48;
            }

            uint64_t v14 = v9 * a3;
            uint64_t v9 = v14 - (v11 + v12);
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }

        return 0LL;
      }

      return 0LL;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}